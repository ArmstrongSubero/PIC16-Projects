

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sun Dec 15 00:15:18 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F1719
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     7                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    19                           	psect	cinit,global,class=CODE,merge=1,delta=2
    20                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    22                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    23                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    24                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    25                           	psect	inittext,global,class=CODE,delta=2
    26                           	psect	clrtext,global,class=CODE,delta=2
    27                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    28                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    29                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    30                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    31                           	psect	text1,local,class=CODE,merge=1,delta=2
    32                           	psect	text2,local,class=CODE,merge=1,delta=2
    33                           	psect	text3,local,class=CODE,merge=1,delta=2
    34                           	psect	text4,local,class=CODE,merge=1,delta=2
    35                           	psect	text5,local,class=CODE,merge=1,delta=2
    36                           	psect	text6,local,class=CODE,merge=1,delta=2
    37                           	psect	text7,local,class=CODE,merge=1,delta=2
    38                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text16,local,class=CODE,merge=1,delta=2
    47                           	psect	text17,local,class=CODE,merge=1,delta=2
    48                           	psect	text18,local,class=CODE,merge=1,delta=2
    49                           	psect	text19,local,class=CODE,merge=1,delta=2
    50                           	psect	text20,local,class=CODE,merge=1,delta=2,group=3
    51                           	psect	text21,local,class=CODE,merge=1,delta=2
    52                           	psect	text22,local,class=CODE,merge=1,delta=2
    53                           	psect	text23,local,class=CODE,merge=1,delta=2
    54                           	psect	text24,local,class=CODE,merge=1,delta=2
    55                           	psect	text25,local,class=CODE,merge=1,delta=2
    56                           	psect	text26,local,class=CODE,merge=1,delta=2
    57                           	psect	text27,local,class=CODE,merge=1,delta=2
    58                           	psect	text28,local,class=CODE,merge=1,delta=2
    59                           	psect	text29,local,class=CODE,merge=1,delta=2
    60                           	psect	text30,local,class=CODE,merge=1,delta=2,group=3
    61                           	psect	text31,local,class=CODE,merge=1,delta=2,group=1
    62                           	psect	text32,local,class=CODE,merge=1,delta=2,group=1
    63                           	psect	text33,local,class=CODE,merge=1,delta=2,group=1
    64                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    65                           	psect	text35,local,class=CODE,merge=1,delta=2,group=1
    66                           	psect	text36,local,class=CODE,merge=1,delta=2,group=1
    67                           	psect	text37,local,class=CODE,merge=1,delta=2,group=3
    68                           	psect	text38,local,class=CODE,merge=1,delta=2,group=3
    69                           	psect	text39,local,class=CODE,merge=1,delta=2,group=3
    70                           	psect	text40,local,class=CODE,merge=1,delta=2,group=3
    71                           	psect	text41,local,class=CODE,merge=1,delta=2,group=2
    72                           	psect	text42,local,class=CODE,merge=1,delta=2
    73                           	psect	text43,local,class=CODE,merge=1,delta=2
    74                           	psect	text44,local,class=CODE,merge=1,delta=2
    75                           	psect	text45,local,class=CODE,merge=1,delta=2,group=3
    76                           	psect	text46,local,class=CODE,merge=1,delta=2,group=2
    77                           	psect	text47,local,class=CODE,merge=1,delta=2
    78                           	psect	text48,local,class=CODE,merge=1,delta=2
    79                           	psect	text49,local,class=CODE,merge=1,delta=2
    80                           	psect	text50,local,class=CODE,merge=1,delta=2
    81                           	psect	text51,local,class=CODE,merge=1,delta=2
    82                           	psect	text52,local,class=CODE,merge=1,delta=2
    83                           	psect	text53,local,class=CODE,merge=1,delta=2
    84                           	psect	text54,local,class=CODE,merge=1,delta=2
    85                           	psect	text55,local,class=CODE,merge=1,delta=2
    86                           	psect	text56,local,class=CODE,merge=1,delta=2
    87                           	psect	text57,local,class=CODE,merge=1,delta=2
    88                           	psect	text58,local,class=CODE,merge=1,delta=2
    89                           	psect	text59,local,class=CODE,merge=1,delta=2
    90                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    91                           	dabs	1,0x7E,2
    92     0000                     
    93                           ; Generated 07/09/2023 GMT
    94                           ; 
    95                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    96                           ; All rights reserved.
    97                           ; 
    98                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    99                           ; 
   100                           ; Redistribution and use in source and binary forms, with or without modification, are
   101                           ; permitted provided that the following conditions are met:
   102                           ; 
   103                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   104                           ;        conditions and the following disclaimer.
   105                           ; 
   106                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   107                           ;        of conditions and the following disclaimer in the documentation and/or other
   108                           ;        materials provided with the distribution. Publication is not required when
   109                           ;        this file is used in an embedded application.
   110                           ; 
   111                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   112                           ;        software without specific prior written permission.
   113                           ; 
   114                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   115                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   116                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   117                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   118                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   119                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   120                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   121                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   122                           ; 
   123                           ; 
   124                           ; Code-generator required, PIC16F1719 Definitions
   125                           ; 
   126                           ; SFR Addresses
   127     0000                     	;# 
   128     0001                     	;# 
   129     0002                     	;# 
   130     0003                     	;# 
   131     0004                     	;# 
   132     0005                     	;# 
   133     0006                     	;# 
   134     0007                     	;# 
   135     0008                     	;# 
   136     0009                     	;# 
   137     000A                     	;# 
   138     000B                     	;# 
   139     000C                     	;# 
   140     000D                     	;# 
   141     000E                     	;# 
   142     000F                     	;# 
   143     0010                     	;# 
   144     0011                     	;# 
   145     0012                     	;# 
   146     0013                     	;# 
   147     0015                     	;# 
   148     0016                     	;# 
   149     0016                     	;# 
   150     0017                     	;# 
   151     0018                     	;# 
   152     0019                     	;# 
   153     001A                     	;# 
   154     001B                     	;# 
   155     001C                     	;# 
   156     008C                     	;# 
   157     008D                     	;# 
   158     008E                     	;# 
   159     008F                     	;# 
   160     0090                     	;# 
   161     0091                     	;# 
   162     0092                     	;# 
   163     0093                     	;# 
   164     0095                     	;# 
   165     0096                     	;# 
   166     0097                     	;# 
   167     0098                     	;# 
   168     0099                     	;# 
   169     009A                     	;# 
   170     009B                     	;# 
   171     009B                     	;# 
   172     009C                     	;# 
   173     009D                     	;# 
   174     009E                     	;# 
   175     009F                     	;# 
   176     010C                     	;# 
   177     010D                     	;# 
   178     010E                     	;# 
   179     010F                     	;# 
   180     0110                     	;# 
   181     0111                     	;# 
   182     0112                     	;# 
   183     0113                     	;# 
   184     0114                     	;# 
   185     0115                     	;# 
   186     0116                     	;# 
   187     0117                     	;# 
   188     0118                     	;# 
   189     0119                     	;# 
   190     011A                     	;# 
   191     011B                     	;# 
   192     011B                     	;# 
   193     011C                     	;# 
   194     018C                     	;# 
   195     018D                     	;# 
   196     018E                     	;# 
   197     018F                     	;# 
   198     0190                     	;# 
   199     0191                     	;# 
   200     0191                     	;# 
   201     0192                     	;# 
   202     0193                     	;# 
   203     0193                     	;# 
   204     0194                     	;# 
   205     0195                     	;# 
   206     0196                     	;# 
   207     0197                     	;# 
   208     0199                     	;# 
   209     0199                     	;# 
   210     0199                     	;# 
   211     019A                     	;# 
   212     019A                     	;# 
   213     019A                     	;# 
   214     019B                     	;# 
   215     019B                     	;# 
   216     019B                     	;# 
   217     019B                     	;# 
   218     019B                     	;# 
   219     019C                     	;# 
   220     019C                     	;# 
   221     019C                     	;# 
   222     019D                     	;# 
   223     019D                     	;# 
   224     019D                     	;# 
   225     019E                     	;# 
   226     019E                     	;# 
   227     019E                     	;# 
   228     019F                     	;# 
   229     019F                     	;# 
   230     019F                     	;# 
   231     019F                     	;# 
   232     019F                     	;# 
   233     020C                     	;# 
   234     020D                     	;# 
   235     020E                     	;# 
   236     020F                     	;# 
   237     0210                     	;# 
   238     0211                     	;# 
   239     0211                     	;# 
   240     0212                     	;# 
   241     0212                     	;# 
   242     0213                     	;# 
   243     0213                     	;# 
   244     0214                     	;# 
   245     0214                     	;# 
   246     0215                     	;# 
   247     0215                     	;# 
   248     0215                     	;# 
   249     0215                     	;# 
   250     0216                     	;# 
   251     0216                     	;# 
   252     0217                     	;# 
   253     0217                     	;# 
   254     028C                     	;# 
   255     028D                     	;# 
   256     028E                     	;# 
   257     028F                     	;# 
   258     0290                     	;# 
   259     0291                     	;# 
   260     0291                     	;# 
   261     0292                     	;# 
   262     0293                     	;# 
   263     0293                     	;# 
   264     0298                     	;# 
   265     0298                     	;# 
   266     0299                     	;# 
   267     029A                     	;# 
   268     029A                     	;# 
   269     029E                     	;# 
   270     030C                     	;# 
   271     030D                     	;# 
   272     030E                     	;# 
   273     030F                     	;# 
   274     0310                     	;# 
   275     038C                     	;# 
   276     038D                     	;# 
   277     038E                     	;# 
   278     038F                     	;# 
   279     0390                     	;# 
   280     0391                     	;# 
   281     0392                     	;# 
   282     0393                     	;# 
   283     0394                     	;# 
   284     0395                     	;# 
   285     0396                     	;# 
   286     0397                     	;# 
   287     0398                     	;# 
   288     0399                     	;# 
   289     039D                     	;# 
   290     039E                     	;# 
   291     039F                     	;# 
   292     0415                     	;# 
   293     0416                     	;# 
   294     0417                     	;# 
   295     041C                     	;# 
   296     041D                     	;# 
   297     041E                     	;# 
   298     0498                     	;# 
   299     0498                     	;# 
   300     0499                     	;# 
   301     049A                     	;# 
   302     049B                     	;# 
   303     049B                     	;# 
   304     049C                     	;# 
   305     049D                     	;# 
   306     049E                     	;# 
   307     049F                     	;# 
   308     0511                     	;# 
   309     0515                     	;# 
   310     0617                     	;# 
   311     0618                     	;# 
   312     0619                     	;# 
   313     0619                     	;# 
   314     061A                     	;# 
   315     061B                     	;# 
   316     061C                     	;# 
   317     061C                     	;# 
   318     0691                     	;# 
   319     0692                     	;# 
   320     0693                     	;# 
   321     0694                     	;# 
   322     0695                     	;# 
   323     0696                     	;# 
   324     0697                     	;# 
   325     0698                     	;# 
   326     0699                     	;# 
   327     069A                     	;# 
   328     069B                     	;# 
   329     069C                     	;# 
   330     069D                     	;# 
   331     069E                     	;# 
   332     069F                     	;# 
   333     0E0F                     	;# 
   334     0E10                     	;# 
   335     0E11                     	;# 
   336     0E12                     	;# 
   337     0E13                     	;# 
   338     0E14                     	;# 
   339     0E15                     	;# 
   340     0E17                     	;# 
   341     0E20                     	;# 
   342     0E21                     	;# 
   343     0E22                     	;# 
   344     0E24                     	;# 
   345     0E25                     	;# 
   346     0E28                     	;# 
   347     0E29                     	;# 
   348     0E2A                     	;# 
   349     0E2B                     	;# 
   350     0E90                     	;# 
   351     0E91                     	;# 
   352     0E92                     	;# 
   353     0E93                     	;# 
   354     0E94                     	;# 
   355     0E95                     	;# 
   356     0E96                     	;# 
   357     0E97                     	;# 
   358     0E98                     	;# 
   359     0E99                     	;# 
   360     0E9A                     	;# 
   361     0E9B                     	;# 
   362     0E9C                     	;# 
   363     0E9D                     	;# 
   364     0E9E                     	;# 
   365     0E9F                     	;# 
   366     0EA0                     	;# 
   367     0EA1                     	;# 
   368     0EA2                     	;# 
   369     0EA3                     	;# 
   370     0EA4                     	;# 
   371     0EA5                     	;# 
   372     0EA6                     	;# 
   373     0EA7                     	;# 
   374     0EA8                     	;# 
   375     0EA9                     	;# 
   376     0EAA                     	;# 
   377     0EAB                     	;# 
   378     0EAC                     	;# 
   379     0EAD                     	;# 
   380     0EAE                     	;# 
   381     0EAF                     	;# 
   382     0EB0                     	;# 
   383     0EB1                     	;# 
   384     0EB2                     	;# 
   385     0F0F                     	;# 
   386     0F10                     	;# 
   387     0F11                     	;# 
   388     0F12                     	;# 
   389     0F13                     	;# 
   390     0F14                     	;# 
   391     0F15                     	;# 
   392     0F16                     	;# 
   393     0F17                     	;# 
   394     0F18                     	;# 
   395     0F19                     	;# 
   396     0F1A                     	;# 
   397     0F1B                     	;# 
   398     0F1C                     	;# 
   399     0F1D                     	;# 
   400     0F1E                     	;# 
   401     0F1F                     	;# 
   402     0F20                     	;# 
   403     0F21                     	;# 
   404     0F22                     	;# 
   405     0F23                     	;# 
   406     0F24                     	;# 
   407     0F25                     	;# 
   408     0F26                     	;# 
   409     0F27                     	;# 
   410     0F28                     	;# 
   411     0F29                     	;# 
   412     0F2A                     	;# 
   413     0F2B                     	;# 
   414     0F2C                     	;# 
   415     0F2D                     	;# 
   416     0F2E                     	;# 
   417     0F2F                     	;# 
   418     0F30                     	;# 
   419     0F31                     	;# 
   420     0F32                     	;# 
   421     0F33                     	;# 
   422     0F34                     	;# 
   423     0F35                     	;# 
   424     0F36                     	;# 
   425     0F37                     	;# 
   426     0FE4                     	;# 
   427     0FE5                     	;# 
   428     0FE6                     	;# 
   429     0FE7                     	;# 
   430     0FE8                     	;# 
   431     0FE9                     	;# 
   432     0FEA                     	;# 
   433     0FEB                     	;# 
   434     0FED                     	;# 
   435     0FEE                     	;# 
   436     0FEF                     	;# 
   437     0000                     	;# 
   438     0001                     	;# 
   439     0002                     	;# 
   440     0003                     	;# 
   441     0004                     	;# 
   442     0005                     	;# 
   443     0006                     	;# 
   444     0007                     	;# 
   445     0008                     	;# 
   446     0009                     	;# 
   447     000A                     	;# 
   448     000B                     	;# 
   449     000C                     	;# 
   450     000D                     	;# 
   451     000E                     	;# 
   452     000F                     	;# 
   453     0010                     	;# 
   454     0011                     	;# 
   455     0012                     	;# 
   456     0013                     	;# 
   457     0015                     	;# 
   458     0016                     	;# 
   459     0016                     	;# 
   460     0017                     	;# 
   461     0018                     	;# 
   462     0019                     	;# 
   463     001A                     	;# 
   464     001B                     	;# 
   465     001C                     	;# 
   466     008C                     	;# 
   467     008D                     	;# 
   468     008E                     	;# 
   469     008F                     	;# 
   470     0090                     	;# 
   471     0091                     	;# 
   472     0092                     	;# 
   473     0093                     	;# 
   474     0095                     	;# 
   475     0096                     	;# 
   476     0097                     	;# 
   477     0098                     	;# 
   478     0099                     	;# 
   479     009A                     	;# 
   480     009B                     	;# 
   481     009B                     	;# 
   482     009C                     	;# 
   483     009D                     	;# 
   484     009E                     	;# 
   485     009F                     	;# 
   486     010C                     	;# 
   487     010D                     	;# 
   488     010E                     	;# 
   489     010F                     	;# 
   490     0110                     	;# 
   491     0111                     	;# 
   492     0112                     	;# 
   493     0113                     	;# 
   494     0114                     	;# 
   495     0115                     	;# 
   496     0116                     	;# 
   497     0117                     	;# 
   498     0118                     	;# 
   499     0119                     	;# 
   500     011A                     	;# 
   501     011B                     	;# 
   502     011B                     	;# 
   503     011C                     	;# 
   504     018C                     	;# 
   505     018D                     	;# 
   506     018E                     	;# 
   507     018F                     	;# 
   508     0190                     	;# 
   509     0191                     	;# 
   510     0191                     	;# 
   511     0192                     	;# 
   512     0193                     	;# 
   513     0193                     	;# 
   514     0194                     	;# 
   515     0195                     	;# 
   516     0196                     	;# 
   517     0197                     	;# 
   518     0199                     	;# 
   519     0199                     	;# 
   520     0199                     	;# 
   521     019A                     	;# 
   522     019A                     	;# 
   523     019A                     	;# 
   524     019B                     	;# 
   525     019B                     	;# 
   526     019B                     	;# 
   527     019B                     	;# 
   528     019B                     	;# 
   529     019C                     	;# 
   530     019C                     	;# 
   531     019C                     	;# 
   532     019D                     	;# 
   533     019D                     	;# 
   534     019D                     	;# 
   535     019E                     	;# 
   536     019E                     	;# 
   537     019E                     	;# 
   538     019F                     	;# 
   539     019F                     	;# 
   540     019F                     	;# 
   541     019F                     	;# 
   542     019F                     	;# 
   543     020C                     	;# 
   544     020D                     	;# 
   545     020E                     	;# 
   546     020F                     	;# 
   547     0210                     	;# 
   548     0211                     	;# 
   549     0211                     	;# 
   550     0212                     	;# 
   551     0212                     	;# 
   552     0213                     	;# 
   553     0213                     	;# 
   554     0214                     	;# 
   555     0214                     	;# 
   556     0215                     	;# 
   557     0215                     	;# 
   558     0215                     	;# 
   559     0215                     	;# 
   560     0216                     	;# 
   561     0216                     	;# 
   562     0217                     	;# 
   563     0217                     	;# 
   564     028C                     	;# 
   565     028D                     	;# 
   566     028E                     	;# 
   567     028F                     	;# 
   568     0290                     	;# 
   569     0291                     	;# 
   570     0291                     	;# 
   571     0292                     	;# 
   572     0293                     	;# 
   573     0293                     	;# 
   574     0298                     	;# 
   575     0298                     	;# 
   576     0299                     	;# 
   577     029A                     	;# 
   578     029A                     	;# 
   579     029E                     	;# 
   580     030C                     	;# 
   581     030D                     	;# 
   582     030E                     	;# 
   583     030F                     	;# 
   584     0310                     	;# 
   585     038C                     	;# 
   586     038D                     	;# 
   587     038E                     	;# 
   588     038F                     	;# 
   589     0390                     	;# 
   590     0391                     	;# 
   591     0392                     	;# 
   592     0393                     	;# 
   593     0394                     	;# 
   594     0395                     	;# 
   595     0396                     	;# 
   596     0397                     	;# 
   597     0398                     	;# 
   598     0399                     	;# 
   599     039D                     	;# 
   600     039E                     	;# 
   601     039F                     	;# 
   602     0415                     	;# 
   603     0416                     	;# 
   604     0417                     	;# 
   605     041C                     	;# 
   606     041D                     	;# 
   607     041E                     	;# 
   608     0498                     	;# 
   609     0498                     	;# 
   610     0499                     	;# 
   611     049A                     	;# 
   612     049B                     	;# 
   613     049B                     	;# 
   614     049C                     	;# 
   615     049D                     	;# 
   616     049E                     	;# 
   617     049F                     	;# 
   618     0511                     	;# 
   619     0515                     	;# 
   620     0617                     	;# 
   621     0618                     	;# 
   622     0619                     	;# 
   623     0619                     	;# 
   624     061A                     	;# 
   625     061B                     	;# 
   626     061C                     	;# 
   627     061C                     	;# 
   628     0691                     	;# 
   629     0692                     	;# 
   630     0693                     	;# 
   631     0694                     	;# 
   632     0695                     	;# 
   633     0696                     	;# 
   634     0697                     	;# 
   635     0698                     	;# 
   636     0699                     	;# 
   637     069A                     	;# 
   638     069B                     	;# 
   639     069C                     	;# 
   640     069D                     	;# 
   641     069E                     	;# 
   642     069F                     	;# 
   643     0E0F                     	;# 
   644     0E10                     	;# 
   645     0E11                     	;# 
   646     0E12                     	;# 
   647     0E13                     	;# 
   648     0E14                     	;# 
   649     0E15                     	;# 
   650     0E17                     	;# 
   651     0E20                     	;# 
   652     0E21                     	;# 
   653     0E22                     	;# 
   654     0E24                     	;# 
   655     0E25                     	;# 
   656     0E28                     	;# 
   657     0E29                     	;# 
   658     0E2A                     	;# 
   659     0E2B                     	;# 
   660     0E90                     	;# 
   661     0E91                     	;# 
   662     0E92                     	;# 
   663     0E93                     	;# 
   664     0E94                     	;# 
   665     0E95                     	;# 
   666     0E96                     	;# 
   667     0E97                     	;# 
   668     0E98                     	;# 
   669     0E99                     	;# 
   670     0E9A                     	;# 
   671     0E9B                     	;# 
   672     0E9C                     	;# 
   673     0E9D                     	;# 
   674     0E9E                     	;# 
   675     0E9F                     	;# 
   676     0EA0                     	;# 
   677     0EA1                     	;# 
   678     0EA2                     	;# 
   679     0EA3                     	;# 
   680     0EA4                     	;# 
   681     0EA5                     	;# 
   682     0EA6                     	;# 
   683     0EA7                     	;# 
   684     0EA8                     	;# 
   685     0EA9                     	;# 
   686     0EAA                     	;# 
   687     0EAB                     	;# 
   688     0EAC                     	;# 
   689     0EAD                     	;# 
   690     0EAE                     	;# 
   691     0EAF                     	;# 
   692     0EB0                     	;# 
   693     0EB1                     	;# 
   694     0EB2                     	;# 
   695     0F0F                     	;# 
   696     0F10                     	;# 
   697     0F11                     	;# 
   698     0F12                     	;# 
   699     0F13                     	;# 
   700     0F14                     	;# 
   701     0F15                     	;# 
   702     0F16                     	;# 
   703     0F17                     	;# 
   704     0F18                     	;# 
   705     0F19                     	;# 
   706     0F1A                     	;# 
   707     0F1B                     	;# 
   708     0F1C                     	;# 
   709     0F1D                     	;# 
   710     0F1E                     	;# 
   711     0F1F                     	;# 
   712     0F20                     	;# 
   713     0F21                     	;# 
   714     0F22                     	;# 
   715     0F23                     	;# 
   716     0F24                     	;# 
   717     0F25                     	;# 
   718     0F26                     	;# 
   719     0F27                     	;# 
   720     0F28                     	;# 
   721     0F29                     	;# 
   722     0F2A                     	;# 
   723     0F2B                     	;# 
   724     0F2C                     	;# 
   725     0F2D                     	;# 
   726     0F2E                     	;# 
   727     0F2F                     	;# 
   728     0F30                     	;# 
   729     0F31                     	;# 
   730     0F32                     	;# 
   731     0F33                     	;# 
   732     0F34                     	;# 
   733     0F35                     	;# 
   734     0F36                     	;# 
   735     0F37                     	;# 
   736     0FE4                     	;# 
   737     0FE5                     	;# 
   738     0FE6                     	;# 
   739     0FE7                     	;# 
   740     0FE8                     	;# 
   741     0FE9                     	;# 
   742     0FEA                     	;# 
   743     0FEB                     	;# 
   744     0FED                     	;# 
   745     0FEE                     	;# 
   746     0FEF                     	;# 
   747     0000                     	;# 
   748     0001                     	;# 
   749     0002                     	;# 
   750     0003                     	;# 
   751     0004                     	;# 
   752     0005                     	;# 
   753     0006                     	;# 
   754     0007                     	;# 
   755     0008                     	;# 
   756     0009                     	;# 
   757     000A                     	;# 
   758     000B                     	;# 
   759     000C                     	;# 
   760     000D                     	;# 
   761     000E                     	;# 
   762     000F                     	;# 
   763     0010                     	;# 
   764     0011                     	;# 
   765     0012                     	;# 
   766     0013                     	;# 
   767     0015                     	;# 
   768     0016                     	;# 
   769     0016                     	;# 
   770     0017                     	;# 
   771     0018                     	;# 
   772     0019                     	;# 
   773     001A                     	;# 
   774     001B                     	;# 
   775     001C                     	;# 
   776     008C                     	;# 
   777     008D                     	;# 
   778     008E                     	;# 
   779     008F                     	;# 
   780     0090                     	;# 
   781     0091                     	;# 
   782     0092                     	;# 
   783     0093                     	;# 
   784     0095                     	;# 
   785     0096                     	;# 
   786     0097                     	;# 
   787     0098                     	;# 
   788     0099                     	;# 
   789     009A                     	;# 
   790     009B                     	;# 
   791     009B                     	;# 
   792     009C                     	;# 
   793     009D                     	;# 
   794     009E                     	;# 
   795     009F                     	;# 
   796     010C                     	;# 
   797     010D                     	;# 
   798     010E                     	;# 
   799     010F                     	;# 
   800     0110                     	;# 
   801     0111                     	;# 
   802     0112                     	;# 
   803     0113                     	;# 
   804     0114                     	;# 
   805     0115                     	;# 
   806     0116                     	;# 
   807     0117                     	;# 
   808     0118                     	;# 
   809     0119                     	;# 
   810     011A                     	;# 
   811     011B                     	;# 
   812     011B                     	;# 
   813     011C                     	;# 
   814     018C                     	;# 
   815     018D                     	;# 
   816     018E                     	;# 
   817     018F                     	;# 
   818     0190                     	;# 
   819     0191                     	;# 
   820     0191                     	;# 
   821     0192                     	;# 
   822     0193                     	;# 
   823     0193                     	;# 
   824     0194                     	;# 
   825     0195                     	;# 
   826     0196                     	;# 
   827     0197                     	;# 
   828     0199                     	;# 
   829     0199                     	;# 
   830     0199                     	;# 
   831     019A                     	;# 
   832     019A                     	;# 
   833     019A                     	;# 
   834     019B                     	;# 
   835     019B                     	;# 
   836     019B                     	;# 
   837     019B                     	;# 
   838     019B                     	;# 
   839     019C                     	;# 
   840     019C                     	;# 
   841     019C                     	;# 
   842     019D                     	;# 
   843     019D                     	;# 
   844     019D                     	;# 
   845     019E                     	;# 
   846     019E                     	;# 
   847     019E                     	;# 
   848     019F                     	;# 
   849     019F                     	;# 
   850     019F                     	;# 
   851     019F                     	;# 
   852     019F                     	;# 
   853     020C                     	;# 
   854     020D                     	;# 
   855     020E                     	;# 
   856     020F                     	;# 
   857     0210                     	;# 
   858     0211                     	;# 
   859     0211                     	;# 
   860     0212                     	;# 
   861     0212                     	;# 
   862     0213                     	;# 
   863     0213                     	;# 
   864     0214                     	;# 
   865     0214                     	;# 
   866     0215                     	;# 
   867     0215                     	;# 
   868     0215                     	;# 
   869     0215                     	;# 
   870     0216                     	;# 
   871     0216                     	;# 
   872     0217                     	;# 
   873     0217                     	;# 
   874     028C                     	;# 
   875     028D                     	;# 
   876     028E                     	;# 
   877     028F                     	;# 
   878     0290                     	;# 
   879     0291                     	;# 
   880     0291                     	;# 
   881     0292                     	;# 
   882     0293                     	;# 
   883     0293                     	;# 
   884     0298                     	;# 
   885     0298                     	;# 
   886     0299                     	;# 
   887     029A                     	;# 
   888     029A                     	;# 
   889     029E                     	;# 
   890     030C                     	;# 
   891     030D                     	;# 
   892     030E                     	;# 
   893     030F                     	;# 
   894     0310                     	;# 
   895     038C                     	;# 
   896     038D                     	;# 
   897     038E                     	;# 
   898     038F                     	;# 
   899     0390                     	;# 
   900     0391                     	;# 
   901     0392                     	;# 
   902     0393                     	;# 
   903     0394                     	;# 
   904     0395                     	;# 
   905     0396                     	;# 
   906     0397                     	;# 
   907     0398                     	;# 
   908     0399                     	;# 
   909     039D                     	;# 
   910     039E                     	;# 
   911     039F                     	;# 
   912     0415                     	;# 
   913     0416                     	;# 
   914     0417                     	;# 
   915     041C                     	;# 
   916     041D                     	;# 
   917     041E                     	;# 
   918     0498                     	;# 
   919     0498                     	;# 
   920     0499                     	;# 
   921     049A                     	;# 
   922     049B                     	;# 
   923     049B                     	;# 
   924     049C                     	;# 
   925     049D                     	;# 
   926     049E                     	;# 
   927     049F                     	;# 
   928     0511                     	;# 
   929     0515                     	;# 
   930     0617                     	;# 
   931     0618                     	;# 
   932     0619                     	;# 
   933     0619                     	;# 
   934     061A                     	;# 
   935     061B                     	;# 
   936     061C                     	;# 
   937     061C                     	;# 
   938     0691                     	;# 
   939     0692                     	;# 
   940     0693                     	;# 
   941     0694                     	;# 
   942     0695                     	;# 
   943     0696                     	;# 
   944     0697                     	;# 
   945     0698                     	;# 
   946     0699                     	;# 
   947     069A                     	;# 
   948     069B                     	;# 
   949     069C                     	;# 
   950     069D                     	;# 
   951     069E                     	;# 
   952     069F                     	;# 
   953     0E0F                     	;# 
   954     0E10                     	;# 
   955     0E11                     	;# 
   956     0E12                     	;# 
   957     0E13                     	;# 
   958     0E14                     	;# 
   959     0E15                     	;# 
   960     0E17                     	;# 
   961     0E20                     	;# 
   962     0E21                     	;# 
   963     0E22                     	;# 
   964     0E24                     	;# 
   965     0E25                     	;# 
   966     0E28                     	;# 
   967     0E29                     	;# 
   968     0E2A                     	;# 
   969     0E2B                     	;# 
   970     0E90                     	;# 
   971     0E91                     	;# 
   972     0E92                     	;# 
   973     0E93                     	;# 
   974     0E94                     	;# 
   975     0E95                     	;# 
   976     0E96                     	;# 
   977     0E97                     	;# 
   978     0E98                     	;# 
   979     0E99                     	;# 
   980     0E9A                     	;# 
   981     0E9B                     	;# 
   982     0E9C                     	;# 
   983     0E9D                     	;# 
   984     0E9E                     	;# 
   985     0E9F                     	;# 
   986     0EA0                     	;# 
   987     0EA1                     	;# 
   988     0EA2                     	;# 
   989     0EA3                     	;# 
   990     0EA4                     	;# 
   991     0EA5                     	;# 
   992     0EA6                     	;# 
   993     0EA7                     	;# 
   994     0EA8                     	;# 
   995     0EA9                     	;# 
   996     0EAA                     	;# 
   997     0EAB                     	;# 
   998     0EAC                     	;# 
   999     0EAD                     	;# 
  1000     0EAE                     	;# 
  1001     0EAF                     	;# 
  1002     0EB0                     	;# 
  1003     0EB1                     	;# 
  1004     0EB2                     	;# 
  1005     0F0F                     	;# 
  1006     0F10                     	;# 
  1007     0F11                     	;# 
  1008     0F12                     	;# 
  1009     0F13                     	;# 
  1010     0F14                     	;# 
  1011     0F15                     	;# 
  1012     0F16                     	;# 
  1013     0F17                     	;# 
  1014     0F18                     	;# 
  1015     0F19                     	;# 
  1016     0F1A                     	;# 
  1017     0F1B                     	;# 
  1018     0F1C                     	;# 
  1019     0F1D                     	;# 
  1020     0F1E                     	;# 
  1021     0F1F                     	;# 
  1022     0F20                     	;# 
  1023     0F21                     	;# 
  1024     0F22                     	;# 
  1025     0F23                     	;# 
  1026     0F24                     	;# 
  1027     0F25                     	;# 
  1028     0F26                     	;# 
  1029     0F27                     	;# 
  1030     0F28                     	;# 
  1031     0F29                     	;# 
  1032     0F2A                     	;# 
  1033     0F2B                     	;# 
  1034     0F2C                     	;# 
  1035     0F2D                     	;# 
  1036     0F2E                     	;# 
  1037     0F2F                     	;# 
  1038     0F30                     	;# 
  1039     0F31                     	;# 
  1040     0F32                     	;# 
  1041     0F33                     	;# 
  1042     0F34                     	;# 
  1043     0F35                     	;# 
  1044     0F36                     	;# 
  1045     0F37                     	;# 
  1046     0FE4                     	;# 
  1047     0FE5                     	;# 
  1048     0FE6                     	;# 
  1049     0FE7                     	;# 
  1050     0FE8                     	;# 
  1051     0FE9                     	;# 
  1052     0FEA                     	;# 
  1053     0FEB                     	;# 
  1054     0FED                     	;# 
  1055     0FEE                     	;# 
  1056     0FEF                     	;# 
  1057                           
  1058                           	psect	idataBANK1
  1059     13A5                     __pidataBANK1:
  1060                           
  1061                           ;initializer for Lcd_Progress_Bar_Init@F6644
  1062     13A5  3400               	retlw	0
  1063     13A6  3418               	retlw	24
  1064     13A7  3418               	retlw	24
  1065     13A8  341C               	retlw	28
  1066     13A9  341E               	retlw	30
  1067     13AA  341F               	retlw	31
  1068     13AB  341F               	retlw	31
  1069     13AC  341F               	retlw	31
  1070                           
  1071                           ;initializer for Lcd_Progress_Bar_Init@F6642
  1072     13AD  3400               	retlw	0
  1073     13AE  3410               	retlw	16
  1074     13AF  3418               	retlw	24
  1075     13B0  341C               	retlw	28
  1076     13B1  341E               	retlw	30
  1077     13B2  341F               	retlw	31
  1078     13B3  341F               	retlw	31
  1079     13B4  341F               	retlw	31
  1080                           
  1081                           ;initializer for main@F6417
  1082     13B5  3400               	retlw	0
  1083     13B6  340A               	retlw	10
  1084     13B7  340A               	retlw	10
  1085     13B8  3400               	retlw	0
  1086     13B9  3411               	retlw	17
  1087     13BA  340E               	retlw	14
  1088     13BB  3400               	retlw	0
  1089     13BC  3400               	retlw	0
  1090                           
  1091                           	psect	idataBANK2
  1092     170C                     __pidataBANK2:
  1093                           
  1094                           ;initializer for Lcd_Signal_Init@F6678
  1095     170C  3400               	retlw	0
  1096     170D  3400               	retlw	0
  1097     170E  3400               	retlw	0
  1098     170F  3404               	retlw	4
  1099     1710  340E               	retlw	14
  1100     1711  341F               	retlw	31
  1101     1712  3400               	retlw	0
  1102     1713  3400               	retlw	0
  1103                           
  1104                           ;initializer for Lcd_Battery_Init@F6671
  1105     1714  340E               	retlw	14
  1106     1715  341F               	retlw	31
  1107     1716  341F               	retlw	31
  1108     1717  341F               	retlw	31
  1109     1718  341F               	retlw	31
  1110     1719  341F               	retlw	31
  1111     171A  341F               	retlw	31
  1112     171B  340E               	retlw	14
  1113                           
  1114                           ;initializer for Lcd_Battery_Init@F6669
  1115     171C  340E               	retlw	14
  1116     171D  3411               	retlw	17
  1117     171E  341F               	retlw	31
  1118     171F  341F               	retlw	31
  1119     1720  341F               	retlw	31
  1120     1721  341F               	retlw	31
  1121     1722  341F               	retlw	31
  1122     1723  340E               	retlw	14
  1123                           
  1124                           ;initializer for Lcd_Battery_Init@F6667
  1125     1724  340E               	retlw	14
  1126     1725  3411               	retlw	17
  1127     1726  3411               	retlw	17
  1128     1727  341F               	retlw	31
  1129     1728  341F               	retlw	31
  1130     1729  341F               	retlw	31
  1131     172A  341F               	retlw	31
  1132     172B  340E               	retlw	14
  1133                           
  1134                           ;initializer for Lcd_Battery_Init@F6665
  1135     172C  340E               	retlw	14
  1136     172D  3411               	retlw	17
  1137     172E  3411               	retlw	17
  1138     172F  3411               	retlw	17
  1139     1730  341F               	retlw	31
  1140     1731  341F               	retlw	31
  1141     1732  341F               	retlw	31
  1142     1733  340E               	retlw	14
  1143                           
  1144                           ;initializer for Lcd_Battery_Init@F6663
  1145     1734  340E               	retlw	14
  1146     1735  3411               	retlw	17
  1147     1736  3411               	retlw	17
  1148     1737  3411               	retlw	17
  1149     1738  3411               	retlw	17
  1150     1739  341F               	retlw	31
  1151     173A  341F               	retlw	31
  1152     173B  340E               	retlw	14
  1153                           
  1154                           ;initializer for Lcd_Battery_Init@F6661
  1155     173C  340E               	retlw	14
  1156     173D  3411               	retlw	17
  1157     173E  3411               	retlw	17
  1158     173F  3411               	retlw	17
  1159     1740  3411               	retlw	17
  1160     1741  3411               	retlw	17
  1161     1742  341F               	retlw	31
  1162     1743  340E               	retlw	14
  1163                           
  1164                           ;initializer for Lcd_Battery_Init@F6659
  1165     1744  340E               	retlw	14
  1166     1745  3411               	retlw	17
  1167     1746  3411               	retlw	17
  1168     1747  3411               	retlw	17
  1169     1748  3411               	retlw	17
  1170     1749  3411               	retlw	17
  1171     174A  3411               	retlw	17
  1172     174B  340E               	retlw	14
  1173                           
  1174                           ;initializer for Lcd_Progress_Bar_Init@F6648
  1175     174C  341F               	retlw	31
  1176     174D  341F               	retlw	31
  1177     174E  341F               	retlw	31
  1178     174F  341F               	retlw	31
  1179     1750  341F               	retlw	31
  1180     1751  341F               	retlw	31
  1181     1752  341F               	retlw	31
  1182     1753  341F               	retlw	31
  1183                           
  1184                           ;initializer for Lcd_Progress_Bar_Init@F6646
  1185     1754  3400               	retlw	0
  1186     1755  341C               	retlw	28
  1187     1756  341C               	retlw	28
  1188     1757  341C               	retlw	28
  1189     1758  341E               	retlw	30
  1190     1759  341F               	retlw	31
  1191     175A  341F               	retlw	31
  1192     175B  341F               	retlw	31
  1193                           
  1194                           	psect	idataBANK3
  1195     1473                     __pidataBANK3:
  1196                           
  1197                           ;initializer for main@F6420
  1198     1473  3400               	retlw	0
  1199     1474  3400               	retlw	0
  1200     1475  3414               	retlw	20
  1201     1476  3400               	retlw	0
  1202     1477  3428               	retlw	40
  1203     1478  3400               	retlw	0
  1204     1479  343C               	retlw	60
  1205     147A  3400               	retlw	0
  1206     147B  3450               	retlw	80
  1207     147C  3400               	retlw	0
  1208     147D  3464               	retlw	100
  1209     147E  3400               	retlw	0
  1210                           
  1211                           ;initializer for Lcd_Signal_Init@F6682
  1212     147F  3404               	retlw	4
  1213     1480  340E               	retlw	14
  1214     1481  341F               	retlw	31
  1215     1482  340E               	retlw	14
  1216     1483  340E               	retlw	14
  1217     1484  341F               	retlw	31
  1218     1485  3400               	retlw	0
  1219     1486  3400               	retlw	0
  1220                           
  1221                           ;initializer for Lcd_Signal_Init@F6680
  1222     1487  3400               	retlw	0
  1223     1488  3404               	retlw	4
  1224     1489  340E               	retlw	14
  1225     148A  3404               	retlw	4
  1226     148B  340E               	retlw	14
  1227     148C  341F               	retlw	31
  1228     148D  3400               	retlw	0
  1229     148E  3400               	retlw	0
  1230     000F                     _PORTD	set	15
  1231     007A                     _RD2	set	122
  1232     007B                     _RD3	set	123
  1233     007F                     _RD7	set	127
  1234     007E                     _RD6	set	126
  1235     007D                     _RD5	set	125
  1236     007C                     _RD4	set	124
  1237     008F                     _TRISD	set	143
  1238     04CF                     _SPLLEN	set	1231
  1239     04CE                     _IRCF3	set	1230
  1240     04CD                     _IRCF2	set	1229
  1241     04CC                     _IRCF1	set	1228
  1242     04CB                     _IRCF0	set	1227
  1243     04C9                     _SCS1	set	1225
  1244     04C8                     _SCS0	set	1224
  1245     010F                     _LATDbits	set	271
  1246     018F                     _ANSELD	set	399
  1247                           
  1248                           	psect	stringtext1
  1249     1800                     __pstringtext1:
  1250     1800                     STR_4:
  1251     1800  3454               	retlw	84	;'T'
  1252     1801  3468               	retlw	104	;'h'
  1253     1802  3469               	retlw	105	;'i'
  1254     1803  3473               	retlw	115	;'s'
  1255     1804  3420               	retlw	32	;' '
  1256     1805  3469               	retlw	105	;'i'
  1257     1806  3473               	retlw	115	;'s'
  1258     1807  3420               	retlw	32	;' '
  1259     1808  3461               	retlw	97	;'a'
  1260     1809  3420               	retlw	32	;' '
  1261     180A  346C               	retlw	108	;'l'
  1262     180B  346F               	retlw	111	;'o'
  1263     180C  346E               	retlw	110	;'n'
  1264     180D  3467               	retlw	103	;'g'
  1265     180E  3420               	retlw	32	;' '
  1266     180F  3473               	retlw	115	;'s'
  1267     1810  3463               	retlw	99	;'c'
  1268     1811  3472               	retlw	114	;'r'
  1269     1812  346F               	retlw	111	;'o'
  1270     1813  346C               	retlw	108	;'l'
  1271     1814  346C               	retlw	108	;'l'
  1272     1815  3469               	retlw	105	;'i'
  1273     1816  346E               	retlw	110	;'n'
  1274     1817  3467               	retlw	103	;'g'
  1275     1818  3420               	retlw	32	;' '
  1276     1819  3474               	retlw	116	;'t'
  1277     181A  3465               	retlw	101	;'e'
  1278     181B  3478               	retlw	120	;'x'
  1279     181C  3474               	retlw	116	;'t'
  1280     181D  3420               	retlw	32	;' '
  1281     181E  346D               	retlw	109	;'m'
  1282     181F  3465               	retlw	101	;'e'
  1283     1820  3473               	retlw	115	;'s'
  1284     1821  3473               	retlw	115	;'s'
  1285     1822  3461               	retlw	97	;'a'
  1286     1823  3467               	retlw	103	;'g'
  1287     1824  3465               	retlw	101	;'e'
  1288     1825  342E               	retlw	46	;'.'
  1289     1826  3400               	retlw	0
  1290                           
  1291                           	psect	stringtext2
  1292     1827                     __pstringtext2:
  1293     1827                     STR_7:
  1294     1827  3430               	retlw	48	;'0'
  1295     1828  3431               	retlw	49	;'1'
  1296     1829  3432               	retlw	50	;'2'
  1297     182A  3433               	retlw	51	;'3'
  1298     182B  3434               	retlw	52	;'4'
  1299     182C  3435               	retlw	53	;'5'
  1300     182D  3436               	retlw	54	;'6'
  1301     182E  3437               	retlw	55	;'7'
  1302     182F  3438               	retlw	56	;'8'
  1303     1830  3439               	retlw	57	;'9'
  1304     1831  3441               	retlw	65	;'A'
  1305     1832  3442               	retlw	66	;'B'
  1306     1833  3443               	retlw	67	;'C'
  1307     1834  3444               	retlw	68	;'D'
  1308     1835  3445               	retlw	69	;'E'
  1309     1836  3446               	retlw	70	;'F'
  1310     1837  3400               	retlw	0
  1311                           
  1312                           	psect	stringtext3
  1313     1838                     __pstringtext3:
  1314     1838                     STR_1:
  1315     1838  3450               	retlw	80	;'P'
  1316     1839  3449               	retlw	73	;'I'
  1317     183A  3443               	retlw	67	;'C'
  1318     183B  3431               	retlw	49	;'1'
  1319     183C  3436               	retlw	54	;'6'
  1320     183D  3446               	retlw	70	;'F'
  1321     183E  3431               	retlw	49	;'1'
  1322     183F  3437               	retlw	55	;'7'
  1323     1840  3431               	retlw	49	;'1'
  1324     1841  3439               	retlw	57	;'9'
  1325     1842  3400               	retlw	0
  1326                           
  1327                           	psect	stringtext4
  1328     1843                     __pstringtext4:
  1329     1843                     STR_6:
  1330     1843  3450               	retlw	80	;'P'
  1331     1844  3472               	retlw	114	;'r'
  1332     1845  346F               	retlw	111	;'o'
  1333     1846  3467               	retlw	103	;'g'
  1334     1847  3472               	retlw	114	;'r'
  1335     1848  3465               	retlw	101	;'e'
  1336     1849  3473               	retlw	115	;'s'
  1337     184A  3473               	retlw	115	;'s'
  1338     184B  343A               	retlw	58	;':'
  1339     184C  3400               	retlw	0
  1340                           
  1341                           	psect	stringtext5
  1342     184D                     __pstringtext5:
  1343     184D                     STR_9:
  1344     184D  3442               	retlw	66	;'B'
  1345     184E  3461               	retlw	97	;'a'
  1346     184F  3474               	retlw	116	;'t'
  1347     1850  3474               	retlw	116	;'t'
  1348     1851  3465               	retlw	101	;'e'
  1349     1852  3472               	retlw	114	;'r'
  1350     1853  3479               	retlw	121	;'y'
  1351     1854  343A               	retlw	58	;':'
  1352     1855  3400               	retlw	0
  1353                           
  1354                           	psect	stringtext6
  1355     1856                     __pstringtext6:
  1356     1856                     STR_5:
  1357     1856  3457               	retlw	87	;'W'
  1358     1857  3465               	retlw	101	;'e'
  1359     1858  346C               	retlw	108	;'l'
  1360     1859  3463               	retlw	99	;'c'
  1361     185A  346F               	retlw	111	;'o'
  1362     185B  346D               	retlw	109	;'m'
  1363     185C  3465               	retlw	101	;'e'
  1364     185D  3421               	retlw	33	;'!'
  1365     185E  3400               	retlw	0
  1366                           
  1367                           	psect	stringtext7
  1368     185F                     __pstringtext7:
  1369     185F                     STR_11:
  1370     185F  3453               	retlw	83	;'S'
  1371     1860  3469               	retlw	105	;'i'
  1372     1861  3467               	retlw	103	;'g'
  1373     1862  346E               	retlw	110	;'n'
  1374     1863  3461               	retlw	97	;'a'
  1375     1864  346C               	retlw	108	;'l'
  1376     1865  343A               	retlw	58	;':'
  1377     1866  3400               	retlw	0
  1378                           
  1379                           	psect	stringtext8
  1380     1867                     __pstringtext8:
  1381     1867                     STR_10:
  1382     1867  3425               	retlw	37	;'%'
  1383     1868  3464               	retlw	100	;'d'
  1384     1869  3425               	retlw	37	;'%'
  1385     186A  3425               	retlw	37	;'%'
  1386     186B  3400               	retlw	0
  1387                           
  1388                           	psect	stringtext9
  1389     186C                     __pstringtext9:
  1390     186C                     STR_8:
  1391     186C  3425               	retlw	37	;'%'
  1392     186D  3430               	retlw	48	;'0'
  1393     186E  342A               	retlw	42	;'*'
  1394     186F  3464               	retlw	100	;'d'
  1395     1870  3400               	retlw	0
  1396                           
  1397                           	psect	stringtext10
  1398     1871                     __pstringtext10:
  1399     1871                     STR_2:
  1400     1871  3450               	retlw	80	;'P'
  1401     1872  3461               	retlw	97	;'a'
  1402     1873  3464               	retlw	100	;'d'
  1403     1874  343A               	retlw	58	;':'
  1404     1875  3400               	retlw	0
  1405                           
  1406                           	psect	stringtext11
  1407     1876                     __pstringtext11:
  1408     1876                     STR_3:
  1409     1876  3453               	retlw	83	;'S'
  1410     1877  343A               	retlw	58	;':'
  1411     1878  3400               	retlw	0
  1412                           
  1413                           	psect	stringtext12
  1414     0000                     __pstringtext12:
  1415                           
  1416                           	psect	cinit
  1417     07CC                     start_initialization:	
  1418                           ; #config settings
  1419                           
  1420     07CC                     __initialization:
  1421                           
  1422                           ; Initialize objects allocated to BANK1
  1423     07CC  30A5               	movlw	low __pidataBANK1
  1424     07CD  0084               	movwf	4
  1425     07CE  3093               	movlw	(high __pidataBANK1)| (0+128)
  1426     07CF  0085               	movwf	5
  1427     07D0  30D4               	movlw	low __pdataBANK1
  1428     07D1  0086               	movwf	6
  1429     07D2  3000               	movlw	high __pdataBANK1
  1430     07D3  0087               	movwf	7
  1431     07D4  3018               	movlw	24
  1432     07D5  3180  2005  3187   	fcall	init_ram
  1433                           
  1434                           ; Initialize objects allocated to BANK2
  1435     07D8  300C               	movlw	low __pidataBANK2
  1436     07D9  0084               	movwf	4
  1437     07DA  3097               	movlw	(high __pidataBANK2)| (0+128)
  1438     07DB  0085               	movwf	5
  1439     07DC  3020               	movlw	low __pdataBANK2
  1440     07DD  0086               	movwf	6
  1441     07DE  3001               	movlw	high __pdataBANK2
  1442     07DF  0087               	movwf	7
  1443     07E0  3050               	movlw	80
  1444     07E1  3180  2005  3187   	fcall	init_ram
  1445                           
  1446                           ; Initialize objects allocated to BANK3
  1447     07E4  3073               	movlw	low __pidataBANK3
  1448     07E5  0084               	movwf	4
  1449     07E6  3094               	movlw	(high __pidataBANK3)| (0+128)
  1450     07E7  0085               	movwf	5
  1451     07E8  30D0               	movlw	low __pdataBANK3
  1452     07E9  0086               	movwf	6
  1453     07EA  3001               	movlw	high __pdataBANK3
  1454     07EB  0087               	movwf	7
  1455     07EC  301C               	movlw	28
  1456     07ED  3180  2005  3187   	fcall	init_ram
  1457                           
  1458                           ; Clear objects allocated to BANK0
  1459     07F0  01E8               	clrf	__pbssBANK0& (0+127)
  1460     07F1  01E9               	clrf	(__pbssBANK0+1)& (0+127)
  1461     07F2  01EA               	clrf	(__pbssBANK0+2)& (0+127)
  1462     07F3  01EB               	clrf	(__pbssBANK0+3)& (0+127)
  1463     07F4  01EC               	clrf	(__pbssBANK0+4)& (0+127)
  1464                           
  1465                           ; Clear objects allocated to BANK3
  1466     07F5  30A0               	movlw	low __pbssBANK3
  1467     07F6  0084               	movwf	4
  1468     07F7  3001               	movlw	high __pbssBANK3
  1469     07F8  0085               	movwf	5
  1470     07F9  3030               	movlw	48
  1471     07FA  3188  2000  3187   	fcall	clear_ram0
  1472     07FD                     end_of_initialization:	
  1473                           ;End of C runtime variable initialization code
  1474                           
  1475     07FD                     __end_of__initialization:
  1476     07FD  0020               	movlb	0
  1477     07FE  3184  2C91         	ljmp	_main	;jump to C main() function
  1478                           
  1479                           	psect	bssBANK0
  1480     0068                     __pbssBANK0:
  1481     0068                     _width:
  1482     0068                     	ds	2
  1483     006A                     _prec:
  1484     006A                     	ds	2
  1485     006C                     _flags:
  1486     006C                     	ds	1
  1487                           
  1488                           	psect	dataBANK1
  1489     00D4                     __pdataBANK1:
  1490     00D4                     Lcd_Progress_Bar_Init@F6644:
  1491     00D4                     	ds	8
  1492     00DC                     Lcd_Progress_Bar_Init@F6642:
  1493     00DC                     	ds	8
  1494     00E4                     main@F6417:
  1495     00E4                     	ds	8
  1496                           
  1497                           	psect	dataBANK2
  1498     0120                     __pdataBANK2:
  1499     0120                     Lcd_Signal_Init@F6678:
  1500     0120                     	ds	8
  1501     0128                     Lcd_Battery_Init@F6671:
  1502     0128                     	ds	8
  1503     0130                     Lcd_Battery_Init@F6669:
  1504     0130                     	ds	8
  1505     0138                     Lcd_Battery_Init@F6667:
  1506     0138                     	ds	8
  1507     0140                     Lcd_Battery_Init@F6665:
  1508     0140                     	ds	8
  1509     0148                     Lcd_Battery_Init@F6663:
  1510     0148                     	ds	8
  1511     0150                     Lcd_Battery_Init@F6661:
  1512     0150                     	ds	8
  1513     0158                     Lcd_Battery_Init@F6659:
  1514     0158                     	ds	8
  1515     0160                     Lcd_Progress_Bar_Init@F6648:
  1516     0160                     	ds	8
  1517     0168                     Lcd_Progress_Bar_Init@F6646:
  1518     0168                     	ds	8
  1519                           
  1520                           	psect	bssBANK3
  1521     01A0                     __pbssBANK3:
  1522     01A0                     _dbuf:
  1523     01A0                     	ds	32
  1524     01C0                     ftoa@buf:
  1525     01C0                     	ds	16
  1526                           
  1527                           	psect	dataBANK3
  1528     01D0                     __pdataBANK3:
  1529     01D0                     main@F6420:
  1530     01D0                     	ds	12
  1531     01DC                     Lcd_Signal_Init@F6682:
  1532     01DC                     	ds	8
  1533     01E4                     Lcd_Signal_Init@F6680:
  1534     01E4                     	ds	8
  1535                           
  1536                           	psect	inittext
  1537     0005                     init_ram:
  1538     0005  00FE               	movwf	btemp
  1539     0006                     initloop:
  1540     0006  0012               	moviw fsr0++
  1541     0007  001E               	movwi fsr1++
  1542     0008  0BFE               	decfsz	btemp,f
  1543     0009  2806               	goto	initloop
  1544     000A  3400               	retlw	0
  1545                           
  1546                           	psect	clrtext
  1547     0800                     clear_ram0:	
  1548                           ;	Called with FSR0 containing the base address, and
  1549                           ;	WREG with the size to clear
  1550                           
  1551     0800  0064               	clrwdt	;clear the watchdog before getting into this loop
  1552     0801                     clrloop0:
  1553     0801  0180               	clrf	0	;clear RAM location pointed to by FSR
  1554     0802  3101               	addfsr 0,1
  1555     0803  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1556     0804  2801               	goto	clrloop0	;have we reached the end yet?
  1557     0805  3400               	retlw	0	;all done for this memory range, return
  1558                           
  1559                           	psect	cstackBANK1
  1560     00A0                     __pcstackBANK1:
  1561     00A0                     Lcd_Write_Padded_Integer@buf:
  1562                           
  1563                           ; 16 bytes @ 0x0
  1564     00A0                     	ds	16
  1565     00B0                     main@smiley:
  1566                           
  1567                           ; 8 bytes @ 0x10
  1568     00B0                     	ds	8
  1569     00B8                     main@battery_levels:
  1570                           
  1571                           ; 12 bytes @ 0x18
  1572     00B8                     	ds	12
  1573     00C4                     main@a:
  1574                           
  1575                           ; 2 bytes @ 0x24
  1576     00C4                     	ds	2
  1577     00C6                     main@a_169:
  1578                           
  1579                           ; 2 bytes @ 0x26
  1580     00C6                     	ds	2
  1581     00C8                     main@c:
  1582                           
  1583                           ; 2 bytes @ 0x28
  1584     00C8                     	ds	2
  1585     00CA                     main@c_173:
  1586                           
  1587                           ; 2 bytes @ 0x2A
  1588     00CA                     	ds	2
  1589     00CC                     main@progress:
  1590                           
  1591                           ; 2 bytes @ 0x2C
  1592     00CC                     	ds	2
  1593     00CE                     main@i:
  1594                           
  1595                           ; 2 bytes @ 0x2E
  1596     00CE                     	ds	2
  1597     00D0                     main@b:
  1598                           
  1599                           ; 4 bytes @ 0x30
  1600     00D0                     	ds	4
  1601                           
  1602                           	psect	cstackCOMMON
  1603     0070                     __pcstackCOMMON:
  1604     0070                     ?___flge:
  1605     0070                     ?_internal_32:	
  1606                           ; 1 bit 
  1607                           
  1608     0070                     ??_internal_32:	
  1609                           ; 1 bytes @ 0x0
  1610                           
  1611     0070                     ?_Lcd_Init:	
  1612                           ; 1 bytes @ 0x0
  1613                           
  1614     0070                     ?_Lcd_Clear:	
  1615                           ; 1 bytes @ 0x0
  1616                           
  1617     0070                     ?_Lcd_Backlight_On:	
  1618                           ; 1 bytes @ 0x0
  1619                           
  1620     0070                     ??_Lcd_Backlight_On:	
  1621                           ; 1 bytes @ 0x0
  1622                           
  1623     0070                     ?_Lcd_Backlight_Off:	
  1624                           ; 1 bytes @ 0x0
  1625                           
  1626     0070                     ??_Lcd_Backlight_Off:	
  1627                           ; 1 bytes @ 0x0
  1628                           
  1629     0070                     ?_Lcd_Blink_On:	
  1630                           ; 1 bytes @ 0x0
  1631                           
  1632     0070                     ?_Lcd_Blink_Off:	
  1633                           ; 1 bytes @ 0x0
  1634                           
  1635     0070                     ?_Lcd_Display_Off:	
  1636                           ; 1 bytes @ 0x0
  1637                           
  1638     0070                     ?_Lcd_Display_On:	
  1639                           ; 1 bytes @ 0x0
  1640                           
  1641     0070                     ?_Lcd_Move_Cursor_Left:	
  1642                           ; 1 bytes @ 0x0
  1643                           
  1644     0070                     ?_Lcd_Move_Cursor_Right:	
  1645                           ; 1 bytes @ 0x0
  1646                           
  1647     0070                     ?_Lcd_Shift_Left:	
  1648                           ; 1 bytes @ 0x0
  1649                           
  1650     0070                     ?_Lcd_Shift_Right:	
  1651                           ; 1 bytes @ 0x0
  1652                           
  1653     0070                     ?_Lcd_Display_Custom_Char:	
  1654                           ; 1 bytes @ 0x0
  1655                           
  1656     0070                     ?_Lcd_Progress_Bar_Init:	
  1657                           ; 1 bytes @ 0x0
  1658                           
  1659     0070                     ?_Lcd_Battery_Init:	
  1660                           ; 1 bytes @ 0x0
  1661                           
  1662     0070                     ?_Lcd_Signal_Init:	
  1663                           ; 1 bytes @ 0x0
  1664                           
  1665     0070                     ?_strncpy:	
  1666                           ; 1 bytes @ 0x0
  1667                           
  1668     0070                     ?_putch:	
  1669                           ; 1 bytes @ 0x0
  1670                           
  1671     0070                     ??_putch:	
  1672                           ; 1 bytes @ 0x0
  1673                           
  1674     0070                     ?_initMain:	
  1675                           ; 1 bytes @ 0x0
  1676                           
  1677     0070                     ??_initMain:	
  1678                           ; 1 bytes @ 0x0
  1679                           
  1680     0070                     ?_main:	
  1681                           ; 1 bytes @ 0x0
  1682                           
  1683     0070                     ?_Lcd_Port:	
  1684                           ; 1 bytes @ 0x0
  1685                           
  1686     0070                     ??_Lcd_Port:	
  1687                           ; 1 bytes @ 0x0
  1688                           
  1689     0070                     ?_Lcd_Enable_Pulse:	
  1690                           ; 1 bytes @ 0x0
  1691                           
  1692     0070                     ??_Lcd_Enable_Pulse:	
  1693                           ; 1 bytes @ 0x0
  1694                           
  1695     0070                     ?_Lcd_Cmd:	
  1696                           ; 1 bytes @ 0x0
  1697                           
  1698     0070                     ?_Lcd_Send_Command:	
  1699                           ; 1 bytes @ 0x0
  1700                           
  1701     0070                     ?_Lcd_Write_Char:	
  1702                           ; 1 bytes @ 0x0
  1703                           
  1704     0070                     ?_strlen:	
  1705                           ; 1 bytes @ 0x0
  1706                           
  1707     0070                     ?__Umul8_16:	
  1708                           ; 2 bytes @ 0x0
  1709                           
  1710     0070                     ?_fputc:	
  1711                           ; 2 bytes @ 0x0
  1712                           
  1713     0070                     ?___wmul:	
  1714                           ; 2 bytes @ 0x0
  1715                           
  1716     0070                     ?___awmod:	
  1717                           ; 2 bytes @ 0x0
  1718                           
  1719     0070                     ?___flneg:	
  1720                           ; 2 bytes @ 0x0
  1721                           
  1722     0070                     ?___fladd:	
  1723                           ; 4 bytes @ 0x0
  1724                           
  1725     0070                     ?___xxtofl:	
  1726                           ; 4 bytes @ 0x0
  1727                           
  1728     0070                     __Umul8_16@multiplicand:	
  1729                           ; 4 bytes @ 0x0
  1730                           
  1731     0070                     putch@c:	
  1732                           ; 1 bytes @ 0x0
  1733                           
  1734     0070                     ___wmul@multiplier:	
  1735                           ; 1 bytes @ 0x0
  1736                           
  1737     0070                     ___awmod@divisor:	
  1738                           ; 2 bytes @ 0x0
  1739                           
  1740     0070                     fputc@c:	
  1741                           ; 2 bytes @ 0x0
  1742                           
  1743     0070                     strlen@s:	
  1744                           ; 2 bytes @ 0x0
  1745                           
  1746     0070                     strncpy@s:	
  1747                           ; 2 bytes @ 0x0
  1748                           
  1749     0070                     ___flge@ff1:	
  1750                           ; 2 bytes @ 0x0
  1751                           
  1752     0070                     ___flneg@f1:	
  1753                           ; 4 bytes @ 0x0
  1754                           
  1755     0070                     ___fladd@b:	
  1756                           ; 4 bytes @ 0x0
  1757                           
  1758     0070                     ___xxtofl@val:	
  1759                           ; 4 bytes @ 0x0
  1760                           
  1761                           
  1762                           ; 4 bytes @ 0x0
  1763     0070                     	ds	1
  1764     0071                     Lcd_Port@a:
  1765                           
  1766                           ; 1 bytes @ 0x1
  1767     0071                     	ds	1
  1768     0072                     ??_strlen:
  1769     0072                     ??__Umul8_16:	
  1770                           ; 1 bytes @ 0x2
  1771                           
  1772     0072                     ??_Lcd_Cmd:	
  1773                           ; 1 bytes @ 0x2
  1774                           
  1775     0072                     ??_Lcd_Write_Char:	
  1776                           ; 1 bytes @ 0x2
  1777                           
  1778     0072                     Lcd_Cmd@a:	
  1779                           ; 1 bytes @ 0x2
  1780                           
  1781     0072                     fputc@fp:	
  1782                           ; 1 bytes @ 0x2
  1783                           
  1784     0072                     ___wmul@multiplicand:	
  1785                           ; 1 bytes @ 0x2
  1786                           
  1787     0072                     ___awmod@dividend:	
  1788                           ; 2 bytes @ 0x2
  1789                           
  1790     0072                     strncpy@n:	
  1791                           ; 2 bytes @ 0x2
  1792                           
  1793                           
  1794                           ; 2 bytes @ 0x2
  1795     0072                     	ds	1
  1796     0073                     ??_fputc:
  1797     0073                     ??_Lcd_Send_Command:	
  1798                           ; 1 bytes @ 0x3
  1799                           
  1800     0073                     Lcd_Write_Char@a:	
  1801                           ; 1 bytes @ 0x3
  1802                           
  1803     0073                     strlen@a:	
  1804                           ; 1 bytes @ 0x3
  1805                           
  1806                           
  1807                           ; 2 bytes @ 0x3
  1808     0073                     	ds	1
  1809     0074                     ??_Lcd_Display_Custom_Char:
  1810     0074                     ??_strncpy:	
  1811                           ; 1 bytes @ 0x4
  1812                           
  1813     0074                     ??___wmul:	
  1814                           ; 1 bytes @ 0x4
  1815                           
  1816     0074                     ??___awmod:	
  1817                           ; 1 bytes @ 0x4
  1818                           
  1819     0074                     ??___flneg:	
  1820                           ; 1 bytes @ 0x4
  1821                           
  1822     0074                     ??___xxtofl:	
  1823                           ; 1 bytes @ 0x4
  1824                           
  1825     0074                     Lcd_Send_Command@cmd:	
  1826                           ; 1 bytes @ 0x4
  1827                           
  1828     0074                     Lcd_Display_Custom_Char@location:	
  1829                           ; 1 bytes @ 0x4
  1830                           
  1831     0074                     ___wmul@product:	
  1832                           ; 1 bytes @ 0x4
  1833                           
  1834     0074                     __Umul8_16@product:	
  1835                           ; 2 bytes @ 0x4
  1836                           
  1837     0074                     ___flge@ff2:	
  1838                           ; 2 bytes @ 0x4
  1839                           
  1840     0074                     ___fladd@a:	
  1841                           ; 4 bytes @ 0x4
  1842                           
  1843                           
  1844                           ; 4 bytes @ 0x4
  1845     0074                     	ds	1
  1846     0075                     ??_Lcd_Init:
  1847     0075                     ??_Lcd_Clear:	
  1848                           ; 1 bytes @ 0x5
  1849                           
  1850     0075                     ??_Lcd_Blink_On:	
  1851                           ; 1 bytes @ 0x5
  1852                           
  1853     0075                     ??_Lcd_Blink_Off:	
  1854                           ; 1 bytes @ 0x5
  1855                           
  1856     0075                     ??_Lcd_Display_Off:	
  1857                           ; 1 bytes @ 0x5
  1858                           
  1859     0075                     ??_Lcd_Display_On:	
  1860                           ; 1 bytes @ 0x5
  1861                           
  1862     0075                     ??_Lcd_Move_Cursor_Left:	
  1863                           ; 1 bytes @ 0x5
  1864                           
  1865     0075                     ??_Lcd_Move_Cursor_Right:	
  1866                           ; 1 bytes @ 0x5
  1867                           
  1868     0075                     ?_Lcd_Set_Cursor:	
  1869                           ; 1 bytes @ 0x5
  1870                           
  1871     0075                     ??_Lcd_Shift_Left:	
  1872                           ; 1 bytes @ 0x5
  1873                           
  1874     0075                     ??_Lcd_Shift_Right:	
  1875                           ; 1 bytes @ 0x5
  1876                           
  1877     0075                     ?_Lcd_Create_Char:	
  1878                           ; 1 bytes @ 0x5
  1879                           
  1880     0075                     Lcd_Set_Cursor@col:	
  1881                           ; 1 bytes @ 0x5
  1882                           
  1883     0075                     Lcd_Create_Char@charmap:	
  1884                           ; 1 bytes @ 0x5
  1885                           
  1886     0075                     ___awmod@counter:	
  1887                           ; 1 bytes @ 0x5
  1888                           
  1889                           
  1890                           ; 1 bytes @ 0x5
  1891     0075                     	ds	1
  1892     0076                     ??_Lcd_Set_Cursor:
  1893     0076                     ??_Lcd_Create_Char:	
  1894                           ; 1 bytes @ 0x6
  1895                           
  1896     0076                     ?___awdiv:	
  1897                           ; 1 bytes @ 0x6
  1898                           
  1899     0076                     ?_read_prec_or_width:	
  1900                           ; 2 bytes @ 0x6
  1901                           
  1902     0076                     Lcd_Set_Cursor@row:	
  1903                           ; 2 bytes @ 0x6
  1904                           
  1905     0076                     ___awmod@sign:	
  1906                           ; 1 bytes @ 0x6
  1907                           
  1908     0076                     read_prec_or_width@ap:	
  1909                           ; 1 bytes @ 0x6
  1910                           
  1911     0076                     strncpy@d:	
  1912                           ; 1 bytes @ 0x6
  1913                           
  1914     0076                     ___awdiv@divisor:	
  1915                           ; 1 bytes @ 0x6
  1916                           
  1917     0076                     __Umul8_16@word_mpld:	
  1918                           ; 2 bytes @ 0x6
  1919                           
  1920                           
  1921                           ; 2 bytes @ 0x6
  1922     0076                     	ds	1
  1923     0077                     ?_abs:
  1924     0077                     Lcd_Create_Char@location:	
  1925                           ; 2 bytes @ 0x7
  1926                           
  1927     0077                     strncpy@cp:	
  1928                           ; 1 bytes @ 0x7
  1929                           
  1930     0077                     _Lcd_Set_Cursor$261:	
  1931                           ; 1 bytes @ 0x7
  1932                           
  1933     0077                     abs@a:	
  1934                           ; 2 bytes @ 0x7
  1935                           
  1936                           
  1937                           ; 2 bytes @ 0x7
  1938     0077                     	ds	1
  1939     0078                     ??___flge:
  1940     0078                     ??_read_prec_or_width:	
  1941                           ; 1 bytes @ 0x8
  1942                           
  1943     0078                     ?_fputs:	
  1944                           ; 1 bytes @ 0x8
  1945                           
  1946     0078                     ___fladd@signs:	
  1947                           ; 2 bytes @ 0x8
  1948                           
  1949     0078                     __Umul8_16@multiplier:	
  1950                           ; 1 bytes @ 0x8
  1951                           
  1952     0078                     ___xxtofl@sign:	
  1953                           ; 1 bytes @ 0x8
  1954                           
  1955     0078                     fputs@fp:	
  1956                           ; 1 bytes @ 0x8
  1957                           
  1958     0078                     Lcd_Create_Char@i:	
  1959                           ; 1 bytes @ 0x8
  1960                           
  1961     0078                     ___awdiv@dividend:	
  1962                           ; 2 bytes @ 0x8
  1963                           
  1964                           
  1965                           ; 2 bytes @ 0x8
  1966     0078                     	ds	1
  1967     0079                     ??_fputs:
  1968     0079                     ??_abs:	
  1969                           ; 1 bytes @ 0x9
  1970                           
  1971     0079                     Lcd_Set_Cursor@address:	
  1972                           ; 1 bytes @ 0x9
  1973                           
  1974     0079                     ___fladd@aexp:	
  1975                           ; 1 bytes @ 0x9
  1976                           
  1977     0079                     ___xxtofl@exp:	
  1978                           ; 1 bytes @ 0x9
  1979                           
  1980                           
  1981                           ; 1 bytes @ 0x9
  1982     0079                     	ds	1
  1983     007A                     ??_Lcd_Progress_Bar_Init:
  1984     007A                     ??_Lcd_Battery_Init:	
  1985                           ; 1 bytes @ 0xA
  1986                           
  1987     007A                     ??_Lcd_Signal_Init:	
  1988                           ; 1 bytes @ 0xA
  1989                           
  1990     007A                     ??___awdiv:	
  1991                           ; 1 bytes @ 0xA
  1992                           
  1993     007A                     ___fladd@bexp:	
  1994                           ; 1 bytes @ 0xA
  1995                           
  1996     007A                     ___xxtofl@arg:	
  1997                           ; 1 bytes @ 0xA
  1998                           
  1999                           
  2000                           ; 4 bytes @ 0xA
  2001     007A                     	ds	1
  2002     007B                     ??_Lcd_Write_String:
  2003     007B                     ??_Lcd_Progress_Bar:	
  2004                           ; 1 bytes @ 0xB
  2005                           
  2006     007B                     ?_pad:	
  2007                           ; 1 bytes @ 0xB
  2008                           
  2009     007B                     ___fladd@grs:	
  2010                           ; 1 bytes @ 0xB
  2011                           
  2012     007B                     pad@buf:	
  2013                           ; 1 bytes @ 0xB
  2014                           
  2015                           
  2016                           ; 1 bytes @ 0xB
  2017     007B                     	ds	1
  2018     007C                     ??_Lcd_Write_Integer:
  2019     007C                     ??_Lcd_Center_Text:	
  2020                           ; 1 bytes @ 0xC
  2021                           
  2022     007C                     ??_Lcd_Display_Signal:	
  2023                           ; 1 bytes @ 0xC
  2024                           
  2025     007C                     pad@p:	
  2026                           ; 1 bytes @ 0xC
  2027                           
  2028                           
  2029                           ; 2 bytes @ 0xC
  2030     007C                     	ds	2
  2031     007E                     ??_Lcd_Write_Float:
  2032     007E                     ??_Lcd_Write_Padded_Integer:	
  2033                           ; 1 bytes @ 0xE
  2034                           
  2035     007E                     ??___flsub:	
  2036                           ; 1 bytes @ 0xE
  2037                           
  2038                           
  2039                           	psect	cstackBANK0
  2040     0020                     __pcstackBANK0:	
  2041                           ; 1 bytes @ 0xE
  2042                           
  2043     0020                     ??___fladd:
  2044     0020                     ?___flmul:	
  2045                           ; 1 bytes @ 0x0
  2046                           
  2047     0020                     ___awdiv@counter:	
  2048                           ; 4 bytes @ 0x0
  2049                           
  2050     0020                     read_prec_or_width@c:	
  2051                           ; 1 bytes @ 0x0
  2052                           
  2053     0020                     fputs@c:	
  2054                           ; 1 bytes @ 0x0
  2055                           
  2056     0020                     ___flmul@b:	
  2057                           ; 1 bytes @ 0x0
  2058                           
  2059     0020                     Lcd_Progress_Bar_Init@block_1:	
  2060                           ; 4 bytes @ 0x0
  2061                           
  2062     0020                     Lcd_Battery_Init@level0:	
  2063                           ; 8 bytes @ 0x0
  2064                           
  2065     0020                     Lcd_Signal_Init@no_signal:	
  2066                           ; 8 bytes @ 0x0
  2067                           
  2068                           
  2069                           ; 8 bytes @ 0x0
  2070     0020                     	ds	1
  2071     0021                     ___awdiv@sign:
  2072     0021                     read_prec_or_width@n:	
  2073                           ; 1 bytes @ 0x1
  2074                           
  2075     0021                     fputs@i:	
  2076                           ; 2 bytes @ 0x1
  2077                           
  2078                           
  2079                           ; 2 bytes @ 0x1
  2080     0021                     	ds	1
  2081     0022                     ___awdiv@quotient:
  2082                           
  2083                           ; 2 bytes @ 0x2
  2084     0022                     	ds	1
  2085     0023                     read_prec_or_width@fmt:
  2086     0023                     fputs@s:	
  2087                           ; 1 bytes @ 0x3
  2088                           
  2089                           
  2090                           ; 1 bytes @ 0x3
  2091     0023                     	ds	1
  2092     0024                     ?_Lcd_Progress_Bar:
  2093     0024                     ??_pad:	
  2094                           ; 1 bytes @ 0x4
  2095                           
  2096     0024                     ?_itoa:	
  2097                           ; 1 bytes @ 0x4
  2098                           
  2099     0024                     itoa@buf:	
  2100                           ; 2 bytes @ 0x4
  2101                           
  2102     0024                     Lcd_Progress_Bar@progress:	
  2103                           ; 2 bytes @ 0x4
  2104                           
  2105     0024                     ___flmul@a:	
  2106                           ; 2 bytes @ 0x4
  2107                           
  2108                           
  2109                           ; 4 bytes @ 0x4
  2110     0024                     	ds	1
  2111     0025                     pad@i:
  2112                           
  2113                           ; 2 bytes @ 0x5
  2114     0025                     	ds	1
  2115     0026                     itoa@value:
  2116     0026                     Lcd_Progress_Bar@max:	
  2117                           ; 2 bytes @ 0x6
  2118                           
  2119                           
  2120                           ; 2 bytes @ 0x6
  2121     0026                     	ds	1
  2122     0027                     pad@fp:
  2123                           
  2124                           ; 1 bytes @ 0x7
  2125     0027                     	ds	1
  2126     0028                     ??___flmul:
  2127     0028                     ?_dtoa:	
  2128                           ; 1 bytes @ 0x8
  2129                           
  2130     0028                     ?___flsub:	
  2131                           ; 1 bytes @ 0x8
  2132                           
  2133     0028                     itoa@base:	
  2134                           ; 4 bytes @ 0x8
  2135                           
  2136     0028                     Lcd_Progress_Bar@i:	
  2137                           ; 2 bytes @ 0x8
  2138                           
  2139     0028                     dtoa@d:	
  2140                           ; 2 bytes @ 0x8
  2141                           
  2142     0028                     ___flsub@a:	
  2143                           ; 2 bytes @ 0x8
  2144                           
  2145     0028                     Lcd_Progress_Bar_Init@block_2:	
  2146                           ; 4 bytes @ 0x8
  2147                           
  2148     0028                     Lcd_Battery_Init@level1:	
  2149                           ; 8 bytes @ 0x8
  2150                           
  2151     0028                     Lcd_Signal_Init@weak_signal:	
  2152                           ; 8 bytes @ 0x8
  2153                           
  2154                           
  2155                           ; 8 bytes @ 0x8
  2156     0028                     	ds	2
  2157     002A                     ??_itoa:
  2158     002A                     ??_dtoa:	
  2159                           ; 1 bytes @ 0xA
  2160                           
  2161     002A                     Lcd_Progress_Bar@i_339:	
  2162                           ; 1 bytes @ 0xA
  2163                           
  2164                           
  2165                           ; 2 bytes @ 0xA
  2166     002A                     	ds	1
  2167     002B                     _dtoa$778:
  2168                           
  2169                           ; 2 bytes @ 0xB
  2170     002B                     	ds	1
  2171     002C                     Lcd_Progress_Bar@fractional_block:
  2172     002C                     ___flsub@b:	
  2173                           ; 2 bytes @ 0xC
  2174                           
  2175                           
  2176                           ; 4 bytes @ 0xC
  2177     002C                     	ds	1
  2178     002D                     ___flmul@sign:
  2179     002D                     dtoa@fp:	
  2180                           ; 1 bytes @ 0xD
  2181                           
  2182                           
  2183                           ; 1 bytes @ 0xD
  2184     002D                     	ds	1
  2185     002E                     dtoa@p:
  2186     002E                     Lcd_Progress_Bar@full_blocks:	
  2187                           ; 1 bytes @ 0xE
  2188                           
  2189     002E                     ___flmul@grs:	
  2190                           ; 2 bytes @ 0xE
  2191                           
  2192                           
  2193                           ; 4 bytes @ 0xE
  2194     002E                     	ds	1
  2195     002F                     itoa@tmp_value:
  2196     002F                     dtoa@w:	
  2197                           ; 2 bytes @ 0xF
  2198                           
  2199                           
  2200                           ; 2 bytes @ 0xF
  2201     002F                     	ds	1
  2202     0030                     Lcd_Progress_Bar@total_blocks:
  2203     0030                     Lcd_Progress_Bar_Init@block_3:	
  2204                           ; 2 bytes @ 0x10
  2205                           
  2206     0030                     Lcd_Battery_Init@level2:	
  2207                           ; 8 bytes @ 0x10
  2208                           
  2209     0030                     Lcd_Signal_Init@strong_signal:	
  2210                           ; 8 bytes @ 0x10
  2211                           
  2212                           
  2213                           ; 8 bytes @ 0x10
  2214     0030                     	ds	1
  2215     0031                     itoa@tmp_char:
  2216     0031                     dtoa@s:	
  2217                           ; 1 bytes @ 0x11
  2218                           
  2219                           
  2220                           ; 1 bytes @ 0x11
  2221     0031                     	ds	1
  2222     0032                     ___flmul@aexp:
  2223     0032                     itoa@ptr1:	
  2224                           ; 1 bytes @ 0x12
  2225                           
  2226     0032                     dtoa@i:	
  2227                           ; 2 bytes @ 0x12
  2228                           
  2229                           
  2230                           ; 2 bytes @ 0x12
  2231     0032                     	ds	1
  2232     0033                     ___flmul@bexp:
  2233                           
  2234                           ; 1 bytes @ 0x13
  2235     0033                     	ds	1
  2236     0034                     ?_vfpfcnvrt:
  2237     0034                     vfpfcnvrt@fmt:	
  2238                           ; 1 bytes @ 0x14
  2239                           
  2240     0034                     itoa@ptr:	
  2241                           ; 1 bytes @ 0x14
  2242                           
  2243     0034                     ___flmul@prod:	
  2244                           ; 2 bytes @ 0x14
  2245                           
  2246                           
  2247                           ; 4 bytes @ 0x14
  2248     0034                     	ds	1
  2249     0035                     vfpfcnvrt@ap:
  2250                           
  2251                           ; 1 bytes @ 0x15
  2252     0035                     	ds	1
  2253     0036                     ?_Lcd_Write_String:
  2254     0036                     ??_vfpfcnvrt:	
  2255                           ; 1 bytes @ 0x16
  2256                           
  2257     0036                     Lcd_Write_String@str:	
  2258                           ; 1 bytes @ 0x16
  2259                           
  2260                           
  2261                           ; 2 bytes @ 0x16
  2262     0036                     	ds	2
  2263     0038                     ?_Lcd_Write_Integer:
  2264     0038                     ?_Lcd_Scroll_Text:	
  2265                           ; 1 bytes @ 0x18
  2266                           
  2267     0038                     ?_Lcd_Center_Text:	
  2268                           ; 1 bytes @ 0x18
  2269                           
  2270     0038                     ?_Lcd_Display_Signal:	
  2271                           ; 1 bytes @ 0x18
  2272                           
  2273     0038                     Lcd_Write_Integer@v:	
  2274                           ; 1 bytes @ 0x18
  2275                           
  2276     0038                     Lcd_Center_Text@str:	
  2277                           ; 2 bytes @ 0x18
  2278                           
  2279     0038                     Lcd_Scroll_Text@str:	
  2280                           ; 2 bytes @ 0x18
  2281                           
  2282     0038                     Lcd_Display_Signal@level:	
  2283                           ; 2 bytes @ 0x18
  2284                           
  2285     0038                     ___flmul@temp:	
  2286                           ; 2 bytes @ 0x18
  2287                           
  2288     0038                     Lcd_Progress_Bar_Init@block_full:	
  2289                           ; 2 bytes @ 0x18
  2290                           
  2291     0038                     Lcd_Battery_Init@level3:	
  2292                           ; 8 bytes @ 0x18
  2293                           
  2294                           
  2295                           ; 8 bytes @ 0x18
  2296     0038                     	ds	2
  2297     003A                     ??_Lcd_Scroll_Text:
  2298     003A                     ?___fltol:	
  2299                           ; 1 bytes @ 0x1A
  2300                           
  2301     003A                     Lcd_Center_Text@len:	
  2302                           ; 4 bytes @ 0x1A
  2303                           
  2304     003A                     ___fltol@f1:	
  2305                           ; 2 bytes @ 0x1A
  2306                           
  2307     003A                     vfpfcnvrt@convarg:	
  2308                           ; 4 bytes @ 0x1A
  2309                           
  2310     003A                     Lcd_Write_Integer@buf:	
  2311                           ; 4 bytes @ 0x1A
  2312                           
  2313                           
  2314                           ; 8 bytes @ 0x1A
  2315     003A                     	ds	2
  2316     003C                     Lcd_Center_Text@start_col:
  2317                           
  2318                           ; 2 bytes @ 0x1C
  2319     003C                     	ds	1
  2320     003D                     Lcd_Scroll_Text@buffer:
  2321                           
  2322                           ; 17 bytes @ 0x1D
  2323     003D                     	ds	1
  2324     003E                     ??___fltol:
  2325     003E                     Lcd_Center_Text@row:	
  2326                           ; 1 bytes @ 0x1E
  2327                           
  2328     003E                     vfpfcnvrt@done:	
  2329                           ; 1 bytes @ 0x1E
  2330                           
  2331                           
  2332                           ; 1 bytes @ 0x1E
  2333     003E                     	ds	1
  2334     003F                     vfpfcnvrt@cp:
  2335                           
  2336                           ; 2 bytes @ 0x1F
  2337     003F                     	ds	1
  2338     0040                     Lcd_Battery_Init@level4:
  2339                           
  2340                           ; 8 bytes @ 0x20
  2341     0040                     	ds	1
  2342     0041                     vfpfcnvrt@fp:
  2343                           
  2344                           ; 1 bytes @ 0x21
  2345     0041                     	ds	1
  2346     0042                     ?_vfprintf:
  2347     0042                     ___fltol@sign1:	
  2348                           ; 2 bytes @ 0x22
  2349                           
  2350     0042                     vfprintf@fmt:	
  2351                           ; 1 bytes @ 0x22
  2352                           
  2353                           
  2354                           ; 2 bytes @ 0x22
  2355     0042                     	ds	1
  2356     0043                     ___fltol@exp1:
  2357                           
  2358                           ; 1 bytes @ 0x23
  2359     0043                     	ds	1
  2360     0044                     ?_ftoa:
  2361     0044                     vfprintf@ap:	
  2362                           ; 1 bytes @ 0x24
  2363                           
  2364     0044                     ftoa@f:	
  2365                           ; 1 bytes @ 0x24
  2366                           
  2367                           
  2368                           ; 4 bytes @ 0x24
  2369     0044                     	ds	1
  2370     0045                     ??_vfprintf:
  2371                           
  2372                           ; 1 bytes @ 0x25
  2373     0045                     	ds	1
  2374     0046                     vfprintf@fp:
  2375                           
  2376                           ; 1 bytes @ 0x26
  2377     0046                     	ds	1
  2378     0047                     vfprintf@cfmt:
  2379                           
  2380                           ; 2 bytes @ 0x27
  2381     0047                     	ds	1
  2382     0048                     ftoa@status:
  2383     0048                     Lcd_Battery_Init@level5:	
  2384                           ; 1 bytes @ 0x28
  2385                           
  2386                           
  2387                           ; 8 bytes @ 0x28
  2388     0048                     	ds	1
  2389     0049                     ??_ftoa:
  2390     0049                     ?_sprintf:	
  2391                           ; 1 bytes @ 0x29
  2392                           
  2393     0049                     sprintf@fmt:	
  2394                           ; 2 bytes @ 0x29
  2395                           
  2396                           
  2397                           ; 2 bytes @ 0x29
  2398     0049                     	ds	1
  2399     004A                     _ftoa$1014:
  2400                           
  2401                           ; 4 bytes @ 0x2A
  2402     004A                     	ds	4
  2403     004E                     ftoa@frac_as_int:
  2404     004E                     Lcd_Scroll_Text@len:	
  2405                           ; 2 bytes @ 0x2E
  2406                           
  2407                           
  2408                           ; 2 bytes @ 0x2E
  2409     004E                     	ds	1
  2410     004F                     ??_sprintf:
  2411                           
  2412                           ; 1 bytes @ 0x2F
  2413     004F                     	ds	1
  2414     0050                     sprintf@ap:
  2415     0050                     ftoa@frac_digits:	
  2416                           ; 1 bytes @ 0x30
  2417                           
  2418     0050                     Lcd_Scroll_Text@i:	
  2419                           ; 2 bytes @ 0x30
  2420                           
  2421     0050                     Lcd_Battery_Init@full:	
  2422                           ; 2 bytes @ 0x30
  2423                           
  2424                           
  2425                           ; 8 bytes @ 0x30
  2426     0050                     	ds	1
  2427     0051                     sprintf@s:
  2428                           
  2429                           ; 1 bytes @ 0x31
  2430     0051                     	ds	1
  2431     0052                     ftoa@frac_part:
  2432     0052                     sprintf@f:	
  2433                           ; 4 bytes @ 0x32
  2434                           
  2435                           
  2436                           ; 11 bytes @ 0x32
  2437     0052                     	ds	4
  2438     0056                     ftoa@int_part:
  2439                           
  2440                           ; 2 bytes @ 0x36
  2441     0056                     	ds	2
  2442     0058                     ftoa@ptr:
  2443                           
  2444                           ; 1 bytes @ 0x38
  2445     0058                     	ds	1
  2446     0059                     ?_Lcd_Write_Float:
  2447     0059                     Lcd_Write_Float@f:	
  2448                           ; 1 bytes @ 0x39
  2449                           
  2450                           
  2451                           ; 4 bytes @ 0x39
  2452     0059                     	ds	4
  2453     005D                     ?_Lcd_Write_Padded_Integer:
  2454     005D                     ?_Lcd_Display_Battery:	
  2455                           ; 1 bytes @ 0x3D
  2456                           
  2457     005D                     Lcd_Write_Float@buf:	
  2458                           ; 1 bytes @ 0x3D
  2459                           
  2460     005D                     Lcd_Write_Padded_Integer@num:	
  2461                           ; 1 bytes @ 0x3D
  2462                           
  2463     005D                     Lcd_Display_Battery@percentage:	
  2464                           ; 2 bytes @ 0x3D
  2465                           
  2466                           
  2467                           ; 2 bytes @ 0x3D
  2468     005D                     	ds	1
  2469     005E                     Lcd_Write_Float@status:
  2470                           
  2471                           ; 2 bytes @ 0x3E
  2472     005E                     	ds	1
  2473     005F                     ??_Lcd_Display_Battery:
  2474     005F                     Lcd_Write_Padded_Integer@width:	
  2475                           ; 1 bytes @ 0x3F
  2476                           
  2477                           
  2478                           ; 2 bytes @ 0x3F
  2479     005F                     	ds	1
  2480     0060                     Lcd_Display_Battery@buf:
  2481                           
  2482                           ; 5 bytes @ 0x40
  2483     0060                     	ds	5
  2484     0065                     Lcd_Display_Battery@battery_char:
  2485                           
  2486                           ; 1 bytes @ 0x45
  2487     0065                     	ds	1
  2488     0066                     ??_main:
  2489                           
  2490                           ; 1 bytes @ 0x46
  2491     0066                     	ds	2
  2492                           
  2493                           	psect	maintext
  2494     0491                     __pmaintext:	
  2495 ;;
  2496 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2497 ;;
  2498 ;; *************** function _main *****************
  2499 ;; Defined at:
  2500 ;;		line 73 in file "main.c"
  2501 ;; Parameters:    Size  Location     Type
  2502 ;;		None
  2503 ;; Auto vars:     Size  Location     Type
  2504 ;;  i               2   46[BANK1 ] int 
  2505 ;;  progress        2   44[BANK1 ] int 
  2506 ;;  c               2   42[BANK1 ] int 
  2507 ;;  b               4   48[BANK1 ] float 
  2508 ;;  c               2   40[BANK1 ] int 
  2509 ;;  a               2   38[BANK1 ] int 
  2510 ;;  a               2   36[BANK1 ] int 
  2511 ;;  battery_leve   12   24[BANK1 ] int [6]
  2512 ;;  smiley          8   16[BANK1 ] unsigned char [8]
  2513 ;; Return value:  Size  Location     Type
  2514 ;;                  1    wreg      void 
  2515 ;; Registers used:
  2516 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2517 ;; Tracked objects:
  2518 ;;		On entry : B1F/0
  2519 ;;		On exit  : 0/0
  2520 ;;		Unchanged: 0/0
  2521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2523 ;;      Locals:         0       0      36       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2524 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2525 ;;      Totals:         0       2      36       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2526 ;;Total ram usage:       38 bytes
  2527 ;; Hardware stack levels required when called: 9
  2528 ;; This function calls:
  2529 ;;		_Lcd_Backlight_Off
  2530 ;;		_Lcd_Backlight_On
  2531 ;;		_Lcd_Battery_Init
  2532 ;;		_Lcd_Blink_Off
  2533 ;;		_Lcd_Blink_On
  2534 ;;		_Lcd_Center_Text
  2535 ;;		_Lcd_Clear
  2536 ;;		_Lcd_Create_Char
  2537 ;;		_Lcd_Display_Battery
  2538 ;;		_Lcd_Display_Custom_Char
  2539 ;;		_Lcd_Display_Off
  2540 ;;		_Lcd_Display_On
  2541 ;;		_Lcd_Display_Signal
  2542 ;;		_Lcd_Init
  2543 ;;		_Lcd_Move_Cursor_Left
  2544 ;;		_Lcd_Move_Cursor_Right
  2545 ;;		_Lcd_Progress_Bar
  2546 ;;		_Lcd_Progress_Bar_Init
  2547 ;;		_Lcd_Scroll_Text
  2548 ;;		_Lcd_Set_Cursor
  2549 ;;		_Lcd_Shift_Left
  2550 ;;		_Lcd_Shift_Right
  2551 ;;		_Lcd_Signal_Init
  2552 ;;		_Lcd_Write_Float
  2553 ;;		_Lcd_Write_Integer
  2554 ;;		_Lcd_Write_Padded_Integer
  2555 ;;		_Lcd_Write_String
  2556 ;;		___fladd
  2557 ;;		___flge
  2558 ;;		_initMain
  2559 ;; This function is called by:
  2560 ;;		Startup code after reset
  2561 ;; This function uses a non-reentrant model
  2562 ;;
  2563                           
  2564     0491                     _main:	
  2565                           ;psect for function _main
  2566                           
  2567     0491                     l3712:	
  2568                           ;incstack = 0
  2569                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2570                           
  2571                           
  2572                           ;main.c: 74:     initMain();
  2573     0491  3193  237B  3184   	fcall	_initMain
  2574     0494                     l3714:
  2575                           
  2576                           ;main.c: 75:     _delay((unsigned long)((100)*(32000000/4000.0)));
  2577     0494  3005               	movlw	5
  2578     0495  0020               	movlb	0	; select bank0
  2579     0496  00E7               	movwf	??_main+1
  2580     0497  300F               	movlw	15
  2581     0498  00E6               	movwf	??_main
  2582     0499  30F1               	movlw	241
  2583     049A                     u4537:
  2584     049A  0B89               	decfsz	9,f
  2585     049B  2C9A               	goto	u4537
  2586     049C  0BE6               	decfsz	??_main,f
  2587     049D  2C9A               	goto	u4537
  2588     049E  0BE7               	decfsz	??_main+1,f
  2589     049F  2C9A               	goto	u4537
  2590     04A0                     l3716:
  2591                           
  2592                           ;main.c: 78:     Lcd_Init();
  2593     04A0  3195  25CA  3184   	fcall	_Lcd_Init
  2594                           
  2595                           ;main.c: 81:     _delay((unsigned long)((100)*(32000000/4000.0)));
  2596     04A3  3005               	movlw	5
  2597     04A4  0020               	movlb	0	; select bank0
  2598     04A5  00E7               	movwf	??_main+1
  2599     04A6  300F               	movlw	15
  2600     04A7  00E6               	movwf	??_main
  2601     04A8  30F1               	movlw	241
  2602     04A9                     u4547:
  2603     04A9  0B89               	decfsz	9,f
  2604     04AA  2CA9               	goto	u4547
  2605     04AB  0BE6               	decfsz	??_main,f
  2606     04AC  2CA9               	goto	u4547
  2607     04AD  0BE7               	decfsz	??_main+1,f
  2608     04AE  2CA9               	goto	u4547
  2609     04AF                     l3718:
  2610                           
  2611                           ;main.c: 85:   {;main.c: 86:     Lcd_Clear();
  2612     04AF  3193  234C  3184   	fcall	_Lcd_Clear
  2613                           
  2614                           ;main.c: 88:     Lcd_Backlight_On();
  2615     04B2  3192  22F3  3184   	fcall	_Lcd_Backlight_On
  2616     04B5                     l3720:
  2617                           
  2618                           ;main.c: 89:     _delay((unsigned long)((2000)*(32000000/4000.0)));
  2619     04B5  3052               	movlw	82
  2620     04B6  0020               	movlb	0	; select bank0
  2621     04B7  00E7               	movwf	??_main+1
  2622     04B8  302B               	movlw	43
  2623     04B9  00E6               	movwf	??_main
  2624     04BA  3000               	movlw	0
  2625     04BB                     u4557:
  2626     04BB  0B89               	decfsz	9,f
  2627     04BC  2CBB               	goto	u4557
  2628     04BD  0BE6               	decfsz	??_main,f
  2629     04BE  2CBB               	goto	u4557
  2630     04BF  0BE7               	decfsz	??_main+1,f
  2631     04C0  2CBB               	goto	u4557
  2632     04C1  0000               	nop
  2633     04C2                     l3722:
  2634                           
  2635                           ;main.c: 90:     Lcd_Backlight_Off();
  2636     04C2  3192  22F0  3184   	fcall	_Lcd_Backlight_Off
  2637     04C5                     l3724:
  2638                           
  2639                           ;main.c: 92:     Lcd_Blink_On();
  2640     04C5  3192  22FB  3184   	fcall	_Lcd_Blink_On
  2641     04C8                     l3726:
  2642                           
  2643                           ;main.c: 93:     _delay((unsigned long)((2000)*(32000000/4000.0)));
  2644     04C8  3052               	movlw	82
  2645     04C9  0020               	movlb	0	; select bank0
  2646     04CA  00E7               	movwf	??_main+1
  2647     04CB  302B               	movlw	43
  2648     04CC  00E6               	movwf	??_main
  2649     04CD  3000               	movlw	0
  2650     04CE                     u4567:
  2651     04CE  0B89               	decfsz	9,f
  2652     04CF  2CCE               	goto	u4567
  2653     04D0  0BE6               	decfsz	??_main,f
  2654     04D1  2CCE               	goto	u4567
  2655     04D2  0BE7               	decfsz	??_main+1,f
  2656     04D3  2CCE               	goto	u4567
  2657     04D4  0000               	nop
  2658                           
  2659                           ;main.c: 94:     Lcd_Blink_Off();
  2660     04D5  3192  22F6  3184   	fcall	_Lcd_Blink_Off
  2661     04D8                     l3728:
  2662                           
  2663                           ;main.c: 95:     _delay((unsigned long)((2000)*(32000000/4000.0)));
  2664     04D8  3052               	movlw	82
  2665     04D9  0020               	movlb	0	; select bank0
  2666     04DA  00E7               	movwf	??_main+1
  2667     04DB  302B               	movlw	43
  2668     04DC  00E6               	movwf	??_main
  2669     04DD  3000               	movlw	0
  2670     04DE                     u4577:
  2671     04DE  0B89               	decfsz	9,f
  2672     04DF  2CDE               	goto	u4577
  2673     04E0  0BE6               	decfsz	??_main,f
  2674     04E1  2CDE               	goto	u4577
  2675     04E2  0BE7               	decfsz	??_main+1,f
  2676     04E3  2CDE               	goto	u4577
  2677     04E4  0000               	nop
  2678     04E5                     l3730:
  2679                           
  2680                           ;main.c: 97:     Lcd_Display_Off();
  2681     04E5  3193  2300  3184   	fcall	_Lcd_Display_Off
  2682                           
  2683                           ;main.c: 98:     _delay((unsigned long)((2000)*(32000000/4000.0)));
  2684     04E8  3052               	movlw	82
  2685     04E9  0020               	movlb	0	; select bank0
  2686     04EA  00E7               	movwf	??_main+1
  2687     04EB  302B               	movlw	43
  2688     04EC  00E6               	movwf	??_main
  2689     04ED  3000               	movlw	0
  2690     04EE                     u4587:
  2691     04EE  0B89               	decfsz	9,f
  2692     04EF  2CEE               	goto	u4587
  2693     04F0  0BE6               	decfsz	??_main,f
  2694     04F1  2CEE               	goto	u4587
  2695     04F2  0BE7               	decfsz	??_main+1,f
  2696     04F3  2CEE               	goto	u4587
  2697     04F4  0000               	nop
  2698     04F5                     l3732:
  2699                           
  2700                           ;main.c: 100:     Lcd_Display_On();
  2701     04F5  3193  2305  3184   	fcall	_Lcd_Display_On
  2702     04F8                     l3734:
  2703                           
  2704                           ;main.c: 101:     _delay((unsigned long)((1000)*(32000000/4000.0)));
  2705     04F8  3029               	movlw	41
  2706     04F9  0020               	movlb	0	; select bank0
  2707     04FA  00E7               	movwf	??_main+1
  2708     04FB  3096               	movlw	150
  2709     04FC  00E6               	movwf	??_main
  2710     04FD  307F               	movlw	127
  2711     04FE                     u4597:
  2712     04FE  0B89               	decfsz	9,f
  2713     04FF  2CFE               	goto	u4597
  2714     0500  0BE6               	decfsz	??_main,f
  2715     0501  2CFE               	goto	u4597
  2716     0502  0BE7               	decfsz	??_main+1,f
  2717     0503  2CFE               	goto	u4597
  2718                           
  2719                           ;main.c: 103:      Lcd_Move_Cursor_Left();
  2720     0504  3193  230A  3184   	fcall	_Lcd_Move_Cursor_Left
  2721     0507                     l3736:
  2722                           
  2723                           ;main.c: 104:      _delay((unsigned long)((1000)*(32000000/4000.0)));
  2724     0507  3029               	movlw	41
  2725     0508  0020               	movlb	0	; select bank0
  2726     0509  00E7               	movwf	??_main+1
  2727     050A  3096               	movlw	150
  2728     050B  00E6               	movwf	??_main
  2729     050C  307F               	movlw	127
  2730     050D                     u4607:
  2731     050D  0B89               	decfsz	9,f
  2732     050E  2D0D               	goto	u4607
  2733     050F  0BE6               	decfsz	??_main,f
  2734     0510  2D0D               	goto	u4607
  2735     0511  0BE7               	decfsz	??_main+1,f
  2736     0512  2D0D               	goto	u4607
  2737     0513                     l3738:
  2738                           
  2739                           ;main.c: 105:      Lcd_Move_Cursor_Right();
  2740     0513  3193  230F  3184   	fcall	_Lcd_Move_Cursor_Right
  2741                           
  2742                           ;main.c: 106:      _delay((unsigned long)((1000)*(32000000/4000.0)));
  2743     0516  3029               	movlw	41
  2744     0517  0020               	movlb	0	; select bank0
  2745     0518  00E7               	movwf	??_main+1
  2746     0519  3096               	movlw	150
  2747     051A  00E6               	movwf	??_main
  2748     051B  307F               	movlw	127
  2749     051C                     u4617:
  2750     051C  0B89               	decfsz	9,f
  2751     051D  2D1C               	goto	u4617
  2752     051E  0BE6               	decfsz	??_main,f
  2753     051F  2D1C               	goto	u4617
  2754     0520  0BE7               	decfsz	??_main+1,f
  2755     0521  2D1C               	goto	u4617
  2756     0522                     l3740:
  2757                           
  2758                           ;main.c: 107:      Lcd_Move_Cursor_Left();
  2759     0522  3193  230A  3184   	fcall	_Lcd_Move_Cursor_Left
  2760     0525                     l3742:
  2761                           
  2762                           ;main.c: 110:     Lcd_Clear();
  2763     0525  3193  234C  3184   	fcall	_Lcd_Clear
  2764                           
  2765                           ;main.c: 112:     _delay((unsigned long)((100)*(32000000/4000.0)));
  2766     0528  3005               	movlw	5
  2767     0529  0020               	movlb	0	; select bank0
  2768     052A  00E7               	movwf	??_main+1
  2769     052B  300F               	movlw	15
  2770     052C  00E6               	movwf	??_main
  2771     052D  30F1               	movlw	241
  2772     052E                     u4627:
  2773     052E  0B89               	decfsz	9,f
  2774     052F  2D2E               	goto	u4627
  2775     0530  0BE6               	decfsz	??_main,f
  2776     0531  2D2E               	goto	u4627
  2777     0532  0BE7               	decfsz	??_main+1,f
  2778     0533  2D2E               	goto	u4627
  2779     0534                     l3744:
  2780                           
  2781                           ;main.c: 113:     Lcd_Set_Cursor(1, 1);
  2782     0534  01F5               	clrf	Lcd_Set_Cursor@col
  2783     0535  0AF5               	incf	Lcd_Set_Cursor@col,f
  2784     0536  3001               	movlw	1
  2785     0537  3194  243B  3184   	fcall	_Lcd_Set_Cursor
  2786     053A                     l3746:
  2787                           
  2788                           ;main.c: 114:     Lcd_Write_String("PIC16F1719");
  2789     053A  3038               	movlw	low (STR_1| (0+32768))
  2790     053B  0020               	movlb	0	; select bank0
  2791     053C  00B6               	movwf	Lcd_Write_String@str
  2792     053D  3098               	movlw	high (STR_1| (0+32768))
  2793     053E  00B7               	movwf	Lcd_Write_String@str+1
  2794     053F  3193  23D6  3184   	fcall	_Lcd_Write_String
  2795     0542                     l3748:
  2796                           
  2797                           ;main.c: 115:     _delay((unsigned long)((1000)*(32000000/4000.0)));
  2798     0542  3029               	movlw	41
  2799     0543  0020               	movlb	0	; select bank0
  2800     0544  00E7               	movwf	??_main+1
  2801     0545  3096               	movlw	150
  2802     0546  00E6               	movwf	??_main
  2803     0547  307F               	movlw	127
  2804     0548                     u4637:
  2805     0548  0B89               	decfsz	9,f
  2806     0549  2D48               	goto	u4637
  2807     054A  0BE6               	decfsz	??_main,f
  2808     054B  2D48               	goto	u4637
  2809     054C  0BE7               	decfsz	??_main+1,f
  2810     054D  2D48               	goto	u4637
  2811     054E                     l3750:
  2812                           
  2813                           ;main.c: 119:     for (int a = 0; a < 15; a++) {
  2814     054E  0021               	movlb	1	; select bank1
  2815     054F  01C4               	clrf	main@a^(0+128)
  2816     0550  01C5               	clrf	(main@a+1)^(0+128)
  2817     0551                     l3756:
  2818                           
  2819                           ;main.c: 120:         _delay((unsigned long)((250)*(32000000/4000.0)));
  2820     0551  300B               	movlw	11
  2821     0552  0020               	movlb	0	; select bank0
  2822     0553  00E7               	movwf	??_main+1
  2823     0554  3026               	movlw	38
  2824     0555  00E6               	movwf	??_main
  2825     0556  305D               	movlw	93
  2826     0557                     u4647:
  2827     0557  0B89               	decfsz	9,f
  2828     0558  2D57               	goto	u4647
  2829     0559  0BE6               	decfsz	??_main,f
  2830     055A  2D57               	goto	u4647
  2831     055B  0BE7               	decfsz	??_main+1,f
  2832     055C  2D57               	goto	u4647
  2833     055D  3200               	nop2
  2834     055E                     l3758:
  2835                           
  2836                           ;main.c: 121:         Lcd_Shift_Left();
  2837     055E  3193  2314  3184   	fcall	_Lcd_Shift_Left
  2838     0561                     l3760:
  2839                           
  2840                           ;main.c: 122:     }
  2841     0561  3001               	movlw	1
  2842     0562  0021               	movlb	1	; select bank1
  2843     0563  07C4               	addwf	main@a^(0+128),f
  2844     0564  3000               	movlw	0
  2845     0565  3DC5               	addwfc	(main@a+1)^(0+128),f
  2846     0566                     l3762:
  2847     0566  0845               	movf	(main@a+1)^(0+128),w
  2848     0567  3A80               	xorlw	128
  2849     0568  0020               	movlb	0	; select bank0
  2850     0569  00E6               	movwf	??_main
  2851     056A  3080               	movlw	128
  2852     056B  0266               	subwf	??_main,w
  2853     056C  1D03               	skipz
  2854     056D  2D71               	goto	u4435
  2855     056E  300F               	movlw	15
  2856     056F  0021               	movlb	1	; select bank1
  2857     0570  0244               	subwf	main@a^(0+128),w
  2858     0571                     u4435:
  2859     0571  1C03               	skipc
  2860     0572  2D74               	goto	u4431
  2861     0573  2D75               	goto	u4430
  2862     0574                     u4431:
  2863     0574  2D51               	goto	l3756
  2864     0575                     u4430:
  2865     0575                     l3764:
  2866                           
  2867                           ;main.c: 125:     for (int a = 0; a < 15; a++) {
  2868     0575  0021               	movlb	1	; select bank1
  2869     0576  01C6               	clrf	main@a_169^(0+128)
  2870     0577  01C7               	clrf	(main@a_169+1)^(0+128)
  2871     0578                     l3770:
  2872                           
  2873                           ;main.c: 126:         _delay((unsigned long)((250)*(32000000/4000.0)));
  2874     0578  300B               	movlw	11
  2875     0579  0020               	movlb	0	; select bank0
  2876     057A  00E7               	movwf	??_main+1
  2877     057B  3026               	movlw	38
  2878     057C  00E6               	movwf	??_main
  2879     057D  305D               	movlw	93
  2880     057E                     u4657:
  2881     057E  0B89               	decfsz	9,f
  2882     057F  2D7E               	goto	u4657
  2883     0580  0BE6               	decfsz	??_main,f
  2884     0581  2D7E               	goto	u4657
  2885     0582  0BE7               	decfsz	??_main+1,f
  2886     0583  2D7E               	goto	u4657
  2887     0584  3200               	nop2
  2888     0585                     l3772:
  2889                           
  2890                           ;main.c: 127:         Lcd_Shift_Right();
  2891     0585  3193  2319  3184   	fcall	_Lcd_Shift_Right
  2892     0588                     l3774:
  2893                           
  2894                           ;main.c: 128:     }
  2895     0588  3001               	movlw	1
  2896     0589  0021               	movlb	1	; select bank1
  2897     058A  07C6               	addwf	main@a_169^(0+128),f
  2898     058B  3000               	movlw	0
  2899     058C  3DC7               	addwfc	(main@a_169+1)^(0+128),f
  2900     058D                     l3776:
  2901     058D  0847               	movf	(main@a_169+1)^(0+128),w
  2902     058E  3A80               	xorlw	128
  2903     058F  0020               	movlb	0	; select bank0
  2904     0590  00E6               	movwf	??_main
  2905     0591  3080               	movlw	128
  2906     0592  0266               	subwf	??_main,w
  2907     0593  1D03               	skipz
  2908     0594  2D98               	goto	u4445
  2909     0595  300F               	movlw	15
  2910     0596  0021               	movlb	1	; select bank1
  2911     0597  0246               	subwf	main@a_169^(0+128),w
  2912     0598                     u4445:
  2913     0598  1C03               	skipc
  2914     0599  2D9B               	goto	u4441
  2915     059A  2D9C               	goto	u4440
  2916     059B                     u4441:
  2917     059B  2D78               	goto	l3770
  2918     059C                     u4440:
  2919     059C                     l3778:
  2920                           
  2921                           ;main.c: 130:     _delay((unsigned long)((100)*(32000000/4000.0)));
  2922     059C  3005               	movlw	5
  2923     059D  0020               	movlb	0	; select bank0
  2924     059E  00E7               	movwf	??_main+1
  2925     059F  300F               	movlw	15
  2926     05A0  00E6               	movwf	??_main
  2927     05A1  30F1               	movlw	241
  2928     05A2                     u4667:
  2929     05A2  0B89               	decfsz	9,f
  2930     05A3  2DA2               	goto	u4667
  2931     05A4  0BE6               	decfsz	??_main,f
  2932     05A5  2DA2               	goto	u4667
  2933     05A6  0BE7               	decfsz	??_main+1,f
  2934     05A7  2DA2               	goto	u4667
  2935     05A8                     l3780:
  2936                           
  2937                           ;main.c: 134:     for (int c = 0; c <= 10; c++) {
  2938     05A8  0021               	movlb	1	; select bank1
  2939     05A9  01C8               	clrf	main@c^(0+128)
  2940     05AA  01C9               	clrf	(main@c+1)^(0+128)
  2941     05AB                     l3786:
  2942                           
  2943                           ;main.c: 135:         Lcd_Clear();
  2944     05AB  3193  234C  3184   	fcall	_Lcd_Clear
  2945                           
  2946                           ;main.c: 136:         Lcd_Set_Cursor(1, 1);
  2947     05AE  01F5               	clrf	Lcd_Set_Cursor@col
  2948     05AF  0AF5               	incf	Lcd_Set_Cursor@col,f
  2949     05B0  3001               	movlw	1
  2950     05B1  3194  243B  3184   	fcall	_Lcd_Set_Cursor
  2951     05B4                     l3788:
  2952                           
  2953                           ;main.c: 137:         Lcd_Write_Integer(c);
  2954     05B4  0021               	movlb	1	; select bank1
  2955     05B5  0849               	movf	(main@c+1)^(0+128),w
  2956     05B6  0020               	movlb	0	; select bank0
  2957     05B7  00B9               	movwf	Lcd_Write_Integer@v+1
  2958     05B8  0021               	movlb	1	; select bank1
  2959     05B9  0848               	movf	main@c^(0+128),w
  2960     05BA  0020               	movlb	0	; select bank0
  2961     05BB  00B8               	movwf	Lcd_Write_Integer@v
  2962     05BC  3194  2408  3184   	fcall	_Lcd_Write_Integer
  2963     05BF                     l3790:
  2964                           
  2965                           ;main.c: 138:         _delay((unsigned long)((250)*(32000000/4000.0)));
  2966     05BF  300B               	movlw	11
  2967     05C0  0020               	movlb	0	; select bank0
  2968     05C1  00E7               	movwf	??_main+1
  2969     05C2  3026               	movlw	38
  2970     05C3  00E6               	movwf	??_main
  2971     05C4  305D               	movlw	93
  2972     05C5                     u4677:
  2973     05C5  0B89               	decfsz	9,f
  2974     05C6  2DC5               	goto	u4677
  2975     05C7  0BE6               	decfsz	??_main,f
  2976     05C8  2DC5               	goto	u4677
  2977     05C9  0BE7               	decfsz	??_main+1,f
  2978     05CA  2DC5               	goto	u4677
  2979     05CB  3200               	nop2
  2980     05CC                     l3792:
  2981                           
  2982                           ;main.c: 139:     }
  2983     05CC  3001               	movlw	1
  2984     05CD  0021               	movlb	1	; select bank1
  2985     05CE  07C8               	addwf	main@c^(0+128),f
  2986     05CF  3000               	movlw	0
  2987     05D0  3DC9               	addwfc	(main@c+1)^(0+128),f
  2988     05D1                     l3794:
  2989     05D1  0849               	movf	(main@c+1)^(0+128),w
  2990     05D2  3A80               	xorlw	128
  2991     05D3  0020               	movlb	0	; select bank0
  2992     05D4  00E6               	movwf	??_main
  2993     05D5  3080               	movlw	128
  2994     05D6  0266               	subwf	??_main,w
  2995     05D7  1D03               	skipz
  2996     05D8  2DDC               	goto	u4455
  2997     05D9  300B               	movlw	11
  2998     05DA  0021               	movlb	1	; select bank1
  2999     05DB  0248               	subwf	main@c^(0+128),w
  3000     05DC                     u4455:
  3001     05DC  1C03               	skipc
  3002     05DD  2DDF               	goto	u4451
  3003     05DE  2DE0               	goto	u4450
  3004     05DF                     u4451:
  3005     05DF  2DAB               	goto	l3786
  3006     05E0                     u4450:
  3007     05E0                     l3796:
  3008                           
  3009                           ;main.c: 142:     for (float b = 0.0; b <= 5.0; b += 0.5) {
  3010     05E0  3000               	movlw	0
  3011     05E1  0021               	movlb	1	; select bank1
  3012     05E2  00D3               	movwf	(main@b+3)^(0+128)
  3013     05E3  3000               	movlw	0
  3014     05E4  00D2               	movwf	(main@b+2)^(0+128)
  3015     05E5  3000               	movlw	0
  3016     05E6  00D1               	movwf	(main@b+1)^(0+128)
  3017     05E7  3000               	movlw	0
  3018     05E8  00D0               	movwf	main@b^(0+128)
  3019     05E9                     l3798:
  3020     05E9  3040               	movlw	64
  3021     05EA  00F3               	movwf	___flge@ff1+3
  3022     05EB  30A0               	movlw	160
  3023     05EC  00F2               	movwf	___flge@ff1+2
  3024     05ED  3000               	movlw	0
  3025     05EE  00F1               	movwf	___flge@ff1+1
  3026     05EF  3000               	movlw	0
  3027     05F0  00F0               	movwf	___flge@ff1
  3028     05F1  0853               	movf	(main@b+3)^(0+128),w
  3029     05F2  00F7               	movwf	___flge@ff2+3
  3030     05F3  0852               	movf	(main@b+2)^(0+128),w
  3031     05F4  00F6               	movwf	___flge@ff2+2
  3032     05F5  0851               	movf	(main@b+1)^(0+128),w
  3033     05F6  00F5               	movwf	___flge@ff2+1
  3034     05F7  0850               	movf	main@b^(0+128),w
  3035     05F8  00F4               	movwf	___flge@ff2
  3036     05F9  3189  218D  3184   	fcall	___flge
  3037     05FC  1803               	btfsc	3,0
  3038     05FD  2DFF               	goto	u4461
  3039     05FE  2E00               	goto	u4460
  3040     05FF                     u4461:
  3041     05FF  2E01               	goto	l3802
  3042     0600                     u4460:
  3043     0600  2E5E               	goto	l3812
  3044     0601                     l3802:
  3045                           
  3046                           ;main.c: 143:         Lcd_Clear();
  3047     0601  3193  234C  3184   	fcall	_Lcd_Clear
  3048                           
  3049                           ;main.c: 144:         Lcd_Set_Cursor(1, 1);
  3050     0604  01F5               	clrf	Lcd_Set_Cursor@col
  3051     0605  0AF5               	incf	Lcd_Set_Cursor@col,f
  3052     0606  3001               	movlw	1
  3053     0607  3194  243B  3184   	fcall	_Lcd_Set_Cursor
  3054     060A                     l3804:
  3055                           
  3056                           ;main.c: 145:         Lcd_Write_Float(b);
  3057     060A  0021               	movlb	1	; select bank1
  3058     060B  0853               	movf	(main@b+3)^(0+128),w
  3059     060C  0020               	movlb	0	; select bank0
  3060     060D  00DC               	movwf	Lcd_Write_Float@f+3
  3061     060E  0021               	movlb	1	; select bank1
  3062     060F  0852               	movf	(main@b+2)^(0+128),w
  3063     0610  0020               	movlb	0	; select bank0
  3064     0611  00DB               	movwf	Lcd_Write_Float@f+2
  3065     0612  0021               	movlb	1	; select bank1
  3066     0613  0851               	movf	(main@b+1)^(0+128),w
  3067     0614  0020               	movlb	0	; select bank0
  3068     0615  00DA               	movwf	Lcd_Write_Float@f+1
  3069     0616  0021               	movlb	1	; select bank1
  3070     0617  0850               	movf	main@b^(0+128),w
  3071     0618  0020               	movlb	0	; select bank0
  3072     0619  00D9               	movwf	Lcd_Write_Float@f
  3073     061A  3193  238D  3184   	fcall	_Lcd_Write_Float
  3074     061D                     l3806:
  3075                           
  3076                           ;main.c: 146:         _delay((unsigned long)((300)*(32000000/4000.0)));
  3077     061D  300D               	movlw	13
  3078     061E  0020               	movlb	0	; select bank0
  3079     061F  00E7               	movwf	??_main+1
  3080     0620  302D               	movlw	45
  3081     0621  00E6               	movwf	??_main
  3082     0622  30D7               	movlw	215
  3083     0623                     u4687:
  3084     0623  0B89               	decfsz	9,f
  3085     0624  2E23               	goto	u4687
  3086     0625  0BE6               	decfsz	??_main,f
  3087     0626  2E23               	goto	u4687
  3088     0627  0BE7               	decfsz	??_main+1,f
  3089     0628  2E23               	goto	u4687
  3090     0629  3200               	nop2
  3091     062A                     l3808:
  3092                           
  3093                           ;main.c: 147:     }
  3094     062A  303F               	movlw	63
  3095     062B  00F3               	movwf	___fladd@b+3
  3096     062C  3000               	movlw	0
  3097     062D  00F2               	movwf	___fladd@b+2
  3098     062E  3000               	movlw	0
  3099     062F  00F1               	movwf	___fladd@b+1
  3100     0630  3000               	movlw	0
  3101     0631  00F0               	movwf	___fladd@b
  3102     0632  0021               	movlb	1	; select bank1
  3103     0633  0853               	movf	(main@b+3)^(0+128),w
  3104     0634  00F7               	movwf	___fladd@a+3
  3105     0635  0852               	movf	(main@b+2)^(0+128),w
  3106     0636  00F6               	movwf	___fladd@a+2
  3107     0637  0851               	movf	(main@b+1)^(0+128),w
  3108     0638  00F5               	movwf	___fladd@a+1
  3109     0639  0850               	movf	main@b^(0+128),w
  3110     063A  00F4               	movwf	___fladd@a
  3111     063B  3180  204A  3184   	fcall	___fladd
  3112     063E  0873               	movf	?___fladd+3,w
  3113     063F  0021               	movlb	1	; select bank1
  3114     0640  00D3               	movwf	(main@b+3)^(0+128)
  3115     0641  0872               	movf	?___fladd+2,w
  3116     0642  00D2               	movwf	(main@b+2)^(0+128)
  3117     0643  0871               	movf	?___fladd+1,w
  3118     0644  00D1               	movwf	(main@b+1)^(0+128)
  3119     0645  0870               	movf	?___fladd,w
  3120     0646  00D0               	movwf	main@b^(0+128)
  3121     0647                     l3810:
  3122     0647  3040               	movlw	64
  3123     0648  00F3               	movwf	___flge@ff1+3
  3124     0649  30A0               	movlw	160
  3125     064A  00F2               	movwf	___flge@ff1+2
  3126     064B  3000               	movlw	0
  3127     064C  00F1               	movwf	___flge@ff1+1
  3128     064D  3000               	movlw	0
  3129     064E  00F0               	movwf	___flge@ff1
  3130     064F  0853               	movf	(main@b+3)^(0+128),w
  3131     0650  00F7               	movwf	___flge@ff2+3
  3132     0651  0852               	movf	(main@b+2)^(0+128),w
  3133     0652  00F6               	movwf	___flge@ff2+2
  3134     0653  0851               	movf	(main@b+1)^(0+128),w
  3135     0654  00F5               	movwf	___flge@ff2+1
  3136     0655  0850               	movf	main@b^(0+128),w
  3137     0656  00F4               	movwf	___flge@ff2
  3138     0657  3189  218D  3184   	fcall	___flge
  3139     065A  1803               	btfsc	3,0
  3140     065B  2E5D               	goto	u4471
  3141     065C  2E5E               	goto	u4470
  3142     065D                     u4471:
  3143     065D  2E01               	goto	l3802
  3144     065E                     u4470:
  3145     065E                     l3812:
  3146                           
  3147                           ;main.c: 150:     Lcd_Clear();
  3148     065E  3193  234C  3184   	fcall	_Lcd_Clear
  3149                           
  3150                           ;main.c: 151:     Lcd_Set_Cursor(1, 1);
  3151     0661  01F5               	clrf	Lcd_Set_Cursor@col
  3152     0662  0AF5               	incf	Lcd_Set_Cursor@col,f
  3153     0663  3001               	movlw	1
  3154     0664  3194  243B  3184   	fcall	_Lcd_Set_Cursor
  3155     0667                     l3814:
  3156                           
  3157                           ;main.c: 152:     Lcd_Write_String("Pad:");
  3158     0667  3071               	movlw	low (STR_2| (0+32768))
  3159     0668  0020               	movlb	0	; select bank0
  3160     0669  00B6               	movwf	Lcd_Write_String@str
  3161     066A  3098               	movlw	high (STR_2| (0+32768))
  3162     066B  00B7               	movwf	Lcd_Write_String@str+1
  3163     066C  3193  23D6  3184   	fcall	_Lcd_Write_String
  3164     066F                     l3816:
  3165                           
  3166                           ;main.c: 153:     Lcd_Set_Cursor(1, 6);
  3167     066F  3006               	movlw	6
  3168     0670  00F5               	movwf	Lcd_Set_Cursor@col
  3169     0671  3001               	movlw	1
  3170     0672  3194  243B  3184   	fcall	_Lcd_Set_Cursor
  3171     0675                     l3818:
  3172                           
  3173                           ;main.c: 155:     for (int c = 0; c <= 10; c++) {
  3174     0675  0021               	movlb	1	; select bank1
  3175     0676  01CA               	clrf	main@c_173^(0+128)
  3176     0677  01CB               	clrf	(main@c_173+1)^(0+128)
  3177     0678                     l3824:
  3178                           
  3179                           ;main.c: 156:         Lcd_Clear();
  3180     0678  3193  234C  3184   	fcall	_Lcd_Clear
  3181                           
  3182                           ;main.c: 157:         Lcd_Set_Cursor(1, 1);
  3183     067B  01F5               	clrf	Lcd_Set_Cursor@col
  3184     067C  0AF5               	incf	Lcd_Set_Cursor@col,f
  3185     067D  3001               	movlw	1
  3186     067E  3194  243B  3184   	fcall	_Lcd_Set_Cursor
  3187     0681                     l3826:
  3188                           
  3189                           ;main.c: 158:         Lcd_Write_Padded_Integer(c, 4);
  3190     0681  0021               	movlb	1	; select bank1
  3191     0682  084B               	movf	(main@c_173+1)^(0+128),w
  3192     0683  0020               	movlb	0	; select bank0
  3193     0684  00DE               	movwf	Lcd_Write_Padded_Integer@num+1
  3194     0685  0021               	movlb	1	; select bank1
  3195     0686  084A               	movf	main@c_173^(0+128),w
  3196     0687  0020               	movlb	0	; select bank0
  3197     0688  00DD               	movwf	Lcd_Write_Padded_Integer@num
  3198     0689  3004               	movlw	4
  3199     068A  00DF               	movwf	Lcd_Write_Padded_Integer@width
  3200     068B  3000               	movlw	0
  3201     068C  00E0               	movwf	Lcd_Write_Padded_Integer@width+1
  3202     068D  3194  2421  3184   	fcall	_Lcd_Write_Padded_Integer
  3203     0690                     l3828:
  3204                           
  3205                           ;main.c: 159:         _delay((unsigned long)((100)*(32000000/4000.0)));
  3206     0690  3005               	movlw	5
  3207     0691  0020               	movlb	0	; select bank0
  3208     0692  00E7               	movwf	??_main+1
  3209     0693  300F               	movlw	15
  3210     0694  00E6               	movwf	??_main
  3211     0695  30F1               	movlw	241
  3212     0696                     u4697:
  3213     0696  0B89               	decfsz	9,f
  3214     0697  2E96               	goto	u4697
  3215     0698  0BE6               	decfsz	??_main,f
  3216     0699  2E96               	goto	u4697
  3217     069A  0BE7               	decfsz	??_main+1,f
  3218     069B  2E96               	goto	u4697
  3219     069C                     l3830:
  3220                           
  3221                           ;main.c: 160:     }
  3222     069C  3001               	movlw	1
  3223     069D  0021               	movlb	1	; select bank1
  3224     069E  07CA               	addwf	main@c_173^(0+128),f
  3225     069F  3000               	movlw	0
  3226     06A0  3DCB               	addwfc	(main@c_173+1)^(0+128),f
  3227     06A1                     l3832:
  3228     06A1  084B               	movf	(main@c_173+1)^(0+128),w
  3229     06A2  3A80               	xorlw	128
  3230     06A3  0020               	movlb	0	; select bank0
  3231     06A4  00E6               	movwf	??_main
  3232     06A5  3080               	movlw	128
  3233     06A6  0266               	subwf	??_main,w
  3234     06A7  1D03               	skipz
  3235     06A8  2EAC               	goto	u4485
  3236     06A9  300B               	movlw	11
  3237     06AA  0021               	movlb	1	; select bank1
  3238     06AB  024A               	subwf	main@c_173^(0+128),w
  3239     06AC                     u4485:
  3240     06AC  1C03               	skipc
  3241     06AD  2EAF               	goto	u4481
  3242     06AE  2EB0               	goto	u4480
  3243     06AF                     u4481:
  3244     06AF  2E78               	goto	l3824
  3245     06B0                     u4480:
  3246     06B0                     l3834:
  3247                           
  3248                           ;main.c: 163:     unsigned char smiley[8] = {0x00, 0x0A, 0x0A, 0x00, 0x11, 0x0E, 0x00, 0
      +                          x00};
  3249     06B0  30E4               	movlw	low main@F6417
  3250     06B1  0086               	movwf	6
  3251     06B2  3000               	movlw	high main@F6417
  3252     06B3  0087               	movwf	7
  3253     06B4  30B0               	movlw	low main@smiley
  3254     06B5  0084               	movwf	4
  3255     06B6  3000               	movlw	high main@smiley
  3256     06B7  0085               	movwf	5
  3257     06B8  3008               	movlw	8
  3258     06B9  0020               	movlb	0	; select bank0
  3259     06BA  00E6               	movwf	??_main
  3260     06BB                     u4490:
  3261     06BB  0016               	moviw fsr1++
  3262     06BC  001A               	movwi fsr0++
  3263     06BD  0BE6               	decfsz	??_main,f
  3264     06BE  2EBB               	goto	u4490
  3265     06BF                     l3836:
  3266                           
  3267                           ;main.c: 164:     Lcd_Create_Char(0, smiley);
  3268     06BF  30B0               	movlw	(low (main@smiley| 0))& (0+255)
  3269     06C0  00F5               	movwf	Lcd_Create_Char@charmap
  3270     06C1  3000               	movlw	0
  3271     06C2  3195  2533  3184   	fcall	_Lcd_Create_Char
  3272     06C5                     l3838:
  3273                           
  3274                           ;main.c: 165:     Lcd_Clear();
  3275     06C5  3193  234C  3184   	fcall	_Lcd_Clear
  3276     06C8                     l3840:
  3277                           
  3278                           ;main.c: 166:     Lcd_Set_Cursor(1, 1);
  3279     06C8  01F5               	clrf	Lcd_Set_Cursor@col
  3280     06C9  0AF5               	incf	Lcd_Set_Cursor@col,f
  3281     06CA  3001               	movlw	1
  3282     06CB  3194  243B  3184   	fcall	_Lcd_Set_Cursor
  3283     06CE                     l3842:
  3284                           
  3285                           ;main.c: 167:     Lcd_Write_String("S:");
  3286     06CE  3076               	movlw	low (STR_3| (0+32768))
  3287     06CF  0020               	movlb	0	; select bank0
  3288     06D0  00B6               	movwf	Lcd_Write_String@str
  3289     06D1  3098               	movlw	high (STR_3| (0+32768))
  3290     06D2  00B7               	movwf	Lcd_Write_String@str+1
  3291     06D3  3193  23D6  3184   	fcall	_Lcd_Write_String
  3292     06D6                     l3844:
  3293                           
  3294                           ;main.c: 168:     Lcd_Set_Cursor(1, 3);
  3295     06D6  3003               	movlw	3
  3296     06D7  00F5               	movwf	Lcd_Set_Cursor@col
  3297     06D8  3001               	movlw	1
  3298     06D9  3194  243B  3184   	fcall	_Lcd_Set_Cursor
  3299     06DC                     l3846:
  3300                           
  3301                           ;main.c: 169:     Lcd_Display_Custom_Char(0);
  3302     06DC  3000               	movlw	0
  3303     06DD  3193  231E  3184   	fcall	_Lcd_Display_Custom_Char
  3304     06E0                     l3848:
  3305                           
  3306                           ;main.c: 170:     _delay((unsigned long)((2000)*(32000000/4000.0)));
  3307     06E0  3052               	movlw	82
  3308     06E1  0020               	movlb	0	; select bank0
  3309     06E2  00E7               	movwf	??_main+1
  3310     06E3  302B               	movlw	43
  3311     06E4  00E6               	movwf	??_main
  3312     06E5  3000               	movlw	0
  3313     06E6                     u4707:
  3314     06E6  0B89               	decfsz	9,f
  3315     06E7  2EE6               	goto	u4707
  3316     06E8  0BE6               	decfsz	??_main,f
  3317     06E9  2EE6               	goto	u4707
  3318     06EA  0BE7               	decfsz	??_main+1,f
  3319     06EB  2EE6               	goto	u4707
  3320     06EC  0000               	nop
  3321     06ED                     l3850:
  3322                           
  3323                           ;main.c: 173:     Lcd_Clear();
  3324     06ED  3193  234C  3184   	fcall	_Lcd_Clear
  3325     06F0                     l3852:
  3326                           
  3327                           ;main.c: 174:     Lcd_Scroll_Text("This is a long scrolling text message.");
  3328     06F0  3000               	movlw	low (STR_4| (0+32768))
  3329     06F1  0020               	movlb	0	; select bank0
  3330     06F2  00B8               	movwf	Lcd_Scroll_Text@str
  3331     06F3  3098               	movlw	high (STR_4| (0+32768))
  3332     06F4  00B9               	movwf	Lcd_Scroll_Text@str+1
  3333     06F5  3188  2006  3184   	fcall	_Lcd_Scroll_Text
  3334     06F8                     l3854:
  3335                           
  3336                           ;main.c: 175:     _delay((unsigned long)((1000)*(32000000/4000.0)));
  3337     06F8  3029               	movlw	41
  3338     06F9  0020               	movlb	0	; select bank0
  3339     06FA  00E7               	movwf	??_main+1
  3340     06FB  3096               	movlw	150
  3341     06FC  00E6               	movwf	??_main
  3342     06FD  307F               	movlw	127
  3343     06FE                     u4717:
  3344     06FE  0B89               	decfsz	9,f
  3345     06FF  2EFE               	goto	u4717
  3346     0700  0BE6               	decfsz	??_main,f
  3347     0701  2EFE               	goto	u4717
  3348     0702  0BE7               	decfsz	??_main+1,f
  3349     0703  2EFE               	goto	u4717
  3350     0704                     l3856:
  3351                           
  3352                           ;main.c: 178:     Lcd_Clear();
  3353     0704  3193  234C  3184   	fcall	_Lcd_Clear
  3354     0707                     l3858:
  3355                           
  3356                           ;main.c: 179:     Lcd_Center_Text(1, "Welcome!");
  3357     0707  3056               	movlw	low (STR_5| (0+32768))
  3358     0708  0020               	movlb	0	; select bank0
  3359     0709  00B8               	movwf	Lcd_Center_Text@str
  3360     070A  3098               	movlw	high (STR_5| (0+32768))
  3361     070B  00B9               	movwf	Lcd_Center_Text@str+1
  3362     070C  3001               	movlw	1
  3363     070D  3195  2596  3184   	fcall	_Lcd_Center_Text
  3364     0710                     l3860:
  3365                           
  3366                           ;main.c: 180:     _delay((unsigned long)((2000)*(32000000/4000.0)));
  3367     0710  3052               	movlw	82
  3368     0711  0020               	movlb	0	; select bank0
  3369     0712  00E7               	movwf	??_main+1
  3370     0713  302B               	movlw	43
  3371     0714  00E6               	movwf	??_main
  3372     0715  3000               	movlw	0
  3373     0716                     u4727:
  3374     0716  0B89               	decfsz	9,f
  3375     0717  2F16               	goto	u4727
  3376     0718  0BE6               	decfsz	??_main,f
  3377     0719  2F16               	goto	u4727
  3378     071A  0BE7               	decfsz	??_main+1,f
  3379     071B  2F16               	goto	u4727
  3380     071C  0000               	nop
  3381     071D                     l3862:
  3382                           
  3383                           ;main.c: 183:     Lcd_Progress_Bar_Init();
  3384     071D  3197  275C  3184   	fcall	_Lcd_Progress_Bar_Init
  3385     0720                     l3864:
  3386                           
  3387                           ;main.c: 185:     for (int progress = 0; progress <= 100; progress += 5) {
  3388     0720  0021               	movlb	1	; select bank1
  3389     0721  01CC               	clrf	main@progress^(0+128)
  3390     0722  01CD               	clrf	(main@progress+1)^(0+128)
  3391     0723                     l3866:
  3392     0723  084D               	movf	(main@progress+1)^(0+128),w
  3393     0724  3A80               	xorlw	128
  3394     0725  0020               	movlb	0	; select bank0
  3395     0726  00E6               	movwf	??_main
  3396     0727  3080               	movlw	128
  3397     0728  0266               	subwf	??_main,w
  3398     0729  1D03               	skipz
  3399     072A  2F2E               	goto	u4505
  3400     072B  3065               	movlw	101
  3401     072C  0021               	movlb	1	; select bank1
  3402     072D  024C               	subwf	main@progress^(0+128),w
  3403     072E                     u4505:
  3404     072E  1C03               	skipc
  3405     072F  2F31               	goto	u4501
  3406     0730  2F32               	goto	u4500
  3407     0731                     u4501:
  3408     0731  2F33               	goto	l3870
  3409     0732                     u4500:
  3410     0732  2F6C               	goto	l3884
  3411     0733                     l3870:
  3412                           
  3413                           ;main.c: 186:         Lcd_Clear();
  3414     0733  3193  234C  3184   	fcall	_Lcd_Clear
  3415                           
  3416                           ;main.c: 187:         Lcd_Set_Cursor(1, 1);
  3417     0736  01F5               	clrf	Lcd_Set_Cursor@col
  3418     0737  0AF5               	incf	Lcd_Set_Cursor@col,f
  3419     0738  3001               	movlw	1
  3420     0739  3194  243B  3184   	fcall	_Lcd_Set_Cursor
  3421     073C                     l3872:
  3422                           
  3423                           ;main.c: 188:         Lcd_Write_String("Progress:");
  3424     073C  3043               	movlw	low (STR_6| (0+32768))
  3425     073D  0020               	movlb	0	; select bank0
  3426     073E  00B6               	movwf	Lcd_Write_String@str
  3427     073F  3098               	movlw	high (STR_6| (0+32768))
  3428     0740  00B7               	movwf	Lcd_Write_String@str+1
  3429     0741  3193  23D6  3184   	fcall	_Lcd_Write_String
  3430     0744                     l3874:
  3431                           
  3432                           ;main.c: 189:         Lcd_Set_Cursor(1, 10);
  3433     0744  300A               	movlw	10
  3434     0745  00F5               	movwf	Lcd_Set_Cursor@col
  3435     0746  3001               	movlw	1
  3436     0747  3194  243B  3184   	fcall	_Lcd_Set_Cursor
  3437     074A                     l3876:
  3438                           
  3439                           ;main.c: 190:         Lcd_Progress_Bar(progress, 100);
  3440     074A  0021               	movlb	1	; select bank1
  3441     074B  084D               	movf	(main@progress+1)^(0+128),w
  3442     074C  0020               	movlb	0	; select bank0
  3443     074D  00A5               	movwf	Lcd_Progress_Bar@progress+1
  3444     074E  0021               	movlb	1	; select bank1
  3445     074F  084C               	movf	main@progress^(0+128),w
  3446     0750  0020               	movlb	0	; select bank0
  3447     0751  00A4               	movwf	Lcd_Progress_Bar@progress
  3448     0752  3064               	movlw	100
  3449     0753  00A6               	movwf	Lcd_Progress_Bar@max
  3450     0754  3000               	movlw	0
  3451     0755  00A7               	movwf	Lcd_Progress_Bar@max+1
  3452     0756  318B  233E  3184   	fcall	_Lcd_Progress_Bar
  3453     0759                     l3878:
  3454                           
  3455                           ;main.c: 191:         _delay((unsigned long)((300)*(32000000/4000.0)));
  3456     0759  300D               	movlw	13
  3457     075A  0020               	movlb	0	; select bank0
  3458     075B  00E7               	movwf	??_main+1
  3459     075C  302D               	movlw	45
  3460     075D  00E6               	movwf	??_main
  3461     075E  30D7               	movlw	215
  3462     075F                     u4737:
  3463     075F  0B89               	decfsz	9,f
  3464     0760  2F5F               	goto	u4737
  3465     0761  0BE6               	decfsz	??_main,f
  3466     0762  2F5F               	goto	u4737
  3467     0763  0BE7               	decfsz	??_main+1,f
  3468     0764  2F5F               	goto	u4737
  3469     0765  3200               	nop2
  3470     0766                     l3880:
  3471                           
  3472                           ;main.c: 192:     }
  3473     0766  3005               	movlw	5
  3474     0767  0021               	movlb	1	; select bank1
  3475     0768  07CC               	addwf	main@progress^(0+128),f
  3476     0769  3000               	movlw	0
  3477     076A  3DCD               	addwfc	(main@progress+1)^(0+128),f
  3478     076B  2F23               	goto	l3866
  3479     076C                     l3884:
  3480                           
  3481                           ;main.c: 195:     Lcd_Battery_Init();
  3482     076C  318A  2217  3184   	fcall	_Lcd_Battery_Init
  3483     076F                     l3886:
  3484                           
  3485                           ;main.c: 198:     int battery_levels[] = {0, 20, 40, 60, 80, 100};
  3486     076F  30D0               	movlw	low main@F6420
  3487     0770  0086               	movwf	6
  3488     0771  3001               	movlw	high main@F6420
  3489     0772  0087               	movwf	7
  3490     0773  30B8               	movlw	low main@battery_levels
  3491     0774  0084               	movwf	4
  3492     0775  3000               	movlw	high main@battery_levels
  3493     0776  0085               	movwf	5
  3494     0777  300C               	movlw	12
  3495     0778  0020               	movlb	0	; select bank0
  3496     0779  00E6               	movwf	??_main
  3497     077A                     u4510:
  3498     077A  0016               	moviw fsr1++
  3499     077B  001A               	movwi fsr0++
  3500     077C  0BE6               	decfsz	??_main,f
  3501     077D  2F7A               	goto	u4510
  3502     077E                     l3888:
  3503                           
  3504                           ;main.c: 199:     for (int i = 0; i < 6; i++) {
  3505     077E  0021               	movlb	1	; select bank1
  3506     077F  01CE               	clrf	main@i^(0+128)
  3507     0780  01CF               	clrf	(main@i+1)^(0+128)
  3508     0781                     l3890:
  3509     0781  084F               	movf	(main@i+1)^(0+128),w
  3510     0782  3A80               	xorlw	128
  3511     0783  0020               	movlb	0	; select bank0
  3512     0784  00E6               	movwf	??_main
  3513     0785  3080               	movlw	128
  3514     0786  0266               	subwf	??_main,w
  3515     0787  1D03               	skipz
  3516     0788  2F8C               	goto	u4525
  3517     0789  3006               	movlw	6
  3518     078A  0021               	movlb	1	; select bank1
  3519     078B  024E               	subwf	main@i^(0+128),w
  3520     078C                     u4525:
  3521     078C  1C03               	skipc
  3522     078D  2F8F               	goto	u4521
  3523     078E  2F90               	goto	u4520
  3524     078F                     u4521:
  3525     078F  2F91               	goto	l3894
  3526     0790                     u4520:
  3527     0790  2FB1               	goto	l3902
  3528     0791                     l3894:
  3529                           
  3530                           ;main.c: 200:         Lcd_Display_Battery(battery_levels[i]);
  3531     0791  0021               	movlb	1	; select bank1
  3532     0792  354E               	lslf	main@i^(0+128),w
  3533     0793  3EB8               	addlw	(low (main@battery_levels| 0))& (0+255)
  3534     0794  0086               	movwf	6
  3535     0795  0187               	clrf	7
  3536     0796  3F40               	moviw [0]fsr1
  3537     0797  0020               	movlb	0	; select bank0
  3538     0798  00DD               	movwf	Lcd_Display_Battery@percentage
  3539     0799  3F41               	moviw [1]fsr1
  3540     079A  00DE               	movwf	Lcd_Display_Battery@percentage+1
  3541     079B  318B  23E2  3184   	fcall	_Lcd_Display_Battery
  3542     079E                     l3896:
  3543                           
  3544                           ;main.c: 201:         _delay((unsigned long)((2000)*(32000000/4000.0)));
  3545     079E  3052               	movlw	82
  3546     079F  0020               	movlb	0	; select bank0
  3547     07A0  00E7               	movwf	??_main+1
  3548     07A1  302B               	movlw	43
  3549     07A2  00E6               	movwf	??_main
  3550     07A3  3000               	movlw	0
  3551     07A4                     u4747:
  3552     07A4  0B89               	decfsz	9,f
  3553     07A5  2FA4               	goto	u4747
  3554     07A6  0BE6               	decfsz	??_main,f
  3555     07A7  2FA4               	goto	u4747
  3556     07A8  0BE7               	decfsz	??_main+1,f
  3557     07A9  2FA4               	goto	u4747
  3558     07AA  0000               	nop
  3559     07AB                     l3898:
  3560                           
  3561                           ;main.c: 202:     }
  3562     07AB  3001               	movlw	1
  3563     07AC  0021               	movlb	1	; select bank1
  3564     07AD  07CE               	addwf	main@i^(0+128),f
  3565     07AE  3000               	movlw	0
  3566     07AF  3DCF               	addwfc	(main@i+1)^(0+128),f
  3567     07B0  2F81               	goto	l3890
  3568     07B1                     l3902:
  3569                           
  3570                           ;main.c: 204:     Lcd_Signal_Init();
  3571     07B1  3196  2640  3184   	fcall	_Lcd_Signal_Init
  3572     07B4                     l3904:
  3573                           
  3574                           ;main.c: 205:     Lcd_Display_Signal(1);
  3575     07B4  3001               	movlw	1
  3576     07B5  0020               	movlb	0	; select bank0
  3577     07B6  00B8               	movwf	Lcd_Display_Signal@level
  3578     07B7  3000               	movlw	0
  3579     07B8  00B9               	movwf	Lcd_Display_Signal@level+1
  3580     07B9  3180  200B  3184   	fcall	_Lcd_Display_Signal
  3581     07BC                     l3906:
  3582                           
  3583                           ;main.c: 207:     _delay((unsigned long)((2000)*(32000000/4000.0)));
  3584     07BC  3052               	movlw	82
  3585     07BD  0020               	movlb	0	; select bank0
  3586     07BE  00E7               	movwf	??_main+1
  3587     07BF  302B               	movlw	43
  3588     07C0  00E6               	movwf	??_main
  3589     07C1  3000               	movlw	0
  3590     07C2                     u4757:
  3591     07C2  0B89               	decfsz	9,f
  3592     07C3  2FC2               	goto	u4757
  3593     07C4  0BE6               	decfsz	??_main,f
  3594     07C5  2FC2               	goto	u4757
  3595     07C6  0BE7               	decfsz	??_main+1,f
  3596     07C7  2FC2               	goto	u4757
  3597     07C8  0000               	nop
  3598     07C9  2CAF               	goto	l3718
  3599     07CA  3180  2802         	ljmp	start
  3600     07CC                     __end_of_main:
  3601                           
  3602                           	psect	text1
  3603     137B                     __ptext1:	
  3604 ;; *************** function _initMain *****************
  3605 ;; Defined at:
  3606 ;;		line 51 in file "main.c"
  3607 ;; Parameters:    Size  Location     Type
  3608 ;;		None
  3609 ;; Auto vars:     Size  Location     Type
  3610 ;;		None
  3611 ;; Return value:  Size  Location     Type
  3612 ;;                  1    wreg      void 
  3613 ;; Registers used:
  3614 ;;		wreg, status,2, status,0, pclath, cstack
  3615 ;; Tracked objects:
  3616 ;;		On entry : 0/0
  3617 ;;		On exit  : 0/0
  3618 ;;		Unchanged: 0/0
  3619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3622 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3623 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3624 ;;Total ram usage:        1 bytes
  3625 ;; Hardware stack levels used: 1
  3626 ;; Hardware stack levels required when called: 1
  3627 ;; This function calls:
  3628 ;;		_internal_32
  3629 ;; This function is called by:
  3630 ;;		_main
  3631 ;; This function uses a non-reentrant model
  3632 ;;
  3633                           
  3634     137B                     _initMain:	
  3635                           ;psect for function _initMain
  3636                           
  3637     137B                     l3230:	
  3638                           ;incstack = 0
  3639                           ; Regs used in _initMain: [wreg+status,2+status,0+pclath+cstack]
  3640                           
  3641                           
  3642                           ;main.c: 53:     internal_32();
  3643     137B  3193  232D  3193   	fcall	_internal_32
  3644     137E                     l3232:
  3645                           
  3646                           ;main.c: 56:     _delay((unsigned long)((10)*(32000000/4000.0)));
  3647     137E  3068               	movlw	104
  3648     137F  00F0               	movwf	??_initMain
  3649     1380  30E4               	movlw	228
  3650     1381                     u4767:
  3651     1381  0B89               	decfsz	9,f
  3652     1382  2B81               	goto	u4767
  3653     1383  0BF0               	decfsz	??_initMain,f
  3654     1384  2B81               	goto	u4767
  3655     1385  3200               	nop2
  3656     1386                     l3234:
  3657                           
  3658                           ;main.c: 59:     TRISD = 0x00;
  3659     1386  0021               	movlb	1	; select bank1
  3660     1387  018F               	clrf	15	;volatile
  3661     1388                     l3236:
  3662                           
  3663                           ;main.c: 60:     ANSELD = 0x00;
  3664     1388  0023               	movlb	3	; select bank3
  3665     1389  018F               	clrf	15	;volatile
  3666     138A                     l3238:
  3667                           
  3668                           ;main.c: 61:     PORTD = 0x00;
  3669     138A  0020               	movlb	0	; select bank0
  3670     138B  018F               	clrf	15	;volatile
  3671     138C                     l67:
  3672     138C  0008               	return
  3673     138D                     __end_of_initMain:
  3674                           
  3675                           	psect	text2
  3676     132D                     __ptext2:	
  3677 ;; *************** function _internal_32 *****************
  3678 ;; Defined at:
  3679 ;;		line 32 in file "PIC16F1719_Internal.c"
  3680 ;; Parameters:    Size  Location     Type
  3681 ;;		None
  3682 ;; Auto vars:     Size  Location     Type
  3683 ;;		None
  3684 ;; Return value:  Size  Location     Type
  3685 ;;                  1    wreg      void 
  3686 ;; Registers used:
  3687 ;;		None
  3688 ;; Tracked objects:
  3689 ;;		On entry : 0/0
  3690 ;;		On exit  : 0/0
  3691 ;;		Unchanged: 0/0
  3692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3697 ;;Total ram usage:        0 bytes
  3698 ;; Hardware stack levels used: 1
  3699 ;; This function calls:
  3700 ;;		Nothing
  3701 ;; This function is called by:
  3702 ;;		_initMain
  3703 ;; This function uses a non-reentrant model
  3704 ;;
  3705                           
  3706     132D                     _internal_32:	
  3707                           ;psect for function _internal_32
  3708                           
  3709     132D                     l3112:	
  3710                           ;incstack = 0
  3711                           ; Regs used in _internal_32: []
  3712                           
  3713                           
  3714                           ;PIC16F1719_Internal.c: 34:     SCS0 = 0;
  3715     132D  0021               	movlb	1	; select bank1
  3716     132E  1019               	bcf	25,0	;volatile
  3717                           
  3718                           ;PIC16F1719_Internal.c: 35:     SCS1 = 0;
  3719     132F  1099               	bcf	25,1	;volatile
  3720                           
  3721                           ;PIC16F1719_Internal.c: 38:     IRCF0 = 0;
  3722     1330  1199               	bcf	25,3	;volatile
  3723                           
  3724                           ;PIC16F1719_Internal.c: 39:     IRCF1 = 1;
  3725     1331  1619               	bsf	25,4	;volatile
  3726                           
  3727                           ;PIC16F1719_Internal.c: 40:     IRCF2 = 1;
  3728     1332  1699               	bsf	25,5	;volatile
  3729                           
  3730                           ;PIC16F1719_Internal.c: 41:     IRCF3 = 1;
  3731     1333  1719               	bsf	25,6	;volatile
  3732                           
  3733                           ;PIC16F1719_Internal.c: 44:     SPLLEN = 1;
  3734     1334  1799               	bsf	25,7	;volatile
  3735     1335                     l110:
  3736     1335  0008               	return
  3737     1336                     __end_of_internal_32:
  3738                           
  3739                           	psect	text3
  3740     1421                     __ptext3:	
  3741 ;; *************** function _Lcd_Write_Padded_Integer *****************
  3742 ;; Defined at:
  3743 ;;		line 313 in file "SC1601_LCD.c"
  3744 ;; Parameters:    Size  Location     Type
  3745 ;;  num             2   61[BANK0 ] int 
  3746 ;;  width           2   63[BANK0 ] int 
  3747 ;; Auto vars:     Size  Location     Type
  3748 ;;  buf            16    0[BANK1 ] unsigned char [16]
  3749 ;; Return value:  Size  Location     Type
  3750 ;;                  1    wreg      void 
  3751 ;; Registers used:
  3752 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3753 ;; Tracked objects:
  3754 ;;		On entry : 0/0
  3755 ;;		On exit  : 0/0
  3756 ;;		Unchanged: 0/0
  3757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3758 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3759 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3761 ;;      Totals:         0       4      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3762 ;;Total ram usage:       20 bytes
  3763 ;; Hardware stack levels used: 1
  3764 ;; Hardware stack levels required when called: 8
  3765 ;; This function calls:
  3766 ;;		_Lcd_Write_String
  3767 ;;		_sprintf
  3768 ;; This function is called by:
  3769 ;;		_main
  3770 ;; This function uses a non-reentrant model
  3771 ;;
  3772                           
  3773     1421                     _Lcd_Write_Padded_Integer:	
  3774                           ;psect for function _Lcd_Write_Padded_Integer
  3775                           
  3776     1421                     l3278:	
  3777                           ;incstack = 0
  3778                           ; Regs used in _Lcd_Write_Padded_Integer: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3779                           
  3780                           
  3781                           ;SC1601_LCD.c: 313: void Lcd_Write_Padded_Integer(int num, int width);SC1601_LCD.c: 314:
      +                           {;SC1601_LCD.c: 315:     char buf[16];;SC1601_LCD.c: 316:     sprintf(buf, "%0*d", widt
      +                          h, num);
  3782     1421  306C               	movlw	low (STR_8| (0+32768))
  3783     1422  0020               	movlb	0	; select bank0
  3784     1423  00C9               	movwf	sprintf@fmt
  3785     1424  3098               	movlw	high (STR_8| (0+32768))
  3786     1425  00CA               	movwf	sprintf@fmt+1
  3787     1426  0860               	movf	Lcd_Write_Padded_Integer@width+1,w
  3788     1427  00CC               	movwf	?_sprintf+3
  3789     1428  085F               	movf	Lcd_Write_Padded_Integer@width,w
  3790     1429  00CB               	movwf	?_sprintf+2
  3791     142A  085E               	movf	Lcd_Write_Padded_Integer@num+1,w
  3792     142B  00CE               	movwf	?_sprintf+5
  3793     142C  085D               	movf	Lcd_Write_Padded_Integer@num,w
  3794     142D  00CD               	movwf	?_sprintf+4
  3795     142E  30A0               	movlw	(low (Lcd_Write_Padded_Integer@buf| 0))& (0+255)
  3796     142F  3194  248F  3194   	fcall	_sprintf
  3797     1432                     l3280:
  3798                           
  3799                           ;SC1601_LCD.c: 317:     Lcd_Write_String(buf);
  3800     1432  30A0               	movlw	low Lcd_Write_Padded_Integer@buf
  3801     1433  0020               	movlb	0	; select bank0
  3802     1434  00B6               	movwf	Lcd_Write_String@str
  3803     1435  3000               	movlw	high Lcd_Write_Padded_Integer@buf
  3804     1436  00B7               	movwf	Lcd_Write_String@str+1
  3805     1437  3193  23D6  3194   	fcall	_Lcd_Write_String
  3806     143A                     l217:
  3807     143A  0008               	return
  3808     143B                     __end_of_Lcd_Write_Padded_Integer:
  3809                           
  3810                           	psect	text4
  3811     1408                     __ptext4:	
  3812 ;; *************** function _Lcd_Write_Integer *****************
  3813 ;; Defined at:
  3814 ;;		line 283 in file "SC1601_LCD.c"
  3815 ;; Parameters:    Size  Location     Type
  3816 ;;  v               2   24[BANK0 ] int 
  3817 ;; Auto vars:     Size  Location     Type
  3818 ;;  buf             8   26[BANK0 ] unsigned char [8]
  3819 ;; Return value:  Size  Location     Type
  3820 ;;                  1    wreg      void 
  3821 ;; Registers used:
  3822 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3823 ;; Tracked objects:
  3824 ;;		On entry : 0/0
  3825 ;;		On exit  : 0/0
  3826 ;;		Unchanged: 0/0
  3827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3828 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3829 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3831 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3832 ;;Total ram usage:       10 bytes
  3833 ;; Hardware stack levels used: 1
  3834 ;; Hardware stack levels required when called: 3
  3835 ;; This function calls:
  3836 ;;		_Lcd_Write_String
  3837 ;;		_itoa
  3838 ;; This function is called by:
  3839 ;;		_main
  3840 ;; This function uses a non-reentrant model
  3841 ;;
  3842                           
  3843     1408                     _Lcd_Write_Integer:	
  3844                           ;psect for function _Lcd_Write_Integer
  3845                           
  3846     1408                     l3706:	
  3847                           ;incstack = 0
  3848                           ; Regs used in _Lcd_Write_Integer: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3849                           
  3850                           
  3851                           ;SC1601_LCD.c: 283: void Lcd_Write_Integer(int v);SC1601_LCD.c: 284: {;SC1601_LCD.c: 285
      +                          :     char buf[8];;SC1601_LCD.c: 286:     Lcd_Write_String(itoa(buf, v, 10));
  3852     1408  303A               	movlw	low Lcd_Write_Integer@buf
  3853     1409  0020               	movlb	0	; select bank0
  3854     140A  00A4               	movwf	itoa@buf
  3855     140B  3000               	movlw	high Lcd_Write_Integer@buf
  3856     140C  00A5               	movwf	itoa@buf+1
  3857     140D  0839               	movf	Lcd_Write_Integer@v+1,w
  3858     140E  00A7               	movwf	itoa@value+1
  3859     140F  0838               	movf	Lcd_Write_Integer@v,w
  3860     1410  00A6               	movwf	itoa@value
  3861     1411  300A               	movlw	10
  3862     1412  00A8               	movwf	itoa@base
  3863     1413  3000               	movlw	0
  3864     1414  00A9               	movwf	itoa@base+1
  3865     1415  318A  22A4  3194   	fcall	_itoa
  3866     1418  0020               	movlb	0	; select bank0
  3867     1419  0825               	movf	?_itoa+1,w
  3868     141A  00B7               	movwf	Lcd_Write_String@str+1
  3869     141B  0824               	movf	?_itoa,w
  3870     141C  00B6               	movwf	Lcd_Write_String@str
  3871     141D  3193  23D6  3194   	fcall	_Lcd_Write_String
  3872     1420                     l211:
  3873     1420  0008               	return
  3874     1421                     __end_of_Lcd_Write_Integer:
  3875                           
  3876                           	psect	text5
  3877     138D                     __ptext5:	
  3878 ;; *************** function _Lcd_Write_Float *****************
  3879 ;; Defined at:
  3880 ;;		line 296 in file "SC1601_LCD.c"
  3881 ;; Parameters:    Size  Location     Type
  3882 ;;  f               4   57[BANK0 ] float 
  3883 ;; Auto vars:     Size  Location     Type
  3884 ;;  status          2   62[BANK0 ] int 
  3885 ;;  buf             1   61[BANK0 ] PTR unsigned char 
  3886 ;;		 -> ftoa@buf(16), 
  3887 ;; Return value:  Size  Location     Type
  3888 ;;                  1    wreg      void 
  3889 ;; Registers used:
  3890 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3891 ;; Tracked objects:
  3892 ;;		On entry : 0/0
  3893 ;;		On exit  : 0/0
  3894 ;;		Unchanged: 0/0
  3895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3896 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3897 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3899 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3900 ;;Total ram usage:        7 bytes
  3901 ;; Hardware stack levels used: 1
  3902 ;; Hardware stack levels required when called: 3
  3903 ;; This function calls:
  3904 ;;		_Lcd_Write_String
  3905 ;;		_ftoa
  3906 ;; This function is called by:
  3907 ;;		_main
  3908 ;; This function uses a non-reentrant model
  3909 ;;
  3910                           
  3911     138D                     _Lcd_Write_Float:	
  3912                           ;psect for function _Lcd_Write_Float
  3913                           
  3914     138D                     l3708:	
  3915                           ;incstack = 0
  3916                           ; Regs used in _Lcd_Write_Float: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3917                           
  3918                           
  3919                           ;SC1601_LCD.c: 296: void Lcd_Write_Float(float f);SC1601_LCD.c: 297: {;SC1601_LCD.c: 298
      +                          :     char* buf;;SC1601_LCD.c: 299:     int status;;SC1601_LCD.c: 300:     buf = ftoa(f,
      +                           &status);
  3920     138D  0020               	movlb	0	; select bank0
  3921     138E  085C               	movf	Lcd_Write_Float@f+3,w
  3922     138F  00C7               	movwf	ftoa@f+3
  3923     1390  085B               	movf	Lcd_Write_Float@f+2,w
  3924     1391  00C6               	movwf	ftoa@f+2
  3925     1392  085A               	movf	Lcd_Write_Float@f+1,w
  3926     1393  00C5               	movwf	ftoa@f+1
  3927     1394  0859               	movf	Lcd_Write_Float@f,w
  3928     1395  00C4               	movwf	ftoa@f
  3929     1396  305E               	movlw	(low (Lcd_Write_Float@status| 0))& (0+255)
  3930     1397  00C8               	movwf	ftoa@status
  3931     1398  318E  26C0  3193   	fcall	_ftoa
  3932     139B  0020               	movlb	0	; select bank0
  3933     139C  00DD               	movwf	Lcd_Write_Float@buf
  3934     139D                     l3710:
  3935                           
  3936                           ;SC1601_LCD.c: 301:     Lcd_Write_String(buf);
  3937     139D  085D               	movf	Lcd_Write_Float@buf,w
  3938     139E  00B6               	movwf	Lcd_Write_String@str
  3939     139F  3001               	movlw	1
  3940     13A0  00B7               	movwf	Lcd_Write_String@str+1
  3941     13A1  3193  23D6  3193   	fcall	_Lcd_Write_String
  3942     13A4                     l214:
  3943     13A4  0008               	return
  3944     13A5                     __end_of_Lcd_Write_Float:
  3945                           
  3946                           	psect	text6
  3947     0EC0                     __ptext6:	
  3948 ;; *************** function _ftoa *****************
  3949 ;; Defined at:
  3950 ;;		line 241 in file "SC1601_LCD.c"
  3951 ;; Parameters:    Size  Location     Type
  3952 ;;  f               4   36[BANK0 ] float 
  3953 ;;  status          1   40[BANK0 ] PTR int 
  3954 ;;		 -> Lcd_Write_Float@status(2), 
  3955 ;; Auto vars:     Size  Location     Type
  3956 ;;  frac_part       4   50[BANK0 ] float 
  3957 ;;  int_part        2   54[BANK0 ] int 
  3958 ;;  frac_digits     2   48[BANK0 ] int 
  3959 ;;  frac_as_int     2   46[BANK0 ] int 
  3960 ;;  ptr             1   56[BANK0 ] PTR unsigned char 
  3961 ;;		 -> ftoa@buf(16), 
  3962 ;; Return value:  Size  Location     Type
  3963 ;;                  1    wreg      PTR unsigned char 
  3964 ;; Registers used:
  3965 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3966 ;; Tracked objects:
  3967 ;;		On entry : 0/0
  3968 ;;		On exit  : 0/0
  3969 ;;		Unchanged: 0/0
  3970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3971 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3972 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3973 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3974 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3975 ;;Total ram usage:       21 bytes
  3976 ;; Hardware stack levels used: 1
  3977 ;; Hardware stack levels required when called: 2
  3978 ;; This function calls:
  3979 ;;		___flge
  3980 ;;		___flmul
  3981 ;;		___flneg
  3982 ;;		___flsub
  3983 ;;		___fltol
  3984 ;;		___xxtofl
  3985 ;;		_itoa
  3986 ;; This function is called by:
  3987 ;;		_Lcd_Write_Float
  3988 ;; This function uses a non-reentrant model
  3989 ;;
  3990                           
  3991     0EC0                     _ftoa:	
  3992                           ;psect for function _ftoa
  3993                           
  3994     0EC0                     l3666:	
  3995                           ;incstack = 0
  3996                           ; Regs used in _ftoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3997                           
  3998                           
  3999                           ;SC1601_LCD.c: 242:     static char buf[16];;SC1601_LCD.c: 243:     char* ptr = buf;
  4000     0EC0  30C0               	movlw	(low (ftoa@buf| (0+256)))& (0+255)
  4001     0EC1  0020               	movlb	0	; select bank0
  4002     0EC2  00D8               	movwf	ftoa@ptr
  4003     0EC3                     l3668:
  4004                           
  4005                           ;SC1601_LCD.c: 244:     int int_part = (int)f;
  4006     0EC3  0847               	movf	ftoa@f+3,w
  4007     0EC4  00BD               	movwf	___fltol@f1+3
  4008     0EC5  0846               	movf	ftoa@f+2,w
  4009     0EC6  00BC               	movwf	___fltol@f1+2
  4010     0EC7  0845               	movf	ftoa@f+1,w
  4011     0EC8  00BB               	movwf	___fltol@f1+1
  4012     0EC9  0844               	movf	ftoa@f,w
  4013     0ECA  00BA               	movwf	___fltol@f1
  4014     0ECB  3189  211C  318E   	fcall	___fltol
  4015     0ECE  0020               	movlb	0	; select bank0
  4016     0ECF  083B               	movf	?___fltol+1,w
  4017     0ED0  00D7               	movwf	ftoa@int_part+1
  4018     0ED1  083A               	movf	?___fltol,w
  4019     0ED2  00D6               	movwf	ftoa@int_part
  4020     0ED3                     l3670:
  4021                           
  4022                           ;SC1601_LCD.c: 245:     float frac_part = f - int_part;
  4023     0ED3  0856               	movf	ftoa@int_part,w
  4024     0ED4  00F0               	movwf	___xxtofl@val
  4025     0ED5  0857               	movf	ftoa@int_part+1,w
  4026     0ED6  00F1               	movwf	___xxtofl@val+1
  4027     0ED7  0D89               	rlf	9,f
  4028     0ED8  3B89               	subwfb	9,f
  4029     0ED9  0989               	comf	9,f
  4030     0EDA  00F2               	movwf	___xxtofl@val+2
  4031     0EDB  00F3               	movwf	___xxtofl@val+3
  4032     0EDC  3001               	movlw	1
  4033     0EDD  318C  2488  318E   	fcall	___xxtofl
  4034     0EE0  0873               	movf	?___xxtofl+3,w
  4035     0EE1  0020               	movlb	0	; select bank0
  4036     0EE2  00AB               	movwf	___flsub@a+3
  4037     0EE3  0872               	movf	?___xxtofl+2,w
  4038     0EE4  00AA               	movwf	___flsub@a+2
  4039     0EE5  0871               	movf	?___xxtofl+1,w
  4040     0EE6  00A9               	movwf	___flsub@a+1
  4041     0EE7  0870               	movf	?___xxtofl,w
  4042     0EE8  00A8               	movwf	___flsub@a
  4043     0EE9  0847               	movf	ftoa@f+3,w
  4044     0EEA  00AF               	movwf	___flsub@b+3
  4045     0EEB  0846               	movf	ftoa@f+2,w
  4046     0EEC  00AE               	movwf	___flsub@b+2
  4047     0EED  0845               	movf	ftoa@f+1,w
  4048     0EEE  00AD               	movwf	___flsub@b+1
  4049     0EEF  0844               	movf	ftoa@f,w
  4050     0EF0  00AC               	movwf	___flsub@b
  4051     0EF1  3194  24CB  318E   	fcall	___flsub
  4052     0EF4  0020               	movlb	0	; select bank0
  4053     0EF5  082B               	movf	?___flsub+3,w
  4054     0EF6  00D5               	movwf	ftoa@frac_part+3
  4055     0EF7  082A               	movf	?___flsub+2,w
  4056     0EF8  00D4               	movwf	ftoa@frac_part+2
  4057     0EF9  0829               	movf	?___flsub+1,w
  4058     0EFA  00D3               	movwf	ftoa@frac_part+1
  4059     0EFB  0828               	movf	?___flsub,w
  4060     0EFC  00D2               	movwf	ftoa@frac_part
  4061                           
  4062                           ;SC1601_LCD.c: 246:     int frac_as_int;;SC1601_LCD.c: 247:     int frac_digits = 2;
  4063     0EFD  3002               	movlw	2
  4064     0EFE  00D0               	movwf	ftoa@frac_digits
  4065     0EFF  3000               	movlw	0
  4066     0F00  00D1               	movwf	ftoa@frac_digits+1
  4067     0F01                     l3672:
  4068                           
  4069                           ;SC1601_LCD.c: 250:     if (f < 0.0) {
  4070     0F01  0847               	movf	ftoa@f+3,w
  4071     0F02  00F3               	movwf	___flge@ff1+3
  4072     0F03  0846               	movf	ftoa@f+2,w
  4073     0F04  00F2               	movwf	___flge@ff1+2
  4074     0F05  0845               	movf	ftoa@f+1,w
  4075     0F06  00F1               	movwf	___flge@ff1+1
  4076     0F07  0844               	movf	ftoa@f,w
  4077     0F08  00F0               	movwf	___flge@ff1
  4078     0F09  3000               	movlw	0
  4079     0F0A  00F7               	movwf	___flge@ff2+3
  4080     0F0B  3000               	movlw	0
  4081     0F0C  00F6               	movwf	___flge@ff2+2
  4082     0F0D  3000               	movlw	0
  4083     0F0E  00F5               	movwf	___flge@ff2+1
  4084     0F0F  3000               	movlw	0
  4085     0F10  00F4               	movwf	___flge@ff2
  4086     0F11  3189  218D  318E   	fcall	___flge
  4087     0F14  1803               	btfsc	3,0
  4088     0F15  2F17               	goto	u4411
  4089     0F16  2F18               	goto	u4410
  4090     0F17                     u4411:
  4091     0F17  2F71               	goto	l3684
  4092     0F18                     u4410:
  4093     0F18                     l3674:
  4094                           
  4095                           ;SC1601_LCD.c: 251:         *ptr++ = '-';
  4096     0F18  0020               	movlb	0	; select bank0
  4097     0F19  0858               	movf	ftoa@ptr,w
  4098     0F1A  0086               	movwf	6
  4099     0F1B  3001               	movlw	1	; select bank2/3
  4100     0F1C  0087               	movwf	7
  4101     0F1D  302D               	movlw	45
  4102     0F1E  0081               	movwf	1
  4103     0F1F                     l3676:
  4104     0F1F  3001               	movlw	1
  4105     0F20  00C9               	movwf	??_ftoa
  4106     0F21  0849               	movf	??_ftoa,w
  4107     0F22  07D8               	addwf	ftoa@ptr,f
  4108     0F23                     l3678:
  4109                           
  4110                           ;SC1601_LCD.c: 252:         f = -f;
  4111     0F23  0847               	movf	ftoa@f+3,w
  4112     0F24  00F3               	movwf	___flneg@f1+3
  4113     0F25  0846               	movf	ftoa@f+2,w
  4114     0F26  00F2               	movwf	___flneg@f1+2
  4115     0F27  0845               	movf	ftoa@f+1,w
  4116     0F28  00F1               	movwf	___flneg@f1+1
  4117     0F29  0844               	movf	ftoa@f,w
  4118     0F2A  00F0               	movwf	___flneg@f1
  4119     0F2B  3193  2341  318E   	fcall	___flneg
  4120     0F2E  0873               	movf	?___flneg+3,w
  4121     0F2F  0020               	movlb	0	; select bank0
  4122     0F30  00C7               	movwf	ftoa@f+3
  4123     0F31  0872               	movf	?___flneg+2,w
  4124     0F32  00C6               	movwf	ftoa@f+2
  4125     0F33  0871               	movf	?___flneg+1,w
  4126     0F34  00C5               	movwf	ftoa@f+1
  4127     0F35  0870               	movf	?___flneg,w
  4128     0F36  00C4               	movwf	ftoa@f
  4129     0F37                     l3680:
  4130                           
  4131                           ;SC1601_LCD.c: 253:         int_part = (int)f;
  4132     0F37  0847               	movf	ftoa@f+3,w
  4133     0F38  00BD               	movwf	___fltol@f1+3
  4134     0F39  0846               	movf	ftoa@f+2,w
  4135     0F3A  00BC               	movwf	___fltol@f1+2
  4136     0F3B  0845               	movf	ftoa@f+1,w
  4137     0F3C  00BB               	movwf	___fltol@f1+1
  4138     0F3D  0844               	movf	ftoa@f,w
  4139     0F3E  00BA               	movwf	___fltol@f1
  4140     0F3F  3189  211C  318E   	fcall	___fltol
  4141     0F42  0020               	movlb	0	; select bank0
  4142     0F43  083B               	movf	?___fltol+1,w
  4143     0F44  00D7               	movwf	ftoa@int_part+1
  4144     0F45  083A               	movf	?___fltol,w
  4145     0F46  00D6               	movwf	ftoa@int_part
  4146     0F47                     l3682:
  4147                           
  4148                           ;SC1601_LCD.c: 254:         frac_part = f - int_part;
  4149     0F47  0856               	movf	ftoa@int_part,w
  4150     0F48  00F0               	movwf	___xxtofl@val
  4151     0F49  0857               	movf	ftoa@int_part+1,w
  4152     0F4A  00F1               	movwf	___xxtofl@val+1
  4153     0F4B  0D89               	rlf	9,f
  4154     0F4C  3B89               	subwfb	9,f
  4155     0F4D  0989               	comf	9,f
  4156     0F4E  00F2               	movwf	___xxtofl@val+2
  4157     0F4F  00F3               	movwf	___xxtofl@val+3
  4158     0F50  3001               	movlw	1
  4159     0F51  318C  2488  318E   	fcall	___xxtofl
  4160     0F54  0873               	movf	?___xxtofl+3,w
  4161     0F55  0020               	movlb	0	; select bank0
  4162     0F56  00AB               	movwf	___flsub@a+3
  4163     0F57  0872               	movf	?___xxtofl+2,w
  4164     0F58  00AA               	movwf	___flsub@a+2
  4165     0F59  0871               	movf	?___xxtofl+1,w
  4166     0F5A  00A9               	movwf	___flsub@a+1
  4167     0F5B  0870               	movf	?___xxtofl,w
  4168     0F5C  00A8               	movwf	___flsub@a
  4169     0F5D  0847               	movf	ftoa@f+3,w
  4170     0F5E  00AF               	movwf	___flsub@b+3
  4171     0F5F  0846               	movf	ftoa@f+2,w
  4172     0F60  00AE               	movwf	___flsub@b+2
  4173     0F61  0845               	movf	ftoa@f+1,w
  4174     0F62  00AD               	movwf	___flsub@b+1
  4175     0F63  0844               	movf	ftoa@f,w
  4176     0F64  00AC               	movwf	___flsub@b
  4177     0F65  3194  24CB  318E   	fcall	___flsub
  4178     0F68  0020               	movlb	0	; select bank0
  4179     0F69  082B               	movf	?___flsub+3,w
  4180     0F6A  00D5               	movwf	ftoa@frac_part+3
  4181     0F6B  082A               	movf	?___flsub+2,w
  4182     0F6C  00D4               	movwf	ftoa@frac_part+2
  4183     0F6D  0829               	movf	?___flsub+1,w
  4184     0F6E  00D3               	movwf	ftoa@frac_part+1
  4185     0F6F  0828               	movf	?___flsub,w
  4186     0F70  00D2               	movwf	ftoa@frac_part
  4187     0F71                     l3684:
  4188                           
  4189                           ;SC1601_LCD.c: 258:     itoa(ptr, int_part, 10);
  4190     0F71  0020               	movlb	0	; select bank0
  4191     0F72  0858               	movf	ftoa@ptr,w
  4192     0F73  00A4               	movwf	itoa@buf
  4193     0F74  3001               	movlw	1
  4194     0F75  00A5               	movwf	itoa@buf+1
  4195     0F76  0857               	movf	ftoa@int_part+1,w
  4196     0F77  00A7               	movwf	itoa@value+1
  4197     0F78  0856               	movf	ftoa@int_part,w
  4198     0F79  00A6               	movwf	itoa@value
  4199     0F7A  300A               	movlw	10
  4200     0F7B  00A8               	movwf	itoa@base
  4201     0F7C  3000               	movlw	0
  4202     0F7D  00A9               	movwf	itoa@base+1
  4203     0F7E  318A  22A4  318E   	fcall	_itoa
  4204                           
  4205                           ;SC1601_LCD.c: 259:     while (*ptr != '\0') {
  4206     0F81  2F86               	goto	l3688
  4207     0F82                     l3686:
  4208                           
  4209                           ;SC1601_LCD.c: 260:         ptr++;
  4210     0F82  3001               	movlw	1
  4211     0F83  00C9               	movwf	??_ftoa
  4212     0F84  0849               	movf	??_ftoa,w
  4213     0F85  07D8               	addwf	ftoa@ptr,f
  4214     0F86                     l3688:
  4215                           
  4216                           ;SC1601_LCD.c: 259:     while (*ptr != '\0') {
  4217     0F86  0020               	movlb	0	; select bank0
  4218     0F87  0858               	movf	ftoa@ptr,w
  4219     0F88  0086               	movwf	6
  4220     0F89  3001               	movlw	1	; select bank2/3
  4221     0F8A  0087               	movwf	7
  4222     0F8B  0801               	movf	1,w
  4223     0F8C  1D03               	btfss	3,2
  4224     0F8D  2F8F               	goto	u4421
  4225     0F8E  2F90               	goto	u4420
  4226     0F8F                     u4421:
  4227     0F8F  2F82               	goto	l3686
  4228     0F90                     u4420:
  4229     0F90                     l3690:
  4230                           
  4231                           ;SC1601_LCD.c: 264:     *ptr++ = '.';
  4232     0F90  0858               	movf	ftoa@ptr,w
  4233     0F91  0086               	movwf	6
  4234     0F92  3001               	movlw	1	; select bank2/3
  4235     0F93  0087               	movwf	7
  4236     0F94  302E               	movlw	46
  4237     0F95  0081               	movwf	1
  4238     0F96                     l3692:
  4239     0F96  3001               	movlw	1
  4240     0F97  00C9               	movwf	??_ftoa
  4241     0F98  0849               	movf	??_ftoa,w
  4242     0F99  07D8               	addwf	ftoa@ptr,f
  4243     0F9A                     l3694:
  4244                           
  4245                           ;SC1601_LCD.c: 267:     frac_as_int = (int)(frac_part * 10 * frac_digits);
  4246     0F9A  0855               	movf	ftoa@frac_part+3,w
  4247     0F9B  00A7               	movwf	___flmul@a+3
  4248     0F9C  0854               	movf	ftoa@frac_part+2,w
  4249     0F9D  00A6               	movwf	___flmul@a+2
  4250     0F9E  0853               	movf	ftoa@frac_part+1,w
  4251     0F9F  00A5               	movwf	___flmul@a+1
  4252     0FA0  0852               	movf	ftoa@frac_part,w
  4253     0FA1  00A4               	movwf	___flmul@a
  4254     0FA2  3041               	movlw	65
  4255     0FA3  00A3               	movwf	___flmul@b+3
  4256     0FA4  3020               	movlw	32
  4257     0FA5  00A2               	movwf	___flmul@b+2
  4258     0FA6  3000               	movlw	0
  4259     0FA7  00A1               	movwf	___flmul@b+1
  4260     0FA8  3000               	movlw	0
  4261     0FA9  00A0               	movwf	___flmul@b
  4262     0FAA  3182  2256  318E   	fcall	___flmul
  4263     0FAD  0020               	movlb	0	; select bank0
  4264     0FAE  0823               	movf	?___flmul+3,w
  4265     0FAF  00CD               	movwf	_ftoa$1014+3
  4266     0FB0  0822               	movf	?___flmul+2,w
  4267     0FB1  00CC               	movwf	_ftoa$1014+2
  4268     0FB2  0821               	movf	?___flmul+1,w
  4269     0FB3  00CB               	movwf	_ftoa$1014+1
  4270     0FB4  0820               	movf	?___flmul,w
  4271     0FB5  00CA               	movwf	_ftoa$1014
  4272     0FB6                     l3696:
  4273                           
  4274                           ;SC1601_LCD.c: 267:     frac_as_int = (int)(frac_part * 10 * frac_digits);
  4275     0FB6  084D               	movf	_ftoa$1014+3,w
  4276     0FB7  00A7               	movwf	___flmul@a+3
  4277     0FB8  084C               	movf	_ftoa$1014+2,w
  4278     0FB9  00A6               	movwf	___flmul@a+2
  4279     0FBA  084B               	movf	_ftoa$1014+1,w
  4280     0FBB  00A5               	movwf	___flmul@a+1
  4281     0FBC  084A               	movf	_ftoa$1014,w
  4282     0FBD  00A4               	movwf	___flmul@a
  4283     0FBE  0850               	movf	ftoa@frac_digits,w
  4284     0FBF  00F0               	movwf	___xxtofl@val
  4285     0FC0  0851               	movf	ftoa@frac_digits+1,w
  4286     0FC1  00F1               	movwf	___xxtofl@val+1
  4287     0FC2  0D89               	rlf	9,f
  4288     0FC3  3B89               	subwfb	9,f
  4289     0FC4  0989               	comf	9,f
  4290     0FC5  00F2               	movwf	___xxtofl@val+2
  4291     0FC6  00F3               	movwf	___xxtofl@val+3
  4292     0FC7  3001               	movlw	1
  4293     0FC8  318C  2488  318E   	fcall	___xxtofl
  4294     0FCB  0873               	movf	?___xxtofl+3,w
  4295     0FCC  0020               	movlb	0	; select bank0
  4296     0FCD  00A3               	movwf	___flmul@b+3
  4297     0FCE  0872               	movf	?___xxtofl+2,w
  4298     0FCF  00A2               	movwf	___flmul@b+2
  4299     0FD0  0871               	movf	?___xxtofl+1,w
  4300     0FD1  00A1               	movwf	___flmul@b+1
  4301     0FD2  0870               	movf	?___xxtofl,w
  4302     0FD3  00A0               	movwf	___flmul@b
  4303     0FD4  3182  2256  318E   	fcall	___flmul
  4304     0FD7  0020               	movlb	0	; select bank0
  4305     0FD8  0823               	movf	?___flmul+3,w
  4306     0FD9  00BD               	movwf	___fltol@f1+3
  4307     0FDA  0822               	movf	?___flmul+2,w
  4308     0FDB  00BC               	movwf	___fltol@f1+2
  4309     0FDC  0821               	movf	?___flmul+1,w
  4310     0FDD  00BB               	movwf	___fltol@f1+1
  4311     0FDE  0820               	movf	?___flmul,w
  4312     0FDF  00BA               	movwf	___fltol@f1
  4313     0FE0  3189  211C  318E   	fcall	___fltol
  4314     0FE3  0020               	movlb	0	; select bank0
  4315     0FE4  083B               	movf	?___fltol+1,w
  4316     0FE5  00CF               	movwf	ftoa@frac_as_int+1
  4317     0FE6  083A               	movf	?___fltol,w
  4318     0FE7  00CE               	movwf	ftoa@frac_as_int
  4319     0FE8                     l3698:
  4320                           
  4321                           ;SC1601_LCD.c: 268:     itoa(ptr, frac_as_int, 10);
  4322     0FE8  0858               	movf	ftoa@ptr,w
  4323     0FE9  00A4               	movwf	itoa@buf
  4324     0FEA  3001               	movlw	1
  4325     0FEB  00A5               	movwf	itoa@buf+1
  4326     0FEC  084F               	movf	ftoa@frac_as_int+1,w
  4327     0FED  00A7               	movwf	itoa@value+1
  4328     0FEE  084E               	movf	ftoa@frac_as_int,w
  4329     0FEF  00A6               	movwf	itoa@value
  4330     0FF0  300A               	movlw	10
  4331     0FF1  00A8               	movwf	itoa@base
  4332     0FF2  3000               	movlw	0
  4333     0FF3  00A9               	movwf	itoa@base+1
  4334     0FF4  318A  22A4  318E   	fcall	_itoa
  4335     0FF7                     l3700:
  4336                           
  4337                           ;SC1601_LCD.c: 271:     *status = 0;
  4338     0FF7  0020               	movlb	0	; select bank0
  4339     0FF8  0848               	movf	ftoa@status,w
  4340     0FF9  0086               	movwf	6
  4341     0FFA  0187               	clrf	7
  4342     0FFB  3000               	movlw	0
  4343     0FFC  3FC0               	movwi [0]fsr1
  4344     0FFD  3FC1               	movwi [1]fsr1
  4345     0FFE                     l3702:
  4346                           
  4347                           ;SC1601_LCD.c: 272:     return buf;
  4348     0FFE  30C0               	movlw	(low (ftoa@buf| (0+256)))& (0+255)
  4349     0FFF                     l208:
  4350     0FFF  0008               	return
  4351     1000                     __end_of_ftoa:
  4352                           
  4353                           	psect	text7
  4354     0AA4                     __ptext7:	
  4355 ;; *************** function _itoa *****************
  4356 ;; Defined at:
  4357 ;;		line 201 in file "SC1601_LCD.c"
  4358 ;; Parameters:    Size  Location     Type
  4359 ;;  buf             2    4[BANK0 ] PTR unsigned char 
  4360 ;;		 -> Lcd_Write_Integer@buf(8), ftoa@buf(16), 
  4361 ;;  value           2    6[BANK0 ] int 
  4362 ;;  base            2    8[BANK0 ] int 
  4363 ;; Auto vars:     Size  Location     Type
  4364 ;;  ptr             2   20[BANK0 ] PTR unsigned char 
  4365 ;;		 -> Lcd_Write_Integer@buf(8), ftoa@buf(16), 
  4366 ;;  ptr1            2   18[BANK0 ] PTR unsigned char 
  4367 ;;		 -> Lcd_Write_Integer@buf(8), ftoa@buf(16), 
  4368 ;;  tmp_value       2   15[BANK0 ] int 
  4369 ;;  tmp_char        1   17[BANK0 ] unsigned char 
  4370 ;; Return value:  Size  Location     Type
  4371 ;;                  2    4[BANK0 ] PTR unsigned char 
  4372 ;; Registers used:
  4373 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4374 ;; Tracked objects:
  4375 ;;		On entry : 0/0
  4376 ;;		On exit  : 0/0
  4377 ;;		Unchanged: 0/0
  4378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4379 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4380 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4381 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4382 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4383 ;;Total ram usage:       18 bytes
  4384 ;; Hardware stack levels used: 1
  4385 ;; Hardware stack levels required when called: 1
  4386 ;; This function calls:
  4387 ;;		___awdiv
  4388 ;;		___wmul
  4389 ;; This function is called by:
  4390 ;;		_ftoa
  4391 ;;		_Lcd_Write_Integer
  4392 ;; This function uses a non-reentrant model
  4393 ;;
  4394                           
  4395     0AA4                     _itoa:	
  4396                           ;psect for function _itoa
  4397                           
  4398     0AA4                     l3634:	
  4399                           ;incstack = 0
  4400                           ; Regs used in _itoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4401                           
  4402                           
  4403                           ;SC1601_LCD.c: 202:     char* ptr = buf;
  4404     0AA4  0020               	movlb	0	; select bank0
  4405     0AA5  0825               	movf	itoa@buf+1,w
  4406     0AA6  00B5               	movwf	itoa@ptr+1
  4407     0AA7  0824               	movf	itoa@buf,w
  4408     0AA8  00B4               	movwf	itoa@ptr
  4409                           
  4410                           ;SC1601_LCD.c: 203:     char* ptr1 = buf;
  4411     0AA9  0825               	movf	itoa@buf+1,w
  4412     0AAA  00B3               	movwf	itoa@ptr1+1
  4413     0AAB  0824               	movf	itoa@buf,w
  4414     0AAC  00B2               	movwf	itoa@ptr1
  4415     0AAD                     l3636:
  4416                           
  4417                           ;SC1601_LCD.c: 204:     char tmp_char;;SC1601_LCD.c: 205:     int tmp_value;;SC1601_LCD.
      +                          c: 208:     if (value < 0 && base == 10) {
  4418     0AAD  1FA7               	btfss	itoa@value+1,7
  4419     0AAE  2AB0               	goto	u4371
  4420     0AAF  2AB1               	goto	u4370
  4421     0AB0                     u4371:
  4422     0AB0  2AC7               	goto	l3646
  4423     0AB1                     u4370:
  4424     0AB1                     l3638:
  4425     0AB1  300A               	movlw	10
  4426     0AB2  0628               	xorwf	itoa@base,w
  4427     0AB3  0429               	iorwf	itoa@base+1,w
  4428     0AB4  1D03               	btfss	3,2
  4429     0AB5  2AB7               	goto	u4381
  4430     0AB6  2AB8               	goto	u4380
  4431     0AB7                     u4381:
  4432     0AB7  2AC7               	goto	l3646
  4433     0AB8                     u4380:
  4434     0AB8                     l3640:
  4435                           
  4436                           ;SC1601_LCD.c: 209:         *ptr++ = '-';
  4437     0AB8  0834               	movf	itoa@ptr,w
  4438     0AB9  0086               	movwf	6
  4439     0ABA  0835               	movf	itoa@ptr+1,w
  4440     0ABB  0087               	movwf	7
  4441     0ABC  302D               	movlw	45
  4442     0ABD  0081               	movwf	1
  4443     0ABE                     l3642:
  4444     0ABE  3001               	movlw	1
  4445     0ABF  07B4               	addwf	itoa@ptr,f
  4446     0AC0  3000               	movlw	0
  4447     0AC1  3DB5               	addwfc	itoa@ptr+1,f
  4448     0AC2                     l3644:
  4449                           
  4450                           ;SC1601_LCD.c: 210:         value = -value;
  4451     0AC2  09A6               	comf	itoa@value,f
  4452     0AC3  09A7               	comf	itoa@value+1,f
  4453     0AC4  0AA6               	incf	itoa@value,f
  4454     0AC5  1903               	skipnz
  4455     0AC6  0AA7               	incf	itoa@value+1,f
  4456     0AC7                     l3646:
  4457                           
  4458                           ;SC1601_LCD.c: 215:         tmp_value = value;
  4459     0AC7  0827               	movf	itoa@value+1,w
  4460     0AC8  00B0               	movwf	itoa@tmp_value+1
  4461     0AC9  0826               	movf	itoa@value,w
  4462     0ACA  00AF               	movwf	itoa@tmp_value
  4463     0ACB                     l3648:
  4464                           
  4465                           ;SC1601_LCD.c: 216:         value /= base;
  4466     0ACB  0829               	movf	itoa@base+1,w
  4467     0ACC  00F7               	movwf	___awdiv@divisor+1
  4468     0ACD  0828               	movf	itoa@base,w
  4469     0ACE  00F6               	movwf	___awdiv@divisor
  4470     0ACF  0827               	movf	itoa@value+1,w
  4471     0AD0  00F9               	movwf	___awdiv@dividend+1
  4472     0AD1  0826               	movf	itoa@value,w
  4473     0AD2  00F8               	movwf	___awdiv@dividend
  4474     0AD3  3188  205C  318A   	fcall	___awdiv
  4475     0AD6  0877               	movf	?___awdiv+1,w
  4476     0AD7  0020               	movlb	0	; select bank0
  4477     0AD8  00A7               	movwf	itoa@value+1
  4478     0AD9  0876               	movf	?___awdiv,w
  4479     0ADA  00A6               	movwf	itoa@value
  4480     0ADB                     l3650:
  4481                           
  4482                           ;SC1601_LCD.c: 217:         *ptr++ = "0123456789ABCDEF"[tmp_value - (value * base)];
  4483     0ADB  0827               	movf	itoa@value+1,w
  4484     0ADC  00F1               	movwf	___wmul@multiplier+1
  4485     0ADD  0826               	movf	itoa@value,w
  4486     0ADE  00F0               	movwf	___wmul@multiplier
  4487     0ADF  0829               	movf	itoa@base+1,w
  4488     0AE0  00F3               	movwf	___wmul@multiplicand+1
  4489     0AE1  0828               	movf	itoa@base,w
  4490     0AE2  00F2               	movwf	___wmul@multiplicand
  4491     0AE3  3194  24AC  318A   	fcall	___wmul
  4492     0AE6  3027               	movlw	low (STR_7| (0+32768))
  4493     0AE7  0020               	movlb	0	; select bank0
  4494     0AE8  00AA               	movwf	??_itoa
  4495     0AE9  3098               	movlw	high (STR_7| (0+32768))
  4496     0AEA  00AB               	movwf	??_itoa+1
  4497     0AEB  0870               	movf	?___wmul,w
  4498     0AEC  022A               	subwf	??_itoa,w
  4499     0AED  00AC               	movwf	??_itoa+2
  4500     0AEE  0871               	movf	?___wmul+1,w
  4501     0AEF  3B2B               	subwfb	??_itoa+1,w
  4502     0AF0  00AD               	movwf	??_itoa+3
  4503     0AF1  082C               	movf	??_itoa+2,w
  4504     0AF2  072F               	addwf	itoa@tmp_value,w
  4505     0AF3  0084               	movwf	4
  4506     0AF4  082D               	movf	??_itoa+3,w
  4507     0AF5  3D30               	addwfc	itoa@tmp_value+1,w
  4508     0AF6  0085               	movwf	5
  4509     0AF7  0800               	movf	0,w	;code access
  4510     0AF8  00AE               	movwf	??_itoa+4
  4511     0AF9  0834               	movf	itoa@ptr,w
  4512     0AFA  0086               	movwf	6
  4513     0AFB  0835               	movf	itoa@ptr+1,w
  4514     0AFC  0087               	movwf	7
  4515     0AFD  082E               	movf	??_itoa+4,w
  4516     0AFE  0081               	movwf	1
  4517     0AFF                     l3652:
  4518     0AFF  3001               	movlw	1
  4519     0B00  07B4               	addwf	itoa@ptr,f
  4520     0B01  3000               	movlw	0
  4521     0B02  3DB5               	addwfc	itoa@ptr+1,f
  4522     0B03                     l3654:
  4523                           
  4524                           ;SC1601_LCD.c: 218:     } while (value);
  4525     0B03  0826               	movf	itoa@value,w
  4526     0B04  0427               	iorwf	itoa@value+1,w
  4527     0B05  1D03               	btfss	3,2
  4528     0B06  2B08               	goto	u4391
  4529     0B07  2B09               	goto	u4390
  4530     0B08                     u4391:
  4531     0B08  2AC7               	goto	l3646
  4532     0B09                     u4390:
  4533     0B09                     l3656:
  4534                           
  4535                           ;SC1601_LCD.c: 221:     *ptr = '\0';
  4536     0B09  0834               	movf	itoa@ptr,w
  4537     0B0A  0086               	movwf	6
  4538     0B0B  0835               	movf	itoa@ptr+1,w
  4539     0B0C  0087               	movwf	7
  4540     0B0D  0181               	clrf	1
  4541     0B0E                     l3658:
  4542                           
  4543                           ;SC1601_LCD.c: 224:     ptr--;
  4544     0B0E  3001               	movlw	1
  4545     0B0F  02B4               	subwf	itoa@ptr,f
  4546     0B10  3000               	movlw	0
  4547     0B11  3BB5               	subwfb	itoa@ptr+1,f
  4548                           
  4549                           ;SC1601_LCD.c: 225:     while (ptr1 < ptr) {
  4550     0B12  2B33               	goto	l196
  4551     0B13                     l3660:
  4552                           
  4553                           ;SC1601_LCD.c: 226:         tmp_char = *ptr;
  4554     0B13  0834               	movf	itoa@ptr,w
  4555     0B14  0086               	movwf	6
  4556     0B15  0835               	movf	itoa@ptr+1,w
  4557     0B16  0087               	movwf	7
  4558     0B17  0801               	movf	1,w
  4559     0B18  00B1               	movwf	itoa@tmp_char
  4560                           
  4561                           ;SC1601_LCD.c: 227:         *ptr-- = *ptr1;
  4562     0B19  0832               	movf	itoa@ptr1,w
  4563     0B1A  0086               	movwf	6
  4564     0B1B  0833               	movf	itoa@ptr1+1,w
  4565     0B1C  0087               	movwf	7
  4566     0B1D  0801               	movf	1,w
  4567     0B1E  00AA               	movwf	??_itoa
  4568     0B1F  0834               	movf	itoa@ptr,w
  4569     0B20  0086               	movwf	6
  4570     0B21  0835               	movf	itoa@ptr+1,w
  4571     0B22  0087               	movwf	7
  4572     0B23  082A               	movf	??_itoa,w
  4573     0B24  0081               	movwf	1
  4574     0B25                     l3662:
  4575     0B25  3001               	movlw	1
  4576     0B26  02B4               	subwf	itoa@ptr,f
  4577     0B27  3000               	movlw	0
  4578     0B28  3BB5               	subwfb	itoa@ptr+1,f
  4579     0B29                     l3664:
  4580                           
  4581                           ;SC1601_LCD.c: 228:         *ptr1++ = tmp_char;
  4582     0B29  0832               	movf	itoa@ptr1,w
  4583     0B2A  0086               	movwf	6
  4584     0B2B  0833               	movf	itoa@ptr1+1,w
  4585     0B2C  0087               	movwf	7
  4586     0B2D  0831               	movf	itoa@tmp_char,w
  4587     0B2E  0081               	movwf	1
  4588     0B2F  3001               	movlw	1
  4589     0B30  07B2               	addwf	itoa@ptr1,f
  4590     0B31  3000               	movlw	0
  4591     0B32  3DB3               	addwfc	itoa@ptr1+1,f
  4592     0B33                     l196:	
  4593                           ;SC1601_LCD.c: 229:     }
  4594                           
  4595                           
  4596                           ;SC1601_LCD.c: 225:     while (ptr1 < ptr) {
  4597     0B33  0835               	movf	itoa@ptr+1,w
  4598     0B34  0233               	subwf	itoa@ptr1+1,w
  4599     0B35  1D03               	skipz
  4600     0B36  2B39               	goto	u4405
  4601     0B37  0834               	movf	itoa@ptr,w
  4602     0B38  0232               	subwf	itoa@ptr1,w
  4603     0B39                     u4405:
  4604     0B39  1C03               	skipc
  4605     0B3A  2B3C               	goto	u4401
  4606     0B3B  2B3D               	goto	u4400
  4607     0B3C                     u4401:
  4608     0B3C  2B13               	goto	l3660
  4609     0B3D                     u4400:
  4610     0B3D                     l198:
  4611     0B3D                     l199:	
  4612                           ;SC1601_LCD.c: 231:     return buf;
  4613                           
  4614     0B3D  0008               	return
  4615     0B3E                     __end_of_itoa:
  4616                           
  4617                           	psect	text8
  4618     0C88                     __ptext8:	
  4619 ;; *************** function ___xxtofl *****************
  4620 ;; Defined at:
  4621 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\xxtofl.c"
  4622 ;; Parameters:    Size  Location     Type
  4623 ;;  sign            1    wreg     unsigned char 
  4624 ;;  val             4    0[COMMON] long 
  4625 ;; Auto vars:     Size  Location     Type
  4626 ;;  sign            1    8[COMMON] unsigned char 
  4627 ;;  arg             4   10[COMMON] unsigned long 
  4628 ;;  exp             1    9[COMMON] unsigned char 
  4629 ;; Return value:  Size  Location     Type
  4630 ;;                  4    0[COMMON] unsigned char 
  4631 ;; Registers used:
  4632 ;;		wreg, status,2, status,0
  4633 ;; Tracked objects:
  4634 ;;		On entry : 0/0
  4635 ;;		On exit  : 0/0
  4636 ;;		Unchanged: 0/0
  4637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4638 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4639 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4640 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4641 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4642 ;;Total ram usage:       14 bytes
  4643 ;; Hardware stack levels used: 1
  4644 ;; This function calls:
  4645 ;;		Nothing
  4646 ;; This function is called by:
  4647 ;;		_ftoa
  4648 ;; This function uses a non-reentrant model
  4649 ;;
  4650                           
  4651     0C88                     ___xxtofl:	
  4652                           ;psect for function ___xxtofl
  4653                           
  4654                           
  4655                           ;incstack = 0
  4656                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4657                           ;___xxtofl@sign stored from wreg
  4658     0C88  00F8               	movwf	___xxtofl@sign
  4659     0C89                     l3058:
  4660     0C89  0878               	movf	___xxtofl@sign,w
  4661     0C8A  1903               	btfsc	3,2
  4662     0C8B  2C8D               	goto	u3751
  4663     0C8C  2C8E               	goto	u3750
  4664     0C8D                     u3751:
  4665     0C8D  2CA2               	goto	l3064
  4666     0C8E                     u3750:
  4667     0C8E                     l3060:
  4668     0C8E  1FF3               	btfss	___xxtofl@val+3,7
  4669     0C8F  2C91               	goto	u3761
  4670     0C90  2C92               	goto	u3760
  4671     0C91                     u3761:
  4672     0C91  2CA2               	goto	l3064
  4673     0C92                     u3760:
  4674     0C92                     l3062:
  4675     0C92  0970               	comf	___xxtofl@val,w
  4676     0C93  00FA               	movwf	___xxtofl@arg
  4677     0C94  0971               	comf	___xxtofl@val+1,w
  4678     0C95  00FB               	movwf	___xxtofl@arg+1
  4679     0C96  0972               	comf	___xxtofl@val+2,w
  4680     0C97  00FC               	movwf	___xxtofl@arg+2
  4681     0C98  0973               	comf	___xxtofl@val+3,w
  4682     0C99  00FD               	movwf	___xxtofl@arg+3
  4683     0C9A  0AFA               	incf	___xxtofl@arg,f
  4684     0C9B  1903               	skipnz
  4685     0C9C  0AFB               	incf	___xxtofl@arg+1,f
  4686     0C9D  1903               	skipnz
  4687     0C9E  0AFC               	incf	___xxtofl@arg+2,f
  4688     0C9F  1903               	skipnz
  4689     0CA0  0AFD               	incf	___xxtofl@arg+3,f
  4690     0CA1  2CAA               	goto	l839
  4691     0CA2                     l3064:
  4692     0CA2  0873               	movf	___xxtofl@val+3,w
  4693     0CA3  00FD               	movwf	___xxtofl@arg+3
  4694     0CA4  0872               	movf	___xxtofl@val+2,w
  4695     0CA5  00FC               	movwf	___xxtofl@arg+2
  4696     0CA6  0871               	movf	___xxtofl@val+1,w
  4697     0CA7  00FB               	movwf	___xxtofl@arg+1
  4698     0CA8  0870               	movf	___xxtofl@val,w
  4699     0CA9  00FA               	movwf	___xxtofl@arg
  4700     0CAA                     l839:
  4701     0CAA  0873               	movf	___xxtofl@val+3,w
  4702     0CAB  0472               	iorwf	___xxtofl@val+2,w
  4703     0CAC  0471               	iorwf	___xxtofl@val+1,w
  4704     0CAD  0470               	iorwf	___xxtofl@val,w
  4705     0CAE  1D03               	skipz
  4706     0CAF  2CB1               	goto	u3771
  4707     0CB0  2CB2               	goto	u3770
  4708     0CB1                     u3771:
  4709     0CB1  2CBB               	goto	l3070
  4710     0CB2                     u3770:
  4711     0CB2                     l3066:
  4712     0CB2  3000               	movlw	0
  4713     0CB3  00F3               	movwf	?___xxtofl+3
  4714     0CB4  3000               	movlw	0
  4715     0CB5  00F2               	movwf	?___xxtofl+2
  4716     0CB6  3000               	movlw	0
  4717     0CB7  00F1               	movwf	?___xxtofl+1
  4718     0CB8  3000               	movlw	0
  4719     0CB9  00F0               	movwf	?___xxtofl
  4720     0CBA  2D31               	goto	l841
  4721     0CBB                     l3070:
  4722     0CBB  3096               	movlw	150
  4723     0CBC  00F9               	movwf	___xxtofl@exp
  4724     0CBD  2CC9               	goto	l3074
  4725     0CBE                     l3072:
  4726     0CBE  3001               	movlw	1
  4727     0CBF  00F4               	movwf	??___xxtofl
  4728     0CC0  0874               	movf	??___xxtofl,w
  4729     0CC1  07F9               	addwf	___xxtofl@exp,f
  4730     0CC2  3001               	movlw	1
  4731     0CC3                     u3785:
  4732     0CC3  36FD               	lsrf	___xxtofl@arg+3,f
  4733     0CC4  0CFC               	rrf	___xxtofl@arg+2,f
  4734     0CC5  0CFB               	rrf	___xxtofl@arg+1,f
  4735     0CC6  0CFA               	rrf	___xxtofl@arg,f
  4736     0CC7  0B89               	decfsz	9,f
  4737     0CC8  2CC3               	goto	u3785
  4738     0CC9                     l3074:
  4739     0CC9  30FE               	movlw	254
  4740     0CCA  057D               	andwf	___xxtofl@arg+3,w
  4741     0CCB  1D03               	btfss	3,2
  4742     0CCC  2CCE               	goto	u3791
  4743     0CCD  2CCF               	goto	u3790
  4744     0CCE                     u3791:
  4745     0CCE  2CBE               	goto	l3072
  4746     0CCF                     u3790:
  4747     0CCF  2CE3               	goto	l845
  4748     0CD0                     l3076:
  4749     0CD0  3001               	movlw	1
  4750     0CD1  00F4               	movwf	??___xxtofl
  4751     0CD2  0874               	movf	??___xxtofl,w
  4752     0CD3  07F9               	addwf	___xxtofl@exp,f
  4753     0CD4                     l3078:
  4754     0CD4  3001               	movlw	1
  4755     0CD5  07FA               	addwf	___xxtofl@arg,f
  4756     0CD6  3000               	movlw	0
  4757     0CD7  3DFB               	addwfc	___xxtofl@arg+1,f
  4758     0CD8  3000               	movlw	0
  4759     0CD9  3DFC               	addwfc	___xxtofl@arg+2,f
  4760     0CDA  3000               	movlw	0
  4761     0CDB  3DFD               	addwfc	___xxtofl@arg+3,f
  4762     0CDC                     l3080:
  4763     0CDC  3001               	movlw	1
  4764     0CDD                     u3805:
  4765     0CDD  36FD               	lsrf	___xxtofl@arg+3,f
  4766     0CDE  0CFC               	rrf	___xxtofl@arg+2,f
  4767     0CDF  0CFB               	rrf	___xxtofl@arg+1,f
  4768     0CE0  0CFA               	rrf	___xxtofl@arg,f
  4769     0CE1  0B89               	decfsz	9,f
  4770     0CE2  2CDD               	goto	u3805
  4771     0CE3                     l845:
  4772     0CE3  30FF               	movlw	255
  4773     0CE4  057D               	andwf	___xxtofl@arg+3,w
  4774     0CE5  1D03               	btfss	3,2
  4775     0CE6  2CE8               	goto	u3811
  4776     0CE7  2CE9               	goto	u3810
  4777     0CE8                     u3811:
  4778     0CE8  2CD0               	goto	l3076
  4779     0CE9                     u3810:
  4780     0CE9  2CF3               	goto	l3084
  4781     0CEA                     l3082:
  4782     0CEA  3001               	movlw	1
  4783     0CEB  02F9               	subwf	___xxtofl@exp,f
  4784     0CEC  3001               	movlw	1
  4785     0CED                     u3825:
  4786     0CED  35FA               	lslf	___xxtofl@arg,f
  4787     0CEE  0DFB               	rlf	___xxtofl@arg+1,f
  4788     0CEF  0DFC               	rlf	___xxtofl@arg+2,f
  4789     0CF0  0DFD               	rlf	___xxtofl@arg+3,f
  4790     0CF1  0B89               	decfsz	9,f
  4791     0CF2  2CED               	goto	u3825
  4792     0CF3                     l3084:
  4793     0CF3  1BFC               	btfsc	___xxtofl@arg+2,7
  4794     0CF4  2CF6               	goto	u3831
  4795     0CF5  2CF7               	goto	u3830
  4796     0CF6                     u3831:
  4797     0CF6  2CFD               	goto	l852
  4798     0CF7                     u3830:
  4799     0CF7                     l3086:
  4800     0CF7  3002               	movlw	2
  4801     0CF8  0279               	subwf	___xxtofl@exp,w
  4802     0CF9  1803               	skipnc
  4803     0CFA  2CFC               	goto	u3841
  4804     0CFB  2CFD               	goto	u3840
  4805     0CFC                     u3841:
  4806     0CFC  2CEA               	goto	l3082
  4807     0CFD                     u3840:
  4808     0CFD                     l852:
  4809     0CFD  1879               	btfsc	___xxtofl@exp,0
  4810     0CFE  2D00               	goto	u3851
  4811     0CFF  2D01               	goto	u3850
  4812     0D00                     u3851:
  4813     0D00  2D09               	goto	l853
  4814     0D01                     u3850:
  4815     0D01                     l3088:
  4816     0D01  30FF               	movlw	255
  4817     0D02  05FA               	andwf	___xxtofl@arg,f
  4818     0D03  30FF               	movlw	255
  4819     0D04  05FB               	andwf	___xxtofl@arg+1,f
  4820     0D05  307F               	movlw	127
  4821     0D06  05FC               	andwf	___xxtofl@arg+2,f
  4822     0D07  30FF               	movlw	255
  4823     0D08  05FD               	andwf	___xxtofl@arg+3,f
  4824     0D09                     l853:
  4825     0D09  1003               	clrc
  4826     0D0A  0CF9               	rrf	___xxtofl@exp,f
  4827     0D0B                     l3090:
  4828     0D0B  0879               	movf	___xxtofl@exp,w
  4829     0D0C  00F4               	movwf	??___xxtofl
  4830     0D0D  01F5               	clrf	??___xxtofl+1
  4831     0D0E  01F6               	clrf	??___xxtofl+2
  4832     0D0F  01F7               	clrf	??___xxtofl+3
  4833     0D10  3018               	movlw	24
  4834     0D11                     u3865:
  4835     0D11  35F4               	lslf	??___xxtofl,f
  4836     0D12  0DF5               	rlf	??___xxtofl+1,f
  4837     0D13  0DF6               	rlf	??___xxtofl+2,f
  4838     0D14  0DF7               	rlf	??___xxtofl+3,f
  4839     0D15                     u3860:
  4840     0D15  0B89               	decfsz	9,f
  4841     0D16  2D11               	goto	u3865
  4842     0D17  0874               	movf	??___xxtofl,w
  4843     0D18  04FA               	iorwf	___xxtofl@arg,f
  4844     0D19  0875               	movf	??___xxtofl+1,w
  4845     0D1A  04FB               	iorwf	___xxtofl@arg+1,f
  4846     0D1B  0876               	movf	??___xxtofl+2,w
  4847     0D1C  04FC               	iorwf	___xxtofl@arg+2,f
  4848     0D1D  0877               	movf	??___xxtofl+3,w
  4849     0D1E  04FD               	iorwf	___xxtofl@arg+3,f
  4850     0D1F                     l3092:
  4851     0D1F  0878               	movf	___xxtofl@sign,w
  4852     0D20  1903               	btfsc	3,2
  4853     0D21  2D23               	goto	u3871
  4854     0D22  2D24               	goto	u3870
  4855     0D23                     u3871:
  4856     0D23  2D29               	goto	l3098
  4857     0D24                     u3870:
  4858     0D24                     l3094:
  4859     0D24  1FF3               	btfss	___xxtofl@val+3,7
  4860     0D25  2D27               	goto	u3881
  4861     0D26  2D28               	goto	u3880
  4862     0D27                     u3881:
  4863     0D27  2D29               	goto	l3098
  4864     0D28                     u3880:
  4865     0D28                     l3096:
  4866     0D28  17FD               	bsf	___xxtofl@arg+3,7
  4867     0D29                     l3098:
  4868     0D29  087D               	movf	___xxtofl@arg+3,w
  4869     0D2A  00F3               	movwf	?___xxtofl+3
  4870     0D2B  087C               	movf	___xxtofl@arg+2,w
  4871     0D2C  00F2               	movwf	?___xxtofl+2
  4872     0D2D  087B               	movf	___xxtofl@arg+1,w
  4873     0D2E  00F1               	movwf	?___xxtofl+1
  4874     0D2F  087A               	movf	___xxtofl@arg,w
  4875     0D30  00F0               	movwf	?___xxtofl
  4876     0D31                     l841:
  4877     0D31  0008               	return
  4878     0D32                     __end_of___xxtofl:
  4879                           
  4880                           	psect	text9
  4881     091C                     __ptext9:	
  4882 ;; *************** function ___fltol *****************
  4883 ;; Defined at:
  4884 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
  4885 ;; Parameters:    Size  Location     Type
  4886 ;;  f1              4   26[BANK0 ] unsigned char 
  4887 ;; Auto vars:     Size  Location     Type
  4888 ;;  exp1            1   35[BANK0 ] unsigned char 
  4889 ;;  sign1           1   34[BANK0 ] unsigned char 
  4890 ;; Return value:  Size  Location     Type
  4891 ;;                  4   26[BANK0 ] long 
  4892 ;; Registers used:
  4893 ;;		wreg, status,2, status,0
  4894 ;; Tracked objects:
  4895 ;;		On entry : 0/0
  4896 ;;		On exit  : 0/0
  4897 ;;		Unchanged: 0/0
  4898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4899 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4900 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4901 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4902 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4903 ;;Total ram usage:       10 bytes
  4904 ;; Hardware stack levels used: 1
  4905 ;; This function calls:
  4906 ;;		Nothing
  4907 ;; This function is called by:
  4908 ;;		_ftoa
  4909 ;; This function uses a non-reentrant model
  4910 ;;
  4911                           
  4912     091C                     ___fltol:	
  4913                           ;psect for function ___fltol
  4914                           
  4915     091C                     l2876:	
  4916                           ;incstack = 0
  4917                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  4918                           
  4919     091C  1003               	clrc
  4920     091D  0020               	movlb	0	; select bank0
  4921     091E  0D3C               	rlf	___fltol@f1+2,w
  4922     091F  0D3D               	rlf	___fltol@f1+3,w
  4923     0920  00C3               	movwf	___fltol@exp1
  4924     0921  0843               	movf	___fltol@exp1,w
  4925     0922  1D03               	btfss	3,2
  4926     0923  2925               	goto	u3391
  4927     0924  2926               	goto	u3390
  4928     0925                     u3391:
  4929     0925  292F               	goto	l2882
  4930     0926                     u3390:
  4931     0926                     l2878:
  4932     0926  3000               	movlw	0
  4933     0927  00BD               	movwf	?___fltol+3
  4934     0928  3000               	movlw	0
  4935     0929  00BC               	movwf	?___fltol+2
  4936     092A  3000               	movlw	0
  4937     092B  00BB               	movwf	?___fltol+1
  4938     092C  3000               	movlw	0
  4939     092D  00BA               	movwf	?___fltol
  4940     092E  298C               	goto	l592
  4941     092F                     l2882:
  4942     092F  083A               	movf	___fltol@f1,w
  4943     0930  00BE               	movwf	??___fltol
  4944     0931  083B               	movf	___fltol@f1+1,w
  4945     0932  00BF               	movwf	??___fltol+1
  4946     0933  083C               	movf	___fltol@f1+2,w
  4947     0934  00C0               	movwf	??___fltol+2
  4948     0935  083D               	movf	___fltol@f1+3,w
  4949     0936  00C1               	movwf	??___fltol+3
  4950     0937  301F               	movlw	31
  4951     0938                     u3405:
  4952     0938  36C1               	lsrf	??___fltol+3,f
  4953     0939  0CC0               	rrf	??___fltol+2,f
  4954     093A  0CBF               	rrf	??___fltol+1,f
  4955     093B  0CBE               	rrf	??___fltol,f
  4956     093C                     u3400:
  4957     093C  0B89               	decfsz	9,f
  4958     093D  2938               	goto	u3405
  4959     093E  083E               	movf	??___fltol,w
  4960     093F  00C2               	movwf	___fltol@sign1
  4961     0940                     l2884:
  4962     0940  17BC               	bsf	___fltol@f1+2,7
  4963     0941                     l2886:
  4964     0941  30FF               	movlw	255
  4965     0942  05BA               	andwf	___fltol@f1,f
  4966     0943  30FF               	movlw	255
  4967     0944  05BB               	andwf	___fltol@f1+1,f
  4968     0945  30FF               	movlw	255
  4969     0946  05BC               	andwf	___fltol@f1+2,f
  4970     0947  3000               	movlw	0
  4971     0948  05BD               	andwf	___fltol@f1+3,f
  4972     0949                     l2888:
  4973     0949  3096               	movlw	150
  4974     094A  02C3               	subwf	___fltol@exp1,f
  4975     094B                     l2890:
  4976     094B  1FC3               	btfss	___fltol@exp1,7
  4977     094C  294E               	goto	u3411
  4978     094D  294F               	goto	u3410
  4979     094E                     u3411:
  4980     094E  2967               	goto	l2900
  4981     094F                     u3410:
  4982     094F                     l2892:
  4983     094F  0843               	movf	___fltol@exp1,w
  4984     0950  3A80               	xorlw	128
  4985     0951  3E97               	addlw	151
  4986     0952  1803               	skipnc
  4987     0953  2955               	goto	u3421
  4988     0954  2956               	goto	u3420
  4989     0955                     u3421:
  4990     0955  2957               	goto	l2898
  4991     0956                     u3420:
  4992     0956  2926               	goto	l2878
  4993     0957                     l2898:
  4994     0957  3001               	movlw	1
  4995     0958                     u3435:
  4996     0958  36BD               	lsrf	___fltol@f1+3,f
  4997     0959  0CBC               	rrf	___fltol@f1+2,f
  4998     095A  0CBB               	rrf	___fltol@f1+1,f
  4999     095B  0CBA               	rrf	___fltol@f1,f
  5000     095C  0B89               	decfsz	9,f
  5001     095D  2958               	goto	u3435
  5002     095E  3001               	movlw	1
  5003     095F  00BE               	movwf	??___fltol
  5004     0960  083E               	movf	??___fltol,w
  5005     0961  07C3               	addwf	___fltol@exp1,f
  5006     0962  1D03               	btfss	3,2
  5007     0963  2965               	goto	u3441
  5008     0964  2966               	goto	u3440
  5009     0965                     u3441:
  5010     0965  2957               	goto	l2898
  5011     0966                     u3440:
  5012     0966  297C               	goto	l2908
  5013     0967                     l2900:
  5014     0967  3020               	movlw	32
  5015     0968  0243               	subwf	___fltol@exp1,w
  5016     0969  1C03               	skipc
  5017     096A  296C               	goto	u3451
  5018     096B  296D               	goto	u3450
  5019     096C                     u3451:
  5020     096C  2977               	goto	l599
  5021     096D                     u3450:
  5022     096D  2926               	goto	l2878
  5023     096E                     l2906:
  5024     096E  3001               	movlw	1
  5025     096F                     u3465:
  5026     096F  35BA               	lslf	___fltol@f1,f
  5027     0970  0DBB               	rlf	___fltol@f1+1,f
  5028     0971  0DBC               	rlf	___fltol@f1+2,f
  5029     0972  0DBD               	rlf	___fltol@f1+3,f
  5030     0973  0B89               	decfsz	9,f
  5031     0974  296F               	goto	u3465
  5032     0975  3001               	movlw	1
  5033     0976  02C3               	subwf	___fltol@exp1,f
  5034     0977                     l599:
  5035     0977  0843               	movf	___fltol@exp1,w
  5036     0978  1D03               	btfss	3,2
  5037     0979  297B               	goto	u3471
  5038     097A  297C               	goto	u3470
  5039     097B                     u3471:
  5040     097B  296E               	goto	l2906
  5041     097C                     u3470:
  5042     097C                     l2908:
  5043     097C  0842               	movf	___fltol@sign1,w
  5044     097D  1903               	btfsc	3,2
  5045     097E  2980               	goto	u3481
  5046     097F  2981               	goto	u3480
  5047     0980                     u3481:
  5048     0980  298C               	goto	l602
  5049     0981                     u3480:
  5050     0981                     l2910:
  5051     0981  09BA               	comf	___fltol@f1,f
  5052     0982  09BB               	comf	___fltol@f1+1,f
  5053     0983  09BC               	comf	___fltol@f1+2,f
  5054     0984  09BD               	comf	___fltol@f1+3,f
  5055     0985  0ABA               	incf	___fltol@f1,f
  5056     0986  1903               	skipnz
  5057     0987  0ABB               	incf	___fltol@f1+1,f
  5058     0988  1903               	skipnz
  5059     0989  0ABC               	incf	___fltol@f1+2,f
  5060     098A  1903               	skipnz
  5061     098B  0ABD               	incf	___fltol@f1+3,f
  5062     098C                     l602:
  5063     098C                     l592:
  5064     098C  0008               	return
  5065     098D                     __end_of___fltol:
  5066                           
  5067                           	psect	text10
  5068     14CB                     __ptext10:	
  5069 ;; *************** function ___flsub *****************
  5070 ;; Defined at:
  5071 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcadd.c"
  5072 ;; Parameters:    Size  Location     Type
  5073 ;;  a               4    8[BANK0 ] long 
  5074 ;;  b               4   12[BANK0 ] long 
  5075 ;; Auto vars:     Size  Location     Type
  5076 ;;		None
  5077 ;; Return value:  Size  Location     Type
  5078 ;;                  4    8[BANK0 ] long 
  5079 ;; Registers used:
  5080 ;;		wreg, status,2, status,0, pclath, cstack
  5081 ;; Tracked objects:
  5082 ;;		On entry : 0/0
  5083 ;;		On exit  : 0/0
  5084 ;;		Unchanged: 0/0
  5085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5086 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5089 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5090 ;;Total ram usage:        8 bytes
  5091 ;; Hardware stack levels used: 1
  5092 ;; Hardware stack levels required when called: 1
  5093 ;; This function calls:
  5094 ;;		___fladd
  5095 ;; This function is called by:
  5096 ;;		_ftoa
  5097 ;; This function uses a non-reentrant model
  5098 ;;
  5099                           
  5100     14CB                     ___flsub:	
  5101                           ;psect for function ___flsub
  5102                           
  5103     14CB                     l2912:	
  5104                           ;incstack = 0
  5105                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
  5106                           
  5107     14CB  3080               	movlw	128
  5108     14CC  0020               	movlb	0	; select bank0
  5109     14CD  06AB               	xorwf	___flsub@a+3,f
  5110     14CE                     l2914:
  5111     14CE  082F               	movf	___flsub@b+3,w
  5112     14CF  00F3               	movwf	___fladd@b+3
  5113     14D0  082E               	movf	___flsub@b+2,w
  5114     14D1  00F2               	movwf	___fladd@b+2
  5115     14D2  082D               	movf	___flsub@b+1,w
  5116     14D3  00F1               	movwf	___fladd@b+1
  5117     14D4  082C               	movf	___flsub@b,w
  5118     14D5  00F0               	movwf	___fladd@b
  5119     14D6  082B               	movf	___flsub@a+3,w
  5120     14D7  00F7               	movwf	___fladd@a+3
  5121     14D8  082A               	movf	___flsub@a+2,w
  5122     14D9  00F6               	movwf	___fladd@a+2
  5123     14DA  0829               	movf	___flsub@a+1,w
  5124     14DB  00F5               	movwf	___fladd@a+1
  5125     14DC  0828               	movf	___flsub@a,w
  5126     14DD  00F4               	movwf	___fladd@a
  5127     14DE  3180  204A  3194   	fcall	___fladd
  5128     14E1  0873               	movf	?___fladd+3,w
  5129     14E2  0020               	movlb	0	; select bank0
  5130     14E3  00AB               	movwf	?___flsub+3
  5131     14E4  0872               	movf	?___fladd+2,w
  5132     14E5  00AA               	movwf	?___flsub+2
  5133     14E6  0871               	movf	?___fladd+1,w
  5134     14E7  00A9               	movwf	?___flsub+1
  5135     14E8  0870               	movf	?___fladd,w
  5136     14E9  00A8               	movwf	?___flsub
  5137     14EA                     l745:
  5138     14EA  0008               	return
  5139     14EB                     __end_of___flsub:
  5140                           
  5141                           	psect	text11
  5142     004A                     __ptext11:	
  5143 ;; *************** function ___fladd *****************
  5144 ;; Defined at:
  5145 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcadd.c"
  5146 ;; Parameters:    Size  Location     Type
  5147 ;;  b               4    0[COMMON] long 
  5148 ;;  a               4    4[COMMON] long 
  5149 ;; Auto vars:     Size  Location     Type
  5150 ;;  grs             1   11[COMMON] unsigned char 
  5151 ;;  bexp            1   10[COMMON] unsigned char 
  5152 ;;  aexp            1    9[COMMON] unsigned char 
  5153 ;;  signs           1    8[COMMON] unsigned char 
  5154 ;; Return value:  Size  Location     Type
  5155 ;;                  4    0[COMMON] unsigned char 
  5156 ;; Registers used:
  5157 ;;		wreg, status,2, status,0
  5158 ;; Tracked objects:
  5159 ;;		On entry : 0/0
  5160 ;;		On exit  : 0/0
  5161 ;;		Unchanged: 0/0
  5162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5163 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5164 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5165 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5166 ;;      Totals:        12       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5167 ;;Total ram usage:       20 bytes
  5168 ;; Hardware stack levels used: 1
  5169 ;; This function calls:
  5170 ;;		Nothing
  5171 ;; This function is called by:
  5172 ;;		_main
  5173 ;;		___flsub
  5174 ;; This function uses a non-reentrant model
  5175 ;;
  5176                           
  5177     004A                     ___fladd:	
  5178                           ;psect for function ___fladd
  5179                           
  5180     004A                     l2544:	
  5181                           ;incstack = 0
  5182                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  5183                           
  5184     004A  0873               	movf	___fladd@b+3,w
  5185     004B  3980               	andlw	128
  5186     004C  00F8               	movwf	___fladd@signs
  5187     004D                     l2546:
  5188     004D  3573               	lslf	___fladd@b+3,w
  5189     004E  00FA               	movwf	___fladd@bexp
  5190     004F                     l2548:
  5191     004F  1FF2               	btfss	___fladd@b+2,7
  5192     0050  2852               	goto	u2751
  5193     0051  2853               	goto	u2750
  5194     0052                     u2751:
  5195     0052  2854               	goto	l2552
  5196     0053                     u2750:
  5197     0053                     l2550:
  5198     0053  147A               	bsf	___fladd@bexp,0
  5199     0054                     l2552:
  5200     0054  087A               	movf	___fladd@bexp,w
  5201     0055  1903               	btfsc	3,2
  5202     0056  2858               	goto	u2761
  5203     0057  2859               	goto	u2760
  5204     0058                     u2761:
  5205     0058  2869               	goto	l2562
  5206     0059                     u2760:
  5207     0059                     l2554:
  5208     0059  0A7A               	incf	___fladd@bexp,w
  5209     005A  1D03               	btfss	3,2
  5210     005B  285D               	goto	u2771
  5211     005C  285E               	goto	u2770
  5212     005D                     u2771:
  5213     005D  2866               	goto	l2558
  5214     005E                     u2770:
  5215     005E                     l2556:
  5216     005E  3000               	movlw	0
  5217     005F  00F3               	movwf	___fladd@b+3
  5218     0060  3000               	movlw	0
  5219     0061  00F2               	movwf	___fladd@b+2
  5220     0062  3000               	movlw	0
  5221     0063  00F1               	movwf	___fladd@b+1
  5222     0064  3000               	movlw	0
  5223     0065  00F0               	movwf	___fladd@b
  5224     0066                     l2558:
  5225     0066  17F2               	bsf	___fladd@b+2,7
  5226     0067                     l2560:
  5227     0067  01F3               	clrf	___fladd@b+3
  5228     0068  2871               	goto	l2564
  5229     0069                     l2562:
  5230     0069  3000               	movlw	0
  5231     006A  00F3               	movwf	___fladd@b+3
  5232     006B  3000               	movlw	0
  5233     006C  00F2               	movwf	___fladd@b+2
  5234     006D  3000               	movlw	0
  5235     006E  00F1               	movwf	___fladd@b+1
  5236     006F  3000               	movlw	0
  5237     0070  00F0               	movwf	___fladd@b
  5238     0071                     l2564:
  5239     0071  0877               	movf	___fladd@a+3,w
  5240     0072  3980               	andlw	128
  5241     0073  00F9               	movwf	___fladd@aexp
  5242     0074                     l2566:
  5243     0074  0879               	movf	___fladd@aexp,w
  5244     0075  0678               	xorwf	___fladd@signs,w
  5245     0076  1903               	skipnz
  5246     0077  2879               	goto	u2781
  5247     0078  287A               	goto	u2780
  5248     0079                     u2781:
  5249     0079  287B               	goto	l2570
  5250     007A                     u2780:
  5251     007A                     l2568:
  5252     007A  1778               	bsf	___fladd@signs,6
  5253     007B                     l2570:
  5254     007B  3577               	lslf	___fladd@a+3,w
  5255     007C  00F9               	movwf	___fladd@aexp
  5256     007D                     l2572:
  5257     007D  1FF6               	btfss	___fladd@a+2,7
  5258     007E  2880               	goto	u2791
  5259     007F  2881               	goto	u2790
  5260     0080                     u2791:
  5261     0080  2882               	goto	l2576
  5262     0081                     u2790:
  5263     0081                     l2574:
  5264     0081  1479               	bsf	___fladd@aexp,0
  5265     0082                     l2576:
  5266     0082  0879               	movf	___fladd@aexp,w
  5267     0083  1903               	btfsc	3,2
  5268     0084  2886               	goto	u2801
  5269     0085  2887               	goto	u2800
  5270     0086                     u2801:
  5271     0086  2897               	goto	l2586
  5272     0087                     u2800:
  5273     0087                     l2578:
  5274     0087  0A79               	incf	___fladd@aexp,w
  5275     0088  1D03               	btfss	3,2
  5276     0089  288B               	goto	u2811
  5277     008A  288C               	goto	u2810
  5278     008B                     u2811:
  5279     008B  2894               	goto	l2582
  5280     008C                     u2810:
  5281     008C                     l2580:
  5282     008C  3000               	movlw	0
  5283     008D  00F7               	movwf	___fladd@a+3
  5284     008E  3000               	movlw	0
  5285     008F  00F6               	movwf	___fladd@a+2
  5286     0090  3000               	movlw	0
  5287     0091  00F5               	movwf	___fladd@a+1
  5288     0092  3000               	movlw	0
  5289     0093  00F4               	movwf	___fladd@a
  5290     0094                     l2582:
  5291     0094  17F6               	bsf	___fladd@a+2,7
  5292     0095                     l2584:
  5293     0095  01F7               	clrf	___fladd@a+3
  5294     0096  289F               	goto	l699
  5295     0097                     l2586:
  5296     0097  3000               	movlw	0
  5297     0098  00F7               	movwf	___fladd@a+3
  5298     0099  3000               	movlw	0
  5299     009A  00F6               	movwf	___fladd@a+2
  5300     009B  3000               	movlw	0
  5301     009C  00F5               	movwf	___fladd@a+1
  5302     009D  3000               	movlw	0
  5303     009E  00F4               	movwf	___fladd@a
  5304     009F                     l699:
  5305     009F  087A               	movf	___fladd@bexp,w
  5306     00A0  0279               	subwf	___fladd@aexp,w
  5307     00A1  1803               	skipnc
  5308     00A2  28A4               	goto	u2821
  5309     00A3  28A5               	goto	u2820
  5310     00A4                     u2821:
  5311     00A4  28CC               	goto	l2622
  5312     00A5                     u2820:
  5313     00A5                     l2588:
  5314     00A5  1F78               	btfss	___fladd@signs,6
  5315     00A6  28A8               	goto	u2831
  5316     00A7  28A9               	goto	u2830
  5317     00A8                     u2831:
  5318     00A8  28AE               	goto	l2592
  5319     00A9                     u2830:
  5320     00A9                     l2590:
  5321     00A9  3080               	movlw	128
  5322     00AA  0020               	movlb	0	; select bank0
  5323     00AB  00A0               	movwf	??___fladd
  5324     00AC  0820               	movf	??___fladd,w
  5325     00AD  06F8               	xorwf	___fladd@signs,f
  5326     00AE                     l2592:
  5327     00AE  087A               	movf	___fladd@bexp,w
  5328     00AF  00FB               	movwf	___fladd@grs
  5329     00B0                     l2594:
  5330     00B0  0879               	movf	___fladd@aexp,w
  5331     00B1  00FA               	movwf	___fladd@bexp
  5332     00B2                     l2596:
  5333     00B2  087B               	movf	___fladd@grs,w
  5334     00B3  00F9               	movwf	___fladd@aexp
  5335     00B4                     l2598:
  5336     00B4  0870               	movf	___fladd@b,w
  5337     00B5  00FB               	movwf	___fladd@grs
  5338     00B6                     l2600:
  5339     00B6  0874               	movf	___fladd@a,w
  5340     00B7  00F0               	movwf	___fladd@b
  5341     00B8                     l2602:
  5342     00B8  087B               	movf	___fladd@grs,w
  5343     00B9  00F4               	movwf	___fladd@a
  5344     00BA                     l2604:
  5345     00BA  0871               	movf	___fladd@b+1,w
  5346     00BB  00FB               	movwf	___fladd@grs
  5347     00BC                     l2606:
  5348     00BC  0875               	movf	___fladd@a+1,w
  5349     00BD  00F1               	movwf	___fladd@b+1
  5350     00BE                     l2608:
  5351     00BE  087B               	movf	___fladd@grs,w
  5352     00BF  00F5               	movwf	___fladd@a+1
  5353     00C0                     l2610:
  5354     00C0  0872               	movf	___fladd@b+2,w
  5355     00C1  00FB               	movwf	___fladd@grs
  5356     00C2                     l2612:
  5357     00C2  0876               	movf	___fladd@a+2,w
  5358     00C3  00F2               	movwf	___fladd@b+2
  5359     00C4                     l2614:
  5360     00C4  087B               	movf	___fladd@grs,w
  5361     00C5  00F6               	movwf	___fladd@a+2
  5362     00C6                     l2616:
  5363     00C6  0873               	movf	___fladd@b+3,w
  5364     00C7  00FB               	movwf	___fladd@grs
  5365     00C8                     l2618:
  5366     00C8  0877               	movf	___fladd@a+3,w
  5367     00C9  00F3               	movwf	___fladd@b+3
  5368     00CA                     l2620:
  5369     00CA  087B               	movf	___fladd@grs,w
  5370     00CB  00F7               	movwf	___fladd@a+3
  5371     00CC                     l2622:
  5372     00CC  01FB               	clrf	___fladd@grs
  5373     00CD                     l2624:
  5374     00CD  0879               	movf	___fladd@aexp,w
  5375     00CE  0020               	movlb	0	; select bank0
  5376     00CF  00A0               	movwf	??___fladd
  5377     00D0  01A1               	clrf	??___fladd+1
  5378     00D1  0821               	movf	??___fladd+1,w
  5379     00D2  00A3               	movwf	??___fladd+3
  5380     00D3  087A               	movf	___fladd@bexp,w
  5381     00D4  0220               	subwf	??___fladd,w
  5382     00D5  00A2               	movwf	??___fladd+2
  5383     00D6  1C03               	skipc
  5384     00D7  03A3               	decf	??___fladd+3,f
  5385     00D8  0823               	movf	??___fladd+3,w
  5386     00D9  3A80               	xorlw	128
  5387     00DA  00A4               	movwf	??___fladd+4
  5388     00DB  3080               	movlw	128
  5389     00DC  0224               	subwf	??___fladd+4,w
  5390     00DD  1D03               	skipz
  5391     00DE  28E1               	goto	u2845
  5392     00DF  301A               	movlw	26
  5393     00E0  0222               	subwf	??___fladd+2,w
  5394     00E1                     u2845:
  5395     00E1  1C03               	skipc
  5396     00E2  28E4               	goto	u2841
  5397     00E3  28E5               	goto	u2840
  5398     00E4                     u2841:
  5399     00E4  2917               	goto	l2640
  5400     00E5                     u2840:
  5401     00E5                     l2626:
  5402     00E5  0873               	movf	___fladd@b+3,w
  5403     00E6  0472               	iorwf	___fladd@b+2,w
  5404     00E7  0471               	iorwf	___fladd@b+1,w
  5405     00E8  0470               	iorwf	___fladd@b,w
  5406     00E9  1D03               	skipz
  5407     00EA  28EC               	goto	u2851
  5408     00EB  28EE               	goto	u2850
  5409     00EC                     u2851:
  5410     00EC  3001               	movlw	1
  5411     00ED  28EF               	goto	u2860
  5412     00EE                     u2850:
  5413     00EE  3000               	movlw	0
  5414     00EF                     u2860:
  5415     00EF  00FB               	movwf	___fladd@grs
  5416     00F0  3000               	movlw	0
  5417     00F1  00F3               	movwf	___fladd@b+3
  5418     00F2  3000               	movlw	0
  5419     00F3  00F2               	movwf	___fladd@b+2
  5420     00F4  3000               	movlw	0
  5421     00F5  00F1               	movwf	___fladd@b+1
  5422     00F6  3000               	movlw	0
  5423     00F7  00F0               	movwf	___fladd@b
  5424     00F8  0879               	movf	___fladd@aexp,w
  5425     00F9  00FA               	movwf	___fladd@bexp
  5426     00FA  291D               	goto	l703
  5427     00FB                     l705:
  5428     00FB  1C7B               	btfss	___fladd@grs,0
  5429     00FC  28FE               	goto	u2871
  5430     00FD  28FF               	goto	u2870
  5431     00FE                     u2871:
  5432     00FE  2903               	goto	l2630
  5433     00FF                     u2870:
  5434     00FF                     l2628:
  5435     00FF  367B               	lsrf	___fladd@grs,w
  5436     0100  3801               	iorlw	1
  5437     0101  00FB               	movwf	___fladd@grs
  5438     0102  2905               	goto	l2632
  5439     0103                     l2630:
  5440     0103  1003               	clrc
  5441     0104  0CFB               	rrf	___fladd@grs,f
  5442     0105                     l2632:
  5443     0105  1C70               	btfss	___fladd@b,0
  5444     0106  2908               	goto	u2881
  5445     0107  2909               	goto	u2880
  5446     0108                     u2881:
  5447     0108  290A               	goto	l2636
  5448     0109                     u2880:
  5449     0109                     l2634:
  5450     0109  17FB               	bsf	___fladd@grs,7
  5451     010A                     l2636:
  5452     010A  3001               	movlw	1
  5453     010B  0020               	movlb	0	; select bank0
  5454     010C  00A0               	movwf	??___fladd
  5455     010D                     u2895:
  5456     010D  37F3               	asrf	___fladd@b+3,f
  5457     010E  0CF2               	rrf	___fladd@b+2,f
  5458     010F  0CF1               	rrf	___fladd@b+1,f
  5459     0110  0CF0               	rrf	___fladd@b,f
  5460     0111  0BA0               	decfsz	??___fladd& (0+127),f
  5461     0112  290D               	goto	u2895
  5462     0113                     l2638:
  5463     0113  3001               	movlw	1
  5464     0114  00A0               	movwf	??___fladd
  5465     0115  0820               	movf	??___fladd,w
  5466     0116  07FA               	addwf	___fladd@bexp,f
  5467     0117                     l2640:
  5468     0117  0879               	movf	___fladd@aexp,w
  5469     0118  027A               	subwf	___fladd@bexp,w
  5470     0119  1C03               	skipc
  5471     011A  291C               	goto	u2901
  5472     011B  291D               	goto	u2900
  5473     011C                     u2901:
  5474     011C  28FB               	goto	l705
  5475     011D                     u2900:
  5476     011D                     l703:
  5477     011D  1B78               	btfsc	___fladd@signs,6
  5478     011E  2920               	goto	u2911
  5479     011F  2921               	goto	u2910
  5480     0120                     u2911:
  5481     0120  2958               	goto	l2666
  5482     0121                     u2910:
  5483     0121                     l2642:
  5484     0121  087A               	movf	___fladd@bexp,w
  5485     0122  1D03               	btfss	3,2
  5486     0123  2925               	goto	u2921
  5487     0124  2926               	goto	u2920
  5488     0125                     u2921:
  5489     0125  292F               	goto	l2648
  5490     0126                     u2920:
  5491     0126                     l2644:
  5492     0126  3000               	movlw	0
  5493     0127  00F3               	movwf	?___fladd+3
  5494     0128  3000               	movlw	0
  5495     0129  00F2               	movwf	?___fladd+2
  5496     012A  3000               	movlw	0
  5497     012B  00F1               	movwf	?___fladd+1
  5498     012C  3000               	movlw	0
  5499     012D  00F0               	movwf	?___fladd
  5500     012E  2A55               	goto	l712
  5501     012F                     l2648:
  5502     012F  0874               	movf	___fladd@a,w
  5503     0130  07F0               	addwf	___fladd@b,f
  5504     0131  0875               	movf	___fladd@a+1,w
  5505     0132  3DF1               	addwfc	___fladd@b+1,f
  5506     0133  0876               	movf	___fladd@a+2,w
  5507     0134  3DF2               	addwfc	___fladd@b+2,f
  5508     0135  0877               	movf	___fladd@a+3,w
  5509     0136  3DF3               	addwfc	___fladd@b+3,f
  5510     0137                     l2650:
  5511     0137  1C73               	btfss	___fladd@b+3,0
  5512     0138  293A               	goto	u2931
  5513     0139  293B               	goto	u2930
  5514     013A                     u2931:
  5515     013A  29E5               	goto	l2700
  5516     013B                     u2930:
  5517     013B                     l2652:
  5518     013B  1C7B               	btfss	___fladd@grs,0
  5519     013C  293E               	goto	u2941
  5520     013D  293F               	goto	u2940
  5521     013E                     u2941:
  5522     013E  2943               	goto	l2656
  5523     013F                     u2940:
  5524     013F                     l2654:
  5525     013F  367B               	lsrf	___fladd@grs,w
  5526     0140  3801               	iorlw	1
  5527     0141  00FB               	movwf	___fladd@grs
  5528     0142  2945               	goto	l2658
  5529     0143                     l2656:
  5530     0143  1003               	clrc
  5531     0144  0CFB               	rrf	___fladd@grs,f
  5532     0145                     l2658:
  5533     0145  1C70               	btfss	___fladd@b,0
  5534     0146  2948               	goto	u2951
  5535     0147  2949               	goto	u2950
  5536     0148                     u2951:
  5537     0148  294A               	goto	l2662
  5538     0149                     u2950:
  5539     0149                     l2660:
  5540     0149  17FB               	bsf	___fladd@grs,7
  5541     014A                     l2662:
  5542     014A  3001               	movlw	1
  5543     014B  0020               	movlb	0	; select bank0
  5544     014C  00A0               	movwf	??___fladd
  5545     014D                     u2965:
  5546     014D  37F3               	asrf	___fladd@b+3,f
  5547     014E  0CF2               	rrf	___fladd@b+2,f
  5548     014F  0CF1               	rrf	___fladd@b+1,f
  5549     0150  0CF0               	rrf	___fladd@b,f
  5550     0151  0BA0               	decfsz	??___fladd& (0+127),f
  5551     0152  294D               	goto	u2965
  5552     0153                     l2664:
  5553     0153  3001               	movlw	1
  5554     0154  00A0               	movwf	??___fladd
  5555     0155  0820               	movf	??___fladd,w
  5556     0156  07FA               	addwf	___fladd@bexp,f
  5557     0157  29E5               	goto	l2700
  5558     0158                     l2666:
  5559     0158  0873               	movf	___fladd@b+3,w
  5560     0159  3A80               	xorlw	128
  5561     015A  0020               	movlb	0	; select bank0
  5562     015B  00A0               	movwf	??___fladd
  5563     015C  0877               	movf	___fladd@a+3,w
  5564     015D  3A80               	xorlw	128
  5565     015E  0220               	subwf	??___fladd,w
  5566     015F  1D03               	skipz
  5567     0160  296B               	goto	u2973
  5568     0161  0876               	movf	___fladd@a+2,w
  5569     0162  0272               	subwf	___fladd@b+2,w
  5570     0163  1D03               	skipz
  5571     0164  296B               	goto	u2973
  5572     0165  0875               	movf	___fladd@a+1,w
  5573     0166  0271               	subwf	___fladd@b+1,w
  5574     0167  1D03               	skipz
  5575     0168  296B               	goto	u2973
  5576     0169  0874               	movf	___fladd@a,w
  5577     016A  0270               	subwf	___fladd@b,w
  5578     016B                     u2973:
  5579     016B  1803               	skipnc
  5580     016C  296E               	goto	u2971
  5581     016D  296F               	goto	u2970
  5582     016E                     u2971:
  5583     016E  29A7               	goto	l2676
  5584     016F                     u2970:
  5585     016F                     l2668:
  5586     016F  30FF               	movlw	255
  5587     0170  00A0               	movwf	??___fladd
  5588     0171  30FF               	movlw	255
  5589     0172  00A1               	movwf	??___fladd+1
  5590     0173  30FF               	movlw	255
  5591     0174  00A2               	movwf	??___fladd+2
  5592     0175  30FF               	movlw	255
  5593     0176  00A3               	movwf	??___fladd+3
  5594     0177  0870               	movf	___fladd@b,w
  5595     0178  0274               	subwf	___fladd@a,w
  5596     0179  00A4               	movwf	??___fladd+4
  5597     017A  0871               	movf	___fladd@b+1,w
  5598     017B  3B75               	subwfb	___fladd@a+1,w
  5599     017C  00A5               	movwf	??___fladd+5
  5600     017D  0872               	movf	___fladd@b+2,w
  5601     017E  3B76               	subwfb	___fladd@a+2,w
  5602     017F  00A6               	movwf	??___fladd+6
  5603     0180  0873               	movf	___fladd@b+3,w
  5604     0181  3B77               	subwfb	___fladd@a+3,w
  5605     0182  00A7               	movwf	??___fladd+7
  5606     0183  0824               	movf	??___fladd+4,w
  5607     0184  07A0               	addwf	??___fladd,f
  5608     0185  0825               	movf	??___fladd+5,w
  5609     0186  3DA1               	addwfc	??___fladd+1,f
  5610     0187  0826               	movf	??___fladd+6,w
  5611     0188  3DA2               	addwfc	??___fladd+2,f
  5612     0189  0827               	movf	??___fladd+7,w
  5613     018A  3DA3               	addwfc	??___fladd+3,f
  5614     018B  0823               	movf	??___fladd+3,w
  5615     018C  00F3               	movwf	___fladd@b+3
  5616     018D  0822               	movf	??___fladd+2,w
  5617     018E  00F2               	movwf	___fladd@b+2
  5618     018F  0821               	movf	??___fladd+1,w
  5619     0190  00F1               	movwf	___fladd@b+1
  5620     0191  0820               	movf	??___fladd,w
  5621     0192  00F0               	movwf	___fladd@b
  5622     0193                     l2670:
  5623     0193  3080               	movlw	128
  5624     0194  00A0               	movwf	??___fladd
  5625     0195  0820               	movf	??___fladd,w
  5626     0196  06F8               	xorwf	___fladd@signs,f
  5627     0197  09FB               	comf	___fladd@grs,f
  5628     0198  0AFB               	incf	___fladd@grs,f
  5629     0199                     l2672:
  5630     0199  087B               	movf	___fladd@grs,w
  5631     019A  1D03               	btfss	3,2
  5632     019B  299D               	goto	u2981
  5633     019C  299E               	goto	u2980
  5634     019D                     u2981:
  5635     019D  29AF               	goto	l720
  5636     019E                     u2980:
  5637     019E                     l2674:
  5638     019E  3001               	movlw	1
  5639     019F  07F0               	addwf	___fladd@b,f
  5640     01A0  3000               	movlw	0
  5641     01A1  3DF1               	addwfc	___fladd@b+1,f
  5642     01A2  3000               	movlw	0
  5643     01A3  3DF2               	addwfc	___fladd@b+2,f
  5644     01A4  3000               	movlw	0
  5645     01A5  3DF3               	addwfc	___fladd@b+3,f
  5646     01A6  29AF               	goto	l720
  5647     01A7                     l2676:
  5648     01A7  0874               	movf	___fladd@a,w
  5649     01A8  02F0               	subwf	___fladd@b,f
  5650     01A9  0875               	movf	___fladd@a+1,w
  5651     01AA  3BF1               	subwfb	___fladd@b+1,f
  5652     01AB  0876               	movf	___fladd@a+2,w
  5653     01AC  3BF2               	subwfb	___fladd@b+2,f
  5654     01AD  0877               	movf	___fladd@a+3,w
  5655     01AE  3BF3               	subwfb	___fladd@b+3,f
  5656     01AF                     l720:
  5657     01AF  0873               	movf	___fladd@b+3,w
  5658     01B0  0472               	iorwf	___fladd@b+2,w
  5659     01B1  0471               	iorwf	___fladd@b+1,w
  5660     01B2  0470               	iorwf	___fladd@b,w
  5661     01B3  1D03               	skipz
  5662     01B4  29B6               	goto	u2991
  5663     01B5  29B7               	goto	u2990
  5664     01B6                     u2991:
  5665     01B6  29E1               	goto	l2698
  5666     01B7                     u2990:
  5667     01B7                     l2678:
  5668     01B7  087B               	movf	___fladd@grs,w
  5669     01B8  1D03               	btfss	3,2
  5670     01B9  29BB               	goto	u3001
  5671     01BA  29BC               	goto	u3000
  5672     01BB                     u3001:
  5673     01BB  29E1               	goto	l2698
  5674     01BC                     u3000:
  5675     01BC                     l2680:
  5676     01BC  3000               	movlw	0
  5677     01BD  00F3               	movwf	?___fladd+3
  5678     01BE  3000               	movlw	0
  5679     01BF  00F2               	movwf	?___fladd+2
  5680     01C0  3000               	movlw	0
  5681     01C1  00F1               	movwf	?___fladd+1
  5682     01C2  3000               	movlw	0
  5683     01C3  00F0               	movwf	?___fladd
  5684     01C4  2A55               	goto	l712
  5685     01C5                     l2684:
  5686     01C5  3001               	movlw	1
  5687     01C6                     u3015:
  5688     01C6  35F0               	lslf	___fladd@b,f
  5689     01C7  0DF1               	rlf	___fladd@b+1,f
  5690     01C8  0DF2               	rlf	___fladd@b+2,f
  5691     01C9  0DF3               	rlf	___fladd@b+3,f
  5692     01CA  0B89               	decfsz	9,f
  5693     01CB  29C6               	goto	u3015
  5694     01CC                     l2686:
  5695     01CC  1FFB               	btfss	___fladd@grs,7
  5696     01CD  29CF               	goto	u3021
  5697     01CE  29D0               	goto	u3020
  5698     01CF                     u3021:
  5699     01CF  29D1               	goto	l724
  5700     01D0                     u3020:
  5701     01D0                     l2688:
  5702     01D0  1470               	bsf	___fladd@b,0
  5703     01D1                     l724:
  5704     01D1  1C7B               	btfss	___fladd@grs,0
  5705     01D2  29D4               	goto	u3031
  5706     01D3  29D5               	goto	u3030
  5707     01D4                     u3031:
  5708     01D4  29D8               	goto	l2692
  5709     01D5                     u3030:
  5710     01D5                     l2690:
  5711     01D5  1403               	setc
  5712     01D6  0DFB               	rlf	___fladd@grs,f
  5713     01D7  29DA               	goto	l2694
  5714     01D8                     l2692:
  5715     01D8  1003               	clrc
  5716     01D9  0DFB               	rlf	___fladd@grs,f
  5717     01DA                     l2694:
  5718     01DA  087A               	movf	___fladd@bexp,w
  5719     01DB  1903               	btfsc	3,2
  5720     01DC  29DE               	goto	u3041
  5721     01DD  29DF               	goto	u3040
  5722     01DE                     u3041:
  5723     01DE  29E1               	goto	l2698
  5724     01DF                     u3040:
  5725     01DF                     l2696:
  5726     01DF  3001               	movlw	1
  5727     01E0  02FA               	subwf	___fladd@bexp,f
  5728     01E1                     l2698:
  5729     01E1  1FF2               	btfss	___fladd@b+2,7
  5730     01E2  29E4               	goto	u3051
  5731     01E3  29E5               	goto	u3050
  5732     01E4                     u3051:
  5733     01E4  29C5               	goto	l2684
  5734     01E5                     u3050:
  5735     01E5                     l2700:
  5736     01E5  01F9               	clrf	___fladd@aexp
  5737     01E6                     l2702:
  5738     01E6  1FFB               	btfss	___fladd@grs,7
  5739     01E7  29E9               	goto	u3061
  5740     01E8  29EA               	goto	u3060
  5741     01E9                     u3061:
  5742     01E9  29F8               	goto	l2710
  5743     01EA                     u3060:
  5744     01EA                     l2704:
  5745     01EA  087B               	movf	___fladd@grs,w
  5746     01EB  397F               	andlw	127
  5747     01EC  1903               	btfsc	3,2
  5748     01ED  29EF               	goto	u3071
  5749     01EE  29F0               	goto	u3070
  5750     01EF                     u3071:
  5751     01EF  29F3               	goto	l730
  5752     01F0                     u3070:
  5753     01F0                     l2706:
  5754     01F0  01F9               	clrf	___fladd@aexp
  5755     01F1  0AF9               	incf	___fladd@aexp,f
  5756     01F2  29F8               	goto	l2710
  5757     01F3                     l730:
  5758     01F3  1C70               	btfss	___fladd@b,0
  5759     01F4  29F6               	goto	u3081
  5760     01F5  29F7               	goto	u3080
  5761     01F6                     u3081:
  5762     01F6  29F8               	goto	l2710
  5763     01F7                     u3080:
  5764     01F7  29F0               	goto	l2706
  5765     01F8                     l2710:
  5766     01F8  0879               	movf	___fladd@aexp,w
  5767     01F9  1903               	btfsc	3,2
  5768     01FA  29FC               	goto	u3091
  5769     01FB  29FD               	goto	u3090
  5770     01FC                     u3091:
  5771     01FC  2A2B               	goto	l733
  5772     01FD                     u3090:
  5773     01FD                     l2712:
  5774     01FD  3001               	movlw	1
  5775     01FE  07F0               	addwf	___fladd@b,f
  5776     01FF  3000               	movlw	0
  5777     0200  3DF1               	addwfc	___fladd@b+1,f
  5778     0201  3000               	movlw	0
  5779     0202  3DF2               	addwfc	___fladd@b+2,f
  5780     0203  3000               	movlw	0
  5781     0204  3DF3               	addwfc	___fladd@b+3,f
  5782     0205                     l2714:
  5783     0205  1C73               	btfss	___fladd@b+3,0
  5784     0206  2A08               	goto	u3101
  5785     0207  2A09               	goto	u3100
  5786     0208                     u3101:
  5787     0208  2A2B               	goto	l733
  5788     0209                     u3100:
  5789     0209                     l2716:
  5790     0209  0870               	movf	___fladd@b,w
  5791     020A  0020               	movlb	0	; select bank0
  5792     020B  00A0               	movwf	??___fladd
  5793     020C  0871               	movf	___fladd@b+1,w
  5794     020D  00A1               	movwf	??___fladd+1
  5795     020E  0872               	movf	___fladd@b+2,w
  5796     020F  00A2               	movwf	??___fladd+2
  5797     0210  0873               	movf	___fladd@b+3,w
  5798     0211  00A3               	movwf	??___fladd+3
  5799     0212  3001               	movlw	1
  5800     0213  00A4               	movwf	??___fladd+4
  5801     0214                     u3115:
  5802     0214  37A3               	asrf	??___fladd+3,f
  5803     0215  0CA2               	rrf	??___fladd+2,f
  5804     0216  0CA1               	rrf	??___fladd+1,f
  5805     0217  0CA0               	rrf	??___fladd,f
  5806     0218                     u3110:
  5807     0218  0BA4               	decfsz	??___fladd+4,f
  5808     0219  2A14               	goto	u3115
  5809     021A  0823               	movf	??___fladd+3,w
  5810     021B  00F3               	movwf	___fladd@b+3
  5811     021C  0822               	movf	??___fladd+2,w
  5812     021D  00F2               	movwf	___fladd@b+2
  5813     021E  0821               	movf	??___fladd+1,w
  5814     021F  00F1               	movwf	___fladd@b+1
  5815     0220  0820               	movf	??___fladd,w
  5816     0221  00F0               	movwf	___fladd@b
  5817     0222  0A7A               	incf	___fladd@bexp,w
  5818     0223  1903               	btfsc	3,2
  5819     0224  2A26               	goto	u3121
  5820     0225  2A27               	goto	u3120
  5821     0226                     u3121:
  5822     0226  2A2B               	goto	l733
  5823     0227                     u3120:
  5824     0227                     l2718:
  5825     0227  3001               	movlw	1
  5826     0228  00A0               	movwf	??___fladd
  5827     0229  0820               	movf	??___fladd,w
  5828     022A  07FA               	addwf	___fladd@bexp,f
  5829     022B                     l733:
  5830     022B  0A7A               	incf	___fladd@bexp,w
  5831     022C  1903               	btfsc	3,2
  5832     022D  2A2F               	goto	u3131
  5833     022E  2A30               	goto	u3130
  5834     022F                     u3131:
  5835     022F  2A35               	goto	l2722
  5836     0230                     u3130:
  5837     0230                     l2720:
  5838     0230  087A               	movf	___fladd@bexp,w
  5839     0231  1D03               	btfss	3,2
  5840     0232  2A34               	goto	u3141
  5841     0233  2A35               	goto	u3140
  5842     0234                     u3141:
  5843     0234  2A43               	goto	l2728
  5844     0235                     u3140:
  5845     0235                     l2722:
  5846     0235  3000               	movlw	0
  5847     0236  00F3               	movwf	___fladd@b+3
  5848     0237  3000               	movlw	0
  5849     0238  00F2               	movwf	___fladd@b+2
  5850     0239  3000               	movlw	0
  5851     023A  00F1               	movwf	___fladd@b+1
  5852     023B  3000               	movlw	0
  5853     023C  00F0               	movwf	___fladd@b
  5854     023D                     l2724:
  5855     023D  087A               	movf	___fladd@bexp,w
  5856     023E  1D03               	btfss	3,2
  5857     023F  2A41               	goto	u3151
  5858     0240  2A42               	goto	u3150
  5859     0241                     u3151:
  5860     0241  2A43               	goto	l2728
  5861     0242                     u3150:
  5862     0242                     l2726:
  5863     0242  01F8               	clrf	___fladd@signs
  5864     0243                     l2728:
  5865     0243  1C7A               	btfss	___fladd@bexp,0
  5866     0244  2A46               	goto	u3161
  5867     0245  2A47               	goto	u3160
  5868     0246                     u3161:
  5869     0246  2A49               	goto	l2732
  5870     0247                     u3160:
  5871     0247                     l2730:
  5872     0247  17F2               	bsf	___fladd@b+2,7
  5873     0248  2A4E               	goto	l741
  5874     0249                     l2732:
  5875     0249  307F               	movlw	127
  5876     024A  0020               	movlb	0	; select bank0
  5877     024B  00A0               	movwf	??___fladd
  5878     024C  0820               	movf	??___fladd,w
  5879     024D  05F2               	andwf	___fladd@b+2,f
  5880     024E                     l741:
  5881     024E  367A               	lsrf	___fladd@bexp,w
  5882     024F  00F3               	movwf	___fladd@b+3
  5883     0250                     l2734:
  5884     0250  1FF8               	btfss	___fladd@signs,7
  5885     0251  2A53               	goto	u3171
  5886     0252  2A54               	goto	u3170
  5887     0253                     u3171:
  5888     0253  2A55               	goto	l742
  5889     0254                     u3170:
  5890     0254                     l2736:
  5891     0254  17F3               	bsf	___fladd@b+3,7
  5892     0255                     l742:
  5893     0255                     l712:
  5894     0255  0008               	return
  5895     0256                     __end_of___fladd:
  5896                           
  5897                           	psect	text12
  5898     1341                     __ptext12:	
  5899 ;; *************** function ___flneg *****************
  5900 ;; Defined at:
  5901 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\flneg.c"
  5902 ;; Parameters:    Size  Location     Type
  5903 ;;  f1              4    0[COMMON] unsigned char 
  5904 ;; Auto vars:     Size  Location     Type
  5905 ;;		None
  5906 ;; Return value:  Size  Location     Type
  5907 ;;                  4    0[COMMON] unsigned char 
  5908 ;; Registers used:
  5909 ;;		wreg
  5910 ;; Tracked objects:
  5911 ;;		On entry : 0/0
  5912 ;;		On exit  : 0/0
  5913 ;;		Unchanged: 0/0
  5914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5915 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5918 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5919 ;;Total ram usage:        4 bytes
  5920 ;; Hardware stack levels used: 1
  5921 ;; This function calls:
  5922 ;;		Nothing
  5923 ;; This function is called by:
  5924 ;;		_ftoa
  5925 ;; This function uses a non-reentrant model
  5926 ;;
  5927                           
  5928     1341                     ___flneg:	
  5929                           ;psect for function ___flneg
  5930                           
  5931     1341                     l2868:	
  5932                           ;incstack = 0
  5933                           ; Regs used in ___flneg: [wreg]
  5934                           
  5935     1341  0873               	movf	___flneg@f1+3,w
  5936     1342  0472               	iorwf	___flneg@f1+2,w
  5937     1343  0471               	iorwf	___flneg@f1+1,w
  5938     1344  0470               	iorwf	___flneg@f1,w
  5939     1345  1903               	skipnz
  5940     1346  2B48               	goto	u3381
  5941     1347  2B49               	goto	u3380
  5942     1348                     u3381:
  5943     1348  2B4B               	goto	l2872
  5944     1349                     u3380:
  5945     1349                     l2870:
  5946     1349  3080               	movlw	128
  5947     134A  06F3               	xorwf	___flneg@f1+3,f
  5948     134B                     l2872:
  5949     134B                     l588:
  5950     134B  0008               	return
  5951     134C                     __end_of___flneg:
  5952                           
  5953                           	psect	text13
  5954     0256                     __ptext13:	
  5955 ;; *************** function ___flmul *****************
  5956 ;; Defined at:
  5957 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcmul.c"
  5958 ;; Parameters:    Size  Location     Type
  5959 ;;  b               4    0[BANK0 ] unsigned char 
  5960 ;;  a               4    4[BANK0 ] unsigned char 
  5961 ;; Auto vars:     Size  Location     Type
  5962 ;;  prod            4   20[BANK0 ] struct .
  5963 ;;  grs             4   14[BANK0 ] unsigned long 
  5964 ;;  temp            2   24[BANK0 ] struct .
  5965 ;;  bexp            1   19[BANK0 ] unsigned char 
  5966 ;;  aexp            1   18[BANK0 ] unsigned char 
  5967 ;;  sign            1   13[BANK0 ] unsigned char 
  5968 ;; Return value:  Size  Location     Type
  5969 ;;                  4    0[BANK0 ] unsigned char 
  5970 ;; Registers used:
  5971 ;;		wreg, status,2, status,0, pclath, cstack
  5972 ;; Tracked objects:
  5973 ;;		On entry : 0/0
  5974 ;;		On exit  : 0/0
  5975 ;;		Unchanged: 0/0
  5976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5977 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5978 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5979 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5980 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5981 ;;Total ram usage:       26 bytes
  5982 ;; Hardware stack levels used: 1
  5983 ;; Hardware stack levels required when called: 1
  5984 ;; This function calls:
  5985 ;;		__Umul8_16
  5986 ;; This function is called by:
  5987 ;;		_ftoa
  5988 ;; This function uses a non-reentrant model
  5989 ;;
  5990                           
  5991     0256                     ___flmul:	
  5992                           ;psect for function ___flmul
  5993                           
  5994     0256                     l2918:	
  5995                           ;incstack = 0
  5996                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  5997                           
  5998     0256  0020               	movlb	0	; select bank0
  5999     0257  0823               	movf	___flmul@b+3,w
  6000     0258  3980               	andlw	128
  6001     0259  00AD               	movwf	___flmul@sign
  6002     025A                     l2920:
  6003     025A  3523               	lslf	___flmul@b+3,w
  6004     025B  00B3               	movwf	___flmul@bexp
  6005     025C                     l2922:
  6006     025C  1FA2               	btfss	___flmul@b+2,7
  6007     025D  2A5F               	goto	u3491
  6008     025E  2A60               	goto	u3490
  6009     025F                     u3491:
  6010     025F  2A61               	goto	l2926
  6011     0260                     u3490:
  6012     0260                     l2924:
  6013     0260  1433               	bsf	___flmul@bexp,0
  6014     0261                     l2926:
  6015     0261  0833               	movf	___flmul@bexp,w
  6016     0262  1903               	btfsc	3,2
  6017     0263  2A65               	goto	u3501
  6018     0264  2A66               	goto	u3500
  6019     0265                     u3501:
  6020     0265  2A75               	goto	l2934
  6021     0266                     u3500:
  6022     0266                     l2928:
  6023     0266  0A33               	incf	___flmul@bexp,w
  6024     0267  1D03               	btfss	3,2
  6025     0268  2A6A               	goto	u3511
  6026     0269  2A6B               	goto	u3510
  6027     026A                     u3511:
  6028     026A  2A73               	goto	l2932
  6029     026B                     u3510:
  6030     026B                     l2930:
  6031     026B  3000               	movlw	0
  6032     026C  00A3               	movwf	___flmul@b+3
  6033     026D  3000               	movlw	0
  6034     026E  00A2               	movwf	___flmul@b+2
  6035     026F  3000               	movlw	0
  6036     0270  00A1               	movwf	___flmul@b+1
  6037     0271  3000               	movlw	0
  6038     0272  00A0               	movwf	___flmul@b
  6039     0273                     l2932:
  6040     0273  17A2               	bsf	___flmul@b+2,7
  6041     0274  2A7D               	goto	l2936
  6042     0275                     l2934:
  6043     0275  3000               	movlw	0
  6044     0276  00A3               	movwf	___flmul@b+3
  6045     0277  3000               	movlw	0
  6046     0278  00A2               	movwf	___flmul@b+2
  6047     0279  3000               	movlw	0
  6048     027A  00A1               	movwf	___flmul@b+1
  6049     027B  3000               	movlw	0
  6050     027C  00A0               	movwf	___flmul@b
  6051     027D                     l2936:
  6052     027D  0827               	movf	___flmul@a+3,w
  6053     027E  3980               	andlw	128
  6054     027F  00A8               	movwf	??___flmul
  6055     0280  0828               	movf	??___flmul,w
  6056     0281  06AD               	xorwf	___flmul@sign,f
  6057     0282                     l2938:
  6058     0282  3527               	lslf	___flmul@a+3,w
  6059     0283  00B2               	movwf	___flmul@aexp
  6060     0284                     l2940:
  6061     0284  1FA6               	btfss	___flmul@a+2,7
  6062     0285  2A87               	goto	u3521
  6063     0286  2A88               	goto	u3520
  6064     0287                     u3521:
  6065     0287  2A89               	goto	l2944
  6066     0288                     u3520:
  6067     0288                     l2942:
  6068     0288  1432               	bsf	___flmul@aexp,0
  6069     0289                     l2944:
  6070     0289  0832               	movf	___flmul@aexp,w
  6071     028A  1903               	btfsc	3,2
  6072     028B  2A8D               	goto	u3531
  6073     028C  2A8E               	goto	u3530
  6074     028D                     u3531:
  6075     028D  2A9D               	goto	l2952
  6076     028E                     u3530:
  6077     028E                     l2946:
  6078     028E  0A32               	incf	___flmul@aexp,w
  6079     028F  1D03               	btfss	3,2
  6080     0290  2A92               	goto	u3541
  6081     0291  2A93               	goto	u3540
  6082     0292                     u3541:
  6083     0292  2A9B               	goto	l2950
  6084     0293                     u3540:
  6085     0293                     l2948:
  6086     0293  3000               	movlw	0
  6087     0294  00A7               	movwf	___flmul@a+3
  6088     0295  3000               	movlw	0
  6089     0296  00A6               	movwf	___flmul@a+2
  6090     0297  3000               	movlw	0
  6091     0298  00A5               	movwf	___flmul@a+1
  6092     0299  3000               	movlw	0
  6093     029A  00A4               	movwf	___flmul@a
  6094     029B                     l2950:
  6095     029B  17A6               	bsf	___flmul@a+2,7
  6096     029C  2AA5               	goto	l2954
  6097     029D                     l2952:
  6098     029D  3000               	movlw	0
  6099     029E  00A7               	movwf	___flmul@a+3
  6100     029F  3000               	movlw	0
  6101     02A0  00A6               	movwf	___flmul@a+2
  6102     02A1  3000               	movlw	0
  6103     02A2  00A5               	movwf	___flmul@a+1
  6104     02A3  3000               	movlw	0
  6105     02A4  00A4               	movwf	___flmul@a
  6106     02A5                     l2954:
  6107     02A5  0832               	movf	___flmul@aexp,w
  6108     02A6  1903               	btfsc	3,2
  6109     02A7  2AA9               	goto	u3551
  6110     02A8  2AAA               	goto	u3550
  6111     02A9                     u3551:
  6112     02A9  2AAF               	goto	l2958
  6113     02AA                     u3550:
  6114     02AA                     l2956:
  6115     02AA  0833               	movf	___flmul@bexp,w
  6116     02AB  1D03               	btfss	3,2
  6117     02AC  2AAE               	goto	u3561
  6118     02AD  2AAF               	goto	u3560
  6119     02AE                     u3561:
  6120     02AE  2AB8               	goto	l2962
  6121     02AF                     u3560:
  6122     02AF                     l2958:
  6123     02AF  3000               	movlw	0
  6124     02B0  00A3               	movwf	?___flmul+3
  6125     02B1  3000               	movlw	0
  6126     02B2  00A2               	movwf	?___flmul+2
  6127     02B3  3000               	movlw	0
  6128     02B4  00A1               	movwf	?___flmul+1
  6129     02B5  3000               	movlw	0
  6130     02B6  00A0               	movwf	?___flmul
  6131     02B7  2C90               	goto	l795
  6132     02B8                     l2962:
  6133     02B8  0820               	movf	___flmul@b,w
  6134     02B9  00F0               	movwf	__Umul8_16@multiplicand
  6135     02BA  0826               	movf	___flmul@a+2,w
  6136     02BB  3194  24EB  3182   	fcall	__Umul8_16
  6137     02BE  0871               	movf	?__Umul8_16+1,w
  6138     02BF  0020               	movlb	0	; select bank0
  6139     02C0  00B9               	movwf	___flmul@temp+1
  6140     02C1  0870               	movf	?__Umul8_16,w
  6141     02C2  00B8               	movwf	___flmul@temp
  6142     02C3                     l2964:
  6143     02C3  0838               	movf	___flmul@temp,w
  6144     02C4  00A8               	movwf	??___flmul
  6145     02C5  01A9               	clrf	??___flmul+1
  6146     02C6  01AA               	clrf	??___flmul+2
  6147     02C7  01AB               	clrf	??___flmul+3
  6148     02C8  082B               	movf	??___flmul+3,w
  6149     02C9  00B1               	movwf	___flmul@grs+3
  6150     02CA  082A               	movf	??___flmul+2,w
  6151     02CB  00B0               	movwf	___flmul@grs+2
  6152     02CC  0829               	movf	??___flmul+1,w
  6153     02CD  00AF               	movwf	___flmul@grs+1
  6154     02CE  0828               	movf	??___flmul,w
  6155     02CF  00AE               	movwf	___flmul@grs
  6156     02D0                     l2966:
  6157     02D0  0839               	movf	___flmul@temp+1,w
  6158     02D1  00A8               	movwf	??___flmul
  6159     02D2  01A9               	clrf	??___flmul+1
  6160     02D3  01AA               	clrf	??___flmul+2
  6161     02D4  01AB               	clrf	??___flmul+3
  6162     02D5  082B               	movf	??___flmul+3,w
  6163     02D6  00B7               	movwf	___flmul@prod+3
  6164     02D7  082A               	movf	??___flmul+2,w
  6165     02D8  00B6               	movwf	___flmul@prod+2
  6166     02D9  0829               	movf	??___flmul+1,w
  6167     02DA  00B5               	movwf	___flmul@prod+1
  6168     02DB  0828               	movf	??___flmul,w
  6169     02DC  00B4               	movwf	___flmul@prod
  6170     02DD  0821               	movf	___flmul@b+1,w
  6171     02DE  00F0               	movwf	__Umul8_16@multiplicand
  6172     02DF  0825               	movf	___flmul@a+1,w
  6173     02E0  3194  24EB  3182   	fcall	__Umul8_16
  6174     02E3  0871               	movf	?__Umul8_16+1,w
  6175     02E4  0020               	movlb	0	; select bank0
  6176     02E5  00B9               	movwf	___flmul@temp+1
  6177     02E6  0870               	movf	?__Umul8_16,w
  6178     02E7  00B8               	movwf	___flmul@temp
  6179     02E8                     l2968:
  6180     02E8  0838               	movf	___flmul@temp,w
  6181     02E9  00A8               	movwf	??___flmul
  6182     02EA  01A9               	clrf	??___flmul+1
  6183     02EB  01AA               	clrf	??___flmul+2
  6184     02EC  01AB               	clrf	??___flmul+3
  6185     02ED  0828               	movf	??___flmul,w
  6186     02EE  07AE               	addwf	___flmul@grs,f
  6187     02EF  0829               	movf	??___flmul+1,w
  6188     02F0  3DAF               	addwfc	___flmul@grs+1,f
  6189     02F1  082A               	movf	??___flmul+2,w
  6190     02F2  3DB0               	addwfc	___flmul@grs+2,f
  6191     02F3  082B               	movf	??___flmul+3,w
  6192     02F4  3DB1               	addwfc	___flmul@grs+3,f
  6193     02F5                     l2970:
  6194     02F5  0839               	movf	___flmul@temp+1,w
  6195     02F6  00A8               	movwf	??___flmul
  6196     02F7  01A9               	clrf	??___flmul+1
  6197     02F8  01AA               	clrf	??___flmul+2
  6198     02F9  01AB               	clrf	??___flmul+3
  6199     02FA  0828               	movf	??___flmul,w
  6200     02FB  07B4               	addwf	___flmul@prod,f
  6201     02FC  0829               	movf	??___flmul+1,w
  6202     02FD  3DB5               	addwfc	___flmul@prod+1,f
  6203     02FE  082A               	movf	??___flmul+2,w
  6204     02FF  3DB6               	addwfc	___flmul@prod+2,f
  6205     0300  082B               	movf	??___flmul+3,w
  6206     0301  3DB7               	addwfc	___flmul@prod+3,f
  6207     0302  0822               	movf	___flmul@b+2,w
  6208     0303  00F0               	movwf	__Umul8_16@multiplicand
  6209     0304  0824               	movf	___flmul@a,w
  6210     0305  3194  24EB  3182   	fcall	__Umul8_16
  6211     0308  0871               	movf	?__Umul8_16+1,w
  6212     0309  0020               	movlb	0	; select bank0
  6213     030A  00B9               	movwf	___flmul@temp+1
  6214     030B  0870               	movf	?__Umul8_16,w
  6215     030C  00B8               	movwf	___flmul@temp
  6216     030D                     l2972:
  6217     030D  0838               	movf	___flmul@temp,w
  6218     030E  00A8               	movwf	??___flmul
  6219     030F  01A9               	clrf	??___flmul+1
  6220     0310  01AA               	clrf	??___flmul+2
  6221     0311  01AB               	clrf	??___flmul+3
  6222     0312  0828               	movf	??___flmul,w
  6223     0313  07AE               	addwf	___flmul@grs,f
  6224     0314  0829               	movf	??___flmul+1,w
  6225     0315  3DAF               	addwfc	___flmul@grs+1,f
  6226     0316  082A               	movf	??___flmul+2,w
  6227     0317  3DB0               	addwfc	___flmul@grs+2,f
  6228     0318  082B               	movf	??___flmul+3,w
  6229     0319  3DB1               	addwfc	___flmul@grs+3,f
  6230     031A                     l2974:
  6231     031A  0839               	movf	___flmul@temp+1,w
  6232     031B  00A8               	movwf	??___flmul
  6233     031C  01A9               	clrf	??___flmul+1
  6234     031D  01AA               	clrf	??___flmul+2
  6235     031E  01AB               	clrf	??___flmul+3
  6236     031F  0828               	movf	??___flmul,w
  6237     0320  07B4               	addwf	___flmul@prod,f
  6238     0321  0829               	movf	??___flmul+1,w
  6239     0322  3DB5               	addwfc	___flmul@prod+1,f
  6240     0323  082A               	movf	??___flmul+2,w
  6241     0324  3DB6               	addwfc	___flmul@prod+2,f
  6242     0325  082B               	movf	??___flmul+3,w
  6243     0326  3DB7               	addwfc	___flmul@prod+3,f
  6244     0327                     l2976:
  6245     0327  3008               	movlw	8
  6246     0328                     u3575:
  6247     0328  35AE               	lslf	___flmul@grs,f
  6248     0329  0DAF               	rlf	___flmul@grs+1,f
  6249     032A  0DB0               	rlf	___flmul@grs+2,f
  6250     032B  0DB1               	rlf	___flmul@grs+3,f
  6251     032C  0B89               	decfsz	9,f
  6252     032D  2B28               	goto	u3575
  6253     032E                     l2978:
  6254     032E  0821               	movf	___flmul@b+1,w
  6255     032F  00F0               	movwf	__Umul8_16@multiplicand
  6256     0330  0824               	movf	___flmul@a,w
  6257     0331  3194  24EB  3182   	fcall	__Umul8_16
  6258     0334  0871               	movf	?__Umul8_16+1,w
  6259     0335  0020               	movlb	0	; select bank0
  6260     0336  00B9               	movwf	___flmul@temp+1
  6261     0337  0870               	movf	?__Umul8_16,w
  6262     0338  00B8               	movwf	___flmul@temp
  6263     0339                     l2980:
  6264     0339  0838               	movf	___flmul@temp,w
  6265     033A  07AE               	addwf	___flmul@grs,f
  6266     033B  0839               	movf	___flmul@temp+1,w
  6267     033C  3DAF               	addwfc	___flmul@grs+1,f
  6268     033D  3000               	movlw	0
  6269     033E  3DB0               	addwfc	___flmul@grs+2,f
  6270     033F  3DB1               	addwfc	___flmul@grs+3,f
  6271     0340                     l2982:
  6272     0340  0820               	movf	___flmul@b,w
  6273     0341  00F0               	movwf	__Umul8_16@multiplicand
  6274     0342  0825               	movf	___flmul@a+1,w
  6275     0343  3194  24EB  3182   	fcall	__Umul8_16
  6276     0346  0871               	movf	?__Umul8_16+1,w
  6277     0347  0020               	movlb	0	; select bank0
  6278     0348  00B9               	movwf	___flmul@temp+1
  6279     0349  0870               	movf	?__Umul8_16,w
  6280     034A  00B8               	movwf	___flmul@temp
  6281     034B                     l2984:
  6282     034B  0838               	movf	___flmul@temp,w
  6283     034C  07AE               	addwf	___flmul@grs,f
  6284     034D  0839               	movf	___flmul@temp+1,w
  6285     034E  3DAF               	addwfc	___flmul@grs+1,f
  6286     034F  3000               	movlw	0
  6287     0350  3DB0               	addwfc	___flmul@grs+2,f
  6288     0351  3DB1               	addwfc	___flmul@grs+3,f
  6289     0352                     l2986:
  6290     0352  3008               	movlw	8
  6291     0353                     u3585:
  6292     0353  35AE               	lslf	___flmul@grs,f
  6293     0354  0DAF               	rlf	___flmul@grs+1,f
  6294     0355  0DB0               	rlf	___flmul@grs+2,f
  6295     0356  0DB1               	rlf	___flmul@grs+3,f
  6296     0357  0B89               	decfsz	9,f
  6297     0358  2B53               	goto	u3585
  6298     0359  0820               	movf	___flmul@b,w
  6299     035A  00F0               	movwf	__Umul8_16@multiplicand
  6300     035B  0824               	movf	___flmul@a,w
  6301     035C  3194  24EB  3182   	fcall	__Umul8_16
  6302     035F  0871               	movf	?__Umul8_16+1,w
  6303     0360  0020               	movlb	0	; select bank0
  6304     0361  00B9               	movwf	___flmul@temp+1
  6305     0362  0870               	movf	?__Umul8_16,w
  6306     0363  00B8               	movwf	___flmul@temp
  6307     0364                     l2988:
  6308     0364  0838               	movf	___flmul@temp,w
  6309     0365  07AE               	addwf	___flmul@grs,f
  6310     0366  0839               	movf	___flmul@temp+1,w
  6311     0367  3DAF               	addwfc	___flmul@grs+1,f
  6312     0368  3000               	movlw	0
  6313     0369  3DB0               	addwfc	___flmul@grs+2,f
  6314     036A  3DB1               	addwfc	___flmul@grs+3,f
  6315     036B                     l2990:
  6316     036B  0821               	movf	___flmul@b+1,w
  6317     036C  00F0               	movwf	__Umul8_16@multiplicand
  6318     036D  0826               	movf	___flmul@a+2,w
  6319     036E  3194  24EB  3182   	fcall	__Umul8_16
  6320     0371  0871               	movf	?__Umul8_16+1,w
  6321     0372  0020               	movlb	0	; select bank0
  6322     0373  00B9               	movwf	___flmul@temp+1
  6323     0374  0870               	movf	?__Umul8_16,w
  6324     0375  00B8               	movwf	___flmul@temp
  6325     0376  0838               	movf	___flmul@temp,w
  6326     0377  07B4               	addwf	___flmul@prod,f
  6327     0378  0839               	movf	___flmul@temp+1,w
  6328     0379  3DB5               	addwfc	___flmul@prod+1,f
  6329     037A  3000               	movlw	0
  6330     037B  3DB6               	addwfc	___flmul@prod+2,f
  6331     037C  3DB7               	addwfc	___flmul@prod+3,f
  6332     037D                     l2992:
  6333     037D  0822               	movf	___flmul@b+2,w
  6334     037E  00F0               	movwf	__Umul8_16@multiplicand
  6335     037F  0825               	movf	___flmul@a+1,w
  6336     0380  3194  24EB  3182   	fcall	__Umul8_16
  6337     0383  0871               	movf	?__Umul8_16+1,w
  6338     0384  0020               	movlb	0	; select bank0
  6339     0385  00B9               	movwf	___flmul@temp+1
  6340     0386  0870               	movf	?__Umul8_16,w
  6341     0387  00B8               	movwf	___flmul@temp
  6342     0388                     l2994:
  6343     0388  0838               	movf	___flmul@temp,w
  6344     0389  07B4               	addwf	___flmul@prod,f
  6345     038A  0839               	movf	___flmul@temp+1,w
  6346     038B  3DB5               	addwfc	___flmul@prod+1,f
  6347     038C  3000               	movlw	0
  6348     038D  3DB6               	addwfc	___flmul@prod+2,f
  6349     038E  3DB7               	addwfc	___flmul@prod+3,f
  6350     038F  0822               	movf	___flmul@b+2,w
  6351     0390  00F0               	movwf	__Umul8_16@multiplicand
  6352     0391  0826               	movf	___flmul@a+2,w
  6353     0392  3194  24EB  3182   	fcall	__Umul8_16
  6354     0395  0871               	movf	?__Umul8_16+1,w
  6355     0396  0020               	movlb	0	; select bank0
  6356     0397  00B9               	movwf	___flmul@temp+1
  6357     0398  0870               	movf	?__Umul8_16,w
  6358     0399  00B8               	movwf	___flmul@temp
  6359     039A                     l2996:
  6360     039A  0838               	movf	___flmul@temp,w
  6361     039B  00A8               	movwf	??___flmul
  6362     039C  0839               	movf	___flmul@temp+1,w
  6363     039D  00A9               	movwf	??___flmul+1
  6364     039E  01AA               	clrf	??___flmul+2
  6365     039F  01AB               	clrf	??___flmul+3
  6366     03A0  3008               	movlw	8
  6367     03A1                     u3595:
  6368     03A1  35A8               	lslf	??___flmul,f
  6369     03A2  0DA9               	rlf	??___flmul+1,f
  6370     03A3  0DAA               	rlf	??___flmul+2,f
  6371     03A4  0DAB               	rlf	??___flmul+3,f
  6372     03A5                     u3590:
  6373     03A5  0B89               	decfsz	9,f
  6374     03A6  2BA1               	goto	u3595
  6375     03A7  0828               	movf	??___flmul,w
  6376     03A8  07B4               	addwf	___flmul@prod,f
  6377     03A9  0829               	movf	??___flmul+1,w
  6378     03AA  3DB5               	addwfc	___flmul@prod+1,f
  6379     03AB  082A               	movf	??___flmul+2,w
  6380     03AC  3DB6               	addwfc	___flmul@prod+2,f
  6381     03AD  082B               	movf	??___flmul+3,w
  6382     03AE  3DB7               	addwfc	___flmul@prod+3,f
  6383     03AF                     l2998:
  6384     03AF  082E               	movf	___flmul@grs,w
  6385     03B0  00A8               	movwf	??___flmul
  6386     03B1  082F               	movf	___flmul@grs+1,w
  6387     03B2  00A9               	movwf	??___flmul+1
  6388     03B3  0830               	movf	___flmul@grs+2,w
  6389     03B4  00AA               	movwf	??___flmul+2
  6390     03B5  0831               	movf	___flmul@grs+3,w
  6391     03B6  00AB               	movwf	??___flmul+3
  6392     03B7  3018               	movlw	24
  6393     03B8                     u3605:
  6394     03B8  36AB               	lsrf	??___flmul+3,f
  6395     03B9  0CAA               	rrf	??___flmul+2,f
  6396     03BA  0CA9               	rrf	??___flmul+1,f
  6397     03BB  0CA8               	rrf	??___flmul,f
  6398     03BC                     u3600:
  6399     03BC  0B89               	decfsz	9,f
  6400     03BD  2BB8               	goto	u3605
  6401     03BE  0828               	movf	??___flmul,w
  6402     03BF  07B4               	addwf	___flmul@prod,f
  6403     03C0  0829               	movf	??___flmul+1,w
  6404     03C1  3DB5               	addwfc	___flmul@prod+1,f
  6405     03C2  082A               	movf	??___flmul+2,w
  6406     03C3  3DB6               	addwfc	___flmul@prod+2,f
  6407     03C4  082B               	movf	??___flmul+3,w
  6408     03C5  3DB7               	addwfc	___flmul@prod+3,f
  6409     03C6                     l3000:
  6410     03C6  3008               	movlw	8
  6411     03C7                     u3615:
  6412     03C7  35AE               	lslf	___flmul@grs,f
  6413     03C8  0DAF               	rlf	___flmul@grs+1,f
  6414     03C9  0DB0               	rlf	___flmul@grs+2,f
  6415     03CA  0DB1               	rlf	___flmul@grs+3,f
  6416     03CB  0B89               	decfsz	9,f
  6417     03CC  2BC7               	goto	u3615
  6418     03CD                     l3002:
  6419     03CD  0833               	movf	___flmul@bexp,w
  6420     03CE  0732               	addwf	___flmul@aexp,w
  6421     03CF  00A8               	movwf	??___flmul
  6422     03D0  01A9               	clrf	??___flmul+1
  6423     03D1  0DA9               	rlf	??___flmul+1,f
  6424     03D2  0828               	movf	??___flmul,w
  6425     03D3  3E82               	addlw	130
  6426     03D4  00B8               	movwf	___flmul@temp
  6427     03D5  30FF               	movlw	255
  6428     03D6  3D29               	addwfc	??___flmul+1,w
  6429     03D7  00B9               	movwf	___flmul@temp+1
  6430     03D8  2BF0               	goto	l3014
  6431     03D9                     l3004:
  6432     03D9  3001               	movlw	1
  6433     03DA                     u3625:
  6434     03DA  35B4               	lslf	___flmul@prod,f
  6435     03DB  0DB5               	rlf	___flmul@prod+1,f
  6436     03DC  0DB6               	rlf	___flmul@prod+2,f
  6437     03DD  0DB7               	rlf	___flmul@prod+3,f
  6438     03DE  0B89               	decfsz	9,f
  6439     03DF  2BDA               	goto	u3625
  6440     03E0                     l3006:
  6441     03E0  1FB1               	btfss	___flmul@grs+3,7
  6442     03E1  2BE3               	goto	u3631
  6443     03E2  2BE4               	goto	u3630
  6444     03E3                     u3631:
  6445     03E3  2BE5               	goto	l3010
  6446     03E4                     u3630:
  6447     03E4                     l3008:
  6448     03E4  1434               	bsf	___flmul@prod,0
  6449     03E5                     l3010:
  6450     03E5  3001               	movlw	1
  6451     03E6                     u3645:
  6452     03E6  35AE               	lslf	___flmul@grs,f
  6453     03E7  0DAF               	rlf	___flmul@grs+1,f
  6454     03E8  0DB0               	rlf	___flmul@grs+2,f
  6455     03E9  0DB1               	rlf	___flmul@grs+3,f
  6456     03EA  0B89               	decfsz	9,f
  6457     03EB  2BE6               	goto	u3645
  6458     03EC                     l3012:
  6459     03EC  30FF               	movlw	255
  6460     03ED  07B8               	addwf	___flmul@temp,f
  6461     03EE  30FF               	movlw	255
  6462     03EF  3DB9               	addwfc	___flmul@temp+1,f
  6463     03F0                     l3014:
  6464     03F0  1FB6               	btfss	___flmul@prod+2,7
  6465     03F1  2BF3               	goto	u3651
  6466     03F2  2BF4               	goto	u3650
  6467     03F3                     u3651:
  6468     03F3  2BD9               	goto	l3004
  6469     03F4                     u3650:
  6470     03F4                     l3016:
  6471     03F4  01B2               	clrf	___flmul@aexp
  6472     03F5                     l3018:
  6473     03F5  1FB1               	btfss	___flmul@grs+3,7
  6474     03F6  2BF8               	goto	u3661
  6475     03F7  2BF9               	goto	u3660
  6476     03F8                     u3661:
  6477     03F8  2C15               	goto	l3026
  6478     03F9                     u3660:
  6479     03F9                     l3020:
  6480     03F9  30FF               	movlw	255
  6481     03FA  052E               	andwf	___flmul@grs,w
  6482     03FB  00A8               	movwf	??___flmul
  6483     03FC  30FF               	movlw	255
  6484     03FD  052F               	andwf	___flmul@grs+1,w
  6485     03FE  00A9               	movwf	??___flmul+1
  6486     03FF  30FF               	movlw	255
  6487     0400  0530               	andwf	___flmul@grs+2,w
  6488     0401  00AA               	movwf	??___flmul+2
  6489     0402  307F               	movlw	127
  6490     0403  0531               	andwf	___flmul@grs+3,w
  6491     0404  00AB               	movwf	??___flmul+3
  6492     0405  082B               	movf	??___flmul+3,w
  6493     0406  042A               	iorwf	??___flmul+2,w
  6494     0407  0429               	iorwf	??___flmul+1,w
  6495     0408  0428               	iorwf	??___flmul,w
  6496     0409  1903               	skipnz
  6497     040A  2C0C               	goto	u3671
  6498     040B  2C0D               	goto	u3670
  6499     040C                     u3671:
  6500     040C  2C10               	goto	l801
  6501     040D                     u3670:
  6502     040D                     l3022:
  6503     040D  01B2               	clrf	___flmul@aexp
  6504     040E  0AB2               	incf	___flmul@aexp,f
  6505     040F  2C15               	goto	l3026
  6506     0410                     l801:
  6507     0410  1C34               	btfss	___flmul@prod,0
  6508     0411  2C13               	goto	u3681
  6509     0412  2C14               	goto	u3680
  6510     0413                     u3681:
  6511     0413  2C15               	goto	l3026
  6512     0414                     u3680:
  6513     0414  2C0D               	goto	l3022
  6514     0415                     l3026:
  6515     0415  0832               	movf	___flmul@aexp,w
  6516     0416  1903               	btfsc	3,2
  6517     0417  2C19               	goto	u3691
  6518     0418  2C1A               	goto	u3690
  6519     0419                     u3691:
  6520     0419  2C42               	goto	l3036
  6521     041A                     u3690:
  6522     041A                     l3028:
  6523     041A  3001               	movlw	1
  6524     041B  07B4               	addwf	___flmul@prod,f
  6525     041C  3000               	movlw	0
  6526     041D  3DB5               	addwfc	___flmul@prod+1,f
  6527     041E  3000               	movlw	0
  6528     041F  3DB6               	addwfc	___flmul@prod+2,f
  6529     0420  3000               	movlw	0
  6530     0421  3DB7               	addwfc	___flmul@prod+3,f
  6531     0422                     l3030:
  6532     0422  1C37               	btfss	___flmul@prod+3,0
  6533     0423  2C25               	goto	u3701
  6534     0424  2C26               	goto	u3700
  6535     0425                     u3701:
  6536     0425  2C42               	goto	l3036
  6537     0426                     u3700:
  6538     0426                     l3032:
  6539     0426  0834               	movf	___flmul@prod,w
  6540     0427  00A8               	movwf	??___flmul
  6541     0428  0835               	movf	___flmul@prod+1,w
  6542     0429  00A9               	movwf	??___flmul+1
  6543     042A  0836               	movf	___flmul@prod+2,w
  6544     042B  00AA               	movwf	??___flmul+2
  6545     042C  0837               	movf	___flmul@prod+3,w
  6546     042D  00AB               	movwf	??___flmul+3
  6547     042E  3001               	movlw	1
  6548     042F  00AC               	movwf	??___flmul+4
  6549     0430                     u3715:
  6550     0430  37AB               	asrf	??___flmul+3,f
  6551     0431  0CAA               	rrf	??___flmul+2,f
  6552     0432  0CA9               	rrf	??___flmul+1,f
  6553     0433  0CA8               	rrf	??___flmul,f
  6554     0434                     u3710:
  6555     0434  0BAC               	decfsz	??___flmul+4,f
  6556     0435  2C30               	goto	u3715
  6557     0436  082B               	movf	??___flmul+3,w
  6558     0437  00B7               	movwf	___flmul@prod+3
  6559     0438  082A               	movf	??___flmul+2,w
  6560     0439  00B6               	movwf	___flmul@prod+2
  6561     043A  0829               	movf	??___flmul+1,w
  6562     043B  00B5               	movwf	___flmul@prod+1
  6563     043C  0828               	movf	??___flmul,w
  6564     043D  00B4               	movwf	___flmul@prod
  6565     043E                     l3034:
  6566     043E  3001               	movlw	1
  6567     043F  07B8               	addwf	___flmul@temp,f
  6568     0440  3000               	movlw	0
  6569     0441  3DB9               	addwfc	___flmul@temp+1,f
  6570     0442                     l3036:
  6571     0442  0839               	movf	___flmul@temp+1,w
  6572     0443  3A80               	xorlw	128
  6573     0444  00A8               	movwf	??___flmul
  6574     0445  3080               	movlw	128
  6575     0446  0228               	subwf	??___flmul,w
  6576     0447  1D03               	skipz
  6577     0448  2C4B               	goto	u3725
  6578     0449  30FF               	movlw	255
  6579     044A  0238               	subwf	___flmul@temp,w
  6580     044B                     u3725:
  6581     044B  1C03               	skipc
  6582     044C  2C4E               	goto	u3721
  6583     044D  2C4F               	goto	u3720
  6584     044E                     u3721:
  6585     044E  2C59               	goto	l3040
  6586     044F                     u3720:
  6587     044F                     l3038:
  6588     044F  307F               	movlw	127
  6589     0450  0020               	movlb	0	; select bank0
  6590     0451  00B7               	movwf	___flmul@prod+3
  6591     0452  3080               	movlw	128
  6592     0453  00B6               	movwf	___flmul@prod+2
  6593     0454  3000               	movlw	0
  6594     0455  00B5               	movwf	___flmul@prod+1
  6595     0456  3000               	movlw	0
  6596     0457  00B4               	movwf	___flmul@prod
  6597     0458  2C84               	goto	l807
  6598     0459                     l3040:
  6599     0459  0020               	movlb	0	; select bank0
  6600     045A  0839               	movf	___flmul@temp+1,w
  6601     045B  3A80               	xorlw	128
  6602     045C  00A8               	movwf	??___flmul
  6603     045D  3080               	movlw	128
  6604     045E  0228               	subwf	??___flmul,w
  6605     045F  1D03               	skipz
  6606     0460  2C63               	goto	u3735
  6607     0461  3001               	movlw	1
  6608     0462  0238               	subwf	___flmul@temp,w
  6609     0463                     u3735:
  6610     0463  1803               	skipnc
  6611     0464  2C66               	goto	u3731
  6612     0465  2C67               	goto	u3730
  6613     0466                     u3731:
  6614     0466  2C72               	goto	l3046
  6615     0467                     u3730:
  6616     0467                     l3042:
  6617     0467  3000               	movlw	0
  6618     0468  0020               	movlb	0	; select bank0
  6619     0469  00B7               	movwf	___flmul@prod+3
  6620     046A  3000               	movlw	0
  6621     046B  00B6               	movwf	___flmul@prod+2
  6622     046C  3000               	movlw	0
  6623     046D  00B5               	movwf	___flmul@prod+1
  6624     046E  3000               	movlw	0
  6625     046F  00B4               	movwf	___flmul@prod
  6626     0470                     l3044:
  6627     0470  01AD               	clrf	___flmul@sign
  6628     0471  2C84               	goto	l807
  6629     0472                     l3046:
  6630     0472  0020               	movlb	0	; select bank0
  6631     0473  0838               	movf	___flmul@temp,w
  6632     0474  00B3               	movwf	___flmul@bexp
  6633     0475  30FF               	movlw	255
  6634     0476  05B4               	andwf	___flmul@prod,f
  6635     0477  30FF               	movlw	255
  6636     0478  05B5               	andwf	___flmul@prod+1,f
  6637     0479  307F               	movlw	127
  6638     047A  05B6               	andwf	___flmul@prod+2,f
  6639     047B  3000               	movlw	0
  6640     047C  05B7               	andwf	___flmul@prod+3,f
  6641     047D                     l3048:
  6642     047D  1C33               	btfss	___flmul@bexp,0
  6643     047E  2C80               	goto	u3741
  6644     047F  2C81               	goto	u3740
  6645     0480                     u3741:
  6646     0480  2C82               	goto	l3052
  6647     0481                     u3740:
  6648     0481                     l3050:
  6649     0481  17B6               	bsf	___flmul@prod+2,7
  6650     0482                     l3052:
  6651     0482  3633               	lsrf	___flmul@bexp,w
  6652     0483  00B7               	movwf	___flmul@prod+3
  6653     0484                     l807:
  6654     0484  082D               	movf	___flmul@sign,w
  6655     0485  00A8               	movwf	??___flmul
  6656     0486  0828               	movf	??___flmul,w
  6657     0487  04B7               	iorwf	___flmul@prod+3,f
  6658     0488                     l3054:
  6659     0488  0837               	movf	___flmul@prod+3,w
  6660     0489  00A3               	movwf	?___flmul+3
  6661     048A  0836               	movf	___flmul@prod+2,w
  6662     048B  00A2               	movwf	?___flmul+2
  6663     048C  0835               	movf	___flmul@prod+1,w
  6664     048D  00A1               	movwf	?___flmul+1
  6665     048E  0834               	movf	___flmul@prod,w
  6666     048F  00A0               	movwf	?___flmul
  6667     0490                     l795:
  6668     0490  0008               	return
  6669     0491                     __end_of___flmul:
  6670                           
  6671                           	psect	text14
  6672     14EB                     __ptext14:	
  6673 ;; *************** function __Umul8_16 *****************
  6674 ;; Defined at:
  6675 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul8_16.c"
  6676 ;; Parameters:    Size  Location     Type
  6677 ;;  multiplier      1    wreg     unsigned char 
  6678 ;;  multiplicand    1    0[COMMON] unsigned char 
  6679 ;; Auto vars:     Size  Location     Type
  6680 ;;  multiplier      1    8[COMMON] unsigned char 
  6681 ;;  word_mpld       2    6[COMMON] unsigned short 
  6682 ;;  product         2    4[COMMON] unsigned short 
  6683 ;; Return value:  Size  Location     Type
  6684 ;;                  2    0[COMMON] unsigned int 
  6685 ;; Registers used:
  6686 ;;		wreg, status,2, status,0
  6687 ;; Tracked objects:
  6688 ;;		On entry : 0/0
  6689 ;;		On exit  : 0/0
  6690 ;;		Unchanged: 0/0
  6691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6692 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6693 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6694 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6695 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6696 ;;Total ram usage:        9 bytes
  6697 ;; Hardware stack levels used: 1
  6698 ;; This function calls:
  6699 ;;		Nothing
  6700 ;; This function is called by:
  6701 ;;		___flmul
  6702 ;; This function uses a non-reentrant model
  6703 ;;
  6704                           
  6705     14EB                     __Umul8_16:	
  6706                           ;psect for function __Umul8_16
  6707                           
  6708                           
  6709                           ;incstack = 0
  6710                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6711                           ;__Umul8_16@multiplier stored from wreg
  6712     14EB  00F8               	movwf	__Umul8_16@multiplier
  6713     14EC                     l2738:
  6714     14EC  01F4               	clrf	__Umul8_16@product
  6715     14ED  01F5               	clrf	__Umul8_16@product+1
  6716     14EE                     l2740:
  6717     14EE  0870               	movf	__Umul8_16@multiplicand,w
  6718     14EF  00F2               	movwf	??__Umul8_16
  6719     14F0  01F3               	clrf	??__Umul8_16+1
  6720     14F1  0872               	movf	??__Umul8_16,w
  6721     14F2  00F6               	movwf	__Umul8_16@word_mpld
  6722     14F3  0873               	movf	??__Umul8_16+1,w
  6723     14F4  00F7               	movwf	__Umul8_16@word_mpld+1
  6724     14F5                     l2742:
  6725     14F5  1C78               	btfss	__Umul8_16@multiplier,0
  6726     14F6  2CF8               	goto	u3181
  6727     14F7  2CF9               	goto	u3180
  6728     14F8                     u3181:
  6729     14F8  2CFD               	goto	l814
  6730     14F9                     u3180:
  6731     14F9                     l2744:
  6732     14F9  0876               	movf	__Umul8_16@word_mpld,w
  6733     14FA  07F4               	addwf	__Umul8_16@product,f
  6734     14FB  0877               	movf	__Umul8_16@word_mpld+1,w
  6735     14FC  3DF5               	addwfc	__Umul8_16@product+1,f
  6736     14FD                     l814:
  6737     14FD  3001               	movlw	1
  6738     14FE                     u3195:
  6739     14FE  35F6               	lslf	__Umul8_16@word_mpld,f
  6740     14FF  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  6741     1500  0B89               	decfsz	9,f
  6742     1501  2CFE               	goto	u3195
  6743     1502  1003               	clrc
  6744     1503  0CF8               	rrf	__Umul8_16@multiplier,f
  6745     1504                     l2746:
  6746     1504  0878               	movf	__Umul8_16@multiplier,w
  6747     1505  1D03               	btfss	3,2
  6748     1506  2D08               	goto	u3201
  6749     1507  2D09               	goto	u3200
  6750     1508                     u3201:
  6751     1508  2CF5               	goto	l2742
  6752     1509                     u3200:
  6753     1509                     l2748:
  6754     1509  0875               	movf	__Umul8_16@product+1,w
  6755     150A  00F1               	movwf	?__Umul8_16+1
  6756     150B  0874               	movf	__Umul8_16@product,w
  6757     150C  00F0               	movwf	?__Umul8_16
  6758     150D                     l816:
  6759     150D  0008               	return
  6760     150E                     __end_of__Umul8_16:
  6761                           
  6762                           	psect	text15
  6763     098D                     __ptext15:	
  6764 ;; *************** function ___flge *****************
  6765 ;; Defined at:
  6766 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\flge.c"
  6767 ;; Parameters:    Size  Location     Type
  6768 ;;  ff1             4    0[COMMON] unsigned int 
  6769 ;;  ff2             4    4[COMMON] unsigned int 
  6770 ;; Auto vars:     Size  Location     Type
  6771 ;;		None
  6772 ;; Return value:  Size  Location     Type
  6773 ;;		None               void
  6774 ;; Registers used:
  6775 ;;		wreg, status,2, status,0
  6776 ;; Tracked objects:
  6777 ;;		On entry : 0/0
  6778 ;;		On exit  : 0/0
  6779 ;;		Unchanged: 0/0
  6780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6781 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6783 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6784 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6785 ;;Total ram usage:       12 bytes
  6786 ;; Hardware stack levels used: 1
  6787 ;; This function calls:
  6788 ;;		Nothing
  6789 ;; This function is called by:
  6790 ;;		_main
  6791 ;;		_ftoa
  6792 ;; This function uses a non-reentrant model
  6793 ;;
  6794                           
  6795     098D                     ___flge:	
  6796                           ;psect for function ___flge
  6797                           
  6798     098D                     l2848:	
  6799                           ;incstack = 0
  6800                           ; Regs used in ___flge: [wreg+status,2+status,0]
  6801                           
  6802     098D  3000               	movlw	0
  6803     098E  0570               	andwf	___flge@ff1,w
  6804     098F  00F8               	movwf	??___flge
  6805     0990  3000               	movlw	0
  6806     0991  0571               	andwf	___flge@ff1+1,w
  6807     0992  00F9               	movwf	??___flge+1
  6808     0993  3080               	movlw	128
  6809     0994  0572               	andwf	___flge@ff1+2,w
  6810     0995  00FA               	movwf	??___flge+2
  6811     0996  307F               	movlw	127
  6812     0997  0573               	andwf	___flge@ff1+3,w
  6813     0998  00FB               	movwf	??___flge+3
  6814     0999  087B               	movf	??___flge+3,w
  6815     099A  047A               	iorwf	??___flge+2,w
  6816     099B  0479               	iorwf	??___flge+1,w
  6817     099C  0478               	iorwf	??___flge,w
  6818     099D  1D03               	skipz
  6819     099E  29A0               	goto	u3331
  6820     099F  29A1               	goto	u3330
  6821     09A0                     u3331:
  6822     09A0  29A9               	goto	l576
  6823     09A1                     u3330:
  6824     09A1                     l2850:
  6825     09A1  3000               	movlw	0
  6826     09A2  00F3               	movwf	___flge@ff1+3
  6827     09A3  3000               	movlw	0
  6828     09A4  00F2               	movwf	___flge@ff1+2
  6829     09A5  3000               	movlw	0
  6830     09A6  00F1               	movwf	___flge@ff1+1
  6831     09A7  3000               	movlw	0
  6832     09A8  00F0               	movwf	___flge@ff1
  6833     09A9                     l576:
  6834     09A9  3000               	movlw	0
  6835     09AA  0574               	andwf	___flge@ff2,w
  6836     09AB  00F8               	movwf	??___flge
  6837     09AC  3000               	movlw	0
  6838     09AD  0575               	andwf	___flge@ff2+1,w
  6839     09AE  00F9               	movwf	??___flge+1
  6840     09AF  3080               	movlw	128
  6841     09B0  0576               	andwf	___flge@ff2+2,w
  6842     09B1  00FA               	movwf	??___flge+2
  6843     09B2  307F               	movlw	127
  6844     09B3  0577               	andwf	___flge@ff2+3,w
  6845     09B4  00FB               	movwf	??___flge+3
  6846     09B5  087B               	movf	??___flge+3,w
  6847     09B6  047A               	iorwf	??___flge+2,w
  6848     09B7  0479               	iorwf	??___flge+1,w
  6849     09B8  0478               	iorwf	??___flge,w
  6850     09B9  1D03               	skipz
  6851     09BA  29BC               	goto	u3341
  6852     09BB  29BD               	goto	u3340
  6853     09BC                     u3341:
  6854     09BC  29C5               	goto	l2854
  6855     09BD                     u3340:
  6856     09BD                     l2852:
  6857     09BD  3000               	movlw	0
  6858     09BE  00F7               	movwf	___flge@ff2+3
  6859     09BF  3000               	movlw	0
  6860     09C0  00F6               	movwf	___flge@ff2+2
  6861     09C1  3000               	movlw	0
  6862     09C2  00F5               	movwf	___flge@ff2+1
  6863     09C3  3000               	movlw	0
  6864     09C4  00F4               	movwf	___flge@ff2
  6865     09C5                     l2854:
  6866     09C5  1FF3               	btfss	___flge@ff1+3,7
  6867     09C6  29C8               	goto	u3351
  6868     09C7  29C9               	goto	u3350
  6869     09C8                     u3351:
  6870     09C8  29E1               	goto	l2858
  6871     09C9                     u3350:
  6872     09C9                     l2856:
  6873     09C9  3000               	movlw	0
  6874     09CA  00F8               	movwf	??___flge
  6875     09CB  3000               	movlw	0
  6876     09CC  00F9               	movwf	??___flge+1
  6877     09CD  3000               	movlw	0
  6878     09CE  00FA               	movwf	??___flge+2
  6879     09CF  3080               	movlw	128
  6880     09D0  00FB               	movwf	??___flge+3
  6881     09D1  0870               	movf	___flge@ff1,w
  6882     09D2  02F8               	subwf	??___flge,f
  6883     09D3  0871               	movf	___flge@ff1+1,w
  6884     09D4  3BF9               	subwfb	??___flge+1,f
  6885     09D5  0872               	movf	___flge@ff1+2,w
  6886     09D6  3BFA               	subwfb	??___flge+2,f
  6887     09D7  0873               	movf	___flge@ff1+3,w
  6888     09D8  3BFB               	subwfb	??___flge+3,f
  6889     09D9  087B               	movf	??___flge+3,w
  6890     09DA  00F3               	movwf	___flge@ff1+3
  6891     09DB  087A               	movf	??___flge+2,w
  6892     09DC  00F2               	movwf	___flge@ff1+2
  6893     09DD  0879               	movf	??___flge+1,w
  6894     09DE  00F1               	movwf	___flge@ff1+1
  6895     09DF  0878               	movf	??___flge,w
  6896     09E0  00F0               	movwf	___flge@ff1
  6897     09E1                     l2858:
  6898     09E1  1FF7               	btfss	___flge@ff2+3,7
  6899     09E2  29E4               	goto	u3361
  6900     09E3  29E5               	goto	u3360
  6901     09E4                     u3361:
  6902     09E4  29FD               	goto	l579
  6903     09E5                     u3360:
  6904     09E5                     l2860:
  6905     09E5  3000               	movlw	0
  6906     09E6  00F8               	movwf	??___flge
  6907     09E7  3000               	movlw	0
  6908     09E8  00F9               	movwf	??___flge+1
  6909     09E9  3000               	movlw	0
  6910     09EA  00FA               	movwf	??___flge+2
  6911     09EB  3080               	movlw	128
  6912     09EC  00FB               	movwf	??___flge+3
  6913     09ED  0874               	movf	___flge@ff2,w
  6914     09EE  02F8               	subwf	??___flge,f
  6915     09EF  0875               	movf	___flge@ff2+1,w
  6916     09F0  3BF9               	subwfb	??___flge+1,f
  6917     09F1  0876               	movf	___flge@ff2+2,w
  6918     09F2  3BFA               	subwfb	??___flge+2,f
  6919     09F3  0877               	movf	___flge@ff2+3,w
  6920     09F4  3BFB               	subwfb	??___flge+3,f
  6921     09F5  087B               	movf	??___flge+3,w
  6922     09F6  00F7               	movwf	___flge@ff2+3
  6923     09F7  087A               	movf	??___flge+2,w
  6924     09F8  00F6               	movwf	___flge@ff2+2
  6925     09F9  0879               	movf	??___flge+1,w
  6926     09FA  00F5               	movwf	___flge@ff2+1
  6927     09FB  0878               	movf	??___flge,w
  6928     09FC  00F4               	movwf	___flge@ff2
  6929     09FD                     l579:
  6930     09FD  3080               	movlw	128
  6931     09FE  06F3               	xorwf	___flge@ff1+3,f
  6932     09FF  3080               	movlw	128
  6933     0A00  06F7               	xorwf	___flge@ff2+3,f
  6934     0A01  0877               	movf	___flge@ff2+3,w
  6935     0A02  0273               	subwf	___flge@ff1+3,w
  6936     0A03  1D03               	skipz
  6937     0A04  2A0F               	goto	u3375
  6938     0A05  0876               	movf	___flge@ff2+2,w
  6939     0A06  0272               	subwf	___flge@ff1+2,w
  6940     0A07  1D03               	skipz
  6941     0A08  2A0F               	goto	u3375
  6942     0A09  0875               	movf	___flge@ff2+1,w
  6943     0A0A  0271               	subwf	___flge@ff1+1,w
  6944     0A0B  1D03               	skipz
  6945     0A0C  2A0F               	goto	u3375
  6946     0A0D  0874               	movf	___flge@ff2,w
  6947     0A0E  0270               	subwf	___flge@ff1,w
  6948     0A0F                     u3375:
  6949     0A0F  1803               	skipnc
  6950     0A10  2A12               	goto	u3371
  6951     0A11  2A13               	goto	u3370
  6952     0A12                     u3371:
  6953     0A12  2A15               	goto	l2864
  6954     0A13                     u3370:
  6955     0A13                     l2862:
  6956     0A13  1003               	clrc
  6957     0A14  2A16               	goto	l584
  6958     0A15                     l2864:
  6959     0A15  1403               	setc
  6960     0A16                     l584:
  6961     0A16  0008               	return
  6962     0A17                     __end_of___flge:
  6963                           
  6964                           	psect	text16
  6965     1640                     __ptext16:	
  6966 ;; *************** function _Lcd_Signal_Init *****************
  6967 ;; Defined at:
  6968 ;;		line 500 in file "SC1601_LCD.c"
  6969 ;; Parameters:    Size  Location     Type
  6970 ;;		None
  6971 ;; Auto vars:     Size  Location     Type
  6972 ;;  strong_signa    8   16[BANK0 ] unsigned char [8]
  6973 ;;  weak_signal     8    8[BANK0 ] unsigned char [8]
  6974 ;;  no_signal       8    0[BANK0 ] unsigned char [8]
  6975 ;; Return value:  Size  Location     Type
  6976 ;;                  1    wreg      void 
  6977 ;; Registers used:
  6978 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6979 ;; Tracked objects:
  6980 ;;		On entry : 0/0
  6981 ;;		On exit  : 0/0
  6982 ;;		Unchanged: 0/0
  6983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6985 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6986 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6987 ;;      Totals:         1      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6988 ;;Total ram usage:       25 bytes
  6989 ;; Hardware stack levels used: 1
  6990 ;; Hardware stack levels required when called: 4
  6991 ;; This function calls:
  6992 ;;		_Lcd_Create_Char
  6993 ;; This function is called by:
  6994 ;;		_main
  6995 ;; This function uses a non-reentrant model
  6996 ;;
  6997                           
  6998     1640                     _Lcd_Signal_Init:	
  6999                           ;psect for function _Lcd_Signal_Init
  7000                           
  7001     1640                     l3404:	
  7002                           ;incstack = 0
  7003                           ; Regs used in _Lcd_Signal_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7004                           
  7005                           
  7006                           ;SC1601_LCD.c: 502:     unsigned char no_signal[8] = {0x00, 0x00, 0x00, 0x04, 0x0E, 0x1F
      +                          , 0x00, 0x00};
  7007     1640  3020               	movlw	low Lcd_Signal_Init@F6678
  7008     1641  0086               	movwf	6
  7009     1642  3001               	movlw	high Lcd_Signal_Init@F6678
  7010     1643  0087               	movwf	7
  7011     1644  3020               	movlw	low Lcd_Signal_Init@no_signal
  7012     1645  0084               	movwf	4
  7013     1646  3000               	movlw	high Lcd_Signal_Init@no_signal
  7014     1647  0085               	movwf	5
  7015     1648  3008               	movlw	8
  7016     1649  00FA               	movwf	??_Lcd_Signal_Init
  7017     164A                     u4220:
  7018     164A  0016               	moviw fsr1++
  7019     164B  001A               	movwi fsr0++
  7020     164C  0BFA               	decfsz	??_Lcd_Signal_Init,f
  7021     164D  2E4A               	goto	u4220
  7022                           
  7023                           ;SC1601_LCD.c: 503:     unsigned char weak_signal[8] = {0x00, 0x04, 0x0E, 0x04, 0x0E, 0x
      +                          1F, 0x00, 0x00};
  7024     164E  30E4               	movlw	low Lcd_Signal_Init@F6680
  7025     164F  0086               	movwf	6
  7026     1650  3001               	movlw	high Lcd_Signal_Init@F6680
  7027     1651  0087               	movwf	7
  7028     1652  3028               	movlw	low Lcd_Signal_Init@weak_signal
  7029     1653  0084               	movwf	4
  7030     1654  3000               	movlw	high Lcd_Signal_Init@weak_signal
  7031     1655  0085               	movwf	5
  7032     1656  3008               	movlw	8
  7033     1657  00FA               	movwf	??_Lcd_Signal_Init
  7034     1658                     u4230:
  7035     1658  0016               	moviw fsr1++
  7036     1659  001A               	movwi fsr0++
  7037     165A  0BFA               	decfsz	??_Lcd_Signal_Init,f
  7038     165B  2E58               	goto	u4230
  7039                           
  7040                           ;SC1601_LCD.c: 504:     unsigned char strong_signal[8] = {0x04, 0x0E, 0x1F, 0x0E, 0x0E, 
      +                          0x1F, 0x00, 0x00};
  7041     165C  30DC               	movlw	low Lcd_Signal_Init@F6682
  7042     165D  0086               	movwf	6
  7043     165E  3001               	movlw	high Lcd_Signal_Init@F6682
  7044     165F  0087               	movwf	7
  7045     1660  3030               	movlw	low Lcd_Signal_Init@strong_signal
  7046     1661  0084               	movwf	4
  7047     1662  3000               	movlw	high Lcd_Signal_Init@strong_signal
  7048     1663  0085               	movwf	5
  7049     1664  3008               	movlw	8
  7050     1665  00FA               	movwf	??_Lcd_Signal_Init
  7051     1666                     u4240:
  7052     1666  0016               	moviw fsr1++
  7053     1667  001A               	movwi fsr0++
  7054     1668  0BFA               	decfsz	??_Lcd_Signal_Init,f
  7055     1669  2E66               	goto	u4240
  7056     166A                     l3406:
  7057                           
  7058                           ;SC1601_LCD.c: 506:     Lcd_Create_Char(0, no_signal);
  7059     166A  3020               	movlw	(low (Lcd_Signal_Init@no_signal| 0))& (0+255)
  7060     166B  00F5               	movwf	Lcd_Create_Char@charmap
  7061     166C  3000               	movlw	0
  7062     166D  3195  2533  3196   	fcall	_Lcd_Create_Char
  7063     1670                     l3408:
  7064                           
  7065                           ;SC1601_LCD.c: 507:     Lcd_Create_Char(1, weak_signal);
  7066     1670  3028               	movlw	(low (Lcd_Signal_Init@weak_signal| 0))& (0+255)
  7067     1671  00F5               	movwf	Lcd_Create_Char@charmap
  7068     1672  3001               	movlw	1
  7069     1673  3195  2533  3196   	fcall	_Lcd_Create_Char
  7070     1676                     l3410:
  7071                           
  7072                           ;SC1601_LCD.c: 508:     Lcd_Create_Char(2, strong_signal);
  7073     1676  3030               	movlw	(low (Lcd_Signal_Init@strong_signal| 0))& (0+255)
  7074     1677  00F5               	movwf	Lcd_Create_Char@charmap
  7075     1678  3002               	movlw	2
  7076     1679  3195  2533  3196   	fcall	_Lcd_Create_Char
  7077     167C                     l299:
  7078     167C  0008               	return
  7079     167D                     __end_of_Lcd_Signal_Init:
  7080                           
  7081                           	psect	text17
  7082     1319                     __ptext17:	
  7083 ;; *************** function _Lcd_Shift_Right *****************
  7084 ;; Defined at:
  7085 ;;		line 177 in file "SC1601_LCD.c"
  7086 ;; Parameters:    Size  Location     Type
  7087 ;;		None
  7088 ;; Auto vars:     Size  Location     Type
  7089 ;;		None
  7090 ;; Return value:  Size  Location     Type
  7091 ;;                  1    wreg      void 
  7092 ;; Registers used:
  7093 ;;		wreg, status,2, status,0, pclath, cstack
  7094 ;; Tracked objects:
  7095 ;;		On entry : 0/0
  7096 ;;		On exit  : 0/0
  7097 ;;		Unchanged: 0/0
  7098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7103 ;;Total ram usage:        0 bytes
  7104 ;; Hardware stack levels used: 1
  7105 ;; Hardware stack levels required when called: 3
  7106 ;; This function calls:
  7107 ;;		_Lcd_Send_Command
  7108 ;; This function is called by:
  7109 ;;		_main
  7110 ;; This function uses a non-reentrant model
  7111 ;;
  7112                           
  7113     1319                     _Lcd_Shift_Right:	
  7114                           ;psect for function _Lcd_Shift_Right
  7115                           
  7116     1319                     l3270:	
  7117                           ;incstack = 0
  7118                           ; Regs used in _Lcd_Shift_Right: [wreg+status,2+status,0+pclath+cstack]
  7119                           
  7120                           
  7121                           ;SC1601_LCD.c: 179:     Lcd_Send_Command(0x1C);
  7122     1319  301C               	movlw	28
  7123     131A  3193  2359  3193   	fcall	_Lcd_Send_Command
  7124     131D                     l187:
  7125     131D  0008               	return
  7126     131E                     __end_of_Lcd_Shift_Right:
  7127                           
  7128                           	psect	text18
  7129     1314                     __ptext18:	
  7130 ;; *************** function _Lcd_Shift_Left *****************
  7131 ;; Defined at:
  7132 ;;		line 189 in file "SC1601_LCD.c"
  7133 ;; Parameters:    Size  Location     Type
  7134 ;;		None
  7135 ;; Auto vars:     Size  Location     Type
  7136 ;;		None
  7137 ;; Return value:  Size  Location     Type
  7138 ;;                  1    wreg      void 
  7139 ;; Registers used:
  7140 ;;		wreg, status,2, status,0, pclath, cstack
  7141 ;; Tracked objects:
  7142 ;;		On entry : 0/0
  7143 ;;		On exit  : 0/0
  7144 ;;		Unchanged: 0/0
  7145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7150 ;;Total ram usage:        0 bytes
  7151 ;; Hardware stack levels used: 1
  7152 ;; Hardware stack levels required when called: 3
  7153 ;; This function calls:
  7154 ;;		_Lcd_Send_Command
  7155 ;; This function is called by:
  7156 ;;		_main
  7157 ;; This function uses a non-reentrant model
  7158 ;;
  7159                           
  7160     1314                     _Lcd_Shift_Left:	
  7161                           ;psect for function _Lcd_Shift_Left
  7162                           
  7163     1314                     l3268:	
  7164                           ;incstack = 0
  7165                           ; Regs used in _Lcd_Shift_Left: [wreg+status,2+status,0+pclath+cstack]
  7166                           
  7167                           
  7168                           ;SC1601_LCD.c: 191:     Lcd_Send_Command(0x18);
  7169     1314  3018               	movlw	24
  7170     1315  3193  2359  3193   	fcall	_Lcd_Send_Command
  7171     1318                     l190:
  7172     1318  0008               	return
  7173     1319                     __end_of_Lcd_Shift_Left:
  7174                           
  7175                           	psect	text19
  7176     0806                     __ptext19:	
  7177 ;; *************** function _Lcd_Scroll_Text *****************
  7178 ;; Defined at:
  7179 ;;		line 359 in file "SC1601_LCD.c"
  7180 ;; Parameters:    Size  Location     Type
  7181 ;;  str             2   24[BANK0 ] PTR const unsigned char 
  7182 ;;		 -> STR_4(39), 
  7183 ;; Auto vars:     Size  Location     Type
  7184 ;;  i               2   48[BANK0 ] int 
  7185 ;;  buffer         17   29[BANK0 ] unsigned char [17]
  7186 ;;  len             2   46[BANK0 ] int 
  7187 ;; Return value:  Size  Location     Type
  7188 ;;                  1    wreg      void 
  7189 ;; Registers used:
  7190 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7191 ;; Tracked objects:
  7192 ;;		On entry : 0/0
  7193 ;;		On exit  : 0/0
  7194 ;;		Unchanged: 0/0
  7195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7196 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7197 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7198 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7199 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7200 ;;Total ram usage:       26 bytes
  7201 ;; Hardware stack levels used: 1
  7202 ;; Hardware stack levels required when called: 4
  7203 ;; This function calls:
  7204 ;;		_Lcd_Set_Cursor
  7205 ;;		_Lcd_Write_String
  7206 ;;		_strlen
  7207 ;;		_strncpy
  7208 ;; This function is called by:
  7209 ;;		_main
  7210 ;; This function uses a non-reentrant model
  7211 ;;
  7212                           
  7213     0806                     _Lcd_Scroll_Text:	
  7214                           ;psect for function _Lcd_Scroll_Text
  7215                           
  7216     0806                     l3282:	
  7217                           ;incstack = 0
  7218                           ; Regs used in _Lcd_Scroll_Text: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7219                           
  7220                           
  7221                           ;SC1601_LCD.c: 359: void Lcd_Scroll_Text(const char *str);SC1601_LCD.c: 360: {;SC1601_LC
      +                          D.c: 361:     char buffer[17];;SC1601_LCD.c: 362:     int len = strlen(str);
  7222     0806  0020               	movlb	0	; select bank0
  7223     0807  0839               	movf	Lcd_Scroll_Text@str+1,w
  7224     0808  00F1               	movwf	strlen@s+1
  7225     0809  0838               	movf	Lcd_Scroll_Text@str,w
  7226     080A  00F0               	movwf	strlen@s
  7227     080B  3193  23EF  3188   	fcall	_strlen
  7228     080E  0871               	movf	?_strlen+1,w
  7229     080F  0020               	movlb	0	; select bank0
  7230     0810  00CF               	movwf	Lcd_Scroll_Text@len+1
  7231     0811  0870               	movf	?_strlen,w
  7232     0812  00CE               	movwf	Lcd_Scroll_Text@len
  7233     0813                     l3284:
  7234                           
  7235                           ;SC1601_LCD.c: 363:     for (int i = 0; i <= len - 16; i++) {
  7236     0813  01D0               	clrf	Lcd_Scroll_Text@i
  7237     0814  01D1               	clrf	Lcd_Scroll_Text@i+1
  7238     0815  2847               	goto	l3298
  7239     0816                     l3286:
  7240                           
  7241                           ;SC1601_LCD.c: 364:         strncpy(buffer, &str[i], 16);
  7242     0816  0020               	movlb	0	; select bank0
  7243     0817  0850               	movf	Lcd_Scroll_Text@i,w
  7244     0818  0738               	addwf	Lcd_Scroll_Text@str,w
  7245     0819  00F0               	movwf	strncpy@s
  7246     081A  0851               	movf	Lcd_Scroll_Text@i+1,w
  7247     081B  3D39               	addwfc	Lcd_Scroll_Text@str+1,w
  7248     081C  00F1               	movwf	strncpy@s+1
  7249     081D  3010               	movlw	16
  7250     081E  00F2               	movwf	strncpy@n
  7251     081F  3000               	movlw	0
  7252     0820  00F3               	movwf	strncpy@n+1
  7253     0821  303D               	movlw	(low (Lcd_Scroll_Text@buffer| 0))& (0+255)
  7254     0822  3196  2605  3188   	fcall	_strncpy
  7255     0825                     l3288:
  7256                           
  7257                           ;SC1601_LCD.c: 365:         buffer[16] = '\0';
  7258     0825  0020               	movlb	0	; select bank0
  7259     0826  01CD               	clrf	Lcd_Scroll_Text@buffer+16
  7260     0827                     l3290:
  7261                           
  7262                           ;SC1601_LCD.c: 366:         Lcd_Set_Cursor(1, 1);
  7263     0827  01F5               	clrf	Lcd_Set_Cursor@col
  7264     0828  0AF5               	incf	Lcd_Set_Cursor@col,f
  7265     0829  3001               	movlw	1
  7266     082A  3194  243B  3188   	fcall	_Lcd_Set_Cursor
  7267     082D                     l3292:
  7268                           
  7269                           ;SC1601_LCD.c: 367:         Lcd_Write_String(buffer);
  7270     082D  303D               	movlw	low Lcd_Scroll_Text@buffer
  7271     082E  0020               	movlb	0	; select bank0
  7272     082F  00B6               	movwf	Lcd_Write_String@str
  7273     0830  3000               	movlw	high Lcd_Scroll_Text@buffer
  7274     0831  00B7               	movwf	Lcd_Write_String@str+1
  7275     0832  3193  23D6  3188   	fcall	_Lcd_Write_String
  7276     0835                     l3294:
  7277                           
  7278                           ;SC1601_LCD.c: 368:         _delay((unsigned long)((200)*(32000000/4000.0)));
  7279     0835  3009               	movlw	9
  7280     0836  0020               	movlb	0	; select bank0
  7281     0837  00BB               	movwf	??_Lcd_Scroll_Text+1
  7282     0838  301E               	movlw	30
  7283     0839  00BA               	movwf	??_Lcd_Scroll_Text
  7284     083A  30E4               	movlw	228
  7285     083B                     u4777:
  7286     083B  0B89               	decfsz	9,f
  7287     083C  283B               	goto	u4777
  7288     083D  0BBA               	decfsz	??_Lcd_Scroll_Text,f
  7289     083E  283B               	goto	u4777
  7290     083F  0BBB               	decfsz	??_Lcd_Scroll_Text+1,f
  7291     0840  283B               	goto	u4777
  7292     0841  0000               	nop
  7293     0842                     l3296:
  7294                           
  7295                           ;SC1601_LCD.c: 369:     }
  7296     0842  3001               	movlw	1
  7297     0843  0020               	movlb	0	; select bank0
  7298     0844  07D0               	addwf	Lcd_Scroll_Text@i,f
  7299     0845  3000               	movlw	0
  7300     0846  3DD1               	addwfc	Lcd_Scroll_Text@i+1,f
  7301     0847                     l3298:
  7302     0847  084E               	movf	Lcd_Scroll_Text@len,w
  7303     0848  3EF0               	addlw	240
  7304     0849  00BA               	movwf	??_Lcd_Scroll_Text
  7305     084A  30FF               	movlw	255
  7306     084B  3D4F               	addwfc	Lcd_Scroll_Text@len+1,w
  7307     084C  00BB               	movwf	??_Lcd_Scroll_Text+1
  7308     084D  083B               	movf	??_Lcd_Scroll_Text+1,w
  7309     084E  3A80               	xorlw	128
  7310     084F  00BC               	movwf	??_Lcd_Scroll_Text+2
  7311     0850  0851               	movf	Lcd_Scroll_Text@i+1,w
  7312     0851  3A80               	xorlw	128
  7313     0852  023C               	subwf	??_Lcd_Scroll_Text+2,w
  7314     0853  1D03               	skipz
  7315     0854  2857               	goto	u4005
  7316     0855  0850               	movf	Lcd_Scroll_Text@i,w
  7317     0856  023A               	subwf	??_Lcd_Scroll_Text,w
  7318     0857                     u4005:
  7319     0857  1803               	skipnc
  7320     0858  285A               	goto	u4001
  7321     0859  285B               	goto	u4000
  7322     085A                     u4001:
  7323     085A  2816               	goto	l3286
  7324     085B                     u4000:
  7325     085B                     l229:
  7326     085B  0008               	return
  7327     085C                     __end_of_Lcd_Scroll_Text:
  7328                           
  7329                           	psect	text20
  7330     1605                     __ptext20:	
  7331 ;; *************** function _strncpy *****************
  7332 ;; Defined at:
  7333 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strncpy.c"
  7334 ;; Parameters:    Size  Location     Type
  7335 ;;  d               1    wreg     PTR unsigned char 
  7336 ;;		 -> Lcd_Scroll_Text@buffer(17), 
  7337 ;;  s               2    0[COMMON] PTR const unsigned char 
  7338 ;;		 -> STR_4(39), 
  7339 ;;  n               2    2[COMMON] unsigned int 
  7340 ;; Auto vars:     Size  Location     Type
  7341 ;;  d               1    6[COMMON] PTR unsigned char 
  7342 ;;		 -> Lcd_Scroll_Text@buffer(17), 
  7343 ;;  cp              1    7[COMMON] PTR unsigned char 
  7344 ;;		 -> Lcd_Scroll_Text@buffer(17), 
  7345 ;; Return value:  Size  Location     Type
  7346 ;;                  1    wreg      PTR unsigned char 
  7347 ;; Registers used:
  7348 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  7349 ;; Tracked objects:
  7350 ;;		On entry : 0/0
  7351 ;;		On exit  : 0/0
  7352 ;;		Unchanged: 0/0
  7353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7354 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7355 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7356 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7357 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7358 ;;Total ram usage:        8 bytes
  7359 ;; Hardware stack levels used: 1
  7360 ;; This function calls:
  7361 ;;		Nothing
  7362 ;; This function is called by:
  7363 ;;		_Lcd_Scroll_Text
  7364 ;; This function uses a non-reentrant model
  7365 ;;
  7366                           
  7367     1605                     _strncpy:	
  7368                           ;psect for function _strncpy
  7369                           
  7370                           
  7371                           ;incstack = 0
  7372                           ; Regs used in _strncpy: [wreg-fsr1h+status,2+status,0+pclath]
  7373                           ;strncpy@d stored from wreg
  7374     1605  00F6               	movwf	strncpy@d
  7375     1606                     l3214:
  7376     1606  0876               	movf	strncpy@d,w
  7377     1607  00F7               	movwf	strncpy@cp
  7378     1608  2E24               	goto	l3222
  7379     1609                     l3216:
  7380     1609  3001               	movlw	1
  7381     160A  02F2               	subwf	strncpy@n,f
  7382     160B  3000               	movlw	0
  7383     160C  3BF3               	subwfb	strncpy@n+1,f
  7384     160D                     l3218:
  7385     160D  0877               	movf	strncpy@cp,w
  7386     160E  0086               	movwf	6
  7387     160F  0187               	clrf	7
  7388     1610  0AF7               	incf	strncpy@cp,f
  7389     1611  0871               	movf	strncpy@s+1,w
  7390     1612  00F5               	movwf	??_strncpy+1
  7391     1613  0870               	movf	strncpy@s,w
  7392     1614  00F4               	movwf	??_strncpy
  7393     1615  0AF0               	incf	strncpy@s,f
  7394     1616  1903               	skipnz
  7395     1617  0AF1               	incf	strncpy@s+1,f
  7396     1618  0874               	movf	??_strncpy,w
  7397     1619  0084               	movwf	4
  7398     161A  0875               	movf	??_strncpy+1,w
  7399     161B  0085               	movwf	5
  7400     161C  0800               	movf	0,w	;code access
  7401     161D  3FC0               	movwi [0]fsr1
  7402     161E  0889               	movf	9,f
  7403     161F  1D03               	btfss	3,2
  7404     1620  2E22               	goto	u3971
  7405     1621  2E23               	goto	u3970
  7406     1622                     u3971:
  7407     1622  2E24               	goto	l3222
  7408     1623                     u3970:
  7409     1623  2E33               	goto	l3228
  7410     1624                     l3222:
  7411     1624  0872               	movf	strncpy@n,w
  7412     1625  0473               	iorwf	strncpy@n+1,w
  7413     1626  1D03               	btfss	3,2
  7414     1627  2E29               	goto	u3981
  7415     1628  2E2A               	goto	u3980
  7416     1629                     u3981:
  7417     1629  2E09               	goto	l3216
  7418     162A                     u3980:
  7419     162A  2E33               	goto	l3228
  7420     162B                     l3224:
  7421     162B  0877               	movf	strncpy@cp,w
  7422     162C  0086               	movwf	6
  7423     162D  0187               	clrf	7
  7424     162E  0181               	clrf	1
  7425     162F                     l3226:
  7426     162F  3001               	movlw	1
  7427     1630  00F4               	movwf	??_strncpy
  7428     1631  0874               	movf	??_strncpy,w
  7429     1632  07F7               	addwf	strncpy@cp,f
  7430     1633                     l3228:
  7431     1633  3001               	movlw	1
  7432     1634  02F2               	subwf	strncpy@n,f
  7433     1635  3000               	movlw	0
  7434     1636  3BF3               	subwfb	strncpy@n+1,f
  7435     1637  0A72               	incf	strncpy@n,w
  7436     1638  1D03               	skipz
  7437     1639  2E3E               	goto	u3991
  7438     163A  0A73               	incf	strncpy@n+1,w
  7439     163B  1D03               	btfss	3,2
  7440     163C  2E3E               	goto	u3991
  7441     163D  2E3F               	goto	u3990
  7442     163E                     u3991:
  7443     163E  2E2B               	goto	l3224
  7444     163F                     u3990:
  7445     163F                     l978:
  7446     163F  0008               	return
  7447     1640                     __end_of_strncpy:
  7448                           
  7449                           	psect	text21
  7450     175C                     __ptext21:	
  7451 ;; *************** function _Lcd_Progress_Bar_Init *****************
  7452 ;; Defined at:
  7453 ;;		line 402 in file "SC1601_LCD.c"
  7454 ;; Parameters:    Size  Location     Type
  7455 ;;		None
  7456 ;; Auto vars:     Size  Location     Type
  7457 ;;  block_full      8   24[BANK0 ] unsigned char [8]
  7458 ;;  block_3         8   16[BANK0 ] unsigned char [8]
  7459 ;;  block_2         8    8[BANK0 ] unsigned char [8]
  7460 ;;  block_1         8    0[BANK0 ] unsigned char [8]
  7461 ;; Return value:  Size  Location     Type
  7462 ;;                  1    wreg      void 
  7463 ;; Registers used:
  7464 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7465 ;; Tracked objects:
  7466 ;;		On entry : 0/0
  7467 ;;		On exit  : 0/0
  7468 ;;		Unchanged: 0/0
  7469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7471 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7472 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7473 ;;      Totals:         1      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7474 ;;Total ram usage:       33 bytes
  7475 ;; Hardware stack levels used: 1
  7476 ;; Hardware stack levels required when called: 4
  7477 ;; This function calls:
  7478 ;;		_Lcd_Create_Char
  7479 ;; This function is called by:
  7480 ;;		_main
  7481 ;; This function uses a non-reentrant model
  7482 ;;
  7483                           
  7484     175C                     _Lcd_Progress_Bar_Init:	
  7485                           ;psect for function _Lcd_Progress_Bar_Init
  7486                           
  7487     175C                     l3306:	
  7488                           ;incstack = 0
  7489                           ; Regs used in _Lcd_Progress_Bar_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7490                           
  7491                           
  7492                           ;SC1601_LCD.c: 404:     unsigned char block_1[8] = {0x00, 0x10, 0x18, 0x1C, 0x1E, 0x1F, 
      +                          0x1F, 0x1F};
  7493     175C  30DC               	movlw	low Lcd_Progress_Bar_Init@F6642
  7494     175D  0086               	movwf	6
  7495     175E  3000               	movlw	high Lcd_Progress_Bar_Init@F6642
  7496     175F  0087               	movwf	7
  7497     1760  3020               	movlw	low Lcd_Progress_Bar_Init@block_1
  7498     1761  0084               	movwf	4
  7499     1762  3000               	movlw	high Lcd_Progress_Bar_Init@block_1
  7500     1763  0085               	movwf	5
  7501     1764  3008               	movlw	8
  7502     1765  00FA               	movwf	??_Lcd_Progress_Bar_Init
  7503     1766                     u4010:
  7504     1766  0016               	moviw fsr1++
  7505     1767  001A               	movwi fsr0++
  7506     1768  0BFA               	decfsz	??_Lcd_Progress_Bar_Init,f
  7507     1769  2F66               	goto	u4010
  7508                           
  7509                           ;SC1601_LCD.c: 405:     unsigned char block_2[8] = {0x00, 0x18, 0x18, 0x1C, 0x1E, 0x1F, 
      +                          0x1F, 0x1F};
  7510     176A  30D4               	movlw	low Lcd_Progress_Bar_Init@F6644
  7511     176B  0086               	movwf	6
  7512     176C  3000               	movlw	high Lcd_Progress_Bar_Init@F6644
  7513     176D  0087               	movwf	7
  7514     176E  3028               	movlw	low Lcd_Progress_Bar_Init@block_2
  7515     176F  0084               	movwf	4
  7516     1770  3000               	movlw	high Lcd_Progress_Bar_Init@block_2
  7517     1771  0085               	movwf	5
  7518     1772  3008               	movlw	8
  7519     1773  00FA               	movwf	??_Lcd_Progress_Bar_Init
  7520     1774                     u4020:
  7521     1774  0016               	moviw fsr1++
  7522     1775  001A               	movwi fsr0++
  7523     1776  0BFA               	decfsz	??_Lcd_Progress_Bar_Init,f
  7524     1777  2F74               	goto	u4020
  7525                           
  7526                           ;SC1601_LCD.c: 406:     unsigned char block_3[8] = {0x00, 0x1C, 0x1C, 0x1C, 0x1E, 0x1F, 
      +                          0x1F, 0x1F};
  7527     1778  3068               	movlw	low Lcd_Progress_Bar_Init@F6646
  7528     1779  0086               	movwf	6
  7529     177A  3001               	movlw	high Lcd_Progress_Bar_Init@F6646
  7530     177B  0087               	movwf	7
  7531     177C  3030               	movlw	low Lcd_Progress_Bar_Init@block_3
  7532     177D  0084               	movwf	4
  7533     177E  3000               	movlw	high Lcd_Progress_Bar_Init@block_3
  7534     177F  0085               	movwf	5
  7535     1780  3008               	movlw	8
  7536     1781  00FA               	movwf	??_Lcd_Progress_Bar_Init
  7537     1782                     u4030:
  7538     1782  0016               	moviw fsr1++
  7539     1783  001A               	movwi fsr0++
  7540     1784  0BFA               	decfsz	??_Lcd_Progress_Bar_Init,f
  7541     1785  2F82               	goto	u4030
  7542                           
  7543                           ;SC1601_LCD.c: 407:     unsigned char block_full[8] = {0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1
      +                          F, 0x1F, 0x1F};
  7544     1786  3060               	movlw	low Lcd_Progress_Bar_Init@F6648
  7545     1787  0086               	movwf	6
  7546     1788  3001               	movlw	high Lcd_Progress_Bar_Init@F6648
  7547     1789  0087               	movwf	7
  7548     178A  3038               	movlw	low Lcd_Progress_Bar_Init@block_full
  7549     178B  0084               	movwf	4
  7550     178C  3000               	movlw	high Lcd_Progress_Bar_Init@block_full
  7551     178D  0085               	movwf	5
  7552     178E  3008               	movlw	8
  7553     178F  00FA               	movwf	??_Lcd_Progress_Bar_Init
  7554     1790                     u4040:
  7555     1790  0016               	moviw fsr1++
  7556     1791  001A               	movwi fsr0++
  7557     1792  0BFA               	decfsz	??_Lcd_Progress_Bar_Init,f
  7558     1793  2F90               	goto	u4040
  7559     1794                     l3308:
  7560                           
  7561                           ;SC1601_LCD.c: 409:     Lcd_Create_Char(1, block_1);
  7562     1794  3020               	movlw	(low (Lcd_Progress_Bar_Init@block_1| 0))& (0+255)
  7563     1795  00F5               	movwf	Lcd_Create_Char@charmap
  7564     1796  3001               	movlw	1
  7565     1797  3195  2533  3197   	fcall	_Lcd_Create_Char
  7566     179A                     l3310:
  7567                           
  7568                           ;SC1601_LCD.c: 410:     Lcd_Create_Char(2, block_2);
  7569     179A  3028               	movlw	(low (Lcd_Progress_Bar_Init@block_2| 0))& (0+255)
  7570     179B  00F5               	movwf	Lcd_Create_Char@charmap
  7571     179C  3002               	movlw	2
  7572     179D  3195  2533  3197   	fcall	_Lcd_Create_Char
  7573     17A0                     l3312:
  7574                           
  7575                           ;SC1601_LCD.c: 411:     Lcd_Create_Char(3, block_3);
  7576     17A0  3030               	movlw	(low (Lcd_Progress_Bar_Init@block_3| 0))& (0+255)
  7577     17A1  00F5               	movwf	Lcd_Create_Char@charmap
  7578     17A2  3003               	movlw	3
  7579     17A3  3195  2533  3197   	fcall	_Lcd_Create_Char
  7580     17A6                     l3314:
  7581                           
  7582                           ;SC1601_LCD.c: 412:     Lcd_Create_Char(4, block_full);
  7583     17A6  3038               	movlw	(low (Lcd_Progress_Bar_Init@block_full| 0))& (0+255)
  7584     17A7  00F5               	movwf	Lcd_Create_Char@charmap
  7585     17A8  3004               	movlw	4
  7586     17A9  3195  2533  3197   	fcall	_Lcd_Create_Char
  7587     17AC                     l248:
  7588     17AC  0008               	return
  7589     17AD                     __end_of_Lcd_Progress_Bar_Init:
  7590                           
  7591                           	psect	text22
  7592     0B3E                     __ptext22:	
  7593 ;; *************** function _Lcd_Progress_Bar *****************
  7594 ;; Defined at:
  7595 ;;		line 416 in file "SC1601_LCD.c"
  7596 ;; Parameters:    Size  Location     Type
  7597 ;;  progress        2    4[BANK0 ] int 
  7598 ;;  max             2    6[BANK0 ] int 
  7599 ;; Auto vars:     Size  Location     Type
  7600 ;;  i               2   10[BANK0 ] int 
  7601 ;;  i               2    8[BANK0 ] int 
  7602 ;;  total_blocks    2   16[BANK0 ] int 
  7603 ;;  full_blocks     2   14[BANK0 ] int 
  7604 ;;  fractional_b    2   12[BANK0 ] int 
  7605 ;; Return value:  Size  Location     Type
  7606 ;;                  1    wreg      void 
  7607 ;; Registers used:
  7608 ;;		wreg, status,2, status,0, pclath, cstack
  7609 ;; Tracked objects:
  7610 ;;		On entry : 0/0
  7611 ;;		On exit  : 0/0
  7612 ;;		Unchanged: 0/0
  7613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7614 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7615 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7616 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7617 ;;      Totals:         2      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7618 ;;Total ram usage:       16 bytes
  7619 ;; Hardware stack levels used: 1
  7620 ;; Hardware stack levels required when called: 2
  7621 ;; This function calls:
  7622 ;;		_Lcd_Write_Char
  7623 ;;		___awdiv
  7624 ;;		___wmul
  7625 ;; This function is called by:
  7626 ;;		_main
  7627 ;; This function uses a non-reentrant model
  7628 ;;
  7629                           
  7630     0B3E                     _Lcd_Progress_Bar:	
  7631                           ;psect for function _Lcd_Progress_Bar
  7632                           
  7633     0B3E                     l3316:	
  7634                           ;incstack = 0
  7635                           ; Regs used in _Lcd_Progress_Bar: [wreg+status,2+status,0+pclath+cstack]
  7636                           
  7637                           
  7638                           ;SC1601_LCD.c: 416: void Lcd_Progress_Bar(int progress, int max);SC1601_LCD.c: 417: {;SC
      +                          1601_LCD.c: 418:     int total_blocks = 16;
  7639     0B3E  3010               	movlw	16
  7640     0B3F  0020               	movlb	0	; select bank0
  7641     0B40  00B0               	movwf	Lcd_Progress_Bar@total_blocks
  7642     0B41  3000               	movlw	0
  7643     0B42  00B1               	movwf	Lcd_Progress_Bar@total_blocks+1
  7644     0B43                     l3318:
  7645                           
  7646                           ;SC1601_LCD.c: 419:     int full_blocks = (progress * total_blocks) / max;
  7647     0B43  0827               	movf	Lcd_Progress_Bar@max+1,w
  7648     0B44  00F7               	movwf	___awdiv@divisor+1
  7649     0B45  0826               	movf	Lcd_Progress_Bar@max,w
  7650     0B46  00F6               	movwf	___awdiv@divisor
  7651     0B47  0825               	movf	Lcd_Progress_Bar@progress+1,w
  7652     0B48  00F1               	movwf	___wmul@multiplier+1
  7653     0B49  0824               	movf	Lcd_Progress_Bar@progress,w
  7654     0B4A  00F0               	movwf	___wmul@multiplier
  7655     0B4B  3010               	movlw	16
  7656     0B4C  00F2               	movwf	___wmul@multiplicand
  7657     0B4D  3000               	movlw	0
  7658     0B4E  00F3               	movwf	___wmul@multiplicand+1
  7659     0B4F  3194  24AC  318B   	fcall	___wmul
  7660     0B52  0871               	movf	?___wmul+1,w
  7661     0B53  00F9               	movwf	___awdiv@dividend+1
  7662     0B54  0870               	movf	?___wmul,w
  7663     0B55  00F8               	movwf	___awdiv@dividend
  7664     0B56  3188  205C  318B   	fcall	___awdiv
  7665     0B59  0877               	movf	?___awdiv+1,w
  7666     0B5A  0020               	movlb	0	; select bank0
  7667     0B5B  00AF               	movwf	Lcd_Progress_Bar@full_blocks+1
  7668     0B5C  0876               	movf	?___awdiv,w
  7669     0B5D  00AE               	movwf	Lcd_Progress_Bar@full_blocks
  7670     0B5E                     l3320:
  7671                           
  7672                           ;SC1601_LCD.c: 420:     int fractional_block = ((progress * total_blocks * 4) / max) % 4
      +                          ;
  7673     0B5E  0827               	movf	Lcd_Progress_Bar@max+1,w
  7674     0B5F  00F7               	movwf	___awdiv@divisor+1
  7675     0B60  0826               	movf	Lcd_Progress_Bar@max,w
  7676     0B61  00F6               	movwf	___awdiv@divisor
  7677     0B62  3010               	movlw	16
  7678     0B63  00F2               	movwf	___wmul@multiplicand
  7679     0B64  3000               	movlw	0
  7680     0B65  00F3               	movwf	___wmul@multiplicand+1
  7681     0B66  0825               	movf	Lcd_Progress_Bar@progress+1,w
  7682     0B67  00F1               	movwf	___wmul@multiplier+1
  7683     0B68  0824               	movf	Lcd_Progress_Bar@progress,w
  7684     0B69  00F0               	movwf	___wmul@multiplier
  7685     0B6A  3194  24AC  318B   	fcall	___wmul
  7686     0B6D  0870               	movf	?___wmul,w
  7687     0B6E  00FB               	movwf	??_Lcd_Progress_Bar
  7688     0B6F  0871               	movf	?___wmul+1,w
  7689     0B70  00FC               	movwf	??_Lcd_Progress_Bar+1
  7690     0B71  35FB               	lslf	??_Lcd_Progress_Bar,f
  7691     0B72  0DFC               	rlf	??_Lcd_Progress_Bar+1,f
  7692     0B73  35FB               	lslf	??_Lcd_Progress_Bar,f
  7693     0B74  0DFC               	rlf	??_Lcd_Progress_Bar+1,f
  7694     0B75  087B               	movf	??_Lcd_Progress_Bar,w
  7695     0B76  00F8               	movwf	___awdiv@dividend
  7696     0B77  087C               	movf	??_Lcd_Progress_Bar+1,w
  7697     0B78  00F9               	movwf	___awdiv@dividend+1
  7698     0B79  3188  205C  318B   	fcall	___awdiv
  7699     0B7C  3003               	movlw	3
  7700     0B7D  0576               	andwf	?___awdiv,w
  7701     0B7E  0020               	movlb	0	; select bank0
  7702     0B7F  00AC               	movwf	Lcd_Progress_Bar@fractional_block
  7703     0B80  3000               	movlw	0
  7704     0B81  0577               	andwf	?___awdiv+1,w
  7705     0B82  00AD               	movwf	Lcd_Progress_Bar@fractional_block+1
  7706     0B83                     l3322:
  7707                           
  7708                           ;SC1601_LCD.c: 423:     for (int i = 0; i < full_blocks; i++) {
  7709     0B83  01A8               	clrf	Lcd_Progress_Bar@i
  7710     0B84  01A9               	clrf	Lcd_Progress_Bar@i+1
  7711     0B85  2B8F               	goto	l3328
  7712     0B86                     l3324:
  7713                           
  7714                           ;SC1601_LCD.c: 424:         Lcd_Write_Char(4);
  7715     0B86  3004               	movlw	4
  7716     0B87  3193  23BD  318B   	fcall	_Lcd_Write_Char
  7717     0B8A                     l3326:
  7718                           
  7719                           ;SC1601_LCD.c: 425:     }
  7720     0B8A  3001               	movlw	1
  7721     0B8B  0020               	movlb	0	; select bank0
  7722     0B8C  07A8               	addwf	Lcd_Progress_Bar@i,f
  7723     0B8D  3000               	movlw	0
  7724     0B8E  3DA9               	addwfc	Lcd_Progress_Bar@i+1,f
  7725     0B8F                     l3328:
  7726     0B8F  0829               	movf	Lcd_Progress_Bar@i+1,w
  7727     0B90  3A80               	xorlw	128
  7728     0B91  00FB               	movwf	??_Lcd_Progress_Bar
  7729     0B92  082F               	movf	Lcd_Progress_Bar@full_blocks+1,w
  7730     0B93  3A80               	xorlw	128
  7731     0B94  027B               	subwf	??_Lcd_Progress_Bar,w
  7732     0B95  1D03               	skipz
  7733     0B96  2B99               	goto	u4055
  7734     0B97  082E               	movf	Lcd_Progress_Bar@full_blocks,w
  7735     0B98  0228               	subwf	Lcd_Progress_Bar@i,w
  7736     0B99                     u4055:
  7737     0B99  1C03               	skipc
  7738     0B9A  2B9C               	goto	u4051
  7739     0B9B  2B9D               	goto	u4050
  7740     0B9C                     u4051:
  7741     0B9C  2B86               	goto	l3324
  7742     0B9D                     u4050:
  7743     0B9D                     l3330:
  7744                           
  7745                           ;SC1601_LCD.c: 428:     if (full_blocks < total_blocks && fractional_block > 0) {
  7746     0B9D  0020               	movlb	0	; select bank0
  7747     0B9E  082F               	movf	Lcd_Progress_Bar@full_blocks+1,w
  7748     0B9F  3A80               	xorlw	128
  7749     0BA0  00FB               	movwf	??_Lcd_Progress_Bar
  7750     0BA1  0831               	movf	Lcd_Progress_Bar@total_blocks+1,w
  7751     0BA2  3A80               	xorlw	128
  7752     0BA3  027B               	subwf	??_Lcd_Progress_Bar,w
  7753     0BA4  1D03               	skipz
  7754     0BA5  2BA8               	goto	u4065
  7755     0BA6  0830               	movf	Lcd_Progress_Bar@total_blocks,w
  7756     0BA7  022E               	subwf	Lcd_Progress_Bar@full_blocks,w
  7757     0BA8                     u4065:
  7758     0BA8  1803               	skipnc
  7759     0BA9  2BAB               	goto	u4061
  7760     0BAA  2BAC               	goto	u4060
  7761     0BAB                     u4061:
  7762     0BAB  2BC4               	goto	l3338
  7763     0BAC                     u4060:
  7764     0BAC                     l3332:
  7765     0BAC  0020               	movlb	0	; select bank0
  7766     0BAD  082D               	movf	Lcd_Progress_Bar@fractional_block+1,w
  7767     0BAE  3A80               	xorlw	128
  7768     0BAF  00FB               	movwf	??_Lcd_Progress_Bar
  7769     0BB0  3080               	movlw	128
  7770     0BB1  027B               	subwf	??_Lcd_Progress_Bar,w
  7771     0BB2  1D03               	skipz
  7772     0BB3  2BB6               	goto	u4075
  7773     0BB4  3001               	movlw	1
  7774     0BB5  022C               	subwf	Lcd_Progress_Bar@fractional_block,w
  7775     0BB6                     u4075:
  7776     0BB6  1C03               	skipc
  7777     0BB7  2BB9               	goto	u4071
  7778     0BB8  2BBA               	goto	u4070
  7779     0BB9                     u4071:
  7780     0BB9  2BC4               	goto	l3338
  7781     0BBA                     u4070:
  7782     0BBA                     l3334:
  7783                           
  7784                           ;SC1601_LCD.c: 429:         Lcd_Write_Char(fractional_block);
  7785     0BBA  0020               	movlb	0	; select bank0
  7786     0BBB  082C               	movf	Lcd_Progress_Bar@fractional_block,w
  7787     0BBC  3193  23BD  318B   	fcall	_Lcd_Write_Char
  7788     0BBF                     l3336:
  7789                           
  7790                           ;SC1601_LCD.c: 430:         full_blocks++;
  7791     0BBF  3001               	movlw	1
  7792     0BC0  0020               	movlb	0	; select bank0
  7793     0BC1  07AE               	addwf	Lcd_Progress_Bar@full_blocks,f
  7794     0BC2  3000               	movlw	0
  7795     0BC3  3DAF               	addwfc	Lcd_Progress_Bar@full_blocks+1,f
  7796     0BC4                     l3338:
  7797                           
  7798                           ;SC1601_LCD.c: 434:     for (int i = full_blocks; i < total_blocks; i++) {
  7799     0BC4  0020               	movlb	0	; select bank0
  7800     0BC5  082F               	movf	Lcd_Progress_Bar@full_blocks+1,w
  7801     0BC6  00AB               	movwf	Lcd_Progress_Bar@i_339+1
  7802     0BC7  082E               	movf	Lcd_Progress_Bar@full_blocks,w
  7803     0BC8  00AA               	movwf	Lcd_Progress_Bar@i_339
  7804     0BC9  2BD3               	goto	l3344
  7805     0BCA                     l3340:
  7806                           
  7807                           ;SC1601_LCD.c: 435:         Lcd_Write_Char(' ');
  7808     0BCA  3020               	movlw	32
  7809     0BCB  3193  23BD  318B   	fcall	_Lcd_Write_Char
  7810     0BCE                     l3342:
  7811                           
  7812                           ;SC1601_LCD.c: 436:     }
  7813     0BCE  3001               	movlw	1
  7814     0BCF  0020               	movlb	0	; select bank0
  7815     0BD0  07AA               	addwf	Lcd_Progress_Bar@i_339,f
  7816     0BD1  3000               	movlw	0
  7817     0BD2  3DAB               	addwfc	Lcd_Progress_Bar@i_339+1,f
  7818     0BD3                     l3344:
  7819     0BD3  082B               	movf	Lcd_Progress_Bar@i_339+1,w
  7820     0BD4  3A80               	xorlw	128
  7821     0BD5  00FB               	movwf	??_Lcd_Progress_Bar
  7822     0BD6  0831               	movf	Lcd_Progress_Bar@total_blocks+1,w
  7823     0BD7  3A80               	xorlw	128
  7824     0BD8  027B               	subwf	??_Lcd_Progress_Bar,w
  7825     0BD9  1D03               	skipz
  7826     0BDA  2BDD               	goto	u4085
  7827     0BDB  0830               	movf	Lcd_Progress_Bar@total_blocks,w
  7828     0BDC  022A               	subwf	Lcd_Progress_Bar@i_339,w
  7829     0BDD                     u4085:
  7830     0BDD  1C03               	skipc
  7831     0BDE  2BE0               	goto	u4081
  7832     0BDF  2BE1               	goto	u4080
  7833     0BE0                     u4081:
  7834     0BE0  2BCA               	goto	l3340
  7835     0BE1                     u4080:
  7836     0BE1                     l258:
  7837     0BE1  0008               	return
  7838     0BE2                     __end_of_Lcd_Progress_Bar:
  7839                           
  7840                           	psect	text23
  7841     130F                     __ptext23:	
  7842 ;; *************** function _Lcd_Move_Cursor_Right *****************
  7843 ;; Defined at:
  7844 ;;		line 577 in file "SC1601_LCD.c"
  7845 ;; Parameters:    Size  Location     Type
  7846 ;;		None
  7847 ;; Auto vars:     Size  Location     Type
  7848 ;;		None
  7849 ;; Return value:  Size  Location     Type
  7850 ;;                  1    wreg      void 
  7851 ;; Registers used:
  7852 ;;		wreg, status,2, status,0, pclath, cstack
  7853 ;; Tracked objects:
  7854 ;;		On entry : 0/0
  7855 ;;		On exit  : 0/0
  7856 ;;		Unchanged: 0/0
  7857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7862 ;;Total ram usage:        0 bytes
  7863 ;; Hardware stack levels used: 1
  7864 ;; Hardware stack levels required when called: 3
  7865 ;; This function calls:
  7866 ;;		_Lcd_Send_Command
  7867 ;; This function is called by:
  7868 ;;		_main
  7869 ;; This function uses a non-reentrant model
  7870 ;;
  7871                           
  7872     130F                     _Lcd_Move_Cursor_Right:	
  7873                           ;psect for function _Lcd_Move_Cursor_Right
  7874                           
  7875     130F                     l3266:	
  7876                           ;incstack = 0
  7877                           ; Regs used in _Lcd_Move_Cursor_Right: [wreg+status,2+status,0+pclath+cstack]
  7878                           
  7879                           
  7880                           ;SC1601_LCD.c: 579:     Lcd_Send_Command(0x14);
  7881     130F  3014               	movlw	20
  7882     1310  3193  2359  3193   	fcall	_Lcd_Send_Command
  7883     1313                     l324:
  7884     1313  0008               	return
  7885     1314                     __end_of_Lcd_Move_Cursor_Right:
  7886                           
  7887                           	psect	text24
  7888     130A                     __ptext24:	
  7889 ;; *************** function _Lcd_Move_Cursor_Left *****************
  7890 ;; Defined at:
  7891 ;;		line 572 in file "SC1601_LCD.c"
  7892 ;; Parameters:    Size  Location     Type
  7893 ;;		None
  7894 ;; Auto vars:     Size  Location     Type
  7895 ;;		None
  7896 ;; Return value:  Size  Location     Type
  7897 ;;                  1    wreg      void 
  7898 ;; Registers used:
  7899 ;;		wreg, status,2, status,0, pclath, cstack
  7900 ;; Tracked objects:
  7901 ;;		On entry : 0/0
  7902 ;;		On exit  : 0/0
  7903 ;;		Unchanged: 0/0
  7904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7909 ;;Total ram usage:        0 bytes
  7910 ;; Hardware stack levels used: 1
  7911 ;; Hardware stack levels required when called: 3
  7912 ;; This function calls:
  7913 ;;		_Lcd_Send_Command
  7914 ;; This function is called by:
  7915 ;;		_main
  7916 ;; This function uses a non-reentrant model
  7917 ;;
  7918                           
  7919     130A                     _Lcd_Move_Cursor_Left:	
  7920                           ;psect for function _Lcd_Move_Cursor_Left
  7921                           
  7922     130A                     l3264:	
  7923                           ;incstack = 0
  7924                           ; Regs used in _Lcd_Move_Cursor_Left: [wreg+status,2+status,0+pclath+cstack]
  7925                           
  7926                           
  7927                           ;SC1601_LCD.c: 574:     Lcd_Send_Command(0x10);
  7928     130A  3010               	movlw	16
  7929     130B  3193  2359  3193   	fcall	_Lcd_Send_Command
  7930     130E                     l321:
  7931     130E  0008               	return
  7932     130F                     __end_of_Lcd_Move_Cursor_Left:
  7933                           
  7934                           	psect	text25
  7935     15CA                     __ptext25:	
  7936 ;; *************** function _Lcd_Init *****************
  7937 ;; Defined at:
  7938 ;;		line 122 in file "SC1601_LCD.c"
  7939 ;; Parameters:    Size  Location     Type
  7940 ;;		None
  7941 ;; Auto vars:     Size  Location     Type
  7942 ;;		None
  7943 ;; Return value:  Size  Location     Type
  7944 ;;                  1    wreg      void 
  7945 ;; Registers used:
  7946 ;;		wreg, status,2, status,0, pclath, cstack
  7947 ;; Tracked objects:
  7948 ;;		On entry : 0/0
  7949 ;;		On exit  : 0/0
  7950 ;;		Unchanged: 0/0
  7951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7954 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7955 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7956 ;;Total ram usage:        1 bytes
  7957 ;; Hardware stack levels used: 1
  7958 ;; Hardware stack levels required when called: 3
  7959 ;; This function calls:
  7960 ;;		_Lcd_Cmd
  7961 ;;		_Lcd_Port
  7962 ;;		_Lcd_Send_Command
  7963 ;; This function is called by:
  7964 ;;		_main
  7965 ;;		_Lcd_Reset
  7966 ;; This function uses a non-reentrant model
  7967 ;;
  7968                           
  7969     15CA                     _Lcd_Init:	
  7970                           ;psect for function _Lcd_Init
  7971                           
  7972     15CA                     l3240:	
  7973                           ;incstack = 0
  7974                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  7975                           
  7976                           
  7977                           ;SC1601_LCD.c: 124:     Lcd_Port(0x00);
  7978     15CA  3000               	movlw	0
  7979     15CB  3195  2562  3195   	fcall	_Lcd_Port
  7980     15CE                     l3242:
  7981                           
  7982                           ;SC1601_LCD.c: 125:     _delay((unsigned long)((20)*(32000000/4000.0)));
  7983     15CE  30D0               	movlw	208
  7984     15CF  00F5               	movwf	??_Lcd_Init
  7985     15D0  30CA               	movlw	202
  7986     15D1                     u4787:
  7987     15D1  0B89               	decfsz	9,f
  7988     15D2  2DD1               	goto	u4787
  7989     15D3  0BF5               	decfsz	??_Lcd_Init,f
  7990     15D4  2DD1               	goto	u4787
  7991     15D5                     l3244:
  7992                           
  7993                           ;SC1601_LCD.c: 128:     Lcd_Cmd(0x03); _delay((unsigned long)((5)*(32000000/4000.0)));
  7994     15D5  3003               	movlw	3
  7995     15D6  3193  2336  3195   	fcall	_Lcd_Cmd
  7996     15D9  3034               	movlw	52
  7997     15DA  00F5               	movwf	??_Lcd_Init
  7998     15DB  30F2               	movlw	242
  7999     15DC                     u4797:
  8000     15DC  0B89               	decfsz	9,f
  8001     15DD  2DDC               	goto	u4797
  8002     15DE  0BF5               	decfsz	??_Lcd_Init,f
  8003     15DF  2DDC               	goto	u4797
  8004     15E0                     l3246:
  8005                           
  8006                           ;SC1601_LCD.c: 129:     Lcd_Cmd(0x03); _delay((unsigned long)((100)*(32000000/4000000.0)
      +                          ));
  8007     15E0  3003               	movlw	3
  8008     15E1  3193  2336  3195   	fcall	_Lcd_Cmd
  8009     15E4                     l3248:
  8010     15E4  30A0               	movlw	160
  8011     15E5                     u4807:
  8012     15E5  3200               	nop2
  8013     15E6  0B89               	decfsz	9,f
  8014     15E7  2DE5               	goto	u4807
  8015                           
  8016                           ;SC1601_LCD.c: 130:     Lcd_Cmd(0x03);
  8017     15E8  3003               	movlw	3
  8018     15E9  3193  2336  3195   	fcall	_Lcd_Cmd
  8019                           
  8020                           ;SC1601_LCD.c: 131:     Lcd_Cmd(0x02);
  8021     15EC  3002               	movlw	2
  8022     15ED  3193  2336  3195   	fcall	_Lcd_Cmd
  8023                           
  8024                           ;SC1601_LCD.c: 134:     Lcd_Send_Command(0x28);
  8025     15F0  3028               	movlw	40
  8026     15F1  3193  2359  3195   	fcall	_Lcd_Send_Command
  8027                           
  8028                           ;SC1601_LCD.c: 135:     Lcd_Send_Command(0x0C);
  8029     15F4  300C               	movlw	12
  8030     15F5  3193  2359  3195   	fcall	_Lcd_Send_Command
  8031                           
  8032                           ;SC1601_LCD.c: 136:     Lcd_Send_Command(0x06);
  8033     15F8  3006               	movlw	6
  8034     15F9  3193  2359  3195   	fcall	_Lcd_Send_Command
  8035     15FC                     l3250:
  8036                           
  8037                           ;SC1601_LCD.c: 137:     _delay((unsigned long)((2)*(32000000/4000.0)));
  8038     15FC  3015               	movlw	21
  8039     15FD  00F5               	movwf	??_Lcd_Init
  8040     15FE  30C6               	movlw	198
  8041     15FF                     u4817:
  8042     15FF  0B89               	decfsz	9,f
  8043     1600  2DFF               	goto	u4817
  8044     1601  0BF5               	decfsz	??_Lcd_Init,f
  8045     1602  2DFF               	goto	u4817
  8046     1603  3200               	nop2
  8047     1604                     l175:
  8048     1604  0008               	return
  8049     1605                     __end_of_Lcd_Init:
  8050                           
  8051                           	psect	text26
  8052     000B                     __ptext26:	
  8053 ;; *************** function _Lcd_Display_Signal *****************
  8054 ;; Defined at:
  8055 ;;		line 511 in file "SC1601_LCD.c"
  8056 ;; Parameters:    Size  Location     Type
  8057 ;;  level           2   24[BANK0 ] int 
  8058 ;; Auto vars:     Size  Location     Type
  8059 ;;		None
  8060 ;; Return value:  Size  Location     Type
  8061 ;;                  1    wreg      void 
  8062 ;; Registers used:
  8063 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8064 ;; Tracked objects:
  8065 ;;		On entry : 0/0
  8066 ;;		On exit  : 0/0
  8067 ;;		Unchanged: 0/0
  8068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8069 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8072 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8073 ;;Total ram usage:        2 bytes
  8074 ;; Hardware stack levels used: 1
  8075 ;; Hardware stack levels required when called: 4
  8076 ;; This function calls:
  8077 ;;		_Lcd_Clear
  8078 ;;		_Lcd_Display_Custom_Char
  8079 ;;		_Lcd_Set_Cursor
  8080 ;;		_Lcd_Write_String
  8081 ;; This function is called by:
  8082 ;;		_main
  8083 ;; This function uses a non-reentrant model
  8084 ;;
  8085                           
  8086     000B                     _Lcd_Display_Signal:	
  8087                           ;psect for function _Lcd_Display_Signal
  8088                           
  8089     000B                     l3412:	
  8090                           ;incstack = 0
  8091                           ; Regs used in _Lcd_Display_Signal: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8092                           
  8093                           
  8094                           ;SC1601_LCD.c: 511: void Lcd_Display_Signal(int level);SC1601_LCD.c: 512: {;SC1601_LCD.c
      +                          : 513:     Lcd_Clear();
  8095     000B  3193  234C  3180   	fcall	_Lcd_Clear
  8096                           
  8097                           ;SC1601_LCD.c: 514:     Lcd_Set_Cursor(1, 1);
  8098     000E  01F5               	clrf	Lcd_Set_Cursor@col
  8099     000F  0AF5               	incf	Lcd_Set_Cursor@col,f
  8100     0010  3001               	movlw	1
  8101     0011  3194  243B  3180   	fcall	_Lcd_Set_Cursor
  8102     0014                     l3414:
  8103                           
  8104                           ;SC1601_LCD.c: 515:     Lcd_Write_String("Signal:");
  8105     0014  305F               	movlw	low (STR_11| (0+32768))
  8106     0015  0020               	movlb	0	; select bank0
  8107     0016  00B6               	movwf	Lcd_Write_String@str
  8108     0017  3098               	movlw	high (STR_11| (0+32768))
  8109     0018  00B7               	movwf	Lcd_Write_String@str+1
  8110     0019  3193  23D6  3180   	fcall	_Lcd_Write_String
  8111     001C                     l3416:
  8112                           
  8113                           ;SC1601_LCD.c: 517:     if (level == 0) {
  8114     001C  0020               	movlb	0	; select bank0
  8115     001D  0838               	movf	Lcd_Display_Signal@level,w
  8116     001E  0439               	iorwf	Lcd_Display_Signal@level+1,w
  8117     001F  1D03               	btfss	3,2
  8118     0020  2822               	goto	u4251
  8119     0021  2823               	goto	u4250
  8120     0022                     u4251:
  8121     0022  282E               	goto	l3420
  8122     0023                     u4250:
  8123     0023                     l3418:
  8124                           
  8125                           ;SC1601_LCD.c: 518:         Lcd_Set_Cursor(1, 10);
  8126     0023  300A               	movlw	10
  8127     0024  00F5               	movwf	Lcd_Set_Cursor@col
  8128     0025  3001               	movlw	1
  8129     0026  3194  243B  3180   	fcall	_Lcd_Set_Cursor
  8130                           
  8131                           ;SC1601_LCD.c: 519:         Lcd_Display_Custom_Char(0);
  8132     0029  3000               	movlw	0
  8133     002A  3193  231E  3180   	fcall	_Lcd_Display_Custom_Char
  8134                           
  8135                           ;SC1601_LCD.c: 520:     } else if (level == 1) {
  8136     002D  2849               	goto	l306
  8137     002E                     l3420:
  8138     002E  0338               	decf	Lcd_Display_Signal@level,w
  8139     002F  0439               	iorwf	Lcd_Display_Signal@level+1,w
  8140     0030  1D03               	btfss	3,2
  8141     0031  2833               	goto	u4261
  8142     0032  2834               	goto	u4260
  8143     0033                     u4261:
  8144     0033  283F               	goto	l3424
  8145     0034                     u4260:
  8146     0034                     l3422:
  8147                           
  8148                           ;SC1601_LCD.c: 521:         Lcd_Set_Cursor(1, 10);
  8149     0034  300A               	movlw	10
  8150     0035  00F5               	movwf	Lcd_Set_Cursor@col
  8151     0036  3001               	movlw	1
  8152     0037  3194  243B  3180   	fcall	_Lcd_Set_Cursor
  8153                           
  8154                           ;SC1601_LCD.c: 522:         Lcd_Display_Custom_Char(1);
  8155     003A  3001               	movlw	1
  8156     003B  3193  231E  3180   	fcall	_Lcd_Display_Custom_Char
  8157                           
  8158                           ;SC1601_LCD.c: 523:     } else {
  8159     003E  2849               	goto	l306
  8160     003F                     l3424:
  8161                           
  8162                           ;SC1601_LCD.c: 524:         Lcd_Set_Cursor(1, 10);
  8163     003F  300A               	movlw	10
  8164     0040  00F5               	movwf	Lcd_Set_Cursor@col
  8165     0041  3001               	movlw	1
  8166     0042  3194  243B  3180   	fcall	_Lcd_Set_Cursor
  8167                           
  8168                           ;SC1601_LCD.c: 525:         Lcd_Display_Custom_Char(2);
  8169     0045  3002               	movlw	2
  8170     0046  3193  231E  3180   	fcall	_Lcd_Display_Custom_Char
  8171     0049                     l306:
  8172     0049  0008               	return
  8173     004A                     __end_of_Lcd_Display_Signal:
  8174                           
  8175                           	psect	text27
  8176     1305                     __ptext27:	
  8177 ;; *************** function _Lcd_Display_On *****************
  8178 ;; Defined at:
  8179 ;;		line 555 in file "SC1601_LCD.c"
  8180 ;; Parameters:    Size  Location     Type
  8181 ;;		None
  8182 ;; Auto vars:     Size  Location     Type
  8183 ;;		None
  8184 ;; Return value:  Size  Location     Type
  8185 ;;                  1    wreg      void 
  8186 ;; Registers used:
  8187 ;;		wreg, status,2, status,0, pclath, cstack
  8188 ;; Tracked objects:
  8189 ;;		On entry : 0/0
  8190 ;;		On exit  : 0/0
  8191 ;;		Unchanged: 0/0
  8192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8197 ;;Total ram usage:        0 bytes
  8198 ;; Hardware stack levels used: 1
  8199 ;; Hardware stack levels required when called: 3
  8200 ;; This function calls:
  8201 ;;		_Lcd_Send_Command
  8202 ;; This function is called by:
  8203 ;;		_main
  8204 ;; This function uses a non-reentrant model
  8205 ;;
  8206                           
  8207     1305                     _Lcd_Display_On:	
  8208                           ;psect for function _Lcd_Display_On
  8209                           
  8210     1305                     l3262:	
  8211                           ;incstack = 0
  8212                           ; Regs used in _Lcd_Display_On: [wreg+status,2+status,0+pclath+cstack]
  8213                           
  8214                           
  8215                           ;SC1601_LCD.c: 557:     Lcd_Send_Command(0x0C);
  8216     1305  300C               	movlw	12
  8217     1306  3193  2359  3193   	fcall	_Lcd_Send_Command
  8218     1309                     l315:
  8219     1309  0008               	return
  8220     130A                     __end_of_Lcd_Display_On:
  8221                           
  8222                           	psect	text28
  8223     1300                     __ptext28:	
  8224 ;; *************** function _Lcd_Display_Off *****************
  8225 ;; Defined at:
  8226 ;;		line 560 in file "SC1601_LCD.c"
  8227 ;; Parameters:    Size  Location     Type
  8228 ;;		None
  8229 ;; Auto vars:     Size  Location     Type
  8230 ;;		None
  8231 ;; Return value:  Size  Location     Type
  8232 ;;                  1    wreg      void 
  8233 ;; Registers used:
  8234 ;;		wreg, status,2, status,0, pclath, cstack
  8235 ;; Tracked objects:
  8236 ;;		On entry : 0/0
  8237 ;;		On exit  : 0/0
  8238 ;;		Unchanged: 0/0
  8239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8244 ;;Total ram usage:        0 bytes
  8245 ;; Hardware stack levels used: 1
  8246 ;; Hardware stack levels required when called: 3
  8247 ;; This function calls:
  8248 ;;		_Lcd_Send_Command
  8249 ;; This function is called by:
  8250 ;;		_main
  8251 ;; This function uses a non-reentrant model
  8252 ;;
  8253                           
  8254     1300                     _Lcd_Display_Off:	
  8255                           ;psect for function _Lcd_Display_Off
  8256                           
  8257     1300                     l3260:	
  8258                           ;incstack = 0
  8259                           ; Regs used in _Lcd_Display_Off: [wreg+status,2+status,0+pclath+cstack]
  8260                           
  8261                           
  8262                           ;SC1601_LCD.c: 562:     Lcd_Send_Command(0x08);
  8263     1300  3008               	movlw	8
  8264     1301  3193  2359  3193   	fcall	_Lcd_Send_Command
  8265     1304                     l318:
  8266     1304  0008               	return
  8267     1305                     __end_of_Lcd_Display_Off:
  8268                           
  8269                           	psect	text29
  8270     0BE2                     __ptext29:	
  8271 ;; *************** function _Lcd_Display_Battery *****************
  8272 ;; Defined at:
  8273 ;;		line 462 in file "SC1601_LCD.c"
  8274 ;; Parameters:    Size  Location     Type
  8275 ;;  percentage      2   61[BANK0 ] int 
  8276 ;; Auto vars:     Size  Location     Type
  8277 ;;  buf             5   64[BANK0 ] unsigned char [5]
  8278 ;;  battery_char    1   69[BANK0 ] unsigned char 
  8279 ;; Return value:  Size  Location     Type
  8280 ;;                  1    wreg      void 
  8281 ;; Registers used:
  8282 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8283 ;; Tracked objects:
  8284 ;;		On entry : 0/0
  8285 ;;		On exit  : 0/0
  8286 ;;		Unchanged: 0/0
  8287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8288 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8289 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8290 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8291 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8292 ;;Total ram usage:        9 bytes
  8293 ;; Hardware stack levels used: 1
  8294 ;; Hardware stack levels required when called: 8
  8295 ;; This function calls:
  8296 ;;		_Lcd_Clear
  8297 ;;		_Lcd_Display_Custom_Char
  8298 ;;		_Lcd_Set_Cursor
  8299 ;;		_Lcd_Write_String
  8300 ;;		_sprintf
  8301 ;; This function is called by:
  8302 ;;		_main
  8303 ;; This function uses a non-reentrant model
  8304 ;;
  8305                           
  8306     0BE2                     _Lcd_Display_Battery:	
  8307                           ;psect for function _Lcd_Display_Battery
  8308                           
  8309     0BE2                     l3362:	
  8310                           ;incstack = 0
  8311                           ; Regs used in _Lcd_Display_Battery: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8312                           
  8313                           
  8314                           ;SC1601_LCD.c: 462: void Lcd_Display_Battery(int percentage);SC1601_LCD.c: 463: {;SC1601
      +                          _LCD.c: 464:     unsigned char battery_char;;SC1601_LCD.c: 467:     if (percentage <= 10
      +                          ) {
  8315     0BE2  0020               	movlb	0	; select bank0
  8316     0BE3  085E               	movf	Lcd_Display_Battery@percentage+1,w
  8317     0BE4  3A80               	xorlw	128
  8318     0BE5  00DF               	movwf	??_Lcd_Display_Battery
  8319     0BE6  3080               	movlw	128
  8320     0BE7  025F               	subwf	??_Lcd_Display_Battery,w
  8321     0BE8  1D03               	skipz
  8322     0BE9  2BEC               	goto	u4165
  8323     0BEA  300B               	movlw	11
  8324     0BEB  025D               	subwf	Lcd_Display_Battery@percentage,w
  8325     0BEC                     u4165:
  8326     0BEC  1803               	skipnc
  8327     0BED  2BEF               	goto	u4161
  8328     0BEE  2BF0               	goto	u4160
  8329     0BEF                     u4161:
  8330     0BEF  2BF3               	goto	l3366
  8331     0BF0                     u4160:
  8332     0BF0                     l3364:
  8333                           
  8334                           ;SC1601_LCD.c: 468:         battery_char = 0;
  8335     0BF0  0020               	movlb	0	; select bank0
  8336     0BF1  01E5               	clrf	Lcd_Display_Battery@battery_char
  8337                           
  8338                           ;SC1601_LCD.c: 469:     } else if (percentage <= 20) {
  8339     0BF2  2C50               	goto	l3388
  8340     0BF3                     l3366:
  8341     0BF3  0020               	movlb	0	; select bank0
  8342     0BF4  085E               	movf	Lcd_Display_Battery@percentage+1,w
  8343     0BF5  3A80               	xorlw	128
  8344     0BF6  00DF               	movwf	??_Lcd_Display_Battery
  8345     0BF7  3080               	movlw	128
  8346     0BF8  025F               	subwf	??_Lcd_Display_Battery,w
  8347     0BF9  1D03               	skipz
  8348     0BFA  2BFD               	goto	u4175
  8349     0BFB  3015               	movlw	21
  8350     0BFC  025D               	subwf	Lcd_Display_Battery@percentage,w
  8351     0BFD                     u4175:
  8352     0BFD  1803               	skipnc
  8353     0BFE  2C00               	goto	u4171
  8354     0BFF  2C01               	goto	u4170
  8355     0C00                     u4171:
  8356     0C00  2C05               	goto	l3370
  8357     0C01                     u4170:
  8358     0C01                     l3368:
  8359                           
  8360                           ;SC1601_LCD.c: 470:         battery_char = 1;
  8361     0C01  0020               	movlb	0	; select bank0
  8362     0C02  01E5               	clrf	Lcd_Display_Battery@battery_char
  8363     0C03  0AE5               	incf	Lcd_Display_Battery@battery_char,f
  8364                           
  8365                           ;SC1601_LCD.c: 471:     } else if (percentage <= 40) {
  8366     0C04  2C50               	goto	l3388
  8367     0C05                     l3370:
  8368     0C05  0020               	movlb	0	; select bank0
  8369     0C06  085E               	movf	Lcd_Display_Battery@percentage+1,w
  8370     0C07  3A80               	xorlw	128
  8371     0C08  00DF               	movwf	??_Lcd_Display_Battery
  8372     0C09  3080               	movlw	128
  8373     0C0A  025F               	subwf	??_Lcd_Display_Battery,w
  8374     0C0B  1D03               	skipz
  8375     0C0C  2C0F               	goto	u4185
  8376     0C0D  3029               	movlw	41
  8377     0C0E  025D               	subwf	Lcd_Display_Battery@percentage,w
  8378     0C0F                     u4185:
  8379     0C0F  1803               	skipnc
  8380     0C10  2C12               	goto	u4181
  8381     0C11  2C13               	goto	u4180
  8382     0C12                     u4181:
  8383     0C12  2C17               	goto	l3374
  8384     0C13                     u4180:
  8385     0C13                     l3372:
  8386                           
  8387                           ;SC1601_LCD.c: 472:         battery_char = 2;
  8388     0C13  3002               	movlw	2
  8389     0C14  0020               	movlb	0	; select bank0
  8390     0C15  00E5               	movwf	Lcd_Display_Battery@battery_char
  8391                           
  8392                           ;SC1601_LCD.c: 473:     } else if (percentage <= 50) {
  8393     0C16  2C50               	goto	l3388
  8394     0C17                     l3374:
  8395     0C17  0020               	movlb	0	; select bank0
  8396     0C18  085E               	movf	Lcd_Display_Battery@percentage+1,w
  8397     0C19  3A80               	xorlw	128
  8398     0C1A  00DF               	movwf	??_Lcd_Display_Battery
  8399     0C1B  3080               	movlw	128
  8400     0C1C  025F               	subwf	??_Lcd_Display_Battery,w
  8401     0C1D  1D03               	skipz
  8402     0C1E  2C21               	goto	u4195
  8403     0C1F  3033               	movlw	51
  8404     0C20  025D               	subwf	Lcd_Display_Battery@percentage,w
  8405     0C21                     u4195:
  8406     0C21  1803               	skipnc
  8407     0C22  2C24               	goto	u4191
  8408     0C23  2C25               	goto	u4190
  8409     0C24                     u4191:
  8410     0C24  2C29               	goto	l3378
  8411     0C25                     u4190:
  8412     0C25                     l3376:
  8413                           
  8414                           ;SC1601_LCD.c: 474:         battery_char = 3;
  8415     0C25  3003               	movlw	3
  8416     0C26  0020               	movlb	0	; select bank0
  8417     0C27  00E5               	movwf	Lcd_Display_Battery@battery_char
  8418                           
  8419                           ;SC1601_LCD.c: 475:     } else if (percentage <= 70) {
  8420     0C28  2C50               	goto	l3388
  8421     0C29                     l3378:
  8422     0C29  0020               	movlb	0	; select bank0
  8423     0C2A  085E               	movf	Lcd_Display_Battery@percentage+1,w
  8424     0C2B  3A80               	xorlw	128
  8425     0C2C  00DF               	movwf	??_Lcd_Display_Battery
  8426     0C2D  3080               	movlw	128
  8427     0C2E  025F               	subwf	??_Lcd_Display_Battery,w
  8428     0C2F  1D03               	skipz
  8429     0C30  2C33               	goto	u4205
  8430     0C31  3047               	movlw	71
  8431     0C32  025D               	subwf	Lcd_Display_Battery@percentage,w
  8432     0C33                     u4205:
  8433     0C33  1803               	skipnc
  8434     0C34  2C36               	goto	u4201
  8435     0C35  2C37               	goto	u4200
  8436     0C36                     u4201:
  8437     0C36  2C3B               	goto	l3382
  8438     0C37                     u4200:
  8439     0C37                     l3380:
  8440                           
  8441                           ;SC1601_LCD.c: 476:         battery_char = 4;
  8442     0C37  3004               	movlw	4
  8443     0C38  0020               	movlb	0	; select bank0
  8444     0C39  00E5               	movwf	Lcd_Display_Battery@battery_char
  8445                           
  8446                           ;SC1601_LCD.c: 477:     } else if (percentage <= 90) {
  8447     0C3A  2C50               	goto	l3388
  8448     0C3B                     l3382:
  8449     0C3B  0020               	movlb	0	; select bank0
  8450     0C3C  085E               	movf	Lcd_Display_Battery@percentage+1,w
  8451     0C3D  3A80               	xorlw	128
  8452     0C3E  00DF               	movwf	??_Lcd_Display_Battery
  8453     0C3F  3080               	movlw	128
  8454     0C40  025F               	subwf	??_Lcd_Display_Battery,w
  8455     0C41  1D03               	skipz
  8456     0C42  2C45               	goto	u4215
  8457     0C43  305B               	movlw	91
  8458     0C44  025D               	subwf	Lcd_Display_Battery@percentage,w
  8459     0C45                     u4215:
  8460     0C45  1803               	skipnc
  8461     0C46  2C48               	goto	u4211
  8462     0C47  2C49               	goto	u4210
  8463     0C48                     u4211:
  8464     0C48  2C4D               	goto	l3386
  8465     0C49                     u4210:
  8466     0C49                     l3384:
  8467                           
  8468                           ;SC1601_LCD.c: 478:         battery_char = 5;
  8469     0C49  3005               	movlw	5
  8470     0C4A  0020               	movlb	0	; select bank0
  8471     0C4B  00E5               	movwf	Lcd_Display_Battery@battery_char
  8472                           
  8473                           ;SC1601_LCD.c: 479:     } else {
  8474     0C4C  2C50               	goto	l3388
  8475     0C4D                     l3386:
  8476                           
  8477                           ;SC1601_LCD.c: 480:         battery_char = 6;
  8478     0C4D  3006               	movlw	6
  8479     0C4E  0020               	movlb	0	; select bank0
  8480     0C4F  00E5               	movwf	Lcd_Display_Battery@battery_char
  8481     0C50                     l3388:
  8482                           
  8483                           ;SC1601_LCD.c: 484:     Lcd_Clear();
  8484     0C50  3193  234C  318B   	fcall	_Lcd_Clear
  8485     0C53                     l3390:
  8486                           
  8487                           ;SC1601_LCD.c: 485:     Lcd_Set_Cursor(1, 1);
  8488     0C53  01F5               	clrf	Lcd_Set_Cursor@col
  8489     0C54  0AF5               	incf	Lcd_Set_Cursor@col,f
  8490     0C55  3001               	movlw	1
  8491     0C56  3194  243B  318B   	fcall	_Lcd_Set_Cursor
  8492     0C59                     l3392:
  8493                           
  8494                           ;SC1601_LCD.c: 486:     Lcd_Write_String("Battery:");
  8495     0C59  304D               	movlw	low (STR_9| (0+32768))
  8496     0C5A  0020               	movlb	0	; select bank0
  8497     0C5B  00B6               	movwf	Lcd_Write_String@str
  8498     0C5C  3098               	movlw	high (STR_9| (0+32768))
  8499     0C5D  00B7               	movwf	Lcd_Write_String@str+1
  8500     0C5E  3193  23D6  318B   	fcall	_Lcd_Write_String
  8501     0C61                     l3394:
  8502                           
  8503                           ;SC1601_LCD.c: 487:     Lcd_Set_Cursor(1, 10);
  8504     0C61  300A               	movlw	10
  8505     0C62  00F5               	movwf	Lcd_Set_Cursor@col
  8506     0C63  3001               	movlw	1
  8507     0C64  3194  243B  318B   	fcall	_Lcd_Set_Cursor
  8508     0C67                     l3396:
  8509                           
  8510                           ;SC1601_LCD.c: 488:     Lcd_Display_Custom_Char(battery_char);
  8511     0C67  0020               	movlb	0	; select bank0
  8512     0C68  0865               	movf	Lcd_Display_Battery@battery_char,w
  8513     0C69  3193  231E  318B   	fcall	_Lcd_Display_Custom_Char
  8514     0C6C                     l3398:
  8515                           
  8516                           ;SC1601_LCD.c: 491:     char buf[5];;SC1601_LCD.c: 492:     sprintf(buf, "%d%%", percent
      +                          age);
  8517     0C6C  3067               	movlw	low (STR_10| (0+32768))
  8518     0C6D  0020               	movlb	0	; select bank0
  8519     0C6E  00C9               	movwf	sprintf@fmt
  8520     0C6F  3098               	movlw	high (STR_10| (0+32768))
  8521     0C70  00CA               	movwf	sprintf@fmt+1
  8522     0C71  085E               	movf	Lcd_Display_Battery@percentage+1,w
  8523     0C72  00CC               	movwf	?_sprintf+3
  8524     0C73  085D               	movf	Lcd_Display_Battery@percentage,w
  8525     0C74  00CB               	movwf	?_sprintf+2
  8526     0C75  3060               	movlw	(low (Lcd_Display_Battery@buf| 0))& (0+255)
  8527     0C76  3194  248F  318B   	fcall	_sprintf
  8528     0C79                     l3400:
  8529                           
  8530                           ;SC1601_LCD.c: 493:     Lcd_Set_Cursor(1, 12);
  8531     0C79  300C               	movlw	12
  8532     0C7A  00F5               	movwf	Lcd_Set_Cursor@col
  8533     0C7B  3001               	movlw	1
  8534     0C7C  3194  243B  318B   	fcall	_Lcd_Set_Cursor
  8535     0C7F                     l3402:
  8536                           
  8537                           ;SC1601_LCD.c: 494:     Lcd_Write_String(buf);
  8538     0C7F  3060               	movlw	low Lcd_Display_Battery@buf
  8539     0C80  0020               	movlb	0	; select bank0
  8540     0C81  00B6               	movwf	Lcd_Write_String@str
  8541     0C82  3000               	movlw	high Lcd_Display_Battery@buf
  8542     0C83  00B7               	movwf	Lcd_Write_String@str+1
  8543     0C84  3193  23D6  318B   	fcall	_Lcd_Write_String
  8544     0C87                     l290:
  8545     0C87  0008               	return
  8546     0C88                     __end_of_Lcd_Display_Battery:
  8547                           
  8548                           	psect	text30
  8549     148F                     __ptext30:	
  8550 ;; *************** function _sprintf *****************
  8551 ;; Defined at:
  8552 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
  8553 ;; Parameters:    Size  Location     Type
  8554 ;;  s               1    wreg     PTR unsigned char 
  8555 ;;		 -> Lcd_Display_Battery@buf(5), Lcd_Write_Padded_Integer@buf(16), 
  8556 ;;  fmt             2   41[BANK0 ] PTR const unsigned char 
  8557 ;;		 -> STR_10(5), STR_8(5), 
  8558 ;; Auto vars:     Size  Location     Type
  8559 ;;  s               1   49[BANK0 ] PTR unsigned char 
  8560 ;;		 -> Lcd_Display_Battery@buf(5), Lcd_Write_Padded_Integer@buf(16), 
  8561 ;;  f              11   50[BANK0 ] struct _IO_FILE
  8562 ;;  ret             2    0        int 
  8563 ;;  ap              1   48[BANK0 ] PTR void [1]
  8564 ;;		 -> ?_sprintf(2), 
  8565 ;; Return value:  Size  Location     Type
  8566 ;;                  2   41[BANK0 ] int 
  8567 ;; Registers used:
  8568 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8569 ;; Tracked objects:
  8570 ;;		On entry : 0/0
  8571 ;;		On exit  : 0/0
  8572 ;;		Unchanged: 0/0
  8573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8574 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8575 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8576 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8577 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8578 ;;Total ram usage:       20 bytes
  8579 ;; Hardware stack levels used: 1
  8580 ;; Hardware stack levels required when called: 7
  8581 ;; This function calls:
  8582 ;;		_vfprintf
  8583 ;; This function is called by:
  8584 ;;		_Lcd_Write_Padded_Integer
  8585 ;;		_Lcd_Display_Battery
  8586 ;; This function uses a non-reentrant model
  8587 ;;
  8588                           
  8589     148F                     _sprintf:	
  8590                           ;psect for function _sprintf
  8591                           
  8592                           
  8593                           ;incstack = 0
  8594                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8595                           ;sprintf@s stored from wreg
  8596     148F  0020               	movlb	0	; select bank0
  8597     1490  00D1               	movwf	sprintf@s
  8598     1491                     l3192:
  8599     1491  304B               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  8600     1492  00D0               	movwf	sprintf@ap
  8601     1493  0851               	movf	sprintf@s,w
  8602     1494  00D2               	movwf	sprintf@f
  8603     1495                     l3194:
  8604     1495  01D4               	clrf	sprintf@f+2
  8605     1496  01D5               	clrf	sprintf@f+3
  8606     1497                     l3196:
  8607     1497  01DB               	clrf	sprintf@f+9
  8608     1498  01DC               	clrf	sprintf@f+10
  8609     1499                     l3198:
  8610     1499  084A               	movf	sprintf@fmt+1,w
  8611     149A  00C3               	movwf	vfprintf@fmt+1
  8612     149B  0849               	movf	sprintf@fmt,w
  8613     149C  00C2               	movwf	vfprintf@fmt
  8614     149D  3050               	movlw	(low (sprintf@ap| 0))& (0+255)
  8615     149E  00C4               	movwf	vfprintf@ap
  8616     149F  3052               	movlw	(low (sprintf@f| 0))& (0+255)
  8617     14A0  3194  2457  3194   	fcall	_vfprintf
  8618     14A3                     l3200:
  8619     14A3  0020               	movlb	0	; select bank0
  8620     14A4  0854               	movf	sprintf@f+2,w
  8621     14A5  0751               	addwf	sprintf@s,w
  8622     14A6  00CF               	movwf	??_sprintf
  8623     14A7  084F               	movf	??_sprintf,w
  8624     14A8  0086               	movwf	6
  8625     14A9  0187               	clrf	7
  8626     14AA  0181               	clrf	1
  8627     14AB                     l861:
  8628     14AB  0008               	return
  8629     14AC                     __end_of_sprintf:
  8630                           
  8631                           	psect	text31
  8632     1457                     __ptext31:	
  8633 ;; *************** function _vfprintf *****************
  8634 ;; Defined at:
  8635 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  8636 ;; Parameters:    Size  Location     Type
  8637 ;;  fp              1    wreg     PTR struct _IO_FILE
  8638 ;;		 -> sprintf@f(11), 
  8639 ;;  fmt             2   34[BANK0 ] PTR const unsigned char 
  8640 ;;		 -> STR_10(5), STR_8(5), 
  8641 ;;  ap              1   36[BANK0 ] PTR PTR void 
  8642 ;;		 -> sprintf@ap(1), 
  8643 ;; Auto vars:     Size  Location     Type
  8644 ;;  fp              1   38[BANK0 ] PTR struct _IO_FILE
  8645 ;;		 -> sprintf@f(11), 
  8646 ;;  cfmt            2   39[BANK0 ] PTR unsigned char 
  8647 ;;		 -> STR_10(5), STR_8(5), 
  8648 ;; Return value:  Size  Location     Type
  8649 ;;                  2   34[BANK0 ] int 
  8650 ;; Registers used:
  8651 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8652 ;; Tracked objects:
  8653 ;;		On entry : 0/0
  8654 ;;		On exit  : 0/0
  8655 ;;		Unchanged: 0/0
  8656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8657 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8658 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8659 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8660 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8661 ;;Total ram usage:        7 bytes
  8662 ;; Hardware stack levels used: 1
  8663 ;; Hardware stack levels required when called: 6
  8664 ;; This function calls:
  8665 ;;		_vfpfcnvrt
  8666 ;; This function is called by:
  8667 ;;		_sprintf
  8668 ;; This function uses a non-reentrant model
  8669 ;;
  8670                           
  8671     1457                     _vfprintf:	
  8672                           ;psect for function _vfprintf
  8673                           
  8674                           
  8675                           ;incstack = 0
  8676                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8677                           ;vfprintf@fp stored from wreg
  8678     1457  0020               	movlb	0	; select bank0
  8679     1458  00C6               	movwf	vfprintf@fp
  8680     1459                     l3102:
  8681                           
  8682                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  8683     1459  0843               	movf	vfprintf@fmt+1,w
  8684     145A  00C8               	movwf	vfprintf@cfmt+1
  8685     145B  0842               	movf	vfprintf@fmt,w
  8686     145C  00C7               	movwf	vfprintf@cfmt
  8687                           
  8688                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  8689     145D  2C66               	goto	l3106
  8690     145E                     l3104:
  8691                           
  8692                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  8693     145E  3047               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  8694     145F  00B4               	movwf	vfpfcnvrt@fmt
  8695     1460  0844               	movf	vfprintf@ap,w
  8696     1461  00B5               	movwf	vfpfcnvrt@ap
  8697     1462  0846               	movf	vfprintf@fp,w
  8698     1463  318D  25DE  3194   	fcall	_vfpfcnvrt
  8699     1466                     l3106:
  8700                           
  8701                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  8702     1466  0020               	movlb	0	; select bank0
  8703     1467  0847               	movf	vfprintf@cfmt,w
  8704     1468  0084               	movwf	4
  8705     1469  0848               	movf	vfprintf@cfmt+1,w
  8706     146A  0085               	movwf	5
  8707     146B  0012               	moviw fsr0++
  8708     146C  1D03               	btfss	3,2
  8709     146D  2C6F               	goto	u3891
  8710     146E  2C70               	goto	u3890
  8711     146F                     u3891:
  8712     146F  2C5E               	goto	l3104
  8713     1470                     u3890:
  8714     1470                     l3108:
  8715                           
  8716                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  8717     1470  01C2               	clrf	?_vfprintf
  8718     1471  01C3               	clrf	?_vfprintf+1
  8719     1472                     l932:
  8720     1472  0008               	return
  8721     1473                     __end_of_vfprintf:
  8722                           
  8723                           	psect	text32
  8724     0DDE                     __ptext32:	
  8725 ;; *************** function _vfpfcnvrt *****************
  8726 ;; Defined at:
  8727 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  8728 ;; Parameters:    Size  Location     Type
  8729 ;;  fp              1    wreg     PTR struct _IO_FILE
  8730 ;;		 -> sprintf@f(11), 
  8731 ;;  fmt             1   20[BANK0 ] PTR PTR unsigned char 
  8732 ;;		 -> vfprintf@cfmt(2), 
  8733 ;;  ap              1   21[BANK0 ] PTR PTR void 
  8734 ;;		 -> sprintf@ap(1), 
  8735 ;; Auto vars:     Size  Location     Type
  8736 ;;  fp              1   33[BANK0 ] PTR struct _IO_FILE
  8737 ;;		 -> sprintf@f(11), 
  8738 ;;  convarg         4   26[BANK0 ] struct .
  8739 ;;  cp              2   31[BANK0 ] PTR unsigned char 
  8740 ;;		 -> STR_10(5), STR_8(5), 
  8741 ;;  done            1   30[BANK0 ] _Bool 
  8742 ;;  c               1    0        unsigned char 
  8743 ;; Return value:  Size  Location     Type
  8744 ;;                  1    wreg      void 
  8745 ;; Registers used:
  8746 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8747 ;; Tracked objects:
  8748 ;;		On entry : 0/0
  8749 ;;		On exit  : 0/0
  8750 ;;		Unchanged: 0/0
  8751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8752 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8753 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8754 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8755 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8756 ;;Total ram usage:       14 bytes
  8757 ;; Hardware stack levels used: 1
  8758 ;; Hardware stack levels required when called: 5
  8759 ;; This function calls:
  8760 ;;		_dtoa
  8761 ;;		_fputc
  8762 ;;		_read_prec_or_width
  8763 ;; This function is called by:
  8764 ;;		_vfprintf
  8765 ;; This function uses a non-reentrant model
  8766 ;;
  8767                           
  8768     0DDE                     _vfpfcnvrt:	
  8769                           ;psect for function _vfpfcnvrt
  8770                           
  8771                           
  8772                           ;incstack = 0
  8773                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8774                           ;vfpfcnvrt@fp stored from wreg
  8775     0DDE  0020               	movlb	0	; select bank0
  8776     0DDF  00C1               	movwf	vfpfcnvrt@fp
  8777     0DE0                     l2752:
  8778                           
  8779                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  8780     0DE0  0834               	movf	vfpfcnvrt@fmt,w
  8781     0DE1  0086               	movwf	6
  8782     0DE2  0187               	clrf	7
  8783     0DE3  3F40               	moviw [0]fsr1
  8784     0DE4  00B6               	movwf	??_vfpfcnvrt
  8785     0DE5  3F41               	moviw [1]fsr1
  8786     0DE6  00B7               	movwf	??_vfpfcnvrt+1
  8787     0DE7  0836               	movf	??_vfpfcnvrt,w
  8788     0DE8  0084               	movwf	4
  8789     0DE9  0837               	movf	??_vfpfcnvrt+1,w
  8790     0DEA  0085               	movwf	5
  8791     0DEB  0012               	moviw fsr0++
  8792     0DEC  3A25               	xorlw	37
  8793     0DED  1D03               	btfss	3,2
  8794     0DEE  2DF0               	goto	u3211
  8795     0DEF  2DF1               	goto	u3210
  8796     0DF0                     u3211:
  8797     0DF0  2EA7               	goto	l2804
  8798     0DF1                     u3210:
  8799     0DF1                     l2754:
  8800                           
  8801                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  8802     0DF1  0834               	movf	vfpfcnvrt@fmt,w
  8803     0DF2  0086               	movwf	6
  8804     0DF3  0187               	clrf	7
  8805     0DF4  3001               	movlw	1
  8806     0DF5  0781               	addwf	1,f
  8807     0DF6  3141               	addfsr 1,1
  8808     0DF7  1803               	skipnc
  8809     0DF8  0A81               	incf	1,f
  8810     0DF9                     l2756:
  8811                           
  8812                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  8813     0DF9  01E8               	clrf	_width
  8814     0DFA  01E9               	clrf	_width+1
  8815     0DFB  1003               	clrc
  8816     0DFC  3000               	movlw	0
  8817     0DFD  1803               	btfsc	3,0
  8818     0DFE  3001               	movlw	1
  8819     0DFF  00EC               	movwf	_flags
  8820     0E00                     l2758:
  8821                           
  8822                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  8823     0E00  30FF               	movlw	255
  8824     0E01  00EA               	movwf	_prec
  8825     0E02  30FF               	movlw	255
  8826     0E03  00EB               	movwf	_prec+1
  8827     0E04                     l2760:
  8828                           
  8829                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  8830     0E04  01BE               	clrf	vfpfcnvrt@done
  8831                           
  8832                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  8833     0E05  2E23               	goto	l2768
  8834     0E06                     l917:	
  8835                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1219:            
      +                               case '0' :
  8836                           
  8837                           
  8838                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  8839     0E06  14EC               	bsf	_flags,1
  8840     0E07                     l2762:
  8841                           
  8842                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  8843     0E07  0834               	movf	vfpfcnvrt@fmt,w
  8844     0E08  0086               	movwf	6
  8845     0E09  0187               	clrf	7
  8846     0E0A  3001               	movlw	1
  8847     0E0B  0781               	addwf	1,f
  8848     0E0C  3141               	addfsr 1,1
  8849     0E0D  1803               	skipnc
  8850     0E0E  0A81               	incf	1,f
  8851                           
  8852                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  8853     0E0F  2E23               	goto	l2768
  8854     0E10                     l919:	
  8855                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1242:            
      +                               default:
  8856                           
  8857                           
  8858                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  8859     0E10  01BE               	clrf	vfpfcnvrt@done
  8860     0E11  0ABE               	incf	vfpfcnvrt@done,f
  8861                           
  8862                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  8863     0E12  2E23               	goto	l2768
  8864     0E13                     l2766:
  8865     0E13  0834               	movf	vfpfcnvrt@fmt,w
  8866     0E14  0086               	movwf	6
  8867     0E15  0187               	clrf	7
  8868     0E16  3F40               	moviw [0]fsr1
  8869     0E17  00B6               	movwf	??_vfpfcnvrt
  8870     0E18  3F41               	moviw [1]fsr1
  8871     0E19  00B7               	movwf	??_vfpfcnvrt+1
  8872     0E1A  0836               	movf	??_vfpfcnvrt,w
  8873     0E1B  0084               	movwf	4
  8874     0E1C  0837               	movf	??_vfpfcnvrt+1,w
  8875     0E1D  0085               	movwf	5
  8876     0E1E  0800               	movf	0,w	;code access
  8877                           
  8878                           ; Switch size 1, requested type "simple"
  8879                           ; Number of cases is 1, Range of values is 48 to 48
  8880                           ; switch strategies available:
  8881                           ; Name         Instructions Cycles
  8882                           ; simple_byte            4     3 (average)
  8883                           ; direct_byte           11     9 (fixed)
  8884                           ; jumptable            263     9 (fixed)
  8885                           ;	Chosen strategy is simple_byte
  8886     0E1F  3A30               	xorlw	48	; case 48
  8887     0E20  1903               	skipnz
  8888     0E21  2E06               	goto	l917
  8889     0E22  2E10               	goto	l919
  8890     0E23                     l2768:
  8891                           
  8892                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  8893     0E23  083E               	movf	vfpfcnvrt@done,w
  8894     0E24  1903               	btfsc	3,2
  8895     0E25  2E27               	goto	u3221
  8896     0E26  2E28               	goto	u3220
  8897     0E27                     u3221:
  8898     0E27  2E13               	goto	l2766
  8899     0E28                     u3220:
  8900     0E28                     l2770:
  8901                           
  8902                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  8903     0E28  0835               	movf	vfpfcnvrt@ap,w
  8904     0E29  00F6               	movwf	read_prec_or_width@ap
  8905     0E2A  0834               	movf	vfpfcnvrt@fmt,w
  8906     0E2B  3188  20BC  318D   	fcall	_read_prec_or_width
  8907     0E2E  0877               	movf	?_read_prec_or_width+1,w
  8908     0E2F  0020               	movlb	0	; select bank0
  8909     0E30  00E9               	movwf	_width+1
  8910     0E31  0876               	movf	?_read_prec_or_width,w
  8911     0E32  00E8               	movwf	_width
  8912     0E33                     l2772:
  8913                           
  8914                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  8915     0E33  1FE9               	btfss	_width+1,7
  8916     0E34  2E36               	goto	u3231
  8917     0E35  2E37               	goto	u3230
  8918     0E36                     u3231:
  8919     0E36  2E3D               	goto	l2778
  8920     0E37                     u3230:
  8921     0E37                     l2774:
  8922                           
  8923                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  8924     0E37  146C               	bsf	_flags,0
  8925     0E38                     l2776:
  8926                           
  8927                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  8928     0E38  09E8               	comf	_width,f
  8929     0E39  09E9               	comf	_width+1,f
  8930     0E3A  0AE8               	incf	_width,f
  8931     0E3B  1903               	skipnz
  8932     0E3C  0AE9               	incf	_width+1,f
  8933     0E3D                     l2778:
  8934                           
  8935                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  8936     0E3D  0834               	movf	vfpfcnvrt@fmt,w
  8937     0E3E  0086               	movwf	6
  8938     0E3F  0187               	clrf	7
  8939     0E40  3F40               	moviw [0]fsr1
  8940     0E41  00BF               	movwf	vfpfcnvrt@cp
  8941     0E42  3F41               	moviw [1]fsr1
  8942     0E43  00C0               	movwf	vfpfcnvrt@cp+1
  8943     0E44                     l2780:
  8944                           
  8945                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  8946     0E44  083F               	movf	vfpfcnvrt@cp,w
  8947     0E45  0084               	movwf	4
  8948     0E46  0840               	movf	vfpfcnvrt@cp+1,w
  8949     0E47  0085               	movwf	5
  8950     0E48  0012               	moviw fsr0++
  8951     0E49  3A64               	xorlw	100
  8952     0E4A  1903               	btfsc	3,2
  8953     0E4B  2E4D               	goto	u3241
  8954     0E4C  2E4E               	goto	u3240
  8955     0E4D                     u3241:
  8956     0E4D  2E58               	goto	l2784
  8957     0E4E                     u3240:
  8958     0E4E                     l2782:
  8959     0E4E  083F               	movf	vfpfcnvrt@cp,w
  8960     0E4F  0084               	movwf	4
  8961     0E50  0840               	movf	vfpfcnvrt@cp+1,w
  8962     0E51  0085               	movwf	5
  8963     0E52  0012               	moviw fsr0++
  8964     0E53  3A69               	xorlw	105
  8965     0E54  1D03               	btfss	3,2
  8966     0E55  2E57               	goto	u3251
  8967     0E56  2E58               	goto	u3250
  8968     0E57                     u3251:
  8969     0E57  2E7A               	goto	l2792
  8970     0E58                     u3250:
  8971     0E58                     l2784:
  8972                           
  8973                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  8974     0E58  0835               	movf	vfpfcnvrt@ap,w
  8975     0E59  0086               	movwf	6
  8976     0E5A  0187               	clrf	7
  8977     0E5B  0801               	movf	1,w
  8978     0E5C  0084               	movwf	4
  8979     0E5D  0185               	clrf	5
  8980     0E5E  3002               	movlw	2
  8981     0E5F  0781               	addwf	1,f
  8982     0E60  3F00               	moviw [0]fsr0
  8983     0E61  00BA               	movwf	vfpfcnvrt@convarg
  8984     0E62  3F01               	moviw [1]fsr0
  8985     0E63  00BB               	movwf	vfpfcnvrt@convarg+1
  8986     0E64                     l2786:
  8987                           
  8988                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  8989     0E64  083F               	movf	vfpfcnvrt@cp,w
  8990     0E65  3E01               	addlw	1
  8991     0E66  00B6               	movwf	??_vfpfcnvrt
  8992     0E67  3000               	movlw	0
  8993     0E68  3D40               	addwfc	vfpfcnvrt@cp+1,w
  8994     0E69  00B7               	movwf	??_vfpfcnvrt+1
  8995     0E6A  0834               	movf	vfpfcnvrt@fmt,w
  8996     0E6B  0086               	movwf	6
  8997     0E6C  0187               	clrf	7
  8998     0E6D  0836               	movf	??_vfpfcnvrt,w
  8999     0E6E  3FC0               	movwi [0]fsr1
  9000     0E6F  0837               	movf	??_vfpfcnvrt+1,w
  9001     0E70  3FC1               	movwi [1]fsr1
  9002     0E71                     l2788:
  9003                           
  9004                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  9005     0E71  083B               	movf	vfpfcnvrt@convarg+1,w
  9006     0E72  00A9               	movwf	dtoa@d+1
  9007     0E73  083A               	movf	vfpfcnvrt@convarg,w
  9008     0E74  00A8               	movwf	dtoa@d
  9009     0E75  0841               	movf	vfpfcnvrt@fp,w
  9010     0E76  318D  2532  318D   	fcall	_dtoa
  9011     0E79  2EBF               	goto	l925
  9012     0E7A                     l2792:
  9013                           
  9014                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1798:         if 
      +                          ((*fmt)[0] == '%') {
  9015     0E7A  0834               	movf	vfpfcnvrt@fmt,w
  9016     0E7B  0086               	movwf	6
  9017     0E7C  0187               	clrf	7
  9018     0E7D  3F40               	moviw [0]fsr1
  9019     0E7E  00B6               	movwf	??_vfpfcnvrt
  9020     0E7F  3F41               	moviw [1]fsr1
  9021     0E80  00B7               	movwf	??_vfpfcnvrt+1
  9022     0E81  0836               	movf	??_vfpfcnvrt,w
  9023     0E82  0084               	movwf	4
  9024     0E83  0837               	movf	??_vfpfcnvrt+1,w
  9025     0E84  0085               	movwf	5
  9026     0E85  0012               	moviw fsr0++
  9027     0E86  3A25               	xorlw	37
  9028     0E87  1D03               	btfss	3,2
  9029     0E88  2E8A               	goto	u3261
  9030     0E89  2E8B               	goto	u3260
  9031     0E8A                     u3261:
  9032     0E8A  2E9D               	goto	l2800
  9033     0E8B                     u3260:
  9034     0E8B                     l2794:
  9035                           
  9036                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1799:            
      +                           ++*fmt;
  9037     0E8B  0834               	movf	vfpfcnvrt@fmt,w
  9038     0E8C  0086               	movwf	6
  9039     0E8D  0187               	clrf	7
  9040     0E8E  3001               	movlw	1
  9041     0E8F  0781               	addwf	1,f
  9042     0E90  3141               	addfsr 1,1
  9043     0E91  1803               	skipnc
  9044     0E92  0A81               	incf	1,f
  9045     0E93                     l2796:
  9046                           
  9047                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1800:            
      +                           fputc((int)'%', fp);
  9048     0E93  3025               	movlw	37
  9049     0E94  00F0               	movwf	fputc@c
  9050     0E95  3000               	movlw	0
  9051     0E96  00F1               	movwf	fputc@c+1
  9052     0E97  0841               	movf	vfpfcnvrt@fp,w
  9053     0E98  00F2               	movwf	fputc@fp
  9054     0E99  3196  26BC  318D   	fcall	_fputc
  9055     0E9C  2EBF               	goto	l925
  9056     0E9D                     l2800:
  9057                           
  9058                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  9059     0E9D  0020               	movlb	0	; select bank0
  9060     0E9E  0834               	movf	vfpfcnvrt@fmt,w
  9061     0E9F  0086               	movwf	6
  9062     0EA0  0187               	clrf	7
  9063     0EA1  3001               	movlw	1
  9064     0EA2  0781               	addwf	1,f
  9065     0EA3  3141               	addfsr 1,1
  9066     0EA4  1803               	skipnc
  9067     0EA5  0A81               	incf	1,f
  9068     0EA6  2EBF               	goto	l925
  9069     0EA7                     l2804:
  9070                           
  9071                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  9072     0EA7  0834               	movf	vfpfcnvrt@fmt,w
  9073     0EA8  0086               	movwf	6
  9074     0EA9  0187               	clrf	7
  9075     0EAA  3F40               	moviw [0]fsr1
  9076     0EAB  00B6               	movwf	??_vfpfcnvrt
  9077     0EAC  3F41               	moviw [1]fsr1
  9078     0EAD  00B7               	movwf	??_vfpfcnvrt+1
  9079     0EAE  0836               	movf	??_vfpfcnvrt,w
  9080     0EAF  0084               	movwf	4
  9081     0EB0  0837               	movf	??_vfpfcnvrt+1,w
  9082     0EB1  0085               	movwf	5
  9083     0EB2  0800               	movf	0,w	;code access
  9084     0EB3  00B8               	movwf	??_vfpfcnvrt+2
  9085     0EB4  01B9               	clrf	??_vfpfcnvrt+3
  9086     0EB5  0838               	movf	??_vfpfcnvrt+2,w
  9087     0EB6  00F0               	movwf	fputc@c
  9088     0EB7  0839               	movf	??_vfpfcnvrt+3,w
  9089     0EB8  00F1               	movwf	fputc@c+1
  9090     0EB9  0841               	movf	vfpfcnvrt@fp,w
  9091     0EBA  00F2               	movwf	fputc@fp
  9092     0EBB  3196  26BC  318D   	fcall	_fputc
  9093     0EBE  2E9D               	goto	l2800
  9094     0EBF                     l925:
  9095     0EBF  0008               	return
  9096     0EC0                     __end_of_vfpfcnvrt:
  9097                           
  9098                           	psect	text33
  9099     08BC                     __ptext33:	
  9100 ;; *************** function _read_prec_or_width *****************
  9101 ;; Defined at:
  9102 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  9103 ;; Parameters:    Size  Location     Type
  9104 ;;  fmt             1    wreg     PTR PTR const unsigned c
  9105 ;;		 -> vfprintf@cfmt(2), 
  9106 ;;  ap              1    6[COMMON] PTR PTR void [1]
  9107 ;;		 -> sprintf@ap(1), 
  9108 ;; Auto vars:     Size  Location     Type
  9109 ;;  fmt             1    3[BANK0 ] PTR PTR const unsigned c
  9110 ;;		 -> vfprintf@cfmt(2), 
  9111 ;;  c               1    0[BANK0 ] unsigned char 
  9112 ;;  n               2    1[BANK0 ] int 
  9113 ;; Return value:  Size  Location     Type
  9114 ;;                  2    6[COMMON] int 
  9115 ;; Registers used:
  9116 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9117 ;; Tracked objects:
  9118 ;;		On entry : 0/0
  9119 ;;		On exit  : 0/0
  9120 ;;		Unchanged: 0/0
  9121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9122 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9123 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9124 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9125 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9126 ;;Total ram usage:        9 bytes
  9127 ;; Hardware stack levels used: 1
  9128 ;; Hardware stack levels required when called: 1
  9129 ;; This function calls:
  9130 ;;		___wmul
  9131 ;; This function is called by:
  9132 ;;		_vfpfcnvrt
  9133 ;; This function uses a non-reentrant model
  9134 ;;
  9135                           
  9136     08BC                     _read_prec_or_width:	
  9137                           ;psect for function _read_prec_or_width
  9138                           
  9139                           
  9140                           ;incstack = 0
  9141                           ; Regs used in _read_prec_or_width: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9142                           ;read_prec_or_width@fmt stored from wreg
  9143     08BC  0020               	movlb	0	; select bank0
  9144     08BD  00A3               	movwf	read_prec_or_width@fmt
  9145     08BE                     l2522:
  9146                           
  9147                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  9148     08BE  01A1               	clrf	read_prec_or_width@n
  9149     08BF  01A2               	clrf	read_prec_or_width@n+1
  9150     08C0                     l2524:
  9151                           
  9152                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  9153     08C0  0823               	movf	read_prec_or_width@fmt,w
  9154     08C1  0086               	movwf	6
  9155     08C2  0187               	clrf	7
  9156     08C3  3F40               	moviw [0]fsr1
  9157     08C4  00F8               	movwf	??_read_prec_or_width
  9158     08C5  3F41               	moviw [1]fsr1
  9159     08C6  00F9               	movwf	??_read_prec_or_width+1
  9160     08C7  0878               	movf	??_read_prec_or_width,w
  9161     08C8  0084               	movwf	4
  9162     08C9  0879               	movf	??_read_prec_or_width+1,w
  9163     08CA  0085               	movwf	5
  9164     08CB  0012               	moviw fsr0++
  9165     08CC  3A2A               	xorlw	42
  9166     08CD  1D03               	btfss	3,2
  9167     08CE  28D0               	goto	u2731
  9168     08CF  28D1               	goto	u2730
  9169     08D0                     u2731:
  9170     08D0  2903               	goto	l2534
  9171     08D1                     u2730:
  9172     08D1                     l2526:
  9173                           
  9174                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  9175     08D1  0823               	movf	read_prec_or_width@fmt,w
  9176     08D2  0086               	movwf	6
  9177     08D3  0187               	clrf	7
  9178     08D4  3001               	movlw	1
  9179     08D5  0781               	addwf	1,f
  9180     08D6  3141               	addfsr 1,1
  9181     08D7  1803               	skipnc
  9182     08D8  0A81               	incf	1,f
  9183     08D9                     l2528:
  9184                           
  9185                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  9186     08D9  0876               	movf	read_prec_or_width@ap,w
  9187     08DA  0086               	movwf	6
  9188     08DB  0187               	clrf	7
  9189     08DC  0801               	movf	1,w
  9190     08DD  0084               	movwf	4
  9191     08DE  0185               	clrf	5
  9192     08DF  3002               	movlw	2
  9193     08E0  0781               	addwf	1,f
  9194     08E1  3F00               	moviw [0]fsr0
  9195     08E2  00A1               	movwf	read_prec_or_width@n
  9196     08E3  3F01               	moviw [1]fsr0
  9197     08E4  00A2               	movwf	read_prec_or_width@n+1
  9198                           
  9199                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  9200     08E5  2917               	goto	l2536
  9201     08E6                     l2530:
  9202                           
  9203                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  9204     08E6  0820               	movf	read_prec_or_width@c,w
  9205     08E7  00F8               	movwf	??_read_prec_or_width
  9206     08E8  01F9               	clrf	??_read_prec_or_width+1
  9207     08E9  0822               	movf	read_prec_or_width@n+1,w
  9208     08EA  00F1               	movwf	___wmul@multiplier+1
  9209     08EB  0821               	movf	read_prec_or_width@n,w
  9210     08EC  00F0               	movwf	___wmul@multiplier
  9211     08ED  300A               	movlw	10
  9212     08EE  00F2               	movwf	___wmul@multiplicand
  9213     08EF  3000               	movlw	0
  9214     08F0  00F3               	movwf	___wmul@multiplicand+1
  9215     08F1  3194  24AC  3188   	fcall	___wmul
  9216     08F4  0878               	movf	??_read_prec_or_width,w
  9217     08F5  0770               	addwf	?___wmul,w
  9218     08F6  0020               	movlb	0	; select bank0
  9219     08F7  00A1               	movwf	read_prec_or_width@n
  9220     08F8  0879               	movf	??_read_prec_or_width+1,w
  9221     08F9  3D71               	addwfc	?___wmul+1,w
  9222     08FA  00A2               	movwf	read_prec_or_width@n+1
  9223     08FB                     l2532:
  9224                           
  9225                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  9226     08FB  0823               	movf	read_prec_or_width@fmt,w
  9227     08FC  0086               	movwf	6
  9228     08FD  0187               	clrf	7
  9229     08FE  3001               	movlw	1
  9230     08FF  0781               	addwf	1,f
  9231     0900  3141               	addfsr 1,1
  9232     0901  1803               	skipnc
  9233     0902  0A81               	incf	1,f
  9234     0903                     l2534:
  9235                           
  9236                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  9237     0903  0823               	movf	read_prec_or_width@fmt,w
  9238     0904  0086               	movwf	6
  9239     0905  0187               	clrf	7
  9240     0906  3F40               	moviw [0]fsr1
  9241     0907  00F8               	movwf	??_read_prec_or_width
  9242     0908  3F41               	moviw [1]fsr1
  9243     0909  00F9               	movwf	??_read_prec_or_width+1
  9244     090A  0878               	movf	??_read_prec_or_width,w
  9245     090B  0084               	movwf	4
  9246     090C  0879               	movf	??_read_prec_or_width+1,w
  9247     090D  0085               	movwf	5
  9248     090E  0800               	movf	0,w	;code access
  9249     090F  3ED0               	addlw	208
  9250     0910  00A0               	movwf	read_prec_or_width@c
  9251     0911  300A               	movlw	10
  9252     0912  0220               	subwf	read_prec_or_width@c,w
  9253     0913  1C03               	skipc
  9254     0914  2916               	goto	u2741
  9255     0915  2917               	goto	u2740
  9256     0916                     u2741:
  9257     0916  28E6               	goto	l2530
  9258     0917                     u2740:
  9259     0917                     l2536:
  9260                           
  9261                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  9262     0917  0822               	movf	read_prec_or_width@n+1,w
  9263     0918  00F7               	movwf	?_read_prec_or_width+1
  9264     0919  0821               	movf	read_prec_or_width@n,w
  9265     091A  00F6               	movwf	?_read_prec_or_width
  9266     091B                     l910:
  9267     091B  0008               	return
  9268     091C                     __end_of_read_prec_or_width:
  9269                           
  9270                           	psect	text34
  9271     14AC                     __ptext34:	
  9272 ;; *************** function ___wmul *****************
  9273 ;; Defined at:
  9274 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  9275 ;; Parameters:    Size  Location     Type
  9276 ;;  multiplier      2    0[COMMON] unsigned int 
  9277 ;;  multiplicand    2    2[COMMON] unsigned int 
  9278 ;; Auto vars:     Size  Location     Type
  9279 ;;  product         2    4[COMMON] unsigned int 
  9280 ;; Return value:  Size  Location     Type
  9281 ;;                  2    0[COMMON] unsigned int 
  9282 ;; Registers used:
  9283 ;;		wreg, status,2, status,0
  9284 ;; Tracked objects:
  9285 ;;		On entry : 0/0
  9286 ;;		On exit  : 0/0
  9287 ;;		Unchanged: 0/0
  9288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9289 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9290 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9292 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9293 ;;Total ram usage:        6 bytes
  9294 ;; Hardware stack levels used: 1
  9295 ;; This function calls:
  9296 ;;		Nothing
  9297 ;; This function is called by:
  9298 ;;		_itoa
  9299 ;;		_Lcd_Progress_Bar
  9300 ;;		_read_prec_or_width
  9301 ;; This function uses a non-reentrant model
  9302 ;;
  9303                           
  9304     14AC                     ___wmul:	
  9305                           ;psect for function ___wmul
  9306                           
  9307     14AC                     l2342:	
  9308                           ;incstack = 0
  9309                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  9310                           
  9311     14AC  01F4               	clrf	___wmul@product
  9312     14AD  01F5               	clrf	___wmul@product+1
  9313     14AE                     l2344:
  9314     14AE  1C70               	btfss	___wmul@multiplier,0
  9315     14AF  2CB1               	goto	u2241
  9316     14B0  2CB2               	goto	u2240
  9317     14B1                     u2241:
  9318     14B1  2CB6               	goto	l398
  9319     14B2                     u2240:
  9320     14B2                     l2346:
  9321     14B2  0872               	movf	___wmul@multiplicand,w
  9322     14B3  07F4               	addwf	___wmul@product,f
  9323     14B4  0873               	movf	___wmul@multiplicand+1,w
  9324     14B5  3DF5               	addwfc	___wmul@product+1,f
  9325     14B6                     l398:
  9326     14B6  3001               	movlw	1
  9327     14B7                     u2255:
  9328     14B7  35F2               	lslf	___wmul@multiplicand,f
  9329     14B8  0DF3               	rlf	___wmul@multiplicand+1,f
  9330     14B9  0B89               	decfsz	9,f
  9331     14BA  2CB7               	goto	u2255
  9332     14BB                     l2348:
  9333     14BB  3001               	movlw	1
  9334     14BC                     u2265:
  9335     14BC  36F1               	lsrf	___wmul@multiplier+1,f
  9336     14BD  0CF0               	rrf	___wmul@multiplier,f
  9337     14BE  0B89               	decfsz	9,f
  9338     14BF  2CBC               	goto	u2265
  9339     14C0                     l2350:
  9340     14C0  0870               	movf	___wmul@multiplier,w
  9341     14C1  0471               	iorwf	___wmul@multiplier+1,w
  9342     14C2  1D03               	btfss	3,2
  9343     14C3  2CC5               	goto	u2271
  9344     14C4  2CC6               	goto	u2270
  9345     14C5                     u2271:
  9346     14C5  2CAE               	goto	l2344
  9347     14C6                     u2270:
  9348     14C6                     l2352:
  9349     14C6  0875               	movf	___wmul@product+1,w
  9350     14C7  00F1               	movwf	?___wmul+1
  9351     14C8  0874               	movf	___wmul@product,w
  9352     14C9  00F0               	movwf	?___wmul
  9353     14CA                     l400:
  9354     14CA  0008               	return
  9355     14CB                     __end_of___wmul:
  9356                           
  9357                           	psect	text35
  9358     0D32                     __ptext35:	
  9359 ;; *************** function _dtoa *****************
  9360 ;; Defined at:
  9361 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  9362 ;; Parameters:    Size  Location     Type
  9363 ;;  fp              1    wreg     PTR struct _IO_FILE
  9364 ;;		 -> sprintf@f(11), 
  9365 ;;  d               2    8[BANK0 ] int 
  9366 ;; Auto vars:     Size  Location     Type
  9367 ;;  fp              1   13[BANK0 ] PTR struct _IO_FILE
  9368 ;;		 -> sprintf@f(11), 
  9369 ;;  i               2   18[BANK0 ] int 
  9370 ;;  w               2   15[BANK0 ] int 
  9371 ;;  s               1   17[BANK0 ] unsigned char 
  9372 ;;  p               1   14[BANK0 ] _Bool 
  9373 ;; Return value:  Size  Location     Type
  9374 ;;                  1    wreg      void 
  9375 ;; Registers used:
  9376 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9377 ;; Tracked objects:
  9378 ;;		On entry : 0/0
  9379 ;;		On exit  : 0/0
  9380 ;;		Unchanged: 0/0
  9381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9382 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9383 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9384 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9385 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9386 ;;Total ram usage:       12 bytes
  9387 ;; Hardware stack levels used: 1
  9388 ;; Hardware stack levels required when called: 4
  9389 ;; This function calls:
  9390 ;;		___awdiv
  9391 ;;		___awmod
  9392 ;;		_abs
  9393 ;;		_pad
  9394 ;; This function is called by:
  9395 ;;		_vfpfcnvrt
  9396 ;; This function uses a non-reentrant model
  9397 ;;
  9398                           
  9399     0D32                     _dtoa:	
  9400                           ;psect for function _dtoa
  9401                           
  9402                           
  9403                           ;incstack = 0
  9404                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9405                           ;dtoa@fp stored from wreg
  9406     0D32  0020               	movlb	0	; select bank0
  9407     0D33  00AD               	movwf	dtoa@fp
  9408     0D34                     l2476:
  9409                           
  9410                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 52
      +                          0:  _Bool p = 1;
  9411     0D34  01AE               	clrf	dtoa@p
  9412     0D35  0AAE               	incf	dtoa@p,f
  9413     0D36                     l2478:
  9414                           
  9415                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
  9416     0D36  1BA9               	btfsc	dtoa@d+1,7
  9417     0D37  2D39               	goto	u2631
  9418     0D38  2D3B               	goto	u2630
  9419     0D39                     u2631:
  9420     0D39  3001               	movlw	1
  9421     0D3A  2D3C               	goto	u2640
  9422     0D3B                     u2630:
  9423     0D3B  3000               	movlw	0
  9424     0D3C                     u2640:
  9425     0D3C  00B1               	movwf	dtoa@s
  9426                           
  9427                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  9428     0D3D  0869               	movf	_width+1,w
  9429     0D3E  00B0               	movwf	dtoa@w+1
  9430     0D3F  0868               	movf	_width,w
  9431     0D40  00AF               	movwf	dtoa@w
  9432     0D41                     l2480:
  9433                           
  9434                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 536:     if (s
  9435     0D41  0831               	movf	dtoa@s,w
  9436     0D42  1903               	btfsc	3,2
  9437     0D43  2D45               	goto	u2651
  9438     0D44  2D46               	goto	u2650
  9439     0D45                     u2651:
  9440     0D45  2D5A               	goto	l889
  9441     0D46                     u2650:
  9442     0D46                     l2482:
  9443                           
  9444                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 541:         --w;
  9445     0D46  30FF               	movlw	255
  9446     0D47  07AF               	addwf	dtoa@w,f
  9447     0D48  30FF               	movlw	255
  9448     0D49  3DB0               	addwfc	dtoa@w+1,f
  9449     0D4A                     l2484:
  9450                           
  9451                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  9452     0D4A  0831               	movf	dtoa@s,w
  9453     0D4B  1D03               	btfss	3,2
  9454     0D4C  2D4E               	goto	u2661
  9455     0D4D  2D4F               	goto	u2660
  9456     0D4E                     u2661:
  9457     0D4E  2D54               	goto	l2488
  9458     0D4F                     u2660:
  9459     0D4F                     l2486:
  9460     0D4F  302B               	movlw	43
  9461     0D50  00AB               	movwf	_dtoa$778
  9462     0D51  3000               	movlw	0
  9463     0D52  00AC               	movwf	_dtoa$778+1
  9464     0D53  2D58               	goto	l893
  9465     0D54                     l2488:
  9466     0D54  302D               	movlw	45
  9467     0D55  00AB               	movwf	_dtoa$778
  9468     0D56  3000               	movlw	0
  9469     0D57  00AC               	movwf	_dtoa$778+1
  9470     0D58                     l893:
  9471     0D58  082B               	movf	_dtoa$778,w
  9472     0D59  00B1               	movwf	dtoa@s
  9473     0D5A                     l889:	
  9474                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 543:     }
  9475                           
  9476                           
  9477                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  9478     0D5A  301F               	movlw	31
  9479     0D5B  00B2               	movwf	dtoa@i
  9480     0D5C  3000               	movlw	0
  9481     0D5D  00B3               	movwf	dtoa@i+1
  9482     0D5E                     l2490:
  9483                           
  9484                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  9485     0D5E  0023               	movlb	3	; select bank3
  9486     0D5F  01BF               	clrf	(_dbuf^(0+384)+31)
  9487                           
  9488                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  9489     0D60  2D95               	goto	l2502
  9490     0D61                     l2492:
  9491                           
  9492                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 564:         --i;
  9493     0D61  30FF               	movlw	255
  9494     0D62  07B2               	addwf	dtoa@i,f
  9495     0D63  30FF               	movlw	255
  9496     0D64  3DB3               	addwfc	dtoa@i+1,f
  9497     0D65                     l2494:
  9498                           
  9499                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  9500     0D65  0832               	movf	dtoa@i,w
  9501     0D66  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  9502     0D67  0086               	movwf	6
  9503     0D68  3001               	movlw	1	; select bank3/4
  9504     0D69  0087               	movwf	7
  9505     0D6A  300A               	movlw	10
  9506     0D6B  00F0               	movwf	___awmod@divisor
  9507     0D6C  3000               	movlw	0
  9508     0D6D  00F1               	movwf	___awmod@divisor+1
  9509     0D6E  0829               	movf	dtoa@d+1,w
  9510     0D6F  00F3               	movwf	___awmod@dividend+1
  9511     0D70  0828               	movf	dtoa@d,w
  9512     0D71  00F2               	movwf	___awmod@dividend
  9513     0D72  3197  27AD  318D   	fcall	___awmod
  9514     0D75  0871               	movf	?___awmod+1,w
  9515     0D76  00F8               	movwf	abs@a+1
  9516     0D77  0870               	movf	?___awmod,w
  9517     0D78  00F7               	movwf	abs@a
  9518     0D79  3193  236A  318D   	fcall	_abs
  9519     0D7C  0877               	movf	?_abs,w
  9520     0D7D  3E30               	addlw	48
  9521     0D7E  0081               	movwf	1
  9522     0D7F                     l2496:
  9523                           
  9524                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 569:   p = 0;
  9525     0D7F  0020               	movlb	0	; select bank0
  9526     0D80  01AE               	clrf	dtoa@p
  9527     0D81                     l2498:
  9528                           
  9529                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 571:         --w;
  9530     0D81  30FF               	movlw	255
  9531     0D82  07AF               	addwf	dtoa@w,f
  9532     0D83  30FF               	movlw	255
  9533     0D84  3DB0               	addwfc	dtoa@w+1,f
  9534     0D85                     l2500:
  9535                           
  9536                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  9537     0D85  300A               	movlw	10
  9538     0D86  00F6               	movwf	___awdiv@divisor
  9539     0D87  3000               	movlw	0
  9540     0D88  00F7               	movwf	___awdiv@divisor+1
  9541     0D89  0829               	movf	dtoa@d+1,w
  9542     0D8A  00F9               	movwf	___awdiv@dividend+1
  9543     0D8B  0828               	movf	dtoa@d,w
  9544     0D8C  00F8               	movwf	___awdiv@dividend
  9545     0D8D  3188  205C  318D   	fcall	___awdiv
  9546     0D90  0877               	movf	?___awdiv+1,w
  9547     0D91  0020               	movlb	0	; select bank0
  9548     0D92  00A9               	movwf	dtoa@d+1
  9549     0D93  0876               	movf	?___awdiv,w
  9550     0D94  00A8               	movwf	dtoa@d
  9551     0D95                     l2502:
  9552                           
  9553                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  9554     0D95  0020               	movlb	0	; select bank0
  9555     0D96  0833               	movf	dtoa@i+1,w
  9556     0D97  3A80               	xorlw	128
  9557     0D98  00AA               	movwf	??_dtoa
  9558     0D99  3080               	movlw	128
  9559     0D9A  022A               	subwf	??_dtoa,w
  9560     0D9B  1D03               	skipz
  9561     0D9C  2D9F               	goto	u2675
  9562     0D9D  3001               	movlw	1
  9563     0D9E  0232               	subwf	dtoa@i,w
  9564     0D9F                     u2675:
  9565     0D9F  1C03               	skipc
  9566     0DA0  2DA2               	goto	u2671
  9567     0DA1  2DA3               	goto	u2670
  9568     0DA2                     u2671:
  9569     0DA2  2DC1               	goto	l2512
  9570     0DA3                     u2670:
  9571     0DA3                     l2504:
  9572     0DA3  0020               	movlb	0	; select bank0
  9573     0DA4  0828               	movf	dtoa@d,w
  9574     0DA5  0429               	iorwf	dtoa@d+1,w
  9575     0DA6  1D03               	btfss	3,2
  9576     0DA7  2DA9               	goto	u2681
  9577     0DA8  2DAA               	goto	u2680
  9578     0DA9                     u2681:
  9579     0DA9  2D61               	goto	l2492
  9580     0DAA                     u2680:
  9581     0DAA                     l2506:
  9582     0DAA  082E               	movf	dtoa@p,w
  9583     0DAB  1D03               	btfss	3,2
  9584     0DAC  2DAE               	goto	u2691
  9585     0DAD  2DAF               	goto	u2690
  9586     0DAE                     u2691:
  9587     0DAE  2D61               	goto	l2492
  9588     0DAF                     u2690:
  9589     0DAF                     l2508:
  9590     0DAF  0830               	movf	dtoa@w+1,w
  9591     0DB0  3A80               	xorlw	128
  9592     0DB1  00AA               	movwf	??_dtoa
  9593     0DB2  3080               	movlw	128
  9594     0DB3  022A               	subwf	??_dtoa,w
  9595     0DB4  1D03               	skipz
  9596     0DB5  2DB8               	goto	u2705
  9597     0DB6  3001               	movlw	1
  9598     0DB7  022F               	subwf	dtoa@w,w
  9599     0DB8                     u2705:
  9600     0DB8  1C03               	skipc
  9601     0DB9  2DBB               	goto	u2701
  9602     0DBA  2DBC               	goto	u2700
  9603     0DBB                     u2701:
  9604     0DBB  2DC1               	goto	l2512
  9605     0DBC                     u2700:
  9606     0DBC                     l2510:
  9607     0DBC  0020               	movlb	0	; select bank0
  9608     0DBD  18EC               	btfsc	_flags,1
  9609     0DBE  2DC0               	goto	u2711
  9610     0DBF  2DC1               	goto	u2710
  9611     0DC0                     u2711:
  9612     0DC0  2D61               	goto	l2492
  9613     0DC1                     u2710:
  9614     0DC1                     l2512:
  9615                           
  9616                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  9617     0DC1  0020               	movlb	0	; select bank0
  9618     0DC2  0831               	movf	dtoa@s,w
  9619     0DC3  1903               	btfsc	3,2
  9620     0DC4  2DC6               	goto	u2721
  9621     0DC5  2DC7               	goto	u2720
  9622     0DC6                     u2721:
  9623     0DC6  2DD2               	goto	l2518
  9624     0DC7                     u2720:
  9625     0DC7                     l2514:
  9626                           
  9627                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 577:         --i;
  9628     0DC7  30FF               	movlw	255
  9629     0DC8  07B2               	addwf	dtoa@i,f
  9630     0DC9  30FF               	movlw	255
  9631     0DCA  3DB3               	addwfc	dtoa@i+1,f
  9632     0DCB                     l2516:
  9633                           
  9634                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  9635     0DCB  0832               	movf	dtoa@i,w
  9636     0DCC  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  9637     0DCD  0086               	movwf	6
  9638     0DCE  3001               	movlw	1	; select bank3/4
  9639     0DCF  0087               	movwf	7
  9640     0DD0  0831               	movf	dtoa@s,w
  9641     0DD1  0081               	movwf	1
  9642     0DD2                     l2518:
  9643                           
  9644                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  9645     0DD2  0832               	movf	dtoa@i,w
  9646     0DD3  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  9647     0DD4  00FB               	movwf	pad@buf
  9648     0DD5  0830               	movf	dtoa@w+1,w
  9649     0DD6  00FD               	movwf	pad@p+1
  9650     0DD7  082F               	movf	dtoa@w,w
  9651     0DD8  00FC               	movwf	pad@p
  9652     0DD9  082D               	movf	dtoa@fp,w
  9653     0DDA  3196  267D  318D   	fcall	_pad
  9654     0DDD                     l902:
  9655     0DDD  0008               	return
  9656     0DDE                     __end_of_dtoa:
  9657                           
  9658                           	psect	text36
  9659     167D                     __ptext36:	
  9660 ;; *************** function _pad *****************
  9661 ;; Defined at:
  9662 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  9663 ;; Parameters:    Size  Location     Type
  9664 ;;  fp              1    wreg     PTR struct _IO_FILE
  9665 ;;		 -> sprintf@f(11), 
  9666 ;;  buf             1   11[COMMON] PTR unsigned char 
  9667 ;;		 -> dbuf(32), 
  9668 ;;  p               2   12[COMMON] int 
  9669 ;; Auto vars:     Size  Location     Type
  9670 ;;  fp              1    7[BANK0 ] PTR struct _IO_FILE
  9671 ;;		 -> sprintf@f(11), 
  9672 ;;  i               2    5[BANK0 ] int 
  9673 ;; Return value:  Size  Location     Type
  9674 ;;                  1    wreg      void 
  9675 ;; Registers used:
  9676 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9677 ;; Tracked objects:
  9678 ;;		On entry : 0/0
  9679 ;;		On exit  : 0/0
  9680 ;;		Unchanged: 0/0
  9681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9682 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9683 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9684 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9685 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9686 ;;Total ram usage:        7 bytes
  9687 ;; Hardware stack levels used: 1
  9688 ;; Hardware stack levels required when called: 3
  9689 ;; This function calls:
  9690 ;;		_fputc
  9691 ;;		_fputs
  9692 ;; This function is called by:
  9693 ;;		_dtoa
  9694 ;; This function uses a non-reentrant model
  9695 ;;
  9696                           
  9697     167D                     _pad:	
  9698                           ;psect for function _pad
  9699                           
  9700                           
  9701                           ;incstack = 0
  9702                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9703                           ;pad@fp stored from wreg
  9704     167D  0020               	movlb	0	; select bank0
  9705     167E  00A7               	movwf	pad@fp
  9706     167F                     l2438:
  9707                           
  9708                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
  9709     167F  1C6C               	btfss	_flags,0
  9710     1680  2E82               	goto	u2471
  9711     1681  2E83               	goto	u2470
  9712     1682                     u2471:
  9713     1682  2E89               	goto	l2442
  9714     1683                     u2470:
  9715     1683                     l2440:
  9716                           
  9717                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  9718     1683  0827               	movf	pad@fp,w
  9719     1684  00F8               	movwf	fputs@fp
  9720     1685  087B               	movf	pad@buf,w
  9721     1686  3195  250E  3196   	fcall	_fputs
  9722     1689                     l2442:
  9723                           
  9724                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  9725     1689  1FFD               	btfss	pad@p+1,7
  9726     168A  2E8C               	goto	u2481
  9727     168B  2E8D               	goto	u2480
  9728     168C                     u2481:
  9729     168C  2E8F               	goto	l881
  9730     168D                     u2480:
  9731     168D                     l2444:
  9732                           
  9733                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  9734     168D  01FC               	clrf	pad@p
  9735     168E  01FD               	clrf	pad@p+1
  9736     168F                     l881:	
  9737                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 207:  }
  9738                           
  9739                           
  9740                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  9741     168F  0020               	movlb	0	; select bank0
  9742     1690  01A5               	clrf	pad@i
  9743     1691  01A6               	clrf	pad@i+1
  9744                           
  9745                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  9746     1692  2EA2               	goto	l2450
  9747     1693                     l2446:
  9748                           
  9749                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  9750     1693  3020               	movlw	32
  9751     1694  00F0               	movwf	fputc@c
  9752     1695  3000               	movlw	0
  9753     1696  00F1               	movwf	fputc@c+1
  9754     1697  0020               	movlb	0	; select bank0
  9755     1698  0827               	movf	pad@fp,w
  9756     1699  00F2               	movwf	fputc@fp
  9757     169A  3196  26BC  3196   	fcall	_fputc
  9758     169D                     l2448:
  9759                           
  9760                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 211:         ++i;
  9761     169D  3001               	movlw	1
  9762     169E  0020               	movlb	0	; select bank0
  9763     169F  07A5               	addwf	pad@i,f
  9764     16A0  3000               	movlw	0
  9765     16A1  3DA6               	addwfc	pad@i+1,f
  9766     16A2                     l2450:
  9767                           
  9768                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  9769     16A2  0826               	movf	pad@i+1,w
  9770     16A3  3A80               	xorlw	128
  9771     16A4  00A4               	movwf	??_pad
  9772     16A5  087D               	movf	pad@p+1,w
  9773     16A6  3A80               	xorlw	128
  9774     16A7  0224               	subwf	??_pad,w
  9775     16A8  1D03               	skipz
  9776     16A9  2EAC               	goto	u2495
  9777     16AA  087C               	movf	pad@p,w
  9778     16AB  0225               	subwf	pad@i,w
  9779     16AC                     u2495:
  9780     16AC  1C03               	skipc
  9781     16AD  2EAF               	goto	u2491
  9782     16AE  2EB0               	goto	u2490
  9783     16AF                     u2491:
  9784     16AF  2E93               	goto	l2446
  9785     16B0                     u2490:
  9786     16B0                     l884:
  9787                           
  9788                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  9789     16B0  0020               	movlb	0	; select bank0
  9790     16B1  186C               	btfsc	_flags,0
  9791     16B2  2EB4               	goto	u2501
  9792     16B3  2EB5               	goto	u2500
  9793     16B4                     u2501:
  9794     16B4  2EBB               	goto	l886
  9795     16B5                     u2500:
  9796     16B5                     l2452:
  9797                           
  9798                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  9799     16B5  0827               	movf	pad@fp,w
  9800     16B6  00F8               	movwf	fputs@fp
  9801     16B7  087B               	movf	pad@buf,w
  9802     16B8  3195  250E  3196   	fcall	_fputs
  9803     16BB                     l886:
  9804     16BB  0008               	return
  9805     16BC                     __end_of_pad:
  9806                           
  9807                           	psect	text37
  9808     150E                     __ptext37:	
  9809 ;; *************** function _fputs *****************
  9810 ;; Defined at:
  9811 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputs.c"
  9812 ;; Parameters:    Size  Location     Type
  9813 ;;  s               1    wreg     PTR const unsigned char 
  9814 ;;		 -> dbuf(32), 
  9815 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  9816 ;;		 -> sprintf@f(11), 
  9817 ;; Auto vars:     Size  Location     Type
  9818 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  9819 ;;		 -> dbuf(32), 
  9820 ;;  i               2    1[BANK0 ] int 
  9821 ;;  c               1    0[BANK0 ] unsigned char 
  9822 ;; Return value:  Size  Location     Type
  9823 ;;                  2    8[COMMON] int 
  9824 ;; Registers used:
  9825 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9826 ;; Tracked objects:
  9827 ;;		On entry : 0/0
  9828 ;;		On exit  : 0/0
  9829 ;;		Unchanged: 0/0
  9830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9831 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9832 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9833 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9834 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9835 ;;Total ram usage:        7 bytes
  9836 ;; Hardware stack levels used: 1
  9837 ;; Hardware stack levels required when called: 2
  9838 ;; This function calls:
  9839 ;;		_fputc
  9840 ;; This function is called by:
  9841 ;;		_pad
  9842 ;; This function uses a non-reentrant model
  9843 ;;
  9844                           
  9845     150E                     _fputs:	
  9846                           ;psect for function _fputs
  9847                           
  9848                           
  9849                           ;incstack = 0
  9850                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9851                           ;fputs@s stored from wreg
  9852     150E  0020               	movlb	0	; select bank0
  9853     150F  00A3               	movwf	fputs@s
  9854     1510                     l2334:
  9855     1510  01A1               	clrf	fputs@i
  9856     1511  01A2               	clrf	fputs@i+1
  9857     1512  2D24               	goto	l2340
  9858     1513                     l2336:
  9859     1513  0820               	movf	fputs@c,w
  9860     1514  00F9               	movwf	??_fputs
  9861     1515  01FA               	clrf	??_fputs+1
  9862     1516  0879               	movf	??_fputs,w
  9863     1517  00F0               	movwf	fputc@c
  9864     1518  087A               	movf	??_fputs+1,w
  9865     1519  00F1               	movwf	fputc@c+1
  9866     151A  0878               	movf	fputs@fp,w
  9867     151B  00F2               	movwf	fputc@fp
  9868     151C  3196  26BC  3195   	fcall	_fputc
  9869     151F                     l2338:
  9870     151F  3001               	movlw	1
  9871     1520  0020               	movlb	0	; select bank0
  9872     1521  07A1               	addwf	fputs@i,f
  9873     1522  3000               	movlw	0
  9874     1523  3DA2               	addwfc	fputs@i+1,f
  9875     1524                     l2340:
  9876     1524  0821               	movf	fputs@i,w
  9877     1525  0723               	addwf	fputs@s,w
  9878     1526  00F9               	movwf	??_fputs
  9879     1527  0879               	movf	??_fputs,w
  9880     1528  0086               	movwf	6
  9881     1529  3001               	movlw	1	; select bank2/3
  9882     152A  0087               	movwf	7
  9883     152B  0801               	movf	1,w
  9884     152C  00A0               	movwf	fputs@c
  9885     152D  0820               	movf	fputs@c,w
  9886     152E  1D03               	btfss	3,2
  9887     152F  2D31               	goto	u2231
  9888     1530  2D32               	goto	u2230
  9889     1531                     u2231:
  9890     1531  2D13               	goto	l2336
  9891     1532                     u2230:
  9892     1532                     l959:
  9893     1532  0008               	return
  9894     1533                     __end_of_fputs:
  9895                           
  9896                           	psect	text38
  9897     16BC                     __ptext38:	
  9898 ;; *************** function _fputc *****************
  9899 ;; Defined at:
  9900 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  9901 ;; Parameters:    Size  Location     Type
  9902 ;;  c               2    0[COMMON] int 
  9903 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  9904 ;;		 -> sprintf@f(11), 
  9905 ;; Auto vars:     Size  Location     Type
  9906 ;;		None
  9907 ;; Return value:  Size  Location     Type
  9908 ;;                  2    0[COMMON] int 
  9909 ;; Registers used:
  9910 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9911 ;; Tracked objects:
  9912 ;;		On entry : 0/0
  9913 ;;		On exit  : 0/0
  9914 ;;		Unchanged: 0/0
  9915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9916 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9918 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9919 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9920 ;;Total ram usage:        8 bytes
  9921 ;; Hardware stack levels used: 1
  9922 ;; Hardware stack levels required when called: 1
  9923 ;; This function calls:
  9924 ;;		_putch
  9925 ;; This function is called by:
  9926 ;;		_pad
  9927 ;;		_vfpfcnvrt
  9928 ;;		_fputs
  9929 ;; This function uses a non-reentrant model
  9930 ;;
  9931                           
  9932     16BC                     _fputc:	
  9933                           ;psect for function _fputc
  9934                           
  9935     16BC                     l2318:	
  9936                           ;incstack = 0
  9937                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9938                           
  9939     16BC  0872               	movf	fputc@fp,w
  9940     16BD  1903               	btfsc	3,2
  9941     16BE  2EC0               	goto	u2191
  9942     16BF  2EC1               	goto	u2190
  9943     16C0                     u2191:
  9944     16C0  2EC6               	goto	l2322
  9945     16C1                     u2190:
  9946     16C1                     l2320:
  9947     16C1  0872               	movf	fputc@fp,w
  9948     16C2  1D03               	btfss	3,2
  9949     16C3  2EC5               	goto	u2201
  9950     16C4  2EC6               	goto	u2200
  9951     16C5                     u2201:
  9952     16C5  2ECB               	goto	l2324
  9953     16C6                     u2200:
  9954     16C6                     l2322:
  9955     16C6  0870               	movf	fputc@c,w
  9956     16C7  3180  2004  3196   	fcall	_putch
  9957     16CA  2F0B               	goto	l951
  9958     16CB                     l2324:
  9959     16CB  0872               	movf	fputc@fp,w
  9960     16CC  3E09               	addlw	9
  9961     16CD  0086               	movwf	6
  9962     16CE  0187               	clrf	7
  9963     16CF  0016               	moviw fsr1++
  9964     16D0  0401               	iorwf	1,w
  9965     16D1  1903               	btfsc	3,2
  9966     16D2  2ED4               	goto	u2211
  9967     16D3  2ED5               	goto	u2210
  9968     16D4                     u2211:
  9969     16D4  2EF3               	goto	l2328
  9970     16D5                     u2210:
  9971     16D5                     l2326:
  9972     16D5  0872               	movf	fputc@fp,w
  9973     16D6  3E09               	addlw	9
  9974     16D7  0086               	movwf	6
  9975     16D8  0187               	clrf	7
  9976     16D9  3F40               	moviw [0]fsr1
  9977     16DA  00F3               	movwf	??_fputc
  9978     16DB  3F41               	moviw [1]fsr1
  9979     16DC  00F4               	movwf	??_fputc+1
  9980     16DD  0872               	movf	fputc@fp,w
  9981     16DE  3E02               	addlw	2
  9982     16DF  0086               	movwf	6
  9983     16E0  0187               	clrf	7
  9984     16E1  3F40               	moviw [0]fsr1
  9985     16E2  00F5               	movwf	??_fputc+2
  9986     16E3  3F41               	moviw [1]fsr1
  9987     16E4  00F6               	movwf	??_fputc+3
  9988     16E5  0876               	movf	??_fputc+3,w
  9989     16E6  3A80               	xorlw	128
  9990     16E7  00F7               	movwf	??_fputc+4
  9991     16E8  0874               	movf	??_fputc+1,w
  9992     16E9  3A80               	xorlw	128
  9993     16EA  0277               	subwf	??_fputc+4,w
  9994     16EB  1D03               	skipz
  9995     16EC  2EEF               	goto	u2225
  9996     16ED  0873               	movf	??_fputc,w
  9997     16EE  0275               	subwf	??_fputc+2,w
  9998     16EF                     u2225:
  9999     16EF  1803               	skipnc
 10000     16F0  2EF2               	goto	u2221
 10001     16F1  2EF3               	goto	u2220
 10002     16F2                     u2221:
 10003     16F2  2F0B               	goto	l951
 10004     16F3                     u2220:
 10005     16F3                     l2328:
 10006     16F3  0872               	movf	fputc@fp,w
 10007     16F4  0086               	movwf	6
 10008     16F5  0187               	clrf	7
 10009     16F6  0872               	movf	fputc@fp,w
 10010     16F7  3E02               	addlw	2
 10011     16F8  0084               	movwf	4
 10012     16F9  0185               	clrf	5
 10013     16FA  0800               	movf	0,w
 10014     16FB  0701               	addwf	1,w
 10015     16FC  00F3               	movwf	??_fputc
 10016     16FD  0873               	movf	??_fputc,w
 10017     16FE  0086               	movwf	6
 10018     16FF  0187               	clrf	7
 10019     1700  0870               	movf	fputc@c,w
 10020     1701  0081               	movwf	1
 10021     1702                     l2330:
 10022     1702  0872               	movf	fputc@fp,w
 10023     1703  3E02               	addlw	2
 10024     1704  0086               	movwf	6
 10025     1705  0187               	clrf	7
 10026     1706  3001               	movlw	1
 10027     1707  0781               	addwf	1,f
 10028     1708  3141               	addfsr 1,1
 10029     1709  1803               	skipnc
 10030     170A  0A81               	incf	1,f
 10031     170B                     l951:
 10032     170B  0008               	return
 10033     170C                     __end_of_fputc:
 10034                           
 10035                           	psect	text39
 10036     0004                     __ptext39:	
 10037 ;; *************** function _putch *****************
 10038 ;; Defined at:
 10039 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\putch.c"
 10040 ;; Parameters:    Size  Location     Type
 10041 ;;  c               1    wreg     unsigned char 
 10042 ;; Auto vars:     Size  Location     Type
 10043 ;;  c               1    0[COMMON] unsigned char 
 10044 ;; Return value:  Size  Location     Type
 10045 ;;                  1    wreg      void 
 10046 ;; Registers used:
 10047 ;;		wreg
 10048 ;; Tracked objects:
 10049 ;;		On entry : 0/0
 10050 ;;		On exit  : 0/0
 10051 ;;		Unchanged: 0/0
 10052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10057 ;;Total ram usage:        0 bytes
 10058 ;; Hardware stack levels used: 1
 10059 ;; This function calls:
 10060 ;;		Nothing
 10061 ;; This function is called by:
 10062 ;;		_fputc
 10063 ;; This function uses a non-reentrant model
 10064 ;;
 10065                           
 10066     0004                     _putch:	
 10067                           ;psect for function _putch
 10068                           
 10069     0004                     l962:	
 10070                           ;incstack = 0
 10071                           ; Regs used in _putch: [wreg]
 10072                           
 10073     0004  0008               	return
 10074     0005                     __end_of_putch:
 10075                           
 10076                           	psect	text40
 10077     136A                     __ptext40:	
 10078 ;; *************** function _abs *****************
 10079 ;; Defined at:
 10080 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
 10081 ;; Parameters:    Size  Location     Type
 10082 ;;  a               2    7[COMMON] int 
 10083 ;; Auto vars:     Size  Location     Type
 10084 ;;		None
 10085 ;; Return value:  Size  Location     Type
 10086 ;;                  2    7[COMMON] int 
 10087 ;; Registers used:
 10088 ;;		wreg, status,2, status,0
 10089 ;; Tracked objects:
 10090 ;;		On entry : 0/0
 10091 ;;		On exit  : 0/0
 10092 ;;		Unchanged: 0/0
 10093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10094 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10096 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10097 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10098 ;;Total ram usage:        4 bytes
 10099 ;; Hardware stack levels used: 1
 10100 ;; This function calls:
 10101 ;;		Nothing
 10102 ;; This function is called by:
 10103 ;;		_dtoa
 10104 ;; This function uses a non-reentrant model
 10105 ;;
 10106                           
 10107     136A                     _abs:	
 10108                           ;psect for function _abs
 10109                           
 10110     136A                     l2454:	
 10111                           ;incstack = 0
 10112                           ; Regs used in _abs: [wreg+status,2+status,0]
 10113                           
 10114     136A  1BF8               	btfsc	abs@a+1,7
 10115     136B  2B6D               	goto	u2511
 10116     136C  2B6E               	goto	u2510
 10117     136D                     u2511:
 10118     136D  2B6F               	goto	l2458
 10119     136E                     u2510:
 10120     136E                     l2456:
 10121     136E  2B7A               	goto	l939
 10122     136F                     l2458:
 10123     136F  0977               	comf	abs@a,w
 10124     1370  00F9               	movwf	??_abs
 10125     1371  0978               	comf	abs@a+1,w
 10126     1372  00FA               	movwf	??_abs+1
 10127     1373  0AF9               	incf	??_abs,f
 10128     1374  1903               	skipnz
 10129     1375  0AFA               	incf	??_abs+1,f
 10130     1376  0879               	movf	??_abs,w
 10131     1377  00F7               	movwf	?_abs
 10132     1378  087A               	movf	??_abs+1,w
 10133     1379  00F8               	movwf	?_abs+1
 10134     137A                     l939:
 10135     137A  0008               	return
 10136     137B                     __end_of_abs:
 10137                           
 10138                           	psect	text41
 10139     17AD                     __ptext41:	
 10140 ;; *************** function ___awmod *****************
 10141 ;; Defined at:
 10142 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
 10143 ;; Parameters:    Size  Location     Type
 10144 ;;  divisor         2    0[COMMON] int 
 10145 ;;  dividend        2    2[COMMON] int 
 10146 ;; Auto vars:     Size  Location     Type
 10147 ;;  sign            1    6[COMMON] unsigned char 
 10148 ;;  counter         1    5[COMMON] unsigned char 
 10149 ;; Return value:  Size  Location     Type
 10150 ;;                  2    0[COMMON] int 
 10151 ;; Registers used:
 10152 ;;		wreg, status,2, status,0
 10153 ;; Tracked objects:
 10154 ;;		On entry : 0/0
 10155 ;;		On exit  : 0/0
 10156 ;;		Unchanged: 0/0
 10157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10158 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10159 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10160 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10161 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10162 ;;Total ram usage:        7 bytes
 10163 ;; Hardware stack levels used: 1
 10164 ;; This function calls:
 10165 ;;		Nothing
 10166 ;; This function is called by:
 10167 ;;		_dtoa
 10168 ;; This function uses a non-reentrant model
 10169 ;;
 10170                           
 10171     17AD                     ___awmod:	
 10172                           ;psect for function ___awmod
 10173                           
 10174     17AD                     l2400:	
 10175                           ;incstack = 0
 10176                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 10177                           
 10178     17AD  01F6               	clrf	___awmod@sign
 10179     17AE                     l2402:
 10180     17AE  1FF3               	btfss	___awmod@dividend+1,7
 10181     17AF  2FB1               	goto	u2381
 10182     17B0  2FB2               	goto	u2380
 10183     17B1                     u2381:
 10184     17B1  2FB9               	goto	l2408
 10185     17B2                     u2380:
 10186     17B2                     l2404:
 10187     17B2  09F2               	comf	___awmod@dividend,f
 10188     17B3  09F3               	comf	___awmod@dividend+1,f
 10189     17B4  0AF2               	incf	___awmod@dividend,f
 10190     17B5  1903               	skipnz
 10191     17B6  0AF3               	incf	___awmod@dividend+1,f
 10192     17B7                     l2406:
 10193     17B7  01F6               	clrf	___awmod@sign
 10194     17B8  0AF6               	incf	___awmod@sign,f
 10195     17B9                     l2408:
 10196     17B9  1FF1               	btfss	___awmod@divisor+1,7
 10197     17BA  2FBC               	goto	u2391
 10198     17BB  2FBD               	goto	u2390
 10199     17BC                     u2391:
 10200     17BC  2FC2               	goto	l2412
 10201     17BD                     u2390:
 10202     17BD                     l2410:
 10203     17BD  09F0               	comf	___awmod@divisor,f
 10204     17BE  09F1               	comf	___awmod@divisor+1,f
 10205     17BF  0AF0               	incf	___awmod@divisor,f
 10206     17C0  1903               	skipnz
 10207     17C1  0AF1               	incf	___awmod@divisor+1,f
 10208     17C2                     l2412:
 10209     17C2  0870               	movf	___awmod@divisor,w
 10210     17C3  0471               	iorwf	___awmod@divisor+1,w
 10211     17C4  1903               	btfsc	3,2
 10212     17C5  2FC7               	goto	u2401
 10213     17C6  2FC8               	goto	u2400
 10214     17C7                     u2401:
 10215     17C7  2FF1               	goto	l2430
 10216     17C8                     u2400:
 10217     17C8                     l2414:
 10218     17C8  01F5               	clrf	___awmod@counter
 10219     17C9  0AF5               	incf	___awmod@counter,f
 10220     17CA  2FD4               	goto	l2420
 10221     17CB                     l2416:
 10222     17CB  3001               	movlw	1
 10223     17CC                     u2415:
 10224     17CC  35F0               	lslf	___awmod@divisor,f
 10225     17CD  0DF1               	rlf	___awmod@divisor+1,f
 10226     17CE  0B89               	decfsz	9,f
 10227     17CF  2FCC               	goto	u2415
 10228     17D0                     l2418:
 10229     17D0  3001               	movlw	1
 10230     17D1  00F4               	movwf	??___awmod
 10231     17D2  0874               	movf	??___awmod,w
 10232     17D3  07F5               	addwf	___awmod@counter,f
 10233     17D4                     l2420:
 10234     17D4  1FF1               	btfss	___awmod@divisor+1,7
 10235     17D5  2FD7               	goto	u2421
 10236     17D6  2FD8               	goto	u2420
 10237     17D7                     u2421:
 10238     17D7  2FCB               	goto	l2416
 10239     17D8                     u2420:
 10240     17D8                     l2422:
 10241     17D8  0871               	movf	___awmod@divisor+1,w
 10242     17D9  0273               	subwf	___awmod@dividend+1,w
 10243     17DA  1D03               	skipz
 10244     17DB  2FDE               	goto	u2435
 10245     17DC  0870               	movf	___awmod@divisor,w
 10246     17DD  0272               	subwf	___awmod@dividend,w
 10247     17DE                     u2435:
 10248     17DE  1C03               	skipc
 10249     17DF  2FE1               	goto	u2431
 10250     17E0  2FE2               	goto	u2430
 10251     17E1                     u2431:
 10252     17E1  2FE6               	goto	l2426
 10253     17E2                     u2430:
 10254     17E2                     l2424:
 10255     17E2  0870               	movf	___awmod@divisor,w
 10256     17E3  02F2               	subwf	___awmod@dividend,f
 10257     17E4  0871               	movf	___awmod@divisor+1,w
 10258     17E5  3BF3               	subwfb	___awmod@dividend+1,f
 10259     17E6                     l2426:
 10260     17E6  3001               	movlw	1
 10261     17E7                     u2445:
 10262     17E7  36F1               	lsrf	___awmod@divisor+1,f
 10263     17E8  0CF0               	rrf	___awmod@divisor,f
 10264     17E9  0B89               	decfsz	9,f
 10265     17EA  2FE7               	goto	u2445
 10266     17EB                     l2428:
 10267     17EB  3001               	movlw	1
 10268     17EC  02F5               	subwf	___awmod@counter,f
 10269     17ED  1D03               	btfss	3,2
 10270     17EE  2FF0               	goto	u2451
 10271     17EF  2FF1               	goto	u2450
 10272     17F0                     u2451:
 10273     17F0  2FD8               	goto	l2422
 10274     17F1                     u2450:
 10275     17F1                     l2430:
 10276     17F1  0876               	movf	___awmod@sign,w
 10277     17F2  1903               	btfsc	3,2
 10278     17F3  2FF5               	goto	u2461
 10279     17F4  2FF6               	goto	u2460
 10280     17F5                     u2461:
 10281     17F5  2FFB               	goto	l2434
 10282     17F6                     u2460:
 10283     17F6                     l2432:
 10284     17F6  09F2               	comf	___awmod@dividend,f
 10285     17F7  09F3               	comf	___awmod@dividend+1,f
 10286     17F8  0AF2               	incf	___awmod@dividend,f
 10287     17F9  1903               	skipnz
 10288     17FA  0AF3               	incf	___awmod@dividend+1,f
 10289     17FB                     l2434:
 10290     17FB  0873               	movf	___awmod@dividend+1,w
 10291     17FC  00F1               	movwf	?___awmod+1
 10292     17FD  0872               	movf	___awmod@dividend,w
 10293     17FE  00F0               	movwf	?___awmod
 10294     17FF                     l564:
 10295     17FF  0008               	return
 10296     1800                     __end_of___awmod:
 10297                           
 10298                           	psect	text42
 10299     131E                     __ptext42:	
 10300 ;; *************** function _Lcd_Display_Custom_Char *****************
 10301 ;; Defined at:
 10302 ;;		line 396 in file "SC1601_LCD.c"
 10303 ;; Parameters:    Size  Location     Type
 10304 ;;  location        1    wreg     unsigned char 
 10305 ;; Auto vars:     Size  Location     Type
 10306 ;;  location        1    4[COMMON] unsigned char 
 10307 ;; Return value:  Size  Location     Type
 10308 ;;                  1    wreg      void 
 10309 ;; Registers used:
 10310 ;;		wreg, status,2, status,0, pclath, cstack
 10311 ;; Tracked objects:
 10312 ;;		On entry : 0/0
 10313 ;;		On exit  : 0/0
 10314 ;;		Unchanged: 0/0
 10315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10317 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10319 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10320 ;;Total ram usage:        1 bytes
 10321 ;; Hardware stack levels used: 1
 10322 ;; Hardware stack levels required when called: 2
 10323 ;; This function calls:
 10324 ;;		_Lcd_Write_Char
 10325 ;; This function is called by:
 10326 ;;		_main
 10327 ;;		_Lcd_Display_Battery
 10328 ;;		_Lcd_Display_Signal
 10329 ;; This function uses a non-reentrant model
 10330 ;;
 10331                           
 10332     131E                     _Lcd_Display_Custom_Char:	
 10333                           ;psect for function _Lcd_Display_Custom_Char
 10334                           
 10335                           
 10336                           ;incstack = 0
 10337                           ; Regs used in _Lcd_Display_Custom_Char: [wreg+status,2+status,0+pclath+cstack]
 10338                           ;Lcd_Display_Custom_Char@location stored from wreg
 10339     131E  00F4               	movwf	Lcd_Display_Custom_Char@location
 10340     131F                     l3150:
 10341                           
 10342                           ;SC1601_LCD.c: 396: void Lcd_Display_Custom_Char(unsigned char location);SC1601_LCD.c: 3
      +                          97: {;SC1601_LCD.c: 398:     Lcd_Write_Char(location);
 10343     131F  0874               	movf	Lcd_Display_Custom_Char@location,w
 10344     1320  3193  23BD  3193   	fcall	_Lcd_Write_Char
 10345     1323                     l237:
 10346     1323  0008               	return
 10347     1324                     __end_of_Lcd_Display_Custom_Char:
 10348                           
 10349                           	psect	text43
 10350     134C                     __ptext43:	
 10351 ;; *************** function _Lcd_Clear *****************
 10352 ;; Defined at:
 10353 ;;		line 96 in file "SC1601_LCD.c"
 10354 ;; Parameters:    Size  Location     Type
 10355 ;;		None
 10356 ;; Auto vars:     Size  Location     Type
 10357 ;;		None
 10358 ;; Return value:  Size  Location     Type
 10359 ;;                  1    wreg      void 
 10360 ;; Registers used:
 10361 ;;		wreg, status,2, status,0, pclath, cstack
 10362 ;; Tracked objects:
 10363 ;;		On entry : 0/0
 10364 ;;		On exit  : 0/0
 10365 ;;		Unchanged: 0/0
 10366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10369 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10370 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10371 ;;Total ram usage:        1 bytes
 10372 ;; Hardware stack levels used: 1
 10373 ;; Hardware stack levels required when called: 3
 10374 ;; This function calls:
 10375 ;;		_Lcd_Send_Command
 10376 ;; This function is called by:
 10377 ;;		_main
 10378 ;;		_Lcd_Display_Battery
 10379 ;;		_Lcd_Display_Signal
 10380 ;; This function uses a non-reentrant model
 10381 ;;
 10382                           
 10383     134C                     _Lcd_Clear:	
 10384                           ;psect for function _Lcd_Clear
 10385                           
 10386     134C                     l3114:	
 10387                           ;incstack = 0
 10388                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
 10389                           
 10390                           
 10391                           ;SC1601_LCD.c: 98:     Lcd_Send_Command(0x01);
 10392     134C  3001               	movlw	1
 10393     134D  3193  2359  3193   	fcall	_Lcd_Send_Command
 10394     1350                     l3116:
 10395                           
 10396                           ;SC1601_LCD.c: 99:     _delay((unsigned long)((2)*(32000000/4000.0)));
 10397     1350  3015               	movlw	21
 10398     1351  00F5               	movwf	??_Lcd_Clear
 10399     1352  30C6               	movlw	198
 10400     1353                     u4827:
 10401     1353  0B89               	decfsz	9,f
 10402     1354  2B53               	goto	u4827
 10403     1355  0BF5               	decfsz	??_Lcd_Clear,f
 10404     1356  2B53               	goto	u4827
 10405     1357  3200               	nop2
 10406     1358                     l165:
 10407     1358  0008               	return
 10408     1359                     __end_of_Lcd_Clear:
 10409                           
 10410                           	psect	text44
 10411     1596                     __ptext44:	
 10412 ;; *************** function _Lcd_Center_Text *****************
 10413 ;; Defined at:
 10414 ;;		line 328 in file "SC1601_LCD.c"
 10415 ;; Parameters:    Size  Location     Type
 10416 ;;  row             1    wreg     unsigned char 
 10417 ;;  str             2   24[BANK0 ] PTR const unsigned char 
 10418 ;;		 -> STR_5(9), 
 10419 ;; Auto vars:     Size  Location     Type
 10420 ;;  row             1   30[BANK0 ] unsigned char 
 10421 ;;  start_col       2   28[BANK0 ] int 
 10422 ;;  len             2   26[BANK0 ] int 
 10423 ;; Return value:  Size  Location     Type
 10424 ;;                  1    wreg      void 
 10425 ;; Registers used:
 10426 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10427 ;; Tracked objects:
 10428 ;;		On entry : 0/0
 10429 ;;		On exit  : 0/0
 10430 ;;		Unchanged: 0/0
 10431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10432 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10433 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10434 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10435 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10436 ;;Total ram usage:        8 bytes
 10437 ;; Hardware stack levels used: 1
 10438 ;; Hardware stack levels required when called: 4
 10439 ;; This function calls:
 10440 ;;		_Lcd_Set_Cursor
 10441 ;;		_Lcd_Write_String
 10442 ;;		___awdiv
 10443 ;;		_strlen
 10444 ;; This function is called by:
 10445 ;;		_main
 10446 ;; This function uses a non-reentrant model
 10447 ;;
 10448                           
 10449     1596                     _Lcd_Center_Text:	
 10450                           ;psect for function _Lcd_Center_Text
 10451                           
 10452                           
 10453                           ;incstack = 0
 10454                           ; Regs used in _Lcd_Center_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10455                           ;Lcd_Center_Text@row stored from wreg
 10456     1596  0020               	movlb	0	; select bank0
 10457     1597  00BE               	movwf	Lcd_Center_Text@row
 10458     1598                     l3300:
 10459                           
 10460                           ;SC1601_LCD.c: 328: void Lcd_Center_Text(char row, const char *str);SC1601_LCD.c: 329: {
      +                          ;SC1601_LCD.c: 330:     int len = strlen(str);
 10461     1598  0839               	movf	Lcd_Center_Text@str+1,w
 10462     1599  00F1               	movwf	strlen@s+1
 10463     159A  0838               	movf	Lcd_Center_Text@str,w
 10464     159B  00F0               	movwf	strlen@s
 10465     159C  3193  23EF  3195   	fcall	_strlen
 10466     159F  0871               	movf	?_strlen+1,w
 10467     15A0  0020               	movlb	0	; select bank0
 10468     15A1  00BB               	movwf	Lcd_Center_Text@len+1
 10469     15A2  0870               	movf	?_strlen,w
 10470     15A3  00BA               	movwf	Lcd_Center_Text@len
 10471     15A4                     l3302:
 10472                           
 10473                           ;SC1601_LCD.c: 331:     int start_col = (16 - len) / 2 + 1;
 10474     15A4  3002               	movlw	2
 10475     15A5  00F6               	movwf	___awdiv@divisor
 10476     15A6  3000               	movlw	0
 10477     15A7  00F7               	movwf	___awdiv@divisor+1
 10478     15A8  3010               	movlw	16
 10479     15A9  00FC               	movwf	??_Lcd_Center_Text
 10480     15AA  083A               	movf	Lcd_Center_Text@len,w
 10481     15AB  027C               	subwf	??_Lcd_Center_Text,w
 10482     15AC  00F8               	movwf	___awdiv@dividend
 10483     15AD  093B               	comf	Lcd_Center_Text@len+1,w
 10484     15AE  1803               	skipnc
 10485     15AF  0A89               	incf	9,f
 10486     15B0  00F9               	movwf	___awdiv@dividend+1
 10487     15B1  3188  205C  3195   	fcall	___awdiv
 10488     15B4  0876               	movf	?___awdiv,w
 10489     15B5  3E01               	addlw	1
 10490     15B6  0020               	movlb	0	; select bank0
 10491     15B7  00BC               	movwf	Lcd_Center_Text@start_col
 10492     15B8  3000               	movlw	0
 10493     15B9  3D77               	addwfc	?___awdiv+1,w
 10494     15BA  00BD               	movwf	Lcd_Center_Text@start_col+1
 10495     15BB                     l3304:
 10496                           
 10497                           ;SC1601_LCD.c: 332:     Lcd_Set_Cursor(row, start_col);
 10498     15BB  083C               	movf	Lcd_Center_Text@start_col,w
 10499     15BC  00F5               	movwf	Lcd_Set_Cursor@col
 10500     15BD  083E               	movf	Lcd_Center_Text@row,w
 10501     15BE  3194  243B  3195   	fcall	_Lcd_Set_Cursor
 10502                           
 10503                           ;SC1601_LCD.c: 333:     Lcd_Write_String(str);
 10504     15C1  0020               	movlb	0	; select bank0
 10505     15C2  0839               	movf	Lcd_Center_Text@str+1,w
 10506     15C3  00B7               	movwf	Lcd_Write_String@str+1
 10507     15C4  0838               	movf	Lcd_Center_Text@str,w
 10508     15C5  00B6               	movwf	Lcd_Write_String@str
 10509     15C6  3193  23D6  3195   	fcall	_Lcd_Write_String
 10510     15C9                     l220:
 10511     15C9  0008               	return
 10512     15CA                     __end_of_Lcd_Center_Text:
 10513                           
 10514                           	psect	text45
 10515     13EF                     __ptext45:	
 10516 ;; *************** function _strlen *****************
 10517 ;; Defined at:
 10518 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strlen.c"
 10519 ;; Parameters:    Size  Location     Type
 10520 ;;  s               2    0[COMMON] PTR const unsigned char 
 10521 ;;		 -> STR_5(9), STR_4(39), 
 10522 ;; Auto vars:     Size  Location     Type
 10523 ;;  a               2    3[COMMON] PTR const unsigned char 
 10524 ;;		 -> STR_5(9), STR_4(39), 
 10525 ;; Return value:  Size  Location     Type
 10526 ;;                  2    0[COMMON] unsigned int 
 10527 ;; Registers used:
 10528 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10529 ;; Tracked objects:
 10530 ;;		On entry : 0/0
 10531 ;;		On exit  : 0/0
 10532 ;;		Unchanged: 0/0
 10533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10534 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10535 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10536 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10537 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10538 ;;Total ram usage:        5 bytes
 10539 ;; Hardware stack levels used: 1
 10540 ;; This function calls:
 10541 ;;		Nothing
 10542 ;; This function is called by:
 10543 ;;		_Lcd_Center_Text
 10544 ;;		_Lcd_Scroll_Text
 10545 ;; This function uses a non-reentrant model
 10546 ;;
 10547                           
 10548     13EF                     _strlen:	
 10549                           ;psect for function _strlen
 10550                           
 10551     13EF                     l3204:	
 10552                           ;incstack = 0
 10553                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
 10554                           
 10555     13EF  0871               	movf	strlen@s+1,w
 10556     13F0  00F4               	movwf	strlen@a+1
 10557     13F1  0870               	movf	strlen@s,w
 10558     13F2  00F3               	movwf	strlen@a
 10559     13F3  2BF8               	goto	l3208
 10560     13F4                     l3206:
 10561     13F4  3001               	movlw	1
 10562     13F5  07F0               	addwf	strlen@s,f
 10563     13F6  3000               	movlw	0
 10564     13F7  3DF1               	addwfc	strlen@s+1,f
 10565     13F8                     l3208:
 10566     13F8  0870               	movf	strlen@s,w
 10567     13F9  0084               	movwf	4
 10568     13FA  0871               	movf	strlen@s+1,w
 10569     13FB  0085               	movwf	5
 10570     13FC  0012               	moviw fsr0++
 10571     13FD  1D03               	btfss	3,2
 10572     13FE  2C00               	goto	u3961
 10573     13FF  2C01               	goto	u3960
 10574     1400                     u3961:
 10575     1400  2BF4               	goto	l3206
 10576     1401                     u3960:
 10577     1401                     l3210:
 10578     1401  0873               	movf	strlen@a,w
 10579     1402  0270               	subwf	strlen@s,w
 10580     1403  00F0               	movwf	?_strlen
 10581     1404  0874               	movf	strlen@a+1,w
 10582     1405  3B71               	subwfb	strlen@s+1,w
 10583     1406  00F1               	movwf	?_strlen+1
 10584     1407                     l968:
 10585     1407  0008               	return
 10586     1408                     __end_of_strlen:
 10587                           
 10588                           	psect	text46
 10589     085C                     __ptext46:	
 10590 ;; *************** function ___awdiv *****************
 10591 ;; Defined at:
 10592 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
 10593 ;; Parameters:    Size  Location     Type
 10594 ;;  divisor         2    6[COMMON] int 
 10595 ;;  dividend        2    8[COMMON] int 
 10596 ;; Auto vars:     Size  Location     Type
 10597 ;;  quotient        2    2[BANK0 ] int 
 10598 ;;  sign            1    1[BANK0 ] unsigned char 
 10599 ;;  counter         1    0[BANK0 ] unsigned char 
 10600 ;; Return value:  Size  Location     Type
 10601 ;;                  2    6[COMMON] int 
 10602 ;; Registers used:
 10603 ;;		wreg, status,2, status,0
 10604 ;; Tracked objects:
 10605 ;;		On entry : 0/0
 10606 ;;		On exit  : 0/0
 10607 ;;		Unchanged: 0/0
 10608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10609 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10610 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10611 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10612 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10613 ;;Total ram usage:        9 bytes
 10614 ;; Hardware stack levels used: 1
 10615 ;; This function calls:
 10616 ;;		Nothing
 10617 ;; This function is called by:
 10618 ;;		_itoa
 10619 ;;		_Lcd_Center_Text
 10620 ;;		_Lcd_Progress_Bar
 10621 ;;		_dtoa
 10622 ;; This function uses a non-reentrant model
 10623 ;;
 10624                           
 10625     085C                     ___awdiv:	
 10626                           ;psect for function ___awdiv
 10627                           
 10628     085C                     l2356:	
 10629                           ;incstack = 0
 10630                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 10631                           
 10632     085C  0020               	movlb	0	; select bank0
 10633     085D  01A1               	clrf	___awdiv@sign
 10634     085E                     l2358:
 10635     085E  1FF7               	btfss	___awdiv@divisor+1,7
 10636     085F  2861               	goto	u2281
 10637     0860  2862               	goto	u2280
 10638     0861                     u2281:
 10639     0861  2869               	goto	l2364
 10640     0862                     u2280:
 10641     0862                     l2360:
 10642     0862  09F6               	comf	___awdiv@divisor,f
 10643     0863  09F7               	comf	___awdiv@divisor+1,f
 10644     0864  0AF6               	incf	___awdiv@divisor,f
 10645     0865  1903               	skipnz
 10646     0866  0AF7               	incf	___awdiv@divisor+1,f
 10647     0867                     l2362:
 10648     0867  01A1               	clrf	___awdiv@sign
 10649     0868  0AA1               	incf	___awdiv@sign,f
 10650     0869                     l2364:
 10651     0869  1FF9               	btfss	___awdiv@dividend+1,7
 10652     086A  286C               	goto	u2291
 10653     086B  286D               	goto	u2290
 10654     086C                     u2291:
 10655     086C  2876               	goto	l2370
 10656     086D                     u2290:
 10657     086D                     l2366:
 10658     086D  09F8               	comf	___awdiv@dividend,f
 10659     086E  09F9               	comf	___awdiv@dividend+1,f
 10660     086F  0AF8               	incf	___awdiv@dividend,f
 10661     0870  1903               	skipnz
 10662     0871  0AF9               	incf	___awdiv@dividend+1,f
 10663     0872                     l2368:
 10664     0872  3001               	movlw	1
 10665     0873  00FA               	movwf	??___awdiv
 10666     0874  087A               	movf	??___awdiv,w
 10667     0875  06A1               	xorwf	___awdiv@sign,f
 10668     0876                     l2370:
 10669     0876  01A2               	clrf	___awdiv@quotient
 10670     0877  01A3               	clrf	___awdiv@quotient+1
 10671     0878                     l2372:
 10672     0878  0876               	movf	___awdiv@divisor,w
 10673     0879  0477               	iorwf	___awdiv@divisor+1,w
 10674     087A  1903               	btfsc	3,2
 10675     087B  287D               	goto	u2301
 10676     087C  287E               	goto	u2300
 10677     087D                     u2301:
 10678     087D  28AD               	goto	l2392
 10679     087E                     u2300:
 10680     087E                     l2374:
 10681     087E  01A0               	clrf	___awdiv@counter
 10682     087F  0AA0               	incf	___awdiv@counter,f
 10683     0880  288A               	goto	l2380
 10684     0881                     l2376:
 10685     0881  3001               	movlw	1
 10686     0882                     u2315:
 10687     0882  35F6               	lslf	___awdiv@divisor,f
 10688     0883  0DF7               	rlf	___awdiv@divisor+1,f
 10689     0884  0B89               	decfsz	9,f
 10690     0885  2882               	goto	u2315
 10691     0886                     l2378:
 10692     0886  3001               	movlw	1
 10693     0887  00FA               	movwf	??___awdiv
 10694     0888  087A               	movf	??___awdiv,w
 10695     0889  07A0               	addwf	___awdiv@counter,f
 10696     088A                     l2380:
 10697     088A  1FF7               	btfss	___awdiv@divisor+1,7
 10698     088B  288D               	goto	u2321
 10699     088C  288E               	goto	u2320
 10700     088D                     u2321:
 10701     088D  2881               	goto	l2376
 10702     088E                     u2320:
 10703     088E                     l2382:
 10704     088E  3001               	movlw	1
 10705     088F                     u2335:
 10706     088F  35A2               	lslf	___awdiv@quotient,f
 10707     0890  0DA3               	rlf	___awdiv@quotient+1,f
 10708     0891  0B89               	decfsz	9,f
 10709     0892  288F               	goto	u2335
 10710     0893  0877               	movf	___awdiv@divisor+1,w
 10711     0894  0279               	subwf	___awdiv@dividend+1,w
 10712     0895  1D03               	skipz
 10713     0896  2899               	goto	u2345
 10714     0897  0876               	movf	___awdiv@divisor,w
 10715     0898  0278               	subwf	___awdiv@dividend,w
 10716     0899                     u2345:
 10717     0899  1C03               	skipc
 10718     089A  289C               	goto	u2341
 10719     089B  289D               	goto	u2340
 10720     089C                     u2341:
 10721     089C  28A2               	goto	l2388
 10722     089D                     u2340:
 10723     089D                     l2384:
 10724     089D  0876               	movf	___awdiv@divisor,w
 10725     089E  02F8               	subwf	___awdiv@dividend,f
 10726     089F  0877               	movf	___awdiv@divisor+1,w
 10727     08A0  3BF9               	subwfb	___awdiv@dividend+1,f
 10728     08A1                     l2386:
 10729     08A1  1422               	bsf	___awdiv@quotient,0
 10730     08A2                     l2388:
 10731     08A2  3001               	movlw	1
 10732     08A3                     u2355:
 10733     08A3  36F7               	lsrf	___awdiv@divisor+1,f
 10734     08A4  0CF6               	rrf	___awdiv@divisor,f
 10735     08A5  0B89               	decfsz	9,f
 10736     08A6  28A3               	goto	u2355
 10737     08A7                     l2390:
 10738     08A7  3001               	movlw	1
 10739     08A8  02A0               	subwf	___awdiv@counter,f
 10740     08A9  1D03               	btfss	3,2
 10741     08AA  28AC               	goto	u2361
 10742     08AB  28AD               	goto	u2360
 10743     08AC                     u2361:
 10744     08AC  288E               	goto	l2382
 10745     08AD                     u2360:
 10746     08AD                     l2392:
 10747     08AD  0821               	movf	___awdiv@sign,w
 10748     08AE  1903               	btfsc	3,2
 10749     08AF  28B1               	goto	u2371
 10750     08B0  28B2               	goto	u2370
 10751     08B1                     u2371:
 10752     08B1  28B7               	goto	l2396
 10753     08B2                     u2370:
 10754     08B2                     l2394:
 10755     08B2  09A2               	comf	___awdiv@quotient,f
 10756     08B3  09A3               	comf	___awdiv@quotient+1,f
 10757     08B4  0AA2               	incf	___awdiv@quotient,f
 10758     08B5  1903               	skipnz
 10759     08B6  0AA3               	incf	___awdiv@quotient+1,f
 10760     08B7                     l2396:
 10761     08B7  0823               	movf	___awdiv@quotient+1,w
 10762     08B8  00F7               	movwf	?___awdiv+1
 10763     08B9  0822               	movf	___awdiv@quotient,w
 10764     08BA  00F6               	movwf	?___awdiv
 10765     08BB                     l551:
 10766     08BB  0008               	return
 10767     08BC                     __end_of___awdiv:
 10768                           
 10769                           	psect	text47
 10770     13D6                     __ptext47:	
 10771 ;; *************** function _Lcd_Write_String *****************
 10772 ;; Defined at:
 10773 ;;		line 163 in file "SC1601_LCD.c"
 10774 ;; Parameters:    Size  Location     Type
 10775 ;;  str             2   22[BANK0 ] PTR const unsigned char 
 10776 ;;		 -> STR_11(8), Lcd_Display_Battery@buf(5), STR_9(9), Lcd_Scroll_Text@buffer(17), 
 10777 ;;		 -> Lcd_Write_Padded_Integer@buf(16), Lcd_Write_Integer@buf(8), ftoa@buf(16), STR_6(10), 
 10778 ;;		 -> STR_5(9), STR_3(3), STR_2(5), STR_1(11), 
 10779 ;; Auto vars:     Size  Location     Type
 10780 ;;		None
 10781 ;; Return value:  Size  Location     Type
 10782 ;;                  1    wreg      void 
 10783 ;; Registers used:
 10784 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10785 ;; Tracked objects:
 10786 ;;		On entry : 0/0
 10787 ;;		On exit  : 0/0
 10788 ;;		Unchanged: 0/0
 10789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10790 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10792 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10793 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10794 ;;Total ram usage:        3 bytes
 10795 ;; Hardware stack levels used: 1
 10796 ;; Hardware stack levels required when called: 2
 10797 ;; This function calls:
 10798 ;;		_Lcd_Write_Char
 10799 ;; This function is called by:
 10800 ;;		_main
 10801 ;;		_Lcd_Write_Integer
 10802 ;;		_Lcd_Write_Float
 10803 ;;		_Lcd_Write_Padded_Integer
 10804 ;;		_Lcd_Center_Text
 10805 ;;		_Lcd_Scroll_Text
 10806 ;;		_Lcd_Display_Battery
 10807 ;;		_Lcd_Display_Signal
 10808 ;; This function uses a non-reentrant model
 10809 ;;
 10810                           
 10811     13D6                     _Lcd_Write_String:	
 10812                           ;psect for function _Lcd_Write_String
 10813                           
 10814     13D6                     l3126:	
 10815                           ;incstack = 0
 10816                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10817                           
 10818                           
 10819                           ;SC1601_LCD.c: 163: void Lcd_Write_String(const char *str);SC1601_LCD.c: 164: {;SC1601_L
      +                          CD.c: 165:     while (*str) {
 10820     13D6  2BE4               	goto	l3132
 10821     13D7                     l3128:
 10822                           
 10823                           ;SC1601_LCD.c: 166:         Lcd_Write_Char(*str++);
 10824     13D7  0836               	movf	Lcd_Write_String@str,w
 10825     13D8  0084               	movwf	4
 10826     13D9  0837               	movf	Lcd_Write_String@str+1,w
 10827     13DA  0085               	movwf	5
 10828     13DB  0800               	movf	0,w	;code access
 10829     13DC  3193  23BD  3193   	fcall	_Lcd_Write_Char
 10830     13DF                     l3130:
 10831     13DF  3001               	movlw	1
 10832     13E0  0020               	movlb	0	; select bank0
 10833     13E1  07B6               	addwf	Lcd_Write_String@str,f
 10834     13E2  3000               	movlw	0
 10835     13E3  3DB7               	addwfc	Lcd_Write_String@str+1,f
 10836     13E4                     l3132:
 10837                           
 10838                           ;SC1601_LCD.c: 165:     while (*str) {
 10839     13E4  0020               	movlb	0	; select bank0
 10840     13E5  0836               	movf	Lcd_Write_String@str,w
 10841     13E6  0084               	movwf	4
 10842     13E7  0837               	movf	Lcd_Write_String@str+1,w
 10843     13E8  0085               	movwf	5
 10844     13E9  0012               	moviw fsr0++
 10845     13EA  1D03               	btfss	3,2
 10846     13EB  2BED               	goto	u3911
 10847     13EC  2BEE               	goto	u3910
 10848     13ED                     u3911:
 10849     13ED  2BD7               	goto	l3128
 10850     13EE                     u3910:
 10851     13EE                     l184:
 10852     13EE  0008               	return
 10853     13EF                     __end_of_Lcd_Write_String:
 10854                           
 10855                           	psect	text48
 10856     143B                     __ptext48:	
 10857 ;; *************** function _Lcd_Set_Cursor *****************
 10858 ;; Defined at:
 10859 ;;		line 109 in file "SC1601_LCD.c"
 10860 ;; Parameters:    Size  Location     Type
 10861 ;;  row             1    wreg     unsigned char 
 10862 ;;  col             1    5[COMMON] unsigned char 
 10863 ;; Auto vars:     Size  Location     Type
 10864 ;;  row             1    6[COMMON] unsigned char 
 10865 ;;  address         1    9[COMMON] unsigned char 
 10866 ;; Return value:  Size  Location     Type
 10867 ;;                  1    wreg      void 
 10868 ;; Registers used:
 10869 ;;		wreg, status,2, status,0, pclath, cstack
 10870 ;; Tracked objects:
 10871 ;;		On entry : 0/0
 10872 ;;		On exit  : 0/0
 10873 ;;		Unchanged: 0/0
 10874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10875 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10876 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10878 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10879 ;;Total ram usage:        5 bytes
 10880 ;; Hardware stack levels used: 1
 10881 ;; Hardware stack levels required when called: 3
 10882 ;; This function calls:
 10883 ;;		_Lcd_Send_Command
 10884 ;; This function is called by:
 10885 ;;		_main
 10886 ;;		_Lcd_Center_Text
 10887 ;;		_Lcd_Scroll_Text
 10888 ;;		_Lcd_Display_Battery
 10889 ;;		_Lcd_Display_Signal
 10890 ;; This function uses a non-reentrant model
 10891 ;;
 10892                           
 10893     143B                     _Lcd_Set_Cursor:	
 10894                           ;psect for function _Lcd_Set_Cursor
 10895                           
 10896                           
 10897                           ;incstack = 0
 10898                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 10899                           ;Lcd_Set_Cursor@row stored from wreg
 10900     143B  00F6               	movwf	Lcd_Set_Cursor@row
 10901     143C                     l3118:
 10902                           
 10903                           ;SC1601_LCD.c: 109: void Lcd_Set_Cursor(char row, char col);SC1601_LCD.c: 110: {;SC1601_
      +                          LCD.c: 111:     char address = (row == 1) ? (0x80 + col - 1) : (0xC0 + col - 1);
 10904     143C  0376               	decf	Lcd_Set_Cursor@row,w
 10905     143D  1903               	btfsc	3,2
 10906     143E  2C40               	goto	u3901
 10907     143F  2C41               	goto	u3900
 10908     1440                     u3901:
 10909     1440  2C49               	goto	l3122
 10910     1441                     u3900:
 10911     1441                     l3120:
 10912     1441  0875               	movf	Lcd_Set_Cursor@col,w
 10913     1442  3EBF               	addlw	191
 10914     1443  00F7               	movwf	_Lcd_Set_Cursor$261
 10915     1444  3000               	movlw	0
 10916     1445  1803               	skipnc
 10917     1446  3001               	movlw	1
 10918     1447  00F8               	movwf	_Lcd_Set_Cursor$261+1
 10919     1448  2C50               	goto	l171
 10920     1449                     l3122:
 10921     1449  0875               	movf	Lcd_Set_Cursor@col,w
 10922     144A  3E7F               	addlw	127
 10923     144B  00F7               	movwf	_Lcd_Set_Cursor$261
 10924     144C  3000               	movlw	0
 10925     144D  1803               	skipnc
 10926     144E  3001               	movlw	1
 10927     144F  00F8               	movwf	_Lcd_Set_Cursor$261+1
 10928     1450                     l171:
 10929     1450  0877               	movf	_Lcd_Set_Cursor$261,w
 10930     1451  00F9               	movwf	Lcd_Set_Cursor@address
 10931     1452                     l3124:
 10932                           
 10933                           ;SC1601_LCD.c: 112:     Lcd_Send_Command(address);
 10934     1452  0879               	movf	Lcd_Set_Cursor@address,w
 10935     1453  3193  2359  3194   	fcall	_Lcd_Send_Command
 10936     1456                     l172:
 10937     1456  0008               	return
 10938     1457                     __end_of_Lcd_Set_Cursor:
 10939                           
 10940                           	psect	text49
 10941     12FB                     __ptext49:	
 10942 ;; *************** function _Lcd_Blink_On *****************
 10943 ;; Defined at:
 10944 ;;		line 538 in file "SC1601_LCD.c"
 10945 ;; Parameters:    Size  Location     Type
 10946 ;;		None
 10947 ;; Auto vars:     Size  Location     Type
 10948 ;;		None
 10949 ;; Return value:  Size  Location     Type
 10950 ;;                  1    wreg      void 
 10951 ;; Registers used:
 10952 ;;		wreg, status,2, status,0, pclath, cstack
 10953 ;; Tracked objects:
 10954 ;;		On entry : 0/0
 10955 ;;		On exit  : 0/0
 10956 ;;		Unchanged: 0/0
 10957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10962 ;;Total ram usage:        0 bytes
 10963 ;; Hardware stack levels used: 1
 10964 ;; Hardware stack levels required when called: 3
 10965 ;; This function calls:
 10966 ;;		_Lcd_Send_Command
 10967 ;; This function is called by:
 10968 ;;		_main
 10969 ;; This function uses a non-reentrant model
 10970 ;;
 10971                           
 10972     12FB                     _Lcd_Blink_On:	
 10973                           ;psect for function _Lcd_Blink_On
 10974                           
 10975     12FB                     l3256:	
 10976                           ;incstack = 0
 10977                           ; Regs used in _Lcd_Blink_On: [wreg+status,2+status,0+pclath+cstack]
 10978                           
 10979                           
 10980                           ;SC1601_LCD.c: 540:     Lcd_Send_Command(0x0D);
 10981     12FB  300D               	movlw	13
 10982     12FC  3193  2359  3192   	fcall	_Lcd_Send_Command
 10983     12FF                     l309:
 10984     12FF  0008               	return
 10985     1300                     __end_of_Lcd_Blink_On:
 10986                           
 10987                           	psect	text50
 10988     12F6                     __ptext50:	
 10989 ;; *************** function _Lcd_Blink_Off *****************
 10990 ;; Defined at:
 10991 ;;		line 543 in file "SC1601_LCD.c"
 10992 ;; Parameters:    Size  Location     Type
 10993 ;;		None
 10994 ;; Auto vars:     Size  Location     Type
 10995 ;;		None
 10996 ;; Return value:  Size  Location     Type
 10997 ;;                  1    wreg      void 
 10998 ;; Registers used:
 10999 ;;		wreg, status,2, status,0, pclath, cstack
 11000 ;; Tracked objects:
 11001 ;;		On entry : 0/0
 11002 ;;		On exit  : 0/0
 11003 ;;		Unchanged: 0/0
 11004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11009 ;;Total ram usage:        0 bytes
 11010 ;; Hardware stack levels used: 1
 11011 ;; Hardware stack levels required when called: 3
 11012 ;; This function calls:
 11013 ;;		_Lcd_Send_Command
 11014 ;; This function is called by:
 11015 ;;		_main
 11016 ;; This function uses a non-reentrant model
 11017 ;;
 11018                           
 11019     12F6                     _Lcd_Blink_Off:	
 11020                           ;psect for function _Lcd_Blink_Off
 11021                           
 11022     12F6                     l3258:	
 11023                           ;incstack = 0
 11024                           ; Regs used in _Lcd_Blink_Off: [wreg+status,2+status,0+pclath+cstack]
 11025                           
 11026                           
 11027                           ;SC1601_LCD.c: 545:     Lcd_Send_Command(0x0C);
 11028     12F6  300C               	movlw	12
 11029     12F7  3193  2359  3192   	fcall	_Lcd_Send_Command
 11030     12FA                     l312:
 11031     12FA  0008               	return
 11032     12FB                     __end_of_Lcd_Blink_Off:
 11033                           
 11034                           	psect	text51
 11035     0A17                     __ptext51:	
 11036 ;; *************** function _Lcd_Battery_Init *****************
 11037 ;; Defined at:
 11038 ;;		line 441 in file "SC1601_LCD.c"
 11039 ;; Parameters:    Size  Location     Type
 11040 ;;		None
 11041 ;; Auto vars:     Size  Location     Type
 11042 ;;  full            8   48[BANK0 ] unsigned char [8]
 11043 ;;  level5          8   40[BANK0 ] unsigned char [8]
 11044 ;;  level4          8   32[BANK0 ] unsigned char [8]
 11045 ;;  level3          8   24[BANK0 ] unsigned char [8]
 11046 ;;  level2          8   16[BANK0 ] unsigned char [8]
 11047 ;;  level1          8    8[BANK0 ] unsigned char [8]
 11048 ;;  level0          8    0[BANK0 ] unsigned char [8]
 11049 ;; Return value:  Size  Location     Type
 11050 ;;                  1    wreg      void 
 11051 ;; Registers used:
 11052 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11053 ;; Tracked objects:
 11054 ;;		On entry : 0/0
 11055 ;;		On exit  : 0/0
 11056 ;;		Unchanged: 0/0
 11057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11059 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11060 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11061 ;;      Totals:         1      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11062 ;;Total ram usage:       57 bytes
 11063 ;; Hardware stack levels used: 1
 11064 ;; Hardware stack levels required when called: 4
 11065 ;; This function calls:
 11066 ;;		_Lcd_Create_Char
 11067 ;; This function is called by:
 11068 ;;		_main
 11069 ;; This function uses a non-reentrant model
 11070 ;;
 11071                           
 11072     0A17                     _Lcd_Battery_Init:	
 11073                           ;psect for function _Lcd_Battery_Init
 11074                           
 11075     0A17                     l3346:	
 11076                           ;incstack = 0
 11077                           ; Regs used in _Lcd_Battery_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11078                           
 11079                           
 11080                           ;SC1601_LCD.c: 443:     unsigned char level0[8] = {0x0E, 0x11, 0x11, 0x11, 0x11, 0x11, 0
      +                          x11, 0x0E};
 11081     0A17  3058               	movlw	low Lcd_Battery_Init@F6659
 11082     0A18  0086               	movwf	6
 11083     0A19  3001               	movlw	high Lcd_Battery_Init@F6659
 11084     0A1A  0087               	movwf	7
 11085     0A1B  3020               	movlw	low Lcd_Battery_Init@level0
 11086     0A1C  0084               	movwf	4
 11087     0A1D  3000               	movlw	high Lcd_Battery_Init@level0
 11088     0A1E  0085               	movwf	5
 11089     0A1F  3008               	movlw	8
 11090     0A20  00FA               	movwf	??_Lcd_Battery_Init
 11091     0A21                     u4090:
 11092     0A21  0016               	moviw fsr1++
 11093     0A22  001A               	movwi fsr0++
 11094     0A23  0BFA               	decfsz	??_Lcd_Battery_Init,f
 11095     0A24  2A21               	goto	u4090
 11096                           
 11097                           ;SC1601_LCD.c: 444:     unsigned char level1[8] = {0x0E, 0x11, 0x11, 0x11, 0x11, 0x11, 0
      +                          x1F, 0x0E};
 11098     0A25  3050               	movlw	low Lcd_Battery_Init@F6661
 11099     0A26  0086               	movwf	6
 11100     0A27  3001               	movlw	high Lcd_Battery_Init@F6661
 11101     0A28  0087               	movwf	7
 11102     0A29  3028               	movlw	low Lcd_Battery_Init@level1
 11103     0A2A  0084               	movwf	4
 11104     0A2B  3000               	movlw	high Lcd_Battery_Init@level1
 11105     0A2C  0085               	movwf	5
 11106     0A2D  3008               	movlw	8
 11107     0A2E  00FA               	movwf	??_Lcd_Battery_Init
 11108     0A2F                     u4100:
 11109     0A2F  0016               	moviw fsr1++
 11110     0A30  001A               	movwi fsr0++
 11111     0A31  0BFA               	decfsz	??_Lcd_Battery_Init,f
 11112     0A32  2A2F               	goto	u4100
 11113                           
 11114                           ;SC1601_LCD.c: 445:     unsigned char level2[8] = {0x0E, 0x11, 0x11, 0x11, 0x11, 0x1F, 0
      +                          x1F, 0x0E};
 11115     0A33  3048               	movlw	low Lcd_Battery_Init@F6663
 11116     0A34  0086               	movwf	6
 11117     0A35  3001               	movlw	high Lcd_Battery_Init@F6663
 11118     0A36  0087               	movwf	7
 11119     0A37  3030               	movlw	low Lcd_Battery_Init@level2
 11120     0A38  0084               	movwf	4
 11121     0A39  3000               	movlw	high Lcd_Battery_Init@level2
 11122     0A3A  0085               	movwf	5
 11123     0A3B  3008               	movlw	8
 11124     0A3C  00FA               	movwf	??_Lcd_Battery_Init
 11125     0A3D                     u4110:
 11126     0A3D  0016               	moviw fsr1++
 11127     0A3E  001A               	movwi fsr0++
 11128     0A3F  0BFA               	decfsz	??_Lcd_Battery_Init,f
 11129     0A40  2A3D               	goto	u4110
 11130                           
 11131                           ;SC1601_LCD.c: 446:     unsigned char level3[8] = {0x0E, 0x11, 0x11, 0x11, 0x1F, 0x1F, 0
      +                          x1F, 0x0E};
 11132     0A41  3040               	movlw	low Lcd_Battery_Init@F6665
 11133     0A42  0086               	movwf	6
 11134     0A43  3001               	movlw	high Lcd_Battery_Init@F6665
 11135     0A44  0087               	movwf	7
 11136     0A45  3038               	movlw	low Lcd_Battery_Init@level3
 11137     0A46  0084               	movwf	4
 11138     0A47  3000               	movlw	high Lcd_Battery_Init@level3
 11139     0A48  0085               	movwf	5
 11140     0A49  3008               	movlw	8
 11141     0A4A  00FA               	movwf	??_Lcd_Battery_Init
 11142     0A4B                     u4120:
 11143     0A4B  0016               	moviw fsr1++
 11144     0A4C  001A               	movwi fsr0++
 11145     0A4D  0BFA               	decfsz	??_Lcd_Battery_Init,f
 11146     0A4E  2A4B               	goto	u4120
 11147                           
 11148                           ;SC1601_LCD.c: 447:     unsigned char level4[8] = {0x0E, 0x11, 0x11, 0x1F, 0x1F, 0x1F, 0
      +                          x1F, 0x0E};
 11149     0A4F  3038               	movlw	low Lcd_Battery_Init@F6667
 11150     0A50  0086               	movwf	6
 11151     0A51  3001               	movlw	high Lcd_Battery_Init@F6667
 11152     0A52  0087               	movwf	7
 11153     0A53  3040               	movlw	low Lcd_Battery_Init@level4
 11154     0A54  0084               	movwf	4
 11155     0A55  3000               	movlw	high Lcd_Battery_Init@level4
 11156     0A56  0085               	movwf	5
 11157     0A57  3008               	movlw	8
 11158     0A58  00FA               	movwf	??_Lcd_Battery_Init
 11159     0A59                     u4130:
 11160     0A59  0016               	moviw fsr1++
 11161     0A5A  001A               	movwi fsr0++
 11162     0A5B  0BFA               	decfsz	??_Lcd_Battery_Init,f
 11163     0A5C  2A59               	goto	u4130
 11164                           
 11165                           ;SC1601_LCD.c: 448:     unsigned char level5[8] = {0x0E, 0x11, 0x1F, 0x1F, 0x1F, 0x1F, 0
      +                          x1F, 0x0E};
 11166     0A5D  3030               	movlw	low Lcd_Battery_Init@F6669
 11167     0A5E  0086               	movwf	6
 11168     0A5F  3001               	movlw	high Lcd_Battery_Init@F6669
 11169     0A60  0087               	movwf	7
 11170     0A61  3048               	movlw	low Lcd_Battery_Init@level5
 11171     0A62  0084               	movwf	4
 11172     0A63  3000               	movlw	high Lcd_Battery_Init@level5
 11173     0A64  0085               	movwf	5
 11174     0A65  3008               	movlw	8
 11175     0A66  00FA               	movwf	??_Lcd_Battery_Init
 11176     0A67                     u4140:
 11177     0A67  0016               	moviw fsr1++
 11178     0A68  001A               	movwi fsr0++
 11179     0A69  0BFA               	decfsz	??_Lcd_Battery_Init,f
 11180     0A6A  2A67               	goto	u4140
 11181                           
 11182                           ;SC1601_LCD.c: 449:     unsigned char full[8] = {0x0E, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1
      +                          F, 0x0E};
 11183     0A6B  3028               	movlw	low Lcd_Battery_Init@F6671
 11184     0A6C  0086               	movwf	6
 11185     0A6D  3001               	movlw	high Lcd_Battery_Init@F6671
 11186     0A6E  0087               	movwf	7
 11187     0A6F  3050               	movlw	low Lcd_Battery_Init@full
 11188     0A70  0084               	movwf	4
 11189     0A71  3000               	movlw	high Lcd_Battery_Init@full
 11190     0A72  0085               	movwf	5
 11191     0A73  3008               	movlw	8
 11192     0A74  00FA               	movwf	??_Lcd_Battery_Init
 11193     0A75                     u4150:
 11194     0A75  0016               	moviw fsr1++
 11195     0A76  001A               	movwi fsr0++
 11196     0A77  0BFA               	decfsz	??_Lcd_Battery_Init,f
 11197     0A78  2A75               	goto	u4150
 11198     0A79                     l3348:
 11199                           
 11200                           ;SC1601_LCD.c: 452:     Lcd_Create_Char(0, level0);
 11201     0A79  3020               	movlw	(low (Lcd_Battery_Init@level0| 0))& (0+255)
 11202     0A7A  00F5               	movwf	Lcd_Create_Char@charmap
 11203     0A7B  3000               	movlw	0
 11204     0A7C  3195  2533  318A   	fcall	_Lcd_Create_Char
 11205     0A7F                     l3350:
 11206                           
 11207                           ;SC1601_LCD.c: 453:     Lcd_Create_Char(1, level1);
 11208     0A7F  3028               	movlw	(low (Lcd_Battery_Init@level1| 0))& (0+255)
 11209     0A80  00F5               	movwf	Lcd_Create_Char@charmap
 11210     0A81  3001               	movlw	1
 11211     0A82  3195  2533  318A   	fcall	_Lcd_Create_Char
 11212     0A85                     l3352:
 11213                           
 11214                           ;SC1601_LCD.c: 454:     Lcd_Create_Char(2, level2);
 11215     0A85  3030               	movlw	(low (Lcd_Battery_Init@level2| 0))& (0+255)
 11216     0A86  00F5               	movwf	Lcd_Create_Char@charmap
 11217     0A87  3002               	movlw	2
 11218     0A88  3195  2533  318A   	fcall	_Lcd_Create_Char
 11219     0A8B                     l3354:
 11220                           
 11221                           ;SC1601_LCD.c: 455:     Lcd_Create_Char(3, level3);
 11222     0A8B  3038               	movlw	(low (Lcd_Battery_Init@level3| 0))& (0+255)
 11223     0A8C  00F5               	movwf	Lcd_Create_Char@charmap
 11224     0A8D  3003               	movlw	3
 11225     0A8E  3195  2533  318A   	fcall	_Lcd_Create_Char
 11226     0A91                     l3356:
 11227                           
 11228                           ;SC1601_LCD.c: 456:     Lcd_Create_Char(4, level4);
 11229     0A91  3040               	movlw	(low (Lcd_Battery_Init@level4| 0))& (0+255)
 11230     0A92  00F5               	movwf	Lcd_Create_Char@charmap
 11231     0A93  3004               	movlw	4
 11232     0A94  3195  2533  318A   	fcall	_Lcd_Create_Char
 11233     0A97                     l3358:
 11234                           
 11235                           ;SC1601_LCD.c: 457:     Lcd_Create_Char(5, level5);
 11236     0A97  3048               	movlw	(low (Lcd_Battery_Init@level5| 0))& (0+255)
 11237     0A98  00F5               	movwf	Lcd_Create_Char@charmap
 11238     0A99  3005               	movlw	5
 11239     0A9A  3195  2533  318A   	fcall	_Lcd_Create_Char
 11240     0A9D                     l3360:
 11241                           
 11242                           ;SC1601_LCD.c: 458:     Lcd_Create_Char(6, full);
 11243     0A9D  3050               	movlw	(low (Lcd_Battery_Init@full| 0))& (0+255)
 11244     0A9E  00F5               	movwf	Lcd_Create_Char@charmap
 11245     0A9F  3006               	movlw	6
 11246     0AA0  3195  2533  318A   	fcall	_Lcd_Create_Char
 11247     0AA3                     l275:
 11248     0AA3  0008               	return
 11249     0AA4                     __end_of_Lcd_Battery_Init:
 11250                           
 11251                           	psect	text52
 11252     1533                     __ptext52:	
 11253 ;; *************** function _Lcd_Create_Char *****************
 11254 ;; Defined at:
 11255 ;;		line 380 in file "SC1601_LCD.c"
 11256 ;; Parameters:    Size  Location     Type
 11257 ;;  location        1    wreg     unsigned char 
 11258 ;;  charmap         1    5[COMMON] PTR unsigned char 
 11259 ;;		 -> Lcd_Signal_Init@strong_signal(8), Lcd_Signal_Init@weak_signal(8), Lcd_Signal_Init@no_signal(8), Lcd_Battery_Init
      +@full(8), 
 11260 ;;		 -> Lcd_Battery_Init@level5(8), Lcd_Battery_Init@level4(8), Lcd_Battery_Init@level3(8), Lcd_Battery_Init@level2(8), 
 11261 ;;		 -> Lcd_Battery_Init@level1(8), Lcd_Battery_Init@level0(8), Lcd_Progress_Bar_Init@block_full(8), Lcd_Progress_Bar_In
      +it@block_3(8), 
 11262 ;;		 -> Lcd_Progress_Bar_Init@block_2(8), Lcd_Progress_Bar_Init@block_1(8), main@smiley(8), 
 11263 ;; Auto vars:     Size  Location     Type
 11264 ;;  location        1    7[COMMON] unsigned char 
 11265 ;;  i               2    8[COMMON] int 
 11266 ;; Return value:  Size  Location     Type
 11267 ;;                  1    wreg      void 
 11268 ;; Registers used:
 11269 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11270 ;; Tracked objects:
 11271 ;;		On entry : 0/0
 11272 ;;		On exit  : 0/0
 11273 ;;		Unchanged: 0/0
 11274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11275 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11276 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11277 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11278 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11279 ;;Total ram usage:        5 bytes
 11280 ;; Hardware stack levels used: 1
 11281 ;; Hardware stack levels required when called: 3
 11282 ;; This function calls:
 11283 ;;		_Lcd_Send_Command
 11284 ;;		_Lcd_Write_Char
 11285 ;; This function is called by:
 11286 ;;		_main
 11287 ;;		_Lcd_Progress_Bar_Init
 11288 ;;		_Lcd_Battery_Init
 11289 ;;		_Lcd_Signal_Init
 11290 ;; This function uses a non-reentrant model
 11291 ;;
 11292                           
 11293     1533                     _Lcd_Create_Char:	
 11294                           ;psect for function _Lcd_Create_Char
 11295                           
 11296                           
 11297                           ;incstack = 0
 11298                           ; Regs used in _Lcd_Create_Char: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11299                           ;Lcd_Create_Char@location stored from wreg
 11300     1533  00F7               	movwf	Lcd_Create_Char@location
 11301     1534                     l3134:
 11302                           
 11303                           ;SC1601_LCD.c: 380: void Lcd_Create_Char(unsigned char location, unsigned char charmap[]
      +                          );SC1601_LCD.c: 381: {;SC1601_LCD.c: 382:     location &= 0x07;
 11304     1534  3007               	movlw	7
 11305     1535  00F6               	movwf	??_Lcd_Create_Char
 11306     1536  0876               	movf	??_Lcd_Create_Char,w
 11307     1537  05F7               	andwf	Lcd_Create_Char@location,f
 11308     1538                     l3136:
 11309                           
 11310                           ;SC1601_LCD.c: 383:     Lcd_Send_Command(0x40 | (location << 3));
 11311     1538  0877               	movf	Lcd_Create_Char@location,w
 11312     1539  00F6               	movwf	??_Lcd_Create_Char
 11313     153A  3002               	movlw	2
 11314     153B                     u3925:
 11315     153B  35F6               	lslf	??_Lcd_Create_Char,f
 11316     153C  3EFF               	addlw	-1
 11317     153D  1D03               	skipz
 11318     153E  2D3B               	goto	u3925
 11319     153F  3576               	lslf	??_Lcd_Create_Char,w
 11320     1540  3840               	iorlw	64
 11321     1541  3193  2359  3195   	fcall	_Lcd_Send_Command
 11322     1544                     l3138:
 11323                           
 11324                           ;SC1601_LCD.c: 384:     for (int i = 0; i < 8; i++) {
 11325     1544  01F8               	clrf	Lcd_Create_Char@i
 11326     1545  01F9               	clrf	Lcd_Create_Char@i+1
 11327     1546                     l3144:
 11328                           
 11329                           ;SC1601_LCD.c: 385:         Lcd_Write_Char(charmap[i]);
 11330     1546  0878               	movf	Lcd_Create_Char@i,w
 11331     1547  0775               	addwf	Lcd_Create_Char@charmap,w
 11332     1548  00F6               	movwf	??_Lcd_Create_Char
 11333     1549  0876               	movf	??_Lcd_Create_Char,w
 11334     154A  0086               	movwf	6
 11335     154B  0187               	clrf	7
 11336     154C  0801               	movf	1,w
 11337     154D  3193  23BD  3195   	fcall	_Lcd_Write_Char
 11338     1550                     l3146:
 11339                           
 11340                           ;SC1601_LCD.c: 386:     }
 11341     1550  3001               	movlw	1
 11342     1551  07F8               	addwf	Lcd_Create_Char@i,f
 11343     1552  3000               	movlw	0
 11344     1553  3DF9               	addwfc	Lcd_Create_Char@i+1,f
 11345     1554                     l3148:
 11346     1554  0879               	movf	Lcd_Create_Char@i+1,w
 11347     1555  3A80               	xorlw	128
 11348     1556  00F6               	movwf	??_Lcd_Create_Char
 11349     1557  3080               	movlw	128
 11350     1558  0276               	subwf	??_Lcd_Create_Char,w
 11351     1559  1D03               	skipz
 11352     155A  2D5D               	goto	u3935
 11353     155B  3008               	movlw	8
 11354     155C  0278               	subwf	Lcd_Create_Char@i,w
 11355     155D                     u3935:
 11356     155D  1C03               	skipc
 11357     155E  2D60               	goto	u3931
 11358     155F  2D61               	goto	u3930
 11359     1560                     u3931:
 11360     1560  2D46               	goto	l3144
 11361     1561                     u3930:
 11362     1561                     l234:
 11363     1561  0008               	return
 11364     1562                     __end_of_Lcd_Create_Char:
 11365                           
 11366                           	psect	text53
 11367     13BD                     __ptext53:	
 11368 ;; *************** function _Lcd_Write_Char *****************
 11369 ;; Defined at:
 11370 ;;		line 147 in file "SC1601_LCD.c"
 11371 ;; Parameters:    Size  Location     Type
 11372 ;;  a               1    wreg     unsigned char 
 11373 ;; Auto vars:     Size  Location     Type
 11374 ;;  a               1    3[COMMON] unsigned char 
 11375 ;; Return value:  Size  Location     Type
 11376 ;;                  1    wreg      void 
 11377 ;; Registers used:
 11378 ;;		wreg, status,2, status,0, pclath, cstack
 11379 ;; Tracked objects:
 11380 ;;		On entry : 0/0
 11381 ;;		On exit  : 0/0
 11382 ;;		Unchanged: 0/0
 11383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11385 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11386 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11387 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11388 ;;Total ram usage:        2 bytes
 11389 ;; Hardware stack levels used: 1
 11390 ;; Hardware stack levels required when called: 1
 11391 ;; This function calls:
 11392 ;;		_Lcd_Enable_Pulse
 11393 ;;		_Lcd_Port
 11394 ;; This function is called by:
 11395 ;;		_Lcd_Write_String
 11396 ;;		_Lcd_Create_Char
 11397 ;;		_Lcd_Display_Custom_Char
 11398 ;;		_Lcd_Progress_Bar
 11399 ;; This function uses a non-reentrant model
 11400 ;;
 11401                           
 11402     13BD                     _Lcd_Write_Char:	
 11403                           ;psect for function _Lcd_Write_Char
 11404                           
 11405                           
 11406                           ;incstack = 0
 11407                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 11408                           ;Lcd_Write_Char@a stored from wreg
 11409     13BD  00F3               	movwf	Lcd_Write_Char@a
 11410     13BE                     l2812:
 11411                           
 11412                           ;SC1601_LCD.c: 147: void Lcd_Write_Char(char a);SC1601_LCD.c: 148: {;SC1601_LCD.c: 149: 
      +                              RD2 = 1;
 11413     13BE  0020               	movlb	0	; select bank0
 11414     13BF  150F               	bsf	15,2	;volatile
 11415     13C0                     l2814:
 11416                           
 11417                           ;SC1601_LCD.c: 150:     Lcd_Port(a >> 4);
 11418     13C0  0873               	movf	Lcd_Write_Char@a,w
 11419     13C1  00F2               	movwf	??_Lcd_Write_Char
 11420     13C2  3004               	movlw	4
 11421     13C3                     u3285:
 11422     13C3  36F2               	lsrf	??_Lcd_Write_Char,f
 11423     13C4  0B89               	decfsz	9,f
 11424     13C5  2BC3               	goto	u3285
 11425     13C6  0872               	movf	??_Lcd_Write_Char,w
 11426     13C7  3195  2562  3193   	fcall	_Lcd_Port
 11427                           
 11428                           ;SC1601_LCD.c: 151:     Lcd_Enable_Pulse();
 11429     13CA  3193  2324  3193   	fcall	_Lcd_Enable_Pulse
 11430                           
 11431                           ;SC1601_LCD.c: 152:     Lcd_Port(a & 0x0F);
 11432     13CD  0873               	movf	Lcd_Write_Char@a,w
 11433     13CE  390F               	andlw	15
 11434     13CF  3195  2562  3193   	fcall	_Lcd_Port
 11435                           
 11436                           ;SC1601_LCD.c: 153:     Lcd_Enable_Pulse();
 11437     13D2  3193  2324  3193   	fcall	_Lcd_Enable_Pulse
 11438     13D5                     l178:
 11439     13D5  0008               	return
 11440     13D6                     __end_of_Lcd_Write_Char:
 11441                           
 11442                           	psect	text54
 11443     1359                     __ptext54:	
 11444 ;; *************** function _Lcd_Send_Command *****************
 11445 ;; Defined at:
 11446 ;;		line 83 in file "SC1601_LCD.c"
 11447 ;; Parameters:    Size  Location     Type
 11448 ;;  cmd             1    wreg     unsigned char 
 11449 ;; Auto vars:     Size  Location     Type
 11450 ;;  cmd             1    4[COMMON] unsigned char 
 11451 ;; Return value:  Size  Location     Type
 11452 ;;                  1    wreg      void 
 11453 ;; Registers used:
 11454 ;;		wreg, status,2, status,0, pclath, cstack
 11455 ;; Tracked objects:
 11456 ;;		On entry : 0/0
 11457 ;;		On exit  : 0/0
 11458 ;;		Unchanged: 0/0
 11459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11461 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11462 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11463 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11464 ;;Total ram usage:        2 bytes
 11465 ;; Hardware stack levels used: 1
 11466 ;; Hardware stack levels required when called: 2
 11467 ;; This function calls:
 11468 ;;		_Lcd_Cmd
 11469 ;; This function is called by:
 11470 ;;		_Lcd_Clear
 11471 ;;		_Lcd_Set_Cursor
 11472 ;;		_Lcd_Init
 11473 ;;		_Lcd_Shift_Right
 11474 ;;		_Lcd_Shift_Left
 11475 ;;		_Lcd_Create_Char
 11476 ;;		_Lcd_Blink_On
 11477 ;;		_Lcd_Blink_Off
 11478 ;;		_Lcd_Display_On
 11479 ;;		_Lcd_Display_Off
 11480 ;;		_Lcd_Move_Cursor_Left
 11481 ;;		_Lcd_Move_Cursor_Right
 11482 ;;		_Lcd_Reset
 11483 ;; This function uses a non-reentrant model
 11484 ;;
 11485                           
 11486     1359                     _Lcd_Send_Command:	
 11487                           ;psect for function _Lcd_Send_Command
 11488                           
 11489                           
 11490                           ;incstack = 0
 11491                           ; Regs used in _Lcd_Send_Command: [wreg+status,2+status,0+pclath+cstack]
 11492                           ;Lcd_Send_Command@cmd stored from wreg
 11493     1359  00F4               	movwf	Lcd_Send_Command@cmd
 11494     135A                     l2810:
 11495                           
 11496                           ;SC1601_LCD.c: 83: void Lcd_Send_Command(char cmd);SC1601_LCD.c: 84: {;SC1601_LCD.c: 85:
      +                               Lcd_Cmd(cmd >> 4);
 11497     135A  0874               	movf	Lcd_Send_Command@cmd,w
 11498     135B  00F3               	movwf	??_Lcd_Send_Command
 11499     135C  3004               	movlw	4
 11500     135D                     u3275:
 11501     135D  36F3               	lsrf	??_Lcd_Send_Command,f
 11502     135E  0B89               	decfsz	9,f
 11503     135F  2B5D               	goto	u3275
 11504     1360  0873               	movf	??_Lcd_Send_Command,w
 11505     1361  3193  2336  3193   	fcall	_Lcd_Cmd
 11506                           
 11507                           ;SC1601_LCD.c: 86:     Lcd_Cmd(cmd & 0x0F);
 11508     1364  0874               	movf	Lcd_Send_Command@cmd,w
 11509     1365  390F               	andlw	15
 11510     1366  3193  2336  3193   	fcall	_Lcd_Cmd
 11511     1369                     l162:
 11512     1369  0008               	return
 11513     136A                     __end_of_Lcd_Send_Command:
 11514                           
 11515                           	psect	text55
 11516     1336                     __ptext55:	
 11517 ;; *************** function _Lcd_Cmd *****************
 11518 ;; Defined at:
 11519 ;;		line 69 in file "SC1601_LCD.c"
 11520 ;; Parameters:    Size  Location     Type
 11521 ;;  a               1    wreg     unsigned char 
 11522 ;; Auto vars:     Size  Location     Type
 11523 ;;  a               1    2[COMMON] unsigned char 
 11524 ;; Return value:  Size  Location     Type
 11525 ;;                  1    wreg      void 
 11526 ;; Registers used:
 11527 ;;		wreg, status,2, status,0, pclath, cstack
 11528 ;; Tracked objects:
 11529 ;;		On entry : 0/0
 11530 ;;		On exit  : 0/0
 11531 ;;		Unchanged: 0/0
 11532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11534 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11536 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11537 ;;Total ram usage:        1 bytes
 11538 ;; Hardware stack levels used: 1
 11539 ;; Hardware stack levels required when called: 1
 11540 ;; This function calls:
 11541 ;;		_Lcd_Enable_Pulse
 11542 ;;		_Lcd_Port
 11543 ;; This function is called by:
 11544 ;;		_Lcd_Send_Command
 11545 ;;		_Lcd_Init
 11546 ;; This function uses a non-reentrant model
 11547 ;;
 11548                           
 11549     1336                     _Lcd_Cmd:	
 11550                           ;psect for function _Lcd_Cmd
 11551                           
 11552                           
 11553                           ;incstack = 0
 11554                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
 11555                           ;Lcd_Cmd@a stored from wreg
 11556     1336  00F2               	movwf	Lcd_Cmd@a
 11557     1337                     l2540:
 11558                           
 11559                           ;SC1601_LCD.c: 69: void Lcd_Cmd(char a);SC1601_LCD.c: 70: {;SC1601_LCD.c: 71:     RD2 = 
      +                          0;
 11560     1337  0020               	movlb	0	; select bank0
 11561     1338  110F               	bcf	15,2	;volatile
 11562     1339                     l2542:
 11563                           
 11564                           ;SC1601_LCD.c: 72:     Lcd_Port(a);
 11565     1339  0872               	movf	Lcd_Cmd@a,w
 11566     133A  3195  2562  3193   	fcall	_Lcd_Port
 11567                           
 11568                           ;SC1601_LCD.c: 73:     Lcd_Enable_Pulse();
 11569     133D  3193  2324  3193   	fcall	_Lcd_Enable_Pulse
 11570     1340                     l159:
 11571     1340  0008               	return
 11572     1341                     __end_of_Lcd_Cmd:
 11573                           
 11574                           	psect	text56
 11575     1562                     __ptext56:	
 11576 ;; *************** function _Lcd_Port *****************
 11577 ;; Defined at:
 11578 ;;		line 40 in file "SC1601_LCD.c"
 11579 ;; Parameters:    Size  Location     Type
 11580 ;;  a               1    wreg     unsigned char 
 11581 ;; Auto vars:     Size  Location     Type
 11582 ;;  a               1    1[COMMON] unsigned char 
 11583 ;; Return value:  Size  Location     Type
 11584 ;;                  1    wreg      void 
 11585 ;; Registers used:
 11586 ;;		wreg, status,2, status,0
 11587 ;; Tracked objects:
 11588 ;;		On entry : 0/0
 11589 ;;		On exit  : 0/0
 11590 ;;		Unchanged: 0/0
 11591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11593 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11594 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11595 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11596 ;;Total ram usage:        2 bytes
 11597 ;; Hardware stack levels used: 1
 11598 ;; This function calls:
 11599 ;;		Nothing
 11600 ;; This function is called by:
 11601 ;;		_Lcd_Cmd
 11602 ;;		_Lcd_Init
 11603 ;;		_Lcd_Write_Char
 11604 ;; This function uses a non-reentrant model
 11605 ;;
 11606                           
 11607     1562                     _Lcd_Port:	
 11608                           ;psect for function _Lcd_Port
 11609                           
 11610                           
 11611                           ;incstack = 0
 11612                           ; Regs used in _Lcd_Port: [wreg+status,2+status,0]
 11613                           ;Lcd_Port@a stored from wreg
 11614     1562  00F1               	movwf	Lcd_Port@a
 11615     1563                     l2462:
 11616                           
 11617                           ;SC1601_LCD.c: 40: void Lcd_Port(char a);SC1601_LCD.c: 41: {;SC1601_LCD.c: 42:     RD4 =
      +                           (a & 0x01);
 11618     1563  1871               	btfsc	Lcd_Port@a,0
 11619     1564  2D66               	goto	u2521
 11620     1565  2D69               	goto	u2520
 11621     1566                     u2521:
 11622     1566  0020               	movlb	0	; select bank0
 11623     1567  160F               	bsf	15,4	;volatile
 11624     1568  2D6B               	goto	u2534
 11625     1569                     u2520:
 11626     1569  0020               	movlb	0	; select bank0
 11627     156A  120F               	bcf	15,4	;volatile
 11628     156B                     u2534:
 11629     156B                     l2464:
 11630                           
 11631                           ;SC1601_LCD.c: 43:     RD5 = (a & 0x02) >> 1;
 11632     156B  0871               	movf	Lcd_Port@a,w
 11633     156C  00F0               	movwf	??_Lcd_Port
 11634     156D  3001               	movlw	1
 11635     156E                     u2545:
 11636     156E  36F0               	lsrf	??_Lcd_Port,f
 11637     156F  0B89               	decfsz	9,f
 11638     1570  2D6E               	goto	u2545
 11639     1571  1870               	btfsc	??_Lcd_Port,0
 11640     1572  2D74               	goto	u2551
 11641     1573  2D77               	goto	u2550
 11642     1574                     u2551:
 11643     1574  0020               	movlb	0	; select bank0
 11644     1575  168F               	bsf	15,5	;volatile
 11645     1576  2D79               	goto	u2564
 11646     1577                     u2550:
 11647     1577  0020               	movlb	0	; select bank0
 11648     1578  128F               	bcf	15,5	;volatile
 11649     1579                     u2564:
 11650     1579                     l2466:
 11651                           
 11652                           ;SC1601_LCD.c: 44:     RD6 = (a & 0x04) >> 2;
 11653     1579  0871               	movf	Lcd_Port@a,w
 11654     157A  00F0               	movwf	??_Lcd_Port
 11655     157B  3002               	movlw	2
 11656     157C                     u2575:
 11657     157C  36F0               	lsrf	??_Lcd_Port,f
 11658     157D  0B89               	decfsz	9,f
 11659     157E  2D7C               	goto	u2575
 11660     157F  1870               	btfsc	??_Lcd_Port,0
 11661     1580  2D82               	goto	u2581
 11662     1581  2D85               	goto	u2580
 11663     1582                     u2581:
 11664     1582  0020               	movlb	0	; select bank0
 11665     1583  170F               	bsf	15,6	;volatile
 11666     1584  2D87               	goto	u2594
 11667     1585                     u2580:
 11668     1585  0020               	movlb	0	; select bank0
 11669     1586  130F               	bcf	15,6	;volatile
 11670     1587                     u2594:
 11671     1587                     l2468:
 11672                           
 11673                           ;SC1601_LCD.c: 45:     RD7 = (a & 0x08) >> 3;
 11674     1587  0871               	movf	Lcd_Port@a,w
 11675     1588  00F0               	movwf	??_Lcd_Port
 11676     1589  3003               	movlw	3
 11677     158A                     u2605:
 11678     158A  36F0               	lsrf	??_Lcd_Port,f
 11679     158B  0B89               	decfsz	9,f
 11680     158C  2D8A               	goto	u2605
 11681     158D  1870               	btfsc	??_Lcd_Port,0
 11682     158E  2D90               	goto	u2611
 11683     158F  2D93               	goto	u2610
 11684     1590                     u2611:
 11685     1590  0020               	movlb	0	; select bank0
 11686     1591  178F               	bsf	15,7	;volatile
 11687     1592  2D95               	goto	u2624
 11688     1593                     u2610:
 11689     1593  0020               	movlb	0	; select bank0
 11690     1594  138F               	bcf	15,7	;volatile
 11691     1595                     u2624:
 11692     1595                     l153:
 11693     1595  0008               	return
 11694     1596                     __end_of_Lcd_Port:
 11695                           
 11696                           	psect	text57
 11697     1324                     __ptext57:	
 11698 ;; *************** function _Lcd_Enable_Pulse *****************
 11699 ;; Defined at:
 11700 ;;		line 55 in file "SC1601_LCD.c"
 11701 ;; Parameters:    Size  Location     Type
 11702 ;;		None
 11703 ;; Auto vars:     Size  Location     Type
 11704 ;;		None
 11705 ;; Return value:  Size  Location     Type
 11706 ;;                  1    wreg      void 
 11707 ;; Registers used:
 11708 ;;		wreg
 11709 ;; Tracked objects:
 11710 ;;		On entry : 0/0
 11711 ;;		On exit  : 0/0
 11712 ;;		Unchanged: 0/0
 11713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11718 ;;Total ram usage:        0 bytes
 11719 ;; Hardware stack levels used: 1
 11720 ;; This function calls:
 11721 ;;		Nothing
 11722 ;; This function is called by:
 11723 ;;		_Lcd_Cmd
 11724 ;;		_Lcd_Write_Char
 11725 ;; This function uses a non-reentrant model
 11726 ;;
 11727                           
 11728     1324                     _Lcd_Enable_Pulse:	
 11729                           ;psect for function _Lcd_Enable_Pulse
 11730                           
 11731     1324                     l2470:	
 11732                           ;incstack = 0
 11733                           ; Regs used in _Lcd_Enable_Pulse: [wreg]
 11734                           
 11735                           
 11736                           ;SC1601_LCD.c: 57:     RD3 = 1;
 11737     1324  0020               	movlb	0	; select bank0
 11738     1325  158F               	bsf	15,3	;volatile
 11739     1326                     l2472:
 11740                           
 11741                           ;SC1601_LCD.c: 58:     _delay((unsigned long)((50)*(32000000/4000000.0)));
 11742     1326  3085               	movlw	133
 11743     1327                     u4837:
 11744     1327  0B89               	decfsz	9,f
 11745     1328  2B27               	goto	u4837
 11746     1329  0000               	nop
 11747     132A                     l2474:
 11748                           
 11749                           ;SC1601_LCD.c: 59:     RD3 = 0;
 11750     132A  0020               	movlb	0	; select bank0
 11751     132B  118F               	bcf	15,3	;volatile
 11752     132C                     l156:
 11753     132C  0008               	return
 11754     132D                     __end_of_Lcd_Enable_Pulse:
 11755                           
 11756                           	psect	text58
 11757     12F3                     __ptext58:	
 11758 ;; *************** function _Lcd_Backlight_On *****************
 11759 ;; Defined at:
 11760 ;;		line 590 in file "SC1601_LCD.c"
 11761 ;; Parameters:    Size  Location     Type
 11762 ;;		None
 11763 ;; Auto vars:     Size  Location     Type
 11764 ;;		None
 11765 ;; Return value:  Size  Location     Type
 11766 ;;                  1    wreg      void 
 11767 ;; Registers used:
 11768 ;;		None
 11769 ;; Tracked objects:
 11770 ;;		On entry : 0/0
 11771 ;;		On exit  : 0/0
 11772 ;;		Unchanged: 0/0
 11773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11778 ;;Total ram usage:        0 bytes
 11779 ;; Hardware stack levels used: 1
 11780 ;; This function calls:
 11781 ;;		Nothing
 11782 ;; This function is called by:
 11783 ;;		_main
 11784 ;; This function uses a non-reentrant model
 11785 ;;
 11786                           
 11787     12F3                     _Lcd_Backlight_On:	
 11788                           ;psect for function _Lcd_Backlight_On
 11789                           
 11790     12F3                     l3252:	
 11791                           ;incstack = 0
 11792                           ; Regs used in _Lcd_Backlight_On: []
 11793                           
 11794                           
 11795                           ;SC1601_LCD.c: 592:     LATDbits.LATD0 = 1;
 11796     12F3  0022               	movlb	2	; select bank2
 11797     12F4  140F               	bsf	15,0	;volatile
 11798     12F5                     l327:
 11799     12F5  0008               	return
 11800     12F6                     __end_of_Lcd_Backlight_On:
 11801                           
 11802                           	psect	text59
 11803     12F0                     __ptext59:	
 11804 ;; *************** function _Lcd_Backlight_Off *****************
 11805 ;; Defined at:
 11806 ;;		line 595 in file "SC1601_LCD.c"
 11807 ;; Parameters:    Size  Location     Type
 11808 ;;		None
 11809 ;; Auto vars:     Size  Location     Type
 11810 ;;		None
 11811 ;; Return value:  Size  Location     Type
 11812 ;;                  1    wreg      void 
 11813 ;; Registers used:
 11814 ;;		None
 11815 ;; Tracked objects:
 11816 ;;		On entry : 0/0
 11817 ;;		On exit  : 0/0
 11818 ;;		Unchanged: 0/0
 11819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11824 ;;Total ram usage:        0 bytes
 11825 ;; Hardware stack levels used: 1
 11826 ;; This function calls:
 11827 ;;		Nothing
 11828 ;; This function is called by:
 11829 ;;		_main
 11830 ;; This function uses a non-reentrant model
 11831 ;;
 11832                           
 11833     12F0                     _Lcd_Backlight_Off:	
 11834                           ;psect for function _Lcd_Backlight_Off
 11835                           
 11836     12F0                     l3254:	
 11837                           ;incstack = 0
 11838                           ; Regs used in _Lcd_Backlight_Off: []
 11839                           
 11840                           
 11841                           ;SC1601_LCD.c: 597:     LATDbits.LATD0 = 0;
 11842     12F0  0022               	movlb	2	; select bank2
 11843     12F1  100F               	bcf	15,0	;volatile
 11844     12F2                     l330:
 11845     12F2  0008               	return
 11846     12F3                     __end_of_Lcd_Backlight_Off:
 11847     007E                     btemp	set	126	;btemp
 11848     007E                     wtemp0	set	126
 11849                           
 11850                           	psect	config
 11851                           
 11852                           ;Config register CONFIG1 @ 0x8007
 11853                           ;	Oscillator Selection Bits
 11854                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 11855                           ;	Watchdog Timer Enable
 11856                           ;	WDTE = OFF, WDT disabled
 11857                           ;	Power-up Timer Enable
 11858                           ;	PWRTE = OFF, PWRT disabled
 11859                           ;	MCLR Pin Function Select
 11860                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input if LVP bit is also 0.
 11861                           ;	Flash Program Memory Code Protection
 11862                           ;	CP = OFF, Program memory code protection is disabled
 11863                           ;	Brown-out Reset Enable
 11864                           ;	BOREN = OFF, Brown-out Reset disabled
 11865                           ;	Clock Out Enable
 11866                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 11867                           ;	Internal/External Switchover Mode
 11868                           ;	IESO = ON, Internal/External Switchover Mode is enabled
 11869                           ;	Fail-Safe Clock Monitor Enable
 11870                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 11871     8007                     	org	32775
 11872     8007  19A4               	dw	6564
 11873                           
 11874                           ;Config register CONFIG2 @ 0x8008
 11875                           ;	Flash Memory Self-Write Protection
 11876                           ;	WRT = OFF, Write protection off
 11877                           ;	Peripheral Pin Select one-way control
 11878                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
 11879                           ;	Zero-cross detect disable
 11880                           ;	ZCDDIS = ON, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 11881                           ;	Phase Lock Loop enable
 11882                           ;	PLLEN = OFF, 4x PLL is disabled
 11883                           ;	Stack Overflow/Underflow Reset Enable
 11884                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 11885                           ;	Brown-out Reset Voltage Selection
 11886                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 11887                           ;	Low-Power Brown Out Reset
 11888                           ;	LPBOR = OFF, Low-Power BOR is disabled
 11889                           ;	In-Circuit Debugger Mode
 11890                           ;	DEBUG = 0x1, unprogrammed default
 11891                           ;	Low-Voltage Programming Enable
 11892                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
 11893     8008                     	org	32776
 11894     8008  1EFF               	dw	7935

Data Sizes:
    Strings     121
    Constant    0
    Data        132
    BSS         53
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     72      77
    BANK1            80     52      76
    BANK2            80      0      80
    BANK3            80      0      76
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    ftoa@ptr	PTR unsigned char  size(1) Largest target is 16
		 -> ftoa@buf(BANK3[16]), 

    ftoa@status	PTR int  size(1) Largest target is 2
		 -> Lcd_Write_Float@status(BANK0[2]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 16
		 -> ftoa@buf(BANK3[16]), Lcd_Write_Integer@buf(BANK0[8]), 

    itoa@ptr	PTR unsigned char  size(2) Largest target is 16
		 -> ftoa@buf(BANK3[16]), Lcd_Write_Integer@buf(BANK0[8]), 

    itoa@ptr1	PTR unsigned char  size(2) Largest target is 16
		 -> ftoa@buf(BANK3[16]), Lcd_Write_Integer@buf(BANK0[8]), 

    Lcd_Center_Text@str	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_5(CODE[9]), 

    Lcd_Create_Char@charmap	PTR unsigned char  size(1) Largest target is 8
		 -> Lcd_Battery_Init@full(BANK0[8]), Lcd_Battery_Init@level0(BANK0[8]), Lcd_Battery_Init@level1(BANK0[8]), Lcd_Battery_Init@level2(BANK0[8]), 
		 -> Lcd_Battery_Init@level3(BANK0[8]), Lcd_Battery_Init@level4(BANK0[8]), Lcd_Battery_Init@level5(BANK0[8]), Lcd_Progress_Bar_Init@block_1(BANK0[8]), 
		 -> Lcd_Progress_Bar_Init@block_2(BANK0[8]), Lcd_Progress_Bar_Init@block_3(BANK0[8]), Lcd_Progress_Bar_Init@block_full(BANK0[8]), Lcd_Signal_Init@no_signal(BANK0[8]), 
		 -> Lcd_Signal_Init@strong_signal(BANK0[8]), Lcd_Signal_Init@weak_signal(BANK0[8]), main@smiley(BANK1[8]), 

    Lcd_Scroll_Text@str	PTR const unsigned char  size(2) Largest target is 39
		 -> STR_4(CODE[39]), 

    Lcd_Write_Float@buf	PTR unsigned char  size(1) Largest target is 16
		 -> ftoa@buf(BANK3[16]), 

    Lcd_Write_String@str	PTR const unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK3[16]), Lcd_Display_Battery@buf(BANK0[5]), Lcd_Scroll_Text@buffer(BANK0[17]), Lcd_Write_Integer@buf(BANK0[8]), 
		 -> Lcd_Write_Padded_Integer@buf(BANK1[16]), STR_1(CODE[11]), STR_11(CODE[8]), STR_2(CODE[5]), 
		 -> STR_3(CODE[3]), STR_5(CODE[9]), STR_6(CODE[10]), STR_9(CODE[9]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S699$buffer	PTR unsigned char  size(2) Largest target is 0

    S699$source	PTR const unsigned char  size(2) Largest target is 0

    sp__ftoa	PTR unsigned char  size(1) Largest target is 16
		 -> ftoa@buf(BANK3[16]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 16
		 -> ftoa@buf(BANK3[16]), Lcd_Write_Integer@buf(BANK0[8]), 

    sp__strncpy	PTR unsigned char  size(1) Largest target is 17
		 -> Lcd_Scroll_Text@buffer(BANK0[17]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_10(CODE[5]), STR_8(CODE[5]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 16
		 -> Lcd_Display_Battery@buf(BANK0[5]), Lcd_Write_Padded_Integer@buf(BANK1[16]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 39
		 -> STR_4(CODE[39]), STR_5(CODE[9]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 39
		 -> STR_4(CODE[39]), STR_5(CODE[9]), 

    strncpy@cp	PTR unsigned char  size(1) Largest target is 17
		 -> Lcd_Scroll_Text@buffer(BANK0[17]), 

    strncpy@d	PTR unsigned char  size(1) Largest target is 17
		 -> Lcd_Scroll_Text@buffer(BANK0[17]), 

    strncpy@s	PTR const unsigned char  size(2) Largest target is 39
		 -> STR_4(CODE[39]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 5
		 -> STR_10(CODE[5]), STR_8(CODE[5]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_10(CODE[5]), STR_8(CODE[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_10(CODE[5]), STR_8(CODE[5]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMMON

    _Lcd_Write_Integer->_Lcd_Write_String
    _ftoa->___xxtofl
    _itoa->___awdiv
    ___fltol->___xxtofl
    ___flsub->___xxtofl
    ___flmul->___xxtofl
    _Lcd_Signal_Init->_Lcd_Create_Char
    _Lcd_Shift_Right->_Lcd_Send_Command
    _Lcd_Shift_Left->_Lcd_Send_Command
    _Lcd_Scroll_Text->_Lcd_Write_String
    _Lcd_Progress_Bar_Init->_Lcd_Create_Char
    _Lcd_Progress_Bar->___awdiv
    _Lcd_Move_Cursor_Right->_Lcd_Send_Command
    _Lcd_Move_Cursor_Left->_Lcd_Send_Command
    _Lcd_Init->_Lcd_Send_Command
    _Lcd_Display_Signal->_Lcd_Write_String
    _Lcd_Display_On->_Lcd_Send_Command
    _Lcd_Display_Off->_Lcd_Send_Command
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _Lcd_Display_Custom_Char->_Lcd_Write_Char
    _Lcd_Clear->_Lcd_Send_Command
    _Lcd_Center_Text->_Lcd_Write_String
    ___awdiv->___wmul
    _Lcd_Set_Cursor->_Lcd_Send_Command
    _Lcd_Blink_On->_Lcd_Send_Command
    _Lcd_Blink_Off->_Lcd_Send_Command
    _Lcd_Battery_Init->_Lcd_Create_Char
    _Lcd_Create_Char->_Lcd_Send_Command
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Send_Command->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_Lcd_Display_Battery
    _Lcd_Write_Padded_Integer->_sprintf
    _Lcd_Write_Integer->_Lcd_Write_String
    _Lcd_Write_Float->_ftoa
    _ftoa->___fltol
    _itoa->___awdiv
    ___fltol->___flmul
    ___flsub->___fladd
    _Lcd_Scroll_Text->_Lcd_Write_String
    _Lcd_Progress_Bar->___awdiv
    _Lcd_Display_Signal->_Lcd_Write_String
    _Lcd_Display_Battery->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _Lcd_Center_Text->_Lcd_Write_String
    _Lcd_Write_String->_itoa

Critical Paths under _main in BANK1

    _main->_Lcd_Write_Padded_Integer

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                38    38      0   65300
                                             70 BANK0      2     2      0
                                             16 BANK1     36    36      0
                  _Lcd_Backlight_Off
                   _Lcd_Backlight_On
                   _Lcd_Battery_Init
                      _Lcd_Blink_Off
                       _Lcd_Blink_On
                    _Lcd_Center_Text
                          _Lcd_Clear
                    _Lcd_Create_Char
                _Lcd_Display_Battery
            _Lcd_Display_Custom_Char
                    _Lcd_Display_Off
                     _Lcd_Display_On
                 _Lcd_Display_Signal
                           _Lcd_Init
               _Lcd_Move_Cursor_Left
              _Lcd_Move_Cursor_Right
                   _Lcd_Progress_Bar
              _Lcd_Progress_Bar_Init
                    _Lcd_Scroll_Text
                     _Lcd_Set_Cursor
                     _Lcd_Shift_Left
                    _Lcd_Shift_Right
                    _Lcd_Signal_Init
                    _Lcd_Write_Float
                  _Lcd_Write_Integer
           _Lcd_Write_Padded_Integer
                   _Lcd_Write_String
                            ___fladd
                             ___flge
                           _initMain
 ---------------------------------------------------------------------------------
 (1) _initMain                                             1     1      0       0
                                              0 COMMON     1     1      0
                        _internal_32
 ---------------------------------------------------------------------------------
 (2) _internal_32                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_Padded_Integer                            20    16      4    9084
                                             61 BANK0      4     0      4
                                              0 BANK1     16    16      0
                   _Lcd_Write_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_Integer                                   10     8      2    4449
                                             24 BANK0     10     8      2
                   _Lcd_Write_String
                               _itoa
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_Float                                      7     3      4   12224
                                             57 BANK0      7     3      4
                   _Lcd_Write_String
                               _ftoa
 ---------------------------------------------------------------------------------
 (2) _ftoa                                                21    16      5   10943
                                             36 BANK0     21    16      5
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _itoa                                                18    12      6    3166
                                              4 BANK0     18    12      6
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     550
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     457
                                             26 BANK0     10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    2637
                                              8 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fladd                                             20    12      8    2288
                                              0 COMMON    12     4      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    2569
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (1) ___flge                                              12     4      8     638
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _Lcd_Signal_Init                                     25    25      0    1611
                                             10 COMMON     1     1      0
                                              0 BANK0     24    24      0
                    _Lcd_Create_Char
 ---------------------------------------------------------------------------------
 (1) _Lcd_Shift_Right                                      0     0      0     154
                   _Lcd_Send_Command
 ---------------------------------------------------------------------------------
 (1) _Lcd_Shift_Left                                       0     0      0     154
                   _Lcd_Send_Command
 ---------------------------------------------------------------------------------
 (1) _Lcd_Scroll_Text                                     26    24      2    3631
                                             24 BANK0     26    24      2
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                             _strlen
                            _strncpy
 ---------------------------------------------------------------------------------
 (2) _strncpy                                              8     4      4     326
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Progress_Bar_Init                               33    33      0    1635
                                             10 COMMON     1     1      0
                                              0 BANK0     32    32      0
                    _Lcd_Create_Char
 ---------------------------------------------------------------------------------
 (1) _Lcd_Progress_Bar                                    16    12      4    2382
                                             11 COMMON     2     2      0
                                              4 BANK0     14    10      4
                     _Lcd_Write_Char
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _Lcd_Move_Cursor_Right                                0     0      0     154
                   _Lcd_Send_Command
 ---------------------------------------------------------------------------------
 (1) _Lcd_Move_Cursor_Left                                 0     0      0     154
                   _Lcd_Send_Command
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     352
                                              5 COMMON     1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
                   _Lcd_Send_Command
 ---------------------------------------------------------------------------------
 (1) _Lcd_Display_Signal                                   2     0      2    3228
                                             24 BANK0      2     0      2
                          _Lcd_Clear
            _Lcd_Display_Custom_Char
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (1) _Lcd_Display_On                                       0     0      0     154
                   _Lcd_Send_Command
 ---------------------------------------------------------------------------------
 (1) _Lcd_Display_Off                                      0     0      0     154
                   _Lcd_Send_Command
 ---------------------------------------------------------------------------------
 (1) _Lcd_Display_Battery                                  9     7      2   11166
                                             61 BANK0      9     7      2
                          _Lcd_Clear
            _Lcd_Display_Custom_Char
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             22    16      6    7749
                                             41 BANK0     20    14      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             7     4      3    7330
                                             34 BANK0      7     4      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           15    13      2    7011
                                             20 BANK0     14    12      2
                               _dtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   9     7      2     989
                                              6 COMMON     5     3      2
                                              0 BANK0      4     4      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     700
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                12    10      2    4515
                                              8 BANK0     12    10      2
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  7     4      3    2347
                                             11 COMMON     3     0      3
                                              4 BANK0      4     4      0
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     6      1    1149
                                              8 COMMON     3     2      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     834
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                              7 COMMON     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_Display_Custom_Char                              1     1      0     154
                                              4 COMMON     1     1      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            1     1      0     154
                                              5 COMMON     1     1      0
                   _Lcd_Send_Command
 ---------------------------------------------------------------------------------
 (1) _Lcd_Center_Text                                      8     6      2    4290
                                             12 COMMON     1     1      0
                                             24 BANK0      7     5      2
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___awdiv
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               5     3      2     242
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              9     5      4    1060
                                              6 COMMON     5     1      4
                                              0 BANK0      4     4      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     1      2    1089
                                             11 COMMON     1     1      0
                                             22 BANK0      2     0      2
                     _Lcd_Write_Char
                               _itoa (ARG)
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       5     4      1    1711
                                              5 COMMON     5     4      1
                   _Lcd_Send_Command
 ---------------------------------------------------------------------------------
 (1) _Lcd_Blink_On                                         0     0      0     154
                   _Lcd_Send_Command
 ---------------------------------------------------------------------------------
 (1) _Lcd_Blink_Off                                        0     0      0     154
                   _Lcd_Send_Command
 ---------------------------------------------------------------------------------
 (1) _Lcd_Battery_Init                                    57    57      0    1707
                                             10 COMMON     1     1      0
                                              0 BANK0     56    56      0
                    _Lcd_Create_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Create_Char                                      5     4      1    1539
                                              5 COMMON     5     4      1
                   _Lcd_Send_Command
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0     132
                                              2 COMMON     2     2      0
                   _Lcd_Enable_Pulse
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Send_Command                                     2     2      0     154
                                              3 COMMON     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (4) _Lcd_Cmd                                              1     1      0     110
                                              2 COMMON     1     1      0
                   _Lcd_Enable_Pulse
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             2     2      0      88
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _Lcd_Enable_Pulse                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Backlight_On                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Backlight_Off                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Backlight_Off
   _Lcd_Backlight_On
   _Lcd_Battery_Init
     _Lcd_Create_Char
       _Lcd_Send_Command
         _Lcd_Cmd
           _Lcd_Enable_Pulse
           _Lcd_Port
       _Lcd_Write_Char
         _Lcd_Enable_Pulse
         _Lcd_Port
   _Lcd_Blink_Off
     _Lcd_Send_Command
   _Lcd_Blink_On
     _Lcd_Send_Command
   _Lcd_Center_Text
     _Lcd_Set_Cursor
       _Lcd_Send_Command
     _Lcd_Write_String
       _Lcd_Write_Char
       _itoa (ARG)
         ___awdiv
           ___wmul (ARG)
         ___wmul
     ___awdiv
     _strlen
   _Lcd_Clear
     _Lcd_Send_Command
   _Lcd_Create_Char
   _Lcd_Display_Battery
     _Lcd_Clear
     _Lcd_Display_Custom_Char
       _Lcd_Write_Char
     _Lcd_Set_Cursor
     _Lcd_Write_String
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
           _read_prec_or_width
             ___wmul
   _Lcd_Display_Custom_Char
   _Lcd_Display_Off
     _Lcd_Send_Command
   _Lcd_Display_On
     _Lcd_Send_Command
   _Lcd_Display_Signal
     _Lcd_Clear
     _Lcd_Display_Custom_Char
     _Lcd_Set_Cursor
     _Lcd_Write_String
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
     _Lcd_Send_Command
   _Lcd_Move_Cursor_Left
     _Lcd_Send_Command
   _Lcd_Move_Cursor_Right
     _Lcd_Send_Command
   _Lcd_Progress_Bar
     _Lcd_Write_Char
     ___awdiv
     ___wmul
   _Lcd_Progress_Bar_Init
     _Lcd_Create_Char
   _Lcd_Scroll_Text
     _Lcd_Set_Cursor
     _Lcd_Write_String
     _strlen
     _strncpy
   _Lcd_Set_Cursor
   _Lcd_Shift_Left
     _Lcd_Send_Command
   _Lcd_Shift_Right
     _Lcd_Send_Command
   _Lcd_Signal_Init
     _Lcd_Create_Char
   _Lcd_Write_Float
     _Lcd_Write_String
     _ftoa
       ___flge
       ___flmul
         __Umul8_16
         ___xxtofl (ARG)
       ___flneg
       ___flsub
         ___fladd
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _itoa
   _Lcd_Write_Integer
     _Lcd_Write_String
     _itoa
   _Lcd_Write_Padded_Integer
     _Lcd_Write_String
     _sprintf
   _Lcd_Write_String
   ___fladd
   ___flge
   _initMain
     _internal_32

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     48      4D       5       96.2%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     34      4C       7       95.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      4C      11       95.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0     143      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     143      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              50      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24              50      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25              20      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sun Dec 15 00:15:18 2024

              ??_Lcd_Backlight_On 0070               ??_Lcd_Backlight_Off 0070                                l67 138C  
                    ___awdiv@sign 0021               ___wmul@multiplicand 0072               __Umul8_16@word_mpld 0076  
                ?_Lcd_Write_Float 0059                               l110 1335                               l211 1420  
                             l220 15C9                               l214 13A4                               l312 12FA  
                             l400 14CA                               l208 0FFF                               l153 1595  
                             l321 130E                               l217 143A                               l330 12F2  
                             l162 1369                               l234 1561                               l306 0049  
                             l171 1450                               l315 1309                               l156 132C  
                             l172 1456                               l324 1313                               l309 12FF  
                             l165 1358                               l237 1323                               l229 085B  
                             l318 1304                               l190 1318                               l327 12F5  
                             l159 1340                               l175 1604                               l184 13EE  
                             l248 17AC                               l178 13D5                               l290 0C87  
                             l258 0BE1                               l602 098C                               l275 0AA3  
                             l187 131D                               l196 0B33                               l198 0B3D  
                             l551 08BB                               l703 011D                               l199 0B3D  
                             l720 01AF                               l712 0255                               l801 0410  
                             l705 00FB                               l730 01F3                               l299 167C  
                             l564 17FF                               l724 01D1                               l741 024E  
                             l733 022B                               l902 0DDD                               l398 14B6  
                             l910 091B                               l814 14FD                               l742 0255  
                             l807 0484                               l584 0A16                               l576 09A9  
                             l816 150D                               l592 098C                               l745 14EA  
                             l841 0D31                               l579 09FD                               l932 1472  
                             l588 134B                               l852 0CFD                               l925 0EBF  
                             l917 0E06                               l861 14AB                               l853 0D09  
                             l845 0CE3                               l951 170B                               l919 0E10  
                             l599 0977                               l839 0CAA                               l881 168F  
                             l962 0004                               l939 137A                               l795 0490  
                             l699 009F                               l884 16B0                               l893 0D58  
                             l886 16BB                               l959 1532                               l968 1407  
                             l889 0D5A                               l978 163F                               _RD2 007A  
                             _RD3 007B                               _RD4 007C                               _RD5 007D  
                             _RD6 007E                               _RD7 007F                               _abs 136A  
                             _pad 167D                      ___awmod@sign 0076                               wreg 0009  
                    ___flmul@aexp 0032                      ___flmul@bexp 0033                      ___flmul@sign 002D  
                    ___flmul@temp 0038                      ___flmul@prod 0034      Lcd_Progress_Bar@total_blocks 0030  
                    ___fltol@exp1 0043         __end_of_Lcd_Backlight_Off 12F3                              ?_abs 0077  
                            l3000 03C6                              l3010 03E5                              l3002 03CD  
                            l3020 03F9                              l3012 03EC                              l3004 03D9  
                            l3102 1459                              l3030 0422                              l3022 040D  
                            l3006 03E0                              l3014 03F0                              l3120 1441  
                            l2400 17AD                              l2320 16C1                              l3104 145E  
                            l3200 14A3                              l3040 0459                              l3032 0426  
                            l3016 03F4                              l3008 03E4                              l3112 132D  
                            l3122 1449                              l3130 13DF                              l3210 1401  
                            l3114 134C                              l2410 17BD                              l2402 17AE  
                            l2330 1702                              l2322 16C6                              l3106 1466  
                            l3050 0481                              l3042 0467                              l3034 043E  
                            l3026 0415                              l3018 03F5                              l3124 1452  
                            l3132 13E4                              l3204 13EF                              l3300 1598  
                            l3116 1350                              l2420 17D4                              l2412 17C2  
                            l2404 17B2                              l2324 16CB                              l2340 1524  
                            l2500 0D85                              l3108 1470                              l3052 0482  
                            l3044 0470                              l3028 041A                              l3036 0442  
                            l3060 0C8E                              l3134 1534                              l3118 143C  
                            l3126 13D6                              l3206 13F4                              l3302 15A4  
                            l3150 131F                              l2422 17D8                              l2414 17C8  
                            l2430 17F1                              l2406 17B7                              l2326 16D5  
                            l2318 16BC                              l2334 1510                              l2510 0DBC  
                            l2502 0D95                              l2350 14C0                              l2342 14AC  
                            l3310 179A                              l3222 1624                              l3214 1606  
                            l3054 0488                              l3046 0472                              l3038 044F  
                            l3070 0CBB                              l3062 0C92                              l3230 137B  
                            l3144 1546                              l3136 1538                              l3128 13D7  
                            l2360 0862                              l3208 13F8                              l3304 15BB  
                            l2432 17F6                              l2424 17E2                              l2416 17CB  
                            l2408 17B9                              l2328 16F3                              l2336 1513  
                            l2440 1683                              l2504 0DA3                              l2512 0DC1  
                            l2352 14C6                              l2344 14AE                              l3400 0C79  
                            l3240 15CA                              l3320 0B5E                              l3312 17A0  
                            l3224 162B                              l3216 1609                              l3048 047D  
                            l2600 00B6                              l3080 0CDC                              l3072 0CBE  
                            l3064 0CA2                              l3232 137E                              l3146 1550  
                            l3138 1544                              l2370 0876                              l2362 0867  
                            l2434 17FB                              l2426 17E6                              l2418 17D0  
                            l2338 151F                              l2450 16A2                              l2442 1689  
                            l2514 0DC7                              l2506 0DAA                              l2346 14B2  
                            l2530 08E6                              l2522 08BE                              l3402 0C7F  
                            l3250 15FC                              l3242 15CE                              l3330 0B9D  
                            l3322 0B83                              l3314 17A6                              l3306 175C  
                            l3226 162F                              l3218 160D                              l3410 1676  
                            l2610 00C0                              l2602 00B8                              l3090 0D0B  
                            l3082 0CEA                              l3074 0CC9                              l3066 0CB2  
                            l3058 0C89                              l3234 1386                              l3252 12F3  
                            l2540 1337                              l3148 1554                              l2380 088A  
                            l2372 0878                              l2364 0869                              l2356 085C  
                            l2428 17EB                              l2452 16B5                              l2444 168D  
                            l2516 0DCB                              l2508 0DAF                              l2348 14BB  
                            l2532 08FB                              l2524 08C0                              l3260 1300  
                            l3420 002E                              l3412 000B                              l3244 15D5  
                            l3340 0BCA                              l3332 0BAC                              l3324 0B86  
                            l3316 0B3E                              l3308 1794                              l3228 1633  
                            l3404 1640                              l2700 01E5                              l2620 00CA  
                            l2612 00C2                              l2604 00BA                              l3092 0D1F  
                            l3084 0CF3                              l3076 0CD0                              l3236 1388  
                            l3254 12F0                              l2470 1324                              l2462 1563  
                            l2542 1339                              l3350 0A7F                              l2390 08A7  
                            l2382 088E                              l2374 087E                              l2366 086D  
                            l2358 085E                              l2454 136A                              l2446 1693  
                            l2438 167F                              l2518 0DD2                              l2526 08D1  
                            l2534 0903                              l3262 1305                              l3422 0034  
                            l3414 0014                              l3246 15E0                              l3342 0BCE  
                            l3334 0BBA                              l3326 0B8A                              l3318 0B43  
                            l3270 1319                              l3406 166A                              l2710 01F8  
                            l2702 01E6                              l2630 0103                              l2614 00C4  
                            l2606 00BC                              l2622 00CC                              l2550 0053  
                            l3094 0D24                              l3086 0CF7                              l3078 0CD4  
                            l3238 138A                              l2472 1326                              l2464 156B  
                            l3360 0A9D                              l3352 0A85                              l3256 12FB  
                            l2384 089D                              l2376 0881                              l2392 08AD  
                            l2368 0872                              l2456 136E                              l2448 169D  
                            l2480 0D41                              l2536 0917                              l2528 08D9  
                            l2800 0E9D                              l3192 1491                              l3424 003F  
                            l3416 001C                              l3248 15E4                              l3264 130A  
                            l3344 0BD3                              l3336 0BBF                              l3328 0B8F  
                            l3408 1670                              l2720 0230                              l2712 01FD  
                            l2704 01EA                              l2632 0105                              l2640 0117  
                            l2624 00CD                              l2616 00C6                              l2608 00BE  
                            l2560 0067                              l2552 0054                              l2544 004A  
                            l3096 0D28                              l3088 0D01                              l3280 1432  
                            l2474 132A                              l2466 1579                              l2810 135A  
                            l3354 0A8B                              l3346 0A17                              l3258 12F6  
                            l2394 08B2                              l2386 08A1                              l2378 0886  
                            l2458 136F                              l2490 0D5E                              l2482 0D46  
                            l3194 1495                              l3370 0C05                              l3362 0BE2  
                            l3418 0023                              l3266 130F                              l3338 0BC4  
                            l3290 0827                              l3282 0806                              l2730 0247  
                            l2722 0235                              l2714 0205                              l2706 01F0  
                            l2650 0137                              l2642 0121                              l2634 0109  
                            l2626 00E5                              l2618 00C8                              l2570 007B  
                            l2554 0059                              l2562 0069                              l2546 004D  
                            l3098 0D29                              l2468 1587                              l2812 13BE  
                            l3356 0A91                              l3348 0A79                              l2396 08B7  
                            l2388 08A2                              l2492 0D61                              l2484 0D4A  
                            l2476 0D34                              l2804 0EA7                              l3196 1497  
                            l3380 0C37                              l3372 0C13                              l3364 0BF0  
                            l3292 082D                              l3284 0813                              l3268 1314  
                            l2740 14EE                              l2732 0249                              l2724 023D  
                            l2716 0209                              l2660 0149                              l2652 013B  
                            l2644 0126                              l2636 010A                              l2628 00FF  
                            l2580 008C                              l2572 007D                              l2564 0071  
                            l2556 005E                              l2548 004F                              l2900 0967  
                            l3700 0FF7                              l2814 13C0                              l3358 0A97  
                            l2494 0D65                              l2486 0D4F                              l2478 0D36  
                            l3198 1499                              l3390 0C53                              l3382 0C3B  
                            l3374 0C17                              l3366 0BF3                              l3294 0835  
                            l3286 0816                              l2742 14F5                              l2734 0250  
                            l2726 0242                              l2718 0227                              l2670 0193  
                            l2662 014A                              l2654 013F                              l2638 0113  
                            l2590 00A9                              l2582 0094                              l2574 0081  
                            l2566 0074                              l2558 0066                              l2910 0981  
                            l3702 0FFE                              l3710 139D                              l3278 1421  
                            l2496 0D7F                              l2488 0D54                              l2760 0E04  
                            l2752 0DE0                              l3392 0C59                              l3384 0C49  
                            l3376 0C25                              l3368 0C01                              l3296 0842  
                            l3288 0825                              l2744 14F9                              l2920 025A  
                            l2736 0254                              l2728 0243                              l2680 01BC  
                            l2672 0199                              l2664 0153                              l2656 0143  
                            l2648 012F                              l2592 00AE                              l2584 0095  
                            l2576 0082                              l2568 007A                              l2912 14CB  
                            l3640 0AB8                              l3720 04B5                              l3712 0491  
                            l2498 0D81                              l2770 0E28                              l2762 0E07  
                            l2754 0DF1                              l3394 0C61                              l3386 0C4D  
                            l3378 0C29                              l3298 0847                              l2850 09A1  
                            l2746 1504                              l2738 14EC                              l2930 026B  
                            l2922 025C                              l2690 01D5                              l2674 019E  
                            l2658 0145                              l2666 0158                              l2594 00B0  
                            l2578 0087                              l2586 0097                              l2914 14CE  
                            l2906 096E                              l3650 0ADB                              l3642 0ABE  
                            l3634 0AA4                              l3706 1408                              l3810 0647  
                            l3802 0601                              l3730 04E5                              l3722 04C2  
                            l3714 0494                              l2780 0E44                              l2772 0E33  
                            l2756 0DF9                              l3396 0C67                              l3388 0C50  
                            l2860 09E5                              l2852 09BD                              l2748 1509  
                            l2940 0284                              l2932 0273                              l2924 0260  
                            l2692 01D8                              l2684 01C5                              l2668 016F  
                            l2676 01A7                              l2596 00B2                              l2588 00A5  
                            l2908 097C                              l3660 0B13                              l3652 0AFF  
                            l3644 0AC2                              l3636 0AAD                              l3708 138D  
                            l3804 060A                              l3812 065E                              l3740 0522  
                            l3732 04F5                              l3724 04C5                              l3716 04A0  
                            l2782 0E4E                              l2774 0E37                              l2766 0E13  
                            l2758 0E00                              l3398 0C6C                              l2862 0A13  
                            l2854 09C5                              l2950 029B                              l2942 0288  
                            l2934 0275                              l2926 0261                              l2918 0256  
                            l2870 1349                              l2694 01DA                              l2686 01CC  
                            l2678 01B7                              l2598 00B4                              l3662 0B25  
                            l3654 0B03                              l3638 0AB1                              l3646 0AC7  
                            l3670 0ED3                              l3902 07B1                              l3830 069C  
                            l3814 0667                              l3806 061D                              l3750 054E  
                            l3742 0525                              l3734 04F8                              l3726 04C8  
                            l3718 04AF                              ?_pad 007B                              l2792 0E7A  
                            l2784 0E58                              l2776 0E38                              l2768 0E23  
                            l2864 0A15                              l2856 09C9                              l2848 098D  
                            l2952 029D                              l2944 0289                              l2936 027D  
                            l2928 0266                              l2872 134B                              l2696 01DF  
                            l2688 01D0                              l3664 0B29                              l3656 0B09  
                            l3648 0ACB                              l3680 0F37                              l3672 0F01  
                            l3904 07B4                              l3840 06C8                              l3832 06A1  
                            l3824 0678                              l3816 066F                              l3808 062A  
                            l3760 0561                              l3744 0534                              l3736 0507  
                            l3728 04D8                              l2794 0E8B                              l2786 0E64  
                            l2778 0E3D                              l2858 09E1                              l2970 02F5  
                            l2962 02B8                              l2954 02A5                              l2946 028E  
                            l2938 0282                              l2698 01E1                              l2890 094B  
                            l2882 092F                              l3658 0B0E                              l3690 0F90  
                            l3682 0F47                              l3674 0F18                              l3666 0EC0  
                            l3906 07BC                              l3850 06ED                              l3842 06CE  
                            l3834 06B0                              l3826 0681                              l3818 0675  
                            l3770 0578                              l3762 0566                              l3746 053A  
                            l3738 0513                              l2796 0E93                              l2788 0E71  
                            l2980 0339                              l2972 030D                              l2964 02C3  
                            l2956 02AA                              l2948 0293                              l2868 1341  
                            l2892 094F                              l2884 0940                              l2876 091C  
                            l3692 0F96                              l3676 0F1F                              l3684 0F71  
                            l3668 0EC3                              l3860 0710                              l3852 06F0  
                            l3844 06D6                              l3836 06BF                              l3828 0690  
                            l3780 05A8                              l3772 0585                              l3764 0575  
                            l3756 0551                              l3748 0542                              l2990 036B  
                            l2982 0340                              l2974 031A                              l2966 02D0  
                            l2958 02AF                              l2886 0941                              l2878 0926  
                            l3694 0F9A                              l3686 0F82                              l3678 0F23  
                            l3870 0733                              l3862 071D                              l3854 06F8  
                            l3846 06DC                              l3838 06C5                              l3790 05BF  
                            l3774 0588                              l3758 055E                              l2992 037D  
                            l2984 034B                              l2976 0327                              l2968 02E8  
                            l2888 0949                              l3696 0FB6                              l3688 0F86  
                            l3880 0766                              l3872 073C                              l3864 0720  
                            l3856 0704                              l3848 06E0                              l3792 05CC  
                            l3776 058D                              l2994 0388                              l2986 0352  
                            l2978 032E                              l2898 0957                              l3698 0FE8  
                            l3890 0781                              l3874 0744                              l3866 0723  
                            l3858 0707                              l3794 05D1                              l3786 05AB  
                            l3778 059C                              l2996 039A                              l2988 0364  
                            l3876 074A                              l3884 076C                              l3796 05E0  
                            l3788 05B4                              l2998 03AF                              l3894 0791  
                            l3886 076F                              l3878 0759                              l3798 05E9  
                            l3896 079E                              l3888 077E                              l3898 07AB  
                            STR_1 1838                              STR_2 1871                              STR_3 1876  
                            STR_4 1800                              STR_5 1856                              STR_6 1843  
                            STR_7 1827                              STR_8 186C                              STR_9 184D  
                            u2200 16C6                              u3000 01BC                              u2201 16C5  
                            u3001 01BB                              u2210 16D5                              u2211 16D4  
                            u2300 087E                              u2220 16F3                              u3100 0209  
                            u3020 01D0                              u2301 087D                              u2221 16F2  
                            u3101 0208                              u3021 01CF                              u2230 1532  
                            u3110 0218                              u3030 01D5                              u2231 1531  
                            u3031 01D4                              u3015 01C6                              u2320 088E  
                            u2400 17C8                              u2240 14B2                              u4000 085B  
                            u3200 1509                              u3120 0227                              u3040 01DF  
                            u2321 088D                              u2401 17C7                              u2225 16EF  
                            u2241 14B1                              u4001 085A                              u3201 1508  
                            u3121 0226                              u3041 01DE                              u3210 0DF1  
                            u4010 1766                              u3130 0230                              u3050 01E5  
                            u2315 0882                              u3211 0DF0                              u3131 022F  
                            u3115 0214                              u3051 01E4                              u4100 0A2F  
                            u2340 089D                              u2420 17D8                              u2500 16B5  
                            u3220 0E28                              u4020 1774                              u3140 0235  
                            u3060 01EA                              u2341 089C                              u2421 17D7  
                            u2501 16B4                              u3221 0E27                              u4005 0857  
                            u3141 0234                              u3061 01E9                              u4110 0A3D  
                            u2430 17E2                              u2510 136E                              u2190 16C1  
                            u2270 14C6                              u3230 0E37                              u4030 1782  
                            u3150 0242                              u3070 01F0                              u2335 088F  
                            u2431 17E1                              u2415 17CC                              u2511 136D  
                            u2191 16C0                              u2271 14C5                              u2255 14B7  
                            u3231 0E36                              u3151 0241                              u3071 01EF  
                            u2520 1569                              u4120 0A4B                              u2360 08AD  
                            u2280 0862                              u3240 0E4E                              u4200 0C37  
                            u4040 1790                              u3160 0247                              u3080 01F7  
                            u3400 093C                              u2521 1566                              u2361 08AC  
                            u2345 0899                              u2281 0861                              u2265 14BC  
                            u3241 0E4D                              u4201 0C36                              u3161 0246  
                            u3081 01F6                              u2610 1593                              u4130 0A59  
                            u2370 08B2                              u2290 086D                              u2450 17F1  
                            u3250 0E58                              u4210 0C49                              u4050 0B9D  
                            u3330 09A1                              u3170 0254                              u3090 01FD  
                            u3410 094F                              u2611 1590                              u2371 08B1  
                            u2355 08A3                              u2291 086C                              u2451 17F0  
                            u2435 17DE                              u3251 0E57                              u4211 0C48  
                            u4051 0B9C                              u3331 09A0                              u3171 0253  
                            u3091 01FC                              u3411 094E                              u4140 0A67  
                            u2460 17F6                              u2380 17B2                              u2700 0DBC  
                            u3260 0E8B                              u4060 0BAC                              u4220 164A  
                            u3340 09BD                              u3180 14F9                              u3500 0266  
                            u3420 0956                              u2605 158A                              u2461 17F5  
                            u2445 17E7                              u2381 17B1                              u2701 0DBB  
                            u3261 0E8A                              u4205 0C33                              u4061 0BAB  
                            u3341 09BC                              u3181 14F8                              u3501 0265  
                            u3421 0955                              u3405 0938                              u2550 1577  
                            u2534 156B                              u4150 0A75                              u2390 17BD  
                            u2470 1683                              u2710 0DC1                              u2630 0D3B  
                            u4070 0BBA                              u4230 1658                              u3350 09C9  
                            u3510 026B                              u2551 1574                              u2391 17BC  
                            u2471 1682                              u2711 0DC0                              u2631 0D39  
                            u4215 0C45                              u4071 0BB9                              u4055 0B99  
                            u3351 09C8                              u3511 026A                              u2624 1595  
                            u2480 168D                              u2720 0DC7                              u2640 0D3C  
                            u4160 0BF0                              u4080 0BE1                              u4240 1666  
                            u3360 09E5                              u3600 03BC                              u3520 0288  
                            u2800 0087                              u3440 0966                              u4400 0B3D  
                            u2545 156E                              u2481 168C                              u2721 0DC6  
                            u2705 0DB8                              u4161 0BEF                              u4081 0BE0  
                            u4065 0BA8                              u3361 09E4                              u3521 0287  
                            u2801 0086                              u3441 0965                              u4401 0B3C  
                            u4090 0A21                              u2490 16B0                              u2650 0D46  
                            u2730 08D1                              u4170 0C01                              u4250 0023  
                            u3370 0A13                              u3530 028E                              u2810 008C  
                            u3450 096D                              u4410 0F18                              u3275 135D  
                            u2491 16AF                              u2651 0D45                              u2731 08D0  
                            u4171 0C00                              u4251 0022                              u4075 0BB6  
                            u3371 0A12                              u3195 14FE                              u3531 028D  
                            u2811 008B                              u3451 096C                              u3435 0958  
                            u4411 0F17                              u2580 1585                              u2564 1579  
                            u2660 0D4F                              u2740 0917                              u4180 0C13  
                            u4260 0034                              u3700 0426                              u3540 0293  
                            u3380 1349                              u2900 011D                              u2820 00A5  
                            u4420 0F90                              u4500 0732                              u2581 1582  
                            u3285 13C3                              u2661 0D4E                              u2741 0916  
                            u4181 0C12                              u4165 0BEC                              u4261 0033  
                            u4085 0BDD                              u3701 0425                              u3605 03B8  
                            u3541 0292                              u3381 1348                              u2901 011C  
                            u2821 00A4                              u4405 0B39                              u4421 0F8F  
                            u4501 0731                              u2670 0DA3                              u4190 0C25  
                            u3710 0434                              u3630 03E4                              u3550 02AA  
                            u2910 0121                              u2830 00A9                              u2750 0053  
                            u3470 097C                              u3390 0926                              u4510 077A  
                            u4430 0575                              u2575 157C                              u2495 16AC  
                            u2671 0DA2                              u4191 0C24                              u4175 0BFD  
                            u3375 0A0F                              u3631 03E3                              u3615 03C7  
                            u3551 02A9                              u2911 0120                              u2831 00A8  
                            u2751 0052                              u3471 097B                              u3391 0925  
                            u4431 0574                              u2680 0DAA                              u3720 044F  
                            u3560 02AF                              u2920 0126                              u2840 00E5  
                            u2760 0059                              u3480 0981                              u4520 0790  
                            u4440 059C                              u2681 0DA9                              u4185 0C0F  
                            u3721 044E                              u3625 03DA                              u3561 02AE  
                            u2921 0125                              u2841 00E4                              u2761 0058  
                            u3481 0980                              u3465 096F                              u4521 078F  
                            u4505 072E                              u4441 059B                              u2594 1587  
                            u2690 0DAF                              u3730 0467                              u3650 03F4  
                            u3490 0260                              u2930 013B                              u2850 00EE  
                            u2770 005E                              u3810 0CE9                              u4370 0AB1  
                            u4450 05E0                              u2691 0DAE                              u2675 0D9F  
                            u4195 0C21                              u3731 0466                              u3715 0430  
                            u3651 03F3                              u3491 025F                              u2931 013A  
                            u2851 00EC                              u2771 005D                              u3811 0CE8  
                            u4371 0AB0                              u4451 05DF                              u4435 0571  
                            u3900 1441                              u3740 0481                              u3660 03F9  
                            u2940 013F                              u2860 00EF                              u2780 007A  
                            u4380 0AB8                              u4460 0600                              u3901 1440  
                            u3741 0480                              u3725 044B                              u3661 03F8  
                            u3645 03E6                              u2941 013E                              u2845 00E1  
                            u2781 0079                              u3805 0CDD                              u4381 0AB7  
                            u4525 078C                              u4461 05FF                              u4445 0598  
                            u3910 13EE                              u3670 040D                              u3590 03A5  
                            u2950 0149                              u2870 00FF                              u2790 0081  
                            u3830 0CF7                              u3750 0C8E                              u4390 0B09  
                            u4470 065E                              u3911 13ED                              u3735 0463  
                            u3671 040C                              u3575 0328                              u2951 0148  
                            u2871 00FE                              u2791 0080                              u3831 0CF6  
                            u3751 0C8D                              u4391 0B08                              u4471 065D  
                            u4455 05DC                              u4607 050D                              u3680 0414  
                            u2880 0109                              u3840 0CFD                              u3760 0C92  
                            u4480 06B0                              u3681 0413                              u3585 0353  
                            u2881 0108                              u3841 0CFC                              u3825 0CED  
                            u3761 0C91                              u4481 06AF                              u4617 051C  
                            u4537 049A                              u3930 1561                              u3690 041A  
                            u2970 016F                              u3850 0D01                              u3770 0CB2  
                            u4490 06BB                              u3931 1560                              u3691 0419  
                            u3595 03A1                              u2971 016E                              u3851 0D00  
                            u3771 0CB1                              u4707 06E6                              u4627 052E  
                            u4547 04A9                              u2980 019E                              u3860 0D15  
                            u3925 153B                              u2981 019D                              u2973 016B  
                            u2965 014D                              u4717 06FE                              u4485 06AC  
                            u4637 0548                              u4557 04BB                              u2990 01B7  
                            u3870 0D24                              u3790 0CCF                              u3935 155D  
                            u4807 15E5                              u2991 01B6                              u2895 010D  
                            u3871 0D23                              u3791 0CCE                              u4727 0716  
                            u4647 0557                              u4567 04CE                              u3960 1401  
                            u3880 0D28                              u3961 1400                              u4817 15FF  
                            u3881 0D27                              u3865 0D11                              u3785 0CC3  
                            u4737 075F                              u4657 057E                              u4577 04DE  
                            u3890 1470                              u3970 1623                              _SCS0 04C8  
                            u4827 1353                              u3891 146F                              u3971 1622  
                            u4747 07A4                              u4667 05A2                              u4587 04EE  
                            _SCS1 04C9                              u3980 162A                              u4837 1327  
                            u3981 1629                              u4757 07C2                              u4677 05C5  
                            u4597 04FE                              u3990 163F                              u3991 163E  
                            u4767 1381                              u4687 0623                              u4777 083B  
                            u4697 0696                              u4787 15D1                              u4797 15DC  
             Lcd_Write_String@str 0036                              abs@a 0077                 ?_Lcd_Write_String 0036  
                            _dbuf 01A0                              _main 0491                              _dtoa 0D32  
                            _ftoa 0EC0                              _itoa 0AA4                              _prec 006A  
                            pad@i 0025                              pad@p 007C                              fsr0h 0005  
                            fsr1h 0007                              indf0 0000                              fsr0l 0004  
                            indf1 0001                              fsr1l 0006                              btemp 007E  
            __end_of_Lcd_Blink_On 1300                              start 0002                ??_Lcd_Write_String 007B  
            Lcd_Battery_Init@full 0050                   __end_of_Lcd_Cmd 1341     Lcd_Write_Padded_Integer@width 005F  
      Lcd_Progress_Bar_Init@F6642 00DC        Lcd_Progress_Bar_Init@F6644 00D4        Lcd_Progress_Bar_Init@F6646 0168  
      Lcd_Progress_Bar_Init@F6648 0160                             ??_abs 0079                             ??_pad 0024  
               _Lcd_Write_Integer 1408            ??_Lcd_Move_Cursor_Left 0075                     ___fltol@sign1 0042  
                 __end_of___fladd 0256                             ?_main 0070                             ?_dtoa 0028  
                           ?_ftoa 0044                             ?_itoa 0024                   __end_of___awdiv 08BC  
                 __end_of___flneg 134C                             STR_10 1867                             STR_11 185F  
                 __end_of___awmod 1800                   __end_of___flmul 0491                   __end_of___flsub 14EB  
                 __end_of___fltol 098D                   ___awdiv@divisor 0076                             _IRCF0 04CB  
                           _IRCF1 04CC                             _IRCF2 04CD                             _IRCF3 04CE  
              ?_Lcd_Write_Integer 0038                   ___awdiv@counter 0020                      vfpfcnvrt@fmt 0034  
                           _PORTD 000F                             _TRISD 008F        __end_of_Lcd_Display_Signal 004A  
           Lcd_Battery_Init@F6661 0150             Lcd_Battery_Init@F6663 0148             Lcd_Battery_Init@F6671 0128  
           Lcd_Battery_Init@F6665 0140             Lcd_Battery_Init@F6659 0158             Lcd_Battery_Init@F6667 0138  
           Lcd_Battery_Init@F6669 0130                             _flags 006C               ??_Lcd_Write_Integer 007C  
             read_prec_or_width@c 0020               read_prec_or_width@n 0021                             _fputc 16BC  
                           _fputs 150E                             pad@fp 0027                             _width 0068  
                           _putch 0004                             main@a 00C4                             main@b 00D0  
                           main@c 00C8                             main@i 00CE                             dtoa@d 0028  
                           dtoa@i 0032                             dtoa@p 002E                             dtoa@s 0031  
                           dtoa@w 002F                             ftoa@f 0044                 ??_Lcd_Center_Text 007C  
                    main@progress 00CC             __end_of_Lcd_Blink_Off 12FB                             status 0003  
                           wtemp0 007E                   __end_of_sprintf 14AC                   __end_of_strncpy 1640  
                    ?_internal_32 0070                  __end_of_Lcd_Init 1605                  __end_of_Lcd_Port 1596  
                 __initialization 07CC                  _Lcd_Send_Command 1359                      __end_of_main 07CC  
                    __end_of_dtoa 0DDE                      __end_of_ftoa 1000                      __end_of_itoa 0B3E  
       __end_of_Lcd_Write_Integer 1421     Lcd_Display_Battery@percentage 005D        ??_Lcd_Write_Padded_Integer 007E  
               ??_Lcd_Create_Char 0076                            ??_main 0066                            ??_dtoa 002A  
                          ??_ftoa 0049                            ??_itoa 002A        __end_of_read_prec_or_width 091C  
         ??_Lcd_Move_Cursor_Right 0075                            ?_fputc 0070                            ?_fputs 0078  
                ___awdiv@dividend 0078       __end_of_Lcd_Display_Battery 0C88                 ?_Lcd_Battery_Init 0070  
                          ?_putch 0070                            _ANSELD 018F                 ??_Lcd_Display_Off 0075  
Lcd_Progress_Bar@fractional_block 002C                ??_Lcd_Battery_Init 007A   Lcd_Display_Custom_Char@location 0074  
                       ??_Lcd_Cmd 0072                     vfpfcnvrt@done 003E                            _SPLLEN 04CF  
                __end_of___xxtofl 0D32          Lcd_Progress_Bar@progress 0024                      vfprintf@cfmt 0047  
                          ___flge 098D                         ??___fladd 0020                            ___wmul 14AC  
                       ??___awdiv 007A                         ??___flneg 0074                         ??___awmod 0074  
                       ??___flmul 0028                         ??___flsub 007E                         ??___fltol 003E  
                __end_of_initMain 138D                    _Lcd_Display_On 1305              read_prec_or_width@ap 0076  
                ___awdiv@quotient 0022                   ___awmod@divisor 0070                   ___awmod@counter 0075  
                          pad@buf 007B                            dtoa@fp 002D                            _strlen 13EF  
                          fputc@c 0070                            fputs@c 0020                            fputs@i 0021  
                          fputs@s 0023                  Lcd_Write_Float@f 0059                            putch@c 0070  
                __end_of_vfprintf 1473                         ??_sprintf 004F                         ??_strncpy 0074  
                      ___flge@ff1 0070                        ___flge@ff2 0074                      ___xxtofl@arg 007A  
                    ___xxtofl@exp 0079                      ___xxtofl@val 0070                 ?_Lcd_Enable_Pulse 0070  
         __end_of__initialization 07FD                        ___flneg@f1 0070            Lcd_Battery_Init@level0 0020  
          Lcd_Battery_Init@level1 0028            Lcd_Battery_Init@level2 0030            Lcd_Battery_Init@level3 0038  
          Lcd_Battery_Init@level4 0040            Lcd_Battery_Init@level5 0048             _Lcd_Progress_Bar_Init 175C  
               __end_of_Lcd_Clear 1359                ??_Lcd_Enable_Pulse 0070                      ftoa@int_part 0056  
                      ___fltol@f1 003A                    __pcstackCOMMON 0070            __end_of_Lcd_Display_On 130A  
                    __pidataBANK1 13A5                      __pidataBANK2 170C                      __pidataBANK3 1473  
                   __end_of_fputc 170C                     __end_of_fputs 1533                     __end_of_putch 0005  
                  _Lcd_Set_Cursor 143B                      _Lcd_Blink_On 12FB   Lcd_Display_Battery@battery_char 0065  
                  _Lcd_Shift_Left 1314                         ?_Lcd_Init 0070                         ?_Lcd_Port 0070  
                         ??_fputc 0073                           ??_fputs 0079                           ??_putch 0070  
                      __pbssBANK0 0068                        __pbssBANK3 01A0       Lcd_Progress_Bar@full_blocks 002E  
              Lcd_Center_Text@len 003A                Lcd_Center_Text@row 003E                Lcd_Center_Text@str 0038  
               __end_of__Umul8_16 150E                        __pmaintext 0491                           ?___flge 0070  
                 ?_Lcd_Display_On 0070                           ?___wmul 0070            __end_of_Lcd_Set_Cursor 1457  
                _Lcd_Progress_Bar 0B3E                           ?_strlen 0070                   _Lcd_Center_Text 1596  
          __end_of_Lcd_Shift_Left 1319           _Lcd_Display_Custom_Char 131E                 ??_Lcd_Shift_Right 0075  
                       ?___xxtofl 0070                 ??_Lcd_Signal_Init 007A          Lcd_Signal_Init@no_signal 0020  
     Lcd_Write_Padded_Integer@buf 00A0                        ??_Lcd_Init 0075       Lcd_Write_Padded_Integer@num 005D  
                      ??_Lcd_Port 0070          __end_of_Lcd_Send_Command 136A                 ??_Lcd_Scroll_Text 003A  
                       ?_initMain 0070                    _Lcd_Write_Char 13BD                           _Lcd_Cmd 1336  
          ?_Lcd_Progress_Bar_Init 0070                _Lcd_Display_Signal 000B                   _Lcd_Create_Char 1533  
             ?_Lcd_Display_Signal 0038                           ___fladd 004A                           ___awdiv 085C  
                         ___flneg 1341                           ___awmod 17AD                           ___flmul 0256  
                         ___flsub 14CB                           ___fltol 091C                         ?_vfprintf 0042  
                 ?_Lcd_Set_Cursor 0075                           __ptext1 137B                           __ptext2 132D  
                         __ptext3 1421                           __ptext4 1408                           __ptext5 138D  
                         __ptext6 0EC0                           __ptext7 0AA4                           __ptext8 0C88  
                         __ptext9 091C                   _Lcd_Display_Off 1300             read_prec_or_width@fmt 0023  
                 ?_Lcd_Shift_Left 0070                        ??___xxtofl 0074                  ___awmod@dividend 0072  
           Lcd_Scroll_Text@buffer 003D              ??_Lcd_Display_Signal 007C     __end_of_Lcd_Move_Cursor_Right 1314  
                         _sprintf 148F                           clrloop0 0801            __end_of_Lcd_Write_Char 13D6  
                         _strncpy 1605              end_of_initialization 07FD                           ftoa@buf 01C0  
                         ftoa@ptr 0058                        ??_initMain 0070                           fputc@fp 0072  
                         itoa@buf 0024                           init_ram 0005                           itoa@ptr 0034  
                         fputs@fp 0078                           initloop 0006                _read_prec_or_width 08BC  
          Lcd_Display_Battery@buf 0060           Lcd_Display_Signal@level 0038               Lcd_Send_Command@cmd 0074  
               __end_of_vfpfcnvrt 0EC0               ?_read_prec_or_width 0076           __end_of_Lcd_Center_Text 15CA  
                vfpfcnvrt@convarg 003A                         Lcd_Port@a 0071                        ??_vfprintf 0045  
                    itoa@tmp_char 0031                           strlen@a 0073                           strlen@s 0070  
       ??_Lcd_Display_Custom_Char 0074                     ftoa@frac_part 0052                  _Lcd_Backlight_On 12F3  
                     ___fladd@grs 007B                     ___xxtofl@sign 0078              Lcd_Signal_Init@F6680 01E4  
            Lcd_Signal_Init@F6682 01DC              Lcd_Signal_Init@F6678 0120              ??_read_prec_or_width 0078  
                 ?_Lcd_Write_Char 0070           __end_of_Lcd_Create_Char 1562         ?_Lcd_Write_Padded_Integer 005D  
                     ___flmul@grs 002E                 ??_Lcd_Write_Float 007E                        main@smiley 00B0  
                       _Lcd_Clear 134C           __end_of_Lcd_Display_Off 1305                    __end_of___flge 0A17  
                     vfpfcnvrt@ap 0035                       vfpfcnvrt@cp 003F                       vfpfcnvrt@fp 0041  
                  __end_of___wmul 14CB                  _Lcd_Write_String 13D6                Lcd_Scroll_Text@len 004E  
              Lcd_Scroll_Text@str 0038             Lcd_Set_Cursor@address 0079             Lcd_Write_Float@status 005E  
                  __end_of_strlen 1408               start_initialization 07CC      Lcd_Progress_Bar_Init@block_1 0020  
    Lcd_Progress_Bar_Init@block_2 0028      Lcd_Progress_Bar_Init@block_3 0030                       __end_of_abs 137B  
                     __end_of_pad 16BC                        ftoa@status 0048          __end_of_Lcd_Progress_Bar 0BE2  
                   _Lcd_Blink_Off 12F6                  ??_Lcd_Display_On 0075                       vfprintf@fmt 0042  
    Lcd_Signal_Init@strong_signal 0030                        ?_Lcd_Clear 0070                          ??___flge 0078  
                 _Lcd_Shift_Right 1319                          ??___wmul 0074                  ?_Lcd_Center_Text 0038  
                 _Lcd_Signal_Init 1640                         __Umul8_16 14EB                       __pdataBANK1 00D4  
                     __pdataBANK2 0120                       __pdataBANK3 01D0                   Lcd_Write_Char@a 0073  
                 _Lcd_Scroll_Text 0806                          ??_strlen 0072                         ___fladd@a 0074  
                       ___fladd@b 0070                         ___flmul@a 0024                         ___flmul@b 0020  
                       ___flsub@a 0028                         ___flsub@b 002C                         ___latbits 0003  
                   __pcstackBANK0 0020                     __pcstackBANK1 00A0             Lcd_Progress_Bar@i_339 002A  
                Lcd_Scroll_Text@i 0050           ??_Lcd_Progress_Bar_Init 007A                 ?_Lcd_Send_Command 0070  
              _Lcd_Set_Cursor$261 0077                  ?_Lcd_Create_Char 0075                ??_Lcd_Send_Command 0073  
                        ?_Lcd_Cmd 0070                    ?_Lcd_Blink_Off 0070                     ??_internal_32 0070  
 Lcd_Progress_Bar_Init@block_full 0038                  ??_Lcd_Set_Cursor 0076                  _Lcd_Battery_Init 0A17  
                        ?___fladd 0070                         _ftoa$1014 004A                          ?___awdiv 0076  
                        ?___flneg 0070                          ?___awmod 0070                          ?___flmul 0020  
                        ?___flsub 0028                          ?___fltol 003A                  ?_Lcd_Display_Off 0070  
                      ?__Umul8_16 0070                  ??_Lcd_Shift_Left 0075          Lcd_Center_Text@start_col 003C  
                        ?_sprintf 0049        Lcd_Signal_Init@weak_signal 0028                          ?_strncpy 0070  
    __end_of_Lcd_Move_Cursor_Left 130F                    ___wmul@product 0074                          _LATDbits 010F  
         __end_of_Lcd_Shift_Right 131E                         clear_ram0 0800           __end_of_Lcd_Signal_Init 167D  
        __end_of_Lcd_Backlight_On 12F6           Lcd_Create_Char@location 0077                 Lcd_Progress_Bar@i 0028  
              main@battery_levels 00B8                          Lcd_Cmd@a 0072                  Lcd_Create_Char@i 0078  
                     ??_Lcd_Clear 0075           __end_of_Lcd_Scroll_Text 085C                         main@F6420 01D0  
                       main@F6417 00E4               __end_of_internal_32 1336                  _Lcd_Enable_Pulse 1324  
                       _vfpfcnvrt 0DDE                         main@a_169 00C6                         main@c_173 00CA  
__end_of_Lcd_Write_Padded_Integer 143B                 ___wmul@multiplier 0070               _Lcd_Display_Battery 0BE2  
                ??_Lcd_Write_Char 0072                   _Lcd_Write_Float 138D                          _Lcd_Init 15CA  
                        _Lcd_Port 1562                   ??_Lcd_Blink_Off 0075          __end_of_Lcd_Write_String 13EF  
           _Lcd_Move_Cursor_Right 130F              ?_Lcd_Display_Battery 005D                        vfprintf@ap 0044  
                      vfprintf@fp 0046                       ??__Umul8_16 0072                         itoa@value 0026  
                      ?_vfpfcnvrt 0034                     ?_Lcd_Blink_On 0070                        sprintf@fmt 0049  
                        ___xxtofl 0C88                          _dtoa$778 002B                          __ptext10 14CB  
                        __ptext11 004A                          __ptext20 1605                          __ptext12 1341  
                        __ptext21 175C                          __ptext13 0256                          __ptext30 148F  
                        __ptext22 0B3E                          __ptext14 14EB                          __ptext31 1457  
                        __ptext23 130F                          __ptext15 098D                          __ptext40 136A  
                        __ptext32 0DDE                          __ptext24 130A                          __ptext16 1640  
                        __ptext41 17AD                          __ptext33 08BC                          __ptext25 15CA  
                        __ptext17 1319                          __ptext50 12F6                          __ptext42 131E  
                        __ptext34 14AC                          __ptext26 000B                          __ptext18 1314  
                        __ptext51 0A17                          __ptext43 134C                          __ptext35 0D32  
                        __ptext27 1305                          __ptext19 0806                          __ptext52 1533  
                        __ptext44 1596                          __ptext36 167D                          __ptext28 1300  
                        __ptext53 13BD                          __ptext45 13EF                          __ptext37 150E  
                        __ptext29 0BE2                          __ptext54 1359                          __ptext46 085C  
                        __ptext38 16BC                          __ptext55 1336                          __ptext47 13D6  
                        __ptext39 0004                          __ptext56 1562                          __ptext48 143B  
                        __ptext57 1324                          __ptext49 12FB                          __ptext58 12F3  
                        __ptext59 12F0                          _initMain 137B            Lcd_Create_Char@charmap 0075  
               ?_Lcd_Progress_Bar 0024             ??_Lcd_Display_Battery 005F                  ?_Lcd_Shift_Right 0070  
                     _internal_32 132D                  ?_Lcd_Signal_Init 0070                ??_Lcd_Progress_Bar 007B  
        ?_Lcd_Display_Custom_Char 0070                  ?_Lcd_Scroll_Text 0038              Lcd_Write_Integer@buf 003A  
                        _vfprintf 1457           __end_of_Lcd_Write_Float 13A5                    ??_Lcd_Blink_On 0075  
            _Lcd_Move_Cursor_Left 130A          _Lcd_Write_Padded_Integer 1421                          itoa@base 0028  
                  __pstringtext10 1871                    __pstringtext11 1876                    __pstringtext12 0000  
                        itoa@ptr1 0032          __end_of_Lcd_Battery_Init 0AA4            ?_Lcd_Move_Cursor_Right 0070  
             Lcd_Progress_Bar@max 0026                         sprintf@ap 0050     __end_of_Lcd_Progress_Bar_Init 17AD  
                       strncpy@cp 0077                Lcd_Write_Float@buf 005D                       ??_vfpfcnvrt 0036  
                   __pstringtext1 1800                     __pstringtext2 1827                     __pstringtext3 1838  
                   __pstringtext4 1843                     __pstringtext5 184D                     __pstringtext6 1856  
                   __pstringtext7 185F                     __pstringtext8 1867                     __pstringtext9 186C  
           ?_Lcd_Move_Cursor_Left 0070            __Umul8_16@multiplicand 0070                   ftoa@frac_as_int 004E  
                 ftoa@frac_digits 0050                          sprintf@f 0052                          sprintf@s 0051  
                   itoa@tmp_value 002F                          strncpy@d 0076                          strncpy@n 0072  
                        strncpy@s 0070                Lcd_Write_Integer@v 0038                 Lcd_Set_Cursor@col 0075  
               Lcd_Set_Cursor@row 0076                     ___fladd@signs 0078          __end_of_Lcd_Enable_Pulse 132D  
               _Lcd_Backlight_Off 12F0                      ___fladd@aexp 0079                      ___fladd@bexp 007A  
            __Umul8_16@multiplier 0078                ?_Lcd_Backlight_Off 0070   __end_of_Lcd_Display_Custom_Char 1324  
               ?_Lcd_Backlight_On 0070                 __Umul8_16@product 0074  
