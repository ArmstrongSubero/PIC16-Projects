

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Apr 24 01:53:22 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	16F1719
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2,group=1
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	psect	text42,local,class=CODE,merge=1,delta=2
    61                           	psect	text43,local,class=CODE,merge=1,delta=2
    62                           	psect	text44,local,class=CODE,merge=1,delta=2
    63                           	psect	text45,local,class=CODE,merge=1,delta=2
    64                           	psect	text46,local,class=CODE,merge=1,delta=2
    65                           	psect	text47,local,class=CODE,merge=1,delta=2
    66                           	psect	text48,local,class=CODE,merge=1,delta=2
    67                           	psect	text49,local,class=CODE,merge=1,delta=2
    68                           	psect	text50,local,class=CODE,merge=1,delta=2
    69                           	dabs	1,0xCA0,32
    70                           	dabs	1,0xC20,80
    71                           	dabs	1,0xBA0,80
    72                           	dabs	1,0xB20,80
    73                           	dabs	1,0xAA0,80
    74                           	dabs	1,0xA20,80
    75                           	dabs	1,0x9A0,80
    76                           	dabs	1,0x942,46
    77                           	dabs	1,0x25C2,0,_FatFs
    78                           	dabs	1,0x7E,2
    79  0000                     
    80                           ; Version 2.05
    81                           ; Generated 20/12/2018 GMT
    82                           ; 
    83                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    84                           ; All rights reserved.
    85                           ; 
    86                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    87                           ; 
    88                           ; Redistribution and use in source and binary forms, with or without modification, are
    89                           ; permitted provided that the following conditions are met:
    90                           ; 
    91                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    92                           ;        conditions and the following disclaimer.
    93                           ; 
    94                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    95                           ;        of conditions and the following disclaimer in the documentation and/or other
    96                           ;        materials provided with the distribution.
    97                           ; 
    98                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    99                           ;        software without specific prior written permission.
   100                           ; 
   101                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   102                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   103                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   104                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   105                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   106                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   107                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   108                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   109                           ; 
   110                           ; 
   111                           ; Code-generator required, PIC16F1719 Definitions
   112                           ; 
   113                           ; SFR Addresses
   114  0000                     	;# 
   115  0001                     	;# 
   116  0002                     	;# 
   117  0003                     	;# 
   118  0004                     	;# 
   119  0005                     	;# 
   120  0006                     	;# 
   121  0007                     	;# 
   122  0008                     	;# 
   123  0009                     	;# 
   124  000A                     	;# 
   125  000B                     	;# 
   126  000C                     	;# 
   127  000D                     	;# 
   128  000E                     	;# 
   129  000F                     	;# 
   130  0010                     	;# 
   131  0011                     	;# 
   132  0012                     	;# 
   133  0013                     	;# 
   134  0015                     	;# 
   135  0016                     	;# 
   136  0016                     	;# 
   137  0017                     	;# 
   138  0018                     	;# 
   139  0019                     	;# 
   140  001A                     	;# 
   141  001B                     	;# 
   142  001C                     	;# 
   143  008C                     	;# 
   144  008D                     	;# 
   145  008E                     	;# 
   146  008F                     	;# 
   147  0090                     	;# 
   148  0091                     	;# 
   149  0092                     	;# 
   150  0093                     	;# 
   151  0095                     	;# 
   152  0096                     	;# 
   153  0097                     	;# 
   154  0098                     	;# 
   155  0099                     	;# 
   156  009A                     	;# 
   157  009B                     	;# 
   158  009B                     	;# 
   159  009C                     	;# 
   160  009D                     	;# 
   161  009E                     	;# 
   162  009F                     	;# 
   163  010C                     	;# 
   164  010D                     	;# 
   165  010E                     	;# 
   166  010F                     	;# 
   167  0110                     	;# 
   168  0111                     	;# 
   169  0112                     	;# 
   170  0113                     	;# 
   171  0114                     	;# 
   172  0115                     	;# 
   173  0116                     	;# 
   174  0117                     	;# 
   175  0118                     	;# 
   176  0119                     	;# 
   177  011A                     	;# 
   178  011B                     	;# 
   179  011B                     	;# 
   180  011C                     	;# 
   181  018C                     	;# 
   182  018D                     	;# 
   183  018E                     	;# 
   184  018F                     	;# 
   185  0190                     	;# 
   186  0191                     	;# 
   187  0191                     	;# 
   188  0192                     	;# 
   189  0193                     	;# 
   190  0193                     	;# 
   191  0194                     	;# 
   192  0195                     	;# 
   193  0196                     	;# 
   194  0197                     	;# 
   195  0199                     	;# 
   196  0199                     	;# 
   197  0199                     	;# 
   198  019A                     	;# 
   199  019A                     	;# 
   200  019A                     	;# 
   201  019B                     	;# 
   202  019B                     	;# 
   203  019B                     	;# 
   204  019B                     	;# 
   205  019B                     	;# 
   206  019C                     	;# 
   207  019C                     	;# 
   208  019C                     	;# 
   209  019D                     	;# 
   210  019D                     	;# 
   211  019D                     	;# 
   212  019E                     	;# 
   213  019E                     	;# 
   214  019E                     	;# 
   215  019F                     	;# 
   216  019F                     	;# 
   217  019F                     	;# 
   218  019F                     	;# 
   219  019F                     	;# 
   220  020C                     	;# 
   221  020D                     	;# 
   222  020E                     	;# 
   223  020F                     	;# 
   224  0210                     	;# 
   225  0211                     	;# 
   226  0211                     	;# 
   227  0212                     	;# 
   228  0212                     	;# 
   229  0213                     	;# 
   230  0213                     	;# 
   231  0214                     	;# 
   232  0214                     	;# 
   233  0215                     	;# 
   234  0215                     	;# 
   235  0215                     	;# 
   236  0215                     	;# 
   237  0216                     	;# 
   238  0216                     	;# 
   239  0217                     	;# 
   240  0217                     	;# 
   241  028C                     	;# 
   242  028D                     	;# 
   243  028E                     	;# 
   244  028F                     	;# 
   245  0290                     	;# 
   246  0291                     	;# 
   247  0291                     	;# 
   248  0292                     	;# 
   249  0293                     	;# 
   250  0293                     	;# 
   251  0298                     	;# 
   252  0298                     	;# 
   253  0299                     	;# 
   254  029A                     	;# 
   255  029A                     	;# 
   256  029E                     	;# 
   257  030C                     	;# 
   258  030D                     	;# 
   259  030E                     	;# 
   260  030F                     	;# 
   261  0310                     	;# 
   262  038C                     	;# 
   263  038D                     	;# 
   264  038E                     	;# 
   265  038F                     	;# 
   266  0390                     	;# 
   267  0391                     	;# 
   268  0392                     	;# 
   269  0393                     	;# 
   270  0394                     	;# 
   271  0395                     	;# 
   272  0396                     	;# 
   273  0397                     	;# 
   274  0398                     	;# 
   275  0399                     	;# 
   276  039D                     	;# 
   277  039E                     	;# 
   278  039F                     	;# 
   279  0415                     	;# 
   280  0416                     	;# 
   281  0417                     	;# 
   282  041C                     	;# 
   283  041D                     	;# 
   284  041E                     	;# 
   285  0498                     	;# 
   286  0498                     	;# 
   287  0499                     	;# 
   288  049A                     	;# 
   289  049B                     	;# 
   290  049B                     	;# 
   291  049C                     	;# 
   292  049D                     	;# 
   293  049E                     	;# 
   294  049F                     	;# 
   295  0511                     	;# 
   296  0515                     	;# 
   297  0617                     	;# 
   298  0618                     	;# 
   299  0619                     	;# 
   300  0619                     	;# 
   301  061A                     	;# 
   302  061B                     	;# 
   303  061C                     	;# 
   304  061C                     	;# 
   305  0691                     	;# 
   306  0692                     	;# 
   307  0693                     	;# 
   308  0694                     	;# 
   309  0695                     	;# 
   310  0696                     	;# 
   311  0697                     	;# 
   312  0698                     	;# 
   313  0699                     	;# 
   314  069A                     	;# 
   315  069B                     	;# 
   316  069C                     	;# 
   317  069D                     	;# 
   318  069E                     	;# 
   319  069F                     	;# 
   320  0E0F                     	;# 
   321  0E10                     	;# 
   322  0E11                     	;# 
   323  0E12                     	;# 
   324  0E13                     	;# 
   325  0E14                     	;# 
   326  0E15                     	;# 
   327  0E17                     	;# 
   328  0E20                     	;# 
   329  0E21                     	;# 
   330  0E22                     	;# 
   331  0E24                     	;# 
   332  0E25                     	;# 
   333  0E28                     	;# 
   334  0E29                     	;# 
   335  0E2A                     	;# 
   336  0E2B                     	;# 
   337  0E90                     	;# 
   338  0E91                     	;# 
   339  0E92                     	;# 
   340  0E93                     	;# 
   341  0E94                     	;# 
   342  0E95                     	;# 
   343  0E96                     	;# 
   344  0E97                     	;# 
   345  0E98                     	;# 
   346  0E99                     	;# 
   347  0E9A                     	;# 
   348  0E9B                     	;# 
   349  0E9C                     	;# 
   350  0E9D                     	;# 
   351  0E9E                     	;# 
   352  0E9F                     	;# 
   353  0EA0                     	;# 
   354  0EA1                     	;# 
   355  0EA2                     	;# 
   356  0EA3                     	;# 
   357  0EA4                     	;# 
   358  0EA5                     	;# 
   359  0EA6                     	;# 
   360  0EA7                     	;# 
   361  0EA8                     	;# 
   362  0EA9                     	;# 
   363  0EAA                     	;# 
   364  0EAB                     	;# 
   365  0EAC                     	;# 
   366  0EAD                     	;# 
   367  0EAE                     	;# 
   368  0EAF                     	;# 
   369  0EB0                     	;# 
   370  0EB1                     	;# 
   371  0EB2                     	;# 
   372  0F0F                     	;# 
   373  0F10                     	;# 
   374  0F11                     	;# 
   375  0F12                     	;# 
   376  0F13                     	;# 
   377  0F14                     	;# 
   378  0F15                     	;# 
   379  0F16                     	;# 
   380  0F17                     	;# 
   381  0F18                     	;# 
   382  0F19                     	;# 
   383  0F1A                     	;# 
   384  0F1B                     	;# 
   385  0F1C                     	;# 
   386  0F1D                     	;# 
   387  0F1E                     	;# 
   388  0F1F                     	;# 
   389  0F20                     	;# 
   390  0F21                     	;# 
   391  0F22                     	;# 
   392  0F23                     	;# 
   393  0F24                     	;# 
   394  0F25                     	;# 
   395  0F26                     	;# 
   396  0F27                     	;# 
   397  0F28                     	;# 
   398  0F29                     	;# 
   399  0F2A                     	;# 
   400  0F2B                     	;# 
   401  0F2C                     	;# 
   402  0F2D                     	;# 
   403  0F2E                     	;# 
   404  0F2F                     	;# 
   405  0F30                     	;# 
   406  0F31                     	;# 
   407  0F32                     	;# 
   408  0F33                     	;# 
   409  0F34                     	;# 
   410  0F35                     	;# 
   411  0F36                     	;# 
   412  0F37                     	;# 
   413  0FE4                     	;# 
   414  0FE5                     	;# 
   415  0FE6                     	;# 
   416  0FE7                     	;# 
   417  0FE8                     	;# 
   418  0FE9                     	;# 
   419  0FEA                     	;# 
   420  0FEB                     	;# 
   421  0FED                     	;# 
   422  0FEE                     	;# 
   423  0FEF                     	;# 
   424  0000                     	;# 
   425  0001                     	;# 
   426  0002                     	;# 
   427  0003                     	;# 
   428  0004                     	;# 
   429  0005                     	;# 
   430  0006                     	;# 
   431  0007                     	;# 
   432  0008                     	;# 
   433  0009                     	;# 
   434  000A                     	;# 
   435  000B                     	;# 
   436  000C                     	;# 
   437  000D                     	;# 
   438  000E                     	;# 
   439  000F                     	;# 
   440  0010                     	;# 
   441  0011                     	;# 
   442  0012                     	;# 
   443  0013                     	;# 
   444  0015                     	;# 
   445  0016                     	;# 
   446  0016                     	;# 
   447  0017                     	;# 
   448  0018                     	;# 
   449  0019                     	;# 
   450  001A                     	;# 
   451  001B                     	;# 
   452  001C                     	;# 
   453  008C                     	;# 
   454  008D                     	;# 
   455  008E                     	;# 
   456  008F                     	;# 
   457  0090                     	;# 
   458  0091                     	;# 
   459  0092                     	;# 
   460  0093                     	;# 
   461  0095                     	;# 
   462  0096                     	;# 
   463  0097                     	;# 
   464  0098                     	;# 
   465  0099                     	;# 
   466  009A                     	;# 
   467  009B                     	;# 
   468  009B                     	;# 
   469  009C                     	;# 
   470  009D                     	;# 
   471  009E                     	;# 
   472  009F                     	;# 
   473  010C                     	;# 
   474  010D                     	;# 
   475  010E                     	;# 
   476  010F                     	;# 
   477  0110                     	;# 
   478  0111                     	;# 
   479  0112                     	;# 
   480  0113                     	;# 
   481  0114                     	;# 
   482  0115                     	;# 
   483  0116                     	;# 
   484  0117                     	;# 
   485  0118                     	;# 
   486  0119                     	;# 
   487  011A                     	;# 
   488  011B                     	;# 
   489  011B                     	;# 
   490  011C                     	;# 
   491  018C                     	;# 
   492  018D                     	;# 
   493  018E                     	;# 
   494  018F                     	;# 
   495  0190                     	;# 
   496  0191                     	;# 
   497  0191                     	;# 
   498  0192                     	;# 
   499  0193                     	;# 
   500  0193                     	;# 
   501  0194                     	;# 
   502  0195                     	;# 
   503  0196                     	;# 
   504  0197                     	;# 
   505  0199                     	;# 
   506  0199                     	;# 
   507  0199                     	;# 
   508  019A                     	;# 
   509  019A                     	;# 
   510  019A                     	;# 
   511  019B                     	;# 
   512  019B                     	;# 
   513  019B                     	;# 
   514  019B                     	;# 
   515  019B                     	;# 
   516  019C                     	;# 
   517  019C                     	;# 
   518  019C                     	;# 
   519  019D                     	;# 
   520  019D                     	;# 
   521  019D                     	;# 
   522  019E                     	;# 
   523  019E                     	;# 
   524  019E                     	;# 
   525  019F                     	;# 
   526  019F                     	;# 
   527  019F                     	;# 
   528  019F                     	;# 
   529  019F                     	;# 
   530  020C                     	;# 
   531  020D                     	;# 
   532  020E                     	;# 
   533  020F                     	;# 
   534  0210                     	;# 
   535  0211                     	;# 
   536  0211                     	;# 
   537  0212                     	;# 
   538  0212                     	;# 
   539  0213                     	;# 
   540  0213                     	;# 
   541  0214                     	;# 
   542  0214                     	;# 
   543  0215                     	;# 
   544  0215                     	;# 
   545  0215                     	;# 
   546  0215                     	;# 
   547  0216                     	;# 
   548  0216                     	;# 
   549  0217                     	;# 
   550  0217                     	;# 
   551  028C                     	;# 
   552  028D                     	;# 
   553  028E                     	;# 
   554  028F                     	;# 
   555  0290                     	;# 
   556  0291                     	;# 
   557  0291                     	;# 
   558  0292                     	;# 
   559  0293                     	;# 
   560  0293                     	;# 
   561  0298                     	;# 
   562  0298                     	;# 
   563  0299                     	;# 
   564  029A                     	;# 
   565  029A                     	;# 
   566  029E                     	;# 
   567  030C                     	;# 
   568  030D                     	;# 
   569  030E                     	;# 
   570  030F                     	;# 
   571  0310                     	;# 
   572  038C                     	;# 
   573  038D                     	;# 
   574  038E                     	;# 
   575  038F                     	;# 
   576  0390                     	;# 
   577  0391                     	;# 
   578  0392                     	;# 
   579  0393                     	;# 
   580  0394                     	;# 
   581  0395                     	;# 
   582  0396                     	;# 
   583  0397                     	;# 
   584  0398                     	;# 
   585  0399                     	;# 
   586  039D                     	;# 
   587  039E                     	;# 
   588  039F                     	;# 
   589  0415                     	;# 
   590  0416                     	;# 
   591  0417                     	;# 
   592  041C                     	;# 
   593  041D                     	;# 
   594  041E                     	;# 
   595  0498                     	;# 
   596  0498                     	;# 
   597  0499                     	;# 
   598  049A                     	;# 
   599  049B                     	;# 
   600  049B                     	;# 
   601  049C                     	;# 
   602  049D                     	;# 
   603  049E                     	;# 
   604  049F                     	;# 
   605  0511                     	;# 
   606  0515                     	;# 
   607  0617                     	;# 
   608  0618                     	;# 
   609  0619                     	;# 
   610  0619                     	;# 
   611  061A                     	;# 
   612  061B                     	;# 
   613  061C                     	;# 
   614  061C                     	;# 
   615  0691                     	;# 
   616  0692                     	;# 
   617  0693                     	;# 
   618  0694                     	;# 
   619  0695                     	;# 
   620  0696                     	;# 
   621  0697                     	;# 
   622  0698                     	;# 
   623  0699                     	;# 
   624  069A                     	;# 
   625  069B                     	;# 
   626  069C                     	;# 
   627  069D                     	;# 
   628  069E                     	;# 
   629  069F                     	;# 
   630  0E0F                     	;# 
   631  0E10                     	;# 
   632  0E11                     	;# 
   633  0E12                     	;# 
   634  0E13                     	;# 
   635  0E14                     	;# 
   636  0E15                     	;# 
   637  0E17                     	;# 
   638  0E20                     	;# 
   639  0E21                     	;# 
   640  0E22                     	;# 
   641  0E24                     	;# 
   642  0E25                     	;# 
   643  0E28                     	;# 
   644  0E29                     	;# 
   645  0E2A                     	;# 
   646  0E2B                     	;# 
   647  0E90                     	;# 
   648  0E91                     	;# 
   649  0E92                     	;# 
   650  0E93                     	;# 
   651  0E94                     	;# 
   652  0E95                     	;# 
   653  0E96                     	;# 
   654  0E97                     	;# 
   655  0E98                     	;# 
   656  0E99                     	;# 
   657  0E9A                     	;# 
   658  0E9B                     	;# 
   659  0E9C                     	;# 
   660  0E9D                     	;# 
   661  0E9E                     	;# 
   662  0E9F                     	;# 
   663  0EA0                     	;# 
   664  0EA1                     	;# 
   665  0EA2                     	;# 
   666  0EA3                     	;# 
   667  0EA4                     	;# 
   668  0EA5                     	;# 
   669  0EA6                     	;# 
   670  0EA7                     	;# 
   671  0EA8                     	;# 
   672  0EA9                     	;# 
   673  0EAA                     	;# 
   674  0EAB                     	;# 
   675  0EAC                     	;# 
   676  0EAD                     	;# 
   677  0EAE                     	;# 
   678  0EAF                     	;# 
   679  0EB0                     	;# 
   680  0EB1                     	;# 
   681  0EB2                     	;# 
   682  0F0F                     	;# 
   683  0F10                     	;# 
   684  0F11                     	;# 
   685  0F12                     	;# 
   686  0F13                     	;# 
   687  0F14                     	;# 
   688  0F15                     	;# 
   689  0F16                     	;# 
   690  0F17                     	;# 
   691  0F18                     	;# 
   692  0F19                     	;# 
   693  0F1A                     	;# 
   694  0F1B                     	;# 
   695  0F1C                     	;# 
   696  0F1D                     	;# 
   697  0F1E                     	;# 
   698  0F1F                     	;# 
   699  0F20                     	;# 
   700  0F21                     	;# 
   701  0F22                     	;# 
   702  0F23                     	;# 
   703  0F24                     	;# 
   704  0F25                     	;# 
   705  0F26                     	;# 
   706  0F27                     	;# 
   707  0F28                     	;# 
   708  0F29                     	;# 
   709  0F2A                     	;# 
   710  0F2B                     	;# 
   711  0F2C                     	;# 
   712  0F2D                     	;# 
   713  0F2E                     	;# 
   714  0F2F                     	;# 
   715  0F30                     	;# 
   716  0F31                     	;# 
   717  0F32                     	;# 
   718  0F33                     	;# 
   719  0F34                     	;# 
   720  0F35                     	;# 
   721  0F36                     	;# 
   722  0F37                     	;# 
   723  0FE4                     	;# 
   724  0FE5                     	;# 
   725  0FE6                     	;# 
   726  0FE7                     	;# 
   727  0FE8                     	;# 
   728  0FE9                     	;# 
   729  0FEA                     	;# 
   730  0FEB                     	;# 
   731  0FED                     	;# 
   732  0FEE                     	;# 
   733  0FEF                     	;# 
   734  0000                     	;# 
   735  0001                     	;# 
   736  0002                     	;# 
   737  0003                     	;# 
   738  0004                     	;# 
   739  0005                     	;# 
   740  0006                     	;# 
   741  0007                     	;# 
   742  0008                     	;# 
   743  0009                     	;# 
   744  000A                     	;# 
   745  000B                     	;# 
   746  000C                     	;# 
   747  000D                     	;# 
   748  000E                     	;# 
   749  000F                     	;# 
   750  0010                     	;# 
   751  0011                     	;# 
   752  0012                     	;# 
   753  0013                     	;# 
   754  0015                     	;# 
   755  0016                     	;# 
   756  0016                     	;# 
   757  0017                     	;# 
   758  0018                     	;# 
   759  0019                     	;# 
   760  001A                     	;# 
   761  001B                     	;# 
   762  001C                     	;# 
   763  008C                     	;# 
   764  008D                     	;# 
   765  008E                     	;# 
   766  008F                     	;# 
   767  0090                     	;# 
   768  0091                     	;# 
   769  0092                     	;# 
   770  0093                     	;# 
   771  0095                     	;# 
   772  0096                     	;# 
   773  0097                     	;# 
   774  0098                     	;# 
   775  0099                     	;# 
   776  009A                     	;# 
   777  009B                     	;# 
   778  009B                     	;# 
   779  009C                     	;# 
   780  009D                     	;# 
   781  009E                     	;# 
   782  009F                     	;# 
   783  010C                     	;# 
   784  010D                     	;# 
   785  010E                     	;# 
   786  010F                     	;# 
   787  0110                     	;# 
   788  0111                     	;# 
   789  0112                     	;# 
   790  0113                     	;# 
   791  0114                     	;# 
   792  0115                     	;# 
   793  0116                     	;# 
   794  0117                     	;# 
   795  0118                     	;# 
   796  0119                     	;# 
   797  011A                     	;# 
   798  011B                     	;# 
   799  011B                     	;# 
   800  011C                     	;# 
   801  018C                     	;# 
   802  018D                     	;# 
   803  018E                     	;# 
   804  018F                     	;# 
   805  0190                     	;# 
   806  0191                     	;# 
   807  0191                     	;# 
   808  0192                     	;# 
   809  0193                     	;# 
   810  0193                     	;# 
   811  0194                     	;# 
   812  0195                     	;# 
   813  0196                     	;# 
   814  0197                     	;# 
   815  0199                     	;# 
   816  0199                     	;# 
   817  0199                     	;# 
   818  019A                     	;# 
   819  019A                     	;# 
   820  019A                     	;# 
   821  019B                     	;# 
   822  019B                     	;# 
   823  019B                     	;# 
   824  019B                     	;# 
   825  019B                     	;# 
   826  019C                     	;# 
   827  019C                     	;# 
   828  019C                     	;# 
   829  019D                     	;# 
   830  019D                     	;# 
   831  019D                     	;# 
   832  019E                     	;# 
   833  019E                     	;# 
   834  019E                     	;# 
   835  019F                     	;# 
   836  019F                     	;# 
   837  019F                     	;# 
   838  019F                     	;# 
   839  019F                     	;# 
   840  020C                     	;# 
   841  020D                     	;# 
   842  020E                     	;# 
   843  020F                     	;# 
   844  0210                     	;# 
   845  0211                     	;# 
   846  0211                     	;# 
   847  0212                     	;# 
   848  0212                     	;# 
   849  0213                     	;# 
   850  0213                     	;# 
   851  0214                     	;# 
   852  0214                     	;# 
   853  0215                     	;# 
   854  0215                     	;# 
   855  0215                     	;# 
   856  0215                     	;# 
   857  0216                     	;# 
   858  0216                     	;# 
   859  0217                     	;# 
   860  0217                     	;# 
   861  028C                     	;# 
   862  028D                     	;# 
   863  028E                     	;# 
   864  028F                     	;# 
   865  0290                     	;# 
   866  0291                     	;# 
   867  0291                     	;# 
   868  0292                     	;# 
   869  0293                     	;# 
   870  0293                     	;# 
   871  0298                     	;# 
   872  0298                     	;# 
   873  0299                     	;# 
   874  029A                     	;# 
   875  029A                     	;# 
   876  029E                     	;# 
   877  030C                     	;# 
   878  030D                     	;# 
   879  030E                     	;# 
   880  030F                     	;# 
   881  0310                     	;# 
   882  038C                     	;# 
   883  038D                     	;# 
   884  038E                     	;# 
   885  038F                     	;# 
   886  0390                     	;# 
   887  0391                     	;# 
   888  0392                     	;# 
   889  0393                     	;# 
   890  0394                     	;# 
   891  0395                     	;# 
   892  0396                     	;# 
   893  0397                     	;# 
   894  0398                     	;# 
   895  0399                     	;# 
   896  039D                     	;# 
   897  039E                     	;# 
   898  039F                     	;# 
   899  0415                     	;# 
   900  0416                     	;# 
   901  0417                     	;# 
   902  041C                     	;# 
   903  041D                     	;# 
   904  041E                     	;# 
   905  0498                     	;# 
   906  0498                     	;# 
   907  0499                     	;# 
   908  049A                     	;# 
   909  049B                     	;# 
   910  049B                     	;# 
   911  049C                     	;# 
   912  049D                     	;# 
   913  049E                     	;# 
   914  049F                     	;# 
   915  0511                     	;# 
   916  0515                     	;# 
   917  0617                     	;# 
   918  0618                     	;# 
   919  0619                     	;# 
   920  0619                     	;# 
   921  061A                     	;# 
   922  061B                     	;# 
   923  061C                     	;# 
   924  061C                     	;# 
   925  0691                     	;# 
   926  0692                     	;# 
   927  0693                     	;# 
   928  0694                     	;# 
   929  0695                     	;# 
   930  0696                     	;# 
   931  0697                     	;# 
   932  0698                     	;# 
   933  0699                     	;# 
   934  069A                     	;# 
   935  069B                     	;# 
   936  069C                     	;# 
   937  069D                     	;# 
   938  069E                     	;# 
   939  069F                     	;# 
   940  0E0F                     	;# 
   941  0E10                     	;# 
   942  0E11                     	;# 
   943  0E12                     	;# 
   944  0E13                     	;# 
   945  0E14                     	;# 
   946  0E15                     	;# 
   947  0E17                     	;# 
   948  0E20                     	;# 
   949  0E21                     	;# 
   950  0E22                     	;# 
   951  0E24                     	;# 
   952  0E25                     	;# 
   953  0E28                     	;# 
   954  0E29                     	;# 
   955  0E2A                     	;# 
   956  0E2B                     	;# 
   957  0E90                     	;# 
   958  0E91                     	;# 
   959  0E92                     	;# 
   960  0E93                     	;# 
   961  0E94                     	;# 
   962  0E95                     	;# 
   963  0E96                     	;# 
   964  0E97                     	;# 
   965  0E98                     	;# 
   966  0E99                     	;# 
   967  0E9A                     	;# 
   968  0E9B                     	;# 
   969  0E9C                     	;# 
   970  0E9D                     	;# 
   971  0E9E                     	;# 
   972  0E9F                     	;# 
   973  0EA0                     	;# 
   974  0EA1                     	;# 
   975  0EA2                     	;# 
   976  0EA3                     	;# 
   977  0EA4                     	;# 
   978  0EA5                     	;# 
   979  0EA6                     	;# 
   980  0EA7                     	;# 
   981  0EA8                     	;# 
   982  0EA9                     	;# 
   983  0EAA                     	;# 
   984  0EAB                     	;# 
   985  0EAC                     	;# 
   986  0EAD                     	;# 
   987  0EAE                     	;# 
   988  0EAF                     	;# 
   989  0EB0                     	;# 
   990  0EB1                     	;# 
   991  0EB2                     	;# 
   992  0F0F                     	;# 
   993  0F10                     	;# 
   994  0F11                     	;# 
   995  0F12                     	;# 
   996  0F13                     	;# 
   997  0F14                     	;# 
   998  0F15                     	;# 
   999  0F16                     	;# 
  1000  0F17                     	;# 
  1001  0F18                     	;# 
  1002  0F19                     	;# 
  1003  0F1A                     	;# 
  1004  0F1B                     	;# 
  1005  0F1C                     	;# 
  1006  0F1D                     	;# 
  1007  0F1E                     	;# 
  1008  0F1F                     	;# 
  1009  0F20                     	;# 
  1010  0F21                     	;# 
  1011  0F22                     	;# 
  1012  0F23                     	;# 
  1013  0F24                     	;# 
  1014  0F25                     	;# 
  1015  0F26                     	;# 
  1016  0F27                     	;# 
  1017  0F28                     	;# 
  1018  0F29                     	;# 
  1019  0F2A                     	;# 
  1020  0F2B                     	;# 
  1021  0F2C                     	;# 
  1022  0F2D                     	;# 
  1023  0F2E                     	;# 
  1024  0F2F                     	;# 
  1025  0F30                     	;# 
  1026  0F31                     	;# 
  1027  0F32                     	;# 
  1028  0F33                     	;# 
  1029  0F34                     	;# 
  1030  0F35                     	;# 
  1031  0F36                     	;# 
  1032  0F37                     	;# 
  1033  0FE4                     	;# 
  1034  0FE5                     	;# 
  1035  0FE6                     	;# 
  1036  0FE7                     	;# 
  1037  0FE8                     	;# 
  1038  0FE9                     	;# 
  1039  0FEA                     	;# 
  1040  0FEB                     	;# 
  1041  0FED                     	;# 
  1042  0FEE                     	;# 
  1043  0FEF                     	;# 
  1044  0000                     	;# 
  1045  0001                     	;# 
  1046  0002                     	;# 
  1047  0003                     	;# 
  1048  0004                     	;# 
  1049  0005                     	;# 
  1050  0006                     	;# 
  1051  0007                     	;# 
  1052  0008                     	;# 
  1053  0009                     	;# 
  1054  000A                     	;# 
  1055  000B                     	;# 
  1056  000C                     	;# 
  1057  000D                     	;# 
  1058  000E                     	;# 
  1059  000F                     	;# 
  1060  0010                     	;# 
  1061  0011                     	;# 
  1062  0012                     	;# 
  1063  0013                     	;# 
  1064  0015                     	;# 
  1065  0016                     	;# 
  1066  0016                     	;# 
  1067  0017                     	;# 
  1068  0018                     	;# 
  1069  0019                     	;# 
  1070  001A                     	;# 
  1071  001B                     	;# 
  1072  001C                     	;# 
  1073  008C                     	;# 
  1074  008D                     	;# 
  1075  008E                     	;# 
  1076  008F                     	;# 
  1077  0090                     	;# 
  1078  0091                     	;# 
  1079  0092                     	;# 
  1080  0093                     	;# 
  1081  0095                     	;# 
  1082  0096                     	;# 
  1083  0097                     	;# 
  1084  0098                     	;# 
  1085  0099                     	;# 
  1086  009A                     	;# 
  1087  009B                     	;# 
  1088  009B                     	;# 
  1089  009C                     	;# 
  1090  009D                     	;# 
  1091  009E                     	;# 
  1092  009F                     	;# 
  1093  010C                     	;# 
  1094  010D                     	;# 
  1095  010E                     	;# 
  1096  010F                     	;# 
  1097  0110                     	;# 
  1098  0111                     	;# 
  1099  0112                     	;# 
  1100  0113                     	;# 
  1101  0114                     	;# 
  1102  0115                     	;# 
  1103  0116                     	;# 
  1104  0117                     	;# 
  1105  0118                     	;# 
  1106  0119                     	;# 
  1107  011A                     	;# 
  1108  011B                     	;# 
  1109  011B                     	;# 
  1110  011C                     	;# 
  1111  018C                     	;# 
  1112  018D                     	;# 
  1113  018E                     	;# 
  1114  018F                     	;# 
  1115  0190                     	;# 
  1116  0191                     	;# 
  1117  0191                     	;# 
  1118  0192                     	;# 
  1119  0193                     	;# 
  1120  0193                     	;# 
  1121  0194                     	;# 
  1122  0195                     	;# 
  1123  0196                     	;# 
  1124  0197                     	;# 
  1125  0199                     	;# 
  1126  0199                     	;# 
  1127  0199                     	;# 
  1128  019A                     	;# 
  1129  019A                     	;# 
  1130  019A                     	;# 
  1131  019B                     	;# 
  1132  019B                     	;# 
  1133  019B                     	;# 
  1134  019B                     	;# 
  1135  019B                     	;# 
  1136  019C                     	;# 
  1137  019C                     	;# 
  1138  019C                     	;# 
  1139  019D                     	;# 
  1140  019D                     	;# 
  1141  019D                     	;# 
  1142  019E                     	;# 
  1143  019E                     	;# 
  1144  019E                     	;# 
  1145  019F                     	;# 
  1146  019F                     	;# 
  1147  019F                     	;# 
  1148  019F                     	;# 
  1149  019F                     	;# 
  1150  020C                     	;# 
  1151  020D                     	;# 
  1152  020E                     	;# 
  1153  020F                     	;# 
  1154  0210                     	;# 
  1155  0211                     	;# 
  1156  0211                     	;# 
  1157  0212                     	;# 
  1158  0212                     	;# 
  1159  0213                     	;# 
  1160  0213                     	;# 
  1161  0214                     	;# 
  1162  0214                     	;# 
  1163  0215                     	;# 
  1164  0215                     	;# 
  1165  0215                     	;# 
  1166  0215                     	;# 
  1167  0216                     	;# 
  1168  0216                     	;# 
  1169  0217                     	;# 
  1170  0217                     	;# 
  1171  028C                     	;# 
  1172  028D                     	;# 
  1173  028E                     	;# 
  1174  028F                     	;# 
  1175  0290                     	;# 
  1176  0291                     	;# 
  1177  0291                     	;# 
  1178  0292                     	;# 
  1179  0293                     	;# 
  1180  0293                     	;# 
  1181  0298                     	;# 
  1182  0298                     	;# 
  1183  0299                     	;# 
  1184  029A                     	;# 
  1185  029A                     	;# 
  1186  029E                     	;# 
  1187  030C                     	;# 
  1188  030D                     	;# 
  1189  030E                     	;# 
  1190  030F                     	;# 
  1191  0310                     	;# 
  1192  038C                     	;# 
  1193  038D                     	;# 
  1194  038E                     	;# 
  1195  038F                     	;# 
  1196  0390                     	;# 
  1197  0391                     	;# 
  1198  0392                     	;# 
  1199  0393                     	;# 
  1200  0394                     	;# 
  1201  0395                     	;# 
  1202  0396                     	;# 
  1203  0397                     	;# 
  1204  0398                     	;# 
  1205  0399                     	;# 
  1206  039D                     	;# 
  1207  039E                     	;# 
  1208  039F                     	;# 
  1209  0415                     	;# 
  1210  0416                     	;# 
  1211  0417                     	;# 
  1212  041C                     	;# 
  1213  041D                     	;# 
  1214  041E                     	;# 
  1215  0498                     	;# 
  1216  0498                     	;# 
  1217  0499                     	;# 
  1218  049A                     	;# 
  1219  049B                     	;# 
  1220  049B                     	;# 
  1221  049C                     	;# 
  1222  049D                     	;# 
  1223  049E                     	;# 
  1224  049F                     	;# 
  1225  0511                     	;# 
  1226  0515                     	;# 
  1227  0617                     	;# 
  1228  0618                     	;# 
  1229  0619                     	;# 
  1230  0619                     	;# 
  1231  061A                     	;# 
  1232  061B                     	;# 
  1233  061C                     	;# 
  1234  061C                     	;# 
  1235  0691                     	;# 
  1236  0692                     	;# 
  1237  0693                     	;# 
  1238  0694                     	;# 
  1239  0695                     	;# 
  1240  0696                     	;# 
  1241  0697                     	;# 
  1242  0698                     	;# 
  1243  0699                     	;# 
  1244  069A                     	;# 
  1245  069B                     	;# 
  1246  069C                     	;# 
  1247  069D                     	;# 
  1248  069E                     	;# 
  1249  069F                     	;# 
  1250  0E0F                     	;# 
  1251  0E10                     	;# 
  1252  0E11                     	;# 
  1253  0E12                     	;# 
  1254  0E13                     	;# 
  1255  0E14                     	;# 
  1256  0E15                     	;# 
  1257  0E17                     	;# 
  1258  0E20                     	;# 
  1259  0E21                     	;# 
  1260  0E22                     	;# 
  1261  0E24                     	;# 
  1262  0E25                     	;# 
  1263  0E28                     	;# 
  1264  0E29                     	;# 
  1265  0E2A                     	;# 
  1266  0E2B                     	;# 
  1267  0E90                     	;# 
  1268  0E91                     	;# 
  1269  0E92                     	;# 
  1270  0E93                     	;# 
  1271  0E94                     	;# 
  1272  0E95                     	;# 
  1273  0E96                     	;# 
  1274  0E97                     	;# 
  1275  0E98                     	;# 
  1276  0E99                     	;# 
  1277  0E9A                     	;# 
  1278  0E9B                     	;# 
  1279  0E9C                     	;# 
  1280  0E9D                     	;# 
  1281  0E9E                     	;# 
  1282  0E9F                     	;# 
  1283  0EA0                     	;# 
  1284  0EA1                     	;# 
  1285  0EA2                     	;# 
  1286  0EA3                     	;# 
  1287  0EA4                     	;# 
  1288  0EA5                     	;# 
  1289  0EA6                     	;# 
  1290  0EA7                     	;# 
  1291  0EA8                     	;# 
  1292  0EA9                     	;# 
  1293  0EAA                     	;# 
  1294  0EAB                     	;# 
  1295  0EAC                     	;# 
  1296  0EAD                     	;# 
  1297  0EAE                     	;# 
  1298  0EAF                     	;# 
  1299  0EB0                     	;# 
  1300  0EB1                     	;# 
  1301  0EB2                     	;# 
  1302  0F0F                     	;# 
  1303  0F10                     	;# 
  1304  0F11                     	;# 
  1305  0F12                     	;# 
  1306  0F13                     	;# 
  1307  0F14                     	;# 
  1308  0F15                     	;# 
  1309  0F16                     	;# 
  1310  0F17                     	;# 
  1311  0F18                     	;# 
  1312  0F19                     	;# 
  1313  0F1A                     	;# 
  1314  0F1B                     	;# 
  1315  0F1C                     	;# 
  1316  0F1D                     	;# 
  1317  0F1E                     	;# 
  1318  0F1F                     	;# 
  1319  0F20                     	;# 
  1320  0F21                     	;# 
  1321  0F22                     	;# 
  1322  0F23                     	;# 
  1323  0F24                     	;# 
  1324  0F25                     	;# 
  1325  0F26                     	;# 
  1326  0F27                     	;# 
  1327  0F28                     	;# 
  1328  0F29                     	;# 
  1329  0F2A                     	;# 
  1330  0F2B                     	;# 
  1331  0F2C                     	;# 
  1332  0F2D                     	;# 
  1333  0F2E                     	;# 
  1334  0F2F                     	;# 
  1335  0F30                     	;# 
  1336  0F31                     	;# 
  1337  0F32                     	;# 
  1338  0F33                     	;# 
  1339  0F34                     	;# 
  1340  0F35                     	;# 
  1341  0F36                     	;# 
  1342  0F37                     	;# 
  1343  0FE4                     	;# 
  1344  0FE5                     	;# 
  1345  0FE6                     	;# 
  1346  0FE7                     	;# 
  1347  0FE8                     	;# 
  1348  0FE9                     	;# 
  1349  0FEA                     	;# 
  1350  0FEB                     	;# 
  1351  0FED                     	;# 
  1352  0FEE                     	;# 
  1353  0FEF                     	;# 
  1354  0000                     	;# 
  1355  0001                     	;# 
  1356  0002                     	;# 
  1357  0003                     	;# 
  1358  0004                     	;# 
  1359  0005                     	;# 
  1360  0006                     	;# 
  1361  0007                     	;# 
  1362  0008                     	;# 
  1363  0009                     	;# 
  1364  000A                     	;# 
  1365  000B                     	;# 
  1366  000C                     	;# 
  1367  000D                     	;# 
  1368  000E                     	;# 
  1369  000F                     	;# 
  1370  0010                     	;# 
  1371  0011                     	;# 
  1372  0012                     	;# 
  1373  0013                     	;# 
  1374  0015                     	;# 
  1375  0016                     	;# 
  1376  0016                     	;# 
  1377  0017                     	;# 
  1378  0018                     	;# 
  1379  0019                     	;# 
  1380  001A                     	;# 
  1381  001B                     	;# 
  1382  001C                     	;# 
  1383  008C                     	;# 
  1384  008D                     	;# 
  1385  008E                     	;# 
  1386  008F                     	;# 
  1387  0090                     	;# 
  1388  0091                     	;# 
  1389  0092                     	;# 
  1390  0093                     	;# 
  1391  0095                     	;# 
  1392  0096                     	;# 
  1393  0097                     	;# 
  1394  0098                     	;# 
  1395  0099                     	;# 
  1396  009A                     	;# 
  1397  009B                     	;# 
  1398  009B                     	;# 
  1399  009C                     	;# 
  1400  009D                     	;# 
  1401  009E                     	;# 
  1402  009F                     	;# 
  1403  010C                     	;# 
  1404  010D                     	;# 
  1405  010E                     	;# 
  1406  010F                     	;# 
  1407  0110                     	;# 
  1408  0111                     	;# 
  1409  0112                     	;# 
  1410  0113                     	;# 
  1411  0114                     	;# 
  1412  0115                     	;# 
  1413  0116                     	;# 
  1414  0117                     	;# 
  1415  0118                     	;# 
  1416  0119                     	;# 
  1417  011A                     	;# 
  1418  011B                     	;# 
  1419  011B                     	;# 
  1420  011C                     	;# 
  1421  018C                     	;# 
  1422  018D                     	;# 
  1423  018E                     	;# 
  1424  018F                     	;# 
  1425  0190                     	;# 
  1426  0191                     	;# 
  1427  0191                     	;# 
  1428  0192                     	;# 
  1429  0193                     	;# 
  1430  0193                     	;# 
  1431  0194                     	;# 
  1432  0195                     	;# 
  1433  0196                     	;# 
  1434  0197                     	;# 
  1435  0199                     	;# 
  1436  0199                     	;# 
  1437  0199                     	;# 
  1438  019A                     	;# 
  1439  019A                     	;# 
  1440  019A                     	;# 
  1441  019B                     	;# 
  1442  019B                     	;# 
  1443  019B                     	;# 
  1444  019B                     	;# 
  1445  019B                     	;# 
  1446  019C                     	;# 
  1447  019C                     	;# 
  1448  019C                     	;# 
  1449  019D                     	;# 
  1450  019D                     	;# 
  1451  019D                     	;# 
  1452  019E                     	;# 
  1453  019E                     	;# 
  1454  019E                     	;# 
  1455  019F                     	;# 
  1456  019F                     	;# 
  1457  019F                     	;# 
  1458  019F                     	;# 
  1459  019F                     	;# 
  1460  020C                     	;# 
  1461  020D                     	;# 
  1462  020E                     	;# 
  1463  020F                     	;# 
  1464  0210                     	;# 
  1465  0211                     	;# 
  1466  0211                     	;# 
  1467  0212                     	;# 
  1468  0212                     	;# 
  1469  0213                     	;# 
  1470  0213                     	;# 
  1471  0214                     	;# 
  1472  0214                     	;# 
  1473  0215                     	;# 
  1474  0215                     	;# 
  1475  0215                     	;# 
  1476  0215                     	;# 
  1477  0216                     	;# 
  1478  0216                     	;# 
  1479  0217                     	;# 
  1480  0217                     	;# 
  1481  028C                     	;# 
  1482  028D                     	;# 
  1483  028E                     	;# 
  1484  028F                     	;# 
  1485  0290                     	;# 
  1486  0291                     	;# 
  1487  0291                     	;# 
  1488  0292                     	;# 
  1489  0293                     	;# 
  1490  0293                     	;# 
  1491  0298                     	;# 
  1492  0298                     	;# 
  1493  0299                     	;# 
  1494  029A                     	;# 
  1495  029A                     	;# 
  1496  029E                     	;# 
  1497  030C                     	;# 
  1498  030D                     	;# 
  1499  030E                     	;# 
  1500  030F                     	;# 
  1501  0310                     	;# 
  1502  038C                     	;# 
  1503  038D                     	;# 
  1504  038E                     	;# 
  1505  038F                     	;# 
  1506  0390                     	;# 
  1507  0391                     	;# 
  1508  0392                     	;# 
  1509  0393                     	;# 
  1510  0394                     	;# 
  1511  0395                     	;# 
  1512  0396                     	;# 
  1513  0397                     	;# 
  1514  0398                     	;# 
  1515  0399                     	;# 
  1516  039D                     	;# 
  1517  039E                     	;# 
  1518  039F                     	;# 
  1519  0415                     	;# 
  1520  0416                     	;# 
  1521  0417                     	;# 
  1522  041C                     	;# 
  1523  041D                     	;# 
  1524  041E                     	;# 
  1525  0498                     	;# 
  1526  0498                     	;# 
  1527  0499                     	;# 
  1528  049A                     	;# 
  1529  049B                     	;# 
  1530  049B                     	;# 
  1531  049C                     	;# 
  1532  049D                     	;# 
  1533  049E                     	;# 
  1534  049F                     	;# 
  1535  0511                     	;# 
  1536  0515                     	;# 
  1537  0617                     	;# 
  1538  0618                     	;# 
  1539  0619                     	;# 
  1540  0619                     	;# 
  1541  061A                     	;# 
  1542  061B                     	;# 
  1543  061C                     	;# 
  1544  061C                     	;# 
  1545  0691                     	;# 
  1546  0692                     	;# 
  1547  0693                     	;# 
  1548  0694                     	;# 
  1549  0695                     	;# 
  1550  0696                     	;# 
  1551  0697                     	;# 
  1552  0698                     	;# 
  1553  0699                     	;# 
  1554  069A                     	;# 
  1555  069B                     	;# 
  1556  069C                     	;# 
  1557  069D                     	;# 
  1558  069E                     	;# 
  1559  069F                     	;# 
  1560  0E0F                     	;# 
  1561  0E10                     	;# 
  1562  0E11                     	;# 
  1563  0E12                     	;# 
  1564  0E13                     	;# 
  1565  0E14                     	;# 
  1566  0E15                     	;# 
  1567  0E17                     	;# 
  1568  0E20                     	;# 
  1569  0E21                     	;# 
  1570  0E22                     	;# 
  1571  0E24                     	;# 
  1572  0E25                     	;# 
  1573  0E28                     	;# 
  1574  0E29                     	;# 
  1575  0E2A                     	;# 
  1576  0E2B                     	;# 
  1577  0E90                     	;# 
  1578  0E91                     	;# 
  1579  0E92                     	;# 
  1580  0E93                     	;# 
  1581  0E94                     	;# 
  1582  0E95                     	;# 
  1583  0E96                     	;# 
  1584  0E97                     	;# 
  1585  0E98                     	;# 
  1586  0E99                     	;# 
  1587  0E9A                     	;# 
  1588  0E9B                     	;# 
  1589  0E9C                     	;# 
  1590  0E9D                     	;# 
  1591  0E9E                     	;# 
  1592  0E9F                     	;# 
  1593  0EA0                     	;# 
  1594  0EA1                     	;# 
  1595  0EA2                     	;# 
  1596  0EA3                     	;# 
  1597  0EA4                     	;# 
  1598  0EA5                     	;# 
  1599  0EA6                     	;# 
  1600  0EA7                     	;# 
  1601  0EA8                     	;# 
  1602  0EA9                     	;# 
  1603  0EAA                     	;# 
  1604  0EAB                     	;# 
  1605  0EAC                     	;# 
  1606  0EAD                     	;# 
  1607  0EAE                     	;# 
  1608  0EAF                     	;# 
  1609  0EB0                     	;# 
  1610  0EB1                     	;# 
  1611  0EB2                     	;# 
  1612  0F0F                     	;# 
  1613  0F10                     	;# 
  1614  0F11                     	;# 
  1615  0F12                     	;# 
  1616  0F13                     	;# 
  1617  0F14                     	;# 
  1618  0F15                     	;# 
  1619  0F16                     	;# 
  1620  0F17                     	;# 
  1621  0F18                     	;# 
  1622  0F19                     	;# 
  1623  0F1A                     	;# 
  1624  0F1B                     	;# 
  1625  0F1C                     	;# 
  1626  0F1D                     	;# 
  1627  0F1E                     	;# 
  1628  0F1F                     	;# 
  1629  0F20                     	;# 
  1630  0F21                     	;# 
  1631  0F22                     	;# 
  1632  0F23                     	;# 
  1633  0F24                     	;# 
  1634  0F25                     	;# 
  1635  0F26                     	;# 
  1636  0F27                     	;# 
  1637  0F28                     	;# 
  1638  0F29                     	;# 
  1639  0F2A                     	;# 
  1640  0F2B                     	;# 
  1641  0F2C                     	;# 
  1642  0F2D                     	;# 
  1643  0F2E                     	;# 
  1644  0F2F                     	;# 
  1645  0F30                     	;# 
  1646  0F31                     	;# 
  1647  0F32                     	;# 
  1648  0F33                     	;# 
  1649  0F34                     	;# 
  1650  0F35                     	;# 
  1651  0F36                     	;# 
  1652  0F37                     	;# 
  1653  0FE4                     	;# 
  1654  0FE5                     	;# 
  1655  0FE6                     	;# 
  1656  0FE7                     	;# 
  1657  0FE8                     	;# 
  1658  0FE9                     	;# 
  1659  0FEA                     	;# 
  1660  0FEB                     	;# 
  1661  0FED                     	;# 
  1662  0FEE                     	;# 
  1663  0FEF                     	;_FatFs
  1664                           
  1665                           	psect	idataBANK1
  1666  0801                     __pidataBANK1:	
  1667                           
  1668                           ;initializer for _Stat
  1669  0801  3401               	retlw	1
  1670  0078                     _RD0	set	120
  1671  008F                     _TRISDbits	set	143
  1672  008E                     _TRISCbits	set	142
  1673  04CF                     _SPLLEN	set	1231
  1674  04CE                     _IRCF3	set	1230
  1675  04CD                     _IRCF2	set	1229
  1676  04CC                     _IRCF1	set	1228
  1677  04CB                     _IRCF0	set	1227
  1678  04C9                     _SCS1	set	1225
  1679  04C8                     _SCS0	set	1224
  1680  0870                     _LATC0	set	2160
  1681  018E                     _ANSELCbits	set	398
  1682  0214                     _SSP1STATbits	set	532
  1683  0211                     _SSPBUF	set	529
  1684  0215                     _SSP1CON1bits	set	533
  1685  0212                     _SSP1ADD	set	530
  1686  0215                     _SSP1CON1	set	533
  1687  0214                     _SSP1STAT	set	532
  1688  0E21                     _SSPDATPPSbits	set	3617
  1689  0E0F                     _PPSLOCKbits	set	3599
  1690  0E0F                     _PPSLOCK	set	3599
  1691  0EA5                     _RC5PPSbits	set	3749
  1692  0EA3                     _RC3PPSbits	set	3747
  1693                           
  1694                           	psect	stringtext1
  1695  3000                     __pstringtext1:	
  1696  3000                     STR_3:	
  1697  3000  3454               	retlw	84	;'T'
  1698  3001  3468               	retlw	104	;'h'
  1699  3002  3469               	retlw	105	;'i'
  1700  3003  3473               	retlw	115	;'s'
  1701  3004  3420               	retlw	32	;' '
  1702  3005  3469               	retlw	105	;'i'
  1703  3006  3473               	retlw	115	;'s'
  1704  3007  3420               	retlw	32	;' '
  1705  3008  346D               	retlw	109	;'m'
  1706  3009  3479               	retlw	121	;'y'
  1707  300A  3420               	retlw	32	;' '
  1708  300B  346D               	retlw	109	;'m'
  1709  300C  3465               	retlw	101	;'e'
  1710  300D  3473               	retlw	115	;'s'
  1711  300E  3473               	retlw	115	;'s'
  1712  300F  3461               	retlw	97	;'a'
  1713  3010  3467               	retlw	103	;'g'
  1714  3011  3465               	retlw	101	;'e'
  1715  3012  340D               	retlw	13
  1716  3013  340A               	retlw	10
  1717  3014  3400               	retlw	0
  1718                           
  1719                           	psect	stringtext2
  1720  3015                     __pstringtext2:	
  1721  3015                     STR_4:	
  1722  3015  3422               	retlw	34	;'"'
  1723  3016  342A               	retlw	42	;'*'
  1724  3017  342B               	retlw	43	;'+'
  1725  3018  342C               	retlw	44	;','
  1726  3019  343A               	retlw	58	;':'
  1727  301A  343B               	retlw	59	;';'
  1728  301B  343C               	retlw	60	;'<'
  1729  301C  343D               	retlw	61	;'='
  1730  301D  343E               	retlw	62	;'>'
  1731  301E  343F               	retlw	63	;'?'
  1732  301F  345B               	retlw	91	;'['
  1733  3020  345D               	retlw	93	;']'
  1734  3021  347C               	retlw	124	;'|'
  1735  3022  347F               	retlw	127
  1736  3023  3400               	retlw	0
  1737                           
  1738                           	psect	stringtext3
  1739  3024                     __pstringtext3:	
  1740  3024                     STR_2:	
  1741  3024  3474               	retlw	116	;'t'
  1742  3025  3465               	retlw	101	;'e'
  1743  3026  3478               	retlw	120	;'x'
  1744  3027  3474               	retlw	116	;'t'
  1745  3028  3479               	retlw	121	;'y'
  1746  3029  342E               	retlw	46	;'.'
  1747  302A  3474               	retlw	116	;'t'
  1748  302B  3478               	retlw	120	;'x'
  1749  302C  3474               	retlw	116	;'t'
  1750  302D  3400               	retlw	0
  1751                           
  1752                           	psect	stringtext4
  1753  0000                     __pstringtext4:	
  1754  3014                     
  1755                           ; #config settings
  1756  0000                     
  1757                           	psect	cinit
  1758  07DC                     start_initialization:	
  1759  07DC                     __initialization:		;BIGRAM
  1760                           
  1761                           ; Initialize objects allocated to BANK1
  1762  07DC  0021               	movlb	1	; select bank1
  1763  07DD  3188  2001  3187   	fcall	__pidataBANK1	;fetch initializer
  1764  07E0  00EE               	movwf	__pdataBANK1& (0+127)
  1765                           
  1766                           ; Clear objects allocated to BIGRAM
  1767  07E1  30C2               	movlw	low (0+9666)
  1768  07E2  0084               	movwf	4
  1769  07E3  3025               	movlw	high (0+9666)
  1770  07E4  0085               	movwf	5
  1771  07E5  302E               	movlw	46
  1772  07E6  00FE               	movwf	btemp
  1773  07E7  3002               	movlw	2
  1774  07E8  00FF               	movwf	btemp+1
  1775  07E9  3188  2002  3187   	fcall	clear_ram0
  1776                           
  1777                           ; Clear objects allocated to BANK1
  1778  07EC  01E7               	clrf	__pbssBANK1& (0+127)
  1779  07ED  01E8               	clrf	(__pbssBANK1+1)& (0+127)
  1780  07EE  01E9               	clrf	(__pbssBANK1+2)& (0+127)
  1781  07EF  01EA               	clrf	(__pbssBANK1+3)& (0+127)
  1782  07F0  01EB               	clrf	(__pbssBANK1+4)& (0+127)
  1783  07F1  01EC               	clrf	(__pbssBANK1+5)& (0+127)
  1784  07F2  01ED               	clrf	(__pbssBANK1+6)& (0+127)
  1785                           
  1786                           ; Clear objects allocated to BANK2
  1787  07F3  304D               	movlw	low __pbssBANK2
  1788  07F4  0084               	movwf	4
  1789  07F5  3001               	movlw	high __pbssBANK2
  1790  07F6  0085               	movwf	5
  1791  07F7  3020               	movlw	32
  1792  07F8  00FE               	movwf	btemp
  1793  07F9  3000               	movlw	0
  1794  07FA  00FF               	movwf	btemp+1
  1795  07FB  3188  2002         	fcall	clear_ram0
  1796  07FD                     end_of_initialization:	
  1797                           ;End of C runtime variable initialization code
  1798                           
  1799  07FD                     __end_of__initialization:	
  1800  07FD  0020               	movlb	0
  1801  07FE  31A2  2A59         	ljmp	_main	;jump to C main() function
  1802                           
  1803                           	psect	bssBANK1
  1804  00E7                     __pbssBANK1:	
  1805  00E7                     _Fsid:	
  1806  00E7                     	ds	2
  1807  00E9                     ff@FatFs:	
  1808  00E9                     	ds	2
  1809  00EB                     _CardType:	
  1810  00EB                     	ds	1
  1811  00EC                     _bw:	
  1812  00EC                     	ds	2
  1813                           
  1814                           	psect	dataBANK1
  1815  00EE                     __pdataBANK1:	
  1816  00EE                     _Stat:	
  1817  00EE                     	ds	1
  1818                           
  1819                           	psect	bssBANK2
  1820  014D                     __pbssBANK2:	
  1821  014D                     _Fil:	
  1822  014D                     	ds	32
  1823                           
  1824                           	psect	clrtext
  1825  0802                     clear_ram0:	
  1826                           ;	Called with FSR0 containing the base address, and
  1827                           ;	btemp/btemp+1 has the size to clear
  1828                           
  1829  0802  0064               	clrwdt	;clear the watchdog before getting into this loop
  1830  0803                     clrloop0:	
  1831  0803  0180               	clrf	0	;clear RAM location pointed to by FSR
  1832  0804  3101               	addfsr 0,1
  1833  0805  3001               	movlw	1
  1834  0806  02FE               	subwf	126,f
  1835  0807  3000               	movlw	0
  1836  0808  3BFF               	subwfb	127,f
  1837  0809  087F               	movf	127,w
  1838  080A  047E               	iorwf	126,w
  1839  080B  1903               	btfsc	3,2
  1840  080C  3400               	retlw	0	;all done for this memory range, return
  1841  080D  2803               	goto	clrloop0	;have we reached the end yet?
  1842                           
  1843                           	psect	cstackBANK2
  1844  0120                     __pcstackBANK2:	
  1845  0120                     f_open@sfn:	
  1846                           
  1847                           ; 12 bytes @ 0x0
  1848  0120                     	ds	12
  1849  012C                     f_open@cl:	
  1850                           
  1851                           ; 4 bytes @ 0xC
  1852  012C                     	ds	4
  1853  0130                     f_open@dw:	
  1854                           
  1855                           ; 4 bytes @ 0x10
  1856  0130                     	ds	4
  1857  0134                     f_open@res:	
  1858                           
  1859                           ; 1 bytes @ 0x14
  1860  0134                     	ds	1
  1861  0135                     f_open@dir:	
  1862                           
  1863                           ; 2 bytes @ 0x15
  1864  0135                     	ds	2
  1865  0137                     f_open@dj:	
  1866                           
  1867                           ; 22 bytes @ 0x17
  1868  0137                     	ds	22
  1869                           
  1870                           	psect	cstackBANK1
  1871  00A0                     __pcstackBANK1:	
  1872  00A0                     ?_remove_chain:	
  1873  00A0                     ??_dir_sdi:	
  1874                           ; 1 bytes @ 0x0
  1875                           
  1876  00A0                     ?_create_chain:	
  1877                           ; 1 bytes @ 0x0
  1878                           
  1879  00A0                     remove_chain@fs:	
  1880                           ; 4 bytes @ 0x0
  1881                           
  1882  00A0                     create_chain@fs:	
  1883                           ; 2 bytes @ 0x0
  1884                           
  1885  00A0                     find_volume@br:	
  1886                           ; 2 bytes @ 0x0
  1887                           
  1888                           
  1889                           ; 16 bytes @ 0x0
  1890  00A0                     	ds	2
  1891  00A2                     remove_chain@clst:	
  1892  00A2                     create_chain@clst:	
  1893                           ; 4 bytes @ 0x2
  1894                           
  1895                           
  1896                           ; 4 bytes @ 0x2
  1897  00A2                     	ds	4
  1898  00A6                     remove_chain@res:	
  1899  00A6                     create_chain@res:	
  1900                           ; 1 bytes @ 0x6
  1901                           
  1902                           
  1903                           ; 1 bytes @ 0x6
  1904  00A6                     	ds	1
  1905  00A7                     remove_chain@nxt:	
  1906  00A7                     create_chain@scl:	
  1907                           ; 4 bytes @ 0x7
  1908                           
  1909                           
  1910                           ; 4 bytes @ 0x7
  1911  00A7                     	ds	3
  1912  00AA                     dir_sdi@ic:	
  1913                           
  1914                           ; 2 bytes @ 0xA
  1915  00AA                     	ds	1
  1916  00AB                     create_chain@ncl:	
  1917                           
  1918                           ; 4 bytes @ 0xB
  1919  00AB                     	ds	1
  1920  00AC                     dir_sdi@sect:	
  1921                           
  1922                           ; 4 bytes @ 0xC
  1923  00AC                     	ds	3
  1924  00AF                     create_chain@cs:	
  1925                           
  1926                           ; 4 bytes @ 0xF
  1927  00AF                     	ds	1
  1928  00B0                     dir_sdi@clst:	
  1929  00B0                     _find_volume$940:	
  1930                           ; 4 bytes @ 0x10
  1931                           
  1932                           
  1933                           ; 4 bytes @ 0x10
  1934  00B0                     	ds	3
  1935  00B3                     ?_f_lseek:	
  1936  00B3                     ?_f_write:	
  1937                           ; 1 bytes @ 0x13
  1938                           
  1939  00B3                     ?_dir_next:	
  1940                           ; 1 bytes @ 0x13
  1941                           
  1942  00B3                     dir_next@dp:	
  1943                           ; 1 bytes @ 0x13
  1944                           
  1945  00B3                     f_write@fp:	
  1946                           ; 2 bytes @ 0x13
  1947                           
  1948  00B3                     f_lseek@fp:	
  1949                           ; 2 bytes @ 0x13
  1950                           
  1951                           
  1952                           ; 2 bytes @ 0x13
  1953  00B3                     	ds	1
  1954  00B4                     _find_volume$941:	
  1955                           
  1956                           ; 2 bytes @ 0x14
  1957  00B4                     	ds	1
  1958  00B5                     dir_next@stretch:	
  1959  00B5                     f_write@buff:	
  1960                           ; 2 bytes @ 0x15
  1961                           
  1962  00B5                     f_lseek@ofs:	
  1963                           ; 2 bytes @ 0x15
  1964                           
  1965                           
  1966                           ; 4 bytes @ 0x15
  1967  00B5                     	ds	1
  1968  00B6                     find_volume@szbfat:	
  1969                           
  1970                           ; 4 bytes @ 0x16
  1971  00B6                     	ds	1
  1972  00B7                     ??_dir_next:	
  1973  00B7                     f_write@btw:	
  1974                           ; 1 bytes @ 0x17
  1975                           
  1976                           
  1977                           ; 2 bytes @ 0x17
  1978  00B7                     	ds	2
  1979  00B9                     ??_f_lseek:	
  1980  00B9                     f_write@bw:	
  1981                           ; 1 bytes @ 0x19
  1982                           
  1983                           
  1984                           ; 1 bytes @ 0x19
  1985  00B9                     	ds	1
  1986  00BA                     ??_f_write:	
  1987  00BA                     find_volume@pt:	
  1988                           ; 1 bytes @ 0x1A
  1989                           
  1990                           
  1991                           ; 2 bytes @ 0x1A
  1992  00BA                     	ds	2
  1993  00BC                     find_volume@sysect:	
  1994                           
  1995                           ; 4 bytes @ 0x1C
  1996  00BC                     	ds	3
  1997  00BF                     dir_next@c:	
  1998                           
  1999                           ; 2 bytes @ 0x1F
  2000  00BF                     	ds	1
  2001  00C0                     find_volume@vol:	
  2002                           
  2003                           ; 2 bytes @ 0x20
  2004  00C0                     	ds	1
  2005  00C1                     dir_next@i:	
  2006  00C1                     f_lseek@ifptr:	
  2007                           ; 2 bytes @ 0x21
  2008                           
  2009                           
  2010                           ; 4 bytes @ 0x21
  2011  00C1                     	ds	1
  2012  00C2                     find_volume@nrsv:	
  2013                           
  2014                           ; 2 bytes @ 0x22
  2015  00C2                     	ds	1
  2016  00C3                     dir_next@clst:	
  2017                           
  2018                           ; 4 bytes @ 0x23
  2019  00C3                     	ds	1
  2020  00C4                     find_volume@tsect:	
  2021                           
  2022                           ; 4 bytes @ 0x24
  2023  00C4                     	ds	1
  2024  00C5                     f_lseek@res:	
  2025                           
  2026                           ; 1 bytes @ 0x25
  2027  00C5                     	ds	1
  2028  00C6                     f_write@res:	
  2029  00C6                     f_lseek@nsect:	
  2030                           ; 1 bytes @ 0x26
  2031                           
  2032                           
  2033                           ; 4 bytes @ 0x26
  2034  00C6                     	ds	1
  2035  00C7                     ?_dir_alloc:	
  2036  00C7                     ?_dir_find:	
  2037                           ; 1 bytes @ 0x27
  2038                           
  2039  00C7                     dir_alloc@dp:	
  2040                           ; 1 bytes @ 0x27
  2041                           
  2042  00C7                     dir_find@dp:	
  2043                           ; 2 bytes @ 0x27
  2044                           
  2045  00C7                     f_write@wbuff:	
  2046                           ; 2 bytes @ 0x27
  2047                           
  2048                           
  2049                           ; 2 bytes @ 0x27
  2050  00C7                     	ds	1
  2051  00C8                     find_volume@nclst:	
  2052                           
  2053                           ; 4 bytes @ 0x28
  2054  00C8                     	ds	1
  2055  00C9                     ??_dir_find:	
  2056  00C9                     f_write@csect:	
  2057                           ; 1 bytes @ 0x29
  2058                           
  2059  00C9                     dir_alloc@nent:	
  2060                           ; 1 bytes @ 0x29
  2061                           
  2062                           
  2063                           ; 2 bytes @ 0x29
  2064  00C9                     	ds	1
  2065  00CA                     dir_find@c:	
  2066  00CA                     f_write@cc:	
  2067                           ; 1 bytes @ 0x2A
  2068                           
  2069  00CA                     f_lseek@bcs:	
  2070                           ; 2 bytes @ 0x2A
  2071                           
  2072                           
  2073                           ; 4 bytes @ 0x2A
  2074  00CA                     	ds	1
  2075  00CB                     ??_dir_alloc:	
  2076  00CB                     dir_find@dir:	
  2077                           ; 1 bytes @ 0x2B
  2078                           
  2079                           
  2080                           ; 2 bytes @ 0x2B
  2081  00CB                     	ds	1
  2082  00CC                     find_volume@stat:	
  2083  00CC                     f_write@sect:	
  2084                           ; 1 bytes @ 0x2C
  2085                           
  2086                           
  2087                           ; 4 bytes @ 0x2C
  2088  00CC                     	ds	1
  2089  00CD                     dir_find@res:	
  2090  00CD                     dir_alloc@n:	
  2091                           ; 1 bytes @ 0x2D
  2092                           
  2093  00CD                     find_volume@fasize:	
  2094                           ; 2 bytes @ 0x2D
  2095                           
  2096                           
  2097                           ; 4 bytes @ 0x2D
  2098  00CD                     	ds	1
  2099  00CE                     ?_follow_path:	
  2100  00CE                     follow_path@dp:	
  2101                           ; 1 bytes @ 0x2E
  2102                           
  2103  00CE                     f_lseek@clst:	
  2104                           ; 2 bytes @ 0x2E
  2105                           
  2106                           
  2107                           ; 4 bytes @ 0x2E
  2108  00CE                     	ds	1
  2109  00CF                     dir_alloc@res:	
  2110                           
  2111                           ; 1 bytes @ 0x2F
  2112  00CF                     	ds	1
  2113  00D0                     ?_dir_register:	
  2114  00D0                     dir_register@dp:	
  2115                           ; 1 bytes @ 0x30
  2116                           
  2117  00D0                     follow_path@path:	
  2118                           ; 2 bytes @ 0x30
  2119                           
  2120  00D0                     f_write@clst:	
  2121                           ; 2 bytes @ 0x30
  2122                           
  2123                           
  2124                           ; 4 bytes @ 0x30
  2125  00D0                     	ds	1
  2126  00D1                     find_volume@bsect:	
  2127                           
  2128                           ; 4 bytes @ 0x31
  2129  00D1                     	ds	1
  2130  00D2                     ??_dir_register:	
  2131  00D2                     ??_follow_path:	
  2132                           ; 1 bytes @ 0x32
  2133                           
  2134                           
  2135                           ; 1 bytes @ 0x32
  2136  00D2                     	ds	2
  2137  00D4                     follow_path@dir:	
  2138  00D4                     f_write@wcnt:	
  2139                           ; 2 bytes @ 0x34
  2140                           
  2141                           
  2142                           ; 2 bytes @ 0x34
  2143  00D4                     	ds	1
  2144  00D5                     find_volume@i:	
  2145                           
  2146                           ; 2 bytes @ 0x35
  2147  00D5                     	ds	1
  2148  00D6                     dir_register@res:	
  2149  00D6                     follow_path@ns:	
  2150                           ; 1 bytes @ 0x36
  2151                           
  2152                           
  2153                           ; 1 bytes @ 0x36
  2154  00D6                     	ds	1
  2155  00D7                     follow_path@res:	
  2156  00D7                     find_volume@fmt:	
  2157                           ; 1 bytes @ 0x37
  2158                           
  2159                           
  2160                           ; 1 bytes @ 0x37
  2161  00D7                     	ds	1
  2162  00D8                     find_volume@fs:	
  2163                           
  2164                           ; 2 bytes @ 0x38
  2165  00D8                     	ds	2
  2166  00DA                     ??_f_mount:	
  2167  00DA                     ?_f_open:	
  2168                           ; 1 bytes @ 0x3A
  2169                           
  2170  00DA                     f_open@fp:	
  2171                           ; 1 bytes @ 0x3A
  2172                           
  2173                           
  2174                           ; 2 bytes @ 0x3A
  2175  00DA                     	ds	2
  2176  00DC                     f_mount@res:	
  2177  00DC                     f_open@path:	
  2178                           ; 1 bytes @ 0x3C
  2179                           
  2180                           
  2181                           ; 2 bytes @ 0x3C
  2182  00DC                     	ds	1
  2183  00DD                     f_mount@cfs:	
  2184                           
  2185                           ; 2 bytes @ 0x3D
  2186  00DD                     	ds	1
  2187  00DE                     f_open@mode:	
  2188                           
  2189                           ; 1 bytes @ 0x3E
  2190  00DE                     	ds	1
  2191  00DF                     ??_f_open:	
  2192  00DF                     f_mount@rp:	
  2193                           ; 1 bytes @ 0x3F
  2194                           
  2195                           
  2196                           ; 2 bytes @ 0x3F
  2197  00DF                     	ds	2
  2198  00E1                     f_mount@vol:	
  2199                           
  2200                           ; 2 bytes @ 0x41
  2201  00E1                     	ds	2
  2202  00E3                     ??_main:	
  2203                           
  2204                           ; 1 bytes @ 0x43
  2205  00E3                     	ds	2
  2206  00E5                     main@y:	
  2207                           
  2208                           ; 2 bytes @ 0x45
  2209  00E5                     	ds	2
  2210                           
  2211                           	psect	cstackCOMMON
  2212  0070                     __pcstackCOMMON:	
  2213  0070                     ?_SPI_Initialize:	
  2214  0070                     ??_SPI_Initialize:	
  2215                           ; 1 bytes @ 0x0
  2216                           
  2217  0070                     ?_SPI_Exchange8bit:	
  2218                           ; 1 bytes @ 0x0
  2219                           
  2220  0070                     ??_SPI_Exchange8bit:	
  2221                           ; 1 bytes @ 0x0
  2222                           
  2223  0070                     ?_internal_16:	
  2224                           ; 1 bytes @ 0x0
  2225                           
  2226  0070                     ??_internal_16:	
  2227                           ; 1 bytes @ 0x0
  2228                           
  2229  0070                     ?_initMain:	
  2230                           ; 1 bytes @ 0x0
  2231                           
  2232  0070                     ??_initMain:	
  2233                           ; 1 bytes @ 0x0
  2234                           
  2235  0070                     ?_main:	
  2236                           ; 1 bytes @ 0x0
  2237                           
  2238  0070                     ?_wait_ready:	
  2239                           ; 1 bytes @ 0x0
  2240                           
  2241  0070                     ?_deselect:	
  2242                           ; 1 bytes @ 0x0
  2243                           
  2244  0070                     ?_select:	
  2245                           ; 1 bytes @ 0x0
  2246                           
  2247  0070                     ?_disk_initialize:	
  2248                           ; 1 bytes @ 0x0
  2249                           
  2250  0070                     ?_disk_status:	
  2251                           ; 1 bytes @ 0x0
  2252                           
  2253  0070                     ??_disk_status:	
  2254                           ; 1 bytes @ 0x0
  2255                           
  2256  0070                     ?_mem_cpy:	
  2257                           ; 1 bytes @ 0x0
  2258                           
  2259  0070                     ?_mem_set:	
  2260                           ; 1 bytes @ 0x0
  2261                           
  2262  0070                     ?_st_clust:	
  2263                           ; 1 bytes @ 0x0
  2264                           
  2265  0070                     ?_mem_cmp:	
  2266                           ; 1 bytes @ 0x0
  2267                           
  2268  0070                     ?_chk_chr:	
  2269                           ; 2 bytes @ 0x0
  2270                           
  2271  0070                     ?_get_ldnumber:	
  2272                           ; 2 bytes @ 0x0
  2273                           
  2274  0070                     ?___wmul:	
  2275                           ; 2 bytes @ 0x0
  2276                           
  2277  0070                     ?_ld_clust:	
  2278                           ; 2 bytes @ 0x0
  2279                           
  2280  0070                     ?___lmul:	
  2281                           ; 4 bytes @ 0x0
  2282                           
  2283  0070                     ?___lldiv:	
  2284                           ; 4 bytes @ 0x0
  2285                           
  2286  0070                     disk_status@pdrv:	
  2287                           ; 4 bytes @ 0x0
  2288                           
  2289  0070                     SPI_Exchange8bit@data:	
  2290                           ; 1 bytes @ 0x0
  2291                           
  2292  0070                     mem_cpy@dst:	
  2293                           ; 1 bytes @ 0x0
  2294                           
  2295  0070                     mem_set@dst:	
  2296                           ; 2 bytes @ 0x0
  2297                           
  2298  0070                     mem_cmp@dst:	
  2299                           ; 2 bytes @ 0x0
  2300                           
  2301  0070                     chk_chr@str:	
  2302                           ; 2 bytes @ 0x0
  2303                           
  2304  0070                     ld_clust@fs:	
  2305                           ; 2 bytes @ 0x0
  2306                           
  2307  0070                     st_clust@dir:	
  2308                           ; 2 bytes @ 0x0
  2309                           
  2310  0070                     ___wmul@multiplier:	
  2311                           ; 2 bytes @ 0x0
  2312                           
  2313  0070                     ___lmul@multiplier:	
  2314                           ; 2 bytes @ 0x0
  2315                           
  2316  0070                     ___lldiv@divisor:	
  2317                           ; 4 bytes @ 0x0
  2318                           
  2319                           
  2320                           ; 4 bytes @ 0x0
  2321  0070                     	ds	1
  2322  0071                     ??_wait_ready:	
  2323  0071                     ??_deselect:	
  2324                           ; 1 bytes @ 0x1
  2325                           
  2326  0071                     ?_rcvr_datablock:	
  2327                           ; 1 bytes @ 0x1
  2328                           
  2329  0071                     ?_validate:	
  2330                           ; 1 bytes @ 0x1
  2331                           
  2332  0071                     wait_ready@tmr:	
  2333                           ; 1 bytes @ 0x1
  2334                           
  2335  0071                     rcvr_datablock@buff:	
  2336                           ; 2 bytes @ 0x1
  2337                           
  2338  0071                     validate@obj:	
  2339                           ; 2 bytes @ 0x1
  2340                           
  2341                           
  2342                           ; 2 bytes @ 0x1
  2343  0071                     	ds	1
  2344  0072                     ??_get_ldnumber:	
  2345  0072                     mem_cmp@src:	
  2346                           ; 1 bytes @ 0x2
  2347                           
  2348  0072                     mem_cpy@src:	
  2349                           ; 1 bytes @ 0x2
  2350                           
  2351  0072                     mem_set@val:	
  2352                           ; 2 bytes @ 0x2
  2353                           
  2354  0072                     chk_chr@chr:	
  2355                           ; 2 bytes @ 0x2
  2356                           
  2357  0072                     ld_clust@dir:	
  2358                           ; 2 bytes @ 0x2
  2359                           
  2360  0072                     ___wmul@multiplicand:	
  2361                           ; 2 bytes @ 0x2
  2362                           
  2363  0072                     st_clust@cl:	
  2364                           ; 2 bytes @ 0x2
  2365                           
  2366                           
  2367                           ; 4 bytes @ 0x2
  2368  0072                     	ds	1
  2369  0073                     ??_select:	
  2370  0073                     ?_xmit_datablock:	
  2371                           ; 1 bytes @ 0x3
  2372                           
  2373  0073                     ?___send_cmd:	
  2374                           ; 1 bytes @ 0x3
  2375                           
  2376  0073                     ??_validate:	
  2377                           ; 1 bytes @ 0x3
  2378                           
  2379  0073                     rcvr_datablock@btr:	
  2380                           ; 1 bytes @ 0x3
  2381                           
  2382  0073                     xmit_datablock@buff:	
  2383                           ; 2 bytes @ 0x3
  2384                           
  2385  0073                     mem_cmp@cnt:	
  2386                           ; 2 bytes @ 0x3
  2387                           
  2388  0073                     ___send_cmd@arg:	
  2389                           ; 2 bytes @ 0x3
  2390                           
  2391                           
  2392                           ; 4 bytes @ 0x3
  2393  0073                     	ds	1
  2394  0074                     ??_chk_chr:	
  2395  0074                     ??_ld_clust:	
  2396                           ; 1 bytes @ 0x4
  2397                           
  2398  0074                     ??___wmul:	
  2399                           ; 1 bytes @ 0x4
  2400                           
  2401  0074                     mem_cpy@cnt:	
  2402                           ; 1 bytes @ 0x4
  2403                           
  2404  0074                     mem_set@cnt:	
  2405                           ; 2 bytes @ 0x4
  2406                           
  2407  0074                     ___wmul@product:	
  2408                           ; 2 bytes @ 0x4
  2409                           
  2410  0074                     ___lmul@multiplicand:	
  2411                           ; 2 bytes @ 0x4
  2412                           
  2413  0074                     ___lldiv@dividend:	
  2414                           ; 4 bytes @ 0x4
  2415                           
  2416                           
  2417                           ; 4 bytes @ 0x4
  2418  0074                     	ds	1
  2419  0075                     ??_rcvr_datablock:	
  2420  0075                     ??_mem_cmp:	
  2421                           ; 1 bytes @ 0x5
  2422                           
  2423  0075                     xmit_datablock@token:	
  2424                           ; 1 bytes @ 0x5
  2425                           
  2426                           
  2427                           ; 1 bytes @ 0x5
  2428  0075                     	ds	1
  2429  0076                     ??_xmit_datablock:	
  2430  0076                     ??_mem_cpy:	
  2431                           ; 1 bytes @ 0x6
  2432                           
  2433  0076                     ??_mem_set:	
  2434                           ; 1 bytes @ 0x6
  2435                           
  2436  0076                     ??_st_clust:	
  2437                           ; 1 bytes @ 0x6
  2438                           
  2439  0076                     rcvr_datablock@tmr:	
  2440                           ; 1 bytes @ 0x6
  2441                           
  2442  0076                     mem_set@d:	
  2443                           ; 2 bytes @ 0x6
  2444                           
  2445                           
  2446                           ; 2 bytes @ 0x6
  2447  0076                     	ds	1
  2448  0077                     ??___send_cmd:	
  2449  0077                     xmit_datablock@i:	
  2450                           ; 1 bytes @ 0x7
  2451                           
  2452  0077                     mem_cpy@d:	
  2453                           ; 2 bytes @ 0x7
  2454                           
  2455  0077                     mem_cmp@d:	
  2456                           ; 2 bytes @ 0x7
  2457                           
  2458                           
  2459                           ; 2 bytes @ 0x7
  2460  0077                     	ds	1
  2461  0078                     ?_create_name:	
  2462  0078                     ??___lmul:	
  2463                           ; 1 bytes @ 0x8
  2464                           
  2465  0078                     ??___lldiv:	
  2466                           ; 1 bytes @ 0x8
  2467                           
  2468  0078                     rcvr_datablock@token:	
  2469                           ; 1 bytes @ 0x8
  2470                           
  2471  0078                     ___send_cmd@res:	
  2472                           ; 1 bytes @ 0x8
  2473                           
  2474  0078                     create_name@dp:	
  2475                           ; 1 bytes @ 0x8
  2476                           
  2477  0078                     ___lmul@product:	
  2478                           ; 2 bytes @ 0x8
  2479                           
  2480                           
  2481                           ; 4 bytes @ 0x8
  2482  0078                     	ds	1
  2483  0079                     xmit_datablock@resp:	
  2484  0079                     ___send_cmd@n:	
  2485                           ; 1 bytes @ 0x9
  2486                           
  2487  0079                     mem_cpy@s:	
  2488                           ; 1 bytes @ 0x9
  2489                           
  2490  0079                     mem_cmp@r:	
  2491                           ; 2 bytes @ 0x9
  2492                           
  2493  0079                     validate@fil:	
  2494                           ; 2 bytes @ 0x9
  2495                           
  2496  0079                     ___lldiv@quotient:	
  2497                           ; 2 bytes @ 0x9
  2498                           
  2499                           
  2500                           ; 4 bytes @ 0x9
  2501  0079                     	ds	1
  2502  007A                     ___send_cmd@cmd:	
  2503  007A                     create_name@path:	
  2504                           ; 1 bytes @ 0xA
  2505                           
  2506  007A                     ld_clust@cl:	
  2507                           ; 1 bytes @ 0xA
  2508                           
  2509                           
  2510                           ; 4 bytes @ 0xA
  2511  007A                     	ds	1
  2512  007B                     ??_send_cmd:	
  2513  007B                     ??_create_name:	
  2514                           ; 1 bytes @ 0xB
  2515                           
  2516  007B                     mem_cmp@s:	
  2517                           ; 1 bytes @ 0xB
  2518                           
  2519                           
  2520                           ; 1 bytes @ 0xB
  2521  007B                     	ds	1
  2522  007C                     send_cmd@cmd:	
  2523                           
  2524                           ; 1 bytes @ 0xC
  2525  007C                     	ds	1
  2526  007D                     send_cmd@res:	
  2527  007D                     ___lldiv@counter:	
  2528                           ; 1 bytes @ 0xD
  2529                           
  2530                           
  2531                           ; 1 bytes @ 0xD
  2532  007D                     	ds	1
  2533                           
  2534                           	psect	cstackBANK0
  2535  0020                     __pcstackBANK0:	
  2536  0020                     ?_send_cmd:	
  2537  0020                     ?_clust2sect:	
  2538                           ; 1 bytes @ 0x0
  2539                           
  2540  0020                     clust2sect@fs:	
  2541                           ; 4 bytes @ 0x0
  2542                           
  2543  0020                     _create_name$836:	
  2544                           ; 2 bytes @ 0x0
  2545                           
  2546  0020                     send_cmd@arg:	
  2547                           ; 2 bytes @ 0x0
  2548                           
  2549                           
  2550                           ; 4 bytes @ 0x0
  2551  0020                     	ds	2
  2552  0022                     create_name@si:	
  2553  0022                     get_ldnumber@tp:	
  2554                           ; 2 bytes @ 0x2
  2555                           
  2556  0022                     clust2sect@clst:	
  2557                           ; 2 bytes @ 0x2
  2558                           
  2559                           
  2560                           ; 4 bytes @ 0x2
  2561  0022                     	ds	2
  2562  0024                     ??_disk_initialize:	
  2563  0024                     ?_disk_read:	
  2564                           ; 1 bytes @ 0x4
  2565                           
  2566  0024                     ?_disk_write:	
  2567                           ; 1 bytes @ 0x4
  2568                           
  2569  0024                     ?_disk_ioctl:	
  2570                           ; 1 bytes @ 0x4
  2571                           
  2572  0024                     disk_ioctl@cmd:	
  2573                           ; 1 bytes @ 0x4
  2574                           
  2575  0024                     create_name@b:	
  2576                           ; 1 bytes @ 0x4
  2577                           
  2578  0024                     disk_read@buff:	
  2579                           ; 1 bytes @ 0x4
  2580                           
  2581  0024                     disk_write@buff:	
  2582                           ; 2 bytes @ 0x4
  2583                           
  2584  0024                     get_ldnumber@vol:	
  2585                           ; 2 bytes @ 0x4
  2586                           
  2587                           
  2588                           ; 2 bytes @ 0x4
  2589  0024                     	ds	1
  2590  0025                     disk_initialize@pdrv:	
  2591  0025                     disk_ioctl@buff:	
  2592                           ; 1 bytes @ 0x5
  2593                           
  2594  0025                     create_name@ni:	
  2595                           ; 1 bytes @ 0x5
  2596                           
  2597                           
  2598                           ; 2 bytes @ 0x5
  2599  0025                     	ds	1
  2600  0026                     ??_disk_ioctl:	
  2601  0026                     ??_clust2sect:	
  2602                           ; 1 bytes @ 0x6
  2603                           
  2604  0026                     get_ldnumber@i:	
  2605                           ; 1 bytes @ 0x6
  2606                           
  2607  0026                     disk_initialize@ocr:	
  2608                           ; 2 bytes @ 0x6
  2609                           
  2610  0026                     disk_read@sector:	
  2611                           ; 4 bytes @ 0x6
  2612                           
  2613  0026                     disk_write@sector:	
  2614                           ; 4 bytes @ 0x6
  2615                           
  2616                           
  2617                           ; 4 bytes @ 0x6
  2618  0026                     	ds	1
  2619  0027                     create_name@p:	
  2620                           
  2621                           ; 2 bytes @ 0x7
  2622  0027                     	ds	1
  2623  0028                     get_ldnumber@path:	
  2624                           
  2625                           ; 1 bytes @ 0x8
  2626  0028                     	ds	1
  2627  0029                     create_name@d:	
  2628  0029                     get_ldnumber@tt:	
  2629                           ; 1 bytes @ 0x9
  2630                           
  2631                           
  2632                           ; 2 bytes @ 0x9
  2633  0029                     	ds	1
  2634  002A                     _disk_initialize$346:	
  2635  002A                     disk_read@count:	
  2636                           ; 2 bytes @ 0xA
  2637                           
  2638  002A                     disk_write@count:	
  2639                           ; 2 bytes @ 0xA
  2640                           
  2641  002A                     create_name@i:	
  2642                           ; 2 bytes @ 0xA
  2643                           
  2644                           
  2645                           ; 2 bytes @ 0xA
  2646  002A                     	ds	2
  2647  002C                     ??_disk_read:	
  2648  002C                     ??_disk_write:	
  2649                           ; 1 bytes @ 0xC
  2650                           
  2651  002C                     disk_initialize@cmd:	
  2652                           ; 1 bytes @ 0xC
  2653                           
  2654  002C                     create_name@sfn:	
  2655                           ; 1 bytes @ 0xC
  2656                           
  2657                           
  2658                           ; 1 bytes @ 0xC
  2659  002C                     	ds	1
  2660  002D                     disk_initialize@ty:	
  2661  002D                     disk_read@pdrv:	
  2662                           ; 1 bytes @ 0xD
  2663                           
  2664  002D                     disk_write@pdrv:	
  2665                           ; 1 bytes @ 0xD
  2666                           
  2667  002D                     create_name@c:	
  2668                           ; 1 bytes @ 0xD
  2669                           
  2670                           
  2671                           ; 1 bytes @ 0xD
  2672  002D                     	ds	1
  2673  002E                     ?_sync_window:	
  2674  002E                     disk_initialize@tmr:	
  2675                           ; 1 bytes @ 0xE
  2676                           
  2677  002E                     _disk_read$355:	
  2678                           ; 2 bytes @ 0xE
  2679                           
  2680  002E                     sync_window@fs:	
  2681                           ; 2 bytes @ 0xE
  2682                           
  2683                           
  2684                           ; 2 bytes @ 0xE
  2685  002E                     	ds	2
  2686  0030                     ??_sync_window:	
  2687  0030                     disk_initialize@n:	
  2688                           ; 1 bytes @ 0x10
  2689                           
  2690  0030                     disk_read@cmd:	
  2691                           ; 1 bytes @ 0x10
  2692                           
  2693                           
  2694                           ; 1 bytes @ 0x10
  2695  0030                     	ds	4
  2696  0034                     disk_ioctl@csd:	
  2697                           
  2698                           ; 16 bytes @ 0x14
  2699  0034                     	ds	8
  2700  003C                     sync_window@res:	
  2701                           
  2702                           ; 1 bytes @ 0x1C
  2703  003C                     	ds	1
  2704  003D                     sync_window@nf:	
  2705                           
  2706                           ; 2 bytes @ 0x1D
  2707  003D                     	ds	2
  2708  003F                     sync_window@wsect:	
  2709                           
  2710                           ; 4 bytes @ 0x1F
  2711  003F                     	ds	4
  2712  0043                     ?_move_window:	
  2713  0043                     move_window@fs:	
  2714                           ; 1 bytes @ 0x23
  2715                           
  2716                           
  2717                           ; 2 bytes @ 0x23
  2718  0043                     	ds	1
  2719  0044                     disk_ioctl@pdrv:	
  2720                           
  2721                           ; 1 bytes @ 0x24
  2722  0044                     	ds	1
  2723  0045                     disk_ioctl@csize:	
  2724  0045                     move_window@sector:	
  2725                           ; 4 bytes @ 0x25
  2726                           
  2727                           
  2728                           ; 4 bytes @ 0x25
  2729  0045                     	ds	4
  2730  0049                     ??_move_window:	
  2731  0049                     disk_ioctl@res:	
  2732                           ; 1 bytes @ 0x29
  2733                           
  2734                           
  2735                           ; 1 bytes @ 0x29
  2736  0049                     	ds	1
  2737  004A                     disk_ioctl@n:	
  2738                           
  2739                           ; 1 bytes @ 0x2A
  2740  004A                     	ds	1
  2741  004B                     disk_ioctl@ptr:	
  2742                           
  2743                           ; 1 bytes @ 0x2B
  2744  004B                     	ds	1
  2745  004C                     ?_sync_fs:	
  2746  004C                     sync_fs@fs:	
  2747                           ; 1 bytes @ 0x2C
  2748                           
  2749                           
  2750                           ; 2 bytes @ 0x2C
  2751  004C                     	ds	1
  2752  004D                     move_window@res:	
  2753                           
  2754                           ; 1 bytes @ 0x2D
  2755  004D                     	ds	1
  2756  004E                     ??_sync_fs:	
  2757  004E                     ?_put_fat:	
  2758                           ; 1 bytes @ 0x2E
  2759                           
  2760  004E                     ?_check_fs:	
  2761                           ; 1 bytes @ 0x2E
  2762                           
  2763  004E                     ?_get_fat:	
  2764                           ; 1 bytes @ 0x2E
  2765                           
  2766  004E                     get_fat@fs:	
  2767                           ; 4 bytes @ 0x2E
  2768                           
  2769  004E                     put_fat@fs:	
  2770                           ; 2 bytes @ 0x2E
  2771                           
  2772  004E                     check_fs@fs:	
  2773                           ; 2 bytes @ 0x2E
  2774                           
  2775                           
  2776                           ; 2 bytes @ 0x2E
  2777  004E                     	ds	2
  2778  0050                     get_fat@clst:	
  2779  0050                     put_fat@clst:	
  2780                           ; 4 bytes @ 0x30
  2781                           
  2782  0050                     check_fs@sect:	
  2783                           ; 4 bytes @ 0x30
  2784                           
  2785                           
  2786                           ; 4 bytes @ 0x30
  2787  0050                     	ds	2
  2788  0052                     sync_fs@res:	
  2789                           
  2790                           ; 1 bytes @ 0x32
  2791  0052                     	ds	1
  2792  0053                     ?_f_sync:	
  2793  0053                     f_sync@fp:	
  2794                           ; 1 bytes @ 0x33
  2795                           
  2796                           
  2797                           ; 2 bytes @ 0x33
  2798  0053                     	ds	1
  2799  0054                     ??_get_fat:	
  2800  0054                     ??_check_fs:	
  2801                           ; 1 bytes @ 0x34
  2802                           
  2803  0054                     put_fat@val:	
  2804                           ; 1 bytes @ 0x34
  2805                           
  2806                           
  2807                           ; 4 bytes @ 0x34
  2808  0054                     	ds	1
  2809  0055                     ??_f_sync:	
  2810                           
  2811                           ; 1 bytes @ 0x35
  2812  0055                     	ds	3
  2813  0058                     ??_put_fat:	
  2814  0058                     ?_find_volume:	
  2815                           ; 1 bytes @ 0x38
  2816                           
  2817  0058                     find_volume@rfs:	
  2818                           ; 1 bytes @ 0x38
  2819                           
  2820                           
  2821                           ; 2 bytes @ 0x38
  2822  0058                     	ds	2
  2823  005A                     find_volume@path:	
  2824                           
  2825                           ; 1 bytes @ 0x3A
  2826  005A                     	ds	1
  2827  005B                     find_volume@wmode:	
  2828                           
  2829                           ; 1 bytes @ 0x3B
  2830  005B                     	ds	1
  2831  005C                     ??_find_volume:	
  2832                           
  2833                           ; 1 bytes @ 0x3C
  2834  005C                     	ds	1
  2835  005D                     f_sync@res:	
  2836                           
  2837                           ; 1 bytes @ 0x3D
  2838  005D                     	ds	1
  2839  005E                     _get_fat$586:	
  2840  005E                     f_sync@dir:	
  2841                           ; 2 bytes @ 0x3E
  2842                           
  2843                           
  2844                           ; 2 bytes @ 0x3E
  2845  005E                     	ds	2
  2846  0060                     ?_f_close:	
  2847  0060                     f_close@fp:	
  2848                           ; 1 bytes @ 0x40
  2849                           
  2850  0060                     get_fat@val:	
  2851                           ; 2 bytes @ 0x40
  2852                           
  2853                           
  2854                           ; 4 bytes @ 0x40
  2855  0060                     	ds	2
  2856  0062                     ??_f_close:	
  2857                           
  2858                           ; 1 bytes @ 0x42
  2859  0062                     	ds	1
  2860  0063                     f_close@res:	
  2861  0063                     _put_fat$612:	
  2862                           ; 1 bytes @ 0x43
  2863                           
  2864                           
  2865                           ; 2 bytes @ 0x43
  2866  0063                     	ds	1
  2867  0064                     get_fat@wc:	
  2868                           
  2869                           ; 2 bytes @ 0x44
  2870  0064                     	ds	1
  2871  0065                     _put_fat$613:	
  2872                           
  2873                           ; 2 bytes @ 0x45
  2874  0065                     	ds	1
  2875  0066                     get_fat@p:	
  2876                           
  2877                           ; 2 bytes @ 0x46
  2878  0066                     	ds	1
  2879  0067                     put_fat@bc:	
  2880                           
  2881                           ; 2 bytes @ 0x47
  2882  0067                     	ds	1
  2883  0068                     get_fat@bc:	
  2884                           
  2885                           ; 2 bytes @ 0x48
  2886  0068                     	ds	1
  2887  0069                     put_fat@res:	
  2888                           
  2889                           ; 1 bytes @ 0x49
  2890  0069                     	ds	1
  2891  006A                     ?_f_mount:	
  2892  006A                     ?_dir_sdi:	
  2893                           ; 1 bytes @ 0x4A
  2894                           
  2895  006A                     put_fat@p:	
  2896                           ; 1 bytes @ 0x4A
  2897                           
  2898  006A                     dir_sdi@dp:	
  2899                           ; 2 bytes @ 0x4A
  2900                           
  2901  006A                     f_mount@fs:	
  2902                           ; 2 bytes @ 0x4A
  2903                           
  2904                           
  2905                           ; 2 bytes @ 0x4A
  2906  006A                     	ds	2
  2907  006C                     ??_remove_chain:	
  2908  006C                     ??_create_chain:	
  2909                           ; 1 bytes @ 0x4C
  2910                           
  2911  006C                     dir_sdi@idx:	
  2912                           ; 1 bytes @ 0x4C
  2913                           
  2914  006C                     f_mount@path:	
  2915                           ; 2 bytes @ 0x4C
  2916                           
  2917                           
  2918                           ; 2 bytes @ 0x4C
  2919  006C                     	ds	2
  2920  006E                     f_mount@opt:	
  2921                           
  2922                           ; 1 bytes @ 0x4E
  2923  006E                     	ds	2
  2924                           
  2925                           	psect	maintext
  2926  2259                     __pmaintext:	
  2927 ;;
  2928 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2929 ;;
  2930 ;; *************** function _main *****************
  2931 ;; Defined at:
  2932 ;;		line 105 in file "Main.c"
  2933 ;; Parameters:    Size  Location     Type
  2934 ;;		None
  2935 ;; Auto vars:     Size  Location     Type
  2936 ;;  y               2   69[BANK1 ] int 
  2937 ;; Return value:  Size  Location     Type
  2938 ;;                  1    wreg      void 
  2939 ;; Registers used:
  2940 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2941 ;; Tracked objects:
  2942 ;;		On entry : B1F/0
  2943 ;;		On exit  : 0/0
  2944 ;;		Unchanged: 0/0
  2945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2947 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2948 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2949 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2950 ;;Total ram usage:        4 bytes
  2951 ;; Hardware stack levels required when called:   14
  2952 ;; This function calls:
  2953 ;;		_f_close
  2954 ;;		_f_lseek
  2955 ;;		_f_mount
  2956 ;;		_f_open
  2957 ;;		_f_write
  2958 ;;		_initMain
  2959 ;; This function is called by:
  2960 ;;		Startup code after reset
  2961 ;; This function uses a non-reentrant model
  2962 ;;
  2963                           
  2964                           
  2965                           ;psect for function _main
  2966  2259                     _main:	
  2967                           
  2968                           ;Main.c: 106: initMain();
  2969                           
  2970                           ;incstack = 0
  2971                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2972  2259  31A0  2002  31A2   	fcall	_initMain
  2973                           
  2974                           ;Main.c: 110: if (f_mount(&FatFs, "", 1) == FR_OK) {
  2975  225C  30C2               	movlw	194
  2976  225D  00EA               	movwf	f_mount@fs
  2977  225E  3025               	movlw	37
  2978  225F  00EB               	movwf	f_mount@fs+1
  2979  2260  3014               	movlw	low ((STR_3+20)| (0+32768))
  2980  2261  00EC               	movwf	f_mount@path
  2981  2262  30B0               	movlw	high ((STR_3+20)| (0+32768))
  2982  2263  00ED               	movwf	f_mount@path+1
  2983  2264  01EE               	clrf	f_mount@opt
  2984  2265  0AEE               	incf	f_mount@opt,f
  2985  2266  31AD  2536  31A2   	fcall	_f_mount
  2986  2269  3A00               	xorlw	0
  2987  226A  1D03               	skipz
  2988  226B  2ACB               	goto	l5968
  2989                           
  2990                           ;Main.c: 113: if (f_open(&Fil, "texty.txt", 0x10 | 0x01 | 0x02) == FR_OK) {
  2991  226C  304D               	movlw	low _Fil
  2992  226D  0021               	movlb	1	; select bank1
  2993  226E  00DA               	movwf	f_open@fp^(0+128)
  2994  226F  3001               	movlw	high _Fil
  2995  2270  00DB               	movwf	(f_open@fp^(0+128)+1)
  2996  2271  3024               	movlw	low (STR_2| (0+32768))
  2997  2272  00DC               	movwf	f_open@path^(0+128)
  2998  2273  30B0               	movlw	high (STR_2| (0+32768))
  2999  2274  00DD               	movwf	(f_open@path^(0+128)+1)
  3000  2275  3013               	movlw	19
  3001  2276  00E3               	movwf	??_main^(0+128)
  3002  2277  0863               	movf	??_main^(0+128),w
  3003  2278  00DE               	movwf	f_open@mode^(0+128)
  3004  2279  319D  25AE  31A2   	fcall	_f_open
  3005  227C  3A00               	xorlw	0
  3006  227D  1D03               	skipz
  3007  227E  2AFC               	goto	l90
  3008                           
  3009                           ;Main.c: 116: if ((Fil.fsize != 0) && (f_lseek(&Fil, Fil.fsize) != FR_OK))
  3010  227F  0022               	movlb	2	; select bank2
  3011  2280  085A               	movf	((_Fil+3)^(0+256)+10),w
  3012  2281  0459               	iorwf	((_Fil+2)^(0+256)+10),w
  3013  2282  0458               	iorwf	((_Fil+1)^(0+256)+10),w
  3014  2283  0457               	iorwf	(_Fil^(0+256)+10),w
  3015  2284  1903               	skipnz
  3016  2285  2A9E               	goto	l5960
  3017  2286  304D               	movlw	low _Fil
  3018  2287  0021               	movlb	1	; select bank1
  3019  2288  00B3               	movwf	f_lseek@fp^(0+128)
  3020  2289  3001               	movlw	high _Fil
  3021  228A  00B4               	movwf	(f_lseek@fp^(0+128)+1)
  3022  228B  304D               	movlw	low _Fil
  3023  228C  0086               	movwf	6
  3024  228D  3001               	movlw	high _Fil
  3025  228E  0087               	movwf	7
  3026  228F  314A               	addfsr 1,10
  3027  2290  3F40               	moviw [0]fsr1
  3028  2291  00B5               	movwf	f_lseek@ofs^(0+128)
  3029  2292  3F41               	moviw [1]fsr1
  3030  2293  00B6               	movwf	(f_lseek@ofs+1)^(0+128)
  3031  2294  3F42               	moviw [2]fsr1
  3032  2295  00B7               	movwf	(f_lseek@ofs+2)^(0+128)
  3033  2296  3F43               	moviw [3]fsr1
  3034  2297  00B8               	movwf	(f_lseek@ofs+3)^(0+128)
  3035  2298  3194  2479  31A2   	fcall	_f_lseek
  3036  229B  3A00               	xorlw	0
  3037  229C  1D03               	btfss	3,2
  3038  229D  2AB2               	goto	l86
  3039  229E                     l5960:	
  3040                           
  3041                           ;Main.c: 119: };Main.c: 122: f_write(&Fil, "This is my message\r\n", 19, &bw);
  3042  229E  304D               	movlw	low _Fil
  3043  229F  0021               	movlb	1	; select bank1
  3044  22A0  00B3               	movwf	f_write@fp^(0+128)
  3045  22A1  3001               	movlw	high _Fil
  3046  22A2  00B4               	movwf	(f_write@fp^(0+128)+1)
  3047  22A3  3000               	movlw	low (STR_3| (0+32768))
  3048  22A4  00B5               	movwf	f_write@buff^(0+128)
  3049  22A5  30B0               	movlw	high (STR_3| (0+32768))
  3050  22A6  00B6               	movwf	(f_write@buff^(0+128)+1)
  3051  22A7  3013               	movlw	19
  3052  22A8  00B7               	movwf	f_write@btw^(0+128)
  3053  22A9  3000               	movlw	0
  3054  22AA  00B8               	movwf	(f_write@btw^(0+128)+1)
  3055  22AB  30EC               	movlw	(low (_bw| 0))& (0+255)
  3056  22AC  00E3               	movwf	??_main^(0+128)
  3057  22AD  0863               	movf	??_main^(0+128),w
  3058  22AE  00B9               	movwf	f_write@bw^(0+128)
  3059  22AF  318B  2386  31A2   	fcall	_f_write
  3060  22B2                     l86:	
  3061                           ;Main.c: 125: endSD: f_close(&Fil);
  3062                           
  3063  22B2  304D               	movlw	low _Fil
  3064  22B3  0020               	movlb	0	; select bank0
  3065  22B4  00E0               	movwf	f_close@fp
  3066  22B5  3001               	movlw	high _Fil
  3067  22B6  00E1               	movwf	f_close@fp+1
  3068  22B7  31AB  2345  31A2   	fcall	_f_close
  3069                           
  3070                           ;Main.c: 128: RD0 = 1;
  3071  22BA  140F               	bsf	15,0	;volatile
  3072                           
  3073                           ;Main.c: 129: _delay((unsigned long)((3000)*(16000000/4000.0)));
  3074  22BB  303D               	movlw	61
  3075  22BC  0021               	movlb	1	; select bank1
  3076  22BD  00E4               	movwf	(??_main^(0+128)+1)
  3077  22BE  30E1               	movlw	225
  3078  22BF  00E3               	movwf	??_main^(0+128)
  3079  22C0  303F               	movlw	63
  3080  22C1                     u8557:	
  3081  22C1  0B89               	decfsz	9,f
  3082  22C2  2AC1               	goto	u8557
  3083  22C3  0BE3               	decfsz	??_main^(0+128),f
  3084  22C4  2AC1               	goto	u8557
  3085  22C5  0BE4               	decfsz	(??_main^(0+128)+1),f
  3086  22C6  2AC1               	goto	u8557
  3087  22C7  3200               	nop2
  3088                           
  3089                           ;Main.c: 130: RD0 = 0;
  3090  22C8  0020               	movlb	0	; select bank0
  3091  22C9  100F               	bcf	15,0	;volatile
  3092  22CA  2AFC               	goto	l90
  3093  22CB                     l5968:	
  3094                           
  3095                           ;Main.c: 135: else;Main.c: 136: {;Main.c: 137: int y;;Main.c: 139: for (y = 0; y<= 3; y+
      +                          +)
  3096  22CB  0021               	movlb	1	; select bank1
  3097  22CC  01E5               	clrf	main@y^(0+128)
  3098  22CD  01E6               	clrf	(main@y+1)^(0+128)
  3099  22CE                     l88:	
  3100                           
  3101                           ;Main.c: 140: {;Main.c: 141: RD0 = 1;
  3102  22CE  0020               	movlb	0	; select bank0
  3103  22CF  140F               	bsf	15,0	;volatile
  3104                           
  3105                           ;Main.c: 142: _delay((unsigned long)((1000)*(16000000/4000.0)));
  3106  22D0  3015               	movlw	21
  3107  22D1  0021               	movlb	1	; select bank1
  3108  22D2  00E4               	movwf	(??_main^(0+128)+1)
  3109  22D3  304B               	movlw	75
  3110  22D4  00E3               	movwf	??_main^(0+128)
  3111  22D5  30BE               	movlw	190
  3112  22D6                     u8567:	
  3113  22D6  0B89               	decfsz	9,f
  3114  22D7  2AD6               	goto	u8567
  3115  22D8  0BE3               	decfsz	??_main^(0+128),f
  3116  22D9  2AD6               	goto	u8567
  3117  22DA  0BE4               	decfsz	(??_main^(0+128)+1),f
  3118  22DB  2AD6               	goto	u8567
  3119  22DC  0000               	nop
  3120                           
  3121                           ;Main.c: 143: RD0 = 0;
  3122  22DD  0020               	movlb	0	; select bank0
  3123  22DE  100F               	bcf	15,0	;volatile
  3124                           
  3125                           ;Main.c: 144: _delay((unsigned long)((1000)*(16000000/4000.0)));
  3126  22DF  3015               	movlw	21
  3127  22E0  0021               	movlb	1	; select bank1
  3128  22E1  00E4               	movwf	(??_main^(0+128)+1)
  3129  22E2  304B               	movlw	75
  3130  22E3  00E3               	movwf	??_main^(0+128)
  3131  22E4  30BE               	movlw	190
  3132  22E5                     u8577:	
  3133  22E5  0B89               	decfsz	9,f
  3134  22E6  2AE5               	goto	u8577
  3135  22E7  0BE3               	decfsz	??_main^(0+128),f
  3136  22E8  2AE5               	goto	u8577
  3137  22E9  0BE4               	decfsz	(??_main^(0+128)+1),f
  3138  22EA  2AE5               	goto	u8577
  3139  22EB  0000               	nop
  3140  22EC  3001               	movlw	1
  3141  22ED  0021               	movlb	1	; select bank1
  3142  22EE  07E5               	addwf	main@y^(0+128),f
  3143  22EF  3000               	movlw	0
  3144  22F0  3DE6               	addwfc	(main@y+1)^(0+128),f
  3145  22F1  0866               	movf	(main@y+1)^(0+128),w
  3146  22F2  3A80               	xorlw	128
  3147  22F3  00E3               	movwf	??_main^(0+128)
  3148  22F4  3080               	movlw	128
  3149  22F5  0263               	subwf	??_main^(0+128),w
  3150  22F6  1D03               	skipz
  3151  22F7  2AFA               	goto	u8545
  3152  22F8  3004               	movlw	4
  3153  22F9  0265               	subwf	main@y^(0+128),w
  3154  22FA                     u8545:	
  3155  22FA  1C03               	skipc
  3156  22FB  2ACE               	goto	l88
  3157  22FC                     l90:	
  3158                           ;Main.c: 145: };Main.c: 146: };Main.c: 149: while(1){
  3159                           
  3160  22FC  2AFC               	goto	l90
  3161  22FD                     __end_of_main:	
  3162                           
  3163                           	psect	text1
  3164  2002                     __ptext1:	
  3165 ;; *************** function _initMain *****************
  3166 ;; Defined at:
  3167 ;;		line 58 in file "Main.c"
  3168 ;; Parameters:    Size  Location     Type
  3169 ;;		None
  3170 ;; Auto vars:     Size  Location     Type
  3171 ;;		None
  3172 ;; Return value:  Size  Location     Type
  3173 ;;                  1    wreg      void 
  3174 ;; Registers used:
  3175 ;;		wreg, status,2, status,0, pclath, cstack
  3176 ;; Tracked objects:
  3177 ;;		On entry : B1F/0
  3178 ;;		On exit  : 1F/0
  3179 ;;		Unchanged: 0/0
  3180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3183 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3184 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3185 ;;Total ram usage:        2 bytes
  3186 ;; Hardware stack levels used:    1
  3187 ;; Hardware stack levels required when called:    1
  3188 ;; This function calls:
  3189 ;;		_SPI_Initialize
  3190 ;;		_internal_16
  3191 ;; This function is called by:
  3192 ;;		_main
  3193 ;; This function uses a non-reentrant model
  3194 ;;
  3195                           
  3196                           
  3197                           ;psect for function _initMain
  3198  2002                     _initMain:	
  3199                           
  3200                           ;Main.c: 60: internal_16();
  3201                           
  3202                           ;incstack = 0
  3203                           ; Regs used in _initMain: [wreg+status,2+status,0+pclath+cstack]
  3204  2002  31AA  22C4  31A0   	fcall	_internal_16
  3205                           
  3206                           ;Main.c: 63: ANSELCbits.ANSC3 = 0;
  3207  2005  0023               	movlb	3	; select bank3
  3208  2006  118E               	bcf	14,3	;volatile
  3209                           
  3210                           ;Main.c: 64: ANSELCbits.ANSC4 = 0;
  3211  2007  120E               	bcf	14,4	;volatile
  3212                           
  3213                           ;Main.c: 65: ANSELCbits.ANSC5 = 0;
  3214  2008  128E               	bcf	14,5	;volatile
  3215                           
  3216                           ;Main.c: 67: TRISCbits.TRISC0 = 0;
  3217  2009  0021               	movlb	1	; select bank1
  3218  200A  100E               	bcf	14,0	;volatile
  3219                           
  3220                           ;Main.c: 68: TRISCbits.TRISC3 = 0;
  3221  200B  118E               	bcf	14,3	;volatile
  3222                           
  3223                           ;Main.c: 69: TRISCbits.TRISC4 = 1;
  3224  200C  160E               	bsf	14,4	;volatile
  3225                           
  3226                           ;Main.c: 70: TRISCbits.TRISC5 = 0;
  3227  200D  128E               	bcf	14,5	;volatile
  3228                           
  3229                           ;Main.c: 72: TRISDbits.TRISD0 = 0;
  3230  200E  100F               	bcf	15,0	;volatile
  3231                           
  3232                           ;Main.c: 74: PPSLOCK = 0x55;
  3233  200F  3055               	movlw	85
  3234  2010  003C               	movlb	28	; select bank28
  3235  2011  008F               	movwf	15	;volsfr
  3236                           
  3237                           ;Main.c: 75: PPSLOCK = 0xAA;
  3238  2012  30AA               	movlw	170
  3239  2013  008F               	movwf	15	;volsfr
  3240                           
  3241                           ;Main.c: 76: PPSLOCKbits.PPSLOCKED = 0x00;
  3242  2014  100F               	bcf	15,0	;volsfr
  3243                           
  3244                           ;Main.c: 78: SSPDATPPSbits.SSPDATPPS = 0x14;
  3245  2015  0821               	movf	33,w	;volatile
  3246  2016  39E0               	andlw	-32
  3247  2017  3814               	iorlw	20
  3248  2018  00A1               	movwf	33	;volatile
  3249                           
  3250                           ;Main.c: 79: RC3PPSbits.RC3PPS = 0x10;
  3251  2019  003D               	movlb	29	; select bank29
  3252  201A  0823               	movf	35,w	;volatile
  3253  201B  39E0               	andlw	-32
  3254  201C  3810               	iorlw	16
  3255  201D  00A3               	movwf	35	;volatile
  3256                           
  3257                           ;Main.c: 80: RC5PPSbits.RC5PPS = 0x11;
  3258  201E  0825               	movf	37,w	;volatile
  3259  201F  39E0               	andlw	-32
  3260  2020  3811               	iorlw	17
  3261  2021  00A5               	movwf	37	;volatile
  3262                           
  3263                           ;Main.c: 82: PPSLOCK = 0x55;
  3264  2022  3055               	movlw	85
  3265  2023  003C               	movlb	28	; select bank28
  3266  2024  008F               	movwf	15	;volsfr
  3267                           
  3268                           ;Main.c: 83: PPSLOCK = 0xAA;
  3269  2025  30AA               	movlw	170
  3270  2026  008F               	movwf	15	;volsfr
  3271                           
  3272                           ;Main.c: 84: PPSLOCKbits.PPSLOCKED = 0x01;
  3273  2027  140F               	bsf	15,0	;volsfr
  3274                           
  3275                           ;Main.c: 88: SPI_Initialize();
  3276  2028  31AA  22AB  31A0   	fcall	_SPI_Initialize
  3277                           
  3278                           ;Main.c: 92: RD0 = 1;
  3279  202B  0020               	movlb	0	; select bank0
  3280  202C  140F               	bsf	15,0	;volatile
  3281                           
  3282                           ;Main.c: 93: _delay((unsigned long)((100)*(16000000/4000.0)));
  3283  202D  3003               	movlw	3
  3284  202E  00F1               	movwf	??_initMain+1
  3285  202F  3008               	movlw	8
  3286  2030  00F0               	movwf	??_initMain
  3287  2031  3077               	movlw	119
  3288  2032                     u8587:	
  3289  2032  0B89               	decfsz	9,f
  3290  2033  2832               	goto	u8587
  3291  2034  0BF0               	decfsz	??_initMain,f
  3292  2035  2832               	goto	u8587
  3293  2036  0BF1               	decfsz	??_initMain+1,f
  3294  2037  2832               	goto	u8587
  3295  2038  0000               	nop
  3296                           
  3297                           ;Main.c: 94: RD0 = 0;
  3298  2039  0020               	movlb	0	; select bank0
  3299  203A  100F               	bcf	15,0	;volatile
  3300  203B  0008               	return
  3301  203C                     __end_of_initMain:	
  3302                           
  3303                           	psect	text2
  3304  2AC4                     __ptext2:	
  3305 ;; *************** function _internal_16 *****************
  3306 ;; Defined at:
  3307 ;;		line 56 in file "16F1717_Internal.c"
  3308 ;; Parameters:    Size  Location     Type
  3309 ;;		None
  3310 ;; Auto vars:     Size  Location     Type
  3311 ;;		None
  3312 ;; Return value:  Size  Location     Type
  3313 ;;                  1    wreg      void 
  3314 ;; Registers used:
  3315 ;;		None
  3316 ;; Tracked objects:
  3317 ;;		On entry : B1F/0
  3318 ;;		On exit  : B1F/1
  3319 ;;		Unchanged: B00/0
  3320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3325 ;;Total ram usage:        0 bytes
  3326 ;; Hardware stack levels used:    1
  3327 ;; This function calls:
  3328 ;;		Nothing
  3329 ;; This function is called by:
  3330 ;;		_initMain
  3331 ;; This function uses a non-reentrant model
  3332 ;;
  3333                           
  3334                           
  3335                           ;psect for function _internal_16
  3336  2AC4                     _internal_16:	
  3337                           
  3338                           ;16F1717_Internal.c: 58: SCS0 = 0;
  3339                           
  3340                           ;incstack = 0
  3341                           ; Regs used in _internal_16: []
  3342  2AC4  0021               	movlb	1	; select bank1
  3343  2AC5  1019               	bcf	25,0	;volatile
  3344                           
  3345                           ;16F1717_Internal.c: 59: SCS1 = 0;
  3346  2AC6  1099               	bcf	25,1	;volatile
  3347                           
  3348                           ;16F1717_Internal.c: 62: IRCF0 = 1;
  3349  2AC7  1599               	bsf	25,3	;volatile
  3350                           
  3351                           ;16F1717_Internal.c: 63: IRCF1 = 1;
  3352  2AC8  1619               	bsf	25,4	;volatile
  3353                           
  3354                           ;16F1717_Internal.c: 64: IRCF2 = 1;
  3355  2AC9  1699               	bsf	25,5	;volatile
  3356                           
  3357                           ;16F1717_Internal.c: 65: IRCF3 = 1;
  3358  2ACA  1719               	bsf	25,6	;volatile
  3359                           
  3360                           ;16F1717_Internal.c: 68: SPLLEN = 0;
  3361  2ACB  1399               	bcf	25,7	;volatile
  3362  2ACC  0008               	return
  3363  2ACD                     __end_of_internal_16:	
  3364                           
  3365                           	psect	text3
  3366  0B86                     __ptext3:	
  3367 ;; *************** function _f_write *****************
  3368 ;; Defined at:
  3369 ;;		line 2691 in file "ff.c"
  3370 ;; Parameters:    Size  Location     Type
  3371 ;;  fp              2   19[BANK1 ] PTR struct .
  3372 ;;		 -> Fil(32), 
  3373 ;;  buff            2   21[BANK1 ] PTR const void 
  3374 ;;		 -> STR_3(21), 
  3375 ;;  btw             2   23[BANK1 ] unsigned int 
  3376 ;;  bw              1   25[BANK1 ] PTR unsigned int 
  3377 ;;		 -> bw(2), 
  3378 ;; Auto vars:     Size  Location     Type
  3379 ;;  clst            4   48[BANK1 ] unsigned long 
  3380 ;;  sect            4   44[BANK1 ] unsigned long 
  3381 ;;  wcnt            2   52[BANK1 ] unsigned int 
  3382 ;;  cc              2   42[BANK1 ] unsigned int 
  3383 ;;  wbuff           2   39[BANK1 ] PTR const unsigned char 
  3384 ;;		 -> STR_3(21), 
  3385 ;;  csect           1   41[BANK1 ] unsigned char 
  3386 ;;  res             1   38[BANK1 ] enum E88
  3387 ;; Return value:  Size  Location     Type
  3388 ;;                  1    wreg      enum E5735
  3389 ;; Registers used:
  3390 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3391 ;; Tracked objects:
  3392 ;;		On entry : 1F/1
  3393 ;;		On exit  : 1F/1
  3394 ;;		Unchanged: 0/0
  3395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3396 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3397 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3398 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3399 ;;      Totals:         0       0      35       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3400 ;;Total ram usage:       35 bytes
  3401 ;; Hardware stack levels used:    1
  3402 ;; Hardware stack levels required when called:   10
  3403 ;; This function calls:
  3404 ;;		_clust2sect
  3405 ;;		_create_chain
  3406 ;;		_disk_write
  3407 ;;		_mem_cpy
  3408 ;;		_move_window
  3409 ;;		_sync_window
  3410 ;;		_validate
  3411 ;; This function is called by:
  3412 ;;		_main
  3413 ;; This function uses a non-reentrant model
  3414 ;;
  3415                           
  3416                           
  3417                           ;psect for function _f_write
  3418  0B86                     _f_write:	
  3419                           
  3420                           ;ff.c: 2698: FRESULT res;;ff.c: 2699: DWORD clst, sect;;ff.c: 2700: UINT wcnt, cc;;ff.c:
      +                           2701: const BYTE *wbuff = (const BYTE*)buff;
  3421                           
  3422                           ;incstack = 0
  3423                           ; Regs used in _f_write: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3424  0B86  0836               	movf	(f_write@buff+1)^(0+128),w
  3425  0B87  00C8               	movwf	(f_write@wbuff+1)^(0+128)
  3426  0B88  0835               	movf	f_write@buff^(0+128),w
  3427  0B89  00C7               	movwf	f_write@wbuff^(0+128)
  3428                           
  3429                           ;ff.c: 2702: BYTE csect;;ff.c: 2705: *bw = 0;
  3430  0B8A  0839               	movf	f_write@bw^(0+128),w
  3431  0B8B  0086               	movwf	6
  3432  0B8C  0187               	clrf	7
  3433  0B8D  3000               	movlw	0
  3434  0B8E  3FC0               	movwi [0]fsr1
  3435  0B8F  3FC1               	movwi [1]fsr1
  3436                           
  3437                           ;ff.c: 2707: res = validate(fp);
  3438  0B90  0834               	movf	(f_write@fp+1)^(0+128),w
  3439  0B91  00F2               	movwf	validate@obj+1
  3440  0B92  0833               	movf	f_write@fp^(0+128),w
  3441  0B93  00F1               	movwf	validate@obj
  3442  0B94  31AD  25E1  318B   	fcall	_validate
  3443  0B97  0021               	movlb	1	; select bank1
  3444  0B98  00BA               	movwf	??_f_write^(0+128)
  3445  0B99  083A               	movf	??_f_write^(0+128),w
  3446  0B9A  00C6               	movwf	f_write@res^(0+128)
  3447                           
  3448                           ;ff.c: 2708: if (res != FR_OK) return res;
  3449  0B9B  0846               	movf	f_write@res^(0+128),w
  3450  0B9C  1D03               	btfss	3,2
  3451  0B9D  0008               	return
  3452                           
  3453                           ;ff.c: 2709: if (fp->err)
  3454  0B9E  0833               	movf	f_write@fp^(0+128),w
  3455  0B9F  0086               	movwf	6
  3456  0BA0  0834               	movf	(f_write@fp+1)^(0+128),w
  3457  0BA1  0087               	movwf	7
  3458  0BA2  3145               	addfsr 1,5
  3459  0BA3  0801               	movf	1,w
  3460  0BA4  1D03               	btfss	3,2
  3461  0BA5  0008               	return
  3462                           
  3463                           ;ff.c: 2711: if (!(fp->flag & 0x02))
  3464  0BA6  0833               	movf	f_write@fp^(0+128),w
  3465  0BA7  0086               	movwf	6
  3466  0BA8  0834               	movf	(f_write@fp+1)^(0+128),w
  3467  0BA9  0087               	movwf	7
  3468  0BAA  3144               	addfsr 1,4
  3469  0BAB  1C81               	btfss	1,1
  3470  0BAC  0008               	return
  3471                           
  3472                           ;ff.c: 2713: if (fp->fptr + btw < fp->fptr) btw = 0;
  3473  0BAD  0833               	movf	f_write@fp^(0+128),w
  3474  0BAE  0086               	movwf	6
  3475  0BAF  0834               	movf	(f_write@fp+1)^(0+128),w
  3476  0BB0  0087               	movwf	7
  3477  0BB1  3146               	addfsr 1,6
  3478  0BB2  3F40               	moviw [0]fsr1
  3479  0BB3  00BA               	movwf	??_f_write^(0+128)
  3480  0BB4  3F41               	moviw [1]fsr1
  3481  0BB5  00BB               	movwf	(??_f_write^(0+128)+1)
  3482  0BB6  3F42               	moviw [2]fsr1
  3483  0BB7  00BC               	movwf	(??_f_write^(0+128)+2)
  3484  0BB8  3F43               	moviw [3]fsr1
  3485  0BB9  00BD               	movwf	(??_f_write^(0+128)+3)
  3486  0BBA  0833               	movf	f_write@fp^(0+128),w
  3487  0BBB  0086               	movwf	6
  3488  0BBC  0834               	movf	(f_write@fp+1)^(0+128),w
  3489  0BBD  0087               	movwf	7
  3490  0BBE  3146               	addfsr 1,6
  3491  0BBF  3F40               	moviw [0]fsr1
  3492  0BC0  00BE               	movwf	(??_f_write+4)^(0+128)
  3493  0BC1  3F41               	moviw [1]fsr1
  3494  0BC2  00BF               	movwf	((??_f_write+4)^(0+128)+1)
  3495  0BC3  3F42               	moviw [2]fsr1
  3496  0BC4  00C0               	movwf	((??_f_write+4)^(0+128)+2)
  3497  0BC5  3F43               	moviw [3]fsr1
  3498  0BC6  00C1               	movwf	((??_f_write+4)^(0+128)+3)
  3499  0BC7  0837               	movf	f_write@btw^(0+128),w
  3500  0BC8  00C2               	movwf	(??_f_write+8)^(0+128)
  3501  0BC9  0838               	movf	(f_write@btw+1)^(0+128),w
  3502  0BCA  00C3               	movwf	((??_f_write+8)^(0+128)+1)
  3503  0BCB  01C4               	clrf	((??_f_write+8)^(0+128)+2)
  3504  0BCC  01C5               	clrf	((??_f_write+8)^(0+128)+3)
  3505  0BCD  0842               	movf	(??_f_write+8)^(0+128),w
  3506  0BCE  07BE               	addwf	(??_f_write+4)^(0+128),f
  3507  0BCF  0843               	movf	(??_f_write+9)^(0+128),w
  3508  0BD0  3DBF               	addwfc	((??_f_write+4)^(0+128)+1),f
  3509  0BD1  0844               	movf	(??_f_write+10)^(0+128),w
  3510  0BD2  3DC0               	addwfc	((??_f_write+4)^(0+128)+2),f
  3511  0BD3  0845               	movf	(??_f_write+11)^(0+128),w
  3512  0BD4  3DC1               	addwfc	((??_f_write+4)^(0+128)+3),f
  3513  0BD5  083D               	movf	(??_f_write+3)^(0+128),w
  3514  0BD6  0241               	subwf	(??_f_write+7)^(0+128),w
  3515  0BD7  1D03               	skipz
  3516  0BD8  2BE3               	goto	u8225
  3517  0BD9  083C               	movf	(??_f_write+2)^(0+128),w
  3518  0BDA  0240               	subwf	(??_f_write+6)^(0+128),w
  3519  0BDB  1D03               	skipz
  3520  0BDC  2BE3               	goto	u8225
  3521  0BDD  083B               	movf	(??_f_write+1)^(0+128),w
  3522  0BDE  023F               	subwf	(??_f_write+5)^(0+128),w
  3523  0BDF  1D03               	skipz
  3524  0BE0  2BE3               	goto	u8225
  3525  0BE1  083A               	movf	??_f_write^(0+128),w
  3526  0BE2  023E               	subwf	(??_f_write+4)^(0+128),w
  3527  0BE3                     u8225:	
  3528  0BE3  1803               	skipnc
  3529  0BE4  2BE7               	goto	l5926
  3530  0BE5  01B7               	clrf	f_write@btw^(0+128)
  3531  0BE6  01B8               	clrf	(f_write@btw+1)^(0+128)
  3532  0BE7                     l5926:	
  3533  0BE7  0837               	movf	f_write@btw^(0+128),w
  3534  0BE8  0438               	iorwf	(f_write@btw+1)^(0+128),w
  3535  0BE9  1903               	btfsc	3,2
  3536  0BEA  2FB5               	goto	l5928
  3537                           
  3538                           ;ff.c: 2717: if ((fp->fptr % ((UINT)512)) == 0) {
  3539  0BEB  0833               	movf	f_write@fp^(0+128),w
  3540  0BEC  0086               	movwf	6
  3541  0BED  0834               	movf	(f_write@fp+1)^(0+128),w
  3542  0BEE  0087               	movwf	7
  3543  0BEF  3146               	addfsr 1,6
  3544  0BF0  30FF               	movlw	255
  3545  0BF1  0501               	andwf	1,w
  3546  0BF2  00BA               	movwf	??_f_write^(0+128)
  3547  0BF3  3141               	addfsr 1,1
  3548  0BF4  3001               	movlw	1
  3549  0BF5  0501               	andwf	1,w
  3550  0BF6  00BB               	movwf	(??_f_write^(0+128)+1)
  3551  0BF7  3141               	addfsr 1,1
  3552  0BF8  3000               	movlw	0
  3553  0BF9  0501               	andwf	1,w
  3554  0BFA  00BC               	movwf	(??_f_write^(0+128)+2)
  3555  0BFB  3141               	addfsr 1,1
  3556  0BFC  3000               	movlw	0
  3557  0BFD  0501               	andwf	1,w
  3558  0BFE  00BD               	movwf	(??_f_write^(0+128)+3)
  3559  0BFF  083D               	movf	(??_f_write+3)^(0+128),w
  3560  0C00  043C               	iorwf	(??_f_write+2)^(0+128),w
  3561  0C01  043B               	iorwf	(??_f_write+1)^(0+128),w
  3562  0C02  043A               	iorwf	??_f_write^(0+128),w
  3563  0C03  1D03               	skipz
  3564  0C04  2EF9               	goto	l5902
  3565                           
  3566                           ;ff.c: 2718: csect = (BYTE)(fp->fptr / ((UINT)512) & (fp->fs->csize - 1));
  3567  0C05  0833               	movf	f_write@fp^(0+128),w
  3568  0C06  0086               	movwf	6
  3569  0C07  0834               	movf	(f_write@fp+1)^(0+128),w
  3570  0C08  0087               	movwf	7
  3571  0C09  3146               	addfsr 1,6
  3572  0C0A  3F40               	moviw [0]fsr1
  3573  0C0B  00BA               	movwf	??_f_write^(0+128)
  3574  0C0C  3F41               	moviw [1]fsr1
  3575  0C0D  00BB               	movwf	(??_f_write^(0+128)+1)
  3576  0C0E  3F42               	moviw [2]fsr1
  3577  0C0F  00BC               	movwf	(??_f_write^(0+128)+2)
  3578  0C10  3F43               	moviw [3]fsr1
  3579  0C11  00BD               	movwf	(??_f_write^(0+128)+3)
  3580  0C12  3009               	movlw	9
  3581  0C13                     u8245:	
  3582  0C13  36BD               	lsrf	(??_f_write^(0+128)+3),f
  3583  0C14  0CBC               	rrf	(??_f_write^(0+128)+2),f
  3584  0C15  0CBB               	rrf	(??_f_write^(0+128)+1),f
  3585  0C16  0CBA               	rrf	??_f_write^(0+128),f
  3586  0C17  0B89               	decfsz	9,f
  3587  0C18  2C13               	goto	u8245
  3588  0C19  0833               	movf	f_write@fp^(0+128),w
  3589  0C1A  0086               	movwf	6
  3590  0C1B  0834               	movf	(f_write@fp+1)^(0+128),w
  3591  0C1C  0087               	movwf	7
  3592  0C1D  3F40               	moviw [0]fsr1
  3593  0C1E  00BE               	movwf	(??_f_write+4)^(0+128)
  3594  0C1F  3F41               	moviw [1]fsr1
  3595  0C20  00BF               	movwf	((??_f_write+4)^(0+128)+1)
  3596  0C21  083E               	movf	(??_f_write+4)^(0+128),w
  3597  0C22  0086               	movwf	6
  3598  0C23  083F               	movf	(??_f_write+5)^(0+128),w
  3599  0C24  0087               	movwf	7
  3600  0C25  3142               	addfsr 1,2
  3601  0C26  0801               	movf	1,w
  3602  0C27  3EFF               	addlw	255
  3603  0C28  053A               	andwf	??_f_write^(0+128),w
  3604  0C29  00C0               	movwf	(??_f_write+6)^(0+128)
  3605  0C2A  0840               	movf	(??_f_write+6)^(0+128),w
  3606  0C2B  00C9               	movwf	f_write@csect^(0+128)
  3607                           
  3608                           ;ff.c: 2719: if (!csect) {
  3609  0C2C  0849               	movf	f_write@csect^(0+128),w
  3610  0C2D  1D03               	btfss	3,2
  3611  0C2E  2CE5               	goto	l5850
  3612                           
  3613                           ;ff.c: 2720: if (fp->fptr == 0) {
  3614  0C2F  0833               	movf	f_write@fp^(0+128),w
  3615  0C30  0086               	movwf	6
  3616  0C31  0834               	movf	(f_write@fp+1)^(0+128),w
  3617  0C32  0087               	movwf	7
  3618  0C33  3146               	addfsr 1,6
  3619  0C34  3F40               	moviw [0]fsr1
  3620  0C35  00BA               	movwf	??_f_write^(0+128)
  3621  0C36  3F41               	moviw [1]fsr1
  3622  0C37  00BB               	movwf	(??_f_write^(0+128)+1)
  3623  0C38  3F42               	moviw [2]fsr1
  3624  0C39  00BC               	movwf	(??_f_write^(0+128)+2)
  3625  0C3A  3F43               	moviw [3]fsr1
  3626  0C3B  00BD               	movwf	(??_f_write^(0+128)+3)
  3627  0C3C  083D               	movf	(??_f_write+3)^(0+128),w
  3628  0C3D  043C               	iorwf	(??_f_write+2)^(0+128),w
  3629  0C3E  043B               	iorwf	(??_f_write+1)^(0+128),w
  3630  0C3F  043A               	iorwf	??_f_write^(0+128),w
  3631  0C40  1D03               	skipz
  3632  0C41  2C66               	goto	l5828
  3633                           
  3634                           ;ff.c: 2721: clst = fp->sclust;
  3635  0C42  0833               	movf	f_write@fp^(0+128),w
  3636  0C43  0086               	movwf	6
  3637  0C44  0834               	movf	(f_write@fp+1)^(0+128),w
  3638  0C45  0087               	movwf	7
  3639  0C46  314E               	addfsr 1,14
  3640  0C47  3F40               	moviw [0]fsr1
  3641  0C48  00D0               	movwf	f_write@clst^(0+128)
  3642  0C49  3F41               	moviw [1]fsr1
  3643  0C4A  00D1               	movwf	(f_write@clst+1)^(0+128)
  3644  0C4B  3F42               	moviw [2]fsr1
  3645  0C4C  00D2               	movwf	(f_write@clst+2)^(0+128)
  3646  0C4D  3F43               	moviw [3]fsr1
  3647  0C4E  00D3               	movwf	(f_write@clst+3)^(0+128)
  3648                           
  3649                           ;ff.c: 2722: if (clst == 0)
  3650  0C4F  0853               	movf	(f_write@clst+3)^(0+128),w
  3651  0C50  0452               	iorwf	(f_write@clst+2)^(0+128),w
  3652  0C51  0451               	iorwf	(f_write@clst+1)^(0+128),w
  3653  0C52  0450               	iorwf	f_write@clst^(0+128),w
  3654  0C53  1D03               	skipz
  3655  0C54  2C86               	goto	l5830
  3656                           
  3657                           ;ff.c: 2723: clst = create_chain(fp->fs, 0);
  3658  0C55  0833               	movf	f_write@fp^(0+128),w
  3659  0C56  0086               	movwf	6
  3660  0C57  0834               	movf	(f_write@fp+1)^(0+128),w
  3661  0C58  0087               	movwf	7
  3662  0C59  3F40               	moviw [0]fsr1
  3663  0C5A  00A0               	movwf	create_chain@fs^(0+128)
  3664  0C5B  3F41               	moviw [1]fsr1
  3665  0C5C  00A1               	movwf	(create_chain@fs+1)^(0+128)
  3666  0C5D  3000               	movlw	0
  3667  0C5E  00A5               	movwf	(create_chain@clst+3)^(0+128)
  3668  0C5F  3000               	movlw	0
  3669  0C60  00A4               	movwf	(create_chain@clst+2)^(0+128)
  3670  0C61  3000               	movlw	0
  3671  0C62  00A3               	movwf	(create_chain@clst+1)^(0+128)
  3672  0C63  3000               	movlw	0
  3673  0C64  00A2               	movwf	create_chain@clst^(0+128)
  3674  0C65  2C7B               	goto	L1
  3675  0C66                     l5828:	
  3676                           
  3677                           ;ff.c: 2730: clst = create_chain(fp->fs, fp->clust);
  3678  0C66  0833               	movf	f_write@fp^(0+128),w
  3679  0C67  0086               	movwf	6
  3680  0C68  0834               	movf	(f_write@fp+1)^(0+128),w
  3681  0C69  0087               	movwf	7
  3682  0C6A  3F40               	moviw [0]fsr1
  3683  0C6B  00A0               	movwf	create_chain@fs^(0+128)
  3684  0C6C  3F41               	moviw [1]fsr1
  3685  0C6D  00A1               	movwf	(create_chain@fs+1)^(0+128)
  3686  0C6E  0833               	movf	f_write@fp^(0+128),w
  3687  0C6F  0086               	movwf	6
  3688  0C70  0834               	movf	(f_write@fp+1)^(0+128),w
  3689  0C71  0087               	movwf	7
  3690  0C72  3152               	addfsr 1,18
  3691  0C73  3F40               	moviw [0]fsr1
  3692  0C74  00A2               	movwf	create_chain@clst^(0+128)
  3693  0C75  3F41               	moviw [1]fsr1
  3694  0C76  00A3               	movwf	(create_chain@clst+1)^(0+128)
  3695  0C77  3F42               	moviw [2]fsr1
  3696  0C78  00A4               	movwf	(create_chain@clst+2)^(0+128)
  3697  0C79  3F43               	moviw [3]fsr1
  3698  0C7A  00A5               	movwf	(create_chain@clst+3)^(0+128)
  3699  0C7B                     L1:	
  3700  0C7B  3199  2167  318B   	fcall	_create_chain
  3701  0C7E  0823               	movf	(?_create_chain+3)^(0+128),w
  3702  0C7F  00D3               	movwf	(f_write@clst+3)^(0+128)
  3703  0C80  0822               	movf	(?_create_chain+2)^(0+128),w
  3704  0C81  00D2               	movwf	(f_write@clst+2)^(0+128)
  3705  0C82  0821               	movf	(?_create_chain+1)^(0+128),w
  3706  0C83  00D1               	movwf	(f_write@clst+1)^(0+128)
  3707  0C84  0820               	movf	?_create_chain^(0+128),w
  3708  0C85  00D0               	movwf	f_write@clst^(0+128)
  3709  0C86                     l5830:	
  3710                           
  3711                           ;ff.c: 2731: };ff.c: 2732: if (clst == 0) break;
  3712  0C86  0853               	movf	(f_write@clst+3)^(0+128),w
  3713  0C87  0452               	iorwf	(f_write@clst+2)^(0+128),w
  3714  0C88  0451               	iorwf	(f_write@clst+1)^(0+128),w
  3715  0C89  0450               	iorwf	f_write@clst^(0+128),w
  3716  0C8A  1903               	btfsc	3,2
  3717  0C8B  2FB5               	goto	l5928
  3718                           
  3719                           ;ff.c: 2733: if (clst == 1) { fp->err = (BYTE)(FR_INT_ERR); return FR_INT_ERR; };
  3720  0C8C  0350               	decf	f_write@clst^(0+128),w
  3721  0C8D  0451               	iorwf	(f_write@clst+1)^(0+128),w
  3722  0C8E  0452               	iorwf	(f_write@clst+2)^(0+128),w
  3723  0C8F  0453               	iorwf	(f_write@clst+3)^(0+128),w
  3724  0C90  1D03               	btfss	3,2
  3725  0C91  2C9F               	goto	l5840
  3726  0C92  0833               	movf	f_write@fp^(0+128),w
  3727  0C93  3E05               	addlw	5
  3728  0C94  00BA               	movwf	??_f_write^(0+128)
  3729  0C95  3000               	movlw	0
  3730  0C96  3D34               	addwfc	(f_write@fp+1)^(0+128),w
  3731  0C97  00BB               	movwf	(??_f_write+1)^(0+128)
  3732  0C98  083A               	movf	??_f_write^(0+128),w
  3733  0C99  0086               	movwf	6
  3734  0C9A  083B               	movf	(??_f_write+1)^(0+128),w
  3735  0C9B  0087               	movwf	7
  3736  0C9C  3002               	movlw	2
  3737  0C9D  0081               	movwf	1
  3738  0C9E  0008               	return
  3739  0C9F                     l5840:	
  3740                           
  3741                           ;ff.c: 2734: if (clst == 0xFFFFFFFF) { fp->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR
      +                          ; };
  3742  0C9F  0A50               	incf	f_write@clst^(0+128),w
  3743  0CA0  1D03               	skipz
  3744  0CA1  2CB8               	goto	l5846
  3745  0CA2  0A51               	incf	(f_write@clst+1)^(0+128),w
  3746  0CA3  1D03               	skipz
  3747  0CA4  2CB8               	goto	l5846
  3748  0CA5  0A52               	incf	(f_write@clst+2)^(0+128),w
  3749  0CA6  1D03               	skipz
  3750  0CA7  2CB8               	goto	l5846
  3751  0CA8  0A53               	incf	(f_write@clst+3)^(0+128),w
  3752  0CA9  1D03               	btfss	3,2
  3753  0CAA  2CB8               	goto	l5846
  3754  0CAB  0833               	movf	f_write@fp^(0+128),w
  3755  0CAC  3E05               	addlw	5
  3756  0CAD  00BA               	movwf	??_f_write^(0+128)
  3757  0CAE  3000               	movlw	0
  3758  0CAF  3D34               	addwfc	(f_write@fp+1)^(0+128),w
  3759  0CB0  00BB               	movwf	(??_f_write+1)^(0+128)
  3760  0CB1  083A               	movf	??_f_write^(0+128),w
  3761  0CB2  0086               	movwf	6
  3762  0CB3  083B               	movf	(??_f_write+1)^(0+128),w
  3763  0CB4  0087               	movwf	7
  3764  0CB5  3001               	movlw	1
  3765  0CB6  0081               	movwf	1
  3766  0CB7  0008               	return
  3767  0CB8                     l5846:	
  3768                           
  3769                           ;ff.c: 2735: fp->clust = clst;
  3770  0CB8  0833               	movf	f_write@fp^(0+128),w
  3771  0CB9  0086               	movwf	6
  3772  0CBA  0834               	movf	(f_write@fp+1)^(0+128),w
  3773  0CBB  0087               	movwf	7
  3774  0CBC  3152               	addfsr 1,18
  3775  0CBD  0850               	movf	f_write@clst^(0+128),w
  3776  0CBE  3FC0               	movwi [0]fsr1
  3777  0CBF  0851               	movf	(f_write@clst+1)^(0+128),w
  3778  0CC0  3FC1               	movwi [1]fsr1
  3779  0CC1  0852               	movf	(f_write@clst+2)^(0+128),w
  3780  0CC2  3FC2               	movwi [2]fsr1
  3781  0CC3  0853               	movf	(f_write@clst+3)^(0+128),w
  3782  0CC4  3FC3               	movwi [3]fsr1
  3783                           
  3784                           ;ff.c: 2736: if (fp->sclust == 0) fp->sclust = clst;
  3785  0CC5  0833               	movf	f_write@fp^(0+128),w
  3786  0CC6  0086               	movwf	6
  3787  0CC7  0834               	movf	(f_write@fp+1)^(0+128),w
  3788  0CC8  0087               	movwf	7
  3789  0CC9  314E               	addfsr 1,14
  3790  0CCA  3F40               	moviw [0]fsr1
  3791  0CCB  00BA               	movwf	??_f_write^(0+128)
  3792  0CCC  3F41               	moviw [1]fsr1
  3793  0CCD  00BB               	movwf	(??_f_write^(0+128)+1)
  3794  0CCE  3F42               	moviw [2]fsr1
  3795  0CCF  00BC               	movwf	(??_f_write^(0+128)+2)
  3796  0CD0  3F43               	moviw [3]fsr1
  3797  0CD1  00BD               	movwf	(??_f_write^(0+128)+3)
  3798  0CD2  083D               	movf	(??_f_write+3)^(0+128),w
  3799  0CD3  043C               	iorwf	(??_f_write+2)^(0+128),w
  3800  0CD4  043B               	iorwf	(??_f_write+1)^(0+128),w
  3801  0CD5  043A               	iorwf	??_f_write^(0+128),w
  3802  0CD6  1D03               	skipz
  3803  0CD7  2CE5               	goto	l5850
  3804  0CD8  0833               	movf	f_write@fp^(0+128),w
  3805  0CD9  0086               	movwf	6
  3806  0CDA  0834               	movf	(f_write@fp+1)^(0+128),w
  3807  0CDB  0087               	movwf	7
  3808  0CDC  314E               	addfsr 1,14
  3809  0CDD  0850               	movf	f_write@clst^(0+128),w
  3810  0CDE  3FC0               	movwi [0]fsr1
  3811  0CDF  0851               	movf	(f_write@clst+1)^(0+128),w
  3812  0CE0  3FC1               	movwi [1]fsr1
  3813  0CE1  0852               	movf	(f_write@clst+2)^(0+128),w
  3814  0CE2  3FC2               	movwi [2]fsr1
  3815  0CE3  0853               	movf	(f_write@clst+3)^(0+128),w
  3816  0CE4  3FC3               	movwi [3]fsr1
  3817  0CE5                     l5850:	
  3818                           
  3819                           ;ff.c: 2737: };ff.c: 2739: if (fp->fs->winsect == fp->dsect && sync_window(fp->fs))
  3820  0CE5  0833               	movf	f_write@fp^(0+128),w
  3821  0CE6  0086               	movwf	6
  3822  0CE7  0834               	movf	(f_write@fp+1)^(0+128),w
  3823  0CE8  0087               	movwf	7
  3824  0CE9  3156               	addfsr 1,22
  3825  0CEA  3F40               	moviw [0]fsr1
  3826  0CEB  00BA               	movwf	??_f_write^(0+128)
  3827  0CEC  3F41               	moviw [1]fsr1
  3828  0CED  00BB               	movwf	(??_f_write^(0+128)+1)
  3829  0CEE  3F42               	moviw [2]fsr1
  3830  0CEF  00BC               	movwf	(??_f_write^(0+128)+2)
  3831  0CF0  3F43               	moviw [3]fsr1
  3832  0CF1  00BD               	movwf	(??_f_write^(0+128)+3)
  3833  0CF2  0833               	movf	f_write@fp^(0+128),w
  3834  0CF3  0086               	movwf	6
  3835  0CF4  0834               	movf	(f_write@fp+1)^(0+128),w
  3836  0CF5  0087               	movwf	7
  3837  0CF6  3F40               	moviw [0]fsr1
  3838  0CF7  00BE               	movwf	(??_f_write+4)^(0+128)
  3839  0CF8  3F41               	moviw [1]fsr1
  3840  0CF9  00BF               	movwf	((??_f_write+4)^(0+128)+1)
  3841  0CFA  083E               	movf	(??_f_write+4)^(0+128),w
  3842  0CFB  3E2A               	addlw	42
  3843  0CFC  0086               	movwf	6
  3844  0CFD  3000               	movlw	0
  3845  0CFE  3D3F               	addwfc	(??_f_write+5)^(0+128),w
  3846  0CFF  0087               	movwf	7
  3847  0D00  3F40               	moviw [0]fsr1
  3848  0D01  00C0               	movwf	(??_f_write+6)^(0+128)
  3849  0D02  3F41               	moviw [1]fsr1
  3850  0D03  00C1               	movwf	((??_f_write+6)^(0+128)+1)
  3851  0D04  3F42               	moviw [2]fsr1
  3852  0D05  00C2               	movwf	((??_f_write+6)^(0+128)+2)
  3853  0D06  3F43               	moviw [3]fsr1
  3854  0D07  00C3               	movwf	((??_f_write+6)^(0+128)+3)
  3855  0D08  083D               	movf	(??_f_write+3)^(0+128),w
  3856  0D09  0643               	xorwf	(??_f_write+9)^(0+128),w
  3857  0D0A  1D03               	skipz
  3858  0D0B  2D16               	goto	u8325
  3859  0D0C  083C               	movf	(??_f_write+2)^(0+128),w
  3860  0D0D  0642               	xorwf	(??_f_write+8)^(0+128),w
  3861  0D0E  1D03               	skipz
  3862  0D0F  2D16               	goto	u8325
  3863  0D10  083B               	movf	(??_f_write+1)^(0+128),w
  3864  0D11  0641               	xorwf	(??_f_write+7)^(0+128),w
  3865  0D12  1D03               	skipz
  3866  0D13  2D16               	goto	u8325
  3867  0D14  083A               	movf	??_f_write^(0+128),w
  3868  0D15  0640               	xorwf	(??_f_write+6)^(0+128),w
  3869  0D16                     u8325:	
  3870  0D16  1D03               	skipz
  3871  0D17  2D35               	goto	l5858
  3872  0D18  0833               	movf	f_write@fp^(0+128),w
  3873  0D19  0086               	movwf	6
  3874  0D1A  0834               	movf	(f_write@fp+1)^(0+128),w
  3875  0D1B  0087               	movwf	7
  3876  0D1C  3F40               	moviw [0]fsr1
  3877  0D1D  0020               	movlb	0	; select bank0
  3878  0D1E  00AE               	movwf	sync_window@fs
  3879  0D1F  3F41               	moviw [1]fsr1
  3880  0D20  00AF               	movwf	sync_window@fs+1
  3881  0D21  31A4  245B  318B   	fcall	_sync_window
  3882  0D24  3A00               	xorlw	0
  3883  0D25  1903               	skipnz
  3884  0D26  2D35               	goto	l5858
  3885                           
  3886                           ;ff.c: 2740: { fp->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
  3887  0D27  0021               	movlb	1	; select bank1
  3888  0D28  0833               	movf	f_write@fp^(0+128),w
  3889  0D29  3E05               	addlw	5
  3890  0D2A  00BA               	movwf	??_f_write^(0+128)
  3891  0D2B  3000               	movlw	0
  3892  0D2C  3D34               	addwfc	(f_write@fp+1)^(0+128),w
  3893  0D2D  00BB               	movwf	(??_f_write+1)^(0+128)
  3894  0D2E  083A               	movf	??_f_write^(0+128),w
  3895  0D2F  0086               	movwf	6
  3896  0D30  083B               	movf	(??_f_write+1)^(0+128),w
  3897  0D31  0087               	movwf	7
  3898  0D32  3001               	movlw	1
  3899  0D33  0081               	movwf	1
  3900  0D34  0008               	return
  3901  0D35                     l5858:	
  3902                           
  3903                           ;ff.c: 2748: sect = clust2sect(fp->fs, fp->clust);
  3904  0D35  0021               	movlb	1	; select bank1
  3905  0D36  0833               	movf	f_write@fp^(0+128),w
  3906  0D37  0086               	movwf	6
  3907  0D38  0834               	movf	(f_write@fp+1)^(0+128),w
  3908  0D39  0087               	movwf	7
  3909  0D3A  3F40               	moviw [0]fsr1
  3910  0D3B  0020               	movlb	0	; select bank0
  3911  0D3C  00A0               	movwf	clust2sect@fs
  3912  0D3D  3F41               	moviw [1]fsr1
  3913  0D3E  00A1               	movwf	clust2sect@fs+1
  3914  0D3F  0021               	movlb	1	; select bank1
  3915  0D40  0833               	movf	f_write@fp^(0+128),w
  3916  0D41  0086               	movwf	6
  3917  0D42  0834               	movf	(f_write@fp+1)^(0+128),w
  3918  0D43  0087               	movwf	7
  3919  0D44  3152               	addfsr 1,18
  3920  0D45  3F40               	moviw [0]fsr1
  3921  0D46  0020               	movlb	0	; select bank0
  3922  0D47  00A2               	movwf	clust2sect@clst
  3923  0D48  3F41               	moviw [1]fsr1
  3924  0D49  00A3               	movwf	clust2sect@clst+1
  3925  0D4A  3F42               	moviw [2]fsr1
  3926  0D4B  00A4               	movwf	clust2sect@clst+2
  3927  0D4C  3F43               	moviw [3]fsr1
  3928  0D4D  00A5               	movwf	clust2sect@clst+3
  3929  0D4E  31AF  2786  318B   	fcall	_clust2sect
  3930  0D51  0823               	movf	?_clust2sect+3,w
  3931  0D52  0021               	movlb	1	; select bank1
  3932  0D53  00CF               	movwf	(f_write@sect+3)^(0+128)
  3933  0D54  0020               	movlb	0	; select bank0
  3934  0D55  0822               	movf	?_clust2sect+2,w
  3935  0D56  0021               	movlb	1	; select bank1
  3936  0D57  00CE               	movwf	(f_write@sect+2)^(0+128)
  3937  0D58  0020               	movlb	0	; select bank0
  3938  0D59  0821               	movf	?_clust2sect+1,w
  3939  0D5A  0021               	movlb	1	; select bank1
  3940  0D5B  00CD               	movwf	(f_write@sect+1)^(0+128)
  3941  0D5C  0020               	movlb	0	; select bank0
  3942  0D5D  0820               	movf	?_clust2sect,w
  3943  0D5E  0021               	movlb	1	; select bank1
  3944  0D5F  00CC               	movwf	f_write@sect^(0+128)
  3945                           
  3946                           ;ff.c: 2749: if (!sect) { fp->err = (BYTE)(FR_INT_ERR); return FR_INT_ERR; };
  3947  0D60  084F               	movf	(f_write@sect+3)^(0+128),w
  3948  0D61  044E               	iorwf	(f_write@sect+2)^(0+128),w
  3949  0D62  044D               	iorwf	(f_write@sect+1)^(0+128),w
  3950  0D63  044C               	iorwf	f_write@sect^(0+128),w
  3951  0D64  1D03               	skipz
  3952  0D65  2D73               	goto	l5866
  3953  0D66  0833               	movf	f_write@fp^(0+128),w
  3954  0D67  3E05               	addlw	5
  3955  0D68  00BA               	movwf	??_f_write^(0+128)
  3956  0D69  3000               	movlw	0
  3957  0D6A  3D34               	addwfc	(f_write@fp+1)^(0+128),w
  3958  0D6B  00BB               	movwf	(??_f_write+1)^(0+128)
  3959  0D6C  083A               	movf	??_f_write^(0+128),w
  3960  0D6D  0086               	movwf	6
  3961  0D6E  083B               	movf	(??_f_write+1)^(0+128),w
  3962  0D6F  0087               	movwf	7
  3963  0D70  3002               	movlw	2
  3964  0D71  0081               	movwf	1
  3965  0D72  0008               	return
  3966  0D73                     l5866:	
  3967                           
  3968                           ;ff.c: 2750: sect += csect;
  3969  0D73  0849               	movf	f_write@csect^(0+128),w
  3970  0D74  00BA               	movwf	??_f_write^(0+128)
  3971  0D75  01BB               	clrf	(??_f_write^(0+128)+1)
  3972  0D76  01BC               	clrf	(??_f_write^(0+128)+2)
  3973  0D77  01BD               	clrf	(??_f_write^(0+128)+3)
  3974  0D78  083A               	movf	??_f_write^(0+128),w
  3975  0D79  07CC               	addwf	f_write@sect^(0+128),f
  3976  0D7A  083B               	movf	(??_f_write+1)^(0+128),w
  3977  0D7B  3DCD               	addwfc	(f_write@sect+1)^(0+128),f
  3978  0D7C  083C               	movf	(??_f_write+2)^(0+128),w
  3979  0D7D  3DCE               	addwfc	(f_write@sect+2)^(0+128),f
  3980  0D7E  083D               	movf	(??_f_write+3)^(0+128),w
  3981  0D7F  3DCF               	addwfc	(f_write@sect+3)^(0+128),f
  3982                           
  3983                           ;ff.c: 2751: cc = btw / ((UINT)512);
  3984  0D80  0838               	movf	(f_write@btw+1)^(0+128),w
  3985  0D81  00BB               	movwf	(??_f_write^(0+128)+1)
  3986  0D82  0837               	movf	f_write@btw^(0+128),w
  3987  0D83  00BA               	movwf	??_f_write^(0+128)
  3988  0D84  3009               	movlw	9
  3989  0D85                     u8355:	
  3990  0D85  36BB               	lsrf	(??_f_write^(0+128)+1),f
  3991  0D86  0CBA               	rrf	??_f_write^(0+128),f
  3992  0D87  0B89               	decfsz	9,f
  3993  0D88  2D85               	goto	u8355
  3994  0D89  083A               	movf	??_f_write^(0+128),w
  3995  0D8A  00CA               	movwf	f_write@cc^(0+128)
  3996  0D8B  083B               	movf	(??_f_write+1)^(0+128),w
  3997  0D8C  00CB               	movwf	(f_write@cc+1)^(0+128)
  3998                           
  3999                           ;ff.c: 2752: if (cc) {
  4000  0D8D  084A               	movf	f_write@cc^(0+128),w
  4001  0D8E  044B               	iorwf	(f_write@cc+1)^(0+128),w
  4002  0D8F  1903               	btfsc	3,2
  4003  0D90  2E8E               	goto	l5890
  4004                           
  4005                           ;ff.c: 2753: if (csect + cc > fp->fs->csize)
  4006  0D91  0849               	movf	f_write@csect^(0+128),w
  4007  0D92  074A               	addwf	f_write@cc^(0+128),w
  4008  0D93  00BA               	movwf	??_f_write^(0+128)
  4009  0D94  084B               	movf	(f_write@cc+1)^(0+128),w
  4010  0D95  1803               	skipnc
  4011  0D96  0A4B               	incf	(f_write@cc+1)^(0+128),w
  4012  0D97  00BB               	movwf	(??_f_write^(0+128)+1)
  4013  0D98  0833               	movf	f_write@fp^(0+128),w
  4014  0D99  0086               	movwf	6
  4015  0D9A  0834               	movf	(f_write@fp+1)^(0+128),w
  4016  0D9B  0087               	movwf	7
  4017  0D9C  3F40               	moviw [0]fsr1
  4018  0D9D  00BC               	movwf	(??_f_write+2)^(0+128)
  4019  0D9E  3F41               	moviw [1]fsr1
  4020  0D9F  00BD               	movwf	((??_f_write+2)^(0+128)+1)
  4021  0DA0  083C               	movf	(??_f_write+2)^(0+128),w
  4022  0DA1  0086               	movwf	6
  4023  0DA2  083D               	movf	(??_f_write+3)^(0+128),w
  4024  0DA3  0087               	movwf	7
  4025  0DA4  3142               	addfsr 1,2
  4026  0DA5  0801               	movf	1,w
  4027  0DA6  00BE               	movwf	(??_f_write+4)^(0+128)
  4028  0DA7  01BF               	clrf	((??_f_write+4)^(0+128)+1)
  4029  0DA8  083B               	movf	(??_f_write+1)^(0+128),w
  4030  0DA9  023F               	subwf	(??_f_write+5)^(0+128),w
  4031  0DAA  1D03               	skipz
  4032  0DAB  2DAE               	goto	u8375
  4033  0DAC  083A               	movf	??_f_write^(0+128),w
  4034  0DAD  023E               	subwf	(??_f_write+4)^(0+128),w
  4035  0DAE                     u8375:	
  4036  0DAE  1803               	skipnc
  4037  0DAF  2DC3               	goto	l5876
  4038                           
  4039                           ;ff.c: 2754: cc = fp->fs->csize - csect;
  4040  0DB0  0833               	movf	f_write@fp^(0+128),w
  4041  0DB1  0086               	movwf	6
  4042  0DB2  0834               	movf	(f_write@fp+1)^(0+128),w
  4043  0DB3  0087               	movwf	7
  4044  0DB4  3F40               	moviw [0]fsr1
  4045  0DB5  00BA               	movwf	??_f_write^(0+128)
  4046  0DB6  3F41               	moviw [1]fsr1
  4047  0DB7  00BB               	movwf	(??_f_write^(0+128)+1)
  4048  0DB8  083A               	movf	??_f_write^(0+128),w
  4049  0DB9  0086               	movwf	6
  4050  0DBA  083B               	movf	(??_f_write+1)^(0+128),w
  4051  0DBB  0087               	movwf	7
  4052  0DBC  3142               	addfsr 1,2
  4053  0DBD  0849               	movf	f_write@csect^(0+128),w
  4054  0DBE  0201               	subwf	1,w
  4055  0DBF  00CA               	movwf	f_write@cc^(0+128)
  4056  0DC0  01CB               	clrf	(f_write@cc^(0+128)+1)
  4057  0DC1  1C03               	skipc
  4058  0DC2  03CB               	decf	(f_write@cc+1)^(0+128),f
  4059  0DC3                     l5876:	
  4060                           
  4061                           ;ff.c: 2755: if (disk_write(fp->fs->drv, wbuff, sect, cc) != RES_OK)
  4062  0DC3  0848               	movf	(f_write@wbuff+1)^(0+128),w
  4063  0DC4  0020               	movlb	0	; select bank0
  4064  0DC5  00A5               	movwf	disk_write@buff+1
  4065  0DC6  0021               	movlb	1	; select bank1
  4066  0DC7  0847               	movf	f_write@wbuff^(0+128),w
  4067  0DC8  0020               	movlb	0	; select bank0
  4068  0DC9  00A4               	movwf	disk_write@buff
  4069  0DCA  0021               	movlb	1	; select bank1
  4070  0DCB  084F               	movf	(f_write@sect+3)^(0+128),w
  4071  0DCC  0020               	movlb	0	; select bank0
  4072  0DCD  00A9               	movwf	disk_write@sector+3
  4073  0DCE  0021               	movlb	1	; select bank1
  4074  0DCF  084E               	movf	(f_write@sect+2)^(0+128),w
  4075  0DD0  0020               	movlb	0	; select bank0
  4076  0DD1  00A8               	movwf	disk_write@sector+2
  4077  0DD2  0021               	movlb	1	; select bank1
  4078  0DD3  084D               	movf	(f_write@sect+1)^(0+128),w
  4079  0DD4  0020               	movlb	0	; select bank0
  4080  0DD5  00A7               	movwf	disk_write@sector+1
  4081  0DD6  0021               	movlb	1	; select bank1
  4082  0DD7  084C               	movf	f_write@sect^(0+128),w
  4083  0DD8  0020               	movlb	0	; select bank0
  4084  0DD9  00A6               	movwf	disk_write@sector
  4085  0DDA  0021               	movlb	1	; select bank1
  4086  0DDB  084B               	movf	(f_write@cc+1)^(0+128),w
  4087  0DDC  0020               	movlb	0	; select bank0
  4088  0DDD  00AB               	movwf	disk_write@count+1
  4089  0DDE  0021               	movlb	1	; select bank1
  4090  0DDF  084A               	movf	f_write@cc^(0+128),w
  4091  0DE0  0020               	movlb	0	; select bank0
  4092  0DE1  00AA               	movwf	disk_write@count
  4093  0DE2  0021               	movlb	1	; select bank1
  4094  0DE3  0833               	movf	f_write@fp^(0+128),w
  4095  0DE4  0086               	movwf	6
  4096  0DE5  0834               	movf	(f_write@fp+1)^(0+128),w
  4097  0DE6  0087               	movwf	7
  4098  0DE7  3F40               	moviw [0]fsr1
  4099  0DE8  00BA               	movwf	??_f_write^(0+128)
  4100  0DE9  3F41               	moviw [1]fsr1
  4101  0DEA  00BB               	movwf	(??_f_write^(0+128)+1)
  4102  0DEB  083A               	movf	??_f_write^(0+128),w
  4103  0DEC  0086               	movwf	6
  4104  0DED  083B               	movf	(??_f_write+1)^(0+128),w
  4105  0DEE  0087               	movwf	7
  4106  0DEF  3141               	addfsr 1,1
  4107  0DF0  0801               	movf	1,w
  4108  0DF1  31A1  21B8  318B   	fcall	_disk_write
  4109  0DF4  3A00               	xorlw	0
  4110  0DF5  1903               	skipnz
  4111  0DF6  2E05               	goto	l5882
  4112                           
  4113                           ;ff.c: 2756: { fp->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
  4114  0DF7  0021               	movlb	1	; select bank1
  4115  0DF8  0833               	movf	f_write@fp^(0+128),w
  4116  0DF9  3E05               	addlw	5
  4117  0DFA  00BA               	movwf	??_f_write^(0+128)
  4118  0DFB  3000               	movlw	0
  4119  0DFC  3D34               	addwfc	(f_write@fp+1)^(0+128),w
  4120  0DFD  00BB               	movwf	(??_f_write+1)^(0+128)
  4121  0DFE  083A               	movf	??_f_write^(0+128),w
  4122  0DFF  0086               	movwf	6
  4123  0E00  083B               	movf	(??_f_write+1)^(0+128),w
  4124  0E01  0087               	movwf	7
  4125  0E02  3001               	movlw	1
  4126  0E03  0081               	movwf	1
  4127  0E04  0008               	return
  4128  0E05                     l5882:	
  4129                           
  4130                           ;ff.c: 2759: if (fp->fs->winsect - sect < cc) {
  4131  0E05  0021               	movlb	1	; select bank1
  4132  0E06  084A               	movf	f_write@cc^(0+128),w
  4133  0E07  00BA               	movwf	??_f_write^(0+128)
  4134  0E08  084B               	movf	(f_write@cc+1)^(0+128),w
  4135  0E09  00BB               	movwf	(??_f_write^(0+128)+1)
  4136  0E0A  01BC               	clrf	(??_f_write^(0+128)+2)
  4137  0E0B  01BD               	clrf	(??_f_write^(0+128)+3)
  4138  0E0C  0833               	movf	f_write@fp^(0+128),w
  4139  0E0D  0086               	movwf	6
  4140  0E0E  0834               	movf	(f_write@fp+1)^(0+128),w
  4141  0E0F  0087               	movwf	7
  4142  0E10  3F40               	moviw [0]fsr1
  4143  0E11  00BE               	movwf	(??_f_write+4)^(0+128)
  4144  0E12  3F41               	moviw [1]fsr1
  4145  0E13  00BF               	movwf	((??_f_write+4)^(0+128)+1)
  4146  0E14  083E               	movf	(??_f_write+4)^(0+128),w
  4147  0E15  3E2A               	addlw	42
  4148  0E16  0086               	movwf	6
  4149  0E17  3000               	movlw	0
  4150  0E18  3D3F               	addwfc	(??_f_write+5)^(0+128),w
  4151  0E19  0087               	movwf	7
  4152  0E1A  3F40               	moviw [0]fsr1
  4153  0E1B  00C0               	movwf	(??_f_write+6)^(0+128)
  4154  0E1C  3F41               	moviw [1]fsr1
  4155  0E1D  00C1               	movwf	((??_f_write+6)^(0+128)+1)
  4156  0E1E  3F42               	moviw [2]fsr1
  4157  0E1F  00C2               	movwf	((??_f_write+6)^(0+128)+2)
  4158  0E20  3F43               	moviw [3]fsr1
  4159  0E21  00C3               	movwf	((??_f_write+6)^(0+128)+3)
  4160  0E22  084C               	movf	f_write@sect^(0+128),w
  4161  0E23  02C0               	subwf	(??_f_write+6)^(0+128),f
  4162  0E24  084D               	movf	(f_write@sect+1)^(0+128),w
  4163  0E25  3BC1               	subwfb	((??_f_write+6)^(0+128)+1),f
  4164  0E26  084E               	movf	(f_write@sect+2)^(0+128),w
  4165  0E27  3BC2               	subwfb	((??_f_write+6)^(0+128)+2),f
  4166  0E28  084F               	movf	(f_write@sect+3)^(0+128),w
  4167  0E29  3BC3               	subwfb	((??_f_write+6)^(0+128)+3),f
  4168  0E2A  083D               	movf	(??_f_write+3)^(0+128),w
  4169  0E2B  0243               	subwf	(??_f_write+9)^(0+128),w
  4170  0E2C  1D03               	skipz
  4171  0E2D  2E38               	goto	u8395
  4172  0E2E  083C               	movf	(??_f_write+2)^(0+128),w
  4173  0E2F  0242               	subwf	(??_f_write+8)^(0+128),w
  4174  0E30  1D03               	skipz
  4175  0E31  2E38               	goto	u8395
  4176  0E32  083B               	movf	(??_f_write+1)^(0+128),w
  4177  0E33  0241               	subwf	(??_f_write+7)^(0+128),w
  4178  0E34  1D03               	skipz
  4179  0E35  2E38               	goto	u8395
  4180  0E36  083A               	movf	??_f_write^(0+128),w
  4181  0E37  0240               	subwf	(??_f_write+6)^(0+128),w
  4182  0E38                     u8395:	
  4183  0E38  1803               	skipnc
  4184  0E39  2E80               	goto	l5888
  4185                           
  4186                           ;ff.c: 2760: mem_cpy(fp->fs->win, wbuff + ((fp->fs->winsect - sect) * ((UINT)512)), ((UI
      +                          NT)512));
  4187  0E3A  0833               	movf	f_write@fp^(0+128),w
  4188  0E3B  0086               	movwf	6
  4189  0E3C  0834               	movf	(f_write@fp+1)^(0+128),w
  4190  0E3D  0087               	movwf	7
  4191  0E3E  3F40               	moviw [0]fsr1
  4192  0E3F  00BA               	movwf	??_f_write^(0+128)
  4193  0E40  3F41               	moviw [1]fsr1
  4194  0E41  00BB               	movwf	(??_f_write^(0+128)+1)
  4195  0E42  083A               	movf	??_f_write^(0+128),w
  4196  0E43  3E2E               	addlw	46
  4197  0E44  00F0               	movwf	mem_cpy@dst
  4198  0E45  3000               	movlw	0
  4199  0E46  3D3B               	addwfc	(??_f_write+1)^(0+128),w
  4200  0E47  00F1               	movwf	mem_cpy@dst+1
  4201  0E48  0833               	movf	f_write@fp^(0+128),w
  4202  0E49  0086               	movwf	6
  4203  0E4A  0834               	movf	(f_write@fp+1)^(0+128),w
  4204  0E4B  0087               	movwf	7
  4205  0E4C  3F40               	moviw [0]fsr1
  4206  0E4D  00BC               	movwf	(??_f_write+2)^(0+128)
  4207  0E4E  3F41               	moviw [1]fsr1
  4208  0E4F  00BD               	movwf	((??_f_write+2)^(0+128)+1)
  4209  0E50  083C               	movf	(??_f_write+2)^(0+128),w
  4210  0E51  3E2A               	addlw	42
  4211  0E52  0086               	movwf	6
  4212  0E53  3000               	movlw	0
  4213  0E54  3D3D               	addwfc	(??_f_write+3)^(0+128),w
  4214  0E55  0087               	movwf	7
  4215  0E56  3F40               	moviw [0]fsr1
  4216  0E57  00BE               	movwf	(??_f_write+4)^(0+128)
  4217  0E58  3F41               	moviw [1]fsr1
  4218  0E59  00BF               	movwf	((??_f_write+4)^(0+128)+1)
  4219  0E5A  084C               	movf	f_write@sect^(0+128),w
  4220  0E5B  023E               	subwf	(??_f_write+4)^(0+128),w
  4221  0E5C  00C0               	movwf	(??_f_write+6)^(0+128)
  4222  0E5D  084D               	movf	(f_write@sect+1)^(0+128),w
  4223  0E5E  3B3F               	subwfb	(??_f_write+5)^(0+128),w
  4224  0E5F  00C1               	movwf	(??_f_write+7)^(0+128)
  4225  0E60  3009               	movlw	9
  4226  0E61                     u8405:	
  4227  0E61  35C0               	lslf	(??_f_write+6)^(0+128),f
  4228  0E62  0DC1               	rlf	((??_f_write+6)^(0+128)+1),f
  4229  0E63  0B89               	decfsz	9,f
  4230  0E64  2E61               	goto	u8405
  4231  0E65  0840               	movf	(??_f_write+6)^(0+128),w
  4232  0E66  0747               	addwf	f_write@wbuff^(0+128),w
  4233  0E67  00F2               	movwf	mem_cpy@src
  4234  0E68  0841               	movf	(??_f_write+7)^(0+128),w
  4235  0E69  3D48               	addwfc	(f_write@wbuff+1)^(0+128),w
  4236  0E6A  00F3               	movwf	mem_cpy@src+1
  4237  0E6B  3000               	movlw	0
  4238  0E6C  00F4               	movwf	mem_cpy@cnt
  4239  0E6D  3002               	movlw	2
  4240  0E6E  00F5               	movwf	mem_cpy@cnt+1
  4241  0E6F  31AC  249D  318B   	fcall	_mem_cpy
  4242                           
  4243                           ;ff.c: 2761: fp->fs->wflag = 0;
  4244  0E72  0833               	movf	f_write@fp^(0+128),w
  4245  0E73  0086               	movwf	6
  4246  0E74  0834               	movf	(f_write@fp+1)^(0+128),w
  4247  0E75  0087               	movwf	7
  4248  0E76  3F40               	moviw [0]fsr1
  4249  0E77  00BA               	movwf	??_f_write^(0+128)
  4250  0E78  3F41               	moviw [1]fsr1
  4251  0E79  00BB               	movwf	(??_f_write^(0+128)+1)
  4252  0E7A  083A               	movf	??_f_write^(0+128),w
  4253  0E7B  0086               	movwf	6
  4254  0E7C  083B               	movf	(??_f_write+1)^(0+128),w
  4255  0E7D  0087               	movwf	7
  4256  0E7E  3144               	addfsr 1,4
  4257  0E7F  0181               	clrf	1
  4258  0E80                     l5888:	
  4259                           
  4260                           ;ff.c: 2762: };ff.c: 2770: wcnt = ((UINT)512) * cc;
  4261  0E80  084B               	movf	(f_write@cc+1)^(0+128),w
  4262  0E81  00BB               	movwf	(??_f_write^(0+128)+1)
  4263  0E82  084A               	movf	f_write@cc^(0+128),w
  4264  0E83  00BA               	movwf	??_f_write^(0+128)
  4265  0E84  3009               	movlw	9
  4266  0E85                     u8415:	
  4267  0E85  35BA               	lslf	??_f_write^(0+128),f
  4268  0E86  0DBB               	rlf	(??_f_write^(0+128)+1),f
  4269  0E87  0B89               	decfsz	9,f
  4270  0E88  2E85               	goto	u8415
  4271  0E89  083A               	movf	??_f_write^(0+128),w
  4272  0E8A  00D4               	movwf	f_write@wcnt^(0+128)
  4273  0E8B  083B               	movf	(??_f_write+1)^(0+128),w
  4274  0E8C  00D5               	movwf	(f_write@wcnt+1)^(0+128)
  4275                           
  4276                           ;ff.c: 2771: continue;
  4277  0E8D  2F8D               	goto	l5918
  4278  0E8E                     l5890:	
  4279                           
  4280                           ;ff.c: 2772: };ff.c: 2774: if (fp->fptr >= fp->fsize) {
  4281  0E8E  0833               	movf	f_write@fp^(0+128),w
  4282  0E8F  0086               	movwf	6
  4283  0E90  0834               	movf	(f_write@fp+1)^(0+128),w
  4284  0E91  0087               	movwf	7
  4285  0E92  314A               	addfsr 1,10
  4286  0E93  3F40               	moviw [0]fsr1
  4287  0E94  00BA               	movwf	??_f_write^(0+128)
  4288  0E95  3F41               	moviw [1]fsr1
  4289  0E96  00BB               	movwf	(??_f_write^(0+128)+1)
  4290  0E97  3F42               	moviw [2]fsr1
  4291  0E98  00BC               	movwf	(??_f_write^(0+128)+2)
  4292  0E99  3F43               	moviw [3]fsr1
  4293  0E9A  00BD               	movwf	(??_f_write^(0+128)+3)
  4294  0E9B  0833               	movf	f_write@fp^(0+128),w
  4295  0E9C  0086               	movwf	6
  4296  0E9D  0834               	movf	(f_write@fp+1)^(0+128),w
  4297  0E9E  0087               	movwf	7
  4298  0E9F  3146               	addfsr 1,6
  4299  0EA0  3F40               	moviw [0]fsr1
  4300  0EA1  00BE               	movwf	(??_f_write+4)^(0+128)
  4301  0EA2  3F41               	moviw [1]fsr1
  4302  0EA3  00BF               	movwf	((??_f_write+4)^(0+128)+1)
  4303  0EA4  3F42               	moviw [2]fsr1
  4304  0EA5  00C0               	movwf	((??_f_write+4)^(0+128)+2)
  4305  0EA6  3F43               	moviw [3]fsr1
  4306  0EA7  00C1               	movwf	((??_f_write+4)^(0+128)+3)
  4307  0EA8  083D               	movf	(??_f_write+3)^(0+128),w
  4308  0EA9  0241               	subwf	(??_f_write+7)^(0+128),w
  4309  0EAA  1D03               	skipz
  4310  0EAB  2EB6               	goto	u8425
  4311  0EAC  083C               	movf	(??_f_write+2)^(0+128),w
  4312  0EAD  0240               	subwf	(??_f_write+6)^(0+128),w
  4313  0EAE  1D03               	skipz
  4314  0EAF  2EB6               	goto	u8425
  4315  0EB0  083B               	movf	(??_f_write+1)^(0+128),w
  4316  0EB1  023F               	subwf	(??_f_write+5)^(0+128),w
  4317  0EB2  1D03               	skipz
  4318  0EB3  2EB6               	goto	u8425
  4319  0EB4  083A               	movf	??_f_write^(0+128),w
  4320  0EB5  023E               	subwf	(??_f_write+4)^(0+128),w
  4321  0EB6                     u8425:	
  4322  0EB6  1C03               	skipc
  4323  0EB7  2EEC               	goto	l5900
  4324                           
  4325                           ;ff.c: 2775: if (sync_window(fp->fs)) { fp->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ER
      +                          R; };
  4326  0EB8  0833               	movf	f_write@fp^(0+128),w
  4327  0EB9  0086               	movwf	6
  4328  0EBA  0834               	movf	(f_write@fp+1)^(0+128),w
  4329  0EBB  0087               	movwf	7
  4330  0EBC  3F40               	moviw [0]fsr1
  4331  0EBD  0020               	movlb	0	; select bank0
  4332  0EBE  00AE               	movwf	sync_window@fs
  4333  0EBF  3F41               	moviw [1]fsr1
  4334  0EC0  00AF               	movwf	sync_window@fs+1
  4335  0EC1  31A4  245B  318B   	fcall	_sync_window
  4336  0EC4  3A00               	xorlw	0
  4337  0EC5  1903               	skipnz
  4338  0EC6  2ED5               	goto	l5898
  4339  0EC7  0021               	movlb	1	; select bank1
  4340  0EC8  0833               	movf	f_write@fp^(0+128),w
  4341  0EC9  3E05               	addlw	5
  4342  0ECA  00BA               	movwf	??_f_write^(0+128)
  4343  0ECB  3000               	movlw	0
  4344  0ECC  3D34               	addwfc	(f_write@fp+1)^(0+128),w
  4345  0ECD  00BB               	movwf	(??_f_write+1)^(0+128)
  4346  0ECE  083A               	movf	??_f_write^(0+128),w
  4347  0ECF  0086               	movwf	6
  4348  0ED0  083B               	movf	(??_f_write+1)^(0+128),w
  4349  0ED1  0087               	movwf	7
  4350  0ED2  3001               	movlw	1
  4351  0ED3  0081               	movwf	1
  4352  0ED4  0008               	return
  4353  0ED5                     l5898:	
  4354                           
  4355                           ;ff.c: 2776: fp->fs->winsect = sect;
  4356  0ED5  0021               	movlb	1	; select bank1
  4357  0ED6  0833               	movf	f_write@fp^(0+128),w
  4358  0ED7  0086               	movwf	6
  4359  0ED8  0834               	movf	(f_write@fp+1)^(0+128),w
  4360  0ED9  0087               	movwf	7
  4361  0EDA  3F40               	moviw [0]fsr1
  4362  0EDB  00BA               	movwf	??_f_write^(0+128)
  4363  0EDC  3F41               	moviw [1]fsr1
  4364  0EDD  00BB               	movwf	(??_f_write^(0+128)+1)
  4365  0EDE  083A               	movf	??_f_write^(0+128),w
  4366  0EDF  3E2A               	addlw	42
  4367  0EE0  0086               	movwf	6
  4368  0EE1  3000               	movlw	0
  4369  0EE2  3D3B               	addwfc	(??_f_write+1)^(0+128),w
  4370  0EE3  0087               	movwf	7
  4371  0EE4  084C               	movf	f_write@sect^(0+128),w
  4372  0EE5  3FC0               	movwi [0]fsr1
  4373  0EE6  084D               	movf	(f_write@sect+1)^(0+128),w
  4374  0EE7  3FC1               	movwi [1]fsr1
  4375  0EE8  084E               	movf	(f_write@sect+2)^(0+128),w
  4376  0EE9  3FC2               	movwi [2]fsr1
  4377  0EEA  084F               	movf	(f_write@sect+3)^(0+128),w
  4378  0EEB  3FC3               	movwi [3]fsr1
  4379  0EEC                     l5900:	
  4380                           
  4381                           ;ff.c: 2777: };ff.c: 2785: fp->dsect = sect;
  4382  0EEC  0833               	movf	f_write@fp^(0+128),w
  4383  0EED  0086               	movwf	6
  4384  0EEE  0834               	movf	(f_write@fp+1)^(0+128),w
  4385  0EEF  0087               	movwf	7
  4386  0EF0  3156               	addfsr 1,22
  4387  0EF1  084C               	movf	f_write@sect^(0+128),w
  4388  0EF2  3FC0               	movwi [0]fsr1
  4389  0EF3  084D               	movf	(f_write@sect+1)^(0+128),w
  4390  0EF4  3FC1               	movwi [1]fsr1
  4391  0EF5  084E               	movf	(f_write@sect+2)^(0+128),w
  4392  0EF6  3FC2               	movwi [2]fsr1
  4393  0EF7  084F               	movf	(f_write@sect+3)^(0+128),w
  4394  0EF8  3FC3               	movwi [3]fsr1
  4395  0EF9                     l5902:	
  4396                           
  4397                           ;ff.c: 2786: };ff.c: 2787: wcnt = ((UINT)512) - ((UINT)fp->fptr % ((UINT)512));
  4398  0EF9  0833               	movf	f_write@fp^(0+128),w
  4399  0EFA  0086               	movwf	6
  4400  0EFB  0834               	movf	(f_write@fp+1)^(0+128),w
  4401  0EFC  0087               	movwf	7
  4402  0EFD  3146               	addfsr 1,6
  4403  0EFE  3F40               	moviw [0]fsr1
  4404  0EFF  00BA               	movwf	??_f_write^(0+128)
  4405  0F00  3F41               	moviw [1]fsr1
  4406  0F01  00BB               	movwf	(??_f_write^(0+128)+1)
  4407  0F02  30FF               	movlw	255
  4408  0F03  053A               	andwf	??_f_write^(0+128),w
  4409  0F04  00BC               	movwf	(??_f_write+2)^(0+128)
  4410  0F05  3001               	movlw	1
  4411  0F06  053B               	andwf	(??_f_write+1)^(0+128),w
  4412  0F07  00BD               	movwf	(??_f_write+3)^(0+128)
  4413  0F08  3000               	movlw	0
  4414  0F09  00BE               	movwf	(??_f_write+4)^(0+128)
  4415  0F0A  3002               	movlw	2
  4416  0F0B  00BF               	movwf	((??_f_write+4)^(0+128)+1)
  4417  0F0C  083C               	movf	(??_f_write+2)^(0+128),w
  4418  0F0D  023E               	subwf	(??_f_write+4)^(0+128),w
  4419  0F0E  00D4               	movwf	f_write@wcnt^(0+128)
  4420  0F0F  083D               	movf	(??_f_write+3)^(0+128),w
  4421  0F10  3B3F               	subwfb	(??_f_write+5)^(0+128),w
  4422  0F11  00D5               	movwf	(f_write@wcnt+1)^(0+128)
  4423                           
  4424                           ;ff.c: 2788: if (wcnt > btw) wcnt = btw;
  4425  0F12  0855               	movf	(f_write@wcnt+1)^(0+128),w
  4426  0F13  0238               	subwf	(f_write@btw+1)^(0+128),w
  4427  0F14  1D03               	skipz
  4428  0F15  2F18               	goto	u8445
  4429  0F16  0854               	movf	f_write@wcnt^(0+128),w
  4430  0F17  0237               	subwf	f_write@btw^(0+128),w
  4431  0F18                     u8445:	
  4432  0F18  1803               	skipnc
  4433  0F19  2F1E               	goto	l5908
  4434  0F1A  0838               	movf	(f_write@btw+1)^(0+128),w
  4435  0F1B  00D5               	movwf	(f_write@wcnt+1)^(0+128)
  4436  0F1C  0837               	movf	f_write@btw^(0+128),w
  4437  0F1D  00D4               	movwf	f_write@wcnt^(0+128)
  4438  0F1E                     l5908:	
  4439                           
  4440                           ;ff.c: 2790: if (move_window(fp->fs, fp->dsect) != FR_OK)
  4441  0F1E  0833               	movf	f_write@fp^(0+128),w
  4442  0F1F  0086               	movwf	6
  4443  0F20  0834               	movf	(f_write@fp+1)^(0+128),w
  4444  0F21  0087               	movwf	7
  4445  0F22  3F40               	moviw [0]fsr1
  4446  0F23  0020               	movlb	0	; select bank0
  4447  0F24  00C3               	movwf	move_window@fs
  4448  0F25  3F41               	moviw [1]fsr1
  4449  0F26  00C4               	movwf	move_window@fs+1
  4450  0F27  0021               	movlb	1	; select bank1
  4451  0F28  0833               	movf	f_write@fp^(0+128),w
  4452  0F29  0086               	movwf	6
  4453  0F2A  0834               	movf	(f_write@fp+1)^(0+128),w
  4454  0F2B  0087               	movwf	7
  4455  0F2C  3156               	addfsr 1,22
  4456  0F2D  3F40               	moviw [0]fsr1
  4457  0F2E  0020               	movlb	0	; select bank0
  4458  0F2F  00C5               	movwf	move_window@sector
  4459  0F30  3F41               	moviw [1]fsr1
  4460  0F31  00C6               	movwf	move_window@sector+1
  4461  0F32  3F42               	moviw [2]fsr1
  4462  0F33  00C7               	movwf	move_window@sector+2
  4463  0F34  3F43               	moviw [3]fsr1
  4464  0F35  00C8               	movwf	move_window@sector+3
  4465  0F36  31AE  263A  318B   	fcall	_move_window
  4466  0F39  3A00               	xorlw	0
  4467  0F3A  1903               	skipnz
  4468  0F3B  2F4A               	goto	l5914
  4469                           
  4470                           ;ff.c: 2791: { fp->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
  4471  0F3C  0021               	movlb	1	; select bank1
  4472  0F3D  0833               	movf	f_write@fp^(0+128),w
  4473  0F3E  3E05               	addlw	5
  4474  0F3F  00BA               	movwf	??_f_write^(0+128)
  4475  0F40  3000               	movlw	0
  4476  0F41  3D34               	addwfc	(f_write@fp+1)^(0+128),w
  4477  0F42  00BB               	movwf	(??_f_write+1)^(0+128)
  4478  0F43  083A               	movf	??_f_write^(0+128),w
  4479  0F44  0086               	movwf	6
  4480  0F45  083B               	movf	(??_f_write+1)^(0+128),w
  4481  0F46  0087               	movwf	7
  4482  0F47  3001               	movlw	1
  4483  0F48  0081               	movwf	1
  4484  0F49  0008               	return
  4485  0F4A                     l5914:	
  4486                           
  4487                           ;ff.c: 2792: mem_cpy(&fp->fs->win[fp->fptr % ((UINT)512)], wbuff, wcnt);
  4488  0F4A  0021               	movlb	1	; select bank1
  4489  0F4B  0833               	movf	f_write@fp^(0+128),w
  4490  0F4C  0086               	movwf	6
  4491  0F4D  0834               	movf	(f_write@fp+1)^(0+128),w
  4492  0F4E  0087               	movwf	7
  4493  0F4F  3146               	addfsr 1,6
  4494  0F50  3F40               	moviw [0]fsr1
  4495  0F51  00BA               	movwf	??_f_write^(0+128)
  4496  0F52  3F41               	moviw [1]fsr1
  4497  0F53  00BB               	movwf	(??_f_write^(0+128)+1)
  4498  0F54  30FF               	movlw	255
  4499  0F55  053A               	andwf	??_f_write^(0+128),w
  4500  0F56  00BC               	movwf	(??_f_write+2)^(0+128)
  4501  0F57  3001               	movlw	1
  4502  0F58  053B               	andwf	(??_f_write+1)^(0+128),w
  4503  0F59  00BD               	movwf	(??_f_write+3)^(0+128)
  4504  0F5A  0833               	movf	f_write@fp^(0+128),w
  4505  0F5B  0086               	movwf	6
  4506  0F5C  0834               	movf	(f_write@fp+1)^(0+128),w
  4507  0F5D  0087               	movwf	7
  4508  0F5E  3F40               	moviw [0]fsr1
  4509  0F5F  00BE               	movwf	(??_f_write+4)^(0+128)
  4510  0F60  3F41               	moviw [1]fsr1
  4511  0F61  00BF               	movwf	((??_f_write+4)^(0+128)+1)
  4512  0F62  083C               	movf	(??_f_write+2)^(0+128),w
  4513  0F63  073E               	addwf	(??_f_write+4)^(0+128),w
  4514  0F64  00C0               	movwf	(??_f_write+6)^(0+128)
  4515  0F65  083D               	movf	(??_f_write+3)^(0+128),w
  4516  0F66  3D3F               	addwfc	(??_f_write+5)^(0+128),w
  4517  0F67  00C1               	movwf	(??_f_write+7)^(0+128)
  4518  0F68  0840               	movf	(??_f_write+6)^(0+128),w
  4519  0F69  3E2E               	addlw	46
  4520  0F6A  00F0               	movwf	mem_cpy@dst
  4521  0F6B  3000               	movlw	0
  4522  0F6C  3D41               	addwfc	(??_f_write+7)^(0+128),w
  4523  0F6D  00F1               	movwf	mem_cpy@dst+1
  4524  0F6E  0848               	movf	(f_write@wbuff+1)^(0+128),w
  4525  0F6F  00F3               	movwf	mem_cpy@src+1
  4526  0F70  0847               	movf	f_write@wbuff^(0+128),w
  4527  0F71  00F2               	movwf	mem_cpy@src
  4528  0F72  0855               	movf	(f_write@wcnt+1)^(0+128),w
  4529  0F73  00F5               	movwf	mem_cpy@cnt+1
  4530  0F74  0854               	movf	f_write@wcnt^(0+128),w
  4531  0F75  00F4               	movwf	mem_cpy@cnt
  4532  0F76  31AC  249D  318B   	fcall	_mem_cpy
  4533                           
  4534                           ;ff.c: 2793: fp->fs->wflag = 1;
  4535  0F79  0833               	movf	f_write@fp^(0+128),w
  4536  0F7A  0086               	movwf	6
  4537  0F7B  0834               	movf	(f_write@fp+1)^(0+128),w
  4538  0F7C  0087               	movwf	7
  4539  0F7D  3F40               	moviw [0]fsr1
  4540  0F7E  00BA               	movwf	??_f_write^(0+128)
  4541  0F7F  3F41               	moviw [1]fsr1
  4542  0F80  00BB               	movwf	(??_f_write^(0+128)+1)
  4543  0F81  083A               	movf	??_f_write^(0+128),w
  4544  0F82  3E04               	addlw	4
  4545  0F83  00BC               	movwf	(??_f_write+2)^(0+128)
  4546  0F84  3000               	movlw	0
  4547  0F85  3D3B               	addwfc	(??_f_write+1)^(0+128),w
  4548  0F86  00BD               	movwf	(??_f_write+3)^(0+128)
  4549  0F87  083C               	movf	(??_f_write+2)^(0+128),w
  4550  0F88  0086               	movwf	6
  4551  0F89  083D               	movf	(??_f_write+3)^(0+128),w
  4552  0F8A  0087               	movwf	7
  4553  0F8B  3001               	movlw	1
  4554  0F8C  0081               	movwf	1
  4555  0F8D                     l5918:	
  4556  0F8D  0854               	movf	f_write@wcnt^(0+128),w
  4557  0F8E  07C7               	addwf	f_write@wbuff^(0+128),f
  4558  0F8F  0855               	movf	(f_write@wcnt+1)^(0+128),w
  4559  0F90  3DC8               	addwfc	(f_write@wbuff+1)^(0+128),f
  4560  0F91  0854               	movf	f_write@wcnt^(0+128),w
  4561  0F92  00BA               	movwf	??_f_write^(0+128)
  4562  0F93  0855               	movf	(f_write@wcnt+1)^(0+128),w
  4563  0F94  00BB               	movwf	(??_f_write^(0+128)+1)
  4564  0F95  01BC               	clrf	(??_f_write^(0+128)+2)
  4565  0F96  01BD               	clrf	(??_f_write^(0+128)+3)
  4566  0F97  0833               	movf	f_write@fp^(0+128),w
  4567  0F98  0086               	movwf	6
  4568  0F99  0834               	movf	(f_write@fp+1)^(0+128),w
  4569  0F9A  0087               	movwf	7
  4570  0F9B  3146               	addfsr 1,6
  4571  0F9C  083A               	movf	??_f_write^(0+128),w
  4572  0F9D  0781               	addwf	1,f
  4573  0F9E  3141               	addfsr 1,1
  4574  0F9F  083B               	movf	(??_f_write+1)^(0+128),w
  4575  0FA0  3D81               	addwfc	1,f
  4576  0FA1  3141               	addfsr 1,1
  4577  0FA2  083C               	movf	(??_f_write+2)^(0+128),w
  4578  0FA3  3D81               	addwfc	1,f
  4579  0FA4  3141               	addfsr 1,1
  4580  0FA5  083D               	movf	(??_f_write+3)^(0+128),w
  4581  0FA6  3D81               	addwfc	1,f
  4582  0FA7  0839               	movf	f_write@bw^(0+128),w
  4583  0FA8  0086               	movwf	6
  4584  0FA9  0187               	clrf	7
  4585  0FAA  0854               	movf	f_write@wcnt^(0+128),w
  4586  0FAB  0781               	addwf	1,f
  4587  0FAC  3141               	addfsr 1,1
  4588  0FAD  0855               	movf	(f_write@wcnt+1)^(0+128),w
  4589  0FAE  3D81               	addwfc	1,f
  4590  0FAF  317F               	addfsr 1,-1
  4591  0FB0  0854               	movf	f_write@wcnt^(0+128),w
  4592  0FB1  02B7               	subwf	f_write@btw^(0+128),f
  4593  0FB2  0855               	movf	(f_write@wcnt+1)^(0+128),w
  4594  0FB3  3BB8               	subwfb	(f_write@btw+1)^(0+128),f
  4595  0FB4  2BE7               	goto	l5926
  4596  0FB5                     l5928:	
  4597                           
  4598                           ;ff.c: 2798: };ff.c: 2800: if (fp->fptr > fp->fsize) fp->fsize = fp->fptr;
  4599  0FB5  0833               	movf	f_write@fp^(0+128),w
  4600  0FB6  0086               	movwf	6
  4601  0FB7  0834               	movf	(f_write@fp+1)^(0+128),w
  4602  0FB8  0087               	movwf	7
  4603  0FB9  3146               	addfsr 1,6
  4604  0FBA  3F40               	moviw [0]fsr1
  4605  0FBB  00BA               	movwf	??_f_write^(0+128)
  4606  0FBC  3F41               	moviw [1]fsr1
  4607  0FBD  00BB               	movwf	(??_f_write^(0+128)+1)
  4608  0FBE  3F42               	moviw [2]fsr1
  4609  0FBF  00BC               	movwf	(??_f_write^(0+128)+2)
  4610  0FC0  3F43               	moviw [3]fsr1
  4611  0FC1  00BD               	movwf	(??_f_write^(0+128)+3)
  4612  0FC2  0833               	movf	f_write@fp^(0+128),w
  4613  0FC3  0086               	movwf	6
  4614  0FC4  0834               	movf	(f_write@fp+1)^(0+128),w
  4615  0FC5  0087               	movwf	7
  4616  0FC6  314A               	addfsr 1,10
  4617  0FC7  3F40               	moviw [0]fsr1
  4618  0FC8  00BE               	movwf	(??_f_write+4)^(0+128)
  4619  0FC9  3F41               	moviw [1]fsr1
  4620  0FCA  00BF               	movwf	((??_f_write+4)^(0+128)+1)
  4621  0FCB  3F42               	moviw [2]fsr1
  4622  0FCC  00C0               	movwf	((??_f_write+4)^(0+128)+2)
  4623  0FCD  3F43               	moviw [3]fsr1
  4624  0FCE  00C1               	movwf	((??_f_write+4)^(0+128)+3)
  4625  0FCF  083D               	movf	(??_f_write+3)^(0+128),w
  4626  0FD0  0241               	subwf	(??_f_write+7)^(0+128),w
  4627  0FD1  1D03               	skipz
  4628  0FD2  2FDD               	goto	u8475
  4629  0FD3  083C               	movf	(??_f_write+2)^(0+128),w
  4630  0FD4  0240               	subwf	(??_f_write+6)^(0+128),w
  4631  0FD5  1D03               	skipz
  4632  0FD6  2FDD               	goto	u8475
  4633  0FD7  083B               	movf	(??_f_write+1)^(0+128),w
  4634  0FD8  023F               	subwf	(??_f_write+5)^(0+128),w
  4635  0FD9  1D03               	skipz
  4636  0FDA  2FDD               	goto	u8475
  4637  0FDB  083A               	movf	??_f_write^(0+128),w
  4638  0FDC  023E               	subwf	(??_f_write+4)^(0+128),w
  4639  0FDD                     u8475:	
  4640  0FDD  1803               	skipnc
  4641  0FDE  2FF9               	goto	l5932
  4642  0FDF  0833               	movf	f_write@fp^(0+128),w
  4643  0FE0  0086               	movwf	6
  4644  0FE1  0834               	movf	(f_write@fp+1)^(0+128),w
  4645  0FE2  0087               	movwf	7
  4646  0FE3  3146               	addfsr 1,6
  4647  0FE4  3F40               	moviw [0]fsr1
  4648  0FE5  00BA               	movwf	??_f_write^(0+128)
  4649  0FE6  3F41               	moviw [1]fsr1
  4650  0FE7  00BB               	movwf	(??_f_write^(0+128)+1)
  4651  0FE8  3F42               	moviw [2]fsr1
  4652  0FE9  00BC               	movwf	(??_f_write^(0+128)+2)
  4653  0FEA  3F43               	moviw [3]fsr1
  4654  0FEB  00BD               	movwf	(??_f_write^(0+128)+3)
  4655  0FEC  0833               	movf	f_write@fp^(0+128),w
  4656  0FED  0086               	movwf	6
  4657  0FEE  0834               	movf	(f_write@fp+1)^(0+128),w
  4658  0FEF  0087               	movwf	7
  4659  0FF0  314A               	addfsr 1,10
  4660  0FF1  083A               	movf	??_f_write^(0+128),w
  4661  0FF2  3FC0               	movwi [0]fsr1
  4662  0FF3  083B               	movf	(??_f_write+1)^(0+128),w
  4663  0FF4  3FC1               	movwi [1]fsr1
  4664  0FF5  083C               	movf	(??_f_write+2)^(0+128),w
  4665  0FF6  3FC2               	movwi [2]fsr1
  4666  0FF7  083D               	movf	(??_f_write+3)^(0+128),w
  4667  0FF8  3FC3               	movwi [3]fsr1
  4668  0FF9                     l5932:	
  4669                           
  4670                           ;ff.c: 2801: fp->flag |= 0x20;
  4671  0FF9  0833               	movf	f_write@fp^(0+128),w
  4672  0FFA  0086               	movwf	6
  4673  0FFB  0834               	movf	(f_write@fp+1)^(0+128),w
  4674  0FFC  0087               	movwf	7
  4675  0FFD  3144               	addfsr 1,4
  4676  0FFE  1681               	bsf	1,5
  4677  0FFF  0008               	return
  4678  1000                     __end_of_f_write:	
  4679                           
  4680                           	psect	text4
  4681  1DAE                     __ptext4:	
  4682 ;; *************** function _f_open *****************
  4683 ;; Defined at:
  4684 ;;		line 2449 in file "ff.c"
  4685 ;; Parameters:    Size  Location     Type
  4686 ;;  fp              2   58[BANK1 ] PTR struct .
  4687 ;;		 -> Fil(32), 
  4688 ;;  path            2   60[BANK1 ] PTR const unsigned char 
  4689 ;;		 -> STR_2(10), STR_1(1), 
  4690 ;;  mode            1   62[BANK1 ] unsigned char 
  4691 ;; Auto vars:     Size  Location     Type
  4692 ;;  dj             22   23[BANK2 ] struct .
  4693 ;;  sfn            12    0[BANK2 ] unsigned char [12]
  4694 ;;  dw              4   16[BANK2 ] unsigned long 
  4695 ;;  cl              4   12[BANK2 ] unsigned long 
  4696 ;;  dir             2   21[BANK2 ] PTR unsigned char 
  4697 ;;		 -> NULL(0), FatFs(558), 
  4698 ;;  res             1   20[BANK2 ] enum E88
  4699 ;; Return value:  Size  Location     Type
  4700 ;;                  1    wreg      enum E5735
  4701 ;; Registers used:
  4702 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4703 ;; Tracked objects:
  4704 ;;		On entry : 1F/1
  4705 ;;		On exit  : 1C/0
  4706 ;;		Unchanged: 0/0
  4707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4708 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4709 ;;      Locals:         0       0       0      45       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4710 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4711 ;;      Totals:         0       0       9      45       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4712 ;;Total ram usage:       54 bytes
  4713 ;; Hardware stack levels used:    1
  4714 ;; Hardware stack levels required when called:   13
  4715 ;; This function calls:
  4716 ;;		_dir_register
  4717 ;;		_find_volume
  4718 ;;		_follow_path
  4719 ;;		_ld_clust
  4720 ;;		_move_window
  4721 ;;		_remove_chain
  4722 ;;		_st_clust
  4723 ;; This function is called by:
  4724 ;;		_main
  4725 ;; This function uses a non-reentrant model
  4726 ;;
  4727                           
  4728                           
  4729                           ;psect for function _f_open
  4730  1DAE                     _f_open:	
  4731                           
  4732                           ;ff.c: 2455: FRESULT res;;ff.c: 2456: DIR dj;;ff.c: 2457: BYTE *dir;;ff.c: 2458: BYTE sf
      +                          n[12];;ff.c: 2460: DWORD dw, cl;;ff.c: 2464: if (!fp) return FR_INVALID_OBJECT;
  4733                           
  4734                           ;incstack = 0
  4735                           ; Regs used in _f_open: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4736  1DAE  085A               	movf	f_open@fp^(0+128),w
  4737  1DAF  045B               	iorwf	(f_open@fp+1)^(0+128),w
  4738  1DB0  1D03               	btfss	3,2
  4739  1DB1  2DB4               	goto	l5552
  4740  1DB2  3009               	movlw	9
  4741  1DB3  0008               	return
  4742  1DB4                     l5552:	
  4743                           
  4744                           ;ff.c: 2465: fp->fs = 0;
  4745  1DB4  085A               	movf	f_open@fp^(0+128),w
  4746  1DB5  0086               	movwf	6
  4747  1DB6  085B               	movf	(f_open@fp+1)^(0+128),w
  4748  1DB7  0087               	movwf	7
  4749  1DB8  3000               	movlw	0
  4750  1DB9  3FC0               	movwi [0]fsr1
  4751  1DBA  3FC1               	movwi [1]fsr1
  4752                           
  4753                           ;ff.c: 2468: dj.fs = FatFs[0];
  4754  1DBB  086A               	movf	(ff@FatFs+1)^(0+128),w
  4755  1DBC  0022               	movlb	2	; select bank2
  4756  1DBD  00B8               	movwf	(f_open@dj+1)^(0+256)
  4757  1DBE  0021               	movlb	1	; select bank1
  4758  1DBF  0869               	movf	ff@FatFs^(0+128),w
  4759  1DC0  0022               	movlb	2	; select bank2
  4760  1DC1  00B7               	movwf	f_open@dj^(0+256)
  4761                           
  4762                           ;ff.c: 2473: mode &= 0x01 | 0x02 | 0x08 | 0x10 | 0x04;
  4763  1DC2  301F               	movlw	31
  4764  1DC3  0021               	movlb	1	; select bank1
  4765  1DC4  00DF               	movwf	??_f_open^(0+128)
  4766  1DC5  085F               	movf	??_f_open^(0+128),w
  4767  1DC6  05DE               	andwf	f_open@mode^(0+128),f
  4768                           
  4769                           ;ff.c: 2474: res = find_volume(&dj.fs, &path, (BYTE)(mode & ~0x01));
  4770  1DC7  3037               	movlw	low f_open@dj
  4771  1DC8  0020               	movlb	0	; select bank0
  4772  1DC9  00D8               	movwf	find_volume@rfs
  4773  1DCA  3001               	movlw	high f_open@dj
  4774  1DCB  00D9               	movwf	find_volume@rfs+1
  4775  1DCC  30DC               	movlw	(low (f_open@path| 0))& (0+255)
  4776  1DCD  0021               	movlb	1	; select bank1
  4777  1DCE  00DF               	movwf	??_f_open^(0+128)
  4778  1DCF  085F               	movf	??_f_open^(0+128),w
  4779  1DD0  0020               	movlb	0	; select bank0
  4780  1DD1  00DA               	movwf	find_volume@path
  4781  1DD2  0021               	movlb	1	; select bank1
  4782  1DD3  085E               	movf	f_open@mode^(0+128),w
  4783  1DD4  39FE               	andlw	254
  4784  1DD5  00E0               	movwf	(??_f_open+1)^(0+128)
  4785  1DD6  0860               	movf	(??_f_open+1)^(0+128),w
  4786  1DD7  0020               	movlb	0	; select bank0
  4787  1DD8  00DB               	movwf	find_volume@wmode
  4788  1DD9  3181  21D7  319D   	fcall	_find_volume
  4789  1DDC  0021               	movlb	1	; select bank1
  4790  1DDD  00E1               	movwf	(??_f_open+2)^(0+128)
  4791  1DDE  0861               	movf	(??_f_open+2)^(0+128),w
  4792  1DDF  0022               	movlb	2	; select bank2
  4793  1DE0  00B4               	movwf	f_open@res^(0+256)
  4794                           
  4795                           ;ff.c: 2479: if (res == FR_OK) {
  4796  1DE1  0834               	movf	f_open@res^(0+256),w
  4797  1DE2  1D03               	btfss	3,2
  4798  1DE3  2FFD               	goto	l5662
  4799                           
  4800                           ;ff.c: 2480: (dj).fn = sfn;
  4801  1DE4  3020               	movlw	low f_open@sfn
  4802  1DE5  00CB               	movwf	(f_open@dj^(0+256)+20)
  4803  1DE6  3001               	movlw	high f_open@sfn
  4804  1DE7  00CC               	movwf	((f_open@dj+1)^(0+256)+20)
  4805                           
  4806                           ;ff.c: 2481: res = follow_path(&dj, path);
  4807  1DE8  3037               	movlw	low f_open@dj
  4808  1DE9  0021               	movlb	1	; select bank1
  4809  1DEA  00CE               	movwf	follow_path@dp^(0+128)
  4810  1DEB  3001               	movlw	high f_open@dj
  4811  1DEC  00CF               	movwf	(follow_path@dp^(0+128)+1)
  4812  1DED  085D               	movf	(f_open@path+1)^(0+128),w
  4813  1DEE  00D1               	movwf	(follow_path@path+1)^(0+128)
  4814  1DEF  085C               	movf	f_open@path^(0+128),w
  4815  1DF0  00D0               	movwf	follow_path@path^(0+128)
  4816  1DF1  31A2  22FD  319D   	fcall	_follow_path
  4817  1DF4  00DF               	movwf	??_f_open^(0+128)
  4818  1DF5  085F               	movf	??_f_open^(0+128),w
  4819  1DF6  0022               	movlb	2	; select bank2
  4820  1DF7  00B4               	movwf	f_open@res^(0+256)
  4821                           
  4822                           ;ff.c: 2482: dir = dj.dir;
  4823  1DF8  084A               	movf	((f_open@dj+1)^(0+256)+18),w
  4824  1DF9  00B6               	movwf	(f_open@dir+1)^(0+256)
  4825  1DFA  0849               	movf	(f_open@dj^(0+256)+18),w
  4826  1DFB  00B5               	movwf	f_open@dir^(0+256)
  4827                           
  4828                           ;ff.c: 2484: if (res == FR_OK) {
  4829  1DFC  0834               	movf	f_open@res^(0+256),w
  4830  1DFD  1D03               	btfss	3,2
  4831  1DFE  2E09               	goto	l5574
  4832                           
  4833                           ;ff.c: 2485: if (!dir)
  4834  1DFF  0835               	movf	f_open@dir^(0+256),w
  4835  1E00  0436               	iorwf	(f_open@dir+1)^(0+256),w
  4836  1E01  1D03               	btfss	3,2
  4837  1E02  2E09               	goto	l5574
  4838                           
  4839                           ;ff.c: 2486: res = FR_INVALID_NAME;
  4840  1E03  3006               	movlw	6
  4841  1E04  0021               	movlb	1	; select bank1
  4842  1E05  00DF               	movwf	??_f_open^(0+128)
  4843  1E06  085F               	movf	??_f_open^(0+128),w
  4844  1E07  0022               	movlb	2	; select bank2
  4845  1E08  00B4               	movwf	f_open@res^(0+256)
  4846  1E09                     l5574:	
  4847                           
  4848                           ;ff.c: 2491: };ff.c: 2493: if (mode & (0x08 | 0x10 | 0x04)) {
  4849  1E09  0021               	movlb	1	; select bank1
  4850  1E0A  085E               	movf	f_open@mode^(0+128),w
  4851  1E0B  391C               	andlw	28
  4852  1E0C  1903               	btfsc	3,2
  4853  1E0D  2F26               	goto	l5624
  4854                           
  4855                           ;ff.c: 2494: if (res != FR_OK) {
  4856  1E0E  0022               	movlb	2	; select bank2
  4857  1E0F  0834               	movf	f_open@res^(0+256),w
  4858  1E10  1903               	btfsc	3,2
  4859  1E11  2E2A               	goto	l5586
  4860                           
  4861                           ;ff.c: 2495: if (res == FR_NO_FILE)
  4862  1E12  3004               	movlw	4
  4863  1E13  0634               	xorwf	f_open@res^(0+256),w
  4864  1E14  1D03               	btfss	3,2
  4865  1E15  2E22               	goto	l5582
  4866                           
  4867                           ;ff.c: 2499: res = dir_register(&dj);
  4868  1E16  3037               	movlw	low f_open@dj
  4869  1E17  0021               	movlb	1	; select bank1
  4870  1E18  00D0               	movwf	dir_register@dp^(0+128)
  4871  1E19  3001               	movlw	high f_open@dj
  4872  1E1A  00D1               	movwf	(dir_register@dp^(0+128)+1)
  4873  1E1B  3180  2004  319D   	fcall	_dir_register
  4874  1E1E  00DF               	movwf	??_f_open^(0+128)
  4875  1E1F  085F               	movf	??_f_open^(0+128),w
  4876  1E20  0022               	movlb	2	; select bank2
  4877  1E21  00B4               	movwf	f_open@res^(0+256)
  4878  1E22                     l5582:	
  4879                           
  4880                           ;ff.c: 2501: mode |= 0x08;
  4881  1E22  0021               	movlb	1	; select bank1
  4882  1E23  15DE               	bsf	f_open@mode^(0+128),3
  4883                           
  4884                           ;ff.c: 2502: dir = dj.dir;
  4885  1E24  0022               	movlb	2	; select bank2
  4886  1E25  084A               	movf	((f_open@dj+1)^(0+256)+18),w
  4887  1E26  00B6               	movwf	(f_open@dir+1)^(0+256)
  4888  1E27  0849               	movf	(f_open@dj^(0+256)+18),w
  4889  1E28  00B5               	movwf	f_open@dir^(0+256)
  4890                           
  4891                           ;ff.c: 2503: }
  4892  1E29  2E3E               	goto	l5592
  4893  1E2A                     l5586:	
  4894                           
  4895                           ;ff.c: 2504: else {;ff.c: 2505: if (dir[11] & (0x01 | 0x10)) {
  4896  1E2A  0835               	movf	f_open@dir^(0+256),w
  4897  1E2B  0086               	movwf	6
  4898  1E2C  0836               	movf	(f_open@dir+1)^(0+256),w
  4899  1E2D  0087               	movwf	7
  4900  1E2E  314B               	addfsr 1,11
  4901  1E2F  0801               	movf	1,w
  4902  1E30  3911               	andlw	17
  4903  1E31  1903               	btfsc	3,2
  4904  1E32  2E36               	goto	l673
  4905                           
  4906                           ;ff.c: 2506: res = FR_DENIED;
  4907  1E33  3007               	movlw	7
  4908  1E34  0021               	movlb	1	; select bank1
  4909  1E35  2E3A               	goto	L2
  4910  1E36                     l673:	
  4911                           ;ff.c: 2507: } else {
  4912                           
  4913                           
  4914                           ;ff.c: 2508: if (mode & 0x04)
  4915  1E36  0021               	movlb	1	; select bank1
  4916  1E37  1D5E               	btfss	f_open@mode^(0+128),2
  4917  1E38  2E3E               	goto	l5592
  4918                           
  4919                           ;ff.c: 2509: res = FR_EXIST;
  4920  1E39  3008               	movlw	8
  4921  1E3A                     L2:	
  4922  1E3A  00DF               	movwf	??_f_open^(0+128)
  4923  1E3B  085F               	movf	??_f_open^(0+128),w
  4924  1E3C  0022               	movlb	2	; select bank2
  4925  1E3D  00B4               	movwf	f_open@res^(0+256)
  4926  1E3E                     l5592:	
  4927                           
  4928                           ;ff.c: 2510: };ff.c: 2511: };ff.c: 2512: if (res == FR_OK && (mode & 0x08)) {
  4929  1E3E  0022               	movlb	2	; select bank2
  4930  1E3F  0834               	movf	f_open@res^(0+256),w
  4931  1E40  1D03               	btfss	3,2
  4932  1E41  2F44               	goto	l5634
  4933  1E42  0021               	movlb	1	; select bank1
  4934  1E43  1DDE               	btfss	f_open@mode^(0+128),3
  4935  1E44  2F44               	goto	l5634
  4936                           
  4937                           ;ff.c: 2514: *(DWORD*)(BYTE*)(dir + 14)=(DWORD)(dw);
  4938  1E45  0022               	movlb	2	; select bank2
  4939  1E46  0835               	movf	f_open@dir^(0+256),w
  4940  1E47  0086               	movwf	6
  4941  1E48  0836               	movf	(f_open@dir+1)^(0+256),w
  4942  1E49  0087               	movwf	7
  4943  1E4A  314E               	addfsr 1,14
  4944  1E4B  3000               	movlw	0
  4945  1E4C  3FC0               	movwi [0]fsr1
  4946  1E4D  3000               	movlw	0
  4947  1E4E  3FC1               	movwi [1]fsr1
  4948  1E4F  3021               	movlw	33
  4949  1E50  3FC2               	movwi [2]fsr1
  4950  1E51  3046               	movlw	70
  4951  1E52  3FC3               	movwi [3]fsr1
  4952                           
  4953                           ;ff.c: 2515: *(DWORD*)(BYTE*)(dir + 22)=(DWORD)(dw);
  4954  1E53  0835               	movf	f_open@dir^(0+256),w
  4955  1E54  0086               	movwf	6
  4956  1E55  0836               	movf	(f_open@dir+1)^(0+256),w
  4957  1E56  0087               	movwf	7
  4958  1E57  3156               	addfsr 1,22
  4959  1E58  3000               	movlw	0
  4960  1E59  3FC0               	movwi [0]fsr1
  4961  1E5A  3000               	movlw	0
  4962  1E5B  3FC1               	movwi [1]fsr1
  4963  1E5C  3021               	movlw	33
  4964  1E5D  3FC2               	movwi [2]fsr1
  4965  1E5E  3046               	movlw	70
  4966  1E5F  3FC3               	movwi [3]fsr1
  4967                           
  4968                           ;ff.c: 2516: dir[11] = 0;
  4969  1E60  0835               	movf	f_open@dir^(0+256),w
  4970  1E61  0086               	movwf	6
  4971  1E62  0836               	movf	(f_open@dir+1)^(0+256),w
  4972  1E63  0087               	movwf	7
  4973  1E64  314B               	addfsr 1,11
  4974  1E65  0181               	clrf	1
  4975                           
  4976                           ;ff.c: 2517: *(DWORD*)(BYTE*)(dir + 28)=(DWORD)(0);
  4977  1E66  0835               	movf	f_open@dir^(0+256),w
  4978  1E67  3E1C               	addlw	28
  4979  1E68  0021               	movlb	1	; select bank1
  4980  1E69  00DF               	movwf	??_f_open^(0+128)
  4981  1E6A  3000               	movlw	0
  4982  1E6B  0022               	movlb	2	; select bank2
  4983  1E6C  3D36               	addwfc	(f_open@dir+1)^(0+256),w
  4984  1E6D  0021               	movlb	1	; select bank1
  4985  1E6E  00E0               	movwf	(??_f_open+1)^(0+128)
  4986  1E6F  085F               	movf	??_f_open^(0+128),w
  4987  1E70  0086               	movwf	6
  4988  1E71  0860               	movf	(??_f_open+1)^(0+128),w
  4989  1E72  0087               	movwf	7
  4990  1E73  3000               	movlw	0
  4991  1E74  3FC0               	movwi [0]fsr1
  4992  1E75  3FC1               	movwi [1]fsr1
  4993  1E76  3FC2               	movwi [2]fsr1
  4994  1E77  3FC3               	movwi [3]fsr1
  4995                           
  4996                           ;ff.c: 2518: cl = ld_clust(dj.fs, dir);
  4997  1E78  0022               	movlb	2	; select bank2
  4998  1E79  0838               	movf	(f_open@dj+1)^(0+256),w
  4999  1E7A  00F1               	movwf	ld_clust@fs+1
  5000  1E7B  0837               	movf	f_open@dj^(0+256),w
  5001  1E7C  00F0               	movwf	ld_clust@fs
  5002  1E7D  0836               	movf	(f_open@dir+1)^(0+256),w
  5003  1E7E  00F3               	movwf	ld_clust@dir+1
  5004  1E7F  0835               	movf	f_open@dir^(0+256),w
  5005  1E80  00F2               	movwf	ld_clust@dir
  5006  1E81  3198  2000  319D   	fcall	_ld_clust
  5007  1E84  0873               	movf	?_ld_clust+3,w
  5008  1E85  0022               	movlb	2	; select bank2
  5009  1E86  00AF               	movwf	(f_open@cl+3)^(0+256)
  5010  1E87  0872               	movf	?_ld_clust+2,w
  5011  1E88  00AE               	movwf	(f_open@cl+2)^(0+256)
  5012  1E89  0871               	movf	?_ld_clust+1,w
  5013  1E8A  00AD               	movwf	(f_open@cl+1)^(0+256)
  5014  1E8B  0870               	movf	?_ld_clust,w
  5015  1E8C  00AC               	movwf	f_open@cl^(0+256)
  5016                           
  5017                           ;ff.c: 2519: st_clust(dir, 0);
  5018  1E8D  0836               	movf	(f_open@dir+1)^(0+256),w
  5019  1E8E  00F1               	movwf	st_clust@dir+1
  5020  1E8F  0835               	movf	f_open@dir^(0+256),w
  5021  1E90  00F0               	movwf	st_clust@dir
  5022  1E91  3000               	movlw	0
  5023  1E92  00F5               	movwf	st_clust@cl+3
  5024  1E93  3000               	movlw	0
  5025  1E94  00F4               	movwf	st_clust@cl+2
  5026  1E95  3000               	movlw	0
  5027  1E96  00F3               	movwf	st_clust@cl+1
  5028  1E97  3000               	movlw	0
  5029  1E98  00F2               	movwf	st_clust@cl
  5030  1E99  31AA  22DF  319D   	fcall	_st_clust
  5031                           
  5032                           ;ff.c: 2520: dj.fs->wflag = 1;
  5033  1E9C  0022               	movlb	2	; select bank2
  5034  1E9D  0837               	movf	f_open@dj^(0+256),w
  5035  1E9E  3E04               	addlw	4
  5036  1E9F  0021               	movlb	1	; select bank1
  5037  1EA0  00DF               	movwf	??_f_open^(0+128)
  5038  1EA1  3000               	movlw	0
  5039  1EA2  0022               	movlb	2	; select bank2
  5040  1EA3  3D38               	addwfc	(f_open@dj+1)^(0+256),w
  5041  1EA4  0021               	movlb	1	; select bank1
  5042  1EA5  00E0               	movwf	(??_f_open+1)^(0+128)
  5043  1EA6  085F               	movf	??_f_open^(0+128),w
  5044  1EA7  0086               	movwf	6
  5045  1EA8  0860               	movf	(??_f_open+1)^(0+128),w
  5046  1EA9  0087               	movwf	7
  5047  1EAA  3001               	movlw	1
  5048  1EAB  0081               	movwf	1
  5049                           
  5050                           ;ff.c: 2521: if (cl) {
  5051  1EAC  0022               	movlb	2	; select bank2
  5052  1EAD  082F               	movf	(f_open@cl+3)^(0+256),w
  5053  1EAE  042E               	iorwf	(f_open@cl+2)^(0+256),w
  5054  1EAF  042D               	iorwf	(f_open@cl+1)^(0+256),w
  5055  1EB0  042C               	iorwf	f_open@cl^(0+256),w
  5056  1EB1  1903               	skipnz
  5057  1EB2  2F44               	goto	l5634
  5058                           
  5059                           ;ff.c: 2522: dw = dj.fs->winsect;
  5060  1EB3  0837               	movf	f_open@dj^(0+256),w
  5061  1EB4  3E2A               	addlw	42
  5062  1EB5  0086               	movwf	6
  5063  1EB6  3000               	movlw	0
  5064  1EB7  3D38               	addwfc	(f_open@dj+1)^(0+256),w
  5065  1EB8  0087               	movwf	7
  5066  1EB9  3F40               	moviw [0]fsr1
  5067  1EBA  00B0               	movwf	f_open@dw^(0+256)
  5068  1EBB  3F41               	moviw [1]fsr1
  5069  1EBC  00B1               	movwf	(f_open@dw+1)^(0+256)
  5070  1EBD  3F42               	moviw [2]fsr1
  5071  1EBE  00B2               	movwf	(f_open@dw+2)^(0+256)
  5072  1EBF  3F43               	moviw [3]fsr1
  5073  1EC0  00B3               	movwf	(f_open@dw+3)^(0+256)
  5074                           
  5075                           ;ff.c: 2523: res = remove_chain(dj.fs, cl);
  5076  1EC1  0838               	movf	(f_open@dj+1)^(0+256),w
  5077  1EC2  0021               	movlb	1	; select bank1
  5078  1EC3  00A1               	movwf	(remove_chain@fs+1)^(0+128)
  5079  1EC4  0022               	movlb	2	; select bank2
  5080  1EC5  0837               	movf	f_open@dj^(0+256),w
  5081  1EC6  0021               	movlb	1	; select bank1
  5082  1EC7  00A0               	movwf	remove_chain@fs^(0+128)
  5083  1EC8  0022               	movlb	2	; select bank2
  5084  1EC9  082F               	movf	(f_open@cl+3)^(0+256),w
  5085  1ECA  0021               	movlb	1	; select bank1
  5086  1ECB  00A5               	movwf	(remove_chain@clst+3)^(0+128)
  5087  1ECC  0022               	movlb	2	; select bank2
  5088  1ECD  082E               	movf	(f_open@cl+2)^(0+256),w
  5089  1ECE  0021               	movlb	1	; select bank1
  5090  1ECF  00A4               	movwf	(remove_chain@clst+2)^(0+128)
  5091  1ED0  0022               	movlb	2	; select bank2
  5092  1ED1  082D               	movf	(f_open@cl+1)^(0+256),w
  5093  1ED2  0021               	movlb	1	; select bank1
  5094  1ED3  00A3               	movwf	(remove_chain@clst+1)^(0+128)
  5095  1ED4  0022               	movlb	2	; select bank2
  5096  1ED5  082C               	movf	f_open@cl^(0+256),w
  5097  1ED6  0021               	movlb	1	; select bank1
  5098  1ED7  00A2               	movwf	remove_chain@clst^(0+128)
  5099  1ED8  31A5  2520  319D   	fcall	_remove_chain
  5100  1EDB  00DF               	movwf	??_f_open^(0+128)
  5101  1EDC  085F               	movf	??_f_open^(0+128),w
  5102  1EDD  0022               	movlb	2	; select bank2
  5103  1EDE  00B4               	movwf	f_open@res^(0+256)
  5104                           
  5105                           ;ff.c: 2524: if (res == FR_OK) {
  5106  1EDF  0834               	movf	f_open@res^(0+256),w
  5107  1EE0  1D03               	btfss	3,2
  5108  1EE1  2F44               	goto	l5634
  5109                           
  5110                           ;ff.c: 2525: dj.fs->last_clust = cl - 1;
  5111  1EE2  30FF               	movlw	255
  5112  1EE3  0021               	movlb	1	; select bank1
  5113  1EE4  00DF               	movwf	??_f_open^(0+128)
  5114  1EE5  30FF               	movlw	255
  5115  1EE6  00E0               	movwf	(??_f_open^(0+128)+1)
  5116  1EE7  30FF               	movlw	255
  5117  1EE8  00E1               	movwf	(??_f_open^(0+128)+2)
  5118  1EE9  30FF               	movlw	255
  5119  1EEA  00E2               	movwf	(??_f_open^(0+128)+3)
  5120  1EEB  0022               	movlb	2	; select bank2
  5121  1EEC  082C               	movf	f_open@cl^(0+256),w
  5122  1EED  0021               	movlb	1	; select bank1
  5123  1EEE  07DF               	addwf	??_f_open^(0+128),f
  5124  1EEF  0022               	movlb	2	; select bank2
  5125  1EF0  082D               	movf	(f_open@cl+1)^(0+256),w
  5126  1EF1  0021               	movlb	1	; select bank1
  5127  1EF2  3DE0               	addwfc	(??_f_open^(0+128)+1),f
  5128  1EF3  0022               	movlb	2	; select bank2
  5129  1EF4  082E               	movf	(f_open@cl+2)^(0+256),w
  5130  1EF5  0021               	movlb	1	; select bank1
  5131  1EF6  3DE1               	addwfc	(??_f_open^(0+128)+2),f
  5132  1EF7  0022               	movlb	2	; select bank2
  5133  1EF8  082F               	movf	(f_open@cl+3)^(0+256),w
  5134  1EF9  0021               	movlb	1	; select bank1
  5135  1EFA  3DE2               	addwfc	(??_f_open^(0+128)+3),f
  5136  1EFB  0022               	movlb	2	; select bank2
  5137  1EFC  0837               	movf	f_open@dj^(0+256),w
  5138  1EFD  0086               	movwf	6
  5139  1EFE  0838               	movf	(f_open@dj+1)^(0+256),w
  5140  1EFF  0087               	movwf	7
  5141  1F00  314A               	addfsr 1,10
  5142  1F01  0021               	movlb	1	; select bank1
  5143  1F02  085F               	movf	??_f_open^(0+128),w
  5144  1F03  3FC0               	movwi [0]fsr1
  5145  1F04  0860               	movf	(??_f_open+1)^(0+128),w
  5146  1F05  3FC1               	movwi [1]fsr1
  5147  1F06  0861               	movf	(??_f_open+2)^(0+128),w
  5148  1F07  3FC2               	movwi [2]fsr1
  5149  1F08  0862               	movf	(??_f_open+3)^(0+128),w
  5150  1F09  3FC3               	movwi [3]fsr1
  5151                           
  5152                           ;ff.c: 2526: res = move_window(dj.fs, dw);
  5153  1F0A  0022               	movlb	2	; select bank2
  5154  1F0B  0838               	movf	(f_open@dj+1)^(0+256),w
  5155  1F0C  0020               	movlb	0	; select bank0
  5156  1F0D  00C4               	movwf	move_window@fs+1
  5157  1F0E  0022               	movlb	2	; select bank2
  5158  1F0F  0837               	movf	f_open@dj^(0+256),w
  5159  1F10  0020               	movlb	0	; select bank0
  5160  1F11  00C3               	movwf	move_window@fs
  5161  1F12  0022               	movlb	2	; select bank2
  5162  1F13  0833               	movf	(f_open@dw+3)^(0+256),w
  5163  1F14  0020               	movlb	0	; select bank0
  5164  1F15  00C8               	movwf	move_window@sector+3
  5165  1F16  0022               	movlb	2	; select bank2
  5166  1F17  0832               	movf	(f_open@dw+2)^(0+256),w
  5167  1F18  0020               	movlb	0	; select bank0
  5168  1F19  00C7               	movwf	move_window@sector+2
  5169  1F1A  0022               	movlb	2	; select bank2
  5170  1F1B  0831               	movf	(f_open@dw+1)^(0+256),w
  5171  1F1C  0020               	movlb	0	; select bank0
  5172  1F1D  00C6               	movwf	move_window@sector+1
  5173  1F1E  0022               	movlb	2	; select bank2
  5174  1F1F  0830               	movf	f_open@dw^(0+256),w
  5175  1F20  0020               	movlb	0	; select bank0
  5176  1F21  00C5               	movwf	move_window@sector
  5177  1F22  31AE  263A  319D   	fcall	_move_window
  5178  1F25  2F3F               	goto	L3
  5179  1F26                     l5624:	
  5180                           ;ff.c: 2527: };ff.c: 2528: };ff.c: 2529: };ff.c: 2530: }
  5181                           
  5182                           
  5183                           ;ff.c: 2531: else {;ff.c: 2532: if (res == FR_OK) {
  5184  1F26  0022               	movlb	2	; select bank2
  5185  1F27  0834               	movf	f_open@res^(0+256),w
  5186  1F28  1D03               	btfss	3,2
  5187  1F29  2F44               	goto	l5634
  5188                           
  5189                           ;ff.c: 2533: if (dir[11] & 0x10) {
  5190  1F2A  0835               	movf	f_open@dir^(0+256),w
  5191  1F2B  0086               	movwf	6
  5192  1F2C  0836               	movf	(f_open@dir+1)^(0+256),w
  5193  1F2D  0087               	movwf	7
  5194  1F2E  314B               	addfsr 1,11
  5195  1F2F  1E01               	btfss	1,4
  5196  1F30  2F33               	goto	l681
  5197                           
  5198                           ;ff.c: 2534: res = FR_NO_FILE;
  5199  1F31  3004               	movlw	4
  5200  1F32  2F3F               	goto	L3
  5201  1F33                     l681:	
  5202                           ;ff.c: 2535: } else {
  5203                           
  5204                           
  5205                           ;ff.c: 2536: if ((mode & 0x02) && (dir[11] & 0x01))
  5206  1F33  0021               	movlb	1	; select bank1
  5207  1F34  1CDE               	btfss	f_open@mode^(0+128),1
  5208  1F35  2F44               	goto	l5634
  5209  1F36  0022               	movlb	2	; select bank2
  5210  1F37  0835               	movf	f_open@dir^(0+256),w
  5211  1F38  0086               	movwf	6
  5212  1F39  0836               	movf	(f_open@dir+1)^(0+256),w
  5213  1F3A  0087               	movwf	7
  5214  1F3B  314B               	addfsr 1,11
  5215  1F3C  1C01               	btfss	1,0
  5216  1F3D  2F44               	goto	l5634
  5217                           
  5218                           ;ff.c: 2537: res = FR_DENIED;
  5219  1F3E  3007               	movlw	7
  5220  1F3F                     L3:	
  5221  1F3F  0021               	movlb	1	; select bank1
  5222  1F40  00DF               	movwf	??_f_open^(0+128)
  5223  1F41  085F               	movf	??_f_open^(0+128),w
  5224  1F42  0022               	movlb	2	; select bank2
  5225  1F43  00B4               	movwf	f_open@res^(0+256)
  5226  1F44                     l5634:	
  5227                           
  5228                           ;ff.c: 2538: };ff.c: 2539: };ff.c: 2540: };ff.c: 2541: if (res == FR_OK) {
  5229  1F44  0022               	movlb	2	; select bank2
  5230  1F45  0834               	movf	f_open@res^(0+256),w
  5231  1F46  1D03               	btfss	3,2
  5232  1F47  2F73               	goto	l5644
  5233                           
  5234                           ;ff.c: 2542: if (mode & 0x08)
  5235  1F48  0021               	movlb	1	; select bank1
  5236  1F49  1DDE               	btfss	f_open@mode^(0+128),3
  5237  1F4A  2F4C               	goto	l5640
  5238                           
  5239                           ;ff.c: 2543: mode |= 0x20;
  5240  1F4B  16DE               	bsf	f_open@mode^(0+128),5
  5241  1F4C                     l5640:	
  5242                           
  5243                           ;ff.c: 2544: fp->dir_sect = dj.fs->winsect;
  5244  1F4C  0022               	movlb	2	; select bank2
  5245  1F4D  0837               	movf	f_open@dj^(0+256),w
  5246  1F4E  3E2A               	addlw	42
  5247  1F4F  0086               	movwf	6
  5248  1F50  3000               	movlw	0
  5249  1F51  3D38               	addwfc	(f_open@dj+1)^(0+256),w
  5250  1F52  0087               	movwf	7
  5251  1F53  3F40               	moviw [0]fsr1
  5252  1F54  0021               	movlb	1	; select bank1
  5253  1F55  00DF               	movwf	??_f_open^(0+128)
  5254  1F56  3F41               	moviw [1]fsr1
  5255  1F57  00E0               	movwf	(??_f_open^(0+128)+1)
  5256  1F58  3F42               	moviw [2]fsr1
  5257  1F59  00E1               	movwf	(??_f_open^(0+128)+2)
  5258  1F5A  3F43               	moviw [3]fsr1
  5259  1F5B  00E2               	movwf	(??_f_open^(0+128)+3)
  5260  1F5C  085A               	movf	f_open@fp^(0+128),w
  5261  1F5D  0086               	movwf	6
  5262  1F5E  085B               	movf	(f_open@fp+1)^(0+128),w
  5263  1F5F  0087               	movwf	7
  5264  1F60  315A               	addfsr 1,26
  5265  1F61  085F               	movf	??_f_open^(0+128),w
  5266  1F62  3FC0               	movwi [0]fsr1
  5267  1F63  0860               	movf	(??_f_open+1)^(0+128),w
  5268  1F64  3FC1               	movwi [1]fsr1
  5269  1F65  0861               	movf	(??_f_open+2)^(0+128),w
  5270  1F66  3FC2               	movwi [2]fsr1
  5271  1F67  0862               	movf	(??_f_open+3)^(0+128),w
  5272  1F68  3FC3               	movwi [3]fsr1
  5273                           
  5274                           ;ff.c: 2545: fp->dir_ptr = dir;
  5275  1F69  085A               	movf	f_open@fp^(0+128),w
  5276  1F6A  0086               	movwf	6
  5277  1F6B  085B               	movf	(f_open@fp+1)^(0+128),w
  5278  1F6C  0087               	movwf	7
  5279  1F6D  315E               	addfsr 1,30
  5280  1F6E  0022               	movlb	2	; select bank2
  5281  1F6F  0835               	movf	f_open@dir^(0+256),w
  5282  1F70  3FC0               	movwi [0]fsr1
  5283  1F71  0836               	movf	(f_open@dir+1)^(0+256),w
  5284  1F72  3FC1               	movwi [1]fsr1
  5285  1F73                     l5644:	
  5286                           
  5287                           ;ff.c: 2550: };ff.c: 2563: ;;ff.c: 2565: if (res == FR_OK) {
  5288  1F73  0834               	movf	f_open@res^(0+256),w
  5289  1F74  1D03               	btfss	3,2
  5290  1F75  2FFD               	goto	l5662
  5291                           
  5292                           ;ff.c: 2566: fp->flag = mode;
  5293  1F76  0021               	movlb	1	; select bank1
  5294  1F77  085A               	movf	f_open@fp^(0+128),w
  5295  1F78  3E04               	addlw	4
  5296  1F79  00DF               	movwf	??_f_open^(0+128)
  5297  1F7A  3000               	movlw	0
  5298  1F7B  3D5B               	addwfc	(f_open@fp+1)^(0+128),w
  5299  1F7C  00E0               	movwf	(??_f_open+1)^(0+128)
  5300  1F7D  085F               	movf	??_f_open^(0+128),w
  5301  1F7E  0086               	movwf	6
  5302  1F7F  0860               	movf	(??_f_open+1)^(0+128),w
  5303  1F80  0087               	movwf	7
  5304  1F81  085E               	movf	f_open@mode^(0+128),w
  5305  1F82  0081               	movwf	1
  5306                           
  5307                           ;ff.c: 2567: fp->err = 0;
  5308  1F83  085A               	movf	f_open@fp^(0+128),w
  5309  1F84  0086               	movwf	6
  5310  1F85  085B               	movf	(f_open@fp+1)^(0+128),w
  5311  1F86  0087               	movwf	7
  5312  1F87  3145               	addfsr 1,5
  5313  1F88  0181               	clrf	1
  5314                           
  5315                           ;ff.c: 2568: fp->sclust = ld_clust(dj.fs, dir);
  5316  1F89  0022               	movlb	2	; select bank2
  5317  1F8A  0838               	movf	(f_open@dj+1)^(0+256),w
  5318  1F8B  00F1               	movwf	ld_clust@fs+1
  5319  1F8C  0837               	movf	f_open@dj^(0+256),w
  5320  1F8D  00F0               	movwf	ld_clust@fs
  5321  1F8E  0836               	movf	(f_open@dir+1)^(0+256),w
  5322  1F8F  00F3               	movwf	ld_clust@dir+1
  5323  1F90  0835               	movf	f_open@dir^(0+256),w
  5324  1F91  00F2               	movwf	ld_clust@dir
  5325  1F92  3198  2000  319D   	fcall	_ld_clust
  5326  1F95  0021               	movlb	1	; select bank1
  5327  1F96  085A               	movf	f_open@fp^(0+128),w
  5328  1F97  0086               	movwf	6
  5329  1F98  085B               	movf	(f_open@fp+1)^(0+128),w
  5330  1F99  0087               	movwf	7
  5331  1F9A  314E               	addfsr 1,14
  5332  1F9B  0870               	movf	?_ld_clust,w
  5333  1F9C  3FC0               	movwi [0]fsr1
  5334  1F9D  0871               	movf	?_ld_clust+1,w
  5335  1F9E  3FC1               	movwi [1]fsr1
  5336  1F9F  0872               	movf	?_ld_clust+2,w
  5337  1FA0  3FC2               	movwi [2]fsr1
  5338  1FA1  0873               	movf	?_ld_clust+3,w
  5339  1FA2  3FC3               	movwi [3]fsr1
  5340                           
  5341                           ;ff.c: 2569: fp->fsize = (DWORD)(*(DWORD*)(BYTE*)(dir + 28));
  5342  1FA3  0022               	movlb	2	; select bank2
  5343  1FA4  0835               	movf	f_open@dir^(0+256),w
  5344  1FA5  0086               	movwf	6
  5345  1FA6  0836               	movf	(f_open@dir+1)^(0+256),w
  5346  1FA7  0087               	movwf	7
  5347  1FA8  315C               	addfsr 1,28
  5348  1FA9  3F40               	moviw [0]fsr1
  5349  1FAA  0021               	movlb	1	; select bank1
  5350  1FAB  00DF               	movwf	??_f_open^(0+128)
  5351  1FAC  3F41               	moviw [1]fsr1
  5352  1FAD  00E0               	movwf	(??_f_open^(0+128)+1)
  5353  1FAE  3F42               	moviw [2]fsr1
  5354  1FAF  00E1               	movwf	(??_f_open^(0+128)+2)
  5355  1FB0  3F43               	moviw [3]fsr1
  5356  1FB1  00E2               	movwf	(??_f_open^(0+128)+3)
  5357  1FB2  085A               	movf	f_open@fp^(0+128),w
  5358  1FB3  0086               	movwf	6
  5359  1FB4  085B               	movf	(f_open@fp+1)^(0+128),w
  5360  1FB5  0087               	movwf	7
  5361  1FB6  314A               	addfsr 1,10
  5362  1FB7  085F               	movf	??_f_open^(0+128),w
  5363  1FB8  3FC0               	movwi [0]fsr1
  5364  1FB9  0860               	movf	(??_f_open+1)^(0+128),w
  5365  1FBA  3FC1               	movwi [1]fsr1
  5366  1FBB  0861               	movf	(??_f_open+2)^(0+128),w
  5367  1FBC  3FC2               	movwi [2]fsr1
  5368  1FBD  0862               	movf	(??_f_open+3)^(0+128),w
  5369  1FBE  3FC3               	movwi [3]fsr1
  5370                           
  5371                           ;ff.c: 2570: fp->fptr = 0;
  5372  1FBF  085A               	movf	f_open@fp^(0+128),w
  5373  1FC0  3E06               	addlw	6
  5374  1FC1  00DF               	movwf	??_f_open^(0+128)
  5375  1FC2  3000               	movlw	0
  5376  1FC3  3D5B               	addwfc	(f_open@fp+1)^(0+128),w
  5377  1FC4  00E0               	movwf	(??_f_open+1)^(0+128)
  5378  1FC5  085F               	movf	??_f_open^(0+128),w
  5379  1FC6  0086               	movwf	6
  5380  1FC7  0860               	movf	(??_f_open+1)^(0+128),w
  5381  1FC8  0087               	movwf	7
  5382  1FC9  3000               	movlw	0
  5383  1FCA  3FC0               	movwi [0]fsr1
  5384  1FCB  3FC1               	movwi [1]fsr1
  5385  1FCC  3FC2               	movwi [2]fsr1
  5386  1FCD  3FC3               	movwi [3]fsr1
  5387                           
  5388                           ;ff.c: 2571: fp->dsect = 0;
  5389  1FCE  085A               	movf	f_open@fp^(0+128),w
  5390  1FCF  3E16               	addlw	22
  5391  1FD0  00DF               	movwf	??_f_open^(0+128)
  5392  1FD1  3000               	movlw	0
  5393  1FD2  3D5B               	addwfc	(f_open@fp+1)^(0+128),w
  5394  1FD3  00E0               	movwf	(??_f_open+1)^(0+128)
  5395  1FD4  085F               	movf	??_f_open^(0+128),w
  5396  1FD5  0086               	movwf	6
  5397  1FD6  0860               	movf	(??_f_open+1)^(0+128),w
  5398  1FD7  0087               	movwf	7
  5399  1FD8  3000               	movlw	0
  5400  1FD9  3FC0               	movwi [0]fsr1
  5401  1FDA  3FC1               	movwi [1]fsr1
  5402  1FDB  3FC2               	movwi [2]fsr1
  5403  1FDC  3FC3               	movwi [3]fsr1
  5404                           
  5405                           ;ff.c: 2575: fp->fs = dj.fs;
  5406  1FDD  085A               	movf	f_open@fp^(0+128),w
  5407  1FDE  0086               	movwf	6
  5408  1FDF  085B               	movf	(f_open@fp+1)^(0+128),w
  5409  1FE0  0087               	movwf	7
  5410  1FE1  0022               	movlb	2	; select bank2
  5411  1FE2  0837               	movf	f_open@dj^(0+256),w
  5412  1FE3  3FC0               	movwi [0]fsr1
  5413  1FE4  0838               	movf	(f_open@dj+1)^(0+256),w
  5414  1FE5  3FC1               	movwi [1]fsr1
  5415                           
  5416                           ;ff.c: 2576: fp->id = fp->fs->id;
  5417  1FE6  0021               	movlb	1	; select bank1
  5418  1FE7  085A               	movf	f_open@fp^(0+128),w
  5419  1FE8  0086               	movwf	6
  5420  1FE9  085B               	movf	(f_open@fp+1)^(0+128),w
  5421  1FEA  0087               	movwf	7
  5422  1FEB  3F40               	moviw [0]fsr1
  5423  1FEC  00DF               	movwf	??_f_open^(0+128)
  5424  1FED  3F41               	moviw [1]fsr1
  5425  1FEE  00E0               	movwf	(??_f_open^(0+128)+1)
  5426  1FEF  085F               	movf	??_f_open^(0+128),w
  5427  1FF0  0086               	movwf	6
  5428  1FF1  0860               	movf	(??_f_open+1)^(0+128),w
  5429  1FF2  0087               	movwf	7
  5430  1FF3  3146               	addfsr 1,6
  5431  1FF4  085A               	movf	f_open@fp^(0+128),w
  5432  1FF5  0084               	movwf	4
  5433  1FF6  085B               	movf	(f_open@fp+1)^(0+128),w
  5434  1FF7  0085               	movwf	5
  5435  1FF8  3102               	addfsr 0,2
  5436  1FF9  3F40               	moviw [0]fsr1
  5437  1FFA  3F80               	movwi [0]fsr0
  5438  1FFB  3F41               	moviw [1]fsr1
  5439  1FFC  3F81               	movwi [1]fsr0
  5440  1FFD                     l5662:	
  5441                           
  5442                           ;ff.c: 2577: };ff.c: 2578: };ff.c: 2580: return res;
  5443  1FFD  0022               	movlb	2	; select bank2
  5444  1FFE  0834               	movf	f_open@res^(0+256),w
  5445  1FFF  0008               	return
  5446  2000                     __end_of_f_open:	
  5447                           
  5448                           	psect	text5
  5449  2520                     __ptext5:	
  5450 ;; *************** function _remove_chain *****************
  5451 ;; Defined at:
  5452 ;;		line 937 in file "ff.c"
  5453 ;; Parameters:    Size  Location     Type
  5454 ;;  fs              2    0[BANK1 ] PTR struct .
  5455 ;;		 -> NULL(0), FatFs(558), 
  5456 ;;  clst            4    2[BANK1 ] unsigned long 
  5457 ;; Auto vars:     Size  Location     Type
  5458 ;;  nxt             4    7[BANK1 ] unsigned long 
  5459 ;;  res             1    6[BANK1 ] enum E88
  5460 ;; Return value:  Size  Location     Type
  5461 ;;                  1    wreg      enum E88
  5462 ;; Registers used:
  5463 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5464 ;; Tracked objects:
  5465 ;;		On entry : 1F/1
  5466 ;;		On exit  : 1F/1
  5467 ;;		Unchanged: 0/0
  5468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5469 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5470 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5471 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5472 ;;      Totals:         0       4      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5473 ;;Total ram usage:       15 bytes
  5474 ;; Hardware stack levels used:    1
  5475 ;; Hardware stack levels required when called:    9
  5476 ;; This function calls:
  5477 ;;		_get_fat
  5478 ;;		_put_fat
  5479 ;; This function is called by:
  5480 ;;		_f_open
  5481 ;; This function uses a non-reentrant model
  5482 ;;
  5483                           
  5484                           
  5485                           ;psect for function _remove_chain
  5486  2520                     _remove_chain:	
  5487                           
  5488                           ;ff.c: 942: FRESULT res;;ff.c: 943: DWORD nxt;;ff.c: 948: if (clst < 2 || clst >= fs->n_
      +                          fatent) {
  5489                           
  5490                           ;incstack = 0
  5491                           ; Regs used in _remove_chain: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5492  2520  0825               	movf	(remove_chain@clst+3)^(0+128),w
  5493  2521  1D03               	btfss	3,2
  5494  2522  2D2D               	goto	l5056
  5495  2523  0824               	movf	(remove_chain@clst+2)^(0+128),w
  5496  2524  1D03               	btfss	3,2
  5497  2525  2D2D               	goto	l5056
  5498  2526  0823               	movf	(remove_chain@clst+1)^(0+128),w
  5499  2527  1D03               	btfss	3,2
  5500  2528  2D2D               	goto	l5056
  5501  2529  3002               	movlw	2
  5502  252A  0222               	subwf	remove_chain@clst^(0+128),w
  5503  252B  1C03               	btfss	3,0
  5504  252C  2D52               	goto	l5058
  5505  252D                     l5056:	
  5506  252D  0820               	movf	remove_chain@fs^(0+128),w
  5507  252E  0086               	movwf	6
  5508  252F  0821               	movf	(remove_chain@fs+1)^(0+128),w
  5509  2530  0087               	movwf	7
  5510  2531  3152               	addfsr 1,18
  5511  2532  3F40               	moviw [0]fsr1
  5512  2533  0020               	movlb	0	; select bank0
  5513  2534  00EC               	movwf	??_remove_chain
  5514  2535  3F41               	moviw [1]fsr1
  5515  2536  00ED               	movwf	??_remove_chain+1
  5516  2537  3F42               	moviw [2]fsr1
  5517  2538  00EE               	movwf	??_remove_chain+2
  5518  2539  3F43               	moviw [3]fsr1
  5519  253A  00EF               	movwf	??_remove_chain+3
  5520  253B  086F               	movf	??_remove_chain+3,w
  5521  253C  0021               	movlb	1	; select bank1
  5522  253D  0225               	subwf	(remove_chain@clst+3)^(0+128),w
  5523  253E  1D03               	skipz
  5524  253F  2D50               	goto	u7015
  5525  2540  0020               	movlb	0	; select bank0
  5526  2541  086E               	movf	??_remove_chain+2,w
  5527  2542  0021               	movlb	1	; select bank1
  5528  2543  0224               	subwf	(remove_chain@clst+2)^(0+128),w
  5529  2544  1D03               	skipz
  5530  2545  2D50               	goto	u7015
  5531  2546  0020               	movlb	0	; select bank0
  5532  2547  086D               	movf	??_remove_chain+1,w
  5533  2548  0021               	movlb	1	; select bank1
  5534  2549  0223               	subwf	(remove_chain@clst+1)^(0+128),w
  5535  254A  1D03               	skipz
  5536  254B  2D50               	goto	u7015
  5537  254C  0020               	movlb	0	; select bank0
  5538  254D  086C               	movf	??_remove_chain,w
  5539  254E  0021               	movlb	1	; select bank1
  5540  254F  0222               	subwf	remove_chain@clst^(0+128),w
  5541  2550                     u7015:	
  5542  2550  1C03               	skipc
  5543  2551  2D59               	goto	l5060
  5544  2552                     l5058:	
  5545                           
  5546                           ;ff.c: 949: res = FR_INT_ERR;
  5547  2552  3002               	movlw	2
  5548  2553  0020               	movlb	0	; select bank0
  5549  2554  00EC               	movwf	??_remove_chain
  5550  2555  086C               	movf	??_remove_chain,w
  5551  2556  0021               	movlb	1	; select bank1
  5552  2557  00A6               	movwf	remove_chain@res^(0+128)
  5553                           
  5554                           ;ff.c: 951: } else {
  5555  2558  2E20               	goto	l5090
  5556  2559                     l5060:	
  5557                           
  5558                           ;ff.c: 952: res = FR_OK;
  5559  2559  01A6               	clrf	remove_chain@res^(0+128)
  5560                           
  5561                           ;ff.c: 953: while (clst < fs->n_fatent) {
  5562  255A  2DB8               	goto	l5088
  5563  255B                     l5076:	
  5564                           
  5565                           ;ff.c: 958: res = put_fat(fs, clst, 0);
  5566  255B  0821               	movf	(remove_chain@fs+1)^(0+128),w
  5567  255C  0020               	movlb	0	; select bank0
  5568  255D  00CF               	movwf	put_fat@fs+1
  5569  255E  0021               	movlb	1	; select bank1
  5570  255F  0820               	movf	remove_chain@fs^(0+128),w
  5571  2560  0020               	movlb	0	; select bank0
  5572  2561  00CE               	movwf	put_fat@fs
  5573  2562  0021               	movlb	1	; select bank1
  5574  2563  0825               	movf	(remove_chain@clst+3)^(0+128),w
  5575  2564  0020               	movlb	0	; select bank0
  5576  2565  00D3               	movwf	put_fat@clst+3
  5577  2566  0021               	movlb	1	; select bank1
  5578  2567  0824               	movf	(remove_chain@clst+2)^(0+128),w
  5579  2568  0020               	movlb	0	; select bank0
  5580  2569  00D2               	movwf	put_fat@clst+2
  5581  256A  0021               	movlb	1	; select bank1
  5582  256B  0823               	movf	(remove_chain@clst+1)^(0+128),w
  5583  256C  0020               	movlb	0	; select bank0
  5584  256D  00D1               	movwf	put_fat@clst+1
  5585  256E  0021               	movlb	1	; select bank1
  5586  256F  0822               	movf	remove_chain@clst^(0+128),w
  5587  2570  0020               	movlb	0	; select bank0
  5588  2571  00D0               	movwf	put_fat@clst
  5589  2572  3000               	movlw	0
  5590  2573  00D7               	movwf	put_fat@val+3
  5591  2574  3000               	movlw	0
  5592  2575  00D6               	movwf	put_fat@val+2
  5593  2576  3000               	movlw	0
  5594  2577  00D5               	movwf	put_fat@val+1
  5595  2578  3000               	movlw	0
  5596  2579  00D4               	movwf	put_fat@val
  5597  257A  319B  2389  31A5   	fcall	_put_fat
  5598  257D  00EC               	movwf	??_remove_chain
  5599  257E  086C               	movf	??_remove_chain,w
  5600  257F  0021               	movlb	1	; select bank1
  5601  2580  00A6               	movwf	remove_chain@res^(0+128)
  5602                           
  5603                           ;ff.c: 959: if (res != FR_OK) break;
  5604  2581  0826               	movf	remove_chain@res^(0+128),w
  5605  2582  1D03               	btfss	3,2
  5606  2583  2E20               	goto	l5090
  5607                           
  5608                           ;ff.c: 960: if (fs->free_clust != 0xFFFFFFFF) {
  5609  2584  0820               	movf	remove_chain@fs^(0+128),w
  5610  2585  0086               	movwf	6
  5611  2586  0821               	movf	(remove_chain@fs+1)^(0+128),w
  5612  2587  0087               	movwf	7
  5613  2588  314E               	addfsr 1,14
  5614  2589  0016               	moviw fsr1++
  5615  258A  3AFF               	xorlw	255
  5616  258B  0020               	movlb	0	; select bank0
  5617  258C  00EC               	movwf	??_remove_chain
  5618  258D  0016               	moviw fsr1++
  5619  258E  3AFF               	xorlw	255
  5620  258F  04EC               	iorwf	??_remove_chain,f
  5621  2590  0016               	moviw fsr1++
  5622  2591  3AFF               	xorlw	255
  5623  2592  04EC               	iorwf	??_remove_chain,f
  5624  2593  0016               	moviw fsr1++
  5625  2594  3AFF               	xorlw	255
  5626  2595  04EC               	iorwf	??_remove_chain,f
  5627  2596  1903               	btfsc	3,2
  5628  2597  2DAF               	goto	l5086
  5629                           
  5630                           ;ff.c: 961: fs->free_clust++;
  5631  2598  0021               	movlb	1	; select bank1
  5632  2599  0820               	movf	remove_chain@fs^(0+128),w
  5633  259A  0086               	movwf	6
  5634  259B  0821               	movf	(remove_chain@fs+1)^(0+128),w
  5635  259C  0087               	movwf	7
  5636  259D  314E               	addfsr 1,14
  5637  259E  3001               	movlw	1
  5638  259F  0781               	addwf	1,f
  5639  25A0  3141               	addfsr 1,1
  5640  25A1  3000               	movlw	0
  5641  25A2  3D81               	addwfc	1,f
  5642  25A3  3141               	addfsr 1,1
  5643  25A4  3000               	movlw	0
  5644  25A5  3D81               	addwfc	1,f
  5645  25A6  3141               	addfsr 1,1
  5646  25A7  3000               	movlw	0
  5647  25A8  3D81               	addwfc	1,f
  5648                           
  5649                           ;ff.c: 962: fs->fsi_flag |= 1;
  5650  25A9  0820               	movf	remove_chain@fs^(0+128),w
  5651  25AA  0086               	movwf	6
  5652  25AB  0821               	movf	(remove_chain@fs+1)^(0+128),w
  5653  25AC  0087               	movwf	7
  5654  25AD  3145               	addfsr 1,5
  5655  25AE  1401               	bsf	1,0
  5656  25AF                     l5086:	
  5657                           
  5658                           ;ff.c: 963: };ff.c: 974: clst = nxt;
  5659  25AF  0021               	movlb	1	; select bank1
  5660  25B0  082A               	movf	(remove_chain@nxt+3)^(0+128),w
  5661  25B1  00A5               	movwf	(remove_chain@clst+3)^(0+128)
  5662  25B2  0829               	movf	(remove_chain@nxt+2)^(0+128),w
  5663  25B3  00A4               	movwf	(remove_chain@clst+2)^(0+128)
  5664  25B4  0828               	movf	(remove_chain@nxt+1)^(0+128),w
  5665  25B5  00A3               	movwf	(remove_chain@clst+1)^(0+128)
  5666  25B6  0827               	movf	remove_chain@nxt^(0+128),w
  5667  25B7  00A2               	movwf	remove_chain@clst^(0+128)
  5668  25B8                     l5088:	
  5669  25B8  0820               	movf	remove_chain@fs^(0+128),w
  5670  25B9  0086               	movwf	6
  5671  25BA  0821               	movf	(remove_chain@fs+1)^(0+128),w
  5672  25BB  0087               	movwf	7
  5673  25BC  3152               	addfsr 1,18
  5674  25BD  3F40               	moviw [0]fsr1
  5675  25BE  0020               	movlb	0	; select bank0
  5676  25BF  00EC               	movwf	??_remove_chain
  5677  25C0  3F41               	moviw [1]fsr1
  5678  25C1  00ED               	movwf	??_remove_chain+1
  5679  25C2  3F42               	moviw [2]fsr1
  5680  25C3  00EE               	movwf	??_remove_chain+2
  5681  25C4  3F43               	moviw [3]fsr1
  5682  25C5  00EF               	movwf	??_remove_chain+3
  5683  25C6  086F               	movf	??_remove_chain+3,w
  5684  25C7  0021               	movlb	1	; select bank1
  5685  25C8  0225               	subwf	(remove_chain@clst+3)^(0+128),w
  5686  25C9  1D03               	skipz
  5687  25CA  2DDB               	goto	u7075
  5688  25CB  0020               	movlb	0	; select bank0
  5689  25CC  086E               	movf	??_remove_chain+2,w
  5690  25CD  0021               	movlb	1	; select bank1
  5691  25CE  0224               	subwf	(remove_chain@clst+2)^(0+128),w
  5692  25CF  1D03               	skipz
  5693  25D0  2DDB               	goto	u7075
  5694  25D1  0020               	movlb	0	; select bank0
  5695  25D2  086D               	movf	??_remove_chain+1,w
  5696  25D3  0021               	movlb	1	; select bank1
  5697  25D4  0223               	subwf	(remove_chain@clst+1)^(0+128),w
  5698  25D5  1D03               	skipz
  5699  25D6  2DDB               	goto	u7075
  5700  25D7  0020               	movlb	0	; select bank0
  5701  25D8  086C               	movf	??_remove_chain,w
  5702  25D9  0021               	movlb	1	; select bank1
  5703  25DA  0222               	subwf	remove_chain@clst^(0+128),w
  5704  25DB                     u7075:	
  5705  25DB  1803               	btfsc	3,0
  5706  25DC  2E20               	goto	l5090
  5707                           
  5708                           ;ff.c: 954: nxt = get_fat(fs, clst);
  5709  25DD  0821               	movf	(remove_chain@fs+1)^(0+128),w
  5710  25DE  0020               	movlb	0	; select bank0
  5711  25DF  00CF               	movwf	get_fat@fs+1
  5712  25E0  0021               	movlb	1	; select bank1
  5713  25E1  0820               	movf	remove_chain@fs^(0+128),w
  5714  25E2  0020               	movlb	0	; select bank0
  5715  25E3  00CE               	movwf	get_fat@fs
  5716  25E4  0021               	movlb	1	; select bank1
  5717  25E5  0825               	movf	(remove_chain@clst+3)^(0+128),w
  5718  25E6  0020               	movlb	0	; select bank0
  5719  25E7  00D3               	movwf	get_fat@clst+3
  5720  25E8  0021               	movlb	1	; select bank1
  5721  25E9  0824               	movf	(remove_chain@clst+2)^(0+128),w
  5722  25EA  0020               	movlb	0	; select bank0
  5723  25EB  00D2               	movwf	get_fat@clst+2
  5724  25EC  0021               	movlb	1	; select bank1
  5725  25ED  0823               	movf	(remove_chain@clst+1)^(0+128),w
  5726  25EE  0020               	movlb	0	; select bank0
  5727  25EF  00D1               	movwf	get_fat@clst+1
  5728  25F0  0021               	movlb	1	; select bank1
  5729  25F1  0822               	movf	remove_chain@clst^(0+128),w
  5730  25F2  0020               	movlb	0	; select bank0
  5731  25F3  00D0               	movwf	get_fat@clst
  5732  25F4  31A6  2622  31A5   	fcall	_get_fat
  5733  25F7  0851               	movf	?_get_fat+3,w
  5734  25F8  0021               	movlb	1	; select bank1
  5735  25F9  00AA               	movwf	(remove_chain@nxt+3)^(0+128)
  5736  25FA  0020               	movlb	0	; select bank0
  5737  25FB  0850               	movf	?_get_fat+2,w
  5738  25FC  0021               	movlb	1	; select bank1
  5739  25FD  00A9               	movwf	(remove_chain@nxt+2)^(0+128)
  5740  25FE  0020               	movlb	0	; select bank0
  5741  25FF  084F               	movf	?_get_fat+1,w
  5742  2600  0021               	movlb	1	; select bank1
  5743  2601  00A8               	movwf	(remove_chain@nxt+1)^(0+128)
  5744  2602  0020               	movlb	0	; select bank0
  5745  2603  084E               	movf	?_get_fat,w
  5746  2604  0021               	movlb	1	; select bank1
  5747  2605  00A7               	movwf	remove_chain@nxt^(0+128)
  5748                           
  5749                           ;ff.c: 955: if (nxt == 0) break;
  5750  2606  082A               	movf	(remove_chain@nxt+3)^(0+128),w
  5751  2607  0429               	iorwf	(remove_chain@nxt+2)^(0+128),w
  5752  2608  0428               	iorwf	(remove_chain@nxt+1)^(0+128),w
  5753  2609  0427               	iorwf	remove_chain@nxt^(0+128),w
  5754  260A  1903               	btfsc	3,2
  5755  260B  2E20               	goto	l5090
  5756                           
  5757                           ;ff.c: 956: if (nxt == 1) { res = FR_INT_ERR; break; }
  5758  260C  0327               	decf	remove_chain@nxt^(0+128),w
  5759  260D  0428               	iorwf	(remove_chain@nxt+1)^(0+128),w
  5760  260E  0429               	iorwf	(remove_chain@nxt+2)^(0+128),w
  5761  260F  042A               	iorwf	(remove_chain@nxt+3)^(0+128),w
  5762  2610  1903               	btfsc	3,2
  5763  2611  2D52               	goto	l5058
  5764                           
  5765                           ;ff.c: 957: if (nxt == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
  5766  2612  0A27               	incf	remove_chain@nxt^(0+128),w
  5767  2613  1D03               	skipz
  5768  2614  2D5B               	goto	l5076
  5769  2615  0A28               	incf	(remove_chain@nxt+1)^(0+128),w
  5770  2616  1D03               	skipz
  5771  2617  2D5B               	goto	l5076
  5772  2618  0A29               	incf	(remove_chain@nxt+2)^(0+128),w
  5773  2619  1D03               	skipz
  5774  261A  2D5B               	goto	l5076
  5775  261B  0A2A               	incf	(remove_chain@nxt+3)^(0+128),w
  5776  261C  1D03               	btfss	3,2
  5777  261D  2D5B               	goto	l5076
  5778  261E  01A6               	clrf	remove_chain@res^(0+128)
  5779  261F  0AA6               	incf	remove_chain@res^(0+128),f
  5780  2620                     l5090:	
  5781                           
  5782                           ;ff.c: 975: };ff.c: 976: };ff.c: 978: return res;
  5783  2620  0826               	movf	remove_chain@res^(0+128),w
  5784  2621  0008               	return
  5785  2622                     __end_of_remove_chain:	
  5786                           
  5787                           	psect	text6
  5788  22FD                     __ptext6:	
  5789 ;; *************** function _follow_path *****************
  5790 ;; Defined at:
  5791 ;;		line 2052 in file "ff.c"
  5792 ;; Parameters:    Size  Location     Type
  5793 ;;  dp              2   46[BANK1 ] PTR struct .
  5794 ;;		 -> f_open@dj(22), 
  5795 ;;  path            2   48[BANK1 ] PTR const unsigned char 
  5796 ;;		 -> STR_2(10), STR_1(1), 
  5797 ;; Auto vars:     Size  Location     Type
  5798 ;;  dir             2   52[BANK1 ] PTR unsigned char 
  5799 ;;		 -> NULL(0), FatFs(558), 
  5800 ;;  res             1   55[BANK1 ] enum E88
  5801 ;;  ns              1   54[BANK1 ] unsigned char 
  5802 ;; Return value:  Size  Location     Type
  5803 ;;                  1    wreg      enum E88
  5804 ;; Registers used:
  5805 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5806 ;; Tracked objects:
  5807 ;;		On entry : 1F/1
  5808 ;;		On exit  : 1F/1
  5809 ;;		Unchanged: 0/0
  5810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5811 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5812 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5813 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5814 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5815 ;;Total ram usage:       10 bytes
  5816 ;; Hardware stack levels used:    1
  5817 ;; Hardware stack levels required when called:   12
  5818 ;; This function calls:
  5819 ;;		_create_name
  5820 ;;		_dir_find
  5821 ;;		_dir_sdi
  5822 ;;		_ld_clust
  5823 ;; This function is called by:
  5824 ;;		_f_open
  5825 ;; This function uses a non-reentrant model
  5826 ;;
  5827                           
  5828                           
  5829                           ;psect for function _follow_path
  5830  22FD                     _follow_path:	
  5831                           
  5832                           ;ff.c: 2057: FRESULT res;;ff.c: 2058: BYTE *dir, ns;;ff.c: 2068: if (*path == '/' || *pa
      +                          th == '\\')
  5833                           
  5834                           ;incstack = 0
  5835                           ; Regs used in _follow_path: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5836  22FD  0850               	movf	follow_path@path^(0+128),w
  5837  22FE  0084               	movwf	4
  5838  22FF  0851               	movf	(follow_path@path+1)^(0+128),w
  5839  2300  0085               	movwf	5
  5840  2301  0012               	moviw fsr0++
  5841  2302  3A2F               	xorlw	47
  5842  2303  1903               	btfsc	3,2
  5843  2304  2B0D               	goto	l5116
  5844  2305  0850               	movf	follow_path@path^(0+128),w
  5845  2306  0084               	movwf	4
  5846  2307  0851               	movf	(follow_path@path+1)^(0+128),w
  5847  2308  0085               	movwf	5
  5848  2309  0012               	moviw fsr0++
  5849  230A  3A5C               	xorlw	92
  5850  230B  1D03               	btfss	3,2
  5851  230C  2B11               	goto	l5118
  5852  230D                     l5116:	
  5853                           
  5854                           ;ff.c: 2069: path++;
  5855  230D  3001               	movlw	1
  5856  230E  07D0               	addwf	follow_path@path^(0+128),f
  5857  230F  3000               	movlw	0
  5858  2310  3DD1               	addwfc	(follow_path@path+1)^(0+128),f
  5859  2311                     l5118:	
  5860                           
  5861                           ;ff.c: 2070: dp->sclust = 0;
  5862  2311  084E               	movf	follow_path@dp^(0+128),w
  5863  2312  3E06               	addlw	6
  5864  2313  00D2               	movwf	??_follow_path^(0+128)
  5865  2314  3000               	movlw	0
  5866  2315  3D4F               	addwfc	(follow_path@dp+1)^(0+128),w
  5867  2316  00D3               	movwf	(??_follow_path+1)^(0+128)
  5868  2317  0852               	movf	??_follow_path^(0+128),w
  5869  2318  0086               	movwf	6
  5870  2319  0853               	movf	(??_follow_path+1)^(0+128),w
  5871  231A  0087               	movwf	7
  5872  231B  3000               	movlw	0
  5873  231C  3FC0               	movwi [0]fsr1
  5874  231D  3FC1               	movwi [1]fsr1
  5875  231E  3FC2               	movwi [2]fsr1
  5876  231F  3FC3               	movwi [3]fsr1
  5877                           
  5878                           ;ff.c: 2073: if ((UINT)*path < ' ') {
  5879  2320  0850               	movf	follow_path@path^(0+128),w
  5880  2321  0084               	movwf	4
  5881  2322  0851               	movf	(follow_path@path+1)^(0+128),w
  5882  2323  0085               	movwf	5
  5883  2324  0800               	movf	0,w	;code access
  5884  2325  00D2               	movwf	??_follow_path^(0+128)
  5885  2326  3020               	movlw	32
  5886  2327  0252               	subwf	??_follow_path^(0+128),w
  5887  2328  1803               	skipnc
  5888  2329  2B73               	goto	l5126
  5889                           
  5890                           ;ff.c: 2074: res = dir_sdi(dp, 0);
  5891  232A  084F               	movf	(follow_path@dp+1)^(0+128),w
  5892  232B  0020               	movlb	0	; select bank0
  5893  232C  00EB               	movwf	dir_sdi@dp+1
  5894  232D  0021               	movlb	1	; select bank1
  5895  232E  084E               	movf	follow_path@dp^(0+128),w
  5896  232F  0020               	movlb	0	; select bank0
  5897  2330  00EA               	movwf	dir_sdi@dp
  5898  2331  3000               	movlw	0
  5899  2332  00EC               	movwf	dir_sdi@idx
  5900  2333  00ED               	movwf	dir_sdi@idx+1
  5901  2334  3190  2006  31A2   	fcall	_dir_sdi
  5902  2337  0021               	movlb	1	; select bank1
  5903  2338  00D2               	movwf	??_follow_path^(0+128)
  5904  2339  0852               	movf	??_follow_path^(0+128),w
  5905  233A  00D7               	movwf	follow_path@res^(0+128)
  5906                           
  5907                           ;ff.c: 2075: dp->dir = 0;
  5908  233B  084E               	movf	follow_path@dp^(0+128),w
  5909  233C  0086               	movwf	6
  5910  233D  084F               	movf	(follow_path@dp+1)^(0+128),w
  5911  233E  0087               	movwf	7
  5912  233F  3152               	addfsr 1,18
  5913  2340  3000               	movlw	0
  5914  2341  3FC0               	movwi [0]fsr1
  5915  2342  3FC1               	movwi [1]fsr1
  5916                           
  5917                           ;ff.c: 2076: } else {
  5918  2343  2BA7               	goto	l5166
  5919  2344                     l560:	
  5920                           
  5921                           ;ff.c: 2093: };ff.c: 2094: if (ns & 0x04) break;
  5922  2344  1956               	btfsc	follow_path@ns^(0+128),2
  5923  2345  2BA7               	goto	l5166
  5924                           
  5925                           ;ff.c: 2095: dir = dp->dir;
  5926  2346  084E               	movf	follow_path@dp^(0+128),w
  5927  2347  0086               	movwf	6
  5928  2348  084F               	movf	(follow_path@dp+1)^(0+128),w
  5929  2349  0087               	movwf	7
  5930  234A  3152               	addfsr 1,18
  5931  234B  3F40               	moviw [0]fsr1
  5932  234C  00D4               	movwf	follow_path@dir^(0+128)
  5933  234D  3F41               	moviw [1]fsr1
  5934  234E  00D5               	movwf	(follow_path@dir+1)^(0+128)
  5935                           
  5936                           ;ff.c: 2096: if (!(dir[11] & 0x10)) {
  5937  234F  0854               	movf	follow_path@dir^(0+128),w
  5938  2350  0086               	movwf	6
  5939  2351  0855               	movf	(follow_path@dir+1)^(0+128),w
  5940  2352  0087               	movwf	7
  5941  2353  314B               	addfsr 1,11
  5942  2354  1E01               	btfss	1,4
  5943  2355  2BA3               	goto	l5154
  5944                           
  5945                           ;ff.c: 2098: };ff.c: 2099: dp->sclust = ld_clust(dp->fs, dir);
  5946  2356  084E               	movf	follow_path@dp^(0+128),w
  5947  2357  0086               	movwf	6
  5948  2358  084F               	movf	(follow_path@dp+1)^(0+128),w
  5949  2359  0087               	movwf	7
  5950  235A  3F40               	moviw [0]fsr1
  5951  235B  00F0               	movwf	ld_clust@fs
  5952  235C  3F41               	moviw [1]fsr1
  5953  235D  00F1               	movwf	ld_clust@fs+1
  5954  235E  0855               	movf	(follow_path@dir+1)^(0+128),w
  5955  235F  00F3               	movwf	ld_clust@dir+1
  5956  2360  0854               	movf	follow_path@dir^(0+128),w
  5957  2361  00F2               	movwf	ld_clust@dir
  5958  2362  3198  2000  31A2   	fcall	_ld_clust
  5959  2365  0021               	movlb	1	; select bank1
  5960  2366  084E               	movf	follow_path@dp^(0+128),w
  5961  2367  0086               	movwf	6
  5962  2368  084F               	movf	(follow_path@dp+1)^(0+128),w
  5963  2369  0087               	movwf	7
  5964  236A  3146               	addfsr 1,6
  5965  236B  0870               	movf	?_ld_clust,w
  5966  236C  3FC0               	movwi [0]fsr1
  5967  236D  0871               	movf	?_ld_clust+1,w
  5968  236E  3FC1               	movwi [1]fsr1
  5969  236F  0872               	movf	?_ld_clust+2,w
  5970  2370  3FC2               	movwi [2]fsr1
  5971  2371  0873               	movf	?_ld_clust+3,w
  5972  2372  3FC3               	movwi [3]fsr1
  5973  2373                     l5126:	
  5974                           
  5975                           ;ff.c: 2078: res = create_name(dp, &path);
  5976  2373  084F               	movf	(follow_path@dp+1)^(0+128),w
  5977  2374  00F9               	movwf	create_name@dp+1
  5978  2375  084E               	movf	follow_path@dp^(0+128),w
  5979  2376  00F8               	movwf	create_name@dp
  5980  2377  30D0               	movlw	(low (follow_path@path| 0))& (0+255)
  5981  2378  00D2               	movwf	??_follow_path^(0+128)
  5982  2379  0852               	movf	??_follow_path^(0+128),w
  5983  237A  00FA               	movwf	create_name@path
  5984  237B  3180  2079  31A2   	fcall	_create_name
  5985  237E  0021               	movlb	1	; select bank1
  5986  237F  00D3               	movwf	(??_follow_path+1)^(0+128)
  5987  2380  0853               	movf	(??_follow_path+1)^(0+128),w
  5988  2381  00D7               	movwf	follow_path@res^(0+128)
  5989                           
  5990                           ;ff.c: 2079: if (res != FR_OK) break;
  5991  2382  0857               	movf	follow_path@res^(0+128),w
  5992  2383  1D03               	btfss	3,2
  5993  2384  2BA7               	goto	l5166
  5994                           
  5995                           ;ff.c: 2080: res = dir_find(dp);
  5996  2385  084F               	movf	(follow_path@dp+1)^(0+128),w
  5997  2386  00C8               	movwf	(dir_find@dp+1)^(0+128)
  5998  2387  084E               	movf	follow_path@dp^(0+128),w
  5999  2388  00C7               	movwf	dir_find@dp^(0+128)
  6000  2389  31A0  20B8  31A2   	fcall	_dir_find
  6001  238C  00D2               	movwf	??_follow_path^(0+128)
  6002  238D  0852               	movf	??_follow_path^(0+128),w
  6003  238E  00D7               	movwf	follow_path@res^(0+128)
  6004                           
  6005                           ;ff.c: 2081: ns = dp->fn[11];
  6006  238F  084E               	movf	follow_path@dp^(0+128),w
  6007  2390  0086               	movwf	6
  6008  2391  084F               	movf	(follow_path@dp+1)^(0+128),w
  6009  2392  0087               	movwf	7
  6010  2393  3154               	addfsr 1,20
  6011  2394  0801               	movf	1,w
  6012  2395  0086               	movwf	6
  6013  2396  3001               	movlw	1	; select bank2/3
  6014  2397  0087               	movwf	7
  6015  2398  3001               	movlw	1	; select bank2/3
  6016  2399  3F4B               	moviw [11]fsr1
  6017  239A  00D6               	movwf	follow_path@ns^(0+128)
  6018                           
  6019                           ;ff.c: 2082: if (res != FR_OK) {
  6020  239B  0857               	movf	follow_path@res^(0+128),w
  6021  239C  1903               	btfsc	3,2
  6022  239D  2B44               	goto	l560
  6023                           
  6024                           ;ff.c: 2083: if (res == FR_NO_FILE) {
  6025  239E  3004               	movlw	4
  6026  239F  0657               	xorwf	follow_path@res^(0+128),w
  6027  23A0  1903               	btfsc	3,2
  6028                           
  6029                           ;ff.c: 2089: if (!(ns & 0x04)) res = FR_NO_PATH;
  6030  23A1  1956               	btfsc	follow_path@ns^(0+128),2
  6031  23A2  2BA7               	goto	l5166
  6032  23A3                     l5154:	
  6033  23A3  3005               	movlw	5
  6034  23A4  00D2               	movwf	??_follow_path^(0+128)
  6035  23A5  0852               	movf	??_follow_path^(0+128),w
  6036  23A6  00D7               	movwf	follow_path@res^(0+128)
  6037  23A7                     l5166:	
  6038                           
  6039                           ;ff.c: 2101: };ff.c: 2103: return res;
  6040  23A7  0857               	movf	follow_path@res^(0+128),w
  6041  23A8  0008               	return
  6042  23A9                     __end_of_follow_path:	
  6043                           
  6044                           	psect	text7
  6045  1800                     __ptext7:	
  6046 ;; *************** function _ld_clust *****************
  6047 ;; Defined at:
  6048 ;;		line 1235 in file "ff.c"
  6049 ;; Parameters:    Size  Location     Type
  6050 ;;  fs              2    0[COMMON] PTR struct .
  6051 ;;		 -> NULL(0), FatFs(558), 
  6052 ;;  dir             2    2[COMMON] PTR const unsigned char 
  6053 ;;		 -> NULL(0), FatFs(558), 
  6054 ;; Auto vars:     Size  Location     Type
  6055 ;;  cl              4   10[COMMON] unsigned long 
  6056 ;; Return value:  Size  Location     Type
  6057 ;;                  4    0[COMMON] unsigned long 
  6058 ;; Registers used:
  6059 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6060 ;; Tracked objects:
  6061 ;;		On entry : 1C/2
  6062 ;;		On exit  : 1C/0
  6063 ;;		Unchanged: 1C/0
  6064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6065 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6066 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6067 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6068 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6069 ;;Total ram usage:       14 bytes
  6070 ;; Hardware stack levels used:    1
  6071 ;; This function calls:
  6072 ;;		Nothing
  6073 ;; This function is called by:
  6074 ;;		_follow_path
  6075 ;;		_f_open
  6076 ;; This function uses a non-reentrant model
  6077 ;;
  6078                           
  6079                           
  6080                           ;psect for function _ld_clust
  6081  1800                     _ld_clust:	
  6082                           
  6083                           ;ff.c: 1240: DWORD cl;;ff.c: 1242: cl = (WORD)(*(WORD*)(BYTE*)(dir + 26));
  6084                           
  6085                           ;incstack = 0
  6086                           ; Regs used in _ld_clust: [wreg+fsr1l+fsr1h+status,2+status,0]
  6087  1800  0872               	movf	ld_clust@dir,w
  6088  1801  0086               	movwf	6
  6089  1802  0873               	movf	ld_clust@dir+1,w
  6090  1803  0087               	movwf	7
  6091  1804  315A               	addfsr 1,26
  6092  1805  3F40               	moviw [0]fsr1
  6093  1806  00F4               	movwf	??_ld_clust
  6094  1807  3F41               	moviw [1]fsr1
  6095  1808  00F5               	movwf	??_ld_clust+1
  6096  1809  0874               	movf	??_ld_clust,w
  6097  180A  00FA               	movwf	ld_clust@cl
  6098  180B  0875               	movf	??_ld_clust+1,w
  6099  180C  00FB               	movwf	ld_clust@cl+1
  6100  180D  01FC               	clrf	ld_clust@cl+2
  6101  180E  01FD               	clrf	ld_clust@cl+3
  6102                           
  6103                           ;ff.c: 1243: if (fs->fs_type == 3)
  6104  180F  0870               	movf	ld_clust@fs,w
  6105  1810  0086               	movwf	6
  6106  1811  0871               	movf	ld_clust@fs+1,w
  6107  1812  0087               	movwf	7
  6108  1813  3003               	movlw	3
  6109  1814  0601               	xorwf	1,w
  6110  1815  1D03               	btfss	3,2
  6111  1816  2835               	goto	l4756
  6112                           
  6113                           ;ff.c: 1244: cl |= (DWORD)(WORD)(*(WORD*)(BYTE*)(dir + 20)) << 16;
  6114  1817  0872               	movf	ld_clust@dir,w
  6115  1818  0086               	movwf	6
  6116  1819  0873               	movf	ld_clust@dir+1,w
  6117  181A  0087               	movwf	7
  6118  181B  3154               	addfsr 1,20
  6119  181C  3F40               	moviw [0]fsr1
  6120  181D  00F4               	movwf	??_ld_clust
  6121  181E  3F41               	moviw [1]fsr1
  6122  181F  00F5               	movwf	??_ld_clust+1
  6123  1820  0874               	movf	??_ld_clust,w
  6124  1821  00F6               	movwf	??_ld_clust+2
  6125  1822  0875               	movf	??_ld_clust+1,w
  6126  1823  00F7               	movwf	??_ld_clust+3
  6127  1824  01F8               	clrf	??_ld_clust+4
  6128  1825  01F9               	clrf	??_ld_clust+5
  6129  1826  3010               	movlw	16
  6130  1827                     u6405:	
  6131  1827  35F6               	lslf	??_ld_clust+2,f
  6132  1828  0DF7               	rlf	??_ld_clust+3,f
  6133  1829  0DF8               	rlf	??_ld_clust+4,f
  6134  182A  0DF9               	rlf	??_ld_clust+5,f
  6135  182B  0B89               	decfsz	9,f
  6136  182C  2827               	goto	u6405
  6137  182D  0876               	movf	??_ld_clust+2,w
  6138  182E  04FA               	iorwf	ld_clust@cl,f
  6139  182F  0877               	movf	??_ld_clust+3,w
  6140  1830  04FB               	iorwf	ld_clust@cl+1,f
  6141  1831  0878               	movf	??_ld_clust+4,w
  6142  1832  04FC               	iorwf	ld_clust@cl+2,f
  6143  1833  0879               	movf	??_ld_clust+5,w
  6144  1834  04FD               	iorwf	ld_clust@cl+3,f
  6145  1835                     l4756:	
  6146                           
  6147                           ;ff.c: 1246: return cl;
  6148  1835  087D               	movf	ld_clust@cl+3,w
  6149  1836  00F3               	movwf	?_ld_clust+3
  6150  1837  087C               	movf	ld_clust@cl+2,w
  6151  1838  00F2               	movwf	?_ld_clust+2
  6152  1839  087B               	movf	ld_clust@cl+1,w
  6153  183A  00F1               	movwf	?_ld_clust+1
  6154  183B  087A               	movf	ld_clust@cl,w
  6155  183C  00F0               	movwf	?_ld_clust
  6156  183D  0008               	return
  6157  183E                     __end_of_ld_clust:	
  6158                           
  6159                           	psect	text8
  6160  20B8                     __ptext8:	
  6161 ;; *************** function _dir_find *****************
  6162 ;; Defined at:
  6163 ;;		line 1458 in file "ff.c"
  6164 ;; Parameters:    Size  Location     Type
  6165 ;;  dp              2   39[BANK1 ] PTR struct .
  6166 ;;		 -> f_open@dj(22), 
  6167 ;; Auto vars:     Size  Location     Type
  6168 ;;  dir             2   43[BANK1 ] PTR unsigned char 
  6169 ;;		 -> NULL(0), FatFs(558), 
  6170 ;;  res             1   45[BANK1 ] enum E88
  6171 ;;  c               1   42[BANK1 ] unsigned char 
  6172 ;; Return value:  Size  Location     Type
  6173 ;;                  1    wreg      enum E88
  6174 ;; Registers used:
  6175 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6176 ;; Tracked objects:
  6177 ;;		On entry : 1F/1
  6178 ;;		On exit  : 1F/1
  6179 ;;		Unchanged: 0/0
  6180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6181 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6182 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6183 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6184 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6185 ;;Total ram usage:        7 bytes
  6186 ;; Hardware stack levels used:    1
  6187 ;; Hardware stack levels required when called:   11
  6188 ;; This function calls:
  6189 ;;		_dir_next
  6190 ;;		_dir_sdi
  6191 ;;		_mem_cmp
  6192 ;;		_move_window
  6193 ;; This function is called by:
  6194 ;;		_follow_path
  6195 ;; This function uses a non-reentrant model
  6196 ;;
  6197                           
  6198                           
  6199                           ;psect for function _dir_find
  6200  20B8                     _dir_find:	
  6201                           
  6202                           ;ff.c: 1462: FRESULT res;;ff.c: 1463: BYTE c, *dir;;ff.c: 1468: res = dir_sdi(dp, 0);
  6203                           
  6204                           ;incstack = 0
  6205                           ; Regs used in _dir_find: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6206  20B8  0848               	movf	(dir_find@dp+1)^(0+128),w
  6207  20B9  0020               	movlb	0	; select bank0
  6208  20BA  00EB               	movwf	dir_sdi@dp+1
  6209  20BB  0021               	movlb	1	; select bank1
  6210  20BC  0847               	movf	dir_find@dp^(0+128),w
  6211  20BD  0020               	movlb	0	; select bank0
  6212  20BE  00EA               	movwf	dir_sdi@dp
  6213  20BF  3000               	movlw	0
  6214  20C0  00EC               	movwf	dir_sdi@idx
  6215  20C1  00ED               	movwf	dir_sdi@idx+1
  6216  20C2  3190  2006  31A0   	fcall	_dir_sdi
  6217  20C5  292C               	goto	L4
  6218  20C6                     l4782:	
  6219                           ;ff.c: 1469: if (res != FR_OK) return res;
  6220                           
  6221  20C6  3004               	movlw	4
  6222  20C7  00C9               	movwf	??_dir_find^(0+128)
  6223  20C8  0849               	movf	??_dir_find^(0+128),w
  6224  20C9  00CD               	movwf	dir_find@res^(0+128)
  6225  20CA  28E3               	goto	l4766
  6226  20CB                     l4786:	
  6227  20CB  084C               	movf	(dir_find@dir+1)^(0+128),w
  6228  20CC  00F1               	movwf	mem_cmp@dst+1
  6229  20CD  084B               	movf	dir_find@dir^(0+128),w
  6230  20CE  00F0               	movwf	mem_cmp@dst
  6231  20CF  0847               	movf	dir_find@dp^(0+128),w
  6232  20D0  0086               	movwf	6
  6233  20D1  0848               	movf	(dir_find@dp+1)^(0+128),w
  6234  20D2  0087               	movwf	7
  6235  20D3  3154               	addfsr 1,20
  6236  20D4  0801               	movf	1,w
  6237  20D5  00C9               	movwf	??_dir_find^(0+128)
  6238  20D6  0849               	movf	??_dir_find^(0+128),w
  6239  20D7  00F2               	movwf	mem_cmp@src
  6240  20D8  300B               	movlw	11
  6241  20D9  00F3               	movwf	mem_cmp@cnt
  6242  20DA  3000               	movlw	0
  6243  20DB  00F4               	movwf	mem_cmp@cnt+1
  6244  20DC  31AB  23E7  31A0   	fcall	_mem_cmp
  6245  20DF  0870               	movf	?_mem_cmp,w
  6246  20E0  0471               	iorwf	?_mem_cmp+1,w
  6247  20E1  1D03               	btfss	3,2
  6248  20E2  2922               	goto	l4790
  6249  20E3                     l4766:	
  6250  20E3  084D               	movf	dir_find@res^(0+128),w
  6251  20E4  0008               	return
  6252  20E5                     l4770:	
  6253                           
  6254                           ;ff.c: 1475: res = move_window(dp->fs, dp->sect);
  6255  20E5  0847               	movf	dir_find@dp^(0+128),w
  6256  20E6  0086               	movwf	6
  6257  20E7  0848               	movf	(dir_find@dp+1)^(0+128),w
  6258  20E8  0087               	movwf	7
  6259  20E9  3F40               	moviw [0]fsr1
  6260  20EA  0020               	movlb	0	; select bank0
  6261  20EB  00C3               	movwf	move_window@fs
  6262  20EC  3F41               	moviw [1]fsr1
  6263  20ED  00C4               	movwf	move_window@fs+1
  6264  20EE  0021               	movlb	1	; select bank1
  6265  20EF  0847               	movf	dir_find@dp^(0+128),w
  6266  20F0  0086               	movwf	6
  6267  20F1  0848               	movf	(dir_find@dp+1)^(0+128),w
  6268  20F2  0087               	movwf	7
  6269  20F3  314E               	addfsr 1,14
  6270  20F4  3F40               	moviw [0]fsr1
  6271  20F5  0020               	movlb	0	; select bank0
  6272  20F6  00C5               	movwf	move_window@sector
  6273  20F7  3F41               	moviw [1]fsr1
  6274  20F8  00C6               	movwf	move_window@sector+1
  6275  20F9  3F42               	moviw [2]fsr1
  6276  20FA  00C7               	movwf	move_window@sector+2
  6277  20FB  3F43               	moviw [3]fsr1
  6278  20FC  00C8               	movwf	move_window@sector+3
  6279  20FD  31AE  263A  31A0   	fcall	_move_window
  6280  2100  0021               	movlb	1	; select bank1
  6281  2101  00C9               	movwf	??_dir_find^(0+128)
  6282  2102  0849               	movf	??_dir_find^(0+128),w
  6283  2103  00CD               	movwf	dir_find@res^(0+128)
  6284                           
  6285                           ;ff.c: 1476: if (res != FR_OK) break;
  6286  2104  084D               	movf	dir_find@res^(0+128),w
  6287  2105  1D03               	btfss	3,2
  6288  2106  28E3               	goto	l4766
  6289                           
  6290                           ;ff.c: 1477: dir = dp->dir;
  6291  2107  0847               	movf	dir_find@dp^(0+128),w
  6292  2108  0086               	movwf	6
  6293  2109  0848               	movf	(dir_find@dp+1)^(0+128),w
  6294  210A  0087               	movwf	7
  6295  210B  3152               	addfsr 1,18
  6296  210C  3F40               	moviw [0]fsr1
  6297  210D  00CB               	movwf	dir_find@dir^(0+128)
  6298  210E  3F41               	moviw [1]fsr1
  6299  210F  00CC               	movwf	(dir_find@dir+1)^(0+128)
  6300                           
  6301                           ;ff.c: 1478: c = dir[0];
  6302  2110  084B               	movf	dir_find@dir^(0+128),w
  6303  2111  0086               	movwf	6
  6304  2112  084C               	movf	(dir_find@dir+1)^(0+128),w
  6305  2113  0087               	movwf	7
  6306  2114  0801               	movf	1,w
  6307  2115  00C9               	movwf	??_dir_find^(0+128)
  6308  2116  0849               	movf	??_dir_find^(0+128),w
  6309  2117  00CA               	movwf	dir_find@c^(0+128)
  6310                           
  6311                           ;ff.c: 1479: if (c == 0) { res = FR_NO_FILE; break; }
  6312  2118  084A               	movf	dir_find@c^(0+128),w
  6313  2119  1903               	btfsc	3,2
  6314  211A  28C6               	goto	l4782
  6315                           
  6316                           ;ff.c: 1502: if (!(dir[11] & 0x08) && !mem_cmp(dir, dp->fn, 11))
  6317  211B  084B               	movf	dir_find@dir^(0+128),w
  6318  211C  0086               	movwf	6
  6319  211D  084C               	movf	(dir_find@dir+1)^(0+128),w
  6320  211E  0087               	movwf	7
  6321  211F  314B               	addfsr 1,11
  6322  2120  1D81               	btfss	1,3
  6323  2121  28CB               	goto	l4786
  6324  2122                     l4790:	
  6325                           
  6326                           ;ff.c: 1505: res = dir_next(dp, 0);
  6327  2122  0848               	movf	(dir_find@dp+1)^(0+128),w
  6328  2123  00B4               	movwf	(dir_next@dp+1)^(0+128)
  6329  2124  0847               	movf	dir_find@dp^(0+128),w
  6330  2125  00B3               	movwf	dir_next@dp^(0+128)
  6331  2126  3000               	movlw	0
  6332  2127  00B5               	movwf	dir_next@stretch^(0+128)
  6333  2128  00B6               	movwf	(dir_next@stretch+1)^(0+128)
  6334  2129  3191  21FA  31A0   	fcall	_dir_next
  6335  212C                     L4:	
  6336  212C  0021               	movlb	1	; select bank1
  6337  212D  00C9               	movwf	??_dir_find^(0+128)
  6338  212E  0849               	movf	??_dir_find^(0+128),w
  6339  212F  00CD               	movwf	dir_find@res^(0+128)
  6340                           
  6341                           ;ff.c: 1506: } while (res == FR_OK);
  6342  2130  084D               	movf	dir_find@res^(0+128),w
  6343  2131  1D03               	btfss	3,2
  6344  2132  28E3               	goto	l4766
  6345  2133  28E5               	goto	l4770
  6346  2134                     __end_of_dir_find:	
  6347                           
  6348                           	psect	text9
  6349  2BE7                     __ptext9:	
  6350 ;; *************** function _mem_cmp *****************
  6351 ;; Defined at:
  6352 ;;		line 533 in file "ff.c"
  6353 ;; Parameters:    Size  Location     Type
  6354 ;;  dst             2    0[COMMON] PTR const void 
  6355 ;;		 -> NULL(0), FatFs(558), 
  6356 ;;  src             1    2[COMMON] PTR const void 
  6357 ;;		 -> f_open@sfn(12), 
  6358 ;;  cnt             2    3[COMMON] unsigned int 
  6359 ;; Auto vars:     Size  Location     Type
  6360 ;;  r               2    9[COMMON] int 
  6361 ;;  d               2    7[COMMON] PTR const unsigned char 
  6362 ;;		 -> NULL(0), FatFs(558), 
  6363 ;;  s               1   11[COMMON] PTR const unsigned char 
  6364 ;;		 -> f_open@sfn(12), 
  6365 ;; Return value:  Size  Location     Type
  6366 ;;                  2    0[COMMON] int 
  6367 ;; Registers used:
  6368 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  6369 ;; Tracked objects:
  6370 ;;		On entry : 1F/1
  6371 ;;		On exit  : 1F/1
  6372 ;;		Unchanged: 1F/0
  6373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6374 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6375 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6376 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6377 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6378 ;;Total ram usage:       12 bytes
  6379 ;; Hardware stack levels used:    1
  6380 ;; This function calls:
  6381 ;;		Nothing
  6382 ;; This function is called by:
  6383 ;;		_dir_find
  6384 ;; This function uses a non-reentrant model
  6385 ;;
  6386                           
  6387                           
  6388                           ;psect for function _mem_cmp
  6389  2BE7                     _mem_cmp:	
  6390                           
  6391                           ;ff.c: 534: const BYTE *d = (const BYTE *)dst, *s = (const BYTE *)src;
  6392                           
  6393                           ;incstack = 0
  6394                           ; Regs used in _mem_cmp: [wreg-fsr1h+status,2+status,0]
  6395  2BE7  0871               	movf	mem_cmp@dst+1,w
  6396  2BE8  00F8               	movwf	mem_cmp@d+1
  6397  2BE9  0870               	movf	mem_cmp@dst,w
  6398  2BEA  00F7               	movwf	mem_cmp@d
  6399  2BEB  0872               	movf	mem_cmp@src,w
  6400  2BEC  00F5               	movwf	??_mem_cmp
  6401  2BED  0875               	movf	??_mem_cmp,w
  6402  2BEE  00FB               	movwf	mem_cmp@s
  6403                           
  6404                           ;ff.c: 535: int r = 0;
  6405  2BEF  01F9               	clrf	mem_cmp@r
  6406  2BF0  01FA               	clrf	mem_cmp@r+1
  6407  2BF1  2C0C               	goto	l4376
  6408  2BF2                     l4378:	
  6409  2BF2  0878               	movf	mem_cmp@d+1,w
  6410  2BF3  00F6               	movwf	??_mem_cmp+1
  6411  2BF4  0877               	movf	mem_cmp@d,w
  6412  2BF5  00F5               	movwf	??_mem_cmp
  6413  2BF6  0AF7               	incf	mem_cmp@d,f
  6414  2BF7  1903               	skipnz
  6415  2BF8  0AF8               	incf	mem_cmp@d+1,f
  6416  2BF9  0875               	movf	??_mem_cmp,w
  6417  2BFA  0086               	movwf	6
  6418  2BFB  0876               	movf	??_mem_cmp+1,w
  6419  2BFC  0087               	movwf	7
  6420  2BFD  087B               	movf	mem_cmp@s,w
  6421  2BFE  0084               	movwf	4
  6422  2BFF  3001               	movlw	1	; select bank2/3
  6423  2C00  0085               	movwf	5
  6424  2C01  0AFB               	incf	mem_cmp@s,f
  6425  2C02  0800               	movf	0,w
  6426  2C03  0201               	subwf	1,w
  6427  2C04  00F9               	movwf	mem_cmp@r
  6428  2C05  01FA               	clrf	mem_cmp@r+1
  6429  2C06  1C03               	skipc
  6430  2C07  03FA               	decf	mem_cmp@r+1,f
  6431  2C08  0879               	movf	mem_cmp@r,w
  6432  2C09  047A               	iorwf	mem_cmp@r+1,w
  6433  2C0A  1D03               	btfss	3,2
  6434  2C0B  2C16               	goto	l4380
  6435  2C0C                     l4376:	
  6436                           ;ff.c: 537: while (cnt-- && (r = *d++ - *s++) == 0) ;
  6437                           
  6438  2C0C  3001               	movlw	1
  6439  2C0D  02F3               	subwf	mem_cmp@cnt,f
  6440  2C0E  3000               	movlw	0
  6441  2C0F  3BF4               	subwfb	mem_cmp@cnt+1,f
  6442  2C10  0A73               	incf	mem_cmp@cnt,w
  6443  2C11  1D03               	skipz
  6444  2C12  2BF2               	goto	l4378
  6445  2C13  0A74               	incf	mem_cmp@cnt+1,w
  6446  2C14  1D03               	btfss	3,2
  6447  2C15  2BF2               	goto	l4378
  6448  2C16                     l4380:	
  6449                           
  6450                           ;ff.c: 538: return r;
  6451  2C16  087A               	movf	mem_cmp@r+1,w
  6452  2C17  00F1               	movwf	?_mem_cmp+1
  6453  2C18  0879               	movf	mem_cmp@r,w
  6454  2C19  00F0               	movwf	?_mem_cmp
  6455  2C1A  0008               	return
  6456  2C1B                     __end_of_mem_cmp:	
  6457                           
  6458                           	psect	text10
  6459  0079                     __ptext10:	
  6460 ;; *************** function _create_name *****************
  6461 ;; Defined at:
  6462 ;;		line 1843 in file "ff.c"
  6463 ;; Parameters:    Size  Location     Type
  6464 ;;  dp              2    8[COMMON] PTR struct .
  6465 ;;		 -> f_open@dj(22), 
  6466 ;;  path            1   10[COMMON] PTR PTR const unsigned c
  6467 ;;		 -> follow_path@path(2), 
  6468 ;; Auto vars:     Size  Location     Type
  6469 ;;  i               2   10[BANK0 ] unsigned int 
  6470 ;;  p               2    7[BANK0 ] PTR const unsigned char 
  6471 ;;		 -> STR_2(10), STR_1(1), 
  6472 ;;  ni              2    5[BANK0 ] unsigned int 
  6473 ;;  si              2    2[BANK0 ] unsigned int 
  6474 ;;  c               1   13[BANK0 ] unsigned char 
  6475 ;;  sfn             1   12[BANK0 ] PTR unsigned char 
  6476 ;;		 -> f_open@sfn(12), 
  6477 ;;  d               1    9[BANK0 ] unsigned char 
  6478 ;;  b               1    4[BANK0 ] unsigned char 
  6479 ;; Return value:  Size  Location     Type
  6480 ;;                  1    wreg      enum E88
  6481 ;; Registers used:
  6482 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6483 ;; Tracked objects:
  6484 ;;		On entry : 1F/1
  6485 ;;		On exit  : 1F/0
  6486 ;;		Unchanged: 0/0
  6487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6488 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6489 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6490 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6491 ;;      Totals:         5      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6492 ;;Total ram usage:       19 bytes
  6493 ;; Hardware stack levels used:    1
  6494 ;; Hardware stack levels required when called:    1
  6495 ;; This function calls:
  6496 ;;		_chk_chr
  6497 ;;		_mem_set
  6498 ;; This function is called by:
  6499 ;;		_follow_path
  6500 ;; This function uses a non-reentrant model
  6501 ;;
  6502                           
  6503                           
  6504                           ;psect for function _create_name
  6505  0079                     _create_name:	
  6506                           
  6507                           ;ff.c: 1969: BYTE b, c, d, *sfn;;ff.c: 1970: UINT ni, si, i;;ff.c: 1971: const char *p;;
      +                          ff.c: 1974: for (p = *path; *p == '/' || *p == '\\'; p++) ;
  6508                           
  6509                           ;incstack = 0
  6510                           ; Regs used in _create_name: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6511  0079  087A               	movf	create_name@path,w
  6512  007A  0086               	movwf	6
  6513  007B  0187               	clrf	7
  6514  007C  3F40               	moviw [0]fsr1
  6515  007D  0020               	movlb	0	; select bank0
  6516  007E  00A7               	movwf	create_name@p
  6517  007F  3F41               	moviw [1]fsr1
  6518  0080  00A8               	movwf	create_name@p+1
  6519  0081                     l4802:	
  6520  0081  0827               	movf	create_name@p,w
  6521  0082  0084               	movwf	4
  6522  0083  0828               	movf	create_name@p+1,w
  6523  0084  0085               	movwf	5
  6524  0085  0012               	moviw fsr0++
  6525  0086  3A2F               	xorlw	47
  6526  0087  1D03               	btfss	3,2
  6527  0088  288E               	goto	l4804
  6528  0089                     l4800:	
  6529  0089  3001               	movlw	1
  6530  008A  07A7               	addwf	create_name@p,f
  6531  008B  3000               	movlw	0
  6532  008C  3DA8               	addwfc	create_name@p+1,f
  6533  008D  2881               	goto	l4802
  6534  008E                     l4804:	
  6535  008E  0827               	movf	create_name@p,w
  6536  008F  0084               	movwf	4
  6537  0090  0828               	movf	create_name@p+1,w
  6538  0091  0085               	movwf	5
  6539  0092  0012               	moviw fsr0++
  6540  0093  3A5C               	xorlw	92
  6541  0094  1903               	btfsc	3,2
  6542  0095  2889               	goto	l4800
  6543                           
  6544                           ;ff.c: 1975: sfn = dp->fn;
  6545  0096  0878               	movf	create_name@dp,w
  6546  0097  0086               	movwf	6
  6547  0098  0879               	movf	create_name@dp+1,w
  6548  0099  0087               	movwf	7
  6549  009A  3154               	addfsr 1,20
  6550  009B  0801               	movf	1,w
  6551  009C  00FB               	movwf	??_create_name
  6552  009D  087B               	movf	??_create_name,w
  6553  009E  00AC               	movwf	create_name@sfn
  6554                           
  6555                           ;ff.c: 1976: mem_set(sfn, ' ', 11);
  6556  009F  082C               	movf	create_name@sfn,w
  6557  00A0  00F0               	movwf	mem_set@dst
  6558  00A1  3001               	movlw	1
  6559  00A2  00F1               	movwf	mem_set@dst+1
  6560  00A3  3020               	movlw	32
  6561  00A4  00F2               	movwf	mem_set@val
  6562  00A5  3000               	movlw	0
  6563  00A6  00F3               	movwf	mem_set@val+1
  6564  00A7  300B               	movlw	11
  6565  00A8  00F4               	movwf	mem_set@cnt
  6566  00A9  3000               	movlw	0
  6567  00AA  00F5               	movwf	mem_set@cnt+1
  6568  00AB  31AA  22F2  3180   	fcall	_mem_set
  6569                           
  6570                           ;ff.c: 1977: si = i = b = 0; ni = 8;
  6571  00AE  0020               	movlb	0	; select bank0
  6572  00AF  01A4               	clrf	create_name@b
  6573  00B0  3000               	movlw	0
  6574  00B1  00AA               	movwf	create_name@i
  6575  00B2  3000               	movlw	0
  6576  00B3  00AB               	movwf	create_name@i+1
  6577  00B4  082B               	movf	create_name@i+1,w
  6578  00B5  00A3               	movwf	create_name@si+1
  6579  00B6  082A               	movf	create_name@i,w
  6580  00B7  00A2               	movwf	create_name@si
  6581  00B8  3008               	movlw	8
  6582  00B9  00A5               	movwf	create_name@ni
  6583  00BA  3000               	movlw	0
  6584  00BB  00A6               	movwf	create_name@ni+1
  6585  00BC  2974               	goto	l4814
  6586  00BD                     l4820:	
  6587  00BD  302F               	movlw	47
  6588  00BE  062D               	xorwf	create_name@c,w
  6589  00BF  1903               	btfsc	3,2
  6590  00C0  2986               	goto	l4898
  6591  00C1  305C               	movlw	92
  6592  00C2  062D               	xorwf	create_name@c,w
  6593  00C3  1903               	btfsc	3,2
  6594  00C4  2986               	goto	l4898
  6595                           
  6596                           ;ff.c: 1994: if (c == '.' || i >= ni) {
  6597  00C5  302E               	movlw	46
  6598  00C6  062D               	xorwf	create_name@c,w
  6599  00C7  1903               	btfsc	3,2
  6600  00C8  28D1               	goto	l4828
  6601  00C9  0826               	movf	create_name@ni+1,w
  6602  00CA  022B               	subwf	create_name@i+1,w
  6603  00CB  1D03               	skipz
  6604  00CC  28CF               	goto	u6535
  6605  00CD  0825               	movf	create_name@ni,w
  6606  00CE  022A               	subwf	create_name@i,w
  6607  00CF                     u6535:	
  6608  00CF  1C03               	skipc
  6609  00D0  28E9               	goto	l4838
  6610  00D1                     l4828:	
  6611                           
  6612                           ;ff.c: 1995: if (ni != 8 || c != '.') return FR_INVALID_NAME;
  6613  00D1  3008               	movlw	8
  6614  00D2  0625               	xorwf	create_name@ni,w
  6615  00D3  0426               	iorwf	create_name@ni+1,w
  6616  00D4  1D03               	btfss	3,2
  6617  00D5  28DA               	goto	l4832
  6618  00D6  302E               	movlw	46
  6619  00D7  062D               	xorwf	create_name@c,w
  6620  00D8  1903               	btfsc	3,2
  6621  00D9  28DC               	goto	l4836
  6622  00DA                     l4832:	
  6623  00DA  3006               	movlw	6
  6624  00DB  0008               	return
  6625  00DC                     l4836:	
  6626                           
  6627                           ;ff.c: 1996: i = 8; ni = 11;
  6628  00DC  3008               	movlw	8
  6629  00DD  00AA               	movwf	create_name@i
  6630  00DE  3000               	movlw	0
  6631  00DF  00AB               	movwf	create_name@i+1
  6632  00E0  300B               	movlw	11
  6633  00E1  00A5               	movwf	create_name@ni
  6634  00E2  3000               	movlw	0
  6635  00E3  00A6               	movwf	create_name@ni+1
  6636                           
  6637                           ;ff.c: 1997: b <<= 2; continue;
  6638  00E4  1003               	clrc
  6639  00E5  0DA4               	rlf	create_name@b,f
  6640  00E6  1003               	clrc
  6641  00E7  0DA4               	rlf	create_name@b,f
  6642  00E8  2974               	goto	l4814
  6643  00E9                     l4838:	
  6644                           
  6645                           ;ff.c: 1998: };ff.c: 1999: if (c >= 0x80) {
  6646  00E9  3080               	movlw	128
  6647  00EA  022D               	subwf	create_name@c,w
  6648  00EB  1C03               	skipc
  6649  00EC  28F1               	goto	l4842
  6650                           
  6651                           ;ff.c: 2000: b |= 3;
  6652  00ED  3003               	movlw	3
  6653  00EE  00FB               	movwf	??_create_name
  6654  00EF  087B               	movf	??_create_name,w
  6655  00F0  04A4               	iorwf	create_name@b,f
  6656  00F1                     l4842:	
  6657                           
  6658                           ;ff.c: 2008: };ff.c: 2009: if ((((BYTE)(c) >= 0x81 && (BYTE)(c) <= 0x9F) || ((BYTE)(c) >
      +                          = 0xE0 && (BYTE)(c) <= 0xFC))) {
  6659  00F1  3081               	movlw	129
  6660  00F2  022D               	subwf	create_name@c,w
  6661  00F3  1C03               	skipc
  6662  00F4  28F9               	goto	l4846
  6663  00F5  30A0               	movlw	160
  6664  00F6  022D               	subwf	create_name@c,w
  6665  00F7  1C03               	skipc
  6666  00F8  2901               	goto	l4850
  6667  00F9                     l4846:	
  6668  00F9  30E0               	movlw	224
  6669  00FA  022D               	subwf	create_name@c,w
  6670  00FB  1C03               	skipc
  6671  00FC  293E               	goto	l4874
  6672  00FD  30FD               	movlw	253
  6673  00FE  022D               	subwf	create_name@c,w
  6674  00FF  1803               	skipnc
  6675  0100  293E               	goto	l4874
  6676  0101                     l4850:	
  6677                           
  6678                           ;ff.c: 2010: d = (BYTE)p[si++];
  6679  0101  0827               	movf	create_name@p,w
  6680  0102  0722               	addwf	create_name@si,w
  6681  0103  0084               	movwf	4
  6682  0104  0828               	movf	create_name@p+1,w
  6683  0105  3D23               	addwfc	create_name@si+1,w
  6684  0106  0085               	movwf	5
  6685  0107  0800               	movf	0,w	;code access
  6686  0108  00FB               	movwf	??_create_name
  6687  0109  087B               	movf	??_create_name,w
  6688  010A  00A9               	movwf	create_name@d
  6689  010B  3001               	movlw	1
  6690  010C  07A2               	addwf	create_name@si,f
  6691  010D  3000               	movlw	0
  6692  010E  3DA3               	addwfc	create_name@si+1,f
  6693                           
  6694                           ;ff.c: 2011: if (!(((BYTE)(d) >= 0x40 && (BYTE)(d) <= 0x7E) || ((BYTE)(d) >= 0x80 && (BY
      +                          TE)(d) <= 0xFC)) || i >= ni - 1)
  6695  010F  3040               	movlw	64
  6696  0110  0229               	subwf	create_name@d,w
  6697  0111  1C03               	skipc
  6698  0112  2917               	goto	l4858
  6699  0113  307F               	movlw	127
  6700  0114  0229               	subwf	create_name@d,w
  6701  0115  1C03               	skipc
  6702  0116  291F               	goto	l4862
  6703  0117                     l4858:	
  6704  0117  3080               	movlw	128
  6705  0118  0229               	subwf	create_name@d,w
  6706  0119  1C03               	skipc
  6707  011A  28DA               	goto	l4832
  6708  011B  30FD               	movlw	253
  6709  011C  0229               	subwf	create_name@d,w
  6710  011D  1803               	skipnc
  6711  011E  28DA               	goto	l4832
  6712  011F                     l4862:	
  6713  011F  0825               	movf	create_name@ni,w
  6714  0120  3EFF               	addlw	255
  6715  0121  00FB               	movwf	??_create_name
  6716  0122  30FF               	movlw	255
  6717  0123  3D26               	addwfc	create_name@ni+1,w
  6718  0124  00FC               	movwf	??_create_name+1
  6719  0125  087C               	movf	??_create_name+1,w
  6720  0126  022B               	subwf	create_name@i+1,w
  6721  0127  1D03               	skipz
  6722  0128  292B               	goto	u6655
  6723  0129  087B               	movf	??_create_name,w
  6724  012A  022A               	subwf	create_name@i,w
  6725  012B                     u6655:	
  6726  012B  1803               	btfsc	3,0
  6727  012C  28DA               	goto	l4832
  6728                           
  6729                           ;ff.c: 2013: sfn[i++] = c;
  6730  012D  082D               	movf	create_name@c,w
  6731  012E  00FB               	movwf	??_create_name
  6732  012F  082A               	movf	create_name@i,w
  6733  0130  072C               	addwf	create_name@sfn,w
  6734  0131  00FC               	movwf	??_create_name+1
  6735  0132  087C               	movf	??_create_name+1,w
  6736  0133  0086               	movwf	6
  6737  0134  3001               	movlw	1	; select bank2/3
  6738  0135  0087               	movwf	7
  6739  0136  087B               	movf	??_create_name,w
  6740  0137  0081               	movwf	1
  6741  0138  3001               	movlw	1
  6742  0139  07AA               	addwf	create_name@i,f
  6743  013A  3000               	movlw	0
  6744  013B  3DAB               	addwfc	create_name@i+1,f
  6745                           
  6746                           ;ff.c: 2014: sfn[i++] = d;
  6747  013C  0829               	movf	create_name@d,w
  6748  013D  2966               	goto	L5
  6749  013E                     l4874:	
  6750                           ;ff.c: 2015: } else {
  6751                           
  6752                           
  6753                           ;ff.c: 2016: if (chk_chr("\"*+,:;<=>\?[]|\x7F", c))
  6754  013E  3015               	movlw	low (STR_4| (0+32768))
  6755  013F  00F0               	movwf	chk_chr@str
  6756  0140  30B0               	movlw	high (STR_4| (0+32768))
  6757  0141  00F1               	movwf	chk_chr@str+1
  6758  0142  082D               	movf	create_name@c,w
  6759  0143  00FB               	movwf	??_create_name
  6760  0144  01FC               	clrf	??_create_name+1
  6761  0145  087B               	movf	??_create_name,w
  6762  0146  00F2               	movwf	chk_chr@chr
  6763  0147  087C               	movf	??_create_name+1,w
  6764  0148  00F3               	movwf	chk_chr@chr+1
  6765  0149  31AB  2368  3180   	fcall	_chk_chr
  6766  014C  0870               	movf	?_chk_chr,w
  6767  014D  0471               	iorwf	?_chk_chr+1,w
  6768  014E  1D03               	btfss	3,2
  6769  014F  28DA               	goto	l4832
  6770                           
  6771                           ;ff.c: 2018: if ((((c)>='A')&&((c)<='Z'))) {
  6772  0150  3041               	movlw	65
  6773  0151  022D               	subwf	create_name@c,w
  6774  0152  1C03               	skipc
  6775  0153  295A               	goto	l4886
  6776  0154  305B               	movlw	91
  6777  0155  022D               	subwf	create_name@c,w
  6778  0156  1803               	skipnc
  6779  0157  295A               	goto	l4886
  6780                           
  6781                           ;ff.c: 2019: b |= 2;
  6782  0158  14A4               	bsf	create_name@b,1
  6783                           
  6784                           ;ff.c: 2020: } else {
  6785  0159  2965               	goto	l4894
  6786  015A                     l4886:	
  6787                           
  6788                           ;ff.c: 2021: if ((((c)>='a')&&((c)<='z'))) {
  6789  015A  3061               	movlw	97
  6790  015B  022D               	subwf	create_name@c,w
  6791  015C  1C03               	skipc
  6792  015D  2965               	goto	l4894
  6793  015E  307B               	movlw	123
  6794  015F  022D               	subwf	create_name@c,w
  6795  0160  1803               	skipnc
  6796  0161  2965               	goto	l4894
  6797                           
  6798                           ;ff.c: 2022: b |= 1; c -= 0x20;
  6799  0162  1424               	bsf	create_name@b,0
  6800  0163  3020               	movlw	32
  6801  0164  02AD               	subwf	create_name@c,f
  6802  0165                     l4894:	
  6803                           
  6804                           ;ff.c: 2023: };ff.c: 2024: };ff.c: 2025: sfn[i++] = c;
  6805  0165  082D               	movf	create_name@c,w
  6806  0166                     L5:	
  6807  0166  00FB               	movwf	??_create_name
  6808  0167  082A               	movf	create_name@i,w
  6809  0168  072C               	addwf	create_name@sfn,w
  6810  0169  00FC               	movwf	??_create_name+1
  6811  016A  087C               	movf	??_create_name+1,w
  6812  016B  0086               	movwf	6
  6813  016C  3001               	movlw	1	; select bank2/3
  6814  016D  0087               	movwf	7
  6815  016E  087B               	movf	??_create_name,w
  6816  016F  0081               	movwf	1
  6817  0170  3001               	movlw	1
  6818  0171  07AA               	addwf	create_name@i,f
  6819  0172  3000               	movlw	0
  6820  0173  3DAB               	addwfc	create_name@i+1,f
  6821  0174                     l4814:	
  6822                           
  6823                           ;ff.c: 1992: c = (BYTE)p[si++];
  6824  0174  0827               	movf	create_name@p,w
  6825  0175  0722               	addwf	create_name@si,w
  6826  0176  0084               	movwf	4
  6827  0177  0828               	movf	create_name@p+1,w
  6828  0178  3D23               	addwfc	create_name@si+1,w
  6829  0179  0085               	movwf	5
  6830  017A  0800               	movf	0,w	;code access
  6831  017B  00FB               	movwf	??_create_name
  6832  017C  087B               	movf	??_create_name,w
  6833  017D  00AD               	movwf	create_name@c
  6834  017E  3001               	movlw	1
  6835  017F  07A2               	addwf	create_name@si,f
  6836  0180  3000               	movlw	0
  6837  0181  3DA3               	addwfc	create_name@si+1,f
  6838                           
  6839                           ;ff.c: 1993: if (c <= ' ' || c == '/' || c == '\\') break;
  6840  0182  3021               	movlw	33
  6841  0183  022D               	subwf	create_name@c,w
  6842  0184  1803               	btfsc	3,0
  6843  0185  28BD               	goto	l4820
  6844  0186                     l4898:	
  6845                           
  6846                           ;ff.c: 2028: *path = &p[si];
  6847  0186  0822               	movf	create_name@si,w
  6848  0187  0727               	addwf	create_name@p,w
  6849  0188  00FB               	movwf	??_create_name
  6850  0189  0823               	movf	create_name@si+1,w
  6851  018A  3D28               	addwfc	create_name@p+1,w
  6852  018B  00FC               	movwf	??_create_name+1
  6853  018C  087A               	movf	create_name@path,w
  6854  018D  0086               	movwf	6
  6855  018E  0187               	clrf	7
  6856  018F  087B               	movf	??_create_name,w
  6857  0190  3FC0               	movwi [0]fsr1
  6858  0191  087C               	movf	??_create_name+1,w
  6859  0192  3FC1               	movwi [1]fsr1
  6860                           
  6861                           ;ff.c: 2029: c = (c <= ' ') ? 0x04 : 0;
  6862  0193  3021               	movlw	33
  6863  0194  022D               	subwf	create_name@c,w
  6864  0195  1C03               	skipc
  6865  0196  299A               	goto	l4904
  6866  0197  01A0               	clrf	_create_name$836
  6867  0198  01A1               	clrf	_create_name$836+1
  6868  0199  299E               	goto	l544
  6869  019A                     l4904:	
  6870  019A  3004               	movlw	4
  6871  019B  00A0               	movwf	_create_name$836
  6872  019C  3000               	movlw	0
  6873  019D  00A1               	movwf	_create_name$836+1
  6874  019E                     l544:	
  6875  019E  0820               	movf	_create_name$836,w
  6876  019F  00FB               	movwf	??_create_name
  6877  01A0  087B               	movf	??_create_name,w
  6878  01A1  00AD               	movwf	create_name@c
  6879                           
  6880                           ;ff.c: 2031: if (!i) return FR_INVALID_NAME;
  6881  01A2  082A               	movf	create_name@i,w
  6882  01A3  042B               	iorwf	create_name@i+1,w
  6883  01A4  1903               	btfsc	3,2
  6884  01A5  28DA               	goto	l4832
  6885                           
  6886                           ;ff.c: 2032: if (sfn[0] == 0xE5) sfn[0] = 0x05;
  6887  01A6  082C               	movf	create_name@sfn,w
  6888  01A7  0086               	movwf	6
  6889  01A8  3001               	movlw	1	; select bank2/3
  6890  01A9  0087               	movwf	7
  6891  01AA  30E5               	movlw	229
  6892  01AB  0601               	xorwf	1,w
  6893  01AC  1D03               	btfss	3,2
  6894  01AD  29B6               	goto	l4916
  6895  01AE  3005               	movlw	5
  6896  01AF  00FB               	movwf	??_create_name
  6897  01B0  082C               	movf	create_name@sfn,w
  6898  01B1  0086               	movwf	6
  6899  01B2  3001               	movlw	1	; select bank2/3
  6900  01B3  0087               	movwf	7
  6901  01B4  087B               	movf	??_create_name,w
  6902  01B5  0081               	movwf	1
  6903  01B6                     l4916:	
  6904                           
  6905                           ;ff.c: 2034: if (ni == 8) b <<= 2;
  6906  01B6  3008               	movlw	8
  6907  01B7  0625               	xorwf	create_name@ni,w
  6908  01B8  0426               	iorwf	create_name@ni+1,w
  6909  01B9  1D03               	btfss	3,2
  6910  01BA  29BF               	goto	l4920
  6911  01BB  1003               	clrc
  6912  01BC  0DA4               	rlf	create_name@b,f
  6913  01BD  1003               	clrc
  6914  01BE  0DA4               	rlf	create_name@b,f
  6915  01BF                     l4920:	
  6916                           
  6917                           ;ff.c: 2035: if ((b & 0x03) == 0x01) c |= 0x10;
  6918  01BF  3003               	movlw	3
  6919  01C0  0524               	andwf	create_name@b,w
  6920  01C1  00FB               	movwf	??_create_name
  6921  01C2  037B               	decf	??_create_name,w
  6922  01C3  1903               	btfsc	3,2
  6923  01C4  162D               	bsf	create_name@c,4
  6924                           
  6925                           ;ff.c: 2036: if ((b & 0x0C) == 0x04) c |= 0x08;
  6926  01C5  300C               	movlw	12
  6927  01C6  0524               	andwf	create_name@b,w
  6928  01C7  00FB               	movwf	??_create_name
  6929  01C8  3004               	movlw	4
  6930  01C9  067B               	xorwf	??_create_name,w
  6931  01CA  1903               	btfsc	3,2
  6932  01CB  15AD               	bsf	create_name@c,3
  6933                           
  6934                           ;ff.c: 2038: sfn[11] = c;
  6935  01CC  082D               	movf	create_name@c,w
  6936  01CD  00FB               	movwf	??_create_name
  6937  01CE  082C               	movf	create_name@sfn,w
  6938  01CF  3E0B               	addlw	11
  6939  01D0  0086               	movwf	6
  6940  01D1  3001               	movlw	1	; select bank2/3
  6941  01D2  0087               	movwf	7
  6942  01D3  087B               	movf	??_create_name,w
  6943  01D4  0081               	movwf	1
  6944                           
  6945                           ;ff.c: 2040: return FR_OK;
  6946  01D5  3000               	movlw	0
  6947  01D6  0008               	return
  6948  01D7                     __end_of_create_name:	
  6949                           
  6950                           	psect	text11
  6951  2B68                     __ptext11:	
  6952 ;; *************** function _chk_chr *****************
  6953 ;; Defined at:
  6954 ;;		line 543 in file "ff.c"
  6955 ;; Parameters:    Size  Location     Type
  6956 ;;  str             2    0[COMMON] PTR const unsigned char 
  6957 ;;		 -> STR_4(15), 
  6958 ;;  chr             2    2[COMMON] int 
  6959 ;; Auto vars:     Size  Location     Type
  6960 ;;		None
  6961 ;; Return value:  Size  Location     Type
  6962 ;;                  2    0[COMMON] int 
  6963 ;; Registers used:
  6964 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  6965 ;; Tracked objects:
  6966 ;;		On entry : 1F/0
  6967 ;;		On exit  : 1F/0
  6968 ;;		Unchanged: 1F/0
  6969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6970 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6972 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6973 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6974 ;;Total ram usage:        6 bytes
  6975 ;; Hardware stack levels used:    1
  6976 ;; This function calls:
  6977 ;;		Nothing
  6978 ;; This function is called by:
  6979 ;;		_create_name
  6980 ;; This function uses a non-reentrant model
  6981 ;;
  6982                           
  6983                           
  6984                           ;psect for function _chk_chr
  6985  2B68                     _chk_chr:	
  6986                           
  6987                           ;ff.c: 544: while (*str && *str != chr) str++;
  6988                           
  6989                           ;incstack = 0
  6990                           ; Regs used in _chk_chr: [wreg-fsr0h+status,2+status,0+pclath]
  6991  2B68  2B7C               	goto	l4388
  6992  2B69                     l4390:	
  6993  2B69  0870               	movf	chk_chr@str,w
  6994  2B6A  0084               	movwf	4
  6995  2B6B  0871               	movf	chk_chr@str+1,w
  6996  2B6C  0085               	movwf	5
  6997  2B6D  0800               	movf	0,w	;code access
  6998  2B6E  00F4               	movwf	??_chk_chr
  6999  2B6F  01F5               	clrf	??_chk_chr+1
  7000  2B70  0873               	movf	chk_chr@chr+1,w
  7001  2B71  0675               	xorwf	??_chk_chr+1,w
  7002  2B72  1D03               	skipz
  7003  2B73  2B76               	goto	u5745
  7004  2B74  0872               	movf	chk_chr@chr,w
  7005  2B75  0674               	xorwf	??_chk_chr,w
  7006  2B76                     u5745:	
  7007  2B76  1903               	btfsc	3,2
  7008  2B77  2B83               	goto	l4392
  7009  2B78  3001               	movlw	1
  7010  2B79  07F0               	addwf	chk_chr@str,f
  7011  2B7A  3000               	movlw	0
  7012  2B7B  3DF1               	addwfc	chk_chr@str+1,f
  7013  2B7C                     l4388:	
  7014  2B7C  0870               	movf	chk_chr@str,w
  7015  2B7D  0084               	movwf	4
  7016  2B7E  0871               	movf	chk_chr@str+1,w
  7017  2B7F  0085               	movwf	5
  7018  2B80  0012               	moviw fsr0++
  7019  2B81  1D03               	btfss	3,2
  7020  2B82  2B69               	goto	l4390
  7021  2B83                     l4392:	
  7022                           
  7023                           ;ff.c: 545: return *str;
  7024  2B83  0870               	movf	chk_chr@str,w
  7025  2B84  0084               	movwf	4
  7026  2B85  0871               	movf	chk_chr@str+1,w
  7027  2B86  0085               	movwf	5
  7028  2B87  0800               	movf	0,w	;code access
  7029  2B88  00F4               	movwf	??_chk_chr
  7030  2B89  01F5               	clrf	??_chk_chr+1
  7031  2B8A  0874               	movf	??_chk_chr,w
  7032  2B8B  00F0               	movwf	?_chk_chr
  7033  2B8C  0875               	movf	??_chk_chr+1,w
  7034  2B8D  00F1               	movwf	?_chk_chr+1
  7035  2B8E  0008               	return
  7036  2B8F                     __end_of_chk_chr:	
  7037                           
  7038                           	psect	text12
  7039  0004                     __ptext12:	
  7040 ;; *************** function _dir_register *****************
  7041 ;; Defined at:
  7042 ;;		line 1578 in file "ff.c"
  7043 ;; Parameters:    Size  Location     Type
  7044 ;;  dp              2   48[BANK1 ] PTR struct .
  7045 ;;		 -> f_open@dj(22), 
  7046 ;; Auto vars:     Size  Location     Type
  7047 ;;  res             1   54[BANK1 ] enum E88
  7048 ;; Return value:  Size  Location     Type
  7049 ;;                  1    wreg      enum E88
  7050 ;; Registers used:
  7051 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7052 ;; Tracked objects:
  7053 ;;		On entry : 1F/1
  7054 ;;		On exit  : 1F/1
  7055 ;;		Unchanged: 0/0
  7056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7057 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7058 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7059 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7060 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7061 ;;Total ram usage:        7 bytes
  7062 ;; Hardware stack levels used:    1
  7063 ;; Hardware stack levels required when called:   12
  7064 ;; This function calls:
  7065 ;;		_dir_alloc
  7066 ;;		_mem_cpy
  7067 ;;		_mem_set
  7068 ;;		_move_window
  7069 ;; This function is called by:
  7070 ;;		_f_open
  7071 ;; This function uses a non-reentrant model
  7072 ;;
  7073                           
  7074                           
  7075                           ;psect for function _dir_register
  7076  0004                     _dir_register:	
  7077                           
  7078                           ;ff.c: 1582: FRESULT res;;ff.c: 1629: res = dir_alloc(dp, 1);
  7079                           
  7080                           ;incstack = 0
  7081                           ; Regs used in _dir_register: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7082  0004  0851               	movf	(dir_register@dp+1)^(0+128),w
  7083  0005  00C8               	movwf	(dir_alloc@dp+1)^(0+128)
  7084  0006  0850               	movf	dir_register@dp^(0+128),w
  7085  0007  00C7               	movwf	dir_alloc@dp^(0+128)
  7086  0008  3001               	movlw	1
  7087  0009  00C9               	movwf	dir_alloc@nent^(0+128)
  7088  000A  3000               	movlw	0
  7089  000B  00CA               	movwf	(dir_alloc@nent^(0+128)+1)
  7090  000C  31A1  2134  3180   	fcall	_dir_alloc
  7091  000F  00D2               	movwf	??_dir_register^(0+128)
  7092  0010  0852               	movf	??_dir_register^(0+128),w
  7093  0011  00D6               	movwf	dir_register@res^(0+128)
  7094                           
  7095                           ;ff.c: 1632: if (res == FR_OK) {
  7096  0012  0856               	movf	dir_register@res^(0+128),w
  7097  0013  1D03               	btfss	3,2
  7098  0014  2877               	goto	l5108
  7099                           
  7100                           ;ff.c: 1633: res = move_window(dp->fs, dp->sect);
  7101  0015  0850               	movf	dir_register@dp^(0+128),w
  7102  0016  0086               	movwf	6
  7103  0017  0851               	movf	(dir_register@dp+1)^(0+128),w
  7104  0018  0087               	movwf	7
  7105  0019  3F40               	moviw [0]fsr1
  7106  001A  0020               	movlb	0	; select bank0
  7107  001B  00C3               	movwf	move_window@fs
  7108  001C  3F41               	moviw [1]fsr1
  7109  001D  00C4               	movwf	move_window@fs+1
  7110  001E  0021               	movlb	1	; select bank1
  7111  001F  0850               	movf	dir_register@dp^(0+128),w
  7112  0020  0086               	movwf	6
  7113  0021  0851               	movf	(dir_register@dp+1)^(0+128),w
  7114  0022  0087               	movwf	7
  7115  0023  314E               	addfsr 1,14
  7116  0024  3F40               	moviw [0]fsr1
  7117  0025  0020               	movlb	0	; select bank0
  7118  0026  00C5               	movwf	move_window@sector
  7119  0027  3F41               	moviw [1]fsr1
  7120  0028  00C6               	movwf	move_window@sector+1
  7121  0029  3F42               	moviw [2]fsr1
  7122  002A  00C7               	movwf	move_window@sector+2
  7123  002B  3F43               	moviw [3]fsr1
  7124  002C  00C8               	movwf	move_window@sector+3
  7125  002D  31AE  263A  3180   	fcall	_move_window
  7126  0030  0021               	movlb	1	; select bank1
  7127  0031  00D2               	movwf	??_dir_register^(0+128)
  7128  0032  0852               	movf	??_dir_register^(0+128),w
  7129  0033  00D6               	movwf	dir_register@res^(0+128)
  7130                           
  7131                           ;ff.c: 1634: if (res == FR_OK) {
  7132  0034  0856               	movf	dir_register@res^(0+128),w
  7133  0035  1D03               	btfss	3,2
  7134  0036  2877               	goto	l5108
  7135                           
  7136                           ;ff.c: 1635: mem_set(dp->dir, 0, 32);
  7137  0037  0850               	movf	dir_register@dp^(0+128),w
  7138  0038  0086               	movwf	6
  7139  0039  0851               	movf	(dir_register@dp+1)^(0+128),w
  7140  003A  0087               	movwf	7
  7141  003B  3152               	addfsr 1,18
  7142  003C  3F40               	moviw [0]fsr1
  7143  003D  00F0               	movwf	mem_set@dst
  7144  003E  3F41               	moviw [1]fsr1
  7145  003F  00F1               	movwf	mem_set@dst+1
  7146  0040  3000               	movlw	0
  7147  0041  00F2               	movwf	mem_set@val
  7148  0042  00F3               	movwf	mem_set@val+1
  7149  0043  3020               	movlw	32
  7150  0044  00F4               	movwf	mem_set@cnt
  7151  0045  3000               	movlw	0
  7152  0046  00F5               	movwf	mem_set@cnt+1
  7153  0047  31AA  22F2  3180   	fcall	_mem_set
  7154                           
  7155                           ;ff.c: 1636: mem_cpy(dp->dir, dp->fn, 11);
  7156  004A  0021               	movlb	1	; select bank1
  7157  004B  0850               	movf	dir_register@dp^(0+128),w
  7158  004C  0086               	movwf	6
  7159  004D  0851               	movf	(dir_register@dp+1)^(0+128),w
  7160  004E  0087               	movwf	7
  7161  004F  3152               	addfsr 1,18
  7162  0050  3F40               	moviw [0]fsr1
  7163  0051  00F0               	movwf	mem_cpy@dst
  7164  0052  3F41               	moviw [1]fsr1
  7165  0053  00F1               	movwf	mem_cpy@dst+1
  7166  0054  0850               	movf	dir_register@dp^(0+128),w
  7167  0055  0086               	movwf	6
  7168  0056  0851               	movf	(dir_register@dp+1)^(0+128),w
  7169  0057  0087               	movwf	7
  7170  0058  3154               	addfsr 1,20
  7171  0059  0801               	movf	1,w
  7172  005A  00F2               	movwf	mem_cpy@src
  7173  005B  3001               	movlw	1
  7174  005C  00F3               	movwf	mem_cpy@src+1
  7175  005D  300B               	movlw	11
  7176  005E  00F4               	movwf	mem_cpy@cnt
  7177  005F  3000               	movlw	0
  7178  0060  00F5               	movwf	mem_cpy@cnt+1
  7179  0061  31AC  249D         	fcall	_mem_cpy
  7180                           
  7181                           ;ff.c: 1640: dp->fs->wflag = 1;
  7182  0063  0850               	movf	dir_register@dp^(0+128),w
  7183  0064  0086               	movwf	6
  7184  0065  0851               	movf	(dir_register@dp+1)^(0+128),w
  7185  0066  0087               	movwf	7
  7186  0067  3F40               	moviw [0]fsr1
  7187  0068  00D2               	movwf	??_dir_register^(0+128)
  7188  0069  3F41               	moviw [1]fsr1
  7189  006A  00D3               	movwf	(??_dir_register^(0+128)+1)
  7190  006B  0852               	movf	??_dir_register^(0+128),w
  7191  006C  3E04               	addlw	4
  7192  006D  00D4               	movwf	(??_dir_register+2)^(0+128)
  7193  006E  3000               	movlw	0
  7194  006F  3D53               	addwfc	(??_dir_register+1)^(0+128),w
  7195  0070  00D5               	movwf	(??_dir_register+3)^(0+128)
  7196  0071  0854               	movf	(??_dir_register+2)^(0+128),w
  7197  0072  0086               	movwf	6
  7198  0073  0855               	movf	(??_dir_register+3)^(0+128),w
  7199  0074  0087               	movwf	7
  7200  0075  3001               	movlw	1
  7201  0076  0081               	movwf	1
  7202  0077                     l5108:	
  7203                           
  7204                           ;ff.c: 1641: };ff.c: 1642: };ff.c: 1644: return res;
  7205  0077  0856               	movf	dir_register@res^(0+128),w
  7206  0078  0008               	return
  7207  0079                     __end_of_dir_register:	
  7208                           
  7209                           	psect	text13
  7210  2C9D                     __ptext13:	
  7211 ;; *************** function _mem_cpy *****************
  7212 ;; Defined at:
  7213 ;;		line 507 in file "ff.c"
  7214 ;; Parameters:    Size  Location     Type
  7215 ;;  dst             2    0[COMMON] PTR void 
  7216 ;;		 -> FatFs.win(512), NULL(0), FatFs(558), 
  7217 ;;  src             2    2[COMMON] PTR const void 
  7218 ;;		 -> f_open@sfn(12), NULL(0), STR_3(21), FatFs(558), 
  7219 ;;  cnt             2    4[COMMON] unsigned int 
  7220 ;; Auto vars:     Size  Location     Type
  7221 ;;  s               2    9[COMMON] PTR const unsigned char 
  7222 ;;		 -> f_open@sfn(12), NULL(0), STR_3(21), FatFs(558), 
  7223 ;;  d               2    7[COMMON] PTR unsigned char 
  7224 ;;		 -> FatFs.win(512), NULL(0), FatFs(558), 
  7225 ;; Return value:  Size  Location     Type
  7226 ;;                  1    wreg      void 
  7227 ;; Registers used:
  7228 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  7229 ;; Tracked objects:
  7230 ;;		On entry : 1F/1
  7231 ;;		On exit  : 1F/1
  7232 ;;		Unchanged: 1F/0
  7233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7234 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7235 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7236 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7237 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7238 ;;Total ram usage:       11 bytes
  7239 ;; Hardware stack levels used:    1
  7240 ;; This function calls:
  7241 ;;		Nothing
  7242 ;; This function is called by:
  7243 ;;		_dir_register
  7244 ;;		_f_write
  7245 ;; This function uses a non-reentrant model
  7246 ;;
  7247                           
  7248                           
  7249                           ;psect for function _mem_cpy
  7250  2C9D                     _mem_cpy:	
  7251                           
  7252                           ;ff.c: 508: BYTE *d = (BYTE*)dst;
  7253                           
  7254                           ;incstack = 0
  7255                           ; Regs used in _mem_cpy: [wreg-fsr1h+status,2+status,0+pclath]
  7256  2C9D  0871               	movf	mem_cpy@dst+1,w
  7257  2C9E  00F8               	movwf	mem_cpy@d+1
  7258  2C9F  0870               	movf	mem_cpy@dst,w
  7259  2CA0  00F7               	movwf	mem_cpy@d
  7260                           
  7261                           ;ff.c: 509: const BYTE *s = (const BYTE*)src;
  7262  2CA1  0873               	movf	mem_cpy@src+1,w
  7263  2CA2  00FA               	movwf	mem_cpy@s+1
  7264  2CA3  0872               	movf	mem_cpy@src,w
  7265  2CA4  00F9               	movwf	mem_cpy@s
  7266  2CA5                     l4674:	
  7267                           ;ff.c: 512: while (cnt >= sizeof (int)) {
  7268                           
  7269  2CA5  3000               	movlw	0
  7270  2CA6  0275               	subwf	mem_cpy@cnt+1,w
  7271  2CA7  3002               	movlw	2
  7272  2CA8  1903               	skipnz
  7273  2CA9  0274               	subwf	mem_cpy@cnt,w
  7274  2CAA  1C03               	btfss	3,0
  7275  2CAB  2CD9               	goto	l4682
  7276                           
  7277                           ;ff.c: 513: *(int*)d = *(int*)s;
  7278  2CAC  0879               	movf	mem_cpy@s,w
  7279  2CAD  0086               	movwf	6
  7280  2CAE  087A               	movf	mem_cpy@s+1,w
  7281  2CAF  0087               	movwf	7
  7282  2CB0  0877               	movf	mem_cpy@d,w
  7283  2CB1  0084               	movwf	4
  7284  2CB2  0878               	movf	mem_cpy@d+1,w
  7285  2CB3  0085               	movwf	5
  7286  2CB4  3F40               	moviw [0]fsr1
  7287  2CB5  3F80               	movwi [0]fsr0
  7288  2CB6  3F41               	moviw [1]fsr1
  7289  2CB7  3F81               	movwi [1]fsr0
  7290                           
  7291                           ;ff.c: 514: d += sizeof (int); s += sizeof (int);
  7292  2CB8  3002               	movlw	2
  7293  2CB9  07F7               	addwf	mem_cpy@d,f
  7294  2CBA  3000               	movlw	0
  7295  2CBB  3DF8               	addwfc	mem_cpy@d+1,f
  7296  2CBC  3002               	movlw	2
  7297  2CBD  07F9               	addwf	mem_cpy@s,f
  7298  2CBE  3000               	movlw	0
  7299  2CBF  3DFA               	addwfc	mem_cpy@s+1,f
  7300                           
  7301                           ;ff.c: 515: cnt -= sizeof (int);
  7302  2CC0  3002               	movlw	2
  7303  2CC1  02F4               	subwf	mem_cpy@cnt,f
  7304  2CC2  3000               	movlw	0
  7305  2CC3  3BF5               	subwfb	mem_cpy@cnt+1,f
  7306  2CC4  2CA5               	goto	l4674
  7307  2CC5                     l4676:	
  7308                           
  7309                           ;ff.c: 519: *d++ = *s++;
  7310  2CC5  0879               	movf	mem_cpy@s,w
  7311  2CC6  0084               	movwf	4
  7312  2CC7  087A               	movf	mem_cpy@s+1,w
  7313  2CC8  0085               	movwf	5
  7314  2CC9  0800               	movf	0,w	;code access
  7315  2CCA  00F6               	movwf	??_mem_cpy
  7316  2CCB  0877               	movf	mem_cpy@d,w
  7317  2CCC  0086               	movwf	6
  7318  2CCD  0878               	movf	mem_cpy@d+1,w
  7319  2CCE  0087               	movwf	7
  7320  2CCF  0876               	movf	??_mem_cpy,w
  7321  2CD0  0081               	movwf	1
  7322  2CD1  3001               	movlw	1
  7323  2CD2  07F9               	addwf	mem_cpy@s,f
  7324  2CD3  3000               	movlw	0
  7325  2CD4  3DFA               	addwfc	mem_cpy@s+1,f
  7326  2CD5  3001               	movlw	1
  7327  2CD6  07F7               	addwf	mem_cpy@d,f
  7328  2CD7  3000               	movlw	0
  7329  2CD8  3DF8               	addwfc	mem_cpy@d+1,f
  7330  2CD9                     l4682:	
  7331  2CD9  3001               	movlw	1
  7332  2CDA  02F4               	subwf	mem_cpy@cnt,f
  7333  2CDB  3000               	movlw	0
  7334  2CDC  3BF5               	subwfb	mem_cpy@cnt+1,f
  7335  2CDD  0A74               	incf	mem_cpy@cnt,w
  7336  2CDE  1D03               	skipz
  7337  2CDF  2CC5               	goto	l4676
  7338  2CE0  0A75               	incf	mem_cpy@cnt+1,w
  7339  2CE1  1903               	btfsc	3,2
  7340  2CE2  0008               	return
  7341  2CE3  2CC5               	goto	l4676
  7342  2CE4                     __end_of_mem_cpy:	
  7343                           
  7344                           	psect	text14
  7345  2134                     __ptext14:	
  7346 ;; *************** function _dir_alloc *****************
  7347 ;; Defined at:
  7348 ;;		line 1199 in file "ff.c"
  7349 ;; Parameters:    Size  Location     Type
  7350 ;;  dp              2   39[BANK1 ] PTR struct .
  7351 ;;		 -> f_open@dj(22), 
  7352 ;;  nent            2   41[BANK1 ] unsigned int 
  7353 ;; Auto vars:     Size  Location     Type
  7354 ;;  n               2   45[BANK1 ] unsigned int 
  7355 ;;  res             1   47[BANK1 ] enum E88
  7356 ;; Return value:  Size  Location     Type
  7357 ;;                  1    wreg      enum E88
  7358 ;; Registers used:
  7359 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7360 ;; Tracked objects:
  7361 ;;		On entry : 1F/1
  7362 ;;		On exit  : 1F/1
  7363 ;;		Unchanged: 0/0
  7364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7365 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7366 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7367 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7368 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7369 ;;Total ram usage:        9 bytes
  7370 ;; Hardware stack levels used:    1
  7371 ;; Hardware stack levels required when called:   11
  7372 ;; This function calls:
  7373 ;;		_dir_next
  7374 ;;		_dir_sdi
  7375 ;;		_move_window
  7376 ;; This function is called by:
  7377 ;;		_dir_register
  7378 ;; This function uses a non-reentrant model
  7379 ;;
  7380                           
  7381                           
  7382                           ;psect for function _dir_alloc
  7383  2134                     _dir_alloc:	
  7384                           
  7385                           ;ff.c: 1204: FRESULT res;;ff.c: 1205: UINT n;;ff.c: 1208: res = dir_sdi(dp, 0);
  7386                           
  7387                           ;incstack = 0
  7388                           ; Regs used in _dir_alloc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7389  2134  0848               	movf	(dir_alloc@dp+1)^(0+128),w
  7390  2135  0020               	movlb	0	; select bank0
  7391  2136  00EB               	movwf	dir_sdi@dp+1
  7392  2137  0021               	movlb	1	; select bank1
  7393  2138  0847               	movf	dir_alloc@dp^(0+128),w
  7394  2139  0020               	movlb	0	; select bank0
  7395  213A  00EA               	movwf	dir_sdi@dp
  7396  213B  3000               	movlw	0
  7397  213C  00EC               	movwf	dir_sdi@idx
  7398  213D  00ED               	movwf	dir_sdi@idx+1
  7399  213E  3190  2006  31A1   	fcall	_dir_sdi
  7400  2141  0021               	movlb	1	; select bank1
  7401  2142  00CB               	movwf	??_dir_alloc^(0+128)
  7402  2143  084B               	movf	??_dir_alloc^(0+128),w
  7403  2144  00CF               	movwf	dir_alloc@res^(0+128)
  7404                           
  7405                           ;ff.c: 1209: if (res == FR_OK) {
  7406  2145  084F               	movf	dir_alloc@res^(0+128),w
  7407  2146  1D03               	btfss	3,2
  7408  2147  29AE               	goto	l4744
  7409                           
  7410                           ;ff.c: 1210: n = 0;
  7411  2148  01CD               	clrf	dir_alloc@n^(0+128)
  7412  2149  01CE               	clrf	(dir_alloc@n+1)^(0+128)
  7413  214A                     l4724:	
  7414                           
  7415                           ;ff.c: 1212: res = move_window(dp->fs, dp->sect);
  7416  214A  0847               	movf	dir_alloc@dp^(0+128),w
  7417  214B  0086               	movwf	6
  7418  214C  0848               	movf	(dir_alloc@dp+1)^(0+128),w
  7419  214D  0087               	movwf	7
  7420  214E  3F40               	moviw [0]fsr1
  7421  214F  0020               	movlb	0	; select bank0
  7422  2150  00C3               	movwf	move_window@fs
  7423  2151  3F41               	moviw [1]fsr1
  7424  2152  00C4               	movwf	move_window@fs+1
  7425  2153  0021               	movlb	1	; select bank1
  7426  2154  0847               	movf	dir_alloc@dp^(0+128),w
  7427  2155  0086               	movwf	6
  7428  2156  0848               	movf	(dir_alloc@dp+1)^(0+128),w
  7429  2157  0087               	movwf	7
  7430  2158  314E               	addfsr 1,14
  7431  2159  3F40               	moviw [0]fsr1
  7432  215A  0020               	movlb	0	; select bank0
  7433  215B  00C5               	movwf	move_window@sector
  7434  215C  3F41               	moviw [1]fsr1
  7435  215D  00C6               	movwf	move_window@sector+1
  7436  215E  3F42               	moviw [2]fsr1
  7437  215F  00C7               	movwf	move_window@sector+2
  7438  2160  3F43               	moviw [3]fsr1
  7439  2161  00C8               	movwf	move_window@sector+3
  7440  2162  31AE  263A  31A1   	fcall	_move_window
  7441  2165  0021               	movlb	1	; select bank1
  7442  2166  00CB               	movwf	??_dir_alloc^(0+128)
  7443  2167  084B               	movf	??_dir_alloc^(0+128),w
  7444  2168  00CF               	movwf	dir_alloc@res^(0+128)
  7445                           
  7446                           ;ff.c: 1213: if (res != FR_OK) break;
  7447  2169  084F               	movf	dir_alloc@res^(0+128),w
  7448  216A  1D03               	btfss	3,2
  7449  216B  29AE               	goto	l4744
  7450                           
  7451                           ;ff.c: 1214: if (dp->dir[0] == 0xE5 || dp->dir[0] == 0) {
  7452  216C  0847               	movf	dir_alloc@dp^(0+128),w
  7453  216D  0086               	movwf	6
  7454  216E  0848               	movf	(dir_alloc@dp+1)^(0+128),w
  7455  216F  0087               	movwf	7
  7456  2170  3152               	addfsr 1,18
  7457  2171  3F40               	moviw [0]fsr1
  7458  2172  00CB               	movwf	??_dir_alloc^(0+128)
  7459  2173  3F41               	moviw [1]fsr1
  7460  2174  00CC               	movwf	(??_dir_alloc^(0+128)+1)
  7461  2175  084B               	movf	??_dir_alloc^(0+128),w
  7462  2176  0086               	movwf	6
  7463  2177  084C               	movf	(??_dir_alloc+1)^(0+128),w
  7464  2178  0087               	movwf	7
  7465  2179  30E5               	movlw	229
  7466  217A  0601               	xorwf	1,w
  7467  217B  1903               	btfsc	3,2
  7468  217C  298D               	goto	l4734
  7469  217D  0847               	movf	dir_alloc@dp^(0+128),w
  7470  217E  0086               	movwf	6
  7471  217F  0848               	movf	(dir_alloc@dp+1)^(0+128),w
  7472  2180  0087               	movwf	7
  7473  2181  3152               	addfsr 1,18
  7474  2182  3F40               	moviw [0]fsr1
  7475  2183  00CB               	movwf	??_dir_alloc^(0+128)
  7476  2184  3F41               	moviw [1]fsr1
  7477  2185  00CC               	movwf	(??_dir_alloc^(0+128)+1)
  7478  2186  084B               	movf	??_dir_alloc^(0+128),w
  7479  2187  0086               	movwf	6
  7480  2188  084C               	movf	(??_dir_alloc+1)^(0+128),w
  7481  2189  0087               	movwf	7
  7482  218A  0801               	movf	1,w
  7483  218B  1D03               	btfss	3,2
  7484  218C  299A               	goto	l4738
  7485  218D                     l4734:	
  7486                           
  7487                           ;ff.c: 1215: if (++n == nent) break;
  7488  218D  3001               	movlw	1
  7489  218E  07CD               	addwf	dir_alloc@n^(0+128),f
  7490  218F  3000               	movlw	0
  7491  2190  3DCE               	addwfc	(dir_alloc@n+1)^(0+128),f
  7492  2191  084A               	movf	(dir_alloc@nent+1)^(0+128),w
  7493  2192  064E               	xorwf	(dir_alloc@n+1)^(0+128),w
  7494  2193  1D03               	skipz
  7495  2194  2997               	goto	u6365
  7496  2195  0849               	movf	dir_alloc@nent^(0+128),w
  7497  2196  064D               	xorwf	dir_alloc@n^(0+128),w
  7498  2197                     u6365:	
  7499  2197  1903               	btfsc	3,2
  7500  2198  29AE               	goto	l4744
  7501  2199  299C               	goto	l4740
  7502  219A                     l4738:	
  7503                           
  7504                           ;ff.c: 1217: n = 0;
  7505  219A  01CD               	clrf	dir_alloc@n^(0+128)
  7506  219B  01CE               	clrf	(dir_alloc@n+1)^(0+128)
  7507  219C                     l4740:	
  7508                           
  7509                           ;ff.c: 1218: };ff.c: 1219: res = dir_next(dp, 1);
  7510  219C  0848               	movf	(dir_alloc@dp+1)^(0+128),w
  7511  219D  00B4               	movwf	(dir_next@dp+1)^(0+128)
  7512  219E  0847               	movf	dir_alloc@dp^(0+128),w
  7513  219F  00B3               	movwf	dir_next@dp^(0+128)
  7514  21A0  3001               	movlw	1
  7515  21A1  00B5               	movwf	dir_next@stretch^(0+128)
  7516  21A2  3000               	movlw	0
  7517  21A3  00B6               	movwf	(dir_next@stretch^(0+128)+1)
  7518  21A4  3191  21FA  31A1   	fcall	_dir_next
  7519  21A7  0021               	movlb	1	; select bank1
  7520  21A8  00CB               	movwf	??_dir_alloc^(0+128)
  7521  21A9  084B               	movf	??_dir_alloc^(0+128),w
  7522  21AA  00CF               	movwf	dir_alloc@res^(0+128)
  7523                           
  7524                           ;ff.c: 1220: } while (res == FR_OK);
  7525  21AB  084F               	movf	dir_alloc@res^(0+128),w
  7526  21AC  1903               	btfsc	3,2
  7527  21AD  294A               	goto	l4724
  7528  21AE                     l4744:	
  7529                           
  7530                           ;ff.c: 1221: };ff.c: 1222: if (res == FR_NO_FILE) res = FR_DENIED;
  7531  21AE  3004               	movlw	4
  7532  21AF  064F               	xorwf	dir_alloc@res^(0+128),w
  7533  21B0  1D03               	btfss	3,2
  7534  21B1  29B6               	goto	l482
  7535  21B2  3007               	movlw	7
  7536  21B3  00CB               	movwf	??_dir_alloc^(0+128)
  7537  21B4  084B               	movf	??_dir_alloc^(0+128),w
  7538  21B5  00CF               	movwf	dir_alloc@res^(0+128)
  7539  21B6                     l482:	
  7540                           
  7541                           ;ff.c: 1223: return res;
  7542  21B6  084F               	movf	dir_alloc@res^(0+128),w
  7543  21B7  0008               	return
  7544  21B8                     __end_of_dir_alloc:	
  7545                           
  7546                           	psect	text15
  7547  1006                     __ptext15:	
  7548 ;; *************** function _dir_sdi *****************
  7549 ;; Defined at:
  7550 ;;		line 1080 in file "ff.c"
  7551 ;; Parameters:    Size  Location     Type
  7552 ;;  dp              2   74[BANK0 ] PTR struct .
  7553 ;;		 -> f_open@dj(22), 
  7554 ;;  idx             2   76[BANK0 ] unsigned int 
  7555 ;; Auto vars:     Size  Location     Type
  7556 ;;  clst            4   16[BANK1 ] unsigned long 
  7557 ;;  sect            4   12[BANK1 ] unsigned long 
  7558 ;;  ic              2   10[BANK1 ] unsigned int 
  7559 ;; Return value:  Size  Location     Type
  7560 ;;                  1    wreg      enum E88
  7561 ;; Registers used:
  7562 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7563 ;; Tracked objects:
  7564 ;;		On entry : 1F/0
  7565 ;;		On exit  : 1E/0
  7566 ;;		Unchanged: 0/0
  7567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7568 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7569 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7570 ;;      Temps:          0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7571 ;;      Totals:         0       4      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7572 ;;Total ram usage:       24 bytes
  7573 ;; Hardware stack levels used:    1
  7574 ;; Hardware stack levels required when called:    9
  7575 ;; This function calls:
  7576 ;;		_clust2sect
  7577 ;;		_get_fat
  7578 ;; This function is called by:
  7579 ;;		_dir_alloc
  7580 ;;		_dir_find
  7581 ;;		_follow_path
  7582 ;; This function uses a non-reentrant model
  7583 ;;
  7584                           
  7585                           
  7586                           ;psect for function _dir_sdi
  7587  1006                     _dir_sdi:	
  7588                           
  7589                           ;ff.c: 1085: DWORD clst, sect;;ff.c: 1086: UINT ic;;ff.c: 1089: dp->index = (WORD)idx;
  7590                           
  7591                           ;incstack = 0
  7592                           ; Regs used in _dir_sdi: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7593  1006  086A               	movf	dir_sdi@dp,w
  7594  1007  0086               	movwf	6
  7595  1008  086B               	movf	dir_sdi@dp+1,w
  7596  1009  0087               	movwf	7
  7597  100A  3144               	addfsr 1,4
  7598  100B  086C               	movf	dir_sdi@idx,w
  7599  100C  3FC0               	movwi [0]fsr1
  7600  100D  086D               	movf	dir_sdi@idx+1,w
  7601  100E  3FC1               	movwi [1]fsr1
  7602                           
  7603                           ;ff.c: 1090: clst = dp->sclust;
  7604  100F  086A               	movf	dir_sdi@dp,w
  7605  1010  0086               	movwf	6
  7606  1011  086B               	movf	dir_sdi@dp+1,w
  7607  1012  0087               	movwf	7
  7608  1013  3146               	addfsr 1,6
  7609  1014  3F40               	moviw [0]fsr1
  7610  1015  0021               	movlb	1	; select bank1
  7611  1016  00B0               	movwf	dir_sdi@clst^(0+128)
  7612  1017  3F41               	moviw [1]fsr1
  7613  1018  00B1               	movwf	(dir_sdi@clst+1)^(0+128)
  7614  1019  3F42               	moviw [2]fsr1
  7615  101A  00B2               	movwf	(dir_sdi@clst+2)^(0+128)
  7616  101B  3F43               	moviw [3]fsr1
  7617  101C  00B3               	movwf	(dir_sdi@clst+3)^(0+128)
  7618                           
  7619                           ;ff.c: 1091: if (clst == 1 || clst >= dp->fs->n_fatent)
  7620  101D  0330               	decf	dir_sdi@clst^(0+128),w
  7621  101E  0431               	iorwf	(dir_sdi@clst+1)^(0+128),w
  7622  101F  0432               	iorwf	(dir_sdi@clst+2)^(0+128),w
  7623  1020  0433               	iorwf	(dir_sdi@clst+3)^(0+128),w
  7624  1021  1903               	btfsc	3,2
  7625  1022  284A               	goto	l4402
  7626  1023  0020               	movlb	0	; select bank0
  7627  1024  086A               	movf	dir_sdi@dp,w
  7628  1025  0086               	movwf	6
  7629  1026  086B               	movf	dir_sdi@dp+1,w
  7630  1027  0087               	movwf	7
  7631  1028  3F40               	moviw [0]fsr1
  7632  1029  0021               	movlb	1	; select bank1
  7633  102A  00A0               	movwf	??_dir_sdi^(0+128)
  7634  102B  3F41               	moviw [1]fsr1
  7635  102C  00A1               	movwf	(??_dir_sdi^(0+128)+1)
  7636  102D  0820               	movf	??_dir_sdi^(0+128),w
  7637  102E  0086               	movwf	6
  7638  102F  0821               	movf	(??_dir_sdi+1)^(0+128),w
  7639  1030  0087               	movwf	7
  7640  1031  3152               	addfsr 1,18
  7641  1032  3F40               	moviw [0]fsr1
  7642  1033  00A2               	movwf	(??_dir_sdi+2)^(0+128)
  7643  1034  3F41               	moviw [1]fsr1
  7644  1035  00A3               	movwf	((??_dir_sdi+2)^(0+128)+1)
  7645  1036  3F42               	moviw [2]fsr1
  7646  1037  00A4               	movwf	((??_dir_sdi+2)^(0+128)+2)
  7647  1038  3F43               	moviw [3]fsr1
  7648  1039  00A5               	movwf	((??_dir_sdi+2)^(0+128)+3)
  7649  103A  0825               	movf	(??_dir_sdi+5)^(0+128),w
  7650  103B  0233               	subwf	(dir_sdi@clst+3)^(0+128),w
  7651  103C  1D03               	skipz
  7652  103D  2848               	goto	u5765
  7653  103E  0824               	movf	(??_dir_sdi+4)^(0+128),w
  7654  103F  0232               	subwf	(dir_sdi@clst+2)^(0+128),w
  7655  1040  1D03               	skipz
  7656  1041  2848               	goto	u5765
  7657  1042  0823               	movf	(??_dir_sdi+3)^(0+128),w
  7658  1043  0231               	subwf	(dir_sdi@clst+1)^(0+128),w
  7659  1044  1D03               	skipz
  7660  1045  2848               	goto	u5765
  7661  1046  0822               	movf	(??_dir_sdi+2)^(0+128),w
  7662  1047  0230               	subwf	dir_sdi@clst^(0+128),w
  7663  1048                     u5765:	
  7664  1048  1C03               	skipc
  7665  1049  284C               	goto	l4406
  7666  104A                     l4402:	
  7667                           
  7668                           ;ff.c: 1092: return FR_INT_ERR;
  7669  104A  3002               	movlw	2
  7670  104B  0008               	return
  7671  104C                     l4406:	
  7672                           
  7673                           ;ff.c: 1093: if (!clst && dp->fs->fs_type == 3)
  7674  104C  0833               	movf	(dir_sdi@clst+3)^(0+128),w
  7675  104D  0432               	iorwf	(dir_sdi@clst+2)^(0+128),w
  7676  104E  0431               	iorwf	(dir_sdi@clst+1)^(0+128),w
  7677  104F  0430               	iorwf	dir_sdi@clst^(0+128),w
  7678  1050  1D03               	skipz
  7679  1051  287C               	goto	l4412
  7680  1052  0020               	movlb	0	; select bank0
  7681  1053  086A               	movf	dir_sdi@dp,w
  7682  1054  0086               	movwf	6
  7683  1055  086B               	movf	dir_sdi@dp+1,w
  7684  1056  0087               	movwf	7
  7685  1057  3F40               	moviw [0]fsr1
  7686  1058  0021               	movlb	1	; select bank1
  7687  1059  00A0               	movwf	??_dir_sdi^(0+128)
  7688  105A  3F41               	moviw [1]fsr1
  7689  105B  00A1               	movwf	(??_dir_sdi^(0+128)+1)
  7690  105C  0820               	movf	??_dir_sdi^(0+128),w
  7691  105D  0086               	movwf	6
  7692  105E  0821               	movf	(??_dir_sdi+1)^(0+128),w
  7693  105F  0087               	movwf	7
  7694  1060  3003               	movlw	3
  7695  1061  0601               	xorwf	1,w
  7696  1062  1D03               	btfss	3,2
  7697  1063  287C               	goto	l4412
  7698                           
  7699                           ;ff.c: 1094: clst = dp->fs->dirbase;
  7700  1064  0020               	movlb	0	; select bank0
  7701  1065  086A               	movf	dir_sdi@dp,w
  7702  1066  0086               	movwf	6
  7703  1067  086B               	movf	dir_sdi@dp+1,w
  7704  1068  0087               	movwf	7
  7705  1069  3F40               	moviw [0]fsr1
  7706  106A  0021               	movlb	1	; select bank1
  7707  106B  00A0               	movwf	??_dir_sdi^(0+128)
  7708  106C  3F41               	moviw [1]fsr1
  7709  106D  00A1               	movwf	(??_dir_sdi^(0+128)+1)
  7710  106E  0820               	movf	??_dir_sdi^(0+128),w
  7711  106F  3E22               	addlw	34
  7712  1070  0086               	movwf	6
  7713  1071  3000               	movlw	0
  7714  1072  3D21               	addwfc	(??_dir_sdi+1)^(0+128),w
  7715  1073  0087               	movwf	7
  7716  1074  3F40               	moviw [0]fsr1
  7717  1075  00B0               	movwf	dir_sdi@clst^(0+128)
  7718  1076  3F41               	moviw [1]fsr1
  7719  1077  00B1               	movwf	(dir_sdi@clst+1)^(0+128)
  7720  1078  3F42               	moviw [2]fsr1
  7721  1079  00B2               	movwf	(dir_sdi@clst+2)^(0+128)
  7722  107A  3F43               	moviw [3]fsr1
  7723  107B  00B3               	movwf	(dir_sdi@clst+3)^(0+128)
  7724  107C                     l4412:	
  7725                           
  7726                           ;ff.c: 1096: if (clst == 0) {
  7727  107C  0833               	movf	(dir_sdi@clst+3)^(0+128),w
  7728  107D  0432               	iorwf	(dir_sdi@clst+2)^(0+128),w
  7729  107E  0431               	iorwf	(dir_sdi@clst+1)^(0+128),w
  7730  107F  0430               	iorwf	dir_sdi@clst^(0+128),w
  7731  1080  1D03               	skipz
  7732  1081  28B8               	goto	l4422
  7733                           
  7734                           ;ff.c: 1097: if (idx >= dp->fs->n_rootdir)
  7735  1082  0020               	movlb	0	; select bank0
  7736  1083  086A               	movf	dir_sdi@dp,w
  7737  1084  0086               	movwf	6
  7738  1085  086B               	movf	dir_sdi@dp+1,w
  7739  1086  0087               	movwf	7
  7740  1087  3F40               	moviw [0]fsr1
  7741  1088  0021               	movlb	1	; select bank1
  7742  1089  00A0               	movwf	??_dir_sdi^(0+128)
  7743  108A  3F41               	moviw [1]fsr1
  7744  108B  00A1               	movwf	(??_dir_sdi^(0+128)+1)
  7745  108C  0820               	movf	??_dir_sdi^(0+128),w
  7746  108D  0086               	movwf	6
  7747  108E  0821               	movf	(??_dir_sdi+1)^(0+128),w
  7748  108F  0087               	movwf	7
  7749  1090  3148               	addfsr 1,8
  7750  1091  3F40               	moviw [0]fsr1
  7751  1092  00A2               	movwf	(??_dir_sdi+2)^(0+128)
  7752  1093  3F41               	moviw [1]fsr1
  7753  1094  00A3               	movwf	((??_dir_sdi+2)^(0+128)+1)
  7754  1095  0823               	movf	(??_dir_sdi+3)^(0+128),w
  7755  1096  0020               	movlb	0	; select bank0
  7756  1097  026D               	subwf	dir_sdi@idx+1,w
  7757  1098  1D03               	skipz
  7758  1099  289E               	goto	u5805
  7759  109A  0021               	movlb	1	; select bank1
  7760  109B  0822               	movf	(??_dir_sdi+2)^(0+128),w
  7761  109C  0020               	movlb	0	; select bank0
  7762  109D  026C               	subwf	dir_sdi@idx,w
  7763  109E                     u5805:	
  7764  109E  1803               	btfsc	3,0
  7765  109F  284A               	goto	l4402
  7766                           
  7767                           ;ff.c: 1099: sect = dp->fs->dirbase;
  7768  10A0  086A               	movf	dir_sdi@dp,w
  7769  10A1  0086               	movwf	6
  7770  10A2  086B               	movf	dir_sdi@dp+1,w
  7771  10A3  0087               	movwf	7
  7772  10A4  3F40               	moviw [0]fsr1
  7773  10A5  0021               	movlb	1	; select bank1
  7774  10A6  00A0               	movwf	??_dir_sdi^(0+128)
  7775  10A7  3F41               	moviw [1]fsr1
  7776  10A8  00A1               	movwf	(??_dir_sdi^(0+128)+1)
  7777  10A9  0820               	movf	??_dir_sdi^(0+128),w
  7778  10AA  3E22               	addlw	34
  7779  10AB  0086               	movwf	6
  7780  10AC  3000               	movlw	0
  7781  10AD  3D21               	addwfc	(??_dir_sdi+1)^(0+128),w
  7782  10AE  0087               	movwf	7
  7783  10AF  3F40               	moviw [0]fsr1
  7784  10B0  00AC               	movwf	dir_sdi@sect^(0+128)
  7785  10B1  3F41               	moviw [1]fsr1
  7786  10B2  00AD               	movwf	(dir_sdi@sect+1)^(0+128)
  7787  10B3  3F42               	moviw [2]fsr1
  7788  10B4  00AE               	movwf	(dir_sdi@sect+2)^(0+128)
  7789  10B5  3F43               	moviw [3]fsr1
  7790  10B6  00AF               	movwf	(dir_sdi@sect+3)^(0+128)
  7791                           
  7792                           ;ff.c: 1100: }
  7793  10B7  2981               	goto	l4444
  7794  10B8                     l4422:	
  7795                           
  7796                           ;ff.c: 1101: else {;ff.c: 1102: ic = ((UINT)512) / 32 * dp->fs->csize;
  7797  10B8  0020               	movlb	0	; select bank0
  7798  10B9  086A               	movf	dir_sdi@dp,w
  7799  10BA  0086               	movwf	6
  7800  10BB  086B               	movf	dir_sdi@dp+1,w
  7801  10BC  0087               	movwf	7
  7802  10BD  3F40               	moviw [0]fsr1
  7803  10BE  0021               	movlb	1	; select bank1
  7804  10BF  00A0               	movwf	??_dir_sdi^(0+128)
  7805  10C0  3F41               	moviw [1]fsr1
  7806  10C1  00A1               	movwf	(??_dir_sdi^(0+128)+1)
  7807  10C2  0820               	movf	??_dir_sdi^(0+128),w
  7808  10C3  0086               	movwf	6
  7809  10C4  0821               	movf	(??_dir_sdi+1)^(0+128),w
  7810  10C5  0087               	movwf	7
  7811  10C6  3142               	addfsr 1,2
  7812  10C7  0801               	movf	1,w
  7813  10C8  00A2               	movwf	(??_dir_sdi+2)^(0+128)
  7814  10C9  01A3               	clrf	((??_dir_sdi+2)^(0+128)+1)
  7815  10CA  0EA2               	swapf	(??_dir_sdi+2)^(0+128),f
  7816  10CB  0EA3               	swapf	((??_dir_sdi+2)^(0+128)+1),f
  7817  10CC  30F0               	movlw	240
  7818  10CD  05A3               	andwf	((??_dir_sdi+2)^(0+128)+1),f
  7819  10CE  0822               	movf	(??_dir_sdi+2)^(0+128),w
  7820  10CF  390F               	andlw	15
  7821  10D0  04A3               	iorwf	((??_dir_sdi+2)^(0+128)+1),f
  7822  10D1  30F0               	movlw	240
  7823  10D2  05A2               	andwf	(??_dir_sdi+2)^(0+128),f
  7824  10D3  0822               	movf	(??_dir_sdi+2)^(0+128),w
  7825  10D4  00AA               	movwf	dir_sdi@ic^(0+128)
  7826  10D5  0823               	movf	(??_dir_sdi+3)^(0+128),w
  7827  10D6  00AB               	movwf	(dir_sdi@ic+1)^(0+128)
  7828  10D7                     l440:	
  7829                           ;ff.c: 1103: while (idx >= ic) {
  7830                           
  7831  10D7  0021               	movlb	1	; select bank1
  7832  10D8  082B               	movf	(dir_sdi@ic+1)^(0+128),w
  7833  10D9  0020               	movlb	0	; select bank0
  7834  10DA  026D               	subwf	dir_sdi@idx+1,w
  7835  10DB  1D03               	skipz
  7836  10DC  28E1               	goto	u5845
  7837  10DD  0021               	movlb	1	; select bank1
  7838  10DE  082A               	movf	dir_sdi@ic^(0+128),w
  7839  10DF  0020               	movlb	0	; select bank0
  7840  10E0  026C               	subwf	dir_sdi@idx,w
  7841  10E1                     u5845:	
  7842  10E1  1C03               	btfss	3,0
  7843  10E2  2957               	goto	l4442
  7844                           
  7845                           ;ff.c: 1104: clst = get_fat(dp->fs, clst);
  7846  10E3  086A               	movf	dir_sdi@dp,w
  7847  10E4  0086               	movwf	6
  7848  10E5  086B               	movf	dir_sdi@dp+1,w
  7849  10E6  0087               	movwf	7
  7850  10E7  3F40               	moviw [0]fsr1
  7851  10E8  00CE               	movwf	get_fat@fs
  7852  10E9  3F41               	moviw [1]fsr1
  7853  10EA  00CF               	movwf	get_fat@fs+1
  7854  10EB  0021               	movlb	1	; select bank1
  7855  10EC  0833               	movf	(dir_sdi@clst+3)^(0+128),w
  7856  10ED  0020               	movlb	0	; select bank0
  7857  10EE  00D3               	movwf	get_fat@clst+3
  7858  10EF  0021               	movlb	1	; select bank1
  7859  10F0  0832               	movf	(dir_sdi@clst+2)^(0+128),w
  7860  10F1  0020               	movlb	0	; select bank0
  7861  10F2  00D2               	movwf	get_fat@clst+2
  7862  10F3  0021               	movlb	1	; select bank1
  7863  10F4  0831               	movf	(dir_sdi@clst+1)^(0+128),w
  7864  10F5  0020               	movlb	0	; select bank0
  7865  10F6  00D1               	movwf	get_fat@clst+1
  7866  10F7  0021               	movlb	1	; select bank1
  7867  10F8  0830               	movf	dir_sdi@clst^(0+128),w
  7868  10F9  0020               	movlb	0	; select bank0
  7869  10FA  00D0               	movwf	get_fat@clst
  7870  10FB  31A6  2622  3190   	fcall	_get_fat
  7871  10FE  0851               	movf	?_get_fat+3,w
  7872  10FF  0021               	movlb	1	; select bank1
  7873  1100  00B3               	movwf	(dir_sdi@clst+3)^(0+128)
  7874  1101  0020               	movlb	0	; select bank0
  7875  1102  0850               	movf	?_get_fat+2,w
  7876  1103  0021               	movlb	1	; select bank1
  7877  1104  00B2               	movwf	(dir_sdi@clst+2)^(0+128)
  7878  1105  0020               	movlb	0	; select bank0
  7879  1106  084F               	movf	?_get_fat+1,w
  7880  1107  0021               	movlb	1	; select bank1
  7881  1108  00B1               	movwf	(dir_sdi@clst+1)^(0+128)
  7882  1109  0020               	movlb	0	; select bank0
  7883  110A  084E               	movf	?_get_fat,w
  7884  110B  0021               	movlb	1	; select bank1
  7885  110C  00B0               	movwf	dir_sdi@clst^(0+128)
  7886                           
  7887                           ;ff.c: 1105: if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
  7888  110D  0A30               	incf	dir_sdi@clst^(0+128),w
  7889  110E  1D03               	skipz
  7890  110F  291B               	goto	l4432
  7891  1110  0A31               	incf	(dir_sdi@clst+1)^(0+128),w
  7892  1111  1D03               	skipz
  7893  1112  291B               	goto	l4432
  7894  1113  0A32               	incf	(dir_sdi@clst+2)^(0+128),w
  7895  1114  1D03               	skipz
  7896  1115  291B               	goto	l4432
  7897  1116  0A33               	incf	(dir_sdi@clst+3)^(0+128),w
  7898  1117  1D03               	btfss	3,2
  7899  1118  291B               	goto	l4432
  7900  1119  3001               	movlw	1
  7901  111A  0008               	return
  7902  111B                     l4432:	
  7903                           
  7904                           ;ff.c: 1106: if (clst < 2 || clst >= dp->fs->n_fatent)
  7905  111B  0833               	movf	(dir_sdi@clst+3)^(0+128),w
  7906  111C  1D03               	btfss	3,2
  7907  111D  2928               	goto	l4434
  7908  111E  0832               	movf	(dir_sdi@clst+2)^(0+128),w
  7909  111F  1D03               	btfss	3,2
  7910  1120  2928               	goto	l4434
  7911  1121  0831               	movf	(dir_sdi@clst+1)^(0+128),w
  7912  1122  1D03               	btfss	3,2
  7913  1123  2928               	goto	l4434
  7914  1124  3002               	movlw	2
  7915  1125  0230               	subwf	dir_sdi@clst^(0+128),w
  7916  1126  1C03               	btfss	3,0
  7917  1127  284A               	goto	l4402
  7918  1128                     l4434:	
  7919  1128  0020               	movlb	0	; select bank0
  7920  1129  086A               	movf	dir_sdi@dp,w
  7921  112A  0086               	movwf	6
  7922  112B  086B               	movf	dir_sdi@dp+1,w
  7923  112C  0087               	movwf	7
  7924  112D  3F40               	moviw [0]fsr1
  7925  112E  0021               	movlb	1	; select bank1
  7926  112F  00A0               	movwf	??_dir_sdi^(0+128)
  7927  1130  3F41               	moviw [1]fsr1
  7928  1131  00A1               	movwf	(??_dir_sdi^(0+128)+1)
  7929  1132  0820               	movf	??_dir_sdi^(0+128),w
  7930  1133  0086               	movwf	6
  7931  1134  0821               	movf	(??_dir_sdi+1)^(0+128),w
  7932  1135  0087               	movwf	7
  7933  1136  3152               	addfsr 1,18
  7934  1137  3F40               	moviw [0]fsr1
  7935  1138  00A2               	movwf	(??_dir_sdi+2)^(0+128)
  7936  1139  3F41               	moviw [1]fsr1
  7937  113A  00A3               	movwf	((??_dir_sdi+2)^(0+128)+1)
  7938  113B  3F42               	moviw [2]fsr1
  7939  113C  00A4               	movwf	((??_dir_sdi+2)^(0+128)+2)
  7940  113D  3F43               	moviw [3]fsr1
  7941  113E  00A5               	movwf	((??_dir_sdi+2)^(0+128)+3)
  7942  113F  0825               	movf	(??_dir_sdi+5)^(0+128),w
  7943  1140  0233               	subwf	(dir_sdi@clst+3)^(0+128),w
  7944  1141  1D03               	skipz
  7945  1142  294D               	goto	u5835
  7946  1143  0824               	movf	(??_dir_sdi+4)^(0+128),w
  7947  1144  0232               	subwf	(dir_sdi@clst+2)^(0+128),w
  7948  1145  1D03               	skipz
  7949  1146  294D               	goto	u5835
  7950  1147  0823               	movf	(??_dir_sdi+3)^(0+128),w
  7951  1148  0231               	subwf	(dir_sdi@clst+1)^(0+128),w
  7952  1149  1D03               	skipz
  7953  114A  294D               	goto	u5835
  7954  114B  0822               	movf	(??_dir_sdi+2)^(0+128),w
  7955  114C  0230               	subwf	dir_sdi@clst^(0+128),w
  7956  114D                     u5835:	
  7957  114D  1803               	btfsc	3,0
  7958  114E  284A               	goto	l4402
  7959                           
  7960                           ;ff.c: 1108: idx -= ic;
  7961  114F  082A               	movf	dir_sdi@ic^(0+128),w
  7962  1150  0020               	movlb	0	; select bank0
  7963  1151  02EC               	subwf	dir_sdi@idx,f
  7964  1152  0021               	movlb	1	; select bank1
  7965  1153  082B               	movf	(dir_sdi@ic+1)^(0+128),w
  7966  1154  0020               	movlb	0	; select bank0
  7967  1155  3BED               	subwfb	dir_sdi@idx+1,f
  7968  1156  28D7               	goto	l440
  7969  1157                     l4442:	
  7970                           
  7971                           ;ff.c: 1109: };ff.c: 1110: sect = clust2sect(dp->fs, clst);
  7972  1157  086A               	movf	dir_sdi@dp,w
  7973  1158  0086               	movwf	6
  7974  1159  086B               	movf	dir_sdi@dp+1,w
  7975  115A  0087               	movwf	7
  7976  115B  3F40               	moviw [0]fsr1
  7977  115C  00A0               	movwf	clust2sect@fs
  7978  115D  3F41               	moviw [1]fsr1
  7979  115E  00A1               	movwf	clust2sect@fs+1
  7980  115F  0021               	movlb	1	; select bank1
  7981  1160  0833               	movf	(dir_sdi@clst+3)^(0+128),w
  7982  1161  0020               	movlb	0	; select bank0
  7983  1162  00A5               	movwf	clust2sect@clst+3
  7984  1163  0021               	movlb	1	; select bank1
  7985  1164  0832               	movf	(dir_sdi@clst+2)^(0+128),w
  7986  1165  0020               	movlb	0	; select bank0
  7987  1166  00A4               	movwf	clust2sect@clst+2
  7988  1167  0021               	movlb	1	; select bank1
  7989  1168  0831               	movf	(dir_sdi@clst+1)^(0+128),w
  7990  1169  0020               	movlb	0	; select bank0
  7991  116A  00A3               	movwf	clust2sect@clst+1
  7992  116B  0021               	movlb	1	; select bank1
  7993  116C  0830               	movf	dir_sdi@clst^(0+128),w
  7994  116D  0020               	movlb	0	; select bank0
  7995  116E  00A2               	movwf	clust2sect@clst
  7996  116F  31AF  2786  3190   	fcall	_clust2sect
  7997  1172  0823               	movf	?_clust2sect+3,w
  7998  1173  0021               	movlb	1	; select bank1
  7999  1174  00AF               	movwf	(dir_sdi@sect+3)^(0+128)
  8000  1175  0020               	movlb	0	; select bank0
  8001  1176  0822               	movf	?_clust2sect+2,w
  8002  1177  0021               	movlb	1	; select bank1
  8003  1178  00AE               	movwf	(dir_sdi@sect+2)^(0+128)
  8004  1179  0020               	movlb	0	; select bank0
  8005  117A  0821               	movf	?_clust2sect+1,w
  8006  117B  0021               	movlb	1	; select bank1
  8007  117C  00AD               	movwf	(dir_sdi@sect+1)^(0+128)
  8008  117D  0020               	movlb	0	; select bank0
  8009  117E  0820               	movf	?_clust2sect,w
  8010  117F  0021               	movlb	1	; select bank1
  8011  1180  00AC               	movwf	dir_sdi@sect^(0+128)
  8012  1181                     l4444:	
  8013                           
  8014                           ;ff.c: 1111: };ff.c: 1112: dp->clust = clst;
  8015  1181  0020               	movlb	0	; select bank0
  8016  1182  086A               	movf	dir_sdi@dp,w
  8017  1183  0086               	movwf	6
  8018  1184  086B               	movf	dir_sdi@dp+1,w
  8019  1185  0087               	movwf	7
  8020  1186  314A               	addfsr 1,10
  8021  1187  0021               	movlb	1	; select bank1
  8022  1188  0830               	movf	dir_sdi@clst^(0+128),w
  8023  1189  3FC0               	movwi [0]fsr1
  8024  118A  0831               	movf	(dir_sdi@clst+1)^(0+128),w
  8025  118B  3FC1               	movwi [1]fsr1
  8026  118C  0832               	movf	(dir_sdi@clst+2)^(0+128),w
  8027  118D  3FC2               	movwi [2]fsr1
  8028  118E  0833               	movf	(dir_sdi@clst+3)^(0+128),w
  8029  118F  3FC3               	movwi [3]fsr1
  8030                           
  8031                           ;ff.c: 1113: if (!sect) return FR_INT_ERR;
  8032  1190  082F               	movf	(dir_sdi@sect+3)^(0+128),w
  8033  1191  042E               	iorwf	(dir_sdi@sect+2)^(0+128),w
  8034  1192  042D               	iorwf	(dir_sdi@sect+1)^(0+128),w
  8035  1193  042C               	iorwf	dir_sdi@sect^(0+128),w
  8036  1194  1903               	btfsc	3,2
  8037  1195  284A               	goto	l4402
  8038                           
  8039                           ;ff.c: 1114: dp->sect = sect + idx / (((UINT)512) / 32);
  8040  1196  082C               	movf	dir_sdi@sect^(0+128),w
  8041  1197  00A0               	movwf	??_dir_sdi^(0+128)
  8042  1198  082D               	movf	(dir_sdi@sect+1)^(0+128),w
  8043  1199  00A1               	movwf	(??_dir_sdi^(0+128)+1)
  8044  119A  082E               	movf	(dir_sdi@sect+2)^(0+128),w
  8045  119B  00A2               	movwf	(??_dir_sdi^(0+128)+2)
  8046  119C  082F               	movf	(dir_sdi@sect+3)^(0+128),w
  8047  119D  00A3               	movwf	(??_dir_sdi^(0+128)+3)
  8048  119E  0020               	movlb	0	; select bank0
  8049  119F  086D               	movf	dir_sdi@idx+1,w
  8050  11A0  0021               	movlb	1	; select bank1
  8051  11A1  00A5               	movwf	((??_dir_sdi+4)^(0+128)+1)
  8052  11A2  0020               	movlb	0	; select bank0
  8053  11A3  086C               	movf	dir_sdi@idx,w
  8054  11A4  0021               	movlb	1	; select bank1
  8055  11A5  00A4               	movwf	(??_dir_sdi+4)^(0+128)
  8056  11A6  3004               	movlw	4
  8057  11A7                     u5865:	
  8058  11A7  36A5               	lsrf	((??_dir_sdi+4)^(0+128)+1),f
  8059  11A8  0CA4               	rrf	(??_dir_sdi+4)^(0+128),f
  8060  11A9  0B89               	decfsz	9,f
  8061  11AA  29A7               	goto	u5865
  8062  11AB  0824               	movf	(??_dir_sdi+4)^(0+128),w
  8063  11AC  00A6               	movwf	(??_dir_sdi+6)^(0+128)
  8064  11AD  0825               	movf	(??_dir_sdi+5)^(0+128),w
  8065  11AE  00A7               	movwf	((??_dir_sdi+6)^(0+128)+1)
  8066  11AF  01A8               	clrf	((??_dir_sdi+6)^(0+128)+2)
  8067  11B0  01A9               	clrf	((??_dir_sdi+6)^(0+128)+3)
  8068  11B1  0826               	movf	(??_dir_sdi+6)^(0+128),w
  8069  11B2  07A0               	addwf	??_dir_sdi^(0+128),f
  8070  11B3  0827               	movf	(??_dir_sdi+7)^(0+128),w
  8071  11B4  3DA1               	addwfc	(??_dir_sdi^(0+128)+1),f
  8072  11B5  0828               	movf	(??_dir_sdi+8)^(0+128),w
  8073  11B6  3DA2               	addwfc	(??_dir_sdi^(0+128)+2),f
  8074  11B7  0829               	movf	(??_dir_sdi+9)^(0+128),w
  8075  11B8  3DA3               	addwfc	(??_dir_sdi^(0+128)+3),f
  8076  11B9  0020               	movlb	0	; select bank0
  8077  11BA  086A               	movf	dir_sdi@dp,w
  8078  11BB  0086               	movwf	6
  8079  11BC  086B               	movf	dir_sdi@dp+1,w
  8080  11BD  0087               	movwf	7
  8081  11BE  314E               	addfsr 1,14
  8082  11BF  0021               	movlb	1	; select bank1
  8083  11C0  0820               	movf	??_dir_sdi^(0+128),w
  8084  11C1  3FC0               	movwi [0]fsr1
  8085  11C2  0821               	movf	(??_dir_sdi+1)^(0+128),w
  8086  11C3  3FC1               	movwi [1]fsr1
  8087  11C4  0822               	movf	(??_dir_sdi+2)^(0+128),w
  8088  11C5  3FC2               	movwi [2]fsr1
  8089  11C6  0823               	movf	(??_dir_sdi+3)^(0+128),w
  8090  11C7  3FC3               	movwi [3]fsr1
  8091                           
  8092                           ;ff.c: 1115: dp->dir = dp->fs->win + (idx % (((UINT)512) / 32)) * 32;
  8093  11C8  300F               	movlw	15
  8094  11C9  0020               	movlb	0	; select bank0
  8095  11CA  056C               	andwf	dir_sdi@idx,w
  8096  11CB  0021               	movlb	1	; select bank1
  8097  11CC  00A0               	movwf	??_dir_sdi^(0+128)
  8098  11CD  3000               	movlw	0
  8099  11CE  0020               	movlb	0	; select bank0
  8100  11CF  056D               	andwf	dir_sdi@idx+1,w
  8101  11D0  0021               	movlb	1	; select bank1
  8102  11D1  00A1               	movwf	(??_dir_sdi+1)^(0+128)
  8103  11D2  3005               	movlw	5
  8104  11D3                     u5875:	
  8105  11D3  35A0               	lslf	??_dir_sdi^(0+128),f
  8106  11D4  0DA1               	rlf	(??_dir_sdi^(0+128)+1),f
  8107  11D5  0B89               	decfsz	9,f
  8108  11D6  29D3               	goto	u5875
  8109  11D7  0020               	movlb	0	; select bank0
  8110  11D8  086A               	movf	dir_sdi@dp,w
  8111  11D9  0086               	movwf	6
  8112  11DA  086B               	movf	dir_sdi@dp+1,w
  8113  11DB  0087               	movwf	7
  8114  11DC  3F40               	moviw [0]fsr1
  8115  11DD  0021               	movlb	1	; select bank1
  8116  11DE  00A2               	movwf	(??_dir_sdi+2)^(0+128)
  8117  11DF  3F41               	moviw [1]fsr1
  8118  11E0  00A3               	movwf	((??_dir_sdi+2)^(0+128)+1)
  8119  11E1  0820               	movf	??_dir_sdi^(0+128),w
  8120  11E2  0722               	addwf	(??_dir_sdi+2)^(0+128),w
  8121  11E3  00A4               	movwf	(??_dir_sdi+4)^(0+128)
  8122  11E4  0821               	movf	(??_dir_sdi+1)^(0+128),w
  8123  11E5  3D23               	addwfc	(??_dir_sdi+3)^(0+128),w
  8124  11E6  00A5               	movwf	(??_dir_sdi+5)^(0+128)
  8125  11E7  0824               	movf	(??_dir_sdi+4)^(0+128),w
  8126  11E8  3E2E               	addlw	46
  8127  11E9  00A6               	movwf	(??_dir_sdi+6)^(0+128)
  8128  11EA  3000               	movlw	0
  8129  11EB  3D25               	addwfc	(??_dir_sdi+5)^(0+128),w
  8130  11EC  00A7               	movwf	(??_dir_sdi+7)^(0+128)
  8131  11ED  0020               	movlb	0	; select bank0
  8132  11EE  086A               	movf	dir_sdi@dp,w
  8133  11EF  0086               	movwf	6
  8134  11F0  086B               	movf	dir_sdi@dp+1,w
  8135  11F1  0087               	movwf	7
  8136  11F2  3152               	addfsr 1,18
  8137  11F3  0021               	movlb	1	; select bank1
  8138  11F4  0826               	movf	(??_dir_sdi+6)^(0+128),w
  8139  11F5  3FC0               	movwi [0]fsr1
  8140  11F6  0827               	movf	(??_dir_sdi+7)^(0+128),w
  8141  11F7  3FC1               	movwi [1]fsr1
  8142                           
  8143                           ;ff.c: 1117: return FR_OK;
  8144  11F8  3000               	movlw	0
  8145  11F9  0008               	return
  8146  11FA                     __end_of_dir_sdi:	
  8147                           
  8148                           	psect	text16
  8149  11FA                     __ptext16:	
  8150 ;; *************** function _dir_next *****************
  8151 ;; Defined at:
  8152 ;;		line 1128 in file "ff.c"
  8153 ;; Parameters:    Size  Location     Type
  8154 ;;  dp              2   19[BANK1 ] PTR struct .
  8155 ;;		 -> f_open@dj(22), 
  8156 ;;  stretch         2   21[BANK1 ] int 
  8157 ;; Auto vars:     Size  Location     Type
  8158 ;;  clst            4   35[BANK1 ] unsigned long 
  8159 ;;  i               2   33[BANK1 ] unsigned int 
  8160 ;;  c               2   31[BANK1 ] unsigned int 
  8161 ;; Return value:  Size  Location     Type
  8162 ;;                  1    wreg      enum E88
  8163 ;; Registers used:
  8164 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8165 ;; Tracked objects:
  8166 ;;		On entry : 1F/1
  8167 ;;		On exit  : 1E/0
  8168 ;;		Unchanged: 0/0
  8169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8170 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8171 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8172 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8173 ;;      Totals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8174 ;;Total ram usage:       20 bytes
  8175 ;; Hardware stack levels used:    1
  8176 ;; Hardware stack levels required when called:   10
  8177 ;; This function calls:
  8178 ;;		_clust2sect
  8179 ;;		_create_chain
  8180 ;;		_get_fat
  8181 ;;		_mem_set
  8182 ;;		_sync_window
  8183 ;; This function is called by:
  8184 ;;		_dir_alloc
  8185 ;;		_dir_find
  8186 ;; This function uses a non-reentrant model
  8187 ;;
  8188                           
  8189                           
  8190                           ;psect for function _dir_next
  8191  11FA                     _dir_next:	
  8192                           
  8193                           ;ff.c: 1133: DWORD clst;;ff.c: 1134: UINT i;;ff.c: 1136: UINT c;;ff.c: 1140: i = dp->ind
      +                          ex + 1;
  8194                           
  8195                           ;incstack = 0
  8196                           ; Regs used in _dir_next: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8197  11FA  0833               	movf	dir_next@dp^(0+128),w
  8198  11FB  0086               	movwf	6
  8199  11FC  0834               	movf	(dir_next@dp+1)^(0+128),w
  8200  11FD  0087               	movwf	7
  8201  11FE  3144               	addfsr 1,4
  8202  11FF  3F40               	moviw [0]fsr1
  8203  1200  00B7               	movwf	??_dir_next^(0+128)
  8204  1201  3F41               	moviw [1]fsr1
  8205  1202  00B8               	movwf	(??_dir_next^(0+128)+1)
  8206  1203  0837               	movf	??_dir_next^(0+128),w
  8207  1204  3E01               	addlw	1
  8208  1205  00C1               	movwf	dir_next@i^(0+128)
  8209  1206  3000               	movlw	0
  8210  1207  3D38               	addwfc	(??_dir_next+1)^(0+128),w
  8211  1208  00C2               	movwf	(dir_next@i+1)^(0+128)
  8212                           
  8213                           ;ff.c: 1141: if (!(i & 0xFFFF) || !dp->sect)
  8214  1209  0841               	movf	dir_next@i^(0+128),w
  8215  120A  0442               	iorwf	(dir_next@i+1)^(0+128),w
  8216  120B  1903               	btfsc	3,2
  8217  120C  2A20               	goto	l4464
  8218  120D  0833               	movf	dir_next@dp^(0+128),w
  8219  120E  0086               	movwf	6
  8220  120F  0834               	movf	(dir_next@dp+1)^(0+128),w
  8221  1210  0087               	movwf	7
  8222  1211  314E               	addfsr 1,14
  8223  1212  3F40               	moviw [0]fsr1
  8224  1213  00B7               	movwf	??_dir_next^(0+128)
  8225  1214  3F41               	moviw [1]fsr1
  8226  1215  00B8               	movwf	(??_dir_next^(0+128)+1)
  8227  1216  3F42               	moviw [2]fsr1
  8228  1217  00B9               	movwf	(??_dir_next^(0+128)+2)
  8229  1218  3F43               	moviw [3]fsr1
  8230  1219  00BA               	movwf	(??_dir_next^(0+128)+3)
  8231  121A  083A               	movf	(??_dir_next+3)^(0+128),w
  8232  121B  0439               	iorwf	(??_dir_next+2)^(0+128),w
  8233  121C  0438               	iorwf	(??_dir_next+1)^(0+128),w
  8234  121D  0437               	iorwf	??_dir_next^(0+128),w
  8235  121E  1D03               	skipz
  8236  121F  2A22               	goto	l4468
  8237  1220                     l4464:	
  8238                           
  8239                           ;ff.c: 1142: return FR_NO_FILE;
  8240  1220  3004               	movlw	4
  8241  1221  0008               	return
  8242  1222                     l4468:	
  8243                           
  8244                           ;ff.c: 1144: if (!(i % (((UINT)512) / 32))) {
  8245  1222  0841               	movf	dir_next@i^(0+128),w
  8246  1223  390F               	andlw	15
  8247  1224  1D03               	btfss	3,2
  8248  1225  2C45               	goto	l4552
  8249                           
  8250                           ;ff.c: 1145: dp->sect++;
  8251  1226  0833               	movf	dir_next@dp^(0+128),w
  8252  1227  0086               	movwf	6
  8253  1228  0834               	movf	(dir_next@dp+1)^(0+128),w
  8254  1229  0087               	movwf	7
  8255  122A  314E               	addfsr 1,14
  8256  122B  3001               	movlw	1
  8257  122C  0781               	addwf	1,f
  8258  122D  3141               	addfsr 1,1
  8259  122E  3000               	movlw	0
  8260  122F  3D81               	addwfc	1,f
  8261  1230  3141               	addfsr 1,1
  8262  1231  3000               	movlw	0
  8263  1232  3D81               	addwfc	1,f
  8264  1233  3141               	addfsr 1,1
  8265  1234  3000               	movlw	0
  8266  1235  3D81               	addwfc	1,f
  8267                           
  8268                           ;ff.c: 1147: if (!dp->clust) {
  8269  1236  0833               	movf	dir_next@dp^(0+128),w
  8270  1237  0086               	movwf	6
  8271  1238  0834               	movf	(dir_next@dp+1)^(0+128),w
  8272  1239  0087               	movwf	7
  8273  123A  314A               	addfsr 1,10
  8274  123B  3F40               	moviw [0]fsr1
  8275  123C  00B7               	movwf	??_dir_next^(0+128)
  8276  123D  3F41               	moviw [1]fsr1
  8277  123E  00B8               	movwf	(??_dir_next^(0+128)+1)
  8278  123F  3F42               	moviw [2]fsr1
  8279  1240  00B9               	movwf	(??_dir_next^(0+128)+2)
  8280  1241  3F43               	moviw [3]fsr1
  8281  1242  00BA               	movwf	(??_dir_next^(0+128)+3)
  8282  1243  083A               	movf	(??_dir_next+3)^(0+128),w
  8283  1244  0439               	iorwf	(??_dir_next+2)^(0+128),w
  8284  1245  0438               	iorwf	(??_dir_next+1)^(0+128),w
  8285  1246  0437               	iorwf	??_dir_next^(0+128),w
  8286  1247  1D03               	skipz
  8287  1248  2A63               	goto	l4478
  8288                           
  8289                           ;ff.c: 1148: if (i >= dp->fs->n_rootdir)
  8290  1249  0833               	movf	dir_next@dp^(0+128),w
  8291  124A  0086               	movwf	6
  8292  124B  0834               	movf	(dir_next@dp+1)^(0+128),w
  8293  124C  0087               	movwf	7
  8294  124D  3F40               	moviw [0]fsr1
  8295  124E  00B7               	movwf	??_dir_next^(0+128)
  8296  124F  3F41               	moviw [1]fsr1
  8297  1250  00B8               	movwf	(??_dir_next^(0+128)+1)
  8298  1251  0837               	movf	??_dir_next^(0+128),w
  8299  1252  0086               	movwf	6
  8300  1253  0838               	movf	(??_dir_next+1)^(0+128),w
  8301  1254  0087               	movwf	7
  8302  1255  3148               	addfsr 1,8
  8303  1256  3F40               	moviw [0]fsr1
  8304  1257  00B9               	movwf	(??_dir_next+2)^(0+128)
  8305  1258  3F41               	moviw [1]fsr1
  8306  1259  00BA               	movwf	((??_dir_next+2)^(0+128)+1)
  8307  125A  083A               	movf	(??_dir_next+3)^(0+128),w
  8308  125B  0242               	subwf	(dir_next@i+1)^(0+128),w
  8309  125C  1D03               	skipz
  8310  125D  2A60               	goto	u5925
  8311  125E  0839               	movf	(??_dir_next+2)^(0+128),w
  8312  125F  0241               	subwf	dir_next@i^(0+128),w
  8313  1260                     u5925:	
  8314  1260  1803               	btfsc	3,0
  8315  1261  2A20               	goto	l4464
  8316  1262  2C45               	goto	l4552
  8317  1263                     l4478:	
  8318                           
  8319                           ;ff.c: 1151: else {;ff.c: 1152: if (((i / (((UINT)512) / 32)) & (dp->fs->csize - 1)) == 
      +                          0) {
  8320  1263  0842               	movf	(dir_next@i+1)^(0+128),w
  8321  1264  00B8               	movwf	(??_dir_next^(0+128)+1)
  8322  1265  0841               	movf	dir_next@i^(0+128),w
  8323  1266  00B7               	movwf	??_dir_next^(0+128)
  8324  1267  3004               	movlw	4
  8325  1268                     u5935:	
  8326  1268  36B8               	lsrf	(??_dir_next^(0+128)+1),f
  8327  1269  0CB7               	rrf	??_dir_next^(0+128),f
  8328  126A  0B89               	decfsz	9,f
  8329  126B  2A68               	goto	u5935
  8330  126C  0833               	movf	dir_next@dp^(0+128),w
  8331  126D  0086               	movwf	6
  8332  126E  0834               	movf	(dir_next@dp+1)^(0+128),w
  8333  126F  0087               	movwf	7
  8334  1270  3F40               	moviw [0]fsr1
  8335  1271  00B9               	movwf	(??_dir_next+2)^(0+128)
  8336  1272  3F41               	moviw [1]fsr1
  8337  1273  00BA               	movwf	((??_dir_next+2)^(0+128)+1)
  8338  1274  0839               	movf	(??_dir_next+2)^(0+128),w
  8339  1275  0086               	movwf	6
  8340  1276  083A               	movf	(??_dir_next+3)^(0+128),w
  8341  1277  0087               	movwf	7
  8342  1278  3142               	addfsr 1,2
  8343  1279  0801               	movf	1,w
  8344  127A  3EFF               	addlw	255
  8345  127B  00BB               	movwf	(??_dir_next+4)^(0+128)
  8346  127C  30FF               	movlw	255
  8347  127D  1803               	skipnc
  8348  127E  3000               	movlw	0
  8349  127F  00BC               	movwf	((??_dir_next+4)^(0+128)+1)
  8350  1280  0837               	movf	??_dir_next^(0+128),w
  8351  1281  053B               	andwf	(??_dir_next+4)^(0+128),w
  8352  1282  00BD               	movwf	(??_dir_next+6)^(0+128)
  8353  1283  0838               	movf	(??_dir_next+1)^(0+128),w
  8354  1284  053C               	andwf	(??_dir_next+5)^(0+128),w
  8355  1285  00BE               	movwf	(??_dir_next+7)^(0+128)
  8356  1286  083D               	movf	(??_dir_next+6)^(0+128),w
  8357  1287  043E               	iorwf	((??_dir_next+6)^(0+128)+1),w
  8358  1288  1D03               	btfss	3,2
  8359  1289  2C45               	goto	l4552
  8360                           
  8361                           ;ff.c: 1153: clst = get_fat(dp->fs, dp->clust);
  8362  128A  0833               	movf	dir_next@dp^(0+128),w
  8363  128B  0086               	movwf	6
  8364  128C  0834               	movf	(dir_next@dp+1)^(0+128),w
  8365  128D  0087               	movwf	7
  8366  128E  3F40               	moviw [0]fsr1
  8367  128F  0020               	movlb	0	; select bank0
  8368  1290  00CE               	movwf	get_fat@fs
  8369  1291  3F41               	moviw [1]fsr1
  8370  1292  00CF               	movwf	get_fat@fs+1
  8371  1293  0021               	movlb	1	; select bank1
  8372  1294  0833               	movf	dir_next@dp^(0+128),w
  8373  1295  0086               	movwf	6
  8374  1296  0834               	movf	(dir_next@dp+1)^(0+128),w
  8375  1297  0087               	movwf	7
  8376  1298  314A               	addfsr 1,10
  8377  1299  3F40               	moviw [0]fsr1
  8378  129A  0020               	movlb	0	; select bank0
  8379  129B  00D0               	movwf	get_fat@clst
  8380  129C  3F41               	moviw [1]fsr1
  8381  129D  00D1               	movwf	get_fat@clst+1
  8382  129E  3F42               	moviw [2]fsr1
  8383  129F  00D2               	movwf	get_fat@clst+2
  8384  12A0  3F43               	moviw [3]fsr1
  8385  12A1  00D3               	movwf	get_fat@clst+3
  8386  12A2  31A6  2622  3191   	fcall	_get_fat
  8387  12A5  0851               	movf	?_get_fat+3,w
  8388  12A6  0021               	movlb	1	; select bank1
  8389  12A7  00C6               	movwf	(dir_next@clst+3)^(0+128)
  8390  12A8  0020               	movlb	0	; select bank0
  8391  12A9  0850               	movf	?_get_fat+2,w
  8392  12AA  0021               	movlb	1	; select bank1
  8393  12AB  00C5               	movwf	(dir_next@clst+2)^(0+128)
  8394  12AC  0020               	movlb	0	; select bank0
  8395  12AD  084F               	movf	?_get_fat+1,w
  8396  12AE  0021               	movlb	1	; select bank1
  8397  12AF  00C4               	movwf	(dir_next@clst+1)^(0+128)
  8398  12B0  0020               	movlb	0	; select bank0
  8399  12B1  084E               	movf	?_get_fat,w
  8400  12B2  0021               	movlb	1	; select bank1
  8401  12B3  00C3               	movwf	dir_next@clst^(0+128)
  8402                           
  8403                           ;ff.c: 1154: if (clst <= 1) return FR_INT_ERR;
  8404  12B4  0846               	movf	(dir_next@clst+3)^(0+128),w
  8405  12B5  1D03               	btfss	3,2
  8406  12B6  2AC3               	goto	l4488
  8407  12B7  0845               	movf	(dir_next@clst+2)^(0+128),w
  8408  12B8  1D03               	btfss	3,2
  8409  12B9  2AC3               	goto	l4488
  8410  12BA  0844               	movf	(dir_next@clst+1)^(0+128),w
  8411  12BB  1D03               	btfss	3,2
  8412  12BC  2AC3               	goto	l4488
  8413  12BD  3002               	movlw	2
  8414  12BE  0243               	subwf	dir_next@clst^(0+128),w
  8415  12BF  1803               	btfsc	3,0
  8416  12C0  2AC3               	goto	l4488
  8417  12C1                     l4484:	
  8418  12C1  3002               	movlw	2
  8419  12C2  0008               	return
  8420  12C3                     l4488:	
  8421                           
  8422                           ;ff.c: 1155: if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
  8423  12C3  0A43               	incf	dir_next@clst^(0+128),w
  8424  12C4  1D03               	skipz
  8425  12C5  2AD1               	goto	l4494
  8426  12C6  0A44               	incf	(dir_next@clst+1)^(0+128),w
  8427  12C7  1D03               	skipz
  8428  12C8  2AD1               	goto	l4494
  8429  12C9  0A45               	incf	(dir_next@clst+2)^(0+128),w
  8430  12CA  1D03               	skipz
  8431  12CB  2AD1               	goto	l4494
  8432  12CC  0A46               	incf	(dir_next@clst+3)^(0+128),w
  8433  12CD  1D03               	btfss	3,2
  8434  12CE  2AD1               	goto	l4494
  8435  12CF                     l4490:	
  8436  12CF  3001               	movlw	1
  8437  12D0  0008               	return
  8438  12D1                     l4494:	
  8439                           
  8440                           ;ff.c: 1156: if (clst >= dp->fs->n_fatent) {
  8441  12D1  0833               	movf	dir_next@dp^(0+128),w
  8442  12D2  0086               	movwf	6
  8443  12D3  0834               	movf	(dir_next@dp+1)^(0+128),w
  8444  12D4  0087               	movwf	7
  8445  12D5  3F40               	moviw [0]fsr1
  8446  12D6  00B7               	movwf	??_dir_next^(0+128)
  8447  12D7  3F41               	moviw [1]fsr1
  8448  12D8  00B8               	movwf	(??_dir_next^(0+128)+1)
  8449  12D9  0837               	movf	??_dir_next^(0+128),w
  8450  12DA  0086               	movwf	6
  8451  12DB  0838               	movf	(??_dir_next+1)^(0+128),w
  8452  12DC  0087               	movwf	7
  8453  12DD  3152               	addfsr 1,18
  8454  12DE  3F40               	moviw [0]fsr1
  8455  12DF  00B9               	movwf	(??_dir_next+2)^(0+128)
  8456  12E0  3F41               	moviw [1]fsr1
  8457  12E1  00BA               	movwf	((??_dir_next+2)^(0+128)+1)
  8458  12E2  3F42               	moviw [2]fsr1
  8459  12E3  00BB               	movwf	((??_dir_next+2)^(0+128)+2)
  8460  12E4  3F43               	moviw [3]fsr1
  8461  12E5  00BC               	movwf	((??_dir_next+2)^(0+128)+3)
  8462  12E6  083C               	movf	(??_dir_next+5)^(0+128),w
  8463  12E7  0246               	subwf	(dir_next@clst+3)^(0+128),w
  8464  12E8  1D03               	skipz
  8465  12E9  2AF4               	goto	u5975
  8466  12EA  083B               	movf	(??_dir_next+4)^(0+128),w
  8467  12EB  0245               	subwf	(dir_next@clst+2)^(0+128),w
  8468  12EC  1D03               	skipz
  8469  12ED  2AF4               	goto	u5975
  8470  12EE  083A               	movf	(??_dir_next+3)^(0+128),w
  8471  12EF  0244               	subwf	(dir_next@clst+1)^(0+128),w
  8472  12F0  1D03               	skipz
  8473  12F1  2AF4               	goto	u5975
  8474  12F2  0839               	movf	(??_dir_next+2)^(0+128),w
  8475  12F3  0243               	subwf	dir_next@clst^(0+128),w
  8476  12F4                     u5975:	
  8477  12F4  1C03               	skipc
  8478  12F5  2C0D               	goto	l4548
  8479                           
  8480                           ;ff.c: 1158: if (!stretch) return FR_NO_FILE;
  8481  12F6  0835               	movf	dir_next@stretch^(0+128),w
  8482  12F7  0436               	iorwf	(dir_next@stretch+1)^(0+128),w
  8483  12F8  1903               	btfsc	3,2
  8484  12F9  2A20               	goto	l4464
  8485                           
  8486                           ;ff.c: 1159: clst = create_chain(dp->fs, dp->clust);
  8487  12FA  0833               	movf	dir_next@dp^(0+128),w
  8488  12FB  0086               	movwf	6
  8489  12FC  0834               	movf	(dir_next@dp+1)^(0+128),w
  8490  12FD  0087               	movwf	7
  8491  12FE  3F40               	moviw [0]fsr1
  8492  12FF  00A0               	movwf	create_chain@fs^(0+128)
  8493  1300  3F41               	moviw [1]fsr1
  8494  1301  00A1               	movwf	(create_chain@fs+1)^(0+128)
  8495  1302  0833               	movf	dir_next@dp^(0+128),w
  8496  1303  0086               	movwf	6
  8497  1304  0834               	movf	(dir_next@dp+1)^(0+128),w
  8498  1305  0087               	movwf	7
  8499  1306  314A               	addfsr 1,10
  8500  1307  3F40               	moviw [0]fsr1
  8501  1308  00A2               	movwf	create_chain@clst^(0+128)
  8502  1309  3F41               	moviw [1]fsr1
  8503  130A  00A3               	movwf	(create_chain@clst+1)^(0+128)
  8504  130B  3F42               	moviw [2]fsr1
  8505  130C  00A4               	movwf	(create_chain@clst+2)^(0+128)
  8506  130D  3F43               	moviw [3]fsr1
  8507  130E  00A5               	movwf	(create_chain@clst+3)^(0+128)
  8508  130F  3199  2167  3191   	fcall	_create_chain
  8509  1312  0823               	movf	(?_create_chain+3)^(0+128),w
  8510  1313  00C6               	movwf	(dir_next@clst+3)^(0+128)
  8511  1314  0822               	movf	(?_create_chain+2)^(0+128),w
  8512  1315  00C5               	movwf	(dir_next@clst+2)^(0+128)
  8513  1316  0821               	movf	(?_create_chain+1)^(0+128),w
  8514  1317  00C4               	movwf	(dir_next@clst+1)^(0+128)
  8515  1318  0820               	movf	?_create_chain^(0+128),w
  8516  1319  00C3               	movwf	dir_next@clst^(0+128)
  8517                           
  8518                           ;ff.c: 1160: if (clst == 0) return FR_DENIED;
  8519  131A  0846               	movf	(dir_next@clst+3)^(0+128),w
  8520  131B  0445               	iorwf	(dir_next@clst+2)^(0+128),w
  8521  131C  0444               	iorwf	(dir_next@clst+1)^(0+128),w
  8522  131D  0443               	iorwf	dir_next@clst^(0+128),w
  8523  131E  1D03               	skipz
  8524  131F  2B22               	goto	l4510
  8525  1320  3007               	movlw	7
  8526  1321  0008               	return
  8527  1322                     l4510:	
  8528                           
  8529                           ;ff.c: 1161: if (clst == 1) return FR_INT_ERR;
  8530  1322  0343               	decf	dir_next@clst^(0+128),w
  8531  1323  0444               	iorwf	(dir_next@clst+1)^(0+128),w
  8532  1324  0445               	iorwf	(dir_next@clst+2)^(0+128),w
  8533  1325  0446               	iorwf	(dir_next@clst+3)^(0+128),w
  8534  1326  1903               	btfsc	3,2
  8535  1327  2AC1               	goto	l4484
  8536                           
  8537                           ;ff.c: 1162: if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
  8538  1328  0A43               	incf	dir_next@clst^(0+128),w
  8539  1329  1D03               	skipz
  8540  132A  2B33               	goto	l4522
  8541  132B  0A44               	incf	(dir_next@clst+1)^(0+128),w
  8542  132C  1D03               	skipz
  8543  132D  2B33               	goto	l4522
  8544  132E  0A45               	incf	(dir_next@clst+2)^(0+128),w
  8545  132F  1903               	btfsc	3,2
  8546  1330  0A46               	incf	(dir_next@clst+3)^(0+128),w
  8547  1331  1903               	btfsc	3,2
  8548  1332  2ACF               	goto	l4490
  8549  1333                     l4522:	
  8550                           
  8551                           ;ff.c: 1164: if (sync_window(dp->fs)) return FR_DISK_ERR;
  8552  1333  0833               	movf	dir_next@dp^(0+128),w
  8553  1334  0086               	movwf	6
  8554  1335  0834               	movf	(dir_next@dp+1)^(0+128),w
  8555  1336  0087               	movwf	7
  8556  1337  3F40               	moviw [0]fsr1
  8557  1338  0020               	movlb	0	; select bank0
  8558  1339  00AE               	movwf	sync_window@fs
  8559  133A  3F41               	moviw [1]fsr1
  8560  133B  00AF               	movwf	sync_window@fs+1
  8561  133C  31A4  245B  3191   	fcall	_sync_window
  8562  133F  3A00               	xorlw	0
  8563  1340  1D03               	btfss	3,2
  8564  1341  2ACF               	goto	l4490
  8565                           
  8566                           ;ff.c: 1165: mem_set(dp->fs->win, 0, ((UINT)512));
  8567  1342  0021               	movlb	1	; select bank1
  8568  1343  0833               	movf	dir_next@dp^(0+128),w
  8569  1344  0086               	movwf	6
  8570  1345  0834               	movf	(dir_next@dp+1)^(0+128),w
  8571  1346  0087               	movwf	7
  8572  1347  3F40               	moviw [0]fsr1
  8573  1348  00B7               	movwf	??_dir_next^(0+128)
  8574  1349  3F41               	moviw [1]fsr1
  8575  134A  00B8               	movwf	(??_dir_next^(0+128)+1)
  8576  134B  0837               	movf	??_dir_next^(0+128),w
  8577  134C  3E2E               	addlw	46
  8578  134D  00F0               	movwf	mem_set@dst
  8579  134E  3000               	movlw	0
  8580  134F  3D38               	addwfc	(??_dir_next+1)^(0+128),w
  8581  1350  00F1               	movwf	mem_set@dst+1
  8582  1351  3000               	movlw	0
  8583  1352  00F2               	movwf	mem_set@val
  8584  1353  00F3               	movwf	mem_set@val+1
  8585  1354  3000               	movlw	0
  8586  1355  00F4               	movwf	mem_set@cnt
  8587  1356  3002               	movlw	2
  8588  1357  00F5               	movwf	mem_set@cnt+1
  8589  1358  31AA  22F2  3191   	fcall	_mem_set
  8590                           
  8591                           ;ff.c: 1166: dp->fs->winsect = clust2sect(dp->fs, clst);
  8592  135B  0021               	movlb	1	; select bank1
  8593  135C  0833               	movf	dir_next@dp^(0+128),w
  8594  135D  0086               	movwf	6
  8595  135E  0834               	movf	(dir_next@dp+1)^(0+128),w
  8596  135F  0087               	movwf	7
  8597  1360  3F40               	moviw [0]fsr1
  8598  1361  0020               	movlb	0	; select bank0
  8599  1362  00A0               	movwf	clust2sect@fs
  8600  1363  3F41               	moviw [1]fsr1
  8601  1364  00A1               	movwf	clust2sect@fs+1
  8602  1365  0021               	movlb	1	; select bank1
  8603  1366  0846               	movf	(dir_next@clst+3)^(0+128),w
  8604  1367  0020               	movlb	0	; select bank0
  8605  1368  00A5               	movwf	clust2sect@clst+3
  8606  1369  0021               	movlb	1	; select bank1
  8607  136A  0845               	movf	(dir_next@clst+2)^(0+128),w
  8608  136B  0020               	movlb	0	; select bank0
  8609  136C  00A4               	movwf	clust2sect@clst+2
  8610  136D  0021               	movlb	1	; select bank1
  8611  136E  0844               	movf	(dir_next@clst+1)^(0+128),w
  8612  136F  0020               	movlb	0	; select bank0
  8613  1370  00A3               	movwf	clust2sect@clst+1
  8614  1371  0021               	movlb	1	; select bank1
  8615  1372  0843               	movf	dir_next@clst^(0+128),w
  8616  1373  0020               	movlb	0	; select bank0
  8617  1374  00A2               	movwf	clust2sect@clst
  8618  1375  31AF  2786  3191   	fcall	_clust2sect
  8619  1378  0021               	movlb	1	; select bank1
  8620  1379  0833               	movf	dir_next@dp^(0+128),w
  8621  137A  0086               	movwf	6
  8622  137B  0834               	movf	(dir_next@dp+1)^(0+128),w
  8623  137C  0087               	movwf	7
  8624  137D  3F40               	moviw [0]fsr1
  8625  137E  00B7               	movwf	??_dir_next^(0+128)
  8626  137F  3F41               	moviw [1]fsr1
  8627  1380  00B8               	movwf	(??_dir_next^(0+128)+1)
  8628  1381  0837               	movf	??_dir_next^(0+128),w
  8629  1382  3E2A               	addlw	42
  8630  1383  0086               	movwf	6
  8631  1384  3000               	movlw	0
  8632  1385  3D38               	addwfc	(??_dir_next+1)^(0+128),w
  8633  1386  0087               	movwf	7
  8634  1387  0020               	movlb	0	; select bank0
  8635  1388  0820               	movf	?_clust2sect,w
  8636  1389  3FC0               	movwi [0]fsr1
  8637  138A  0821               	movf	?_clust2sect+1,w
  8638  138B  3FC1               	movwi [1]fsr1
  8639  138C  0822               	movf	?_clust2sect+2,w
  8640  138D  3FC2               	movwi [2]fsr1
  8641  138E  0823               	movf	?_clust2sect+3,w
  8642  138F  3FC3               	movwi [3]fsr1
  8643                           
  8644                           ;ff.c: 1167: for (c = 0; c < dp->fs->csize; c++) {
  8645  1390  0021               	movlb	1	; select bank1
  8646  1391  01BF               	clrf	dir_next@c^(0+128)
  8647  1392  01C0               	clrf	(dir_next@c+1)^(0+128)
  8648  1393                     l4544:	
  8649  1393  0833               	movf	dir_next@dp^(0+128),w
  8650  1394  0086               	movwf	6
  8651  1395  0834               	movf	(dir_next@dp+1)^(0+128),w
  8652  1396  0087               	movwf	7
  8653  1397  3F40               	moviw [0]fsr1
  8654  1398  00B7               	movwf	??_dir_next^(0+128)
  8655  1399  3F41               	moviw [1]fsr1
  8656  139A  00B8               	movwf	(??_dir_next^(0+128)+1)
  8657  139B  0837               	movf	??_dir_next^(0+128),w
  8658  139C  0086               	movwf	6
  8659  139D  0838               	movf	(??_dir_next+1)^(0+128),w
  8660  139E  0087               	movwf	7
  8661  139F  3142               	addfsr 1,2
  8662  13A0  0801               	movf	1,w
  8663  13A1  00B9               	movwf	(??_dir_next+2)^(0+128)
  8664  13A2  01BA               	clrf	((??_dir_next+2)^(0+128)+1)
  8665  13A3  083A               	movf	(??_dir_next+3)^(0+128),w
  8666  13A4  0240               	subwf	(dir_next@c+1)^(0+128),w
  8667  13A5  1D03               	skipz
  8668  13A6  2BA9               	goto	u6045
  8669  13A7  0839               	movf	(??_dir_next+2)^(0+128),w
  8670  13A8  023F               	subwf	dir_next@c^(0+128),w
  8671  13A9                     u6045:	
  8672  13A9  1803               	btfsc	3,0
  8673  13AA  2BED               	goto	l4546
  8674                           
  8675                           ;ff.c: 1168: dp->fs->wflag = 1;
  8676  13AB  0833               	movf	dir_next@dp^(0+128),w
  8677  13AC  0086               	movwf	6
  8678  13AD  0834               	movf	(dir_next@dp+1)^(0+128),w
  8679  13AE  0087               	movwf	7
  8680  13AF  3F40               	moviw [0]fsr1
  8681  13B0  00B7               	movwf	??_dir_next^(0+128)
  8682  13B1  3F41               	moviw [1]fsr1
  8683  13B2  00B8               	movwf	(??_dir_next^(0+128)+1)
  8684  13B3  0837               	movf	??_dir_next^(0+128),w
  8685  13B4  3E04               	addlw	4
  8686  13B5  00B9               	movwf	(??_dir_next+2)^(0+128)
  8687  13B6  3000               	movlw	0
  8688  13B7  3D38               	addwfc	(??_dir_next+1)^(0+128),w
  8689  13B8  00BA               	movwf	(??_dir_next+3)^(0+128)
  8690  13B9  0839               	movf	(??_dir_next+2)^(0+128),w
  8691  13BA  0086               	movwf	6
  8692  13BB  083A               	movf	(??_dir_next+3)^(0+128),w
  8693  13BC  0087               	movwf	7
  8694  13BD  3001               	movlw	1
  8695  13BE  0081               	movwf	1
  8696                           
  8697                           ;ff.c: 1169: if (sync_window(dp->fs)) return FR_DISK_ERR;
  8698  13BF  0833               	movf	dir_next@dp^(0+128),w
  8699  13C0  0086               	movwf	6
  8700  13C1  0834               	movf	(dir_next@dp+1)^(0+128),w
  8701  13C2  0087               	movwf	7
  8702  13C3  3F40               	moviw [0]fsr1
  8703  13C4  0020               	movlb	0	; select bank0
  8704  13C5  00AE               	movwf	sync_window@fs
  8705  13C6  3F41               	moviw [1]fsr1
  8706  13C7  00AF               	movwf	sync_window@fs+1
  8707  13C8  31A4  245B  3191   	fcall	_sync_window
  8708  13CB  3A00               	xorlw	0
  8709  13CC  1D03               	btfss	3,2
  8710  13CD  2ACF               	goto	l4490
  8711                           
  8712                           ;ff.c: 1170: dp->fs->winsect++;
  8713  13CE  0021               	movlb	1	; select bank1
  8714  13CF  0833               	movf	dir_next@dp^(0+128),w
  8715  13D0  0086               	movwf	6
  8716  13D1  0834               	movf	(dir_next@dp+1)^(0+128),w
  8717  13D2  0087               	movwf	7
  8718  13D3  3F40               	moviw [0]fsr1
  8719  13D4  00B7               	movwf	??_dir_next^(0+128)
  8720  13D5  3F41               	moviw [1]fsr1
  8721  13D6  00B8               	movwf	(??_dir_next^(0+128)+1)
  8722  13D7  0837               	movf	??_dir_next^(0+128),w
  8723  13D8  3E2A               	addlw	42
  8724  13D9  0086               	movwf	6
  8725  13DA  3000               	movlw	0
  8726  13DB  3D38               	addwfc	(??_dir_next+1)^(0+128),w
  8727  13DC  0087               	movwf	7
  8728  13DD  3001               	movlw	1
  8729  13DE  0781               	addwf	1,f
  8730  13DF  3141               	addfsr 1,1
  8731  13E0  3000               	movlw	0
  8732  13E1  3D81               	addwfc	1,f
  8733  13E2  3141               	addfsr 1,1
  8734  13E3  3000               	movlw	0
  8735  13E4  3D81               	addwfc	1,f
  8736  13E5  3141               	addfsr 1,1
  8737  13E6  3000               	movlw	0
  8738  13E7  3D81               	addwfc	1,f
  8739  13E8  3001               	movlw	1
  8740  13E9  07BF               	addwf	dir_next@c^(0+128),f
  8741  13EA  3000               	movlw	0
  8742  13EB  3DC0               	addwfc	(dir_next@c+1)^(0+128),f
  8743  13EC  2B93               	goto	l4544
  8744  13ED                     l4546:	
  8745                           
  8746                           ;ff.c: 1171: };ff.c: 1172: dp->fs->winsect -= c;
  8747  13ED  083F               	movf	dir_next@c^(0+128),w
  8748  13EE  00B7               	movwf	??_dir_next^(0+128)
  8749  13EF  0840               	movf	(dir_next@c+1)^(0+128),w
  8750  13F0  00B8               	movwf	(??_dir_next^(0+128)+1)
  8751  13F1  01B9               	clrf	(??_dir_next^(0+128)+2)
  8752  13F2  01BA               	clrf	(??_dir_next^(0+128)+3)
  8753  13F3  0833               	movf	dir_next@dp^(0+128),w
  8754  13F4  0086               	movwf	6
  8755  13F5  0834               	movf	(dir_next@dp+1)^(0+128),w
  8756  13F6  0087               	movwf	7
  8757  13F7  3F40               	moviw [0]fsr1
  8758  13F8  00BB               	movwf	(??_dir_next+4)^(0+128)
  8759  13F9  3F41               	moviw [1]fsr1
  8760  13FA  00BC               	movwf	((??_dir_next+4)^(0+128)+1)
  8761  13FB  083B               	movf	(??_dir_next+4)^(0+128),w
  8762  13FC  3E2A               	addlw	42
  8763  13FD  0086               	movwf	6
  8764  13FE  3000               	movlw	0
  8765  13FF  3D3C               	addwfc	(??_dir_next+5)^(0+128),w
  8766  1400  0087               	movwf	7
  8767  1401  0837               	movf	??_dir_next^(0+128),w
  8768  1402  0281               	subwf	1,f
  8769  1403  3141               	addfsr 1,1
  8770  1404  0838               	movf	(??_dir_next+1)^(0+128),w
  8771  1405  3B81               	subwfb	1,f
  8772  1406  3141               	addfsr 1,1
  8773  1407  0839               	movf	(??_dir_next+2)^(0+128),w
  8774  1408  3B81               	subwfb	1,f
  8775  1409  3141               	addfsr 1,1
  8776  140A  083A               	movf	(??_dir_next+3)^(0+128),w
  8777  140B  3B81               	subwfb	1,f
  8778  140C  317D               	addfsr 1,-3
  8779  140D                     l4548:	
  8780                           
  8781                           ;ff.c: 1177: };ff.c: 1178: dp->clust = clst;
  8782  140D  0833               	movf	dir_next@dp^(0+128),w
  8783  140E  0086               	movwf	6
  8784  140F  0834               	movf	(dir_next@dp+1)^(0+128),w
  8785  1410  0087               	movwf	7
  8786  1411  314A               	addfsr 1,10
  8787  1412  0843               	movf	dir_next@clst^(0+128),w
  8788  1413  3FC0               	movwi [0]fsr1
  8789  1414  0844               	movf	(dir_next@clst+1)^(0+128),w
  8790  1415  3FC1               	movwi [1]fsr1
  8791  1416  0845               	movf	(dir_next@clst+2)^(0+128),w
  8792  1417  3FC2               	movwi [2]fsr1
  8793  1418  0846               	movf	(dir_next@clst+3)^(0+128),w
  8794  1419  3FC3               	movwi [3]fsr1
  8795                           
  8796                           ;ff.c: 1179: dp->sect = clust2sect(dp->fs, clst);
  8797  141A  0833               	movf	dir_next@dp^(0+128),w
  8798  141B  0086               	movwf	6
  8799  141C  0834               	movf	(dir_next@dp+1)^(0+128),w
  8800  141D  0087               	movwf	7
  8801  141E  3F40               	moviw [0]fsr1
  8802  141F  0020               	movlb	0	; select bank0
  8803  1420  00A0               	movwf	clust2sect@fs
  8804  1421  3F41               	moviw [1]fsr1
  8805  1422  00A1               	movwf	clust2sect@fs+1
  8806  1423  0021               	movlb	1	; select bank1
  8807  1424  0846               	movf	(dir_next@clst+3)^(0+128),w
  8808  1425  0020               	movlb	0	; select bank0
  8809  1426  00A5               	movwf	clust2sect@clst+3
  8810  1427  0021               	movlb	1	; select bank1
  8811  1428  0845               	movf	(dir_next@clst+2)^(0+128),w
  8812  1429  0020               	movlb	0	; select bank0
  8813  142A  00A4               	movwf	clust2sect@clst+2
  8814  142B  0021               	movlb	1	; select bank1
  8815  142C  0844               	movf	(dir_next@clst+1)^(0+128),w
  8816  142D  0020               	movlb	0	; select bank0
  8817  142E  00A3               	movwf	clust2sect@clst+1
  8818  142F  0021               	movlb	1	; select bank1
  8819  1430  0843               	movf	dir_next@clst^(0+128),w
  8820  1431  0020               	movlb	0	; select bank0
  8821  1432  00A2               	movwf	clust2sect@clst
  8822  1433  31AF  2786  3191   	fcall	_clust2sect
  8823  1436  0021               	movlb	1	; select bank1
  8824  1437  0833               	movf	dir_next@dp^(0+128),w
  8825  1438  0086               	movwf	6
  8826  1439  0834               	movf	(dir_next@dp+1)^(0+128),w
  8827  143A  0087               	movwf	7
  8828  143B  314E               	addfsr 1,14
  8829  143C  0020               	movlb	0	; select bank0
  8830  143D  0820               	movf	?_clust2sect,w
  8831  143E  3FC0               	movwi [0]fsr1
  8832  143F  0821               	movf	?_clust2sect+1,w
  8833  1440  3FC1               	movwi [1]fsr1
  8834  1441  0822               	movf	?_clust2sect+2,w
  8835  1442  3FC2               	movwi [2]fsr1
  8836  1443  0823               	movf	?_clust2sect+3,w
  8837  1444  3FC3               	movwi [3]fsr1
  8838  1445                     l4552:	
  8839                           
  8840                           ;ff.c: 1180: };ff.c: 1181: };ff.c: 1182: };ff.c: 1184: dp->index = (WORD)i;
  8841  1445  0021               	movlb	1	; select bank1
  8842  1446  0833               	movf	dir_next@dp^(0+128),w
  8843  1447  0086               	movwf	6
  8844  1448  0834               	movf	(dir_next@dp+1)^(0+128),w
  8845  1449  0087               	movwf	7
  8846  144A  3144               	addfsr 1,4
  8847  144B  0841               	movf	dir_next@i^(0+128),w
  8848  144C  3FC0               	movwi [0]fsr1
  8849  144D  0842               	movf	(dir_next@i+1)^(0+128),w
  8850  144E  3FC1               	movwi [1]fsr1
  8851                           
  8852                           ;ff.c: 1185: dp->dir = dp->fs->win + (i % (((UINT)512) / 32)) * 32;
  8853  144F  300F               	movlw	15
  8854  1450  0541               	andwf	dir_next@i^(0+128),w
  8855  1451  00B7               	movwf	??_dir_next^(0+128)
  8856  1452  3000               	movlw	0
  8857  1453  0542               	andwf	(dir_next@i+1)^(0+128),w
  8858  1454  00B8               	movwf	(??_dir_next+1)^(0+128)
  8859  1455  3005               	movlw	5
  8860  1456                     u6055:	
  8861  1456  35B7               	lslf	??_dir_next^(0+128),f
  8862  1457  0DB8               	rlf	(??_dir_next^(0+128)+1),f
  8863  1458  0B89               	decfsz	9,f
  8864  1459  2C56               	goto	u6055
  8865  145A  0833               	movf	dir_next@dp^(0+128),w
  8866  145B  0086               	movwf	6
  8867  145C  0834               	movf	(dir_next@dp+1)^(0+128),w
  8868  145D  0087               	movwf	7
  8869  145E  3F40               	moviw [0]fsr1
  8870  145F  00B9               	movwf	(??_dir_next+2)^(0+128)
  8871  1460  3F41               	moviw [1]fsr1
  8872  1461  00BA               	movwf	((??_dir_next+2)^(0+128)+1)
  8873  1462  0837               	movf	??_dir_next^(0+128),w
  8874  1463  0739               	addwf	(??_dir_next+2)^(0+128),w
  8875  1464  00BB               	movwf	(??_dir_next+4)^(0+128)
  8876  1465  0838               	movf	(??_dir_next+1)^(0+128),w
  8877  1466  3D3A               	addwfc	(??_dir_next+3)^(0+128),w
  8878  1467  00BC               	movwf	(??_dir_next+5)^(0+128)
  8879  1468  083B               	movf	(??_dir_next+4)^(0+128),w
  8880  1469  3E2E               	addlw	46
  8881  146A  00BD               	movwf	(??_dir_next+6)^(0+128)
  8882  146B  3000               	movlw	0
  8883  146C  3D3C               	addwfc	(??_dir_next+5)^(0+128),w
  8884  146D  00BE               	movwf	(??_dir_next+7)^(0+128)
  8885  146E  0833               	movf	dir_next@dp^(0+128),w
  8886  146F  0086               	movwf	6
  8887  1470  0834               	movf	(dir_next@dp+1)^(0+128),w
  8888  1471  0087               	movwf	7
  8889  1472  3152               	addfsr 1,18
  8890  1473  083D               	movf	(??_dir_next+6)^(0+128),w
  8891  1474  3FC0               	movwi [0]fsr1
  8892  1475  083E               	movf	(??_dir_next+7)^(0+128),w
  8893  1476  3FC1               	movwi [1]fsr1
  8894                           
  8895                           ;ff.c: 1187: return FR_OK;
  8896  1477  3000               	movlw	0
  8897  1478  0008               	return
  8898  1479                     __end_of_dir_next:	
  8899                           
  8900                           	psect	text17
  8901  2D36                     __ptext17:	
  8902 ;; *************** function _f_mount *****************
  8903 ;; Defined at:
  8904 ;;		line 2402 in file "ff.c"
  8905 ;; Parameters:    Size  Location     Type
  8906 ;;  fs              2   74[BANK0 ] PTR struct .
  8907 ;;		 -> NULL(0), FatFs(558), 
  8908 ;;  path            2   76[BANK0 ] PTR const unsigned char 
  8909 ;;		 -> STR_2(10), STR_1(1), 
  8910 ;;  opt             1   78[BANK0 ] unsigned char 
  8911 ;; Auto vars:     Size  Location     Type
  8912 ;;  vol             2   65[BANK1 ] int 
  8913 ;;  rp              2   63[BANK1 ] PTR const unsigned char 
  8914 ;;		 -> STR_2(10), STR_1(1), 
  8915 ;;  cfs             2   61[BANK1 ] PTR struct .
  8916 ;;		 -> NULL(0), FatFs(558), 
  8917 ;;  res             1   60[BANK1 ] enum E88
  8918 ;; Return value:  Size  Location     Type
  8919 ;;                  1    wreg      enum E5735
  8920 ;; Registers used:
  8921 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8922 ;; Tracked objects:
  8923 ;;		On entry : 1F/0
  8924 ;;		On exit  : 1E/0
  8925 ;;		Unchanged: 0/0
  8926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8927 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8928 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8929 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8930 ;;      Totals:         0       5       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8931 ;;Total ram usage:       14 bytes
  8932 ;; Hardware stack levels used:    1
  8933 ;; Hardware stack levels required when called:   10
  8934 ;; This function calls:
  8935 ;;		_find_volume
  8936 ;;		_get_ldnumber
  8937 ;; This function is called by:
  8938 ;;		_main
  8939 ;; This function uses a non-reentrant model
  8940 ;;
  8941                           
  8942                           
  8943                           ;psect for function _f_mount
  8944  2D36                     _f_mount:	
  8945                           
  8946                           ;ff.c: 2408: FATFS *cfs;;ff.c: 2409: int vol;;ff.c: 2410: FRESULT res;;ff.c: 2411: const
      +                           TCHAR *rp = path;
  8947                           
  8948                           ;incstack = 0
  8949                           ; Regs used in _f_mount: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8950  2D36  086D               	movf	f_mount@path+1,w
  8951  2D37  0021               	movlb	1	; select bank1
  8952  2D38  00E0               	movwf	(f_mount@rp+1)^(0+128)
  8953  2D39  0020               	movlb	0	; select bank0
  8954  2D3A  086C               	movf	f_mount@path,w
  8955  2D3B  0021               	movlb	1	; select bank1
  8956  2D3C  00DF               	movwf	f_mount@rp^(0+128)
  8957                           
  8958                           ;ff.c: 2414: vol = get_ldnumber(&rp);
  8959  2D3D  30DF               	movlw	(low (f_mount@rp| 0))& (0+255)
  8960  2D3E  31AF  2713  31AD   	fcall	_get_ldnumber
  8961  2D41  0871               	movf	?_get_ldnumber+1,w
  8962  2D42  0021               	movlb	1	; select bank1
  8963  2D43  00E2               	movwf	(f_mount@vol+1)^(0+128)
  8964  2D44  0870               	movf	?_get_ldnumber,w
  8965  2D45  00E1               	movwf	f_mount@vol^(0+128)
  8966                           
  8967                           ;ff.c: 2415: if (vol < 0) return FR_INVALID_DRIVE;
  8968  2D46  1FE2               	btfss	(f_mount@vol+1)^(0+128),7
  8969  2D47  2D4A               	goto	l5520
  8970  2D48  300B               	movlw	11
  8971  2D49  0008               	return
  8972  2D4A                     l5520:	
  8973                           
  8974                           ;ff.c: 2416: cfs = FatFs[vol];
  8975  2D4A  3561               	lslf	f_mount@vol^(0+128),w
  8976  2D4B  3EE9               	addlw	(low (ff@FatFs| 0))& (0+255)
  8977  2D4C  0086               	movwf	6
  8978  2D4D  0187               	clrf	7
  8979  2D4E  3F40               	moviw [0]fsr1
  8980  2D4F  00DD               	movwf	f_mount@cfs^(0+128)
  8981  2D50  3F41               	moviw [1]fsr1
  8982  2D51  00DE               	movwf	(f_mount@cfs+1)^(0+128)
  8983                           
  8984                           ;ff.c: 2418: if (cfs) {
  8985  2D52  085D               	movf	f_mount@cfs^(0+128),w
  8986  2D53  045E               	iorwf	(f_mount@cfs+1)^(0+128),w
  8987  2D54  1903               	btfsc	3,2
  8988  2D55  2D5B               	goto	l5526
  8989                           
  8990                           ;ff.c: 2425: cfs->fs_type = 0;
  8991  2D56  085D               	movf	f_mount@cfs^(0+128),w
  8992  2D57  0086               	movwf	6
  8993  2D58  085E               	movf	(f_mount@cfs+1)^(0+128),w
  8994  2D59  0087               	movwf	7
  8995  2D5A  0181               	clrf	1
  8996  2D5B                     l5526:	
  8997                           
  8998                           ;ff.c: 2426: };ff.c: 2428: if (fs) {
  8999  2D5B  0020               	movlb	0	; select bank0
  9000  2D5C  086A               	movf	f_mount@fs,w
  9001  2D5D  046B               	iorwf	f_mount@fs+1,w
  9002  2D5E  1903               	btfsc	3,2
  9003  2D5F  2D65               	goto	l5530
  9004                           
  9005                           ;ff.c: 2429: fs->fs_type = 0;
  9006  2D60  086A               	movf	f_mount@fs,w
  9007  2D61  0086               	movwf	6
  9008  2D62  086B               	movf	f_mount@fs+1,w
  9009  2D63  0087               	movwf	7
  9010  2D64  0181               	clrf	1
  9011  2D65                     l5530:	
  9012                           
  9013                           ;ff.c: 2433: };ff.c: 2434: FatFs[vol] = fs;
  9014  2D65  0021               	movlb	1	; select bank1
  9015  2D66  3561               	lslf	f_mount@vol^(0+128),w
  9016  2D67  3EE9               	addlw	(low (ff@FatFs| 0))& (0+255)
  9017  2D68  0086               	movwf	6
  9018  2D69  0187               	clrf	7
  9019  2D6A  0020               	movlb	0	; select bank0
  9020  2D6B  086A               	movf	f_mount@fs,w
  9021  2D6C  3FC0               	movwi [0]fsr1
  9022  2D6D  086B               	movf	f_mount@fs+1,w
  9023  2D6E  3FC1               	movwi [1]fsr1
  9024                           
  9025                           ;ff.c: 2436: if (!fs || opt != 1) return FR_OK;
  9026  2D6F  086A               	movf	f_mount@fs,w
  9027  2D70  046B               	iorwf	f_mount@fs+1,w
  9028  2D71  1903               	btfsc	3,2
  9029  2D72  2D76               	goto	l5536
  9030  2D73  036E               	decf	f_mount@opt,w
  9031  2D74  1903               	btfsc	3,2
  9032  2D75  2D78               	goto	l5540
  9033  2D76                     l5536:	
  9034  2D76  3000               	movlw	0
  9035  2D77  0008               	return
  9036  2D78                     l5540:	
  9037                           
  9038                           ;ff.c: 2438: res = find_volume(&fs, &path, 0);
  9039  2D78  306A               	movlw	low f_mount@fs
  9040  2D79  00D8               	movwf	find_volume@rfs
  9041  2D7A  3000               	movlw	high f_mount@fs
  9042  2D7B  00D9               	movwf	find_volume@rfs+1
  9043  2D7C  306C               	movlw	(low (f_mount@path| 0))& (0+255)
  9044  2D7D  0021               	movlb	1	; select bank1
  9045  2D7E  00DA               	movwf	??_f_mount^(0+128)
  9046  2D7F  085A               	movf	??_f_mount^(0+128),w
  9047  2D80  0020               	movlb	0	; select bank0
  9048  2D81  00DA               	movwf	find_volume@path
  9049  2D82  01DB               	clrf	find_volume@wmode
  9050  2D83  3181  21D7         	fcall	_find_volume
  9051  2D85  0021               	movlb	1	; select bank1
  9052  2D86  00DB               	movwf	(??_f_mount+1)^(0+128)
  9053  2D87  085B               	movf	(??_f_mount+1)^(0+128),w
  9054  2D88  00DC               	movwf	f_mount@res^(0+128)
  9055                           
  9056                           ;ff.c: 2439: return res;
  9057  2D89  085C               	movf	f_mount@res^(0+128),w
  9058  2D8A  0008               	return
  9059  2D8B                     __end_of_f_mount:	
  9060                           
  9061                           	psect	text18
  9062  01D7                     __ptext18:	
  9063 ;; *************** function _find_volume *****************
  9064 ;; Defined at:
  9065 ;;		line 2203 in file "ff.c"
  9066 ;; Parameters:    Size  Location     Type
  9067 ;;  rfs             2   56[BANK0 ] PTR PTR struct .
  9068 ;;		 -> f_open@dj(22), f_mount@fs(2), 
  9069 ;;  path            1   58[BANK0 ] PTR PTR const unsigned c
  9070 ;;		 -> f_open@path(2), f_mount@path(2), 
  9071 ;;  wmode           1   59[BANK0 ] unsigned char 
  9072 ;; Auto vars:     Size  Location     Type
  9073 ;;  br             16    0[BANK1 ] unsigned long [4]
  9074 ;;  bsect           4   49[BANK1 ] unsigned long 
  9075 ;;  fasize          4   45[BANK1 ] unsigned long 
  9076 ;;  nclst           4   40[BANK1 ] unsigned long 
  9077 ;;  tsect           4   36[BANK1 ] unsigned long 
  9078 ;;  sysect          4   28[BANK1 ] unsigned long 
  9079 ;;  szbfat          4   22[BANK1 ] unsigned long 
  9080 ;;  fs              2   56[BANK1 ] PTR struct .
  9081 ;;		 -> NULL(0), FatFs(558), 
  9082 ;;  i               2   53[BANK1 ] unsigned int 
  9083 ;;  nrsv            2   34[BANK1 ] unsigned int 
  9084 ;;  vol             2   32[BANK1 ] int 
  9085 ;;  pt              2   26[BANK1 ] PTR unsigned char 
  9086 ;;		 -> FatFs.win(512), NULL(0), FatFs(558), 
  9087 ;;  fmt             1   55[BANK1 ] unsigned char 
  9088 ;;  stat            1   44[BANK1 ] unsigned char 
  9089 ;; Return value:  Size  Location     Type
  9090 ;;                  1    wreg      enum E88
  9091 ;; Registers used:
  9092 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9093 ;; Tracked objects:
  9094 ;;		On entry : 1F/0
  9095 ;;		On exit  : 1E/0
  9096 ;;		Unchanged: 0/0
  9097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9098 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9099 ;;      Locals:         0       0      58       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9100 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9101 ;;      Totals:         0      18      58       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9102 ;;Total ram usage:       76 bytes
  9103 ;; Hardware stack levels used:    1
  9104 ;; Hardware stack levels required when called:    9
  9105 ;; This function calls:
  9106 ;;		___lldiv
  9107 ;;		___lmul
  9108 ;;		_check_fs
  9109 ;;		_disk_initialize
  9110 ;;		_disk_status
  9111 ;;		_get_ldnumber
  9112 ;;		_move_window
  9113 ;; This function is called by:
  9114 ;;		_f_mount
  9115 ;;		_f_open
  9116 ;; This function uses a non-reentrant model
  9117 ;;
  9118                           
  9119                           
  9120                           ;psect for function _find_volume
  9121  01D7                     _find_volume:	
  9122                           
  9123                           ;ff.c: 2209: BYTE fmt, *pt;;ff.c: 2210: int vol;;ff.c: 2211: DSTATUS stat;;ff.c: 2212: D
      +                          WORD bsect, fasize, tsect, sysect, nclst, szbfat, br[4];;ff.c: 2213: WORD nrsv;;ff.c: 22
      +                          14: FATFS *fs;;ff.c: 2215: UINT i;;ff.c: 2219: *rfs = 0;
  9124                           
  9125                           ;incstack = 0
  9126                           ; Regs used in _find_volume: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9127  01D7  0858               	movf	find_volume@rfs,w
  9128  01D8  0086               	movwf	6
  9129  01D9  0859               	movf	find_volume@rfs+1,w
  9130  01DA  0087               	movwf	7
  9131  01DB  3000               	movlw	0
  9132  01DC  3FC0               	movwi [0]fsr1
  9133  01DD  3FC1               	movwi [1]fsr1
  9134                           
  9135                           ;ff.c: 2220: vol = get_ldnumber(path);
  9136  01DE  085A               	movf	find_volume@path,w
  9137  01DF  31AF  2713  3181   	fcall	_get_ldnumber
  9138  01E2  0871               	movf	?_get_ldnumber+1,w
  9139  01E3  0021               	movlb	1	; select bank1
  9140  01E4  00C1               	movwf	(find_volume@vol+1)^(0+128)
  9141  01E5  0870               	movf	?_get_ldnumber,w
  9142  01E6  00C0               	movwf	find_volume@vol^(0+128)
  9143                           
  9144                           ;ff.c: 2221: if (vol < 0) return FR_INVALID_DRIVE;
  9145  01E7  1FC1               	btfss	(find_volume@vol+1)^(0+128),7
  9146  01E8  29EB               	goto	l5180
  9147  01E9  300B               	movlw	11
  9148  01EA  0008               	return
  9149  01EB                     l5180:	
  9150                           
  9151                           ;ff.c: 2224: fs = FatFs[vol];
  9152  01EB  3540               	lslf	find_volume@vol^(0+128),w
  9153  01EC  3EE9               	addlw	(low (ff@FatFs| 0))& (0+255)
  9154  01ED  0086               	movwf	6
  9155  01EE  0187               	clrf	7
  9156  01EF  3F40               	moviw [0]fsr1
  9157  01F0  00D8               	movwf	find_volume@fs^(0+128)
  9158  01F1  3F41               	moviw [1]fsr1
  9159  01F2  00D9               	movwf	(find_volume@fs+1)^(0+128)
  9160                           
  9161                           ;ff.c: 2225: if (!fs) return FR_NOT_ENABLED;
  9162  01F3  0858               	movf	find_volume@fs^(0+128),w
  9163  01F4  0459               	iorwf	(find_volume@fs+1)^(0+128),w
  9164  01F5  1D03               	btfss	3,2
  9165  01F6  29F9               	goto	l5188
  9166  01F7  300C               	movlw	12
  9167  01F8  0008               	return
  9168  01F9                     l5188:	
  9169                           
  9170                           ;ff.c: 2227: ;;ff.c: 2228: *rfs = fs;
  9171  01F9  0020               	movlb	0	; select bank0
  9172  01FA  0858               	movf	find_volume@rfs,w
  9173  01FB  0086               	movwf	6
  9174  01FC  0859               	movf	find_volume@rfs+1,w
  9175  01FD  0087               	movwf	7
  9176  01FE  0021               	movlb	1	; select bank1
  9177  01FF  0858               	movf	find_volume@fs^(0+128),w
  9178  0200  3FC0               	movwi [0]fsr1
  9179  0201  0859               	movf	(find_volume@fs+1)^(0+128),w
  9180  0202  3FC1               	movwi [1]fsr1
  9181                           
  9182                           ;ff.c: 2230: if (fs->fs_type) {
  9183  0203  0858               	movf	find_volume@fs^(0+128),w
  9184  0204  0086               	movwf	6
  9185  0205  0859               	movf	(find_volume@fs+1)^(0+128),w
  9186  0206  0087               	movwf	7
  9187  0207  0801               	movf	1,w
  9188  0208  1903               	btfsc	3,2
  9189  0209  2A25               	goto	l5208
  9190                           
  9191                           ;ff.c: 2231: stat = disk_status(fs->drv);
  9192  020A  0858               	movf	find_volume@fs^(0+128),w
  9193  020B  0086               	movwf	6
  9194  020C  0859               	movf	(find_volume@fs+1)^(0+128),w
  9195  020D  0087               	movwf	7
  9196  020E  3141               	addfsr 1,1
  9197  020F  0801               	movf	1,w
  9198  0210  31AA  22BB  3181   	fcall	_disk_status
  9199  0213  0020               	movlb	0	; select bank0
  9200  0214  00DC               	movwf	??_find_volume
  9201  0215  085C               	movf	??_find_volume,w
  9202  0216  0021               	movlb	1	; select bank1
  9203  0217  00CC               	movwf	find_volume@stat^(0+128)
  9204                           
  9205                           ;ff.c: 2233: if (!0 && wmode && (stat & 0x04))
  9206  0218  184C               	btfsc	find_volume@stat^(0+128),0
  9207  0219  2A25               	goto	l5208
  9208  021A  0020               	movlb	0	; select bank0
  9209  021B  085B               	movf	find_volume@wmode,w
  9210  021C  1903               	btfsc	3,2
  9211  021D  2A23               	goto	l5204
  9212  021E  0021               	movlb	1	; select bank1
  9213  021F  1D4C               	btfss	find_volume@stat^(0+128),2
  9214  0220  2A23               	goto	l5204
  9215  0221                     l5200:	
  9216                           
  9217                           ;ff.c: 2234: return FR_WRITE_PROTECTED;
  9218  0221  300A               	movlw	10
  9219  0222  0008               	return
  9220  0223                     l5204:	
  9221                           
  9222                           ;ff.c: 2235: return FR_OK;
  9223  0223  3000               	movlw	0
  9224  0224  0008               	return
  9225  0225                     l5208:	
  9226                           
  9227                           ;ff.c: 2236: };ff.c: 2237: };ff.c: 2242: fs->fs_type = 0;
  9228  0225  0858               	movf	find_volume@fs^(0+128),w
  9229  0226  0086               	movwf	6
  9230  0227  0859               	movf	(find_volume@fs+1)^(0+128),w
  9231  0228  0087               	movwf	7
  9232  0229  0181               	clrf	1
  9233                           
  9234                           ;ff.c: 2243: fs->drv = (BYTE)(vol);
  9235  022A  0858               	movf	find_volume@fs^(0+128),w
  9236  022B  3E01               	addlw	1
  9237  022C  0020               	movlb	0	; select bank0
  9238  022D  00DC               	movwf	??_find_volume
  9239  022E  3000               	movlw	0
  9240  022F  0021               	movlb	1	; select bank1
  9241  0230  3D59               	addwfc	(find_volume@fs+1)^(0+128),w
  9242  0231  0020               	movlb	0	; select bank0
  9243  0232  00DD               	movwf	??_find_volume+1
  9244  0233  085C               	movf	??_find_volume,w
  9245  0234  0086               	movwf	6
  9246  0235  085D               	movf	??_find_volume+1,w
  9247  0236  0087               	movwf	7
  9248  0237  0021               	movlb	1	; select bank1
  9249  0238  0840               	movf	find_volume@vol^(0+128),w
  9250  0239  0081               	movwf	1
  9251                           
  9252                           ;ff.c: 2244: stat = disk_initialize(fs->drv);
  9253  023A  0858               	movf	find_volume@fs^(0+128),w
  9254  023B  0086               	movwf	6
  9255  023C  0859               	movf	(find_volume@fs+1)^(0+128),w
  9256  023D  0087               	movwf	7
  9257  023E  3141               	addfsr 1,1
  9258  023F  0801               	movf	1,w
  9259  0240  3198  203E  3181   	fcall	_disk_initialize
  9260  0243  0020               	movlb	0	; select bank0
  9261  0244  00DC               	movwf	??_find_volume
  9262  0245  085C               	movf	??_find_volume,w
  9263  0246  0021               	movlb	1	; select bank1
  9264  0247  00CC               	movwf	find_volume@stat^(0+128)
  9265                           
  9266                           ;ff.c: 2245: if (stat & 0x01)
  9267  0248  1C4C               	btfss	find_volume@stat^(0+128),0
  9268  0249  2A4C               	goto	l5220
  9269                           
  9270                           ;ff.c: 2246: return FR_NOT_READY;
  9271  024A  3003               	movlw	3
  9272  024B  0008               	return
  9273  024C                     l5220:	
  9274  024C  0020               	movlb	0	; select bank0
  9275  024D  085B               	movf	find_volume@wmode,w
  9276  024E  1903               	btfsc	3,2
  9277  024F  2A53               	goto	l5228
  9278  0250  0021               	movlb	1	; select bank1
  9279  0251  194C               	btfsc	find_volume@stat^(0+128),2
  9280  0252  2A21               	goto	l5200
  9281  0253                     l5228:	
  9282                           
  9283                           ;ff.c: 2254: bsect = 0;
  9284  0253  3000               	movlw	0
  9285  0254  0021               	movlb	1	; select bank1
  9286  0255  00D4               	movwf	(find_volume@bsect+3)^(0+128)
  9287  0256  3000               	movlw	0
  9288  0257  00D3               	movwf	(find_volume@bsect+2)^(0+128)
  9289  0258  3000               	movlw	0
  9290  0259  00D2               	movwf	(find_volume@bsect+1)^(0+128)
  9291  025A  3000               	movlw	0
  9292  025B  00D1               	movwf	find_volume@bsect^(0+128)
  9293                           
  9294                           ;ff.c: 2255: fmt = check_fs(fs, bsect);
  9295  025C  0859               	movf	(find_volume@fs+1)^(0+128),w
  9296  025D  0020               	movlb	0	; select bank0
  9297  025E  00CF               	movwf	check_fs@fs+1
  9298  025F  0021               	movlb	1	; select bank1
  9299  0260  0858               	movf	find_volume@fs^(0+128),w
  9300  0261  0020               	movlb	0	; select bank0
  9301  0262  00CE               	movwf	check_fs@fs
  9302  0263  3000               	movlw	0
  9303  0264  00D3               	movwf	check_fs@sect+3
  9304  0265  3000               	movlw	0
  9305  0266  00D2               	movwf	check_fs@sect+2
  9306  0267  3000               	movlw	0
  9307  0268  00D1               	movwf	check_fs@sect+1
  9308  0269  3000               	movlw	0
  9309  026A  00D0               	movwf	check_fs@sect
  9310  026B  31A0  203C  3181   	fcall	_check_fs
  9311  026E  00DC               	movwf	??_find_volume
  9312  026F  085C               	movf	??_find_volume,w
  9313  0270  0021               	movlb	1	; select bank1
  9314  0271  00D7               	movwf	find_volume@fmt^(0+128)
  9315                           
  9316                           ;ff.c: 2256: if (fmt == 1 || (!fmt && (0))) {
  9317  0272  0357               	decf	find_volume@fmt^(0+128),w
  9318  0273  1D03               	btfss	3,2
  9319  0274  2B3A               	goto	l5278
  9320                           
  9321                           ;ff.c: 2257: for (i = 0; i < 4; i++) {
  9322  0275  01D5               	clrf	find_volume@i^(0+128)
  9323  0276  01D6               	clrf	(find_volume@i+1)^(0+128)
  9324  0277                     l5240:	
  9325  0277  3000               	movlw	0
  9326  0278  0256               	subwf	(find_volume@i+1)^(0+128),w
  9327  0279  3004               	movlw	4
  9328  027A  1903               	skipnz
  9329  027B  0255               	subwf	find_volume@i^(0+128),w
  9330  027C  1803               	btfsc	3,0
  9331  027D  2AD9               	goto	l5258
  9332                           
  9333                           ;ff.c: 2258: pt = fs->win + 446 + i * 16;
  9334  027E  0856               	movf	(find_volume@i+1)^(0+128),w
  9335  027F  0020               	movlb	0	; select bank0
  9336  0280  00DD               	movwf	??_find_volume+1
  9337  0281  0021               	movlb	1	; select bank1
  9338  0282  0855               	movf	find_volume@i^(0+128),w
  9339  0283  0020               	movlb	0	; select bank0
  9340  0284  00DC               	movwf	??_find_volume
  9341  0285  0EDC               	swapf	??_find_volume,f
  9342  0286  0EDD               	swapf	??_find_volume+1,f
  9343  0287  30F0               	movlw	240
  9344  0288  05DD               	andwf	??_find_volume+1,f
  9345  0289  085C               	movf	??_find_volume,w
  9346  028A  390F               	andlw	15
  9347  028B  04DD               	iorwf	??_find_volume+1,f
  9348  028C  30F0               	movlw	240
  9349  028D  05DC               	andwf	??_find_volume,f
  9350  028E  085C               	movf	??_find_volume,w
  9351  028F  0021               	movlb	1	; select bank1
  9352  0290  0758               	addwf	find_volume@fs^(0+128),w
  9353  0291  0020               	movlb	0	; select bank0
  9354  0292  00DE               	movwf	??_find_volume+2
  9355  0293  085D               	movf	??_find_volume+1,w
  9356  0294  0021               	movlb	1	; select bank1
  9357  0295  3D59               	addwfc	(find_volume@fs+1)^(0+128),w
  9358  0296  0020               	movlb	0	; select bank0
  9359  0297  00DF               	movwf	??_find_volume+3
  9360  0298  085E               	movf	??_find_volume+2,w
  9361  0299  3EEC               	addlw	236
  9362  029A  0021               	movlb	1	; select bank1
  9363  029B  00BA               	movwf	find_volume@pt^(0+128)
  9364  029C  3001               	movlw	1
  9365  029D  0020               	movlb	0	; select bank0
  9366  029E  3D5F               	addwfc	??_find_volume+3,w
  9367  029F  0021               	movlb	1	; select bank1
  9368  02A0  00BB               	movwf	(find_volume@pt+1)^(0+128)
  9369                           
  9370                           ;ff.c: 2259: br[i] = pt[4] ? (DWORD)(*(DWORD*)(BYTE*)(&pt[8])) : 0;
  9371  02A1  083A               	movf	find_volume@pt^(0+128),w
  9372  02A2  0086               	movwf	6
  9373  02A3  083B               	movf	(find_volume@pt+1)^(0+128),w
  9374  02A4  0087               	movwf	7
  9375  02A5  3144               	addfsr 1,4
  9376  02A6  0801               	movf	1,w
  9377  02A7  1D03               	btfss	3,2
  9378  02A8  2AB2               	goto	l5250
  9379  02A9  3000               	movlw	0
  9380  02AA  00B3               	movwf	(_find_volume$940+3)^(0+128)
  9381  02AB  3000               	movlw	0
  9382  02AC  00B2               	movwf	(_find_volume$940+2)^(0+128)
  9383  02AD  3000               	movlw	0
  9384  02AE  00B1               	movwf	(_find_volume$940+1)^(0+128)
  9385  02AF  3000               	movlw	0
  9386  02B0  00B0               	movwf	_find_volume$940^(0+128)
  9387  02B1  2ABF               	goto	l5252
  9388  02B2                     l5250:	
  9389  02B2  083A               	movf	find_volume@pt^(0+128),w
  9390  02B3  0086               	movwf	6
  9391  02B4  083B               	movf	(find_volume@pt+1)^(0+128),w
  9392  02B5  0087               	movwf	7
  9393  02B6  3148               	addfsr 1,8
  9394  02B7  3F40               	moviw [0]fsr1
  9395  02B8  00B0               	movwf	_find_volume$940^(0+128)
  9396  02B9  3F41               	moviw [1]fsr1
  9397  02BA  00B1               	movwf	(_find_volume$940+1)^(0+128)
  9398  02BB  3F42               	moviw [2]fsr1
  9399  02BC  00B2               	movwf	(_find_volume$940+2)^(0+128)
  9400  02BD  3F43               	moviw [3]fsr1
  9401  02BE  00B3               	movwf	(_find_volume$940+3)^(0+128)
  9402  02BF                     l5252:	
  9403  02BF  0855               	movf	find_volume@i^(0+128),w
  9404  02C0  0020               	movlb	0	; select bank0
  9405  02C1  00DC               	movwf	??_find_volume
  9406  02C2  3001               	movlw	1
  9407  02C3                     u7315:	
  9408  02C3  35DC               	lslf	??_find_volume,f
  9409  02C4  3EFF               	addlw	-1
  9410  02C5  1D03               	skipz
  9411  02C6  2AC3               	goto	u7315
  9412  02C7  355C               	lslf	??_find_volume,w
  9413  02C8  3EA0               	addlw	(low (find_volume@br| 0))& (0+255)
  9414  02C9  0086               	movwf	6
  9415  02CA  0187               	clrf	7
  9416  02CB  0021               	movlb	1	; select bank1
  9417  02CC  0830               	movf	_find_volume$940^(0+128),w
  9418  02CD  3FC0               	movwi [0]fsr1
  9419  02CE  0831               	movf	(_find_volume$940+1)^(0+128),w
  9420  02CF  3FC1               	movwi [1]fsr1
  9421  02D0  0832               	movf	(_find_volume$940+2)^(0+128),w
  9422  02D1  3FC2               	movwi [2]fsr1
  9423  02D2  0833               	movf	(_find_volume$940+3)^(0+128),w
  9424  02D3  3FC3               	movwi [3]fsr1
  9425  02D4  3001               	movlw	1
  9426  02D5  07D5               	addwf	find_volume@i^(0+128),f
  9427  02D6  3000               	movlw	0
  9428  02D7  3DD6               	addwfc	(find_volume@i+1)^(0+128),f
  9429  02D8  2A77               	goto	l5240
  9430  02D9                     l5258:	
  9431                           
  9432                           ;ff.c: 2260: };ff.c: 2261: i = 0;
  9433  02D9  01D5               	clrf	find_volume@i^(0+128)
  9434  02DA  01D6               	clrf	(find_volume@i+1)^(0+128)
  9435                           
  9436                           ;ff.c: 2262: if (i) i--;
  9437  02DB  0855               	movf	find_volume@i^(0+128),w
  9438  02DC  0456               	iorwf	(find_volume@i+1)^(0+128),w
  9439  02DD  1903               	btfsc	3,2
  9440  02DE  2AE3               	goto	l5264
  9441  02DF  3001               	movlw	1
  9442  02E0  02D5               	subwf	find_volume@i^(0+128),f
  9443  02E1  3000               	movlw	0
  9444  02E2  3BD6               	subwfb	(find_volume@i+1)^(0+128),f
  9445  02E3                     l5264:	
  9446                           
  9447                           ;ff.c: 2264: bsect = br[i];
  9448  02E3  0855               	movf	find_volume@i^(0+128),w
  9449  02E4  0020               	movlb	0	; select bank0
  9450  02E5  00DC               	movwf	??_find_volume
  9451  02E6  3001               	movlw	1
  9452  02E7                     u7335:	
  9453  02E7  35DC               	lslf	??_find_volume,f
  9454  02E8  3EFF               	addlw	-1
  9455  02E9  1D03               	skipz
  9456  02EA  2AE7               	goto	u7335
  9457  02EB  355C               	lslf	??_find_volume,w
  9458  02EC  3EA0               	addlw	(low (find_volume@br| 0))& (0+255)
  9459  02ED  0086               	movwf	6
  9460  02EE  0187               	clrf	7
  9461  02EF  3F40               	moviw [0]fsr1
  9462  02F0  0021               	movlb	1	; select bank1
  9463  02F1  00D1               	movwf	find_volume@bsect^(0+128)
  9464  02F2  3F41               	moviw [1]fsr1
  9465  02F3  00D2               	movwf	(find_volume@bsect+1)^(0+128)
  9466  02F4  3F42               	moviw [2]fsr1
  9467  02F5  00D3               	movwf	(find_volume@bsect+2)^(0+128)
  9468  02F6  3F43               	moviw [3]fsr1
  9469  02F7  00D4               	movwf	(find_volume@bsect+3)^(0+128)
  9470                           
  9471                           ;ff.c: 2265: fmt = bsect ? check_fs(fs, bsect) : 2;
  9472  02F8  0854               	movf	(find_volume@bsect+3)^(0+128),w
  9473  02F9  0453               	iorwf	(find_volume@bsect+2)^(0+128),w
  9474  02FA  0452               	iorwf	(find_volume@bsect+1)^(0+128),w
  9475  02FB  0451               	iorwf	find_volume@bsect^(0+128),w
  9476  02FC  1D03               	skipz
  9477  02FD  2B03               	goto	l5270
  9478  02FE  3002               	movlw	2
  9479  02FF  00B4               	movwf	_find_volume$941^(0+128)
  9480  0300  3000               	movlw	0
  9481  0301  00B5               	movwf	(_find_volume$941^(0+128)+1)
  9482  0302  2B26               	goto	l5272
  9483  0303                     l5270:	
  9484  0303  0859               	movf	(find_volume@fs+1)^(0+128),w
  9485  0304  0020               	movlb	0	; select bank0
  9486  0305  00CF               	movwf	check_fs@fs+1
  9487  0306  0021               	movlb	1	; select bank1
  9488  0307  0858               	movf	find_volume@fs^(0+128),w
  9489  0308  0020               	movlb	0	; select bank0
  9490  0309  00CE               	movwf	check_fs@fs
  9491  030A  0021               	movlb	1	; select bank1
  9492  030B  0854               	movf	(find_volume@bsect+3)^(0+128),w
  9493  030C  0020               	movlb	0	; select bank0
  9494  030D  00D3               	movwf	check_fs@sect+3
  9495  030E  0021               	movlb	1	; select bank1
  9496  030F  0853               	movf	(find_volume@bsect+2)^(0+128),w
  9497  0310  0020               	movlb	0	; select bank0
  9498  0311  00D2               	movwf	check_fs@sect+2
  9499  0312  0021               	movlb	1	; select bank1
  9500  0313  0852               	movf	(find_volume@bsect+1)^(0+128),w
  9501  0314  0020               	movlb	0	; select bank0
  9502  0315  00D1               	movwf	check_fs@sect+1
  9503  0316  0021               	movlb	1	; select bank1
  9504  0317  0851               	movf	find_volume@bsect^(0+128),w
  9505  0318  0020               	movlb	0	; select bank0
  9506  0319  00D0               	movwf	check_fs@sect
  9507  031A  31A0  203C  3181   	fcall	_check_fs
  9508  031D  00DC               	movwf	??_find_volume
  9509  031E  01DD               	clrf	??_find_volume+1
  9510  031F  085C               	movf	??_find_volume,w
  9511  0320  0021               	movlb	1	; select bank1
  9512  0321  00B4               	movwf	_find_volume$941^(0+128)
  9513  0322  0020               	movlb	0	; select bank0
  9514  0323  085D               	movf	??_find_volume+1,w
  9515  0324  0021               	movlb	1	; select bank1
  9516  0325  00B5               	movwf	(_find_volume$941+1)^(0+128)
  9517  0326                     l5272:	
  9518                           
  9519                           ;ff.c: 2266: } while (!0 && fmt && ++i < 4);
  9520  0326  0834               	movf	_find_volume$941^(0+128),w
  9521  0327  0020               	movlb	0	; select bank0
  9522  0328  00DC               	movwf	??_find_volume
  9523  0329  085C               	movf	??_find_volume,w
  9524  032A  0021               	movlb	1	; select bank1
  9525  032B  00D7               	movwf	find_volume@fmt^(0+128)
  9526  032C  0857               	movf	find_volume@fmt^(0+128),w
  9527  032D  1903               	btfsc	3,2
  9528  032E  2B3A               	goto	l5278
  9529  032F  3001               	movlw	1
  9530  0330  07D5               	addwf	find_volume@i^(0+128),f
  9531  0331  3000               	movlw	0
  9532  0332  3DD6               	addwfc	(find_volume@i+1)^(0+128),f
  9533  0333  3000               	movlw	0
  9534  0334  0256               	subwf	(find_volume@i+1)^(0+128),w
  9535  0335  3004               	movlw	4
  9536  0336  1903               	skipnz
  9537  0337  0255               	subwf	find_volume@i^(0+128),w
  9538  0338  1C03               	skipc
  9539  0339  2AE3               	goto	l5264
  9540  033A                     l5278:	
  9541                           
  9542                           ;ff.c: 2267: };ff.c: 2268: if (fmt == 3) return FR_DISK_ERR;
  9543  033A  3003               	movlw	3
  9544  033B  0657               	xorwf	find_volume@fmt^(0+128),w
  9545  033C  1D03               	btfss	3,2
  9546  033D  2B40               	goto	l5284
  9547  033E  3001               	movlw	1
  9548  033F  0008               	return
  9549  0340                     l5284:	
  9550                           
  9551                           ;ff.c: 2269: if (fmt) return FR_NO_FILESYSTEM;
  9552  0340  0857               	movf	find_volume@fmt^(0+128),w
  9553  0341  1903               	btfsc	3,2
  9554  0342  2B45               	goto	l5290
  9555  0343                     l5286:	
  9556  0343  300D               	movlw	13
  9557  0344  0008               	return
  9558  0345                     l5290:	
  9559                           
  9560                           ;ff.c: 2273: if ((WORD)(*(WORD*)(BYTE*)(fs->win + 11)) != ((UINT)512))
  9561  0345  0858               	movf	find_volume@fs^(0+128),w
  9562  0346  3E39               	addlw	57
  9563  0347  0086               	movwf	6
  9564  0348  3000               	movlw	0
  9565  0349  3D59               	addwfc	(find_volume@fs+1)^(0+128),w
  9566  034A  0087               	movwf	7
  9567  034B  0016               	moviw fsr1++
  9568  034C  0020               	movlb	0	; select bank0
  9569  034D  00DC               	movwf	??_find_volume
  9570  034E  0016               	moviw fsr1++
  9571  034F  3A02               	xorlw	2
  9572  0350  04DC               	iorwf	??_find_volume,f
  9573  0351  1D03               	btfss	3,2
  9574  0352  2B43               	goto	l5286
  9575                           
  9576                           ;ff.c: 2276: fasize = (WORD)(*(WORD*)(BYTE*)(fs->win + 22));
  9577  0353  0021               	movlb	1	; select bank1
  9578  0354  0858               	movf	find_volume@fs^(0+128),w
  9579  0355  3E44               	addlw	68
  9580  0356  0086               	movwf	6
  9581  0357  3000               	movlw	0
  9582  0358  3D59               	addwfc	(find_volume@fs+1)^(0+128),w
  9583  0359  0087               	movwf	7
  9584  035A  3F40               	moviw [0]fsr1
  9585  035B  0020               	movlb	0	; select bank0
  9586  035C  00DC               	movwf	??_find_volume
  9587  035D  3F41               	moviw [1]fsr1
  9588  035E  00DD               	movwf	??_find_volume+1
  9589  035F  085C               	movf	??_find_volume,w
  9590  0360  0021               	movlb	1	; select bank1
  9591  0361  00CD               	movwf	find_volume@fasize^(0+128)
  9592  0362  0020               	movlb	0	; select bank0
  9593  0363  085D               	movf	??_find_volume+1,w
  9594  0364  0021               	movlb	1	; select bank1
  9595  0365  00CE               	movwf	(find_volume@fasize^(0+128)+1)
  9596  0366  01CF               	clrf	(find_volume@fasize^(0+128)+2)
  9597  0367  01D0               	clrf	(find_volume@fasize^(0+128)+3)
  9598                           
  9599                           ;ff.c: 2277: if (!fasize) fasize = (DWORD)(*(DWORD*)(BYTE*)(fs->win + 36));
  9600  0368  0850               	movf	(find_volume@fasize+3)^(0+128),w
  9601  0369  044F               	iorwf	(find_volume@fasize+2)^(0+128),w
  9602  036A  044E               	iorwf	(find_volume@fasize+1)^(0+128),w
  9603  036B  044D               	iorwf	find_volume@fasize^(0+128),w
  9604  036C  1D03               	skipz
  9605  036D  2B7C               	goto	l5302
  9606  036E  0858               	movf	find_volume@fs^(0+128),w
  9607  036F  3E52               	addlw	82
  9608  0370  0086               	movwf	6
  9609  0371  3000               	movlw	0
  9610  0372  3D59               	addwfc	(find_volume@fs+1)^(0+128),w
  9611  0373  0087               	movwf	7
  9612  0374  3F40               	moviw [0]fsr1
  9613  0375  00CD               	movwf	find_volume@fasize^(0+128)
  9614  0376  3F41               	moviw [1]fsr1
  9615  0377  00CE               	movwf	(find_volume@fasize+1)^(0+128)
  9616  0378  3F42               	moviw [2]fsr1
  9617  0379  00CF               	movwf	(find_volume@fasize+2)^(0+128)
  9618  037A  3F43               	moviw [3]fsr1
  9619  037B  00D0               	movwf	(find_volume@fasize+3)^(0+128)
  9620  037C                     l5302:	
  9621                           
  9622                           ;ff.c: 2278: fs->fsize = fasize;
  9623  037C  0858               	movf	find_volume@fs^(0+128),w
  9624  037D  0086               	movwf	6
  9625  037E  0859               	movf	(find_volume@fs+1)^(0+128),w
  9626  037F  0087               	movwf	7
  9627  0380  3156               	addfsr 1,22
  9628  0381  084D               	movf	find_volume@fasize^(0+128),w
  9629  0382  3FC0               	movwi [0]fsr1
  9630  0383  084E               	movf	(find_volume@fasize+1)^(0+128),w
  9631  0384  3FC1               	movwi [1]fsr1
  9632  0385  084F               	movf	(find_volume@fasize+2)^(0+128),w
  9633  0386  3FC2               	movwi [2]fsr1
  9634  0387  0850               	movf	(find_volume@fasize+3)^(0+128),w
  9635  0388  3FC3               	movwi [3]fsr1
  9636                           
  9637                           ;ff.c: 2280: fs->n_fats = fs->win[16];
  9638  0389  0858               	movf	find_volume@fs^(0+128),w
  9639  038A  3E3E               	addlw	62
  9640  038B  0086               	movwf	6
  9641  038C  3000               	movlw	0
  9642  038D  3D59               	addwfc	(find_volume@fs+1)^(0+128),w
  9643  038E  0087               	movwf	7
  9644  038F  0801               	movf	1,w
  9645  0390  0020               	movlb	0	; select bank0
  9646  0391  00DC               	movwf	??_find_volume
  9647  0392  0021               	movlb	1	; select bank1
  9648  0393  0858               	movf	find_volume@fs^(0+128),w
  9649  0394  3E03               	addlw	3
  9650  0395  0020               	movlb	0	; select bank0
  9651  0396  00DD               	movwf	??_find_volume+1
  9652  0397  3000               	movlw	0
  9653  0398  0021               	movlb	1	; select bank1
  9654  0399  3D59               	addwfc	(find_volume@fs+1)^(0+128),w
  9655  039A  0020               	movlb	0	; select bank0
  9656  039B  00DE               	movwf	??_find_volume+2
  9657  039C  085D               	movf	??_find_volume+1,w
  9658  039D  0086               	movwf	6
  9659  039E  085E               	movf	??_find_volume+2,w
  9660  039F  0087               	movwf	7
  9661  03A0  085C               	movf	??_find_volume,w
  9662  03A1  0081               	movwf	1
  9663                           
  9664                           ;ff.c: 2281: if (fs->n_fats != 1 && fs->n_fats != 2)
  9665  03A2  0021               	movlb	1	; select bank1
  9666  03A3  0858               	movf	find_volume@fs^(0+128),w
  9667  03A4  0086               	movwf	6
  9668  03A5  0859               	movf	(find_volume@fs+1)^(0+128),w
  9669  03A6  0087               	movwf	7
  9670  03A7  3143               	addfsr 1,3
  9671  03A8  0301               	decf	1,w
  9672  03A9  1903               	btfsc	3,2
  9673  03AA  2BB4               	goto	l5314
  9674  03AB  0858               	movf	find_volume@fs^(0+128),w
  9675  03AC  0086               	movwf	6
  9676  03AD  0859               	movf	(find_volume@fs+1)^(0+128),w
  9677  03AE  0087               	movwf	7
  9678  03AF  3143               	addfsr 1,3
  9679  03B0  3002               	movlw	2
  9680  03B1  0601               	xorwf	1,w
  9681  03B2  1D03               	btfss	3,2
  9682  03B3  2B43               	goto	l5286
  9683  03B4                     l5314:	
  9684                           
  9685                           ;ff.c: 2283: fasize *= fs->n_fats;
  9686  03B4  0858               	movf	find_volume@fs^(0+128),w
  9687  03B5  0086               	movwf	6
  9688  03B6  0859               	movf	(find_volume@fs+1)^(0+128),w
  9689  03B7  0087               	movwf	7
  9690  03B8  3143               	addfsr 1,3
  9691  03B9  0801               	movf	1,w
  9692  03BA  0020               	movlb	0	; select bank0
  9693  03BB  00DC               	movwf	??_find_volume
  9694  03BC  01DD               	clrf	??_find_volume+1
  9695  03BD  01DE               	clrf	??_find_volume+2
  9696  03BE  01DF               	clrf	??_find_volume+3
  9697  03BF  085F               	movf	??_find_volume+3,w
  9698  03C0  00F3               	movwf	___lmul@multiplier+3
  9699  03C1  085E               	movf	??_find_volume+2,w
  9700  03C2  00F2               	movwf	___lmul@multiplier+2
  9701  03C3  085D               	movf	??_find_volume+1,w
  9702  03C4  00F1               	movwf	___lmul@multiplier+1
  9703  03C5  085C               	movf	??_find_volume,w
  9704  03C6  00F0               	movwf	___lmul@multiplier
  9705  03C7  0021               	movlb	1	; select bank1
  9706  03C8  0850               	movf	(find_volume@fasize+3)^(0+128),w
  9707  03C9  00F7               	movwf	___lmul@multiplicand+3
  9708  03CA  084F               	movf	(find_volume@fasize+2)^(0+128),w
  9709  03CB  00F6               	movwf	___lmul@multiplicand+2
  9710  03CC  084E               	movf	(find_volume@fasize+1)^(0+128),w
  9711  03CD  00F5               	movwf	___lmul@multiplicand+1
  9712  03CE  084D               	movf	find_volume@fasize^(0+128),w
  9713  03CF  00F4               	movwf	___lmul@multiplicand
  9714  03D0  31AB  23B8  3181   	fcall	___lmul
  9715  03D3  0873               	movf	?___lmul+3,w
  9716  03D4  0021               	movlb	1	; select bank1
  9717  03D5  00D0               	movwf	(find_volume@fasize+3)^(0+128)
  9718  03D6  0872               	movf	?___lmul+2,w
  9719  03D7  00CF               	movwf	(find_volume@fasize+2)^(0+128)
  9720  03D8  0871               	movf	?___lmul+1,w
  9721  03D9  00CE               	movwf	(find_volume@fasize+1)^(0+128)
  9722  03DA  0870               	movf	?___lmul,w
  9723  03DB  00CD               	movwf	find_volume@fasize^(0+128)
  9724                           
  9725                           ;ff.c: 2285: fs->csize = fs->win[13];
  9726  03DC  0858               	movf	find_volume@fs^(0+128),w
  9727  03DD  3E3B               	addlw	59
  9728  03DE  0086               	movwf	6
  9729  03DF  3000               	movlw	0
  9730  03E0  3D59               	addwfc	(find_volume@fs+1)^(0+128),w
  9731  03E1  0087               	movwf	7
  9732  03E2  0801               	movf	1,w
  9733  03E3  0020               	movlb	0	; select bank0
  9734  03E4  00DC               	movwf	??_find_volume
  9735  03E5  0021               	movlb	1	; select bank1
  9736  03E6  0858               	movf	find_volume@fs^(0+128),w
  9737  03E7  3E02               	addlw	2
  9738  03E8  0020               	movlb	0	; select bank0
  9739  03E9  00DD               	movwf	??_find_volume+1
  9740  03EA  3000               	movlw	0
  9741  03EB  0021               	movlb	1	; select bank1
  9742  03EC  3D59               	addwfc	(find_volume@fs+1)^(0+128),w
  9743  03ED  0020               	movlb	0	; select bank0
  9744  03EE  00DE               	movwf	??_find_volume+2
  9745  03EF  085D               	movf	??_find_volume+1,w
  9746  03F0  0086               	movwf	6
  9747  03F1  085E               	movf	??_find_volume+2,w
  9748  03F2  0087               	movwf	7
  9749  03F3  085C               	movf	??_find_volume,w
  9750  03F4  0081               	movwf	1
  9751                           
  9752                           ;ff.c: 2286: if (!fs->csize || (fs->csize & (fs->csize - 1)))
  9753  03F5  0021               	movlb	1	; select bank1
  9754  03F6  0858               	movf	find_volume@fs^(0+128),w
  9755  03F7  0086               	movwf	6
  9756  03F8  0859               	movf	(find_volume@fs+1)^(0+128),w
  9757  03F9  0087               	movwf	7
  9758  03FA  3142               	addfsr 1,2
  9759  03FB  0801               	movf	1,w
  9760  03FC  1903               	btfsc	3,2
  9761  03FD  2B43               	goto	l5286
  9762  03FE  0858               	movf	find_volume@fs^(0+128),w
  9763  03FF  0086               	movwf	6
  9764  0400  0859               	movf	(find_volume@fs+1)^(0+128),w
  9765  0401  0087               	movwf	7
  9766  0402  3142               	addfsr 1,2
  9767  0403  0858               	movf	find_volume@fs^(0+128),w
  9768  0404  0084               	movwf	4
  9769  0405  0859               	movf	(find_volume@fs+1)^(0+128),w
  9770  0406  0085               	movwf	5
  9771  0407  3102               	addfsr 0,2
  9772  0408  0800               	movf	0,w
  9773  0409  3EFF               	addlw	255
  9774  040A  0501               	andwf	1,w
  9775  040B  1D03               	btfss	3,2
  9776  040C  2B43               	goto	l5286
  9777                           
  9778                           ;ff.c: 2289: fs->n_rootdir = (WORD)(*(WORD*)(BYTE*)(fs->win + 17));
  9779  040D  0858               	movf	find_volume@fs^(0+128),w
  9780  040E  3E3F               	addlw	63
  9781  040F  0086               	movwf	6
  9782  0410  3000               	movlw	0
  9783  0411  3D59               	addwfc	(find_volume@fs+1)^(0+128),w
  9784  0412  0087               	movwf	7
  9785  0413  0858               	movf	find_volume@fs^(0+128),w
  9786  0414  0084               	movwf	4
  9787  0415  0859               	movf	(find_volume@fs+1)^(0+128),w
  9788  0416  0085               	movwf	5
  9789  0417  3108               	addfsr 0,8
  9790  0418  3F40               	moviw [0]fsr1
  9791  0419  3F80               	movwi [0]fsr0
  9792  041A  3F41               	moviw [1]fsr1
  9793  041B  3F81               	movwi [1]fsr0
  9794                           
  9795                           ;ff.c: 2290: if (fs->n_rootdir % (((UINT)512) / 32))
  9796  041C  0858               	movf	find_volume@fs^(0+128),w
  9797  041D  0086               	movwf	6
  9798  041E  0859               	movf	(find_volume@fs+1)^(0+128),w
  9799  041F  0087               	movwf	7
  9800  0420  3148               	addfsr 1,8
  9801  0421  0801               	movf	1,w
  9802  0422  390F               	andlw	15
  9803  0423  1D03               	btfss	3,2
  9804  0424  2B43               	goto	l5286
  9805                           
  9806                           ;ff.c: 2293: tsect = (WORD)(*(WORD*)(BYTE*)(fs->win + 19));
  9807  0425  0858               	movf	find_volume@fs^(0+128),w
  9808  0426  3E41               	addlw	65
  9809  0427  0086               	movwf	6
  9810  0428  3000               	movlw	0
  9811  0429  3D59               	addwfc	(find_volume@fs+1)^(0+128),w
  9812  042A  0087               	movwf	7
  9813  042B  3F40               	moviw [0]fsr1
  9814  042C  0020               	movlb	0	; select bank0
  9815  042D  00DC               	movwf	??_find_volume
  9816  042E  3F41               	moviw [1]fsr1
  9817  042F  00DD               	movwf	??_find_volume+1
  9818  0430  085C               	movf	??_find_volume,w
  9819  0431  0021               	movlb	1	; select bank1
  9820  0432  00C4               	movwf	find_volume@tsect^(0+128)
  9821  0433  0020               	movlb	0	; select bank0
  9822  0434  085D               	movf	??_find_volume+1,w
  9823  0435  0021               	movlb	1	; select bank1
  9824  0436  00C5               	movwf	(find_volume@tsect^(0+128)+1)
  9825  0437  01C6               	clrf	(find_volume@tsect^(0+128)+2)
  9826  0438  01C7               	clrf	(find_volume@tsect^(0+128)+3)
  9827                           
  9828                           ;ff.c: 2294: if (!tsect) tsect = (DWORD)(*(DWORD*)(BYTE*)(fs->win + 32));
  9829  0439  0847               	movf	(find_volume@tsect+3)^(0+128),w
  9830  043A  0446               	iorwf	(find_volume@tsect+2)^(0+128),w
  9831  043B  0445               	iorwf	(find_volume@tsect+1)^(0+128),w
  9832  043C  0444               	iorwf	find_volume@tsect^(0+128),w
  9833  043D  1D03               	skipz
  9834  043E  2C4D               	goto	l630
  9835  043F  0858               	movf	find_volume@fs^(0+128),w
  9836  0440  3E4E               	addlw	78
  9837  0441  0086               	movwf	6
  9838  0442  3000               	movlw	0
  9839  0443  3D59               	addwfc	(find_volume@fs+1)^(0+128),w
  9840  0444  0087               	movwf	7
  9841  0445  3F40               	moviw [0]fsr1
  9842  0446  00C4               	movwf	find_volume@tsect^(0+128)
  9843  0447  3F41               	moviw [1]fsr1
  9844  0448  00C5               	movwf	(find_volume@tsect+1)^(0+128)
  9845  0449  3F42               	moviw [2]fsr1
  9846  044A  00C6               	movwf	(find_volume@tsect+2)^(0+128)
  9847  044B  3F43               	moviw [3]fsr1
  9848  044C  00C7               	movwf	(find_volume@tsect+3)^(0+128)
  9849  044D                     l630:	
  9850                           
  9851                           ;ff.c: 2296: nrsv = (WORD)(*(WORD*)(BYTE*)(fs->win + 14));
  9852  044D  0858               	movf	find_volume@fs^(0+128),w
  9853  044E  3E3C               	addlw	60
  9854  044F  0086               	movwf	6
  9855  0450  3000               	movlw	0
  9856  0451  3D59               	addwfc	(find_volume@fs+1)^(0+128),w
  9857  0452  0087               	movwf	7
  9858  0453  3F40               	moviw [0]fsr1
  9859  0454  00C2               	movwf	find_volume@nrsv^(0+128)
  9860  0455  3F41               	moviw [1]fsr1
  9861  0456  00C3               	movwf	(find_volume@nrsv+1)^(0+128)
  9862                           
  9863                           ;ff.c: 2297: if (!nrsv) return FR_NO_FILESYSTEM;
  9864  0457  0842               	movf	find_volume@nrsv^(0+128),w
  9865  0458  0443               	iorwf	(find_volume@nrsv+1)^(0+128),w
  9866  0459  1903               	btfsc	3,2
  9867  045A  2B43               	goto	l5286
  9868                           
  9869                           ;ff.c: 2300: sysect = nrsv + fasize + fs->n_rootdir / (((UINT)512) / 32);
  9870  045B  084D               	movf	find_volume@fasize^(0+128),w
  9871  045C  0020               	movlb	0	; select bank0
  9872  045D  00DC               	movwf	??_find_volume
  9873  045E  0021               	movlb	1	; select bank1
  9874  045F  084E               	movf	(find_volume@fasize+1)^(0+128),w
  9875  0460  0020               	movlb	0	; select bank0
  9876  0461  00DD               	movwf	??_find_volume+1
  9877  0462  0021               	movlb	1	; select bank1
  9878  0463  084F               	movf	(find_volume@fasize+2)^(0+128),w
  9879  0464  0020               	movlb	0	; select bank0
  9880  0465  00DE               	movwf	??_find_volume+2
  9881  0466  0021               	movlb	1	; select bank1
  9882  0467  0850               	movf	(find_volume@fasize+3)^(0+128),w
  9883  0468  0020               	movlb	0	; select bank0
  9884  0469  00DF               	movwf	??_find_volume+3
  9885  046A  0021               	movlb	1	; select bank1
  9886  046B  0858               	movf	find_volume@fs^(0+128),w
  9887  046C  0086               	movwf	6
  9888  046D  0859               	movf	(find_volume@fs+1)^(0+128),w
  9889  046E  0087               	movwf	7
  9890  046F  3148               	addfsr 1,8
  9891  0470  3F40               	moviw [0]fsr1
  9892  0471  0020               	movlb	0	; select bank0
  9893  0472  00E0               	movwf	??_find_volume+4
  9894  0473  3F41               	moviw [1]fsr1
  9895  0474  00E1               	movwf	??_find_volume+5
  9896  0475  3004               	movlw	4
  9897  0476                     u7485:	
  9898  0476  36E1               	lsrf	??_find_volume+5,f
  9899  0477  0CE0               	rrf	??_find_volume+4,f
  9900  0478  0B89               	decfsz	9,f
  9901  0479  2C76               	goto	u7485
  9902  047A  0860               	movf	??_find_volume+4,w
  9903  047B  00E2               	movwf	??_find_volume+6
  9904  047C  0861               	movf	??_find_volume+5,w
  9905  047D  00E3               	movwf	??_find_volume+7
  9906  047E  01E4               	clrf	??_find_volume+8
  9907  047F  01E5               	clrf	??_find_volume+9
  9908  0480  0021               	movlb	1	; select bank1
  9909  0481  0842               	movf	find_volume@nrsv^(0+128),w
  9910  0482  0020               	movlb	0	; select bank0
  9911  0483  00E6               	movwf	??_find_volume+10
  9912  0484  0021               	movlb	1	; select bank1
  9913  0485  0843               	movf	(find_volume@nrsv+1)^(0+128),w
  9914  0486  0020               	movlb	0	; select bank0
  9915  0487  00E7               	movwf	??_find_volume+11
  9916  0488  01E8               	clrf	??_find_volume+12
  9917  0489  01E9               	clrf	??_find_volume+13
  9918  048A  0866               	movf	??_find_volume+10,w
  9919  048B  07E2               	addwf	??_find_volume+6,f
  9920  048C  0867               	movf	??_find_volume+11,w
  9921  048D  3DE3               	addwfc	??_find_volume+7,f
  9922  048E  0868               	movf	??_find_volume+12,w
  9923  048F  3DE4               	addwfc	??_find_volume+8,f
  9924  0490  0869               	movf	??_find_volume+13,w
  9925  0491  3DE5               	addwfc	??_find_volume+9,f
  9926  0492  0862               	movf	??_find_volume+6,w
  9927  0493  07DC               	addwf	??_find_volume,f
  9928  0494  0863               	movf	??_find_volume+7,w
  9929  0495  3DDD               	addwfc	??_find_volume+1,f
  9930  0496  0864               	movf	??_find_volume+8,w
  9931  0497  3DDE               	addwfc	??_find_volume+2,f
  9932  0498  0865               	movf	??_find_volume+9,w
  9933  0499  3DDF               	addwfc	??_find_volume+3,f
  9934  049A  085F               	movf	??_find_volume+3,w
  9935  049B  0021               	movlb	1	; select bank1
  9936  049C  00BF               	movwf	(find_volume@sysect+3)^(0+128)
  9937  049D  0020               	movlb	0	; select bank0
  9938  049E  085E               	movf	??_find_volume+2,w
  9939  049F  0021               	movlb	1	; select bank1
  9940  04A0  00BE               	movwf	(find_volume@sysect+2)^(0+128)
  9941  04A1  0020               	movlb	0	; select bank0
  9942  04A2  085D               	movf	??_find_volume+1,w
  9943  04A3  0021               	movlb	1	; select bank1
  9944  04A4  00BD               	movwf	(find_volume@sysect+1)^(0+128)
  9945  04A5  0020               	movlb	0	; select bank0
  9946  04A6  085C               	movf	??_find_volume,w
  9947  04A7  0021               	movlb	1	; select bank1
  9948  04A8  00BC               	movwf	find_volume@sysect^(0+128)
  9949                           
  9950                           ;ff.c: 2301: if (tsect < sysect) return FR_NO_FILESYSTEM;
  9951  04A9  083F               	movf	(find_volume@sysect+3)^(0+128),w
  9952  04AA  0247               	subwf	(find_volume@tsect+3)^(0+128),w
  9953  04AB  1D03               	skipz
  9954  04AC  2CB7               	goto	u7495
  9955  04AD  083E               	movf	(find_volume@sysect+2)^(0+128),w
  9956  04AE  0246               	subwf	(find_volume@tsect+2)^(0+128),w
  9957  04AF  1D03               	skipz
  9958  04B0  2CB7               	goto	u7495
  9959  04B1  083D               	movf	(find_volume@sysect+1)^(0+128),w
  9960  04B2  0245               	subwf	(find_volume@tsect+1)^(0+128),w
  9961  04B3  1D03               	skipz
  9962  04B4  2CB7               	goto	u7495
  9963  04B5  083C               	movf	find_volume@sysect^(0+128),w
  9964  04B6  0244               	subwf	find_volume@tsect^(0+128),w
  9965  04B7                     u7495:	
  9966  04B7  1C03               	btfss	3,0
  9967  04B8  2B43               	goto	l5286
  9968                           
  9969                           ;ff.c: 2302: nclst = (tsect - sysect) / fs->csize;
  9970  04B9  0858               	movf	find_volume@fs^(0+128),w
  9971  04BA  0086               	movwf	6
  9972  04BB  0859               	movf	(find_volume@fs+1)^(0+128),w
  9973  04BC  0087               	movwf	7
  9974  04BD  3142               	addfsr 1,2
  9975  04BE  0801               	movf	1,w
  9976  04BF  0020               	movlb	0	; select bank0
  9977  04C0  00DC               	movwf	??_find_volume
  9978  04C1  01DD               	clrf	??_find_volume+1
  9979  04C2  01DE               	clrf	??_find_volume+2
  9980  04C3  01DF               	clrf	??_find_volume+3
  9981  04C4  085F               	movf	??_find_volume+3,w
  9982  04C5  00F3               	movwf	___lldiv@divisor+3
  9983  04C6  085E               	movf	??_find_volume+2,w
  9984  04C7  00F2               	movwf	___lldiv@divisor+2
  9985  04C8  085D               	movf	??_find_volume+1,w
  9986  04C9  00F1               	movwf	___lldiv@divisor+1
  9987  04CA  085C               	movf	??_find_volume,w
  9988  04CB  00F0               	movwf	___lldiv@divisor
  9989  04CC  0021               	movlb	1	; select bank1
  9990  04CD  083C               	movf	find_volume@sysect^(0+128),w
  9991  04CE  0244               	subwf	find_volume@tsect^(0+128),w
  9992  04CF  0020               	movlb	0	; select bank0
  9993  04D0  00E0               	movwf	??_find_volume+4
  9994  04D1  0021               	movlb	1	; select bank1
  9995  04D2  083D               	movf	(find_volume@sysect+1)^(0+128),w
  9996  04D3  3B45               	subwfb	(find_volume@tsect+1)^(0+128),w
  9997  04D4  0020               	movlb	0	; select bank0
  9998  04D5  00E1               	movwf	??_find_volume+5
  9999  04D6  0021               	movlb	1	; select bank1
 10000  04D7  083E               	movf	(find_volume@sysect+2)^(0+128),w
 10001  04D8  3B46               	subwfb	(find_volume@tsect+2)^(0+128),w
 10002  04D9  0020               	movlb	0	; select bank0
 10003  04DA  00E2               	movwf	??_find_volume+6
 10004  04DB  0021               	movlb	1	; select bank1
 10005  04DC  083F               	movf	(find_volume@sysect+3)^(0+128),w
 10006  04DD  3B47               	subwfb	(find_volume@tsect+3)^(0+128),w
 10007  04DE  0020               	movlb	0	; select bank0
 10008  04DF  00E3               	movwf	??_find_volume+7
 10009  04E0  0863               	movf	??_find_volume+7,w
 10010  04E1  00F7               	movwf	___lldiv@dividend+3
 10011  04E2  0862               	movf	??_find_volume+6,w
 10012  04E3  00F6               	movwf	___lldiv@dividend+2
 10013  04E4  0861               	movf	??_find_volume+5,w
 10014  04E5  00F5               	movwf	___lldiv@dividend+1
 10015  04E6  0860               	movf	??_find_volume+4,w
 10016  04E7  00F4               	movwf	___lldiv@dividend
 10017  04E8  31AC  24E4  3181   	fcall	___lldiv
 10018  04EB  0873               	movf	?___lldiv+3,w
 10019  04EC  0021               	movlb	1	; select bank1
 10020  04ED  00CB               	movwf	(find_volume@nclst+3)^(0+128)
 10021  04EE  0872               	movf	?___lldiv+2,w
 10022  04EF  00CA               	movwf	(find_volume@nclst+2)^(0+128)
 10023  04F0  0871               	movf	?___lldiv+1,w
 10024  04F1  00C9               	movwf	(find_volume@nclst+1)^(0+128)
 10025  04F2  0870               	movf	?___lldiv,w
 10026  04F3  00C8               	movwf	find_volume@nclst^(0+128)
 10027                           
 10028                           ;ff.c: 2303: if (!nclst) return FR_NO_FILESYSTEM;
 10029  04F4  084B               	movf	(find_volume@nclst+3)^(0+128),w
 10030  04F5  044A               	iorwf	(find_volume@nclst+2)^(0+128),w
 10031  04F6  0449               	iorwf	(find_volume@nclst+1)^(0+128),w
 10032  04F7  0448               	iorwf	find_volume@nclst^(0+128),w
 10033  04F8  1903               	btfsc	3,2
 10034  04F9  2B43               	goto	l5286
 10035                           
 10036                           ;ff.c: 2304: fmt = 1;
 10037  04FA  01D7               	clrf	find_volume@fmt^(0+128)
 10038  04FB  0AD7               	incf	find_volume@fmt^(0+128),f
 10039                           
 10040                           ;ff.c: 2305: if (nclst >= 4086U) fmt = 2;
 10041  04FC  084B               	movf	(find_volume@nclst+3)^(0+128),w
 10042  04FD  1D03               	btfss	3,2
 10043  04FE  2D08               	goto	l5364
 10044  04FF  084A               	movf	(find_volume@nclst+2)^(0+128),w
 10045  0500  1D03               	btfss	3,2
 10046  0501  2D08               	goto	l5364
 10047  0502  30F6               	movlw	246
 10048  0503  0248               	subwf	find_volume@nclst^(0+128),w
 10049  0504  300F               	movlw	15
 10050  0505  3B49               	subwfb	(find_volume@nclst+1)^(0+128),w
 10051  0506  1C03               	btfss	3,0
 10052  0507  2D0E               	goto	l5366
 10053  0508                     l5364:	
 10054  0508  3002               	movlw	2
 10055  0509  0020               	movlb	0	; select bank0
 10056  050A  00DC               	movwf	??_find_volume
 10057  050B  085C               	movf	??_find_volume,w
 10058  050C  0021               	movlb	1	; select bank1
 10059  050D  00D7               	movwf	find_volume@fmt^(0+128)
 10060  050E                     l5366:	
 10061                           
 10062                           ;ff.c: 2306: if (nclst >= 65526U) fmt = 3;
 10063  050E  084B               	movf	(find_volume@nclst+3)^(0+128),w
 10064  050F  1D03               	btfss	3,2
 10065  0510  2D1A               	goto	l5368
 10066  0511  084A               	movf	(find_volume@nclst+2)^(0+128),w
 10067  0512  1D03               	btfss	3,2
 10068  0513  2D1A               	goto	l5368
 10069  0514  30F6               	movlw	246
 10070  0515  0248               	subwf	find_volume@nclst^(0+128),w
 10071  0516  30FF               	movlw	255
 10072  0517  3B49               	subwfb	(find_volume@nclst+1)^(0+128),w
 10073  0518  1C03               	btfss	3,0
 10074  0519  2D20               	goto	l5370
 10075  051A                     l5368:	
 10076  051A  3003               	movlw	3
 10077  051B  0020               	movlb	0	; select bank0
 10078  051C  00DC               	movwf	??_find_volume
 10079  051D  085C               	movf	??_find_volume,w
 10080  051E  0021               	movlb	1	; select bank1
 10081  051F  00D7               	movwf	find_volume@fmt^(0+128)
 10082  0520                     l5370:	
 10083                           
 10084                           ;ff.c: 2309: fs->n_fatent = nclst + 2;
 10085  0520  3002               	movlw	2
 10086  0521  0020               	movlb	0	; select bank0
 10087  0522  00DC               	movwf	??_find_volume
 10088  0523  3000               	movlw	0
 10089  0524  00DD               	movwf	??_find_volume+1
 10090  0525  3000               	movlw	0
 10091  0526  00DE               	movwf	??_find_volume+2
 10092  0527  3000               	movlw	0
 10093  0528  00DF               	movwf	??_find_volume+3
 10094  0529  0021               	movlb	1	; select bank1
 10095  052A  0848               	movf	find_volume@nclst^(0+128),w
 10096  052B  0020               	movlb	0	; select bank0
 10097  052C  07DC               	addwf	??_find_volume,f
 10098  052D  0021               	movlb	1	; select bank1
 10099  052E  0849               	movf	(find_volume@nclst+1)^(0+128),w
 10100  052F  0020               	movlb	0	; select bank0
 10101  0530  3DDD               	addwfc	??_find_volume+1,f
 10102  0531  0021               	movlb	1	; select bank1
 10103  0532  084A               	movf	(find_volume@nclst+2)^(0+128),w
 10104  0533  0020               	movlb	0	; select bank0
 10105  0534  3DDE               	addwfc	??_find_volume+2,f
 10106  0535  0021               	movlb	1	; select bank1
 10107  0536  084B               	movf	(find_volume@nclst+3)^(0+128),w
 10108  0537  0020               	movlb	0	; select bank0
 10109  0538  3DDF               	addwfc	??_find_volume+3,f
 10110  0539  0021               	movlb	1	; select bank1
 10111  053A  0858               	movf	find_volume@fs^(0+128),w
 10112  053B  0086               	movwf	6
 10113  053C  0859               	movf	(find_volume@fs+1)^(0+128),w
 10114  053D  0087               	movwf	7
 10115  053E  3152               	addfsr 1,18
 10116  053F  0020               	movlb	0	; select bank0
 10117  0540  085C               	movf	??_find_volume,w
 10118  0541  3FC0               	movwi [0]fsr1
 10119  0542  085D               	movf	??_find_volume+1,w
 10120  0543  3FC1               	movwi [1]fsr1
 10121  0544  085E               	movf	??_find_volume+2,w
 10122  0545  3FC2               	movwi [2]fsr1
 10123  0546  085F               	movf	??_find_volume+3,w
 10124  0547  3FC3               	movwi [3]fsr1
 10125                           
 10126                           ;ff.c: 2310: fs->volbase = bsect;
 10127  0548  0021               	movlb	1	; select bank1
 10128  0549  0858               	movf	find_volume@fs^(0+128),w
 10129  054A  0086               	movwf	6
 10130  054B  0859               	movf	(find_volume@fs+1)^(0+128),w
 10131  054C  0087               	movwf	7
 10132  054D  315A               	addfsr 1,26
 10133  054E  0851               	movf	find_volume@bsect^(0+128),w
 10134  054F  3FC0               	movwi [0]fsr1
 10135  0550  0852               	movf	(find_volume@bsect+1)^(0+128),w
 10136  0551  3FC1               	movwi [1]fsr1
 10137  0552  0853               	movf	(find_volume@bsect+2)^(0+128),w
 10138  0553  3FC2               	movwi [2]fsr1
 10139  0554  0854               	movf	(find_volume@bsect+3)^(0+128),w
 10140  0555  3FC3               	movwi [3]fsr1
 10141                           
 10142                           ;ff.c: 2311: fs->fatbase = bsect + nrsv;
 10143  0556  0851               	movf	find_volume@bsect^(0+128),w
 10144  0557  0020               	movlb	0	; select bank0
 10145  0558  00DC               	movwf	??_find_volume
 10146  0559  0021               	movlb	1	; select bank1
 10147  055A  0852               	movf	(find_volume@bsect+1)^(0+128),w
 10148  055B  0020               	movlb	0	; select bank0
 10149  055C  00DD               	movwf	??_find_volume+1
 10150  055D  0021               	movlb	1	; select bank1
 10151  055E  0853               	movf	(find_volume@bsect+2)^(0+128),w
 10152  055F  0020               	movlb	0	; select bank0
 10153  0560  00DE               	movwf	??_find_volume+2
 10154  0561  0021               	movlb	1	; select bank1
 10155  0562  0854               	movf	(find_volume@bsect+3)^(0+128),w
 10156  0563  0020               	movlb	0	; select bank0
 10157  0564  00DF               	movwf	??_find_volume+3
 10158  0565  0021               	movlb	1	; select bank1
 10159  0566  0842               	movf	find_volume@nrsv^(0+128),w
 10160  0567  0020               	movlb	0	; select bank0
 10161  0568  00E0               	movwf	??_find_volume+4
 10162  0569  0021               	movlb	1	; select bank1
 10163  056A  0843               	movf	(find_volume@nrsv+1)^(0+128),w
 10164  056B  0020               	movlb	0	; select bank0
 10165  056C  00E1               	movwf	??_find_volume+5
 10166  056D  01E2               	clrf	??_find_volume+6
 10167  056E  01E3               	clrf	??_find_volume+7
 10168  056F  0860               	movf	??_find_volume+4,w
 10169  0570  07DC               	addwf	??_find_volume,f
 10170  0571  0861               	movf	??_find_volume+5,w
 10171  0572  3DDD               	addwfc	??_find_volume+1,f
 10172  0573  0862               	movf	??_find_volume+6,w
 10173  0574  3DDE               	addwfc	??_find_volume+2,f
 10174  0575  0863               	movf	??_find_volume+7,w
 10175  0576  3DDF               	addwfc	??_find_volume+3,f
 10176  0577  0021               	movlb	1	; select bank1
 10177  0578  0858               	movf	find_volume@fs^(0+128),w
 10178  0579  0086               	movwf	6
 10179  057A  0859               	movf	(find_volume@fs+1)^(0+128),w
 10180  057B  0087               	movwf	7
 10181  057C  315E               	addfsr 1,30
 10182  057D  0020               	movlb	0	; select bank0
 10183  057E  085C               	movf	??_find_volume,w
 10184  057F  3FC0               	movwi [0]fsr1
 10185  0580  085D               	movf	??_find_volume+1,w
 10186  0581  3FC1               	movwi [1]fsr1
 10187  0582  085E               	movf	??_find_volume+2,w
 10188  0583  3FC2               	movwi [2]fsr1
 10189  0584  085F               	movf	??_find_volume+3,w
 10190  0585  3FC3               	movwi [3]fsr1
 10191                           
 10192                           ;ff.c: 2312: fs->database = bsect + sysect;
 10193  0586  0021               	movlb	1	; select bank1
 10194  0587  0851               	movf	find_volume@bsect^(0+128),w
 10195  0588  073C               	addwf	find_volume@sysect^(0+128),w
 10196  0589  0020               	movlb	0	; select bank0
 10197  058A  00DC               	movwf	??_find_volume
 10198  058B  0021               	movlb	1	; select bank1
 10199  058C  0852               	movf	(find_volume@bsect+1)^(0+128),w
 10200  058D  3D3D               	addwfc	(find_volume@sysect+1)^(0+128),w
 10201  058E  0020               	movlb	0	; select bank0
 10202  058F  00DD               	movwf	??_find_volume+1
 10203  0590  0021               	movlb	1	; select bank1
 10204  0591  0853               	movf	(find_volume@bsect+2)^(0+128),w
 10205  0592  3D3E               	addwfc	(find_volume@sysect+2)^(0+128),w
 10206  0593  0020               	movlb	0	; select bank0
 10207  0594  00DE               	movwf	??_find_volume+2
 10208  0595  0021               	movlb	1	; select bank1
 10209  0596  0854               	movf	(find_volume@bsect+3)^(0+128),w
 10210  0597  3D3F               	addwfc	(find_volume@sysect+3)^(0+128),w
 10211  0598  0020               	movlb	0	; select bank0
 10212  0599  00DF               	movwf	??_find_volume+3
 10213  059A  0021               	movlb	1	; select bank1
 10214  059B  0858               	movf	find_volume@fs^(0+128),w
 10215  059C  3E26               	addlw	38
 10216  059D  0086               	movwf	6
 10217  059E  3000               	movlw	0
 10218  059F  3D59               	addwfc	(find_volume@fs+1)^(0+128),w
 10219  05A0  0087               	movwf	7
 10220  05A1  0020               	movlb	0	; select bank0
 10221  05A2  085C               	movf	??_find_volume,w
 10222  05A3  3FC0               	movwi [0]fsr1
 10223  05A4  085D               	movf	??_find_volume+1,w
 10224  05A5  3FC1               	movwi [1]fsr1
 10225  05A6  085E               	movf	??_find_volume+2,w
 10226  05A7  3FC2               	movwi [2]fsr1
 10227  05A8  085F               	movf	??_find_volume+3,w
 10228  05A9  3FC3               	movwi [3]fsr1
 10229                           
 10230                           ;ff.c: 2313: if (fmt == 3) {
 10231  05AA  3003               	movlw	3
 10232  05AB  0021               	movlb	1	; select bank1
 10233  05AC  0657               	xorwf	find_volume@fmt^(0+128),w
 10234  05AD  1D03               	btfss	3,2
 10235  05AE  2DEE               	goto	l5386
 10236                           
 10237                           ;ff.c: 2314: if (fs->n_rootdir) return FR_NO_FILESYSTEM;
 10238  05AF  0858               	movf	find_volume@fs^(0+128),w
 10239  05B0  0086               	movwf	6
 10240  05B1  0859               	movf	(find_volume@fs+1)^(0+128),w
 10241  05B2  0087               	movwf	7
 10242  05B3  3148               	addfsr 1,8
 10243  05B4  0016               	moviw fsr1++
 10244  05B5  0401               	iorwf	1,w
 10245  05B6  1D03               	btfss	3,2
 10246  05B7  2B43               	goto	l5286
 10247                           
 10248                           ;ff.c: 2315: fs->dirbase = (DWORD)(*(DWORD*)(BYTE*)(fs->win + 44));
 10249  05B8  0858               	movf	find_volume@fs^(0+128),w
 10250  05B9  3E5A               	addlw	90
 10251  05BA  0086               	movwf	6
 10252  05BB  3000               	movlw	0
 10253  05BC  3D59               	addwfc	(find_volume@fs+1)^(0+128),w
 10254  05BD  0087               	movwf	7
 10255  05BE  3F40               	moviw [0]fsr1
 10256  05BF  0020               	movlb	0	; select bank0
 10257  05C0  00DC               	movwf	??_find_volume
 10258  05C1  3F41               	moviw [1]fsr1
 10259  05C2  00DD               	movwf	??_find_volume+1
 10260  05C3  3F42               	moviw [2]fsr1
 10261  05C4  00DE               	movwf	??_find_volume+2
 10262  05C5  3F43               	moviw [3]fsr1
 10263  05C6  00DF               	movwf	??_find_volume+3
 10264  05C7  0021               	movlb	1	; select bank1
 10265  05C8  0858               	movf	find_volume@fs^(0+128),w
 10266  05C9  3E22               	addlw	34
 10267  05CA  0086               	movwf	6
 10268  05CB  3000               	movlw	0
 10269  05CC  3D59               	addwfc	(find_volume@fs+1)^(0+128),w
 10270  05CD  0087               	movwf	7
 10271  05CE  0020               	movlb	0	; select bank0
 10272  05CF  085C               	movf	??_find_volume,w
 10273  05D0  3FC0               	movwi [0]fsr1
 10274  05D1  085D               	movf	??_find_volume+1,w
 10275  05D2  3FC1               	movwi [1]fsr1
 10276  05D3  085E               	movf	??_find_volume+2,w
 10277  05D4  3FC2               	movwi [2]fsr1
 10278  05D5  085F               	movf	??_find_volume+3,w
 10279  05D6  3FC3               	movwi [3]fsr1
 10280                           
 10281                           ;ff.c: 2316: szbfat = fs->n_fatent * 4;
 10282  05D7  0021               	movlb	1	; select bank1
 10283  05D8  0858               	movf	find_volume@fs^(0+128),w
 10284  05D9  0086               	movwf	6
 10285  05DA  0859               	movf	(find_volume@fs+1)^(0+128),w
 10286  05DB  0087               	movwf	7
 10287  05DC  3152               	addfsr 1,18
 10288  05DD  3F40               	moviw [0]fsr1
 10289  05DE  0020               	movlb	0	; select bank0
 10290  05DF  00DC               	movwf	??_find_volume
 10291  05E0  3F41               	moviw [1]fsr1
 10292  05E1  00DD               	movwf	??_find_volume+1
 10293  05E2  3F42               	moviw [2]fsr1
 10294  05E3  00DE               	movwf	??_find_volume+2
 10295  05E4  3F43               	moviw [3]fsr1
 10296  05E5  00DF               	movwf	??_find_volume+3
 10297  05E6  3002               	movlw	2
 10298  05E7                     u7555:	
 10299  05E7  35DC               	lslf	??_find_volume,f
 10300  05E8  0DDD               	rlf	??_find_volume+1,f
 10301  05E9  0DDE               	rlf	??_find_volume+2,f
 10302  05EA  0DDF               	rlf	??_find_volume+3,f
 10303  05EB  0B89               	decfsz	9,f
 10304  05EC  2DE7               	goto	u7555
 10305  05ED  2E70               	goto	L6
 10306  05EE                     l5386:	
 10307                           ;ff.c: 2317: } else {
 10308                           
 10309                           
 10310                           ;ff.c: 2318: if (!fs->n_rootdir) return FR_NO_FILESYSTEM;
 10311  05EE  0858               	movf	find_volume@fs^(0+128),w
 10312  05EF  0086               	movwf	6
 10313  05F0  0859               	movf	(find_volume@fs+1)^(0+128),w
 10314  05F1  0087               	movwf	7
 10315  05F2  3148               	addfsr 1,8
 10316  05F3  0016               	moviw fsr1++
 10317  05F4  0401               	iorwf	1,w
 10318  05F5  1903               	btfsc	3,2
 10319  05F6  2B43               	goto	l5286
 10320                           
 10321                           ;ff.c: 2319: fs->dirbase = fs->fatbase + fasize;
 10322  05F7  084D               	movf	find_volume@fasize^(0+128),w
 10323  05F8  0020               	movlb	0	; select bank0
 10324  05F9  00DC               	movwf	??_find_volume
 10325  05FA  0021               	movlb	1	; select bank1
 10326  05FB  084E               	movf	(find_volume@fasize+1)^(0+128),w
 10327  05FC  0020               	movlb	0	; select bank0
 10328  05FD  00DD               	movwf	??_find_volume+1
 10329  05FE  0021               	movlb	1	; select bank1
 10330  05FF  084F               	movf	(find_volume@fasize+2)^(0+128),w
 10331  0600  0020               	movlb	0	; select bank0
 10332  0601  00DE               	movwf	??_find_volume+2
 10333  0602  0021               	movlb	1	; select bank1
 10334  0603  0850               	movf	(find_volume@fasize+3)^(0+128),w
 10335  0604  0020               	movlb	0	; select bank0
 10336  0605  00DF               	movwf	??_find_volume+3
 10337  0606  0021               	movlb	1	; select bank1
 10338  0607  0858               	movf	find_volume@fs^(0+128),w
 10339  0608  0086               	movwf	6
 10340  0609  0859               	movf	(find_volume@fs+1)^(0+128),w
 10341  060A  0087               	movwf	7
 10342  060B  315E               	addfsr 1,30
 10343  060C  3F40               	moviw [0]fsr1
 10344  060D  0020               	movlb	0	; select bank0
 10345  060E  07DC               	addwf	??_find_volume,f
 10346  060F  3F41               	moviw [1]fsr1
 10347  0610  3DDD               	addwfc	??_find_volume+1,f
 10348  0611  3F42               	moviw [2]fsr1
 10349  0612  3DDE               	addwfc	??_find_volume+2,f
 10350  0613  3F43               	moviw [3]fsr1
 10351  0614  3DDF               	addwfc	??_find_volume+3,f
 10352  0615  0021               	movlb	1	; select bank1
 10353  0616  0858               	movf	find_volume@fs^(0+128),w
 10354  0617  3E22               	addlw	34
 10355  0618  0086               	movwf	6
 10356  0619  3000               	movlw	0
 10357  061A  3D59               	addwfc	(find_volume@fs+1)^(0+128),w
 10358  061B  0087               	movwf	7
 10359  061C  0020               	movlb	0	; select bank0
 10360  061D  085C               	movf	??_find_volume,w
 10361  061E  3FC0               	movwi [0]fsr1
 10362  061F  085D               	movf	??_find_volume+1,w
 10363  0620  3FC1               	movwi [1]fsr1
 10364  0621  085E               	movf	??_find_volume+2,w
 10365  0622  3FC2               	movwi [2]fsr1
 10366  0623  085F               	movf	??_find_volume+3,w
 10367  0624  3FC3               	movwi [3]fsr1
 10368                           
 10369                           ;ff.c: 2320: szbfat = (fmt == 2) ?;ff.c: 2321: fs->n_fatent * 2 : fs->n_fatent * 3 / 2 +
      +                           (fs->n_fatent & 1);
 10370  0625  3002               	movlw	2
 10371  0626  0021               	movlb	1	; select bank1
 10372  0627  0657               	xorwf	find_volume@fmt^(0+128),w
 10373  0628  1903               	btfsc	3,2
 10374  0629  2E80               	goto	l5398
 10375  062A  0858               	movf	find_volume@fs^(0+128),w
 10376  062B  0086               	movwf	6
 10377  062C  0859               	movf	(find_volume@fs+1)^(0+128),w
 10378  062D  0087               	movwf	7
 10379  062E  3152               	addfsr 1,18
 10380  062F  3001               	movlw	1
 10381  0630  0501               	andwf	1,w
 10382  0631  0020               	movlb	0	; select bank0
 10383  0632  00DC               	movwf	??_find_volume
 10384  0633  3141               	addfsr 1,1
 10385  0634  3000               	movlw	0
 10386  0635  0501               	andwf	1,w
 10387  0636  00DD               	movwf	??_find_volume+1
 10388  0637  3141               	addfsr 1,1
 10389  0638  3000               	movlw	0
 10390  0639  0501               	andwf	1,w
 10391  063A  00DE               	movwf	??_find_volume+2
 10392  063B  3141               	addfsr 1,1
 10393  063C  3000               	movlw	0
 10394  063D  0501               	andwf	1,w
 10395  063E  00DF               	movwf	??_find_volume+3
 10396  063F  0021               	movlb	1	; select bank1
 10397  0640  0858               	movf	find_volume@fs^(0+128),w
 10398  0641  0086               	movwf	6
 10399  0642  0859               	movf	(find_volume@fs+1)^(0+128),w
 10400  0643  0087               	movwf	7
 10401  0644  3152               	addfsr 1,18
 10402  0645  3F40               	moviw [0]fsr1
 10403  0646  00F0               	movwf	___lmul@multiplier
 10404  0647  3F41               	moviw [1]fsr1
 10405  0648  00F1               	movwf	___lmul@multiplier+1
 10406  0649  3F42               	moviw [2]fsr1
 10407  064A  00F2               	movwf	___lmul@multiplier+2
 10408  064B  3F43               	moviw [3]fsr1
 10409  064C  00F3               	movwf	___lmul@multiplier+3
 10410  064D  3000               	movlw	0
 10411  064E  00F7               	movwf	___lmul@multiplicand+3
 10412  064F  3000               	movlw	0
 10413  0650  00F6               	movwf	___lmul@multiplicand+2
 10414  0651  3000               	movlw	0
 10415  0652  00F5               	movwf	___lmul@multiplicand+1
 10416  0653  3003               	movlw	3
 10417  0654  00F4               	movwf	___lmul@multiplicand
 10418  0655  31AB  23B8  3181   	fcall	___lmul
 10419  0658  0870               	movf	?___lmul,w
 10420  0659  0020               	movlb	0	; select bank0
 10421  065A  00E0               	movwf	??_find_volume+4
 10422  065B  0871               	movf	?___lmul+1,w
 10423  065C  00E1               	movwf	??_find_volume+5
 10424  065D  0872               	movf	?___lmul+2,w
 10425  065E  00E2               	movwf	??_find_volume+6
 10426  065F  0873               	movf	?___lmul+3,w
 10427  0660  00E3               	movwf	??_find_volume+7
 10428  0661  3001               	movlw	1
 10429  0662                     u7585:	
 10430  0662  36E3               	lsrf	??_find_volume+7,f
 10431  0663  0CE2               	rrf	??_find_volume+6,f
 10432  0664  0CE1               	rrf	??_find_volume+5,f
 10433  0665  0CE0               	rrf	??_find_volume+4,f
 10434  0666  0B89               	decfsz	9,f
 10435  0667  2E62               	goto	u7585
 10436  0668  0860               	movf	??_find_volume+4,w
 10437  0669  07DC               	addwf	??_find_volume,f
 10438  066A  0861               	movf	??_find_volume+5,w
 10439  066B  3DDD               	addwfc	??_find_volume+1,f
 10440  066C  0862               	movf	??_find_volume+6,w
 10441  066D  3DDE               	addwfc	??_find_volume+2,f
 10442  066E  0863               	movf	??_find_volume+7,w
 10443  066F  3DDF               	addwfc	??_find_volume+3,f
 10444  0670                     L6:	
 10445  0670  085F               	movf	??_find_volume+3,w
 10446  0671  0021               	movlb	1	; select bank1
 10447  0672  00B9               	movwf	(find_volume@szbfat+3)^(0+128)
 10448  0673  0020               	movlb	0	; select bank0
 10449  0674  085E               	movf	??_find_volume+2,w
 10450  0675  0021               	movlb	1	; select bank1
 10451  0676  00B8               	movwf	(find_volume@szbfat+2)^(0+128)
 10452  0677  0020               	movlb	0	; select bank0
 10453  0678  085D               	movf	??_find_volume+1,w
 10454  0679  0021               	movlb	1	; select bank1
 10455  067A  00B7               	movwf	(find_volume@szbfat+1)^(0+128)
 10456  067B  0020               	movlb	0	; select bank0
 10457  067C  085C               	movf	??_find_volume,w
 10458  067D  0021               	movlb	1	; select bank1
 10459  067E  00B6               	movwf	find_volume@szbfat^(0+128)
 10460  067F  2E9D               	goto	l5400
 10461  0680                     l5398:	
 10462  0680  0858               	movf	find_volume@fs^(0+128),w
 10463  0681  0086               	movwf	6
 10464  0682  0859               	movf	(find_volume@fs+1)^(0+128),w
 10465  0683  0087               	movwf	7
 10466  0684  3152               	addfsr 1,18
 10467  0685  3F40               	moviw [0]fsr1
 10468  0686  0020               	movlb	0	; select bank0
 10469  0687  00DC               	movwf	??_find_volume
 10470  0688  3F41               	moviw [1]fsr1
 10471  0689  00DD               	movwf	??_find_volume+1
 10472  068A  3F42               	moviw [2]fsr1
 10473  068B  00DE               	movwf	??_find_volume+2
 10474  068C  3F43               	moviw [3]fsr1
 10475  068D  00DF               	movwf	??_find_volume+3
 10476  068E  355C               	lslf	??_find_volume,w
 10477  068F  0021               	movlb	1	; select bank1
 10478  0690  00B6               	movwf	find_volume@szbfat^(0+128)
 10479  0691  0020               	movlb	0	; select bank0
 10480  0692  0D5D               	rlf	??_find_volume+1,w
 10481  0693  0021               	movlb	1	; select bank1
 10482  0694  00B7               	movwf	(find_volume@szbfat+1)^(0+128)
 10483  0695  0020               	movlb	0	; select bank0
 10484  0696  0D5E               	rlf	??_find_volume+2,w
 10485  0697  0021               	movlb	1	; select bank1
 10486  0698  00B8               	movwf	(find_volume@szbfat+2)^(0+128)
 10487  0699  0020               	movlb	0	; select bank0
 10488  069A  0D5F               	rlf	??_find_volume+3,w
 10489  069B  0021               	movlb	1	; select bank1
 10490  069C  00B9               	movwf	(find_volume@szbfat+3)^(0+128)
 10491  069D                     l5400:	
 10492                           
 10493                           ;ff.c: 2322: };ff.c: 2323: if (fs->fsize < (szbfat + (((UINT)512) - 1)) / ((UINT)512))
 10494  069D  30FF               	movlw	255
 10495  069E  0020               	movlb	0	; select bank0
 10496  069F  00DC               	movwf	??_find_volume
 10497  06A0  3001               	movlw	1
 10498  06A1  00DD               	movwf	??_find_volume+1
 10499  06A2  3000               	movlw	0
 10500  06A3  00DE               	movwf	??_find_volume+2
 10501  06A4  3000               	movlw	0
 10502  06A5  00DF               	movwf	??_find_volume+3
 10503  06A6  0021               	movlb	1	; select bank1
 10504  06A7  0836               	movf	find_volume@szbfat^(0+128),w
 10505  06A8  0020               	movlb	0	; select bank0
 10506  06A9  07DC               	addwf	??_find_volume,f
 10507  06AA  0021               	movlb	1	; select bank1
 10508  06AB  0837               	movf	(find_volume@szbfat+1)^(0+128),w
 10509  06AC  0020               	movlb	0	; select bank0
 10510  06AD  3DDD               	addwfc	??_find_volume+1,f
 10511  06AE  0021               	movlb	1	; select bank1
 10512  06AF  0838               	movf	(find_volume@szbfat+2)^(0+128),w
 10513  06B0  0020               	movlb	0	; select bank0
 10514  06B1  3DDE               	addwfc	??_find_volume+2,f
 10515  06B2  0021               	movlb	1	; select bank1
 10516  06B3  0839               	movf	(find_volume@szbfat+3)^(0+128),w
 10517  06B4  0020               	movlb	0	; select bank0
 10518  06B5  3DDF               	addwfc	??_find_volume+3,f
 10519  06B6  3009               	movlw	9
 10520  06B7                     u7595:	
 10521  06B7  36DF               	lsrf	??_find_volume+3,f
 10522  06B8  0CDE               	rrf	??_find_volume+2,f
 10523  06B9  0CDD               	rrf	??_find_volume+1,f
 10524  06BA  0CDC               	rrf	??_find_volume,f
 10525  06BB  0B89               	decfsz	9,f
 10526  06BC  2EB7               	goto	u7595
 10527  06BD  0021               	movlb	1	; select bank1
 10528  06BE  0858               	movf	find_volume@fs^(0+128),w
 10529  06BF  0086               	movwf	6
 10530  06C0  0859               	movf	(find_volume@fs+1)^(0+128),w
 10531  06C1  0087               	movwf	7
 10532  06C2  3156               	addfsr 1,22
 10533  06C3  3F40               	moviw [0]fsr1
 10534  06C4  0020               	movlb	0	; select bank0
 10535  06C5  00E0               	movwf	??_find_volume+4
 10536  06C6  3F41               	moviw [1]fsr1
 10537  06C7  00E1               	movwf	??_find_volume+5
 10538  06C8  3F42               	moviw [2]fsr1
 10539  06C9  00E2               	movwf	??_find_volume+6
 10540  06CA  3F43               	moviw [3]fsr1
 10541  06CB  00E3               	movwf	??_find_volume+7
 10542  06CC  085F               	movf	??_find_volume+3,w
 10543  06CD  0263               	subwf	??_find_volume+7,w
 10544  06CE  1D03               	skipz
 10545  06CF  2EDA               	goto	u7605
 10546  06D0  085E               	movf	??_find_volume+2,w
 10547  06D1  0262               	subwf	??_find_volume+6,w
 10548  06D2  1D03               	skipz
 10549  06D3  2EDA               	goto	u7605
 10550  06D4  085D               	movf	??_find_volume+1,w
 10551  06D5  0261               	subwf	??_find_volume+5,w
 10552  06D6  1D03               	skipz
 10553  06D7  2EDA               	goto	u7605
 10554  06D8  085C               	movf	??_find_volume,w
 10555  06D9  0260               	subwf	??_find_volume+4,w
 10556  06DA                     u7605:	
 10557  06DA  1C03               	btfss	3,0
 10558  06DB  2B43               	goto	l5286
 10559                           
 10560                           ;ff.c: 2328: fs->last_clust = fs->free_clust = 0xFFFFFFFF;
 10561  06DC  30FF               	movlw	255
 10562  06DD  00DC               	movwf	??_find_volume
 10563  06DE  30FF               	movlw	255
 10564  06DF  00DD               	movwf	??_find_volume+1
 10565  06E0  30FF               	movlw	255
 10566  06E1  00DE               	movwf	??_find_volume+2
 10567  06E2  30FF               	movlw	255
 10568  06E3  00DF               	movwf	??_find_volume+3
 10569  06E4  0021               	movlb	1	; select bank1
 10570  06E5  0858               	movf	find_volume@fs^(0+128),w
 10571  06E6  0086               	movwf	6
 10572  06E7  0859               	movf	(find_volume@fs+1)^(0+128),w
 10573  06E8  0087               	movwf	7
 10574  06E9  314E               	addfsr 1,14
 10575  06EA  0020               	movlb	0	; select bank0
 10576  06EB  085C               	movf	??_find_volume,w
 10577  06EC  3FC0               	movwi [0]fsr1
 10578  06ED  085D               	movf	??_find_volume+1,w
 10579  06EE  3FC1               	movwi [1]fsr1
 10580  06EF  085E               	movf	??_find_volume+2,w
 10581  06F0  3FC2               	movwi [2]fsr1
 10582  06F1  085F               	movf	??_find_volume+3,w
 10583  06F2  3FC3               	movwi [3]fsr1
 10584  06F3  0021               	movlb	1	; select bank1
 10585  06F4  0858               	movf	find_volume@fs^(0+128),w
 10586  06F5  0086               	movwf	6
 10587  06F6  0859               	movf	(find_volume@fs+1)^(0+128),w
 10588  06F7  0087               	movwf	7
 10589  06F8  314A               	addfsr 1,10
 10590  06F9  0020               	movlb	0	; select bank0
 10591  06FA  085C               	movf	??_find_volume,w
 10592  06FB  3FC0               	movwi [0]fsr1
 10593  06FC  085D               	movf	??_find_volume+1,w
 10594  06FD  3FC1               	movwi [1]fsr1
 10595  06FE  085E               	movf	??_find_volume+2,w
 10596  06FF  3FC2               	movwi [2]fsr1
 10597  0700  085F               	movf	??_find_volume+3,w
 10598  0701  3FC3               	movwi [3]fsr1
 10599                           
 10600                           ;ff.c: 2331: fs->fsi_flag = 0x80;
 10601  0702  0021               	movlb	1	; select bank1
 10602  0703  0858               	movf	find_volume@fs^(0+128),w
 10603  0704  3E05               	addlw	5
 10604  0705  0020               	movlb	0	; select bank0
 10605  0706  00DC               	movwf	??_find_volume
 10606  0707  3000               	movlw	0
 10607  0708  0021               	movlb	1	; select bank1
 10608  0709  3D59               	addwfc	(find_volume@fs+1)^(0+128),w
 10609  070A  0020               	movlb	0	; select bank0
 10610  070B  00DD               	movwf	??_find_volume+1
 10611  070C  085C               	movf	??_find_volume,w
 10612  070D  0086               	movwf	6
 10613  070E  085D               	movf	??_find_volume+1,w
 10614  070F  0087               	movwf	7
 10615  0710  3080               	movlw	128
 10616  0711  0081               	movwf	1
 10617                           
 10618                           ;ff.c: 2333: if (fmt == 3;ff.c: 2334: && (WORD)(*(WORD*)(BYTE*)(fs->win + 48)) == 1;ff.c
      +                          : 2335: && move_window(fs, bsect + 1) == FR_OK)
 10619  0712  3003               	movlw	3
 10620  0713  0021               	movlb	1	; select bank1
 10621  0714  0657               	xorwf	find_volume@fmt^(0+128),w
 10622  0715  1D03               	btfss	3,2
 10623  0716  2FC7               	goto	l5424
 10624  0717  0858               	movf	find_volume@fs^(0+128),w
 10625  0718  3E5E               	addlw	94
 10626  0719  0086               	movwf	6
 10627  071A  3000               	movlw	0
 10628  071B  3D59               	addwfc	(find_volume@fs+1)^(0+128),w
 10629  071C  0087               	movwf	7
 10630  071D  0016               	moviw fsr1++
 10631  071E  3A01               	xorlw	1
 10632  071F  0020               	movlb	0	; select bank0
 10633  0720  00DC               	movwf	??_find_volume
 10634  0721  0016               	moviw fsr1++
 10635  0722  04DC               	iorwf	??_find_volume,f
 10636  0723  1D03               	btfss	3,2
 10637  0724  2FC7               	goto	l5424
 10638  0725  0021               	movlb	1	; select bank1
 10639  0726  0859               	movf	(find_volume@fs+1)^(0+128),w
 10640  0727  0020               	movlb	0	; select bank0
 10641  0728  00C4               	movwf	move_window@fs+1
 10642  0729  0021               	movlb	1	; select bank1
 10643  072A  0858               	movf	find_volume@fs^(0+128),w
 10644  072B  0020               	movlb	0	; select bank0
 10645  072C  00C3               	movwf	move_window@fs
 10646  072D  3001               	movlw	1
 10647  072E  0021               	movlb	1	; select bank1
 10648  072F  0751               	addwf	find_volume@bsect^(0+128),w
 10649  0730  0020               	movlb	0	; select bank0
 10650  0731  00C5               	movwf	move_window@sector
 10651  0732  3000               	movlw	0
 10652  0733  0021               	movlb	1	; select bank1
 10653  0734  3D52               	addwfc	(find_volume@bsect+1)^(0+128),w
 10654  0735  0020               	movlb	0	; select bank0
 10655  0736  00C6               	movwf	move_window@sector+1
 10656  0737  3000               	movlw	0
 10657  0738  0021               	movlb	1	; select bank1
 10658  0739  3D53               	addwfc	(find_volume@bsect+2)^(0+128),w
 10659  073A  0020               	movlb	0	; select bank0
 10660  073B  00C7               	movwf	move_window@sector+2
 10661  073C  3000               	movlw	0
 10662  073D  0021               	movlb	1	; select bank1
 10663  073E  3D54               	addwfc	(find_volume@bsect+3)^(0+128),w
 10664  073F  0020               	movlb	0	; select bank0
 10665  0740  00C8               	movwf	move_window@sector+3
 10666  0741  31AE  263A  3181   	fcall	_move_window
 10667  0744  3A00               	xorlw	0
 10668  0745  1D03               	skipz
 10669  0746  2FC7               	goto	l5424
 10670                           
 10671                           ;ff.c: 2336: {;ff.c: 2337: fs->fsi_flag = 0;
 10672  0747  0021               	movlb	1	; select bank1
 10673  0748  0858               	movf	find_volume@fs^(0+128),w
 10674  0749  0086               	movwf	6
 10675  074A  0859               	movf	(find_volume@fs+1)^(0+128),w
 10676  074B  0087               	movwf	7
 10677  074C  3145               	addfsr 1,5
 10678  074D  0181               	clrf	1
 10679                           
 10680                           ;ff.c: 2338: if ((WORD)(*(WORD*)(BYTE*)(fs->win + 510)) == 0xAA55;ff.c: 2339: && (DWORD)
      +                          (*(DWORD*)(BYTE*)(fs->win + 0)) == 0x41615252;ff.c: 2340: && (DWORD)(*(DWORD*)(BYTE*)(fs
      +                          ->win + 484)) == 0x61417272)
 10681  074E  0858               	movf	find_volume@fs^(0+128),w
 10682  074F  3E2C               	addlw	44
 10683  0750  0086               	movwf	6
 10684  0751  3002               	movlw	2
 10685  0752  3D59               	addwfc	(find_volume@fs+1)^(0+128),w
 10686  0753  0087               	movwf	7
 10687  0754  0016               	moviw fsr1++
 10688  0755  3A55               	xorlw	85
 10689  0756  0020               	movlb	0	; select bank0
 10690  0757  00DC               	movwf	??_find_volume
 10691  0758  0016               	moviw fsr1++
 10692  0759  3AAA               	xorlw	170
 10693  075A  04DC               	iorwf	??_find_volume,f
 10694  075B  1D03               	btfss	3,2
 10695  075C  2FC7               	goto	l5424
 10696  075D  0021               	movlb	1	; select bank1
 10697  075E  0858               	movf	find_volume@fs^(0+128),w
 10698  075F  3E2E               	addlw	46
 10699  0760  0086               	movwf	6
 10700  0761  3000               	movlw	0
 10701  0762  3D59               	addwfc	(find_volume@fs+1)^(0+128),w
 10702  0763  0087               	movwf	7
 10703  0764  0016               	moviw fsr1++
 10704  0765  3A52               	xorlw	82
 10705  0766  0020               	movlb	0	; select bank0
 10706  0767  00DC               	movwf	??_find_volume
 10707  0768  0016               	moviw fsr1++
 10708  0769  3A52               	xorlw	82
 10709  076A  04DC               	iorwf	??_find_volume,f
 10710  076B  0016               	moviw fsr1++
 10711  076C  3A61               	xorlw	97
 10712  076D  04DC               	iorwf	??_find_volume,f
 10713  076E  0016               	moviw fsr1++
 10714  076F  3A41               	xorlw	65
 10715  0770  04DC               	iorwf	??_find_volume,f
 10716  0771  1D03               	btfss	3,2
 10717  0772  2FC7               	goto	l5424
 10718  0773  0021               	movlb	1	; select bank1
 10719  0774  0858               	movf	find_volume@fs^(0+128),w
 10720  0775  3E12               	addlw	18
 10721  0776  0086               	movwf	6
 10722  0777  3002               	movlw	2
 10723  0778  3D59               	addwfc	(find_volume@fs+1)^(0+128),w
 10724  0779  0087               	movwf	7
 10725  077A  0016               	moviw fsr1++
 10726  077B  3A72               	xorlw	114
 10727  077C  0020               	movlb	0	; select bank0
 10728  077D  00DC               	movwf	??_find_volume
 10729  077E  0016               	moviw fsr1++
 10730  077F  3A72               	xorlw	114
 10731  0780  04DC               	iorwf	??_find_volume,f
 10732  0781  0016               	moviw fsr1++
 10733  0782  3A41               	xorlw	65
 10734  0783  04DC               	iorwf	??_find_volume,f
 10735  0784  0016               	moviw fsr1++
 10736  0785  3A61               	xorlw	97
 10737  0786  04DC               	iorwf	??_find_volume,f
 10738  0787  1D03               	btfss	3,2
 10739  0788  2FC7               	goto	l5424
 10740                           
 10741                           ;ff.c: 2341: {;ff.c: 2343: fs->free_clust = (DWORD)(*(DWORD*)(BYTE*)(fs->win + 488));
 10742  0789  0021               	movlb	1	; select bank1
 10743  078A  0858               	movf	find_volume@fs^(0+128),w
 10744  078B  3E16               	addlw	22
 10745  078C  0086               	movwf	6
 10746  078D  3002               	movlw	2
 10747  078E  3D59               	addwfc	(find_volume@fs+1)^(0+128),w
 10748  078F  0087               	movwf	7
 10749  0790  3F40               	moviw [0]fsr1
 10750  0791  0020               	movlb	0	; select bank0
 10751  0792  00DC               	movwf	??_find_volume
 10752  0793  3F41               	moviw [1]fsr1
 10753  0794  00DD               	movwf	??_find_volume+1
 10754  0795  3F42               	moviw [2]fsr1
 10755  0796  00DE               	movwf	??_find_volume+2
 10756  0797  3F43               	moviw [3]fsr1
 10757  0798  00DF               	movwf	??_find_volume+3
 10758  0799  0021               	movlb	1	; select bank1
 10759  079A  0858               	movf	find_volume@fs^(0+128),w
 10760  079B  0086               	movwf	6
 10761  079C  0859               	movf	(find_volume@fs+1)^(0+128),w
 10762  079D  0087               	movwf	7
 10763  079E  314E               	addfsr 1,14
 10764  079F  0020               	movlb	0	; select bank0
 10765  07A0  085C               	movf	??_find_volume,w
 10766  07A1  3FC0               	movwi [0]fsr1
 10767  07A2  085D               	movf	??_find_volume+1,w
 10768  07A3  3FC1               	movwi [1]fsr1
 10769  07A4  085E               	movf	??_find_volume+2,w
 10770  07A5  3FC2               	movwi [2]fsr1
 10771  07A6  085F               	movf	??_find_volume+3,w
 10772  07A7  3FC3               	movwi [3]fsr1
 10773                           
 10774                           ;ff.c: 2346: fs->last_clust = (DWORD)(*(DWORD*)(BYTE*)(fs->win + 492));
 10775  07A8  0021               	movlb	1	; select bank1
 10776  07A9  0858               	movf	find_volume@fs^(0+128),w
 10777  07AA  3E1A               	addlw	26
 10778  07AB  0086               	movwf	6
 10779  07AC  3002               	movlw	2
 10780  07AD  3D59               	addwfc	(find_volume@fs+1)^(0+128),w
 10781  07AE  0087               	movwf	7
 10782  07AF  3F40               	moviw [0]fsr1
 10783  07B0  0020               	movlb	0	; select bank0
 10784  07B1  00DC               	movwf	??_find_volume
 10785  07B2  3F41               	moviw [1]fsr1
 10786  07B3  00DD               	movwf	??_find_volume+1
 10787  07B4  3F42               	moviw [2]fsr1
 10788  07B5  00DE               	movwf	??_find_volume+2
 10789  07B6  3F43               	moviw [3]fsr1
 10790  07B7  00DF               	movwf	??_find_volume+3
 10791  07B8  0021               	movlb	1	; select bank1
 10792  07B9  0858               	movf	find_volume@fs^(0+128),w
 10793  07BA  0086               	movwf	6
 10794  07BB  0859               	movf	(find_volume@fs+1)^(0+128),w
 10795  07BC  0087               	movwf	7
 10796  07BD  314A               	addfsr 1,10
 10797  07BE  0020               	movlb	0	; select bank0
 10798  07BF  085C               	movf	??_find_volume,w
 10799  07C0  3FC0               	movwi [0]fsr1
 10800  07C1  085D               	movf	??_find_volume+1,w
 10801  07C2  3FC1               	movwi [1]fsr1
 10802  07C3  085E               	movf	??_find_volume+2,w
 10803  07C4  3FC2               	movwi [2]fsr1
 10804  07C5  085F               	movf	??_find_volume+3,w
 10805  07C6  3FC3               	movwi [3]fsr1
 10806  07C7                     l5424:	
 10807                           
 10808                           ;ff.c: 2348: };ff.c: 2349: };ff.c: 2352: fs->fs_type = fmt;
 10809  07C7  0021               	movlb	1	; select bank1
 10810  07C8  0858               	movf	find_volume@fs^(0+128),w
 10811  07C9  0086               	movwf	6
 10812  07CA  0859               	movf	(find_volume@fs+1)^(0+128),w
 10813  07CB  0087               	movwf	7
 10814  07CC  0857               	movf	find_volume@fmt^(0+128),w
 10815  07CD  0081               	movwf	1
 10816                           
 10817                           ;ff.c: 2353: fs->id = ++Fsid;
 10818  07CE  3001               	movlw	1
 10819  07CF  07E7               	addwf	_Fsid^(0+128),f
 10820  07D0  3000               	movlw	0
 10821  07D1  3DE8               	addwfc	(_Fsid+1)^(0+128),f
 10822  07D2  0858               	movf	find_volume@fs^(0+128),w
 10823  07D3  0086               	movwf	6
 10824  07D4  0859               	movf	(find_volume@fs+1)^(0+128),w
 10825  07D5  0087               	movwf	7
 10826  07D6  3146               	addfsr 1,6
 10827  07D7  0867               	movf	_Fsid^(0+128),w
 10828  07D8  3FC0               	movwi [0]fsr1
 10829  07D9  0868               	movf	(_Fsid+1)^(0+128),w
 10830  07DA  3FC1               	movwi [1]fsr1
 10831  07DB  2A23               	goto	l5204
 10832  07DC                     __end_of_find_volume:	
 10833                           
 10834                           	psect	text19
 10835  2F13                     __ptext19:	
 10836 ;; *************** function _get_ldnumber *****************
 10837 ;; Defined at:
 10838 ;;		line 2114 in file "ff.c"
 10839 ;; Parameters:    Size  Location     Type
 10840 ;;  path            1    wreg     PTR PTR const unsigned c
 10841 ;;		 -> f_open@path(2), f_mount@path(2), f_mount@rp(2), 
 10842 ;; Auto vars:     Size  Location     Type
 10843 ;;  path            1    8[BANK0 ] PTR PTR const unsigned c
 10844 ;;		 -> f_open@path(2), f_mount@path(2), f_mount@rp(2), 
 10845 ;;  tt              2    9[BANK0 ] PTR const unsigned char 
 10846 ;;		 -> STR_2(10), STR_1(1), 
 10847 ;;  i               2    6[BANK0 ] unsigned int 
 10848 ;;  vol             2    4[BANK0 ] int 
 10849 ;;  tp              2    2[BANK0 ] PTR const unsigned char 
 10850 ;;		 -> STR_2(10), STR_1(1), 
 10851 ;; Return value:  Size  Location     Type
 10852 ;;                  2    0[COMMON] int 
 10853 ;; Registers used:
 10854 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 10855 ;; Tracked objects:
 10856 ;;		On entry : 1E/1
 10857 ;;		On exit  : 1F/0
 10858 ;;		Unchanged: 0/0
 10859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10860 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10861 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10862 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10863 ;;      Totals:         4      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10864 ;;Total ram usage:       15 bytes
 10865 ;; Hardware stack levels used:    1
 10866 ;; This function calls:
 10867 ;;		Nothing
 10868 ;; This function is called by:
 10869 ;;		_find_volume
 10870 ;;		_f_mount
 10871 ;; This function uses a non-reentrant model
 10872 ;;
 10873                           
 10874                           
 10875                           ;psect for function _get_ldnumber
 10876  2F13                     _get_ldnumber:	
 10877                           
 10878                           ;incstack = 0
 10879                           ; Regs used in _get_ldnumber: [wreg-fsr1h+status,2+status,0+pclath]
 10880                           ;get_ldnumber@path stored from wreg
 10881  2F13  0020               	movlb	0	; select bank0
 10882  2F14  00A8               	movwf	get_ldnumber@path
 10883                           
 10884                           ;ff.c: 2118: const TCHAR *tp, *tt;;ff.c: 2119: UINT i;;ff.c: 2120: int vol = -1;
 10885  2F15  30FF               	movlw	255
 10886  2F16  00A4               	movwf	get_ldnumber@vol
 10887  2F17  30FF               	movlw	255
 10888  2F18  00A5               	movwf	get_ldnumber@vol+1
 10889                           
 10890                           ;ff.c: 2129: if (*path) {
 10891  2F19  0828               	movf	get_ldnumber@path,w
 10892  2F1A  0086               	movwf	6
 10893  2F1B  0187               	clrf	7
 10894  2F1C  0016               	moviw fsr1++
 10895  2F1D  0401               	iorwf	1,w
 10896  2F1E  1903               	btfsc	3,2
 10897  2F1F  2F7E               	goto	l4966
 10898                           
 10899                           ;ff.c: 2130: for (tt = *path; (UINT)*tt >= (0 ? ' ' : '!') && *tt != ':'; tt++) ;
 10900  2F20  0828               	movf	get_ldnumber@path,w
 10901  2F21  0086               	movwf	6
 10902  2F22  0187               	clrf	7
 10903  2F23  3F40               	moviw [0]fsr1
 10904  2F24  00A9               	movwf	get_ldnumber@tt
 10905  2F25  3F41               	moviw [1]fsr1
 10906  2F26  00AA               	movwf	get_ldnumber@tt+1
 10907  2F27  2F34               	goto	l4944
 10908  2F28                     l4946:	
 10909  2F28  0829               	movf	get_ldnumber@tt,w
 10910  2F29  0084               	movwf	4
 10911  2F2A  082A               	movf	get_ldnumber@tt+1,w
 10912  2F2B  0085               	movwf	5
 10913  2F2C  0012               	moviw fsr0++
 10914  2F2D  3A3A               	xorlw	58
 10915  2F2E  1903               	btfsc	3,2
 10916  2F2F  2F3E               	goto	l4948
 10917  2F30  3001               	movlw	1
 10918  2F31  07A9               	addwf	get_ldnumber@tt,f
 10919  2F32  3000               	movlw	0
 10920  2F33  3DAA               	addwfc	get_ldnumber@tt+1,f
 10921  2F34                     l4944:	
 10922  2F34  0829               	movf	get_ldnumber@tt,w
 10923  2F35  0084               	movwf	4
 10924  2F36  082A               	movf	get_ldnumber@tt+1,w
 10925  2F37  0085               	movwf	5
 10926  2F38  0800               	movf	0,w	;code access
 10927  2F39  00F2               	movwf	??_get_ldnumber
 10928  2F3A  3021               	movlw	33
 10929  2F3B  0272               	subwf	??_get_ldnumber,w
 10930  2F3C  1803               	btfsc	3,0
 10931  2F3D  2F28               	goto	l4946
 10932  2F3E                     l4948:	
 10933                           
 10934                           ;ff.c: 2131: if (*tt == ':') {
 10935  2F3E  0829               	movf	get_ldnumber@tt,w
 10936  2F3F  0084               	movwf	4
 10937  2F40  082A               	movf	get_ldnumber@tt+1,w
 10938  2F41  0085               	movwf	5
 10939  2F42  0012               	moviw fsr0++
 10940  2F43  3A3A               	xorlw	58
 10941  2F44  1D03               	btfss	3,2
 10942  2F45  2F83               	goto	l4970
 10943                           
 10944                           ;ff.c: 2132: tp = *path;
 10945  2F46  0828               	movf	get_ldnumber@path,w
 10946  2F47  0086               	movwf	6
 10947  2F48  0187               	clrf	7
 10948  2F49  3F40               	moviw [0]fsr1
 10949  2F4A  00A2               	movwf	get_ldnumber@tp
 10950  2F4B  3F41               	moviw [1]fsr1
 10951  2F4C  00A3               	movwf	get_ldnumber@tp+1
 10952                           
 10953                           ;ff.c: 2133: i = *tp++ - '0';
 10954  2F4D  0822               	movf	get_ldnumber@tp,w
 10955  2F4E  0084               	movwf	4
 10956  2F4F  0823               	movf	get_ldnumber@tp+1,w
 10957  2F50  0085               	movwf	5
 10958  2F51  0800               	movf	0,w	;code access
 10959  2F52  3ED0               	addlw	208
 10960  2F53  00A6               	movwf	get_ldnumber@i
 10961  2F54  30FF               	movlw	255
 10962  2F55  1803               	skipnc
 10963  2F56  3000               	movlw	0
 10964  2F57  00A7               	movwf	get_ldnumber@i+1
 10965  2F58  3001               	movlw	1
 10966  2F59  07A2               	addwf	get_ldnumber@tp,f
 10967  2F5A  3000               	movlw	0
 10968  2F5B  3DA3               	addwfc	get_ldnumber@tp+1,f
 10969                           
 10970                           ;ff.c: 2134: if (i < 10 && tp == tt) {
 10971  2F5C  3000               	movlw	0
 10972  2F5D  0227               	subwf	get_ldnumber@i+1,w
 10973  2F5E  300A               	movlw	10
 10974  2F5F  1903               	skipnz
 10975  2F60  0226               	subwf	get_ldnumber@i,w
 10976  2F61  1803               	skipnc
 10977  2F62  2F7E               	goto	l4966
 10978  2F63  082A               	movf	get_ldnumber@tt+1,w
 10979  2F64  0623               	xorwf	get_ldnumber@tp+1,w
 10980  2F65  1D03               	skipz
 10981  2F66  2F69               	goto	u6825
 10982  2F67  0829               	movf	get_ldnumber@tt,w
 10983  2F68  0622               	xorwf	get_ldnumber@tp,w
 10984  2F69                     u6825:	
 10985  2F69  1D03               	skipz
 10986  2F6A  2F7E               	goto	l4966
 10987                           
 10988                           ;ff.c: 2135: if (i < 1) {
 10989  2F6B  0826               	movf	get_ldnumber@i,w
 10990  2F6C  0427               	iorwf	get_ldnumber@i+1,w
 10991  2F6D  1D03               	btfss	3,2
 10992  2F6E  2F7E               	goto	l4966
 10993                           
 10994                           ;ff.c: 2136: vol = (int)i;
 10995  2F6F  0827               	movf	get_ldnumber@i+1,w
 10996  2F70  00A5               	movwf	get_ldnumber@vol+1
 10997  2F71  0826               	movf	get_ldnumber@i,w
 10998  2F72  00A4               	movwf	get_ldnumber@vol
 10999                           
 11000                           ;ff.c: 2137: *path = ++tt;
 11001  2F73  3001               	movlw	1
 11002  2F74  07A9               	addwf	get_ldnumber@tt,f
 11003  2F75  3000               	movlw	0
 11004  2F76  3DAA               	addwfc	get_ldnumber@tt+1,f
 11005  2F77  0828               	movf	get_ldnumber@path,w
 11006  2F78  0086               	movwf	6
 11007  2F79  0187               	clrf	7
 11008  2F7A  0829               	movf	get_ldnumber@tt,w
 11009  2F7B  3FC0               	movwi [0]fsr1
 11010  2F7C  082A               	movf	get_ldnumber@tt+1,w
 11011  2F7D  3FC1               	movwi [1]fsr1
 11012  2F7E                     l4966:	
 11013                           
 11014                           ;ff.c: 2138: };ff.c: 2139: };ff.c: 2156: return vol;
 11015  2F7E  0825               	movf	get_ldnumber@vol+1,w
 11016  2F7F  00F1               	movwf	?_get_ldnumber+1
 11017  2F80  0824               	movf	get_ldnumber@vol,w
 11018  2F81  00F0               	movwf	?_get_ldnumber
 11019  2F82  0008               	return
 11020  2F83                     l4970:	
 11021                           
 11022                           ;ff.c: 2157: };ff.c: 2161: vol = 0;
 11023  2F83  01A4               	clrf	get_ldnumber@vol
 11024  2F84  01A5               	clrf	get_ldnumber@vol+1
 11025  2F85  2F7E               	goto	l4966
 11026  2F86                     __end_of_get_ldnumber:	
 11027                           
 11028                           	psect	text20
 11029  183E                     __ptext20:	
 11030 ;; *************** function _disk_initialize *****************
 11031 ;; Defined at:
 11032 ;;		line 298 in file "diskio.c"
 11033 ;; Parameters:    Size  Location     Type
 11034 ;;  pdrv            1    wreg     unsigned char 
 11035 ;; Auto vars:     Size  Location     Type
 11036 ;;  pdrv            1    5[BANK0 ] unsigned char 
 11037 ;;  ocr             4    6[BANK0 ] unsigned char [4]
 11038 ;;  tmr             2   14[BANK0 ] unsigned int 
 11039 ;;  n               1   16[BANK0 ] unsigned char 
 11040 ;;  ty              1   13[BANK0 ] unsigned char 
 11041 ;;  cmd             1   12[BANK0 ] unsigned char 
 11042 ;; Return value:  Size  Location     Type
 11043 ;;                  1    wreg      unsigned char 
 11044 ;; Registers used:
 11045 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11046 ;; Tracked objects:
 11047 ;;		On entry : 1F/1
 11048 ;;		On exit  : 1E/0
 11049 ;;		Unchanged: 0/0
 11050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11052 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11053 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11054 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11055 ;;Total ram usage:       13 bytes
 11056 ;; Hardware stack levels used:    1
 11057 ;; Hardware stack levels required when called:    5
 11058 ;; This function calls:
 11059 ;;		_SPI_Exchange8bit
 11060 ;;		_SPI_Initialize
 11061 ;;		_deselect
 11062 ;;		_send_cmd
 11063 ;; This function is called by:
 11064 ;;		_find_volume
 11065 ;; This function uses a non-reentrant model
 11066 ;;
 11067                           
 11068                           
 11069                           ;psect for function _disk_initialize
 11070  183E                     _disk_initialize:	
 11071                           
 11072                           ;incstack = 0
 11073                           ; Regs used in _disk_initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11074                           ;disk_initialize@pdrv stored from wreg
 11075  183E  0020               	movlb	0	; select bank0
 11076  183F  00A5               	movwf	disk_initialize@pdrv
 11077                           
 11078                           ;diskio.c: 302: BYTE n, cmd, ty, ocr[4];;diskio.c: 303: UINT tmr;;diskio.c: 306: if (pdr
      +                          v) return 0x01;
 11079  1840  0825               	movf	disk_initialize@pdrv,w
 11080  1841  1903               	btfsc	3,2
 11081  1842  2845               	goto	l161
 11082  1843  3001               	movlw	1
 11083  1844  0008               	return
 11084  1845                     l161:	
 11085                           
 11086                           ;diskio.c: 308: if (Stat & 0x02) return Stat;
 11087  1845  0021               	movlb	1	; select bank1
 11088  1846  1CEE               	btfss	_Stat^(0+128),1
 11089  1847  284B               	goto	l4570
 11090  1848                     l4566:	
 11091  1848  0021               	movlb	1	; select bank1
 11092  1849  086E               	movf	_Stat^(0+128),w
 11093  184A  0008               	return
 11094  184B                     l4570:	
 11095                           
 11096                           ;diskio.c: 310: SPI_Initialize();
 11097  184B  31AA  22AB  3198   	fcall	_SPI_Initialize
 11098                           
 11099                           ;diskio.c: 311: for (n = 10; n; n--) SPI_Exchange8bit(0xFF);
 11100  184E  300A               	movlw	10
 11101  184F  0020               	movlb	0	; select bank0
 11102  1850  00A4               	movwf	??_disk_initialize
 11103  1851  0824               	movf	??_disk_initialize,w
 11104  1852  00B0               	movwf	disk_initialize@n
 11105  1853                     l4578:	
 11106  1853  0830               	movf	disk_initialize@n,w
 11107  1854  1903               	btfsc	3,2
 11108  1855  285E               	goto	l4580
 11109  1856  30FF               	movlw	255
 11110  1857  31AA  22B2  3198   	fcall	_SPI_Exchange8bit
 11111  185A  3001               	movlw	1
 11112  185B  0020               	movlb	0	; select bank0
 11113  185C  02B0               	subwf	disk_initialize@n,f
 11114  185D  2853               	goto	l4578
 11115  185E                     l4580:	
 11116                           
 11117                           ;diskio.c: 313: ty = 0;
 11118  185E  01AD               	clrf	disk_initialize@ty
 11119                           
 11120                           ;diskio.c: 314: if (send_cmd((0), 0) == 1) {
 11121  185F  3000               	movlw	0
 11122  1860  00A3               	movwf	send_cmd@arg+3
 11123  1861  3000               	movlw	0
 11124  1862  00A2               	movwf	send_cmd@arg+2
 11125  1863  3000               	movlw	0
 11126  1864  00A1               	movwf	send_cmd@arg+1
 11127  1865  3000               	movlw	0
 11128  1866  00A0               	movwf	send_cmd@arg
 11129  1867  3000               	movlw	0
 11130  1868  31AB  238F  3198   	fcall	_send_cmd
 11131  186B  3A01               	xorlw	1
 11132  186C  1D03               	skipz
 11133  186D  2954               	goto	l4652
 11134                           
 11135                           ;diskio.c: 315: if (send_cmd((8), 0x1AA) == 1) {
 11136  186E  3000               	movlw	0
 11137  186F  0020               	movlb	0	; select bank0
 11138  1870  00A3               	movwf	send_cmd@arg+3
 11139  1871  3000               	movlw	0
 11140  1872  00A2               	movwf	send_cmd@arg+2
 11141  1873  3001               	movlw	1
 11142  1874  00A1               	movwf	send_cmd@arg+1
 11143  1875  30AA               	movlw	170
 11144  1876  00A0               	movwf	send_cmd@arg
 11145  1877  3008               	movlw	8
 11146  1878  31AB  238F  3198   	fcall	_send_cmd
 11147  187B  3A01               	xorlw	1
 11148  187C  1D03               	skipz
 11149  187D  28F8               	goto	l4632
 11150                           
 11151                           ;diskio.c: 316: for (n = 0; n < 4; n++) ocr[n] = SPI_Exchange8bit(0xFF);
 11152  187E  0020               	movlb	0	; select bank0
 11153  187F  01B0               	clrf	disk_initialize@n
 11154  1880                     l4592:	
 11155  1880  30FF               	movlw	255
 11156  1881  31AA  22B2  3198   	fcall	_SPI_Exchange8bit
 11157  1884  0020               	movlb	0	; select bank0
 11158  1885  00A4               	movwf	??_disk_initialize
 11159  1886  0830               	movf	disk_initialize@n,w
 11160  1887  3E26               	addlw	(low (disk_initialize@ocr| 0))& (0+255)
 11161  1888  0086               	movwf	6
 11162  1889  0187               	clrf	7
 11163  188A  0824               	movf	??_disk_initialize,w
 11164  188B  0081               	movwf	1
 11165  188C  3001               	movlw	1
 11166  188D  00A4               	movwf	??_disk_initialize
 11167  188E  0824               	movf	??_disk_initialize,w
 11168  188F  07B0               	addwf	disk_initialize@n,f
 11169  1890  3004               	movlw	4
 11170  1891  0230               	subwf	disk_initialize@n,w
 11171  1892  1C03               	skipc
 11172  1893  2880               	goto	l4592
 11173                           
 11174                           ;diskio.c: 317: if (ocr[2] == 0x01 && ocr[3] == 0xAA) {
 11175  1894  0328               	decf	disk_initialize@ocr+2,w
 11176  1895  1D03               	btfss	3,2
 11177  1896  2954               	goto	l4652
 11178  1897  30AA               	movlw	170
 11179  1898  0629               	xorwf	disk_initialize@ocr+3,w
 11180  1899  1D03               	btfss	3,2
 11181  189A  2954               	goto	l4652
 11182                           
 11183                           ;diskio.c: 318: for (tmr = 1000; tmr; tmr--) {
 11184  189B  30E8               	movlw	232
 11185  189C  00AE               	movwf	disk_initialize@tmr
 11186  189D  3003               	movlw	3
 11187  189E  00AF               	movwf	disk_initialize@tmr+1
 11188  189F                     l4610:	
 11189  189F  082E               	movf	disk_initialize@tmr,w
 11190  18A0  042F               	iorwf	disk_initialize@tmr+1,w
 11191  18A1  1903               	btfsc	3,2
 11192  18A2  28C1               	goto	l4612
 11193                           
 11194                           ;diskio.c: 319: if (send_cmd((0x80+41), 1UL << 30) == 0) break;
 11195  18A3  3040               	movlw	64
 11196  18A4  00A3               	movwf	send_cmd@arg+3
 11197  18A5  3000               	movlw	0
 11198  18A6  00A2               	movwf	send_cmd@arg+2
 11199  18A7  3000               	movlw	0
 11200  18A8  00A1               	movwf	send_cmd@arg+1
 11201  18A9  3000               	movlw	0
 11202  18AA  00A0               	movwf	send_cmd@arg
 11203  18AB  30A9               	movlw	169
 11204  18AC  31AB  238F  3198   	fcall	_send_cmd
 11205  18AF  3A00               	xorlw	0
 11206  18B0  1903               	btfsc	3,2
 11207  18B1  28C1               	goto	l4612
 11208                           
 11209                           ;diskio.c: 320: _delay((unsigned long)((1)*(16000000/4000.0)));
 11210  18B2  3006               	movlw	6
 11211  18B3  0020               	movlb	0	; select bank0
 11212  18B4  00A4               	movwf	??_disk_initialize
 11213  18B5  3030               	movlw	48
 11214  18B6                     u8597:	
 11215  18B6  0B89               	decfsz	9,f
 11216  18B7  28B6               	goto	u8597
 11217  18B8  0BA4               	decfsz	??_disk_initialize,f
 11218  18B9  28B6               	goto	u8597
 11219  18BA  0000               	nop
 11220  18BB  3001               	movlw	1
 11221  18BC  0020               	movlb	0	; select bank0
 11222  18BD  02AE               	subwf	disk_initialize@tmr,f
 11223  18BE  3000               	movlw	0
 11224  18BF  3BAF               	subwfb	disk_initialize@tmr+1,f
 11225  18C0  289F               	goto	l4610
 11226  18C1                     l4612:	
 11227                           
 11228                           ;diskio.c: 321: };diskio.c: 322: if (tmr && send_cmd((58), 0) == 0) {
 11229  18C1  0020               	movlb	0	; select bank0
 11230  18C2  082E               	movf	disk_initialize@tmr,w
 11231  18C3  042F               	iorwf	disk_initialize@tmr+1,w
 11232  18C4  1903               	btfsc	3,2
 11233  18C5  2954               	goto	l4652
 11234  18C6  3000               	movlw	0
 11235  18C7  00A3               	movwf	send_cmd@arg+3
 11236  18C8  3000               	movlw	0
 11237  18C9  00A2               	movwf	send_cmd@arg+2
 11238  18CA  3000               	movlw	0
 11239  18CB  00A1               	movwf	send_cmd@arg+1
 11240  18CC  3000               	movlw	0
 11241  18CD  00A0               	movwf	send_cmd@arg
 11242  18CE  303A               	movlw	58
 11243  18CF  31AB  238F  3198   	fcall	_send_cmd
 11244  18D2  3A00               	xorlw	0
 11245  18D3  1D03               	skipz
 11246  18D4  2954               	goto	l4652
 11247                           
 11248                           ;diskio.c: 323: for (n = 0; n < 4; n++) ocr[n] = SPI_Exchange8bit(0xFF);
 11249  18D5  0020               	movlb	0	; select bank0
 11250  18D6  01B0               	clrf	disk_initialize@n
 11251  18D7                     l4622:	
 11252  18D7  30FF               	movlw	255
 11253  18D8  31AA  22B2  3198   	fcall	_SPI_Exchange8bit
 11254  18DB  0020               	movlb	0	; select bank0
 11255  18DC  00A4               	movwf	??_disk_initialize
 11256  18DD  0830               	movf	disk_initialize@n,w
 11257  18DE  3E26               	addlw	(low (disk_initialize@ocr| 0))& (0+255)
 11258  18DF  0086               	movwf	6
 11259  18E0  0187               	clrf	7
 11260  18E1  0824               	movf	??_disk_initialize,w
 11261  18E2  0081               	movwf	1
 11262  18E3  3001               	movlw	1
 11263  18E4  00A4               	movwf	??_disk_initialize
 11264  18E5  0824               	movf	??_disk_initialize,w
 11265  18E6  07B0               	addwf	disk_initialize@n,f
 11266  18E7  3004               	movlw	4
 11267  18E8  0230               	subwf	disk_initialize@n,w
 11268  18E9  1C03               	skipc
 11269  18EA  28D7               	goto	l4622
 11270                           
 11271                           ;diskio.c: 324: ty = (ocr[0] & 0x40) ? 0x04 | 0x08 : 0x04;
 11272  18EB  1B26               	btfsc	disk_initialize@ocr,6
 11273  18EC  28EF               	goto	l4630
 11274  18ED  3004               	movlw	4
 11275  18EE  28F0               	goto	L7
 11276  18EF                     l4630:	
 11277  18EF  300C               	movlw	12
 11278  18F0                     L7:	
 11279  18F0  00AA               	movwf	_disk_initialize$346
 11280  18F1  3000               	movlw	0
 11281  18F2  00AB               	movwf	_disk_initialize$346+1
 11282  18F3  082A               	movf	_disk_initialize$346,w
 11283  18F4  00A4               	movwf	??_disk_initialize
 11284  18F5  0824               	movf	??_disk_initialize,w
 11285  18F6  00AD               	movwf	disk_initialize@ty
 11286  18F7  2954               	goto	l4652
 11287  18F8                     l4632:	
 11288                           
 11289                           ;diskio.c: 328: if (send_cmd((0x80+41), 0) <= 1) {
 11290  18F8  3000               	movlw	0
 11291  18F9  0020               	movlb	0	; select bank0
 11292  18FA  00A3               	movwf	send_cmd@arg+3
 11293  18FB  3000               	movlw	0
 11294  18FC  00A2               	movwf	send_cmd@arg+2
 11295  18FD  3000               	movlw	0
 11296  18FE  00A1               	movwf	send_cmd@arg+1
 11297  18FF  3000               	movlw	0
 11298  1900  00A0               	movwf	send_cmd@arg
 11299  1901  30A9               	movlw	169
 11300  1902  31AB  238F  3198   	fcall	_send_cmd
 11301  1905  0020               	movlb	0	; select bank0
 11302  1906  00A4               	movwf	??_disk_initialize
 11303  1907  3002               	movlw	2
 11304  1908  0224               	subwf	??_disk_initialize,w
 11305  1909  1803               	skipnc
 11306  190A  2914               	goto	l184
 11307                           
 11308                           ;diskio.c: 329: ty = 0x02; cmd = (0x80+41);
 11309  190B  3002               	movlw	2
 11310  190C  00A4               	movwf	??_disk_initialize
 11311  190D  0824               	movf	??_disk_initialize,w
 11312  190E  00AD               	movwf	disk_initialize@ty
 11313  190F  30A9               	movlw	169
 11314  1910  00A4               	movwf	??_disk_initialize
 11315  1911  0824               	movf	??_disk_initialize,w
 11316  1912  00AC               	movwf	disk_initialize@cmd
 11317                           
 11318                           ;diskio.c: 330: } else {
 11319  1913  2918               	goto	l4636
 11320  1914                     l184:	
 11321                           
 11322                           ;diskio.c: 331: ty = 0x01; cmd = (1);
 11323  1914  01AD               	clrf	disk_initialize@ty
 11324  1915  0AAD               	incf	disk_initialize@ty,f
 11325  1916  01AC               	clrf	disk_initialize@cmd
 11326  1917  0AAC               	incf	disk_initialize@cmd,f
 11327  1918                     l4636:	
 11328                           
 11329                           ;diskio.c: 332: };diskio.c: 333: for (tmr = 1000; tmr; tmr--) {
 11330  1918  30E8               	movlw	232
 11331  1919  00AE               	movwf	disk_initialize@tmr
 11332  191A  3003               	movlw	3
 11333  191B  00AF               	movwf	disk_initialize@tmr+1
 11334  191C                     l4644:	
 11335  191C  082E               	movf	disk_initialize@tmr,w
 11336  191D  042F               	iorwf	disk_initialize@tmr+1,w
 11337  191E  1903               	btfsc	3,2
 11338  191F  293E               	goto	l4646
 11339                           
 11340                           ;diskio.c: 334: if (send_cmd(cmd, 0) == 0) break;
 11341  1920  3000               	movlw	0
 11342  1921  00A3               	movwf	send_cmd@arg+3
 11343  1922  3000               	movlw	0
 11344  1923  00A2               	movwf	send_cmd@arg+2
 11345  1924  3000               	movlw	0
 11346  1925  00A1               	movwf	send_cmd@arg+1
 11347  1926  3000               	movlw	0
 11348  1927  00A0               	movwf	send_cmd@arg
 11349  1928  082C               	movf	disk_initialize@cmd,w
 11350  1929  31AB  238F  3198   	fcall	_send_cmd
 11351  192C  3A00               	xorlw	0
 11352  192D  1903               	btfsc	3,2
 11353  192E  293E               	goto	l4646
 11354                           
 11355                           ;diskio.c: 335: _delay((unsigned long)((1)*(16000000/4000.0)));
 11356  192F  3006               	movlw	6
 11357  1930  0020               	movlb	0	; select bank0
 11358  1931  00A4               	movwf	??_disk_initialize
 11359  1932  3030               	movlw	48
 11360  1933                     u8607:	
 11361  1933  0B89               	decfsz	9,f
 11362  1934  2933               	goto	u8607
 11363  1935  0BA4               	decfsz	??_disk_initialize,f
 11364  1936  2933               	goto	u8607
 11365  1937  0000               	nop
 11366  1938  3001               	movlw	1
 11367  1939  0020               	movlb	0	; select bank0
 11368  193A  02AE               	subwf	disk_initialize@tmr,f
 11369  193B  3000               	movlw	0
 11370  193C  3BAF               	subwfb	disk_initialize@tmr+1,f
 11371  193D  291C               	goto	l4644
 11372  193E                     l4646:	
 11373                           
 11374                           ;diskio.c: 336: };diskio.c: 337: if (!tmr || send_cmd((16), 512) != 0)
 11375  193E  0020               	movlb	0	; select bank0
 11376  193F  082E               	movf	disk_initialize@tmr,w
 11377  1940  042F               	iorwf	disk_initialize@tmr+1,w
 11378  1941  1903               	btfsc	3,2
 11379  1942  2952               	goto	l4650
 11380  1943  3000               	movlw	0
 11381  1944  00A3               	movwf	send_cmd@arg+3
 11382  1945  3000               	movlw	0
 11383  1946  00A2               	movwf	send_cmd@arg+2
 11384  1947  3002               	movlw	2
 11385  1948  00A1               	movwf	send_cmd@arg+1
 11386  1949  3000               	movlw	0
 11387  194A  00A0               	movwf	send_cmd@arg
 11388  194B  3010               	movlw	16
 11389  194C  31AB  238F  3198   	fcall	_send_cmd
 11390  194F  3A00               	xorlw	0
 11391  1950  1903               	skipnz
 11392  1951  2954               	goto	l4652
 11393  1952                     l4650:	
 11394                           
 11395                           ;diskio.c: 338: ty = 0;
 11396  1952  0020               	movlb	0	; select bank0
 11397  1953  01AD               	clrf	disk_initialize@ty
 11398  1954                     l4652:	
 11399                           
 11400                           ;diskio.c: 339: };diskio.c: 340: };diskio.c: 341: CardType = ty;
 11401  1954  0020               	movlb	0	; select bank0
 11402  1955  082D               	movf	disk_initialize@ty,w
 11403  1956  00A4               	movwf	??_disk_initialize
 11404  1957  0824               	movf	??_disk_initialize,w
 11405  1958  0021               	movlb	1	; select bank1
 11406  1959  00EB               	movwf	_CardType^(0+128)
 11407                           
 11408                           ;diskio.c: 342: deselect();
 11409  195A  3190  2000  3198   	fcall	_deselect
 11410                           
 11411                           ;diskio.c: 344: if (ty) {
 11412  195D  0020               	movlb	0	; select bank0
 11413  195E  082D               	movf	disk_initialize@ty,w
 11414  195F  1903               	btfsc	3,2
 11415  1960  2848               	goto	l4566
 11416                           
 11417                           ;diskio.c: 345: Stat &= ~0x01;
 11418  1961  30FE               	movlw	254
 11419  1962  00A4               	movwf	??_disk_initialize
 11420  1963  0824               	movf	??_disk_initialize,w
 11421  1964  0021               	movlb	1	; select bank1
 11422  1965  05EE               	andwf	_Stat^(0+128),f
 11423  1966  2848               	goto	l4566
 11424  1967                     __end_of_disk_initialize:	
 11425                           
 11426                           	psect	text21
 11427  2AAB                     __ptext21:	
 11428 ;; *************** function _SPI_Initialize *****************
 11429 ;; Defined at:
 11430 ;;		line 117 in file "SPI.c"
 11431 ;; Parameters:    Size  Location     Type
 11432 ;;		None
 11433 ;; Auto vars:     Size  Location     Type
 11434 ;;		None
 11435 ;; Return value:  Size  Location     Type
 11436 ;;                  1    wreg      void 
 11437 ;; Registers used:
 11438 ;;		wreg, status,2
 11439 ;; Tracked objects:
 11440 ;;		On entry : 2/1C
 11441 ;;		On exit  : 1F/4
 11442 ;;		Unchanged: 0/0
 11443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11448 ;;Total ram usage:        0 bytes
 11449 ;; Hardware stack levels used:    1
 11450 ;; This function calls:
 11451 ;;		Nothing
 11452 ;; This function is called by:
 11453 ;;		_initMain
 11454 ;;		_disk_initialize
 11455 ;; This function uses a non-reentrant model
 11456 ;;
 11457                           
 11458                           
 11459                           ;psect for function _SPI_Initialize
 11460  2AAB                     _SPI_Initialize:	
 11461                           
 11462                           ;SPI.c: 122: SSP1STAT = 0x40;
 11463                           
 11464                           ;incstack = 0
 11465                           ; Regs used in _SPI_Initialize: [wreg+status,2]
 11466  2AAB  3040               	movlw	64
 11467  2AAC  0024               	movlb	4	; select bank4
 11468  2AAD  0094               	movwf	20	;volatile
 11469                           
 11470                           ;SPI.c: 125: SSP1CON1 = 0x22;
 11471  2AAE  3022               	movlw	34
 11472  2AAF  0095               	movwf	21	;volatile
 11473                           
 11474                           ;SPI.c: 128: SSP1ADD = 0x00;
 11475  2AB0  0192               	clrf	18	;volatile
 11476  2AB1  0008               	return
 11477  2AB2                     __end_of_SPI_Initialize:	
 11478                           
 11479                           	psect	text22
 11480  203C                     __ptext22:	
 11481 ;; *************** function _check_fs *****************
 11482 ;; Defined at:
 11483 ;;		line 2175 in file "ff.c"
 11484 ;; Parameters:    Size  Location     Type
 11485 ;;  fs              2   46[BANK0 ] PTR struct .
 11486 ;;		 -> NULL(0), FatFs(558), 
 11487 ;;  sect            4   48[BANK0 ] unsigned long 
 11488 ;; Auto vars:     Size  Location     Type
 11489 ;;		None
 11490 ;; Return value:  Size  Location     Type
 11491 ;;                  1    wreg      unsigned char 
 11492 ;; Registers used:
 11493 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11494 ;; Tracked objects:
 11495 ;;		On entry : 1F/0
 11496 ;;		On exit  : 1F/0
 11497 ;;		Unchanged: 0/0
 11498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11499 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11501 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11502 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11503 ;;Total ram usage:       10 bytes
 11504 ;; Hardware stack levels used:    1
 11505 ;; Hardware stack levels required when called:    8
 11506 ;; This function calls:
 11507 ;;		_move_window
 11508 ;; This function is called by:
 11509 ;;		_find_volume
 11510 ;; This function uses a non-reentrant model
 11511 ;;
 11512                           
 11513                           
 11514                           ;psect for function _check_fs
 11515  203C                     _check_fs:	
 11516                           
 11517                           ;ff.c: 2180: fs->wflag = 0; fs->winsect = 0xFFFFFFFF;
 11518                           
 11519                           ;incstack = 0
 11520                           ; Regs used in _check_fs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11521  203C  084E               	movf	check_fs@fs,w
 11522  203D  0086               	movwf	6
 11523  203E  084F               	movf	check_fs@fs+1,w
 11524  203F  0087               	movwf	7
 11525  2040  3144               	addfsr 1,4
 11526  2041  0181               	clrf	1
 11527  2042  084E               	movf	check_fs@fs,w
 11528  2043  3E2A               	addlw	42
 11529  2044  0086               	movwf	6
 11530  2045  3000               	movlw	0
 11531  2046  3D4F               	addwfc	check_fs@fs+1,w
 11532  2047  0087               	movwf	7
 11533  2048  30FF               	movlw	255
 11534  2049  3FC0               	movwi [0]fsr1
 11535  204A  30FF               	movlw	255
 11536  204B  3FC1               	movwi [1]fsr1
 11537  204C  30FF               	movlw	255
 11538  204D  3FC2               	movwi [2]fsr1
 11539  204E  30FF               	movlw	255
 11540  204F  3FC3               	movwi [3]fsr1
 11541                           
 11542                           ;ff.c: 2181: if (move_window(fs, sect) != FR_OK)
 11543  2050  084F               	movf	check_fs@fs+1,w
 11544  2051  00C4               	movwf	move_window@fs+1
 11545  2052  084E               	movf	check_fs@fs,w
 11546  2053  00C3               	movwf	move_window@fs
 11547  2054  0853               	movf	check_fs@sect+3,w
 11548  2055  00C8               	movwf	move_window@sector+3
 11549  2056  0852               	movf	check_fs@sect+2,w
 11550  2057  00C7               	movwf	move_window@sector+2
 11551  2058  0851               	movf	check_fs@sect+1,w
 11552  2059  00C6               	movwf	move_window@sector+1
 11553  205A  0850               	movf	check_fs@sect,w
 11554  205B  00C5               	movwf	move_window@sector
 11555  205C  31AE  263A  31A0   	fcall	_move_window
 11556  205F  3A00               	xorlw	0
 11557  2060  1903               	skipnz
 11558  2061  2864               	goto	l4986
 11559                           
 11560                           ;ff.c: 2182: return 3;
 11561  2062  3003               	movlw	3
 11562  2063  0008               	return
 11563  2064                     l4986:	
 11564                           
 11565                           ;ff.c: 2184: if ((WORD)(*(WORD*)(BYTE*)(&fs->win[510])) != 0xAA55)
 11566  2064  084E               	movf	check_fs@fs,w
 11567  2065  3E2C               	addlw	44
 11568  2066  0086               	movwf	6
 11569  2067  3002               	movlw	2
 11570  2068  3D4F               	addwfc	check_fs@fs+1,w
 11571  2069  0087               	movwf	7
 11572  206A  0016               	moviw fsr1++
 11573  206B  3A55               	xorlw	85
 11574  206C  00D4               	movwf	??_check_fs
 11575  206D  0016               	moviw fsr1++
 11576  206E  3AAA               	xorlw	170
 11577  206F  04D4               	iorwf	??_check_fs,f
 11578  2070  1903               	btfsc	3,2
 11579  2071  2874               	goto	l4992
 11580                           
 11581                           ;ff.c: 2185: return 2;
 11582  2072  3002               	movlw	2
 11583  2073  0008               	return
 11584  2074                     l4992:	
 11585                           
 11586                           ;ff.c: 2187: if (((DWORD)(*(DWORD*)(BYTE*)(&fs->win[54])) & 0xFFFFFF) == 0x544146)
 11587  2074  084E               	movf	check_fs@fs,w
 11588  2075  3E64               	addlw	100
 11589  2076  0086               	movwf	6
 11590  2077  3000               	movlw	0
 11591  2078  3D4F               	addwfc	check_fs@fs+1,w
 11592  2079  0087               	movwf	7
 11593  207A  30FF               	movlw	255
 11594  207B  0501               	andwf	1,w
 11595  207C  00D4               	movwf	??_check_fs
 11596  207D  3141               	addfsr 1,1
 11597  207E  30FF               	movlw	255
 11598  207F  0501               	andwf	1,w
 11599  2080  00D5               	movwf	??_check_fs+1
 11600  2081  3141               	addfsr 1,1
 11601  2082  30FF               	movlw	255
 11602  2083  0501               	andwf	1,w
 11603  2084  00D6               	movwf	??_check_fs+2
 11604  2085  3141               	addfsr 1,1
 11605  2086  3000               	movlw	0
 11606  2087  0501               	andwf	1,w
 11607  2088  00D7               	movwf	??_check_fs+3
 11608  2089  3046               	movlw	70
 11609  208A  0654               	xorwf	??_check_fs,w
 11610  208B  3041               	movlw	65
 11611  208C  1903               	skipnz
 11612  208D  0655               	xorwf	??_check_fs+1,w
 11613  208E  3054               	movlw	84
 11614  208F  1903               	skipnz
 11615  2090  0656               	xorwf	??_check_fs+2,w
 11616  2091  0457               	iorwf	??_check_fs+3,w
 11617  2092  1D03               	btfss	3,2
 11618  2093  2896               	goto	l4998
 11619  2094                     l4994:	
 11620                           
 11621                           ;ff.c: 2188: return 0;
 11622  2094  3000               	movlw	0
 11623  2095  0008               	return
 11624  2096                     l4998:	
 11625                           
 11626                           ;ff.c: 2189: if (((DWORD)(*(DWORD*)(BYTE*)(&fs->win[82])) & 0xFFFFFF) == 0x544146)
 11627  2096  084E               	movf	check_fs@fs,w
 11628  2097  3E80               	addlw	128
 11629  2098  0086               	movwf	6
 11630  2099  3000               	movlw	0
 11631  209A  3D4F               	addwfc	check_fs@fs+1,w
 11632  209B  0087               	movwf	7
 11633  209C  30FF               	movlw	255
 11634  209D  0501               	andwf	1,w
 11635  209E  00D4               	movwf	??_check_fs
 11636  209F  3141               	addfsr 1,1
 11637  20A0  30FF               	movlw	255
 11638  20A1  0501               	andwf	1,w
 11639  20A2  00D5               	movwf	??_check_fs+1
 11640  20A3  3141               	addfsr 1,1
 11641  20A4  30FF               	movlw	255
 11642  20A5  0501               	andwf	1,w
 11643  20A6  00D6               	movwf	??_check_fs+2
 11644  20A7  3141               	addfsr 1,1
 11645  20A8  3000               	movlw	0
 11646  20A9  0501               	andwf	1,w
 11647  20AA  00D7               	movwf	??_check_fs+3
 11648  20AB  3046               	movlw	70
 11649  20AC  0654               	xorwf	??_check_fs,w
 11650  20AD  3041               	movlw	65
 11651  20AE  1903               	skipnz
 11652  20AF  0655               	xorwf	??_check_fs+1,w
 11653  20B0  3054               	movlw	84
 11654  20B1  1903               	skipnz
 11655  20B2  0656               	xorwf	??_check_fs+2,w
 11656  20B3  0457               	iorwf	??_check_fs+3,w
 11657  20B4  1903               	btfsc	3,2
 11658  20B5  2894               	goto	l4994
 11659                           
 11660                           ;ff.c: 2192: return 1;
 11661  20B6  3001               	movlw	1
 11662  20B7  0008               	return
 11663  20B8                     __end_of_check_fs:	
 11664                           
 11665                           	psect	text23
 11666  1479                     __ptext23:	
 11667 ;; *************** function _f_lseek *****************
 11668 ;; Defined at:
 11669 ;;		line 3033 in file "ff.c"
 11670 ;; Parameters:    Size  Location     Type
 11671 ;;  fp              2   19[BANK1 ] PTR struct .
 11672 ;;		 -> Fil(32), 
 11673 ;;  ofs             4   21[BANK1 ] unsigned long 
 11674 ;; Auto vars:     Size  Location     Type
 11675 ;;  clst            4   46[BANK1 ] unsigned long 
 11676 ;;  bcs             4   42[BANK1 ] unsigned long 
 11677 ;;  nsect           4   38[BANK1 ] unsigned long 
 11678 ;;  ifptr           4   33[BANK1 ] unsigned long 
 11679 ;;  res             1   37[BANK1 ] enum E88
 11680 ;; Return value:  Size  Location     Type
 11681 ;;                  1    wreg      enum E5735
 11682 ;; Registers used:
 11683 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11684 ;; Tracked objects:
 11685 ;;		On entry : 1F/1
 11686 ;;		On exit  : 1F/1
 11687 ;;		Unchanged: 0/0
 11688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11689 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11690 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11691 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11692 ;;      Totals:         0       0      31       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11693 ;;Total ram usage:       31 bytes
 11694 ;; Hardware stack levels used:    1
 11695 ;; Hardware stack levels required when called:   10
 11696 ;; This function calls:
 11697 ;;		___lldiv
 11698 ;;		_clust2sect
 11699 ;;		_create_chain
 11700 ;;		_get_fat
 11701 ;;		_validate
 11702 ;; This function is called by:
 11703 ;;		_main
 11704 ;; This function uses a non-reentrant model
 11705 ;;
 11706                           
 11707                           
 11708                           ;psect for function _f_lseek
 11709  1479                     _f_lseek:	
 11710                           
 11711                           ;ff.c: 3038: FRESULT res;;ff.c: 3039: DWORD clst, bcs, nsect, ifptr;;ff.c: 3045: res = v
      +                          alidate(fp);
 11712                           
 11713                           ;incstack = 0
 11714                           ; Regs used in _f_lseek: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11715  1479  0834               	movf	(f_lseek@fp+1)^(0+128),w
 11716  147A  00F2               	movwf	validate@obj+1
 11717  147B  0833               	movf	f_lseek@fp^(0+128),w
 11718  147C  00F1               	movwf	validate@obj
 11719  147D  31AD  25E1  3194   	fcall	_validate
 11720  1480  0021               	movlb	1	; select bank1
 11721  1481  00B9               	movwf	??_f_lseek^(0+128)
 11722  1482  0839               	movf	??_f_lseek^(0+128),w
 11723  1483  00C5               	movwf	f_lseek@res^(0+128)
 11724                           
 11725                           ;ff.c: 3046: if (res != FR_OK) return res;
 11726  1484  0845               	movf	f_lseek@res^(0+128),w
 11727  1485  1903               	btfsc	3,2
 11728  1486  2C89               	goto	l5674
 11729  1487                     l5670:	
 11730  1487  0845               	movf	f_lseek@res^(0+128),w
 11731  1488  0008               	return
 11732  1489                     l5674:	
 11733                           
 11734                           ;ff.c: 3047: if (fp->err)
 11735  1489  0833               	movf	f_lseek@fp^(0+128),w
 11736  148A  0086               	movwf	6
 11737  148B  0834               	movf	(f_lseek@fp+1)^(0+128),w
 11738  148C  0087               	movwf	7
 11739  148D  3145               	addfsr 1,5
 11740  148E  0801               	movf	1,w
 11741  148F  1903               	btfsc	3,2
 11742  1490  2C98               	goto	l5680
 11743                           
 11744                           ;ff.c: 3048: return (FRESULT)fp->err;
 11745  1491  0833               	movf	f_lseek@fp^(0+128),w
 11746  1492  0086               	movwf	6
 11747  1493  0834               	movf	(f_lseek@fp+1)^(0+128),w
 11748  1494  0087               	movwf	7
 11749  1495  3145               	addfsr 1,5
 11750  1496  0801               	movf	1,w
 11751  1497  0008               	return
 11752  1498                     l5680:	
 11753                           
 11754                           ;ff.c: 3106: {;ff.c: 3107: if (ofs > fp->fsize;ff.c: 3109: && !(fp->flag & 0x02);ff.c: 3
      +                          111: ) ofs = fp->fsize;
 11755  1498  0833               	movf	f_lseek@fp^(0+128),w
 11756  1499  0086               	movwf	6
 11757  149A  0834               	movf	(f_lseek@fp+1)^(0+128),w
 11758  149B  0087               	movwf	7
 11759  149C  314A               	addfsr 1,10
 11760  149D  3F40               	moviw [0]fsr1
 11761  149E  00B9               	movwf	??_f_lseek^(0+128)
 11762  149F  3F41               	moviw [1]fsr1
 11763  14A0  00BA               	movwf	(??_f_lseek^(0+128)+1)
 11764  14A1  3F42               	moviw [2]fsr1
 11765  14A2  00BB               	movwf	(??_f_lseek^(0+128)+2)
 11766  14A3  3F43               	moviw [3]fsr1
 11767  14A4  00BC               	movwf	(??_f_lseek^(0+128)+3)
 11768  14A5  0838               	movf	(f_lseek@ofs+3)^(0+128),w
 11769  14A6  023C               	subwf	(??_f_lseek+3)^(0+128),w
 11770  14A7  1D03               	skipz
 11771  14A8  2CB3               	goto	u7975
 11772  14A9  0837               	movf	(f_lseek@ofs+2)^(0+128),w
 11773  14AA  023B               	subwf	(??_f_lseek+2)^(0+128),w
 11774  14AB  1D03               	skipz
 11775  14AC  2CB3               	goto	u7975
 11776  14AD  0836               	movf	(f_lseek@ofs+1)^(0+128),w
 11777  14AE  023A               	subwf	(??_f_lseek+1)^(0+128),w
 11778  14AF  1D03               	skipz
 11779  14B0  2CB3               	goto	u7975
 11780  14B1  0835               	movf	f_lseek@ofs^(0+128),w
 11781  14B2  0239               	subwf	??_f_lseek^(0+128),w
 11782  14B3                     u7975:	
 11783  14B3  1803               	skipnc
 11784  14B4  2CC9               	goto	l758
 11785  14B5  0833               	movf	f_lseek@fp^(0+128),w
 11786  14B6  0086               	movwf	6
 11787  14B7  0834               	movf	(f_lseek@fp+1)^(0+128),w
 11788  14B8  0087               	movwf	7
 11789  14B9  3144               	addfsr 1,4
 11790  14BA  1881               	btfsc	1,1
 11791  14BB  2CC9               	goto	l758
 11792  14BC  0833               	movf	f_lseek@fp^(0+128),w
 11793  14BD  0086               	movwf	6
 11794  14BE  0834               	movf	(f_lseek@fp+1)^(0+128),w
 11795  14BF  0087               	movwf	7
 11796  14C0  314A               	addfsr 1,10
 11797  14C1  3F40               	moviw [0]fsr1
 11798  14C2  00B5               	movwf	f_lseek@ofs^(0+128)
 11799  14C3  3F41               	moviw [1]fsr1
 11800  14C4  00B6               	movwf	(f_lseek@ofs+1)^(0+128)
 11801  14C5  3F42               	moviw [2]fsr1
 11802  14C6  00B7               	movwf	(f_lseek@ofs+2)^(0+128)
 11803  14C7  3F43               	moviw [3]fsr1
 11804  14C8  00B8               	movwf	(f_lseek@ofs+3)^(0+128)
 11805  14C9                     l758:	
 11806                           
 11807                           ;ff.c: 3113: ifptr = fp->fptr;
 11808  14C9  0833               	movf	f_lseek@fp^(0+128),w
 11809  14CA  0086               	movwf	6
 11810  14CB  0834               	movf	(f_lseek@fp+1)^(0+128),w
 11811  14CC  0087               	movwf	7
 11812  14CD  3146               	addfsr 1,6
 11813  14CE  3F40               	moviw [0]fsr1
 11814  14CF  00C1               	movwf	f_lseek@ifptr^(0+128)
 11815  14D0  3F41               	moviw [1]fsr1
 11816  14D1  00C2               	movwf	(f_lseek@ifptr+1)^(0+128)
 11817  14D2  3F42               	moviw [2]fsr1
 11818  14D3  00C3               	movwf	(f_lseek@ifptr+2)^(0+128)
 11819  14D4  3F43               	moviw [3]fsr1
 11820  14D5  00C4               	movwf	(f_lseek@ifptr+3)^(0+128)
 11821                           
 11822                           ;ff.c: 3114: fp->fptr = nsect = 0;
 11823  14D6  3000               	movlw	0
 11824  14D7  00C9               	movwf	(f_lseek@nsect+3)^(0+128)
 11825  14D8  3000               	movlw	0
 11826  14D9  00C8               	movwf	(f_lseek@nsect+2)^(0+128)
 11827  14DA  3000               	movlw	0
 11828  14DB  00C7               	movwf	(f_lseek@nsect+1)^(0+128)
 11829  14DC  3000               	movlw	0
 11830  14DD  00C6               	movwf	f_lseek@nsect^(0+128)
 11831  14DE  0833               	movf	f_lseek@fp^(0+128),w
 11832  14DF  0086               	movwf	6
 11833  14E0  0834               	movf	(f_lseek@fp+1)^(0+128),w
 11834  14E1  0087               	movwf	7
 11835  14E2  3146               	addfsr 1,6
 11836  14E3  0846               	movf	f_lseek@nsect^(0+128),w
 11837  14E4  3FC0               	movwi [0]fsr1
 11838  14E5  0847               	movf	(f_lseek@nsect+1)^(0+128),w
 11839  14E6  3FC1               	movwi [1]fsr1
 11840  14E7  0848               	movf	(f_lseek@nsect+2)^(0+128),w
 11841  14E8  3FC2               	movwi [2]fsr1
 11842  14E9  0849               	movf	(f_lseek@nsect+3)^(0+128),w
 11843  14EA  3FC3               	movwi [3]fsr1
 11844                           
 11845                           ;ff.c: 3115: if (ofs) {
 11846  14EB  0838               	movf	(f_lseek@ofs+3)^(0+128),w
 11847  14EC  0437               	iorwf	(f_lseek@ofs+2)^(0+128),w
 11848  14ED  0436               	iorwf	(f_lseek@ofs+1)^(0+128),w
 11849  14EE  0435               	iorwf	f_lseek@ofs^(0+128),w
 11850  14EF  1903               	skipnz
 11851  14F0  2F71               	goto	l5778
 11852                           
 11853                           ;ff.c: 3116: bcs = (DWORD)fp->fs->csize * ((UINT)512);
 11854  14F1  0833               	movf	f_lseek@fp^(0+128),w
 11855  14F2  0086               	movwf	6
 11856  14F3  0834               	movf	(f_lseek@fp+1)^(0+128),w
 11857  14F4  0087               	movwf	7
 11858  14F5  3F40               	moviw [0]fsr1
 11859  14F6  00B9               	movwf	??_f_lseek^(0+128)
 11860  14F7  3F41               	moviw [1]fsr1
 11861  14F8  00BA               	movwf	(??_f_lseek^(0+128)+1)
 11862  14F9  0839               	movf	??_f_lseek^(0+128),w
 11863  14FA  0086               	movwf	6
 11864  14FB  083A               	movf	(??_f_lseek+1)^(0+128),w
 11865  14FC  0087               	movwf	7
 11866  14FD  3142               	addfsr 1,2
 11867  14FE  0801               	movf	1,w
 11868  14FF  00BB               	movwf	(??_f_lseek+2)^(0+128)
 11869  1500  01BC               	clrf	((??_f_lseek+2)^(0+128)+1)
 11870  1501  01BD               	clrf	((??_f_lseek+2)^(0+128)+2)
 11871  1502  01BE               	clrf	((??_f_lseek+2)^(0+128)+3)
 11872  1503  3009               	movlw	9
 11873  1504                     u8005:	
 11874  1504  35BB               	lslf	(??_f_lseek+2)^(0+128),f
 11875  1505  0DBC               	rlf	((??_f_lseek+2)^(0+128)+1),f
 11876  1506  0DBD               	rlf	((??_f_lseek+2)^(0+128)+2),f
 11877  1507  0DBE               	rlf	((??_f_lseek+2)^(0+128)+3),f
 11878  1508  0B89               	decfsz	9,f
 11879  1509  2D04               	goto	u8005
 11880  150A  083E               	movf	(??_f_lseek+5)^(0+128),w
 11881  150B  00CD               	movwf	(f_lseek@bcs+3)^(0+128)
 11882  150C  083D               	movf	(??_f_lseek+4)^(0+128),w
 11883  150D  00CC               	movwf	(f_lseek@bcs+2)^(0+128)
 11884  150E  083C               	movf	(??_f_lseek+3)^(0+128),w
 11885  150F  00CB               	movwf	(f_lseek@bcs+1)^(0+128)
 11886  1510  083B               	movf	(??_f_lseek+2)^(0+128),w
 11887  1511  00CA               	movwf	f_lseek@bcs^(0+128)
 11888                           
 11889                           ;ff.c: 3117: if (ifptr > 0 &&;ff.c: 3118: (ofs - 1) / bcs >= (ifptr - 1) / bcs) {
 11890  1512  0844               	movf	(f_lseek@ifptr+3)^(0+128),w
 11891  1513  0443               	iorwf	(f_lseek@ifptr+2)^(0+128),w
 11892  1514  0442               	iorwf	(f_lseek@ifptr+1)^(0+128),w
 11893  1515  0441               	iorwf	f_lseek@ifptr^(0+128),w
 11894  1516  1903               	skipnz
 11895  1517  2DBC               	goto	l5700
 11896  1518  084D               	movf	(f_lseek@bcs+3)^(0+128),w
 11897  1519  00F3               	movwf	___lldiv@divisor+3
 11898  151A  084C               	movf	(f_lseek@bcs+2)^(0+128),w
 11899  151B  00F2               	movwf	___lldiv@divisor+2
 11900  151C  084B               	movf	(f_lseek@bcs+1)^(0+128),w
 11901  151D  00F1               	movwf	___lldiv@divisor+1
 11902  151E  084A               	movf	f_lseek@bcs^(0+128),w
 11903  151F  00F0               	movwf	___lldiv@divisor
 11904  1520  30FF               	movlw	255
 11905  1521  0735               	addwf	f_lseek@ofs^(0+128),w
 11906  1522  00F4               	movwf	___lldiv@dividend
 11907  1523  30FF               	movlw	255
 11908  1524  3D36               	addwfc	(f_lseek@ofs+1)^(0+128),w
 11909  1525  00F5               	movwf	___lldiv@dividend+1
 11910  1526  30FF               	movlw	255
 11911  1527  3D37               	addwfc	(f_lseek@ofs+2)^(0+128),w
 11912  1528  00F6               	movwf	___lldiv@dividend+2
 11913  1529  30FF               	movlw	255
 11914  152A  3D38               	addwfc	(f_lseek@ofs+3)^(0+128),w
 11915  152B  00F7               	movwf	___lldiv@dividend+3
 11916  152C  31AC  24E4  3194   	fcall	___lldiv
 11917  152F  0870               	movf	?___lldiv,w
 11918  1530  0021               	movlb	1	; select bank1
 11919  1531  00B9               	movwf	??_f_lseek^(0+128)
 11920  1532  0871               	movf	?___lldiv+1,w
 11921  1533  00BA               	movwf	(??_f_lseek^(0+128)+1)
 11922  1534  0872               	movf	?___lldiv+2,w
 11923  1535  00BB               	movwf	(??_f_lseek^(0+128)+2)
 11924  1536  0873               	movf	?___lldiv+3,w
 11925  1537  00BC               	movwf	(??_f_lseek^(0+128)+3)
 11926  1538  084D               	movf	(f_lseek@bcs+3)^(0+128),w
 11927  1539  00F3               	movwf	___lldiv@divisor+3
 11928  153A  084C               	movf	(f_lseek@bcs+2)^(0+128),w
 11929  153B  00F2               	movwf	___lldiv@divisor+2
 11930  153C  084B               	movf	(f_lseek@bcs+1)^(0+128),w
 11931  153D  00F1               	movwf	___lldiv@divisor+1
 11932  153E  084A               	movf	f_lseek@bcs^(0+128),w
 11933  153F  00F0               	movwf	___lldiv@divisor
 11934  1540  30FF               	movlw	255
 11935  1541  0741               	addwf	f_lseek@ifptr^(0+128),w
 11936  1542  00F4               	movwf	___lldiv@dividend
 11937  1543  30FF               	movlw	255
 11938  1544  3D42               	addwfc	(f_lseek@ifptr+1)^(0+128),w
 11939  1545  00F5               	movwf	___lldiv@dividend+1
 11940  1546  30FF               	movlw	255
 11941  1547  3D43               	addwfc	(f_lseek@ifptr+2)^(0+128),w
 11942  1548  00F6               	movwf	___lldiv@dividend+2
 11943  1549  30FF               	movlw	255
 11944  154A  3D44               	addwfc	(f_lseek@ifptr+3)^(0+128),w
 11945  154B  00F7               	movwf	___lldiv@dividend+3
 11946  154C  31AC  24E4  3194   	fcall	___lldiv
 11947  154F  0873               	movf	?___lldiv+3,w
 11948  1550  0021               	movlb	1	; select bank1
 11949  1551  023C               	subwf	(??_f_lseek+3)^(0+128),w
 11950  1552  1D03               	skipz
 11951  1553  2D5E               	goto	u8025
 11952  1554  0872               	movf	?___lldiv+2,w
 11953  1555  023B               	subwf	(??_f_lseek+2)^(0+128),w
 11954  1556  1D03               	skipz
 11955  1557  2D5E               	goto	u8025
 11956  1558  0871               	movf	?___lldiv+1,w
 11957  1559  023A               	subwf	(??_f_lseek+1)^(0+128),w
 11958  155A  1D03               	skipz
 11959  155B  2D5E               	goto	u8025
 11960  155C  0870               	movf	?___lldiv,w
 11961  155D  0239               	subwf	??_f_lseek^(0+128),w
 11962  155E                     u8025:	
 11963  155E  1C03               	skipc
 11964  155F  2DBC               	goto	l5700
 11965                           
 11966                           ;ff.c: 3119: fp->fptr = (ifptr - 1) & ~(bcs - 1);
 11967  1560  30FF               	movlw	255
 11968  1561  00B9               	movwf	??_f_lseek^(0+128)
 11969  1562  30FF               	movlw	255
 11970  1563  00BA               	movwf	(??_f_lseek^(0+128)+1)
 11971  1564  30FF               	movlw	255
 11972  1565  00BB               	movwf	(??_f_lseek^(0+128)+2)
 11973  1566  30FF               	movlw	255
 11974  1567  00BC               	movwf	(??_f_lseek^(0+128)+3)
 11975  1568  084A               	movf	f_lseek@bcs^(0+128),w
 11976  1569  07B9               	addwf	??_f_lseek^(0+128),f
 11977  156A  084B               	movf	(f_lseek@bcs+1)^(0+128),w
 11978  156B  3DBA               	addwfc	(??_f_lseek^(0+128)+1),f
 11979  156C  084C               	movf	(f_lseek@bcs+2)^(0+128),w
 11980  156D  3DBB               	addwfc	(??_f_lseek^(0+128)+2),f
 11981  156E  084D               	movf	(f_lseek@bcs+3)^(0+128),w
 11982  156F  3DBC               	addwfc	(??_f_lseek^(0+128)+3),f
 11983  1570  09B9               	comf	??_f_lseek^(0+128),f
 11984  1571  09BA               	comf	(??_f_lseek^(0+128)+1),f
 11985  1572  09BB               	comf	(??_f_lseek^(0+128)+2),f
 11986  1573  09BC               	comf	(??_f_lseek^(0+128)+3),f
 11987  1574  30FF               	movlw	255
 11988  1575  00BD               	movwf	(??_f_lseek+4)^(0+128)
 11989  1576  30FF               	movlw	255
 11990  1577  00BE               	movwf	((??_f_lseek+4)^(0+128)+1)
 11991  1578  30FF               	movlw	255
 11992  1579  00BF               	movwf	((??_f_lseek+4)^(0+128)+2)
 11993  157A  30FF               	movlw	255
 11994  157B  00C0               	movwf	((??_f_lseek+4)^(0+128)+3)
 11995  157C  0841               	movf	f_lseek@ifptr^(0+128),w
 11996  157D  07BD               	addwf	(??_f_lseek+4)^(0+128),f
 11997  157E  0842               	movf	(f_lseek@ifptr+1)^(0+128),w
 11998  157F  3DBE               	addwfc	((??_f_lseek+4)^(0+128)+1),f
 11999  1580  0843               	movf	(f_lseek@ifptr+2)^(0+128),w
 12000  1581  3DBF               	addwfc	((??_f_lseek+4)^(0+128)+2),f
 12001  1582  0844               	movf	(f_lseek@ifptr+3)^(0+128),w
 12002  1583  3DC0               	addwfc	((??_f_lseek+4)^(0+128)+3),f
 12003  1584  083D               	movf	(??_f_lseek+4)^(0+128),w
 12004  1585  05B9               	andwf	??_f_lseek^(0+128),f
 12005  1586  083E               	movf	(??_f_lseek+5)^(0+128),w
 12006  1587  05BA               	andwf	(??_f_lseek^(0+128)+1),f
 12007  1588  083F               	movf	(??_f_lseek+6)^(0+128),w
 12008  1589  05BB               	andwf	(??_f_lseek^(0+128)+2),f
 12009  158A  0840               	movf	(??_f_lseek+7)^(0+128),w
 12010  158B  05BC               	andwf	(??_f_lseek^(0+128)+3),f
 12011  158C  0833               	movf	f_lseek@fp^(0+128),w
 12012  158D  0086               	movwf	6
 12013  158E  0834               	movf	(f_lseek@fp+1)^(0+128),w
 12014  158F  0087               	movwf	7
 12015  1590  3146               	addfsr 1,6
 12016  1591  0839               	movf	??_f_lseek^(0+128),w
 12017  1592  3FC0               	movwi [0]fsr1
 12018  1593  083A               	movf	(??_f_lseek+1)^(0+128),w
 12019  1594  3FC1               	movwi [1]fsr1
 12020  1595  083B               	movf	(??_f_lseek+2)^(0+128),w
 12021  1596  3FC2               	movwi [2]fsr1
 12022  1597  083C               	movf	(??_f_lseek+3)^(0+128),w
 12023  1598  3FC3               	movwi [3]fsr1
 12024                           
 12025                           ;ff.c: 3120: ofs -= fp->fptr;
 12026  1599  0833               	movf	f_lseek@fp^(0+128),w
 12027  159A  0086               	movwf	6
 12028  159B  0834               	movf	(f_lseek@fp+1)^(0+128),w
 12029  159C  0087               	movwf	7
 12030  159D  3146               	addfsr 1,6
 12031  159E  3F40               	moviw [0]fsr1
 12032  159F  00B9               	movwf	??_f_lseek^(0+128)
 12033  15A0  3F41               	moviw [1]fsr1
 12034  15A1  00BA               	movwf	(??_f_lseek^(0+128)+1)
 12035  15A2  3F42               	moviw [2]fsr1
 12036  15A3  00BB               	movwf	(??_f_lseek^(0+128)+2)
 12037  15A4  3F43               	moviw [3]fsr1
 12038  15A5  00BC               	movwf	(??_f_lseek^(0+128)+3)
 12039  15A6  0839               	movf	??_f_lseek^(0+128),w
 12040  15A7  02B5               	subwf	f_lseek@ofs^(0+128),f
 12041  15A8  083A               	movf	(??_f_lseek+1)^(0+128),w
 12042  15A9  3BB6               	subwfb	(f_lseek@ofs+1)^(0+128),f
 12043  15AA  083B               	movf	(??_f_lseek+2)^(0+128),w
 12044  15AB  3BB7               	subwfb	(f_lseek@ofs+2)^(0+128),f
 12045  15AC  083C               	movf	(??_f_lseek+3)^(0+128),w
 12046  15AD  3BB8               	subwfb	(f_lseek@ofs+3)^(0+128),f
 12047                           
 12048                           ;ff.c: 3121: clst = fp->clust;
 12049  15AE  0833               	movf	f_lseek@fp^(0+128),w
 12050  15AF  0086               	movwf	6
 12051  15B0  0834               	movf	(f_lseek@fp+1)^(0+128),w
 12052  15B1  0087               	movwf	7
 12053  15B2  3152               	addfsr 1,18
 12054  15B3  3F40               	moviw [0]fsr1
 12055  15B4  00CE               	movwf	f_lseek@clst^(0+128)
 12056  15B5  3F41               	moviw [1]fsr1
 12057  15B6  00CF               	movwf	(f_lseek@clst+1)^(0+128)
 12058  15B7  3F42               	moviw [2]fsr1
 12059  15B8  00D0               	movwf	(f_lseek@clst+2)^(0+128)
 12060  15B9  3F43               	moviw [3]fsr1
 12061  15BA  00D1               	movwf	(f_lseek@clst+3)^(0+128)
 12062                           
 12063                           ;ff.c: 3122: } else {
 12064  15BB  2E32               	goto	l5724
 12065  15BC                     l5700:	
 12066                           
 12067                           ;ff.c: 3123: clst = fp->sclust;
 12068  15BC  0833               	movf	f_lseek@fp^(0+128),w
 12069  15BD  0086               	movwf	6
 12070  15BE  0834               	movf	(f_lseek@fp+1)^(0+128),w
 12071  15BF  0087               	movwf	7
 12072  15C0  314E               	addfsr 1,14
 12073  15C1  3F40               	moviw [0]fsr1
 12074  15C2  00CE               	movwf	f_lseek@clst^(0+128)
 12075  15C3  3F41               	moviw [1]fsr1
 12076  15C4  00CF               	movwf	(f_lseek@clst+1)^(0+128)
 12077  15C5  3F42               	moviw [2]fsr1
 12078  15C6  00D0               	movwf	(f_lseek@clst+2)^(0+128)
 12079  15C7  3F43               	moviw [3]fsr1
 12080  15C8  00D1               	movwf	(f_lseek@clst+3)^(0+128)
 12081                           
 12082                           ;ff.c: 3125: if (clst == 0) {
 12083  15C9  0851               	movf	(f_lseek@clst+3)^(0+128),w
 12084  15CA  0450               	iorwf	(f_lseek@clst+2)^(0+128),w
 12085  15CB  044F               	iorwf	(f_lseek@clst+1)^(0+128),w
 12086  15CC  044E               	iorwf	f_lseek@clst^(0+128),w
 12087  15CD  1D03               	skipz
 12088  15CE  2E25               	goto	l762
 12089                           
 12090                           ;ff.c: 3126: clst = create_chain(fp->fs, 0);
 12091  15CF  0833               	movf	f_lseek@fp^(0+128),w
 12092  15D0  0086               	movwf	6
 12093  15D1  0834               	movf	(f_lseek@fp+1)^(0+128),w
 12094  15D2  0087               	movwf	7
 12095  15D3  3F40               	moviw [0]fsr1
 12096  15D4  00A0               	movwf	create_chain@fs^(0+128)
 12097  15D5  3F41               	moviw [1]fsr1
 12098  15D6  00A1               	movwf	(create_chain@fs+1)^(0+128)
 12099  15D7  3000               	movlw	0
 12100  15D8  00A5               	movwf	(create_chain@clst+3)^(0+128)
 12101  15D9  3000               	movlw	0
 12102  15DA  00A4               	movwf	(create_chain@clst+2)^(0+128)
 12103  15DB  3000               	movlw	0
 12104  15DC  00A3               	movwf	(create_chain@clst+1)^(0+128)
 12105  15DD  3000               	movlw	0
 12106  15DE  00A2               	movwf	create_chain@clst^(0+128)
 12107  15DF  3199  2167  3194   	fcall	_create_chain
 12108  15E2  0823               	movf	(?_create_chain+3)^(0+128),w
 12109  15E3  00D1               	movwf	(f_lseek@clst+3)^(0+128)
 12110  15E4  0822               	movf	(?_create_chain+2)^(0+128),w
 12111  15E5  00D0               	movwf	(f_lseek@clst+2)^(0+128)
 12112  15E6  0821               	movf	(?_create_chain+1)^(0+128),w
 12113  15E7  00CF               	movwf	(f_lseek@clst+1)^(0+128)
 12114  15E8  0820               	movf	?_create_chain^(0+128),w
 12115  15E9  00CE               	movwf	f_lseek@clst^(0+128)
 12116                           
 12117                           ;ff.c: 3127: if (clst == 1) { fp->err = (BYTE)(FR_INT_ERR); return FR_INT_ERR; };
 12118  15EA  034E               	decf	f_lseek@clst^(0+128),w
 12119  15EB  044F               	iorwf	(f_lseek@clst+1)^(0+128),w
 12120  15EC  0450               	iorwf	(f_lseek@clst+2)^(0+128),w
 12121  15ED  0451               	iorwf	(f_lseek@clst+3)^(0+128),w
 12122  15EE  1D03               	btfss	3,2
 12123  15EF  2DFE               	goto	l5714
 12124  15F0                     l5708:	
 12125  15F0  0833               	movf	f_lseek@fp^(0+128),w
 12126  15F1  3E05               	addlw	5
 12127  15F2  00B9               	movwf	??_f_lseek^(0+128)
 12128  15F3  3000               	movlw	0
 12129  15F4  3D34               	addwfc	(f_lseek@fp+1)^(0+128),w
 12130  15F5  00BA               	movwf	(??_f_lseek+1)^(0+128)
 12131  15F6  0839               	movf	??_f_lseek^(0+128),w
 12132  15F7  0086               	movwf	6
 12133  15F8  083A               	movf	(??_f_lseek+1)^(0+128),w
 12134  15F9  0087               	movwf	7
 12135  15FA  3002               	movlw	2
 12136  15FB  0081               	movwf	1
 12137  15FC  3002               	movlw	2
 12138  15FD  0008               	return
 12139  15FE                     l5714:	
 12140                           
 12141                           ;ff.c: 3128: if (clst == 0xFFFFFFFF) { fp->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR
      +                          ; };
 12142  15FE  0A4E               	incf	f_lseek@clst^(0+128),w
 12143  15FF  1D03               	skipz
 12144  1600  2E18               	goto	l5722
 12145  1601  0A4F               	incf	(f_lseek@clst+1)^(0+128),w
 12146  1602  1D03               	skipz
 12147  1603  2E18               	goto	l5722
 12148  1604  0A50               	incf	(f_lseek@clst+2)^(0+128),w
 12149  1605  1D03               	skipz
 12150  1606  2E18               	goto	l5722
 12151  1607  0A51               	incf	(f_lseek@clst+3)^(0+128),w
 12152  1608  1D03               	btfss	3,2
 12153  1609  2E18               	goto	l5722
 12154  160A                     l5716:	
 12155  160A  0833               	movf	f_lseek@fp^(0+128),w
 12156  160B  3E05               	addlw	5
 12157  160C  00B9               	movwf	??_f_lseek^(0+128)
 12158  160D  3000               	movlw	0
 12159  160E  3D34               	addwfc	(f_lseek@fp+1)^(0+128),w
 12160  160F  00BA               	movwf	(??_f_lseek+1)^(0+128)
 12161  1610  0839               	movf	??_f_lseek^(0+128),w
 12162  1611  0086               	movwf	6
 12163  1612  083A               	movf	(??_f_lseek+1)^(0+128),w
 12164  1613  0087               	movwf	7
 12165  1614  3001               	movlw	1
 12166  1615  0081               	movwf	1
 12167  1616  3001               	movlw	1
 12168  1617  0008               	return
 12169  1618                     l5722:	
 12170                           
 12171                           ;ff.c: 3129: fp->sclust = clst;
 12172  1618  0833               	movf	f_lseek@fp^(0+128),w
 12173  1619  0086               	movwf	6
 12174  161A  0834               	movf	(f_lseek@fp+1)^(0+128),w
 12175  161B  0087               	movwf	7
 12176  161C  314E               	addfsr 1,14
 12177  161D  084E               	movf	f_lseek@clst^(0+128),w
 12178  161E  3FC0               	movwi [0]fsr1
 12179  161F  084F               	movf	(f_lseek@clst+1)^(0+128),w
 12180  1620  3FC1               	movwi [1]fsr1
 12181  1621  0850               	movf	(f_lseek@clst+2)^(0+128),w
 12182  1622  3FC2               	movwi [2]fsr1
 12183  1623  0851               	movf	(f_lseek@clst+3)^(0+128),w
 12184  1624  3FC3               	movwi [3]fsr1
 12185  1625                     l762:	
 12186                           
 12187                           ;ff.c: 3130: };ff.c: 3132: fp->clust = clst;
 12188  1625  0833               	movf	f_lseek@fp^(0+128),w
 12189  1626  0086               	movwf	6
 12190  1627  0834               	movf	(f_lseek@fp+1)^(0+128),w
 12191  1628  0087               	movwf	7
 12192  1629  3152               	addfsr 1,18
 12193  162A  084E               	movf	f_lseek@clst^(0+128),w
 12194  162B  3FC0               	movwi [0]fsr1
 12195  162C  084F               	movf	(f_lseek@clst+1)^(0+128),w
 12196  162D  3FC1               	movwi [1]fsr1
 12197  162E  0850               	movf	(f_lseek@clst+2)^(0+128),w
 12198  162F  3FC2               	movwi [2]fsr1
 12199  1630  0851               	movf	(f_lseek@clst+3)^(0+128),w
 12200  1631  3FC3               	movwi [3]fsr1
 12201  1632                     l5724:	
 12202                           
 12203                           ;ff.c: 3133: };ff.c: 3134: if (clst != 0) {
 12204  1632  0851               	movf	(f_lseek@clst+3)^(0+128),w
 12205  1633  0450               	iorwf	(f_lseek@clst+2)^(0+128),w
 12206  1634  044F               	iorwf	(f_lseek@clst+1)^(0+128),w
 12207  1635  044E               	iorwf	f_lseek@clst^(0+128),w
 12208  1636  1D03               	btfss	3,2
 12209  1637  2EF7               	goto	l5760
 12210  1638  2F71               	goto	l5778
 12211  1639                     l5728:	
 12212                           
 12213                           ;ff.c: 3137: if (fp->flag & 0x02) {
 12214  1639  0833               	movf	f_lseek@fp^(0+128),w
 12215  163A  0086               	movwf	6
 12216  163B  0834               	movf	(f_lseek@fp+1)^(0+128),w
 12217  163C  0087               	movwf	7
 12218  163D  3144               	addfsr 1,4
 12219  163E  1C81               	btfss	1,1
 12220  163F  2E6A               	goto	l5736
 12221                           
 12222                           ;ff.c: 3138: clst = create_chain(fp->fs, clst);
 12223  1640  0833               	movf	f_lseek@fp^(0+128),w
 12224  1641  0086               	movwf	6
 12225  1642  0834               	movf	(f_lseek@fp+1)^(0+128),w
 12226  1643  0087               	movwf	7
 12227  1644  3F40               	moviw [0]fsr1
 12228  1645  00A0               	movwf	create_chain@fs^(0+128)
 12229  1646  3F41               	moviw [1]fsr1
 12230  1647  00A1               	movwf	(create_chain@fs+1)^(0+128)
 12231  1648  0851               	movf	(f_lseek@clst+3)^(0+128),w
 12232  1649  00A5               	movwf	(create_chain@clst+3)^(0+128)
 12233  164A  0850               	movf	(f_lseek@clst+2)^(0+128),w
 12234  164B  00A4               	movwf	(create_chain@clst+2)^(0+128)
 12235  164C  084F               	movf	(f_lseek@clst+1)^(0+128),w
 12236  164D  00A3               	movwf	(create_chain@clst+1)^(0+128)
 12237  164E  084E               	movf	f_lseek@clst^(0+128),w
 12238  164F  00A2               	movwf	create_chain@clst^(0+128)
 12239  1650  3199  2167  3194   	fcall	_create_chain
 12240  1653  0823               	movf	(?_create_chain+3)^(0+128),w
 12241  1654  00D1               	movwf	(f_lseek@clst+3)^(0+128)
 12242  1655  0822               	movf	(?_create_chain+2)^(0+128),w
 12243  1656  00D0               	movwf	(f_lseek@clst+2)^(0+128)
 12244  1657  0821               	movf	(?_create_chain+1)^(0+128),w
 12245  1658  00CF               	movwf	(f_lseek@clst+1)^(0+128)
 12246  1659  0820               	movf	?_create_chain^(0+128),w
 12247  165A  00CE               	movwf	f_lseek@clst^(0+128)
 12248                           
 12249                           ;ff.c: 3139: if (clst == 0) {
 12250  165B  0851               	movf	(f_lseek@clst+3)^(0+128),w
 12251  165C  0450               	iorwf	(f_lseek@clst+2)^(0+128),w
 12252  165D  044F               	iorwf	(f_lseek@clst+1)^(0+128),w
 12253  165E  044E               	iorwf	f_lseek@clst^(0+128),w
 12254  165F  1D03               	skipz
 12255  1660  2E95               	goto	l5738
 12256                           
 12257                           ;ff.c: 3140: ofs = bcs; break;
 12258  1661  084D               	movf	(f_lseek@bcs+3)^(0+128),w
 12259  1662  00B8               	movwf	(f_lseek@ofs+3)^(0+128)
 12260  1663  084C               	movf	(f_lseek@bcs+2)^(0+128),w
 12261  1664  00B7               	movwf	(f_lseek@ofs+2)^(0+128)
 12262  1665  084B               	movf	(f_lseek@bcs+1)^(0+128),w
 12263  1666  00B6               	movwf	(f_lseek@ofs+1)^(0+128)
 12264  1667  084A               	movf	f_lseek@bcs^(0+128),w
 12265  1668  00B5               	movwf	f_lseek@ofs^(0+128)
 12266  1669  2F07               	goto	l5762
 12267  166A                     l5736:	
 12268                           
 12269                           ;ff.c: 3144: clst = get_fat(fp->fs, clst);
 12270  166A  0833               	movf	f_lseek@fp^(0+128),w
 12271  166B  0086               	movwf	6
 12272  166C  0834               	movf	(f_lseek@fp+1)^(0+128),w
 12273  166D  0087               	movwf	7
 12274  166E  3F40               	moviw [0]fsr1
 12275  166F  0020               	movlb	0	; select bank0
 12276  1670  00CE               	movwf	get_fat@fs
 12277  1671  3F41               	moviw [1]fsr1
 12278  1672  00CF               	movwf	get_fat@fs+1
 12279  1673  0021               	movlb	1	; select bank1
 12280  1674  0851               	movf	(f_lseek@clst+3)^(0+128),w
 12281  1675  0020               	movlb	0	; select bank0
 12282  1676  00D3               	movwf	get_fat@clst+3
 12283  1677  0021               	movlb	1	; select bank1
 12284  1678  0850               	movf	(f_lseek@clst+2)^(0+128),w
 12285  1679  0020               	movlb	0	; select bank0
 12286  167A  00D2               	movwf	get_fat@clst+2
 12287  167B  0021               	movlb	1	; select bank1
 12288  167C  084F               	movf	(f_lseek@clst+1)^(0+128),w
 12289  167D  0020               	movlb	0	; select bank0
 12290  167E  00D1               	movwf	get_fat@clst+1
 12291  167F  0021               	movlb	1	; select bank1
 12292  1680  084E               	movf	f_lseek@clst^(0+128),w
 12293  1681  0020               	movlb	0	; select bank0
 12294  1682  00D0               	movwf	get_fat@clst
 12295  1683  31A6  2622  3194   	fcall	_get_fat
 12296  1686  0851               	movf	?_get_fat+3,w
 12297  1687  0021               	movlb	1	; select bank1
 12298  1688  00D1               	movwf	(f_lseek@clst+3)^(0+128)
 12299  1689  0020               	movlb	0	; select bank0
 12300  168A  0850               	movf	?_get_fat+2,w
 12301  168B  0021               	movlb	1	; select bank1
 12302  168C  00D0               	movwf	(f_lseek@clst+2)^(0+128)
 12303  168D  0020               	movlb	0	; select bank0
 12304  168E  084F               	movf	?_get_fat+1,w
 12305  168F  0021               	movlb	1	; select bank1
 12306  1690  00CF               	movwf	(f_lseek@clst+1)^(0+128)
 12307  1691  0020               	movlb	0	; select bank0
 12308  1692  084E               	movf	?_get_fat,w
 12309  1693  0021               	movlb	1	; select bank1
 12310  1694  00CE               	movwf	f_lseek@clst^(0+128)
 12311  1695                     l5738:	
 12312                           
 12313                           ;ff.c: 3145: if (clst == 0xFFFFFFFF) { fp->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR
      +                          ; };
 12314  1695  0A4E               	incf	f_lseek@clst^(0+128),w
 12315  1696  1D03               	skipz
 12316  1697  2EA0               	goto	l5746
 12317  1698  0A4F               	incf	(f_lseek@clst+1)^(0+128),w
 12318  1699  1D03               	skipz
 12319  169A  2EA0               	goto	l5746
 12320  169B  0A50               	incf	(f_lseek@clst+2)^(0+128),w
 12321  169C  1903               	btfsc	3,2
 12322  169D  0A51               	incf	(f_lseek@clst+3)^(0+128),w
 12323  169E  1903               	btfsc	3,2
 12324  169F  2E0A               	goto	l5716
 12325  16A0                     l5746:	
 12326                           
 12327                           ;ff.c: 3146: if (clst <= 1 || clst >= fp->fs->n_fatent) { fp->err = (BYTE)(FR_INT_ERR); 
      +                          return FR_INT_ERR; };
 12328  16A0  0851               	movf	(f_lseek@clst+3)^(0+128),w
 12329  16A1  1D03               	btfss	3,2
 12330  16A2  2EAD               	goto	l5748
 12331  16A3  0850               	movf	(f_lseek@clst+2)^(0+128),w
 12332  16A4  1D03               	btfss	3,2
 12333  16A5  2EAD               	goto	l5748
 12334  16A6  084F               	movf	(f_lseek@clst+1)^(0+128),w
 12335  16A7  1D03               	btfss	3,2
 12336  16A8  2EAD               	goto	l5748
 12337  16A9  3002               	movlw	2
 12338  16AA  024E               	subwf	f_lseek@clst^(0+128),w
 12339  16AB  1C03               	btfss	3,0
 12340  16AC  2DF0               	goto	l5708
 12341  16AD                     l5748:	
 12342  16AD  0833               	movf	f_lseek@fp^(0+128),w
 12343  16AE  0086               	movwf	6
 12344  16AF  0834               	movf	(f_lseek@fp+1)^(0+128),w
 12345  16B0  0087               	movwf	7
 12346  16B1  3F40               	moviw [0]fsr1
 12347  16B2  00B9               	movwf	??_f_lseek^(0+128)
 12348  16B3  3F41               	moviw [1]fsr1
 12349  16B4  00BA               	movwf	(??_f_lseek^(0+128)+1)
 12350  16B5  0839               	movf	??_f_lseek^(0+128),w
 12351  16B6  0086               	movwf	6
 12352  16B7  083A               	movf	(??_f_lseek+1)^(0+128),w
 12353  16B8  0087               	movwf	7
 12354  16B9  3152               	addfsr 1,18
 12355  16BA  3F40               	moviw [0]fsr1
 12356  16BB  00BB               	movwf	(??_f_lseek+2)^(0+128)
 12357  16BC  3F41               	moviw [1]fsr1
 12358  16BD  00BC               	movwf	((??_f_lseek+2)^(0+128)+1)
 12359  16BE  3F42               	moviw [2]fsr1
 12360  16BF  00BD               	movwf	((??_f_lseek+2)^(0+128)+2)
 12361  16C0  3F43               	moviw [3]fsr1
 12362  16C1  00BE               	movwf	((??_f_lseek+2)^(0+128)+3)
 12363  16C2  083E               	movf	(??_f_lseek+5)^(0+128),w
 12364  16C3  0251               	subwf	(f_lseek@clst+3)^(0+128),w
 12365  16C4  1D03               	skipz
 12366  16C5  2ED0               	goto	u8115
 12367  16C6  083D               	movf	(??_f_lseek+4)^(0+128),w
 12368  16C7  0250               	subwf	(f_lseek@clst+2)^(0+128),w
 12369  16C8  1D03               	skipz
 12370  16C9  2ED0               	goto	u8115
 12371  16CA  083C               	movf	(??_f_lseek+3)^(0+128),w
 12372  16CB  024F               	subwf	(f_lseek@clst+1)^(0+128),w
 12373  16CC  1D03               	skipz
 12374  16CD  2ED0               	goto	u8115
 12375  16CE  083B               	movf	(??_f_lseek+2)^(0+128),w
 12376  16CF  024E               	subwf	f_lseek@clst^(0+128),w
 12377  16D0                     u8115:	
 12378  16D0  1803               	btfsc	3,0
 12379  16D1  2DF0               	goto	l5708
 12380                           
 12381                           ;ff.c: 3147: fp->clust = clst;
 12382  16D2  0833               	movf	f_lseek@fp^(0+128),w
 12383  16D3  0086               	movwf	6
 12384  16D4  0834               	movf	(f_lseek@fp+1)^(0+128),w
 12385  16D5  0087               	movwf	7
 12386  16D6  3152               	addfsr 1,18
 12387  16D7  084E               	movf	f_lseek@clst^(0+128),w
 12388  16D8  3FC0               	movwi [0]fsr1
 12389  16D9  084F               	movf	(f_lseek@clst+1)^(0+128),w
 12390  16DA  3FC1               	movwi [1]fsr1
 12391  16DB  0850               	movf	(f_lseek@clst+2)^(0+128),w
 12392  16DC  3FC2               	movwi [2]fsr1
 12393  16DD  0851               	movf	(f_lseek@clst+3)^(0+128),w
 12394  16DE  3FC3               	movwi [3]fsr1
 12395                           
 12396                           ;ff.c: 3148: fp->fptr += bcs;
 12397  16DF  0833               	movf	f_lseek@fp^(0+128),w
 12398  16E0  0086               	movwf	6
 12399  16E1  0834               	movf	(f_lseek@fp+1)^(0+128),w
 12400  16E2  0087               	movwf	7
 12401  16E3  3146               	addfsr 1,6
 12402  16E4  084A               	movf	f_lseek@bcs^(0+128),w
 12403  16E5  0781               	addwf	1,f
 12404  16E6  3141               	addfsr 1,1
 12405  16E7  084B               	movf	(f_lseek@bcs+1)^(0+128),w
 12406  16E8  3D81               	addwfc	1,f
 12407  16E9  3141               	addfsr 1,1
 12408  16EA  084C               	movf	(f_lseek@bcs+2)^(0+128),w
 12409  16EB  3D81               	addwfc	1,f
 12410  16EC  3141               	addfsr 1,1
 12411  16ED  084D               	movf	(f_lseek@bcs+3)^(0+128),w
 12412  16EE  3D81               	addwfc	1,f
 12413                           
 12414                           ;ff.c: 3149: ofs -= bcs;
 12415  16EF  084A               	movf	f_lseek@bcs^(0+128),w
 12416  16F0  02B5               	subwf	f_lseek@ofs^(0+128),f
 12417  16F1  084B               	movf	(f_lseek@bcs+1)^(0+128),w
 12418  16F2  3BB6               	subwfb	(f_lseek@ofs+1)^(0+128),f
 12419  16F3  084C               	movf	(f_lseek@bcs+2)^(0+128),w
 12420  16F4  3BB7               	subwfb	(f_lseek@ofs+2)^(0+128),f
 12421  16F5  084D               	movf	(f_lseek@bcs+3)^(0+128),w
 12422  16F6  3BB8               	subwfb	(f_lseek@ofs+3)^(0+128),f
 12423  16F7                     l5760:	
 12424  16F7  0838               	movf	(f_lseek@ofs+3)^(0+128),w
 12425  16F8  024D               	subwf	(f_lseek@bcs+3)^(0+128),w
 12426  16F9  1D03               	skipz
 12427  16FA  2F05               	goto	u8125
 12428  16FB  0837               	movf	(f_lseek@ofs+2)^(0+128),w
 12429  16FC  024C               	subwf	(f_lseek@bcs+2)^(0+128),w
 12430  16FD  1D03               	skipz
 12431  16FE  2F05               	goto	u8125
 12432  16FF  0836               	movf	(f_lseek@ofs+1)^(0+128),w
 12433  1700  024B               	subwf	(f_lseek@bcs+1)^(0+128),w
 12434  1701  1D03               	skipz
 12435  1702  2F05               	goto	u8125
 12436  1703  0835               	movf	f_lseek@ofs^(0+128),w
 12437  1704  024A               	subwf	f_lseek@bcs^(0+128),w
 12438  1705                     u8125:	
 12439  1705  1C03               	skipc
 12440  1706  2E39               	goto	l5728
 12441  1707                     l5762:	
 12442                           
 12443                           ;ff.c: 3150: };ff.c: 3151: fp->fptr += ofs;
 12444  1707  0833               	movf	f_lseek@fp^(0+128),w
 12445  1708  0086               	movwf	6
 12446  1709  0834               	movf	(f_lseek@fp+1)^(0+128),w
 12447  170A  0087               	movwf	7
 12448  170B  3146               	addfsr 1,6
 12449  170C  0835               	movf	f_lseek@ofs^(0+128),w
 12450  170D  0781               	addwf	1,f
 12451  170E  3141               	addfsr 1,1
 12452  170F  0836               	movf	(f_lseek@ofs+1)^(0+128),w
 12453  1710  3D81               	addwfc	1,f
 12454  1711  3141               	addfsr 1,1
 12455  1712  0837               	movf	(f_lseek@ofs+2)^(0+128),w
 12456  1713  3D81               	addwfc	1,f
 12457  1714  3141               	addfsr 1,1
 12458  1715  0838               	movf	(f_lseek@ofs+3)^(0+128),w
 12459  1716  3D81               	addwfc	1,f
 12460                           
 12461                           ;ff.c: 3152: if (ofs % ((UINT)512)) {
 12462  1717  30FF               	movlw	255
 12463  1718  0535               	andwf	f_lseek@ofs^(0+128),w
 12464  1719  00B9               	movwf	??_f_lseek^(0+128)
 12465  171A  3001               	movlw	1
 12466  171B  0536               	andwf	(f_lseek@ofs+1)^(0+128),w
 12467  171C  00BA               	movwf	(??_f_lseek^(0+128)+1)
 12468  171D  3000               	movlw	0
 12469  171E  0537               	andwf	(f_lseek@ofs+2)^(0+128),w
 12470  171F  00BB               	movwf	(??_f_lseek^(0+128)+2)
 12471  1720  3000               	movlw	0
 12472  1721  0538               	andwf	(f_lseek@ofs+3)^(0+128),w
 12473  1722  00BC               	movwf	(??_f_lseek^(0+128)+3)
 12474  1723  083C               	movf	(??_f_lseek+3)^(0+128),w
 12475  1724  043B               	iorwf	(??_f_lseek+2)^(0+128),w
 12476  1725  043A               	iorwf	(??_f_lseek+1)^(0+128),w
 12477  1726  0439               	iorwf	??_f_lseek^(0+128),w
 12478  1727  1903               	skipnz
 12479  1728  2F71               	goto	l5778
 12480                           
 12481                           ;ff.c: 3153: nsect = clust2sect(fp->fs, clst);
 12482  1729  0833               	movf	f_lseek@fp^(0+128),w
 12483  172A  0086               	movwf	6
 12484  172B  0834               	movf	(f_lseek@fp+1)^(0+128),w
 12485  172C  0087               	movwf	7
 12486  172D  3F40               	moviw [0]fsr1
 12487  172E  0020               	movlb	0	; select bank0
 12488  172F  00A0               	movwf	clust2sect@fs
 12489  1730  3F41               	moviw [1]fsr1
 12490  1731  00A1               	movwf	clust2sect@fs+1
 12491  1732  0021               	movlb	1	; select bank1
 12492  1733  0851               	movf	(f_lseek@clst+3)^(0+128),w
 12493  1734  0020               	movlb	0	; select bank0
 12494  1735  00A5               	movwf	clust2sect@clst+3
 12495  1736  0021               	movlb	1	; select bank1
 12496  1737  0850               	movf	(f_lseek@clst+2)^(0+128),w
 12497  1738  0020               	movlb	0	; select bank0
 12498  1739  00A4               	movwf	clust2sect@clst+2
 12499  173A  0021               	movlb	1	; select bank1
 12500  173B  084F               	movf	(f_lseek@clst+1)^(0+128),w
 12501  173C  0020               	movlb	0	; select bank0
 12502  173D  00A3               	movwf	clust2sect@clst+1
 12503  173E  0021               	movlb	1	; select bank1
 12504  173F  084E               	movf	f_lseek@clst^(0+128),w
 12505  1740  0020               	movlb	0	; select bank0
 12506  1741  00A2               	movwf	clust2sect@clst
 12507  1742  31AF  2786  3194   	fcall	_clust2sect
 12508  1745  0823               	movf	?_clust2sect+3,w
 12509  1746  0021               	movlb	1	; select bank1
 12510  1747  00C9               	movwf	(f_lseek@nsect+3)^(0+128)
 12511  1748  0020               	movlb	0	; select bank0
 12512  1749  0822               	movf	?_clust2sect+2,w
 12513  174A  0021               	movlb	1	; select bank1
 12514  174B  00C8               	movwf	(f_lseek@nsect+2)^(0+128)
 12515  174C  0020               	movlb	0	; select bank0
 12516  174D  0821               	movf	?_clust2sect+1,w
 12517  174E  0021               	movlb	1	; select bank1
 12518  174F  00C7               	movwf	(f_lseek@nsect+1)^(0+128)
 12519  1750  0020               	movlb	0	; select bank0
 12520  1751  0820               	movf	?_clust2sect,w
 12521  1752  0021               	movlb	1	; select bank1
 12522  1753  00C6               	movwf	f_lseek@nsect^(0+128)
 12523                           
 12524                           ;ff.c: 3154: if (!nsect) { fp->err = (BYTE)(FR_INT_ERR); return FR_INT_ERR; };
 12525  1754  0849               	movf	(f_lseek@nsect+3)^(0+128),w
 12526  1755  0448               	iorwf	(f_lseek@nsect+2)^(0+128),w
 12527  1756  0447               	iorwf	(f_lseek@nsect+1)^(0+128),w
 12528  1757  0446               	iorwf	f_lseek@nsect^(0+128),w
 12529  1758  1903               	btfsc	3,2
 12530  1759  2DF0               	goto	l5708
 12531                           
 12532                           ;ff.c: 3155: nsect += ofs / ((UINT)512);
 12533  175A  0835               	movf	f_lseek@ofs^(0+128),w
 12534  175B  00B9               	movwf	??_f_lseek^(0+128)
 12535  175C  0836               	movf	(f_lseek@ofs+1)^(0+128),w
 12536  175D  00BA               	movwf	(??_f_lseek^(0+128)+1)
 12537  175E  0837               	movf	(f_lseek@ofs+2)^(0+128),w
 12538  175F  00BB               	movwf	(??_f_lseek^(0+128)+2)
 12539  1760  0838               	movf	(f_lseek@ofs+3)^(0+128),w
 12540  1761  00BC               	movwf	(??_f_lseek^(0+128)+3)
 12541  1762  3009               	movlw	9
 12542  1763                     u8155:	
 12543  1763  36BC               	lsrf	(??_f_lseek^(0+128)+3),f
 12544  1764  0CBB               	rrf	(??_f_lseek^(0+128)+2),f
 12545  1765  0CBA               	rrf	(??_f_lseek^(0+128)+1),f
 12546  1766  0CB9               	rrf	??_f_lseek^(0+128),f
 12547  1767  0B89               	decfsz	9,f
 12548  1768  2F63               	goto	u8155
 12549  1769  0839               	movf	??_f_lseek^(0+128),w
 12550  176A  07C6               	addwf	f_lseek@nsect^(0+128),f
 12551  176B  083A               	movf	(??_f_lseek+1)^(0+128),w
 12552  176C  3DC7               	addwfc	(f_lseek@nsect+1)^(0+128),f
 12553  176D  083B               	movf	(??_f_lseek+2)^(0+128),w
 12554  176E  3DC8               	addwfc	(f_lseek@nsect+2)^(0+128),f
 12555  176F  083C               	movf	(??_f_lseek+3)^(0+128),w
 12556  1770  3DC9               	addwfc	(f_lseek@nsect+3)^(0+128),f
 12557  1771                     l5778:	
 12558                           
 12559                           ;ff.c: 3156: };ff.c: 3157: };ff.c: 3158: };ff.c: 3159: if (fp->fptr % ((UINT)512) && nse
      +                          ct != fp->dsect) {
 12560  1771  0833               	movf	f_lseek@fp^(0+128),w
 12561  1772  0086               	movwf	6
 12562  1773  0834               	movf	(f_lseek@fp+1)^(0+128),w
 12563  1774  0087               	movwf	7
 12564  1775  3146               	addfsr 1,6
 12565  1776  30FF               	movlw	255
 12566  1777  0501               	andwf	1,w
 12567  1778  00B9               	movwf	??_f_lseek^(0+128)
 12568  1779  3141               	addfsr 1,1
 12569  177A  3001               	movlw	1
 12570  177B  0501               	andwf	1,w
 12571  177C  00BA               	movwf	(??_f_lseek^(0+128)+1)
 12572  177D  3141               	addfsr 1,1
 12573  177E  3000               	movlw	0
 12574  177F  0501               	andwf	1,w
 12575  1780  00BB               	movwf	(??_f_lseek^(0+128)+2)
 12576  1781  3141               	addfsr 1,1
 12577  1782  3000               	movlw	0
 12578  1783  0501               	andwf	1,w
 12579  1784  00BC               	movwf	(??_f_lseek^(0+128)+3)
 12580  1785  083C               	movf	(??_f_lseek+3)^(0+128),w
 12581  1786  043B               	iorwf	(??_f_lseek+2)^(0+128),w
 12582  1787  043A               	iorwf	(??_f_lseek+1)^(0+128),w
 12583  1788  0439               	iorwf	??_f_lseek^(0+128),w
 12584  1789  1903               	skipnz
 12585  178A  2FB5               	goto	l778
 12586  178B  0833               	movf	f_lseek@fp^(0+128),w
 12587  178C  0086               	movwf	6
 12588  178D  0834               	movf	(f_lseek@fp+1)^(0+128),w
 12589  178E  0087               	movwf	7
 12590  178F  3156               	addfsr 1,22
 12591  1790  3F40               	moviw [0]fsr1
 12592  1791  00B9               	movwf	??_f_lseek^(0+128)
 12593  1792  3F41               	moviw [1]fsr1
 12594  1793  00BA               	movwf	(??_f_lseek^(0+128)+1)
 12595  1794  3F42               	moviw [2]fsr1
 12596  1795  00BB               	movwf	(??_f_lseek^(0+128)+2)
 12597  1796  3F43               	moviw [3]fsr1
 12598  1797  00BC               	movwf	(??_f_lseek^(0+128)+3)
 12599  1798  0849               	movf	(f_lseek@nsect+3)^(0+128),w
 12600  1799  063C               	xorwf	(??_f_lseek+3)^(0+128),w
 12601  179A  1D03               	skipz
 12602  179B  2FA6               	goto	u8175
 12603  179C  0848               	movf	(f_lseek@nsect+2)^(0+128),w
 12604  179D  063B               	xorwf	(??_f_lseek+2)^(0+128),w
 12605  179E  1D03               	skipz
 12606  179F  2FA6               	goto	u8175
 12607  17A0  0847               	movf	(f_lseek@nsect+1)^(0+128),w
 12608  17A1  063A               	xorwf	(??_f_lseek+1)^(0+128),w
 12609  17A2  1D03               	skipz
 12610  17A3  2FA6               	goto	u8175
 12611  17A4  0846               	movf	f_lseek@nsect^(0+128),w
 12612  17A5  0639               	xorwf	??_f_lseek^(0+128),w
 12613  17A6                     u8175:	
 12614  17A6  1903               	skipnz
 12615  17A7  2FB5               	goto	l778
 12616                           
 12617                           ;ff.c: 3171: fp->dsect = nsect;
 12618  17A8  0833               	movf	f_lseek@fp^(0+128),w
 12619  17A9  0086               	movwf	6
 12620  17AA  0834               	movf	(f_lseek@fp+1)^(0+128),w
 12621  17AB  0087               	movwf	7
 12622  17AC  3156               	addfsr 1,22
 12623  17AD  0846               	movf	f_lseek@nsect^(0+128),w
 12624  17AE  3FC0               	movwi [0]fsr1
 12625  17AF  0847               	movf	(f_lseek@nsect+1)^(0+128),w
 12626  17B0  3FC1               	movwi [1]fsr1
 12627  17B1  0848               	movf	(f_lseek@nsect+2)^(0+128),w
 12628  17B2  3FC2               	movwi [2]fsr1
 12629  17B3  0849               	movf	(f_lseek@nsect+3)^(0+128),w
 12630  17B4  3FC3               	movwi [3]fsr1
 12631  17B5                     l778:	
 12632                           
 12633                           ;ff.c: 3172: };ff.c: 3174: if (fp->fptr > fp->fsize) {
 12634  17B5  0833               	movf	f_lseek@fp^(0+128),w
 12635  17B6  0086               	movwf	6
 12636  17B7  0834               	movf	(f_lseek@fp+1)^(0+128),w
 12637  17B8  0087               	movwf	7
 12638  17B9  3146               	addfsr 1,6
 12639  17BA  3F40               	moviw [0]fsr1
 12640  17BB  00B9               	movwf	??_f_lseek^(0+128)
 12641  17BC  3F41               	moviw [1]fsr1
 12642  17BD  00BA               	movwf	(??_f_lseek^(0+128)+1)
 12643  17BE  3F42               	moviw [2]fsr1
 12644  17BF  00BB               	movwf	(??_f_lseek^(0+128)+2)
 12645  17C0  3F43               	moviw [3]fsr1
 12646  17C1  00BC               	movwf	(??_f_lseek^(0+128)+3)
 12647  17C2  0833               	movf	f_lseek@fp^(0+128),w
 12648  17C3  0086               	movwf	6
 12649  17C4  0834               	movf	(f_lseek@fp+1)^(0+128),w
 12650  17C5  0087               	movwf	7
 12651  17C6  314A               	addfsr 1,10
 12652  17C7  3F40               	moviw [0]fsr1
 12653  17C8  00BD               	movwf	(??_f_lseek+4)^(0+128)
 12654  17C9  3F41               	moviw [1]fsr1
 12655  17CA  00BE               	movwf	((??_f_lseek+4)^(0+128)+1)
 12656  17CB  3F42               	moviw [2]fsr1
 12657  17CC  00BF               	movwf	((??_f_lseek+4)^(0+128)+2)
 12658  17CD  3F43               	moviw [3]fsr1
 12659  17CE  00C0               	movwf	((??_f_lseek+4)^(0+128)+3)
 12660  17CF  083C               	movf	(??_f_lseek+3)^(0+128),w
 12661  17D0  0240               	subwf	(??_f_lseek+7)^(0+128),w
 12662  17D1  1D03               	skipz
 12663  17D2  2FDD               	goto	u8185
 12664  17D3  083B               	movf	(??_f_lseek+2)^(0+128),w
 12665  17D4  023F               	subwf	(??_f_lseek+6)^(0+128),w
 12666  17D5  1D03               	skipz
 12667  17D6  2FDD               	goto	u8185
 12668  17D7  083A               	movf	(??_f_lseek+1)^(0+128),w
 12669  17D8  023E               	subwf	(??_f_lseek+5)^(0+128),w
 12670  17D9  1D03               	skipz
 12671  17DA  2FDD               	goto	u8185
 12672  17DB  0839               	movf	??_f_lseek^(0+128),w
 12673  17DC  023D               	subwf	(??_f_lseek+4)^(0+128),w
 12674  17DD                     u8185:	
 12675  17DD  1803               	skipnc
 12676  17DE  2C87               	goto	l5670
 12677                           
 12678                           ;ff.c: 3175: fp->fsize = fp->fptr;
 12679  17DF  0833               	movf	f_lseek@fp^(0+128),w
 12680  17E0  0086               	movwf	6
 12681  17E1  0834               	movf	(f_lseek@fp+1)^(0+128),w
 12682  17E2  0087               	movwf	7
 12683  17E3  3146               	addfsr 1,6
 12684  17E4  3F40               	moviw [0]fsr1
 12685  17E5  00B9               	movwf	??_f_lseek^(0+128)
 12686  17E6  3F41               	moviw [1]fsr1
 12687  17E7  00BA               	movwf	(??_f_lseek^(0+128)+1)
 12688  17E8  3F42               	moviw [2]fsr1
 12689  17E9  00BB               	movwf	(??_f_lseek^(0+128)+2)
 12690  17EA  3F43               	moviw [3]fsr1
 12691  17EB  00BC               	movwf	(??_f_lseek^(0+128)+3)
 12692  17EC  0833               	movf	f_lseek@fp^(0+128),w
 12693  17ED  0086               	movwf	6
 12694  17EE  0834               	movf	(f_lseek@fp+1)^(0+128),w
 12695  17EF  0087               	movwf	7
 12696  17F0  314A               	addfsr 1,10
 12697  17F1  0839               	movf	??_f_lseek^(0+128),w
 12698  17F2  3FC0               	movwi [0]fsr1
 12699  17F3  083A               	movf	(??_f_lseek+1)^(0+128),w
 12700  17F4  3FC1               	movwi [1]fsr1
 12701  17F5  083B               	movf	(??_f_lseek+2)^(0+128),w
 12702  17F6  3FC2               	movwi [2]fsr1
 12703  17F7  083C               	movf	(??_f_lseek+3)^(0+128),w
 12704  17F8  3FC3               	movwi [3]fsr1
 12705                           
 12706                           ;ff.c: 3176: fp->flag |= 0x20;
 12707  17F9  0833               	movf	f_lseek@fp^(0+128),w
 12708  17FA  0086               	movwf	6
 12709  17FB  0834               	movf	(f_lseek@fp+1)^(0+128),w
 12710  17FC  0087               	movwf	7
 12711  17FD  3144               	addfsr 1,4
 12712  17FE  1681               	bsf	1,5
 12713  17FF  2C87               	goto	l5670
 12714  1800                     __end_of_f_lseek:	
 12715                           
 12716                           	psect	text24
 12717  1967                     __ptext24:	
 12718 ;; *************** function _create_chain *****************
 12719 ;; Defined at:
 12720 ;;		line 990 in file "ff.c"
 12721 ;; Parameters:    Size  Location     Type
 12722 ;;  fs              2    0[BANK1 ] PTR struct .
 12723 ;;		 -> NULL(0), FatFs(558), 
 12724 ;;  clst            4    2[BANK1 ] unsigned long 
 12725 ;; Auto vars:     Size  Location     Type
 12726 ;;  cs              4   15[BANK1 ] unsigned long 
 12727 ;;  ncl             4   11[BANK1 ] unsigned long 
 12728 ;;  scl             4    7[BANK1 ] unsigned long 
 12729 ;;  res             1    6[BANK1 ] enum E88
 12730 ;; Return value:  Size  Location     Type
 12731 ;;                  4    0[BANK1 ] unsigned long 
 12732 ;; Registers used:
 12733 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12734 ;; Tracked objects:
 12735 ;;		On entry : 1F/1
 12736 ;;		On exit  : 1F/1
 12737 ;;		Unchanged: 0/0
 12738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12739 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12740 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12741 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12742 ;;      Totals:         0       4      19       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12743 ;;Total ram usage:       23 bytes
 12744 ;; Hardware stack levels used:    1
 12745 ;; Hardware stack levels required when called:    9
 12746 ;; This function calls:
 12747 ;;		_get_fat
 12748 ;;		_put_fat
 12749 ;; This function is called by:
 12750 ;;		_dir_next
 12751 ;;		_f_write
 12752 ;;		_f_lseek
 12753 ;; This function uses a non-reentrant model
 12754 ;;
 12755                           
 12756                           
 12757                           ;psect for function _create_chain
 12758  1967                     _create_chain:	
 12759                           
 12760                           ;ff.c: 995: DWORD cs, ncl, scl;;ff.c: 996: FRESULT res;;ff.c: 999: if (clst == 0) {
 12761                           
 12762                           ;incstack = 0
 12763                           ; Regs used in _create_chain: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12764  1967  0825               	movf	(create_chain@clst+3)^(0+128),w
 12765  1968  0424               	iorwf	(create_chain@clst+2)^(0+128),w
 12766  1969  0423               	iorwf	(create_chain@clst+1)^(0+128),w
 12767  196A  0422               	iorwf	create_chain@clst^(0+128),w
 12768  196B  1D03               	skipz
 12769  196C  29AD               	goto	l4160
 12770                           
 12771                           ;ff.c: 1000: scl = fs->last_clust;
 12772  196D  0820               	movf	create_chain@fs^(0+128),w
 12773  196E  0086               	movwf	6
 12774  196F  0821               	movf	(create_chain@fs+1)^(0+128),w
 12775  1970  0087               	movwf	7
 12776  1971  314A               	addfsr 1,10
 12777  1972  3F40               	moviw [0]fsr1
 12778  1973  00A7               	movwf	create_chain@scl^(0+128)
 12779  1974  3F41               	moviw [1]fsr1
 12780  1975  00A8               	movwf	(create_chain@scl+1)^(0+128)
 12781  1976  3F42               	moviw [2]fsr1
 12782  1977  00A9               	movwf	(create_chain@scl+2)^(0+128)
 12783  1978  3F43               	moviw [3]fsr1
 12784  1979  00AA               	movwf	(create_chain@scl+3)^(0+128)
 12785                           
 12786                           ;ff.c: 1001: if (!scl || scl >= fs->n_fatent) scl = 1;
 12787  197A  082A               	movf	(create_chain@scl+3)^(0+128),w
 12788  197B  0429               	iorwf	(create_chain@scl+2)^(0+128),w
 12789  197C  0428               	iorwf	(create_chain@scl+1)^(0+128),w
 12790  197D  0427               	iorwf	create_chain@scl^(0+128),w
 12791  197E  1903               	skipnz
 12792  197F  29A5               	goto	l4158
 12793  1980  0820               	movf	create_chain@fs^(0+128),w
 12794  1981  0086               	movwf	6
 12795  1982  0821               	movf	(create_chain@fs+1)^(0+128),w
 12796  1983  0087               	movwf	7
 12797  1984  3152               	addfsr 1,18
 12798  1985  3F40               	moviw [0]fsr1
 12799  1986  0020               	movlb	0	; select bank0
 12800  1987  00EC               	movwf	??_create_chain
 12801  1988  3F41               	moviw [1]fsr1
 12802  1989  00ED               	movwf	??_create_chain+1
 12803  198A  3F42               	moviw [2]fsr1
 12804  198B  00EE               	movwf	??_create_chain+2
 12805  198C  3F43               	moviw [3]fsr1
 12806  198D  00EF               	movwf	??_create_chain+3
 12807  198E  086F               	movf	??_create_chain+3,w
 12808  198F  0021               	movlb	1	; select bank1
 12809  1990  022A               	subwf	(create_chain@scl+3)^(0+128),w
 12810  1991  1D03               	skipz
 12811  1992  29A3               	goto	u5165
 12812  1993  0020               	movlb	0	; select bank0
 12813  1994  086E               	movf	??_create_chain+2,w
 12814  1995  0021               	movlb	1	; select bank1
 12815  1996  0229               	subwf	(create_chain@scl+2)^(0+128),w
 12816  1997  1D03               	skipz
 12817  1998  29A3               	goto	u5165
 12818  1999  0020               	movlb	0	; select bank0
 12819  199A  086D               	movf	??_create_chain+1,w
 12820  199B  0021               	movlb	1	; select bank1
 12821  199C  0228               	subwf	(create_chain@scl+1)^(0+128),w
 12822  199D  1D03               	skipz
 12823  199E  29A3               	goto	u5165
 12824  199F  0020               	movlb	0	; select bank0
 12825  19A0  086C               	movf	??_create_chain,w
 12826  19A1  0021               	movlb	1	; select bank1
 12827  19A2  0227               	subwf	create_chain@scl^(0+128),w
 12828  19A3                     u5165:	
 12829  19A3  1C03               	skipc
 12830  19A4  2A2E               	goto	l408
 12831  19A5                     l4158:	
 12832  19A5  3000               	movlw	0
 12833  19A6  00AA               	movwf	(create_chain@scl+3)^(0+128)
 12834  19A7  3000               	movlw	0
 12835  19A8  00A9               	movwf	(create_chain@scl+2)^(0+128)
 12836  19A9  3000               	movlw	0
 12837  19AA  00A8               	movwf	(create_chain@scl+1)^(0+128)
 12838  19AB  3001               	movlw	1
 12839  19AC  2A2D               	goto	L8
 12840  19AD                     l4160:	
 12841                           
 12842                           ;ff.c: 1003: else {;ff.c: 1004: cs = get_fat(fs, clst);
 12843  19AD  0821               	movf	(create_chain@fs+1)^(0+128),w
 12844  19AE  0020               	movlb	0	; select bank0
 12845  19AF  00CF               	movwf	get_fat@fs+1
 12846  19B0  0021               	movlb	1	; select bank1
 12847  19B1  0820               	movf	create_chain@fs^(0+128),w
 12848  19B2  0020               	movlb	0	; select bank0
 12849  19B3  00CE               	movwf	get_fat@fs
 12850  19B4  0021               	movlb	1	; select bank1
 12851  19B5  0825               	movf	(create_chain@clst+3)^(0+128),w
 12852  19B6  0020               	movlb	0	; select bank0
 12853  19B7  00D3               	movwf	get_fat@clst+3
 12854  19B8  0021               	movlb	1	; select bank1
 12855  19B9  0824               	movf	(create_chain@clst+2)^(0+128),w
 12856  19BA  0020               	movlb	0	; select bank0
 12857  19BB  00D2               	movwf	get_fat@clst+2
 12858  19BC  0021               	movlb	1	; select bank1
 12859  19BD  0823               	movf	(create_chain@clst+1)^(0+128),w
 12860  19BE  0020               	movlb	0	; select bank0
 12861  19BF  00D1               	movwf	get_fat@clst+1
 12862  19C0  0021               	movlb	1	; select bank1
 12863  19C1  0822               	movf	create_chain@clst^(0+128),w
 12864  19C2  0020               	movlb	0	; select bank0
 12865  19C3  00D0               	movwf	get_fat@clst
 12866  19C4  31A6  2622  3199   	fcall	_get_fat
 12867  19C7  0851               	movf	?_get_fat+3,w
 12868  19C8  0021               	movlb	1	; select bank1
 12869  19C9  00B2               	movwf	(create_chain@cs+3)^(0+128)
 12870  19CA  0020               	movlb	0	; select bank0
 12871  19CB  0850               	movf	?_get_fat+2,w
 12872  19CC  0021               	movlb	1	; select bank1
 12873  19CD  00B1               	movwf	(create_chain@cs+2)^(0+128)
 12874  19CE  0020               	movlb	0	; select bank0
 12875  19CF  084F               	movf	?_get_fat+1,w
 12876  19D0  0021               	movlb	1	; select bank1
 12877  19D1  00B0               	movwf	(create_chain@cs+1)^(0+128)
 12878  19D2  0020               	movlb	0	; select bank0
 12879  19D3  084E               	movf	?_get_fat,w
 12880  19D4  0021               	movlb	1	; select bank1
 12881  19D5  00AF               	movwf	create_chain@cs^(0+128)
 12882                           
 12883                           ;ff.c: 1005: if (cs < 2) return 1;
 12884  19D6  0832               	movf	(create_chain@cs+3)^(0+128),w
 12885  19D7  1D03               	btfss	3,2
 12886  19D8  29EC               	goto	l4168
 12887  19D9  0831               	movf	(create_chain@cs+2)^(0+128),w
 12888  19DA  1D03               	btfss	3,2
 12889  19DB  29EC               	goto	l4168
 12890  19DC  0830               	movf	(create_chain@cs+1)^(0+128),w
 12891  19DD  1D03               	btfss	3,2
 12892  19DE  29EC               	goto	l4168
 12893  19DF  3002               	movlw	2
 12894  19E0  022F               	subwf	create_chain@cs^(0+128),w
 12895  19E1  1803               	btfsc	3,0
 12896  19E2  29EC               	goto	l4168
 12897  19E3  3000               	movlw	0
 12898  19E4  00A3               	movwf	(?_create_chain+3)^(0+128)
 12899  19E5  3000               	movlw	0
 12900  19E6  00A2               	movwf	(?_create_chain+2)^(0+128)
 12901  19E7  3000               	movlw	0
 12902  19E8  00A1               	movwf	(?_create_chain+1)^(0+128)
 12903  19E9  3001               	movlw	1
 12904  19EA  00A0               	movwf	?_create_chain^(0+128)
 12905  19EB  0008               	return
 12906  19EC                     l4168:	
 12907                           
 12908                           ;ff.c: 1006: if (cs == 0xFFFFFFFF) return cs;
 12909  19EC  0A2F               	incf	create_chain@cs^(0+128),w
 12910  19ED  1D03               	skipz
 12911  19EE  2A01               	goto	l4174
 12912  19EF  0A30               	incf	(create_chain@cs+1)^(0+128),w
 12913  19F0  1D03               	skipz
 12914  19F1  2A01               	goto	l4174
 12915  19F2  0A31               	incf	(create_chain@cs+2)^(0+128),w
 12916  19F3  1D03               	skipz
 12917  19F4  2A01               	goto	l4174
 12918  19F5  0A32               	incf	(create_chain@cs+3)^(0+128),w
 12919  19F6  1D03               	btfss	3,2
 12920  19F7  2A01               	goto	l4174
 12921  19F8                     l4170:	
 12922  19F8  0832               	movf	(create_chain@cs+3)^(0+128),w
 12923  19F9  00A3               	movwf	(?_create_chain+3)^(0+128)
 12924  19FA  0831               	movf	(create_chain@cs+2)^(0+128),w
 12925  19FB  00A2               	movwf	(?_create_chain+2)^(0+128)
 12926  19FC  0830               	movf	(create_chain@cs+1)^(0+128),w
 12927  19FD  00A1               	movwf	(?_create_chain+1)^(0+128)
 12928  19FE  082F               	movf	create_chain@cs^(0+128),w
 12929  19FF  00A0               	movwf	?_create_chain^(0+128)
 12930  1A00  0008               	return
 12931  1A01                     l4174:	
 12932                           
 12933                           ;ff.c: 1007: if (cs < fs->n_fatent) return cs;
 12934  1A01  0820               	movf	create_chain@fs^(0+128),w
 12935  1A02  0086               	movwf	6
 12936  1A03  0821               	movf	(create_chain@fs+1)^(0+128),w
 12937  1A04  0087               	movwf	7
 12938  1A05  3152               	addfsr 1,18
 12939  1A06  3F40               	moviw [0]fsr1
 12940  1A07  0020               	movlb	0	; select bank0
 12941  1A08  00EC               	movwf	??_create_chain
 12942  1A09  3F41               	moviw [1]fsr1
 12943  1A0A  00ED               	movwf	??_create_chain+1
 12944  1A0B  3F42               	moviw [2]fsr1
 12945  1A0C  00EE               	movwf	??_create_chain+2
 12946  1A0D  3F43               	moviw [3]fsr1
 12947  1A0E  00EF               	movwf	??_create_chain+3
 12948  1A0F  086F               	movf	??_create_chain+3,w
 12949  1A10  0021               	movlb	1	; select bank1
 12950  1A11  0232               	subwf	(create_chain@cs+3)^(0+128),w
 12951  1A12  1D03               	skipz
 12952  1A13  2A24               	goto	u5195
 12953  1A14  0020               	movlb	0	; select bank0
 12954  1A15  086E               	movf	??_create_chain+2,w
 12955  1A16  0021               	movlb	1	; select bank1
 12956  1A17  0231               	subwf	(create_chain@cs+2)^(0+128),w
 12957  1A18  1D03               	skipz
 12958  1A19  2A24               	goto	u5195
 12959  1A1A  0020               	movlb	0	; select bank0
 12960  1A1B  086D               	movf	??_create_chain+1,w
 12961  1A1C  0021               	movlb	1	; select bank1
 12962  1A1D  0230               	subwf	(create_chain@cs+1)^(0+128),w
 12963  1A1E  1D03               	skipz
 12964  1A1F  2A24               	goto	u5195
 12965  1A20  0020               	movlb	0	; select bank0
 12966  1A21  086C               	movf	??_create_chain,w
 12967  1A22  0021               	movlb	1	; select bank1
 12968  1A23  022F               	subwf	create_chain@cs^(0+128),w
 12969  1A24                     u5195:	
 12970  1A24  1C03               	btfss	3,0
 12971  1A25  29F8               	goto	l4170
 12972                           
 12973                           ;ff.c: 1008: scl = clst;
 12974  1A26  0825               	movf	(create_chain@clst+3)^(0+128),w
 12975  1A27  00AA               	movwf	(create_chain@scl+3)^(0+128)
 12976  1A28  0824               	movf	(create_chain@clst+2)^(0+128),w
 12977  1A29  00A9               	movwf	(create_chain@scl+2)^(0+128)
 12978  1A2A  0823               	movf	(create_chain@clst+1)^(0+128),w
 12979  1A2B  00A8               	movwf	(create_chain@scl+1)^(0+128)
 12980  1A2C  0822               	movf	create_chain@clst^(0+128),w
 12981  1A2D                     L8:	
 12982  1A2D  00A7               	movwf	create_chain@scl^(0+128)
 12983  1A2E                     l408:	
 12984                           
 12985                           ;ff.c: 1009: };ff.c: 1011: ncl = scl;
 12986  1A2E  082A               	movf	(create_chain@scl+3)^(0+128),w
 12987  1A2F  00AE               	movwf	(create_chain@ncl+3)^(0+128)
 12988  1A30  0829               	movf	(create_chain@scl+2)^(0+128),w
 12989  1A31  00AD               	movwf	(create_chain@ncl+2)^(0+128)
 12990  1A32  0828               	movf	(create_chain@scl+1)^(0+128),w
 12991  1A33  00AC               	movwf	(create_chain@ncl+1)^(0+128)
 12992  1A34  0827               	movf	create_chain@scl^(0+128),w
 12993  1A35  00AB               	movwf	create_chain@ncl^(0+128)
 12994  1A36                     l413:	
 12995                           ;ff.c: 1012: for (;;) {
 12996                           
 12997                           
 12998                           ;ff.c: 1013: ncl++;
 12999  1A36  3001               	movlw	1
 13000  1A37  07AB               	addwf	create_chain@ncl^(0+128),f
 13001  1A38  3000               	movlw	0
 13002  1A39  3DAC               	addwfc	(create_chain@ncl+1)^(0+128),f
 13003  1A3A  3000               	movlw	0
 13004  1A3B  3DAD               	addwfc	(create_chain@ncl+2)^(0+128),f
 13005  1A3C  3000               	movlw	0
 13006  1A3D  3DAE               	addwfc	(create_chain@ncl+3)^(0+128),f
 13007                           
 13008                           ;ff.c: 1014: if (ncl >= fs->n_fatent) {
 13009  1A3E  0820               	movf	create_chain@fs^(0+128),w
 13010  1A3F  0086               	movwf	6
 13011  1A40  0821               	movf	(create_chain@fs+1)^(0+128),w
 13012  1A41  0087               	movwf	7
 13013  1A42  3152               	addfsr 1,18
 13014  1A43  3F40               	moviw [0]fsr1
 13015  1A44  0020               	movlb	0	; select bank0
 13016  1A45  00EC               	movwf	??_create_chain
 13017  1A46  3F41               	moviw [1]fsr1
 13018  1A47  00ED               	movwf	??_create_chain+1
 13019  1A48  3F42               	moviw [2]fsr1
 13020  1A49  00EE               	movwf	??_create_chain+2
 13021  1A4A  3F43               	moviw [3]fsr1
 13022  1A4B  00EF               	movwf	??_create_chain+3
 13023  1A4C  086F               	movf	??_create_chain+3,w
 13024  1A4D  0021               	movlb	1	; select bank1
 13025  1A4E  022E               	subwf	(create_chain@ncl+3)^(0+128),w
 13026  1A4F  1D03               	skipz
 13027  1A50  2A61               	goto	u5205
 13028  1A51  0020               	movlb	0	; select bank0
 13029  1A52  086E               	movf	??_create_chain+2,w
 13030  1A53  0021               	movlb	1	; select bank1
 13031  1A54  022D               	subwf	(create_chain@ncl+2)^(0+128),w
 13032  1A55  1D03               	skipz
 13033  1A56  2A61               	goto	u5205
 13034  1A57  0020               	movlb	0	; select bank0
 13035  1A58  086D               	movf	??_create_chain+1,w
 13036  1A59  0021               	movlb	1	; select bank1
 13037  1A5A  022C               	subwf	(create_chain@ncl+1)^(0+128),w
 13038  1A5B  1D03               	skipz
 13039  1A5C  2A61               	goto	u5205
 13040  1A5D  0020               	movlb	0	; select bank0
 13041  1A5E  086C               	movf	??_create_chain,w
 13042  1A5F  0021               	movlb	1	; select bank1
 13043  1A60  022B               	subwf	create_chain@ncl^(0+128),w
 13044  1A61                     u5205:	
 13045  1A61  1C03               	skipc
 13046  1A62  2A81               	goto	l4190
 13047                           
 13048                           ;ff.c: 1015: ncl = 2;
 13049  1A63  3000               	movlw	0
 13050  1A64  00AE               	movwf	(create_chain@ncl+3)^(0+128)
 13051  1A65  3000               	movlw	0
 13052  1A66  00AD               	movwf	(create_chain@ncl+2)^(0+128)
 13053  1A67  3000               	movlw	0
 13054  1A68  00AC               	movwf	(create_chain@ncl+1)^(0+128)
 13055  1A69  3002               	movlw	2
 13056  1A6A  00AB               	movwf	create_chain@ncl^(0+128)
 13057                           
 13058                           ;ff.c: 1016: if (ncl > scl) return 0;
 13059  1A6B  082A               	movf	(create_chain@scl+3)^(0+128),w
 13060  1A6C  1D03               	btfss	3,2
 13061  1A6D  2A81               	goto	l4190
 13062  1A6E  0829               	movf	(create_chain@scl+2)^(0+128),w
 13063  1A6F  1D03               	btfss	3,2
 13064  1A70  2A81               	goto	l4190
 13065  1A71  0828               	movf	(create_chain@scl+1)^(0+128),w
 13066  1A72  1D03               	btfss	3,2
 13067  1A73  2A81               	goto	l4190
 13068  1A74  3002               	movlw	2
 13069  1A75  0227               	subwf	create_chain@scl^(0+128),w
 13070  1A76  1803               	btfsc	3,0
 13071  1A77  2A81               	goto	l4190
 13072  1A78                     l4186:	
 13073  1A78  3000               	movlw	0
 13074  1A79  00A3               	movwf	(?_create_chain+3)^(0+128)
 13075  1A7A  3000               	movlw	0
 13076  1A7B  00A2               	movwf	(?_create_chain+2)^(0+128)
 13077  1A7C  3000               	movlw	0
 13078  1A7D  00A1               	movwf	(?_create_chain+1)^(0+128)
 13079  1A7E  3000               	movlw	0
 13080  1A7F  00A0               	movwf	?_create_chain^(0+128)
 13081  1A80  0008               	return
 13082  1A81                     l4190:	
 13083                           
 13084                           ;ff.c: 1017: };ff.c: 1018: cs = get_fat(fs, ncl);
 13085  1A81  0821               	movf	(create_chain@fs+1)^(0+128),w
 13086  1A82  0020               	movlb	0	; select bank0
 13087  1A83  00CF               	movwf	get_fat@fs+1
 13088  1A84  0021               	movlb	1	; select bank1
 13089  1A85  0820               	movf	create_chain@fs^(0+128),w
 13090  1A86  0020               	movlb	0	; select bank0
 13091  1A87  00CE               	movwf	get_fat@fs
 13092  1A88  0021               	movlb	1	; select bank1
 13093  1A89  082E               	movf	(create_chain@ncl+3)^(0+128),w
 13094  1A8A  0020               	movlb	0	; select bank0
 13095  1A8B  00D3               	movwf	get_fat@clst+3
 13096  1A8C  0021               	movlb	1	; select bank1
 13097  1A8D  082D               	movf	(create_chain@ncl+2)^(0+128),w
 13098  1A8E  0020               	movlb	0	; select bank0
 13099  1A8F  00D2               	movwf	get_fat@clst+2
 13100  1A90  0021               	movlb	1	; select bank1
 13101  1A91  082C               	movf	(create_chain@ncl+1)^(0+128),w
 13102  1A92  0020               	movlb	0	; select bank0
 13103  1A93  00D1               	movwf	get_fat@clst+1
 13104  1A94  0021               	movlb	1	; select bank1
 13105  1A95  082B               	movf	create_chain@ncl^(0+128),w
 13106  1A96  0020               	movlb	0	; select bank0
 13107  1A97  00D0               	movwf	get_fat@clst
 13108  1A98  31A6  2622  3199   	fcall	_get_fat
 13109  1A9B  0851               	movf	?_get_fat+3,w
 13110  1A9C  0021               	movlb	1	; select bank1
 13111  1A9D  00B2               	movwf	(create_chain@cs+3)^(0+128)
 13112  1A9E  0020               	movlb	0	; select bank0
 13113  1A9F  0850               	movf	?_get_fat+2,w
 13114  1AA0  0021               	movlb	1	; select bank1
 13115  1AA1  00B1               	movwf	(create_chain@cs+2)^(0+128)
 13116  1AA2  0020               	movlb	0	; select bank0
 13117  1AA3  084F               	movf	?_get_fat+1,w
 13118  1AA4  0021               	movlb	1	; select bank1
 13119  1AA5  00B0               	movwf	(create_chain@cs+1)^(0+128)
 13120  1AA6  0020               	movlb	0	; select bank0
 13121  1AA7  084E               	movf	?_get_fat,w
 13122  1AA8  0021               	movlb	1	; select bank1
 13123  1AA9  00AF               	movwf	create_chain@cs^(0+128)
 13124                           
 13125                           ;ff.c: 1019: if (cs == 0) break;
 13126  1AAA  0832               	movf	(create_chain@cs+3)^(0+128),w
 13127  1AAB  0431               	iorwf	(create_chain@cs+2)^(0+128),w
 13128  1AAC  0430               	iorwf	(create_chain@cs+1)^(0+128),w
 13129  1AAD  042F               	iorwf	create_chain@cs^(0+128),w
 13130  1AAE  1903               	btfsc	3,2
 13131  1AAF  2AD2               	goto	l4210
 13132                           
 13133                           ;ff.c: 1020: if (cs == 0xFFFFFFFF || cs == 1)
 13134  1AB0  0A2F               	incf	create_chain@cs^(0+128),w
 13135  1AB1  1D03               	skipz
 13136  1AB2  2ABB               	goto	l4198
 13137  1AB3  0A30               	incf	(create_chain@cs+1)^(0+128),w
 13138  1AB4  1D03               	skipz
 13139  1AB5  2ABB               	goto	l4198
 13140  1AB6  0A31               	incf	(create_chain@cs+2)^(0+128),w
 13141  1AB7  1903               	btfsc	3,2
 13142  1AB8  0A32               	incf	(create_chain@cs+3)^(0+128),w
 13143  1AB9  1903               	btfsc	3,2
 13144  1ABA  29F8               	goto	l4170
 13145  1ABB                     l4198:	
 13146  1ABB  032F               	decf	create_chain@cs^(0+128),w
 13147  1ABC  0430               	iorwf	(create_chain@cs+1)^(0+128),w
 13148  1ABD  0431               	iorwf	(create_chain@cs+2)^(0+128),w
 13149  1ABE  0432               	iorwf	(create_chain@cs+3)^(0+128),w
 13150  1ABF  1903               	btfsc	3,2
 13151  1AC0  29F8               	goto	l4170
 13152                           
 13153                           ;ff.c: 1022: if (ncl == scl) return 0;
 13154  1AC1  082A               	movf	(create_chain@scl+3)^(0+128),w
 13155  1AC2  062E               	xorwf	(create_chain@ncl+3)^(0+128),w
 13156  1AC3  1D03               	skipz
 13157  1AC4  2ACF               	goto	u5255
 13158  1AC5  0829               	movf	(create_chain@scl+2)^(0+128),w
 13159  1AC6  062D               	xorwf	(create_chain@ncl+2)^(0+128),w
 13160  1AC7  1D03               	skipz
 13161  1AC8  2ACF               	goto	u5255
 13162  1AC9  0828               	movf	(create_chain@scl+1)^(0+128),w
 13163  1ACA  062C               	xorwf	(create_chain@ncl+1)^(0+128),w
 13164  1ACB  1D03               	skipz
 13165  1ACC  2ACF               	goto	u5255
 13166  1ACD  0827               	movf	create_chain@scl^(0+128),w
 13167  1ACE  062B               	xorwf	create_chain@ncl^(0+128),w
 13168  1ACF                     u5255:	
 13169  1ACF  1903               	btfsc	3,2
 13170  1AD0  2A78               	goto	l4186
 13171  1AD1  2A36               	goto	l413
 13172  1AD2                     l4210:	
 13173                           
 13174                           ;ff.c: 1025: res = put_fat(fs, ncl, 0x0FFFFFFF);
 13175  1AD2  0821               	movf	(create_chain@fs+1)^(0+128),w
 13176  1AD3  0020               	movlb	0	; select bank0
 13177  1AD4  00CF               	movwf	put_fat@fs+1
 13178  1AD5  0021               	movlb	1	; select bank1
 13179  1AD6  0820               	movf	create_chain@fs^(0+128),w
 13180  1AD7  0020               	movlb	0	; select bank0
 13181  1AD8  00CE               	movwf	put_fat@fs
 13182  1AD9  0021               	movlb	1	; select bank1
 13183  1ADA  082E               	movf	(create_chain@ncl+3)^(0+128),w
 13184  1ADB  0020               	movlb	0	; select bank0
 13185  1ADC  00D3               	movwf	put_fat@clst+3
 13186  1ADD  0021               	movlb	1	; select bank1
 13187  1ADE  082D               	movf	(create_chain@ncl+2)^(0+128),w
 13188  1ADF  0020               	movlb	0	; select bank0
 13189  1AE0  00D2               	movwf	put_fat@clst+2
 13190  1AE1  0021               	movlb	1	; select bank1
 13191  1AE2  082C               	movf	(create_chain@ncl+1)^(0+128),w
 13192  1AE3  0020               	movlb	0	; select bank0
 13193  1AE4  00D1               	movwf	put_fat@clst+1
 13194  1AE5  0021               	movlb	1	; select bank1
 13195  1AE6  082B               	movf	create_chain@ncl^(0+128),w
 13196  1AE7  0020               	movlb	0	; select bank0
 13197  1AE8  00D0               	movwf	put_fat@clst
 13198  1AE9  300F               	movlw	15
 13199  1AEA  00D7               	movwf	put_fat@val+3
 13200  1AEB  30FF               	movlw	255
 13201  1AEC  00D6               	movwf	put_fat@val+2
 13202  1AED  30FF               	movlw	255
 13203  1AEE  00D5               	movwf	put_fat@val+1
 13204  1AEF  30FF               	movlw	255
 13205  1AF0  00D4               	movwf	put_fat@val
 13206  1AF1  319B  2389  3199   	fcall	_put_fat
 13207  1AF4  00EC               	movwf	??_create_chain
 13208  1AF5  086C               	movf	??_create_chain,w
 13209  1AF6  0021               	movlb	1	; select bank1
 13210  1AF7  00A6               	movwf	create_chain@res^(0+128)
 13211                           
 13212                           ;ff.c: 1026: if (res == FR_OK && clst != 0) {
 13213  1AF8  0826               	movf	create_chain@res^(0+128),w
 13214  1AF9  1D03               	btfss	3,2
 13215  1AFA  2B2F               	goto	l4218
 13216  1AFB  0825               	movf	(create_chain@clst+3)^(0+128),w
 13217  1AFC  0424               	iorwf	(create_chain@clst+2)^(0+128),w
 13218  1AFD  0423               	iorwf	(create_chain@clst+1)^(0+128),w
 13219  1AFE  0422               	iorwf	create_chain@clst^(0+128),w
 13220  1AFF  1903               	skipnz
 13221  1B00  2B2F               	goto	l4218
 13222                           
 13223                           ;ff.c: 1027: res = put_fat(fs, clst, ncl);
 13224  1B01  0821               	movf	(create_chain@fs+1)^(0+128),w
 13225  1B02  0020               	movlb	0	; select bank0
 13226  1B03  00CF               	movwf	put_fat@fs+1
 13227  1B04  0021               	movlb	1	; select bank1
 13228  1B05  0820               	movf	create_chain@fs^(0+128),w
 13229  1B06  0020               	movlb	0	; select bank0
 13230  1B07  00CE               	movwf	put_fat@fs
 13231  1B08  0021               	movlb	1	; select bank1
 13232  1B09  0825               	movf	(create_chain@clst+3)^(0+128),w
 13233  1B0A  0020               	movlb	0	; select bank0
 13234  1B0B  00D3               	movwf	put_fat@clst+3
 13235  1B0C  0021               	movlb	1	; select bank1
 13236  1B0D  0824               	movf	(create_chain@clst+2)^(0+128),w
 13237  1B0E  0020               	movlb	0	; select bank0
 13238  1B0F  00D2               	movwf	put_fat@clst+2
 13239  1B10  0021               	movlb	1	; select bank1
 13240  1B11  0823               	movf	(create_chain@clst+1)^(0+128),w
 13241  1B12  0020               	movlb	0	; select bank0
 13242  1B13  00D1               	movwf	put_fat@clst+1
 13243  1B14  0021               	movlb	1	; select bank1
 13244  1B15  0822               	movf	create_chain@clst^(0+128),w
 13245  1B16  0020               	movlb	0	; select bank0
 13246  1B17  00D0               	movwf	put_fat@clst
 13247  1B18  0021               	movlb	1	; select bank1
 13248  1B19  082E               	movf	(create_chain@ncl+3)^(0+128),w
 13249  1B1A  0020               	movlb	0	; select bank0
 13250  1B1B  00D7               	movwf	put_fat@val+3
 13251  1B1C  0021               	movlb	1	; select bank1
 13252  1B1D  082D               	movf	(create_chain@ncl+2)^(0+128),w
 13253  1B1E  0020               	movlb	0	; select bank0
 13254  1B1F  00D6               	movwf	put_fat@val+2
 13255  1B20  0021               	movlb	1	; select bank1
 13256  1B21  082C               	movf	(create_chain@ncl+1)^(0+128),w
 13257  1B22  0020               	movlb	0	; select bank0
 13258  1B23  00D5               	movwf	put_fat@val+1
 13259  1B24  0021               	movlb	1	; select bank1
 13260  1B25  082B               	movf	create_chain@ncl^(0+128),w
 13261  1B26  0020               	movlb	0	; select bank0
 13262  1B27  00D4               	movwf	put_fat@val
 13263  1B28  319B  2389  3199   	fcall	_put_fat
 13264  1B2B  00EC               	movwf	??_create_chain
 13265  1B2C  086C               	movf	??_create_chain,w
 13266  1B2D  0021               	movlb	1	; select bank1
 13267  1B2E  00A6               	movwf	create_chain@res^(0+128)
 13268  1B2F                     l4218:	
 13269                           
 13270                           ;ff.c: 1028: };ff.c: 1029: if (res == FR_OK) {
 13271  1B2F  0826               	movf	create_chain@res^(0+128),w
 13272  1B30  1D03               	btfss	3,2
 13273  1B31  2B6C               	goto	l4226
 13274                           
 13275                           ;ff.c: 1030: fs->last_clust = ncl;
 13276  1B32  0820               	movf	create_chain@fs^(0+128),w
 13277  1B33  0086               	movwf	6
 13278  1B34  0821               	movf	(create_chain@fs+1)^(0+128),w
 13279  1B35  0087               	movwf	7
 13280  1B36  314A               	addfsr 1,10
 13281  1B37  082B               	movf	create_chain@ncl^(0+128),w
 13282  1B38  3FC0               	movwi [0]fsr1
 13283  1B39  082C               	movf	(create_chain@ncl+1)^(0+128),w
 13284  1B3A  3FC1               	movwi [1]fsr1
 13285  1B3B  082D               	movf	(create_chain@ncl+2)^(0+128),w
 13286  1B3C  3FC2               	movwi [2]fsr1
 13287  1B3D  082E               	movf	(create_chain@ncl+3)^(0+128),w
 13288  1B3E  3FC3               	movwi [3]fsr1
 13289                           
 13290                           ;ff.c: 1031: if (fs->free_clust != 0xFFFFFFFF) {
 13291  1B3F  0820               	movf	create_chain@fs^(0+128),w
 13292  1B40  0086               	movwf	6
 13293  1B41  0821               	movf	(create_chain@fs+1)^(0+128),w
 13294  1B42  0087               	movwf	7
 13295  1B43  314E               	addfsr 1,14
 13296  1B44  0016               	moviw fsr1++
 13297  1B45  3AFF               	xorlw	255
 13298  1B46  0020               	movlb	0	; select bank0
 13299  1B47  00EC               	movwf	??_create_chain
 13300  1B48  0016               	moviw fsr1++
 13301  1B49  3AFF               	xorlw	255
 13302  1B4A  04EC               	iorwf	??_create_chain,f
 13303  1B4B  0016               	moviw fsr1++
 13304  1B4C  3AFF               	xorlw	255
 13305  1B4D  04EC               	iorwf	??_create_chain,f
 13306  1B4E  0016               	moviw fsr1++
 13307  1B4F  3AFF               	xorlw	255
 13308  1B50  04EC               	iorwf	??_create_chain,f
 13309  1B51  1903               	btfsc	3,2
 13310  1B52  2B7F               	goto	l425
 13311                           
 13312                           ;ff.c: 1032: fs->free_clust--;
 13313  1B53  0021               	movlb	1	; select bank1
 13314  1B54  0820               	movf	create_chain@fs^(0+128),w
 13315  1B55  0086               	movwf	6
 13316  1B56  0821               	movf	(create_chain@fs+1)^(0+128),w
 13317  1B57  0087               	movwf	7
 13318  1B58  314E               	addfsr 1,14
 13319  1B59  3001               	movlw	1
 13320  1B5A  0281               	subwf	1,f
 13321  1B5B  3141               	addfsr 1,1
 13322  1B5C  3000               	movlw	0
 13323  1B5D  3B81               	subwfb	1,f
 13324  1B5E  3141               	addfsr 1,1
 13325  1B5F  3000               	movlw	0
 13326  1B60  3B81               	subwfb	1,f
 13327  1B61  3141               	addfsr 1,1
 13328  1B62  3000               	movlw	0
 13329  1B63  3B81               	subwfb	1,f
 13330  1B64  317D               	addfsr 1,-3
 13331                           
 13332                           ;ff.c: 1033: fs->fsi_flag |= 1;
 13333  1B65  0820               	movf	create_chain@fs^(0+128),w
 13334  1B66  0086               	movwf	6
 13335  1B67  0821               	movf	(create_chain@fs+1)^(0+128),w
 13336  1B68  0087               	movwf	7
 13337  1B69  3145               	addfsr 1,5
 13338  1B6A  1401               	bsf	1,0
 13339  1B6B  2B7F               	goto	l425
 13340  1B6C                     l4226:	
 13341                           
 13342                           ;ff.c: 1036: ncl = (res == FR_DISK_ERR) ? 0xFFFFFFFF : 1;
 13343  1B6C  0326               	decf	create_chain@res^(0+128),w
 13344  1B6D  1903               	btfsc	3,2
 13345  1B6E  2B77               	goto	l4230
 13346  1B6F  3000               	movlw	0
 13347  1B70  00AE               	movwf	(create_chain@ncl+3)^(0+128)
 13348  1B71  3000               	movlw	0
 13349  1B72  00AD               	movwf	(create_chain@ncl+2)^(0+128)
 13350  1B73  3000               	movlw	0
 13351  1B74  00AC               	movwf	(create_chain@ncl+1)^(0+128)
 13352  1B75  3001               	movlw	1
 13353  1B76  2B7E               	goto	L9
 13354  1B77                     l4230:	
 13355  1B77  30FF               	movlw	255
 13356  1B78  00AE               	movwf	(create_chain@ncl+3)^(0+128)
 13357  1B79  30FF               	movlw	255
 13358  1B7A  00AD               	movwf	(create_chain@ncl+2)^(0+128)
 13359  1B7B  30FF               	movlw	255
 13360  1B7C  00AC               	movwf	(create_chain@ncl+1)^(0+128)
 13361  1B7D  30FF               	movlw	255
 13362  1B7E                     L9:	
 13363  1B7E  00AB               	movwf	create_chain@ncl^(0+128)
 13364  1B7F                     l425:	
 13365                           
 13366                           ;ff.c: 1037: };ff.c: 1039: return ncl;
 13367  1B7F  0021               	movlb	1	; select bank1
 13368  1B80  082E               	movf	(create_chain@ncl+3)^(0+128),w
 13369  1B81  00A3               	movwf	(?_create_chain+3)^(0+128)
 13370  1B82  082D               	movf	(create_chain@ncl+2)^(0+128),w
 13371  1B83  00A2               	movwf	(?_create_chain+2)^(0+128)
 13372  1B84  082C               	movf	(create_chain@ncl+1)^(0+128),w
 13373  1B85  00A1               	movwf	(?_create_chain+1)^(0+128)
 13374  1B86  082B               	movf	create_chain@ncl^(0+128),w
 13375  1B87  00A0               	movwf	?_create_chain^(0+128)
 13376  1B88  0008               	return
 13377  1B89                     __end_of_create_chain:	
 13378                           
 13379                           	psect	text25
 13380  1B89                     __ptext25:	
 13381 ;; *************** function _put_fat *****************
 13382 ;; Defined at:
 13383 ;;		line 873 in file "ff.c"
 13384 ;; Parameters:    Size  Location     Type
 13385 ;;  fs              2   46[BANK0 ] PTR struct .
 13386 ;;		 -> NULL(0), FatFs(558), 
 13387 ;;  clst            4   48[BANK0 ] unsigned long 
 13388 ;;  val             4   52[BANK0 ] unsigned long 
 13389 ;; Auto vars:     Size  Location     Type
 13390 ;;  p               2   74[BANK0 ] PTR unsigned char 
 13391 ;;		 -> FatFs.win(512), NULL(0), FatFs(558), 
 13392 ;;  bc              2   71[BANK0 ] unsigned int 
 13393 ;;  res             1   73[BANK0 ] enum E88
 13394 ;; Return value:  Size  Location     Type
 13395 ;;                  1    wreg      enum E88
 13396 ;; Registers used:
 13397 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13398 ;; Tracked objects:
 13399 ;;		On entry : 1F/0
 13400 ;;		On exit  : 1F/0
 13401 ;;		Unchanged: 0/0
 13402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13403 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13404 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13405 ;;      Temps:          0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13406 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13407 ;;Total ram usage:       30 bytes
 13408 ;; Hardware stack levels used:    1
 13409 ;; Hardware stack levels required when called:    8
 13410 ;; This function calls:
 13411 ;;		_move_window
 13412 ;; This function is called by:
 13413 ;;		_remove_chain
 13414 ;;		_create_chain
 13415 ;; This function uses a non-reentrant model
 13416 ;;
 13417                           
 13418                           
 13419                           ;psect for function _put_fat
 13420  1B89                     _put_fat:	
 13421                           
 13422                           ;ff.c: 879: UINT bc;;ff.c: 880: BYTE *p;;ff.c: 881: FRESULT res;;ff.c: 884: if (clst < 2
      +                           || clst >= fs->n_fatent) {
 13423                           
 13424                           ;incstack = 0
 13425                           ; Regs used in _put_fat: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13426  1B89  0853               	movf	put_fat@clst+3,w
 13427  1B8A  1D03               	btfss	3,2
 13428  1B8B  2B96               	goto	l4036
 13429  1B8C  0852               	movf	put_fat@clst+2,w
 13430  1B8D  1D03               	btfss	3,2
 13431  1B8E  2B96               	goto	l4036
 13432  1B8F  0851               	movf	put_fat@clst+1,w
 13433  1B90  1D03               	btfss	3,2
 13434  1B91  2B96               	goto	l4036
 13435  1B92  3002               	movlw	2
 13436  1B93  0250               	subwf	put_fat@clst,w
 13437  1B94  1C03               	btfss	3,0
 13438  1B95  2BB3               	goto	l4038
 13439  1B96                     l4036:	
 13440  1B96  084E               	movf	put_fat@fs,w
 13441  1B97  0086               	movwf	6
 13442  1B98  084F               	movf	put_fat@fs+1,w
 13443  1B99  0087               	movwf	7
 13444  1B9A  3152               	addfsr 1,18
 13445  1B9B  3F40               	moviw [0]fsr1
 13446  1B9C  00D8               	movwf	??_put_fat
 13447  1B9D  3F41               	moviw [1]fsr1
 13448  1B9E  00D9               	movwf	??_put_fat+1
 13449  1B9F  3F42               	moviw [2]fsr1
 13450  1BA0  00DA               	movwf	??_put_fat+2
 13451  1BA1  3F43               	moviw [3]fsr1
 13452  1BA2  00DB               	movwf	??_put_fat+3
 13453  1BA3  085B               	movf	??_put_fat+3,w
 13454  1BA4  0253               	subwf	put_fat@clst+3,w
 13455  1BA5  1D03               	skipz
 13456  1BA6  2BB1               	goto	u4975
 13457  1BA7  085A               	movf	??_put_fat+2,w
 13458  1BA8  0252               	subwf	put_fat@clst+2,w
 13459  1BA9  1D03               	skipz
 13460  1BAA  2BB1               	goto	u4975
 13461  1BAB  0859               	movf	??_put_fat+1,w
 13462  1BAC  0251               	subwf	put_fat@clst+1,w
 13463  1BAD  1D03               	skipz
 13464  1BAE  2BB1               	goto	u4975
 13465  1BAF  0858               	movf	??_put_fat,w
 13466  1BB0  0250               	subwf	put_fat@clst,w
 13467  1BB1                     u4975:	
 13468  1BB1  1C03               	skipc
 13469  1BB2  2D9D               	goto	l4110
 13470  1BB3                     l4038:	
 13471                           
 13472                           ;ff.c: 885: res = FR_INT_ERR;
 13473  1BB3  3002               	movlw	2
 13474  1BB4  00D8               	movwf	??_put_fat
 13475  1BB5  0858               	movf	??_put_fat,w
 13476  1BB6  00E9               	movwf	put_fat@res
 13477                           
 13478                           ;ff.c: 887: } else {
 13479  1BB7  2DAC               	goto	l4112
 13480  1BB8                     l4040:	
 13481                           
 13482                           ;ff.c: 890: bc = (UINT)clst; bc += bc / 2;
 13483  1BB8  0851               	movf	put_fat@clst+1,w
 13484  1BB9  00E8               	movwf	put_fat@bc+1
 13485  1BBA  0850               	movf	put_fat@clst,w
 13486  1BBB  00E7               	movwf	put_fat@bc
 13487  1BBC  0868               	movf	put_fat@bc+1,w
 13488  1BBD  00D9               	movwf	??_put_fat+1
 13489  1BBE  0867               	movf	put_fat@bc,w
 13490  1BBF  00D8               	movwf	??_put_fat
 13491  1BC0  36D9               	lsrf	??_put_fat+1,f
 13492  1BC1  0CD8               	rrf	??_put_fat,f
 13493  1BC2  0858               	movf	??_put_fat,w
 13494  1BC3  07E7               	addwf	put_fat@bc,f
 13495  1BC4  0859               	movf	??_put_fat+1,w
 13496  1BC5  3DE8               	addwfc	put_fat@bc+1,f
 13497                           
 13498                           ;ff.c: 891: res = move_window(fs, fs->fatbase + (bc / ((UINT)512)));
 13499  1BC6  084F               	movf	put_fat@fs+1,w
 13500  1BC7  00C4               	movwf	move_window@fs+1
 13501  1BC8  084E               	movf	put_fat@fs,w
 13502  1BC9  00C3               	movwf	move_window@fs
 13503  1BCA  084E               	movf	put_fat@fs,w
 13504  1BCB  0086               	movwf	6
 13505  1BCC  084F               	movf	put_fat@fs+1,w
 13506  1BCD  0087               	movwf	7
 13507  1BCE  315E               	addfsr 1,30
 13508  1BCF  3F40               	moviw [0]fsr1
 13509  1BD0  00D8               	movwf	??_put_fat
 13510  1BD1  3F41               	moviw [1]fsr1
 13511  1BD2  00D9               	movwf	??_put_fat+1
 13512  1BD3  3F42               	moviw [2]fsr1
 13513  1BD4  00DA               	movwf	??_put_fat+2
 13514  1BD5  3F43               	moviw [3]fsr1
 13515  1BD6  00DB               	movwf	??_put_fat+3
 13516  1BD7  0868               	movf	put_fat@bc+1,w
 13517  1BD8  00DD               	movwf	??_put_fat+5
 13518  1BD9  0867               	movf	put_fat@bc,w
 13519  1BDA  00DC               	movwf	??_put_fat+4
 13520  1BDB  3009               	movlw	9
 13521  1BDC                     u4985:	
 13522  1BDC  36DD               	lsrf	??_put_fat+5,f
 13523  1BDD  0CDC               	rrf	??_put_fat+4,f
 13524  1BDE  0B89               	decfsz	9,f
 13525  1BDF  2BDC               	goto	u4985
 13526  1BE0  085C               	movf	??_put_fat+4,w
 13527  1BE1  00DE               	movwf	??_put_fat+6
 13528  1BE2  085D               	movf	??_put_fat+5,w
 13529  1BE3  00DF               	movwf	??_put_fat+7
 13530  1BE4  01E0               	clrf	??_put_fat+8
 13531  1BE5  01E1               	clrf	??_put_fat+9
 13532  1BE6  085E               	movf	??_put_fat+6,w
 13533  1BE7  07D8               	addwf	??_put_fat,f
 13534  1BE8  085F               	movf	??_put_fat+7,w
 13535  1BE9  3DD9               	addwfc	??_put_fat+1,f
 13536  1BEA  0860               	movf	??_put_fat+8,w
 13537  1BEB  3DDA               	addwfc	??_put_fat+2,f
 13538  1BEC  0861               	movf	??_put_fat+9,w
 13539  1BED  3DDB               	addwfc	??_put_fat+3,f
 13540  1BEE  085B               	movf	??_put_fat+3,w
 13541  1BEF  00C8               	movwf	move_window@sector+3
 13542  1BF0  085A               	movf	??_put_fat+2,w
 13543  1BF1  00C7               	movwf	move_window@sector+2
 13544  1BF2  0859               	movf	??_put_fat+1,w
 13545  1BF3  00C6               	movwf	move_window@sector+1
 13546  1BF4  0858               	movf	??_put_fat,w
 13547  1BF5  00C5               	movwf	move_window@sector
 13548  1BF6  31AE  263A  319B   	fcall	_move_window
 13549  1BF9  00E2               	movwf	??_put_fat+10
 13550  1BFA  0862               	movf	??_put_fat+10,w
 13551  1BFB  00E9               	movwf	put_fat@res
 13552                           
 13553                           ;ff.c: 892: if (res != FR_OK) break;
 13554  1BFC  0869               	movf	put_fat@res,w
 13555  1BFD  1D03               	btfss	3,2
 13556  1BFE  2DAC               	goto	l4112
 13557                           
 13558                           ;ff.c: 893: p = &fs->win[bc++ % ((UINT)512)];
 13559  1BFF  30FF               	movlw	255
 13560  1C00  0567               	andwf	put_fat@bc,w
 13561  1C01  00D8               	movwf	??_put_fat
 13562  1C02  3001               	movlw	1
 13563  1C03  0568               	andwf	put_fat@bc+1,w
 13564  1C04  00D9               	movwf	??_put_fat+1
 13565  1C05  0858               	movf	??_put_fat,w
 13566  1C06  074E               	addwf	put_fat@fs,w
 13567  1C07  00DA               	movwf	??_put_fat+2
 13568  1C08  0859               	movf	??_put_fat+1,w
 13569  1C09  3D4F               	addwfc	put_fat@fs+1,w
 13570  1C0A  00DB               	movwf	??_put_fat+3
 13571  1C0B  085A               	movf	??_put_fat+2,w
 13572  1C0C  3E2E               	addlw	46
 13573  1C0D  00EA               	movwf	put_fat@p
 13574  1C0E  3000               	movlw	0
 13575  1C0F  3D5B               	addwfc	??_put_fat+3,w
 13576  1C10  00EB               	movwf	put_fat@p+1
 13577  1C11  3001               	movlw	1
 13578  1C12  07E7               	addwf	put_fat@bc,f
 13579  1C13  3000               	movlw	0
 13580  1C14  3DE8               	addwfc	put_fat@bc+1,f
 13581                           
 13582                           ;ff.c: 894: *p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
 13583  1C15  1850               	btfsc	put_fat@clst,0
 13584  1C16  2C1C               	goto	l4058
 13585  1C17  0854               	movf	put_fat@val,w
 13586  1C18  00D8               	movwf	??_put_fat
 13587  1C19  01D9               	clrf	??_put_fat+1
 13588  1C1A  0858               	movf	??_put_fat,w
 13589  1C1B  2C31               	goto	L10
 13590  1C1C                     l4058:	
 13591  1C1C  0854               	movf	put_fat@val,w
 13592  1C1D  00D8               	movwf	??_put_fat
 13593  1C1E  01D9               	clrf	??_put_fat+1
 13594  1C1F  0ED8               	swapf	??_put_fat,f
 13595  1C20  0ED9               	swapf	??_put_fat+1,f
 13596  1C21  30F0               	movlw	240
 13597  1C22  05D9               	andwf	??_put_fat+1,f
 13598  1C23  0858               	movf	??_put_fat,w
 13599  1C24  390F               	andlw	15
 13600  1C25  04D9               	iorwf	??_put_fat+1,f
 13601  1C26  30F0               	movlw	240
 13602  1C27  05D8               	andwf	??_put_fat,f
 13603  1C28  086A               	movf	put_fat@p,w
 13604  1C29  0086               	movwf	6
 13605  1C2A  086B               	movf	put_fat@p+1,w
 13606  1C2B  0087               	movwf	7
 13607  1C2C  300F               	movlw	15
 13608  1C2D  0501               	andwf	1,w
 13609  1C2E  00DA               	movwf	??_put_fat+2
 13610  1C2F  0858               	movf	??_put_fat,w
 13611  1C30  045A               	iorwf	??_put_fat+2,w
 13612  1C31                     L10:	
 13613  1C31  00E3               	movwf	_put_fat$612
 13614  1C32  0859               	movf	??_put_fat+1,w
 13615  1C33  00E4               	movwf	_put_fat$612+1
 13616  1C34  086A               	movf	put_fat@p,w
 13617  1C35  0086               	movwf	6
 13618  1C36  086B               	movf	put_fat@p+1,w
 13619  1C37  0087               	movwf	7
 13620  1C38  0863               	movf	_put_fat$612,w
 13621  1C39  0081               	movwf	1
 13622                           
 13623                           ;ff.c: 895: fs->wflag = 1;
 13624  1C3A  084E               	movf	put_fat@fs,w
 13625  1C3B  3E04               	addlw	4
 13626  1C3C  00D8               	movwf	??_put_fat
 13627  1C3D  3000               	movlw	0
 13628  1C3E  3D4F               	addwfc	put_fat@fs+1,w
 13629  1C3F  00D9               	movwf	??_put_fat+1
 13630  1C40  0858               	movf	??_put_fat,w
 13631  1C41  0086               	movwf	6
 13632  1C42  0859               	movf	??_put_fat+1,w
 13633  1C43  0087               	movwf	7
 13634  1C44  3001               	movlw	1
 13635  1C45  0081               	movwf	1
 13636                           
 13637                           ;ff.c: 896: res = move_window(fs, fs->fatbase + (bc / ((UINT)512)));
 13638  1C46  084F               	movf	put_fat@fs+1,w
 13639  1C47  00C4               	movwf	move_window@fs+1
 13640  1C48  084E               	movf	put_fat@fs,w
 13641  1C49  00C3               	movwf	move_window@fs
 13642  1C4A  084E               	movf	put_fat@fs,w
 13643  1C4B  0086               	movwf	6
 13644  1C4C  084F               	movf	put_fat@fs+1,w
 13645  1C4D  0087               	movwf	7
 13646  1C4E  315E               	addfsr 1,30
 13647  1C4F  3F40               	moviw [0]fsr1
 13648  1C50  00D8               	movwf	??_put_fat
 13649  1C51  3F41               	moviw [1]fsr1
 13650  1C52  00D9               	movwf	??_put_fat+1
 13651  1C53  3F42               	moviw [2]fsr1
 13652  1C54  00DA               	movwf	??_put_fat+2
 13653  1C55  3F43               	moviw [3]fsr1
 13654  1C56  00DB               	movwf	??_put_fat+3
 13655  1C57  0868               	movf	put_fat@bc+1,w
 13656  1C58  00DD               	movwf	??_put_fat+5
 13657  1C59  0867               	movf	put_fat@bc,w
 13658  1C5A  00DC               	movwf	??_put_fat+4
 13659  1C5B  3009               	movlw	9
 13660  1C5C                     u5015:	
 13661  1C5C  36DD               	lsrf	??_put_fat+5,f
 13662  1C5D  0CDC               	rrf	??_put_fat+4,f
 13663  1C5E  0B89               	decfsz	9,f
 13664  1C5F  2C5C               	goto	u5015
 13665  1C60  085C               	movf	??_put_fat+4,w
 13666  1C61  00DE               	movwf	??_put_fat+6
 13667  1C62  085D               	movf	??_put_fat+5,w
 13668  1C63  00DF               	movwf	??_put_fat+7
 13669  1C64  01E0               	clrf	??_put_fat+8
 13670  1C65  01E1               	clrf	??_put_fat+9
 13671  1C66  085E               	movf	??_put_fat+6,w
 13672  1C67  07D8               	addwf	??_put_fat,f
 13673  1C68  085F               	movf	??_put_fat+7,w
 13674  1C69  3DD9               	addwfc	??_put_fat+1,f
 13675  1C6A  0860               	movf	??_put_fat+8,w
 13676  1C6B  3DDA               	addwfc	??_put_fat+2,f
 13677  1C6C  0861               	movf	??_put_fat+9,w
 13678  1C6D  3DDB               	addwfc	??_put_fat+3,f
 13679  1C6E  085B               	movf	??_put_fat+3,w
 13680  1C6F  00C8               	movwf	move_window@sector+3
 13681  1C70  085A               	movf	??_put_fat+2,w
 13682  1C71  00C7               	movwf	move_window@sector+2
 13683  1C72  0859               	movf	??_put_fat+1,w
 13684  1C73  00C6               	movwf	move_window@sector+1
 13685  1C74  0858               	movf	??_put_fat,w
 13686  1C75  00C5               	movwf	move_window@sector
 13687  1C76  31AE  263A  319B   	fcall	_move_window
 13688  1C79  00E2               	movwf	??_put_fat+10
 13689  1C7A  0862               	movf	??_put_fat+10,w
 13690  1C7B  00E9               	movwf	put_fat@res
 13691                           
 13692                           ;ff.c: 897: if (res != FR_OK) break;
 13693  1C7C  0869               	movf	put_fat@res,w
 13694  1C7D  1D03               	btfss	3,2
 13695  1C7E  2DAC               	goto	l4112
 13696                           
 13697                           ;ff.c: 898: p = &fs->win[bc % ((UINT)512)];
 13698  1C7F  30FF               	movlw	255
 13699  1C80  0567               	andwf	put_fat@bc,w
 13700  1C81  00D8               	movwf	??_put_fat
 13701  1C82  3001               	movlw	1
 13702  1C83  0568               	andwf	put_fat@bc+1,w
 13703  1C84  00D9               	movwf	??_put_fat+1
 13704  1C85  0858               	movf	??_put_fat,w
 13705  1C86  074E               	addwf	put_fat@fs,w
 13706  1C87  00DA               	movwf	??_put_fat+2
 13707  1C88  0859               	movf	??_put_fat+1,w
 13708  1C89  3D4F               	addwfc	put_fat@fs+1,w
 13709  1C8A  00DB               	movwf	??_put_fat+3
 13710  1C8B  085A               	movf	??_put_fat+2,w
 13711  1C8C  3E2E               	addlw	46
 13712  1C8D  00EA               	movwf	put_fat@p
 13713  1C8E  3000               	movlw	0
 13714  1C8F  3D5B               	addwfc	??_put_fat+3,w
 13715  1C90  00EB               	movwf	put_fat@p+1
 13716                           
 13717                           ;ff.c: 899: *p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F
      +                          ));
 13718  1C91  1850               	btfsc	put_fat@clst,0
 13719  1C92  2CA3               	goto	l4076
 13720  1C93  300F               	movlw	15
 13721  1C94  0555               	andwf	put_fat@val+1,w
 13722  1C95  00D8               	movwf	??_put_fat
 13723  1C96  086A               	movf	put_fat@p,w
 13724  1C97  0086               	movwf	6
 13725  1C98  086B               	movf	put_fat@p+1,w
 13726  1C99  0087               	movwf	7
 13727  1C9A  0801               	movf	1,w
 13728  1C9B  39F0               	andlw	240
 13729  1C9C  0458               	iorwf	??_put_fat,w
 13730  1C9D  00D9               	movwf	??_put_fat+1
 13731  1C9E  01DA               	clrf	??_put_fat+2
 13732  1C9F  0859               	movf	??_put_fat+1,w
 13733  1CA0  00E5               	movwf	_put_fat$613
 13734  1CA1  085A               	movf	??_put_fat+2,w
 13735  1CA2  2CB8               	goto	L11
 13736  1CA3                     l4076:	
 13737  1CA3  0854               	movf	put_fat@val,w
 13738  1CA4  00D8               	movwf	??_put_fat
 13739  1CA5  0855               	movf	put_fat@val+1,w
 13740  1CA6  00D9               	movwf	??_put_fat+1
 13741  1CA7  0856               	movf	put_fat@val+2,w
 13742  1CA8  00DA               	movwf	??_put_fat+2
 13743  1CA9  0857               	movf	put_fat@val+3,w
 13744  1CAA  00DB               	movwf	??_put_fat+3
 13745  1CAB  3004               	movlw	4
 13746  1CAC                     u5045:	
 13747  1CAC  36DB               	lsrf	??_put_fat+3,f
 13748  1CAD  0CDA               	rrf	??_put_fat+2,f
 13749  1CAE  0CD9               	rrf	??_put_fat+1,f
 13750  1CAF  0CD8               	rrf	??_put_fat,f
 13751  1CB0  0B89               	decfsz	9,f
 13752  1CB1  2CAC               	goto	u5045
 13753  1CB2  0858               	movf	??_put_fat,w
 13754  1CB3  00DC               	movwf	??_put_fat+4
 13755  1CB4  01DD               	clrf	??_put_fat+5
 13756  1CB5  085C               	movf	??_put_fat+4,w
 13757  1CB6  00E5               	movwf	_put_fat$613
 13758  1CB7  085D               	movf	??_put_fat+5,w
 13759  1CB8                     L11:	
 13760  1CB8  00E6               	movwf	_put_fat$613+1
 13761  1CB9  086A               	movf	put_fat@p,w
 13762  1CBA  0086               	movwf	6
 13763  1CBB  086B               	movf	put_fat@p+1,w
 13764  1CBC  0087               	movwf	7
 13765  1CBD  0865               	movf	_put_fat$613,w
 13766  1CBE  0081               	movwf	1
 13767  1CBF  2D90               	goto	l4106
 13768  1CC0                     l4082:	
 13769                           ;ff.c: 901: break;
 13770                           
 13771                           ;ff.c: 900: fs->wflag = 1;
 13772                           
 13773                           
 13774                           ;ff.c: 904: res = move_window(fs, fs->fatbase + (clst / (((UINT)512) / 2)));
 13775  1CC0  084F               	movf	put_fat@fs+1,w
 13776  1CC1  00C4               	movwf	move_window@fs+1
 13777  1CC2  084E               	movf	put_fat@fs,w
 13778  1CC3  00C3               	movwf	move_window@fs
 13779  1CC4  084E               	movf	put_fat@fs,w
 13780  1CC5  0086               	movwf	6
 13781  1CC6  084F               	movf	put_fat@fs+1,w
 13782  1CC7  0087               	movwf	7
 13783  1CC8  315E               	addfsr 1,30
 13784  1CC9  3F40               	moviw [0]fsr1
 13785  1CCA  00D8               	movwf	??_put_fat
 13786  1CCB  3F41               	moviw [1]fsr1
 13787  1CCC  00D9               	movwf	??_put_fat+1
 13788  1CCD  3F42               	moviw [2]fsr1
 13789  1CCE  00DA               	movwf	??_put_fat+2
 13790  1CCF  3F43               	moviw [3]fsr1
 13791  1CD0  00DB               	movwf	??_put_fat+3
 13792  1CD1  3001               	movlw	1
 13793  1CD2  3E50               	addlw	(low (put_fat@clst| 0))& (0+255)
 13794  1CD3  0086               	movwf	6
 13795  1CD4  0187               	clrf	7
 13796  1CD5  3F40               	moviw [0]fsr1
 13797  1CD6  00DC               	movwf	??_put_fat+4
 13798  1CD7  3F41               	moviw [1]fsr1
 13799  1CD8  00DD               	movwf	??_put_fat+5
 13800  1CD9  3F42               	moviw [2]fsr1
 13801  1CDA  00DE               	movwf	??_put_fat+6
 13802  1CDB  01DF               	clrf	??_put_fat+7
 13803  1CDC  085C               	movf	??_put_fat+4,w
 13804  1CDD  07D8               	addwf	??_put_fat,f
 13805  1CDE  085D               	movf	??_put_fat+5,w
 13806  1CDF  3DD9               	addwfc	??_put_fat+1,f
 13807  1CE0  085E               	movf	??_put_fat+6,w
 13808  1CE1  3DDA               	addwfc	??_put_fat+2,f
 13809  1CE2  085F               	movf	??_put_fat+7,w
 13810  1CE3  3DDB               	addwfc	??_put_fat+3,f
 13811  1CE4  085B               	movf	??_put_fat+3,w
 13812  1CE5  00C8               	movwf	move_window@sector+3
 13813  1CE6  085A               	movf	??_put_fat+2,w
 13814  1CE7  00C7               	movwf	move_window@sector+2
 13815  1CE8  0859               	movf	??_put_fat+1,w
 13816  1CE9  00C6               	movwf	move_window@sector+1
 13817  1CEA  0858               	movf	??_put_fat,w
 13818  1CEB  00C5               	movwf	move_window@sector
 13819  1CEC  31AE  263A  319B   	fcall	_move_window
 13820  1CEF  00E0               	movwf	??_put_fat+8
 13821  1CF0  0860               	movf	??_put_fat+8,w
 13822  1CF1  00E9               	movwf	put_fat@res
 13823                           
 13824                           ;ff.c: 905: if (res != FR_OK) break;
 13825  1CF2  0869               	movf	put_fat@res,w
 13826  1CF3  1D03               	btfss	3,2
 13827  1CF4  2DAC               	goto	l4112
 13828                           
 13829                           ;ff.c: 906: p = &fs->win[clst * 2 % ((UINT)512)];
 13830  1CF5  0851               	movf	put_fat@clst+1,w
 13831  1CF6  00D9               	movwf	??_put_fat+1
 13832  1CF7  0850               	movf	put_fat@clst,w
 13833  1CF8  00D8               	movwf	??_put_fat
 13834  1CF9  35D8               	lslf	??_put_fat,f
 13835  1CFA  0DD9               	rlf	??_put_fat+1,f
 13836  1CFB  30FF               	movlw	255
 13837  1CFC  0558               	andwf	??_put_fat,w
 13838  1CFD  00DA               	movwf	??_put_fat+2
 13839  1CFE  3001               	movlw	1
 13840  1CFF  0559               	andwf	??_put_fat+1,w
 13841  1D00  00DB               	movwf	??_put_fat+3
 13842  1D01  085A               	movf	??_put_fat+2,w
 13843  1D02  074E               	addwf	put_fat@fs,w
 13844  1D03  00DC               	movwf	??_put_fat+4
 13845  1D04  085B               	movf	??_put_fat+3,w
 13846  1D05  3D4F               	addwfc	put_fat@fs+1,w
 13847  1D06  00DD               	movwf	??_put_fat+5
 13848  1D07  085C               	movf	??_put_fat+4,w
 13849  1D08  3E2E               	addlw	46
 13850  1D09  00EA               	movwf	put_fat@p
 13851  1D0A  3000               	movlw	0
 13852  1D0B  3D5D               	addwfc	??_put_fat+5,w
 13853  1D0C  00EB               	movwf	put_fat@p+1
 13854                           
 13855                           ;ff.c: 907: *(WORD*)(BYTE*)(p)=(WORD)((WORD)val);
 13856  1D0D  086A               	movf	put_fat@p,w
 13857  1D0E  0086               	movwf	6
 13858  1D0F  086B               	movf	put_fat@p+1,w
 13859  1D10  0087               	movwf	7
 13860  1D11  0854               	movf	put_fat@val,w
 13861  1D12  3FC0               	movwi [0]fsr1
 13862  1D13  0855               	movf	put_fat@val+1,w
 13863  1D14  3FC1               	movwi [1]fsr1
 13864  1D15  2D90               	goto	l4106
 13865  1D16                     l4094:	
 13866                           ;ff.c: 909: break;
 13867                           
 13868                           ;ff.c: 908: fs->wflag = 1;
 13869                           
 13870                           
 13871                           ;ff.c: 912: res = move_window(fs, fs->fatbase + (clst / (((UINT)512) / 4)));
 13872  1D16  084F               	movf	put_fat@fs+1,w
 13873  1D17  00C4               	movwf	move_window@fs+1
 13874  1D18  084E               	movf	put_fat@fs,w
 13875  1D19  00C3               	movwf	move_window@fs
 13876  1D1A  084E               	movf	put_fat@fs,w
 13877  1D1B  0086               	movwf	6
 13878  1D1C  084F               	movf	put_fat@fs+1,w
 13879  1D1D  0087               	movwf	7
 13880  1D1E  315E               	addfsr 1,30
 13881  1D1F  3F40               	moviw [0]fsr1
 13882  1D20  00D8               	movwf	??_put_fat
 13883  1D21  3F41               	moviw [1]fsr1
 13884  1D22  00D9               	movwf	??_put_fat+1
 13885  1D23  3F42               	moviw [2]fsr1
 13886  1D24  00DA               	movwf	??_put_fat+2
 13887  1D25  3F43               	moviw [3]fsr1
 13888  1D26  00DB               	movwf	??_put_fat+3
 13889  1D27  0850               	movf	put_fat@clst,w
 13890  1D28  00DC               	movwf	??_put_fat+4
 13891  1D29  0851               	movf	put_fat@clst+1,w
 13892  1D2A  00DD               	movwf	??_put_fat+5
 13893  1D2B  0852               	movf	put_fat@clst+2,w
 13894  1D2C  00DE               	movwf	??_put_fat+6
 13895  1D2D  0853               	movf	put_fat@clst+3,w
 13896  1D2E  00DF               	movwf	??_put_fat+7
 13897  1D2F  3007               	movlw	7
 13898  1D30                     u5065:	
 13899  1D30  36DF               	lsrf	??_put_fat+7,f
 13900  1D31  0CDE               	rrf	??_put_fat+6,f
 13901  1D32  0CDD               	rrf	??_put_fat+5,f
 13902  1D33  0CDC               	rrf	??_put_fat+4,f
 13903  1D34  0B89               	decfsz	9,f
 13904  1D35  2D30               	goto	u5065
 13905  1D36  085C               	movf	??_put_fat+4,w
 13906  1D37  07D8               	addwf	??_put_fat,f
 13907  1D38  085D               	movf	??_put_fat+5,w
 13908  1D39  3DD9               	addwfc	??_put_fat+1,f
 13909  1D3A  085E               	movf	??_put_fat+6,w
 13910  1D3B  3DDA               	addwfc	??_put_fat+2,f
 13911  1D3C  085F               	movf	??_put_fat+7,w
 13912  1D3D  3DDB               	addwfc	??_put_fat+3,f
 13913  1D3E  085B               	movf	??_put_fat+3,w
 13914  1D3F  00C8               	movwf	move_window@sector+3
 13915  1D40  085A               	movf	??_put_fat+2,w
 13916  1D41  00C7               	movwf	move_window@sector+2
 13917  1D42  0859               	movf	??_put_fat+1,w
 13918  1D43  00C6               	movwf	move_window@sector+1
 13919  1D44  0858               	movf	??_put_fat,w
 13920  1D45  00C5               	movwf	move_window@sector
 13921  1D46  31AE  263A  319B   	fcall	_move_window
 13922  1D49  00E0               	movwf	??_put_fat+8
 13923  1D4A  0860               	movf	??_put_fat+8,w
 13924  1D4B  00E9               	movwf	put_fat@res
 13925                           
 13926                           ;ff.c: 913: if (res != FR_OK) break;
 13927  1D4C  0869               	movf	put_fat@res,w
 13928  1D4D  1D03               	btfss	3,2
 13929  1D4E  2DAC               	goto	l4112
 13930                           
 13931                           ;ff.c: 914: p = &fs->win[clst * 4 % ((UINT)512)];
 13932  1D4F  0851               	movf	put_fat@clst+1,w
 13933  1D50  00D9               	movwf	??_put_fat+1
 13934  1D51  0850               	movf	put_fat@clst,w
 13935  1D52  00D8               	movwf	??_put_fat
 13936  1D53  35D8               	lslf	??_put_fat,f
 13937  1D54  0DD9               	rlf	??_put_fat+1,f
 13938  1D55  35D8               	lslf	??_put_fat,f
 13939  1D56  0DD9               	rlf	??_put_fat+1,f
 13940  1D57  30FF               	movlw	255
 13941  1D58  0558               	andwf	??_put_fat,w
 13942  1D59  00DA               	movwf	??_put_fat+2
 13943  1D5A  3001               	movlw	1
 13944  1D5B  0559               	andwf	??_put_fat+1,w
 13945  1D5C  00DB               	movwf	??_put_fat+3
 13946  1D5D  085A               	movf	??_put_fat+2,w
 13947  1D5E  074E               	addwf	put_fat@fs,w
 13948  1D5F  00DC               	movwf	??_put_fat+4
 13949  1D60  085B               	movf	??_put_fat+3,w
 13950  1D61  3D4F               	addwfc	put_fat@fs+1,w
 13951  1D62  00DD               	movwf	??_put_fat+5
 13952  1D63  085C               	movf	??_put_fat+4,w
 13953  1D64  3E2E               	addlw	46
 13954  1D65  00EA               	movwf	put_fat@p
 13955  1D66  3000               	movlw	0
 13956  1D67  3D5D               	addwfc	??_put_fat+5,w
 13957  1D68  00EB               	movwf	put_fat@p+1
 13958                           
 13959                           ;ff.c: 915: val |= (DWORD)(*(DWORD*)(BYTE*)(p)) & 0xF0000000;
 13960  1D69  086A               	movf	put_fat@p,w
 13961  1D6A  0086               	movwf	6
 13962  1D6B  086B               	movf	put_fat@p+1,w
 13963  1D6C  0087               	movwf	7
 13964  1D6D  3000               	movlw	0
 13965  1D6E  0501               	andwf	1,w
 13966  1D6F  00D8               	movwf	??_put_fat
 13967  1D70  3141               	addfsr 1,1
 13968  1D71  3000               	movlw	0
 13969  1D72  0501               	andwf	1,w
 13970  1D73  00D9               	movwf	??_put_fat+1
 13971  1D74  3141               	addfsr 1,1
 13972  1D75  3000               	movlw	0
 13973  1D76  0501               	andwf	1,w
 13974  1D77  00DA               	movwf	??_put_fat+2
 13975  1D78  3141               	addfsr 1,1
 13976  1D79  30F0               	movlw	240
 13977  1D7A  0501               	andwf	1,w
 13978  1D7B  00DB               	movwf	??_put_fat+3
 13979  1D7C  0858               	movf	??_put_fat,w
 13980  1D7D  04D4               	iorwf	put_fat@val,f
 13981  1D7E  0859               	movf	??_put_fat+1,w
 13982  1D7F  04D5               	iorwf	put_fat@val+1,f
 13983  1D80  085A               	movf	??_put_fat+2,w
 13984  1D81  04D6               	iorwf	put_fat@val+2,f
 13985  1D82  085B               	movf	??_put_fat+3,w
 13986  1D83  04D7               	iorwf	put_fat@val+3,f
 13987                           
 13988                           ;ff.c: 916: *(DWORD*)(BYTE*)(p)=(DWORD)(val);
 13989  1D84  086A               	movf	put_fat@p,w
 13990  1D85  0086               	movwf	6
 13991  1D86  086B               	movf	put_fat@p+1,w
 13992  1D87  0087               	movwf	7
 13993  1D88  0854               	movf	put_fat@val,w
 13994  1D89  3FC0               	movwi [0]fsr1
 13995  1D8A  0855               	movf	put_fat@val+1,w
 13996  1D8B  3FC1               	movwi [1]fsr1
 13997  1D8C  0856               	movf	put_fat@val+2,w
 13998  1D8D  3FC2               	movwi [2]fsr1
 13999  1D8E  0857               	movf	put_fat@val+3,w
 14000  1D8F  3FC3               	movwi [3]fsr1
 14001  1D90                     l4106:	
 14002                           
 14003                           ;ff.c: 917: fs->wflag = 1;
 14004  1D90  084E               	movf	put_fat@fs,w
 14005  1D91  3E04               	addlw	4
 14006  1D92  00D8               	movwf	??_put_fat
 14007  1D93  3000               	movlw	0
 14008  1D94  3D4F               	addwfc	put_fat@fs+1,w
 14009  1D95  00D9               	movwf	??_put_fat+1
 14010  1D96  0858               	movf	??_put_fat,w
 14011  1D97  0086               	movwf	6
 14012  1D98  0859               	movf	??_put_fat+1,w
 14013  1D99  0087               	movwf	7
 14014  1D9A  3001               	movlw	1
 14015  1D9B  0081               	movwf	1
 14016                           
 14017                           ;ff.c: 918: break;
 14018  1D9C  2DAC               	goto	l4112
 14019  1D9D                     l4110:	
 14020  1D9D  084E               	movf	put_fat@fs,w
 14021  1D9E  0086               	movwf	6
 14022  1D9F  084F               	movf	put_fat@fs+1,w
 14023  1DA0  0087               	movwf	7
 14024  1DA1  0801               	movf	1,w
 14025                           
 14026                           ; Switch size 1, requested type "simple"
 14027                           ; Number of cases is 3, Range of values is 1 to 3
 14028                           ; switch strategies available:
 14029                           ; Name         Instructions Cycles
 14030                           ; simple_byte           10     6 (average)
 14031                           ; direct_byte           15     9 (fixed)
 14032                           ; jumptable            263     9 (fixed)
 14033                           ;	Chosen strategy is simple_byte
 14034  1DA2  3A01               	xorlw	1	; case 1
 14035  1DA3  1903               	skipnz
 14036  1DA4  2BB8               	goto	l4040
 14037  1DA5  3A03               	xorlw	3	; case 2
 14038  1DA6  1903               	skipnz
 14039  1DA7  2CC0               	goto	l4082
 14040  1DA8  3A01               	xorlw	1	; case 3
 14041  1DA9  1903               	skipnz
 14042  1DAA  2D16               	goto	l4094
 14043  1DAB  2BB3               	goto	l4038
 14044  1DAC                     l4112:	
 14045                           
 14046                           ;ff.c: 923: };ff.c: 925: return res;
 14047  1DAC  0869               	movf	put_fat@res,w
 14048  1DAD  0008               	return
 14049  1DAE                     __end_of_put_fat:	
 14050                           
 14051                           	psect	text26
 14052  2622                     __ptext26:	
 14053 ;; *************** function _get_fat *****************
 14054 ;; Defined at:
 14055 ;;		line 818 in file "ff.c"
 14056 ;; Parameters:    Size  Location     Type
 14057 ;;  fs              2   46[BANK0 ] PTR struct .
 14058 ;;		 -> NULL(0), FatFs(558), 
 14059 ;;  clst            4   48[BANK0 ] unsigned long 
 14060 ;; Auto vars:     Size  Location     Type
 14061 ;;  val             4   64[BANK0 ] unsigned long 
 14062 ;;  bc              2   72[BANK0 ] unsigned int 
 14063 ;;  p               2   70[BANK0 ] PTR unsigned char 
 14064 ;;		 -> FatFs.win(512), NULL(0), FatFs(558), 
 14065 ;;  wc              2   68[BANK0 ] unsigned int 
 14066 ;; Return value:  Size  Location     Type
 14067 ;;                  4   46[BANK0 ] unsigned long 
 14068 ;; Registers used:
 14069 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14070 ;; Tracked objects:
 14071 ;;		On entry : 1F/0
 14072 ;;		On exit  : 1F/0
 14073 ;;		Unchanged: 0/0
 14074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14075 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14076 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14077 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14078 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14079 ;;Total ram usage:       28 bytes
 14080 ;; Hardware stack levels used:    1
 14081 ;; Hardware stack levels required when called:    8
 14082 ;; This function calls:
 14083 ;;		_move_window
 14084 ;; This function is called by:
 14085 ;;		_remove_chain
 14086 ;;		_create_chain
 14087 ;;		_dir_sdi
 14088 ;;		_dir_next
 14089 ;;		_f_lseek
 14090 ;; This function uses a non-reentrant model
 14091 ;;
 14092                           
 14093                           
 14094                           ;psect for function _get_fat
 14095  2622                     _get_fat:	
 14096                           
 14097                           ;ff.c: 823: UINT wc, bc;;ff.c: 824: BYTE *p;;ff.c: 825: DWORD val;;ff.c: 828: if (clst <
      +                           2 || clst >= fs->n_fatent) {
 14098                           
 14099                           ;incstack = 0
 14100                           ; Regs used in _get_fat: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14101  2622  0853               	movf	get_fat@clst+3,w
 14102  2623  1D03               	btfss	3,2
 14103  2624  2E2F               	goto	l3978
 14104  2625  0852               	movf	get_fat@clst+2,w
 14105  2626  1D03               	btfss	3,2
 14106  2627  2E2F               	goto	l3978
 14107  2628  0851               	movf	get_fat@clst+1,w
 14108  2629  1D03               	btfss	3,2
 14109  262A  2E2F               	goto	l3978
 14110  262B  3002               	movlw	2
 14111  262C  0250               	subwf	get_fat@clst,w
 14112  262D  1C03               	btfss	3,0
 14113  262E  2E4C               	goto	l3980
 14114  262F                     l3978:	
 14115  262F  084E               	movf	get_fat@fs,w
 14116  2630  0086               	movwf	6
 14117  2631  084F               	movf	get_fat@fs+1,w
 14118  2632  0087               	movwf	7
 14119  2633  3152               	addfsr 1,18
 14120  2634  3F40               	moviw [0]fsr1
 14121  2635  00D4               	movwf	??_get_fat
 14122  2636  3F41               	moviw [1]fsr1
 14123  2637  00D5               	movwf	??_get_fat+1
 14124  2638  3F42               	moviw [2]fsr1
 14125  2639  00D6               	movwf	??_get_fat+2
 14126  263A  3F43               	moviw [3]fsr1
 14127  263B  00D7               	movwf	??_get_fat+3
 14128  263C  0857               	movf	??_get_fat+3,w
 14129  263D  0253               	subwf	get_fat@clst+3,w
 14130  263E  1D03               	skipz
 14131  263F  2E4A               	goto	u4875
 14132  2640  0856               	movf	??_get_fat+2,w
 14133  2641  0252               	subwf	get_fat@clst+2,w
 14134  2642  1D03               	skipz
 14135  2643  2E4A               	goto	u4875
 14136  2644  0855               	movf	??_get_fat+1,w
 14137  2645  0251               	subwf	get_fat@clst+1,w
 14138  2646  1D03               	skipz
 14139  2647  2E4A               	goto	u4875
 14140  2648  0854               	movf	??_get_fat,w
 14141  2649  0250               	subwf	get_fat@clst,w
 14142  264A                     u4875:	
 14143  264A  1C03               	skipc
 14144  264B  2E55               	goto	l3982
 14145  264C                     l3980:	
 14146                           
 14147                           ;ff.c: 829: val = 1;
 14148  264C  3000               	movlw	0
 14149  264D  00E3               	movwf	get_fat@val+3
 14150  264E  3000               	movlw	0
 14151  264F  00E2               	movwf	get_fat@val+2
 14152  2650  3000               	movlw	0
 14153  2651  00E1               	movwf	get_fat@val+1
 14154  2652  3001               	movlw	1
 14155  2653  00E0               	movwf	get_fat@val
 14156                           
 14157                           ;ff.c: 831: } else {
 14158  2654  2FF7               	goto	l4030
 14159  2655                     l3982:	
 14160                           
 14161                           ;ff.c: 832: val = 0xFFFFFFFF;
 14162  2655  30FF               	movlw	255
 14163  2656  00E3               	movwf	get_fat@val+3
 14164  2657  30FF               	movlw	255
 14165  2658  00E2               	movwf	get_fat@val+2
 14166  2659  30FF               	movlw	255
 14167  265A  00E1               	movwf	get_fat@val+1
 14168  265B  30FF               	movlw	255
 14169  265C  00E0               	movwf	get_fat@val
 14170                           
 14171                           ;ff.c: 834: switch (fs->fs_type) {
 14172  265D  2FE8               	goto	l4028
 14173  265E                     l3984:	
 14174                           
 14175                           ;ff.c: 836: bc = (UINT)clst; bc += bc / 2;
 14176  265E  0851               	movf	get_fat@clst+1,w
 14177  265F  00E9               	movwf	get_fat@bc+1
 14178  2660  0850               	movf	get_fat@clst,w
 14179  2661  00E8               	movwf	get_fat@bc
 14180  2662  0869               	movf	get_fat@bc+1,w
 14181  2663  00D5               	movwf	??_get_fat+1
 14182  2664  0868               	movf	get_fat@bc,w
 14183  2665  00D4               	movwf	??_get_fat
 14184  2666  36D5               	lsrf	??_get_fat+1,f
 14185  2667  0CD4               	rrf	??_get_fat,f
 14186  2668  0854               	movf	??_get_fat,w
 14187  2669  07E8               	addwf	get_fat@bc,f
 14188  266A  0855               	movf	??_get_fat+1,w
 14189  266B  3DE9               	addwfc	get_fat@bc+1,f
 14190                           
 14191                           ;ff.c: 837: if (move_window(fs, fs->fatbase + (bc / ((UINT)512))) != FR_OK) break;
 14192  266C  084F               	movf	get_fat@fs+1,w
 14193  266D  00C4               	movwf	move_window@fs+1
 14194  266E  084E               	movf	get_fat@fs,w
 14195  266F  00C3               	movwf	move_window@fs
 14196  2670  084E               	movf	get_fat@fs,w
 14197  2671  0086               	movwf	6
 14198  2672  084F               	movf	get_fat@fs+1,w
 14199  2673  0087               	movwf	7
 14200  2674  315E               	addfsr 1,30
 14201  2675  3F40               	moviw [0]fsr1
 14202  2676  00D4               	movwf	??_get_fat
 14203  2677  3F41               	moviw [1]fsr1
 14204  2678  00D5               	movwf	??_get_fat+1
 14205  2679  3F42               	moviw [2]fsr1
 14206  267A  00D6               	movwf	??_get_fat+2
 14207  267B  3F43               	moviw [3]fsr1
 14208  267C  00D7               	movwf	??_get_fat+3
 14209  267D  0869               	movf	get_fat@bc+1,w
 14210  267E  00D9               	movwf	??_get_fat+5
 14211  267F  0868               	movf	get_fat@bc,w
 14212  2680  00D8               	movwf	??_get_fat+4
 14213  2681  3009               	movlw	9
 14214  2682                     u4885:	
 14215  2682  36D9               	lsrf	??_get_fat+5,f
 14216  2683  0CD8               	rrf	??_get_fat+4,f
 14217  2684  0B89               	decfsz	9,f
 14218  2685  2E82               	goto	u4885
 14219  2686  0858               	movf	??_get_fat+4,w
 14220  2687  00DA               	movwf	??_get_fat+6
 14221  2688  0859               	movf	??_get_fat+5,w
 14222  2689  00DB               	movwf	??_get_fat+7
 14223  268A  01DC               	clrf	??_get_fat+8
 14224  268B  01DD               	clrf	??_get_fat+9
 14225  268C  085A               	movf	??_get_fat+6,w
 14226  268D  07D4               	addwf	??_get_fat,f
 14227  268E  085B               	movf	??_get_fat+7,w
 14228  268F  3DD5               	addwfc	??_get_fat+1,f
 14229  2690  085C               	movf	??_get_fat+8,w
 14230  2691  3DD6               	addwfc	??_get_fat+2,f
 14231  2692  085D               	movf	??_get_fat+9,w
 14232  2693  3DD7               	addwfc	??_get_fat+3,f
 14233  2694  0857               	movf	??_get_fat+3,w
 14234  2695  00C8               	movwf	move_window@sector+3
 14235  2696  0856               	movf	??_get_fat+2,w
 14236  2697  00C7               	movwf	move_window@sector+2
 14237  2698  0855               	movf	??_get_fat+1,w
 14238  2699  00C6               	movwf	move_window@sector+1
 14239  269A  0854               	movf	??_get_fat,w
 14240  269B  00C5               	movwf	move_window@sector
 14241  269C  31AE  263A  31A6   	fcall	_move_window
 14242  269F  3A00               	xorlw	0
 14243  26A0  1D03               	btfss	3,2
 14244  26A1  2FF7               	goto	l4030
 14245                           
 14246                           ;ff.c: 838: wc = fs->win[bc++ % ((UINT)512)];
 14247  26A2  30FF               	movlw	255
 14248  26A3  0568               	andwf	get_fat@bc,w
 14249  26A4  00D4               	movwf	??_get_fat
 14250  26A5  3001               	movlw	1
 14251  26A6  0569               	andwf	get_fat@bc+1,w
 14252  26A7  00D5               	movwf	??_get_fat+1
 14253  26A8  0854               	movf	??_get_fat,w
 14254  26A9  074E               	addwf	get_fat@fs,w
 14255  26AA  00D6               	movwf	??_get_fat+2
 14256  26AB  0855               	movf	??_get_fat+1,w
 14257  26AC  3D4F               	addwfc	get_fat@fs+1,w
 14258  26AD  00D7               	movwf	??_get_fat+3
 14259  26AE  0856               	movf	??_get_fat+2,w
 14260  26AF  3E2E               	addlw	46
 14261  26B0  0086               	movwf	6
 14262  26B1  3000               	movlw	0
 14263  26B2  3D57               	addwfc	??_get_fat+3,w
 14264  26B3  0087               	movwf	7
 14265  26B4  0801               	movf	1,w
 14266  26B5  00D8               	movwf	??_get_fat+4
 14267  26B6  01D9               	clrf	??_get_fat+5
 14268  26B7  0858               	movf	??_get_fat+4,w
 14269  26B8  00E4               	movwf	get_fat@wc
 14270  26B9  0859               	movf	??_get_fat+5,w
 14271  26BA  00E5               	movwf	get_fat@wc+1
 14272  26BB  3001               	movlw	1
 14273  26BC  07E8               	addwf	get_fat@bc,f
 14274  26BD  3000               	movlw	0
 14275  26BE  3DE9               	addwfc	get_fat@bc+1,f
 14276                           
 14277                           ;ff.c: 839: if (move_window(fs, fs->fatbase + (bc / ((UINT)512))) != FR_OK) break;
 14278  26BF  084F               	movf	get_fat@fs+1,w
 14279  26C0  00C4               	movwf	move_window@fs+1
 14280  26C1  084E               	movf	get_fat@fs,w
 14281  26C2  00C3               	movwf	move_window@fs
 14282  26C3  084E               	movf	get_fat@fs,w
 14283  26C4  0086               	movwf	6
 14284  26C5  084F               	movf	get_fat@fs+1,w
 14285  26C6  0087               	movwf	7
 14286  26C7  315E               	addfsr 1,30
 14287  26C8  3F40               	moviw [0]fsr1
 14288  26C9  00D4               	movwf	??_get_fat
 14289  26CA  3F41               	moviw [1]fsr1
 14290  26CB  00D5               	movwf	??_get_fat+1
 14291  26CC  3F42               	moviw [2]fsr1
 14292  26CD  00D6               	movwf	??_get_fat+2
 14293  26CE  3F43               	moviw [3]fsr1
 14294  26CF  00D7               	movwf	??_get_fat+3
 14295  26D0  0869               	movf	get_fat@bc+1,w
 14296  26D1  00D9               	movwf	??_get_fat+5
 14297  26D2  0868               	movf	get_fat@bc,w
 14298  26D3  00D8               	movwf	??_get_fat+4
 14299  26D4  3009               	movlw	9
 14300  26D5                     u4905:	
 14301  26D5  36D9               	lsrf	??_get_fat+5,f
 14302  26D6  0CD8               	rrf	??_get_fat+4,f
 14303  26D7  0B89               	decfsz	9,f
 14304  26D8  2ED5               	goto	u4905
 14305  26D9  0858               	movf	??_get_fat+4,w
 14306  26DA  00DA               	movwf	??_get_fat+6
 14307  26DB  0859               	movf	??_get_fat+5,w
 14308  26DC  00DB               	movwf	??_get_fat+7
 14309  26DD  01DC               	clrf	??_get_fat+8
 14310  26DE  01DD               	clrf	??_get_fat+9
 14311  26DF  085A               	movf	??_get_fat+6,w
 14312  26E0  07D4               	addwf	??_get_fat,f
 14313  26E1  085B               	movf	??_get_fat+7,w
 14314  26E2  3DD5               	addwfc	??_get_fat+1,f
 14315  26E3  085C               	movf	??_get_fat+8,w
 14316  26E4  3DD6               	addwfc	??_get_fat+2,f
 14317  26E5  085D               	movf	??_get_fat+9,w
 14318  26E6  3DD7               	addwfc	??_get_fat+3,f
 14319  26E7  0857               	movf	??_get_fat+3,w
 14320  26E8  00C8               	movwf	move_window@sector+3
 14321  26E9  0856               	movf	??_get_fat+2,w
 14322  26EA  00C7               	movwf	move_window@sector+2
 14323  26EB  0855               	movf	??_get_fat+1,w
 14324  26EC  00C6               	movwf	move_window@sector+1
 14325  26ED  0854               	movf	??_get_fat,w
 14326  26EE  00C5               	movwf	move_window@sector
 14327  26EF  31AE  263A  31A6   	fcall	_move_window
 14328  26F2  3A00               	xorlw	0
 14329  26F3  1D03               	btfss	3,2
 14330  26F4  2FF7               	goto	l4030
 14331                           
 14332                           ;ff.c: 840: wc |= fs->win[bc % ((UINT)512)] << 8;
 14333  26F5  30FF               	movlw	255
 14334  26F6  0568               	andwf	get_fat@bc,w
 14335  26F7  00D4               	movwf	??_get_fat
 14336  26F8  3001               	movlw	1
 14337  26F9  0569               	andwf	get_fat@bc+1,w
 14338  26FA  00D5               	movwf	??_get_fat+1
 14339  26FB  0854               	movf	??_get_fat,w
 14340  26FC  074E               	addwf	get_fat@fs,w
 14341  26FD  00D6               	movwf	??_get_fat+2
 14342  26FE  0855               	movf	??_get_fat+1,w
 14343  26FF  3D4F               	addwfc	get_fat@fs+1,w
 14344  2700  00D7               	movwf	??_get_fat+3
 14345  2701  0856               	movf	??_get_fat+2,w
 14346  2702  3E2E               	addlw	46
 14347  2703  0086               	movwf	6
 14348  2704  3000               	movlw	0
 14349  2705  3D57               	addwfc	??_get_fat+3,w
 14350  2706  0087               	movwf	7
 14351  2707  0801               	movf	1,w
 14352  2708  00D8               	movwf	??_get_fat+4
 14353  2709  01D9               	clrf	??_get_fat+5
 14354  270A  0858               	movf	??_get_fat+4,w
 14355  270B  00D9               	movwf	??_get_fat+5
 14356  270C  01D8               	clrf	??_get_fat+4
 14357  270D  0858               	movf	??_get_fat+4,w
 14358  270E  04E4               	iorwf	get_fat@wc,f
 14359  270F  0859               	movf	??_get_fat+5,w
 14360  2710  04E5               	iorwf	get_fat@wc+1,f
 14361                           
 14362                           ;ff.c: 841: val = clst & 1 ? wc >> 4 : (wc & 0xFFF);
 14363  2711  1850               	btfsc	get_fat@clst,0
 14364  2712  2F19               	goto	l4006
 14365  2713  30FF               	movlw	255
 14366  2714  0564               	andwf	get_fat@wc,w
 14367  2715  00DE               	movwf	_get_fat$586
 14368  2716  300F               	movlw	15
 14369  2717  0565               	andwf	get_fat@wc+1,w
 14370  2718  2F21               	goto	L12
 14371  2719                     l4006:	
 14372  2719  0E64               	swapf	get_fat@wc,w
 14373  271A  390F               	andlw	15
 14374  271B  00DE               	movwf	_get_fat$586
 14375  271C  0E65               	swapf	get_fat@wc+1,w
 14376  271D  39F0               	andlw	240
 14377  271E  04DE               	iorwf	_get_fat$586,f
 14378  271F  0E65               	swapf	get_fat@wc+1,w
 14379  2720  390F               	andlw	15
 14380  2721                     L12:	
 14381  2721  00DF               	movwf	_get_fat$586+1
 14382  2722  085E               	movf	_get_fat$586,w
 14383  2723  00E0               	movwf	get_fat@val
 14384  2724  085F               	movf	_get_fat$586+1,w
 14385  2725  2F7B               	goto	L13
 14386  2726                     l4010:	
 14387                           ;ff.c: 842: break;
 14388                           
 14389                           
 14390                           ;ff.c: 845: if (move_window(fs, fs->fatbase + (clst / (((UINT)512) / 2))) != FR_OK) brea
      +                          k;
 14391  2726  084F               	movf	get_fat@fs+1,w
 14392  2727  00C4               	movwf	move_window@fs+1
 14393  2728  084E               	movf	get_fat@fs,w
 14394  2729  00C3               	movwf	move_window@fs
 14395  272A  084E               	movf	get_fat@fs,w
 14396  272B  0086               	movwf	6
 14397  272C  084F               	movf	get_fat@fs+1,w
 14398  272D  0087               	movwf	7
 14399  272E  315E               	addfsr 1,30
 14400  272F  3F40               	moviw [0]fsr1
 14401  2730  00D4               	movwf	??_get_fat
 14402  2731  3F41               	moviw [1]fsr1
 14403  2732  00D5               	movwf	??_get_fat+1
 14404  2733  3F42               	moviw [2]fsr1
 14405  2734  00D6               	movwf	??_get_fat+2
 14406  2735  3F43               	moviw [3]fsr1
 14407  2736  00D7               	movwf	??_get_fat+3
 14408  2737  3001               	movlw	1
 14409  2738  3E50               	addlw	(low (get_fat@clst| 0))& (0+255)
 14410  2739  0086               	movwf	6
 14411  273A  0187               	clrf	7
 14412  273B  3F40               	moviw [0]fsr1
 14413  273C  00D8               	movwf	??_get_fat+4
 14414  273D  3F41               	moviw [1]fsr1
 14415  273E  00D9               	movwf	??_get_fat+5
 14416  273F  3F42               	moviw [2]fsr1
 14417  2740  00DA               	movwf	??_get_fat+6
 14418  2741  01DB               	clrf	??_get_fat+7
 14419  2742  0858               	movf	??_get_fat+4,w
 14420  2743  07D4               	addwf	??_get_fat,f
 14421  2744  0859               	movf	??_get_fat+5,w
 14422  2745  3DD5               	addwfc	??_get_fat+1,f
 14423  2746  085A               	movf	??_get_fat+6,w
 14424  2747  3DD6               	addwfc	??_get_fat+2,f
 14425  2748  085B               	movf	??_get_fat+7,w
 14426  2749  3DD7               	addwfc	??_get_fat+3,f
 14427  274A  0857               	movf	??_get_fat+3,w
 14428  274B  00C8               	movwf	move_window@sector+3
 14429  274C  0856               	movf	??_get_fat+2,w
 14430  274D  00C7               	movwf	move_window@sector+2
 14431  274E  0855               	movf	??_get_fat+1,w
 14432  274F  00C6               	movwf	move_window@sector+1
 14433  2750  0854               	movf	??_get_fat,w
 14434  2751  00C5               	movwf	move_window@sector
 14435  2752  31AE  263A  31A6   	fcall	_move_window
 14436  2755  3A00               	xorlw	0
 14437  2756  1D03               	btfss	3,2
 14438  2757  2FF7               	goto	l4030
 14439                           
 14440                           ;ff.c: 846: p = &fs->win[clst * 2 % ((UINT)512)];
 14441  2758  0851               	movf	get_fat@clst+1,w
 14442  2759  00D5               	movwf	??_get_fat+1
 14443  275A  0850               	movf	get_fat@clst,w
 14444  275B  00D4               	movwf	??_get_fat
 14445  275C  35D4               	lslf	??_get_fat,f
 14446  275D  0DD5               	rlf	??_get_fat+1,f
 14447  275E  30FF               	movlw	255
 14448  275F  0554               	andwf	??_get_fat,w
 14449  2760  00D6               	movwf	??_get_fat+2
 14450  2761  3001               	movlw	1
 14451  2762  0555               	andwf	??_get_fat+1,w
 14452  2763  00D7               	movwf	??_get_fat+3
 14453  2764  0856               	movf	??_get_fat+2,w
 14454  2765  074E               	addwf	get_fat@fs,w
 14455  2766  00D8               	movwf	??_get_fat+4
 14456  2767  0857               	movf	??_get_fat+3,w
 14457  2768  3D4F               	addwfc	get_fat@fs+1,w
 14458  2769  00D9               	movwf	??_get_fat+5
 14459  276A  0858               	movf	??_get_fat+4,w
 14460  276B  3E2E               	addlw	46
 14461  276C  00E6               	movwf	get_fat@p
 14462  276D  3000               	movlw	0
 14463  276E  3D59               	addwfc	??_get_fat+5,w
 14464  276F  00E7               	movwf	get_fat@p+1
 14465                           
 14466                           ;ff.c: 847: val = (WORD)(*(WORD*)(BYTE*)(p));
 14467  2770  0866               	movf	get_fat@p,w
 14468  2771  0086               	movwf	6
 14469  2772  0867               	movf	get_fat@p+1,w
 14470  2773  0087               	movwf	7
 14471  2774  3F40               	moviw [0]fsr1
 14472  2775  00D4               	movwf	??_get_fat
 14473  2776  3F41               	moviw [1]fsr1
 14474  2777  00D5               	movwf	??_get_fat+1
 14475  2778  0854               	movf	??_get_fat,w
 14476  2779  00E0               	movwf	get_fat@val
 14477  277A  0855               	movf	??_get_fat+1,w
 14478  277B                     L13:	
 14479  277B  00E1               	movwf	get_fat@val+1
 14480  277C  01E2               	clrf	get_fat@val+2
 14481  277D  01E3               	clrf	get_fat@val+3
 14482                           
 14483                           ;ff.c: 848: break;
 14484  277E  2FF7               	goto	l4030
 14485  277F                     l4018:	
 14486                           
 14487                           ;ff.c: 851: if (move_window(fs, fs->fatbase + (clst / (((UINT)512) / 4))) != FR_OK) brea
      +                          k;
 14488  277F  084F               	movf	get_fat@fs+1,w
 14489  2780  00C4               	movwf	move_window@fs+1
 14490  2781  084E               	movf	get_fat@fs,w
 14491  2782  00C3               	movwf	move_window@fs
 14492  2783  084E               	movf	get_fat@fs,w
 14493  2784  0086               	movwf	6
 14494  2785  084F               	movf	get_fat@fs+1,w
 14495  2786  0087               	movwf	7
 14496  2787  315E               	addfsr 1,30
 14497  2788  3F40               	moviw [0]fsr1
 14498  2789  00D4               	movwf	??_get_fat
 14499  278A  3F41               	moviw [1]fsr1
 14500  278B  00D5               	movwf	??_get_fat+1
 14501  278C  3F42               	moviw [2]fsr1
 14502  278D  00D6               	movwf	??_get_fat+2
 14503  278E  3F43               	moviw [3]fsr1
 14504  278F  00D7               	movwf	??_get_fat+3
 14505  2790  0850               	movf	get_fat@clst,w
 14506  2791  00D8               	movwf	??_get_fat+4
 14507  2792  0851               	movf	get_fat@clst+1,w
 14508  2793  00D9               	movwf	??_get_fat+5
 14509  2794  0852               	movf	get_fat@clst+2,w
 14510  2795  00DA               	movwf	??_get_fat+6
 14511  2796  0853               	movf	get_fat@clst+3,w
 14512  2797  00DB               	movwf	??_get_fat+7
 14513  2798  3007               	movlw	7
 14514  2799                     u4945:	
 14515  2799  36DB               	lsrf	??_get_fat+7,f
 14516  279A  0CDA               	rrf	??_get_fat+6,f
 14517  279B  0CD9               	rrf	??_get_fat+5,f
 14518  279C  0CD8               	rrf	??_get_fat+4,f
 14519  279D  0B89               	decfsz	9,f
 14520  279E  2F99               	goto	u4945
 14521  279F  0858               	movf	??_get_fat+4,w
 14522  27A0  07D4               	addwf	??_get_fat,f
 14523  27A1  0859               	movf	??_get_fat+5,w
 14524  27A2  3DD5               	addwfc	??_get_fat+1,f
 14525  27A3  085A               	movf	??_get_fat+6,w
 14526  27A4  3DD6               	addwfc	??_get_fat+2,f
 14527  27A5  085B               	movf	??_get_fat+7,w
 14528  27A6  3DD7               	addwfc	??_get_fat+3,f
 14529  27A7  0857               	movf	??_get_fat+3,w
 14530  27A8  00C8               	movwf	move_window@sector+3
 14531  27A9  0856               	movf	??_get_fat+2,w
 14532  27AA  00C7               	movwf	move_window@sector+2
 14533  27AB  0855               	movf	??_get_fat+1,w
 14534  27AC  00C6               	movwf	move_window@sector+1
 14535  27AD  0854               	movf	??_get_fat,w
 14536  27AE  00C5               	movwf	move_window@sector
 14537  27AF  31AE  263A  31A6   	fcall	_move_window
 14538  27B2  3A00               	xorlw	0
 14539  27B3  1D03               	btfss	3,2
 14540  27B4  2FF7               	goto	l4030
 14541                           
 14542                           ;ff.c: 852: p = &fs->win[clst * 4 % ((UINT)512)];
 14543  27B5  0851               	movf	get_fat@clst+1,w
 14544  27B6  00D5               	movwf	??_get_fat+1
 14545  27B7  0850               	movf	get_fat@clst,w
 14546  27B8  00D4               	movwf	??_get_fat
 14547  27B9  35D4               	lslf	??_get_fat,f
 14548  27BA  0DD5               	rlf	??_get_fat+1,f
 14549  27BB  35D4               	lslf	??_get_fat,f
 14550  27BC  0DD5               	rlf	??_get_fat+1,f
 14551  27BD  30FF               	movlw	255
 14552  27BE  0554               	andwf	??_get_fat,w
 14553  27BF  00D6               	movwf	??_get_fat+2
 14554  27C0  3001               	movlw	1
 14555  27C1  0555               	andwf	??_get_fat+1,w
 14556  27C2  00D7               	movwf	??_get_fat+3
 14557  27C3  0856               	movf	??_get_fat+2,w
 14558  27C4  074E               	addwf	get_fat@fs,w
 14559  27C5  00D8               	movwf	??_get_fat+4
 14560  27C6  0857               	movf	??_get_fat+3,w
 14561  27C7  3D4F               	addwfc	get_fat@fs+1,w
 14562  27C8  00D9               	movwf	??_get_fat+5
 14563  27C9  0858               	movf	??_get_fat+4,w
 14564  27CA  3E2E               	addlw	46
 14565  27CB  00E6               	movwf	get_fat@p
 14566  27CC  3000               	movlw	0
 14567  27CD  3D59               	addwfc	??_get_fat+5,w
 14568  27CE  00E7               	movwf	get_fat@p+1
 14569                           
 14570                           ;ff.c: 853: val = (DWORD)(*(DWORD*)(BYTE*)(p)) & 0x0FFFFFFF;
 14571  27CF  0866               	movf	get_fat@p,w
 14572  27D0  0086               	movwf	6
 14573  27D1  0867               	movf	get_fat@p+1,w
 14574  27D2  0087               	movwf	7
 14575  27D3  3F40               	moviw [0]fsr1
 14576  27D4  00D4               	movwf	??_get_fat
 14577  27D5  3F41               	moviw [1]fsr1
 14578  27D6  00D5               	movwf	??_get_fat+1
 14579  27D7  3F42               	moviw [2]fsr1
 14580  27D8  00D6               	movwf	??_get_fat+2
 14581  27D9  3F43               	moviw [3]fsr1
 14582  27DA  00D7               	movwf	??_get_fat+3
 14583  27DB  30FF               	movlw	255
 14584  27DC  0554               	andwf	??_get_fat,w
 14585  27DD  00E0               	movwf	get_fat@val
 14586  27DE  30FF               	movlw	255
 14587  27DF  0555               	andwf	??_get_fat+1,w
 14588  27E0  00E1               	movwf	get_fat@val+1
 14589  27E1  30FF               	movlw	255
 14590  27E2  0556               	andwf	??_get_fat+2,w
 14591  27E3  00E2               	movwf	get_fat@val+2
 14592  27E4  300F               	movlw	15
 14593  27E5  0557               	andwf	??_get_fat+3,w
 14594  27E6  00E3               	movwf	get_fat@val+3
 14595                           
 14596                           ;ff.c: 854: break;
 14597  27E7  2FF7               	goto	l4030
 14598  27E8                     l4028:	
 14599  27E8  084E               	movf	get_fat@fs,w
 14600  27E9  0086               	movwf	6
 14601  27EA  084F               	movf	get_fat@fs+1,w
 14602  27EB  0087               	movwf	7
 14603  27EC  0801               	movf	1,w
 14604                           
 14605                           ; Switch size 1, requested type "simple"
 14606                           ; Number of cases is 3, Range of values is 1 to 3
 14607                           ; switch strategies available:
 14608                           ; Name         Instructions Cycles
 14609                           ; simple_byte           10     6 (average)
 14610                           ; direct_byte           15     9 (fixed)
 14611                           ; jumptable            263     9 (fixed)
 14612                           ;	Chosen strategy is simple_byte
 14613  27ED  3A01               	xorlw	1	; case 1
 14614  27EE  1903               	skipnz
 14615  27EF  2E5E               	goto	l3984
 14616  27F0  3A03               	xorlw	3	; case 2
 14617  27F1  1903               	skipnz
 14618  27F2  2F26               	goto	l4010
 14619  27F3  3A01               	xorlw	1	; case 3
 14620  27F4  1903               	skipnz
 14621  27F5  2F7F               	goto	l4018
 14622  27F6  2E4C               	goto	l3980
 14623  27F7                     l4030:	
 14624                           
 14625                           ;ff.c: 859: };ff.c: 861: return val;
 14626  27F7  0863               	movf	get_fat@val+3,w
 14627  27F8  00D1               	movwf	?_get_fat+3
 14628  27F9  0862               	movf	get_fat@val+2,w
 14629  27FA  00D0               	movwf	?_get_fat+2
 14630  27FB  0861               	movf	get_fat@val+1,w
 14631  27FC  00CF               	movwf	?_get_fat+1
 14632  27FD  0860               	movf	get_fat@val,w
 14633  27FE  00CE               	movwf	?_get_fat
 14634  27FF  0008               	return
 14635  2800                     __end_of_get_fat:	
 14636                           
 14637                           	psect	text27
 14638  2F86                     __ptext27:	
 14639 ;; *************** function _clust2sect *****************
 14640 ;; Defined at:
 14641 ;;		line 800 in file "ff.c"
 14642 ;; Parameters:    Size  Location     Type
 14643 ;;  fs              2    0[BANK0 ] PTR struct .
 14644 ;;		 -> NULL(0), FatFs(558), 
 14645 ;;  clst            4    2[BANK0 ] unsigned long 
 14646 ;; Auto vars:     Size  Location     Type
 14647 ;;		None
 14648 ;; Return value:  Size  Location     Type
 14649 ;;                  4    0[BANK0 ] unsigned long 
 14650 ;; Registers used:
 14651 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14652 ;; Tracked objects:
 14653 ;;		On entry : 1F/0
 14654 ;;		On exit  : 1F/0
 14655 ;;		Unchanged: 0/0
 14656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14657 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14659 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14660 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14661 ;;Total ram usage:       14 bytes
 14662 ;; Hardware stack levels used:    1
 14663 ;; Hardware stack levels required when called:    1
 14664 ;; This function calls:
 14665 ;;		___lmul
 14666 ;; This function is called by:
 14667 ;;		_dir_sdi
 14668 ;;		_dir_next
 14669 ;;		_f_write
 14670 ;;		_f_lseek
 14671 ;; This function uses a non-reentrant model
 14672 ;;
 14673                           
 14674                           
 14675                           ;psect for function _clust2sect
 14676  2F86                     _clust2sect:	
 14677                           
 14678                           ;ff.c: 805: clst -= 2;
 14679                           
 14680                           ;incstack = 0
 14681                           ; Regs used in _clust2sect: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14682  2F86  3002               	movlw	2
 14683  2F87  00A6               	movwf	??_clust2sect
 14684  2F88  3000               	movlw	0
 14685  2F89  00A7               	movwf	??_clust2sect+1
 14686  2F8A  3000               	movlw	0
 14687  2F8B  00A8               	movwf	??_clust2sect+2
 14688  2F8C  3000               	movlw	0
 14689  2F8D  00A9               	movwf	??_clust2sect+3
 14690  2F8E  0826               	movf	??_clust2sect,w
 14691  2F8F  02A2               	subwf	clust2sect@clst,f
 14692  2F90  0827               	movf	??_clust2sect+1,w
 14693  2F91  3BA3               	subwfb	clust2sect@clst+1,f
 14694  2F92  0828               	movf	??_clust2sect+2,w
 14695  2F93  3BA4               	subwfb	clust2sect@clst+2,f
 14696  2F94  0829               	movf	??_clust2sect+3,w
 14697  2F95  3BA5               	subwfb	clust2sect@clst+3,f
 14698                           
 14699                           ;ff.c: 806: if (clst >= fs->n_fatent - 2) return 0;
 14700  2F96  30FE               	movlw	254
 14701  2F97  00A6               	movwf	??_clust2sect
 14702  2F98  30FF               	movlw	255
 14703  2F99  00A7               	movwf	??_clust2sect+1
 14704  2F9A  30FF               	movlw	255
 14705  2F9B  00A8               	movwf	??_clust2sect+2
 14706  2F9C  30FF               	movlw	255
 14707  2F9D  00A9               	movwf	??_clust2sect+3
 14708  2F9E  0820               	movf	clust2sect@fs,w
 14709  2F9F  0086               	movwf	6
 14710  2FA0  0821               	movf	clust2sect@fs+1,w
 14711  2FA1  0087               	movwf	7
 14712  2FA2  3152               	addfsr 1,18
 14713  2FA3  3F40               	moviw [0]fsr1
 14714  2FA4  07A6               	addwf	??_clust2sect,f
 14715  2FA5  3F41               	moviw [1]fsr1
 14716  2FA6  3DA7               	addwfc	??_clust2sect+1,f
 14717  2FA7  3F42               	moviw [2]fsr1
 14718  2FA8  3DA8               	addwfc	??_clust2sect+2,f
 14719  2FA9  3F43               	moviw [3]fsr1
 14720  2FAA  3DA9               	addwfc	??_clust2sect+3,f
 14721  2FAB  0829               	movf	??_clust2sect+3,w
 14722  2FAC  0225               	subwf	clust2sect@clst+3,w
 14723  2FAD  1D03               	skipz
 14724  2FAE  2FB9               	goto	u5135
 14725  2FAF  0828               	movf	??_clust2sect+2,w
 14726  2FB0  0224               	subwf	clust2sect@clst+2,w
 14727  2FB1  1D03               	skipz
 14728  2FB2  2FB9               	goto	u5135
 14729  2FB3  0827               	movf	??_clust2sect+1,w
 14730  2FB4  0223               	subwf	clust2sect@clst+1,w
 14731  2FB5  1D03               	skipz
 14732  2FB6  2FB9               	goto	u5135
 14733  2FB7  0826               	movf	??_clust2sect,w
 14734  2FB8  0222               	subwf	clust2sect@clst,w
 14735  2FB9                     u5135:	
 14736  2FB9  1C03               	skipc
 14737  2FBA  2FC4               	goto	l4146
 14738  2FBB  3000               	movlw	0
 14739  2FBC  00A3               	movwf	?_clust2sect+3
 14740  2FBD  3000               	movlw	0
 14741  2FBE  00A2               	movwf	?_clust2sect+2
 14742  2FBF  3000               	movlw	0
 14743  2FC0  00A1               	movwf	?_clust2sect+1
 14744  2FC1  3000               	movlw	0
 14745  2FC2  00A0               	movwf	?_clust2sect
 14746  2FC3  0008               	return
 14747  2FC4                     l4146:	
 14748                           
 14749                           ;ff.c: 807: return clst * fs->csize + fs->database;
 14750  2FC4  0820               	movf	clust2sect@fs,w
 14751  2FC5  3E26               	addlw	38
 14752  2FC6  0086               	movwf	6
 14753  2FC7  3000               	movlw	0
 14754  2FC8  3D21               	addwfc	clust2sect@fs+1,w
 14755  2FC9  0087               	movwf	7
 14756  2FCA  3F40               	moviw [0]fsr1
 14757  2FCB  00A6               	movwf	??_clust2sect
 14758  2FCC  3F41               	moviw [1]fsr1
 14759  2FCD  00A7               	movwf	??_clust2sect+1
 14760  2FCE  3F42               	moviw [2]fsr1
 14761  2FCF  00A8               	movwf	??_clust2sect+2
 14762  2FD0  3F43               	moviw [3]fsr1
 14763  2FD1  00A9               	movwf	??_clust2sect+3
 14764  2FD2  0820               	movf	clust2sect@fs,w
 14765  2FD3  0086               	movwf	6
 14766  2FD4  0821               	movf	clust2sect@fs+1,w
 14767  2FD5  0087               	movwf	7
 14768  2FD6  3142               	addfsr 1,2
 14769  2FD7  0801               	movf	1,w
 14770  2FD8  00AA               	movwf	??_clust2sect+4
 14771  2FD9  01AB               	clrf	??_clust2sect+5
 14772  2FDA  01AC               	clrf	??_clust2sect+6
 14773  2FDB  01AD               	clrf	??_clust2sect+7
 14774  2FDC  082D               	movf	??_clust2sect+7,w
 14775  2FDD  00F3               	movwf	___lmul@multiplier+3
 14776  2FDE  082C               	movf	??_clust2sect+6,w
 14777  2FDF  00F2               	movwf	___lmul@multiplier+2
 14778  2FE0  082B               	movf	??_clust2sect+5,w
 14779  2FE1  00F1               	movwf	___lmul@multiplier+1
 14780  2FE2  082A               	movf	??_clust2sect+4,w
 14781  2FE3  00F0               	movwf	___lmul@multiplier
 14782  2FE4  0825               	movf	clust2sect@clst+3,w
 14783  2FE5  00F7               	movwf	___lmul@multiplicand+3
 14784  2FE6  0824               	movf	clust2sect@clst+2,w
 14785  2FE7  00F6               	movwf	___lmul@multiplicand+2
 14786  2FE8  0823               	movf	clust2sect@clst+1,w
 14787  2FE9  00F5               	movwf	___lmul@multiplicand+1
 14788  2FEA  0822               	movf	clust2sect@clst,w
 14789  2FEB  00F4               	movwf	___lmul@multiplicand
 14790  2FEC  31AB  23B8         	fcall	___lmul
 14791  2FEE  0870               	movf	?___lmul,w
 14792  2FEF  0020               	movlb	0	; select bank0
 14793  2FF0  07A6               	addwf	??_clust2sect,f
 14794  2FF1  0871               	movf	?___lmul+1,w
 14795  2FF2  3DA7               	addwfc	??_clust2sect+1,f
 14796  2FF3  0872               	movf	?___lmul+2,w
 14797  2FF4  3DA8               	addwfc	??_clust2sect+2,f
 14798  2FF5  0873               	movf	?___lmul+3,w
 14799  2FF6  3DA9               	addwfc	??_clust2sect+3,f
 14800  2FF7  0829               	movf	??_clust2sect+3,w
 14801  2FF8  00A3               	movwf	?_clust2sect+3
 14802  2FF9  0828               	movf	??_clust2sect+2,w
 14803  2FFA  00A2               	movwf	?_clust2sect+2
 14804  2FFB  0827               	movf	??_clust2sect+1,w
 14805  2FFC  00A1               	movwf	?_clust2sect+1
 14806  2FFD  0826               	movf	??_clust2sect,w
 14807  2FFE  00A0               	movwf	?_clust2sect
 14808  2FFF  0008               	return
 14809  3000                     __end_of_clust2sect:	
 14810                           
 14811                           	psect	text28
 14812  2BB8                     __ptext28:	
 14813 ;; *************** function ___lmul *****************
 14814 ;; Defined at:
 14815 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul32.c"
 14816 ;; Parameters:    Size  Location     Type
 14817 ;;  multiplier      4    0[COMMON] unsigned long 
 14818 ;;  multiplicand    4    4[COMMON] unsigned long 
 14819 ;; Auto vars:     Size  Location     Type
 14820 ;;  product         4    8[COMMON] unsigned long 
 14821 ;; Return value:  Size  Location     Type
 14822 ;;                  4    0[COMMON] unsigned long 
 14823 ;; Registers used:
 14824 ;;		wreg, status,2, status,0
 14825 ;; Tracked objects:
 14826 ;;		On entry : 1E/1
 14827 ;;		On exit  : 1E/0
 14828 ;;		Unchanged: 1E/0
 14829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14830 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14831 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14833 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14834 ;;Total ram usage:       12 bytes
 14835 ;; Hardware stack levels used:    1
 14836 ;; This function calls:
 14837 ;;		Nothing
 14838 ;; This function is called by:
 14839 ;;		_clust2sect
 14840 ;;		_find_volume
 14841 ;; This function uses a non-reentrant model
 14842 ;;
 14843                           
 14844                           
 14845                           ;psect for function ___lmul
 14846  2BB8                     ___lmul:	
 14847                           
 14848                           ;incstack = 0
 14849                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 14850  2BB8  3000               	movlw	0
 14851  2BB9  00FB               	movwf	___lmul@product+3
 14852  2BBA  3000               	movlw	0
 14853  2BBB  00FA               	movwf	___lmul@product+2
 14854  2BBC  3000               	movlw	0
 14855  2BBD  00F9               	movwf	___lmul@product+1
 14856  2BBE  3000               	movlw	0
 14857  2BBF  00F8               	movwf	___lmul@product
 14858  2BC0                     l4118:	
 14859  2BC0  1C70               	btfss	___lmul@multiplier,0
 14860  2BC1  2BCA               	goto	l4122
 14861  2BC2  0874               	movf	___lmul@multiplicand,w
 14862  2BC3  07F8               	addwf	___lmul@product,f
 14863  2BC4  0875               	movf	___lmul@multiplicand+1,w
 14864  2BC5  3DF9               	addwfc	___lmul@product+1,f
 14865  2BC6  0876               	movf	___lmul@multiplicand+2,w
 14866  2BC7  3DFA               	addwfc	___lmul@product+2,f
 14867  2BC8  0877               	movf	___lmul@multiplicand+3,w
 14868  2BC9  3DFB               	addwfc	___lmul@product+3,f
 14869  2BCA                     l4122:	
 14870  2BCA  3001               	movlw	1
 14871  2BCB                     u5095:	
 14872  2BCB  35F4               	lslf	___lmul@multiplicand,f
 14873  2BCC  0DF5               	rlf	___lmul@multiplicand+1,f
 14874  2BCD  0DF6               	rlf	___lmul@multiplicand+2,f
 14875  2BCE  0DF7               	rlf	___lmul@multiplicand+3,f
 14876  2BCF  0B89               	decfsz	9,f
 14877  2BD0  2BCB               	goto	u5095
 14878  2BD1  3001               	movlw	1
 14879  2BD2                     u5105:	
 14880  2BD2  36F3               	lsrf	___lmul@multiplier+3,f
 14881  2BD3  0CF2               	rrf	___lmul@multiplier+2,f
 14882  2BD4  0CF1               	rrf	___lmul@multiplier+1,f
 14883  2BD5  0CF0               	rrf	___lmul@multiplier,f
 14884  2BD6  0B89               	decfsz	9,f
 14885  2BD7  2BD2               	goto	u5105
 14886  2BD8  0873               	movf	___lmul@multiplier+3,w
 14887  2BD9  0472               	iorwf	___lmul@multiplier+2,w
 14888  2BDA  0471               	iorwf	___lmul@multiplier+1,w
 14889  2BDB  0470               	iorwf	___lmul@multiplier,w
 14890  2BDC  1D03               	skipz
 14891  2BDD  2BC0               	goto	l4118
 14892  2BDE  087B               	movf	___lmul@product+3,w
 14893  2BDF  00F3               	movwf	?___lmul+3
 14894  2BE0  087A               	movf	___lmul@product+2,w
 14895  2BE1  00F2               	movwf	?___lmul+2
 14896  2BE2  0879               	movf	___lmul@product+1,w
 14897  2BE3  00F1               	movwf	?___lmul+1
 14898  2BE4  0878               	movf	___lmul@product,w
 14899  2BE5  00F0               	movwf	?___lmul
 14900  2BE6  0008               	return
 14901  2BE7                     __end_of___lmul:	
 14902                           
 14903                           	psect	text29
 14904  2CE4                     __ptext29:	
 14905 ;; *************** function ___lldiv *****************
 14906 ;; Defined at:
 14907 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
 14908 ;; Parameters:    Size  Location     Type
 14909 ;;  divisor         4    0[COMMON] unsigned long 
 14910 ;;  dividend        4    4[COMMON] unsigned long 
 14911 ;; Auto vars:     Size  Location     Type
 14912 ;;  quotient        4    9[COMMON] unsigned long 
 14913 ;;  counter         1   13[COMMON] unsigned char 
 14914 ;; Return value:  Size  Location     Type
 14915 ;;                  4    0[COMMON] unsigned long 
 14916 ;; Registers used:
 14917 ;;		wreg, status,2, status,0
 14918 ;; Tracked objects:
 14919 ;;		On entry : 1E/0
 14920 ;;		On exit  : 1E/0
 14921 ;;		Unchanged: 1E/0
 14922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14923 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14924 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14925 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14926 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14927 ;;Total ram usage:       14 bytes
 14928 ;; Hardware stack levels used:    1
 14929 ;; This function calls:
 14930 ;;		Nothing
 14931 ;; This function is called by:
 14932 ;;		_find_volume
 14933 ;;		_f_lseek
 14934 ;; This function uses a non-reentrant model
 14935 ;;
 14936                           
 14937                           
 14938                           ;psect for function ___lldiv
 14939  2CE4                     ___lldiv:	
 14940                           
 14941                           ;incstack = 0
 14942                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 14943  2CE4  3000               	movlw	0
 14944  2CE5  00FC               	movwf	___lldiv@quotient+3
 14945  2CE6  3000               	movlw	0
 14946  2CE7  00FB               	movwf	___lldiv@quotient+2
 14947  2CE8  3000               	movlw	0
 14948  2CE9  00FA               	movwf	___lldiv@quotient+1
 14949  2CEA  3000               	movlw	0
 14950  2CEB  00F9               	movwf	___lldiv@quotient
 14951  2CEC  0873               	movf	___lldiv@divisor+3,w
 14952  2CED  0472               	iorwf	___lldiv@divisor+2,w
 14953  2CEE  0471               	iorwf	___lldiv@divisor+1,w
 14954  2CEF  0470               	iorwf	___lldiv@divisor,w
 14955  2CF0  1903               	skipnz
 14956  2CF1  2D2D               	goto	l5048
 14957  2CF2  01FD               	clrf	___lldiv@counter
 14958  2CF3  0AFD               	incf	___lldiv@counter,f
 14959  2CF4                     l5034:	
 14960  2CF4  1BF3               	btfsc	___lldiv@divisor+3,7
 14961  2CF5  2D02               	goto	l5036
 14962  2CF6  3001               	movlw	1
 14963  2CF7                     u6945:	
 14964  2CF7  35F0               	lslf	___lldiv@divisor,f
 14965  2CF8  0DF1               	rlf	___lldiv@divisor+1,f
 14966  2CF9  0DF2               	rlf	___lldiv@divisor+2,f
 14967  2CFA  0DF3               	rlf	___lldiv@divisor+3,f
 14968  2CFB  0B89               	decfsz	9,f
 14969  2CFC  2CF7               	goto	u6945
 14970  2CFD  3001               	movlw	1
 14971  2CFE  00F8               	movwf	??___lldiv
 14972  2CFF  0878               	movf	??___lldiv,w
 14973  2D00  07FD               	addwf	___lldiv@counter,f
 14974  2D01  2CF4               	goto	l5034
 14975  2D02                     l5036:	
 14976  2D02  3001               	movlw	1
 14977  2D03                     u6965:	
 14978  2D03  35F9               	lslf	___lldiv@quotient,f
 14979  2D04  0DFA               	rlf	___lldiv@quotient+1,f
 14980  2D05  0DFB               	rlf	___lldiv@quotient+2,f
 14981  2D06  0DFC               	rlf	___lldiv@quotient+3,f
 14982  2D07  0B89               	decfsz	9,f
 14983  2D08  2D03               	goto	u6965
 14984  2D09  0873               	movf	___lldiv@divisor+3,w
 14985  2D0A  0277               	subwf	___lldiv@dividend+3,w
 14986  2D0B  1D03               	skipz
 14987  2D0C  2D17               	goto	u6975
 14988  2D0D  0872               	movf	___lldiv@divisor+2,w
 14989  2D0E  0276               	subwf	___lldiv@dividend+2,w
 14990  2D0F  1D03               	skipz
 14991  2D10  2D17               	goto	u6975
 14992  2D11  0871               	movf	___lldiv@divisor+1,w
 14993  2D12  0275               	subwf	___lldiv@dividend+1,w
 14994  2D13  1D03               	skipz
 14995  2D14  2D17               	goto	u6975
 14996  2D15  0870               	movf	___lldiv@divisor,w
 14997  2D16  0274               	subwf	___lldiv@dividend,w
 14998  2D17                     u6975:	
 14999  2D17  1C03               	skipc
 15000  2D18  2D22               	goto	l5044
 15001  2D19  0870               	movf	___lldiv@divisor,w
 15002  2D1A  02F4               	subwf	___lldiv@dividend,f
 15003  2D1B  0871               	movf	___lldiv@divisor+1,w
 15004  2D1C  3BF5               	subwfb	___lldiv@dividend+1,f
 15005  2D1D  0872               	movf	___lldiv@divisor+2,w
 15006  2D1E  3BF6               	subwfb	___lldiv@dividend+2,f
 15007  2D1F  0873               	movf	___lldiv@divisor+3,w
 15008  2D20  3BF7               	subwfb	___lldiv@dividend+3,f
 15009  2D21  1479               	bsf	___lldiv@quotient,0
 15010  2D22                     l5044:	
 15011  2D22  3001               	movlw	1
 15012  2D23                     u6985:	
 15013  2D23  36F3               	lsrf	___lldiv@divisor+3,f
 15014  2D24  0CF2               	rrf	___lldiv@divisor+2,f
 15015  2D25  0CF1               	rrf	___lldiv@divisor+1,f
 15016  2D26  0CF0               	rrf	___lldiv@divisor,f
 15017  2D27  0B89               	decfsz	9,f
 15018  2D28  2D23               	goto	u6985
 15019  2D29  3001               	movlw	1
 15020  2D2A  02FD               	subwf	___lldiv@counter,f
 15021  2D2B  1D03               	btfss	3,2
 15022  2D2C  2D02               	goto	l5036
 15023  2D2D                     l5048:	
 15024  2D2D  087C               	movf	___lldiv@quotient+3,w
 15025  2D2E  00F3               	movwf	?___lldiv+3
 15026  2D2F  087B               	movf	___lldiv@quotient+2,w
 15027  2D30  00F2               	movwf	?___lldiv+2
 15028  2D31  087A               	movf	___lldiv@quotient+1,w
 15029  2D32  00F1               	movwf	?___lldiv+1
 15030  2D33  0879               	movf	___lldiv@quotient,w
 15031  2D34  00F0               	movwf	?___lldiv
 15032  2D35  0008               	return
 15033  2D36                     __end_of___lldiv:	
 15034                           
 15035                           	psect	text30
 15036  2B45                     __ptext30:	
 15037 ;; *************** function _f_close *****************
 15038 ;; Defined at:
 15039 ;;		line 2861 in file "ff.c"
 15040 ;; Parameters:    Size  Location     Type
 15041 ;;  fp              2   64[BANK0 ] PTR struct .
 15042 ;;		 -> Fil(32), 
 15043 ;; Auto vars:     Size  Location     Type
 15044 ;;  res             1   67[BANK0 ] enum E88
 15045 ;; Return value:  Size  Location     Type
 15046 ;;                  1    wreg      enum E5735
 15047 ;; Registers used:
 15048 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15049 ;; Tracked objects:
 15050 ;;		On entry : 1F/0
 15051 ;;		On exit  : 1F/0
 15052 ;;		Unchanged: 0/0
 15053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15054 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15055 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15056 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15057 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15058 ;;Total ram usage:        4 bytes
 15059 ;; Hardware stack levels used:    1
 15060 ;; Hardware stack levels required when called:    9
 15061 ;; This function calls:
 15062 ;;		_f_sync
 15063 ;;		_validate
 15064 ;; This function is called by:
 15065 ;;		_main
 15066 ;; This function uses a non-reentrant model
 15067 ;;
 15068                           
 15069                           
 15070                           ;psect for function _f_close
 15071  2B45                     _f_close:	
 15072                           
 15073                           ;ff.c: 2865: FRESULT res;;ff.c: 2869: res = f_sync(fp);
 15074                           
 15075                           ;incstack = 0
 15076                           ; Regs used in _f_close: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15077  2B45  0861               	movf	f_close@fp+1,w
 15078  2B46  00D4               	movwf	f_sync@fp+1
 15079  2B47  0860               	movf	f_close@fp,w
 15080  2B48  00D3               	movwf	f_sync@fp
 15081  2B49  31A3  23A9  31AB   	fcall	_f_sync
 15082  2B4C  00E2               	movwf	??_f_close
 15083  2B4D  0862               	movf	??_f_close,w
 15084  2B4E  00E3               	movwf	f_close@res
 15085                           
 15086                           ;ff.c: 2870: if (res == FR_OK)
 15087  2B4F  0863               	movf	f_close@res,w
 15088  2B50  1D03               	btfss	3,2
 15089  2B51  0008               	return
 15090                           
 15091                           ;ff.c: 2872: {;ff.c: 2873: res = validate(fp);
 15092  2B52  0861               	movf	f_close@fp+1,w
 15093  2B53  00F2               	movwf	validate@obj+1
 15094  2B54  0860               	movf	f_close@fp,w
 15095  2B55  00F1               	movwf	validate@obj
 15096  2B56  31AD  25E1  31AB   	fcall	_validate
 15097  2B59  0020               	movlb	0	; select bank0
 15098  2B5A  00E2               	movwf	??_f_close
 15099  2B5B  0862               	movf	??_f_close,w
 15100  2B5C  00E3               	movwf	f_close@res
 15101                           
 15102                           ;ff.c: 2874: if (res == FR_OK) {
 15103  2B5D  0863               	movf	f_close@res,w
 15104  2B5E  1D03               	btfss	3,2
 15105  2B5F  0008               	return
 15106                           
 15107                           ;ff.c: 2882: fp->fs = 0;
 15108  2B60  0860               	movf	f_close@fp,w
 15109  2B61  0086               	movwf	6
 15110  2B62  0861               	movf	f_close@fp+1,w
 15111  2B63  0087               	movwf	7
 15112  2B64  3000               	movlw	0
 15113  2B65  3FC0               	movwi [0]fsr1
 15114  2B66  3FC1               	movwi [1]fsr1
 15115  2B67  0008               	return
 15116  2B68                     __end_of_f_close:	
 15117                           
 15118                           	psect	text31
 15119  23A9                     __ptext31:	
 15120 ;; *************** function _f_sync *****************
 15121 ;; Defined at:
 15122 ;;		line 2813 in file "ff.c"
 15123 ;; Parameters:    Size  Location     Type
 15124 ;;  fp              2   51[BANK0 ] PTR struct .
 15125 ;;		 -> Fil(32), 
 15126 ;; Auto vars:     Size  Location     Type
 15127 ;;  tm              4    0        unsigned long 
 15128 ;;  dir             2   62[BANK0 ] PTR unsigned char 
 15129 ;;		 -> NULL(0), FatFs(558), 
 15130 ;;  res             1   61[BANK0 ] enum E88
 15131 ;; Return value:  Size  Location     Type
 15132 ;;                  1    wreg      enum E88
 15133 ;; Registers used:
 15134 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15135 ;; Tracked objects:
 15136 ;;		On entry : 1F/0
 15137 ;;		On exit  : 1F/0
 15138 ;;		Unchanged: 0/0
 15139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15140 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15141 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15142 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15143 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15144 ;;Total ram usage:       13 bytes
 15145 ;; Hardware stack levels used:    1
 15146 ;; Hardware stack levels required when called:    8
 15147 ;; This function calls:
 15148 ;;		_move_window
 15149 ;;		_st_clust
 15150 ;;		_sync_fs
 15151 ;;		_validate
 15152 ;; This function is called by:
 15153 ;;		_f_close
 15154 ;; This function uses a non-reentrant model
 15155 ;;
 15156                           
 15157                           
 15158                           ;psect for function _f_sync
 15159  23A9                     _f_sync:	
 15160                           
 15161                           ;ff.c: 2817: FRESULT res;;ff.c: 2818: DWORD tm;;ff.c: 2819: BYTE *dir;;ff.c: 2822: res =
      +                           validate(fp);
 15162                           
 15163                           ;incstack = 0
 15164                           ; Regs used in _f_sync: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15165  23A9  0854               	movf	f_sync@fp+1,w
 15166  23AA  00F2               	movwf	validate@obj+1
 15167  23AB  0853               	movf	f_sync@fp,w
 15168  23AC  00F1               	movwf	validate@obj
 15169  23AD  31AD  25E1  31A3   	fcall	_validate
 15170  23B0  0020               	movlb	0	; select bank0
 15171  23B1  00D5               	movwf	??_f_sync
 15172  23B2  0855               	movf	??_f_sync,w
 15173  23B3  00DD               	movwf	f_sync@res
 15174                           
 15175                           ;ff.c: 2823: if (res == FR_OK) {
 15176  23B4  085D               	movf	f_sync@res,w
 15177  23B5  1D03               	btfss	3,2
 15178  23B6  2C59               	goto	l5462
 15179                           
 15180                           ;ff.c: 2824: if (fp->flag & 0x20) {
 15181  23B7  0853               	movf	f_sync@fp,w
 15182  23B8  0086               	movwf	6
 15183  23B9  0854               	movf	f_sync@fp+1,w
 15184  23BA  0087               	movwf	7
 15185  23BB  3144               	addfsr 1,4
 15186  23BC  1E81               	btfss	1,5
 15187  23BD  2C59               	goto	l5462
 15188                           
 15189                           ;ff.c: 2833: res = move_window(fp->fs, fp->dir_sect);
 15190  23BE  0853               	movf	f_sync@fp,w
 15191  23BF  0086               	movwf	6
 15192  23C0  0854               	movf	f_sync@fp+1,w
 15193  23C1  0087               	movwf	7
 15194  23C2  3F40               	moviw [0]fsr1
 15195  23C3  00C3               	movwf	move_window@fs
 15196  23C4  3F41               	moviw [1]fsr1
 15197  23C5  00C4               	movwf	move_window@fs+1
 15198  23C6  0853               	movf	f_sync@fp,w
 15199  23C7  0086               	movwf	6
 15200  23C8  0854               	movf	f_sync@fp+1,w
 15201  23C9  0087               	movwf	7
 15202  23CA  315A               	addfsr 1,26
 15203  23CB  3F40               	moviw [0]fsr1
 15204  23CC  00C5               	movwf	move_window@sector
 15205  23CD  3F41               	moviw [1]fsr1
 15206  23CE  00C6               	movwf	move_window@sector+1
 15207  23CF  3F42               	moviw [2]fsr1
 15208  23D0  00C7               	movwf	move_window@sector+2
 15209  23D1  3F43               	moviw [3]fsr1
 15210  23D2  00C8               	movwf	move_window@sector+3
 15211  23D3  31AE  263A  31A3   	fcall	_move_window
 15212  23D6  00D5               	movwf	??_f_sync
 15213  23D7  0855               	movf	??_f_sync,w
 15214  23D8  00DD               	movwf	f_sync@res
 15215                           
 15216                           ;ff.c: 2834: if (res == FR_OK) {
 15217  23D9  085D               	movf	f_sync@res,w
 15218  23DA  1D03               	btfss	3,2
 15219  23DB  2C59               	goto	l5462
 15220                           
 15221                           ;ff.c: 2835: dir = fp->dir_ptr;
 15222  23DC  0853               	movf	f_sync@fp,w
 15223  23DD  0086               	movwf	6
 15224  23DE  0854               	movf	f_sync@fp+1,w
 15225  23DF  0087               	movwf	7
 15226  23E0  315E               	addfsr 1,30
 15227  23E1  3F40               	moviw [0]fsr1
 15228  23E2  00DE               	movwf	f_sync@dir
 15229  23E3  3F41               	moviw [1]fsr1
 15230  23E4  00DF               	movwf	f_sync@dir+1
 15231                           
 15232                           ;ff.c: 2836: dir[11] |= 0x20;
 15233  23E5  085E               	movf	f_sync@dir,w
 15234  23E6  0086               	movwf	6
 15235  23E7  085F               	movf	f_sync@dir+1,w
 15236  23E8  0087               	movwf	7
 15237  23E9  314B               	addfsr 1,11
 15238  23EA  1681               	bsf	1,5
 15239                           
 15240                           ;ff.c: 2837: *(DWORD*)(BYTE*)(dir + 28)=(DWORD)(fp->fsize);
 15241  23EB  0853               	movf	f_sync@fp,w
 15242  23EC  0086               	movwf	6
 15243  23ED  0854               	movf	f_sync@fp+1,w
 15244  23EE  0087               	movwf	7
 15245  23EF  314A               	addfsr 1,10
 15246  23F0  3F40               	moviw [0]fsr1
 15247  23F1  00D5               	movwf	??_f_sync
 15248  23F2  3F41               	moviw [1]fsr1
 15249  23F3  00D6               	movwf	??_f_sync+1
 15250  23F4  3F42               	moviw [2]fsr1
 15251  23F5  00D7               	movwf	??_f_sync+2
 15252  23F6  3F43               	moviw [3]fsr1
 15253  23F7  00D8               	movwf	??_f_sync+3
 15254  23F8  085E               	movf	f_sync@dir,w
 15255  23F9  0086               	movwf	6
 15256  23FA  085F               	movf	f_sync@dir+1,w
 15257  23FB  0087               	movwf	7
 15258  23FC  315C               	addfsr 1,28
 15259  23FD  0855               	movf	??_f_sync,w
 15260  23FE  3FC0               	movwi [0]fsr1
 15261  23FF  0856               	movf	??_f_sync+1,w
 15262  2400  3FC1               	movwi [1]fsr1
 15263  2401  0857               	movf	??_f_sync+2,w
 15264  2402  3FC2               	movwi [2]fsr1
 15265  2403  0858               	movf	??_f_sync+3,w
 15266  2404  3FC3               	movwi [3]fsr1
 15267                           
 15268                           ;ff.c: 2838: st_clust(dir, fp->sclust);
 15269  2405  085F               	movf	f_sync@dir+1,w
 15270  2406  00F1               	movwf	st_clust@dir+1
 15271  2407  085E               	movf	f_sync@dir,w
 15272  2408  00F0               	movwf	st_clust@dir
 15273  2409  0853               	movf	f_sync@fp,w
 15274  240A  0086               	movwf	6
 15275  240B  0854               	movf	f_sync@fp+1,w
 15276  240C  0087               	movwf	7
 15277  240D  314E               	addfsr 1,14
 15278  240E  3F40               	moviw [0]fsr1
 15279  240F  00F2               	movwf	st_clust@cl
 15280  2410  3F41               	moviw [1]fsr1
 15281  2411  00F3               	movwf	st_clust@cl+1
 15282  2412  3F42               	moviw [2]fsr1
 15283  2413  00F4               	movwf	st_clust@cl+2
 15284  2414  3F43               	moviw [3]fsr1
 15285  2415  00F5               	movwf	st_clust@cl+3
 15286  2416  31AA  22DF  31A3   	fcall	_st_clust
 15287                           
 15288                           ;ff.c: 2840: *(DWORD*)(BYTE*)(dir + 22)=(DWORD)(tm);
 15289  2419  0020               	movlb	0	; select bank0
 15290  241A  085E               	movf	f_sync@dir,w
 15291  241B  0086               	movwf	6
 15292  241C  085F               	movf	f_sync@dir+1,w
 15293  241D  0087               	movwf	7
 15294  241E  3156               	addfsr 1,22
 15295  241F  3000               	movlw	0
 15296  2420  3FC0               	movwi [0]fsr1
 15297  2421  3000               	movlw	0
 15298  2422  3FC1               	movwi [1]fsr1
 15299  2423  3021               	movlw	33
 15300  2424  3FC2               	movwi [2]fsr1
 15301  2425  3046               	movlw	70
 15302  2426  3FC3               	movwi [3]fsr1
 15303                           
 15304                           ;ff.c: 2841: *(WORD*)(BYTE*)(dir + 18)=(WORD)(0);
 15305  2427  085E               	movf	f_sync@dir,w
 15306  2428  0086               	movwf	6
 15307  2429  085F               	movf	f_sync@dir+1,w
 15308  242A  0087               	movwf	7
 15309  242B  3152               	addfsr 1,18
 15310  242C  3000               	movlw	0
 15311  242D  3FC0               	movwi [0]fsr1
 15312  242E  3FC1               	movwi [1]fsr1
 15313                           
 15314                           ;ff.c: 2842: fp->flag &= ~0x20;
 15315  242F  30DF               	movlw	223
 15316  2430  00D5               	movwf	??_f_sync
 15317  2431  0853               	movf	f_sync@fp,w
 15318  2432  0086               	movwf	6
 15319  2433  0854               	movf	f_sync@fp+1,w
 15320  2434  0087               	movwf	7
 15321  2435  3144               	addfsr 1,4
 15322  2436  0855               	movf	??_f_sync,w
 15323  2437  0581               	andwf	1,f
 15324                           
 15325                           ;ff.c: 2843: fp->fs->wflag = 1;
 15326  2438  0853               	movf	f_sync@fp,w
 15327  2439  0086               	movwf	6
 15328  243A  0854               	movf	f_sync@fp+1,w
 15329  243B  0087               	movwf	7
 15330  243C  3F40               	moviw [0]fsr1
 15331  243D  00D5               	movwf	??_f_sync
 15332  243E  3F41               	moviw [1]fsr1
 15333  243F  00D6               	movwf	??_f_sync+1
 15334  2440  0855               	movf	??_f_sync,w
 15335  2441  3E04               	addlw	4
 15336  2442  00D7               	movwf	??_f_sync+2
 15337  2443  3000               	movlw	0
 15338  2444  3D56               	addwfc	??_f_sync+1,w
 15339  2445  00D8               	movwf	??_f_sync+3
 15340  2446  0857               	movf	??_f_sync+2,w
 15341  2447  0086               	movwf	6
 15342  2448  0858               	movf	??_f_sync+3,w
 15343  2449  0087               	movwf	7
 15344  244A  3001               	movlw	1
 15345  244B  0081               	movwf	1
 15346                           
 15347                           ;ff.c: 2844: res = sync_fs(fp->fs);
 15348  244C  0853               	movf	f_sync@fp,w
 15349  244D  0086               	movwf	6
 15350  244E  0854               	movf	f_sync@fp+1,w
 15351  244F  0087               	movwf	7
 15352  2450  3F40               	moviw [0]fsr1
 15353  2451  00CC               	movwf	sync_fs@fs
 15354  2452  3F41               	moviw [1]fsr1
 15355  2453  00CD               	movwf	sync_fs@fs+1
 15356  2454  3188  200E         	fcall	_sync_fs
 15357  2456  00D5               	movwf	??_f_sync
 15358  2457  0855               	movf	??_f_sync,w
 15359  2458  00DD               	movwf	f_sync@res
 15360  2459                     l5462:	
 15361                           
 15362                           ;ff.c: 2845: };ff.c: 2846: };ff.c: 2847: };ff.c: 2849: return res;
 15363  2459  085D               	movf	f_sync@res,w
 15364  245A  0008               	return
 15365  245B                     __end_of_f_sync:	
 15366                           
 15367                           	psect	text32
 15368  2DE1                     __ptext32:	
 15369 ;; *************** function _validate *****************
 15370 ;; Defined at:
 15371 ;;		line 2372 in file "ff.c"
 15372 ;; Parameters:    Size  Location     Type
 15373 ;;  obj             2    1[COMMON] PTR void 
 15374 ;;		 -> Fil(32), 
 15375 ;; Auto vars:     Size  Location     Type
 15376 ;;  fil             2    9[COMMON] PTR struct .
 15377 ;;		 -> Fil(32), 
 15378 ;; Return value:  Size  Location     Type
 15379 ;;                  1    wreg      enum E88
 15380 ;; Registers used:
 15381 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15382 ;; Tracked objects:
 15383 ;;		On entry : 1E/1
 15384 ;;		On exit  : 1E/0
 15385 ;;		Unchanged: 0/0
 15386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15387 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15388 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15389 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15390 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15391 ;;Total ram usage:       10 bytes
 15392 ;; Hardware stack levels used:    1
 15393 ;; Hardware stack levels required when called:    1
 15394 ;; This function calls:
 15395 ;;		_disk_status
 15396 ;; This function is called by:
 15397 ;;		_f_write
 15398 ;;		_f_sync
 15399 ;;		_f_close
 15400 ;;		_f_lseek
 15401 ;; This function uses a non-reentrant model
 15402 ;;
 15403                           
 15404                           
 15405                           ;psect for function _validate
 15406  2DE1                     _validate:	
 15407                           
 15408                           ;ff.c: 2376: FIL *fil = (FIL*)obj;
 15409                           
 15410                           ;incstack = 0
 15411                           ; Regs used in _validate: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15412  2DE1  0872               	movf	validate@obj+1,w
 15413  2DE2  00FA               	movwf	validate@fil+1
 15414  2DE3  0871               	movf	validate@obj,w
 15415  2DE4  00F9               	movwf	validate@fil
 15416                           
 15417                           ;ff.c: 2379: if (!fil || !fil->fs || !fil->fs->fs_type || fil->fs->id != fil->id || (dis
      +                          k_status(fil->fs->drv) & 0x01))
 15418  2DE5  0879               	movf	validate@fil,w
 15419  2DE6  047A               	iorwf	validate@fil+1,w
 15420  2DE7  1903               	btfsc	3,2
 15421  2DE8  2E36               	goto	l5020
 15422  2DE9  0879               	movf	validate@fil,w
 15423  2DEA  0086               	movwf	6
 15424  2DEB  087A               	movf	validate@fil+1,w
 15425  2DEC  0087               	movwf	7
 15426  2DED  0016               	moviw fsr1++
 15427  2DEE  0401               	iorwf	1,w
 15428  2DEF  1903               	btfsc	3,2
 15429  2DF0  2E36               	goto	l5020
 15430  2DF1  0879               	movf	validate@fil,w
 15431  2DF2  0086               	movwf	6
 15432  2DF3  087A               	movf	validate@fil+1,w
 15433  2DF4  0087               	movwf	7
 15434  2DF5  3F40               	moviw [0]fsr1
 15435  2DF6  00F3               	movwf	??_validate
 15436  2DF7  3F41               	moviw [1]fsr1
 15437  2DF8  00F4               	movwf	??_validate+1
 15438  2DF9  0873               	movf	??_validate,w
 15439  2DFA  0086               	movwf	6
 15440  2DFB  0874               	movf	??_validate+1,w
 15441  2DFC  0087               	movwf	7
 15442  2DFD  0801               	movf	1,w
 15443  2DFE  1903               	btfsc	3,2
 15444  2DFF  2E36               	goto	l5020
 15445  2E00  0879               	movf	validate@fil,w
 15446  2E01  0086               	movwf	6
 15447  2E02  087A               	movf	validate@fil+1,w
 15448  2E03  0087               	movwf	7
 15449  2E04  3142               	addfsr 1,2
 15450  2E05  3F40               	moviw [0]fsr1
 15451  2E06  00F3               	movwf	??_validate
 15452  2E07  3F41               	moviw [1]fsr1
 15453  2E08  00F4               	movwf	??_validate+1
 15454  2E09  0879               	movf	validate@fil,w
 15455  2E0A  0086               	movwf	6
 15456  2E0B  087A               	movf	validate@fil+1,w
 15457  2E0C  0087               	movwf	7
 15458  2E0D  3F40               	moviw [0]fsr1
 15459  2E0E  00F5               	movwf	??_validate+2
 15460  2E0F  3F41               	moviw [1]fsr1
 15461  2E10  00F6               	movwf	??_validate+3
 15462  2E11  0875               	movf	??_validate+2,w
 15463  2E12  0086               	movwf	6
 15464  2E13  0876               	movf	??_validate+3,w
 15465  2E14  0087               	movwf	7
 15466  2E15  3146               	addfsr 1,6
 15467  2E16  3F40               	moviw [0]fsr1
 15468  2E17  00F7               	movwf	??_validate+4
 15469  2E18  3F41               	moviw [1]fsr1
 15470  2E19  00F8               	movwf	??_validate+5
 15471  2E1A  0874               	movf	??_validate+1,w
 15472  2E1B  0678               	xorwf	??_validate+5,w
 15473  2E1C  1D03               	skipz
 15474  2E1D  2E20               	goto	u6915
 15475  2E1E  0873               	movf	??_validate,w
 15476  2E1F  0677               	xorwf	??_validate+4,w
 15477  2E20                     u6915:	
 15478  2E20  1D03               	skipz
 15479  2E21  2E36               	goto	l5020
 15480  2E22  0879               	movf	validate@fil,w
 15481  2E23  0086               	movwf	6
 15482  2E24  087A               	movf	validate@fil+1,w
 15483  2E25  0087               	movwf	7
 15484  2E26  3F40               	moviw [0]fsr1
 15485  2E27  00F3               	movwf	??_validate
 15486  2E28  3F41               	moviw [1]fsr1
 15487  2E29  00F4               	movwf	??_validate+1
 15488  2E2A  0873               	movf	??_validate,w
 15489  2E2B  0086               	movwf	6
 15490  2E2C  0874               	movf	??_validate+1,w
 15491  2E2D  0087               	movwf	7
 15492  2E2E  3141               	addfsr 1,1
 15493  2E2F  0801               	movf	1,w
 15494  2E30  31AA  22BB  31AD   	fcall	_disk_status
 15495  2E33  3901               	andlw	1
 15496  2E34  1903               	btfsc	3,2
 15497  2E35  2E38               	goto	l5024
 15498  2E36                     l5020:	
 15499                           
 15500                           ;ff.c: 2380: return FR_INVALID_OBJECT;
 15501  2E36  3009               	movlw	9
 15502  2E37  0008               	return
 15503  2E38                     l5024:	
 15504                           
 15505                           ;ff.c: 2382: ;;ff.c: 2384: return FR_OK;
 15506  2E38  3000               	movlw	0
 15507  2E39  0008               	return
 15508  2E3A                     __end_of_validate:	
 15509                           
 15510                           	psect	text33
 15511  2ABB                     __ptext33:	
 15512 ;; *************** function _disk_status *****************
 15513 ;; Defined at:
 15514 ;;		line 358 in file "diskio.c"
 15515 ;; Parameters:    Size  Location     Type
 15516 ;;  pdrv            1    wreg     unsigned char 
 15517 ;; Auto vars:     Size  Location     Type
 15518 ;;  pdrv            1    0[COMMON] unsigned char 
 15519 ;; Return value:  Size  Location     Type
 15520 ;;                  1    wreg      unsigned char 
 15521 ;; Registers used:
 15522 ;;		wreg, status,2, status,0
 15523 ;; Tracked objects:
 15524 ;;		On entry : 1E/1
 15525 ;;		On exit  : 1E/0
 15526 ;;		Unchanged: 0/0
 15527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15529 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15531 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15532 ;;Total ram usage:        1 bytes
 15533 ;; Hardware stack levels used:    1
 15534 ;; This function calls:
 15535 ;;		Nothing
 15536 ;; This function is called by:
 15537 ;;		_find_volume
 15538 ;;		_validate
 15539 ;; This function uses a non-reentrant model
 15540 ;;
 15541                           
 15542                           
 15543                           ;psect for function _disk_status
 15544  2ABB                     _disk_status:	
 15545                           
 15546                           ;incstack = 0
 15547                           ; Regs used in _disk_status: [wreg+status,2+status,0]
 15548                           ;disk_status@pdrv stored from wreg
 15549  2ABB  00F0               	movwf	disk_status@pdrv
 15550                           
 15551                           ;diskio.c: 362: if (pdrv) return 0x01;
 15552  2ABC  0870               	movf	disk_status@pdrv,w
 15553  2ABD  1903               	btfsc	3,2
 15554  2ABE  2AC1               	goto	l4258
 15555  2ABF  3001               	movlw	1
 15556  2AC0  0008               	return
 15557  2AC1                     l4258:	
 15558                           
 15559                           ;diskio.c: 363: return Stat;
 15560  2AC1  0021               	movlb	1	; select bank1
 15561  2AC2  086E               	movf	_Stat^(0+128),w
 15562  2AC3  0008               	return
 15563  2AC4                     __end_of_disk_status:	
 15564                           
 15565                           	psect	text34
 15566  080E                     __ptext34:	
 15567 ;; *************** function _sync_fs *****************
 15568 ;; Defined at:
 15569 ;;		line 760 in file "ff.c"
 15570 ;; Parameters:    Size  Location     Type
 15571 ;;  fs              2   44[BANK0 ] PTR struct .
 15572 ;;		 -> NULL(0), FatFs(558), 
 15573 ;; Auto vars:     Size  Location     Type
 15574 ;;  res             1   50[BANK0 ] enum E88
 15575 ;; Return value:  Size  Location     Type
 15576 ;;                  1    wreg      enum E88
 15577 ;; Registers used:
 15578 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15579 ;; Tracked objects:
 15580 ;;		On entry : 1F/0
 15581 ;;		On exit  : 1F/0
 15582 ;;		Unchanged: 0/0
 15583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15584 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15585 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15586 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15587 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15588 ;;Total ram usage:        7 bytes
 15589 ;; Hardware stack levels used:    1
 15590 ;; Hardware stack levels required when called:    7
 15591 ;; This function calls:
 15592 ;;		_disk_ioctl
 15593 ;;		_disk_write
 15594 ;;		_mem_set
 15595 ;;		_sync_window
 15596 ;; This function is called by:
 15597 ;;		_f_sync
 15598 ;; This function uses a non-reentrant model
 15599 ;;
 15600                           
 15601                           
 15602                           ;psect for function _sync_fs
 15603  080E                     _sync_fs:	
 15604                           
 15605                           ;ff.c: 764: FRESULT res;;ff.c: 767: res = sync_window(fs);
 15606                           
 15607                           ;incstack = 0
 15608                           ; Regs used in _sync_fs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15609  080E  084D               	movf	sync_fs@fs+1,w
 15610  080F  00AF               	movwf	sync_window@fs+1
 15611  0810  084C               	movf	sync_fs@fs,w
 15612  0811  00AE               	movwf	sync_window@fs
 15613  0812  31A4  245B  3188   	fcall	_sync_window
 15614  0815  00CE               	movwf	??_sync_fs
 15615  0816  084E               	movf	??_sync_fs,w
 15616  0817  00D2               	movwf	sync_fs@res
 15617                           
 15618                           ;ff.c: 768: if (res == FR_OK) {
 15619  0818  0852               	movf	sync_fs@res,w
 15620  0819  1D03               	btfss	3,2
 15621  081A  28F8               	goto	l4714
 15622                           
 15623                           ;ff.c: 770: if (fs->fs_type == 3 && fs->fsi_flag == 1) {
 15624  081B  084C               	movf	sync_fs@fs,w
 15625  081C  0086               	movwf	6
 15626  081D  084D               	movf	sync_fs@fs+1,w
 15627  081E  0087               	movwf	7
 15628  081F  3003               	movlw	3
 15629  0820  0601               	xorwf	1,w
 15630  0821  1D03               	btfss	3,2
 15631  0822  28E7               	goto	l4710
 15632  0823  084C               	movf	sync_fs@fs,w
 15633  0824  0086               	movwf	6
 15634  0825  084D               	movf	sync_fs@fs+1,w
 15635  0826  0087               	movwf	7
 15636  0827  3145               	addfsr 1,5
 15637  0828  0301               	decf	1,w
 15638  0829  1D03               	btfss	3,2
 15639  082A  28E7               	goto	l4710
 15640                           
 15641                           ;ff.c: 772: mem_set(fs->win, 0, ((UINT)512));
 15642  082B  084C               	movf	sync_fs@fs,w
 15643  082C  3E2E               	addlw	46
 15644  082D  00F0               	movwf	mem_set@dst
 15645  082E  3000               	movlw	0
 15646  082F  3D4D               	addwfc	sync_fs@fs+1,w
 15647  0830  00F1               	movwf	mem_set@dst+1
 15648  0831  3000               	movlw	0
 15649  0832  00F2               	movwf	mem_set@val
 15650  0833  00F3               	movwf	mem_set@val+1
 15651  0834  3000               	movlw	0
 15652  0835  00F4               	movwf	mem_set@cnt
 15653  0836  3002               	movlw	2
 15654  0837  00F5               	movwf	mem_set@cnt+1
 15655  0838  31AA  22F2  3188   	fcall	_mem_set
 15656                           
 15657                           ;ff.c: 773: *(WORD*)(BYTE*)(fs->win + 510)=(WORD)(0xAA55);
 15658  083B  0020               	movlb	0	; select bank0
 15659  083C  084C               	movf	sync_fs@fs,w
 15660  083D  3E2C               	addlw	44
 15661  083E  0086               	movwf	6
 15662  083F  3002               	movlw	2
 15663  0840  3D4D               	addwfc	sync_fs@fs+1,w
 15664  0841  0087               	movwf	7
 15665  0842  3055               	movlw	85
 15666  0843  3FC0               	movwi [0]fsr1
 15667  0844  30AA               	movlw	170
 15668  0845  3FC1               	movwi [1]fsr1
 15669                           
 15670                           ;ff.c: 774: *(DWORD*)(BYTE*)(fs->win + 0)=(DWORD)(0x41615252);
 15671  0846  084C               	movf	sync_fs@fs,w
 15672  0847  3E2E               	addlw	46
 15673  0848  0086               	movwf	6
 15674  0849  3000               	movlw	0
 15675  084A  3D4D               	addwfc	sync_fs@fs+1,w
 15676  084B  0087               	movwf	7
 15677  084C  3052               	movlw	82
 15678  084D  3FC0               	movwi [0]fsr1
 15679  084E  3052               	movlw	82
 15680  084F  3FC1               	movwi [1]fsr1
 15681  0850  3061               	movlw	97
 15682  0851  3FC2               	movwi [2]fsr1
 15683  0852  3041               	movlw	65
 15684  0853  3FC3               	movwi [3]fsr1
 15685                           
 15686                           ;ff.c: 775: *(DWORD*)(BYTE*)(fs->win + 484)=(DWORD)(0x61417272);
 15687  0854  084C               	movf	sync_fs@fs,w
 15688  0855  3E12               	addlw	18
 15689  0856  0086               	movwf	6
 15690  0857  3002               	movlw	2
 15691  0858  3D4D               	addwfc	sync_fs@fs+1,w
 15692  0859  0087               	movwf	7
 15693  085A  3072               	movlw	114
 15694  085B  3FC0               	movwi [0]fsr1
 15695  085C  3072               	movlw	114
 15696  085D  3FC1               	movwi [1]fsr1
 15697  085E  3041               	movlw	65
 15698  085F  3FC2               	movwi [2]fsr1
 15699  0860  3061               	movlw	97
 15700  0861  3FC3               	movwi [3]fsr1
 15701                           
 15702                           ;ff.c: 776: *(DWORD*)(BYTE*)(fs->win + 488)=(DWORD)(fs->free_clust);
 15703  0862  084C               	movf	sync_fs@fs,w
 15704  0863  0086               	movwf	6
 15705  0864  084D               	movf	sync_fs@fs+1,w
 15706  0865  0087               	movwf	7
 15707  0866  314E               	addfsr 1,14
 15708  0867  3F40               	moviw [0]fsr1
 15709  0868  00CE               	movwf	??_sync_fs
 15710  0869  3F41               	moviw [1]fsr1
 15711  086A  00CF               	movwf	??_sync_fs+1
 15712  086B  3F42               	moviw [2]fsr1
 15713  086C  00D0               	movwf	??_sync_fs+2
 15714  086D  3F43               	moviw [3]fsr1
 15715  086E  00D1               	movwf	??_sync_fs+3
 15716  086F  084C               	movf	sync_fs@fs,w
 15717  0870  3E16               	addlw	22
 15718  0871  0086               	movwf	6
 15719  0872  3002               	movlw	2
 15720  0873  3D4D               	addwfc	sync_fs@fs+1,w
 15721  0874  0087               	movwf	7
 15722  0875  084E               	movf	??_sync_fs,w
 15723  0876  3FC0               	movwi [0]fsr1
 15724  0877  084F               	movf	??_sync_fs+1,w
 15725  0878  3FC1               	movwi [1]fsr1
 15726  0879  0850               	movf	??_sync_fs+2,w
 15727  087A  3FC2               	movwi [2]fsr1
 15728  087B  0851               	movf	??_sync_fs+3,w
 15729  087C  3FC3               	movwi [3]fsr1
 15730                           
 15731                           ;ff.c: 777: *(DWORD*)(BYTE*)(fs->win + 492)=(DWORD)(fs->last_clust);
 15732  087D  084C               	movf	sync_fs@fs,w
 15733  087E  0086               	movwf	6
 15734  087F  084D               	movf	sync_fs@fs+1,w
 15735  0880  0087               	movwf	7
 15736  0881  314A               	addfsr 1,10
 15737  0882  3F40               	moviw [0]fsr1
 15738  0883  00CE               	movwf	??_sync_fs
 15739  0884  3F41               	moviw [1]fsr1
 15740  0885  00CF               	movwf	??_sync_fs+1
 15741  0886  3F42               	moviw [2]fsr1
 15742  0887  00D0               	movwf	??_sync_fs+2
 15743  0888  3F43               	moviw [3]fsr1
 15744  0889  00D1               	movwf	??_sync_fs+3
 15745  088A  084C               	movf	sync_fs@fs,w
 15746  088B  3E1A               	addlw	26
 15747  088C  0086               	movwf	6
 15748  088D  3002               	movlw	2
 15749  088E  3D4D               	addwfc	sync_fs@fs+1,w
 15750  088F  0087               	movwf	7
 15751  0890  084E               	movf	??_sync_fs,w
 15752  0891  3FC0               	movwi [0]fsr1
 15753  0892  084F               	movf	??_sync_fs+1,w
 15754  0893  3FC1               	movwi [1]fsr1
 15755  0894  0850               	movf	??_sync_fs+2,w
 15756  0895  3FC2               	movwi [2]fsr1
 15757  0896  0851               	movf	??_sync_fs+3,w
 15758  0897  3FC3               	movwi [3]fsr1
 15759                           
 15760                           ;ff.c: 779: fs->winsect = fs->volbase + 1;
 15761  0898  3001               	movlw	1
 15762  0899  00CE               	movwf	??_sync_fs
 15763  089A  3000               	movlw	0
 15764  089B  00CF               	movwf	??_sync_fs+1
 15765  089C  3000               	movlw	0
 15766  089D  00D0               	movwf	??_sync_fs+2
 15767  089E  3000               	movlw	0
 15768  089F  00D1               	movwf	??_sync_fs+3
 15769  08A0  084C               	movf	sync_fs@fs,w
 15770  08A1  0086               	movwf	6
 15771  08A2  084D               	movf	sync_fs@fs+1,w
 15772  08A3  0087               	movwf	7
 15773  08A4  315A               	addfsr 1,26
 15774  08A5  3F40               	moviw [0]fsr1
 15775  08A6  07CE               	addwf	??_sync_fs,f
 15776  08A7  3F41               	moviw [1]fsr1
 15777  08A8  3DCF               	addwfc	??_sync_fs+1,f
 15778  08A9  3F42               	moviw [2]fsr1
 15779  08AA  3DD0               	addwfc	??_sync_fs+2,f
 15780  08AB  3F43               	moviw [3]fsr1
 15781  08AC  3DD1               	addwfc	??_sync_fs+3,f
 15782  08AD  084C               	movf	sync_fs@fs,w
 15783  08AE  3E2A               	addlw	42
 15784  08AF  0086               	movwf	6
 15785  08B0  3000               	movlw	0
 15786  08B1  3D4D               	addwfc	sync_fs@fs+1,w
 15787  08B2  0087               	movwf	7
 15788  08B3  084E               	movf	??_sync_fs,w
 15789  08B4  3FC0               	movwi [0]fsr1
 15790  08B5  084F               	movf	??_sync_fs+1,w
 15791  08B6  3FC1               	movwi [1]fsr1
 15792  08B7  0850               	movf	??_sync_fs+2,w
 15793  08B8  3FC2               	movwi [2]fsr1
 15794  08B9  0851               	movf	??_sync_fs+3,w
 15795  08BA  3FC3               	movwi [3]fsr1
 15796                           
 15797                           ;ff.c: 780: disk_write(fs->drv, fs->win, fs->winsect, 1);
 15798  08BB  084C               	movf	sync_fs@fs,w
 15799  08BC  3E2E               	addlw	46
 15800  08BD  00CE               	movwf	??_sync_fs
 15801  08BE  3000               	movlw	0
 15802  08BF  3D4D               	addwfc	sync_fs@fs+1,w
 15803  08C0  00CF               	movwf	??_sync_fs+1
 15804  08C1  084E               	movf	??_sync_fs,w
 15805  08C2  00A4               	movwf	disk_write@buff
 15806  08C3  084F               	movf	??_sync_fs+1,w
 15807  08C4  00A5               	movwf	disk_write@buff+1
 15808  08C5  084C               	movf	sync_fs@fs,w
 15809  08C6  3E2A               	addlw	42
 15810  08C7  0086               	movwf	6
 15811  08C8  3000               	movlw	0
 15812  08C9  3D4D               	addwfc	sync_fs@fs+1,w
 15813  08CA  0087               	movwf	7
 15814  08CB  3F40               	moviw [0]fsr1
 15815  08CC  00A6               	movwf	disk_write@sector
 15816  08CD  3F41               	moviw [1]fsr1
 15817  08CE  00A7               	movwf	disk_write@sector+1
 15818  08CF  3F42               	moviw [2]fsr1
 15819  08D0  00A8               	movwf	disk_write@sector+2
 15820  08D1  3F43               	moviw [3]fsr1
 15821  08D2  00A9               	movwf	disk_write@sector+3
 15822  08D3  3001               	movlw	1
 15823  08D4  00AA               	movwf	disk_write@count
 15824  08D5  3000               	movlw	0
 15825  08D6  00AB               	movwf	disk_write@count+1
 15826  08D7  084C               	movf	sync_fs@fs,w
 15827  08D8  0086               	movwf	6
 15828  08D9  084D               	movf	sync_fs@fs+1,w
 15829  08DA  0087               	movwf	7
 15830  08DB  3141               	addfsr 1,1
 15831  08DC  0801               	movf	1,w
 15832  08DD  31A1  21B8  3188   	fcall	_disk_write
 15833                           
 15834                           ;ff.c: 781: fs->fsi_flag = 0;
 15835  08E0  0020               	movlb	0	; select bank0
 15836  08E1  084C               	movf	sync_fs@fs,w
 15837  08E2  0086               	movwf	6
 15838  08E3  084D               	movf	sync_fs@fs+1,w
 15839  08E4  0087               	movwf	7
 15840  08E5  3145               	addfsr 1,5
 15841  08E6  0181               	clrf	1
 15842  08E7                     l4710:	
 15843                           
 15844                           ;ff.c: 782: };ff.c: 784: if (disk_ioctl(fs->drv, 0, 0) != RES_OK)
 15845  08E7  01A4               	clrf	disk_ioctl@cmd
 15846  08E8  01A5               	clrf	disk_ioctl@buff
 15847  08E9  084C               	movf	sync_fs@fs,w
 15848  08EA  0086               	movwf	6
 15849  08EB  084D               	movf	sync_fs@fs+1,w
 15850  08EC  0087               	movwf	7
 15851  08ED  3141               	addfsr 1,1
 15852  08EE  0801               	movf	1,w
 15853  08EF  3188  20FB  3188   	fcall	_disk_ioctl
 15854  08F2  3A00               	xorlw	0
 15855  08F3  1903               	skipnz
 15856  08F4  28F8               	goto	l4714
 15857                           
 15858                           ;ff.c: 785: res = FR_DISK_ERR;
 15859  08F5  0020               	movlb	0	; select bank0
 15860  08F6  01D2               	clrf	sync_fs@res
 15861  08F7  0AD2               	incf	sync_fs@res,f
 15862  08F8                     l4714:	
 15863                           
 15864                           ;ff.c: 786: };ff.c: 788: return res;
 15865  08F8  0020               	movlb	0	; select bank0
 15866  08F9  0852               	movf	sync_fs@res,w
 15867  08FA  0008               	return
 15868  08FB                     __end_of_sync_fs:	
 15869                           
 15870                           	psect	text35
 15871  2AF2                     __ptext35:	
 15872 ;; *************** function _mem_set *****************
 15873 ;; Defined at:
 15874 ;;		line 524 in file "ff.c"
 15875 ;; Parameters:    Size  Location     Type
 15876 ;;  dst             2    0[COMMON] PTR void 
 15877 ;;		 -> f_open@sfn(12), NULL(0), FatFs(558), 
 15878 ;;  val             2    2[COMMON] int 
 15879 ;;  cnt             2    4[COMMON] unsigned int 
 15880 ;; Auto vars:     Size  Location     Type
 15881 ;;  d               2    6[COMMON] PTR unsigned char 
 15882 ;;		 -> f_open@sfn(12), NULL(0), FatFs(558), 
 15883 ;; Return value:  Size  Location     Type
 15884 ;;                  1    wreg      void 
 15885 ;; Registers used:
 15886 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15887 ;; Tracked objects:
 15888 ;;		On entry : 1E/0
 15889 ;;		On exit  : 1E/0
 15890 ;;		Unchanged: 1E/0
 15891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15892 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15893 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15895 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15896 ;;Total ram usage:        8 bytes
 15897 ;; Hardware stack levels used:    1
 15898 ;; This function calls:
 15899 ;;		Nothing
 15900 ;; This function is called by:
 15901 ;;		_sync_fs
 15902 ;;		_dir_next
 15903 ;;		_dir_register
 15904 ;;		_create_name
 15905 ;; This function uses a non-reentrant model
 15906 ;;
 15907                           
 15908                           
 15909                           ;psect for function _mem_set
 15910  2AF2                     _mem_set:	
 15911                           
 15912                           ;ff.c: 525: BYTE *d = (BYTE*)dst;
 15913                           
 15914                           ;incstack = 0
 15915                           ; Regs used in _mem_set: [wreg+fsr1l+fsr1h+status,2+status,0]
 15916  2AF2  0871               	movf	mem_set@dst+1,w
 15917  2AF3  00F7               	movwf	mem_set@d+1
 15918  2AF4  0870               	movf	mem_set@dst,w
 15919  2AF5  00F6               	movwf	mem_set@d
 15920  2AF6                     l4136:	
 15921                           ;ff.c: 527: while (cnt--)
 15922                           
 15923  2AF6  3001               	movlw	1
 15924  2AF7  02F4               	subwf	mem_set@cnt,f
 15925  2AF8  3000               	movlw	0
 15926  2AF9  3BF5               	subwfb	mem_set@cnt+1,f
 15927  2AFA  0A74               	incf	mem_set@cnt,w
 15928  2AFB  1903               	btfsc	3,2
 15929  2AFC  0A75               	incf	mem_set@cnt+1,w
 15930  2AFD  1903               	btfsc	3,2
 15931  2AFE  0008               	return
 15932                           
 15933                           ;ff.c: 528: *d++ = (BYTE)val;
 15934  2AFF  0876               	movf	mem_set@d,w
 15935  2B00  0086               	movwf	6
 15936  2B01  0877               	movf	mem_set@d+1,w
 15937  2B02  0087               	movwf	7
 15938  2B03  0872               	movf	mem_set@val,w
 15939  2B04  0081               	movwf	1
 15940  2B05  3001               	movlw	1
 15941  2B06  07F6               	addwf	mem_set@d,f
 15942  2B07  3000               	movlw	0
 15943  2B08  3DF7               	addwfc	mem_set@d+1,f
 15944  2B09  2AF6               	goto	l4136
 15945  2B0A                     __end_of_mem_set:	
 15946                           
 15947                           	psect	text36
 15948  08FB                     __ptext36:	
 15949 ;; *************** function _disk_ioctl *****************
 15950 ;; Defined at:
 15951 ;;		line 448 in file "diskio.c"
 15952 ;; Parameters:    Size  Location     Type
 15953 ;;  pdrv            1    wreg     unsigned char 
 15954 ;;  cmd             1    4[BANK0 ] unsigned char 
 15955 ;;  buff            1    5[BANK0 ] PTR void 
 15956 ;;		 -> NULL(0), 
 15957 ;; Auto vars:     Size  Location     Type
 15958 ;;  pdrv            1   36[BANK0 ] unsigned char 
 15959 ;;  csd            16   20[BANK0 ] unsigned char [16]
 15960 ;;  csize           4   37[BANK0 ] unsigned long 
 15961 ;;  ptr             1   43[BANK0 ] PTR unsigned char 
 15962 ;;		 -> NULL(0), 
 15963 ;;  n               1   42[BANK0 ] unsigned char 
 15964 ;;  res             1   41[BANK0 ] enum E5699
 15965 ;; Return value:  Size  Location     Type
 15966 ;;                  1    wreg      enum E5699
 15967 ;; Registers used:
 15968 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15969 ;; Tracked objects:
 15970 ;;		On entry : 1F/0
 15971 ;;		On exit  : 1E/0
 15972 ;;		Unchanged: 0/0
 15973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15974 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15975 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15976 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15977 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15978 ;;Total ram usage:       40 bytes
 15979 ;; Hardware stack levels used:    1
 15980 ;; Hardware stack levels required when called:    5
 15981 ;; This function calls:
 15982 ;;		_SPI_Exchange8bit
 15983 ;;		___wmul
 15984 ;;		_deselect
 15985 ;;		_rcvr_datablock
 15986 ;;		_select
 15987 ;;		_send_cmd
 15988 ;; This function is called by:
 15989 ;;		_sync_fs
 15990 ;; This function uses a non-reentrant model
 15991 ;;
 15992                           
 15993                           
 15994                           ;psect for function _disk_ioctl
 15995  08FB                     _disk_ioctl:	
 15996                           
 15997                           ;incstack = 0
 15998                           ; Regs used in _disk_ioctl: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15999                           ;disk_ioctl@pdrv stored from wreg
 16000  08FB  00C4               	movwf	disk_ioctl@pdrv
 16001                           
 16002                           ;diskio.c: 454: DRESULT res;;diskio.c: 455: BYTE n, csd[16], *ptr = buff;
 16003  08FC  0825               	movf	disk_ioctl@buff,w
 16004  08FD  00A6               	movwf	??_disk_ioctl
 16005  08FE  0826               	movf	??_disk_ioctl,w
 16006  08FF  00CB               	movwf	disk_ioctl@ptr
 16007                           
 16008                           ;diskio.c: 456: DWORD csize;;diskio.c: 459: if (pdrv) return RES_PARERR;
 16009  0900  0844               	movf	disk_ioctl@pdrv,w
 16010  0901  1903               	btfsc	3,2
 16011  0902  2905               	goto	l235
 16012  0903  3004               	movlw	4
 16013  0904  0008               	return
 16014  0905                     l235:	
 16015                           
 16016                           ;diskio.c: 461: res = RES_ERROR;
 16017  0905  01C9               	clrf	disk_ioctl@res
 16018  0906  0AC9               	incf	disk_ioctl@res,f
 16019                           
 16020                           ;diskio.c: 463: if (Stat & 0x01) return RES_NOTRDY;
 16021  0907  0021               	movlb	1	; select bank1
 16022  0908  1C6E               	btfss	_Stat^(0+128),0
 16023  0909  2B66               	goto	l4364
 16024  090A  3003               	movlw	3
 16025  090B  0008               	return
 16026  090C                     l4274:	
 16027                           
 16028                           ;diskio.c: 467: if (select()) res = RES_OK;
 16029  090C  31AA  22CD  3188   	fcall	_select
 16030  090F                     L14:	
 16031  090F  3A00               	xorlw	0
 16032  0910  1903               	skipnz
 16033  0911  2B81               	goto	l4366
 16034  0912                     l4276:	
 16035  0912  0020               	movlb	0	; select bank0
 16036  0913  01C9               	clrf	disk_ioctl@res
 16037  0914  2B81               	goto	l4366
 16038  0915                     l4278:	
 16039                           
 16040                           ;diskio.c: 471: if ((send_cmd((9), 0) == 0) && rcvr_datablock(csd, 16)) {
 16041  0915  3000               	movlw	0
 16042  0916  00A3               	movwf	send_cmd@arg+3
 16043  0917  3000               	movlw	0
 16044  0918  00A2               	movwf	send_cmd@arg+2
 16045  0919  3000               	movlw	0
 16046  091A  00A1               	movwf	send_cmd@arg+1
 16047  091B  3000               	movlw	0
 16048  091C  00A0               	movwf	send_cmd@arg
 16049  091D  3009               	movlw	9
 16050  091E  31AB  238F  3188   	fcall	_send_cmd
 16051  0921  3A00               	xorlw	0
 16052  0922  1D03               	skipz
 16053  0923  2B81               	goto	l4366
 16054  0924  3034               	movlw	low disk_ioctl@csd
 16055  0925  00F1               	movwf	rcvr_datablock@buff
 16056  0926  3000               	movlw	high disk_ioctl@csd
 16057  0927  00F2               	movwf	rcvr_datablock@buff+1
 16058  0928  3010               	movlw	16
 16059  0929  00F3               	movwf	rcvr_datablock@btr
 16060  092A  3000               	movlw	0
 16061  092B  00F4               	movwf	rcvr_datablock@btr+1
 16062  092C  31AC  241B  3188   	fcall	_rcvr_datablock
 16063  092F  3A00               	xorlw	0
 16064  0930  1903               	skipnz
 16065  0931  2B81               	goto	l4366
 16066                           
 16067                           ;diskio.c: 472: if ((csd[0] >> 6) == 1) {
 16068  0932  0020               	movlb	0	; select bank0
 16069  0933  0834               	movf	disk_ioctl@csd,w
 16070  0934  00A6               	movwf	??_disk_ioctl
 16071  0935  3006               	movlw	6
 16072  0936                     u5415:	
 16073  0936  36A6               	lsrf	??_disk_ioctl,f
 16074  0937  0B89               	decfsz	9,f
 16075  0938  2936               	goto	u5415
 16076  0939  0326               	decf	??_disk_ioctl,w
 16077  093A  1D03               	btfss	3,2
 16078  093B  297E               	goto	l4288
 16079                           
 16080                           ;diskio.c: 473: csize = csd[9] + ((WORD)csd[8] << 8) + ((DWORD)(csd[7] & 63) << 16) + 1;
 16081  093C  083B               	movf	disk_ioctl@csd+7,w
 16082  093D  393F               	andlw	63
 16083  093E  00A6               	movwf	??_disk_ioctl
 16084  093F  01A7               	clrf	??_disk_ioctl+1
 16085  0940  01A8               	clrf	??_disk_ioctl+2
 16086  0941  01A9               	clrf	??_disk_ioctl+3
 16087  0942  3010               	movlw	16
 16088  0943                     u5435:	
 16089  0943  35A6               	lslf	??_disk_ioctl,f
 16090  0944  0DA7               	rlf	??_disk_ioctl+1,f
 16091  0945  0DA8               	rlf	??_disk_ioctl+2,f
 16092  0946  0DA9               	rlf	??_disk_ioctl+3,f
 16093  0947  0B89               	decfsz	9,f
 16094  0948  2943               	goto	u5435
 16095  0949  083D               	movf	disk_ioctl@csd+9,w
 16096  094A  00AA               	movwf	??_disk_ioctl+4
 16097  094B  083C               	movf	disk_ioctl@csd+8,w
 16098  094C  00AB               	movwf	??_disk_ioctl+5
 16099  094D  01AC               	clrf	??_disk_ioctl+6
 16100  094E  01AD               	clrf	??_disk_ioctl+7
 16101  094F  082A               	movf	??_disk_ioctl+4,w
 16102  0950  07A6               	addwf	??_disk_ioctl,f
 16103  0951  082B               	movf	??_disk_ioctl+5,w
 16104  0952  3DA7               	addwfc	??_disk_ioctl+1,f
 16105  0953  082C               	movf	??_disk_ioctl+6,w
 16106  0954  3DA8               	addwfc	??_disk_ioctl+2,f
 16107  0955  082D               	movf	??_disk_ioctl+7,w
 16108  0956  3DA9               	addwfc	??_disk_ioctl+3,f
 16109  0957  3001               	movlw	1
 16110  0958  0726               	addwf	??_disk_ioctl,w
 16111  0959  00C5               	movwf	disk_ioctl@csize
 16112  095A  3000               	movlw	0
 16113  095B  3D27               	addwfc	??_disk_ioctl+1,w
 16114  095C  00C6               	movwf	disk_ioctl@csize+1
 16115  095D  3000               	movlw	0
 16116  095E  3D28               	addwfc	??_disk_ioctl+2,w
 16117  095F  00C7               	movwf	disk_ioctl@csize+2
 16118  0960  3000               	movlw	0
 16119  0961  3D29               	addwfc	??_disk_ioctl+3,w
 16120  0962  00C8               	movwf	disk_ioctl@csize+3
 16121                           
 16122                           ;diskio.c: 474: *(DWORD*)buff = csize << 10;
 16123  0963  0845               	movf	disk_ioctl@csize,w
 16124  0964  00A6               	movwf	??_disk_ioctl
 16125  0965  0846               	movf	disk_ioctl@csize+1,w
 16126  0966  00A7               	movwf	??_disk_ioctl+1
 16127  0967  0847               	movf	disk_ioctl@csize+2,w
 16128  0968  00A8               	movwf	??_disk_ioctl+2
 16129  0969  0848               	movf	disk_ioctl@csize+3,w
 16130  096A  00A9               	movwf	??_disk_ioctl+3
 16131  096B  300A               	movlw	10
 16132  096C                     u5445:	
 16133  096C  35A6               	lslf	??_disk_ioctl,f
 16134  096D  0DA7               	rlf	??_disk_ioctl+1,f
 16135  096E  0DA8               	rlf	??_disk_ioctl+2,f
 16136  096F  0DA9               	rlf	??_disk_ioctl+3,f
 16137  0970  0B89               	decfsz	9,f
 16138  0971  296C               	goto	u5445
 16139  0972  0825               	movf	disk_ioctl@buff,w
 16140  0973  0086               	movwf	6
 16141  0974  0187               	clrf	7
 16142  0975  0826               	movf	??_disk_ioctl,w
 16143  0976  3FC0               	movwi [0]fsr1
 16144  0977  0827               	movf	??_disk_ioctl+1,w
 16145  0978  3FC1               	movwi [1]fsr1
 16146  0979  0828               	movf	??_disk_ioctl+2,w
 16147  097A  3FC2               	movwi [2]fsr1
 16148  097B  0829               	movf	??_disk_ioctl+3,w
 16149  097C  3FC3               	movwi [3]fsr1
 16150                           
 16151                           ;diskio.c: 475: } else {
 16152  097D  2912               	goto	l4276
 16153  097E                     l4288:	
 16154                           
 16155                           ;diskio.c: 476: n = (csd[5] & 15) + ((csd[10] & 128) >> 7) + ((csd[9] & 3) << 1) + 2;
 16156  097E  083E               	movf	disk_ioctl@csd+10,w
 16157  097F  00A6               	movwf	??_disk_ioctl
 16158  0980  3007               	movlw	7
 16159  0981                     u5455:	
 16160  0981  36A6               	lsrf	??_disk_ioctl,f
 16161  0982  0B89               	decfsz	9,f
 16162  0983  2981               	goto	u5455
 16163  0984  3001               	movlw	1
 16164  0985  0526               	andwf	??_disk_ioctl,w
 16165  0986  00A7               	movwf	??_disk_ioctl+1
 16166  0987  300F               	movlw	15
 16167  0988  0539               	andwf	disk_ioctl@csd+5,w
 16168  0989  00A8               	movwf	??_disk_ioctl+2
 16169  098A  083D               	movf	disk_ioctl@csd+9,w
 16170  098B  3903               	andlw	3
 16171  098C  0709               	addwf	9,w
 16172  098D  0728               	addwf	??_disk_ioctl+2,w
 16173  098E  0727               	addwf	??_disk_ioctl+1,w
 16174  098F  3E02               	addlw	2
 16175  0990  00A9               	movwf	??_disk_ioctl+3
 16176  0991  0829               	movf	??_disk_ioctl+3,w
 16177  0992  00CA               	movwf	disk_ioctl@n
 16178                           
 16179                           ;diskio.c: 477: csize = (csd[8] >> 6) + ((WORD)csd[7] << 2) + ((WORD)(csd[6] & 3) << 10)
      +                           + 1;
 16180  0993  083A               	movf	disk_ioctl@csd+6,w
 16181  0994  3903               	andlw	3
 16182  0995  00A6               	movwf	??_disk_ioctl
 16183  0996  01A7               	clrf	??_disk_ioctl+1
 16184  0997  300A               	movlw	10
 16185  0998                     u5465:	
 16186  0998  35A6               	lslf	??_disk_ioctl,f
 16187  0999  0DA7               	rlf	??_disk_ioctl+1,f
 16188  099A  0B89               	decfsz	9,f
 16189  099B  2998               	goto	u5465
 16190  099C  083B               	movf	disk_ioctl@csd+7,w
 16191  099D  00A8               	movwf	??_disk_ioctl+2
 16192  099E  01A9               	clrf	??_disk_ioctl+3
 16193  099F  35A8               	lslf	??_disk_ioctl+2,f
 16194  09A0  0DA9               	rlf	??_disk_ioctl+3,f
 16195  09A1  35A8               	lslf	??_disk_ioctl+2,f
 16196  09A2  0DA9               	rlf	??_disk_ioctl+3,f
 16197  09A3  083C               	movf	disk_ioctl@csd+8,w
 16198  09A4  00AA               	movwf	??_disk_ioctl+4
 16199  09A5  3006               	movlw	6
 16200  09A6                     u5475:	
 16201  09A6  36AA               	lsrf	??_disk_ioctl+4,f
 16202  09A7  0B89               	decfsz	9,f
 16203  09A8  29A6               	goto	u5475
 16204  09A9  082A               	movf	??_disk_ioctl+4,w
 16205  09AA  0728               	addwf	??_disk_ioctl+2,w
 16206  09AB  00AB               	movwf	??_disk_ioctl+5
 16207  09AC  0829               	movf	??_disk_ioctl+3,w
 16208  09AD  1803               	skipnc
 16209  09AE  0A29               	incf	??_disk_ioctl+3,w
 16210  09AF  00AC               	movwf	??_disk_ioctl+6
 16211  09B0  0826               	movf	??_disk_ioctl,w
 16212  09B1  072B               	addwf	??_disk_ioctl+5,w
 16213  09B2  00AD               	movwf	??_disk_ioctl+7
 16214  09B3  0827               	movf	??_disk_ioctl+1,w
 16215  09B4  3D2C               	addwfc	??_disk_ioctl+6,w
 16216  09B5  00AE               	movwf	??_disk_ioctl+8
 16217  09B6  082D               	movf	??_disk_ioctl+7,w
 16218  09B7  3E01               	addlw	1
 16219  09B8  00C5               	movwf	disk_ioctl@csize
 16220  09B9  3000               	movlw	0
 16221  09BA  3D2E               	addwfc	??_disk_ioctl+8,w
 16222  09BB  00C6               	movwf	disk_ioctl@csize+1
 16223  09BC  01C7               	clrf	disk_ioctl@csize+2
 16224  09BD  01C8               	clrf	disk_ioctl@csize+3
 16225                           
 16226                           ;diskio.c: 478: *(DWORD*)buff = csize << (n - 9);
 16227  09BE  0845               	movf	disk_ioctl@csize,w
 16228  09BF  00A6               	movwf	??_disk_ioctl
 16229  09C0  0846               	movf	disk_ioctl@csize+1,w
 16230  09C1  00A7               	movwf	??_disk_ioctl+1
 16231  09C2  0847               	movf	disk_ioctl@csize+2,w
 16232  09C3  00A8               	movwf	??_disk_ioctl+2
 16233  09C4  0848               	movf	disk_ioctl@csize+3,w
 16234  09C5  00A9               	movwf	??_disk_ioctl+3
 16235  09C6  084A               	movf	disk_ioctl@n,w
 16236  09C7  3EF7               	addlw	-9
 16237  09C8  0A89               	incf	9,f
 16238  09C9  29CE               	goto	u5480
 16239  09CA                     u5485:	
 16240  09CA  35A6               	lslf	??_disk_ioctl,f
 16241  09CB  0DA7               	rlf	??_disk_ioctl+1,f
 16242  09CC  0DA8               	rlf	??_disk_ioctl+2,f
 16243  09CD  0DA9               	rlf	??_disk_ioctl+3,f
 16244  09CE                     u5480:	
 16245  09CE  0B89               	decfsz	9,f
 16246  09CF  29CA               	goto	u5485
 16247  09D0  0825               	movf	disk_ioctl@buff,w
 16248  09D1  0086               	movwf	6
 16249  09D2  0187               	clrf	7
 16250  09D3  0826               	movf	??_disk_ioctl,w
 16251  09D4  3FC0               	movwi [0]fsr1
 16252  09D5  0827               	movf	??_disk_ioctl+1,w
 16253  09D6  3FC1               	movwi [1]fsr1
 16254  09D7  0828               	movf	??_disk_ioctl+2,w
 16255  09D8  3FC2               	movwi [2]fsr1
 16256  09D9  0829               	movf	??_disk_ioctl+3,w
 16257  09DA  3FC3               	movwi [3]fsr1
 16258  09DB  2912               	goto	l4276
 16259  09DC                     l246:	
 16260                           ;diskio.c: 484: case 3 :
 16261                           
 16262                           
 16263                           ;diskio.c: 485: if (CardType & 0x04) {
 16264  09DC  0021               	movlb	1	; select bank1
 16265  09DD  1D6B               	btfss	_CardType^(0+128),2
 16266  09DE  2A34               	goto	l4312
 16267                           
 16268                           ;diskio.c: 486: if (send_cmd((0x80+13), 0) == 0) {
 16269  09DF  3000               	movlw	0
 16270  09E0  0020               	movlb	0	; select bank0
 16271  09E1  00A3               	movwf	send_cmd@arg+3
 16272  09E2  3000               	movlw	0
 16273  09E3  00A2               	movwf	send_cmd@arg+2
 16274  09E4  3000               	movlw	0
 16275  09E5  00A1               	movwf	send_cmd@arg+1
 16276  09E6  3000               	movlw	0
 16277  09E7  00A0               	movwf	send_cmd@arg
 16278  09E8  308D               	movlw	141
 16279  09E9  31AB  238F  3188   	fcall	_send_cmd
 16280  09EC  3A00               	xorlw	0
 16281  09ED  1D03               	skipz
 16282  09EE  2B81               	goto	l4366
 16283                           
 16284                           ;diskio.c: 487: SPI_Exchange8bit(0xFF);
 16285  09EF  30FF               	movlw	255
 16286  09F0  31AA  22B2  3188   	fcall	_SPI_Exchange8bit
 16287                           
 16288                           ;diskio.c: 488: if (rcvr_datablock(csd, 16)) {
 16289  09F3  3034               	movlw	low disk_ioctl@csd
 16290  09F4  00F1               	movwf	rcvr_datablock@buff
 16291  09F5  3000               	movlw	high disk_ioctl@csd
 16292  09F6  00F2               	movwf	rcvr_datablock@buff+1
 16293  09F7  3010               	movlw	16
 16294  09F8  00F3               	movwf	rcvr_datablock@btr
 16295  09F9  3000               	movlw	0
 16296  09FA  00F4               	movwf	rcvr_datablock@btr+1
 16297  09FB  31AC  241B  3188   	fcall	_rcvr_datablock
 16298  09FE  3A00               	xorlw	0
 16299  09FF  1903               	skipnz
 16300  0A00  2B81               	goto	l4366
 16301                           
 16302                           ;diskio.c: 489: for (n = 64 - 16; n; n--) SPI_Exchange8bit(0xFF);
 16303  0A01  3030               	movlw	48
 16304  0A02  0020               	movlb	0	; select bank0
 16305  0A03  00A6               	movwf	??_disk_ioctl
 16306  0A04  0826               	movf	??_disk_ioctl,w
 16307  0A05  00CA               	movwf	disk_ioctl@n
 16308  0A06                     l4306:	
 16309  0A06  084A               	movf	disk_ioctl@n,w
 16310  0A07  1903               	btfsc	3,2
 16311  0A08  2A11               	goto	l4308
 16312  0A09  30FF               	movlw	255
 16313  0A0A  31AA  22B2  3188   	fcall	_SPI_Exchange8bit
 16314  0A0D  3001               	movlw	1
 16315  0A0E  0020               	movlb	0	; select bank0
 16316  0A0F  02CA               	subwf	disk_ioctl@n,f
 16317  0A10  2A06               	goto	l4306
 16318  0A11                     l4308:	
 16319                           
 16320                           ;diskio.c: 490: *(DWORD*)buff = 16UL << (csd[10] >> 4);
 16321  0A11  3010               	movlw	16
 16322  0A12  00A6               	movwf	??_disk_ioctl
 16323  0A13  3000               	movlw	0
 16324  0A14  00A7               	movwf	??_disk_ioctl+1
 16325  0A15  3000               	movlw	0
 16326  0A16  00A8               	movwf	??_disk_ioctl+2
 16327  0A17  3000               	movlw	0
 16328  0A18  00A9               	movwf	??_disk_ioctl+3
 16329  0A19  083E               	movf	disk_ioctl@csd+10,w
 16330  0A1A  00AA               	movwf	??_disk_ioctl+4
 16331  0A1B  3004               	movlw	4
 16332  0A1C                     u5535:	
 16333  0A1C  36AA               	lsrf	??_disk_ioctl+4,f
 16334  0A1D  0B89               	decfsz	9,f
 16335  0A1E  2A1C               	goto	u5535
 16336  0A1F  082A               	movf	??_disk_ioctl+4,w
 16337  0A20  0A89               	incf	9,f
 16338  0A21  2A26               	goto	u5540
 16339  0A22                     u5545:	
 16340  0A22  35A6               	lslf	??_disk_ioctl,f
 16341  0A23  0DA7               	rlf	??_disk_ioctl+1,f
 16342  0A24  0DA8               	rlf	??_disk_ioctl+2,f
 16343  0A25  0DA9               	rlf	??_disk_ioctl+3,f
 16344  0A26                     u5540:	
 16345  0A26  0B89               	decfsz	9,f
 16346  0A27  2A22               	goto	u5545
 16347  0A28  0825               	movf	disk_ioctl@buff,w
 16348  0A29  0086               	movwf	6
 16349  0A2A  0187               	clrf	7
 16350  0A2B  0826               	movf	??_disk_ioctl,w
 16351  0A2C  3FC0               	movwi [0]fsr1
 16352  0A2D  0827               	movf	??_disk_ioctl+1,w
 16353  0A2E  3FC1               	movwi [1]fsr1
 16354  0A2F  0828               	movf	??_disk_ioctl+2,w
 16355  0A30  3FC2               	movwi [2]fsr1
 16356  0A31  0829               	movf	??_disk_ioctl+3,w
 16357  0A32  3FC3               	movwi [3]fsr1
 16358  0A33  2912               	goto	l4276
 16359  0A34                     l4312:	
 16360                           
 16361                           ;diskio.c: 495: if ((send_cmd((9), 0) == 0) && rcvr_datablock(csd, 16)) {
 16362  0A34  3000               	movlw	0
 16363  0A35  0020               	movlb	0	; select bank0
 16364  0A36  00A3               	movwf	send_cmd@arg+3
 16365  0A37  3000               	movlw	0
 16366  0A38  00A2               	movwf	send_cmd@arg+2
 16367  0A39  3000               	movlw	0
 16368  0A3A  00A1               	movwf	send_cmd@arg+1
 16369  0A3B  3000               	movlw	0
 16370  0A3C  00A0               	movwf	send_cmd@arg
 16371  0A3D  3009               	movlw	9
 16372  0A3E  31AB  238F  3188   	fcall	_send_cmd
 16373  0A41  3A00               	xorlw	0
 16374  0A42  1D03               	skipz
 16375  0A43  2B81               	goto	l4366
 16376  0A44  3034               	movlw	low disk_ioctl@csd
 16377  0A45  00F1               	movwf	rcvr_datablock@buff
 16378  0A46  3000               	movlw	high disk_ioctl@csd
 16379  0A47  00F2               	movwf	rcvr_datablock@buff+1
 16380  0A48  3010               	movlw	16
 16381  0A49  00F3               	movwf	rcvr_datablock@btr
 16382  0A4A  3000               	movlw	0
 16383  0A4B  00F4               	movwf	rcvr_datablock@btr+1
 16384  0A4C  31AC  241B  3188   	fcall	_rcvr_datablock
 16385  0A4F  3A00               	xorlw	0
 16386  0A50  1903               	skipnz
 16387  0A51  2B81               	goto	l4366
 16388                           
 16389                           ;diskio.c: 496: if (CardType & 0x02) {
 16390  0A52  0021               	movlb	1	; select bank1
 16391  0A53  1CEB               	btfss	_CardType^(0+128),1
 16392  0A54  2A92               	goto	l4320
 16393                           
 16394                           ;diskio.c: 497: *(DWORD*)buff = (((csd[10] & 63) << 1) + ((WORD)(csd[11] & 128) >> 7) + 
      +                          1) << ((csd[13] >> 6) - 1);
 16395  0A55  0020               	movlb	0	; select bank0
 16396  0A56  083F               	movf	disk_ioctl@csd+11,w
 16397  0A57  00A6               	movwf	??_disk_ioctl
 16398  0A58  3007               	movlw	7
 16399  0A59                     u5585:	
 16400  0A59  36A6               	lsrf	??_disk_ioctl,f
 16401  0A5A  0B89               	decfsz	9,f
 16402  0A5B  2A59               	goto	u5585
 16403  0A5C  0826               	movf	??_disk_ioctl,w
 16404  0A5D  3901               	andlw	1
 16405  0A5E  00A7               	movwf	??_disk_ioctl+1
 16406  0A5F  01A8               	clrf	??_disk_ioctl+2
 16407  0A60  083E               	movf	disk_ioctl@csd+10,w
 16408  0A61  393F               	andlw	63
 16409  0A62  00A9               	movwf	??_disk_ioctl+3
 16410  0A63  01AA               	clrf	??_disk_ioctl+4
 16411  0A64  35A9               	lslf	??_disk_ioctl+3,f
 16412  0A65  0DAA               	rlf	??_disk_ioctl+4,f
 16413  0A66  0827               	movf	??_disk_ioctl+1,w
 16414  0A67  0729               	addwf	??_disk_ioctl+3,w
 16415  0A68  00AB               	movwf	??_disk_ioctl+5
 16416  0A69  0828               	movf	??_disk_ioctl+2,w
 16417  0A6A  3D2A               	addwfc	??_disk_ioctl+4,w
 16418  0A6B  00AC               	movwf	??_disk_ioctl+6
 16419  0A6C  082B               	movf	??_disk_ioctl+5,w
 16420  0A6D  3E01               	addlw	1
 16421  0A6E  00AD               	movwf	??_disk_ioctl+7
 16422  0A6F  3000               	movlw	0
 16423  0A70  3D2C               	addwfc	??_disk_ioctl+6,w
 16424  0A71  00AE               	movwf	??_disk_ioctl+8
 16425  0A72  0841               	movf	disk_ioctl@csd+13,w
 16426  0A73  00AF               	movwf	??_disk_ioctl+9
 16427  0A74  3006               	movlw	6
 16428  0A75                     u5595:	
 16429  0A75  36AF               	lsrf	??_disk_ioctl+9,f
 16430  0A76  0B89               	decfsz	9,f
 16431  0A77  2A75               	goto	u5595
 16432  0A78  082F               	movf	??_disk_ioctl+9,w
 16433  0A79  3EFF               	addlw	-1
 16434  0A7A  0A89               	incf	9,f
 16435  0A7B  2A7E               	goto	u5604
 16436  0A7C                     u5605:	
 16437  0A7C  35AD               	lslf	??_disk_ioctl+7,f
 16438  0A7D  0DAE               	rlf	??_disk_ioctl+8,f
 16439  0A7E                     u5604:	
 16440  0A7E  0B89               	decfsz	9,f
 16441  0A7F  2A7C               	goto	u5605
 16442  0A80  082D               	movf	??_disk_ioctl+7,w
 16443  0A81  00B0               	movwf	??_disk_ioctl+10
 16444  0A82  082E               	movf	??_disk_ioctl+8,w
 16445  0A83  00B1               	movwf	??_disk_ioctl+11
 16446  0A84  01B2               	clrf	??_disk_ioctl+12
 16447  0A85  01B3               	clrf	??_disk_ioctl+13
 16448  0A86  0825               	movf	disk_ioctl@buff,w
 16449  0A87  0086               	movwf	6
 16450  0A88  0187               	clrf	7
 16451  0A89  0830               	movf	??_disk_ioctl+10,w
 16452  0A8A  3FC0               	movwi [0]fsr1
 16453  0A8B  0831               	movf	??_disk_ioctl+11,w
 16454  0A8C  3FC1               	movwi [1]fsr1
 16455  0A8D  0832               	movf	??_disk_ioctl+12,w
 16456  0A8E  3FC2               	movwi [2]fsr1
 16457  0A8F  0833               	movf	??_disk_ioctl+13,w
 16458  0A90  3FC3               	movwi [3]fsr1
 16459                           
 16460                           ;diskio.c: 498: } else {
 16461  0A91  2912               	goto	l4276
 16462  0A92                     l4320:	
 16463                           
 16464                           ;diskio.c: 499: *(DWORD*)buff = ((WORD)((csd[10] & 124) >> 2) + 1) * (((csd[11] & 3) << 
      +                          3) + ((csd[11] & 224) >> 5) + 1);
 16465  0A92  0020               	movlb	0	; select bank0
 16466  0A93  083E               	movf	disk_ioctl@csd+10,w
 16467  0A94  00A6               	movwf	??_disk_ioctl
 16468  0A95  3002               	movlw	2
 16469  0A96                     u5615:	
 16470  0A96  36A6               	lsrf	??_disk_ioctl,f
 16471  0A97  0B89               	decfsz	9,f
 16472  0A98  2A96               	goto	u5615
 16473  0A99  0826               	movf	??_disk_ioctl,w
 16474  0A9A  391F               	andlw	31
 16475  0A9B  3E01               	addlw	1
 16476  0A9C  00F0               	movwf	___wmul@multiplier
 16477  0A9D  3000               	movlw	0
 16478  0A9E  1803               	skipnc
 16479  0A9F  3001               	movlw	1
 16480  0AA0  00F1               	movwf	___wmul@multiplier+1
 16481  0AA1  083F               	movf	disk_ioctl@csd+11,w
 16482  0AA2  00A7               	movwf	??_disk_ioctl+1
 16483  0AA3  3005               	movlw	5
 16484  0AA4                     u5625:	
 16485  0AA4  36A7               	lsrf	??_disk_ioctl+1,f
 16486  0AA5  0B89               	decfsz	9,f
 16487  0AA6  2AA4               	goto	u5625
 16488  0AA7  0827               	movf	??_disk_ioctl+1,w
 16489  0AA8  3907               	andlw	7
 16490  0AA9  00A8               	movwf	??_disk_ioctl+2
 16491  0AAA  01A9               	clrf	??_disk_ioctl+3
 16492  0AAB  083F               	movf	disk_ioctl@csd+11,w
 16493  0AAC  3903               	andlw	3
 16494  0AAD  00AA               	movwf	??_disk_ioctl+4
 16495  0AAE  01AB               	clrf	??_disk_ioctl+5
 16496  0AAF  35AA               	lslf	??_disk_ioctl+4,f
 16497  0AB0  0DAB               	rlf	??_disk_ioctl+5,f
 16498  0AB1  35AA               	lslf	??_disk_ioctl+4,f
 16499  0AB2  0DAB               	rlf	??_disk_ioctl+5,f
 16500  0AB3  35AA               	lslf	??_disk_ioctl+4,f
 16501  0AB4  0DAB               	rlf	??_disk_ioctl+5,f
 16502  0AB5  0828               	movf	??_disk_ioctl+2,w
 16503  0AB6  072A               	addwf	??_disk_ioctl+4,w
 16504  0AB7  00AC               	movwf	??_disk_ioctl+6
 16505  0AB8  0829               	movf	??_disk_ioctl+3,w
 16506  0AB9  3D2B               	addwfc	??_disk_ioctl+5,w
 16507  0ABA  00AD               	movwf	??_disk_ioctl+7
 16508  0ABB  082C               	movf	??_disk_ioctl+6,w
 16509  0ABC  3E01               	addlw	1
 16510  0ABD  00F2               	movwf	___wmul@multiplicand
 16511  0ABE  3000               	movlw	0
 16512  0ABF  3D2D               	addwfc	??_disk_ioctl+7,w
 16513  0AC0  00F3               	movwf	___wmul@multiplicand+1
 16514  0AC1  31AB  230A  3188   	fcall	___wmul
 16515  0AC4  0870               	movf	?___wmul,w
 16516  0AC5  00AE               	movwf	??_disk_ioctl+8
 16517  0AC6  0871               	movf	?___wmul+1,w
 16518  0AC7  00AF               	movwf	??_disk_ioctl+9
 16519  0AC8  01B0               	clrf	??_disk_ioctl+10
 16520  0AC9  01B1               	clrf	??_disk_ioctl+11
 16521  0ACA  0825               	movf	disk_ioctl@buff,w
 16522  0ACB  0086               	movwf	6
 16523  0ACC  0187               	clrf	7
 16524  0ACD  082E               	movf	??_disk_ioctl+8,w
 16525  0ACE  3FC0               	movwi [0]fsr1
 16526  0ACF  082F               	movf	??_disk_ioctl+9,w
 16527  0AD0  3FC1               	movwi [1]fsr1
 16528  0AD1  0830               	movf	??_disk_ioctl+10,w
 16529  0AD2  3FC2               	movwi [2]fsr1
 16530  0AD3  0831               	movf	??_disk_ioctl+11,w
 16531  0AD4  3FC3               	movwi [3]fsr1
 16532  0AD5  2912               	goto	l4276
 16533  0AD6                     l4324:	
 16534                           
 16535                           ;diskio.c: 509: *ptr = CardType;
 16536  0AD6  0021               	movlb	1	; select bank1
 16537  0AD7  086B               	movf	_CardType^(0+128),w
 16538  0AD8  0020               	movlb	0	; select bank0
 16539  0AD9  00A6               	movwf	??_disk_ioctl
 16540  0ADA  084B               	movf	disk_ioctl@ptr,w
 16541  0ADB  0086               	movwf	6
 16542  0ADC  0187               	clrf	7
 16543  0ADD  0826               	movf	??_disk_ioctl,w
 16544  0ADE  0081               	movwf	1
 16545  0ADF  2912               	goto	l4276
 16546  0AE0                     l4328:	
 16547                           
 16548                           ;diskio.c: 514: if (send_cmd((9), 0) == 0;diskio.c: 515: && rcvr_datablock(ptr, 16))
 16549  0AE0  3000               	movlw	0
 16550  0AE1  00A3               	movwf	send_cmd@arg+3
 16551  0AE2  3000               	movlw	0
 16552  0AE3  00A2               	movwf	send_cmd@arg+2
 16553  0AE4  3000               	movlw	0
 16554  0AE5  00A1               	movwf	send_cmd@arg+1
 16555  0AE6  3000               	movlw	0
 16556  0AE7  00A0               	movwf	send_cmd@arg
 16557  0AE8  3009               	movlw	9
 16558  0AE9  31AB  238F  3188   	fcall	_send_cmd
 16559  0AEC  3A00               	xorlw	0
 16560  0AED  1D03               	skipz
 16561  0AEE  2B81               	goto	l4366
 16562  0AEF  0020               	movlb	0	; select bank0
 16563  0AF0  084B               	movf	disk_ioctl@ptr,w
 16564  0AF1  00F1               	movwf	rcvr_datablock@buff
 16565  0AF2  3000               	movlw	0
 16566  0AF3  00F2               	movwf	rcvr_datablock@buff+1
 16567  0AF4  3010               	movlw	16
 16568  0AF5  00F3               	movwf	rcvr_datablock@btr
 16569  0AF6  3000               	movlw	0
 16570  0AF7  00F4               	movwf	rcvr_datablock@btr+1
 16571  0AF8  31AC  241B  3188   	fcall	_rcvr_datablock
 16572  0AFB  290F               	goto	L14
 16573  0AFC                     l4334:	
 16574                           
 16575                           ;diskio.c: 520: if (send_cmd((10), 0) == 0;diskio.c: 521: && rcvr_datablock(ptr, 16))
 16576  0AFC  3000               	movlw	0
 16577  0AFD  00A3               	movwf	send_cmd@arg+3
 16578  0AFE  3000               	movlw	0
 16579  0AFF  00A2               	movwf	send_cmd@arg+2
 16580  0B00  3000               	movlw	0
 16581  0B01  00A1               	movwf	send_cmd@arg+1
 16582  0B02  3000               	movlw	0
 16583  0B03  00A0               	movwf	send_cmd@arg
 16584  0B04  300A               	movlw	10
 16585  0B05  31AB  238F  3188   	fcall	_send_cmd
 16586  0B08  3A00               	xorlw	0
 16587  0B09  1D03               	skipz
 16588  0B0A  2B81               	goto	l4366
 16589  0B0B  0020               	movlb	0	; select bank0
 16590  0B0C  084B               	movf	disk_ioctl@ptr,w
 16591  0B0D  00F1               	movwf	rcvr_datablock@buff
 16592  0B0E  3000               	movlw	0
 16593  0B0F  00F2               	movwf	rcvr_datablock@buff+1
 16594  0B10  3010               	movlw	16
 16595  0B11  00F3               	movwf	rcvr_datablock@btr
 16596  0B12  3000               	movlw	0
 16597  0B13  00F4               	movwf	rcvr_datablock@btr+1
 16598  0B14  31AC  241B  3188   	fcall	_rcvr_datablock
 16599  0B17  290F               	goto	L14
 16600  0B18                     l4340:	
 16601                           
 16602                           ;diskio.c: 526: if (send_cmd((58), 0) == 0) {
 16603  0B18  3000               	movlw	0
 16604  0B19  00A3               	movwf	send_cmd@arg+3
 16605  0B1A  3000               	movlw	0
 16606  0B1B  00A2               	movwf	send_cmd@arg+2
 16607  0B1C  3000               	movlw	0
 16608  0B1D  00A1               	movwf	send_cmd@arg+1
 16609  0B1E  3000               	movlw	0
 16610  0B1F  00A0               	movwf	send_cmd@arg
 16611  0B20  303A               	movlw	58
 16612  0B21  31AB  238F  3188   	fcall	_send_cmd
 16613  0B24  3A00               	xorlw	0
 16614  0B25  1D03               	skipz
 16615  0B26  2B81               	goto	l4366
 16616                           
 16617                           ;diskio.c: 527: for (n = 4; n; n--) *ptr++ = SPI_Exchange8bit(0xFF);
 16618  0B27  3004               	movlw	4
 16619  0B28  0020               	movlb	0	; select bank0
 16620  0B29  00A6               	movwf	??_disk_ioctl
 16621  0B2A  0826               	movf	??_disk_ioctl,w
 16622  0B2B  00CA               	movwf	disk_ioctl@n
 16623  0B2C                     l4350:	
 16624  0B2C  084A               	movf	disk_ioctl@n,w
 16625  0B2D  1903               	btfsc	3,2
 16626  0B2E  2912               	goto	l4276
 16627  0B2F  30FF               	movlw	255
 16628  0B30  31AA  22B2  3188   	fcall	_SPI_Exchange8bit
 16629  0B33  0020               	movlb	0	; select bank0
 16630  0B34  00A6               	movwf	??_disk_ioctl
 16631  0B35  084B               	movf	disk_ioctl@ptr,w
 16632  0B36  0086               	movwf	6
 16633  0B37  0187               	clrf	7
 16634  0B38  0826               	movf	??_disk_ioctl,w
 16635  0B39  0081               	movwf	1
 16636  0B3A  3001               	movlw	1
 16637  0B3B  00A6               	movwf	??_disk_ioctl
 16638  0B3C  0826               	movf	??_disk_ioctl,w
 16639  0B3D  07CB               	addwf	disk_ioctl@ptr,f
 16640  0B3E  3001               	movlw	1
 16641  0B3F  02CA               	subwf	disk_ioctl@n,f
 16642  0B40  2B2C               	goto	l4350
 16643  0B41                     l4354:	
 16644                           
 16645                           ;diskio.c: 533: if (send_cmd((0x80+13), 0) == 0) {
 16646  0B41  3000               	movlw	0
 16647  0B42  00A3               	movwf	send_cmd@arg+3
 16648  0B43  3000               	movlw	0
 16649  0B44  00A2               	movwf	send_cmd@arg+2
 16650  0B45  3000               	movlw	0
 16651  0B46  00A1               	movwf	send_cmd@arg+1
 16652  0B47  3000               	movlw	0
 16653  0B48  00A0               	movwf	send_cmd@arg
 16654  0B49  308D               	movlw	141
 16655  0B4A  31AB  238F  3188   	fcall	_send_cmd
 16656  0B4D  3A00               	xorlw	0
 16657  0B4E  1D03               	skipz
 16658  0B4F  2B81               	goto	l4366
 16659                           
 16660                           ;diskio.c: 534: SPI_Exchange8bit(0xFF);
 16661  0B50  30FF               	movlw	255
 16662  0B51  31AA  22B2  3188   	fcall	_SPI_Exchange8bit
 16663                           
 16664                           ;diskio.c: 535: if (rcvr_datablock(ptr, 64))
 16665  0B54  0020               	movlb	0	; select bank0
 16666  0B55  084B               	movf	disk_ioctl@ptr,w
 16667  0B56  00F1               	movwf	rcvr_datablock@buff
 16668  0B57  3000               	movlw	0
 16669  0B58  00F2               	movwf	rcvr_datablock@buff+1
 16670  0B59  3040               	movlw	64
 16671  0B5A  00F3               	movwf	rcvr_datablock@btr
 16672  0B5B  3000               	movlw	0
 16673  0B5C  00F4               	movwf	rcvr_datablock@btr+1
 16674  0B5D  31AC  241B  3188   	fcall	_rcvr_datablock
 16675  0B60  290F               	goto	L14
 16676  0B61                     l4362:	
 16677                           
 16678                           ;diskio.c: 541: res = RES_PARERR;
 16679  0B61  3004               	movlw	4
 16680  0B62  00A6               	movwf	??_disk_ioctl
 16681  0B63  0826               	movf	??_disk_ioctl,w
 16682  0B64  00C9               	movwf	disk_ioctl@res
 16683                           
 16684                           ;diskio.c: 542: }
 16685  0B65  2B81               	goto	l4366
 16686  0B66                     l4364:	
 16687  0B66  0020               	movlb	0	; select bank0
 16688  0B67  0824               	movf	disk_ioctl@cmd,w
 16689                           
 16690                           ; Switch size 1, requested type "simple"
 16691                           ; Number of cases is 8, Range of values is 0 to 14
 16692                           ; switch strategies available:
 16693                           ; Name         Instructions Cycles
 16694                           ; simple_byte           25    13 (average)
 16695                           ; direct_byte           36     6 (fixed)
 16696                           ; jumptable            260     6 (fixed)
 16697                           ;	Chosen strategy is simple_byte
 16698  0B68  3A00               	xorlw	0	; case 0
 16699  0B69  1903               	skipnz
 16700  0B6A  290C               	goto	l4274
 16701  0B6B  3A01               	xorlw	1	; case 1
 16702  0B6C  1903               	skipnz
 16703  0B6D  2915               	goto	l4278
 16704  0B6E  3A02               	xorlw	2	; case 3
 16705  0B6F  1903               	skipnz
 16706  0B70  29DC               	goto	l246
 16707  0B71  3A09               	xorlw	9	; case 10
 16708  0B72  1903               	skipnz
 16709  0B73  2AD6               	goto	l4324
 16710  0B74  3A01               	xorlw	1	; case 11
 16711  0B75  1903               	skipnz
 16712  0B76  2AE0               	goto	l4328
 16713  0B77  3A07               	xorlw	7	; case 12
 16714  0B78  1903               	skipnz
 16715  0B79  2AFC               	goto	l4334
 16716  0B7A  3A01               	xorlw	1	; case 13
 16717  0B7B  1903               	skipnz
 16718  0B7C  2B18               	goto	l4340
 16719  0B7D  3A03               	xorlw	3	; case 14
 16720  0B7E  1903               	skipnz
 16721  0B7F  2B41               	goto	l4354
 16722  0B80  2B61               	goto	l4362
 16723  0B81                     l4366:	
 16724                           
 16725                           ;diskio.c: 544: deselect();
 16726  0B81  3190  2000         	fcall	_deselect
 16727                           
 16728                           ;diskio.c: 546: return res;
 16729  0B83  0020               	movlb	0	; select bank0
 16730  0B84  0849               	movf	disk_ioctl@res,w
 16731  0B85  0008               	return
 16732  0B86                     __end_of_disk_ioctl:	
 16733                           
 16734                           	psect	text37
 16735  2B0A                     __ptext37:	
 16736 ;; *************** function ___wmul *****************
 16737 ;; Defined at:
 16738 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
 16739 ;; Parameters:    Size  Location     Type
 16740 ;;  multiplier      2    0[COMMON] unsigned int 
 16741 ;;  multiplicand    2    2[COMMON] unsigned int 
 16742 ;; Auto vars:     Size  Location     Type
 16743 ;;  product         2    4[COMMON] unsigned int 
 16744 ;; Return value:  Size  Location     Type
 16745 ;;                  2    0[COMMON] unsigned int 
 16746 ;; Registers used:
 16747 ;;		wreg, status,2, status,0
 16748 ;; Tracked objects:
 16749 ;;		On entry : 1F/0
 16750 ;;		On exit  : 1F/0
 16751 ;;		Unchanged: 1F/0
 16752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16753 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16754 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16756 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16757 ;;Total ram usage:        6 bytes
 16758 ;; Hardware stack levels used:    1
 16759 ;; This function calls:
 16760 ;;		Nothing
 16761 ;; This function is called by:
 16762 ;;		_disk_ioctl
 16763 ;; This function uses a non-reentrant model
 16764 ;;
 16765                           
 16766                           
 16767                           ;psect for function ___wmul
 16768  2B0A                     ___wmul:	
 16769                           
 16770                           ;incstack = 0
 16771                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 16772  2B0A  01F4               	clrf	___wmul@product
 16773  2B0B  01F5               	clrf	___wmul@product+1
 16774  2B0C                     l4236:	
 16775  2B0C  1C70               	btfss	___wmul@multiplier,0
 16776  2B0D  2B12               	goto	l892
 16777  2B0E  0872               	movf	___wmul@multiplicand,w
 16778  2B0F  07F4               	addwf	___wmul@product,f
 16779  2B10  0873               	movf	___wmul@multiplicand+1,w
 16780  2B11  3DF5               	addwfc	___wmul@product+1,f
 16781  2B12                     l892:	
 16782  2B12  3001               	movlw	1
 16783  2B13                     u5325:	
 16784  2B13  35F2               	lslf	___wmul@multiplicand,f
 16785  2B14  0DF3               	rlf	___wmul@multiplicand+1,f
 16786  2B15  0B89               	decfsz	9,f
 16787  2B16  2B13               	goto	u5325
 16788  2B17  3001               	movlw	1
 16789  2B18                     u5335:	
 16790  2B18  36F1               	lsrf	___wmul@multiplier+1,f
 16791  2B19  0CF0               	rrf	___wmul@multiplier,f
 16792  2B1A  0B89               	decfsz	9,f
 16793  2B1B  2B18               	goto	u5335
 16794  2B1C  0870               	movf	___wmul@multiplier,w
 16795  2B1D  0471               	iorwf	___wmul@multiplier+1,w
 16796  2B1E  1D03               	btfss	3,2
 16797  2B1F  2B0C               	goto	l4236
 16798  2B20  0875               	movf	___wmul@product+1,w
 16799  2B21  00F1               	movwf	?___wmul+1
 16800  2B22  0874               	movf	___wmul@product,w
 16801  2B23  00F0               	movwf	?___wmul
 16802  2B24  0008               	return
 16803  2B25                     __end_of___wmul:	
 16804                           
 16805                           	psect	text38
 16806  2ADF                     __ptext38:	
 16807 ;; *************** function _st_clust *****************
 16808 ;; Defined at:
 16809 ;;		line 1252 in file "ff.c"
 16810 ;; Parameters:    Size  Location     Type
 16811 ;;  dir             2    0[COMMON] PTR unsigned char 
 16812 ;;		 -> NULL(0), FatFs(558), 
 16813 ;;  cl              4    2[COMMON] unsigned long 
 16814 ;; Auto vars:     Size  Location     Type
 16815 ;;		None
 16816 ;; Return value:  Size  Location     Type
 16817 ;;                  1    wreg      void 
 16818 ;; Registers used:
 16819 ;;		wreg, fsr1l, fsr1h
 16820 ;; Tracked objects:
 16821 ;;		On entry : 1D/2
 16822 ;;		On exit  : 1D/0
 16823 ;;		Unchanged: 1D/0
 16824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16825 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16828 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16829 ;;Total ram usage:        6 bytes
 16830 ;; Hardware stack levels used:    1
 16831 ;; This function calls:
 16832 ;;		Nothing
 16833 ;; This function is called by:
 16834 ;;		_f_open
 16835 ;;		_f_sync
 16836 ;; This function uses a non-reentrant model
 16837 ;;
 16838                           
 16839                           
 16840                           ;psect for function _st_clust
 16841  2ADF                     _st_clust:	
 16842                           
 16843                           ;ff.c: 1257: *(WORD*)(BYTE*)(dir + 26)=(WORD)(cl);
 16844                           
 16845                           ;incstack = 0
 16846                           ; Regs used in _st_clust: [wregfsr1]
 16847  2ADF  0870               	movf	st_clust@dir,w
 16848  2AE0  0086               	movwf	6
 16849  2AE1  0871               	movf	st_clust@dir+1,w
 16850  2AE2  0087               	movwf	7
 16851  2AE3  315A               	addfsr 1,26
 16852  2AE4  0872               	movf	st_clust@cl,w
 16853  2AE5  3FC0               	movwi [0]fsr1
 16854  2AE6  0873               	movf	st_clust@cl+1,w
 16855  2AE7  3FC1               	movwi [1]fsr1
 16856                           
 16857                           ;ff.c: 1258: *(WORD*)(BYTE*)(dir + 20)=(WORD)(cl >> 16);
 16858  2AE8  0870               	movf	st_clust@dir,w
 16859  2AE9  0086               	movwf	6
 16860  2AEA  0871               	movf	st_clust@dir+1,w
 16861  2AEB  0087               	movwf	7
 16862  2AEC  3154               	addfsr 1,20
 16863  2AED  0874               	movf	st_clust@cl+2,w
 16864  2AEE  3FC0               	movwi [0]fsr1
 16865  2AEF  0875               	movf	st_clust@cl+3,w
 16866  2AF0  3FC1               	movwi [1]fsr1
 16867  2AF1  0008               	return
 16868  2AF2                     __end_of_st_clust:	
 16869                           
 16870                           	psect	text39
 16871  2E3A                     __ptext39:	
 16872 ;; *************** function _move_window *****************
 16873 ;; Defined at:
 16874 ;;		line 729 in file "ff.c"
 16875 ;; Parameters:    Size  Location     Type
 16876 ;;  fs              2   35[BANK0 ] PTR struct .
 16877 ;;		 -> NULL(0), FatFs(558), 
 16878 ;;  sector          4   37[BANK0 ] unsigned long 
 16879 ;; Auto vars:     Size  Location     Type
 16880 ;;  res             1   45[BANK0 ] enum E88
 16881 ;; Return value:  Size  Location     Type
 16882 ;;                  1    wreg      enum E88
 16883 ;; Registers used:
 16884 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16885 ;; Tracked objects:
 16886 ;;		On entry : 1F/0
 16887 ;;		On exit  : 1F/0
 16888 ;;		Unchanged: 0/0
 16889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16890 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16891 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16892 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16893 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16894 ;;Total ram usage:       11 bytes
 16895 ;; Hardware stack levels used:    1
 16896 ;; Hardware stack levels required when called:    7
 16897 ;; This function calls:
 16898 ;;		_disk_read
 16899 ;;		_sync_window
 16900 ;; This function is called by:
 16901 ;;		_get_fat
 16902 ;;		_put_fat
 16903 ;;		_dir_alloc
 16904 ;;		_dir_find
 16905 ;;		_dir_register
 16906 ;;		_check_fs
 16907 ;;		_find_volume
 16908 ;;		_f_open
 16909 ;;		_f_write
 16910 ;;		_f_sync
 16911 ;; This function uses a non-reentrant model
 16912 ;;
 16913                           
 16914                           
 16915                           ;psect for function _move_window
 16916  2E3A                     _move_window:	
 16917                           
 16918                           ;ff.c: 734: FRESULT res = FR_OK;
 16919                           
 16920                           ;incstack = 0
 16921                           ; Regs used in _move_window: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16922  2E3A  01CD               	clrf	move_window@res
 16923                           
 16924                           ;ff.c: 737: if (sector != fs->winsect) {
 16925  2E3B  0843               	movf	move_window@fs,w
 16926  2E3C  3E2A               	addlw	42
 16927  2E3D  0086               	movwf	6
 16928  2E3E  3000               	movlw	0
 16929  2E3F  3D44               	addwfc	move_window@fs+1,w
 16930  2E40  0087               	movwf	7
 16931  2E41  3F40               	moviw [0]fsr1
 16932  2E42  00C9               	movwf	??_move_window
 16933  2E43  3F41               	moviw [1]fsr1
 16934  2E44  00CA               	movwf	??_move_window+1
 16935  2E45  3F42               	moviw [2]fsr1
 16936  2E46  00CB               	movwf	??_move_window+2
 16937  2E47  3F43               	moviw [3]fsr1
 16938  2E48  00CC               	movwf	??_move_window+3
 16939  2E49  0848               	movf	move_window@sector+3,w
 16940  2E4A  064C               	xorwf	??_move_window+3,w
 16941  2E4B  1D03               	skipz
 16942  2E4C  2E57               	goto	u4835
 16943  2E4D  0847               	movf	move_window@sector+2,w
 16944  2E4E  064B               	xorwf	??_move_window+2,w
 16945  2E4F  1D03               	skipz
 16946  2E50  2E57               	goto	u4835
 16947  2E51  0846               	movf	move_window@sector+1,w
 16948  2E52  064A               	xorwf	??_move_window+1,w
 16949  2E53  1D03               	skipz
 16950  2E54  2E57               	goto	u4835
 16951  2E55  0845               	movf	move_window@sector,w
 16952  2E56  0649               	xorwf	??_move_window,w
 16953  2E57                     u4835:	
 16954  2E57  1903               	skipnz
 16955  2E58  2E9E               	goto	l3972
 16956                           
 16957                           ;ff.c: 739: res = sync_window(fs);
 16958  2E59  0844               	movf	move_window@fs+1,w
 16959  2E5A  00AF               	movwf	sync_window@fs+1
 16960  2E5B  0843               	movf	move_window@fs,w
 16961  2E5C  00AE               	movwf	sync_window@fs
 16962  2E5D  31A4  245B  31AE   	fcall	_sync_window
 16963  2E60  00C9               	movwf	??_move_window
 16964  2E61  0849               	movf	??_move_window,w
 16965  2E62  00CD               	movwf	move_window@res
 16966                           
 16967                           ;ff.c: 741: if (res == FR_OK) {
 16968  2E63  084D               	movf	move_window@res,w
 16969  2E64  1D03               	btfss	3,2
 16970  2E65  2E9E               	goto	l3972
 16971                           
 16972                           ;ff.c: 742: if (disk_read(fs->drv, fs->win, sector, 1) != RES_OK) {
 16973  2E66  0843               	movf	move_window@fs,w
 16974  2E67  3E2E               	addlw	46
 16975  2E68  00A4               	movwf	disk_read@buff
 16976  2E69  3000               	movlw	0
 16977  2E6A  3D44               	addwfc	move_window@fs+1,w
 16978  2E6B  00A5               	movwf	disk_read@buff+1
 16979  2E6C  0848               	movf	move_window@sector+3,w
 16980  2E6D  00A9               	movwf	disk_read@sector+3
 16981  2E6E  0847               	movf	move_window@sector+2,w
 16982  2E6F  00A8               	movwf	disk_read@sector+2
 16983  2E70  0846               	movf	move_window@sector+1,w
 16984  2E71  00A7               	movwf	disk_read@sector+1
 16985  2E72  0845               	movf	move_window@sector,w
 16986  2E73  00A6               	movwf	disk_read@sector
 16987  2E74  3001               	movlw	1
 16988  2E75  00AA               	movwf	disk_read@count
 16989  2E76  3000               	movlw	0
 16990  2E77  00AB               	movwf	disk_read@count+1
 16991  2E78  0843               	movf	move_window@fs,w
 16992  2E79  0086               	movwf	6
 16993  2E7A  0844               	movf	move_window@fs+1,w
 16994  2E7B  0087               	movwf	7
 16995  2E7C  3141               	addfsr 1,1
 16996  2E7D  0801               	movf	1,w
 16997  2E7E  31AE  26A0  31AE   	fcall	_disk_read
 16998  2E81  3A00               	xorlw	0
 16999  2E82  1903               	skipnz
 17000  2E83  2E8F               	goto	l3970
 17001                           
 17002                           ;ff.c: 743: sector = 0xFFFFFFFF;
 17003  2E84  30FF               	movlw	255
 17004  2E85  0020               	movlb	0	; select bank0
 17005  2E86  00C8               	movwf	move_window@sector+3
 17006  2E87  30FF               	movlw	255
 17007  2E88  00C7               	movwf	move_window@sector+2
 17008  2E89  30FF               	movlw	255
 17009  2E8A  00C6               	movwf	move_window@sector+1
 17010  2E8B  30FF               	movlw	255
 17011  2E8C  00C5               	movwf	move_window@sector
 17012                           
 17013                           ;ff.c: 744: res = FR_DISK_ERR;
 17014  2E8D  01CD               	clrf	move_window@res
 17015  2E8E  0ACD               	incf	move_window@res,f
 17016  2E8F                     l3970:	
 17017                           
 17018                           ;ff.c: 745: };ff.c: 746: fs->winsect = sector;
 17019  2E8F  0020               	movlb	0	; select bank0
 17020  2E90  0843               	movf	move_window@fs,w
 17021  2E91  3E2A               	addlw	42
 17022  2E92  0086               	movwf	6
 17023  2E93  3000               	movlw	0
 17024  2E94  3D44               	addwfc	move_window@fs+1,w
 17025  2E95  0087               	movwf	7
 17026  2E96  0845               	movf	move_window@sector,w
 17027  2E97  3FC0               	movwi [0]fsr1
 17028  2E98  0846               	movf	move_window@sector+1,w
 17029  2E99  3FC1               	movwi [1]fsr1
 17030  2E9A  0847               	movf	move_window@sector+2,w
 17031  2E9B  3FC2               	movwi [2]fsr1
 17032  2E9C  0848               	movf	move_window@sector+3,w
 17033  2E9D  3FC3               	movwi [3]fsr1
 17034  2E9E                     l3972:	
 17035                           
 17036                           ;ff.c: 747: };ff.c: 748: };ff.c: 749: return res;
 17037  2E9E  084D               	movf	move_window@res,w
 17038  2E9F  0008               	return
 17039  2EA0                     __end_of_move_window:	
 17040                           
 17041                           	psect	text40
 17042  245B                     __ptext40:	
 17043 ;; *************** function _sync_window *****************
 17044 ;; Defined at:
 17045 ;;		line 700 in file "ff.c"
 17046 ;; Parameters:    Size  Location     Type
 17047 ;;  fs              2   14[BANK0 ] PTR struct .
 17048 ;;		 -> NULL(0), FatFs(558), 
 17049 ;; Auto vars:     Size  Location     Type
 17050 ;;  wsect           4   31[BANK0 ] unsigned long 
 17051 ;;  nf              2   29[BANK0 ] unsigned int 
 17052 ;;  res             1   28[BANK0 ] enum E88
 17053 ;; Return value:  Size  Location     Type
 17054 ;;                  1    wreg      enum E88
 17055 ;; Registers used:
 17056 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17057 ;; Tracked objects:
 17058 ;;		On entry : 1F/0
 17059 ;;		On exit  : 1F/0
 17060 ;;		Unchanged: 0/0
 17061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17062 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17063 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17064 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17065 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17066 ;;Total ram usage:       21 bytes
 17067 ;; Hardware stack levels used:    1
 17068 ;; Hardware stack levels required when called:    6
 17069 ;; This function calls:
 17070 ;;		_disk_write
 17071 ;; This function is called by:
 17072 ;;		_move_window
 17073 ;;		_sync_fs
 17074 ;;		_dir_next
 17075 ;;		_f_write
 17076 ;; This function uses a non-reentrant model
 17077 ;;
 17078                           
 17079                           
 17080                           ;psect for function _sync_window
 17081  245B                     _sync_window:	
 17082                           
 17083                           ;ff.c: 704: DWORD wsect;;ff.c: 705: UINT nf;;ff.c: 706: FRESULT res = FR_OK;
 17084                           
 17085                           ;incstack = 0
 17086                           ; Regs used in _sync_window: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17087  245B  01BC               	clrf	sync_window@res
 17088                           
 17089                           ;ff.c: 709: if (fs->wflag) {
 17090  245C  082E               	movf	sync_window@fs,w
 17091  245D  0086               	movwf	6
 17092  245E  082F               	movf	sync_window@fs+1,w
 17093  245F  0087               	movwf	7
 17094  2460  3144               	addfsr 1,4
 17095  2461  0801               	movf	1,w
 17096  2462  1903               	btfsc	3,2
 17097  2463  2D1E               	goto	l3952
 17098                           
 17099                           ;ff.c: 710: wsect = fs->winsect;
 17100  2464  082E               	movf	sync_window@fs,w
 17101  2465  3E2A               	addlw	42
 17102  2466  0086               	movwf	6
 17103  2467  3000               	movlw	0
 17104  2468  3D2F               	addwfc	sync_window@fs+1,w
 17105  2469  0087               	movwf	7
 17106  246A  3F40               	moviw [0]fsr1
 17107  246B  00BF               	movwf	sync_window@wsect
 17108  246C  3F41               	moviw [1]fsr1
 17109  246D  00C0               	movwf	sync_window@wsect+1
 17110  246E  3F42               	moviw [2]fsr1
 17111  246F  00C1               	movwf	sync_window@wsect+2
 17112  2470  3F43               	moviw [3]fsr1
 17113  2471  00C2               	movwf	sync_window@wsect+3
 17114                           
 17115                           ;ff.c: 711: if (disk_write(fs->drv, fs->win, wsect, 1) != RES_OK) {
 17116  2472  082E               	movf	sync_window@fs,w
 17117  2473  3E2E               	addlw	46
 17118  2474  00B0               	movwf	??_sync_window
 17119  2475  3000               	movlw	0
 17120  2476  3D2F               	addwfc	sync_window@fs+1,w
 17121  2477  00B1               	movwf	??_sync_window+1
 17122  2478  0830               	movf	??_sync_window,w
 17123  2479  00A4               	movwf	disk_write@buff
 17124  247A  0831               	movf	??_sync_window+1,w
 17125  247B  00A5               	movwf	disk_write@buff+1
 17126  247C  0842               	movf	sync_window@wsect+3,w
 17127  247D  00A9               	movwf	disk_write@sector+3
 17128  247E  0841               	movf	sync_window@wsect+2,w
 17129  247F  00A8               	movwf	disk_write@sector+2
 17130  2480  0840               	movf	sync_window@wsect+1,w
 17131  2481  00A7               	movwf	disk_write@sector+1
 17132  2482  083F               	movf	sync_window@wsect,w
 17133  2483  00A6               	movwf	disk_write@sector
 17134  2484  3001               	movlw	1
 17135  2485  00AA               	movwf	disk_write@count
 17136  2486  3000               	movlw	0
 17137  2487  00AB               	movwf	disk_write@count+1
 17138  2488  082E               	movf	sync_window@fs,w
 17139  2489  0086               	movwf	6
 17140  248A  082F               	movf	sync_window@fs+1,w
 17141  248B  0087               	movwf	7
 17142  248C  3141               	addfsr 1,1
 17143  248D  0801               	movf	1,w
 17144  248E  31A1  21B8  31A4   	fcall	_disk_write
 17145  2491  3A00               	xorlw	0
 17146  2492  1903               	skipnz
 17147  2493  2C98               	goto	l3934
 17148                           
 17149                           ;ff.c: 712: res = FR_DISK_ERR;
 17150  2494  0020               	movlb	0	; select bank0
 17151  2495  01BC               	clrf	sync_window@res
 17152  2496  0ABC               	incf	sync_window@res,f
 17153                           
 17154                           ;ff.c: 713: } else {
 17155  2497  2D1E               	goto	l3952
 17156  2498                     l3934:	
 17157                           
 17158                           ;ff.c: 714: fs->wflag = 0;
 17159  2498  0020               	movlb	0	; select bank0
 17160  2499  082E               	movf	sync_window@fs,w
 17161  249A  0086               	movwf	6
 17162  249B  082F               	movf	sync_window@fs+1,w
 17163  249C  0087               	movwf	7
 17164  249D  3144               	addfsr 1,4
 17165  249E  0181               	clrf	1
 17166                           
 17167                           ;ff.c: 715: if (wsect - fs->fatbase < fs->fsize) {
 17168  249F  082E               	movf	sync_window@fs,w
 17169  24A0  0086               	movwf	6
 17170  24A1  082F               	movf	sync_window@fs+1,w
 17171  24A2  0087               	movwf	7
 17172  24A3  3156               	addfsr 1,22
 17173  24A4  3F40               	moviw [0]fsr1
 17174  24A5  00B0               	movwf	??_sync_window
 17175  24A6  3F41               	moviw [1]fsr1
 17176  24A7  00B1               	movwf	??_sync_window+1
 17177  24A8  3F42               	moviw [2]fsr1
 17178  24A9  00B2               	movwf	??_sync_window+2
 17179  24AA  3F43               	moviw [3]fsr1
 17180  24AB  00B3               	movwf	??_sync_window+3
 17181  24AC  082E               	movf	sync_window@fs,w
 17182  24AD  0086               	movwf	6
 17183  24AE  082F               	movf	sync_window@fs+1,w
 17184  24AF  0087               	movwf	7
 17185  24B0  315E               	addfsr 1,30
 17186  24B1  3F40               	moviw [0]fsr1
 17187  24B2  00B4               	movwf	??_sync_window+4
 17188  24B3  3F41               	moviw [1]fsr1
 17189  24B4  00B5               	movwf	??_sync_window+5
 17190  24B5  3F42               	moviw [2]fsr1
 17191  24B6  00B6               	movwf	??_sync_window+6
 17192  24B7  3F43               	moviw [3]fsr1
 17193  24B8  00B7               	movwf	??_sync_window+7
 17194  24B9  083F               	movf	sync_window@wsect,w
 17195  24BA  00B8               	movwf	??_sync_window+8
 17196  24BB  0840               	movf	sync_window@wsect+1,w
 17197  24BC  00B9               	movwf	??_sync_window+9
 17198  24BD  0841               	movf	sync_window@wsect+2,w
 17199  24BE  00BA               	movwf	??_sync_window+10
 17200  24BF  0842               	movf	sync_window@wsect+3,w
 17201  24C0  00BB               	movwf	??_sync_window+11
 17202  24C1  0834               	movf	??_sync_window+4,w
 17203  24C2  02B8               	subwf	??_sync_window+8,f
 17204  24C3  0835               	movf	??_sync_window+5,w
 17205  24C4  3BB9               	subwfb	??_sync_window+9,f
 17206  24C5  0836               	movf	??_sync_window+6,w
 17207  24C6  3BBA               	subwfb	??_sync_window+10,f
 17208  24C7  0837               	movf	??_sync_window+7,w
 17209  24C8  3BBB               	subwfb	??_sync_window+11,f
 17210  24C9  0833               	movf	??_sync_window+3,w
 17211  24CA  023B               	subwf	??_sync_window+11,w
 17212  24CB  1D03               	skipz
 17213  24CC  2CD7               	goto	u4815
 17214  24CD  0832               	movf	??_sync_window+2,w
 17215  24CE  023A               	subwf	??_sync_window+10,w
 17216  24CF  1D03               	skipz
 17217  24D0  2CD7               	goto	u4815
 17218  24D1  0831               	movf	??_sync_window+1,w
 17219  24D2  0239               	subwf	??_sync_window+9,w
 17220  24D3  1D03               	skipz
 17221  24D4  2CD7               	goto	u4815
 17222  24D5  0830               	movf	??_sync_window,w
 17223  24D6  0238               	subwf	??_sync_window+8,w
 17224  24D7                     u4815:	
 17225  24D7  1803               	skipnc
 17226  24D8  2D1E               	goto	l3952
 17227                           
 17228                           ;ff.c: 716: for (nf = fs->n_fats; nf >= 2; nf--) {
 17229  24D9  082E               	movf	sync_window@fs,w
 17230  24DA  0086               	movwf	6
 17231  24DB  082F               	movf	sync_window@fs+1,w
 17232  24DC  0087               	movwf	7
 17233  24DD  3143               	addfsr 1,3
 17234  24DE  0801               	movf	1,w
 17235  24DF  00B0               	movwf	??_sync_window
 17236  24E0  01B1               	clrf	??_sync_window+1
 17237  24E1  0830               	movf	??_sync_window,w
 17238  24E2  00BD               	movwf	sync_window@nf
 17239  24E3  0831               	movf	??_sync_window+1,w
 17240  24E4  00BE               	movwf	sync_window@nf+1
 17241  24E5                     l3940:	
 17242  24E5  3000               	movlw	0
 17243  24E6  023E               	subwf	sync_window@nf+1,w
 17244  24E7  3002               	movlw	2
 17245  24E8  1903               	skipnz
 17246  24E9  023D               	subwf	sync_window@nf,w
 17247  24EA  1C03               	btfss	3,0
 17248  24EB  2D1E               	goto	l3952
 17249                           
 17250                           ;ff.c: 717: wsect += fs->fsize;
 17251  24EC  082E               	movf	sync_window@fs,w
 17252  24ED  0086               	movwf	6
 17253  24EE  082F               	movf	sync_window@fs+1,w
 17254  24EF  0087               	movwf	7
 17255  24F0  3156               	addfsr 1,22
 17256  24F1  3F40               	moviw [0]fsr1
 17257  24F2  07BF               	addwf	sync_window@wsect,f
 17258  24F3  3F41               	moviw [1]fsr1
 17259  24F4  3DC0               	addwfc	sync_window@wsect+1,f
 17260  24F5  3F42               	moviw [2]fsr1
 17261  24F6  3DC1               	addwfc	sync_window@wsect+2,f
 17262  24F7  3F43               	moviw [3]fsr1
 17263  24F8  3DC2               	addwfc	sync_window@wsect+3,f
 17264                           
 17265                           ;ff.c: 718: disk_write(fs->drv, fs->win, wsect, 1);
 17266  24F9  082E               	movf	sync_window@fs,w
 17267  24FA  3E2E               	addlw	46
 17268  24FB  00B0               	movwf	??_sync_window
 17269  24FC  3000               	movlw	0
 17270  24FD  3D2F               	addwfc	sync_window@fs+1,w
 17271  24FE  00B1               	movwf	??_sync_window+1
 17272  24FF  0830               	movf	??_sync_window,w
 17273  2500  00A4               	movwf	disk_write@buff
 17274  2501  0831               	movf	??_sync_window+1,w
 17275  2502  00A5               	movwf	disk_write@buff+1
 17276  2503  0842               	movf	sync_window@wsect+3,w
 17277  2504  00A9               	movwf	disk_write@sector+3
 17278  2505  0841               	movf	sync_window@wsect+2,w
 17279  2506  00A8               	movwf	disk_write@sector+2
 17280  2507  0840               	movf	sync_window@wsect+1,w
 17281  2508  00A7               	movwf	disk_write@sector+1
 17282  2509  083F               	movf	sync_window@wsect,w
 17283  250A  00A6               	movwf	disk_write@sector
 17284  250B  3001               	movlw	1
 17285  250C  00AA               	movwf	disk_write@count
 17286  250D  3000               	movlw	0
 17287  250E  00AB               	movwf	disk_write@count+1
 17288  250F  082E               	movf	sync_window@fs,w
 17289  2510  0086               	movwf	6
 17290  2511  082F               	movf	sync_window@fs+1,w
 17291  2512  0087               	movwf	7
 17292  2513  3141               	addfsr 1,1
 17293  2514  0801               	movf	1,w
 17294  2515  31A1  21B8  31A4   	fcall	_disk_write
 17295  2518  3001               	movlw	1
 17296  2519  0020               	movlb	0	; select bank0
 17297  251A  02BD               	subwf	sync_window@nf,f
 17298  251B  3000               	movlw	0
 17299  251C  3BBE               	subwfb	sync_window@nf+1,f
 17300  251D  2CE5               	goto	l3940
 17301  251E                     l3952:	
 17302                           
 17303                           ;ff.c: 719: };ff.c: 720: };ff.c: 721: };ff.c: 722: };ff.c: 723: return res;
 17304  251E  083C               	movf	sync_window@res,w
 17305  251F  0008               	return
 17306  2520                     __end_of_sync_window:	
 17307                           
 17308                           	psect	text41
 17309  21B8                     __ptext41:	
 17310 ;; *************** function _disk_write *****************
 17311 ;; Defined at:
 17312 ;;		line 407 in file "diskio.c"
 17313 ;; Parameters:    Size  Location     Type
 17314 ;;  pdrv            1    wreg     unsigned char 
 17315 ;;  buff            2    4[BANK0 ] PTR const unsigned char 
 17316 ;;		 -> FatFs.win(512), NULL(0), STR_3(21), FatFs(558), 
 17317 ;;  sector          4    6[BANK0 ] unsigned long 
 17318 ;;  count           2   10[BANK0 ] unsigned int 
 17319 ;; Auto vars:     Size  Location     Type
 17320 ;;  pdrv            1   13[BANK0 ] unsigned char 
 17321 ;; Return value:  Size  Location     Type
 17322 ;;                  1    wreg      enum E5699
 17323 ;; Registers used:
 17324 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17325 ;; Tracked objects:
 17326 ;;		On entry : 1E/1
 17327 ;;		On exit  : 1E/0
 17328 ;;		Unchanged: 0/0
 17329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17330 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17331 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17332 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17333 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17334 ;;Total ram usage:       10 bytes
 17335 ;; Hardware stack levels used:    1
 17336 ;; Hardware stack levels required when called:    5
 17337 ;; This function calls:
 17338 ;;		_deselect
 17339 ;;		_send_cmd
 17340 ;;		_xmit_datablock
 17341 ;; This function is called by:
 17342 ;;		_sync_window
 17343 ;;		_sync_fs
 17344 ;;		_f_write
 17345 ;; This function uses a non-reentrant model
 17346 ;;
 17347                           
 17348                           
 17349                           ;psect for function _disk_write
 17350  21B8                     _disk_write:	
 17351                           
 17352                           ;incstack = 0
 17353                           ; Regs used in _disk_write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 17354                           ;disk_write@pdrv stored from wreg
 17355  21B8  0020               	movlb	0	; select bank0
 17356  21B9  00AD               	movwf	disk_write@pdrv
 17357                           
 17358                           ;diskio.c: 414: if (pdrv || !count) return RES_PARERR;
 17359  21BA  082D               	movf	disk_write@pdrv,w
 17360  21BB  1D03               	btfss	3,2
 17361  21BC  29C1               	goto	l3844
 17362  21BD  082A               	movf	disk_write@count,w
 17363  21BE  042B               	iorwf	disk_write@count+1,w
 17364  21BF  1D03               	btfss	3,2
 17365  21C0  29C3               	goto	l217
 17366  21C1                     l3844:	
 17367  21C1  3004               	movlw	4
 17368  21C2  0008               	return
 17369  21C3                     l217:	
 17370                           
 17371                           ;diskio.c: 415: if (Stat & 0x01) return RES_NOTRDY;
 17372  21C3  0021               	movlb	1	; select bank1
 17373  21C4  1C6E               	btfss	_Stat^(0+128),0
 17374  21C5  29C8               	goto	l221
 17375  21C6  3003               	movlw	3
 17376  21C7  0008               	return
 17377  21C8                     l221:	
 17378                           
 17379                           ;diskio.c: 416: if (Stat & 0x04) return RES_WRPRT;
 17380  21C8  1D6E               	btfss	_Stat^(0+128),2
 17381  21C9  29CC               	goto	l222
 17382  21CA  3002               	movlw	2
 17383  21CB  0008               	return
 17384  21CC                     l222:	
 17385                           
 17386                           ;diskio.c: 418: if (!(CardType & 0x08)) sector *= 512;
 17387  21CC  19EB               	btfsc	_CardType^(0+128),3
 17388  21CD  29D6               	goto	l223
 17389  21CE  3009               	movlw	9
 17390  21CF                     u4565:	
 17391  21CF  0020               	movlb	0	; select bank0
 17392  21D0  35A6               	lslf	disk_write@sector,f
 17393  21D1  0DA7               	rlf	disk_write@sector+1,f
 17394  21D2  0DA8               	rlf	disk_write@sector+2,f
 17395  21D3  0DA9               	rlf	disk_write@sector+3,f
 17396  21D4  0B89               	decfsz	9,f
 17397  21D5  29CF               	goto	u4565
 17398  21D6                     l223:	
 17399                           
 17400                           ;diskio.c: 420: if (count == 1) {
 17401  21D6  0020               	movlb	0	; select bank0
 17402  21D7  032A               	decf	disk_write@count,w
 17403  21D8  042B               	iorwf	disk_write@count+1,w
 17404  21D9  1D03               	btfss	3,2
 17405  21DA  29FD               	goto	l3864
 17406                           
 17407                           ;diskio.c: 421: if ((send_cmd((24), sector) == 0);diskio.c: 422: && xmit_datablock(buff,
      +                           0xFE))
 17408  21DB  0829               	movf	disk_write@sector+3,w
 17409  21DC  00A3               	movwf	send_cmd@arg+3
 17410  21DD  0828               	movf	disk_write@sector+2,w
 17411  21DE  00A2               	movwf	send_cmd@arg+2
 17412  21DF  0827               	movf	disk_write@sector+1,w
 17413  21E0  00A1               	movwf	send_cmd@arg+1
 17414  21E1  0826               	movf	disk_write@sector,w
 17415  21E2  00A0               	movwf	send_cmd@arg
 17416  21E3  3018               	movlw	24
 17417  21E4  31AB  238F  31A1   	fcall	_send_cmd
 17418  21E7  3A00               	xorlw	0
 17419  21E8  1D03               	skipz
 17420  21E9  2A4D               	goto	l3880
 17421  21EA  0020               	movlb	0	; select bank0
 17422  21EB  0825               	movf	disk_write@buff+1,w
 17423  21EC  00F4               	movwf	xmit_datablock@buff+1
 17424  21ED  0824               	movf	disk_write@buff,w
 17425  21EE  00F3               	movwf	xmit_datablock@buff
 17426  21EF  30FE               	movlw	254
 17427  21F0  00AC               	movwf	??_disk_write
 17428  21F1  082C               	movf	??_disk_write,w
 17429  21F2  00F5               	movwf	xmit_datablock@token
 17430  21F3  31AC  245C  31A1   	fcall	_xmit_datablock
 17431  21F6  3A00               	xorlw	0
 17432  21F7  1903               	skipnz
 17433  21F8  2A4D               	goto	l3880
 17434                           
 17435                           ;diskio.c: 423: count = 0;
 17436  21F9  0020               	movlb	0	; select bank0
 17437  21FA  01AA               	clrf	disk_write@count
 17438  21FB  01AB               	clrf	disk_write@count+1
 17439  21FC  2A4D               	goto	l3880
 17440  21FD                     l3864:	
 17441                           
 17442                           ;diskio.c: 425: else {;diskio.c: 426: if (CardType & (0x02|0x04)) send_cmd((0x80+23), co
      +                          unt);
 17443  21FD  0021               	movlb	1	; select bank1
 17444  21FE  086B               	movf	_CardType^(0+128),w
 17445  21FF  3906               	andlw	6
 17446  2200  1903               	btfsc	3,2
 17447  2201  2A0D               	goto	l227
 17448  2202  0020               	movlb	0	; select bank0
 17449  2203  082A               	movf	disk_write@count,w
 17450  2204  00A0               	movwf	send_cmd@arg
 17451  2205  082B               	movf	disk_write@count+1,w
 17452  2206  00A1               	movwf	send_cmd@arg+1
 17453  2207  01A2               	clrf	send_cmd@arg+2
 17454  2208  01A3               	clrf	send_cmd@arg+3
 17455  2209  3097               	movlw	151
 17456  220A  31AB  238F  31A1   	fcall	_send_cmd
 17457  220D                     l227:	
 17458                           
 17459                           ;diskio.c: 427: if (send_cmd((25), sector) == 0) {
 17460  220D  0020               	movlb	0	; select bank0
 17461  220E  0829               	movf	disk_write@sector+3,w
 17462  220F  00A3               	movwf	send_cmd@arg+3
 17463  2210  0828               	movf	disk_write@sector+2,w
 17464  2211  00A2               	movwf	send_cmd@arg+2
 17465  2212  0827               	movf	disk_write@sector+1,w
 17466  2213  00A1               	movwf	send_cmd@arg+1
 17467  2214  0826               	movf	disk_write@sector,w
 17468  2215  00A0               	movwf	send_cmd@arg
 17469  2216  3019               	movlw	25
 17470  2217  31AB  238F  31A1   	fcall	_send_cmd
 17471  221A  3A00               	xorlw	0
 17472  221B  1D03               	skipz
 17473  221C  2A4D               	goto	l3880
 17474  221D                     l3868:	
 17475                           
 17476                           ;diskio.c: 429: if (!xmit_datablock(buff, 0xFC)) break;
 17477  221D  0020               	movlb	0	; select bank0
 17478  221E  0825               	movf	disk_write@buff+1,w
 17479  221F  00F4               	movwf	xmit_datablock@buff+1
 17480  2220  0824               	movf	disk_write@buff,w
 17481  2221  00F3               	movwf	xmit_datablock@buff
 17482  2222  30FC               	movlw	252
 17483  2223  00AC               	movwf	??_disk_write
 17484  2224  082C               	movf	??_disk_write,w
 17485  2225  00F5               	movwf	xmit_datablock@token
 17486  2226  31AC  245C  31A1   	fcall	_xmit_datablock
 17487  2229  3A00               	xorlw	0
 17488  222A  1903               	btfsc	3,2
 17489  222B  2A39               	goto	l3876
 17490                           
 17491                           ;diskio.c: 430: buff += 512;
 17492  222C  3000               	movlw	0
 17493  222D  0020               	movlb	0	; select bank0
 17494  222E  07A4               	addwf	disk_write@buff,f
 17495  222F  3002               	movlw	2
 17496  2230  3DA5               	addwfc	disk_write@buff+1,f
 17497                           
 17498                           ;diskio.c: 431: } while (--count);
 17499  2231  3001               	movlw	1
 17500  2232  02AA               	subwf	disk_write@count,f
 17501  2233  3000               	movlw	0
 17502  2234  3BAB               	subwfb	disk_write@count+1,f
 17503  2235  082A               	movf	disk_write@count,w
 17504  2236  042B               	iorwf	disk_write@count+1,w
 17505  2237  1D03               	btfss	3,2
 17506  2238  2A1D               	goto	l3868
 17507  2239                     l3876:	
 17508                           
 17509                           ;diskio.c: 432: if (!xmit_datablock(0, 0xFD))
 17510  2239  3000               	movlw	0
 17511  223A  00F3               	movwf	xmit_datablock@buff
 17512  223B  3000               	movlw	0
 17513  223C  00F4               	movwf	xmit_datablock@buff+1
 17514  223D  30FD               	movlw	253
 17515  223E  0020               	movlb	0	; select bank0
 17516  223F  00AC               	movwf	??_disk_write
 17517  2240  082C               	movf	??_disk_write,w
 17518  2241  00F5               	movwf	xmit_datablock@token
 17519  2242  31AC  245C  31A1   	fcall	_xmit_datablock
 17520  2245  3A00               	xorlw	0
 17521  2246  1D03               	skipz
 17522  2247  2A4D               	goto	l3880
 17523                           
 17524                           ;diskio.c: 433: count = 1;
 17525  2248  3001               	movlw	1
 17526  2249  0020               	movlb	0	; select bank0
 17527  224A  00AA               	movwf	disk_write@count
 17528  224B  3000               	movlw	0
 17529  224C  00AB               	movwf	disk_write@count+1
 17530  224D                     l3880:	
 17531                           
 17532                           ;diskio.c: 434: };diskio.c: 435: };diskio.c: 436: deselect();
 17533  224D  3190  2000  31A1   	fcall	_deselect
 17534                           
 17535                           ;diskio.c: 438: return count ? RES_ERROR : RES_OK;
 17536  2250  0020               	movlb	0	; select bank0
 17537  2251  082A               	movf	disk_write@count,w
 17538  2252  042B               	iorwf	disk_write@count+1,w
 17539  2253  1903               	btfsc	3,2
 17540  2254  2A57               	goto	u4650
 17541  2255  3001               	movlw	1
 17542  2256  0008               	return
 17543  2257                     u4650:	
 17544  2257  3000               	movlw	0
 17545  2258  0008               	return
 17546  2259                     __end_of_disk_write:	
 17547                           
 17548                           	psect	text42
 17549  2C5C                     __ptext42:	
 17550 ;; *************** function _xmit_datablock *****************
 17551 ;; Defined at:
 17552 ;;		line 157 in file "diskio.c"
 17553 ;; Parameters:    Size  Location     Type
 17554 ;;  buff            2    3[COMMON] PTR const unsigned char 
 17555 ;;		 -> FatFs.win(512), NULL(0), STR_3(21), FatFs(558), 
 17556 ;;  token           1    5[COMMON] unsigned char 
 17557 ;; Auto vars:     Size  Location     Type
 17558 ;;  i               2    7[COMMON] unsigned int 
 17559 ;;  resp            1    9[COMMON] unsigned char 
 17560 ;; Return value:  Size  Location     Type
 17561 ;;                  1    wreg      unsigned char 
 17562 ;; Registers used:
 17563 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17564 ;; Tracked objects:
 17565 ;;		On entry : 1F/0
 17566 ;;		On exit  : 0/0
 17567 ;;		Unchanged: 0/0
 17568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17569 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17570 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17571 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17572 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17573 ;;Total ram usage:        7 bytes
 17574 ;; Hardware stack levels used:    1
 17575 ;; Hardware stack levels required when called:    2
 17576 ;; This function calls:
 17577 ;;		_SPI_Exchange8bit
 17578 ;;		_wait_ready
 17579 ;; This function is called by:
 17580 ;;		_disk_write
 17581 ;; This function uses a non-reentrant model
 17582 ;;
 17583                           
 17584                           
 17585                           ;psect for function _xmit_datablock
 17586  2C5C                     _xmit_datablock:	
 17587                           
 17588                           ;diskio.c: 162: BYTE resp;;diskio.c: 163: WORD i;;diskio.c: 166: if (!wait_ready()) retu
      +                          rn 0;
 17589                           
 17590                           ;incstack = 0
 17591                           ; Regs used in _xmit_datablock: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 17592  2C5C  31AB  2325  31AC   	fcall	_wait_ready
 17593  2C5F  3A00               	xorlw	0
 17594  2C60  1903               	btfsc	3,2
 17595  2C61  2C91               	goto	l3764
 17596  2C62  2C93               	goto	l3768
 17597  2C63                     l3772:	
 17598                           
 17599                           ;diskio.c: 170: i = 512;
 17600  2C63  3000               	movlw	0
 17601  2C64  00F7               	movwf	xmit_datablock@i
 17602  2C65  3002               	movlw	2
 17603  2C66  00F8               	movwf	xmit_datablock@i+1
 17604  2C67                     l3774:	
 17605                           
 17606                           ;diskio.c: 172: SPI_Exchange8bit(*buff++);
 17607  2C67  0873               	movf	xmit_datablock@buff,w
 17608  2C68  0084               	movwf	4
 17609  2C69  0874               	movf	xmit_datablock@buff+1,w
 17610  2C6A  0085               	movwf	5
 17611  2C6B  0800               	movf	0,w	;code access
 17612  2C6C  31AA  22B2  31AC   	fcall	_SPI_Exchange8bit
 17613  2C6F  3001               	movlw	1
 17614  2C70  07F3               	addwf	xmit_datablock@buff,f
 17615  2C71  3000               	movlw	0
 17616  2C72  3DF4               	addwfc	xmit_datablock@buff+1,f
 17617                           
 17618                           ;diskio.c: 173: while (--i);
 17619  2C73  3001               	movlw	1
 17620  2C74  02F7               	subwf	xmit_datablock@i,f
 17621  2C75  3000               	movlw	0
 17622  2C76  3BF8               	subwfb	xmit_datablock@i+1,f
 17623  2C77  0877               	movf	xmit_datablock@i,w
 17624  2C78  0478               	iorwf	xmit_datablock@i+1,w
 17625  2C79  1D03               	btfss	3,2
 17626  2C7A  2C67               	goto	l3774
 17627                           
 17628                           ;diskio.c: 174: SPI_Exchange8bit(0xFF);
 17629  2C7B  30FF               	movlw	255
 17630  2C7C  31AA  22B2  31AC   	fcall	_SPI_Exchange8bit
 17631                           
 17632                           ;diskio.c: 175: SPI_Exchange8bit(0xFF);
 17633  2C7F  30FF               	movlw	255
 17634  2C80  31AA  22B2  31AC   	fcall	_SPI_Exchange8bit
 17635                           
 17636                           ;diskio.c: 176: resp = SPI_Exchange8bit(0xFF);
 17637  2C83  30FF               	movlw	255
 17638  2C84  31AA  22B2  31AC   	fcall	_SPI_Exchange8bit
 17639  2C87  00F6               	movwf	??_xmit_datablock
 17640  2C88  0876               	movf	??_xmit_datablock,w
 17641  2C89  00F9               	movwf	xmit_datablock@resp
 17642                           
 17643                           ;diskio.c: 177: if ((resp & 0x1F) != 0x05)
 17644  2C8A  301F               	movlw	31
 17645  2C8B  0579               	andwf	xmit_datablock@resp,w
 17646  2C8C  00F6               	movwf	??_xmit_datablock
 17647  2C8D  3005               	movlw	5
 17648  2C8E  0676               	xorwf	??_xmit_datablock,w
 17649  2C8F  1903               	btfsc	3,2
 17650  2C90  2C9B               	goto	l3790
 17651  2C91                     l3764:	
 17652  2C91  3000               	movlw	0
 17653  2C92  0008               	return
 17654  2C93                     l3768:	
 17655                           
 17656                           ;diskio.c: 168: SPI_Exchange8bit(token);
 17657  2C93  0875               	movf	xmit_datablock@token,w
 17658  2C94  31AA  22B2  31AC   	fcall	_SPI_Exchange8bit
 17659                           
 17660                           ;diskio.c: 169: if (token != 0xFD) {
 17661  2C97  30FD               	movlw	253
 17662  2C98  0675               	xorwf	xmit_datablock@token,w
 17663  2C99  1D03               	btfss	3,2
 17664  2C9A  2C63               	goto	l3772
 17665  2C9B                     l3790:	
 17666                           
 17667                           ;diskio.c: 179: };diskio.c: 181: return 1;
 17668  2C9B  3001               	movlw	1
 17669  2C9C  0008               	return
 17670  2C9D                     __end_of_xmit_datablock:	
 17671                           
 17672                           	psect	text43
 17673  2EA0                     __ptext43:	
 17674 ;; *************** function _disk_read *****************
 17675 ;; Defined at:
 17676 ;;		line 372 in file "diskio.c"
 17677 ;; Parameters:    Size  Location     Type
 17678 ;;  pdrv            1    wreg     unsigned char 
 17679 ;;  buff            2    4[BANK0 ] PTR unsigned char 
 17680 ;;		 -> NULL(0), FatFs(558), 
 17681 ;;  sector          4    6[BANK0 ] unsigned long 
 17682 ;;  count           2   10[BANK0 ] unsigned int 
 17683 ;; Auto vars:     Size  Location     Type
 17684 ;;  pdrv            1   13[BANK0 ] unsigned char 
 17685 ;;  cmd             1   16[BANK0 ] unsigned char 
 17686 ;; Return value:  Size  Location     Type
 17687 ;;                  1    wreg      enum E5699
 17688 ;; Registers used:
 17689 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17690 ;; Tracked objects:
 17691 ;;		On entry : 1F/0
 17692 ;;		On exit  : 1E/0
 17693 ;;		Unchanged: 0/0
 17694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17695 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17696 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17697 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17698 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17699 ;;Total ram usage:       13 bytes
 17700 ;; Hardware stack levels used:    1
 17701 ;; Hardware stack levels required when called:    5
 17702 ;; This function calls:
 17703 ;;		_deselect
 17704 ;;		_rcvr_datablock
 17705 ;;		_send_cmd
 17706 ;; This function is called by:
 17707 ;;		_move_window
 17708 ;; This function uses a non-reentrant model
 17709 ;;
 17710                           
 17711                           
 17712                           ;psect for function _disk_read
 17713  2EA0                     _disk_read:	
 17714                           
 17715                           ;incstack = 0
 17716                           ; Regs used in _disk_read: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17717                           ;disk_read@pdrv stored from wreg
 17718  2EA0  00AD               	movwf	disk_read@pdrv
 17719                           
 17720                           ;diskio.c: 379: BYTE cmd;;diskio.c: 382: if (pdrv || !count) return RES_PARERR;
 17721  2EA1  082D               	movf	disk_read@pdrv,w
 17722  2EA2  1D03               	btfss	3,2
 17723  2EA3  2EA8               	goto	l3890
 17724  2EA4  082A               	movf	disk_read@count,w
 17725  2EA5  042B               	iorwf	disk_read@count+1,w
 17726  2EA6  1D03               	btfss	3,2
 17727  2EA7  2EAA               	goto	l200
 17728  2EA8                     l3890:	
 17729  2EA8  3004               	movlw	4
 17730  2EA9  0008               	return
 17731  2EAA                     l200:	
 17732                           
 17733                           ;diskio.c: 383: if (Stat & 0x01) return RES_NOTRDY;
 17734  2EAA  0021               	movlb	1	; select bank1
 17735  2EAB  1C6E               	btfss	_Stat^(0+128),0
 17736  2EAC  2EAF               	goto	l204
 17737  2EAD  3003               	movlw	3
 17738  2EAE  0008               	return
 17739  2EAF                     l204:	
 17740                           
 17741                           ;diskio.c: 385: if (!(CardType & 0x08)) sector *= 512;
 17742  2EAF  19EB               	btfsc	_CardType^(0+128),3
 17743  2EB0  2EB9               	goto	l3900
 17744  2EB1  3009               	movlw	9
 17745  2EB2                     u4715:	
 17746  2EB2  0020               	movlb	0	; select bank0
 17747  2EB3  35A6               	lslf	disk_read@sector,f
 17748  2EB4  0DA7               	rlf	disk_read@sector+1,f
 17749  2EB5  0DA8               	rlf	disk_read@sector+2,f
 17750  2EB6  0DA9               	rlf	disk_read@sector+3,f
 17751  2EB7  0B89               	decfsz	9,f
 17752  2EB8  2EB2               	goto	u4715
 17753  2EB9                     l3900:	
 17754                           
 17755                           ;diskio.c: 387: cmd = count > 1 ? (18) : (17);
 17756  2EB9  3000               	movlw	0
 17757  2EBA  0020               	movlb	0	; select bank0
 17758  2EBB  022B               	subwf	disk_read@count+1,w
 17759  2EBC  3002               	movlw	2
 17760  2EBD  1903               	skipnz
 17761  2EBE  022A               	subwf	disk_read@count,w
 17762  2EBF  1803               	skipnc
 17763  2EC0  2EC3               	goto	l3904
 17764  2EC1  3011               	movlw	17
 17765  2EC2  2EC4               	goto	L15
 17766  2EC3                     l3904:	
 17767  2EC3  3012               	movlw	18
 17768  2EC4                     L15:	
 17769  2EC4  00AE               	movwf	_disk_read$355
 17770  2EC5  3000               	movlw	0
 17771  2EC6  00AF               	movwf	_disk_read$355+1
 17772  2EC7  082E               	movf	_disk_read$355,w
 17773  2EC8  00AC               	movwf	??_disk_read
 17774  2EC9  082C               	movf	??_disk_read,w
 17775  2ECA  00B0               	movwf	disk_read@cmd
 17776                           
 17777                           ;diskio.c: 388: if (send_cmd(cmd, sector) == 0) {
 17778  2ECB  0829               	movf	disk_read@sector+3,w
 17779  2ECC  00A3               	movwf	send_cmd@arg+3
 17780  2ECD  0828               	movf	disk_read@sector+2,w
 17781  2ECE  00A2               	movwf	send_cmd@arg+2
 17782  2ECF  0827               	movf	disk_read@sector+1,w
 17783  2ED0  00A1               	movwf	send_cmd@arg+1
 17784  2ED1  0826               	movf	disk_read@sector,w
 17785  2ED2  00A0               	movwf	send_cmd@arg
 17786  2ED3  0830               	movf	disk_read@cmd,w
 17787  2ED4  31AB  238F  31AE   	fcall	_send_cmd
 17788  2ED7  3A00               	xorlw	0
 17789  2ED8  1D03               	skipz
 17790  2ED9  2F07               	goto	l210
 17791  2EDA                     l3908:	
 17792                           
 17793                           ;diskio.c: 390: if (!rcvr_datablock(buff, 512)) break;
 17794  2EDA  0020               	movlb	0	; select bank0
 17795  2EDB  0825               	movf	disk_read@buff+1,w
 17796  2EDC  00F2               	movwf	rcvr_datablock@buff+1
 17797  2EDD  0824               	movf	disk_read@buff,w
 17798  2EDE  00F1               	movwf	rcvr_datablock@buff
 17799  2EDF  3000               	movlw	0
 17800  2EE0  00F3               	movwf	rcvr_datablock@btr
 17801  2EE1  3002               	movlw	2
 17802  2EE2  00F4               	movwf	rcvr_datablock@btr+1
 17803  2EE3  31AC  241B  31AE   	fcall	_rcvr_datablock
 17804  2EE6  3A00               	xorlw	0
 17805  2EE7  1903               	btfsc	3,2
 17806  2EE8  2EF6               	goto	l3916
 17807                           
 17808                           ;diskio.c: 391: buff += 512;
 17809  2EE9  3000               	movlw	0
 17810  2EEA  0020               	movlb	0	; select bank0
 17811  2EEB  07A4               	addwf	disk_read@buff,f
 17812  2EEC  3002               	movlw	2
 17813  2EED  3DA5               	addwfc	disk_read@buff+1,f
 17814                           
 17815                           ;diskio.c: 392: } while (--count);
 17816  2EEE  3001               	movlw	1
 17817  2EEF  02AA               	subwf	disk_read@count,f
 17818  2EF0  3000               	movlw	0
 17819  2EF1  3BAB               	subwfb	disk_read@count+1,f
 17820  2EF2  082A               	movf	disk_read@count,w
 17821  2EF3  042B               	iorwf	disk_read@count+1,w
 17822  2EF4  1D03               	btfss	3,2
 17823  2EF5  2EDA               	goto	l3908
 17824  2EF6                     l3916:	
 17825                           
 17826                           ;diskio.c: 393: if (cmd == (18)) send_cmd((12), 0);
 17827  2EF6  3012               	movlw	18
 17828  2EF7  0020               	movlb	0	; select bank0
 17829  2EF8  0630               	xorwf	disk_read@cmd,w
 17830  2EF9  1D03               	btfss	3,2
 17831  2EFA  2F07               	goto	l210
 17832  2EFB  3000               	movlw	0
 17833  2EFC  00A3               	movwf	send_cmd@arg+3
 17834  2EFD  3000               	movlw	0
 17835  2EFE  00A2               	movwf	send_cmd@arg+2
 17836  2EFF  3000               	movlw	0
 17837  2F00  00A1               	movwf	send_cmd@arg+1
 17838  2F01  3000               	movlw	0
 17839  2F02  00A0               	movwf	send_cmd@arg
 17840  2F03  300C               	movlw	12
 17841  2F04  31AB  238F  31AE   	fcall	_send_cmd
 17842  2F07                     l210:	
 17843                           
 17844                           ;diskio.c: 394: };diskio.c: 395: deselect();
 17845  2F07  3190  2000  31AE   	fcall	_deselect
 17846                           
 17847                           ;diskio.c: 397: return count ? RES_ERROR : RES_OK;
 17848  2F0A  0020               	movlb	0	; select bank0
 17849  2F0B  082A               	movf	disk_read@count,w
 17850  2F0C  042B               	iorwf	disk_read@count+1,w
 17851  2F0D  1903               	btfsc	3,2
 17852  2F0E  2F11               	goto	u4770
 17853  2F0F  3001               	movlw	1
 17854  2F10  0008               	return
 17855  2F11                     u4770:	
 17856  2F11  3000               	movlw	0
 17857  2F12  0008               	return
 17858  2F13                     __end_of_disk_read:	
 17859                           
 17860                           	psect	text44
 17861  2B8F                     __ptext44:	
 17862 ;; *************** function _send_cmd *****************
 17863 ;; Defined at:
 17864 ;;		line 233 in file "diskio.c"
 17865 ;; Parameters:    Size  Location     Type
 17866 ;;  cmd             1    wreg     unsigned char 
 17867 ;;  arg             4    0[BANK0 ] unsigned long 
 17868 ;; Auto vars:     Size  Location     Type
 17869 ;;  cmd             1   12[COMMON] unsigned char 
 17870 ;;  res             1   13[COMMON] unsigned char 
 17871 ;; Return value:  Size  Location     Type
 17872 ;;                  1    wreg      unsigned char 
 17873 ;; Registers used:
 17874 ;;		wreg, status,2, status,0, pclath, cstack
 17875 ;; Tracked objects:
 17876 ;;		On entry : 1F/0
 17877 ;;		On exit  : 0/0
 17878 ;;		Unchanged: 0/0
 17879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17880 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17881 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17882 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17883 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17884 ;;Total ram usage:        7 bytes
 17885 ;; Hardware stack levels used:    1
 17886 ;; Hardware stack levels required when called:    4
 17887 ;; This function calls:
 17888 ;;		___send_cmd
 17889 ;; This function is called by:
 17890 ;;		_disk_initialize
 17891 ;;		_disk_read
 17892 ;;		_disk_write
 17893 ;;		_disk_ioctl
 17894 ;; This function uses a non-reentrant model
 17895 ;;
 17896                           
 17897                           
 17898                           ;psect for function _send_cmd
 17899  2B8F                     _send_cmd:	
 17900                           
 17901                           ;incstack = 0
 17902                           ; Regs used in _send_cmd: [wreg+status,2+status,0+pclath+cstack]
 17903                           ;send_cmd@cmd stored from wreg
 17904  2B8F  00FC               	movwf	send_cmd@cmd
 17905                           
 17906                           ;diskio.c: 241: BYTE res;;diskio.c: 244: if (cmd & 0x80) {
 17907  2B90  1FFC               	btfss	send_cmd@cmd,7
 17908  2B91  2BAB               	goto	l3806
 17909                           
 17910                           ;diskio.c: 245: cmd &= 0x7F;
 17911  2B92  307F               	movlw	127
 17912  2B93  00FB               	movwf	??_send_cmd
 17913  2B94  087B               	movf	??_send_cmd,w
 17914  2B95  05FC               	andwf	send_cmd@cmd,f
 17915                           
 17916                           ;diskio.c: 247: res = __send_cmd((55), 0);
 17917  2B96  3000               	movlw	0
 17918  2B97  00F6               	movwf	___send_cmd@arg+3
 17919  2B98  3000               	movlw	0
 17920  2B99  00F5               	movwf	___send_cmd@arg+2
 17921  2B9A  3000               	movlw	0
 17922  2B9B  00F4               	movwf	___send_cmd@arg+1
 17923  2B9C  3000               	movlw	0
 17924  2B9D  00F3               	movwf	___send_cmd@arg
 17925  2B9E  3037               	movlw	55
 17926  2B9F  31AD  258B  31AB   	fcall	___send_cmd
 17927  2BA2  00FB               	movwf	??_send_cmd
 17928  2BA3  087B               	movf	??_send_cmd,w
 17929  2BA4  00FD               	movwf	send_cmd@res
 17930                           
 17931                           ;diskio.c: 251: if (res > 1) return res;
 17932  2BA5  3002               	movlw	2
 17933  2BA6  027D               	subwf	send_cmd@res,w
 17934  2BA7  1C03               	skipc
 17935  2BA8  2BAB               	goto	l3806
 17936  2BA9  087D               	movf	send_cmd@res,w
 17937  2BAA  0008               	return
 17938  2BAB                     l3806:	
 17939                           
 17940                           ;diskio.c: 252: };diskio.c: 255: return __send_cmd(cmd, arg);
 17941  2BAB  0020               	movlb	0	; select bank0
 17942  2BAC  0823               	movf	send_cmd@arg+3,w
 17943  2BAD  00F6               	movwf	___send_cmd@arg+3
 17944  2BAE  0822               	movf	send_cmd@arg+2,w
 17945  2BAF  00F5               	movwf	___send_cmd@arg+2
 17946  2BB0  0821               	movf	send_cmd@arg+1,w
 17947  2BB1  00F4               	movwf	___send_cmd@arg+1
 17948  2BB2  0820               	movf	send_cmd@arg,w
 17949  2BB3  00F3               	movwf	___send_cmd@arg
 17950  2BB4  087C               	movf	send_cmd@cmd,w
 17951  2BB5  31AD  258B         	fcall	___send_cmd
 17952  2BB7  0008               	return
 17953  2BB8                     __end_of_send_cmd:	
 17954                           
 17955                           	psect	text45
 17956  2D8B                     __ptext45:	
 17957 ;; *************** function ___send_cmd *****************
 17958 ;; Defined at:
 17959 ;;		line 196 in file "diskio.c"
 17960 ;; Parameters:    Size  Location     Type
 17961 ;;  cmd             1    wreg     unsigned char 
 17962 ;;  arg             4    3[COMMON] unsigned long 
 17963 ;; Auto vars:     Size  Location     Type
 17964 ;;  cmd             1   10[COMMON] unsigned char 
 17965 ;;  n               1    9[COMMON] unsigned char 
 17966 ;;  res             1    8[COMMON] unsigned char 
 17967 ;; Return value:  Size  Location     Type
 17968 ;;                  1    wreg      unsigned char 
 17969 ;; Registers used:
 17970 ;;		wreg, status,2, status,0, pclath, cstack
 17971 ;; Tracked objects:
 17972 ;;		On entry : 1F/0
 17973 ;;		On exit  : 0/0
 17974 ;;		Unchanged: 0/0
 17975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17976 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17977 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17978 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17979 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17980 ;;Total ram usage:        8 bytes
 17981 ;; Hardware stack levels used:    1
 17982 ;; Hardware stack levels required when called:    3
 17983 ;; This function calls:
 17984 ;;		_SPI_Exchange8bit
 17985 ;;		_deselect
 17986 ;;		_select
 17987 ;; This function is called by:
 17988 ;;		_send_cmd
 17989 ;; This function uses a non-reentrant model
 17990 ;;
 17991                           
 17992                           
 17993                           ;psect for function ___send_cmd
 17994  2D8B                     ___send_cmd:	
 17995                           
 17996                           ;incstack = 0
 17997                           ; Regs used in ___send_cmd: [wreg+status,2+status,0+pclath+cstack]
 17998                           ;___send_cmd@cmd stored from wreg
 17999  2D8B  00FA               	movwf	___send_cmd@cmd
 18000                           
 18001                           ;diskio.c: 201: BYTE n, res;;diskio.c: 205: if (cmd != (12)) {
 18002  2D8C  300C               	movlw	12
 18003  2D8D  067A               	xorwf	___send_cmd@cmd,w
 18004  2D8E  1903               	btfsc	3,2
 18005  2D8F  2D9B               	goto	l3732
 18006                           
 18007                           ;diskio.c: 206: deselect();
 18008  2D90  3190  2000  31AD   	fcall	_deselect
 18009                           
 18010                           ;diskio.c: 207: if (!select()) return 0xFF;
 18011  2D93  31AA  22CD  31AD   	fcall	_select
 18012  2D96  3A00               	xorlw	0
 18013  2D97  1D03               	skipz
 18014  2D98  2D9B               	goto	l3732
 18015  2D99  30FF               	movlw	255
 18016  2D9A  0008               	return
 18017  2D9B                     l3732:	
 18018                           
 18019                           ;diskio.c: 208: };diskio.c: 211: SPI_Exchange8bit(0x40 | cmd);
 18020  2D9B  087A               	movf	___send_cmd@cmd,w
 18021  2D9C  3840               	iorlw	64
 18022  2D9D  31AA  22B2  31AD   	fcall	_SPI_Exchange8bit
 18023                           
 18024                           ;diskio.c: 212: SPI_Exchange8bit((BYTE)(arg >> 24));
 18025  2DA0  0876               	movf	___send_cmd@arg+3,w
 18026  2DA1  31AA  22B2  31AD   	fcall	_SPI_Exchange8bit
 18027                           
 18028                           ;diskio.c: 213: SPI_Exchange8bit((BYTE)(arg >> 16));
 18029  2DA4  0875               	movf	___send_cmd@arg+2,w
 18030  2DA5  31AA  22B2  31AD   	fcall	_SPI_Exchange8bit
 18031                           
 18032                           ;diskio.c: 214: SPI_Exchange8bit((BYTE)(arg >> 8));
 18033  2DA8  0874               	movf	___send_cmd@arg+1,w
 18034  2DA9  31AA  22B2  31AD   	fcall	_SPI_Exchange8bit
 18035                           
 18036                           ;diskio.c: 215: SPI_Exchange8bit((BYTE)arg);
 18037  2DAC  0873               	movf	___send_cmd@arg,w
 18038  2DAD  31AA  22B2  31AD   	fcall	_SPI_Exchange8bit
 18039                           
 18040                           ;diskio.c: 216: n = 0x01;
 18041  2DB0  01F9               	clrf	___send_cmd@n
 18042  2DB1  0AF9               	incf	___send_cmd@n,f
 18043                           
 18044                           ;diskio.c: 217: if (cmd == (0)) n = 0x95;
 18045  2DB2  087A               	movf	___send_cmd@cmd,w
 18046  2DB3  1D03               	btfss	3,2
 18047  2DB4  2DB9               	goto	l3740
 18048  2DB5  3095               	movlw	149
 18049  2DB6  00F7               	movwf	??___send_cmd
 18050  2DB7  0877               	movf	??___send_cmd,w
 18051  2DB8  00F9               	movwf	___send_cmd@n
 18052  2DB9                     l3740:	
 18053                           
 18054                           ;diskio.c: 218: if (cmd == (8)) n = 0x87;
 18055  2DB9  3008               	movlw	8
 18056  2DBA  067A               	xorwf	___send_cmd@cmd,w
 18057  2DBB  1D03               	btfss	3,2
 18058  2DBC  2DC1               	goto	l3744
 18059  2DBD  3087               	movlw	135
 18060  2DBE  00F7               	movwf	??___send_cmd
 18061  2DBF  0877               	movf	??___send_cmd,w
 18062  2DC0  00F9               	movwf	___send_cmd@n
 18063  2DC1                     l3744:	
 18064                           
 18065                           ;diskio.c: 219: SPI_Exchange8bit(n);
 18066  2DC1  0879               	movf	___send_cmd@n,w
 18067  2DC2  31AA  22B2  31AD   	fcall	_SPI_Exchange8bit
 18068                           
 18069                           ;diskio.c: 222: if (cmd == (12)) SPI_Exchange8bit(0xFF);
 18070  2DC5  300C               	movlw	12
 18071  2DC6  067A               	xorwf	___send_cmd@cmd,w
 18072  2DC7  1D03               	btfss	3,2
 18073  2DC8  2DCD               	goto	l3750
 18074  2DC9  30FF               	movlw	255
 18075  2DCA  31AA  22B2  31AD   	fcall	_SPI_Exchange8bit
 18076  2DCD                     l3750:	
 18077                           
 18078                           ;diskio.c: 223: n = 10;
 18079  2DCD  300A               	movlw	10
 18080  2DCE  00F7               	movwf	??___send_cmd
 18081  2DCF  0877               	movf	??___send_cmd,w
 18082  2DD0  00F9               	movwf	___send_cmd@n
 18083  2DD1  2DD6               	goto	l3752
 18084  2DD2                     l3756:	
 18085  2DD2  3001               	movlw	1
 18086  2DD3  02F9               	subwf	___send_cmd@n,f
 18087  2DD4  1903               	btfsc	3,2
 18088  2DD5  2DDF               	goto	l3758
 18089  2DD6                     l3752:	
 18090                           
 18091                           ;diskio.c: 225: res = SPI_Exchange8bit(0xFF);
 18092  2DD6  30FF               	movlw	255
 18093  2DD7  31AA  22B2  31AD   	fcall	_SPI_Exchange8bit
 18094  2DDA  00F7               	movwf	??___send_cmd
 18095  2DDB  0877               	movf	??___send_cmd,w
 18096  2DDC  00F8               	movwf	___send_cmd@res
 18097                           
 18098                           ;diskio.c: 226: while ((res & 0x80) && --n);
 18099  2DDD  1BF8               	btfsc	___send_cmd@res,7
 18100  2DDE  2DD2               	goto	l3756
 18101  2DDF                     l3758:	
 18102                           
 18103                           ;diskio.c: 228: return res;
 18104  2DDF  0878               	movf	___send_cmd@res,w
 18105  2DE0  0008               	return
 18106  2DE1                     __end_of___send_cmd:	
 18107                           
 18108                           	psect	text46
 18109  2ACD                     __ptext46:	
 18110 ;; *************** function _select *****************
 18111 ;; Defined at:
 18112 ;;		line 107 in file "diskio.c"
 18113 ;; Parameters:    Size  Location     Type
 18114 ;;		None
 18115 ;; Auto vars:     Size  Location     Type
 18116 ;;		None
 18117 ;; Return value:  Size  Location     Type
 18118 ;;                  1    wreg      unsigned char 
 18119 ;; Registers used:
 18120 ;;		wreg, status,2, status,0, pclath, cstack
 18121 ;; Tracked objects:
 18122 ;;		On entry : 1B/0
 18123 ;;		On exit  : 0/0
 18124 ;;		Unchanged: 0/0
 18125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18130 ;;Total ram usage:        0 bytes
 18131 ;; Hardware stack levels used:    1
 18132 ;; Hardware stack levels required when called:    2
 18133 ;; This function calls:
 18134 ;;		_SPI_Exchange8bit
 18135 ;;		_deselect
 18136 ;;		_wait_ready
 18137 ;; This function is called by:
 18138 ;;		___send_cmd
 18139 ;;		_disk_ioctl
 18140 ;; This function uses a non-reentrant model
 18141 ;;
 18142                           
 18143                           
 18144                           ;psect for function _select
 18145  2ACD                     _select:	
 18146                           
 18147                           ;incstack = 0
 18148                           ; Regs used in _select: [wreg+status,2+status,0+pclath+cstack]
 18149                           ;diskio.c: 109: do { LATC0 = 0; } while(0);
 18150  2ACD  0022               	movlb	2	; select bank2
 18151  2ACE  100E               	bcf	14,0	;volatile
 18152                           
 18153                           ;diskio.c: 110: SPI_Exchange8bit(0xFF);
 18154  2ACF  30FF               	movlw	255
 18155  2AD0  31AA  22B2  31AA   	fcall	_SPI_Exchange8bit
 18156                           
 18157                           ;diskio.c: 111: if (wait_ready()) return 1;
 18158  2AD3  31AB  2325  31AA   	fcall	_wait_ready
 18159  2AD6  3A00               	xorlw	0
 18160  2AD7  1903               	skipnz
 18161  2AD8  2ADB               	goto	l3718
 18162  2AD9  3001               	movlw	1
 18163  2ADA  0008               	return
 18164  2ADB                     l3718:	
 18165                           
 18166                           ;diskio.c: 113: deselect();
 18167  2ADB  3190  2000         	fcall	_deselect
 18168                           
 18169                           ;diskio.c: 114: return 0;
 18170  2ADD  3000               	movlw	0
 18171  2ADE  0008               	return
 18172  2ADF                     __end_of_select:	
 18173                           
 18174                           	psect	text47
 18175  2B25                     __ptext47:	
 18176 ;; *************** function _wait_ready *****************
 18177 ;; Defined at:
 18178 ;;		line 74 in file "diskio.c"
 18179 ;; Parameters:    Size  Location     Type
 18180 ;;		None
 18181 ;; Auto vars:     Size  Location     Type
 18182 ;;  tmr             2    1[COMMON] unsigned int 
 18183 ;; Return value:  Size  Location     Type
 18184 ;;                  1    wreg      unsigned char 
 18185 ;; Registers used:
 18186 ;;		wreg, status,2, status,0, pclath, cstack
 18187 ;; Tracked objects:
 18188 ;;		On entry : 1B/0
 18189 ;;		On exit  : 0/0
 18190 ;;		Unchanged: 0/0
 18191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18193 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18195 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18196 ;;Total ram usage:        2 bytes
 18197 ;; Hardware stack levels used:    1
 18198 ;; Hardware stack levels required when called:    1
 18199 ;; This function calls:
 18200 ;;		_SPI_Exchange8bit
 18201 ;; This function is called by:
 18202 ;;		_select
 18203 ;;		_xmit_datablock
 18204 ;; This function uses a non-reentrant model
 18205 ;;
 18206                           
 18207                           
 18208                           ;psect for function _wait_ready
 18209  2B25                     _wait_ready:	
 18210                           
 18211                           ;diskio.c: 76: UINT tmr;;diskio.c: 79: for (tmr = 5000; tmr; tmr--) {
 18212                           
 18213                           ;incstack = 0
 18214                           ; Regs used in _wait_ready: [wreg+status,2+status,0+pclath+cstack]
 18215  2B25  3088               	movlw	136
 18216  2B26  00F1               	movwf	wait_ready@tmr
 18217  2B27  3013               	movlw	19
 18218  2B28  00F2               	movwf	wait_ready@tmr+1
 18219  2B29                     l3704:	
 18220  2B29  0871               	movf	wait_ready@tmr,w
 18221  2B2A  0472               	iorwf	wait_ready@tmr+1,w
 18222  2B2B  1903               	btfsc	3,2
 18223  2B2C  2B3D               	goto	l3706
 18224                           
 18225                           ;diskio.c: 80: if (SPI_Exchange8bit(0xFF) == 0xFF) break;
 18226  2B2D  30FF               	movlw	255
 18227  2B2E  31AA  22B2  31AB   	fcall	_SPI_Exchange8bit
 18228  2B31  3AFF               	xorlw	255
 18229  2B32  1903               	btfsc	3,2
 18230  2B33  2B3D               	goto	l3706
 18231                           
 18232                           ;diskio.c: 81: _delay((unsigned long)((100)*(16000000/4000000.0)));
 18233  2B34  3085               	movlw	133
 18234  2B35                     u8617:	
 18235  2B35  0B89               	decfsz	9,f
 18236  2B36  2B35               	goto	u8617
 18237  2B37  0000               	nop
 18238  2B38  3001               	movlw	1
 18239  2B39  02F1               	subwf	wait_ready@tmr,f
 18240  2B3A  3000               	movlw	0
 18241  2B3B  3BF2               	subwfb	wait_ready@tmr+1,f
 18242  2B3C  2B29               	goto	l3704
 18243  2B3D                     l3706:	
 18244                           
 18245                           ;diskio.c: 82: };diskio.c: 84: return tmr ? 1 : 0;
 18246  2B3D  0871               	movf	wait_ready@tmr,w
 18247  2B3E  0472               	iorwf	wait_ready@tmr+1,w
 18248  2B3F  1903               	btfsc	3,2
 18249  2B40  2B43               	goto	u4310
 18250  2B41  3001               	movlw	1
 18251  2B42  0008               	return
 18252  2B43                     u4310:	
 18253  2B43  3000               	movlw	0
 18254  2B44  0008               	return
 18255  2B45                     __end_of_wait_ready:	
 18256                           
 18257                           	psect	text48
 18258  1000                     __ptext48:	
 18259 ;; *************** function _deselect *****************
 18260 ;; Defined at:
 18261 ;;		line 94 in file "diskio.c"
 18262 ;; Parameters:    Size  Location     Type
 18263 ;;		None
 18264 ;; Auto vars:     Size  Location     Type
 18265 ;;		None
 18266 ;; Return value:  Size  Location     Type
 18267 ;;                  1    wreg      void 
 18268 ;; Registers used:
 18269 ;;		wreg, status,2, status,0, pclath, cstack
 18270 ;; Tracked objects:
 18271 ;;		On entry : 0/1
 18272 ;;		On exit  : 1F/4
 18273 ;;		Unchanged: 0/0
 18274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18278 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18279 ;;Total ram usage:        0 bytes
 18280 ;; Hardware stack levels used:    1
 18281 ;; Hardware stack levels required when called:    1
 18282 ;; This function calls:
 18283 ;;		_SPI_Exchange8bit
 18284 ;; This function is called by:
 18285 ;;		_select
 18286 ;;		___send_cmd
 18287 ;;		_disk_initialize
 18288 ;;		_disk_read
 18289 ;;		_disk_write
 18290 ;;		_disk_ioctl
 18291 ;; This function uses a non-reentrant model
 18292 ;;
 18293                           
 18294                           
 18295                           ;psect for function _deselect
 18296  1000                     _deselect:	
 18297                           
 18298                           ;incstack = 0
 18299                           ; Regs used in _deselect: [wreg+status,2+status,0+pclath+cstack]
 18300                           ;diskio.c: 96: do { LATC0 = 1; } while(0);
 18301  1000  0022               	movlb	2	; select bank2
 18302  1001  140E               	bsf	14,0	;volatile
 18303                           
 18304                           ;diskio.c: 97: SPI_Exchange8bit(0xFF);
 18305  1002  30FF               	movlw	255
 18306  1003  31AA  22B2         	fcall	_SPI_Exchange8bit
 18307  1005  0008               	return
 18308  1006                     __end_of_deselect:	
 18309                           
 18310                           	psect	text49
 18311  2C1B                     __ptext49:	
 18312 ;; *************** function _rcvr_datablock *****************
 18313 ;; Defined at:
 18314 ;;		line 124 in file "diskio.c"
 18315 ;; Parameters:    Size  Location     Type
 18316 ;;  buff            2    1[COMMON] PTR unsigned char 
 18317 ;;		 -> disk_ioctl@csd(16), NULL(0), FatFs(558), 
 18318 ;;  btr             2    3[COMMON] unsigned int 
 18319 ;; Auto vars:     Size  Location     Type
 18320 ;;  tmr             2    6[COMMON] unsigned int 
 18321 ;;  token           1    8[COMMON] unsigned char 
 18322 ;; Return value:  Size  Location     Type
 18323 ;;                  1    wreg      unsigned char 
 18324 ;; Registers used:
 18325 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18326 ;; Tracked objects:
 18327 ;;		On entry : 0/0
 18328 ;;		On exit  : 0/0
 18329 ;;		Unchanged: 0/0
 18330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18331 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18332 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18333 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18334 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18335 ;;Total ram usage:        8 bytes
 18336 ;; Hardware stack levels used:    1
 18337 ;; Hardware stack levels required when called:    1
 18338 ;; This function calls:
 18339 ;;		_SPI_Exchange8bit
 18340 ;; This function is called by:
 18341 ;;		_disk_read
 18342 ;;		_disk_ioctl
 18343 ;; This function uses a non-reentrant model
 18344 ;;
 18345                           
 18346                           
 18347                           ;psect for function _rcvr_datablock
 18348  2C1B                     _rcvr_datablock:	
 18349                           
 18350                           ;diskio.c: 129: BYTE token;;diskio.c: 130: UINT tmr;;diskio.c: 133: for (tmr = 2000; tmr
      +                          ; tmr--) {
 18351                           
 18352                           ;incstack = 0
 18353                           ; Regs used in _rcvr_datablock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 18354  2C1B  30D0               	movlw	208
 18355  2C1C  00F6               	movwf	rcvr_datablock@tmr
 18356  2C1D  3007               	movlw	7
 18357  2C1E  00F7               	movwf	rcvr_datablock@tmr+1
 18358  2C1F                     l3820:	
 18359  2C1F  0876               	movf	rcvr_datablock@tmr,w
 18360  2C20  0477               	iorwf	rcvr_datablock@tmr+1,w
 18361  2C21  1903               	btfsc	3,2
 18362  2C22  2C36               	goto	l3822
 18363                           
 18364                           ;diskio.c: 134: token = SPI_Exchange8bit(0xFF);
 18365  2C23  30FF               	movlw	255
 18366  2C24  31AA  22B2  31AC   	fcall	_SPI_Exchange8bit
 18367  2C27  00F5               	movwf	??_rcvr_datablock
 18368  2C28  0875               	movf	??_rcvr_datablock,w
 18369  2C29  00F8               	movwf	rcvr_datablock@token
 18370                           
 18371                           ;diskio.c: 135: if (token != 0xFF) break;
 18372  2C2A  0A78               	incf	rcvr_datablock@token,w
 18373  2C2B  1D03               	btfss	3,2
 18374  2C2C  2C36               	goto	l3822
 18375                           
 18376                           ;diskio.c: 136: _delay((unsigned long)((100)*(16000000/4000000.0)));
 18377  2C2D  3085               	movlw	133
 18378  2C2E                     u8627:	
 18379  2C2E  0B89               	decfsz	9,f
 18380  2C2F  2C2E               	goto	u8627
 18381  2C30  0000               	nop
 18382  2C31  3001               	movlw	1
 18383  2C32  02F6               	subwf	rcvr_datablock@tmr,f
 18384  2C33  3000               	movlw	0
 18385  2C34  3BF7               	subwfb	rcvr_datablock@tmr+1,f
 18386  2C35  2C1F               	goto	l3820
 18387  2C36                     l3822:	
 18388                           
 18389                           ;diskio.c: 137: };diskio.c: 138: if (token != 0xFE) return 0;
 18390  2C36  30FE               	movlw	254
 18391  2C37  0678               	xorwf	rcvr_datablock@token,w
 18392  2C38  1903               	btfsc	3,2
 18393  2C39  2C3C               	goto	l3828
 18394  2C3A  3000               	movlw	0
 18395  2C3B  0008               	return
 18396  2C3C                     l3828:	
 18397                           
 18398                           ;diskio.c: 141: *buff++ = SPI_Exchange8bit(0xFF);
 18399  2C3C  30FF               	movlw	255
 18400  2C3D  31AA  22B2  31AC   	fcall	_SPI_Exchange8bit
 18401  2C40  00F5               	movwf	??_rcvr_datablock
 18402  2C41  0871               	movf	rcvr_datablock@buff,w
 18403  2C42  0086               	movwf	6
 18404  2C43  0872               	movf	rcvr_datablock@buff+1,w
 18405  2C44  0087               	movwf	7
 18406  2C45  0875               	movf	??_rcvr_datablock,w
 18407  2C46  0081               	movwf	1
 18408  2C47  3001               	movlw	1
 18409  2C48  07F1               	addwf	rcvr_datablock@buff,f
 18410  2C49  3000               	movlw	0
 18411  2C4A  3DF2               	addwfc	rcvr_datablock@buff+1,f
 18412                           
 18413                           ;diskio.c: 142: while (--btr);
 18414  2C4B  3001               	movlw	1
 18415  2C4C  02F3               	subwf	rcvr_datablock@btr,f
 18416  2C4D  3000               	movlw	0
 18417  2C4E  3BF4               	subwfb	rcvr_datablock@btr+1,f
 18418  2C4F  0873               	movf	rcvr_datablock@btr,w
 18419  2C50  0474               	iorwf	rcvr_datablock@btr+1,w
 18420  2C51  1D03               	btfss	3,2
 18421  2C52  2C3C               	goto	l3828
 18422                           
 18423                           ;diskio.c: 143: SPI_Exchange8bit(0xFF);
 18424  2C53  30FF               	movlw	255
 18425  2C54  31AA  22B2  31AC   	fcall	_SPI_Exchange8bit
 18426                           
 18427                           ;diskio.c: 144: SPI_Exchange8bit(0xFF);
 18428  2C57  30FF               	movlw	255
 18429  2C58  31AA  22B2         	fcall	_SPI_Exchange8bit
 18430                           
 18431                           ;diskio.c: 146: return 1;
 18432  2C5A  3001               	movlw	1
 18433  2C5B  0008               	return
 18434  2C5C                     __end_of_rcvr_datablock:	
 18435                           
 18436                           	psect	text50
 18437  2AB2                     __ptext50:	
 18438 ;; *************** function _SPI_Exchange8bit *****************
 18439 ;; Defined at:
 18440 ;;		line 165 in file "SPI.c"
 18441 ;; Parameters:    Size  Location     Type
 18442 ;;  data            1    wreg     unsigned char 
 18443 ;; Auto vars:     Size  Location     Type
 18444 ;;  data            1    0[COMMON] unsigned char 
 18445 ;; Return value:  Size  Location     Type
 18446 ;;                  1    wreg      unsigned char 
 18447 ;; Registers used:
 18448 ;;		wreg
 18449 ;; Tracked objects:
 18450 ;;		On entry : 0/0
 18451 ;;		On exit  : 1F/4
 18452 ;;		Unchanged: 0/0
 18453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18455 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18457 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18458 ;;Total ram usage:        1 bytes
 18459 ;; Hardware stack levels used:    1
 18460 ;; This function calls:
 18461 ;;		Nothing
 18462 ;; This function is called by:
 18463 ;;		_wait_ready
 18464 ;;		_deselect
 18465 ;;		_select
 18466 ;;		_rcvr_datablock
 18467 ;;		_xmit_datablock
 18468 ;;		___send_cmd
 18469 ;;		_disk_initialize
 18470 ;;		_disk_ioctl
 18471 ;; This function uses a non-reentrant model
 18472 ;;
 18473                           
 18474                           
 18475                           ;psect for function _SPI_Exchange8bit
 18476  2AB2                     _SPI_Exchange8bit:	
 18477                           
 18478                           ;incstack = 0
 18479                           ; Regs used in _SPI_Exchange8bit: [wreg]
 18480                           ;SPI_Exchange8bit@data stored from wreg
 18481  2AB2  00F0               	movwf	SPI_Exchange8bit@data
 18482                           
 18483                           ;SPI.c: 168: SSP1CON1bits.WCOL = 0;
 18484  2AB3  0024               	movlb	4	; select bank4
 18485  2AB4  1395               	bcf	21,7	;volatile
 18486                           
 18487                           ;SPI.c: 170: SSPBUF = data;
 18488  2AB5  0870               	movf	SPI_Exchange8bit@data,w
 18489  2AB6  0091               	movwf	17	;volatile
 18490  2AB7                     l797:	
 18491                           ;SPI.c: 173: {
 18492                           
 18493  2AB7  1C14               	btfss	20,0	;volatile
 18494  2AB8  2AB7               	goto	l797
 18495                           
 18496                           ;SPI.c: 174: };SPI.c: 176: return (SSPBUF);
 18497  2AB9  0811               	movf	17,w	;volatile
 18498  2ABA  0008               	return
 18499  2ABB                     __end_of_SPI_Exchange8bit:	
 18500  007E                     btemp	set	126	;btemp
 18501  007E                     wtemp0	set	126


Data Sizes:
    Strings     46
    Constant    0
    Data        1
    BSS         39
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     71      79
    BANK2            80     45      77
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           34      0       0
    BANK19            0      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    f_lseek@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 558
		 -> NULL(NULL[0]), FatFs(BIGRAM[558]), 

    f_lseek@fp.fs	PTR struct . size(2) Largest target is 558
		 -> NULL(NULL[0]), FatFs(BIGRAM[558]), 

    f_lseek@fp	PTR struct . size(2) Largest target is 32
		 -> Fil(BANK2[32]), 

    f_close@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 558
		 -> NULL(NULL[0]), FatFs(BIGRAM[558]), 

    f_close@fp.fs	PTR struct . size(2) Largest target is 558
		 -> NULL(NULL[0]), FatFs(BIGRAM[558]), 

    f_close@fp	PTR struct . size(2) Largest target is 32
		 -> Fil(BANK2[32]), 

    f_sync@dir	PTR unsigned char  size(2) Largest target is 558
		 -> NULL(NULL[0]), FatFs(BIGRAM[558]), 

    f_sync@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 558
		 -> NULL(NULL[0]), FatFs(BIGRAM[558]), 

    f_sync@fp.fs	PTR struct . size(2) Largest target is 558
		 -> NULL(NULL[0]), FatFs(BIGRAM[558]), 

    f_sync@fp	PTR struct . size(2) Largest target is 32
		 -> Fil(BANK2[32]), 

    f_write@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 558
		 -> NULL(NULL[0]), FatFs(BIGRAM[558]), 

    f_write@fp.fs	PTR struct . size(2) Largest target is 558
		 -> NULL(NULL[0]), FatFs(BIGRAM[558]), 

    f_write@fp	PTR struct . size(2) Largest target is 32
		 -> Fil(BANK2[32]), 

    f_write@bw	PTR unsigned int  size(1) Largest target is 2
		 -> bw(BANK1[2]), 

    f_write@buff	PTR const void  size(2) Largest target is 21
		 -> STR_3(CODE[21]), 

    f_write@wbuff	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_3(CODE[21]), 

    f_read@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 558
		 -> NULL(NULL[0]), FatFs(BIGRAM[558]), 

    f_read@fp.fs	PTR struct . size(2) Largest target is 558
		 -> NULL(NULL[0]), FatFs(BIGRAM[558]), 

    f_open@dir	PTR unsigned char  size(2) Largest target is 558
		 -> NULL(NULL[0]), FatFs(BIGRAM[558]), 

    f_open@path	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_2(CODE[10]), STR_1(CODE[1]), 

    f_open@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 558
		 -> NULL(NULL[0]), FatFs(BIGRAM[558]), 

    f_open@fp.fs	PTR struct . size(2) Largest target is 558
		 -> NULL(NULL[0]), FatFs(BIGRAM[558]), 

    f_open@fp	PTR struct . size(2) Largest target is 32
		 -> Fil(BANK2[32]), 

    dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> f_open@sfn(BANK2[12]), 

    dj.dir	PTR unsigned char  size(2) Largest target is 558
		 -> NULL(NULL[0]), FatFs(BIGRAM[558]), 

    dj.fs	PTR struct . size(2) Largest target is 558
		 -> NULL(NULL[0]), FatFs(BIGRAM[558]), 

    f_mount@fs	PTR struct . size(2) Largest target is 558
		 -> NULL(NULL[0]), FatFs(BIGRAM[558]), 

    f_mount@cfs	PTR struct . size(2) Largest target is 558
		 -> NULL(NULL[0]), FatFs(BIGRAM[558]), 

    f_mount@path	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_2(CODE[10]), STR_1(CODE[1]), 

    f_mount@rp	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_2(CODE[10]), STR_1(CODE[1]), 

    validate@fil.dir_ptr	PTR unsigned char  size(2) Largest target is 558
		 -> NULL(NULL[0]), FatFs(BIGRAM[558]), 

    validate@fil.fs	PTR struct . size(2) Largest target is 558
		 -> NULL(NULL[0]), FatFs(BIGRAM[558]), 

    validate@obj	PTR void  size(2) Largest target is 32
		 -> Fil(BANK2[32]), 

    validate@fil	PTR struct . size(2) Largest target is 32
		 -> Fil(BANK2[32]), 

    find_volume@pt	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs.win(BIGRAM[512]), NULL(NULL[0]), FatFs(BIGRAM[558]), 

    ff@FatFs	PTR struct .[1] size(2) Largest target is 558
		 -> NULL(NULL[0]), FatFs(BIGRAM[558]), 

    find_volume@fs	PTR struct . size(2) Largest target is 558
		 -> NULL(NULL[0]), FatFs(BIGRAM[558]), 

    find_volume@path	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> f_open@path(BANK1[2]), f_mount@path(BANK0[2]), 

    find_volume@rfs	PTR PTR struct . size(2) Largest target is 22
		 -> f_open@dj(BANK2[22]), f_mount@fs(BANK0[2]), 

    check_fs@fs	PTR struct . size(2) Largest target is 558
		 -> NULL(NULL[0]), FatFs(BIGRAM[558]), 

    get_ldnumber@tp	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_2(CODE[10]), STR_1(CODE[1]), 

    get_ldnumber@tt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_2(CODE[10]), STR_1(CODE[1]), 

    get_ldnumber@path	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> f_open@path(BANK1[2]), f_mount@path(BANK0[2]), f_mount@rp(BANK1[2]), 

    follow_path@dir	PTR unsigned char  size(2) Largest target is 558
		 -> NULL(NULL[0]), FatFs(BIGRAM[558]), 

    follow_path@dp.fn	PTR unsigned char  size(1) Largest target is 12
		 -> f_open@sfn(BANK2[12]), 

    follow_path@dp.dir	PTR unsigned char  size(2) Largest target is 558
		 -> NULL(NULL[0]), FatFs(BIGRAM[558]), 

    follow_path@dp.fs	PTR struct . size(2) Largest target is 558
		 -> NULL(NULL[0]), FatFs(BIGRAM[558]), 

    follow_path@dp	PTR struct . size(2) Largest target is 22
		 -> f_open@dj(BANK2[22]), 

    follow_path@path	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_2(CODE[10]), STR_1(CODE[1]), 

    create_name@dp.fn	PTR unsigned char  size(1) Largest target is 12
		 -> f_open@sfn(BANK2[12]), 

    create_name@dp.dir	PTR unsigned char  size(2) Largest target is 558
		 -> NULL(NULL[0]), FatFs(BIGRAM[558]), 

    create_name@dp.fs	PTR struct . size(2) Largest target is 558
		 -> NULL(NULL[0]), FatFs(BIGRAM[558]), 

    create_name@dp	PTR struct . size(2) Largest target is 22
		 -> f_open@dj(BANK2[22]), 

    create_name@sfn	PTR unsigned char  size(1) Largest target is 12
		 -> f_open@sfn(BANK2[12]), 

    create_name@path	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> follow_path@path(BANK1[2]), 

    create_name@p	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_2(CODE[10]), STR_1(CODE[1]), 

    dir_register@dp.fn	PTR unsigned char  size(1) Largest target is 12
		 -> f_open@sfn(BANK2[12]), 

    dir_register@dp.dir	PTR unsigned char  size(2) Largest target is 558
		 -> NULL(NULL[0]), FatFs(BIGRAM[558]), 

    dir_register@dp.fs	PTR struct . size(2) Largest target is 558
		 -> NULL(NULL[0]), FatFs(BIGRAM[558]), 

    dir_register@dp	PTR struct . size(2) Largest target is 22
		 -> f_open@dj(BANK2[22]), 

    dir_find@dir	PTR unsigned char  size(2) Largest target is 558
		 -> NULL(NULL[0]), FatFs(BIGRAM[558]), 

    dir_find@dp.fn	PTR unsigned char  size(1) Largest target is 12
		 -> f_open@sfn(BANK2[12]), 

    dir_find@dp.dir	PTR unsigned char  size(2) Largest target is 558
		 -> NULL(NULL[0]), FatFs(BIGRAM[558]), 

    dir_find@dp.fs	PTR struct . size(2) Largest target is 558
		 -> NULL(NULL[0]), FatFs(BIGRAM[558]), 

    dir_find@dp	PTR struct . size(2) Largest target is 22
		 -> f_open@dj(BANK2[22]), 

    st_clust@dir	PTR unsigned char  size(2) Largest target is 558
		 -> NULL(NULL[0]), FatFs(BIGRAM[558]), 

    ld_clust@fs	PTR struct . size(2) Largest target is 558
		 -> NULL(NULL[0]), FatFs(BIGRAM[558]), 

    ld_clust@dir	PTR const unsigned char  size(2) Largest target is 558
		 -> NULL(NULL[0]), FatFs(BIGRAM[558]), 

    dir_alloc@dp.fn	PTR unsigned char  size(1) Largest target is 12
		 -> f_open@sfn(BANK2[12]), 

    dir_alloc@dp.dir	PTR unsigned char  size(2) Largest target is 558
		 -> NULL(NULL[0]), FatFs(BIGRAM[558]), 

    dir_alloc@dp.fs	PTR struct . size(2) Largest target is 558
		 -> NULL(NULL[0]), FatFs(BIGRAM[558]), 

    dir_alloc@dp	PTR struct . size(2) Largest target is 22
		 -> f_open@dj(BANK2[22]), 

    dir_next@dp.fn	PTR unsigned char  size(1) Largest target is 12
		 -> f_open@sfn(BANK2[12]), 

    dir_next@dp.dir	PTR unsigned char  size(2) Largest target is 558
		 -> NULL(NULL[0]), FatFs(BIGRAM[558]), 

    dir_next@dp.fs	PTR struct . size(2) Largest target is 558
		 -> NULL(NULL[0]), FatFs(BIGRAM[558]), 

    dir_next@dp	PTR struct . size(2) Largest target is 22
		 -> f_open@dj(BANK2[22]), 

    S422$fn	PTR unsigned char  size(2) Largest target is 12
		 -> f_open@sfn(BANK2[12]), 

    dir_sdi@dp.fn	PTR unsigned char  size(1) Largest target is 12
		 -> f_open@sfn(BANK2[12]), 

    S422$dir	PTR unsigned char  size(2) Largest target is 558
		 -> NULL(NULL[0]), FatFs(BIGRAM[558]), 

    dir_sdi@dp.dir	PTR unsigned char  size(2) Largest target is 558
		 -> NULL(NULL[0]), FatFs(BIGRAM[558]), 

    S422$fs	PTR struct . size(2) Largest target is 558
		 -> NULL(NULL[0]), FatFs(BIGRAM[558]), 

    dir_sdi@dp.fs	PTR struct . size(2) Largest target is 558
		 -> NULL(NULL[0]), FatFs(BIGRAM[558]), 

    dir_sdi@dp	PTR struct . size(2) Largest target is 22
		 -> f_open@dj(BANK2[22]), 

    create_chain@fs	PTR struct . size(2) Largest target is 558
		 -> NULL(NULL[0]), FatFs(BIGRAM[558]), 

    remove_chain@fs	PTR struct . size(2) Largest target is 558
		 -> NULL(NULL[0]), FatFs(BIGRAM[558]), 

    put_fat@p	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs.win(BIGRAM[512]), NULL(NULL[0]), FatFs(BIGRAM[558]), 

    put_fat@fs	PTR struct . size(2) Largest target is 558
		 -> NULL(NULL[0]), FatFs(BIGRAM[558]), 

    get_fat@p	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs.win(BIGRAM[512]), NULL(NULL[0]), FatFs(BIGRAM[558]), 

    get_fat@fs	PTR struct . size(2) Largest target is 558
		 -> NULL(NULL[0]), FatFs(BIGRAM[558]), 

    clust2sect@fs	PTR struct . size(2) Largest target is 558
		 -> NULL(NULL[0]), FatFs(BIGRAM[558]), 

    sync_fs@fs	PTR struct . size(2) Largest target is 558
		 -> NULL(NULL[0]), FatFs(BIGRAM[558]), 

    move_window@fs	PTR struct . size(2) Largest target is 558
		 -> NULL(NULL[0]), FatFs(BIGRAM[558]), 

    sync_window@fs	PTR struct . size(2) Largest target is 558
		 -> NULL(NULL[0]), FatFs(BIGRAM[558]), 

    chk_chr@str	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_4(CODE[15]), 

    mem_cmp@src	PTR const void  size(1) Largest target is 12
		 -> f_open@sfn(BANK2[12]), 

    mem_cmp@s	PTR const unsigned char  size(1) Largest target is 12
		 -> f_open@sfn(BANK2[12]), 

    mem_cmp@dst	PTR const void  size(2) Largest target is 558
		 -> NULL(NULL[0]), FatFs(BIGRAM[558]), 

    mem_cmp@d	PTR const unsigned char  size(2) Largest target is 558
		 -> NULL(NULL[0]), FatFs(BIGRAM[558]), 

    mem_set@dst	PTR void  size(2) Largest target is 558
		 -> f_open@sfn(BANK2[12]), NULL(NULL[0]), FatFs(BIGRAM[558]), 

    mem_set@d	PTR unsigned char  size(2) Largest target is 558
		 -> f_open@sfn(BANK2[12]), NULL(NULL[0]), FatFs(BIGRAM[558]), 

    mem_cpy@src	PTR const void  size(2) Largest target is 558
		 -> f_open@sfn(BANK2[12]), NULL(NULL[0]), STR_3(CODE[21]), FatFs(BIGRAM[558]), 

    mem_cpy@s	PTR const unsigned char  size(2) Largest target is 558
		 -> f_open@sfn(BANK2[12]), NULL(NULL[0]), STR_3(CODE[21]), FatFs(BIGRAM[558]), 

    mem_cpy@dst	PTR void  size(2) Largest target is 558
		 -> FatFs.win(BIGRAM[512]), NULL(NULL[0]), FatFs(BIGRAM[558]), 

    mem_cpy@d	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs.win(BIGRAM[512]), NULL(NULL[0]), FatFs(BIGRAM[558]), 

    disk_ioctl@buff	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    disk_ioctl@ptr	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    disk_write@buff	PTR const unsigned char  size(2) Largest target is 558
		 -> FatFs.win(BIGRAM[512]), NULL(NULL[0]), STR_3(CODE[21]), FatFs(BIGRAM[558]), 

    disk_read@buff	PTR unsigned char  size(2) Largest target is 558
		 -> NULL(NULL[0]), FatFs(BIGRAM[558]), 

    xmit_datablock@buff	PTR const unsigned char  size(2) Largest target is 558
		 -> FatFs.win(BIGRAM[512]), NULL(NULL[0]), STR_3(CODE[21]), FatFs(BIGRAM[558]), 

    rcvr_datablock@buff	PTR unsigned char  size(2) Largest target is 558
		 -> disk_ioctl@csd(BANK0[16]), NULL(NULL[0]), FatFs(BIGRAM[558]), 

    S55$dir_ptr	PTR unsigned char  size(2) Largest target is 558
		 -> NULL(NULL[0]), FatFs(BIGRAM[558]), 

    Fil.dir_ptr	PTR unsigned char  size(2) Largest target is 558
		 -> NULL(NULL[0]), FatFs(BIGRAM[558]), 

    S55$fs	PTR struct . size(2) Largest target is 558
		 -> NULL(NULL[0]), FatFs(BIGRAM[558]), 

    Fil.fs	PTR struct . size(2) Largest target is 558
		 -> NULL(NULL[0]), FatFs(BIGRAM[558]), 


Critical Paths under _main in COMMON

    _f_open->_ld_clust
    _follow_path->_ld_clust
    _create_name->_mem_set
    _find_volume->___lldiv
    _disk_initialize->_send_cmd
    _f_lseek->___lldiv
    _clust2sect->___lmul
    _validate->_disk_status
    _disk_ioctl->_send_cmd
    _disk_write->_send_cmd
    _xmit_datablock->_wait_ready
    _disk_read->_send_cmd
    _send_cmd->___send_cmd
    _select->_wait_ready
    _wait_ready->_SPI_Exchange8bit
    _deselect->_SPI_Exchange8bit
    _rcvr_datablock->_SPI_Exchange8bit

Critical Paths under _main in BANK0

    _f_write->_create_chain
    _f_open->_remove_chain
    _remove_chain->_put_fat
    _dir_sdi->_get_fat
    _dir_next->_create_chain
    _f_mount->_find_volume
    _find_volume->_check_fs
    _disk_initialize->_send_cmd
    _check_fs->_move_window
    _f_lseek->_create_chain
    _create_chain->_put_fat
    _put_fat->_move_window
    _get_fat->_move_window
    _f_close->_f_sync
    _f_sync->_sync_fs
    _sync_fs->_disk_ioctl
    _disk_ioctl->_send_cmd
    _move_window->_sync_window
    _sync_window->_disk_write
    _disk_write->_send_cmd
    _disk_read->_send_cmd

Critical Paths under _main in BANK1

    _main->_f_mount
    _main->_f_open
    _f_write->_create_chain
    _f_open->_find_volume
    _follow_path->_dir_find
    _dir_find->_dir_next
    _dir_register->_dir_alloc
    _dir_alloc->_dir_next
    _dir_next->_create_chain
    _f_mount->_find_volume
    _f_lseek->_create_chain

Critical Paths under _main in BANK2

    _main->_f_open

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  426845
                                             67 BANK1      4     4      0
                            _f_close
                            _f_lseek
                            _f_mount
                             _f_open
                            _f_write
                           _initMain
 ---------------------------------------------------------------------------------
 (1) _initMain                                             2     2      0       0
                                              0 COMMON     2     2      0
                     _SPI_Initialize
                        _internal_16
 ---------------------------------------------------------------------------------
 (2) _internal_16                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _f_write                                             35    28      7   54521
                                             19 BANK1     35    28      7
                         _clust2sect
                       _create_chain
                         _disk_write
                            _mem_cpy
                        _move_window
                        _sync_window
                           _validate
 ---------------------------------------------------------------------------------
 (1) _f_open                                              54    49      5  264751
                                             58 BANK1      9     4      5
                                              0 BANK2     45    45      0
                       _dir_register
                        _find_volume
                        _follow_path
                           _ld_clust
                        _move_window
                       _remove_chain
                           _st_clust
 ---------------------------------------------------------------------------------
 (2) _remove_chain                                        15     9      6   27413
                                             76 BANK0      4     4      0
                                              0 BANK1     11     5      6
                            _get_fat
                            _put_fat
 ---------------------------------------------------------------------------------
 (2) _follow_path                                         10     6      4   98982
                                             46 BANK1     10     6      4
                        _create_name
                           _dir_find
                            _dir_sdi
                           _ld_clust
 ---------------------------------------------------------------------------------
 (2) _ld_clust                                            14    10      4     546
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (3) _dir_find                                             7     5      2   79024
                                             39 BANK1      7     5      2
                           _dir_next
                            _dir_sdi
                            _mem_cmp
                        _move_window
 ---------------------------------------------------------------------------------
 (4) _mem_cmp                                             12     7      5     364
                                              0 COMMON    12     7      5
 ---------------------------------------------------------------------------------
 (3) _create_name                                         19    16      3    2615
                                              8 COMMON     5     2      3
                                              0 BANK0     14    14      0
                            _chk_chr
                            _mem_set
 ---------------------------------------------------------------------------------
 (4) _chk_chr                                              6     2      4     241
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _dir_register                                         7     5      2   92835
                                             48 BANK1      7     5      2
                          _dir_alloc
                            _mem_cpy
                            _mem_set
                        _move_window
 ---------------------------------------------------------------------------------
 (2) _mem_cpy                                             11     5      6    1245
                                              0 COMMON    11     5      6
 ---------------------------------------------------------------------------------
 (3) _dir_alloc                                            9     5      4   78692
                                             39 BANK1      9     5      4
                           _dir_next
                            _dir_sdi
                        _move_window
 ---------------------------------------------------------------------------------
 (3) _dir_sdi                                             24    20      4   16100
                                             74 BANK0      4     0      4
                                              0 BANK1     20    20      0
                         _clust2sect
                            _get_fat
 ---------------------------------------------------------------------------------
 (4) _dir_next                                            20    16      4   50550
                                             19 BANK1     20    16      4
                         _clust2sect
                       _create_chain
                            _get_fat
                            _mem_set
                        _sync_window
 ---------------------------------------------------------------------------------
 (1) _f_mount                                             14     9      5   32181
                                             74 BANK0      5     0      5
                                             58 BANK1      9     9      0
                        _find_volume
                       _get_ldnumber
 ---------------------------------------------------------------------------------
 (2) _find_volume                                         76    72      4   31155
                                             56 BANK0     18    14      4
                                              0 BANK1     58    58      0
                            ___lldiv
                             ___lmul
                           _check_fs
                    _disk_initialize
                        _disk_status
                       _get_ldnumber
                        _move_window
 ---------------------------------------------------------------------------------
 (3) _get_ldnumber                                        15    13      2     450
                                              0 COMMON     4     2      2
                                              0 BANK0     11    11      0
 ---------------------------------------------------------------------------------
 (3) _disk_initialize                                     13    13      0    2689
                                              4 BANK0     13    13      0
                   _SPI_Exchange8bit
                     _SPI_Initialize
                           _deselect
                           _send_cmd
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _check_fs                                            10     4      6   12073
                                             46 BANK0     10     4      6
                        _move_window
 ---------------------------------------------------------------------------------
 (1) _f_lseek                                             31    25      6   46349
                                             19 BANK1     31    25      6
                            ___lldiv
                         _clust2sect
                       _create_chain
                            _get_fat
                           _validate
 ---------------------------------------------------------------------------------
 (2) _create_chain                                        23    17      6   28554
                                             76 BANK0      4     4      0
                                              0 BANK1     19    13      6
                            _get_fat
                            _put_fat
 ---------------------------------------------------------------------------------
 (3) _put_fat                                             30    20     10   13463
                                             46 BANK0     30    20     10
                        _move_window
 ---------------------------------------------------------------------------------
 (3) _get_fat                                             28    22      6   13395
                                             46 BANK0     28    22      6
                        _move_window
 ---------------------------------------------------------------------------------
 (2) _clust2sect                                          14     8      6    1545
                                              0 BANK0     14     8      6
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     548
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     618
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _f_close                                              4     2      2   28997
                                             64 BANK0      4     2      2
                             _f_sync
                           _validate
 ---------------------------------------------------------------------------------
 (2) _f_sync                                              13    11      2   28361
                                             51 BANK0     13    11      2
                        _move_window
                           _st_clust
                            _sync_fs
                           _validate
 ---------------------------------------------------------------------------------
 (2) _validate                                            10     8      2     459
                                              1 COMMON    10     8      2
                        _disk_status
 ---------------------------------------------------------------------------------
 (3) _disk_status                                          1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _sync_fs                                              7     5      2   15412
                                             44 BANK0      7     5      2
                         _disk_ioctl
                         _disk_write
                            _mem_set
                        _sync_window
 ---------------------------------------------------------------------------------
 (5) _mem_set                                              8     2      6    1002
                                              0 COMMON     8     2      6
 ---------------------------------------------------------------------------------
 (4) _disk_ioctl                                          40    38      2    5106
                                              4 BANK0     40    38      2
                   _SPI_Exchange8bit
                             ___wmul
                           _deselect
                     _rcvr_datablock
                             _select
                           _send_cmd
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     544
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _st_clust                                             6     0      6     393
                                              0 COMMON     6     0      6
 ---------------------------------------------------------------------------------
 (2) _move_window                                         11     5      6   11615
                                             35 BANK0     11     5      6
                          _disk_read
                        _sync_window
 ---------------------------------------------------------------------------------
 (2) _sync_window                                         21    19      2    4811
                                             14 BANK0     21    19      2
                         _disk_write
 ---------------------------------------------------------------------------------
 (3) _disk_write                                          10     2      8    3975
                                              4 BANK0     10     2      8
                           _deselect
                           _send_cmd
                     _xmit_datablock
 ---------------------------------------------------------------------------------
 (4) _xmit_datablock                                       7     4      3     659
                                              3 COMMON     7     4      3
                   _SPI_Exchange8bit
                         _wait_ready
 ---------------------------------------------------------------------------------
 (3) _disk_read                                           13     5      8    4022
                                              4 BANK0     13     5      8
                           _deselect
                     _rcvr_datablock
                           _send_cmd
 ---------------------------------------------------------------------------------
 (4) _send_cmd                                             7     3      4    2158
                                             11 COMMON     3     3      0
                                              0 BANK0      4     0      4
                         ___send_cmd
 ---------------------------------------------------------------------------------
 (5) ___send_cmd                                           8     4      4     602
                                              3 COMMON     8     4      4
                   _SPI_Exchange8bit
                           _deselect
                             _select
 ---------------------------------------------------------------------------------
 (6) _select                                               0     0      0     112
                   _SPI_Exchange8bit
                           _deselect
                         _wait_ready
 ---------------------------------------------------------------------------------
 (5) _wait_ready                                           2     2      0      68
                                              1 COMMON     2     2      0
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (7) _deselect                                             0     0      0      22
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (4) _rcvr_datablock                                       8     4      4    1200
                                              1 COMMON     8     4      4
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (6) _SPI_Exchange8bit                                     1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _f_close
     _f_sync
       _move_window
         _disk_read
           _deselect
             _SPI_Exchange8bit
           _rcvr_datablock
             _SPI_Exchange8bit
           _send_cmd
             ___send_cmd
               _SPI_Exchange8bit
               _deselect
                 _SPI_Exchange8bit
               _select
                 _SPI_Exchange8bit
                 _deselect
                   _SPI_Exchange8bit
                 _wait_ready
                   _SPI_Exchange8bit
         _sync_window
           _disk_write
             _deselect
               _SPI_Exchange8bit
             _send_cmd
               ___send_cmd
                 _SPI_Exchange8bit
                 _deselect
                   _SPI_Exchange8bit
                 _select
                   _SPI_Exchange8bit
                   _deselect
                     _SPI_Exchange8bit
                   _wait_ready
                     _SPI_Exchange8bit
             _xmit_datablock
               _SPI_Exchange8bit
               _wait_ready
                 _SPI_Exchange8bit
       _st_clust
       _sync_fs
         _disk_ioctl
           _SPI_Exchange8bit
           ___wmul
           _deselect
             _SPI_Exchange8bit
           _rcvr_datablock
             _SPI_Exchange8bit
           _select
             _SPI_Exchange8bit
             _deselect
               _SPI_Exchange8bit
             _wait_ready
               _SPI_Exchange8bit
           _send_cmd
             ___send_cmd
               _SPI_Exchange8bit
               _deselect
                 _SPI_Exchange8bit
               _select
                 _SPI_Exchange8bit
                 _deselect
                   _SPI_Exchange8bit
                 _wait_ready
                   _SPI_Exchange8bit
         _disk_write
           _deselect
             _SPI_Exchange8bit
           _send_cmd
             ___send_cmd
               _SPI_Exchange8bit
               _deselect
                 _SPI_Exchange8bit
               _select
                 _SPI_Exchange8bit
                 _deselect
                   _SPI_Exchange8bit
                 _wait_ready
                   _SPI_Exchange8bit
           _xmit_datablock
             _SPI_Exchange8bit
             _wait_ready
               _SPI_Exchange8bit
         _mem_set
         _sync_window
           _disk_write
             _deselect
               _SPI_Exchange8bit
             _send_cmd
               ___send_cmd
                 _SPI_Exchange8bit
                 _deselect
                   _SPI_Exchange8bit
                 _select
                   _SPI_Exchange8bit
                   _deselect
                     _SPI_Exchange8bit
                   _wait_ready
                     _SPI_Exchange8bit
             _xmit_datablock
               _SPI_Exchange8bit
               _wait_ready
                 _SPI_Exchange8bit
       _validate
         _disk_status
     _validate
       _disk_status
   _f_lseek
     ___lldiv
     _clust2sect
       ___lmul
     _create_chain
       _get_fat
         _move_window
           _disk_read
             _deselect
               _SPI_Exchange8bit
             _rcvr_datablock
               _SPI_Exchange8bit
             _send_cmd
               ___send_cmd
                 _SPI_Exchange8bit
                 _deselect
                   _SPI_Exchange8bit
                 _select
                   _SPI_Exchange8bit
                   _deselect
                     _SPI_Exchange8bit
                   _wait_ready
                     _SPI_Exchange8bit
           _sync_window
             _disk_write
               _deselect
                 _SPI_Exchange8bit
               _send_cmd
                 ___send_cmd
                   _SPI_Exchange8bit
                   _deselect
                     _SPI_Exchange8bit
                   _select
                     _SPI_Exchange8bit
                     _deselect
                       _SPI_Exchange8bit
                     _wait_ready
                       _SPI_Exchange8bit
               _xmit_datablock
                 _SPI_Exchange8bit
                 _wait_ready
                   _SPI_Exchange8bit
       _put_fat
         _move_window
           _disk_read
             _deselect
               _SPI_Exchange8bit
             _rcvr_datablock
               _SPI_Exchange8bit
             _send_cmd
               ___send_cmd
                 _SPI_Exchange8bit
                 _deselect
                   _SPI_Exchange8bit
                 _select
                   _SPI_Exchange8bit
                   _deselect
                     _SPI_Exchange8bit
                   _wait_ready
                     _SPI_Exchange8bit
           _sync_window
             _disk_write
               _deselect
                 _SPI_Exchange8bit
               _send_cmd
                 ___send_cmd
                   _SPI_Exchange8bit
                   _deselect
                     _SPI_Exchange8bit
                   _select
                     _SPI_Exchange8bit
                     _deselect
                       _SPI_Exchange8bit
                     _wait_ready
                       _SPI_Exchange8bit
               _xmit_datablock
                 _SPI_Exchange8bit
                 _wait_ready
                   _SPI_Exchange8bit
     _get_fat
       _move_window
         _disk_read
           _deselect
             _SPI_Exchange8bit
           _rcvr_datablock
             _SPI_Exchange8bit
           _send_cmd
             ___send_cmd
               _SPI_Exchange8bit
               _deselect
                 _SPI_Exchange8bit
               _select
                 _SPI_Exchange8bit
                 _deselect
                   _SPI_Exchange8bit
                 _wait_ready
                   _SPI_Exchange8bit
         _sync_window
           _disk_write
             _deselect
               _SPI_Exchange8bit
             _send_cmd
               ___send_cmd
                 _SPI_Exchange8bit
                 _deselect
                   _SPI_Exchange8bit
                 _select
                   _SPI_Exchange8bit
                   _deselect
                     _SPI_Exchange8bit
                   _wait_ready
                     _SPI_Exchange8bit
             _xmit_datablock
               _SPI_Exchange8bit
               _wait_ready
                 _SPI_Exchange8bit
     _validate
       _disk_status
   _f_mount
     _find_volume
       ___lldiv
       ___lmul
       _check_fs
         _move_window
           _disk_read
             _deselect
               _SPI_Exchange8bit
             _rcvr_datablock
               _SPI_Exchange8bit
             _send_cmd
               ___send_cmd
                 _SPI_Exchange8bit
                 _deselect
                   _SPI_Exchange8bit
                 _select
                   _SPI_Exchange8bit
                   _deselect
                     _SPI_Exchange8bit
                   _wait_ready
                     _SPI_Exchange8bit
           _sync_window
             _disk_write
               _deselect
                 _SPI_Exchange8bit
               _send_cmd
                 ___send_cmd
                   _SPI_Exchange8bit
                   _deselect
                     _SPI_Exchange8bit
                   _select
                     _SPI_Exchange8bit
                     _deselect
                       _SPI_Exchange8bit
                     _wait_ready
                       _SPI_Exchange8bit
               _xmit_datablock
                 _SPI_Exchange8bit
                 _wait_ready
                   _SPI_Exchange8bit
       _disk_initialize
         _SPI_Exchange8bit
         _SPI_Initialize
         _deselect
           _SPI_Exchange8bit
         _send_cmd
           ___send_cmd
             _SPI_Exchange8bit
             _deselect
               _SPI_Exchange8bit
             _select
               _SPI_Exchange8bit
               _deselect
                 _SPI_Exchange8bit
               _wait_ready
                 _SPI_Exchange8bit
       _disk_status
       _get_ldnumber
       _move_window
         _disk_read
           _deselect
             _SPI_Exchange8bit
           _rcvr_datablock
             _SPI_Exchange8bit
           _send_cmd
             ___send_cmd
               _SPI_Exchange8bit
               _deselect
                 _SPI_Exchange8bit
               _select
                 _SPI_Exchange8bit
                 _deselect
                   _SPI_Exchange8bit
                 _wait_ready
                   _SPI_Exchange8bit
         _sync_window
           _disk_write
             _deselect
               _SPI_Exchange8bit
             _send_cmd
               ___send_cmd
                 _SPI_Exchange8bit
                 _deselect
                   _SPI_Exchange8bit
                 _select
                   _SPI_Exchange8bit
                   _deselect
                     _SPI_Exchange8bit
                   _wait_ready
                     _SPI_Exchange8bit
             _xmit_datablock
               _SPI_Exchange8bit
               _wait_ready
                 _SPI_Exchange8bit
     _get_ldnumber
   _f_open
     _dir_register
       _dir_alloc
         _dir_next
           _clust2sect
             ___lmul
           _create_chain
             _get_fat
               _move_window
                 _disk_read
                   _deselect
                     _SPI_Exchange8bit
                   _rcvr_datablock
                     _SPI_Exchange8bit
                   _send_cmd
                     ___send_cmd
                       _SPI_Exchange8bit
                       _deselect
                         _SPI_Exchange8bit
                       _select
                         _SPI_Exchange8bit
                         _deselect
                           _SPI_Exchange8bit
                         _wait_ready
                           _SPI_Exchange8bit
                 _sync_window
                   _disk_write
                     _deselect
                       _SPI_Exchange8bit
                     _send_cmd
                       ___send_cmd
                         _SPI_Exchange8bit
                         _deselect
                           _SPI_Exchange8bit
                         _select
                           _SPI_Exchange8bit
                           _deselect
                             _SPI_Exchange8bit
                           _wait_ready
                             _SPI_Exchange8bit
                     _xmit_datablock
                       _SPI_Exchange8bit
                       _wait_ready
                         _SPI_Exchange8bit
             _put_fat
               _move_window
                 _disk_read
                   _deselect
                     _SPI_Exchange8bit
                   _rcvr_datablock
                     _SPI_Exchange8bit
                   _send_cmd
                     ___send_cmd
                       _SPI_Exchange8bit
                       _deselect
                         _SPI_Exchange8bit
                       _select
                         _SPI_Exchange8bit
                         _deselect
                           _SPI_Exchange8bit
                         _wait_ready
                           _SPI_Exchange8bit
                 _sync_window
                   _disk_write
                     _deselect
                       _SPI_Exchange8bit
                     _send_cmd
                       ___send_cmd
                         _SPI_Exchange8bit
                         _deselect
                           _SPI_Exchange8bit
                         _select
                           _SPI_Exchange8bit
                           _deselect
                             _SPI_Exchange8bit
                           _wait_ready
                             _SPI_Exchange8bit
                     _xmit_datablock
                       _SPI_Exchange8bit
                       _wait_ready
                         _SPI_Exchange8bit
           _get_fat
             _move_window
               _disk_read
                 _deselect
                   _SPI_Exchange8bit
                 _rcvr_datablock
                   _SPI_Exchange8bit
                 _send_cmd
                   ___send_cmd
                     _SPI_Exchange8bit
                     _deselect
                       _SPI_Exchange8bit
                     _select
                       _SPI_Exchange8bit
                       _deselect
                         _SPI_Exchange8bit
                       _wait_ready
                         _SPI_Exchange8bit
               _sync_window
                 _disk_write
                   _deselect
                     _SPI_Exchange8bit
                   _send_cmd
                     ___send_cmd
                       _SPI_Exchange8bit
                       _deselect
                         _SPI_Exchange8bit
                       _select
                         _SPI_Exchange8bit
                         _deselect
                           _SPI_Exchange8bit
                         _wait_ready
                           _SPI_Exchange8bit
                   _xmit_datablock
                     _SPI_Exchange8bit
                     _wait_ready
                       _SPI_Exchange8bit
           _mem_set
           _sync_window
             _disk_write
               _deselect
                 _SPI_Exchange8bit
               _send_cmd
                 ___send_cmd
                   _SPI_Exchange8bit
                   _deselect
                     _SPI_Exchange8bit
                   _select
                     _SPI_Exchange8bit
                     _deselect
                       _SPI_Exchange8bit
                     _wait_ready
                       _SPI_Exchange8bit
               _xmit_datablock
                 _SPI_Exchange8bit
                 _wait_ready
                   _SPI_Exchange8bit
         _dir_sdi
           _clust2sect
             ___lmul
           _get_fat
             _move_window
               _disk_read
                 _deselect
                   _SPI_Exchange8bit
                 _rcvr_datablock
                   _SPI_Exchange8bit
                 _send_cmd
                   ___send_cmd
                     _SPI_Exchange8bit
                     _deselect
                       _SPI_Exchange8bit
                     _select
                       _SPI_Exchange8bit
                       _deselect
                         _SPI_Exchange8bit
                       _wait_ready
                         _SPI_Exchange8bit
               _sync_window
                 _disk_write
                   _deselect
                     _SPI_Exchange8bit
                   _send_cmd
                     ___send_cmd
                       _SPI_Exchange8bit
                       _deselect
                         _SPI_Exchange8bit
                       _select
                         _SPI_Exchange8bit
                         _deselect
                           _SPI_Exchange8bit
                         _wait_ready
                           _SPI_Exchange8bit
                   _xmit_datablock
                     _SPI_Exchange8bit
                     _wait_ready
                       _SPI_Exchange8bit
         _move_window
           _disk_read
             _deselect
               _SPI_Exchange8bit
             _rcvr_datablock
               _SPI_Exchange8bit
             _send_cmd
               ___send_cmd
                 _SPI_Exchange8bit
                 _deselect
                   _SPI_Exchange8bit
                 _select
                   _SPI_Exchange8bit
                   _deselect
                     _SPI_Exchange8bit
                   _wait_ready
                     _SPI_Exchange8bit
           _sync_window
             _disk_write
               _deselect
                 _SPI_Exchange8bit
               _send_cmd
                 ___send_cmd
                   _SPI_Exchange8bit
                   _deselect
                     _SPI_Exchange8bit
                   _select
                     _SPI_Exchange8bit
                     _deselect
                       _SPI_Exchange8bit
                     _wait_ready
                       _SPI_Exchange8bit
               _xmit_datablock
                 _SPI_Exchange8bit
                 _wait_ready
                   _SPI_Exchange8bit
       _mem_cpy
       _mem_set
       _move_window
         _disk_read
           _deselect
             _SPI_Exchange8bit
           _rcvr_datablock
             _SPI_Exchange8bit
           _send_cmd
             ___send_cmd
               _SPI_Exchange8bit
               _deselect
                 _SPI_Exchange8bit
               _select
                 _SPI_Exchange8bit
                 _deselect
                   _SPI_Exchange8bit
                 _wait_ready
                   _SPI_Exchange8bit
         _sync_window
           _disk_write
             _deselect
               _SPI_Exchange8bit
             _send_cmd
               ___send_cmd
                 _SPI_Exchange8bit
                 _deselect
                   _SPI_Exchange8bit
                 _select
                   _SPI_Exchange8bit
                   _deselect
                     _SPI_Exchange8bit
                   _wait_ready
                     _SPI_Exchange8bit
             _xmit_datablock
               _SPI_Exchange8bit
               _wait_ready
                 _SPI_Exchange8bit
     _find_volume
       ___lldiv
       ___lmul
       _check_fs
         _move_window
           _disk_read
             _deselect
               _SPI_Exchange8bit
             _rcvr_datablock
               _SPI_Exchange8bit
             _send_cmd
               ___send_cmd
                 _SPI_Exchange8bit
                 _deselect
                   _SPI_Exchange8bit
                 _select
                   _SPI_Exchange8bit
                   _deselect
                     _SPI_Exchange8bit
                   _wait_ready
                     _SPI_Exchange8bit
           _sync_window
             _disk_write
               _deselect
                 _SPI_Exchange8bit
               _send_cmd
                 ___send_cmd
                   _SPI_Exchange8bit
                   _deselect
                     _SPI_Exchange8bit
                   _select
                     _SPI_Exchange8bit
                     _deselect
                       _SPI_Exchange8bit
                     _wait_ready
                       _SPI_Exchange8bit
               _xmit_datablock
                 _SPI_Exchange8bit
                 _wait_ready
                   _SPI_Exchange8bit
       _disk_initialize
         _SPI_Exchange8bit
         _SPI_Initialize
         _deselect
           _SPI_Exchange8bit
         _send_cmd
           ___send_cmd
             _SPI_Exchange8bit
             _deselect
               _SPI_Exchange8bit
             _select
               _SPI_Exchange8bit
               _deselect
                 _SPI_Exchange8bit
               _wait_ready
                 _SPI_Exchange8bit
       _disk_status
       _get_ldnumber
       _move_window
         _disk_read
           _deselect
             _SPI_Exchange8bit
           _rcvr_datablock
             _SPI_Exchange8bit
           _send_cmd
             ___send_cmd
               _SPI_Exchange8bit
               _deselect
                 _SPI_Exchange8bit
               _select
                 _SPI_Exchange8bit
                 _deselect
                   _SPI_Exchange8bit
                 _wait_ready
                   _SPI_Exchange8bit
         _sync_window
           _disk_write
             _deselect
               _SPI_Exchange8bit
             _send_cmd
               ___send_cmd
                 _SPI_Exchange8bit
                 _deselect
                   _SPI_Exchange8bit
                 _select
                   _SPI_Exchange8bit
                   _deselect
                     _SPI_Exchange8bit
                   _wait_ready
                     _SPI_Exchange8bit
             _xmit_datablock
               _SPI_Exchange8bit
               _wait_ready
                 _SPI_Exchange8bit
     _follow_path
       _create_name
         _chk_chr
         _mem_set
       _dir_find
         _dir_next
           _clust2sect
             ___lmul
           _create_chain
             _get_fat
               _move_window
                 _disk_read
                   _deselect
                     _SPI_Exchange8bit
                   _rcvr_datablock
                     _SPI_Exchange8bit
                   _send_cmd
                     ___send_cmd
                       _SPI_Exchange8bit
                       _deselect
                         _SPI_Exchange8bit
                       _select
                         _SPI_Exchange8bit
                         _deselect
                           _SPI_Exchange8bit
                         _wait_ready
                           _SPI_Exchange8bit
                 _sync_window
                   _disk_write
                     _deselect
                       _SPI_Exchange8bit
                     _send_cmd
                       ___send_cmd
                         _SPI_Exchange8bit
                         _deselect
                           _SPI_Exchange8bit
                         _select
                           _SPI_Exchange8bit
                           _deselect
                             _SPI_Exchange8bit
                           _wait_ready
                             _SPI_Exchange8bit
                     _xmit_datablock
                       _SPI_Exchange8bit
                       _wait_ready
                         _SPI_Exchange8bit
             _put_fat
               _move_window
                 _disk_read
                   _deselect
                     _SPI_Exchange8bit
                   _rcvr_datablock
                     _SPI_Exchange8bit
                   _send_cmd
                     ___send_cmd
                       _SPI_Exchange8bit
                       _deselect
                         _SPI_Exchange8bit
                       _select
                         _SPI_Exchange8bit
                         _deselect
                           _SPI_Exchange8bit
                         _wait_ready
                           _SPI_Exchange8bit
                 _sync_window
                   _disk_write
                     _deselect
                       _SPI_Exchange8bit
                     _send_cmd
                       ___send_cmd
                         _SPI_Exchange8bit
                         _deselect
                           _SPI_Exchange8bit
                         _select
                           _SPI_Exchange8bit
                           _deselect
                             _SPI_Exchange8bit
                           _wait_ready
                             _SPI_Exchange8bit
                     _xmit_datablock
                       _SPI_Exchange8bit
                       _wait_ready
                         _SPI_Exchange8bit
           _get_fat
             _move_window
               _disk_read
                 _deselect
                   _SPI_Exchange8bit
                 _rcvr_datablock
                   _SPI_Exchange8bit
                 _send_cmd
                   ___send_cmd
                     _SPI_Exchange8bit
                     _deselect
                       _SPI_Exchange8bit
                     _select
                       _SPI_Exchange8bit
                       _deselect
                         _SPI_Exchange8bit
                       _wait_ready
                         _SPI_Exchange8bit
               _sync_window
                 _disk_write
                   _deselect
                     _SPI_Exchange8bit
                   _send_cmd
                     ___send_cmd
                       _SPI_Exchange8bit
                       _deselect
                         _SPI_Exchange8bit
                       _select
                         _SPI_Exchange8bit
                         _deselect
                           _SPI_Exchange8bit
                         _wait_ready
                           _SPI_Exchange8bit
                   _xmit_datablock
                     _SPI_Exchange8bit
                     _wait_ready
                       _SPI_Exchange8bit
           _mem_set
           _sync_window
             _disk_write
               _deselect
                 _SPI_Exchange8bit
               _send_cmd
                 ___send_cmd
                   _SPI_Exchange8bit
                   _deselect
                     _SPI_Exchange8bit
                   _select
                     _SPI_Exchange8bit
                     _deselect
                       _SPI_Exchange8bit
                     _wait_ready
                       _SPI_Exchange8bit
               _xmit_datablock
                 _SPI_Exchange8bit
                 _wait_ready
                   _SPI_Exchange8bit
         _dir_sdi
           _clust2sect
             ___lmul
           _get_fat
             _move_window
               _disk_read
                 _deselect
                   _SPI_Exchange8bit
                 _rcvr_datablock
                   _SPI_Exchange8bit
                 _send_cmd
                   ___send_cmd
                     _SPI_Exchange8bit
                     _deselect
                       _SPI_Exchange8bit
                     _select
                       _SPI_Exchange8bit
                       _deselect
                         _SPI_Exchange8bit
                       _wait_ready
                         _SPI_Exchange8bit
               _sync_window
                 _disk_write
                   _deselect
                     _SPI_Exchange8bit
                   _send_cmd
                     ___send_cmd
                       _SPI_Exchange8bit
                       _deselect
                         _SPI_Exchange8bit
                       _select
                         _SPI_Exchange8bit
                         _deselect
                           _SPI_Exchange8bit
                         _wait_ready
                           _SPI_Exchange8bit
                   _xmit_datablock
                     _SPI_Exchange8bit
                     _wait_ready
                       _SPI_Exchange8bit
         _mem_cmp
         _move_window
           _disk_read
             _deselect
               _SPI_Exchange8bit
             _rcvr_datablock
               _SPI_Exchange8bit
             _send_cmd
               ___send_cmd
                 _SPI_Exchange8bit
                 _deselect
                   _SPI_Exchange8bit
                 _select
                   _SPI_Exchange8bit
                   _deselect
                     _SPI_Exchange8bit
                   _wait_ready
                     _SPI_Exchange8bit
           _sync_window
             _disk_write
               _deselect
                 _SPI_Exchange8bit
               _send_cmd
                 ___send_cmd
                   _SPI_Exchange8bit
                   _deselect
                     _SPI_Exchange8bit
                   _select
                     _SPI_Exchange8bit
                     _deselect
                       _SPI_Exchange8bit
                     _wait_ready
                       _SPI_Exchange8bit
               _xmit_datablock
                 _SPI_Exchange8bit
                 _wait_ready
                   _SPI_Exchange8bit
       _dir_sdi
         _clust2sect
           ___lmul
         _get_fat
           _move_window
             _disk_read
               _deselect
                 _SPI_Exchange8bit
               _rcvr_datablock
                 _SPI_Exchange8bit
               _send_cmd
                 ___send_cmd
                   _SPI_Exchange8bit
                   _deselect
                     _SPI_Exchange8bit
                   _select
                     _SPI_Exchange8bit
                     _deselect
                       _SPI_Exchange8bit
                     _wait_ready
                       _SPI_Exchange8bit
             _sync_window
               _disk_write
                 _deselect
                   _SPI_Exchange8bit
                 _send_cmd
                   ___send_cmd
                     _SPI_Exchange8bit
                     _deselect
                       _SPI_Exchange8bit
                     _select
                       _SPI_Exchange8bit
                       _deselect
                         _SPI_Exchange8bit
                       _wait_ready
                         _SPI_Exchange8bit
                 _xmit_datablock
                   _SPI_Exchange8bit
                   _wait_ready
                     _SPI_Exchange8bit
       _ld_clust
     _ld_clust
     _move_window
       _disk_read
         _deselect
           _SPI_Exchange8bit
         _rcvr_datablock
           _SPI_Exchange8bit
         _send_cmd
           ___send_cmd
             _SPI_Exchange8bit
             _deselect
               _SPI_Exchange8bit
             _select
               _SPI_Exchange8bit
               _deselect
                 _SPI_Exchange8bit
               _wait_ready
                 _SPI_Exchange8bit
       _sync_window
         _disk_write
           _deselect
             _SPI_Exchange8bit
           _send_cmd
             ___send_cmd
               _SPI_Exchange8bit
               _deselect
                 _SPI_Exchange8bit
               _select
                 _SPI_Exchange8bit
                 _deselect
                   _SPI_Exchange8bit
                 _wait_ready
                   _SPI_Exchange8bit
           _xmit_datablock
             _SPI_Exchange8bit
             _wait_ready
               _SPI_Exchange8bit
     _remove_chain
       _get_fat
         _move_window
           _disk_read
             _deselect
               _SPI_Exchange8bit
             _rcvr_datablock
               _SPI_Exchange8bit
             _send_cmd
               ___send_cmd
                 _SPI_Exchange8bit
                 _deselect
                   _SPI_Exchange8bit
                 _select
                   _SPI_Exchange8bit
                   _deselect
                     _SPI_Exchange8bit
                   _wait_ready
                     _SPI_Exchange8bit
           _sync_window
             _disk_write
               _deselect
                 _SPI_Exchange8bit
               _send_cmd
                 ___send_cmd
                   _SPI_Exchange8bit
                   _deselect
                     _SPI_Exchange8bit
                   _select
                     _SPI_Exchange8bit
                     _deselect
                       _SPI_Exchange8bit
                     _wait_ready
                       _SPI_Exchange8bit
               _xmit_datablock
                 _SPI_Exchange8bit
                 _wait_ready
                   _SPI_Exchange8bit
       _put_fat
         _move_window
           _disk_read
             _deselect
               _SPI_Exchange8bit
             _rcvr_datablock
               _SPI_Exchange8bit
             _send_cmd
               ___send_cmd
                 _SPI_Exchange8bit
                 _deselect
                   _SPI_Exchange8bit
                 _select
                   _SPI_Exchange8bit
                   _deselect
                     _SPI_Exchange8bit
                   _wait_ready
                     _SPI_Exchange8bit
           _sync_window
             _disk_write
               _deselect
                 _SPI_Exchange8bit
               _send_cmd
                 ___send_cmd
                   _SPI_Exchange8bit
                   _deselect
                     _SPI_Exchange8bit
                   _select
                     _SPI_Exchange8bit
                     _deselect
                       _SPI_Exchange8bit
                     _wait_ready
                       _SPI_Exchange8bit
               _xmit_datablock
                 _SPI_Exchange8bit
                 _wait_ready
                   _SPI_Exchange8bit
     _st_clust
   _f_write
     _clust2sect
       ___lmul
     _create_chain
       _get_fat
         _move_window
           _disk_read
             _deselect
               _SPI_Exchange8bit
             _rcvr_datablock
               _SPI_Exchange8bit
             _send_cmd
               ___send_cmd
                 _SPI_Exchange8bit
                 _deselect
                   _SPI_Exchange8bit
                 _select
                   _SPI_Exchange8bit
                   _deselect
                     _SPI_Exchange8bit
                   _wait_ready
                     _SPI_Exchange8bit
           _sync_window
             _disk_write
               _deselect
                 _SPI_Exchange8bit
               _send_cmd
                 ___send_cmd
                   _SPI_Exchange8bit
                   _deselect
                     _SPI_Exchange8bit
                   _select
                     _SPI_Exchange8bit
                     _deselect
                       _SPI_Exchange8bit
                     _wait_ready
                       _SPI_Exchange8bit
               _xmit_datablock
                 _SPI_Exchange8bit
                 _wait_ready
                   _SPI_Exchange8bit
       _put_fat
         _move_window
           _disk_read
             _deselect
               _SPI_Exchange8bit
             _rcvr_datablock
               _SPI_Exchange8bit
             _send_cmd
               ___send_cmd
                 _SPI_Exchange8bit
                 _deselect
                   _SPI_Exchange8bit
                 _select
                   _SPI_Exchange8bit
                   _deselect
                     _SPI_Exchange8bit
                   _wait_ready
                     _SPI_Exchange8bit
           _sync_window
             _disk_write
               _deselect
                 _SPI_Exchange8bit
               _send_cmd
                 ___send_cmd
                   _SPI_Exchange8bit
                   _deselect
                     _SPI_Exchange8bit
                   _select
                     _SPI_Exchange8bit
                     _deselect
                       _SPI_Exchange8bit
                     _wait_ready
                       _SPI_Exchange8bit
               _xmit_datablock
                 _SPI_Exchange8bit
                 _wait_ready
                   _SPI_Exchange8bit
     _disk_write
       _deselect
         _SPI_Exchange8bit
       _send_cmd
         ___send_cmd
           _SPI_Exchange8bit
           _deselect
             _SPI_Exchange8bit
           _select
             _SPI_Exchange8bit
             _deselect
               _SPI_Exchange8bit
             _wait_ready
               _SPI_Exchange8bit
       _xmit_datablock
         _SPI_Exchange8bit
         _wait_ready
           _SPI_Exchange8bit
     _mem_cpy
     _move_window
       _disk_read
         _deselect
           _SPI_Exchange8bit
         _rcvr_datablock
           _SPI_Exchange8bit
         _send_cmd
           ___send_cmd
             _SPI_Exchange8bit
             _deselect
               _SPI_Exchange8bit
             _select
               _SPI_Exchange8bit
               _deselect
                 _SPI_Exchange8bit
               _wait_ready
                 _SPI_Exchange8bit
       _sync_window
         _disk_write
           _deselect
             _SPI_Exchange8bit
           _send_cmd
             ___send_cmd
               _SPI_Exchange8bit
               _deselect
                 _SPI_Exchange8bit
               _select
                 _SPI_Exchange8bit
                 _deselect
                   _SPI_Exchange8bit
                 _wait_ready
                   _SPI_Exchange8bit
           _xmit_datablock
             _SPI_Exchange8bit
             _wait_ready
               _SPI_Exchange8bit
     _sync_window
       _disk_write
         _deselect
           _SPI_Exchange8bit
         _send_cmd
           ___send_cmd
             _SPI_Exchange8bit
             _deselect
               _SPI_Exchange8bit
             _select
               _SPI_Exchange8bit
               _deselect
                 _SPI_Exchange8bit
               _wait_ready
                 _SPI_Exchange8bit
         _xmit_datablock
           _SPI_Exchange8bit
           _wait_ready
             _SPI_Exchange8bit
     _validate
       _disk_status
   _initMain
     _SPI_Initialize
     _internal_16

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     47      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     2D      4D       9       96.3%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0      FA      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      FA      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              22      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19               0      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20               0      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21               0      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22               0      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23               0      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Apr 24 01:53:22 2019

           _SPI_Initialize 2AAB                get_fat@clst 0050               create_name@b 0024  
             create_name@c 002D               create_name@d 0029               create_name@i 002A  
             create_name@p 0027                __CFG_CP$OFF 0000           get_ldnumber@path 0028  
                       l90 22FC                         l86 22B2                         l88 22CE  
                       _bw 00EC                disk_ioctl@n 004A        ___wmul@multiplicand 0072  
           ??_dir_register 00D2           disk_write@sector 0026              create_name@dp 0078  
            create_name@ni 0025              create_name@si 0022             create_chain@cs 00AF  
           create_chain@fs 00A0                        l200 2EAA                        l210 2F07  
                      l204 2EAF                        l221 21C8                        l222 21CC  
                      l223 21D6                        l217 21C3                        l161 1845  
                      l227 220D                        l235 0905                        l413 1A36  
                      l246 09DC                        l408 1A2E                        l184 1914  
                      l440 10D7                        l425 1B7F                        l630 044D  
                      l544 019E                        l560 2344                        l482 21B6  
                      l681 1F33                        l673 1E36                        l762 1625  
                      l758 14C9                        l778 17B5                        l892 2B12  
                      l797 2AB7                        _RD0 0078                        _Fil 014D  
             disk_read@cmd 0030               __CFG_BORV$LO 0000             ??_create_chain 006C  
                      wreg 0009               __CFG_IESO$ON 0000          disk_initialize@ty 002D  
           create_name@sfn 002C            create_chain@ncl 00AB            create_chain@scl 00A7  
          create_chain@res 00A6                ld_clust@dir 0072               __CFG_LVP$OFF 0000  
                     l4010 2726                       l4006 2719                       l4030 27F7  
                     l4110 1D9D                       l4040 1BB8                       l4112 1DAC  
                     l4122 2BCA                       l4018 277F                       l4106 1D90  
                     l4210 1AD2                       l5020 2E36                       l4028 27E8  
                     l4036 1B96                       l4118 2BC0                       l4038 1BB3  
                     l4230 1B77                       l4320 0A92                       l4312 0A34  
                     l4136 2AF6                       l5024 2E38                       l4160 19AD  
                     l5200 0221                       l4306 0A06                       l5034 2CF4  
                     l4146 2FC4                       l4082 1CC0                       l4058 1C1C  
                     l4226 1B6C                       l4218 1B2F                       l4170 19F8  
                     l4402 104A                       l4236 2B0C                       l4340 0B18  
                     l4324 0AD6                       l4308 0A11                       l5044 2D22  
                     l5036 2D02                       l4076 1CA3                       l5220 024C  
                     l5204 0223                       l4412 107C                       l5108 0077  
                     l5116 230D                       l5060 2559                       l4350 0B2C  
                     l4334 0AFC                       l4094 1D16                       l4190 1A81  
                     l4174 1A01                       l4158 19A5                       l5302 037C  
                     l4510 1322                       l4422 10B8                       l4406 104C  
                     l5126 2373                       l5118 2311                       l3704 2B29  
                     l4328 0AE0                       l5048 2D2D                       l4168 19EC  
                     l5400 069D                       l5240 0277                       l5208 0225  
                     l4432 111B                       l5056 252D                       l3706 2B3D  
                     l4362 0B61                       l4354 0B41                       l4274 090C  
                     l4258 2AC1                       l4186 1A78                       l4610 189F  
                     l5314 03B4                       l5250 02B2                       l4522 1333  
                     l4442 1157                       l4434 1128                       l5154 23A3  
                     l5090 2620                       l5058 2552                       l3820 2C1F  
                     l3740 2DB9                       l3732 2D9B                       l3900 2EB9  
                     l4276 0912                       l4364 0B66                       l4612 18C1  
                     l5252 02BF                       l5228 0253                       l5180 01EB  
                     l4444 1181                       l4380 2C16                       l5076 255B  
                     l3822 2C36                       l3718 2ADB                       l3750 2DCD  
                     l3806 2BAB                       l4278 0915                       l4366 0B81  
                     l4710 08E7                       l4198 1ABB                       l4630 18EF  
                     l4622 18D7                       l5270 0303                       l4390 2B69  
                     l5166 23A7                       l5086 25AF                       l3752 2DD6  
                     l3744 2DC1                       l3904 2EC3                       l4288 097E  
                     l4632 18F8                       l5424 07C7                       l5272 0326  
                     l5264 02E3                       l5520 2D4A                       l4544 1393  
                     l4552 1445                       l4464 1220                       l4392 2B83  
                     l4800 0089                       l4376 2C0C                       l5088 25B8  
                     l4714 08F8                       l4650 1952                       l4570 184B  
                     l5370 0520                       l5290 0345                       l5258 02D9  
                     l5530 2D65                       l4546 13ED                       l4490 12CF  
                     l4802 0081                       l4378 2BF2                       l3828 2C3C  
                     l3756 2DD2                       l3916 2EF6                       l3908 2EDA  
                     l3772 2C63                       l3764 2C91                       l3844 21C1  
                     l3940 24E5                       l5700 15BC                       l4644 191C  
                     l4636 1918                       l4652 1954                       l4580 185E  
                     l5364 0508                       l5284 0340                       l5188 01F9  
                     l5540 2D78                       l4548 140D                       l4484 12C1  
                     l4468 1222                       l4740 219C                       l4724 214A  
                     l4388 2B7C                       l4820 00BD                       l4804 008E  
                     l3758 2DDF                       l3774 2C67                       l3790 2C9B  
                     l3934 2498                       l5462 2459                       l4646 193E  
                     l4566 1848                       l5366 050E                       l5286 0343  
                     l5278 033A                       l5526 2D5B                       l4494 12D1  
                     l4478 1263                       l4734 218D                       l4814 0174  
                     l3768 2C93                       l3880 224D                       l3864 21FD  
                     l3952 251E                       l4592 1880                       l5368 051A  
                     l5536 2D76                       l4488 12C3                       l4744 21AE  
                     l4920 01BF                       l4904 019A                       l4832 00DA  
                     l5640 1F4C                       l5624 1F26                       l5552 1DB4  
                     l3890 2EA8                       l3970 2E8F                       l5722 1618  
                     l5714 15FE                       l4578 1853                       l5386 05EE  
                     l4738 219A                       l4682 2CD9                       l4674 2CA5  
                     l4850 0101                       l4842 00F1                       l4770 20E5  
                     l5634 1F44                       l3876 2239                       l3868 221D  
                     l3972 2E9E                       l3980 264C                       l5716 160A  
                     l5708 15F0                       l5724 1632                       l4676 2CC5  
                     l4916 01B6                       l4836 00DC                       l4828 00D1  
                     l4756 1835                       l5644 1F73                       l5900 0EEC  
                     l3982 2655                       l5670 1487                       l5398 0680  
                     l4862 011F                       l4846 00F9                       l4838 00E9  
                     l4790 2122                       l4782 20C6                       l4766 20E3  
                     l5582 1E22                       l5574 1E09                       l5662 1FFD  
                     l5830 0C86                       l5902 0EF9                       l3984 265E  
                     l5736 166A                       l5728 1639                       l5760 16F7  
                     l5680 1498                       l4944 2F34                       l5592 1E3E  
                     l5840 0C9F                       l3978 262F                       l5746 16A0  
                     l5762 1707                       l5738 1695                       l5674 1489  
                     l4970 2F83                       l4946 2F28                       l4858 0117  
                     l4874 013E                       l4786 20CB                       l5586 1E2A  
                     l5914 0F4A                       l5850 0CE5                       l5748 16AD  
                     l4948 2F3E                       l5932 0FF9                       l5908 0F1E  
                     l5828 0C66                       l4966 2F7E                       l4894 0165  
                     l4886 015A                       l5918 0F8D                       l5846 0CB8  
                     l5926 0BE7                       l4992 2074                       l5928 0FB5  
                     l5960 229E                       l5778 1771                       l4994 2094  
                     l4986 2064                       l4898 0186                       l5882 0E05  
                     l5890 0E8E                       l5866 0D73                       l5858 0D35  
                     l5876 0DC3                       l4998 2096                       l5888 0E80  
                     l5968 22CB                       l5898 0ED5                       STR_1 3014  
                     STR_2 3024                       STR_3 3000                       STR_4 3015  
                     u4310 2B43                       u5015 1C5C                       u5105 2BD2  
                     u5045 1CAC                       u5205 1A61                       u5135 2FB9  
                     u5065 1D30                       u5325 2B13                       u5165 19A3  
                     u6045 13A9                       u5335 2B18                       u5415 0936  
                     u5095 2BCB                       u5255 1ACF                       u6055 1456  
                     u7015 2550                       u4650 2257                       u4715 2EB2  
                     u5435 0943                       u5195 1A24                       u5604 0A7E  
                     u5540 0A26                       u4565 21CF                       u5605 0A7C  
                     u5445 096C                       u8005 1504                       u6405 1827  
                     u4815 24D7                       u5615 0A96                       u5535 0A1C  
                     u5455 0981                       u5480 09CE                       u5625 0AA4  
                     u5545 0A22                       u5465 0998                       u4905 26D5  
                     u8025 155E                       u4770 2F11                       _SCS0 04C8  
                     u4835 2E57                       u5475 09A6                       u8115 16D0  
                     u7315 02C3                       u7075 25DB                       _SCS1 04C9  
                     u5485 09CA                       u8125 1705                       u5805 109E  
                     u6365 2197                       u7335 02E7                       u6535 00CF  
                     u5585 0A59                       u4945 2799                       u5745 2B76  
                     u8225 0BE3                       u5595 0A75                       u4875 264A  
                     u8155 1763                       u5835 114D                       u4885 2682  
                     u7605 06DA                       u5925 1260                       u5845 10E1  
                     u5765 1048                       u8405 0E61                       u8325 0D16  
                     u8245 0C13                       u4975 1BB1                       u8175 17A6  
                     u5935 1268                       u6655 012B                       u8415 0E85  
                     u4985 1BDC                       u8185 17DD                       u6825 2F69  
                     u5865 11A7                       u8425 0EB6                       u6915 2E20  
                     u7555 05E7                       u5875 11D3                       u8355 0D85  
                     u7485 0476                       u8445 0F18                       u8607 1933  
                     u7495 04B7                       u5975 12F4                       u8375 0DAE  
                     u8617 2B35                       u6945 2CF7                       u7585 0662  
                     u8545 22FA                       u8627 2C2E                       u7595 06B7  
                     u8475 0FDD                       u8395 0E38                       u6965 2D03  
                     u8557 22C1                       u6975 2D17                       u8567 22D6  
                     u6985 2D23                       u8577 22E5                       u8587 2032  
                     u8597 18B6                       u7975 14B3                       _Fsid 00E7  
             __CFG_WRT$OFF 0000                       _Stat 00EE                       _main 2259  
             find_volume@i 00D5                       fsr0h 0005                       fsr1h 0007  
                     indf0 0000                       fsr0l 0004                       indf1 0001  
                     fsr1l 0006                       btemp 007E              disk_ioctl@cmd 0024  
            disk_ioctl@csd 0034              disk_read@buff 0024              disk_ioctl@res 0049  
            disk_ioctl@ptr 004B              disk_read@pdrv 002D             ??_get_ldnumber 0072  
                     start 0002     __end_of_SPI_Initialize 2AB2         disk_initialize@cmd 002C  
             ?_follow_path 00CE         disk_initialize@ocr 0026         disk_initialize@tmr 002E  
          create_name@path 007A           create_chain@clst 00A2                _sync_window 245B  
                    ?_main 0070              __CFG_WDTE$OFF 0000            __end_of___lldiv 2D36  
                    _LATC0 0870                      _IRCF0 04CB                      _IRCF1 04CC  
                    _IRCF2 04CD                      _IRCF3 04CE            __end_of_f_close 2B68  
                    _FatFs 25C2            __end_of_chk_chr 2B8F            __end_of_f_lseek 1800  
      ___lmul@multiplicand 0074            __end_of_f_mount 2D8B             __CFG_FCMEN$OFF 0000  
             ___send_cmd@n 0079            __end_of_dir_sdi 11FA            __end_of_f_write 1000  
          __end_of_get_fat 2800            __end_of_mem_cmp 2C1B            __end_of_mem_cpy 2CE4  
          __end_of_mem_set 2B0A              find_volume@br 00A0              find_volume@fs 00D8  
            find_volume@pt 00BA                      main@y 00E5             disk_ioctl@buff 0025  
           __CFG_BOREN$OFF 0000             disk_read@count 002A             disk_ioctl@pdrv 0044  
          __end_of_put_fat 1DAE                      status 0003                      wtemp0 007E  
          __end_of_sync_fs 08FB               ?_internal_16 0070              get_ldnumber@i 0026  
          ?_SPI_Initialize 0070             __CFG_MCLRE$OFF 0000            __initialization 07DC  
      disk_initialize@pdrv 0025               __end_of_main 22FD               clust2sect@fs 0020  
           __CFG_LPBOR$OFF 0000                     ??_main 00E3             __CFG_PLLEN$OFF 0000  
 __end_of_SPI_Exchange8bit 2ABB             __CFG_ZCDDIS$ON 0000                     _SPLLEN 04CF  
                   _SSPBUF 0211       __end_of_dir_register 0079           __end_of_check_fs 20B8  
     __size_of_create_name 015E             __CFG_PWRTE$OFF 0000   __size_of_disk_initialize 0129  
         __end_of_deselect 1006           __end_of_dir_find 2134           __end_of_dir_next 1479  
             ?_move_window 0043       __end_of_create_chain 1B89           __end_of_ld_clust 183E  
                   ___lmul 2BB8       __size_of_find_volume 0605       __size_of_disk_status 0009  
                   ___wmul 2B0A             __CFG_STVREN$ON 0000                  ??___lldiv 0078  
                   _f_open 1DAE                     _f_sync 23A9           __end_of_initMain 203C  
                ??_f_close 0062             find_volume@fmt 00D7             find_volume@rfs 0058  
                ??_chk_chr 0074             find_volume@vol 00C0                     _select 2ACD  
                ??_f_lseek 00B9                  ??_f_mount 00DA                  ??_dir_sdi 00A0  
                ??_f_write 00BA                  ??_get_fat 0054           __end_of_send_cmd 2BB8  
                ??_mem_cmp 0075                  ??_mem_cpy 0076                  ??_mem_set 0076  
          disk_ioctl@csize 0045           __end_of_validate 2E3A       __end_of_get_ldnumber 2F86  
          disk_read@sector 0026           __end_of_st_clust 2AF2                  ??_put_fat 0058  
          xmit_datablock@i 0077                  ??_sync_fs 004E         rcvr_datablock@buff 0071  
  __end_of__initialization 07FD             disk_write@buff 0024             get_ldnumber@tp 0022  
           get_ldnumber@tt 0029             disk_write@pdrv 002D    __size_of_rcvr_datablock 0041  
           __pcstackCOMMON 0070               __pidataBANK1 0801                 ___send_cmd 2D8B  
     __size_of_follow_path 00AC         __size_of_dir_alloc 0084         __size_of_disk_read 0073  
               __pbssBANK1 00E7                 __pbssBANK2 014D                 __pmaintext 2259  
     __size_of_internal_16 0009                    ?___lmul 0070                    ?___wmul 0070  
          __CFG_PPS1WAY$ON 0000                    ?_f_open 00DA    __size_of_xmit_datablock 0041  
                  ?_f_sync 0053          ??_disk_initialize 0024               ?_sync_window 002E  
           ___lmul@product 0078                    ?_select 0070                  ?_check_fs 004E  
               _disk_ioctl 08FB             follow_path@dir 00D4             follow_path@res 00D7  
               _disk_write 21B8                send_cmd@cmd 007C                  ?_deselect 0070  
              send_cmd@arg 0020                    _SSP1ADD 0212                send_cmd@res 007D  
                  _PPSLOCK 0E0F             remove_chain@fs 00A0                  ?_dir_find 00C7  
                ?_dir_next 00B3      __size_of_dir_register 0075                  ?_ld_clust 0070  
               _clust2sect 2F86           sync_window@wsect 003F           ??_SPI_Initialize 0070  
                ?_initMain 0070              ?_remove_chain 00A0      __size_of_create_chain 0222  
        __end_of_dir_alloc 21B8                  ?_send_cmd 0020             ___send_cmd@cmd 007A  
           ___send_cmd@arg 0073             ___send_cmd@res 0078                  ?_validate 0071  
        __end_of_disk_read 2F13                    ff@FatFs 00E9                 f_close@res 0063  
          __size_of___lmul 002F                  ?_st_clust 0070                ?___send_cmd 0073  
                  ___lldiv 2CE4            __size_of___wmul 001B       __size_of_move_window 0066  
               check_fs@fs 004E            __size_of_f_open 0252            __size_of_f_sync 00B2  
                  _f_close 2B45      __size_of_get_ldnumber 0073        _disk_initialize$346 002A  
                  _chk_chr 2B68                    _f_lseek 1479                    _f_mount 2D36  
          __size_of_select 0012                    __ptext1 2002                    __ptext2 2AC4  
                  __ptext3 0B86                    __ptext4 1DAE                    __ptext5 2520  
                  __ptext6 22FD                    __ptext7 1800                    __ptext8 20B8  
                  __ptext9 2BE7                    _dir_sdi 1006                validate@fil 0079  
                  _f_write 0B86                validate@obj 0071                    _get_fat 2622  
               chk_chr@chr 0072               _dir_register 0004                 chk_chr@str 0070  
                  _mem_cmp 2BE7                    _mem_cpy 2C9D                    _mem_set 2AF2  
               ??_check_fs 0054            find_volume@path 005A            find_volume@nrsv 00C2  
          find_volume@stat 00CC               _create_chain 1967                 ??_deselect 0071  
               ??_dir_find 00C9          ?_SPI_Exchange8bit 0070                    _put_fat 1B89  
               ??_dir_next 00B7                    clrloop0 0803                 f_lseek@bcs 00CA  
               ??_ld_clust 0074                    _sync_fs 080E                 f_lseek@ofs 00B5  
               f_lseek@res 00C5       end_of_initialization 07FD         ??_SPI_Exchange8bit 0070  
     SPI_Exchange8bit@data 0070                 f_open@mode 00DE                 f_open@path 00DC  
           ??_remove_chain 006C                 ??_initMain 0070            disk_status@pdrv 0070  
           _rcvr_datablock 2C1B            ___lldiv@divisor 0070                 f_mount@cfs 00DD  
               f_mount@res 00DC                 ??_send_cmd 007B                 f_mount@opt 006E  
               f_mount@vol 00E1            ___lldiv@counter 007D               _get_ldnumber 2F13  
               ??_validate 0073                 ??_st_clust 0076             move_window@res 004D  
               _wait_ready 2B25                 dir_alloc@n 00CD           remove_chain@clst 00A2  
               dir_find@dp 00C7            _create_name$836 0020                 dir_sdi@idx 006C  
               dir_next@dp 00B3           __CFG_FOSC$INTOSC 0000                ?_disk_ioctl 0024  
      rcvr_datablock@token 0078                 f_write@btw 00B7                 f_write@res 00C6  
              ?_disk_write 0024                  _TRISCbits 008E                  _TRISDbits 008F  
               get_fat@val 0060            get_ldnumber@vol 0024            disk_write@count 002A  
              ?_clust2sect 0020        __size_of___send_cmd 0056     __end_of_rcvr_datablock 2C5C  
            ??_create_name 007B           disk_initialize@n 0030                 ld_clust@cl 007A  
               ld_clust@fs 0070              ??_find_volume 005C              ??_disk_status 0070  
           _xmit_datablock 2C5C             __end_of___lmul 2BE7                st_clust@dir 0070  
           __end_of___wmul 2B25             __end_of_f_open 2000             __end_of_f_sync 245B  
           clust2sect@clst 0022             __end_of_select 2ADF       __size_of_sync_window 00C5  
      start_initialization 07DC                 mem_cmp@cnt 0073                 mem_cmp@dst 0070  
               mem_cmp@src 0072                 mem_cpy@cnt 0074                put_fat@clst 0050  
               mem_cpy@dst 0070                 mem_cpy@src 0072            ?_rcvr_datablock 0071  
          _disk_initialize 183E                 mem_set@cnt 0074                 mem_set@dst 0070  
               mem_set@val 0072     __end_of_xmit_datablock 2C9D              ??_follow_path 00D2  
      __size_of_disk_ioctl 028B        __end_of_create_name 01D7        __size_of_disk_write 00A1  
                 ??___lmul 0078                   ??___wmul 0074                   ??_f_open 00DF  
                 ??_f_sync 0055                ?_wait_ready 0070                __pdataBANK1 00EE  
      __end_of_find_volume 07DC        __end_of_disk_status 2AC4        __size_of_clust2sect 007A  
                 ??_select 0073       __end_of_remove_chain 2622          rcvr_datablock@btr 0073  
        rcvr_datablock@tmr 0076                __pbssBIGRAM 25C2                  ___latbits 0003  
            __pcstackBANK0 0020              __pcstackBANK1 00A0              __pcstackBANK2 0120  
        __size_of_check_fs 007C               check_fs@sect 0050          __size_of_deselect 0006  
        __size_of_dir_find 007C          __size_of_dir_next 027F          __size_of_ld_clust 003E  
            ??_internal_16 0070          __size_of_initMain 003A            _find_volume$940 00B0  
          _find_volume$941 00B4            ?_xmit_datablock 0073          __size_of_send_cmd 0029  
             ??___send_cmd 0077                  _dir_alloc 2134                   ?___lldiv 0070  
        __size_of_validate 0059                   ?_f_close 0060                  _disk_read 2EA0  
                 ?_chk_chr 0070              follow_path@dp 00CE                   ?_f_lseek 00B3  
            follow_path@ns 00D6          __size_of_st_clust 0013        __end_of_follow_path 23A9  
                 ?_f_mount 006A                   ?_dir_sdi 006A                   ?_f_write 00B3  
                 ?_get_fat 004E                   ?_mem_cmp 0070                   ?_mem_cpy 0070  
                 ?_mem_set 0070                  f_close@fp 0060                   ?_put_fat 004E  
  __end_of_disk_initialize 1967                   ?_sync_fs 004C                _get_fat$586 005E  
        find_volume@fasize 00CD        __size_of_wait_ready 0020         __end_of___send_cmd 2DE1  
              _create_name 0079             ___wmul@product 0074                  f_lseek@fp 00B3  
        find_volume@szbfat 00B6                  f_open@dir 0135                  f_open@res 0134  
                f_open@sfn 0120                  clear_ram0 0802          find_volume@sysect 00BC  
              _find_volume 01D7                _disk_status 2ABB              ??_move_window 0049  
                f_mount@fs 006A                  f_mount@rp 00DF            follow_path@path 00D0  
__size_of_SPI_Exchange8bit 0009              move_window@fs 0043                   _SSP1CON1 0215  
                dir_find@c 00CA        __end_of_internal_16 2ACD                 ?_dir_alloc 00C7  
          remove_chain@res 00A6            remove_chain@nxt 00A7                   _SSP1STAT 0214  
                f_sync@dir 005E                  f_sync@res 005D                  dir_sdi@ic 00AA  
                dir_sdi@dp 006A                  dir_next@c 00BF                  dir_next@i 00C1  
               ?_disk_read 0024                  f_write@cc 00CA                  f_write@bw 00B9  
                f_write@fp 00B3                  get_fat@bc 0068                  get_fat@fs 004E  
                get_fat@wc 0064          ___wmul@multiplier 0070                   _CardType 00EB  
             ??_disk_ioctl 0026               ??_disk_write 002C               f_lseek@ifptr 00C1  
             f_lseek@nsect 00C6                 st_clust@cl 0072               ??_clust2sect 0026  
        ___lmul@multiplier 0070                 put_fat@res 0069                 put_fat@val 0054  
        move_window@sector 0045            dir_next@stretch 00B5                _follow_path 22FD  
       __end_of_disk_ioctl 0B86      __size_of_remove_chain 0102    __size_of_SPI_Initialize 0007  
       __end_of_disk_write 2259           __size_of___lldiv 0052        __end_of_move_window 2EA0  
       __end_of_clust2sect 3000           __size_of_f_close 0023           __size_of_chk_chr 0027  
         __size_of_f_lseek 0387                 _ANSELCbits 018E           __size_of_f_mount 0055  
         __size_of_dir_sdi 01F4           __size_of_f_write 047A           __size_of_get_fat 01DE  
                 _check_fs 203C           __size_of_mem_cmp 0034           __size_of_mem_cpy 0047  
         __size_of_mem_set 0018        xmit_datablock@token 0075           ??_rcvr_datablock 0075  
          dir_register@res 00D6                   _deselect 1000                   __ptext10 0079  
                 __ptext11 2B68                   __ptext20 183E                   __ptext12 0004  
                 __ptext21 2AAB                   __ptext13 2C9D                   __ptext30 2B45  
                 __ptext22 203C                   __ptext14 2134                   __ptext31 23A9  
                 __ptext23 1479                   __ptext15 1006                   __ptext40 245B  
                 __ptext32 2DE1                   __ptext24 1967                   __ptext16 11FA  
                 __ptext41 21B8                   __ptext33 2ABB                   __ptext25 1B89  
                 __ptext17 2D36                   __ptext50 2AB2                   __ptext42 2C5C  
                 __ptext34 080E                   __ptext26 2622                   __ptext18 01D7  
                 __ptext43 2EA0                   __ptext35 2AF2                   __ptext27 2F86  
                 __ptext19 2F13                   __ptext44 2B8F                   __ptext36 08FB  
                 __ptext28 2BB8                   __ptext45 2D8B                   __ptext37 2B0A  
                 __ptext29 2CE4                   __ptext46 2ACD                   __ptext38 2ADF  
                 __ptext47 2B25                   __ptext39 2E3A                   __ptext48 1000  
                 __ptext49 2C1B                   _dir_find 20B8               _SSP1CON1bits 0215  
                 _dir_next 11FA              dir_alloc@nent 00C9           ?_disk_initialize 0070  
                 _ld_clust 1800           __size_of_put_fat 0225             sync_window@res 003C  
         __size_of_sync_fs 00ED                   _initMain 2002              __size_of_main 00A4  
               sync_fs@res 0052              _SSPDATPPSbits 0E21               _remove_chain 2520  
         find_volume@bsect 00D1           find_volume@nclst 00C8                _internal_16 2AC4  
         find_volume@tsect 00C4           find_volume@wmode 005B                   f_open@dj 0137  
                 f_open@cl 012C                   f_open@fp 00DA                   f_open@dw 0130  
                 _send_cmd 2B8F                   _validate 2DE1                 _RC3PPSbits 0EA3  
                 f_sync@fp 0053                ??_dir_alloc 00CB                   _st_clust 2ADF  
               _RC5PPSbits 0EA5                   get_fat@p 0066               ??_wait_ready 0071  
            ??_sync_window 0030               _SSP1STATbits 0214                ??_disk_read 002C  
            _disk_read$355 002E                f_lseek@clst 00CE                   mem_cmp@d 0077  
                 mem_cmp@r 0079                   mem_cmp@s 007B                  put_fat@bc 0067  
                 mem_cpy@d 0077                  put_fat@fs 004E                   mem_cpy@s 0079  
                 mem_set@d 0076              wait_ready@tmr 0071         xmit_datablock@buff 0073  
       xmit_datablock@resp 0079             dir_register@dp 00D0           ??_xmit_datablock 0076  
       __end_of_wait_ready 2B45           ___lldiv@dividend 0074               dir_alloc@res 00CF  
            sync_window@fs 002E              sync_window@nf 003D          __CFG_CLKOUTEN$OFF 0000  
              f_mount@path 006C                _PPSLOCKbits 0E0F                  sync_fs@fs 004C  
              _move_window 2E3A           _SPI_Exchange8bit 2AB2                   put_fat@p 006A  
            __pstringtext1 3000              __pstringtext2 3015              __pstringtext3 3024  
            __pstringtext4 0000              ?_dir_register 00D0                dir_alloc@dp 00C7  
         ___lldiv@quotient 0079                dir_find@dir 00CB        __end_of_sync_window 2520  
              dir_find@res 00CD              ?_create_chain 00A0               dir_next@clst 00C3  
              dir_sdi@clst 00B0                dir_sdi@sect 00AC               ?_create_name 0078  
             f_write@csect 00C9               f_write@wbuff 00C7                f_write@buff 00B5  
              f_write@clst 00D0                f_write@sect 00CC               ?_find_volume 0058  
              f_write@wcnt 00D4              ?_get_ldnumber 0070               ?_disk_status 0070  
              _put_fat$612 0063                _put_fat$613 0065  
