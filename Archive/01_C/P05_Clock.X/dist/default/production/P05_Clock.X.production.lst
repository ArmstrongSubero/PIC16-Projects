

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Thu Jul 04 14:25:54 2019

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F1717
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK3,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    15                           	psect	inittext,global,class=CODE,delta=2
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,delta=2
    23                           	psect	text2,local,class=CODE,merge=1,delta=2
    24                           	psect	text3,local,class=CODE,merge=1,delta=2
    25                           	psect	text4,local,class=CODE,merge=1,delta=2
    26                           	psect	text5,local,class=CODE,merge=1,delta=2
    27                           	psect	text6,local,class=CODE,merge=1,delta=2
    28                           	psect	text7,local,class=CODE,merge=1,delta=2
    29                           	psect	text8,local,class=CODE,merge=1,delta=2
    30                           	psect	text9,local,class=CODE,merge=1,delta=2
    31                           	psect	text10,local,class=CODE,merge=1,delta=2
    32                           	psect	text11,local,class=CODE,merge=1,delta=2
    33                           	psect	text12,local,class=CODE,merge=1,delta=2
    34                           	psect	text13,local,class=CODE,merge=1,delta=2
    35                           	psect	text14,local,class=CODE,merge=1,delta=2
    36                           	psect	text15,local,class=CODE,merge=1,delta=2
    37                           	psect	text16,local,class=CODE,merge=1,delta=2
    38                           	psect	text17,local,class=CODE,merge=1,delta=2
    39                           	psect	text18,local,class=CODE,merge=1,delta=2
    40                           	psect	text19,local,class=CODE,merge=1,delta=2
    41                           	psect	text20,local,class=CODE,merge=1,delta=2
    42                           	psect	text21,local,class=CODE,merge=1,delta=2
    43                           	psect	text22,local,class=CODE,merge=1,delta=2
    44                           	psect	text23,local,class=CODE,merge=1,delta=2
    45                           	psect	text24,local,class=CODE,merge=1,delta=2
    46                           	psect	text25,local,class=CODE,merge=1,delta=2
    47                           	psect	text26,local,class=CODE,merge=1,delta=2
    48                           	psect	text27,local,class=CODE,merge=1,delta=2
    49                           	psect	text28,local,class=CODE,merge=1,delta=2
    50                           	psect	text29,local,class=CODE,merge=1,delta=2
    51                           	psect	text30,local,class=CODE,merge=1,delta=2
    52                           	psect	text31,local,class=CODE,merge=1,delta=2
    53                           	psect	text32,local,class=CODE,merge=1,delta=2
    54                           	psect	text33,local,class=CODE,merge=1,delta=2
    55                           	psect	text34,local,class=CODE,merge=1,delta=2
    56                           	psect	text35,local,class=CODE,merge=1,delta=2
    57                           	psect	text36,local,class=CODE,merge=1,delta=2
    58                           	psect	text37,local,class=CODE,merge=1,delta=2
    59                           	psect	text38,local,class=CODE,merge=1,delta=2
    60                           	psect	intentry,global,class=CODE,delta=2
    61                           	psect	text40,local,class=CODE,merge=1,delta=2
    62                           	psect	text41,local,class=CODE,merge=1,delta=2
    63                           	psect	text42,local,class=CODE,merge=1,delta=2
    64                           	psect	text43,local,class=CODE,merge=1,delta=2
    65                           	psect	text44,local,class=CODE,merge=1,delta=2
    66                           	psect	text45,local,class=CODE,merge=1,delta=2
    67                           	psect	text46,local,class=CODE,merge=1,delta=2
    68                           	psect	text47,local,class=CODE,merge=1,delta=2
    69                           	psect	text48,local,class=CODE,merge=1,delta=2
    70                           	psect	text49,local,class=CODE,merge=1,delta=2
    71                           	psect	text50,local,class=CODE,merge=1,delta=2
    72                           	psect	text51,local,class=CODE,merge=1,delta=2
    73                           	psect	text52,local,class=CODE,merge=1,delta=2
    74                           	psect	text53,local,class=CODE,merge=1,delta=2
    75                           	dabs	1,0x7E,2
    76  0000                     	;# 
    77  0001                     	;# 
    78  0002                     	;# 
    79  0003                     	;# 
    80  0004                     	;# 
    81  0005                     	;# 
    82  0006                     	;# 
    83  0007                     	;# 
    84  0008                     	;# 
    85  0009                     	;# 
    86  000A                     	;# 
    87  000B                     	;# 
    88  000C                     	;# 
    89  000D                     	;# 
    90  000E                     	;# 
    91  000F                     	;# 
    92  0010                     	;# 
    93  0011                     	;# 
    94  0012                     	;# 
    95  0013                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0016                     	;# 
    99  0017                     	;# 
   100  0018                     	;# 
   101  0019                     	;# 
   102  001A                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  008F                     	;# 
   109  0090                     	;# 
   110  0091                     	;# 
   111  0092                     	;# 
   112  0093                     	;# 
   113  0095                     	;# 
   114  0096                     	;# 
   115  0097                     	;# 
   116  0098                     	;# 
   117  0099                     	;# 
   118  009A                     	;# 
   119  009B                     	;# 
   120  009B                     	;# 
   121  009C                     	;# 
   122  009D                     	;# 
   123  009E                     	;# 
   124  009F                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  0110                     	;# 
   130  0111                     	;# 
   131  0112                     	;# 
   132  0113                     	;# 
   133  0114                     	;# 
   134  0115                     	;# 
   135  0116                     	;# 
   136  0117                     	;# 
   137  0118                     	;# 
   138  0119                     	;# 
   139  011A                     	;# 
   140  011B                     	;# 
   141  011B                     	;# 
   142  011C                     	;# 
   143  018C                     	;# 
   144  018D                     	;# 
   145  018E                     	;# 
   146  018F                     	;# 
   147  0190                     	;# 
   148  0191                     	;# 
   149  0191                     	;# 
   150  0192                     	;# 
   151  0193                     	;# 
   152  0193                     	;# 
   153  0194                     	;# 
   154  0195                     	;# 
   155  0196                     	;# 
   156  0197                     	;# 
   157  0199                     	;# 
   158  0199                     	;# 
   159  0199                     	;# 
   160  019A                     	;# 
   161  019A                     	;# 
   162  019A                     	;# 
   163  019B                     	;# 
   164  019B                     	;# 
   165  019B                     	;# 
   166  019B                     	;# 
   167  019B                     	;# 
   168  019C                     	;# 
   169  019C                     	;# 
   170  019C                     	;# 
   171  019D                     	;# 
   172  019D                     	;# 
   173  019D                     	;# 
   174  019E                     	;# 
   175  019E                     	;# 
   176  019E                     	;# 
   177  019F                     	;# 
   178  019F                     	;# 
   179  019F                     	;# 
   180  019F                     	;# 
   181  019F                     	;# 
   182  020C                     	;# 
   183  020D                     	;# 
   184  020E                     	;# 
   185  020F                     	;# 
   186  0210                     	;# 
   187  0211                     	;# 
   188  0211                     	;# 
   189  0212                     	;# 
   190  0212                     	;# 
   191  0213                     	;# 
   192  0213                     	;# 
   193  0214                     	;# 
   194  0214                     	;# 
   195  0215                     	;# 
   196  0215                     	;# 
   197  0215                     	;# 
   198  0215                     	;# 
   199  0216                     	;# 
   200  0216                     	;# 
   201  0217                     	;# 
   202  0217                     	;# 
   203  028C                     	;# 
   204  028D                     	;# 
   205  028E                     	;# 
   206  028F                     	;# 
   207  0290                     	;# 
   208  0291                     	;# 
   209  0291                     	;# 
   210  0292                     	;# 
   211  0293                     	;# 
   212  0293                     	;# 
   213  0298                     	;# 
   214  0298                     	;# 
   215  0299                     	;# 
   216  029A                     	;# 
   217  029A                     	;# 
   218  029E                     	;# 
   219  030C                     	;# 
   220  030D                     	;# 
   221  030E                     	;# 
   222  030F                     	;# 
   223  0310                     	;# 
   224  038C                     	;# 
   225  038D                     	;# 
   226  038E                     	;# 
   227  038F                     	;# 
   228  0390                     	;# 
   229  0391                     	;# 
   230  0392                     	;# 
   231  0393                     	;# 
   232  0394                     	;# 
   233  0395                     	;# 
   234  0396                     	;# 
   235  0397                     	;# 
   236  0398                     	;# 
   237  0399                     	;# 
   238  039D                     	;# 
   239  039E                     	;# 
   240  039F                     	;# 
   241  0415                     	;# 
   242  0416                     	;# 
   243  0417                     	;# 
   244  041C                     	;# 
   245  041D                     	;# 
   246  041E                     	;# 
   247  0498                     	;# 
   248  0498                     	;# 
   249  0499                     	;# 
   250  049A                     	;# 
   251  049B                     	;# 
   252  049B                     	;# 
   253  049C                     	;# 
   254  049D                     	;# 
   255  049E                     	;# 
   256  049F                     	;# 
   257  0511                     	;# 
   258  0515                     	;# 
   259  0617                     	;# 
   260  0618                     	;# 
   261  0619                     	;# 
   262  0619                     	;# 
   263  061A                     	;# 
   264  061B                     	;# 
   265  061C                     	;# 
   266  061C                     	;# 
   267  0691                     	;# 
   268  0692                     	;# 
   269  0693                     	;# 
   270  0694                     	;# 
   271  0695                     	;# 
   272  0696                     	;# 
   273  0697                     	;# 
   274  0698                     	;# 
   275  0699                     	;# 
   276  069A                     	;# 
   277  069B                     	;# 
   278  069C                     	;# 
   279  069D                     	;# 
   280  069E                     	;# 
   281  069F                     	;# 
   282  0E0F                     	;# 
   283  0E10                     	;# 
   284  0E11                     	;# 
   285  0E12                     	;# 
   286  0E13                     	;# 
   287  0E14                     	;# 
   288  0E15                     	;# 
   289  0E17                     	;# 
   290  0E20                     	;# 
   291  0E21                     	;# 
   292  0E22                     	;# 
   293  0E24                     	;# 
   294  0E25                     	;# 
   295  0E28                     	;# 
   296  0E29                     	;# 
   297  0E2A                     	;# 
   298  0E2B                     	;# 
   299  0E90                     	;# 
   300  0E91                     	;# 
   301  0E92                     	;# 
   302  0E93                     	;# 
   303  0E94                     	;# 
   304  0E95                     	;# 
   305  0E96                     	;# 
   306  0E97                     	;# 
   307  0E98                     	;# 
   308  0E99                     	;# 
   309  0E9A                     	;# 
   310  0E9B                     	;# 
   311  0E9C                     	;# 
   312  0E9D                     	;# 
   313  0E9E                     	;# 
   314  0E9F                     	;# 
   315  0EA0                     	;# 
   316  0EA1                     	;# 
   317  0EA2                     	;# 
   318  0EA3                     	;# 
   319  0EA4                     	;# 
   320  0EA5                     	;# 
   321  0EA6                     	;# 
   322  0EA7                     	;# 
   323  0EA8                     	;# 
   324  0EA9                     	;# 
   325  0EAA                     	;# 
   326  0EAB                     	;# 
   327  0EAC                     	;# 
   328  0EAD                     	;# 
   329  0EAE                     	;# 
   330  0EAF                     	;# 
   331  0EB0                     	;# 
   332  0EB1                     	;# 
   333  0EB2                     	;# 
   334  0F0F                     	;# 
   335  0F10                     	;# 
   336  0F11                     	;# 
   337  0F12                     	;# 
   338  0F13                     	;# 
   339  0F14                     	;# 
   340  0F15                     	;# 
   341  0F16                     	;# 
   342  0F17                     	;# 
   343  0F18                     	;# 
   344  0F19                     	;# 
   345  0F1A                     	;# 
   346  0F1B                     	;# 
   347  0F1C                     	;# 
   348  0F1D                     	;# 
   349  0F1E                     	;# 
   350  0F1F                     	;# 
   351  0F20                     	;# 
   352  0F21                     	;# 
   353  0F22                     	;# 
   354  0F23                     	;# 
   355  0F24                     	;# 
   356  0F25                     	;# 
   357  0F26                     	;# 
   358  0F27                     	;# 
   359  0F28                     	;# 
   360  0F29                     	;# 
   361  0F2A                     	;# 
   362  0F2B                     	;# 
   363  0F2C                     	;# 
   364  0F2D                     	;# 
   365  0F2E                     	;# 
   366  0F2F                     	;# 
   367  0F30                     	;# 
   368  0F31                     	;# 
   369  0F32                     	;# 
   370  0F33                     	;# 
   371  0F34                     	;# 
   372  0F35                     	;# 
   373  0F36                     	;# 
   374  0F37                     	;# 
   375  0FE4                     	;# 
   376  0FE5                     	;# 
   377  0FE6                     	;# 
   378  0FE7                     	;# 
   379  0FE8                     	;# 
   380  0FE9                     	;# 
   381  0FEA                     	;# 
   382  0FEB                     	;# 
   383  0FED                     	;# 
   384  0FEE                     	;# 
   385  0FEF                     	;# 
   386  0000                     	;# 
   387  0001                     	;# 
   388  0002                     	;# 
   389  0003                     	;# 
   390  0004                     	;# 
   391  0005                     	;# 
   392  0006                     	;# 
   393  0007                     	;# 
   394  0008                     	;# 
   395  0009                     	;# 
   396  000A                     	;# 
   397  000B                     	;# 
   398  000C                     	;# 
   399  000D                     	;# 
   400  000E                     	;# 
   401  000F                     	;# 
   402  0010                     	;# 
   403  0011                     	;# 
   404  0012                     	;# 
   405  0013                     	;# 
   406  0015                     	;# 
   407  0016                     	;# 
   408  0016                     	;# 
   409  0017                     	;# 
   410  0018                     	;# 
   411  0019                     	;# 
   412  001A                     	;# 
   413  001B                     	;# 
   414  001C                     	;# 
   415  008C                     	;# 
   416  008D                     	;# 
   417  008E                     	;# 
   418  008F                     	;# 
   419  0090                     	;# 
   420  0091                     	;# 
   421  0092                     	;# 
   422  0093                     	;# 
   423  0095                     	;# 
   424  0096                     	;# 
   425  0097                     	;# 
   426  0098                     	;# 
   427  0099                     	;# 
   428  009A                     	;# 
   429  009B                     	;# 
   430  009B                     	;# 
   431  009C                     	;# 
   432  009D                     	;# 
   433  009E                     	;# 
   434  009F                     	;# 
   435  010C                     	;# 
   436  010D                     	;# 
   437  010E                     	;# 
   438  010F                     	;# 
   439  0110                     	;# 
   440  0111                     	;# 
   441  0112                     	;# 
   442  0113                     	;# 
   443  0114                     	;# 
   444  0115                     	;# 
   445  0116                     	;# 
   446  0117                     	;# 
   447  0118                     	;# 
   448  0119                     	;# 
   449  011A                     	;# 
   450  011B                     	;# 
   451  011B                     	;# 
   452  011C                     	;# 
   453  018C                     	;# 
   454  018D                     	;# 
   455  018E                     	;# 
   456  018F                     	;# 
   457  0190                     	;# 
   458  0191                     	;# 
   459  0191                     	;# 
   460  0192                     	;# 
   461  0193                     	;# 
   462  0193                     	;# 
   463  0194                     	;# 
   464  0195                     	;# 
   465  0196                     	;# 
   466  0197                     	;# 
   467  0199                     	;# 
   468  0199                     	;# 
   469  0199                     	;# 
   470  019A                     	;# 
   471  019A                     	;# 
   472  019A                     	;# 
   473  019B                     	;# 
   474  019B                     	;# 
   475  019B                     	;# 
   476  019B                     	;# 
   477  019B                     	;# 
   478  019C                     	;# 
   479  019C                     	;# 
   480  019C                     	;# 
   481  019D                     	;# 
   482  019D                     	;# 
   483  019D                     	;# 
   484  019E                     	;# 
   485  019E                     	;# 
   486  019E                     	;# 
   487  019F                     	;# 
   488  019F                     	;# 
   489  019F                     	;# 
   490  019F                     	;# 
   491  019F                     	;# 
   492  020C                     	;# 
   493  020D                     	;# 
   494  020E                     	;# 
   495  020F                     	;# 
   496  0210                     	;# 
   497  0211                     	;# 
   498  0211                     	;# 
   499  0212                     	;# 
   500  0212                     	;# 
   501  0213                     	;# 
   502  0213                     	;# 
   503  0214                     	;# 
   504  0214                     	;# 
   505  0215                     	;# 
   506  0215                     	;# 
   507  0215                     	;# 
   508  0215                     	;# 
   509  0216                     	;# 
   510  0216                     	;# 
   511  0217                     	;# 
   512  0217                     	;# 
   513  028C                     	;# 
   514  028D                     	;# 
   515  028E                     	;# 
   516  028F                     	;# 
   517  0290                     	;# 
   518  0291                     	;# 
   519  0291                     	;# 
   520  0292                     	;# 
   521  0293                     	;# 
   522  0293                     	;# 
   523  0298                     	;# 
   524  0298                     	;# 
   525  0299                     	;# 
   526  029A                     	;# 
   527  029A                     	;# 
   528  029E                     	;# 
   529  030C                     	;# 
   530  030D                     	;# 
   531  030E                     	;# 
   532  030F                     	;# 
   533  0310                     	;# 
   534  038C                     	;# 
   535  038D                     	;# 
   536  038E                     	;# 
   537  038F                     	;# 
   538  0390                     	;# 
   539  0391                     	;# 
   540  0392                     	;# 
   541  0393                     	;# 
   542  0394                     	;# 
   543  0395                     	;# 
   544  0396                     	;# 
   545  0397                     	;# 
   546  0398                     	;# 
   547  0399                     	;# 
   548  039D                     	;# 
   549  039E                     	;# 
   550  039F                     	;# 
   551  0415                     	;# 
   552  0416                     	;# 
   553  0417                     	;# 
   554  041C                     	;# 
   555  041D                     	;# 
   556  041E                     	;# 
   557  0498                     	;# 
   558  0498                     	;# 
   559  0499                     	;# 
   560  049A                     	;# 
   561  049B                     	;# 
   562  049B                     	;# 
   563  049C                     	;# 
   564  049D                     	;# 
   565  049E                     	;# 
   566  049F                     	;# 
   567  0511                     	;# 
   568  0515                     	;# 
   569  0617                     	;# 
   570  0618                     	;# 
   571  0619                     	;# 
   572  0619                     	;# 
   573  061A                     	;# 
   574  061B                     	;# 
   575  061C                     	;# 
   576  061C                     	;# 
   577  0691                     	;# 
   578  0692                     	;# 
   579  0693                     	;# 
   580  0694                     	;# 
   581  0695                     	;# 
   582  0696                     	;# 
   583  0697                     	;# 
   584  0698                     	;# 
   585  0699                     	;# 
   586  069A                     	;# 
   587  069B                     	;# 
   588  069C                     	;# 
   589  069D                     	;# 
   590  069E                     	;# 
   591  069F                     	;# 
   592  0E0F                     	;# 
   593  0E10                     	;# 
   594  0E11                     	;# 
   595  0E12                     	;# 
   596  0E13                     	;# 
   597  0E14                     	;# 
   598  0E15                     	;# 
   599  0E17                     	;# 
   600  0E20                     	;# 
   601  0E21                     	;# 
   602  0E22                     	;# 
   603  0E24                     	;# 
   604  0E25                     	;# 
   605  0E28                     	;# 
   606  0E29                     	;# 
   607  0E2A                     	;# 
   608  0E2B                     	;# 
   609  0E90                     	;# 
   610  0E91                     	;# 
   611  0E92                     	;# 
   612  0E93                     	;# 
   613  0E94                     	;# 
   614  0E95                     	;# 
   615  0E96                     	;# 
   616  0E97                     	;# 
   617  0E98                     	;# 
   618  0E99                     	;# 
   619  0E9A                     	;# 
   620  0E9B                     	;# 
   621  0E9C                     	;# 
   622  0E9D                     	;# 
   623  0E9E                     	;# 
   624  0E9F                     	;# 
   625  0EA0                     	;# 
   626  0EA1                     	;# 
   627  0EA2                     	;# 
   628  0EA3                     	;# 
   629  0EA4                     	;# 
   630  0EA5                     	;# 
   631  0EA6                     	;# 
   632  0EA7                     	;# 
   633  0EA8                     	;# 
   634  0EA9                     	;# 
   635  0EAA                     	;# 
   636  0EAB                     	;# 
   637  0EAC                     	;# 
   638  0EAD                     	;# 
   639  0EAE                     	;# 
   640  0EAF                     	;# 
   641  0EB0                     	;# 
   642  0EB1                     	;# 
   643  0EB2                     	;# 
   644  0F0F                     	;# 
   645  0F10                     	;# 
   646  0F11                     	;# 
   647  0F12                     	;# 
   648  0F13                     	;# 
   649  0F14                     	;# 
   650  0F15                     	;# 
   651  0F16                     	;# 
   652  0F17                     	;# 
   653  0F18                     	;# 
   654  0F19                     	;# 
   655  0F1A                     	;# 
   656  0F1B                     	;# 
   657  0F1C                     	;# 
   658  0F1D                     	;# 
   659  0F1E                     	;# 
   660  0F1F                     	;# 
   661  0F20                     	;# 
   662  0F21                     	;# 
   663  0F22                     	;# 
   664  0F23                     	;# 
   665  0F24                     	;# 
   666  0F25                     	;# 
   667  0F26                     	;# 
   668  0F27                     	;# 
   669  0F28                     	;# 
   670  0F29                     	;# 
   671  0F2A                     	;# 
   672  0F2B                     	;# 
   673  0F2C                     	;# 
   674  0F2D                     	;# 
   675  0F2E                     	;# 
   676  0F2F                     	;# 
   677  0F30                     	;# 
   678  0F31                     	;# 
   679  0F32                     	;# 
   680  0F33                     	;# 
   681  0F34                     	;# 
   682  0F35                     	;# 
   683  0F36                     	;# 
   684  0F37                     	;# 
   685  0FE4                     	;# 
   686  0FE5                     	;# 
   687  0FE6                     	;# 
   688  0FE7                     	;# 
   689  0FE8                     	;# 
   690  0FE9                     	;# 
   691  0FEA                     	;# 
   692  0FEB                     	;# 
   693  0FED                     	;# 
   694  0FEE                     	;# 
   695  0FEF                     	;# 
   696  0000                     	;# 
   697  0001                     	;# 
   698  0002                     	;# 
   699  0003                     	;# 
   700  0004                     	;# 
   701  0005                     	;# 
   702  0006                     	;# 
   703  0007                     	;# 
   704  0008                     	;# 
   705  0009                     	;# 
   706  000A                     	;# 
   707  000B                     	;# 
   708  000C                     	;# 
   709  000D                     	;# 
   710  000E                     	;# 
   711  000F                     	;# 
   712  0010                     	;# 
   713  0011                     	;# 
   714  0012                     	;# 
   715  0013                     	;# 
   716  0015                     	;# 
   717  0016                     	;# 
   718  0016                     	;# 
   719  0017                     	;# 
   720  0018                     	;# 
   721  0019                     	;# 
   722  001A                     	;# 
   723  001B                     	;# 
   724  001C                     	;# 
   725  008C                     	;# 
   726  008D                     	;# 
   727  008E                     	;# 
   728  008F                     	;# 
   729  0090                     	;# 
   730  0091                     	;# 
   731  0092                     	;# 
   732  0093                     	;# 
   733  0095                     	;# 
   734  0096                     	;# 
   735  0097                     	;# 
   736  0098                     	;# 
   737  0099                     	;# 
   738  009A                     	;# 
   739  009B                     	;# 
   740  009B                     	;# 
   741  009C                     	;# 
   742  009D                     	;# 
   743  009E                     	;# 
   744  009F                     	;# 
   745  010C                     	;# 
   746  010D                     	;# 
   747  010E                     	;# 
   748  010F                     	;# 
   749  0110                     	;# 
   750  0111                     	;# 
   751  0112                     	;# 
   752  0113                     	;# 
   753  0114                     	;# 
   754  0115                     	;# 
   755  0116                     	;# 
   756  0117                     	;# 
   757  0118                     	;# 
   758  0119                     	;# 
   759  011A                     	;# 
   760  011B                     	;# 
   761  011B                     	;# 
   762  011C                     	;# 
   763  018C                     	;# 
   764  018D                     	;# 
   765  018E                     	;# 
   766  018F                     	;# 
   767  0190                     	;# 
   768  0191                     	;# 
   769  0191                     	;# 
   770  0192                     	;# 
   771  0193                     	;# 
   772  0193                     	;# 
   773  0194                     	;# 
   774  0195                     	;# 
   775  0196                     	;# 
   776  0197                     	;# 
   777  0199                     	;# 
   778  0199                     	;# 
   779  0199                     	;# 
   780  019A                     	;# 
   781  019A                     	;# 
   782  019A                     	;# 
   783  019B                     	;# 
   784  019B                     	;# 
   785  019B                     	;# 
   786  019B                     	;# 
   787  019B                     	;# 
   788  019C                     	;# 
   789  019C                     	;# 
   790  019C                     	;# 
   791  019D                     	;# 
   792  019D                     	;# 
   793  019D                     	;# 
   794  019E                     	;# 
   795  019E                     	;# 
   796  019E                     	;# 
   797  019F                     	;# 
   798  019F                     	;# 
   799  019F                     	;# 
   800  019F                     	;# 
   801  019F                     	;# 
   802  020C                     	;# 
   803  020D                     	;# 
   804  020E                     	;# 
   805  020F                     	;# 
   806  0210                     	;# 
   807  0211                     	;# 
   808  0211                     	;# 
   809  0212                     	;# 
   810  0212                     	;# 
   811  0213                     	;# 
   812  0213                     	;# 
   813  0214                     	;# 
   814  0214                     	;# 
   815  0215                     	;# 
   816  0215                     	;# 
   817  0215                     	;# 
   818  0215                     	;# 
   819  0216                     	;# 
   820  0216                     	;# 
   821  0217                     	;# 
   822  0217                     	;# 
   823  028C                     	;# 
   824  028D                     	;# 
   825  028E                     	;# 
   826  028F                     	;# 
   827  0290                     	;# 
   828  0291                     	;# 
   829  0291                     	;# 
   830  0292                     	;# 
   831  0293                     	;# 
   832  0293                     	;# 
   833  0298                     	;# 
   834  0298                     	;# 
   835  0299                     	;# 
   836  029A                     	;# 
   837  029A                     	;# 
   838  029E                     	;# 
   839  030C                     	;# 
   840  030D                     	;# 
   841  030E                     	;# 
   842  030F                     	;# 
   843  0310                     	;# 
   844  038C                     	;# 
   845  038D                     	;# 
   846  038E                     	;# 
   847  038F                     	;# 
   848  0390                     	;# 
   849  0391                     	;# 
   850  0392                     	;# 
   851  0393                     	;# 
   852  0394                     	;# 
   853  0395                     	;# 
   854  0396                     	;# 
   855  0397                     	;# 
   856  0398                     	;# 
   857  0399                     	;# 
   858  039D                     	;# 
   859  039E                     	;# 
   860  039F                     	;# 
   861  0415                     	;# 
   862  0416                     	;# 
   863  0417                     	;# 
   864  041C                     	;# 
   865  041D                     	;# 
   866  041E                     	;# 
   867  0498                     	;# 
   868  0498                     	;# 
   869  0499                     	;# 
   870  049A                     	;# 
   871  049B                     	;# 
   872  049B                     	;# 
   873  049C                     	;# 
   874  049D                     	;# 
   875  049E                     	;# 
   876  049F                     	;# 
   877  0511                     	;# 
   878  0515                     	;# 
   879  0617                     	;# 
   880  0618                     	;# 
   881  0619                     	;# 
   882  0619                     	;# 
   883  061A                     	;# 
   884  061B                     	;# 
   885  061C                     	;# 
   886  061C                     	;# 
   887  0691                     	;# 
   888  0692                     	;# 
   889  0693                     	;# 
   890  0694                     	;# 
   891  0695                     	;# 
   892  0696                     	;# 
   893  0697                     	;# 
   894  0698                     	;# 
   895  0699                     	;# 
   896  069A                     	;# 
   897  069B                     	;# 
   898  069C                     	;# 
   899  069D                     	;# 
   900  069E                     	;# 
   901  069F                     	;# 
   902  0E0F                     	;# 
   903  0E10                     	;# 
   904  0E11                     	;# 
   905  0E12                     	;# 
   906  0E13                     	;# 
   907  0E14                     	;# 
   908  0E15                     	;# 
   909  0E17                     	;# 
   910  0E20                     	;# 
   911  0E21                     	;# 
   912  0E22                     	;# 
   913  0E24                     	;# 
   914  0E25                     	;# 
   915  0E28                     	;# 
   916  0E29                     	;# 
   917  0E2A                     	;# 
   918  0E2B                     	;# 
   919  0E90                     	;# 
   920  0E91                     	;# 
   921  0E92                     	;# 
   922  0E93                     	;# 
   923  0E94                     	;# 
   924  0E95                     	;# 
   925  0E96                     	;# 
   926  0E97                     	;# 
   927  0E98                     	;# 
   928  0E99                     	;# 
   929  0E9A                     	;# 
   930  0E9B                     	;# 
   931  0E9C                     	;# 
   932  0E9D                     	;# 
   933  0E9E                     	;# 
   934  0E9F                     	;# 
   935  0EA0                     	;# 
   936  0EA1                     	;# 
   937  0EA2                     	;# 
   938  0EA3                     	;# 
   939  0EA4                     	;# 
   940  0EA5                     	;# 
   941  0EA6                     	;# 
   942  0EA7                     	;# 
   943  0EA8                     	;# 
   944  0EA9                     	;# 
   945  0EAA                     	;# 
   946  0EAB                     	;# 
   947  0EAC                     	;# 
   948  0EAD                     	;# 
   949  0EAE                     	;# 
   950  0EAF                     	;# 
   951  0EB0                     	;# 
   952  0EB1                     	;# 
   953  0EB2                     	;# 
   954  0F0F                     	;# 
   955  0F10                     	;# 
   956  0F11                     	;# 
   957  0F12                     	;# 
   958  0F13                     	;# 
   959  0F14                     	;# 
   960  0F15                     	;# 
   961  0F16                     	;# 
   962  0F17                     	;# 
   963  0F18                     	;# 
   964  0F19                     	;# 
   965  0F1A                     	;# 
   966  0F1B                     	;# 
   967  0F1C                     	;# 
   968  0F1D                     	;# 
   969  0F1E                     	;# 
   970  0F1F                     	;# 
   971  0F20                     	;# 
   972  0F21                     	;# 
   973  0F22                     	;# 
   974  0F23                     	;# 
   975  0F24                     	;# 
   976  0F25                     	;# 
   977  0F26                     	;# 
   978  0F27                     	;# 
   979  0F28                     	;# 
   980  0F29                     	;# 
   981  0F2A                     	;# 
   982  0F2B                     	;# 
   983  0F2C                     	;# 
   984  0F2D                     	;# 
   985  0F2E                     	;# 
   986  0F2F                     	;# 
   987  0F30                     	;# 
   988  0F31                     	;# 
   989  0F32                     	;# 
   990  0F33                     	;# 
   991  0F34                     	;# 
   992  0F35                     	;# 
   993  0F36                     	;# 
   994  0F37                     	;# 
   995  0FE4                     	;# 
   996  0FE5                     	;# 
   997  0FE6                     	;# 
   998  0FE7                     	;# 
   999  0FE8                     	;# 
  1000  0FE9                     	;# 
  1001  0FEA                     	;# 
  1002  0FEB                     	;# 
  1003  0FED                     	;# 
  1004  0FEE                     	;# 
  1005  0FEF                     	;# 
  1006  0000                     	;# 
  1007  0001                     	;# 
  1008  0002                     	;# 
  1009  0003                     	;# 
  1010  0004                     	;# 
  1011  0005                     	;# 
  1012  0006                     	;# 
  1013  0007                     	;# 
  1014  0008                     	;# 
  1015  0009                     	;# 
  1016  000A                     	;# 
  1017  000B                     	;# 
  1018  000C                     	;# 
  1019  000D                     	;# 
  1020  000E                     	;# 
  1021  000F                     	;# 
  1022  0010                     	;# 
  1023  0011                     	;# 
  1024  0012                     	;# 
  1025  0013                     	;# 
  1026  0015                     	;# 
  1027  0016                     	;# 
  1028  0016                     	;# 
  1029  0017                     	;# 
  1030  0018                     	;# 
  1031  0019                     	;# 
  1032  001A                     	;# 
  1033  001B                     	;# 
  1034  001C                     	;# 
  1035  008C                     	;# 
  1036  008D                     	;# 
  1037  008E                     	;# 
  1038  008F                     	;# 
  1039  0090                     	;# 
  1040  0091                     	;# 
  1041  0092                     	;# 
  1042  0093                     	;# 
  1043  0095                     	;# 
  1044  0096                     	;# 
  1045  0097                     	;# 
  1046  0098                     	;# 
  1047  0099                     	;# 
  1048  009A                     	;# 
  1049  009B                     	;# 
  1050  009B                     	;# 
  1051  009C                     	;# 
  1052  009D                     	;# 
  1053  009E                     	;# 
  1054  009F                     	;# 
  1055  010C                     	;# 
  1056  010D                     	;# 
  1057  010E                     	;# 
  1058  010F                     	;# 
  1059  0110                     	;# 
  1060  0111                     	;# 
  1061  0112                     	;# 
  1062  0113                     	;# 
  1063  0114                     	;# 
  1064  0115                     	;# 
  1065  0116                     	;# 
  1066  0117                     	;# 
  1067  0118                     	;# 
  1068  0119                     	;# 
  1069  011A                     	;# 
  1070  011B                     	;# 
  1071  011B                     	;# 
  1072  011C                     	;# 
  1073  018C                     	;# 
  1074  018D                     	;# 
  1075  018E                     	;# 
  1076  018F                     	;# 
  1077  0190                     	;# 
  1078  0191                     	;# 
  1079  0191                     	;# 
  1080  0192                     	;# 
  1081  0193                     	;# 
  1082  0193                     	;# 
  1083  0194                     	;# 
  1084  0195                     	;# 
  1085  0196                     	;# 
  1086  0197                     	;# 
  1087  0199                     	;# 
  1088  0199                     	;# 
  1089  0199                     	;# 
  1090  019A                     	;# 
  1091  019A                     	;# 
  1092  019A                     	;# 
  1093  019B                     	;# 
  1094  019B                     	;# 
  1095  019B                     	;# 
  1096  019B                     	;# 
  1097  019B                     	;# 
  1098  019C                     	;# 
  1099  019C                     	;# 
  1100  019C                     	;# 
  1101  019D                     	;# 
  1102  019D                     	;# 
  1103  019D                     	;# 
  1104  019E                     	;# 
  1105  019E                     	;# 
  1106  019E                     	;# 
  1107  019F                     	;# 
  1108  019F                     	;# 
  1109  019F                     	;# 
  1110  019F                     	;# 
  1111  019F                     	;# 
  1112  020C                     	;# 
  1113  020D                     	;# 
  1114  020E                     	;# 
  1115  020F                     	;# 
  1116  0210                     	;# 
  1117  0211                     	;# 
  1118  0211                     	;# 
  1119  0212                     	;# 
  1120  0212                     	;# 
  1121  0213                     	;# 
  1122  0213                     	;# 
  1123  0214                     	;# 
  1124  0214                     	;# 
  1125  0215                     	;# 
  1126  0215                     	;# 
  1127  0215                     	;# 
  1128  0215                     	;# 
  1129  0216                     	;# 
  1130  0216                     	;# 
  1131  0217                     	;# 
  1132  0217                     	;# 
  1133  028C                     	;# 
  1134  028D                     	;# 
  1135  028E                     	;# 
  1136  028F                     	;# 
  1137  0290                     	;# 
  1138  0291                     	;# 
  1139  0291                     	;# 
  1140  0292                     	;# 
  1141  0293                     	;# 
  1142  0293                     	;# 
  1143  0298                     	;# 
  1144  0298                     	;# 
  1145  0299                     	;# 
  1146  029A                     	;# 
  1147  029A                     	;# 
  1148  029E                     	;# 
  1149  030C                     	;# 
  1150  030D                     	;# 
  1151  030E                     	;# 
  1152  030F                     	;# 
  1153  0310                     	;# 
  1154  038C                     	;# 
  1155  038D                     	;# 
  1156  038E                     	;# 
  1157  038F                     	;# 
  1158  0390                     	;# 
  1159  0391                     	;# 
  1160  0392                     	;# 
  1161  0393                     	;# 
  1162  0394                     	;# 
  1163  0395                     	;# 
  1164  0396                     	;# 
  1165  0397                     	;# 
  1166  0398                     	;# 
  1167  0399                     	;# 
  1168  039D                     	;# 
  1169  039E                     	;# 
  1170  039F                     	;# 
  1171  0415                     	;# 
  1172  0416                     	;# 
  1173  0417                     	;# 
  1174  041C                     	;# 
  1175  041D                     	;# 
  1176  041E                     	;# 
  1177  0498                     	;# 
  1178  0498                     	;# 
  1179  0499                     	;# 
  1180  049A                     	;# 
  1181  049B                     	;# 
  1182  049B                     	;# 
  1183  049C                     	;# 
  1184  049D                     	;# 
  1185  049E                     	;# 
  1186  049F                     	;# 
  1187  0511                     	;# 
  1188  0515                     	;# 
  1189  0617                     	;# 
  1190  0618                     	;# 
  1191  0619                     	;# 
  1192  0619                     	;# 
  1193  061A                     	;# 
  1194  061B                     	;# 
  1195  061C                     	;# 
  1196  061C                     	;# 
  1197  0691                     	;# 
  1198  0692                     	;# 
  1199  0693                     	;# 
  1200  0694                     	;# 
  1201  0695                     	;# 
  1202  0696                     	;# 
  1203  0697                     	;# 
  1204  0698                     	;# 
  1205  0699                     	;# 
  1206  069A                     	;# 
  1207  069B                     	;# 
  1208  069C                     	;# 
  1209  069D                     	;# 
  1210  069E                     	;# 
  1211  069F                     	;# 
  1212  0E0F                     	;# 
  1213  0E10                     	;# 
  1214  0E11                     	;# 
  1215  0E12                     	;# 
  1216  0E13                     	;# 
  1217  0E14                     	;# 
  1218  0E15                     	;# 
  1219  0E17                     	;# 
  1220  0E20                     	;# 
  1221  0E21                     	;# 
  1222  0E22                     	;# 
  1223  0E24                     	;# 
  1224  0E25                     	;# 
  1225  0E28                     	;# 
  1226  0E29                     	;# 
  1227  0E2A                     	;# 
  1228  0E2B                     	;# 
  1229  0E90                     	;# 
  1230  0E91                     	;# 
  1231  0E92                     	;# 
  1232  0E93                     	;# 
  1233  0E94                     	;# 
  1234  0E95                     	;# 
  1235  0E96                     	;# 
  1236  0E97                     	;# 
  1237  0E98                     	;# 
  1238  0E99                     	;# 
  1239  0E9A                     	;# 
  1240  0E9B                     	;# 
  1241  0E9C                     	;# 
  1242  0E9D                     	;# 
  1243  0E9E                     	;# 
  1244  0E9F                     	;# 
  1245  0EA0                     	;# 
  1246  0EA1                     	;# 
  1247  0EA2                     	;# 
  1248  0EA3                     	;# 
  1249  0EA4                     	;# 
  1250  0EA5                     	;# 
  1251  0EA6                     	;# 
  1252  0EA7                     	;# 
  1253  0EA8                     	;# 
  1254  0EA9                     	;# 
  1255  0EAA                     	;# 
  1256  0EAB                     	;# 
  1257  0EAC                     	;# 
  1258  0EAD                     	;# 
  1259  0EAE                     	;# 
  1260  0EAF                     	;# 
  1261  0EB0                     	;# 
  1262  0EB1                     	;# 
  1263  0EB2                     	;# 
  1264  0F0F                     	;# 
  1265  0F10                     	;# 
  1266  0F11                     	;# 
  1267  0F12                     	;# 
  1268  0F13                     	;# 
  1269  0F14                     	;# 
  1270  0F15                     	;# 
  1271  0F16                     	;# 
  1272  0F17                     	;# 
  1273  0F18                     	;# 
  1274  0F19                     	;# 
  1275  0F1A                     	;# 
  1276  0F1B                     	;# 
  1277  0F1C                     	;# 
  1278  0F1D                     	;# 
  1279  0F1E                     	;# 
  1280  0F1F                     	;# 
  1281  0F20                     	;# 
  1282  0F21                     	;# 
  1283  0F22                     	;# 
  1284  0F23                     	;# 
  1285  0F24                     	;# 
  1286  0F25                     	;# 
  1287  0F26                     	;# 
  1288  0F27                     	;# 
  1289  0F28                     	;# 
  1290  0F29                     	;# 
  1291  0F2A                     	;# 
  1292  0F2B                     	;# 
  1293  0F2C                     	;# 
  1294  0F2D                     	;# 
  1295  0F2E                     	;# 
  1296  0F2F                     	;# 
  1297  0F30                     	;# 
  1298  0F31                     	;# 
  1299  0F32                     	;# 
  1300  0F33                     	;# 
  1301  0F34                     	;# 
  1302  0F35                     	;# 
  1303  0F36                     	;# 
  1304  0F37                     	;# 
  1305  0FE4                     	;# 
  1306  0FE5                     	;# 
  1307  0FE6                     	;# 
  1308  0FE7                     	;# 
  1309  0FE8                     	;# 
  1310  0FE9                     	;# 
  1311  0FEA                     	;# 
  1312  0FEB                     	;# 
  1313  0FED                     	;# 
  1314  0FEE                     	;# 
  1315  0FEF                     	;# 
  1316  0000                     	;# 
  1317  0001                     	;# 
  1318  0002                     	;# 
  1319  0003                     	;# 
  1320  0004                     	;# 
  1321  0005                     	;# 
  1322  0006                     	;# 
  1323  0007                     	;# 
  1324  0008                     	;# 
  1325  0009                     	;# 
  1326  000A                     	;# 
  1327  000B                     	;# 
  1328  000C                     	;# 
  1329  000D                     	;# 
  1330  000E                     	;# 
  1331  000F                     	;# 
  1332  0010                     	;# 
  1333  0011                     	;# 
  1334  0012                     	;# 
  1335  0013                     	;# 
  1336  0015                     	;# 
  1337  0016                     	;# 
  1338  0016                     	;# 
  1339  0017                     	;# 
  1340  0018                     	;# 
  1341  0019                     	;# 
  1342  001A                     	;# 
  1343  001B                     	;# 
  1344  001C                     	;# 
  1345  008C                     	;# 
  1346  008D                     	;# 
  1347  008E                     	;# 
  1348  008F                     	;# 
  1349  0090                     	;# 
  1350  0091                     	;# 
  1351  0092                     	;# 
  1352  0093                     	;# 
  1353  0095                     	;# 
  1354  0096                     	;# 
  1355  0097                     	;# 
  1356  0098                     	;# 
  1357  0099                     	;# 
  1358  009A                     	;# 
  1359  009B                     	;# 
  1360  009B                     	;# 
  1361  009C                     	;# 
  1362  009D                     	;# 
  1363  009E                     	;# 
  1364  009F                     	;# 
  1365  010C                     	;# 
  1366  010D                     	;# 
  1367  010E                     	;# 
  1368  010F                     	;# 
  1369  0110                     	;# 
  1370  0111                     	;# 
  1371  0112                     	;# 
  1372  0113                     	;# 
  1373  0114                     	;# 
  1374  0115                     	;# 
  1375  0116                     	;# 
  1376  0117                     	;# 
  1377  0118                     	;# 
  1378  0119                     	;# 
  1379  011A                     	;# 
  1380  011B                     	;# 
  1381  011B                     	;# 
  1382  011C                     	;# 
  1383  018C                     	;# 
  1384  018D                     	;# 
  1385  018E                     	;# 
  1386  018F                     	;# 
  1387  0190                     	;# 
  1388  0191                     	;# 
  1389  0191                     	;# 
  1390  0192                     	;# 
  1391  0193                     	;# 
  1392  0193                     	;# 
  1393  0194                     	;# 
  1394  0195                     	;# 
  1395  0196                     	;# 
  1396  0197                     	;# 
  1397  0199                     	;# 
  1398  0199                     	;# 
  1399  0199                     	;# 
  1400  019A                     	;# 
  1401  019A                     	;# 
  1402  019A                     	;# 
  1403  019B                     	;# 
  1404  019B                     	;# 
  1405  019B                     	;# 
  1406  019B                     	;# 
  1407  019B                     	;# 
  1408  019C                     	;# 
  1409  019C                     	;# 
  1410  019C                     	;# 
  1411  019D                     	;# 
  1412  019D                     	;# 
  1413  019D                     	;# 
  1414  019E                     	;# 
  1415  019E                     	;# 
  1416  019E                     	;# 
  1417  019F                     	;# 
  1418  019F                     	;# 
  1419  019F                     	;# 
  1420  019F                     	;# 
  1421  019F                     	;# 
  1422  020C                     	;# 
  1423  020D                     	;# 
  1424  020E                     	;# 
  1425  020F                     	;# 
  1426  0210                     	;# 
  1427  0211                     	;# 
  1428  0211                     	;# 
  1429  0212                     	;# 
  1430  0212                     	;# 
  1431  0213                     	;# 
  1432  0213                     	;# 
  1433  0214                     	;# 
  1434  0214                     	;# 
  1435  0215                     	;# 
  1436  0215                     	;# 
  1437  0215                     	;# 
  1438  0215                     	;# 
  1439  0216                     	;# 
  1440  0216                     	;# 
  1441  0217                     	;# 
  1442  0217                     	;# 
  1443  028C                     	;# 
  1444  028D                     	;# 
  1445  028E                     	;# 
  1446  028F                     	;# 
  1447  0290                     	;# 
  1448  0291                     	;# 
  1449  0291                     	;# 
  1450  0292                     	;# 
  1451  0293                     	;# 
  1452  0293                     	;# 
  1453  0298                     	;# 
  1454  0298                     	;# 
  1455  0299                     	;# 
  1456  029A                     	;# 
  1457  029A                     	;# 
  1458  029E                     	;# 
  1459  030C                     	;# 
  1460  030D                     	;# 
  1461  030E                     	;# 
  1462  030F                     	;# 
  1463  0310                     	;# 
  1464  038C                     	;# 
  1465  038D                     	;# 
  1466  038E                     	;# 
  1467  038F                     	;# 
  1468  0390                     	;# 
  1469  0391                     	;# 
  1470  0392                     	;# 
  1471  0393                     	;# 
  1472  0394                     	;# 
  1473  0395                     	;# 
  1474  0396                     	;# 
  1475  0397                     	;# 
  1476  0398                     	;# 
  1477  0399                     	;# 
  1478  039D                     	;# 
  1479  039E                     	;# 
  1480  039F                     	;# 
  1481  0415                     	;# 
  1482  0416                     	;# 
  1483  0417                     	;# 
  1484  041C                     	;# 
  1485  041D                     	;# 
  1486  041E                     	;# 
  1487  0498                     	;# 
  1488  0498                     	;# 
  1489  0499                     	;# 
  1490  049A                     	;# 
  1491  049B                     	;# 
  1492  049B                     	;# 
  1493  049C                     	;# 
  1494  049D                     	;# 
  1495  049E                     	;# 
  1496  049F                     	;# 
  1497  0511                     	;# 
  1498  0515                     	;# 
  1499  0617                     	;# 
  1500  0618                     	;# 
  1501  0619                     	;# 
  1502  0619                     	;# 
  1503  061A                     	;# 
  1504  061B                     	;# 
  1505  061C                     	;# 
  1506  061C                     	;# 
  1507  0691                     	;# 
  1508  0692                     	;# 
  1509  0693                     	;# 
  1510  0694                     	;# 
  1511  0695                     	;# 
  1512  0696                     	;# 
  1513  0697                     	;# 
  1514  0698                     	;# 
  1515  0699                     	;# 
  1516  069A                     	;# 
  1517  069B                     	;# 
  1518  069C                     	;# 
  1519  069D                     	;# 
  1520  069E                     	;# 
  1521  069F                     	;# 
  1522  0E0F                     	;# 
  1523  0E10                     	;# 
  1524  0E11                     	;# 
  1525  0E12                     	;# 
  1526  0E13                     	;# 
  1527  0E14                     	;# 
  1528  0E15                     	;# 
  1529  0E17                     	;# 
  1530  0E20                     	;# 
  1531  0E21                     	;# 
  1532  0E22                     	;# 
  1533  0E24                     	;# 
  1534  0E25                     	;# 
  1535  0E28                     	;# 
  1536  0E29                     	;# 
  1537  0E2A                     	;# 
  1538  0E2B                     	;# 
  1539  0E90                     	;# 
  1540  0E91                     	;# 
  1541  0E92                     	;# 
  1542  0E93                     	;# 
  1543  0E94                     	;# 
  1544  0E95                     	;# 
  1545  0E96                     	;# 
  1546  0E97                     	;# 
  1547  0E98                     	;# 
  1548  0E99                     	;# 
  1549  0E9A                     	;# 
  1550  0E9B                     	;# 
  1551  0E9C                     	;# 
  1552  0E9D                     	;# 
  1553  0E9E                     	;# 
  1554  0E9F                     	;# 
  1555  0EA0                     	;# 
  1556  0EA1                     	;# 
  1557  0EA2                     	;# 
  1558  0EA3                     	;# 
  1559  0EA4                     	;# 
  1560  0EA5                     	;# 
  1561  0EA6                     	;# 
  1562  0EA7                     	;# 
  1563  0EA8                     	;# 
  1564  0EA9                     	;# 
  1565  0EAA                     	;# 
  1566  0EAB                     	;# 
  1567  0EAC                     	;# 
  1568  0EAD                     	;# 
  1569  0EAE                     	;# 
  1570  0EAF                     	;# 
  1571  0EB0                     	;# 
  1572  0EB1                     	;# 
  1573  0EB2                     	;# 
  1574  0F0F                     	;# 
  1575  0F10                     	;# 
  1576  0F11                     	;# 
  1577  0F12                     	;# 
  1578  0F13                     	;# 
  1579  0F14                     	;# 
  1580  0F15                     	;# 
  1581  0F16                     	;# 
  1582  0F17                     	;# 
  1583  0F18                     	;# 
  1584  0F19                     	;# 
  1585  0F1A                     	;# 
  1586  0F1B                     	;# 
  1587  0F1C                     	;# 
  1588  0F1D                     	;# 
  1589  0F1E                     	;# 
  1590  0F1F                     	;# 
  1591  0F20                     	;# 
  1592  0F21                     	;# 
  1593  0F22                     	;# 
  1594  0F23                     	;# 
  1595  0F24                     	;# 
  1596  0F25                     	;# 
  1597  0F26                     	;# 
  1598  0F27                     	;# 
  1599  0F28                     	;# 
  1600  0F29                     	;# 
  1601  0F2A                     	;# 
  1602  0F2B                     	;# 
  1603  0F2C                     	;# 
  1604  0F2D                     	;# 
  1605  0F2E                     	;# 
  1606  0F2F                     	;# 
  1607  0F30                     	;# 
  1608  0F31                     	;# 
  1609  0F32                     	;# 
  1610  0F33                     	;# 
  1611  0F34                     	;# 
  1612  0F35                     	;# 
  1613  0F36                     	;# 
  1614  0F37                     	;# 
  1615  0FE4                     	;# 
  1616  0FE5                     	;# 
  1617  0FE6                     	;# 
  1618  0FE7                     	;# 
  1619  0FE8                     	;# 
  1620  0FE9                     	;# 
  1621  0FEA                     	;# 
  1622  0FEB                     	;# 
  1623  0FED                     	;# 
  1624  0FEE                     	;# 
  1625  0FEF                     	;# 
  1626  0000                     	;# 
  1627  0001                     	;# 
  1628  0002                     	;# 
  1629  0003                     	;# 
  1630  0004                     	;# 
  1631  0005                     	;# 
  1632  0006                     	;# 
  1633  0007                     	;# 
  1634  0008                     	;# 
  1635  0009                     	;# 
  1636  000A                     	;# 
  1637  000B                     	;# 
  1638  000C                     	;# 
  1639  000D                     	;# 
  1640  000E                     	;# 
  1641  000F                     	;# 
  1642  0010                     	;# 
  1643  0011                     	;# 
  1644  0012                     	;# 
  1645  0013                     	;# 
  1646  0015                     	;# 
  1647  0016                     	;# 
  1648  0016                     	;# 
  1649  0017                     	;# 
  1650  0018                     	;# 
  1651  0019                     	;# 
  1652  001A                     	;# 
  1653  001B                     	;# 
  1654  001C                     	;# 
  1655  008C                     	;# 
  1656  008D                     	;# 
  1657  008E                     	;# 
  1658  008F                     	;# 
  1659  0090                     	;# 
  1660  0091                     	;# 
  1661  0092                     	;# 
  1662  0093                     	;# 
  1663  0095                     	;# 
  1664  0096                     	;# 
  1665  0097                     	;# 
  1666  0098                     	;# 
  1667  0099                     	;# 
  1668  009A                     	;# 
  1669  009B                     	;# 
  1670  009B                     	;# 
  1671  009C                     	;# 
  1672  009D                     	;# 
  1673  009E                     	;# 
  1674  009F                     	;# 
  1675  010C                     	;# 
  1676  010D                     	;# 
  1677  010E                     	;# 
  1678  010F                     	;# 
  1679  0110                     	;# 
  1680  0111                     	;# 
  1681  0112                     	;# 
  1682  0113                     	;# 
  1683  0114                     	;# 
  1684  0115                     	;# 
  1685  0116                     	;# 
  1686  0117                     	;# 
  1687  0118                     	;# 
  1688  0119                     	;# 
  1689  011A                     	;# 
  1690  011B                     	;# 
  1691  011B                     	;# 
  1692  011C                     	;# 
  1693  018C                     	;# 
  1694  018D                     	;# 
  1695  018E                     	;# 
  1696  018F                     	;# 
  1697  0190                     	;# 
  1698  0191                     	;# 
  1699  0191                     	;# 
  1700  0192                     	;# 
  1701  0193                     	;# 
  1702  0193                     	;# 
  1703  0194                     	;# 
  1704  0195                     	;# 
  1705  0196                     	;# 
  1706  0197                     	;# 
  1707  0199                     	;# 
  1708  0199                     	;# 
  1709  0199                     	;# 
  1710  019A                     	;# 
  1711  019A                     	;# 
  1712  019A                     	;# 
  1713  019B                     	;# 
  1714  019B                     	;# 
  1715  019B                     	;# 
  1716  019B                     	;# 
  1717  019B                     	;# 
  1718  019C                     	;# 
  1719  019C                     	;# 
  1720  019C                     	;# 
  1721  019D                     	;# 
  1722  019D                     	;# 
  1723  019D                     	;# 
  1724  019E                     	;# 
  1725  019E                     	;# 
  1726  019E                     	;# 
  1727  019F                     	;# 
  1728  019F                     	;# 
  1729  019F                     	;# 
  1730  019F                     	;# 
  1731  019F                     	;# 
  1732  020C                     	;# 
  1733  020D                     	;# 
  1734  020E                     	;# 
  1735  020F                     	;# 
  1736  0210                     	;# 
  1737  0211                     	;# 
  1738  0211                     	;# 
  1739  0212                     	;# 
  1740  0212                     	;# 
  1741  0213                     	;# 
  1742  0213                     	;# 
  1743  0214                     	;# 
  1744  0214                     	;# 
  1745  0215                     	;# 
  1746  0215                     	;# 
  1747  0215                     	;# 
  1748  0215                     	;# 
  1749  0216                     	;# 
  1750  0216                     	;# 
  1751  0217                     	;# 
  1752  0217                     	;# 
  1753  028C                     	;# 
  1754  028D                     	;# 
  1755  028E                     	;# 
  1756  028F                     	;# 
  1757  0290                     	;# 
  1758  0291                     	;# 
  1759  0291                     	;# 
  1760  0292                     	;# 
  1761  0293                     	;# 
  1762  0293                     	;# 
  1763  0298                     	;# 
  1764  0298                     	;# 
  1765  0299                     	;# 
  1766  029A                     	;# 
  1767  029A                     	;# 
  1768  029E                     	;# 
  1769  030C                     	;# 
  1770  030D                     	;# 
  1771  030E                     	;# 
  1772  030F                     	;# 
  1773  0310                     	;# 
  1774  038C                     	;# 
  1775  038D                     	;# 
  1776  038E                     	;# 
  1777  038F                     	;# 
  1778  0390                     	;# 
  1779  0391                     	;# 
  1780  0392                     	;# 
  1781  0393                     	;# 
  1782  0394                     	;# 
  1783  0395                     	;# 
  1784  0396                     	;# 
  1785  0397                     	;# 
  1786  0398                     	;# 
  1787  0399                     	;# 
  1788  039D                     	;# 
  1789  039E                     	;# 
  1790  039F                     	;# 
  1791  0415                     	;# 
  1792  0416                     	;# 
  1793  0417                     	;# 
  1794  041C                     	;# 
  1795  041D                     	;# 
  1796  041E                     	;# 
  1797  0498                     	;# 
  1798  0498                     	;# 
  1799  0499                     	;# 
  1800  049A                     	;# 
  1801  049B                     	;# 
  1802  049B                     	;# 
  1803  049C                     	;# 
  1804  049D                     	;# 
  1805  049E                     	;# 
  1806  049F                     	;# 
  1807  0511                     	;# 
  1808  0515                     	;# 
  1809  0617                     	;# 
  1810  0618                     	;# 
  1811  0619                     	;# 
  1812  0619                     	;# 
  1813  061A                     	;# 
  1814  061B                     	;# 
  1815  061C                     	;# 
  1816  061C                     	;# 
  1817  0691                     	;# 
  1818  0692                     	;# 
  1819  0693                     	;# 
  1820  0694                     	;# 
  1821  0695                     	;# 
  1822  0696                     	;# 
  1823  0697                     	;# 
  1824  0698                     	;# 
  1825  0699                     	;# 
  1826  069A                     	;# 
  1827  069B                     	;# 
  1828  069C                     	;# 
  1829  069D                     	;# 
  1830  069E                     	;# 
  1831  069F                     	;# 
  1832  0E0F                     	;# 
  1833  0E10                     	;# 
  1834  0E11                     	;# 
  1835  0E12                     	;# 
  1836  0E13                     	;# 
  1837  0E14                     	;# 
  1838  0E15                     	;# 
  1839  0E17                     	;# 
  1840  0E20                     	;# 
  1841  0E21                     	;# 
  1842  0E22                     	;# 
  1843  0E24                     	;# 
  1844  0E25                     	;# 
  1845  0E28                     	;# 
  1846  0E29                     	;# 
  1847  0E2A                     	;# 
  1848  0E2B                     	;# 
  1849  0E90                     	;# 
  1850  0E91                     	;# 
  1851  0E92                     	;# 
  1852  0E93                     	;# 
  1853  0E94                     	;# 
  1854  0E95                     	;# 
  1855  0E96                     	;# 
  1856  0E97                     	;# 
  1857  0E98                     	;# 
  1858  0E99                     	;# 
  1859  0E9A                     	;# 
  1860  0E9B                     	;# 
  1861  0E9C                     	;# 
  1862  0E9D                     	;# 
  1863  0E9E                     	;# 
  1864  0E9F                     	;# 
  1865  0EA0                     	;# 
  1866  0EA1                     	;# 
  1867  0EA2                     	;# 
  1868  0EA3                     	;# 
  1869  0EA4                     	;# 
  1870  0EA5                     	;# 
  1871  0EA6                     	;# 
  1872  0EA7                     	;# 
  1873  0EA8                     	;# 
  1874  0EA9                     	;# 
  1875  0EAA                     	;# 
  1876  0EAB                     	;# 
  1877  0EAC                     	;# 
  1878  0EAD                     	;# 
  1879  0EAE                     	;# 
  1880  0EAF                     	;# 
  1881  0EB0                     	;# 
  1882  0EB1                     	;# 
  1883  0EB2                     	;# 
  1884  0F0F                     	;# 
  1885  0F10                     	;# 
  1886  0F11                     	;# 
  1887  0F12                     	;# 
  1888  0F13                     	;# 
  1889  0F14                     	;# 
  1890  0F15                     	;# 
  1891  0F16                     	;# 
  1892  0F17                     	;# 
  1893  0F18                     	;# 
  1894  0F19                     	;# 
  1895  0F1A                     	;# 
  1896  0F1B                     	;# 
  1897  0F1C                     	;# 
  1898  0F1D                     	;# 
  1899  0F1E                     	;# 
  1900  0F1F                     	;# 
  1901  0F20                     	;# 
  1902  0F21                     	;# 
  1903  0F22                     	;# 
  1904  0F23                     	;# 
  1905  0F24                     	;# 
  1906  0F25                     	;# 
  1907  0F26                     	;# 
  1908  0F27                     	;# 
  1909  0F28                     	;# 
  1910  0F29                     	;# 
  1911  0F2A                     	;# 
  1912  0F2B                     	;# 
  1913  0F2C                     	;# 
  1914  0F2D                     	;# 
  1915  0F2E                     	;# 
  1916  0F2F                     	;# 
  1917  0F30                     	;# 
  1918  0F31                     	;# 
  1919  0F32                     	;# 
  1920  0F33                     	;# 
  1921  0F34                     	;# 
  1922  0F35                     	;# 
  1923  0F36                     	;# 
  1924  0F37                     	;# 
  1925  0FE4                     	;# 
  1926  0FE5                     	;# 
  1927  0FE6                     	;# 
  1928  0FE7                     	;# 
  1929  0FE8                     	;# 
  1930  0FE9                     	;# 
  1931  0FEA                     	;# 
  1932  0FEB                     	;# 
  1933  0FED                     	;# 
  1934  0FEE                     	;# 
  1935  0FEF                     	;# 
  1936  0000                     	;# 
  1937  0001                     	;# 
  1938  0002                     	;# 
  1939  0003                     	;# 
  1940  0004                     	;# 
  1941  0005                     	;# 
  1942  0006                     	;# 
  1943  0007                     	;# 
  1944  0008                     	;# 
  1945  0009                     	;# 
  1946  000A                     	;# 
  1947  000B                     	;# 
  1948  000C                     	;# 
  1949  000D                     	;# 
  1950  000E                     	;# 
  1951  000F                     	;# 
  1952  0010                     	;# 
  1953  0011                     	;# 
  1954  0012                     	;# 
  1955  0013                     	;# 
  1956  0015                     	;# 
  1957  0016                     	;# 
  1958  0016                     	;# 
  1959  0017                     	;# 
  1960  0018                     	;# 
  1961  0019                     	;# 
  1962  001A                     	;# 
  1963  001B                     	;# 
  1964  001C                     	;# 
  1965  008C                     	;# 
  1966  008D                     	;# 
  1967  008E                     	;# 
  1968  008F                     	;# 
  1969  0090                     	;# 
  1970  0091                     	;# 
  1971  0092                     	;# 
  1972  0093                     	;# 
  1973  0095                     	;# 
  1974  0096                     	;# 
  1975  0097                     	;# 
  1976  0098                     	;# 
  1977  0099                     	;# 
  1978  009A                     	;# 
  1979  009B                     	;# 
  1980  009B                     	;# 
  1981  009C                     	;# 
  1982  009D                     	;# 
  1983  009E                     	;# 
  1984  009F                     	;# 
  1985  010C                     	;# 
  1986  010D                     	;# 
  1987  010E                     	;# 
  1988  010F                     	;# 
  1989  0110                     	;# 
  1990  0111                     	;# 
  1991  0112                     	;# 
  1992  0113                     	;# 
  1993  0114                     	;# 
  1994  0115                     	;# 
  1995  0116                     	;# 
  1996  0117                     	;# 
  1997  0118                     	;# 
  1998  0119                     	;# 
  1999  011A                     	;# 
  2000  011B                     	;# 
  2001  011B                     	;# 
  2002  011C                     	;# 
  2003  018C                     	;# 
  2004  018D                     	;# 
  2005  018E                     	;# 
  2006  018F                     	;# 
  2007  0190                     	;# 
  2008  0191                     	;# 
  2009  0191                     	;# 
  2010  0192                     	;# 
  2011  0193                     	;# 
  2012  0193                     	;# 
  2013  0194                     	;# 
  2014  0195                     	;# 
  2015  0196                     	;# 
  2016  0197                     	;# 
  2017  0199                     	;# 
  2018  0199                     	;# 
  2019  0199                     	;# 
  2020  019A                     	;# 
  2021  019A                     	;# 
  2022  019A                     	;# 
  2023  019B                     	;# 
  2024  019B                     	;# 
  2025  019B                     	;# 
  2026  019B                     	;# 
  2027  019B                     	;# 
  2028  019C                     	;# 
  2029  019C                     	;# 
  2030  019C                     	;# 
  2031  019D                     	;# 
  2032  019D                     	;# 
  2033  019D                     	;# 
  2034  019E                     	;# 
  2035  019E                     	;# 
  2036  019E                     	;# 
  2037  019F                     	;# 
  2038  019F                     	;# 
  2039  019F                     	;# 
  2040  019F                     	;# 
  2041  019F                     	;# 
  2042  020C                     	;# 
  2043  020D                     	;# 
  2044  020E                     	;# 
  2045  020F                     	;# 
  2046  0210                     	;# 
  2047  0211                     	;# 
  2048  0211                     	;# 
  2049  0212                     	;# 
  2050  0212                     	;# 
  2051  0213                     	;# 
  2052  0213                     	;# 
  2053  0214                     	;# 
  2054  0214                     	;# 
  2055  0215                     	;# 
  2056  0215                     	;# 
  2057  0215                     	;# 
  2058  0215                     	;# 
  2059  0216                     	;# 
  2060  0216                     	;# 
  2061  0217                     	;# 
  2062  0217                     	;# 
  2063  028C                     	;# 
  2064  028D                     	;# 
  2065  028E                     	;# 
  2066  028F                     	;# 
  2067  0290                     	;# 
  2068  0291                     	;# 
  2069  0291                     	;# 
  2070  0292                     	;# 
  2071  0293                     	;# 
  2072  0293                     	;# 
  2073  0298                     	;# 
  2074  0298                     	;# 
  2075  0299                     	;# 
  2076  029A                     	;# 
  2077  029A                     	;# 
  2078  029E                     	;# 
  2079  030C                     	;# 
  2080  030D                     	;# 
  2081  030E                     	;# 
  2082  030F                     	;# 
  2083  0310                     	;# 
  2084  038C                     	;# 
  2085  038D                     	;# 
  2086  038E                     	;# 
  2087  038F                     	;# 
  2088  0390                     	;# 
  2089  0391                     	;# 
  2090  0392                     	;# 
  2091  0393                     	;# 
  2092  0394                     	;# 
  2093  0395                     	;# 
  2094  0396                     	;# 
  2095  0397                     	;# 
  2096  0398                     	;# 
  2097  0399                     	;# 
  2098  039D                     	;# 
  2099  039E                     	;# 
  2100  039F                     	;# 
  2101  0415                     	;# 
  2102  0416                     	;# 
  2103  0417                     	;# 
  2104  041C                     	;# 
  2105  041D                     	;# 
  2106  041E                     	;# 
  2107  0498                     	;# 
  2108  0498                     	;# 
  2109  0499                     	;# 
  2110  049A                     	;# 
  2111  049B                     	;# 
  2112  049B                     	;# 
  2113  049C                     	;# 
  2114  049D                     	;# 
  2115  049E                     	;# 
  2116  049F                     	;# 
  2117  0511                     	;# 
  2118  0515                     	;# 
  2119  0617                     	;# 
  2120  0618                     	;# 
  2121  0619                     	;# 
  2122  0619                     	;# 
  2123  061A                     	;# 
  2124  061B                     	;# 
  2125  061C                     	;# 
  2126  061C                     	;# 
  2127  0691                     	;# 
  2128  0692                     	;# 
  2129  0693                     	;# 
  2130  0694                     	;# 
  2131  0695                     	;# 
  2132  0696                     	;# 
  2133  0697                     	;# 
  2134  0698                     	;# 
  2135  0699                     	;# 
  2136  069A                     	;# 
  2137  069B                     	;# 
  2138  069C                     	;# 
  2139  069D                     	;# 
  2140  069E                     	;# 
  2141  069F                     	;# 
  2142  0E0F                     	;# 
  2143  0E10                     	;# 
  2144  0E11                     	;# 
  2145  0E12                     	;# 
  2146  0E13                     	;# 
  2147  0E14                     	;# 
  2148  0E15                     	;# 
  2149  0E17                     	;# 
  2150  0E20                     	;# 
  2151  0E21                     	;# 
  2152  0E22                     	;# 
  2153  0E24                     	;# 
  2154  0E25                     	;# 
  2155  0E28                     	;# 
  2156  0E29                     	;# 
  2157  0E2A                     	;# 
  2158  0E2B                     	;# 
  2159  0E90                     	;# 
  2160  0E91                     	;# 
  2161  0E92                     	;# 
  2162  0E93                     	;# 
  2163  0E94                     	;# 
  2164  0E95                     	;# 
  2165  0E96                     	;# 
  2166  0E97                     	;# 
  2167  0E98                     	;# 
  2168  0E99                     	;# 
  2169  0E9A                     	;# 
  2170  0E9B                     	;# 
  2171  0E9C                     	;# 
  2172  0E9D                     	;# 
  2173  0E9E                     	;# 
  2174  0E9F                     	;# 
  2175  0EA0                     	;# 
  2176  0EA1                     	;# 
  2177  0EA2                     	;# 
  2178  0EA3                     	;# 
  2179  0EA4                     	;# 
  2180  0EA5                     	;# 
  2181  0EA6                     	;# 
  2182  0EA7                     	;# 
  2183  0EA8                     	;# 
  2184  0EA9                     	;# 
  2185  0EAA                     	;# 
  2186  0EAB                     	;# 
  2187  0EAC                     	;# 
  2188  0EAD                     	;# 
  2189  0EAE                     	;# 
  2190  0EAF                     	;# 
  2191  0EB0                     	;# 
  2192  0EB1                     	;# 
  2193  0EB2                     	;# 
  2194  0F0F                     	;# 
  2195  0F10                     	;# 
  2196  0F11                     	;# 
  2197  0F12                     	;# 
  2198  0F13                     	;# 
  2199  0F14                     	;# 
  2200  0F15                     	;# 
  2201  0F16                     	;# 
  2202  0F17                     	;# 
  2203  0F18                     	;# 
  2204  0F19                     	;# 
  2205  0F1A                     	;# 
  2206  0F1B                     	;# 
  2207  0F1C                     	;# 
  2208  0F1D                     	;# 
  2209  0F1E                     	;# 
  2210  0F1F                     	;# 
  2211  0F20                     	;# 
  2212  0F21                     	;# 
  2213  0F22                     	;# 
  2214  0F23                     	;# 
  2215  0F24                     	;# 
  2216  0F25                     	;# 
  2217  0F26                     	;# 
  2218  0F27                     	;# 
  2219  0F28                     	;# 
  2220  0F29                     	;# 
  2221  0F2A                     	;# 
  2222  0F2B                     	;# 
  2223  0F2C                     	;# 
  2224  0F2D                     	;# 
  2225  0F2E                     	;# 
  2226  0F2F                     	;# 
  2227  0F30                     	;# 
  2228  0F31                     	;# 
  2229  0F32                     	;# 
  2230  0F33                     	;# 
  2231  0F34                     	;# 
  2232  0F35                     	;# 
  2233  0F36                     	;# 
  2234  0F37                     	;# 
  2235  0FE4                     	;# 
  2236  0FE5                     	;# 
  2237  0FE6                     	;# 
  2238  0FE7                     	;# 
  2239  0FE8                     	;# 
  2240  0FE9                     	;# 
  2241  0FEA                     	;# 
  2242  0FEB                     	;# 
  2243  0FED                     	;# 
  2244  0FEE                     	;# 
  2245  0FEF                     	;# 
  2246  0000                     	;# 
  2247  0001                     	;# 
  2248  0002                     	;# 
  2249  0003                     	;# 
  2250  0004                     	;# 
  2251  0005                     	;# 
  2252  0006                     	;# 
  2253  0007                     	;# 
  2254  0008                     	;# 
  2255  0009                     	;# 
  2256  000A                     	;# 
  2257  000B                     	;# 
  2258  000C                     	;# 
  2259  000D                     	;# 
  2260  000E                     	;# 
  2261  000F                     	;# 
  2262  0010                     	;# 
  2263  0011                     	;# 
  2264  0012                     	;# 
  2265  0013                     	;# 
  2266  0015                     	;# 
  2267  0016                     	;# 
  2268  0016                     	;# 
  2269  0017                     	;# 
  2270  0018                     	;# 
  2271  0019                     	;# 
  2272  001A                     	;# 
  2273  001B                     	;# 
  2274  001C                     	;# 
  2275  008C                     	;# 
  2276  008D                     	;# 
  2277  008E                     	;# 
  2278  008F                     	;# 
  2279  0090                     	;# 
  2280  0091                     	;# 
  2281  0092                     	;# 
  2282  0093                     	;# 
  2283  0095                     	;# 
  2284  0096                     	;# 
  2285  0097                     	;# 
  2286  0098                     	;# 
  2287  0099                     	;# 
  2288  009A                     	;# 
  2289  009B                     	;# 
  2290  009B                     	;# 
  2291  009C                     	;# 
  2292  009D                     	;# 
  2293  009E                     	;# 
  2294  009F                     	;# 
  2295  010C                     	;# 
  2296  010D                     	;# 
  2297  010E                     	;# 
  2298  010F                     	;# 
  2299  0110                     	;# 
  2300  0111                     	;# 
  2301  0112                     	;# 
  2302  0113                     	;# 
  2303  0114                     	;# 
  2304  0115                     	;# 
  2305  0116                     	;# 
  2306  0117                     	;# 
  2307  0118                     	;# 
  2308  0119                     	;# 
  2309  011A                     	;# 
  2310  011B                     	;# 
  2311  011B                     	;# 
  2312  011C                     	;# 
  2313  018C                     	;# 
  2314  018D                     	;# 
  2315  018E                     	;# 
  2316  018F                     	;# 
  2317  0190                     	;# 
  2318  0191                     	;# 
  2319  0191                     	;# 
  2320  0192                     	;# 
  2321  0193                     	;# 
  2322  0193                     	;# 
  2323  0194                     	;# 
  2324  0195                     	;# 
  2325  0196                     	;# 
  2326  0197                     	;# 
  2327  0199                     	;# 
  2328  0199                     	;# 
  2329  0199                     	;# 
  2330  019A                     	;# 
  2331  019A                     	;# 
  2332  019A                     	;# 
  2333  019B                     	;# 
  2334  019B                     	;# 
  2335  019B                     	;# 
  2336  019B                     	;# 
  2337  019B                     	;# 
  2338  019C                     	;# 
  2339  019C                     	;# 
  2340  019C                     	;# 
  2341  019D                     	;# 
  2342  019D                     	;# 
  2343  019D                     	;# 
  2344  019E                     	;# 
  2345  019E                     	;# 
  2346  019E                     	;# 
  2347  019F                     	;# 
  2348  019F                     	;# 
  2349  019F                     	;# 
  2350  019F                     	;# 
  2351  019F                     	;# 
  2352  020C                     	;# 
  2353  020D                     	;# 
  2354  020E                     	;# 
  2355  020F                     	;# 
  2356  0210                     	;# 
  2357  0211                     	;# 
  2358  0211                     	;# 
  2359  0212                     	;# 
  2360  0212                     	;# 
  2361  0213                     	;# 
  2362  0213                     	;# 
  2363  0214                     	;# 
  2364  0214                     	;# 
  2365  0215                     	;# 
  2366  0215                     	;# 
  2367  0215                     	;# 
  2368  0215                     	;# 
  2369  0216                     	;# 
  2370  0216                     	;# 
  2371  0217                     	;# 
  2372  0217                     	;# 
  2373  028C                     	;# 
  2374  028D                     	;# 
  2375  028E                     	;# 
  2376  028F                     	;# 
  2377  0290                     	;# 
  2378  0291                     	;# 
  2379  0291                     	;# 
  2380  0292                     	;# 
  2381  0293                     	;# 
  2382  0293                     	;# 
  2383  0298                     	;# 
  2384  0298                     	;# 
  2385  0299                     	;# 
  2386  029A                     	;# 
  2387  029A                     	;# 
  2388  029E                     	;# 
  2389  030C                     	;# 
  2390  030D                     	;# 
  2391  030E                     	;# 
  2392  030F                     	;# 
  2393  0310                     	;# 
  2394  038C                     	;# 
  2395  038D                     	;# 
  2396  038E                     	;# 
  2397  038F                     	;# 
  2398  0390                     	;# 
  2399  0391                     	;# 
  2400  0392                     	;# 
  2401  0393                     	;# 
  2402  0394                     	;# 
  2403  0395                     	;# 
  2404  0396                     	;# 
  2405  0397                     	;# 
  2406  0398                     	;# 
  2407  0399                     	;# 
  2408  039D                     	;# 
  2409  039E                     	;# 
  2410  039F                     	;# 
  2411  0415                     	;# 
  2412  0416                     	;# 
  2413  0417                     	;# 
  2414  041C                     	;# 
  2415  041D                     	;# 
  2416  041E                     	;# 
  2417  0498                     	;# 
  2418  0498                     	;# 
  2419  0499                     	;# 
  2420  049A                     	;# 
  2421  049B                     	;# 
  2422  049B                     	;# 
  2423  049C                     	;# 
  2424  049D                     	;# 
  2425  049E                     	;# 
  2426  049F                     	;# 
  2427  0511                     	;# 
  2428  0515                     	;# 
  2429  0617                     	;# 
  2430  0618                     	;# 
  2431  0619                     	;# 
  2432  0619                     	;# 
  2433  061A                     	;# 
  2434  061B                     	;# 
  2435  061C                     	;# 
  2436  061C                     	;# 
  2437  0691                     	;# 
  2438  0692                     	;# 
  2439  0693                     	;# 
  2440  0694                     	;# 
  2441  0695                     	;# 
  2442  0696                     	;# 
  2443  0697                     	;# 
  2444  0698                     	;# 
  2445  0699                     	;# 
  2446  069A                     	;# 
  2447  069B                     	;# 
  2448  069C                     	;# 
  2449  069D                     	;# 
  2450  069E                     	;# 
  2451  069F                     	;# 
  2452  0E0F                     	;# 
  2453  0E10                     	;# 
  2454  0E11                     	;# 
  2455  0E12                     	;# 
  2456  0E13                     	;# 
  2457  0E14                     	;# 
  2458  0E15                     	;# 
  2459  0E17                     	;# 
  2460  0E20                     	;# 
  2461  0E21                     	;# 
  2462  0E22                     	;# 
  2463  0E24                     	;# 
  2464  0E25                     	;# 
  2465  0E28                     	;# 
  2466  0E29                     	;# 
  2467  0E2A                     	;# 
  2468  0E2B                     	;# 
  2469  0E90                     	;# 
  2470  0E91                     	;# 
  2471  0E92                     	;# 
  2472  0E93                     	;# 
  2473  0E94                     	;# 
  2474  0E95                     	;# 
  2475  0E96                     	;# 
  2476  0E97                     	;# 
  2477  0E98                     	;# 
  2478  0E99                     	;# 
  2479  0E9A                     	;# 
  2480  0E9B                     	;# 
  2481  0E9C                     	;# 
  2482  0E9D                     	;# 
  2483  0E9E                     	;# 
  2484  0E9F                     	;# 
  2485  0EA0                     	;# 
  2486  0EA1                     	;# 
  2487  0EA2                     	;# 
  2488  0EA3                     	;# 
  2489  0EA4                     	;# 
  2490  0EA5                     	;# 
  2491  0EA6                     	;# 
  2492  0EA7                     	;# 
  2493  0EA8                     	;# 
  2494  0EA9                     	;# 
  2495  0EAA                     	;# 
  2496  0EAB                     	;# 
  2497  0EAC                     	;# 
  2498  0EAD                     	;# 
  2499  0EAE                     	;# 
  2500  0EAF                     	;# 
  2501  0EB0                     	;# 
  2502  0EB1                     	;# 
  2503  0EB2                     	;# 
  2504  0F0F                     	;# 
  2505  0F10                     	;# 
  2506  0F11                     	;# 
  2507  0F12                     	;# 
  2508  0F13                     	;# 
  2509  0F14                     	;# 
  2510  0F15                     	;# 
  2511  0F16                     	;# 
  2512  0F17                     	;# 
  2513  0F18                     	;# 
  2514  0F19                     	;# 
  2515  0F1A                     	;# 
  2516  0F1B                     	;# 
  2517  0F1C                     	;# 
  2518  0F1D                     	;# 
  2519  0F1E                     	;# 
  2520  0F1F                     	;# 
  2521  0F20                     	;# 
  2522  0F21                     	;# 
  2523  0F22                     	;# 
  2524  0F23                     	;# 
  2525  0F24                     	;# 
  2526  0F25                     	;# 
  2527  0F26                     	;# 
  2528  0F27                     	;# 
  2529  0F28                     	;# 
  2530  0F29                     	;# 
  2531  0F2A                     	;# 
  2532  0F2B                     	;# 
  2533  0F2C                     	;# 
  2534  0F2D                     	;# 
  2535  0F2E                     	;# 
  2536  0F2F                     	;# 
  2537  0F30                     	;# 
  2538  0F31                     	;# 
  2539  0F32                     	;# 
  2540  0F33                     	;# 
  2541  0F34                     	;# 
  2542  0F35                     	;# 
  2543  0F36                     	;# 
  2544  0F37                     	;# 
  2545  0FE4                     	;# 
  2546  0FE5                     	;# 
  2547  0FE6                     	;# 
  2548  0FE7                     	;# 
  2549  0FE8                     	;# 
  2550  0FE9                     	;# 
  2551  0FEA                     	;# 
  2552  0FEB                     	;# 
  2553  0FED                     	;# 
  2554  0FEE                     	;# 
  2555  0FEF                     	;# 
  2556                           
  2557                           	psect	idataBANK1
  2558  07FC                     __pidataBANK1:	
  2559                           
  2560                           ;initializer for _d
  2561  07FC  3401               	retlw	1
  2562                           
  2563                           ;initializer for _m
  2564  07FD  3401               	retlw	1
  2565                           
  2566                           ;initializer for _x
  2567  07FE  3401               	retlw	1
  2568                           
  2569                           	psect	idataBANK3
  2570  16E2                     __pidataBANK3:	
  2571                           
  2572                           ;initializer for _months
  2573  16E2  34A5               	retlw	low (STR_1| (0+32768))
  2574  16E3  3485               	retlw	high (STR_1| (0+32768))
  2575  16E4  34A9               	retlw	low (STR_2| (0+32768))
  2576  16E5  3485               	retlw	high (STR_2| (0+32768))
  2577  16E6  3495               	retlw	low (STR_3| (0+32768))
  2578  16E7  3485               	retlw	high (STR_3| (0+32768))
  2579  16E8  34B5               	retlw	low (STR_4| (0+32768))
  2580  16E9  3485               	retlw	high (STR_4| (0+32768))
  2581  16EA  34B9               	retlw	low (STR_5| (0+32768))
  2582  16EB  3485               	retlw	high (STR_5| (0+32768))
  2583  16EC  34C5               	retlw	low (STR_6| (0+32768))
  2584  16ED  3485               	retlw	high (STR_6| (0+32768))
  2585  16EE  34AD               	retlw	low (STR_7| (0+32768))
  2586  16EF  3485               	retlw	high (STR_7| (0+32768))
  2587  16F0  34A1               	retlw	low (STR_8| (0+32768))
  2588  16F1  3485               	retlw	high (STR_8| (0+32768))
  2589  16F2  349D               	retlw	low (STR_9| (0+32768))
  2590  16F3  3485               	retlw	high (STR_9| (0+32768))
  2591  16F4  34B1               	retlw	low (STR_10| (0+32768))
  2592  16F5  3485               	retlw	high (STR_10| (0+32768))
  2593  16F6  34BD               	retlw	low (STR_11| (0+32768))
  2594  16F7  3485               	retlw	high (STR_11| (0+32768))
  2595  16F8  34C1               	retlw	low (STR_12| (0+32768))
  2596  16F9  3485               	retlw	high (STR_12| (0+32768))
  2597  16FA  3499               	retlw	low (STR_13| (0+32768))
  2598  16FB  3485               	retlw	high (STR_13| (0+32768))
  2599                           
  2600                           	psect	stringtext
  2601  01CF                     __pstringtext:	
  2602  01CF                     _dpowers:	
  2603  01CF  3401               	retlw	1
  2604  01D0  3400               	retlw	0
  2605  01D1  3400               	retlw	0
  2606  01D2  3400               	retlw	0
  2607  01D3  340A               	retlw	10
  2608  01D4  3400               	retlw	0
  2609  01D5  3400               	retlw	0
  2610  01D6  3400               	retlw	0
  2611  01D7  3464               	retlw	100
  2612  01D8  3400               	retlw	0
  2613  01D9  3400               	retlw	0
  2614  01DA  3400               	retlw	0
  2615  01DB  34E8               	retlw	232
  2616  01DC  3403               	retlw	3
  2617  01DD  3400               	retlw	0
  2618  01DE  3400               	retlw	0
  2619  01DF  3410               	retlw	16
  2620  01E0  3427               	retlw	39
  2621  01E1  3400               	retlw	0
  2622  01E2  3400               	retlw	0
  2623  01E3  34A0               	retlw	160
  2624  01E4  3486               	retlw	134
  2625  01E5  3401               	retlw	1
  2626  01E6  3400               	retlw	0
  2627  01E7  3440               	retlw	64
  2628  01E8  3442               	retlw	66
  2629  01E9  340F               	retlw	15
  2630  01EA  3400               	retlw	0
  2631  01EB  3480               	retlw	128
  2632  01EC  3496               	retlw	150
  2633  01ED  3498               	retlw	152
  2634  01EE  3400               	retlw	0
  2635  01EF  3400               	retlw	0
  2636  01F0  34E1               	retlw	225
  2637  01F1  34F5               	retlw	245
  2638  01F2  3405               	retlw	5
  2639  01F3  3400               	retlw	0
  2640  01F4  34CA               	retlw	202
  2641  01F5  349A               	retlw	154
  2642  01F6  343B               	retlw	59
  2643  01F7                     __end_of_dpowers:	
  2644  01F7                     _OledFont:	
  2645  01F7  3400               	retlw	0
  2646  01F8  3400               	retlw	0
  2647  01F9  3400               	retlw	0
  2648  01FA  3400               	retlw	0
  2649  01FB  3400               	retlw	0
  2650  01FC  3400               	retlw	0
  2651  01FD  3400               	retlw	0
  2652  01FE  3400               	retlw	0
  2653  01FF  3400               	retlw	0
  2654  0200  3400               	retlw	0
  2655  0201  345F               	retlw	95
  2656  0202  3400               	retlw	0
  2657  0203  3400               	retlw	0
  2658  0204  3400               	retlw	0
  2659  0205  3400               	retlw	0
  2660  0206  3400               	retlw	0
  2661  0207  3400               	retlw	0
  2662  0208  3400               	retlw	0
  2663  0209  3407               	retlw	7
  2664  020A  3400               	retlw	0
  2665  020B  3407               	retlw	7
  2666  020C  3400               	retlw	0
  2667  020D  3400               	retlw	0
  2668  020E  3400               	retlw	0
  2669  020F  3400               	retlw	0
  2670  0210  3414               	retlw	20
  2671  0211  347F               	retlw	127
  2672  0212  3414               	retlw	20
  2673  0213  347F               	retlw	127
  2674  0214  3414               	retlw	20
  2675  0215  3400               	retlw	0
  2676  0216  3400               	retlw	0
  2677  0217  3400               	retlw	0
  2678  0218  3424               	retlw	36
  2679  0219  342A               	retlw	42
  2680  021A  347F               	retlw	127
  2681  021B  342A               	retlw	42
  2682  021C  3412               	retlw	18
  2683  021D  3400               	retlw	0
  2684  021E  3400               	retlw	0
  2685  021F  3400               	retlw	0
  2686  0220  3423               	retlw	35
  2687  0221  3413               	retlw	19
  2688  0222  3408               	retlw	8
  2689  0223  3464               	retlw	100
  2690  0224  3462               	retlw	98
  2691  0225  3400               	retlw	0
  2692  0226  3400               	retlw	0
  2693  0227  3400               	retlw	0
  2694  0228  3436               	retlw	54
  2695  0229  3449               	retlw	73
  2696  022A  3455               	retlw	85
  2697  022B  3422               	retlw	34
  2698  022C  3450               	retlw	80
  2699  022D  3400               	retlw	0
  2700  022E  3400               	retlw	0
  2701  022F  3400               	retlw	0
  2702  0230  3400               	retlw	0
  2703  0231  3405               	retlw	5
  2704  0232  3403               	retlw	3
  2705  0233  3400               	retlw	0
  2706  0234  3400               	retlw	0
  2707  0235  3400               	retlw	0
  2708  0236  3400               	retlw	0
  2709  0237  3400               	retlw	0
  2710  0238  341C               	retlw	28
  2711  0239  3422               	retlw	34
  2712  023A  3441               	retlw	65
  2713  023B  3400               	retlw	0
  2714  023C  3400               	retlw	0
  2715  023D  3400               	retlw	0
  2716  023E  3400               	retlw	0
  2717  023F  3400               	retlw	0
  2718  0240  3441               	retlw	65
  2719  0241  3422               	retlw	34
  2720  0242  341C               	retlw	28
  2721  0243  3400               	retlw	0
  2722  0244  3400               	retlw	0
  2723  0245  3400               	retlw	0
  2724  0246  3400               	retlw	0
  2725  0247  3400               	retlw	0
  2726  0248  3408               	retlw	8
  2727  0249  342A               	retlw	42
  2728  024A  341C               	retlw	28
  2729  024B  342A               	retlw	42
  2730  024C  3408               	retlw	8
  2731  024D  3400               	retlw	0
  2732  024E  3400               	retlw	0
  2733  024F  3400               	retlw	0
  2734  0250  3408               	retlw	8
  2735  0251  3408               	retlw	8
  2736  0252  343E               	retlw	62
  2737  0253  3408               	retlw	8
  2738  0254  3408               	retlw	8
  2739  0255  3400               	retlw	0
  2740  0256  3400               	retlw	0
  2741  0257  3400               	retlw	0
  2742  0258  34A0               	retlw	160
  2743  0259  3460               	retlw	96
  2744  025A  3400               	retlw	0
  2745  025B  3400               	retlw	0
  2746  025C  3400               	retlw	0
  2747  025D  3400               	retlw	0
  2748  025E  3400               	retlw	0
  2749  025F  3400               	retlw	0
  2750  0260  3408               	retlw	8
  2751  0261  3408               	retlw	8
  2752  0262  3408               	retlw	8
  2753  0263  3408               	retlw	8
  2754  0264  3408               	retlw	8
  2755  0265  3400               	retlw	0
  2756  0266  3400               	retlw	0
  2757  0267  3400               	retlw	0
  2758  0268  3460               	retlw	96
  2759  0269  3460               	retlw	96
  2760  026A  3400               	retlw	0
  2761  026B  3400               	retlw	0
  2762  026C  3400               	retlw	0
  2763  026D  3400               	retlw	0
  2764  026E  3400               	retlw	0
  2765  026F  3400               	retlw	0
  2766  0270  3420               	retlw	32
  2767  0271  3410               	retlw	16
  2768  0272  3408               	retlw	8
  2769  0273  3404               	retlw	4
  2770  0274  3402               	retlw	2
  2771  0275  3400               	retlw	0
  2772  0276  3400               	retlw	0
  2773  0277  3400               	retlw	0
  2774  0278  343E               	retlw	62
  2775  0279  3451               	retlw	81
  2776  027A  3449               	retlw	73
  2777  027B  3445               	retlw	69
  2778  027C  343E               	retlw	62
  2779  027D  3400               	retlw	0
  2780  027E  3400               	retlw	0
  2781  027F  3400               	retlw	0
  2782  0280  3400               	retlw	0
  2783  0281  3442               	retlw	66
  2784  0282  347F               	retlw	127
  2785  0283  3440               	retlw	64
  2786  0284  3400               	retlw	0
  2787  0285  3400               	retlw	0
  2788  0286  3400               	retlw	0
  2789  0287  3400               	retlw	0
  2790  0288  3462               	retlw	98
  2791  0289  3451               	retlw	81
  2792  028A  3449               	retlw	73
  2793  028B  3449               	retlw	73
  2794  028C  3446               	retlw	70
  2795  028D  3400               	retlw	0
  2796  028E  3400               	retlw	0
  2797  028F  3400               	retlw	0
  2798  0290  3422               	retlw	34
  2799  0291  3441               	retlw	65
  2800  0292  3449               	retlw	73
  2801  0293  3449               	retlw	73
  2802  0294  3436               	retlw	54
  2803  0295  3400               	retlw	0
  2804  0296  3400               	retlw	0
  2805  0297  3400               	retlw	0
  2806  0298  3418               	retlw	24
  2807  0299  3414               	retlw	20
  2808  029A  3412               	retlw	18
  2809  029B  347F               	retlw	127
  2810  029C  3410               	retlw	16
  2811  029D  3400               	retlw	0
  2812  029E  3400               	retlw	0
  2813  029F  3400               	retlw	0
  2814  02A0  3427               	retlw	39
  2815  02A1  3445               	retlw	69
  2816  02A2  3445               	retlw	69
  2817  02A3  3445               	retlw	69
  2818  02A4  3439               	retlw	57
  2819  02A5  3400               	retlw	0
  2820  02A6  3400               	retlw	0
  2821  02A7  3400               	retlw	0
  2822  02A8  343C               	retlw	60
  2823  02A9  344A               	retlw	74
  2824  02AA  3449               	retlw	73
  2825  02AB  3449               	retlw	73
  2826  02AC  3430               	retlw	48
  2827  02AD  3400               	retlw	0
  2828  02AE  3400               	retlw	0
  2829  02AF  3400               	retlw	0
  2830  02B0  3401               	retlw	1
  2831  02B1  3471               	retlw	113
  2832  02B2  3409               	retlw	9
  2833  02B3  3405               	retlw	5
  2834  02B4  3403               	retlw	3
  2835  02B5  3400               	retlw	0
  2836  02B6  3400               	retlw	0
  2837  02B7  3400               	retlw	0
  2838  02B8  3436               	retlw	54
  2839  02B9  3449               	retlw	73
  2840  02BA  3449               	retlw	73
  2841  02BB  3449               	retlw	73
  2842  02BC  3436               	retlw	54
  2843  02BD  3400               	retlw	0
  2844  02BE  3400               	retlw	0
  2845  02BF  3400               	retlw	0
  2846  02C0  3406               	retlw	6
  2847  02C1  3449               	retlw	73
  2848  02C2  3449               	retlw	73
  2849  02C3  3429               	retlw	41
  2850  02C4  341E               	retlw	30
  2851  02C5  3400               	retlw	0
  2852  02C6  3400               	retlw	0
  2853  02C7  3400               	retlw	0
  2854  02C8  3400               	retlw	0
  2855  02C9  3436               	retlw	54
  2856  02CA  3436               	retlw	54
  2857  02CB  3400               	retlw	0
  2858  02CC  3400               	retlw	0
  2859  02CD  3400               	retlw	0
  2860  02CE  3400               	retlw	0
  2861  02CF  3400               	retlw	0
  2862  02D0  3400               	retlw	0
  2863  02D1  34AC               	retlw	172
  2864  02D2  346C               	retlw	108
  2865  02D3  3400               	retlw	0
  2866  02D4  3400               	retlw	0
  2867  02D5  3400               	retlw	0
  2868  02D6  3400               	retlw	0
  2869  02D7  3400               	retlw	0
  2870  02D8  3408               	retlw	8
  2871  02D9  3414               	retlw	20
  2872  02DA  3422               	retlw	34
  2873  02DB  3441               	retlw	65
  2874  02DC  3400               	retlw	0
  2875  02DD  3400               	retlw	0
  2876  02DE  3400               	retlw	0
  2877  02DF  3400               	retlw	0
  2878  02E0  3414               	retlw	20
  2879  02E1  3414               	retlw	20
  2880  02E2  3414               	retlw	20
  2881  02E3  3414               	retlw	20
  2882  02E4  3414               	retlw	20
  2883  02E5  3400               	retlw	0
  2884  02E6  3400               	retlw	0
  2885  02E7  3400               	retlw	0
  2886  02E8  3441               	retlw	65
  2887  02E9  3422               	retlw	34
  2888  02EA  3414               	retlw	20
  2889  02EB  3408               	retlw	8
  2890  02EC  3400               	retlw	0
  2891  02ED  3400               	retlw	0
  2892  02EE  3400               	retlw	0
  2893  02EF  3400               	retlw	0
  2894  02F0  3402               	retlw	2
  2895  02F1  3401               	retlw	1
  2896  02F2  3451               	retlw	81
  2897  02F3  3409               	retlw	9
  2898  02F4  3406               	retlw	6
  2899  02F5  3400               	retlw	0
  2900  02F6  3400               	retlw	0
  2901  02F7  3400               	retlw	0
  2902  02F8  3432               	retlw	50
  2903  02F9  3449               	retlw	73
  2904  02FA  3479               	retlw	121
  2905  02FB  3441               	retlw	65
  2906  02FC  343E               	retlw	62
  2907  02FD  3400               	retlw	0
  2908  02FE  3400               	retlw	0
  2909  02FF  3400               	retlw	0
  2910  0300  347E               	retlw	126
  2911  0301  3409               	retlw	9
  2912  0302  3409               	retlw	9
  2913  0303  3409               	retlw	9
  2914  0304  347E               	retlw	126
  2915  0305  3400               	retlw	0
  2916  0306  3400               	retlw	0
  2917  0307  3400               	retlw	0
  2918  0308  347F               	retlw	127
  2919  0309  3449               	retlw	73
  2920  030A  3449               	retlw	73
  2921  030B  3449               	retlw	73
  2922  030C  3436               	retlw	54
  2923  030D  3400               	retlw	0
  2924  030E  3400               	retlw	0
  2925  030F  3400               	retlw	0
  2926  0310  343E               	retlw	62
  2927  0311  3441               	retlw	65
  2928  0312  3441               	retlw	65
  2929  0313  3441               	retlw	65
  2930  0314  3422               	retlw	34
  2931  0315  3400               	retlw	0
  2932  0316  3400               	retlw	0
  2933  0317  3400               	retlw	0
  2934  0318  347F               	retlw	127
  2935  0319  3441               	retlw	65
  2936  031A  3441               	retlw	65
  2937  031B  3422               	retlw	34
  2938  031C  341C               	retlw	28
  2939  031D  3400               	retlw	0
  2940  031E  3400               	retlw	0
  2941  031F  3400               	retlw	0
  2942  0320  347F               	retlw	127
  2943  0321  3449               	retlw	73
  2944  0322  3449               	retlw	73
  2945  0323  3449               	retlw	73
  2946  0324  3441               	retlw	65
  2947  0325  3400               	retlw	0
  2948  0326  3400               	retlw	0
  2949  0327  3400               	retlw	0
  2950  0328  347F               	retlw	127
  2951  0329  3409               	retlw	9
  2952  032A  3409               	retlw	9
  2953  032B  3409               	retlw	9
  2954  032C  3401               	retlw	1
  2955  032D  3400               	retlw	0
  2956  032E  3400               	retlw	0
  2957  032F  3400               	retlw	0
  2958  0330  343E               	retlw	62
  2959  0331  3441               	retlw	65
  2960  0332  3441               	retlw	65
  2961  0333  3451               	retlw	81
  2962  0334  3472               	retlw	114
  2963  0335  3400               	retlw	0
  2964  0336  3400               	retlw	0
  2965  0337  3400               	retlw	0
  2966  0338  347F               	retlw	127
  2967  0339  3408               	retlw	8
  2968  033A  3408               	retlw	8
  2969  033B  3408               	retlw	8
  2970  033C  347F               	retlw	127
  2971  033D  3400               	retlw	0
  2972  033E  3400               	retlw	0
  2973  033F  3400               	retlw	0
  2974  0340  3441               	retlw	65
  2975  0341  347F               	retlw	127
  2976  0342  3441               	retlw	65
  2977  0343  3400               	retlw	0
  2978  0344  3400               	retlw	0
  2979  0345  3400               	retlw	0
  2980  0346  3400               	retlw	0
  2981  0347  3400               	retlw	0
  2982  0348  3420               	retlw	32
  2983  0349  3440               	retlw	64
  2984  034A  3441               	retlw	65
  2985  034B  343F               	retlw	63
  2986  034C  3401               	retlw	1
  2987  034D  3400               	retlw	0
  2988  034E  3400               	retlw	0
  2989  034F  3400               	retlw	0
  2990  0350  347F               	retlw	127
  2991  0351  3408               	retlw	8
  2992  0352  3414               	retlw	20
  2993  0353  3422               	retlw	34
  2994  0354  3441               	retlw	65
  2995  0355  3400               	retlw	0
  2996  0356  3400               	retlw	0
  2997  0357  3400               	retlw	0
  2998  0358  347F               	retlw	127
  2999  0359  3440               	retlw	64
  3000  035A  3440               	retlw	64
  3001  035B  3440               	retlw	64
  3002  035C  3440               	retlw	64
  3003  035D  3400               	retlw	0
  3004  035E  3400               	retlw	0
  3005  035F  3400               	retlw	0
  3006  0360  347F               	retlw	127
  3007  0361  3402               	retlw	2
  3008  0362  340C               	retlw	12
  3009  0363  3402               	retlw	2
  3010  0364  347F               	retlw	127
  3011  0365  3400               	retlw	0
  3012  0366  3400               	retlw	0
  3013  0367  3400               	retlw	0
  3014  0368  347F               	retlw	127
  3015  0369  3404               	retlw	4
  3016  036A  3408               	retlw	8
  3017  036B  3410               	retlw	16
  3018  036C  347F               	retlw	127
  3019  036D  3400               	retlw	0
  3020  036E  3400               	retlw	0
  3021  036F  3400               	retlw	0
  3022  0370  343E               	retlw	62
  3023  0371  3441               	retlw	65
  3024  0372  3441               	retlw	65
  3025  0373  3441               	retlw	65
  3026  0374  343E               	retlw	62
  3027  0375  3400               	retlw	0
  3028  0376  3400               	retlw	0
  3029  0377  3400               	retlw	0
  3030  0378  347F               	retlw	127
  3031  0379  3409               	retlw	9
  3032  037A  3409               	retlw	9
  3033  037B  3409               	retlw	9
  3034  037C  3406               	retlw	6
  3035  037D  3400               	retlw	0
  3036  037E  3400               	retlw	0
  3037  037F  3400               	retlw	0
  3038  0380  343E               	retlw	62
  3039  0381  3441               	retlw	65
  3040  0382  3451               	retlw	81
  3041  0383  3421               	retlw	33
  3042  0384  345E               	retlw	94
  3043  0385  3400               	retlw	0
  3044  0386  3400               	retlw	0
  3045  0387  3400               	retlw	0
  3046  0388  347F               	retlw	127
  3047  0389  3409               	retlw	9
  3048  038A  3419               	retlw	25
  3049  038B  3429               	retlw	41
  3050  038C  3446               	retlw	70
  3051  038D  3400               	retlw	0
  3052  038E  3400               	retlw	0
  3053  038F  3400               	retlw	0
  3054  0390  3426               	retlw	38
  3055  0391  3449               	retlw	73
  3056  0392  3449               	retlw	73
  3057  0393  3449               	retlw	73
  3058  0394  3432               	retlw	50
  3059  0395  3400               	retlw	0
  3060  0396  3400               	retlw	0
  3061  0397  3400               	retlw	0
  3062  0398  3401               	retlw	1
  3063  0399  3401               	retlw	1
  3064  039A  347F               	retlw	127
  3065  039B  3401               	retlw	1
  3066  039C  3401               	retlw	1
  3067  039D  3400               	retlw	0
  3068  039E  3400               	retlw	0
  3069  039F  3400               	retlw	0
  3070  03A0  343F               	retlw	63
  3071  03A1  3440               	retlw	64
  3072  03A2  3440               	retlw	64
  3073  03A3  3440               	retlw	64
  3074  03A4  343F               	retlw	63
  3075  03A5  3400               	retlw	0
  3076  03A6  3400               	retlw	0
  3077  03A7  3400               	retlw	0
  3078  03A8  341F               	retlw	31
  3079  03A9  3420               	retlw	32
  3080  03AA  3440               	retlw	64
  3081  03AB  3420               	retlw	32
  3082  03AC  341F               	retlw	31
  3083  03AD  3400               	retlw	0
  3084  03AE  3400               	retlw	0
  3085  03AF  3400               	retlw	0
  3086  03B0  343F               	retlw	63
  3087  03B1  3440               	retlw	64
  3088  03B2  3438               	retlw	56
  3089  03B3  3440               	retlw	64
  3090  03B4  343F               	retlw	63
  3091  03B5  3400               	retlw	0
  3092  03B6  3400               	retlw	0
  3093  03B7  3400               	retlw	0
  3094  03B8  3463               	retlw	99
  3095  03B9  3414               	retlw	20
  3096  03BA  3408               	retlw	8
  3097  03BB  3414               	retlw	20
  3098  03BC  3463               	retlw	99
  3099  03BD  3400               	retlw	0
  3100  03BE  3400               	retlw	0
  3101  03BF  3400               	retlw	0
  3102  03C0  3403               	retlw	3
  3103  03C1  3404               	retlw	4
  3104  03C2  3478               	retlw	120
  3105  03C3  3404               	retlw	4
  3106  03C4  3403               	retlw	3
  3107  03C5  3400               	retlw	0
  3108  03C6  3400               	retlw	0
  3109  03C7  3400               	retlw	0
  3110  03C8  3461               	retlw	97
  3111  03C9  3451               	retlw	81
  3112  03CA  3449               	retlw	73
  3113  03CB  3445               	retlw	69
  3114  03CC  3443               	retlw	67
  3115  03CD  3400               	retlw	0
  3116  03CE  3400               	retlw	0
  3117  03CF  3400               	retlw	0
  3118  03D0  347F               	retlw	127
  3119  03D1  3441               	retlw	65
  3120  03D2  3441               	retlw	65
  3121  03D3  3400               	retlw	0
  3122  03D4  3400               	retlw	0
  3123  03D5  3400               	retlw	0
  3124  03D6  3400               	retlw	0
  3125  03D7  3400               	retlw	0
  3126  03D8  3402               	retlw	2
  3127  03D9  3404               	retlw	4
  3128  03DA  3408               	retlw	8
  3129  03DB  3410               	retlw	16
  3130  03DC  3420               	retlw	32
  3131  03DD  3400               	retlw	0
  3132  03DE  3400               	retlw	0
  3133  03DF  3400               	retlw	0
  3134  03E0  3441               	retlw	65
  3135  03E1  3441               	retlw	65
  3136  03E2  347F               	retlw	127
  3137  03E3  3400               	retlw	0
  3138  03E4  3400               	retlw	0
  3139  03E5  3400               	retlw	0
  3140  03E6  3400               	retlw	0
  3141  03E7  3400               	retlw	0
  3142  03E8  3404               	retlw	4
  3143  03E9  3402               	retlw	2
  3144  03EA  3401               	retlw	1
  3145  03EB  3402               	retlw	2
  3146  03EC  3404               	retlw	4
  3147  03ED  3400               	retlw	0
  3148  03EE  3400               	retlw	0
  3149  03EF  3400               	retlw	0
  3150  03F0  3480               	retlw	128
  3151  03F1  3480               	retlw	128
  3152  03F2  3480               	retlw	128
  3153  03F3  3480               	retlw	128
  3154  03F4  3480               	retlw	128
  3155  03F5  3400               	retlw	0
  3156  03F6  3400               	retlw	0
  3157  03F7  3400               	retlw	0
  3158  03F8  3401               	retlw	1
  3159  03F9  3402               	retlw	2
  3160  03FA  3404               	retlw	4
  3161  03FB  3400               	retlw	0
  3162  03FC  3400               	retlw	0
  3163  03FD  3400               	retlw	0
  3164  03FE  3400               	retlw	0
  3165  03FF  3400               	retlw	0
  3166  0400  3420               	retlw	32
  3167  0401  3454               	retlw	84
  3168  0402  3454               	retlw	84
  3169  0403  3454               	retlw	84
  3170  0404  3478               	retlw	120
  3171  0405  3400               	retlw	0
  3172  0406  3400               	retlw	0
  3173  0407  3400               	retlw	0
  3174  0408  347F               	retlw	127
  3175  0409  3448               	retlw	72
  3176  040A  3444               	retlw	68
  3177  040B  3444               	retlw	68
  3178  040C  3438               	retlw	56
  3179  040D  3400               	retlw	0
  3180  040E  3400               	retlw	0
  3181  040F  3400               	retlw	0
  3182  0410  3438               	retlw	56
  3183  0411  3444               	retlw	68
  3184  0412  3444               	retlw	68
  3185  0413  3428               	retlw	40
  3186  0414  3400               	retlw	0
  3187  0415  3400               	retlw	0
  3188  0416  3400               	retlw	0
  3189  0417  3400               	retlw	0
  3190  0418  3438               	retlw	56
  3191  0419  3444               	retlw	68
  3192  041A  3444               	retlw	68
  3193  041B  3448               	retlw	72
  3194  041C  347F               	retlw	127
  3195  041D  3400               	retlw	0
  3196  041E  3400               	retlw	0
  3197  041F  3400               	retlw	0
  3198  0420  3438               	retlw	56
  3199  0421  3454               	retlw	84
  3200  0422  3454               	retlw	84
  3201  0423  3454               	retlw	84
  3202  0424  3418               	retlw	24
  3203  0425  3400               	retlw	0
  3204  0426  3400               	retlw	0
  3205  0427  3400               	retlw	0
  3206  0428  3408               	retlw	8
  3207  0429  347E               	retlw	126
  3208  042A  3409               	retlw	9
  3209  042B  3402               	retlw	2
  3210  042C  3400               	retlw	0
  3211  042D  3400               	retlw	0
  3212  042E  3400               	retlw	0
  3213  042F  3400               	retlw	0
  3214  0430  3418               	retlw	24
  3215  0431  34A4               	retlw	164
  3216  0432  34A4               	retlw	164
  3217  0433  34A4               	retlw	164
  3218  0434  347C               	retlw	124
  3219  0435  3400               	retlw	0
  3220  0436  3400               	retlw	0
  3221  0437  3400               	retlw	0
  3222  0438  347F               	retlw	127
  3223  0439  3408               	retlw	8
  3224  043A  3404               	retlw	4
  3225  043B  3404               	retlw	4
  3226  043C  3478               	retlw	120
  3227  043D  3400               	retlw	0
  3228  043E  3400               	retlw	0
  3229  043F  3400               	retlw	0
  3230  0440  3400               	retlw	0
  3231  0441  347D               	retlw	125
  3232  0442  3400               	retlw	0
  3233  0443  3400               	retlw	0
  3234  0444  3400               	retlw	0
  3235  0445  3400               	retlw	0
  3236  0446  3400               	retlw	0
  3237  0447  3400               	retlw	0
  3238  0448  3480               	retlw	128
  3239  0449  3484               	retlw	132
  3240  044A  347D               	retlw	125
  3241  044B  3400               	retlw	0
  3242  044C  3400               	retlw	0
  3243  044D  3400               	retlw	0
  3244  044E  3400               	retlw	0
  3245  044F  3400               	retlw	0
  3246  0450  347F               	retlw	127
  3247  0451  3410               	retlw	16
  3248  0452  3428               	retlw	40
  3249  0453  3444               	retlw	68
  3250  0454  3400               	retlw	0
  3251  0455  3400               	retlw	0
  3252  0456  3400               	retlw	0
  3253  0457  3400               	retlw	0
  3254  0458  3441               	retlw	65
  3255  0459  347F               	retlw	127
  3256  045A  3440               	retlw	64
  3257  045B  3400               	retlw	0
  3258  045C  3400               	retlw	0
  3259  045D  3400               	retlw	0
  3260  045E  3400               	retlw	0
  3261  045F  3400               	retlw	0
  3262  0460  347C               	retlw	124
  3263  0461  3404               	retlw	4
  3264  0462  3418               	retlw	24
  3265  0463  3404               	retlw	4
  3266  0464  3478               	retlw	120
  3267  0465  3400               	retlw	0
  3268  0466  3400               	retlw	0
  3269  0467  3400               	retlw	0
  3270  0468  347C               	retlw	124
  3271  0469  3408               	retlw	8
  3272  046A  3404               	retlw	4
  3273  046B  347C               	retlw	124
  3274  046C  3400               	retlw	0
  3275  046D  3400               	retlw	0
  3276  046E  3400               	retlw	0
  3277  046F  3400               	retlw	0
  3278  0470  3438               	retlw	56
  3279  0471  3444               	retlw	68
  3280  0472  3444               	retlw	68
  3281  0473  3438               	retlw	56
  3282  0474  3400               	retlw	0
  3283  0475  3400               	retlw	0
  3284  0476  3400               	retlw	0
  3285  0477  3400               	retlw	0
  3286  0478  34FC               	retlw	252
  3287  0479  3424               	retlw	36
  3288  047A  3424               	retlw	36
  3289  047B  3418               	retlw	24
  3290  047C  3400               	retlw	0
  3291  047D  3400               	retlw	0
  3292  047E  3400               	retlw	0
  3293  047F  3400               	retlw	0
  3294  0480  3418               	retlw	24
  3295  0481  3424               	retlw	36
  3296  0482  3424               	retlw	36
  3297  0483  34FC               	retlw	252
  3298  0484  3400               	retlw	0
  3299  0485  3400               	retlw	0
  3300  0486  3400               	retlw	0
  3301  0487  3400               	retlw	0
  3302  0488  3400               	retlw	0
  3303  0489  347C               	retlw	124
  3304  048A  3408               	retlw	8
  3305  048B  3404               	retlw	4
  3306  048C  3400               	retlw	0
  3307  048D  3400               	retlw	0
  3308  048E  3400               	retlw	0
  3309  048F  3400               	retlw	0
  3310  0490  3448               	retlw	72
  3311  0491  3454               	retlw	84
  3312  0492  3454               	retlw	84
  3313  0493  3424               	retlw	36
  3314  0494  3400               	retlw	0
  3315  0495  3400               	retlw	0
  3316  0496  3400               	retlw	0
  3317  0497  3400               	retlw	0
  3318  0498  3404               	retlw	4
  3319  0499  347F               	retlw	127
  3320  049A  3444               	retlw	68
  3321  049B  3400               	retlw	0
  3322  049C  3400               	retlw	0
  3323  049D  3400               	retlw	0
  3324  049E  3400               	retlw	0
  3325  049F  3400               	retlw	0
  3326  04A0  343C               	retlw	60
  3327  04A1  3440               	retlw	64
  3328  04A2  3440               	retlw	64
  3329  04A3  347C               	retlw	124
  3330  04A4  3400               	retlw	0
  3331  04A5  3400               	retlw	0
  3332  04A6  3400               	retlw	0
  3333  04A7  3400               	retlw	0
  3334  04A8  341C               	retlw	28
  3335  04A9  3420               	retlw	32
  3336  04AA  3440               	retlw	64
  3337  04AB  3420               	retlw	32
  3338  04AC  341C               	retlw	28
  3339  04AD  3400               	retlw	0
  3340  04AE  3400               	retlw	0
  3341  04AF  3400               	retlw	0
  3342  04B0  343C               	retlw	60
  3343  04B1  3440               	retlw	64
  3344  04B2  3430               	retlw	48
  3345  04B3  3440               	retlw	64
  3346  04B4  343C               	retlw	60
  3347  04B5  3400               	retlw	0
  3348  04B6  3400               	retlw	0
  3349  04B7  3400               	retlw	0
  3350  04B8  3444               	retlw	68
  3351  04B9  3428               	retlw	40
  3352  04BA  3410               	retlw	16
  3353  04BB  3428               	retlw	40
  3354  04BC  3444               	retlw	68
  3355  04BD  3400               	retlw	0
  3356  04BE  3400               	retlw	0
  3357  04BF  3400               	retlw	0
  3358  04C0  341C               	retlw	28
  3359  04C1  34A0               	retlw	160
  3360  04C2  34A0               	retlw	160
  3361  04C3  347C               	retlw	124
  3362  04C4  3400               	retlw	0
  3363  04C5  3400               	retlw	0
  3364  04C6  3400               	retlw	0
  3365  04C7  3400               	retlw	0
  3366  04C8  3444               	retlw	68
  3367  04C9  3464               	retlw	100
  3368  04CA  3454               	retlw	84
  3369  04CB  344C               	retlw	76
  3370  04CC  3444               	retlw	68
  3371  04CD  3400               	retlw	0
  3372  04CE  3400               	retlw	0
  3373  04CF  3400               	retlw	0
  3374  04D0  3408               	retlw	8
  3375  04D1  3436               	retlw	54
  3376  04D2  3441               	retlw	65
  3377  04D3  3400               	retlw	0
  3378  04D4  3400               	retlw	0
  3379  04D5  3400               	retlw	0
  3380  04D6  3400               	retlw	0
  3381  04D7  3400               	retlw	0
  3382  04D8  3400               	retlw	0
  3383  04D9  347F               	retlw	127
  3384  04DA  3400               	retlw	0
  3385  04DB  3400               	retlw	0
  3386  04DC  3400               	retlw	0
  3387  04DD  3400               	retlw	0
  3388  04DE  3400               	retlw	0
  3389  04DF  3400               	retlw	0
  3390  04E0  3441               	retlw	65
  3391  04E1  3436               	retlw	54
  3392  04E2  3408               	retlw	8
  3393  04E3  3400               	retlw	0
  3394  04E4  3400               	retlw	0
  3395  04E5  3400               	retlw	0
  3396  04E6  3400               	retlw	0
  3397  04E7  3400               	retlw	0
  3398  04E8  3402               	retlw	2
  3399  04E9  3401               	retlw	1
  3400  04EA  3401               	retlw	1
  3401  04EB  3402               	retlw	2
  3402  04EC  3401               	retlw	1
  3403  04ED  3400               	retlw	0
  3404  04EE  3400               	retlw	0
  3405  04EF  3400               	retlw	0
  3406  04F0  3402               	retlw	2
  3407  04F1  3405               	retlw	5
  3408  04F2  3405               	retlw	5
  3409  04F3  3402               	retlw	2
  3410  04F4  3400               	retlw	0
  3411  04F5  3400               	retlw	0
  3412  04F6  3400               	retlw	0
  3413  04F7                     __end_of_OledFont:	
  3414  04F7                     _screen_mth:	
  3415  04F7  346D               	retlw	109
  3416  04F8  346F               	retlw	111
  3417  04F9  346E               	retlw	110
  3418  04FA  3474               	retlw	116
  3419  04FB  3468               	retlw	104
  3420  04FC  342E               	retlw	46
  3421  04FD  3474               	retlw	116
  3422  04FE  3478               	retlw	120
  3423  04FF  3474               	retlw	116
  3424  0500  343D               	retlw	61
  3425  0501  3400               	retlw	0
  3426  0502                     __end_of_screen_mth:	
  3427  0502                     _screen_date:	
  3428  0502  3464               	retlw	100
  3429  0503  3461               	retlw	97
  3430  0504  3474               	retlw	116
  3431  0505  3465               	retlw	101
  3432  0506  342E               	retlw	46
  3433  0507  3474               	retlw	116
  3434  0508  3478               	retlw	120
  3435  0509  3474               	retlw	116
  3436  050A  343D               	retlw	61
  3437  050B  3400               	retlw	0
  3438  050C                     __end_of_screen_date:	
  3439  050C                     _screen_time:	
  3440  050C  3474               	retlw	116
  3441  050D  3469               	retlw	105
  3442  050E  346D               	retlw	109
  3443  050F  3465               	retlw	101
  3444  0510  342E               	retlw	46
  3445  0511  3474               	retlw	116
  3446  0512  3478               	retlw	120
  3447  0513  3474               	retlw	116
  3448  0514  343D               	retlw	61
  3449  0515  3400               	retlw	0
  3450  0516                     __end_of_screen_time:	
  3451  0516                     _screen_date1:	
  3452  0516  3474               	retlw	116
  3453  0517  3432               	retlw	50
  3454  0518  342E               	retlw	46
  3455  0519  3474               	retlw	116
  3456  051A  3478               	retlw	120
  3457  051B  3474               	retlw	116
  3458  051C  343D               	retlw	61
  3459  051D  3400               	retlw	0
  3460  051E                     __end_of_screen_date1:	
  3461  051E                     _screen_hour:	
  3462  051E  3474               	retlw	116
  3463  051F  3430               	retlw	48
  3464  0520  342E               	retlw	46
  3465  0521  3474               	retlw	116
  3466  0522  3478               	retlw	120
  3467  0523  3474               	retlw	116
  3468  0524  343D               	retlw	61
  3469  0525  3400               	retlw	0
  3470  0526                     __end_of_screen_hour:	
  3471  0526                     _screen_mins:	
  3472  0526  3474               	retlw	116
  3473  0527  3431               	retlw	49
  3474  0528  342E               	retlw	46
  3475  0529  3474               	retlw	116
  3476  052A  3478               	retlw	120
  3477  052B  3474               	retlw	116
  3478  052C  343D               	retlw	61
  3479  052D  3400               	retlw	0
  3480  052E                     __end_of_screen_mins:	
  3481  052E                     _screen_month:	
  3482  052E  3474               	retlw	116
  3483  052F  3433               	retlw	51
  3484  0530  342E               	retlw	46
  3485  0531  3474               	retlw	116
  3486  0532  3478               	retlw	120
  3487  0533  3474               	retlw	116
  3488  0534  343D               	retlw	61
  3489  0535  3400               	retlw	0
  3490  0536                     __end_of_screen_month:	
  3491  000B                     _INTCONbits	set	11
  3492  0011                     _PIR1bits	set	17
  3493  0015                     _TMR0	set	21
  3494  005F                     _GIE	set	95
  3495  0078                     _RD0	set	120
  3496  0079                     _RD1	set	121
  3497  007A                     _RD2	set	122
  3498  0095                     _OPTION_REGbits	set	149
  3499  008D                     _TRISBbits	set	141
  3500  008E                     _TRISCbits	set	142
  3501  008F                     _TRISD	set	143
  3502  04CB                     _IRCF0	set	1227
  3503  04CC                     _IRCF1	set	1228
  3504  04CD                     _IRCF2	set	1229
  3505  04CE                     _IRCF3	set	1230
  3506  04C8                     _SCS0	set	1224
  3507  04C9                     _SCS1	set	1225
  3508  04CF                     _SPLLEN	set	1231
  3509  0476                     _TRISC6	set	1142
  3510  0477                     _TRISC7	set	1143
  3511  047A                     _TRISD2	set	1146
  3512  018D                     _ANSELBbits	set	397
  3513  018E                     _ANSELCbits	set	398
  3514  018F                     _ANSELD	set	399
  3515  0199                     _RC1REG	set	409
  3516  019D                     _RC1STAbits	set	413
  3517  019B                     _SPBRG	set	411
  3518  019A                     _TX1REG	set	410
  3519  0CF2                     _BRGH	set	3314
  3520  0CEC                     _CREN	set	3308
  3521  0CEF                     _SPEN	set	3311
  3522  0CF4                     _SYNC	set	3316
  3523  0CF5                     _TXEN	set	3317
  3524  0212                     _SSPADD	set	530
  3525  0211                     _SSPBUF	set	529
  3526  0216                     _SSPCON2bits	set	534
  3527  0215                     _SSPCONbits	set	533
  3528  0E0F                     _PPSLOCK	set	3599
  3529  0E0F                     _PPSLOCKbits	set	3599
  3530  0E24                     _RXPPSbits	set	3620
  3531  0E20                     _SSPCLKPPSbits	set	3616
  3532  0E21                     _SSPDATPPSbits	set	3617
  3533  0E9A                     _RB2PPSbits	set	3738
  3534  0EA4                     _RC4PPSbits	set	3748
  3535  0EA5                     _RC5PPSbits	set	3749
  3536  0536                     STR_32:	
  3537  0536  3474               	retlw	116	;'t'
  3538  0537  3430               	retlw	48	;'0'
  3539  0538  342E               	retlw	46	;'.'
  3540  0539  3474               	retlw	116	;'t'
  3541  053A  3478               	retlw	120	;'x'
  3542  053B  3474               	retlw	116	;'t'
  3543  053C  343D               	retlw	61	;'='
  3544  053D  3422               	retlw	34	;'"'
  3545  053E  344F               	retlw	79	;'O'
  3546  053F  3446               	retlw	70	;'F'
  3547  0540  3446               	retlw	70	;'F'
  3548  0541  3422               	retlw	34	;'"'
  3549  0542  3400               	retlw	0
  3550  0543                     STR_30:	
  3551  0543  3474               	retlw	116	;'t'
  3552  0544  3430               	retlw	48	;'0'
  3553  0545  342E               	retlw	46	;'.'
  3554  0546  3474               	retlw	116	;'t'
  3555  0547  3478               	retlw	120	;'x'
  3556  0548  3474               	retlw	116	;'t'
  3557  0549  343D               	retlw	61	;'='
  3558  054A  3422               	retlw	34	;'"'
  3559  054B  344F               	retlw	79	;'O'
  3560  054C  344E               	retlw	78	;'N'
  3561  054D  3422               	retlw	34	;'"'
  3562  054E  3400               	retlw	0
  3563  054F                     STR_45:	
  3564  054F  3425               	retlw	37	;'%'
  3565  0550  346C               	retlw	108	;'l'
  3566  0551  3475               	retlw	117	;'u'
  3567  0552  342E               	retlw	46	;'.'
  3568  0553  3425               	retlw	37	;'%'
  3569  0554  3436               	retlw	54	;'6'
  3570  0555  342E               	retlw	46	;'.'
  3571  0556  3436               	retlw	54	;'6'
  3572  0557  346C               	retlw	108	;'l'
  3573  0558  3475               	retlw	117	;'u'
  3574  0559  3400               	retlw	0
  3575  055A                     STR_33:	
  3576  055A  3464               	retlw	100	;'d'
  3577  055B  3469               	retlw	105	;'i'
  3578  055C  346D               	retlw	109	;'m'
  3579  055D  343D               	retlw	61	;'='
  3580  055E  3431               	retlw	49	;'1'
  3581  055F  3430               	retlw	48	;'0'
  3582  0560  3430               	retlw	48	;'0'
  3583  0561  3400               	retlw	0
  3584  0562                     STR_28:	
  3585  0562  3470               	retlw	112	;'p'
  3586  0563  3461               	retlw	97	;'a'
  3587  0564  3467               	retlw	103	;'g'
  3588  0565  3465               	retlw	101	;'e'
  3589  0566  3420               	retlw	32	;' '
  3590  0567  3430               	retlw	48	;'0'
  3591  0568  3400               	retlw	0
  3592  0569                     STR_31:	
  3593  0569  3464               	retlw	100	;'d'
  3594  056A  3469               	retlw	105	;'i'
  3595  056B  346D               	retlw	109	;'m'
  3596  056C  343D               	retlw	61	;'='
  3597  056D  3433               	retlw	51	;'3'
  3598  056E  3430               	retlw	48	;'0'
  3599  056F  3400               	retlw	0
  3600  0570                     STR_42:	
  3601  0570  3420               	retlw	32	;' '
  3602  0571  3420               	retlw	32	;' '
  3603  0572  3420               	retlw	32	;' '
  3604  0573  3420               	retlw	32	;' '
  3605  0574  3420               	retlw	32	;' '
  3606  0575  3400               	retlw	0
  3607  0576                     STR_17:	
  3608  0576  346D               	retlw	109	;'m'
  3609  0577  346F               	retlw	111	;'o'
  3610  0578  346E               	retlw	110	;'n'
  3611  0579  3474               	retlw	116	;'t'
  3612  057A  3468               	retlw	104	;'h'
  3613  057B  3400               	retlw	0
  3614  057C                     STR_44:	
  3615  057C  3449               	retlw	73	;'I'
  3616  057D  346E               	retlw	110	;'n'
  3617  057E  3469               	retlw	105	;'i'
  3618  057F  3474               	retlw	116	;'t'
  3619  0580  3400               	retlw	0
  3620  0581                     STR_16:	
  3621  0581  3464               	retlw	100	;'d'
  3622  0582  3461               	retlw	97	;'a'
  3623  0583  3474               	retlw	116	;'t'
  3624  0584  3465               	retlw	101	;'e'
  3625  0585  3400               	retlw	0
  3626  0586                     STR_29:	
  3627  0586  3465               	retlw	101	;'e'
  3628  0587  346E               	retlw	110	;'n'
  3629  0588  3465               	retlw	101	;'e'
  3630  0589  3472               	retlw	114	;'r'
  3631  058A  3400               	retlw	0
  3632  058B                     STR_14:	
  3633  058B  3468               	retlw	104	;'h'
  3634  058C  346F               	retlw	111	;'o'
  3635  058D  3475               	retlw	117	;'u'
  3636  058E  3472               	retlw	114	;'r'
  3637  058F  3400               	retlw	0
  3638  0590                     STR_15:	
  3639  0590  346D               	retlw	109	;'m'
  3640  0591  3469               	retlw	105	;'i'
  3641  0592  346E               	retlw	110	;'n'
  3642  0593  3473               	retlw	115	;'s'
  3643  0594  3400               	retlw	0
  3644  0595                     STR_3:	
  3645  0595  3446               	retlw	70	;'F'
  3646  0596  3445               	retlw	69	;'E'
  3647  0597  3442               	retlw	66	;'B'
  3648  0598  3400               	retlw	0
  3649  0599                     STR_13:	
  3650  0599  3444               	retlw	68	;'D'
  3651  059A  3445               	retlw	69	;'E'
  3652  059B  3443               	retlw	67	;'C'
  3653  059C  3400               	retlw	0
  3654  059D                     STR_9:	
  3655  059D  3441               	retlw	65	;'A'
  3656  059E  3455               	retlw	85	;'U'
  3657  059F  3447               	retlw	71	;'G'
  3658  05A0  3400               	retlw	0
  3659  05A1                     STR_8:	
  3660  05A1  344A               	retlw	74	;'J'
  3661  05A2  3455               	retlw	85	;'U'
  3662  05A3  344C               	retlw	76	;'L'
  3663  05A4  3400               	retlw	0
  3664  05A5                     STR_1:	
  3665  05A5  344D               	retlw	77	;'M'
  3666  05A6  344D               	retlw	77	;'M'
  3667  05A7  344D               	retlw	77	;'M'
  3668  05A8  3400               	retlw	0
  3669  05A9                     STR_2:	
  3670  05A9  344A               	retlw	74	;'J'
  3671  05AA  3441               	retlw	65	;'A'
  3672  05AB  344E               	retlw	78	;'N'
  3673  05AC  3400               	retlw	0
  3674  05AD                     STR_7:	
  3675  05AD  344A               	retlw	74	;'J'
  3676  05AE  3455               	retlw	85	;'U'
  3677  05AF  344E               	retlw	78	;'N'
  3678  05B0  3400               	retlw	0
  3679  05B1                     STR_10:	
  3680  05B1  3453               	retlw	83	;'S'
  3681  05B2  3445               	retlw	69	;'E'
  3682  05B3  3450               	retlw	80	;'P'
  3683  05B4  3400               	retlw	0
  3684  05B5                     STR_4:	
  3685  05B5  344D               	retlw	77	;'M'
  3686  05B6  3441               	retlw	65	;'A'
  3687  05B7  3452               	retlw	82	;'R'
  3688  05B8  3400               	retlw	0
  3689  05B9                     STR_5:	
  3690  05B9  3441               	retlw	65	;'A'
  3691  05BA  3450               	retlw	80	;'P'
  3692  05BB  3452               	retlw	82	;'R'
  3693  05BC  3400               	retlw	0
  3694  05BD                     STR_11:	
  3695  05BD  344F               	retlw	79	;'O'
  3696  05BE  3443               	retlw	67	;'C'
  3697  05BF  3454               	retlw	84	;'T'
  3698  05C0  3400               	retlw	0
  3699  05C1                     STR_12:	
  3700  05C1  344E               	retlw	78	;'N'
  3701  05C2  344F               	retlw	79	;'O'
  3702  05C3  3456               	retlw	86	;'V'
  3703  05C4  3400               	retlw	0
  3704  05C5                     STR_6:	
  3705  05C5  344D               	retlw	77	;'M'
  3706  05C6  3441               	retlw	65	;'A'
  3707  05C7  3459               	retlw	89	;'Y'
  3708  05C8  3400               	retlw	0
  3709  05C9                     STR_18:	
  3710  05C9  3473               	retlw	115	;'s'
  3711  05CA  3465               	retlw	101	;'e'
  3712  05CB  3474               	retlw	116	;'t'
  3713  05CC  3400               	retlw	0
  3714  05CD                     STR_39:	
  3715  05CD  343A               	retlw	58	;':'
  3716  05CE  3400               	retlw	0
  3717  0570                     
  3718                           ; #config settings
  3719  0000                     
  3720                           	psect	cinit
  3721  018C                     start_initialization:	
  3722  018C                     __initialization:	
  3723                           
  3724                           ; Initialize objects allocated to BANK1
  3725  018C  30FC               	movlw	low __pidataBANK1
  3726  018D  0084               	movwf	4
  3727  018E  3087               	movlw	(high __pidataBANK1)| (0+128)
  3728  018F  0085               	movwf	5
  3729  0190  30E9               	movlw	low __pdataBANK1
  3730  0191  0086               	movwf	6
  3731  0192  3000               	movlw	high __pdataBANK1
  3732  0193  0087               	movwf	7
  3733  0194  3003               	movlw	3
  3734  0195  3195  25D5  3181   	fcall	init_ram
  3735                           
  3736                           ; Initialize objects allocated to BANK3
  3737  0198  30E2               	movlw	low __pidataBANK3
  3738  0199  0084               	movwf	4
  3739  019A  3096               	movlw	(high __pidataBANK3)| (0+128)
  3740  019B  0085               	movwf	5
  3741  019C  30BB               	movlw	low __pdataBANK3
  3742  019D  0086               	movwf	6
  3743  019E  3001               	movlw	high __pdataBANK3
  3744  019F  0087               	movwf	7
  3745  01A0  301A               	movlw	26
  3746  01A1  3195  25D5  3181   	fcall	init_ram
  3747                           
  3748                           ; Clear objects allocated to BANK0
  3749  01A4  3051               	movlw	low __pbssBANK0
  3750  01A5  0084               	movwf	4
  3751  01A6  3000               	movlw	high __pbssBANK0
  3752  01A7  0085               	movwf	5
  3753  01A8  3010               	movlw	16
  3754  01A9  3195  25CF  3181   	fcall	clear_ram0
  3755                           
  3756                           ; Clear objects allocated to BANK1
  3757  01AC  30A0               	movlw	low __pbssBANK1
  3758  01AD  0084               	movwf	4
  3759  01AE  3000               	movlw	high __pbssBANK1
  3760  01AF  0085               	movwf	5
  3761  01B0  3038               	movlw	56
  3762  01B1  3195  25CF  3181   	fcall	clear_ram0
  3763                           
  3764                           ; Clear objects allocated to BANK2
  3765  01B4  3020               	movlw	low __pbssBANK2
  3766  01B5  0084               	movwf	4
  3767  01B6  3001               	movlw	high __pbssBANK2
  3768  01B7  0085               	movwf	5
  3769  01B8  304E               	movlw	78
  3770  01B9  3195  25CF  3181   	fcall	clear_ram0
  3771                           
  3772                           ; Clear objects allocated to BANK3
  3773  01BC  30A0               	movlw	low __pbssBANK3
  3774  01BD  0084               	movwf	4
  3775  01BE  3001               	movlw	high __pbssBANK3
  3776  01BF  0085               	movwf	5
  3777  01C0  301B               	movlw	27
  3778  01C1  3195  25CF  3181   	fcall	clear_ram0
  3779                           
  3780                           ; Clear objects allocated to BANK4
  3781  01C4  3020               	movlw	low __pbssBANK4
  3782  01C5  0084               	movwf	4
  3783  01C6  3002               	movlw	high __pbssBANK4
  3784  01C7  0085               	movwf	5
  3785  01C8  3032               	movlw	50
  3786  01C9  3195  25CF         	fcall	clear_ram0
  3787  01CB                     end_of_initialization:	
  3788                           ;End of C runtime variable initialization code
  3789                           
  3790  01CB                     __end_of__initialization:	
  3791  01CB  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3792  01CC  0020               	movlb	0
  3793  01CD  3185  2DCF         	ljmp	_main	;jump to C main() function
  3794                           
  3795                           	psect	bssBANK0
  3796  0051                     __pbssBANK0:	
  3797  0051                     _date1:	
  3798  0051                     	ds	1
  3799  0052                     _date2:	
  3800  0052                     	ds	1
  3801  0053                     _dy1:	
  3802  0053                     	ds	1
  3803  0054                     _dy2:	
  3804  0054                     	ds	1
  3805  0055                     _hr1:	
  3806  0055                     	ds	1
  3807  0056                     _hr2:	
  3808  0056                     	ds	1
  3809  0057                     _hr3:	
  3810  0057                     	ds	1
  3811  0058                     _min1:	
  3812  0058                     	ds	1
  3813  0059                     _min2:	
  3814  0059                     	ds	1
  3815  005A                     _mn1:	
  3816  005A                     	ds	1
  3817  005B                     _mn2:	
  3818  005B                     	ds	1
  3819  005C                     _on:	
  3820  005C                     	ds	1
  3821  005D                     _sec1:	
  3822  005D                     	ds	1
  3823  005E                     _sec2:	
  3824  005E                     	ds	1
  3825  005F                     _yr1:	
  3826  005F                     	ds	1
  3827  0060                     _yr2:	
  3828  0060                     	ds	1
  3829                           
  3830                           	psect	bssBANK1
  3831  00A0                     __pbssBANK1:	
  3832  00A0                     isr@count:	
  3833  00A0                     	ds	2
  3834  00A2                     _y:	
  3835  00A2                     	ds	1
  3836  00A3                     _date_string:	
  3837  00A3                     	ds	10
  3838  00AD                     _hour_string:	
  3839  00AD                     	ds	10
  3840  00B7                     _min_string:	
  3841  00B7                     	ds	10
  3842  00C1                     _time_string:	
  3843  00C1                     	ds	10
  3844  00CB                     _min_arr:	
  3845  00CB                     	ds	8
  3846  00D3                     _dt_arr:	
  3847  00D3                     	ds	5
  3848                           
  3849                           	psect	dataBANK1
  3850  00E9                     __pdataBANK1:	
  3851  00E9                     _d:	
  3852  00E9                     	ds	1
  3853  00EA                     _m:	
  3854  00EA                     	ds	1
  3855  00EB                     _x:	
  3856  00EB                     	ds	1
  3857                           
  3858                           	psect	bssBANK2
  3859  0120                     __pbssBANK2:	
  3860  0120                     _date1_string:	
  3861  0120                     	ds	10
  3862  012A                     _date_arr:	
  3863  012A                     	ds	10
  3864  0134                     _hour_arr:	
  3865  0134                     	ds	10
  3866  013E                     _minute_arr:	
  3867  013E                     	ds	10
  3868  0148                     _month_arr:	
  3869  0148                     	ds	10
  3870  0152                     _month_string:	
  3871  0152                     	ds	10
  3872  015C                     _mth_string:	
  3873  015C                     	ds	10
  3874  0166                     _hr_arr:	
  3875  0166                     	ds	8
  3876                           
  3877                           	psect	bssBANK3
  3878  01A0                     __pbssBANK3:	
  3879  01A0                     _mth_arr:	
  3880  01A0                     	ds	10
  3881  01AA                     ftoa@buf:	
  3882  01AA                     	ds	17
  3883                           
  3884                           	psect	dataBANK3
  3885  01BB                     __pdataBANK3:	
  3886  01BB                     _months:	
  3887  01BB                     	ds	26
  3888                           
  3889                           	psect	bssBANK4
  3890  0220                     __pbssBANK4:	
  3891  0220                     _buf:	
  3892  0220                     	ds	50
  3893                           
  3894                           	psect	inittext
  3895  15D5                     init_ram:	
  3896  15D5  00FE               	movwf	126
  3897  15D6                     initloop:	
  3898  15D6  0012               	moviw fsr0++
  3899  15D7  001E               	movwi fsr1++
  3900  15D8  0BFE               	decfsz	126,f
  3901  15D9  2DD6               	goto	initloop
  3902  15DA  3400               	retlw	0
  3903                           
  3904                           	psect	clrtext
  3905  15CF                     clear_ram0:	
  3906                           ;	Called with FSR0 containing the base address, and
  3907                           ;	WREG with the size to clear
  3908                           
  3909  15CF  0064               	clrwdt	;clear the watchdog before getting into this loop
  3910  15D0                     clrloop0:	
  3911  15D0  0180               	clrf	0	;clear RAM location pointed to by FSR
  3912  15D1  3101               	addfsr 0,1
  3913  15D2  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3914  15D3  2DD0               	goto	clrloop0	;have we reached the end yet?
  3915  15D4  3400               	retlw	0	;all done for this memory range, return
  3916                           
  3917                           	psect	cstackBANK3
  3918  01D5                     __pcstackBANK3:	
  3919  01D5                     ??_main:	
  3920                           
  3921                           ; 1 bytes @ 0x0
  3922  01D5                     	ds	6
  3923  01DB                     main@hour1:	
  3924                           
  3925                           ; 1 bytes @ 0x6
  3926  01DB                     	ds	1
  3927  01DC                     main@min1:	
  3928                           
  3929                           ; 1 bytes @ 0x7
  3930  01DC                     	ds	1
  3931  01DD                     main@date3:	
  3932                           
  3933                           ; 1 bytes @ 0x8
  3934  01DD                     	ds	1
  3935  01DE                     main@month1:	
  3936                           
  3937                           ; 1 bytes @ 0x9
  3938  01DE                     	ds	1
  3939  01DF                     main@set1:	
  3940                           
  3941                           ; 1 bytes @ 0xA
  3942  01DF                     	ds	1
  3943  01E0                     main@sec:	
  3944                           
  3945                           ; 1 bytes @ 0xB
  3946  01E0                     	ds	1
  3947  01E1                     main@min:	
  3948                           
  3949                           ; 1 bytes @ 0xC
  3950  01E1                     	ds	1
  3951  01E2                     main@hr:	
  3952                           
  3953                           ; 1 bytes @ 0xD
  3954  01E2                     	ds	1
  3955  01E3                     main@day:	
  3956                           
  3957                           ; 1 bytes @ 0xE
  3958  01E3                     	ds	1
  3959  01E4                     main@date:	
  3960                           
  3961                           ; 1 bytes @ 0xF
  3962  01E4                     	ds	1
  3963  01E5                     main@month:	
  3964                           
  3965                           ; 1 bytes @ 0x10
  3966  01E5                     	ds	1
  3967  01E6                     main@year:	
  3968                           
  3969                           ; 1 bytes @ 0x11
  3970  01E6                     	ds	1
  3971                           
  3972                           	psect	cstackBANK1
  3973  00D8                     __pcstackBANK1:	
  3974  00D8                     ??_OLED_Write_String:	
  3975  00D8                     OLED_Clear@row:	
  3976                           ; 1 bytes @ 0x0
  3977                           
  3978                           
  3979                           ; 2 bytes @ 0x0
  3980  00D8                     	ds	2
  3981  00DA                     OLED_Clear@col:	
  3982                           
  3983                           ; 2 bytes @ 0x2
  3984  00DA                     	ds	2
  3985  00DC                     ??_initMain:	
  3986                           
  3987                           ; 1 bytes @ 0x4
  3988  00DC                     	ds	6
  3989  00E2                     initMain@sec:	
  3990                           
  3991                           ; 1 bytes @ 0xA
  3992  00E2                     	ds	1
  3993  00E3                     initMain@min:	
  3994                           
  3995                           ; 1 bytes @ 0xB
  3996  00E3                     	ds	1
  3997  00E4                     initMain@hr:	
  3998                           
  3999                           ; 1 bytes @ 0xC
  4000  00E4                     	ds	1
  4001  00E5                     initMain@day:	
  4002                           
  4003                           ; 1 bytes @ 0xD
  4004  00E5                     	ds	1
  4005  00E6                     initMain@date:	
  4006                           
  4007                           ; 1 bytes @ 0xE
  4008  00E6                     	ds	1
  4009  00E7                     initMain@month:	
  4010                           
  4011                           ; 1 bytes @ 0xF
  4012  00E7                     	ds	1
  4013  00E8                     initMain@year:	
  4014                           
  4015                           ; 1 bytes @ 0x10
  4016  00E8                     	ds	1
  4017                           
  4018                           	psect	cstackCOMMON
  4019  0070                     __pcstackCOMMON:	
  4020  0070                     ?_initMain:	
  4021  0070                     ?_green:	
  4022                           ; 1 bytes @ 0x0
  4023                           
  4024  0070                     ?_DS1302_Reset:	
  4025                           ; 1 bytes @ 0x0
  4026                           
  4027  0070                     ?_DS1302_WriteByte:	
  4028                           ; 1 bytes @ 0x0
  4029                           
  4030  0070                     ?_DS1302_ReadByte:	
  4031                           ; 1 bytes @ 0x0
  4032                           
  4033  0070                     ??_DS1302_ReadByte:	
  4034                           ; 1 bytes @ 0x0
  4035                           
  4036  0070                     ?_get_dec:	
  4037                           ; 1 bytes @ 0x0
  4038                           
  4039  0070                     ?_get_bcd:	
  4040                           ; 1 bytes @ 0x0
  4041                           
  4042  0070                     ?_internal_16:	
  4043                           ; 1 bytes @ 0x0
  4044                           
  4045  0070                     ?_I2C_Init:	
  4046                           ; 1 bytes @ 0x0
  4047                           
  4048  0070                     ?_Send_I2C_StartBit:	
  4049                           ; 1 bytes @ 0x0
  4050                           
  4051  0070                     ?_Send_I2C_StopBit:	
  4052                           ; 1 bytes @ 0x0
  4053                           
  4054  0070                     ?_main:	
  4055                           ; 1 bytes @ 0x0
  4056                           
  4057  0070                     ?_isr:	
  4058                           ; 1 bytes @ 0x0
  4059                           
  4060  0070                     ?_OLED_Command:	
  4061                           ; 1 bytes @ 0x0
  4062                           
  4063  0070                     ?_OLED_Init:	
  4064                           ; 1 bytes @ 0x0
  4065                           
  4066  0070                     ?_OLED_PutChar:	
  4067                           ; 1 bytes @ 0x0
  4068                           
  4069  0070                     ?_OLED_Clear:	
  4070                           ; 1 bytes @ 0x0
  4071                           
  4072  0070                     ?_EUSART_Read:	
  4073                           ; 1 bytes @ 0x0
  4074                           
  4075  0070                     ?_EUSART_Write:	
  4076                           ; 1 bytes @ 0x0
  4077                           
  4078  0070                     ?i1_DS1302_Reset:	
  4079                           ; 1 bytes @ 0x0
  4080                           
  4081  0070                     ??i1_DS1302_Reset:	
  4082                           ; 1 bytes @ 0x0
  4083                           
  4084  0070                     ?i1_DS1302_WriteByte:	
  4085                           ; 1 bytes @ 0x0
  4086                           
  4087  0070                     ??i1_DS1302_WriteByte:	
  4088                           ; 1 bytes @ 0x0
  4089                           
  4090  0070                     ?i1_EUSART_Write:	
  4091                           ; 1 bytes @ 0x0
  4092                           
  4093  0070                     ??i1_EUSART_Write:	
  4094                           ; 1 bytes @ 0x0
  4095                           
  4096  0070                     ?i1___bmul:	
  4097                           ; 1 bytes @ 0x0
  4098                           
  4099  0070                     ?i1_strcat:	
  4100                           ; 1 bytes @ 0x0
  4101                           
  4102  0070                     ?i1_strcpy:	
  4103                           ; 1 bytes @ 0x0
  4104                           
  4105  0070                     ?i1___lwdiv:	
  4106                           ; 1 bytes @ 0x0
  4107                           
  4108  0070                     ?i1___lwmod:	
  4109                           ; 2 bytes @ 0x0
  4110                           
  4111  0070                     i1EUSART_Write@txData:	
  4112                           ; 2 bytes @ 0x0
  4113                           
  4114  0070                     i1___bmul@multiplicand:	
  4115                           ; 1 bytes @ 0x0
  4116                           
  4117  0070                     i1___lwdiv@divisor:	
  4118                           ; 1 bytes @ 0x0
  4119                           
  4120  0070                     i1___lwmod@divisor:	
  4121                           ; 2 bytes @ 0x0
  4122                           
  4123  0070                     i1strcat@to:	
  4124                           ; 2 bytes @ 0x0
  4125                           
  4126  0070                     i1strcpy@to:	
  4127                           ; 2 bytes @ 0x0
  4128                           
  4129                           
  4130                           ; 2 bytes @ 0x0
  4131  0070                     	ds	1
  4132  0071                     ?i1_EUSART_Write_Text:	
  4133  0071                     ??i1___bmul:	
  4134                           ; 1 bytes @ 0x1
  4135                           
  4136  0071                     DS1302_ReadByte@TmpByte:	
  4137                           ; 1 bytes @ 0x1
  4138                           
  4139  0071                     i1DS1302_WriteByte@W_Byte:	
  4140                           ; 1 bytes @ 0x1
  4141                           
  4142  0071                     i1EUSART_Write_Text@text:	
  4143                           ; 1 bytes @ 0x1
  4144                           
  4145                           
  4146                           ; 2 bytes @ 0x1
  4147  0071                     	ds	1
  4148  0072                     DS1302_ReadByte@R_Byte:	
  4149  0072                     i1DS1302_WriteByte@i:	
  4150                           ; 1 bytes @ 0x2
  4151                           
  4152  0072                     i1___bmul@product:	
  4153                           ; 1 bytes @ 0x2
  4154                           
  4155  0072                     i1___lwdiv@dividend:	
  4156                           ; 1 bytes @ 0x2
  4157                           
  4158  0072                     i1___lwmod@dividend:	
  4159                           ; 2 bytes @ 0x2
  4160                           
  4161  0072                     i1strcat@from:	
  4162                           ; 2 bytes @ 0x2
  4163                           
  4164  0072                     i1strcpy@from:	
  4165                           ; 2 bytes @ 0x2
  4166                           
  4167                           
  4168                           ; 2 bytes @ 0x2
  4169  0072                     	ds	1
  4170  0073                     ??i1_EUSART_Write_Text:	
  4171  0073                     DS1302_ReadByte@i:	
  4172                           ; 1 bytes @ 0x3
  4173                           
  4174  0073                     i1___bmul@multiplier:	
  4175                           ; 1 bytes @ 0x3
  4176                           
  4177                           
  4178                           ; 1 bytes @ 0x3
  4179  0073                     	ds	1
  4180  0074                     ??_get_dec:	
  4181  0074                     ??i1___lwdiv:	
  4182                           ; 1 bytes @ 0x4
  4183                           
  4184  0074                     ??i1___lwmod:	
  4185                           ; 1 bytes @ 0x4
  4186                           
  4187  0074                     ??i1_strcat:	
  4188                           ; 1 bytes @ 0x4
  4189                           
  4190  0074                     ??i1_strcpy:	
  4191                           ; 1 bytes @ 0x4
  4192                           
  4193  0074                     i1EUSART_Write_Text@i:	
  4194                           ; 1 bytes @ 0x4
  4195                           
  4196  0074                     i1strcat@cp:	
  4197                           ; 2 bytes @ 0x4
  4198                           
  4199  0074                     i1strcpy@cp:	
  4200                           ; 2 bytes @ 0x4
  4201                           
  4202                           
  4203                           ; 2 bytes @ 0x4
  4204  0074                     	ds	1
  4205  0075                     i1___lwmod@counter:	
  4206  0075                     i1___lwdiv@quotient:	
  4207                           ; 1 bytes @ 0x5
  4208                           
  4209                           
  4210                           ; 2 bytes @ 0x5
  4211  0075                     	ds	1
  4212  0076                     ?i1_touchscreen_data:	
  4213  0076                     i1touchscreen_data@cmd:	
  4214                           ; 1 bytes @ 0x6
  4215                           
  4216                           
  4217                           ; 2 bytes @ 0x6
  4218  0076                     	ds	1
  4219  0077                     get_dec@var2:	
  4220  0077                     i1___lwdiv@counter:	
  4221                           ; 1 bytes @ 0x7
  4222                           
  4223                           
  4224                           ; 1 bytes @ 0x7
  4225  0077                     	ds	1
  4226  0078                     ?i1_utoa:	
  4227  0078                     get_dec@var:	
  4228                           ; 1 bytes @ 0x8
  4229                           
  4230  0078                     i1touchscreen_data@string2:	
  4231                           ; 1 bytes @ 0x8
  4232                           
  4233  0078                     i1utoa@buf:	
  4234                           ; 2 bytes @ 0x8
  4235                           
  4236                           
  4237                           ; 2 bytes @ 0x8
  4238  0078                     	ds	2
  4239  007A                     ??i1_touchscreen_data:	
  4240  007A                     i1utoa@val:	
  4241                           ; 1 bytes @ 0xA
  4242                           
  4243                           
  4244                           ; 2 bytes @ 0xA
  4245  007A                     	ds	2
  4246  007C                     i1utoa@base:	
  4247                           
  4248                           ; 2 bytes @ 0xC
  4249  007C                     	ds	2
  4250  007E                     ??i1_itoa:	
  4251                           
  4252                           	psect	cstackBANK0
  4253  0020                     __pcstackBANK0:	
  4254                           ; 1 bytes @ 0xE
  4255                           
  4256  0020                     ??i1_utoa:	
  4257                           
  4258                           ; 1 bytes @ 0x0
  4259  0020                     	ds	1
  4260  0021                     i1utoa@v:	
  4261                           
  4262                           ; 2 bytes @ 0x1
  4263  0021                     	ds	2
  4264  0023                     i1utoa@c:	
  4265                           
  4266                           ; 1 bytes @ 0x3
  4267  0023                     	ds	1
  4268  0024                     ?i1_itoa:	
  4269  0024                     i1itoa@buf:	
  4270                           ; 1 bytes @ 0x4
  4271                           
  4272                           
  4273                           ; 2 bytes @ 0x4
  4274  0024                     	ds	2
  4275  0026                     i1itoa@val:	
  4276                           
  4277                           ; 2 bytes @ 0x6
  4278  0026                     	ds	2
  4279  0028                     i1itoa@base:	
  4280                           
  4281                           ; 2 bytes @ 0x8
  4282  0028                     	ds	2
  4283  002A                     i1itoa@cp:	
  4284                           
  4285                           ; 2 bytes @ 0xA
  4286  002A                     	ds	2
  4287  002C                     ??_isr:	
  4288                           
  4289                           ; 1 bytes @ 0xC
  4290  002C                     	ds	3
  4291  002F                     ?_EUSART_Read_Text:	
  4292  002F                     ??_DS1302_Reset:	
  4293                           ; 1 bytes @ 0xF
  4294                           
  4295  002F                     ??_DS1302_WriteByte:	
  4296                           ; 1 bytes @ 0xF
  4297                           
  4298  002F                     ?_memmove:	
  4299                           ; 1 bytes @ 0xF
  4300                           
  4301  002F                     ?_strchr:	
  4302                           ; 1 bytes @ 0xF
  4303                           
  4304  002F                     ??_internal_16:	
  4305                           ; 1 bytes @ 0xF
  4306                           
  4307  002F                     ??_I2C_Init:	
  4308                           ; 1 bytes @ 0xF
  4309                           
  4310  002F                     ?_Send_I2C_Data:	
  4311                           ; 1 bytes @ 0xF
  4312                           
  4313  002F                     ??_Send_I2C_StartBit:	
  4314                           ; 1 bytes @ 0xF
  4315                           
  4316  002F                     ??_Send_I2C_StopBit:	
  4317                           ; 1 bytes @ 0xF
  4318                           
  4319  002F                     ??_EUSART_Read:	
  4320                           ; 1 bytes @ 0xF
  4321                           
  4322  002F                     ??_EUSART_Write:	
  4323                           ; 1 bytes @ 0xF
  4324                           
  4325  002F                     ?___bmul:	
  4326                           ; 1 bytes @ 0xF
  4327                           
  4328  002F                     ?_strcpy:	
  4329                           ; 1 bytes @ 0xF
  4330                           
  4331  002F                     ?_strcat:	
  4332                           ; 2 bytes @ 0xF
  4333                           
  4334  002F                     ?_strlen:	
  4335                           ; 2 bytes @ 0xF
  4336                           
  4337  002F                     ?___awdiv:	
  4338                           ; 2 bytes @ 0xF
  4339                           
  4340  002F                     ?___lwdiv:	
  4341                           ; 2 bytes @ 0xF
  4342                           
  4343  002F                     ?___lwmod:	
  4344                           ; 2 bytes @ 0xF
  4345                           
  4346  002F                     ?___aldiv:	
  4347                           ; 2 bytes @ 0xF
  4348                           
  4349  002F                     EUSART_Write@txData:	
  4350                           ; 4 bytes @ 0xF
  4351                           
  4352  002F                     ___bmul@multiplicand:	
  4353                           ; 1 bytes @ 0xF
  4354                           
  4355  002F                     Send_I2C_Data@databyte:	
  4356                           ; 1 bytes @ 0xF
  4357                           
  4358  002F                     EUSART_Read_Text@length:	
  4359                           ; 2 bytes @ 0xF
  4360                           
  4361  002F                     ___awdiv@divisor:	
  4362                           ; 2 bytes @ 0xF
  4363                           
  4364  002F                     ___lwdiv@divisor:	
  4365                           ; 2 bytes @ 0xF
  4366                           
  4367  002F                     ___lwmod@divisor:	
  4368                           ; 2 bytes @ 0xF
  4369                           
  4370  002F                     memmove@s1:	
  4371                           ; 2 bytes @ 0xF
  4372                           
  4373  002F                     strcat@to:	
  4374                           ; 2 bytes @ 0xF
  4375                           
  4376  002F                     strcpy@to:	
  4377                           ; 2 bytes @ 0xF
  4378                           
  4379  002F                     strchr@chr:	
  4380                           ; 2 bytes @ 0xF
  4381                           
  4382  002F                     strlen@s:	
  4383                           ; 2 bytes @ 0xF
  4384                           
  4385  002F                     ___aldiv@divisor:	
  4386                           ; 2 bytes @ 0xF
  4387                           
  4388                           
  4389                           ; 4 bytes @ 0xF
  4390  002F                     	ds	1
  4391  0030                     ?_EUSART_Write_Text:	
  4392  0030                     ??___bmul:	
  4393                           ; 1 bytes @ 0x10
  4394                           
  4395  0030                     DS1302_WriteByte@W_Byte:	
  4396                           ; 1 bytes @ 0x10
  4397                           
  4398  0030                     EUSART_Write_Text@text:	
  4399                           ; 1 bytes @ 0x10
  4400                           
  4401                           
  4402                           ; 2 bytes @ 0x10
  4403  0030                     	ds	1
  4404  0031                     ??_EUSART_Read_Text:	
  4405  0031                     ??_strlen:	
  4406                           ; 1 bytes @ 0x11
  4407                           
  4408  0031                     ??_strchr:	
  4409                           ; 1 bytes @ 0x11
  4410                           
  4411  0031                     ??_Send_I2C_Data:	
  4412                           ; 1 bytes @ 0x11
  4413                           
  4414  0031                     ??_OLED_Command:	
  4415                           ; 1 bytes @ 0x11
  4416                           
  4417  0031                     DS1302_WriteByte@i:	
  4418                           ; 1 bytes @ 0x11
  4419                           
  4420  0031                     ___bmul@product:	
  4421                           ; 1 bytes @ 0x11
  4422                           
  4423  0031                     strchr@ptr:	
  4424                           ; 1 bytes @ 0x11
  4425                           
  4426  0031                     ___awdiv@dividend:	
  4427                           ; 1 bytes @ 0x11
  4428                           
  4429  0031                     ___lwdiv@dividend:	
  4430                           ; 2 bytes @ 0x11
  4431                           
  4432  0031                     ___lwmod@dividend:	
  4433                           ; 2 bytes @ 0x11
  4434                           
  4435  0031                     memmove@n:	
  4436                           ; 2 bytes @ 0x11
  4437                           
  4438  0031                     strcat@from:	
  4439                           ; 2 bytes @ 0x11
  4440                           
  4441  0031                     strcpy@from:	
  4442                           ; 2 bytes @ 0x11
  4443                           
  4444                           
  4445                           ; 2 bytes @ 0x11
  4446  0031                     	ds	1
  4447  0032                     ??_EUSART_Write_Text:	
  4448  0032                     ___bmul@multiplier:	
  4449                           ; 1 bytes @ 0x12
  4450                           
  4451                           
  4452                           ; 1 bytes @ 0x12
  4453  0032                     	ds	1
  4454  0033                     ??_strcpy:	
  4455  0033                     ??_strcat:	
  4456                           ; 1 bytes @ 0x13
  4457                           
  4458  0033                     ??_memmove:	
  4459                           ; 1 bytes @ 0x13
  4460                           
  4461  0033                     ??___awdiv:	
  4462                           ; 1 bytes @ 0x13
  4463                           
  4464  0033                     ??___lwdiv:	
  4465                           ; 1 bytes @ 0x13
  4466                           
  4467  0033                     ??___lwmod:	
  4468                           ; 1 bytes @ 0x13
  4469                           
  4470  0033                     OLED_Command@temp:	
  4471                           ; 1 bytes @ 0x13
  4472                           
  4473  0033                     EUSART_Read_Text@Output:	
  4474                           ; 1 bytes @ 0x13
  4475                           
  4476  0033                     EUSART_Write_Text@i:	
  4477                           ; 1 bytes @ 0x13
  4478                           
  4479  0033                     strcat@cp:	
  4480                           ; 2 bytes @ 0x13
  4481                           
  4482  0033                     strcpy@cp:	
  4483                           ; 2 bytes @ 0x13
  4484                           
  4485  0033                     strlen@cp:	
  4486                           ; 2 bytes @ 0x13
  4487                           
  4488  0033                     ___aldiv@dividend:	
  4489                           ; 2 bytes @ 0x13
  4490                           
  4491                           
  4492                           ; 4 bytes @ 0x13
  4493  0033                     	ds	1
  4494  0034                     ??_OLED_Init:	
  4495  0034                     ?_OLED_YX:	
  4496                           ; 1 bytes @ 0x14
  4497                           
  4498  0034                     OLED_YX@Column:	
  4499                           ; 1 bytes @ 0x14
  4500                           
  4501  0034                     ___awdiv@counter:	
  4502                           ; 1 bytes @ 0x14
  4503                           
  4504  0034                     ___lwdiv@counter:	
  4505                           ; 1 bytes @ 0x14
  4506                           
  4507  0034                     ___lwmod@counter:	
  4508                           ; 1 bytes @ 0x14
  4509                           
  4510  0034                     EUSART_Read_Text@i_522:	
  4511                           ; 1 bytes @ 0x14
  4512                           
  4513                           
  4514                           ; 2 bytes @ 0x14
  4515  0034                     	ds	1
  4516  0035                     ?_touchscreen_data:	
  4517  0035                     ?_touchscreen_command:	
  4518                           ; 1 bytes @ 0x15
  4519                           
  4520  0035                     ??_OLED_YX:	
  4521                           ; 1 bytes @ 0x15
  4522                           
  4523  0035                     ?_strncmp:	
  4524                           ; 1 bytes @ 0x15
  4525                           
  4526  0035                     ___awdiv@sign:	
  4527                           ; 2 bytes @ 0x15
  4528                           
  4529  0035                     touchscreen_command@string:	
  4530                           ; 1 bytes @ 0x15
  4531                           
  4532  0035                     touchscreen_data@cmd:	
  4533                           ; 2 bytes @ 0x15
  4534                           
  4535  0035                     ___lwdiv@quotient:	
  4536                           ; 2 bytes @ 0x15
  4537                           
  4538  0035                     strncmp@s2:	
  4539                           ; 2 bytes @ 0x15
  4540                           
  4541                           
  4542                           ; 2 bytes @ 0x15
  4543  0035                     	ds	1
  4544  0036                     ___awdiv@quotient:	
  4545                           
  4546                           ; 2 bytes @ 0x16
  4547  0036                     	ds	1
  4548  0037                     ??_touchscreen_command:	
  4549  0037                     ??___aldiv:	
  4550                           ; 1 bytes @ 0x17
  4551                           
  4552  0037                     ?_utoa:	
  4553                           ; 1 bytes @ 0x17
  4554                           
  4555  0037                     memmove@d1:	
  4556                           ; 2 bytes @ 0x17
  4557                           
  4558  0037                     touchscreen_data@string2:	
  4559                           ; 1 bytes @ 0x17
  4560                           
  4561  0037                     utoa@buf:	
  4562                           ; 2 bytes @ 0x17
  4563                           
  4564  0037                     strncmp@len:	
  4565                           ; 2 bytes @ 0x17
  4566                           
  4567                           
  4568                           ; 2 bytes @ 0x17
  4569  0037                     	ds	1
  4570  0038                     ??_get_bcd:	
  4571  0038                     OLED_YX@Row:	
  4572                           ; 1 bytes @ 0x18
  4573                           
  4574  0038                     ___aldiv@counter:	
  4575                           ; 1 bytes @ 0x18
  4576                           
  4577  0038                     memmove@s:	
  4578                           ; 1 bytes @ 0x18
  4579                           
  4580                           
  4581                           ; 2 bytes @ 0x18
  4582  0038                     	ds	1
  4583  0039                     ??_touchscreen_data:	
  4584  0039                     ??_strncmp:	
  4585                           ; 1 bytes @ 0x19
  4586                           
  4587  0039                     ___aldiv@sign:	
  4588                           ; 1 bytes @ 0x19
  4589                           
  4590  0039                     utoa@val:	
  4591                           ; 1 bytes @ 0x19
  4592                           
  4593                           
  4594                           ; 2 bytes @ 0x19
  4595  0039                     	ds	1
  4596  003A                     memmove@d:	
  4597  003A                     ___aldiv@quotient:	
  4598                           ; 1 bytes @ 0x1A
  4599                           
  4600                           
  4601                           ; 4 bytes @ 0x1A
  4602  003A                     	ds	1
  4603  003B                     ??_OLED_PutChar:	
  4604  003B                     get_bcd@nibl:	
  4605                           ; 1 bytes @ 0x1B
  4606                           
  4607  003B                     strncmp@s1:	
  4608                           ; 1 bytes @ 0x1B
  4609                           
  4610  003B                     utoa@base:	
  4611                           ; 1 bytes @ 0x1B
  4612                           
  4613                           
  4614                           ; 2 bytes @ 0x1B
  4615  003B                     	ds	1
  4616  003C                     ?_strstr:	
  4617  003C                     get_bcd@data:	
  4618                           ; 1 bytes @ 0x1C
  4619                           
  4620  003C                     strstr@s2:	
  4621                           ; 1 bytes @ 0x1C
  4622                           
  4623                           
  4624                           ; 2 bytes @ 0x1C
  4625  003C                     	ds	1
  4626  003D                     ??_utoa:	
  4627  003D                     get_bcd@nibh:	
  4628                           ; 1 bytes @ 0x1D
  4629                           
  4630                           
  4631                           ; 1 bytes @ 0x1D
  4632  003D                     	ds	1
  4633  003E                     ??_strstr:	
  4634  003E                     ?_DS1302_Initialize:	
  4635                           ; 1 bytes @ 0x1E
  4636                           
  4637  003E                     ?_EUSART_Initialize:	
  4638                           ; 1 bytes @ 0x1E
  4639                           
  4640  003E                     DS1302_Initialize@min:	
  4641                           ; 1 bytes @ 0x1E
  4642                           
  4643  003E                     utoa@v:	
  4644                           ; 1 bytes @ 0x1E
  4645                           
  4646  003E                     EUSART_Initialize@baudrate:	
  4647                           ; 2 bytes @ 0x1E
  4648                           
  4649                           
  4650                           ; 4 bytes @ 0x1E
  4651  003E                     	ds	1
  4652  003F                     DS1302_Initialize@hr:	
  4653                           
  4654                           ; 1 bytes @ 0x1F
  4655  003F                     	ds	1
  4656  0040                     DS1302_Initialize@day:	
  4657  0040                     utoa@c:	
  4658                           ; 1 bytes @ 0x20
  4659                           
  4660                           
  4661                           ; 1 bytes @ 0x20
  4662  0040                     	ds	1
  4663  0041                     ?_itoa:	
  4664  0041                     DS1302_Initialize@date:	
  4665                           ; 2 bytes @ 0x21
  4666                           
  4667  0041                     strstr@s1:	
  4668                           ; 1 bytes @ 0x21
  4669                           
  4670  0041                     itoa@buf:	
  4671                           ; 1 bytes @ 0x21
  4672                           
  4673  0041                     OLED_PutChar@bytes:	
  4674                           ; 2 bytes @ 0x21
  4675                           
  4676                           
  4677                           ; 9 bytes @ 0x21
  4678  0041                     	ds	1
  4679  0042                     ??_green:	
  4680  0042                     ??_EUSART_Initialize:	
  4681                           ; 1 bytes @ 0x22
  4682                           
  4683  0042                     DS1302_Initialize@mth:	
  4684                           ; 1 bytes @ 0x22
  4685                           
  4686                           
  4687                           ; 1 bytes @ 0x22
  4688  0042                     	ds	1
  4689  0043                     DS1302_Initialize@year:	
  4690  0043                     itoa@val:	
  4691                           ; 1 bytes @ 0x23
  4692                           
  4693                           
  4694                           ; 2 bytes @ 0x23
  4695  0043                     	ds	1
  4696  0044                     ??_DS1302_Initialize:	
  4697                           
  4698                           ; 1 bytes @ 0x24
  4699  0044                     	ds	1
  4700  0045                     green@buf:	
  4701  0045                     DS1302_Initialize@sec:	
  4702                           ; 1 bytes @ 0x25
  4703                           
  4704  0045                     itoa@base:	
  4705                           ; 1 bytes @ 0x25
  4706                           
  4707                           
  4708                           ; 2 bytes @ 0x25
  4709  0045                     	ds	1
  4710  0046                     green@green1:	
  4711  0046                     DS1302_Initialize@sec1:	
  4712                           ; 1 bytes @ 0x26
  4713                           
  4714                           
  4715                           ; 1 bytes @ 0x26
  4716  0046                     	ds	1
  4717  0047                     ??_itoa:	
  4718  0047                     DS1302_Initialize@min1:	
  4719                           ; 1 bytes @ 0x27
  4720                           
  4721  0047                     itoa@cp:	
  4722                           ; 1 bytes @ 0x27
  4723                           
  4724                           
  4725                           ; 2 bytes @ 0x27
  4726  0047                     	ds	1
  4727  0048                     DS1302_Initialize@hr1:	
  4728                           
  4729                           ; 1 bytes @ 0x28
  4730  0048                     	ds	1
  4731  0049                     DS1302_Initialize@day1:	
  4732                           
  4733                           ; 1 bytes @ 0x29
  4734  0049                     	ds	1
  4735  004A                     DS1302_Initialize@date1:	
  4736  004A                     OLED_PutChar@base:	
  4737                           ; 1 bytes @ 0x2A
  4738                           
  4739  004A                     EUSART_Initialize@x:	
  4740                           ; 2 bytes @ 0x2A
  4741                           
  4742                           
  4743                           ; 2 bytes @ 0x2A
  4744  004A                     	ds	1
  4745  004B                     DS1302_Initialize@mth1:	
  4746                           
  4747                           ; 1 bytes @ 0x2B
  4748  004B                     	ds	1
  4749  004C                     DS1302_Initialize@year1:	
  4750  004C                     OLED_PutChar@ch:	
  4751                           ; 1 bytes @ 0x2C
  4752                           
  4753                           
  4754                           ; 1 bytes @ 0x2C
  4755  004C                     	ds	1
  4756  004D                     OLED_PutChar@i:	
  4757                           
  4758                           ; 2 bytes @ 0x2D
  4759  004D                     	ds	2
  4760  004F                     ??_OLED_Clear:	
  4761  004F                     ?_OLED_Write_String:	
  4762                           ; 1 bytes @ 0x2F
  4763                           
  4764  004F                     OLED_Write_String@s:	
  4765                           ; 1 bytes @ 0x2F
  4766                           
  4767                           
  4768                           ; 2 bytes @ 0x2F
  4769  004F                     	ds	2
  4770                           
  4771                           	psect	maintext
  4772  05CF                     __pmaintext:	
  4773 ;;
  4774 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
  4775 ;;
  4776 ;; *************** function _main *****************
  4777 ;; Defined at:
  4778 ;;		line 101 in file "Main.c"
  4779 ;; Parameters:    Size  Location     Type
  4780 ;;		None
  4781 ;; Auto vars:     Size  Location     Type
  4782 ;;  year            1   17[BANK3 ] unsigned char 
  4783 ;;  month           1   16[BANK3 ] unsigned char 
  4784 ;;  date            1   15[BANK3 ] unsigned char 
  4785 ;;  day             1   14[BANK3 ] unsigned char 
  4786 ;;  hr              1   13[BANK3 ] unsigned char 
  4787 ;;  min             1   12[BANK3 ] unsigned char 
  4788 ;;  sec             1   11[BANK3 ] unsigned char 
  4789 ;;  set1            1   10[BANK3 ] PTR unsigned char 
  4790 ;;		 -> NULL(0), buf(50), 
  4791 ;;  month1          1    9[BANK3 ] PTR unsigned char 
  4792 ;;		 -> NULL(0), buf(50), 
  4793 ;;  date3           1    8[BANK3 ] PTR unsigned char 
  4794 ;;		 -> NULL(0), buf(50), 
  4795 ;;  min1            1    7[BANK3 ] PTR unsigned char 
  4796 ;;		 -> NULL(0), buf(50), 
  4797 ;;  hour1           1    6[BANK3 ] PTR unsigned char 
  4798 ;;		 -> NULL(0), buf(50), 
  4799 ;; Return value:  Size  Location     Type
  4800 ;;                  1    wreg      void 
  4801 ;; Registers used:
  4802 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4803 ;; Tracked objects:
  4804 ;;		On entry : B1F/0
  4805 ;;		On exit  : 0/0
  4806 ;;		Unchanged: 0/0
  4807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4809 ;;      Locals:         0       0       0       0      12       0       0       0       0       0       0       0       
      +0       0
  4810 ;;      Temps:          0       0       0       0       6       0       0       0       0       0       0       0       
      +0       0
  4811 ;;      Totals:         0       0       0       0      18       0       0       0       0       0       0       0       
      +0       0
  4812 ;;Total ram usage:       18 bytes
  4813 ;; Hardware stack levels required when called:    9
  4814 ;; This function calls:
  4815 ;;		_DS1302_Initialize
  4816 ;;		_EUSART_Read_Text
  4817 ;;		_green
  4818 ;;		_initMain
  4819 ;;		_itoa
  4820 ;;		_strcat
  4821 ;;		_strcpy
  4822 ;;		_strstr
  4823 ;;		_touchscreen_command
  4824 ;;		_touchscreen_data
  4825 ;; This function is called by:
  4826 ;;		Startup code after reset
  4827 ;; This function uses a non-reentrant model
  4828 ;;
  4829                           
  4830                           
  4831                           ;psect for function _main
  4832  05CF                     _main:	
  4833                           
  4834                           ;Main.c: 102: initMain();
  4835                           
  4836                           ;incstack = 0
  4837                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4838  05CF  318F  270E  3185   	fcall	_initMain
  4839  05D2                     l3760:	
  4840                           ;Main.c: 104: char* hour1;
  4841                           ;Main.c: 105: char* min1;
  4842                           ;Main.c: 106: char* date3;
  4843                           ;Main.c: 107: char* month1;
  4844                           ;Main.c: 108: char* set1;
  4845                           ;Main.c: 110: while(1){
  4846                           
  4847                           
  4848                           ;Main.c: 113: EUSART_Read_Text(buf, 11);
  4849  05D2  300B               	movlw	11
  4850  05D3  0020               	movlb	0	; select bank0
  4851  05D4  00AF               	movwf	EUSART_Read_Text@length
  4852  05D5  3000               	movlw	0
  4853  05D6  00B0               	movwf	EUSART_Read_Text@length+1
  4854  05D7  3020               	movlw	(low (_buf| (0+512)))& (0+255)
  4855  05D8  3197  2733  3185   	fcall	_EUSART_Read_Text
  4856                           
  4857                           ;Main.c: 116: green(buf);
  4858  05DB  3020               	movlw	(low (_buf| (0+512)))& (0+255)
  4859  05DC  318C  247A  3185   	fcall	_green
  4860                           
  4861                           ;Main.c: 122: hour1 = strstr(buf, "hour");
  4862  05DF  308B               	movlw	low (STR_14| (0+32768))
  4863  05E0  0020               	movlb	0	; select bank0
  4864  05E1  00BC               	movwf	strstr@s2
  4865  05E2  3085               	movlw	high (STR_14| (0+32768))
  4866  05E3  00BD               	movwf	strstr@s2+1
  4867  05E4  3020               	movlw	(low (_buf| (0+512)))& (0+255)
  4868  05E5  318A  2212  3185   	fcall	_strstr
  4869  05E8  0023               	movlb	3	; select bank3
  4870  05E9  00D5               	movwf	??_main^(0+384)
  4871  05EA  0855               	movf	??_main^(0+384),w
  4872  05EB  00DB               	movwf	main@hour1^(0+384)
  4873                           
  4874                           ;Main.c: 123: min1 = strstr(buf, "mins");
  4875  05EC  3090               	movlw	low (STR_15| (0+32768))
  4876  05ED  0020               	movlb	0	; select bank0
  4877  05EE  00BC               	movwf	strstr@s2
  4878  05EF  3085               	movlw	high (STR_15| (0+32768))
  4879  05F0  00BD               	movwf	strstr@s2+1
  4880  05F1  3020               	movlw	(low (_buf| (0+512)))& (0+255)
  4881  05F2  318A  2212  3185   	fcall	_strstr
  4882  05F5  0023               	movlb	3	; select bank3
  4883  05F6  00D5               	movwf	??_main^(0+384)
  4884  05F7  0855               	movf	??_main^(0+384),w
  4885  05F8  00DC               	movwf	main@min1^(0+384)
  4886                           
  4887                           ;Main.c: 124: date3 = strstr(buf, "date");
  4888  05F9  3081               	movlw	low (STR_16| (0+32768))
  4889  05FA  0020               	movlb	0	; select bank0
  4890  05FB  00BC               	movwf	strstr@s2
  4891  05FC  3085               	movlw	high (STR_16| (0+32768))
  4892  05FD  00BD               	movwf	strstr@s2+1
  4893  05FE  3020               	movlw	(low (_buf| (0+512)))& (0+255)
  4894  05FF  318A  2212  3185   	fcall	_strstr
  4895  0602  0023               	movlb	3	; select bank3
  4896  0603  00D5               	movwf	??_main^(0+384)
  4897  0604  0855               	movf	??_main^(0+384),w
  4898  0605  00DD               	movwf	main@date3^(0+384)
  4899                           
  4900                           ;Main.c: 125: month1 = strstr(buf, "month");
  4901  0606  3076               	movlw	low (STR_17| (0+32768))
  4902  0607  0020               	movlb	0	; select bank0
  4903  0608  00BC               	movwf	strstr@s2
  4904  0609  3085               	movlw	high (STR_17| (0+32768))
  4905  060A  00BD               	movwf	strstr@s2+1
  4906  060B  3020               	movlw	(low (_buf| (0+512)))& (0+255)
  4907  060C  318A  2212  3185   	fcall	_strstr
  4908  060F  0023               	movlb	3	; select bank3
  4909  0610  00D5               	movwf	??_main^(0+384)
  4910  0611  0855               	movf	??_main^(0+384),w
  4911  0612  00DE               	movwf	main@month1^(0+384)
  4912                           
  4913                           ;Main.c: 126: set1 = strstr(buf, "set");
  4914  0613  30C9               	movlw	low (STR_18| (0+32768))
  4915  0614  0020               	movlb	0	; select bank0
  4916  0615  00BC               	movwf	strstr@s2
  4917  0616  3085               	movlw	high (STR_18| (0+32768))
  4918  0617  00BD               	movwf	strstr@s2+1
  4919  0618  3020               	movlw	(low (_buf| (0+512)))& (0+255)
  4920  0619  318A  2212  3185   	fcall	_strstr
  4921  061C  0023               	movlb	3	; select bank3
  4922  061D  00D5               	movwf	??_main^(0+384)
  4923  061E  0855               	movf	??_main^(0+384),w
  4924  061F  00DF               	movwf	main@set1^(0+384)
  4925                           
  4926                           ;Main.c: 132: if (min1)
  4927  0620  085C               	movf	main@min1^(0+384),w
  4928  0621  1903               	btfsc	3,2
  4929  0622  2E89               	goto	l3794
  4930                           
  4931                           ;Main.c: 133: {
  4932                           ;Main.c: 135: itoa( minute_arr, y, 10 );
  4933  0623  303E               	movlw	low _minute_arr
  4934  0624  0020               	movlb	0	; select bank0
  4935  0625  00C1               	movwf	itoa@buf
  4936  0626  3001               	movlw	high _minute_arr
  4937  0627  00C2               	movwf	itoa@buf+1
  4938  0628  0021               	movlb	1	; select bank1
  4939  0629  0822               	movf	_y^(0+128),w
  4940  062A  0023               	movlb	3	; select bank3
  4941  062B  00D5               	movwf	??_main^(0+384)
  4942  062C  01D6               	clrf	(??_main^(0+384)+1)
  4943  062D  0855               	movf	??_main^(0+384),w
  4944  062E  0020               	movlb	0	; select bank0
  4945  062F  00C3               	movwf	itoa@val
  4946  0630  0023               	movlb	3	; select bank3
  4947  0631  0856               	movf	(??_main+1)^(0+384),w
  4948  0632  0020               	movlb	0	; select bank0
  4949  0633  00C4               	movwf	itoa@val+1
  4950  0634  300A               	movlw	10
  4951  0635  00C5               	movwf	itoa@base
  4952  0636  3000               	movlw	0
  4953  0637  00C6               	movwf	itoa@base+1
  4954  0638  3188  2002  3185   	fcall	_itoa
  4955                           
  4956                           ;Main.c: 137: strcpy(min_string, "\"");
  4957  063B  30B7               	movlw	low _min_string
  4958  063C  0020               	movlb	0	; select bank0
  4959  063D  00AF               	movwf	strcpy@to
  4960  063E  3000               	movlw	high _min_string
  4961  063F  00B0               	movwf	strcpy@to+1
  4962  0640  3041               	movlw	low ((STR_32+11)| (0+32768))
  4963  0641  00B1               	movwf	strcpy@from
  4964  0642  3085               	movlw	high ((STR_32+11)| (0+32768))
  4965  0643  00B2               	movwf	strcpy@from+1
  4966  0644  3196  26FC  3185   	fcall	_strcpy
  4967                           
  4968                           ;Main.c: 141: if (y < 10){
  4969  0647  300A               	movlw	10
  4970  0648  0021               	movlb	1	; select bank1
  4971  0649  0222               	subwf	_y^(0+128),w
  4972  064A  1803               	skipnc
  4973  064B  2E58               	goto	l3784
  4974                           
  4975                           ;Main.c: 142: strcat(min_string, "0");
  4976  064C  30B7               	movlw	low _min_string
  4977  064D  0020               	movlb	0	; select bank0
  4978  064E  00AF               	movwf	strcat@to
  4979  064F  3000               	movlw	high _min_string
  4980  0650  00B0               	movwf	strcat@to+1
  4981  0651  3067               	movlw	low ((STR_28+5)| (0+32768))
  4982  0652  00B1               	movwf	strcat@from
  4983  0653  3085               	movlw	high ((STR_28+5)| (0+32768))
  4984  0654  00B2               	movwf	strcat@from+1
  4985  0655  3188  2074  3185   	fcall	_strcat
  4986  0658                     l3784:	
  4987                           ;Main.c: 144: }
  4988                           
  4989                           ;Main.c: 143: strcat(min_string, minute_arr);
  4990                           
  4991                           
  4992                           ;Main.c: 146: else
  4993                           ;Main.c: 147: {
  4994                           ;Main.c: 148: strcat(min_string, minute_arr);
  4995  0658  30B7               	movlw	low _min_string
  4996  0659  0020               	movlb	0	; select bank0
  4997  065A  00AF               	movwf	strcat@to
  4998  065B  3000               	movlw	high _min_string
  4999  065C  00B0               	movwf	strcat@to+1
  5000  065D  303E               	movlw	low _minute_arr
  5001  065E  00B1               	movwf	strcat@from
  5002  065F  3001               	movlw	high _minute_arr
  5003  0660  00B2               	movwf	strcat@from+1
  5004  0661  3188  2074  3185   	fcall	_strcat
  5005                           
  5006                           ;Main.c: 149: }
  5007                           ;Main.c: 151: strcat(min_string, "\"");
  5008  0664  30B7               	movlw	low _min_string
  5009  0665  0020               	movlb	0	; select bank0
  5010  0666  00AF               	movwf	strcat@to
  5011  0667  3000               	movlw	high _min_string
  5012  0668  00B0               	movwf	strcat@to+1
  5013  0669  3041               	movlw	low ((STR_32+11)| (0+32768))
  5014  066A  00B1               	movwf	strcat@from
  5015  066B  3085               	movlw	high ((STR_32+11)| (0+32768))
  5016  066C  00B2               	movwf	strcat@from+1
  5017  066D  3188  2074  3185   	fcall	_strcat
  5018                           
  5019                           ;Main.c: 153: if (y < 59){
  5020  0670  303B               	movlw	59
  5021  0671  0021               	movlb	1	; select bank1
  5022  0672  0222               	subwf	_y^(0+128),w
  5023  0673  1803               	skipnc
  5024  0674  2E7C               	goto	l3790
  5025                           
  5026                           ;Main.c: 154: y++;
  5027  0675  3001               	movlw	1
  5028  0676  0023               	movlb	3	; select bank3
  5029  0677  00D5               	movwf	??_main^(0+384)
  5030  0678  0855               	movf	??_main^(0+384),w
  5031  0679  0021               	movlb	1	; select bank1
  5032  067A  07A2               	addwf	_y^(0+128),f
  5033                           
  5034                           ;Main.c: 155: }
  5035  067B  2E7D               	goto	l3792
  5036  067C                     l3790:	
  5037                           
  5038                           ;Main.c: 157: else {
  5039                           ;Main.c: 158: y = 0;
  5040  067C  01A2               	clrf	_y^(0+128)
  5041  067D                     l3792:	
  5042                           
  5043                           ;Main.c: 159: }
  5044                           ;Main.c: 163: touchscreen_data(screen_mins, min_string);
  5045  067D  3026               	movlw	low (_screen_mins| (0+32768))
  5046  067E  0020               	movlb	0	; select bank0
  5047  067F  00B5               	movwf	touchscreen_data@cmd
  5048  0680  3085               	movlw	high (_screen_mins| (0+32768))
  5049  0681  00B6               	movwf	touchscreen_data@cmd+1
  5050  0682  30B7               	movlw	low _min_string
  5051  0683  00B7               	movwf	touchscreen_data@string2
  5052  0684  3000               	movlw	high _min_string
  5053  0685  00B8               	movwf	touchscreen_data@string2+1
  5054  0686  3188  209B  3185   	fcall	_touchscreen_data
  5055  0689                     l3794:	
  5056                           
  5057                           ;Main.c: 164: }
  5058                           ;Main.c: 169: if (hour1){
  5059  0689  0023               	movlb	3	; select bank3
  5060  068A  085B               	movf	main@hour1^(0+384),w
  5061  068B  1903               	btfsc	3,2
  5062  068C  2EE3               	goto	l3810
  5063                           
  5064                           ;Main.c: 172: itoa( hour_arr, x, 10 );
  5065  068D  3034               	movlw	low _hour_arr
  5066  068E  0020               	movlb	0	; select bank0
  5067  068F  00C1               	movwf	itoa@buf
  5068  0690  3001               	movlw	high _hour_arr
  5069  0691  00C2               	movwf	itoa@buf+1
  5070  0692  0021               	movlb	1	; select bank1
  5071  0693  086B               	movf	_x^(0+128),w
  5072  0694  0023               	movlb	3	; select bank3
  5073  0695  00D5               	movwf	??_main^(0+384)
  5074  0696  01D6               	clrf	(??_main^(0+384)+1)
  5075  0697  0855               	movf	??_main^(0+384),w
  5076  0698  0020               	movlb	0	; select bank0
  5077  0699  00C3               	movwf	itoa@val
  5078  069A  0023               	movlb	3	; select bank3
  5079  069B  0856               	movf	(??_main+1)^(0+384),w
  5080  069C  0020               	movlb	0	; select bank0
  5081  069D  00C4               	movwf	itoa@val+1
  5082  069E  300A               	movlw	10
  5083  069F  00C5               	movwf	itoa@base
  5084  06A0  3000               	movlw	0
  5085  06A1  00C6               	movwf	itoa@base+1
  5086  06A2  3188  2002  3185   	fcall	_itoa
  5087                           
  5088                           ;Main.c: 174: strcpy(hour_string, "\"");
  5089  06A5  30AD               	movlw	low _hour_string
  5090  06A6  0020               	movlb	0	; select bank0
  5091  06A7  00AF               	movwf	strcpy@to
  5092  06A8  3000               	movlw	high _hour_string
  5093  06A9  00B0               	movwf	strcpy@to+1
  5094  06AA  3041               	movlw	low ((STR_32+11)| (0+32768))
  5095  06AB  00B1               	movwf	strcpy@from
  5096  06AC  3085               	movlw	high ((STR_32+11)| (0+32768))
  5097  06AD  00B2               	movwf	strcpy@from+1
  5098  06AE  3196  26FC  3185   	fcall	_strcpy
  5099                           
  5100                           ;Main.c: 175: strcat(hour_string, hour_arr);
  5101  06B1  30AD               	movlw	low _hour_string
  5102  06B2  0020               	movlb	0	; select bank0
  5103  06B3  00AF               	movwf	strcat@to
  5104  06B4  3000               	movlw	high _hour_string
  5105  06B5  00B0               	movwf	strcat@to+1
  5106  06B6  3034               	movlw	low _hour_arr
  5107  06B7  00B1               	movwf	strcat@from
  5108  06B8  3001               	movlw	high _hour_arr
  5109  06B9  00B2               	movwf	strcat@from+1
  5110  06BA  3188  2074  3185   	fcall	_strcat
  5111                           
  5112                           ;Main.c: 176: strcat(hour_string, "\"");
  5113  06BD  30AD               	movlw	low _hour_string
  5114  06BE  0020               	movlb	0	; select bank0
  5115  06BF  00AF               	movwf	strcat@to
  5116  06C0  3000               	movlw	high _hour_string
  5117  06C1  00B0               	movwf	strcat@to+1
  5118  06C2  3041               	movlw	low ((STR_32+11)| (0+32768))
  5119  06C3  00B1               	movwf	strcat@from
  5120  06C4  3085               	movlw	high ((STR_32+11)| (0+32768))
  5121  06C5  00B2               	movwf	strcat@from+1
  5122  06C6  3188  2074  3185   	fcall	_strcat
  5123                           
  5124                           ;Main.c: 178: if (x < 12){
  5125  06C9  300C               	movlw	12
  5126  06CA  0021               	movlb	1	; select bank1
  5127  06CB  026B               	subwf	_x^(0+128),w
  5128  06CC  1803               	skipnc
  5129  06CD  2ED5               	goto	l224
  5130                           
  5131                           ;Main.c: 179: x++;
  5132  06CE  3001               	movlw	1
  5133  06CF  0023               	movlb	3	; select bank3
  5134  06D0  00D5               	movwf	??_main^(0+384)
  5135  06D1  0855               	movf	??_main^(0+384),w
  5136  06D2  0021               	movlb	1	; select bank1
  5137  06D3  07EB               	addwf	_x^(0+128),f
  5138                           
  5139                           ;Main.c: 180: }
  5140  06D4  2ED7               	goto	l3808
  5141  06D5                     l224:	
  5142                           
  5143                           ;Main.c: 182: else {
  5144                           ;Main.c: 183: x = 1;
  5145  06D5  01EB               	clrf	_x^(0+128)
  5146  06D6  0AEB               	incf	_x^(0+128),f
  5147  06D7                     l3808:	
  5148                           
  5149                           ;Main.c: 184: }
  5150                           ;Main.c: 187: touchscreen_data(screen_hour, hour_string);
  5151  06D7  301E               	movlw	low (_screen_hour| (0+32768))
  5152  06D8  0020               	movlb	0	; select bank0
  5153  06D9  00B5               	movwf	touchscreen_data@cmd
  5154  06DA  3085               	movlw	high (_screen_hour| (0+32768))
  5155  06DB  00B6               	movwf	touchscreen_data@cmd+1
  5156  06DC  30AD               	movlw	low _hour_string
  5157  06DD  00B7               	movwf	touchscreen_data@string2
  5158  06DE  3000               	movlw	high _hour_string
  5159  06DF  00B8               	movwf	touchscreen_data@string2+1
  5160  06E0  3188  209B  3185   	fcall	_touchscreen_data
  5161  06E3                     l3810:	
  5162                           
  5163                           ;Main.c: 188: }
  5164                           ;Main.c: 193: if(date3)
  5165  06E3  0023               	movlb	3	; select bank3
  5166  06E4  085D               	movf	main@date3^(0+384),w
  5167  06E5  1903               	btfsc	3,2
  5168  06E6  2F3C               	goto	l3828
  5169                           
  5170                           ;Main.c: 194: {
  5171                           ;Main.c: 196: itoa( date_arr, d, 10 );
  5172  06E7  302A               	movlw	low _date_arr
  5173  06E8  0020               	movlb	0	; select bank0
  5174  06E9  00C1               	movwf	itoa@buf
  5175  06EA  3001               	movlw	high _date_arr
  5176  06EB  00C2               	movwf	itoa@buf+1
  5177  06EC  0021               	movlb	1	; select bank1
  5178  06ED  0869               	movf	_d^(0+128),w
  5179  06EE  0023               	movlb	3	; select bank3
  5180  06EF  00D5               	movwf	??_main^(0+384)
  5181  06F0  01D6               	clrf	(??_main^(0+384)+1)
  5182  06F1  0855               	movf	??_main^(0+384),w
  5183  06F2  0020               	movlb	0	; select bank0
  5184  06F3  00C3               	movwf	itoa@val
  5185  06F4  0023               	movlb	3	; select bank3
  5186  06F5  0856               	movf	(??_main+1)^(0+384),w
  5187  06F6  0020               	movlb	0	; select bank0
  5188  06F7  00C4               	movwf	itoa@val+1
  5189  06F8  300A               	movlw	10
  5190  06F9  00C5               	movwf	itoa@base
  5191  06FA  3000               	movlw	0
  5192  06FB  00C6               	movwf	itoa@base+1
  5193  06FC  3188  2002  3185   	fcall	_itoa
  5194                           
  5195                           ;Main.c: 198: strcpy(date1_string, "\"");
  5196  06FF  3020               	movlw	low _date1_string
  5197  0700  0020               	movlb	0	; select bank0
  5198  0701  00AF               	movwf	strcpy@to
  5199  0702  3001               	movlw	high _date1_string
  5200  0703  00B0               	movwf	strcpy@to+1
  5201  0704  3041               	movlw	low ((STR_32+11)| (0+32768))
  5202  0705  00B1               	movwf	strcpy@from
  5203  0706  3085               	movlw	high ((STR_32+11)| (0+32768))
  5204  0707  00B2               	movwf	strcpy@from+1
  5205  0708  3196  26FC  3185   	fcall	_strcpy
  5206                           
  5207                           ;Main.c: 199: strcat(date1_string, date_arr);
  5208  070B  3020               	movlw	low _date1_string
  5209  070C  0020               	movlb	0	; select bank0
  5210  070D  00AF               	movwf	strcat@to
  5211  070E  3001               	movlw	high _date1_string
  5212  070F  00B0               	movwf	strcat@to+1
  5213  0710  302A               	movlw	low _date_arr
  5214  0711  00B1               	movwf	strcat@from
  5215  0712  3001               	movlw	high _date_arr
  5216  0713  00B2               	movwf	strcat@from+1
  5217  0714  3188  2074  3185   	fcall	_strcat
  5218                           
  5219                           ;Main.c: 200: strcat(date1_string, "\"");
  5220  0717  3020               	movlw	low _date1_string
  5221  0718  0020               	movlb	0	; select bank0
  5222  0719  00AF               	movwf	strcat@to
  5223  071A  3001               	movlw	high _date1_string
  5224  071B  00B0               	movwf	strcat@to+1
  5225  071C  3041               	movlw	low ((STR_32+11)| (0+32768))
  5226  071D  00B1               	movwf	strcat@from
  5227  071E  3085               	movlw	high ((STR_32+11)| (0+32768))
  5228  071F  00B2               	movwf	strcat@from+1
  5229  0720  3188  2074  3185   	fcall	_strcat
  5230                           
  5231                           ;Main.c: 202: if (d < 31){
  5232  0723  301F               	movlw	31
  5233  0724  0021               	movlb	1	; select bank1
  5234  0725  0269               	subwf	_d^(0+128),w
  5235  0726  1803               	skipnc
  5236  0727  2F2F               	goto	l3824
  5237                           
  5238                           ;Main.c: 203: d++;
  5239  0728  3001               	movlw	1
  5240  0729  0023               	movlb	3	; select bank3
  5241  072A  00D5               	movwf	??_main^(0+384)
  5242  072B  0855               	movf	??_main^(0+384),w
  5243  072C  0021               	movlb	1	; select bank1
  5244  072D  07E9               	addwf	_d^(0+128),f
  5245                           
  5246                           ;Main.c: 204: }
  5247  072E  2F30               	goto	l3826
  5248  072F                     l3824:	
  5249                           
  5250                           ;Main.c: 206: else {
  5251                           ;Main.c: 207: d = 0;
  5252  072F  01E9               	clrf	_d^(0+128)
  5253  0730                     l3826:	
  5254                           
  5255                           ;Main.c: 208: }
  5256                           ;Main.c: 211: touchscreen_data(screen_date1, date1_string);
  5257  0730  3016               	movlw	low (_screen_date1| (0+32768))
  5258  0731  0020               	movlb	0	; select bank0
  5259  0732  00B5               	movwf	touchscreen_data@cmd
  5260  0733  3085               	movlw	high (_screen_date1| (0+32768))
  5261  0734  00B6               	movwf	touchscreen_data@cmd+1
  5262  0735  3020               	movlw	low _date1_string
  5263  0736  00B7               	movwf	touchscreen_data@string2
  5264  0737  3001               	movlw	high _date1_string
  5265  0738  00B8               	movwf	touchscreen_data@string2+1
  5266  0739  3188  209B  3185   	fcall	_touchscreen_data
  5267  073C                     l3828:	
  5268                           
  5269                           ;Main.c: 212: }
  5270                           ;Main.c: 219: if(month1)
  5271  073C  0023               	movlb	3	; select bank3
  5272  073D  085E               	movf	main@month1^(0+384),w
  5273  073E  1903               	btfsc	3,2
  5274  073F  2F96               	goto	l3844
  5275                           
  5276                           ;Main.c: 220: {
  5277                           ;Main.c: 222: itoa( month_arr, m, 10 );
  5278  0740  3048               	movlw	low _month_arr
  5279  0741  0020               	movlb	0	; select bank0
  5280  0742  00C1               	movwf	itoa@buf
  5281  0743  3001               	movlw	high _month_arr
  5282  0744  00C2               	movwf	itoa@buf+1
  5283  0745  0021               	movlb	1	; select bank1
  5284  0746  086A               	movf	_m^(0+128),w
  5285  0747  0023               	movlb	3	; select bank3
  5286  0748  00D5               	movwf	??_main^(0+384)
  5287  0749  01D6               	clrf	(??_main^(0+384)+1)
  5288  074A  0855               	movf	??_main^(0+384),w
  5289  074B  0020               	movlb	0	; select bank0
  5290  074C  00C3               	movwf	itoa@val
  5291  074D  0023               	movlb	3	; select bank3
  5292  074E  0856               	movf	(??_main+1)^(0+384),w
  5293  074F  0020               	movlb	0	; select bank0
  5294  0750  00C4               	movwf	itoa@val+1
  5295  0751  300A               	movlw	10
  5296  0752  00C5               	movwf	itoa@base
  5297  0753  3000               	movlw	0
  5298  0754  00C6               	movwf	itoa@base+1
  5299  0755  3188  2002  3185   	fcall	_itoa
  5300                           
  5301                           ;Main.c: 224: strcpy(month_string, "\"");
  5302  0758  3052               	movlw	low _month_string
  5303  0759  0020               	movlb	0	; select bank0
  5304  075A  00AF               	movwf	strcpy@to
  5305  075B  3001               	movlw	high _month_string
  5306  075C  00B0               	movwf	strcpy@to+1
  5307  075D  3041               	movlw	low ((STR_32+11)| (0+32768))
  5308  075E  00B1               	movwf	strcpy@from
  5309  075F  3085               	movlw	high ((STR_32+11)| (0+32768))
  5310  0760  00B2               	movwf	strcpy@from+1
  5311  0761  3196  26FC  3185   	fcall	_strcpy
  5312                           
  5313                           ;Main.c: 225: strcat(month_string, month_arr);
  5314  0764  3052               	movlw	low _month_string
  5315  0765  0020               	movlb	0	; select bank0
  5316  0766  00AF               	movwf	strcat@to
  5317  0767  3001               	movlw	high _month_string
  5318  0768  00B0               	movwf	strcat@to+1
  5319  0769  3048               	movlw	low _month_arr
  5320  076A  00B1               	movwf	strcat@from
  5321  076B  3001               	movlw	high _month_arr
  5322  076C  00B2               	movwf	strcat@from+1
  5323  076D  3188  2074  3185   	fcall	_strcat
  5324                           
  5325                           ;Main.c: 226: strcat(month_string, "\"");
  5326  0770  3052               	movlw	low _month_string
  5327  0771  0020               	movlb	0	; select bank0
  5328  0772  00AF               	movwf	strcat@to
  5329  0773  3001               	movlw	high _month_string
  5330  0774  00B0               	movwf	strcat@to+1
  5331  0775  3041               	movlw	low ((STR_32+11)| (0+32768))
  5332  0776  00B1               	movwf	strcat@from
  5333  0777  3085               	movlw	high ((STR_32+11)| (0+32768))
  5334  0778  00B2               	movwf	strcat@from+1
  5335  0779  3188  2074  3185   	fcall	_strcat
  5336                           
  5337                           ;Main.c: 228: if (m < 12){
  5338  077C  300C               	movlw	12
  5339  077D  0021               	movlb	1	; select bank1
  5340  077E  026A               	subwf	_m^(0+128),w
  5341  077F  1803               	skipnc
  5342  0780  2F88               	goto	l230
  5343                           
  5344                           ;Main.c: 229: m++;
  5345  0781  3001               	movlw	1
  5346  0782  0023               	movlb	3	; select bank3
  5347  0783  00D5               	movwf	??_main^(0+384)
  5348  0784  0855               	movf	??_main^(0+384),w
  5349  0785  0021               	movlb	1	; select bank1
  5350  0786  07EA               	addwf	_m^(0+128),f
  5351                           
  5352                           ;Main.c: 230: }
  5353  0787  2F8A               	goto	l3842
  5354  0788                     l230:	
  5355                           
  5356                           ;Main.c: 232: else {
  5357                           ;Main.c: 233: m = 1;
  5358  0788  01EA               	clrf	_m^(0+128)
  5359  0789  0AEA               	incf	_m^(0+128),f
  5360  078A                     l3842:	
  5361                           
  5362                           ;Main.c: 234: }
  5363                           ;Main.c: 237: touchscreen_data(screen_month, month_string);
  5364  078A  302E               	movlw	low (_screen_month| (0+32768))
  5365  078B  0020               	movlb	0	; select bank0
  5366  078C  00B5               	movwf	touchscreen_data@cmd
  5367  078D  3085               	movlw	high (_screen_month| (0+32768))
  5368  078E  00B6               	movwf	touchscreen_data@cmd+1
  5369  078F  3052               	movlw	low _month_string
  5370  0790  00B7               	movwf	touchscreen_data@string2
  5371  0791  3001               	movlw	high _month_string
  5372  0792  00B8               	movwf	touchscreen_data@string2+1
  5373  0793  3188  209B  3185   	fcall	_touchscreen_data
  5374  0796                     l3844:	
  5375                           
  5376                           ;Main.c: 238: }
  5377                           ;Main.c: 244: if (set1){
  5378  0796  0023               	movlb	3	; select bank3
  5379  0797  085F               	movf	main@set1^(0+384),w
  5380  0798  1903               	btfsc	3,2
  5381  0799  2DD2               	goto	l3760
  5382                           
  5383                           ;Main.c: 247: byte sec = 00;
  5384  079A  01E0               	clrf	main@sec^(0+384)
  5385                           
  5386                           ;Main.c: 248: byte min = y-1;
  5387  079B  0021               	movlb	1	; select bank1
  5388  079C  0822               	movf	_y^(0+128),w
  5389  079D  3EFF               	addlw	255
  5390  079E  0023               	movlb	3	; select bank3
  5391  079F  00D5               	movwf	??_main^(0+384)
  5392  07A0  0855               	movf	??_main^(0+384),w
  5393  07A1  00E1               	movwf	main@min^(0+384)
  5394                           
  5395                           ;Main.c: 249: byte hr = x-1;
  5396  07A2  0021               	movlb	1	; select bank1
  5397  07A3  086B               	movf	_x^(0+128),w
  5398  07A4  3EFF               	addlw	255
  5399  07A5  0023               	movlb	3	; select bank3
  5400  07A6  00D5               	movwf	??_main^(0+384)
  5401  07A7  0855               	movf	??_main^(0+384),w
  5402  07A8  00E2               	movwf	main@hr^(0+384)
  5403                           
  5404                           ;Main.c: 250: byte day = 2;
  5405  07A9  3002               	movlw	2
  5406  07AA  00D5               	movwf	??_main^(0+384)
  5407  07AB  0855               	movf	??_main^(0+384),w
  5408  07AC  00E3               	movwf	main@day^(0+384)
  5409                           
  5410                           ;Main.c: 251: byte date = d-1;
  5411  07AD  0021               	movlb	1	; select bank1
  5412  07AE  0869               	movf	_d^(0+128),w
  5413  07AF  3EFF               	addlw	255
  5414  07B0  0023               	movlb	3	; select bank3
  5415  07B1  00D5               	movwf	??_main^(0+384)
  5416  07B2  0855               	movf	??_main^(0+384),w
  5417  07B3  00E4               	movwf	main@date^(0+384)
  5418                           
  5419                           ;Main.c: 252: byte month = m-1;
  5420  07B4  0021               	movlb	1	; select bank1
  5421  07B5  086A               	movf	_m^(0+128),w
  5422  07B6  3EFF               	addlw	255
  5423  07B7  0023               	movlb	3	; select bank3
  5424  07B8  00D5               	movwf	??_main^(0+384)
  5425  07B9  0855               	movf	??_main^(0+384),w
  5426  07BA  00E5               	movwf	main@month^(0+384)
  5427                           
  5428                           ;Main.c: 253: byte year = 17;
  5429  07BB  3011               	movlw	17
  5430  07BC  00D5               	movwf	??_main^(0+384)
  5431  07BD  0855               	movf	??_main^(0+384),w
  5432  07BE  00E6               	movwf	main@year^(0+384)
  5433                           
  5434                           ;Main.c: 256: DS1302_Initialize(sec, min, hr, day, date, month, year);
  5435  07BF  0861               	movf	main@min^(0+384),w
  5436  07C0  00D5               	movwf	??_main^(0+384)
  5437  07C1  0855               	movf	??_main^(0+384),w
  5438  07C2  0020               	movlb	0	; select bank0
  5439  07C3  00BE               	movwf	DS1302_Initialize@min
  5440  07C4  0023               	movlb	3	; select bank3
  5441  07C5  0862               	movf	main@hr^(0+384),w
  5442  07C6  00D6               	movwf	(??_main+1)^(0+384)
  5443  07C7  0856               	movf	(??_main+1)^(0+384),w
  5444  07C8  0020               	movlb	0	; select bank0
  5445  07C9  00BF               	movwf	DS1302_Initialize@hr
  5446  07CA  0023               	movlb	3	; select bank3
  5447  07CB  0863               	movf	main@day^(0+384),w
  5448  07CC  00D7               	movwf	(??_main+2)^(0+384)
  5449  07CD  0857               	movf	(??_main+2)^(0+384),w
  5450  07CE  0020               	movlb	0	; select bank0
  5451  07CF  00C0               	movwf	DS1302_Initialize@day
  5452  07D0  0023               	movlb	3	; select bank3
  5453  07D1  0864               	movf	main@date^(0+384),w
  5454  07D2  00D8               	movwf	(??_main+3)^(0+384)
  5455  07D3  0858               	movf	(??_main+3)^(0+384),w
  5456  07D4  0020               	movlb	0	; select bank0
  5457  07D5  00C1               	movwf	DS1302_Initialize@date
  5458  07D6  0023               	movlb	3	; select bank3
  5459  07D7  0865               	movf	main@month^(0+384),w
  5460  07D8  00D9               	movwf	(??_main+4)^(0+384)
  5461  07D9  0859               	movf	(??_main+4)^(0+384),w
  5462  07DA  0020               	movlb	0	; select bank0
  5463  07DB  00C2               	movwf	DS1302_Initialize@mth
  5464  07DC  0023               	movlb	3	; select bank3
  5465  07DD  0866               	movf	main@year^(0+384),w
  5466  07DE  00DA               	movwf	(??_main+5)^(0+384)
  5467  07DF  085A               	movf	(??_main+5)^(0+384),w
  5468  07E0  0020               	movlb	0	; select bank0
  5469  07E1  00C3               	movwf	DS1302_Initialize@year
  5470  07E2  0023               	movlb	3	; select bank3
  5471  07E3  0860               	movf	main@sec^(0+384),w
  5472  07E4  318D  2563  3185   	fcall	_DS1302_Initialize
  5473                           
  5474                           ;Main.c: 257: touchscreen_command("page 0");
  5475  07E7  3062               	movlw	low (STR_28| (0+32768))
  5476  07E8  0020               	movlb	0	; select bank0
  5477  07E9  00B5               	movwf	touchscreen_command@string
  5478  07EA  3085               	movlw	high (STR_28| (0+32768))
  5479  07EB  00B6               	movwf	touchscreen_command@string+1
  5480  07EC  3197  2793  3185   	fcall	_touchscreen_command
  5481  07EF  2DD2               	goto	l3760
  5482  07F0                     __end_of_main:	
  5483                           ;Main.c: 258: }
  5484                           ;Main.c: 260: }
  5485                           ;Main.c: 262: return;
  5486                           
  5487                           
  5488                           	psect	text1
  5489  089B                     __ptext1:	
  5490 ;; *************** function _touchscreen_data *****************
  5491 ;; Defined at:
  5492 ;;		line 31 in file "touchscreen.c"
  5493 ;; Parameters:    Size  Location     Type
  5494 ;;  cmd             2   21[BANK0 ] PTR unsigned char 
  5495 ;;		 -> screen_date(10), screen_mth(11), screen_time(10), screen_month(8), 
  5496 ;;		 -> screen_date1(8), screen_hour(8), screen_mins(8), 
  5497 ;;  string2         2   23[BANK0 ] PTR unsigned char 
  5498 ;;		 -> time_string(10), mth_string(10), date_string(10), month_string(10), 
  5499 ;;		 -> date1_string(10), hour_string(10), min_string(10), 
  5500 ;; Auto vars:     Size  Location     Type
  5501 ;;		None
  5502 ;; Return value:  Size  Location     Type
  5503 ;;                  1    wreg      void 
  5504 ;; Registers used:
  5505 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5506 ;; Tracked objects:
  5507 ;;		On entry : 0/0
  5508 ;;		On exit  : 0/0
  5509 ;;		Unchanged: 0/0
  5510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5511 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5513 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5514 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5515 ;;Total ram usage:        7 bytes
  5516 ;; Hardware stack levels used:    1
  5517 ;; Hardware stack levels required when called:    6
  5518 ;; This function calls:
  5519 ;;		_EUSART_Write
  5520 ;;		_EUSART_Write_Text
  5521 ;; This function is called by:
  5522 ;;		_main
  5523 ;; This function uses a non-reentrant model
  5524 ;;
  5525                           
  5526                           
  5527                           ;psect for function _touchscreen_data
  5528  089B                     _touchscreen_data:	
  5529                           
  5530                           ;touchscreen.c: 33: EUSART_Write_Text(cmd);
  5531                           
  5532                           ;incstack = 0
  5533                           ; Regs used in _touchscreen_data: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5534  089B  0020               	movlb	0	; select bank0
  5535  089C  0836               	movf	touchscreen_data@cmd+1,w
  5536  089D  00B1               	movwf	EUSART_Write_Text@text+1
  5537  089E  0835               	movf	touchscreen_data@cmd,w
  5538  089F  00B0               	movwf	EUSART_Write_Text@text
  5539  08A0  3197  2717  3188   	fcall	_EUSART_Write_Text
  5540                           
  5541                           ;touchscreen.c: 34: EUSART_Write_Text(string2);
  5542  08A3  0020               	movlb	0	; select bank0
  5543  08A4  0838               	movf	touchscreen_data@string2+1,w
  5544  08A5  00B1               	movwf	EUSART_Write_Text@text+1
  5545  08A6  0837               	movf	touchscreen_data@string2,w
  5546  08A7  00B0               	movwf	EUSART_Write_Text@text
  5547  08A8  3197  2717  3188   	fcall	_EUSART_Write_Text
  5548                           
  5549                           ;touchscreen.c: 35: EUSART_Write(0xFF);
  5550  08AB  30FF               	movlw	255
  5551  08AC  3195  25E3  3188   	fcall	_EUSART_Write
  5552                           
  5553                           ;touchscreen.c: 36: EUSART_Write(0xFF);
  5554  08AF  30FF               	movlw	255
  5555  08B0  3195  25E3  3188   	fcall	_EUSART_Write
  5556                           
  5557                           ;touchscreen.c: 37: EUSART_Write(0xFF);
  5558  08B3  30FF               	movlw	255
  5559  08B4  3195  25E3  3188   	fcall	_EUSART_Write
  5560                           
  5561                           ;touchscreen.c: 39: _delay((unsigned long)((100)*(16000000/4000.0)));
  5562  08B7  3003               	movlw	3
  5563  08B8  0020               	movlb	0	; select bank0
  5564  08B9  00BB               	movwf	??_touchscreen_data+2
  5565  08BA  3008               	movlw	8
  5566  08BB  00BA               	movwf	??_touchscreen_data+1
  5567  08BC  3078               	movlw	120
  5568  08BD  00B9               	movwf	??_touchscreen_data
  5569  08BE                     u3787:	
  5570  08BE  0BB9               	decfsz	??_touchscreen_data,f
  5571  08BF  28BE               	goto	u3787
  5572  08C0  0BBA               	decfsz	??_touchscreen_data+1,f
  5573  08C1  28BE               	goto	u3787
  5574  08C2  0BBB               	decfsz	??_touchscreen_data+2,f
  5575  08C3  28BE               	goto	u3787
  5576  08C4  0008               	return
  5577  08C5                     __end_of_touchscreen_data:	
  5578                           
  5579                           	psect	text2
  5580  16FC                     __ptext2:	
  5581 ;; *************** function _strcpy *****************
  5582 ;; Defined at:
  5583 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\strcpy.c"
  5584 ;; Parameters:    Size  Location     Type
  5585 ;;  to              2   15[BANK0 ] PTR unsigned char 
  5586 ;;		 -> time_string(10), mth_string(10), date_string(10), month_string(10), 
  5587 ;;		 -> date1_string(10), hour_string(10), min_string(10), 
  5588 ;;  from            2   17[BANK0 ] PTR const unsigned char 
  5589 ;;		 -> STR_38(2), STR_36(2), STR_34(2), STR_26(2), 
  5590 ;;		 -> STR_24(2), STR_22(2), STR_19(2), 
  5591 ;; Auto vars:     Size  Location     Type
  5592 ;;  cp              2   19[BANK0 ] PTR unsigned char 
  5593 ;;		 -> time_string(10), mth_string(10), date_string(10), month_string(10), 
  5594 ;;		 -> date1_string(10), hour_string(10), min_string(10), 
  5595 ;; Return value:  Size  Location     Type
  5596 ;;                  2   15[BANK0 ] PTR unsigned char 
  5597 ;; Registers used:
  5598 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, pclath
  5599 ;; Tracked objects:
  5600 ;;		On entry : 0/0
  5601 ;;		On exit  : 0/0
  5602 ;;		Unchanged: 0/0
  5603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5604 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5605 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5607 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5608 ;;Total ram usage:        6 bytes
  5609 ;; Hardware stack levels used:    1
  5610 ;; Hardware stack levels required when called:    4
  5611 ;; This function calls:
  5612 ;;		Nothing
  5613 ;; This function is called by:
  5614 ;;		_main
  5615 ;; This function uses a non-reentrant model
  5616 ;;
  5617                           
  5618                           
  5619                           ;psect for function _strcpy
  5620  16FC                     _strcpy:	
  5621                           
  5622                           ;incstack = 0
  5623                           ; Regs used in _strcpy: [wreg-fsr1h+pclath]
  5624  16FC  0020               	movlb	0	; select bank0
  5625  16FD  0830               	movf	strcpy@to+1,w
  5626  16FE  00B4               	movwf	strcpy@cp+1
  5627  16FF  082F               	movf	strcpy@to,w
  5628  1700  00B3               	movwf	strcpy@cp
  5629  1701                     l3722:	
  5630  1701  0833               	movf	strcpy@cp,w
  5631  1702  0086               	movwf	6
  5632  1703  0834               	movf	strcpy@cp+1,w
  5633  1704  0087               	movwf	7
  5634  1705  0831               	movf	strcpy@from,w
  5635  1706  0084               	movwf	4
  5636  1707  0832               	movf	strcpy@from+1,w
  5637  1708  0085               	movwf	5
  5638  1709  0800               	movf	0,w	;code access
  5639  170A  3FC0               	movwi [0]fsr1
  5640  170B  0889               	movf	9,f
  5641  170C  1903               	btfsc	3,2
  5642  170D  0008               	return
  5643  170E  3001               	movlw	1
  5644  170F  07B3               	addwf	strcpy@cp,f
  5645  1710  3000               	movlw	0
  5646  1711  3DB4               	addwfc	strcpy@cp+1,f
  5647  1712  3001               	movlw	1
  5648  1713  07B1               	addwf	strcpy@from,f
  5649  1714  3000               	movlw	0
  5650  1715  3DB2               	addwfc	strcpy@from+1,f
  5651  1716  2F01               	goto	l3722
  5652  1717                     __end_of_strcpy:	
  5653                           ;	Return value of _strcpy is never used
  5654                           
  5655                           
  5656                           	psect	text3
  5657  0874                     __ptext3:	
  5658 ;; *************** function _strcat *****************
  5659 ;; Defined at:
  5660 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\strcat.c"
  5661 ;; Parameters:    Size  Location     Type
  5662 ;;  to              2   15[BANK0 ] PTR unsigned char 
  5663 ;;		 -> time_string(10), mth_string(10), date_string(10), month_string(10), 
  5664 ;;		 -> date1_string(10), hour_string(10), min_string(10), 
  5665 ;;  from            2   17[BANK0 ] PTR const unsigned char 
  5666 ;;		 -> STR_41(2), STR_40(2), STR_39(2), STR_37(2), 
  5667 ;;		 -> STR_35(2), dt_arr(5), hr_arr(8), min_arr(8), 
  5668 ;;		 -> STR_27(2), month_arr(10), STR_25(2), date_arr(10), 
  5669 ;;		 -> STR_23(2), hour_arr(10), STR_21(2), STR_20(2), 
  5670 ;;		 -> minute_arr(10), STR_13(4), STR_12(4), STR_11(4), 
  5671 ;;		 -> STR_10(4), STR_9(4), STR_8(4), STR_7(4), 
  5672 ;;		 -> STR_6(4), STR_5(4), STR_4(4), STR_3(4), 
  5673 ;;		 -> STR_2(4), STR_1(4), 
  5674 ;; Auto vars:     Size  Location     Type
  5675 ;;  cp              2   19[BANK0 ] PTR unsigned char 
  5676 ;;		 -> time_string(10), mth_string(10), date_string(10), month_string(10), 
  5677 ;;		 -> date1_string(10), hour_string(10), min_string(10), 
  5678 ;; Return value:  Size  Location     Type
  5679 ;;                  2   15[BANK0 ] PTR unsigned char 
  5680 ;; Registers used:
  5681 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  5682 ;; Tracked objects:
  5683 ;;		On entry : 0/0
  5684 ;;		On exit  : 0/0
  5685 ;;		Unchanged: 0/0
  5686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5687 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5688 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5690 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5691 ;;Total ram usage:        6 bytes
  5692 ;; Hardware stack levels used:    1
  5693 ;; Hardware stack levels required when called:    4
  5694 ;; This function calls:
  5695 ;;		Nothing
  5696 ;; This function is called by:
  5697 ;;		_main
  5698 ;; This function uses a non-reentrant model
  5699 ;;
  5700                           
  5701                           
  5702                           ;psect for function _strcat
  5703  0874                     _strcat:	
  5704                           
  5705                           ;incstack = 0
  5706                           ; Regs used in _strcat: [wreg-fsr1h+status,2+status,0+pclath]
  5707  0874  0020               	movlb	0	; select bank0
  5708  0875  0830               	movf	strcat@to+1,w
  5709  0876  00B4               	movwf	strcat@cp+1
  5710  0877  082F               	movf	strcat@to,w
  5711  0878  00B3               	movwf	strcat@cp
  5712  0879                     l3728:	
  5713  0879  0833               	movf	strcat@cp,w
  5714  087A  0086               	movwf	6
  5715  087B  0834               	movf	strcat@cp+1,w
  5716  087C  0087               	movwf	7
  5717  087D  0801               	movf	1,w
  5718  087E  1903               	btfsc	3,2
  5719  087F  288D               	goto	l3732
  5720  0880  3001               	movlw	1
  5721  0881  07B3               	addwf	strcat@cp,f
  5722  0882  3000               	movlw	0
  5723  0883  3DB4               	addwfc	strcat@cp+1,f
  5724  0884  2879               	goto	l3728
  5725  0885                     l3730:	
  5726  0885  3001               	movlw	1
  5727  0886  07B3               	addwf	strcat@cp,f
  5728  0887  3000               	movlw	0
  5729  0888  3DB4               	addwfc	strcat@cp+1,f
  5730  0889  3001               	movlw	1
  5731  088A  07B1               	addwf	strcat@from,f
  5732  088B  3000               	movlw	0
  5733  088C  3DB2               	addwfc	strcat@from+1,f
  5734  088D                     l3732:	
  5735  088D  0833               	movf	strcat@cp,w
  5736  088E  0086               	movwf	6
  5737  088F  0834               	movf	strcat@cp+1,w
  5738  0890  0087               	movwf	7
  5739  0891  0831               	movf	strcat@from,w
  5740  0892  0084               	movwf	4
  5741  0893  0832               	movf	strcat@from+1,w
  5742  0894  0085               	movwf	5
  5743  0895  0800               	movf	0,w	;code access
  5744  0896  3FC0               	movwi [0]fsr1
  5745  0897  0889               	movf	9,f
  5746  0898  1903               	btfsc	3,2
  5747  0899  0008               	return
  5748  089A  2885               	goto	l3730
  5749  089B                     __end_of_strcat:	
  5750                           ;	Return value of _strcat is never used
  5751                           
  5752                           
  5753                           	psect	text4
  5754  0802                     __ptext4:	
  5755 ;; *************** function _itoa *****************
  5756 ;; Defined at:
  5757 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\itoa.c"
  5758 ;; Parameters:    Size  Location     Type
  5759 ;;  buf             2   33[BANK0 ] PTR unsigned char 
  5760 ;;		 -> OLED_Write_Integer@s(20), dt_arr(5), hr_arr(8), min_arr(8), 
  5761 ;;		 -> month_arr(10), date_arr(10), hour_arr(10), minute_arr(10), 
  5762 ;;  val             2   35[BANK0 ] int 
  5763 ;;  base            2   37[BANK0 ] int 
  5764 ;; Auto vars:     Size  Location     Type
  5765 ;;  cp              2   39[BANK0 ] PTR unsigned char 
  5766 ;;		 -> OLED_Write_Integer@s(20), dt_arr(5), hr_arr(8), min_arr(8), 
  5767 ;;		 -> month_arr(10), date_arr(10), hour_arr(10), minute_arr(10), 
  5768 ;; Return value:  Size  Location     Type
  5769 ;;                  2   33[BANK0 ] PTR unsigned char 
  5770 ;; Registers used:
  5771 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5772 ;; Tracked objects:
  5773 ;;		On entry : 0/0
  5774 ;;		On exit  : 0/0
  5775 ;;		Unchanged: 0/0
  5776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5777 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5778 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5780 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5781 ;;Total ram usage:        8 bytes
  5782 ;; Hardware stack levels used:    1
  5783 ;; Hardware stack levels required when called:    6
  5784 ;; This function calls:
  5785 ;;		_utoa
  5786 ;; This function is called by:
  5787 ;;		_main
  5788 ;;		_OLED_Write_Integer
  5789 ;; This function uses a non-reentrant model
  5790 ;;
  5791                           
  5792                           
  5793                           ;psect for function _itoa
  5794  0802                     _itoa:	
  5795                           
  5796                           ;incstack = 0
  5797                           ; Regs used in _itoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5798  0802  0020               	movlb	0	; select bank0
  5799  0803  0842               	movf	itoa@buf+1,w
  5800  0804  00C8               	movwf	itoa@cp+1
  5801  0805  0841               	movf	itoa@buf,w
  5802  0806  00C7               	movwf	itoa@cp
  5803  0807  1FC4               	btfss	itoa@val+1,7
  5804  0808  2818               	goto	l3714
  5805  0809  0841               	movf	itoa@buf,w
  5806  080A  0086               	movwf	6
  5807  080B  0842               	movf	itoa@buf+1,w
  5808  080C  0087               	movwf	7
  5809  080D  302D               	movlw	45
  5810  080E  0081               	movwf	1
  5811  080F  3001               	movlw	1
  5812  0810  07C1               	addwf	itoa@buf,f
  5813  0811  3000               	movlw	0
  5814  0812  3DC2               	addwfc	itoa@buf+1,f
  5815  0813  09C3               	comf	itoa@val,f
  5816  0814  09C4               	comf	itoa@val+1,f
  5817  0815  0AC3               	incf	itoa@val,f
  5818  0816  1903               	skipnz
  5819  0817  0AC4               	incf	itoa@val+1,f
  5820  0818                     l3714:	
  5821  0818  0842               	movf	itoa@buf+1,w
  5822  0819  00B8               	movwf	utoa@buf+1
  5823  081A  0841               	movf	itoa@buf,w
  5824  081B  00B7               	movwf	utoa@buf
  5825  081C  0844               	movf	itoa@val+1,w
  5826  081D  00BA               	movwf	utoa@val+1
  5827  081E  0843               	movf	itoa@val,w
  5828  081F  00B9               	movwf	utoa@val
  5829  0820  0846               	movf	itoa@base+1,w
  5830  0821  00BC               	movwf	utoa@base+1
  5831  0822  0845               	movf	itoa@base,w
  5832  0823  00BB               	movwf	utoa@base
  5833  0824  318B  23AF         	fcall	_utoa
  5834  0826  0008               	return
  5835  0827                     __end_of_itoa:	
  5836                           ;	Return value of _itoa is never used
  5837                           
  5838                           
  5839                           	psect	text5
  5840  0BAF                     __ptext5:	
  5841 ;; *************** function _utoa *****************
  5842 ;; Defined at:
  5843 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\itoa.c"
  5844 ;; Parameters:    Size  Location     Type
  5845 ;;  buf             2   23[BANK0 ] PTR unsigned char 
  5846 ;;		 -> OLED_Write_Integer@s(20), dt_arr(5), hr_arr(8), min_arr(8), 
  5847 ;;		 -> month_arr(10), date_arr(10), hour_arr(10), minute_arr(10), 
  5848 ;;  val             2   25[BANK0 ] unsigned int 
  5849 ;;  base            2   27[BANK0 ] int 
  5850 ;; Auto vars:     Size  Location     Type
  5851 ;;  v               2   30[BANK0 ] unsigned int 
  5852 ;;  c               1   32[BANK0 ] unsigned char 
  5853 ;; Return value:  Size  Location     Type
  5854 ;;                  2   23[BANK0 ] PTR unsigned char 
  5855 ;; Registers used:
  5856 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5857 ;; Tracked objects:
  5858 ;;		On entry : 0/0
  5859 ;;		On exit  : 0/0
  5860 ;;		Unchanged: 0/0
  5861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5862 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5863 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5864 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5865 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5866 ;;Total ram usage:       10 bytes
  5867 ;; Hardware stack levels used:    1
  5868 ;; Hardware stack levels required when called:    5
  5869 ;; This function calls:
  5870 ;;		___lwdiv
  5871 ;;		___lwmod
  5872 ;; This function is called by:
  5873 ;;		_itoa
  5874 ;; This function uses a non-reentrant model
  5875 ;;
  5876                           
  5877                           
  5878                           ;psect for function _utoa
  5879  0BAF                     _utoa:	
  5880                           
  5881                           ;incstack = 0
  5882                           ; Regs used in _utoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5883  0BAF  0020               	movlb	0	; select bank0
  5884  0BB0  083A               	movf	utoa@val+1,w
  5885  0BB1  00BF               	movwf	utoa@v+1
  5886  0BB2  0839               	movf	utoa@val,w
  5887  0BB3  00BE               	movwf	utoa@v
  5888  0BB4                     l3520:	
  5889  0BB4  083C               	movf	utoa@base+1,w
  5890  0BB5  00B0               	movwf	___lwdiv@divisor+1
  5891  0BB6  083B               	movf	utoa@base,w
  5892  0BB7  00AF               	movwf	___lwdiv@divisor
  5893  0BB8  083F               	movf	utoa@v+1,w
  5894  0BB9  00B2               	movwf	___lwdiv@dividend+1
  5895  0BBA  083E               	movf	utoa@v,w
  5896  0BBB  00B1               	movwf	___lwdiv@dividend
  5897  0BBC  3189  21DD  318B   	fcall	___lwdiv
  5898  0BBF  0020               	movlb	0	; select bank0
  5899  0BC0  0830               	movf	?___lwdiv+1,w
  5900  0BC1  00BF               	movwf	utoa@v+1
  5901  0BC2  082F               	movf	?___lwdiv,w
  5902  0BC3  00BE               	movwf	utoa@v
  5903  0BC4  3001               	movlw	1
  5904  0BC5  07B7               	addwf	utoa@buf,f
  5905  0BC6  3000               	movlw	0
  5906  0BC7  3DB8               	addwfc	utoa@buf+1,f
  5907  0BC8  083E               	movf	utoa@v,w
  5908  0BC9  043F               	iorwf	utoa@v+1,w
  5909  0BCA  1D03               	btfss	3,2
  5910  0BCB  2BB4               	goto	l3520
  5911  0BCC  0837               	movf	utoa@buf,w
  5912  0BCD  0086               	movwf	6
  5913  0BCE  0838               	movf	utoa@buf+1,w
  5914  0BCF  0087               	movwf	7
  5915  0BD0  0181               	clrf	1
  5916  0BD1  3001               	movlw	1
  5917  0BD2  02B7               	subwf	utoa@buf,f
  5918  0BD3  3000               	movlw	0
  5919  0BD4  3BB8               	subwfb	utoa@buf+1,f
  5920  0BD5                     l3530:	
  5921  0BD5  083C               	movf	utoa@base+1,w
  5922  0BD6  00B0               	movwf	___lwmod@divisor+1
  5923  0BD7  083B               	movf	utoa@base,w
  5924  0BD8  00AF               	movwf	___lwmod@divisor
  5925  0BD9  083A               	movf	utoa@val+1,w
  5926  0BDA  00B2               	movwf	___lwmod@dividend+1
  5927  0BDB  0839               	movf	utoa@val,w
  5928  0BDC  00B1               	movwf	___lwmod@dividend
  5929  0BDD  3189  211C  318B   	fcall	___lwmod
  5930  0BE0  0020               	movlb	0	; select bank0
  5931  0BE1  082F               	movf	?___lwmod,w
  5932  0BE2  00BD               	movwf	??_utoa
  5933  0BE3  083D               	movf	??_utoa,w
  5934  0BE4  00C0               	movwf	utoa@c
  5935  0BE5  083C               	movf	utoa@base+1,w
  5936  0BE6  00B0               	movwf	___lwdiv@divisor+1
  5937  0BE7  083B               	movf	utoa@base,w
  5938  0BE8  00AF               	movwf	___lwdiv@divisor
  5939  0BE9  083A               	movf	utoa@val+1,w
  5940  0BEA  00B2               	movwf	___lwdiv@dividend+1
  5941  0BEB  0839               	movf	utoa@val,w
  5942  0BEC  00B1               	movwf	___lwdiv@dividend
  5943  0BED  3189  21DD  318B   	fcall	___lwdiv
  5944  0BF0  0020               	movlb	0	; select bank0
  5945  0BF1  0830               	movf	?___lwdiv+1,w
  5946  0BF2  00BA               	movwf	utoa@val+1
  5947  0BF3  082F               	movf	?___lwdiv,w
  5948  0BF4  00B9               	movwf	utoa@val
  5949  0BF5  300A               	movlw	10
  5950  0BF6  0240               	subwf	utoa@c,w
  5951  0BF7  1C03               	skipc
  5952  0BF8  2BFD               	goto	l794
  5953  0BF9  3007               	movlw	7
  5954  0BFA  00BD               	movwf	??_utoa
  5955  0BFB  083D               	movf	??_utoa,w
  5956  0BFC  07C0               	addwf	utoa@c,f
  5957  0BFD                     l794:	
  5958  0BFD  3030               	movlw	48
  5959  0BFE  00BD               	movwf	??_utoa
  5960  0BFF  083D               	movf	??_utoa,w
  5961  0C00  07C0               	addwf	utoa@c,f
  5962  0C01  0837               	movf	utoa@buf,w
  5963  0C02  0086               	movwf	6
  5964  0C03  0838               	movf	utoa@buf+1,w
  5965  0C04  0087               	movwf	7
  5966  0C05  0840               	movf	utoa@c,w
  5967  0C06  0081               	movwf	1
  5968  0C07  3001               	movlw	1
  5969  0C08  02B7               	subwf	utoa@buf,f
  5970  0C09  3000               	movlw	0
  5971  0C0A  3BB8               	subwfb	utoa@buf+1,f
  5972  0C0B  0839               	movf	utoa@val,w
  5973  0C0C  043A               	iorwf	utoa@val+1,w
  5974  0C0D  1D03               	btfss	3,2
  5975  0C0E  2BD5               	goto	l3530
  5976                           
  5977                           ;	Return value of _utoa is never used
  5978  0C0F  3001               	movlw	1
  5979  0C10  07B7               	addwf	utoa@buf,f
  5980  0C11  3000               	movlw	0
  5981  0C12  3DB8               	addwfc	utoa@buf+1,f
  5982  0C13  0008               	return
  5983  0C14                     __end_of_utoa:	
  5984                           
  5985                           	psect	text6
  5986  091C                     __ptext6:	
  5987 ;; *************** function ___lwmod *****************
  5988 ;; Defined at:
  5989 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwmod.c"
  5990 ;; Parameters:    Size  Location     Type
  5991 ;;  divisor         2   15[BANK0 ] unsigned int 
  5992 ;;  dividend        2   17[BANK0 ] unsigned int 
  5993 ;; Auto vars:     Size  Location     Type
  5994 ;;  counter         1   20[BANK0 ] unsigned char 
  5995 ;; Return value:  Size  Location     Type
  5996 ;;                  2   15[BANK0 ] unsigned int 
  5997 ;; Registers used:
  5998 ;;		wreg, status,2, status,0
  5999 ;; Tracked objects:
  6000 ;;		On entry : 0/0
  6001 ;;		On exit  : 0/0
  6002 ;;		Unchanged: 0/0
  6003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6004 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6005 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6006 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6007 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6008 ;;Total ram usage:        6 bytes
  6009 ;; Hardware stack levels used:    1
  6010 ;; Hardware stack levels required when called:    4
  6011 ;; This function calls:
  6012 ;;		Nothing
  6013 ;; This function is called by:
  6014 ;;		_utoa
  6015 ;; This function uses a non-reentrant model
  6016 ;;
  6017                           
  6018                           
  6019                           ;psect for function ___lwmod
  6020  091C                     ___lwmod:	
  6021                           
  6022                           ;incstack = 0
  6023                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6024  091C  0020               	movlb	0	; select bank0
  6025  091D  082F               	movf	___lwmod@divisor,w
  6026  091E  0430               	iorwf	___lwmod@divisor+1,w
  6027  091F  1903               	btfsc	3,2
  6028  0920  2944               	goto	l3338
  6029  0921  01B4               	clrf	___lwmod@counter
  6030  0922  0AB4               	incf	___lwmod@counter,f
  6031  0923                     l3328:	
  6032  0923  1BB0               	btfsc	___lwmod@divisor+1,7
  6033  0924  292F               	goto	l3330
  6034  0925  3001               	movlw	1
  6035  0926                     u3215:	
  6036  0926  35AF               	lslf	___lwmod@divisor,f
  6037  0927  0DB0               	rlf	___lwmod@divisor+1,f
  6038  0928  0B89               	decfsz	9,f
  6039  0929  2926               	goto	u3215
  6040  092A  3001               	movlw	1
  6041  092B  00B3               	movwf	??___lwmod
  6042  092C  0833               	movf	??___lwmod,w
  6043  092D  07B4               	addwf	___lwmod@counter,f
  6044  092E  2923               	goto	l3328
  6045  092F                     l3330:	
  6046  092F  0830               	movf	___lwmod@divisor+1,w
  6047  0930  0232               	subwf	___lwmod@dividend+1,w
  6048  0931  1D03               	skipz
  6049  0932  2935               	goto	u3235
  6050  0933  082F               	movf	___lwmod@divisor,w
  6051  0934  0231               	subwf	___lwmod@dividend,w
  6052  0935                     u3235:	
  6053  0935  1C03               	skipc
  6054  0936  293B               	goto	l3334
  6055  0937  082F               	movf	___lwmod@divisor,w
  6056  0938  02B1               	subwf	___lwmod@dividend,f
  6057  0939  0830               	movf	___lwmod@divisor+1,w
  6058  093A  3BB2               	subwfb	___lwmod@dividend+1,f
  6059  093B                     l3334:	
  6060  093B  3001               	movlw	1
  6061  093C                     u3245:	
  6062  093C  36B0               	lsrf	___lwmod@divisor+1,f
  6063  093D  0CAF               	rrf	___lwmod@divisor,f
  6064  093E  0B89               	decfsz	9,f
  6065  093F  293C               	goto	u3245
  6066  0940  3001               	movlw	1
  6067  0941  02B4               	subwf	___lwmod@counter,f
  6068  0942  1D03               	btfss	3,2
  6069  0943  292F               	goto	l3330
  6070  0944                     l3338:	
  6071  0944  0832               	movf	___lwmod@dividend+1,w
  6072  0945  00B0               	movwf	?___lwmod+1
  6073  0946  0831               	movf	___lwmod@dividend,w
  6074  0947  00AF               	movwf	?___lwmod
  6075  0948  0008               	return
  6076  0949                     __end_of___lwmod:	
  6077                           
  6078                           	psect	text7
  6079  09DD                     __ptext7:	
  6080 ;; *************** function ___lwdiv *****************
  6081 ;; Defined at:
  6082 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c"
  6083 ;; Parameters:    Size  Location     Type
  6084 ;;  divisor         2   15[BANK0 ] unsigned int 
  6085 ;;  dividend        2   17[BANK0 ] unsigned int 
  6086 ;; Auto vars:     Size  Location     Type
  6087 ;;  quotient        2   21[BANK0 ] unsigned int 
  6088 ;;  counter         1   20[BANK0 ] unsigned char 
  6089 ;; Return value:  Size  Location     Type
  6090 ;;                  2   15[BANK0 ] unsigned int 
  6091 ;; Registers used:
  6092 ;;		wreg, status,2, status,0
  6093 ;; Tracked objects:
  6094 ;;		On entry : 0/0
  6095 ;;		On exit  : 0/0
  6096 ;;		Unchanged: 0/0
  6097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6098 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6099 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6100 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6101 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6102 ;;Total ram usage:        8 bytes
  6103 ;; Hardware stack levels used:    1
  6104 ;; Hardware stack levels required when called:    4
  6105 ;; This function calls:
  6106 ;;		Nothing
  6107 ;; This function is called by:
  6108 ;;		_utoa
  6109 ;; This function uses a non-reentrant model
  6110 ;;
  6111                           
  6112                           
  6113                           ;psect for function ___lwdiv
  6114  09DD                     ___lwdiv:	
  6115                           
  6116                           ;incstack = 0
  6117                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6118  09DD  0020               	movlb	0	; select bank0
  6119  09DE  01B5               	clrf	___lwdiv@quotient
  6120  09DF  01B6               	clrf	___lwdiv@quotient+1
  6121  09E0  082F               	movf	___lwdiv@divisor,w
  6122  09E1  0430               	iorwf	___lwdiv@divisor+1,w
  6123  09E2  1903               	btfsc	3,2
  6124  09E3  2A0D               	goto	l3316
  6125  09E4  01B4               	clrf	___lwdiv@counter
  6126  09E5  0AB4               	incf	___lwdiv@counter,f
  6127  09E6                     l3304:	
  6128  09E6  1BB0               	btfsc	___lwdiv@divisor+1,7
  6129  09E7  29F2               	goto	l3306
  6130  09E8  3001               	movlw	1
  6131  09E9                     u3145:	
  6132  09E9  35AF               	lslf	___lwdiv@divisor,f
  6133  09EA  0DB0               	rlf	___lwdiv@divisor+1,f
  6134  09EB  0B89               	decfsz	9,f
  6135  09EC  29E9               	goto	u3145
  6136  09ED  3001               	movlw	1
  6137  09EE  00B3               	movwf	??___lwdiv
  6138  09EF  0833               	movf	??___lwdiv,w
  6139  09F0  07B4               	addwf	___lwdiv@counter,f
  6140  09F1  29E6               	goto	l3304
  6141  09F2                     l3306:	
  6142  09F2  3001               	movlw	1
  6143  09F3                     u3165:	
  6144  09F3  35B5               	lslf	___lwdiv@quotient,f
  6145  09F4  0DB6               	rlf	___lwdiv@quotient+1,f
  6146  09F5  0B89               	decfsz	9,f
  6147  09F6  29F3               	goto	u3165
  6148  09F7  0830               	movf	___lwdiv@divisor+1,w
  6149  09F8  0232               	subwf	___lwdiv@dividend+1,w
  6150  09F9  1D03               	skipz
  6151  09FA  29FD               	goto	u3175
  6152  09FB  082F               	movf	___lwdiv@divisor,w
  6153  09FC  0231               	subwf	___lwdiv@dividend,w
  6154  09FD                     u3175:	
  6155  09FD  1C03               	skipc
  6156  09FE  2A04               	goto	l3312
  6157  09FF  082F               	movf	___lwdiv@divisor,w
  6158  0A00  02B1               	subwf	___lwdiv@dividend,f
  6159  0A01  0830               	movf	___lwdiv@divisor+1,w
  6160  0A02  3BB2               	subwfb	___lwdiv@dividend+1,f
  6161  0A03  1435               	bsf	___lwdiv@quotient,0
  6162  0A04                     l3312:	
  6163  0A04  3001               	movlw	1
  6164  0A05                     u3185:	
  6165  0A05  36B0               	lsrf	___lwdiv@divisor+1,f
  6166  0A06  0CAF               	rrf	___lwdiv@divisor,f
  6167  0A07  0B89               	decfsz	9,f
  6168  0A08  2A05               	goto	u3185
  6169  0A09  3001               	movlw	1
  6170  0A0A  02B4               	subwf	___lwdiv@counter,f
  6171  0A0B  1D03               	btfss	3,2
  6172  0A0C  29F2               	goto	l3306
  6173  0A0D                     l3316:	
  6174  0A0D  0836               	movf	___lwdiv@quotient+1,w
  6175  0A0E  00B0               	movwf	?___lwdiv+1
  6176  0A0F  0835               	movf	___lwdiv@quotient,w
  6177  0A10  00AF               	movwf	?___lwdiv
  6178  0A11  0008               	return
  6179  0A12                     __end_of___lwdiv:	
  6180                           
  6181                           	psect	text8
  6182  0F0E                     __ptext8:	
  6183 ;; *************** function _initMain *****************
  6184 ;; Defined at:
  6185 ;;		line 31 in file "setup.c"
  6186 ;; Parameters:    Size  Location     Type
  6187 ;;		None
  6188 ;; Auto vars:     Size  Location     Type
  6189 ;;  year            1   16[BANK1 ] unsigned char 
  6190 ;;  month           1   15[BANK1 ] unsigned char 
  6191 ;;  date            1   14[BANK1 ] unsigned char 
  6192 ;;  day             1   13[BANK1 ] unsigned char 
  6193 ;;  hr              1   12[BANK1 ] unsigned char 
  6194 ;;  min             1   11[BANK1 ] unsigned char 
  6195 ;;  sec             1   10[BANK1 ] unsigned char 
  6196 ;; Return value:  Size  Location     Type
  6197 ;;                  1    wreg      void 
  6198 ;; Registers used:
  6199 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6200 ;; Tracked objects:
  6201 ;;		On entry : 0/0
  6202 ;;		On exit  : 0/0
  6203 ;;		Unchanged: 0/0
  6204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6206 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  6207 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  6208 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  6209 ;;Total ram usage:       13 bytes
  6210 ;; Hardware stack levels used:    1
  6211 ;; Hardware stack levels required when called:    8
  6212 ;; This function calls:
  6213 ;;		_DS1302_Initialize
  6214 ;;		_EUSART_Initialize
  6215 ;;		_I2C_Init
  6216 ;;		_OLED_Clear
  6217 ;;		_OLED_Init
  6218 ;;		_OLED_Write_String
  6219 ;;		_OLED_YX
  6220 ;;		_internal_16
  6221 ;; This function is called by:
  6222 ;;		_main
  6223 ;; This function uses a non-reentrant model
  6224 ;;
  6225                           
  6226                           
  6227                           ;psect for function _initMain
  6228  0F0E                     _initMain:	
  6229                           
  6230                           ;setup.c: 33: internal_16();
  6231                           
  6232                           ;incstack = 0
  6233                           ; Regs used in _initMain: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6234  0F0E  3196  2604  318F   	fcall	_internal_16
  6235                           
  6236                           ;setup.c: 36: TRISBbits.TRISB2 = 0;
  6237  0F11  0021               	movlb	1	; select bank1
  6238  0F12  110D               	bcf	13,2	;volatile
  6239                           
  6240                           ;setup.c: 37: ANSELBbits.ANSB2 = 0;
  6241  0F13  0023               	movlb	3	; select bank3
  6242  0F14  110D               	bcf	13,2	;volatile
  6243                           
  6244                           ;setup.c: 39: TRISBbits.TRISB3 = 1;
  6245  0F15  0021               	movlb	1	; select bank1
  6246  0F16  158D               	bsf	13,3	;volatile
  6247                           
  6248                           ;setup.c: 40: ANSELBbits.ANSB3 = 0;
  6249  0F17  0023               	movlb	3	; select bank3
  6250  0F18  118D               	bcf	13,3	;volatile
  6251                           
  6252                           ;setup.c: 48: ANSELCbits.ANSC4 = 0;
  6253  0F19  120E               	bcf	14,4	;volatile
  6254                           
  6255                           ;setup.c: 49: ANSELCbits.ANSC5 = 0;
  6256  0F1A  128E               	bcf	14,5	;volatile
  6257                           
  6258                           ;setup.c: 51: TRISCbits.TRISC4 = 1;
  6259  0F1B  0021               	movlb	1	; select bank1
  6260  0F1C  160E               	bsf	14,4	;volatile
  6261                           
  6262                           ;setup.c: 52: TRISCbits.TRISC5 = 1;
  6263  0F1D  168E               	bsf	14,5	;volatile
  6264                           
  6265                           ;setup.c: 54: PPSLOCK = 0x55;
  6266  0F1E  3055               	movlw	85
  6267  0F1F  003C               	movlb	28	; select bank28
  6268  0F20  008F               	movwf	15	;volatile
  6269                           
  6270                           ;setup.c: 55: PPSLOCK = 0xAA;
  6271  0F21  30AA               	movlw	170
  6272  0F22  008F               	movwf	15	;volatile
  6273                           
  6274                           ;setup.c: 56: PPSLOCKbits.PPSLOCKED = 0x00;
  6275  0F23  100F               	bcf	15,0	;volatile
  6276                           
  6277                           ;setup.c: 58: RC4PPSbits.RC4PPS = 0x0011;
  6278  0F24  003D               	movlb	29	; select bank29
  6279  0F25  0824               	movf	36,w	;volatile
  6280  0F26  39E0               	andlw	-32
  6281  0F27  3811               	iorlw	17
  6282  0F28  00A4               	movwf	36	;volatile
  6283                           
  6284                           ;setup.c: 59: SSPDATPPSbits.SSPDATPPS = 0x0014;
  6285  0F29  003C               	movlb	28	; select bank28
  6286  0F2A  0821               	movf	33,w	;volatile
  6287  0F2B  39E0               	andlw	-32
  6288  0F2C  3814               	iorlw	20
  6289  0F2D  00A1               	movwf	33	;volatile
  6290                           
  6291                           ;setup.c: 60: SSPCLKPPSbits.SSPCLKPPS = 0x0015;
  6292  0F2E  0820               	movf	32,w	;volatile
  6293  0F2F  39E0               	andlw	-32
  6294  0F30  3815               	iorlw	21
  6295  0F31  00A0               	movwf	32	;volatile
  6296                           
  6297                           ;setup.c: 61: RC5PPSbits.RC5PPS = 0x0010;
  6298  0F32  003D               	movlb	29	; select bank29
  6299  0F33  0825               	movf	37,w	;volatile
  6300  0F34  39E0               	andlw	-32
  6301  0F35  3810               	iorlw	16
  6302  0F36  00A5               	movwf	37	;volatile
  6303                           
  6304                           ;setup.c: 63: RB2PPSbits.RB2PPS = 0x14;
  6305  0F37  081A               	movf	26,w	;volatile
  6306  0F38  39E0               	andlw	-32
  6307  0F39  3814               	iorlw	20
  6308  0F3A  009A               	movwf	26	;volatile
  6309                           
  6310                           ;setup.c: 64: RXPPSbits.RXPPS = 0x0B;
  6311  0F3B  003C               	movlb	28	; select bank28
  6312  0F3C  0824               	movf	36,w	;volatile
  6313  0F3D  39E0               	andlw	-32
  6314  0F3E  380B               	iorlw	11
  6315  0F3F  00A4               	movwf	36	;volatile
  6316                           
  6317                           ;setup.c: 66: PPSLOCK = 0x55;
  6318  0F40  3055               	movlw	85
  6319  0F41  008F               	movwf	15	;volatile
  6320                           
  6321                           ;setup.c: 67: PPSLOCK = 0xAA;
  6322  0F42  30AA               	movlw	170
  6323  0F43  008F               	movwf	15	;volatile
  6324                           
  6325                           ;setup.c: 68: PPSLOCKbits.PPSLOCKED = 0x01;
  6326  0F44  140F               	bsf	15,0	;volatile
  6327                           
  6328                           ;setup.c: 71: TRISD = 0;
  6329  0F45  0021               	movlb	1	; select bank1
  6330  0F46  018F               	clrf	15	;volatile
  6331                           
  6332                           ;setup.c: 72: ANSELD = 0;
  6333  0F47  0023               	movlb	3	; select bank3
  6334  0F48  018F               	clrf	15	;volatile
  6335                           
  6336                           ;setup.c: 75: I2C_Init();
  6337  0F49  3196  2656  318F   	fcall	_I2C_Init
  6338                           
  6339                           ;setup.c: 77: _delay((unsigned long)((500)*(16000000/4000.0)));
  6340  0F4C  300B               	movlw	11
  6341  0F4D  0021               	movlb	1	; select bank1
  6342  0F4E  00DE               	movwf	(??_initMain^(0+128)+2)
  6343  0F4F  3026               	movlw	38
  6344  0F50  00DD               	movwf	(??_initMain^(0+128)+1)
  6345  0F51  3066               	movlw	102
  6346  0F52  00DC               	movwf	??_initMain^(0+128)
  6347  0F53                     u3797:	
  6348  0F53  0BDC               	decfsz	??_initMain^(0+128),f
  6349  0F54  2F53               	goto	u3797
  6350  0F55  0BDD               	decfsz	(??_initMain^(0+128)+1),f
  6351  0F56  2F53               	goto	u3797
  6352  0F57  0BDE               	decfsz	(??_initMain^(0+128)+2),f
  6353  0F58  2F53               	goto	u3797
  6354  0F59  3200               	nop2
  6355                           
  6356                           ;setup.c: 80: OLED_Init();
  6357  0F5A  318A  22E6  318F   	fcall	_OLED_Init
  6358                           
  6359                           ;setup.c: 82: _delay((unsigned long)((500)*(16000000/4000.0)));
  6360  0F5D  300B               	movlw	11
  6361  0F5E  0021               	movlb	1	; select bank1
  6362  0F5F  00DE               	movwf	(??_initMain^(0+128)+2)
  6363  0F60  3026               	movlw	38
  6364  0F61  00DD               	movwf	(??_initMain^(0+128)+1)
  6365  0F62  3066               	movlw	102
  6366  0F63  00DC               	movwf	??_initMain^(0+128)
  6367  0F64                     u3807:	
  6368  0F64  0BDC               	decfsz	??_initMain^(0+128),f
  6369  0F65  2F64               	goto	u3807
  6370  0F66  0BDD               	decfsz	(??_initMain^(0+128)+1),f
  6371  0F67  2F64               	goto	u3807
  6372  0F68  0BDE               	decfsz	(??_initMain^(0+128)+2),f
  6373  0F69  2F64               	goto	u3807
  6374  0F6A  3200               	nop2
  6375                           
  6376                           ;setup.c: 85: OLED_YX(0, 0);
  6377  0F6B  0020               	movlb	0	; select bank0
  6378  0F6C  01B4               	clrf	OLED_YX@Column
  6379  0F6D  3000               	movlw	0
  6380  0F6E  3188  20C5  318F   	fcall	_OLED_YX
  6381                           
  6382                           ;setup.c: 86: OLED_Write_String("Init");
  6383  0F71  307C               	movlw	low (STR_44| (0+32768))
  6384  0F72  0020               	movlb	0	; select bank0
  6385  0F73  00CF               	movwf	OLED_Write_String@s
  6386  0F74  3085               	movlw	high (STR_44| (0+32768))
  6387  0F75  00D0               	movwf	OLED_Write_String@s+1
  6388  0F76  3196  267F  318F   	fcall	_OLED_Write_String
  6389                           
  6390                           ;setup.c: 88: _delay((unsigned long)((1000)*(16000000/4000.0)));
  6391  0F79  3015               	movlw	21
  6392  0F7A  0021               	movlb	1	; select bank1
  6393  0F7B  00DE               	movwf	(??_initMain^(0+128)+2)
  6394  0F7C  304B               	movlw	75
  6395  0F7D  00DD               	movwf	(??_initMain^(0+128)+1)
  6396  0F7E  30D1               	movlw	209
  6397  0F7F  00DC               	movwf	??_initMain^(0+128)
  6398  0F80                     u3817:	
  6399  0F80  0BDC               	decfsz	??_initMain^(0+128),f
  6400  0F81  2F80               	goto	u3817
  6401  0F82  0BDD               	decfsz	(??_initMain^(0+128)+1),f
  6402  0F83  2F80               	goto	u3817
  6403  0F84  0BDE               	decfsz	(??_initMain^(0+128)+2),f
  6404  0F85  2F80               	goto	u3817
  6405  0F86  0000               	nop
  6406                           
  6407                           ;setup.c: 91: OLED_Clear();
  6408  0F87  3189  2177  318F   	fcall	_OLED_Clear
  6409                           
  6410                           ;setup.c: 93: _delay((unsigned long)((500)*(16000000/4000.0)));
  6411  0F8A  300B               	movlw	11
  6412  0F8B  0021               	movlb	1	; select bank1
  6413  0F8C  00DE               	movwf	(??_initMain^(0+128)+2)
  6414  0F8D  3026               	movlw	38
  6415  0F8E  00DD               	movwf	(??_initMain^(0+128)+1)
  6416  0F8F  3066               	movlw	102
  6417  0F90  00DC               	movwf	??_initMain^(0+128)
  6418  0F91                     u3827:	
  6419  0F91  0BDC               	decfsz	??_initMain^(0+128),f
  6420  0F92  2F91               	goto	u3827
  6421  0F93  0BDD               	decfsz	(??_initMain^(0+128)+1),f
  6422  0F94  2F91               	goto	u3827
  6423  0F95  0BDE               	decfsz	(??_initMain^(0+128)+2),f
  6424  0F96  2F91               	goto	u3827
  6425  0F97  3200               	nop2
  6426                           
  6427                           ;setup.c: 97: byte sec = 51;
  6428  0F98  3033               	movlw	51
  6429  0F99  0021               	movlb	1	; select bank1
  6430  0F9A  00DC               	movwf	??_initMain^(0+128)
  6431  0F9B  085C               	movf	??_initMain^(0+128),w
  6432  0F9C  00E2               	movwf	initMain@sec^(0+128)
  6433                           
  6434                           ;setup.c: 98: byte min = 59;
  6435  0F9D  303B               	movlw	59
  6436  0F9E  00DC               	movwf	??_initMain^(0+128)
  6437  0F9F  085C               	movf	??_initMain^(0+128),w
  6438  0FA0  00E3               	movwf	initMain@min^(0+128)
  6439                           
  6440                           ;setup.c: 99: byte hr = 23;
  6441  0FA1  3017               	movlw	23
  6442  0FA2  00DC               	movwf	??_initMain^(0+128)
  6443  0FA3  085C               	movf	??_initMain^(0+128),w
  6444  0FA4  00E4               	movwf	initMain@hr^(0+128)
  6445                           
  6446                           ;setup.c: 100: byte day = 2;
  6447  0FA5  3002               	movlw	2
  6448  0FA6  00DC               	movwf	??_initMain^(0+128)
  6449  0FA7  085C               	movf	??_initMain^(0+128),w
  6450  0FA8  00E5               	movwf	initMain@day^(0+128)
  6451                           
  6452                           ;setup.c: 101: byte date = 30;
  6453  0FA9  301E               	movlw	30
  6454  0FAA  00DC               	movwf	??_initMain^(0+128)
  6455  0FAB  085C               	movf	??_initMain^(0+128),w
  6456  0FAC  00E6               	movwf	initMain@date^(0+128)
  6457                           
  6458                           ;setup.c: 102: byte month = 4;
  6459  0FAD  3004               	movlw	4
  6460  0FAE  00DC               	movwf	??_initMain^(0+128)
  6461  0FAF  085C               	movf	??_initMain^(0+128),w
  6462  0FB0  00E7               	movwf	initMain@month^(0+128)
  6463                           
  6464                           ;setup.c: 103: byte year = 17;
  6465  0FB1  3011               	movlw	17
  6466  0FB2  00DC               	movwf	??_initMain^(0+128)
  6467  0FB3  085C               	movf	??_initMain^(0+128),w
  6468  0FB4  00E8               	movwf	initMain@year^(0+128)
  6469                           
  6470                           ;setup.c: 106: DS1302_Initialize(sec, min, hr, day, date, month, year);
  6471  0FB5  0863               	movf	initMain@min^(0+128),w
  6472  0FB6  00DC               	movwf	??_initMain^(0+128)
  6473  0FB7  085C               	movf	??_initMain^(0+128),w
  6474  0FB8  0020               	movlb	0	; select bank0
  6475  0FB9  00BE               	movwf	DS1302_Initialize@min
  6476  0FBA  0021               	movlb	1	; select bank1
  6477  0FBB  0864               	movf	initMain@hr^(0+128),w
  6478  0FBC  00DD               	movwf	(??_initMain+1)^(0+128)
  6479  0FBD  085D               	movf	(??_initMain+1)^(0+128),w
  6480  0FBE  0020               	movlb	0	; select bank0
  6481  0FBF  00BF               	movwf	DS1302_Initialize@hr
  6482  0FC0  0021               	movlb	1	; select bank1
  6483  0FC1  0865               	movf	initMain@day^(0+128),w
  6484  0FC2  00DE               	movwf	(??_initMain+2)^(0+128)
  6485  0FC3  085E               	movf	(??_initMain+2)^(0+128),w
  6486  0FC4  0020               	movlb	0	; select bank0
  6487  0FC5  00C0               	movwf	DS1302_Initialize@day
  6488  0FC6  0021               	movlb	1	; select bank1
  6489  0FC7  0866               	movf	initMain@date^(0+128),w
  6490  0FC8  00DF               	movwf	(??_initMain+3)^(0+128)
  6491  0FC9  085F               	movf	(??_initMain+3)^(0+128),w
  6492  0FCA  0020               	movlb	0	; select bank0
  6493  0FCB  00C1               	movwf	DS1302_Initialize@date
  6494  0FCC  0021               	movlb	1	; select bank1
  6495  0FCD  0867               	movf	initMain@month^(0+128),w
  6496  0FCE  00E0               	movwf	(??_initMain+4)^(0+128)
  6497  0FCF  0860               	movf	(??_initMain+4)^(0+128),w
  6498  0FD0  0020               	movlb	0	; select bank0
  6499  0FD1  00C2               	movwf	DS1302_Initialize@mth
  6500  0FD2  0021               	movlb	1	; select bank1
  6501  0FD3  0868               	movf	initMain@year^(0+128),w
  6502  0FD4  00E1               	movwf	(??_initMain+5)^(0+128)
  6503  0FD5  0861               	movf	(??_initMain+5)^(0+128),w
  6504  0FD6  0020               	movlb	0	; select bank0
  6505  0FD7  00C3               	movwf	DS1302_Initialize@year
  6506  0FD8  0021               	movlb	1	; select bank1
  6507  0FD9  0862               	movf	initMain@sec^(0+128),w
  6508  0FDA  318D  2563  318F   	fcall	_DS1302_Initialize
  6509                           
  6510                           ;setup.c: 109: EUSART_Initialize(9600);
  6511  0FDD  3000               	movlw	0
  6512  0FDE  0020               	movlb	0	; select bank0
  6513  0FDF  00C1               	movwf	EUSART_Initialize@baudrate+3
  6514  0FE0  3000               	movlw	0
  6515  0FE1  00C0               	movwf	EUSART_Initialize@baudrate+2
  6516  0FE2  3025               	movlw	37
  6517  0FE3  00BF               	movwf	EUSART_Initialize@baudrate+1
  6518  0FE4  3080               	movlw	128
  6519  0FE5  00BE               	movwf	EUSART_Initialize@baudrate
  6520  0FE6  318E  2666  318F   	fcall	_EUSART_Initialize
  6521                           
  6522                           ;setup.c: 110: _delay((unsigned long)((2000)*(16000000/4000.0)));
  6523  0FE9  3029               	movlw	41
  6524  0FEA  0021               	movlb	1	; select bank1
  6525  0FEB  00DE               	movwf	(??_initMain^(0+128)+2)
  6526  0FEC  3096               	movlw	150
  6527  0FED  00DD               	movwf	(??_initMain^(0+128)+1)
  6528  0FEE  30A6               	movlw	166
  6529  0FEF  00DC               	movwf	??_initMain^(0+128)
  6530  0FF0                     u3837:	
  6531  0FF0  0BDC               	decfsz	??_initMain^(0+128),f
  6532  0FF1  2FF0               	goto	u3837
  6533  0FF2  0BDD               	decfsz	(??_initMain^(0+128)+1),f
  6534  0FF3  2FF0               	goto	u3837
  6535  0FF4  0BDE               	decfsz	(??_initMain^(0+128)+2),f
  6536  0FF5  2FF0               	goto	u3837
  6537                           
  6538                           ;setup.c: 113: OLED_Clear();
  6539  0FF6  3189  2177         	fcall	_OLED_Clear
  6540                           
  6541                           ;setup.c: 120: OPTION_REGbits.TMR0CS = 0;
  6542  0FF8  0021               	movlb	1	; select bank1
  6543  0FF9  1295               	bcf	21,5	;volatile
  6544                           
  6545                           ;setup.c: 123: OPTION_REGbits.PSA = 0;
  6546  0FFA  1195               	bcf	21,3	;volatile
  6547                           
  6548                           ;setup.c: 126: OPTION_REGbits.PS = 0b111;
  6549  0FFB  3007               	movlw	7
  6550  0FFC  0495               	iorwf	21,f	;volatile
  6551                           
  6552                           ;setup.c: 129: INTCONbits.TMR0IE = 1;
  6553  0FFD  168B               	bsf	11,5	;volatile
  6554                           
  6555                           ;setup.c: 132: (GIE = 1);
  6556  0FFE  178B               	bsf	11,7	;volatile
  6557  0FFF  0008               	return
  6558  1000                     __end_of_initMain:	
  6559                           
  6560                           	psect	text9
  6561  1604                     __ptext9:	
  6562 ;; *************** function _internal_16 *****************
  6563 ;; Defined at:
  6564 ;;		line 56 in file "16F1717_Internal.c"
  6565 ;; Parameters:    Size  Location     Type
  6566 ;;		None
  6567 ;; Auto vars:     Size  Location     Type
  6568 ;;		None
  6569 ;; Return value:  Size  Location     Type
  6570 ;;                  1    wreg      void 
  6571 ;; Registers used:
  6572 ;;		None
  6573 ;; Tracked objects:
  6574 ;;		On entry : 0/0
  6575 ;;		On exit  : 0/0
  6576 ;;		Unchanged: 0/0
  6577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6582 ;;Total ram usage:        0 bytes
  6583 ;; Hardware stack levels used:    1
  6584 ;; Hardware stack levels required when called:    4
  6585 ;; This function calls:
  6586 ;;		Nothing
  6587 ;; This function is called by:
  6588 ;;		_initMain
  6589 ;; This function uses a non-reentrant model
  6590 ;;
  6591                           
  6592                           
  6593                           ;psect for function _internal_16
  6594  1604                     _internal_16:	
  6595                           
  6596                           ;16F1717_Internal.c: 58: SCS0 = 0;
  6597                           
  6598                           ;incstack = 0
  6599                           ; Regs used in _internal_16: []
  6600  1604  0021               	movlb	1	; select bank1
  6601  1605  1019               	bcf	25,0	;volatile
  6602                           
  6603                           ;16F1717_Internal.c: 59: SCS1 = 0;
  6604  1606  1099               	bcf	25,1	;volatile
  6605                           
  6606                           ;16F1717_Internal.c: 62: IRCF0 = 1;
  6607  1607  1599               	bsf	25,3	;volatile
  6608                           
  6609                           ;16F1717_Internal.c: 63: IRCF1 = 1;
  6610  1608  1619               	bsf	25,4	;volatile
  6611                           
  6612                           ;16F1717_Internal.c: 64: IRCF2 = 1;
  6613  1609  1699               	bsf	25,5	;volatile
  6614                           
  6615                           ;16F1717_Internal.c: 65: IRCF3 = 1;
  6616  160A  1719               	bsf	25,6	;volatile
  6617                           
  6618                           ;16F1717_Internal.c: 68: SPLLEN = 0;
  6619  160B  1399               	bcf	25,7	;volatile
  6620  160C  0008               	return
  6621  160D                     __end_of_internal_16:	
  6622                           
  6623                           	psect	text10
  6624  167F                     __ptext10:	
  6625 ;; *************** function _OLED_Write_String *****************
  6626 ;; Defined at:
  6627 ;;		line 284 in file "oled.c"
  6628 ;; Parameters:    Size  Location     Type
  6629 ;;  s               2   47[BANK0 ] PTR unsigned char 
  6630 ;;		 -> ftoa@buf(17), STR_44(5), STR_43(6), STR_42(6), 
  6631 ;;		 -> OLED_Write_Integer@s(20), 
  6632 ;; Auto vars:     Size  Location     Type
  6633 ;;		None
  6634 ;; Return value:  Size  Location     Type
  6635 ;;                  1    wreg      void 
  6636 ;; Registers used:
  6637 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6638 ;; Tracked objects:
  6639 ;;		On entry : 0/0
  6640 ;;		On exit  : 0/0
  6641 ;;		Unchanged: 0/0
  6642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6643 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6645 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6646 ;;      Totals:         0       2       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6647 ;;Total ram usage:        3 bytes
  6648 ;; Hardware stack levels used:    1
  6649 ;; Hardware stack levels required when called:    6
  6650 ;; This function calls:
  6651 ;;		_OLED_PutChar
  6652 ;; This function is called by:
  6653 ;;		_initMain
  6654 ;;		_OLED_Write_Integer
  6655 ;;		_OLED_Write_Float
  6656 ;; This function uses a non-reentrant model
  6657 ;;
  6658                           
  6659                           
  6660                           ;psect for function _OLED_Write_String
  6661  167F                     _OLED_Write_String:	
  6662  167F                     l3482:	
  6663                           ;oled.c: 286: while (*s) OLED_PutChar( *s++);
  6664                           
  6665                           ;incstack = 0
  6666                           ; Regs used in _OLED_Write_String: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6667                           
  6668  167F  0020               	movlb	0	; select bank0
  6669  1680  084F               	movf	OLED_Write_String@s,w
  6670  1681  0084               	movwf	4
  6671  1682  0850               	movf	OLED_Write_String@s+1,w
  6672  1683  0085               	movwf	5
  6673  1684  0012               	moviw fsr0++
  6674  1685  1903               	btfsc	3,2
  6675  1686  0008               	return
  6676  1687  0020               	movlb	0	; select bank0
  6677  1688  084F               	movf	OLED_Write_String@s,w
  6678  1689  0084               	movwf	4
  6679  168A  0850               	movf	OLED_Write_String@s+1,w
  6680  168B  0085               	movwf	5
  6681  168C  0800               	movf	0,w	;code access
  6682  168D  318C  24E7  3196   	fcall	_OLED_PutChar
  6683  1690  3001               	movlw	1
  6684  1691  0020               	movlb	0	; select bank0
  6685  1692  07CF               	addwf	OLED_Write_String@s,f
  6686  1693  3000               	movlw	0
  6687  1694  3DD0               	addwfc	OLED_Write_String@s+1,f
  6688  1695  2E7F               	goto	l3482
  6689  1696                     __end_of_OLED_Write_String:	
  6690                           
  6691                           	psect	text11
  6692  0AE6                     __ptext11:	
  6693 ;; *************** function _OLED_Init *****************
  6694 ;; Defined at:
  6695 ;;		line 174 in file "oled.c"
  6696 ;; Parameters:    Size  Location     Type
  6697 ;;		None
  6698 ;; Auto vars:     Size  Location     Type
  6699 ;;		None
  6700 ;; Return value:  Size  Location     Type
  6701 ;;                  1    wreg      void 
  6702 ;; Registers used:
  6703 ;;		wreg, status,2, status,0, pclath, cstack
  6704 ;; Tracked objects:
  6705 ;;		On entry : 0/0
  6706 ;;		On exit  : 0/0
  6707 ;;		Unchanged: 0/0
  6708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6713 ;;Total ram usage:        0 bytes
  6714 ;; Hardware stack levels used:    1
  6715 ;; Hardware stack levels required when called:    6
  6716 ;; This function calls:
  6717 ;;		_OLED_Command
  6718 ;; This function is called by:
  6719 ;;		_initMain
  6720 ;; This function uses a non-reentrant model
  6721 ;;
  6722                           
  6723                           
  6724                           ;psect for function _OLED_Init
  6725  0AE6                     _OLED_Init:	
  6726                           
  6727                           ;oled.c: 176: OLED_Command(0xAE);
  6728                           
  6729                           ;incstack = 0
  6730                           ; Regs used in _OLED_Init: [wreg+status,2+status,0+pclath+cstack]
  6731  0AE6  30AE               	movlw	174
  6732  0AE7  3197  2771  318A   	fcall	_OLED_Command
  6733                           
  6734                           ;oled.c: 177: OLED_Command(0xD5);
  6735  0AEA  30D5               	movlw	213
  6736  0AEB  3197  2771  318A   	fcall	_OLED_Command
  6737                           
  6738                           ;oled.c: 178: OLED_Command(0x80);
  6739  0AEE  3080               	movlw	128
  6740  0AEF  3197  2771  318A   	fcall	_OLED_Command
  6741                           
  6742                           ;oled.c: 179: OLED_Command(0xA8);
  6743  0AF2  30A8               	movlw	168
  6744  0AF3  3197  2771  318A   	fcall	_OLED_Command
  6745                           
  6746                           ;oled.c: 180: OLED_Command(0x1F);
  6747  0AF6  301F               	movlw	31
  6748  0AF7  3197  2771  318A   	fcall	_OLED_Command
  6749                           
  6750                           ;oled.c: 181: OLED_Command(0xD3);
  6751  0AFA  30D3               	movlw	211
  6752  0AFB  3197  2771  318A   	fcall	_OLED_Command
  6753                           
  6754                           ;oled.c: 182: OLED_Command(0x0);
  6755  0AFE  3000               	movlw	0
  6756  0AFF  3197  2771  318A   	fcall	_OLED_Command
  6757                           
  6758                           ;oled.c: 183: OLED_Command(0x40 | 0x0);
  6759  0B02  3040               	movlw	64
  6760  0B03  3197  2771  318A   	fcall	_OLED_Command
  6761                           
  6762                           ;oled.c: 184: OLED_Command(0x8D);
  6763  0B06  308D               	movlw	141
  6764  0B07  3197  2771  318A   	fcall	_OLED_Command
  6765                           
  6766                           ;oled.c: 185: OLED_Command(0xAF);
  6767  0B0A  30AF               	movlw	175
  6768  0B0B  3197  2771  318A   	fcall	_OLED_Command
  6769                           
  6770                           ;oled.c: 186: OLED_Command(0x20);
  6771  0B0E  3020               	movlw	32
  6772  0B0F  3197  2771  318A   	fcall	_OLED_Command
  6773                           
  6774                           ;oled.c: 187: OLED_Command(0x00);
  6775  0B12  3000               	movlw	0
  6776  0B13  3197  2771  318A   	fcall	_OLED_Command
  6777                           
  6778                           ;oled.c: 188: OLED_Command(0xA0 | 0x1);
  6779  0B16  30A1               	movlw	161
  6780  0B17  3197  2771  318A   	fcall	_OLED_Command
  6781                           
  6782                           ;oled.c: 189: OLED_Command(0xC8);
  6783  0B1A  30C8               	movlw	200
  6784  0B1B  3197  2771  318A   	fcall	_OLED_Command
  6785                           
  6786                           ;oled.c: 190: OLED_Command(0xDA);
  6787  0B1E  30DA               	movlw	218
  6788  0B1F  3197  2771  318A   	fcall	_OLED_Command
  6789                           
  6790                           ;oled.c: 191: OLED_Command(0x02);
  6791  0B22  3002               	movlw	2
  6792  0B23  3197  2771  318A   	fcall	_OLED_Command
  6793                           
  6794                           ;oled.c: 192: OLED_Command(0x81);
  6795  0B26  3081               	movlw	129
  6796  0B27  3197  2771  318A   	fcall	_OLED_Command
  6797                           
  6798                           ;oled.c: 193: OLED_Command(0x8F);
  6799  0B2A  308F               	movlw	143
  6800  0B2B  3197  2771  318A   	fcall	_OLED_Command
  6801                           
  6802                           ;oled.c: 194: OLED_Command(0xD9);
  6803  0B2E  30D9               	movlw	217
  6804  0B2F  3197  2771  318A   	fcall	_OLED_Command
  6805                           
  6806                           ;oled.c: 195: OLED_Command(0xF1);
  6807  0B32  30F1               	movlw	241
  6808  0B33  3197  2771  318A   	fcall	_OLED_Command
  6809                           
  6810                           ;oled.c: 196: OLED_Command(0xDB);
  6811  0B36  30DB               	movlw	219
  6812  0B37  3197  2771  318A   	fcall	_OLED_Command
  6813                           
  6814                           ;oled.c: 197: OLED_Command(0x40);
  6815  0B3A  3040               	movlw	64
  6816  0B3B  3197  2771  318A   	fcall	_OLED_Command
  6817                           
  6818                           ;oled.c: 198: OLED_Command(0xA4);
  6819  0B3E  30A4               	movlw	164
  6820  0B3F  3197  2771  318A   	fcall	_OLED_Command
  6821                           
  6822                           ;oled.c: 199: OLED_Command(0xA6);
  6823  0B42  30A6               	movlw	166
  6824  0B43  3197  2771  318A   	fcall	_OLED_Command
  6825                           
  6826                           ;oled.c: 200: OLED_Command(0xAF);
  6827  0B46  30AF               	movlw	175
  6828  0B47  3197  2771         	fcall	_OLED_Command
  6829  0B49  0008               	return
  6830  0B4A                     __end_of_OLED_Init:	
  6831                           
  6832                           	psect	text12
  6833  0977                     __ptext12:	
  6834 ;; *************** function _OLED_Clear *****************
  6835 ;; Defined at:
  6836 ;;		line 264 in file "oled.c"
  6837 ;; Parameters:    Size  Location     Type
  6838 ;;		None
  6839 ;; Auto vars:     Size  Location     Type
  6840 ;;  col             2    2[BANK1 ] unsigned int 
  6841 ;;  row             2    0[BANK1 ] unsigned int 
  6842 ;; Return value:  Size  Location     Type
  6843 ;;                  1    wreg      void 
  6844 ;; Registers used:
  6845 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6846 ;; Tracked objects:
  6847 ;;		On entry : 0/0
  6848 ;;		On exit  : 0/0
  6849 ;;		Unchanged: 0/0
  6850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6852 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6853 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6854 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6855 ;;Total ram usage:        5 bytes
  6856 ;; Hardware stack levels used:    1
  6857 ;; Hardware stack levels required when called:    7
  6858 ;; This function calls:
  6859 ;;		_OLED_PutChar
  6860 ;;		_OLED_YX
  6861 ;; This function is called by:
  6862 ;;		_initMain
  6863 ;; This function uses a non-reentrant model
  6864 ;;
  6865                           
  6866                           
  6867                           ;psect for function _OLED_Clear
  6868  0977                     _OLED_Clear:	
  6869                           
  6870                           ;oled.c: 266: for ( uint16_t row = 0; row < 8; row++ ) {
  6871                           
  6872                           ;incstack = 0
  6873                           ; Regs used in _OLED_Clear: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6874  0977  0021               	movlb	1	; select bank1
  6875  0978  01D8               	clrf	OLED_Clear@row^(0+128)
  6876  0979  01D9               	clrf	(OLED_Clear@row+1)^(0+128)
  6877  097A                     L1:	
  6878  097A  3000               	movlw	0
  6879  097B  0259               	subwf	(OLED_Clear@row+1)^(0+128),w
  6880  097C  3008               	movlw	8
  6881  097D  1903               	skipnz
  6882  097E  0258               	subwf	OLED_Clear@row^(0+128),w
  6883  097F  1803               	btfsc	3,0
  6884  0980  0008               	return
  6885                           
  6886                           ;oled.c: 267: for ( uint16_t col = 0; col < 16; col++ ) {
  6887  0981  01DA               	clrf	OLED_Clear@col^(0+128)
  6888  0982  01DB               	clrf	(OLED_Clear@col+1)^(0+128)
  6889  0983  3000               	movlw	0
  6890  0984  025B               	subwf	(OLED_Clear@col+1)^(0+128),w
  6891  0985  3010               	movlw	16
  6892  0986  1903               	skipnz
  6893  0987  025A               	subwf	OLED_Clear@col^(0+128),w
  6894  0988  1803               	btfsc	3,0
  6895  0989  29A4               	goto	l3474
  6896  098A                     l3466:	
  6897                           
  6898                           ;oled.c: 268: OLED_YX( row, col );
  6899  098A  085A               	movf	OLED_Clear@col^(0+128),w
  6900  098B  0020               	movlb	0	; select bank0
  6901  098C  00CF               	movwf	??_OLED_Clear
  6902  098D  084F               	movf	??_OLED_Clear,w
  6903  098E  00B4               	movwf	OLED_YX@Column
  6904  098F  0021               	movlb	1	; select bank1
  6905  0990  0858               	movf	OLED_Clear@row^(0+128),w
  6906  0991  3188  20C5  3189   	fcall	_OLED_YX
  6907                           
  6908                           ;oled.c: 269: OLED_PutChar(' ');
  6909  0994  3020               	movlw	32
  6910  0995  318C  24E7  3189   	fcall	_OLED_PutChar
  6911  0998  3001               	movlw	1
  6912  0999  0021               	movlb	1	; select bank1
  6913  099A  07DA               	addwf	OLED_Clear@col^(0+128),f
  6914  099B  3000               	movlw	0
  6915  099C  3DDB               	addwfc	(OLED_Clear@col+1)^(0+128),f
  6916  099D  3000               	movlw	0
  6917  099E  025B               	subwf	(OLED_Clear@col+1)^(0+128),w
  6918  099F  3010               	movlw	16
  6919  09A0  1903               	skipnz
  6920  09A1  025A               	subwf	OLED_Clear@col^(0+128),w
  6921  09A2  1C03               	skipc
  6922  09A3  298A               	goto	l3466
  6923  09A4                     l3474:	
  6924  09A4  3001               	movlw	1
  6925  09A5  07D8               	addwf	OLED_Clear@row^(0+128),f
  6926  09A6  3000               	movlw	0
  6927  09A7  3DD9               	addwfc	(OLED_Clear@row+1)^(0+128),f
  6928  09A8  297A               	goto	L1
  6929  09A9                     __end_of_OLED_Clear:	
  6930                           
  6931                           	psect	text13
  6932  08C5                     __ptext13:	
  6933 ;; *************** function _OLED_YX *****************
  6934 ;; Defined at:
  6935 ;;		line 213 in file "oled.c"
  6936 ;; Parameters:    Size  Location     Type
  6937 ;;  Row             1    wreg     unsigned char 
  6938 ;;  Column          1   20[BANK0 ] unsigned char 
  6939 ;; Auto vars:     Size  Location     Type
  6940 ;;  Row             1   24[BANK0 ] unsigned char 
  6941 ;; Return value:  Size  Location     Type
  6942 ;;                  1    wreg      void 
  6943 ;; Registers used:
  6944 ;;		wreg, status,2, status,0, pclath, cstack
  6945 ;; Tracked objects:
  6946 ;;		On entry : 0/0
  6947 ;;		On exit  : 0/0
  6948 ;;		Unchanged: 0/0
  6949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6950 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6951 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6952 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6953 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6954 ;;Total ram usage:        5 bytes
  6955 ;; Hardware stack levels used:    1
  6956 ;; Hardware stack levels required when called:    6
  6957 ;; This function calls:
  6958 ;;		_OLED_Command
  6959 ;; This function is called by:
  6960 ;;		_OLED_Clear
  6961 ;;		_initMain
  6962 ;; This function uses a non-reentrant model
  6963 ;;
  6964                           
  6965                           
  6966                           ;psect for function _OLED_YX
  6967  08C5                     _OLED_YX:	
  6968                           
  6969                           ;incstack = 0
  6970                           ; Regs used in _OLED_YX: [wreg+status,2+status,0+pclath+cstack]
  6971                           ;OLED_YX@Row stored from wreg
  6972  08C5  0020               	movlb	0	; select bank0
  6973  08C6  00B8               	movwf	OLED_YX@Row
  6974                           
  6975                           ;oled.c: 215: OLED_Command( 0xB0 + Row);
  6976  08C7  0838               	movf	OLED_YX@Row,w
  6977  08C8  3EB0               	addlw	176
  6978  08C9  3197  2771  3188   	fcall	_OLED_Command
  6979                           
  6980                           ;oled.c: 216: OLED_Command( 0x00 + (8*Column & 0x0F) );
  6981  08CC  0020               	movlb	0	; select bank0
  6982  08CD  0834               	movf	OLED_YX@Column,w
  6983  08CE  00B5               	movwf	??_OLED_YX
  6984  08CF  3002               	movlw	2
  6985  08D0                     u2965:	
  6986  08D0  35B5               	lslf	??_OLED_YX,f
  6987  08D1  3EFF               	addlw	-1
  6988  08D2  1D03               	skipz
  6989  08D3  28D0               	goto	u2965
  6990  08D4  3535               	lslf	??_OLED_YX,w
  6991  08D5  390F               	andlw	15
  6992  08D6  3197  2771  3188   	fcall	_OLED_Command
  6993                           
  6994                           ;oled.c: 217: OLED_Command( 0x10 + ((8*Column>>4)&0x0F) );
  6995  08D9  0020               	movlb	0	; select bank0
  6996  08DA  0834               	movf	OLED_YX@Column,w
  6997  08DB  00B5               	movwf	??_OLED_YX
  6998  08DC  01B6               	clrf	??_OLED_YX+1
  6999  08DD  35B5               	lslf	??_OLED_YX,f
  7000  08DE  0DB6               	rlf	??_OLED_YX+1,f
  7001  08DF  35B5               	lslf	??_OLED_YX,f
  7002  08E0  0DB6               	rlf	??_OLED_YX+1,f
  7003  08E1  35B5               	lslf	??_OLED_YX,f
  7004  08E2  0DB6               	rlf	??_OLED_YX+1,f
  7005  08E3  3004               	movlw	4
  7006  08E4  00B7               	movwf	??_OLED_YX+2
  7007  08E5                     u2975:	
  7008  08E5  0D36               	rlf	??_OLED_YX+1,w
  7009  08E6  0CB6               	rrf	??_OLED_YX+1,f
  7010  08E7  0CB5               	rrf	??_OLED_YX,f
  7011  08E8  0BB7               	decfsz	??_OLED_YX+2,f
  7012  08E9  28E5               	goto	u2975
  7013  08EA  0835               	movf	??_OLED_YX,w
  7014  08EB  390F               	andlw	15
  7015  08EC  3E10               	addlw	16
  7016  08ED  3197  2771         	fcall	_OLED_Command
  7017  08EF  0008               	return
  7018  08F0                     __end_of_OLED_YX:	
  7019                           
  7020                           	psect	text14
  7021  1771                     __ptext14:	
  7022 ;; *************** function _OLED_Command *****************
  7023 ;; Defined at:
  7024 ;;		line 138 in file "oled.c"
  7025 ;; Parameters:    Size  Location     Type
  7026 ;;  temp            1    wreg     unsigned char 
  7027 ;; Auto vars:     Size  Location     Type
  7028 ;;  temp            1   19[BANK0 ] unsigned char 
  7029 ;; Return value:  Size  Location     Type
  7030 ;;                  1    wreg      void 
  7031 ;; Registers used:
  7032 ;;		wreg, status,2, status,0, pclath, cstack
  7033 ;; Tracked objects:
  7034 ;;		On entry : 0/0
  7035 ;;		On exit  : 0/0
  7036 ;;		Unchanged: 0/0
  7037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7039 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7040 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7041 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7042 ;;Total ram usage:        3 bytes
  7043 ;; Hardware stack levels used:    1
  7044 ;; Hardware stack levels required when called:    5
  7045 ;; This function calls:
  7046 ;;		_Send_I2C_Data
  7047 ;;		_Send_I2C_StartBit
  7048 ;;		_Send_I2C_StopBit
  7049 ;; This function is called by:
  7050 ;;		_OLED_Init
  7051 ;;		_OLED_YX
  7052 ;; This function uses a non-reentrant model
  7053 ;;
  7054                           
  7055                           
  7056                           ;psect for function _OLED_Command
  7057  1771                     _OLED_Command:	
  7058                           
  7059                           ;incstack = 0
  7060                           ; Regs used in _OLED_Command: [wreg+status,2+status,0+pclath+cstack]
  7061                           ;OLED_Command@temp stored from wreg
  7062  1771  0020               	movlb	0	; select bank0
  7063  1772  00B3               	movwf	OLED_Command@temp
  7064                           
  7065                           ;oled.c: 140: Send_I2C_StartBit();
  7066  1773  3195  25EB  3197   	fcall	_Send_I2C_StartBit
  7067                           
  7068                           ;oled.c: 141: Send_I2C_Data(0x3C << 1);
  7069  1776  3078               	movlw	120
  7070  1777  0020               	movlb	0	; select bank0
  7071  1778  00AF               	movwf	Send_I2C_Data@databyte
  7072  1779  3000               	movlw	0
  7073  177A  00B0               	movwf	Send_I2C_Data@databyte+1
  7074  177B  3195  25FB  3197   	fcall	_Send_I2C_Data
  7075                           
  7076                           ;oled.c: 142: Send_I2C_Data(0x00);
  7077  177E  3000               	movlw	0
  7078  177F  0020               	movlb	0	; select bank0
  7079  1780  00AF               	movwf	Send_I2C_Data@databyte
  7080  1781  00B0               	movwf	Send_I2C_Data@databyte+1
  7081  1782  3195  25FB  3197   	fcall	_Send_I2C_Data
  7082                           
  7083                           ;oled.c: 143: Send_I2C_Data(temp);
  7084  1785  0020               	movlb	0	; select bank0
  7085  1786  0833               	movf	OLED_Command@temp,w
  7086  1787  00B1               	movwf	??_OLED_Command
  7087  1788  01B2               	clrf	??_OLED_Command+1
  7088  1789  0831               	movf	??_OLED_Command,w
  7089  178A  00AF               	movwf	Send_I2C_Data@databyte
  7090  178B  0832               	movf	??_OLED_Command+1,w
  7091  178C  00B0               	movwf	Send_I2C_Data@databyte+1
  7092  178D  3195  25FB  3197   	fcall	_Send_I2C_Data
  7093                           
  7094                           ;oled.c: 144: Send_I2C_StopBit();
  7095  1790  3195  25F3         	fcall	_Send_I2C_StopBit
  7096  1792  0008               	return
  7097  1793                     __end_of_OLED_Command:	
  7098                           
  7099                           	psect	text15
  7100  0CE7                     __ptext15:	
  7101 ;; *************** function _OLED_PutChar *****************
  7102 ;; Defined at:
  7103 ;;		line 229 in file "oled.c"
  7104 ;; Parameters:    Size  Location     Type
  7105 ;;  ch              1    wreg     unsigned char 
  7106 ;; Auto vars:     Size  Location     Type
  7107 ;;  ch              1   44[BANK0 ] unsigned char 
  7108 ;;  bytes           9   33[BANK0 ] unsigned char [9]
  7109 ;;  i               2   45[BANK0 ] int 
  7110 ;;  base            2   42[BANK0 ] PTR const unsigned char 
  7111 ;;		 -> OledFont(768), 
  7112 ;; Return value:  Size  Location     Type
  7113 ;;                  1    wreg      void 
  7114 ;; Registers used:
  7115 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7116 ;; Tracked objects:
  7117 ;;		On entry : 0/0
  7118 ;;		On exit  : 0/0
  7119 ;;		Unchanged: 0/0
  7120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7122 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7123 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7124 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7125 ;;Total ram usage:       20 bytes
  7126 ;; Hardware stack levels used:    1
  7127 ;; Hardware stack levels required when called:    5
  7128 ;; This function calls:
  7129 ;;		_Send_I2C_Data
  7130 ;;		_Send_I2C_StartBit
  7131 ;;		_Send_I2C_StopBit
  7132 ;;		_memmove
  7133 ;; This function is called by:
  7134 ;;		_OLED_Clear
  7135 ;;		_OLED_Write_String
  7136 ;; This function uses a non-reentrant model
  7137 ;;
  7138                           
  7139                           
  7140                           ;psect for function _OLED_PutChar
  7141  0CE7                     _OLED_PutChar:	
  7142                           
  7143                           ;incstack = 0
  7144                           ; Regs used in _OLED_PutChar: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7145                           ;OLED_PutChar@ch stored from wreg
  7146  0CE7  0020               	movlb	0	; select bank0
  7147  0CE8  00CC               	movwf	OLED_PutChar@ch
  7148                           
  7149                           ;oled.c: 231: if ( ( ch < 32 ) || ( ch > 127 ) ){
  7150  0CE9  3020               	movlw	32
  7151  0CEA  024C               	subwf	OLED_PutChar@ch,w
  7152  0CEB  1C03               	skipc
  7153  0CEC  2CF1               	goto	l3218
  7154  0CED  3080               	movlw	128
  7155  0CEE  024C               	subwf	OLED_PutChar@ch,w
  7156  0CEF  1C03               	skipc
  7157  0CF0  2CF5               	goto	l3220
  7158  0CF1                     l3218:	
  7159                           
  7160                           ;oled.c: 232: ch = ' ';
  7161  0CF1  3020               	movlw	32
  7162  0CF2  00BB               	movwf	??_OLED_PutChar
  7163  0CF3  083B               	movf	??_OLED_PutChar,w
  7164  0CF4  00CC               	movwf	OLED_PutChar@ch
  7165  0CF5                     l3220:	
  7166                           
  7167                           ;oled.c: 233: }
  7168                           ;oled.c: 235: const uint8_t *base = &OledFont[ch - 32][0];
  7169  0CF5  084C               	movf	OLED_PutChar@ch,w
  7170  0CF6  00BB               	movwf	??_OLED_PutChar
  7171  0CF7  01BC               	clrf	??_OLED_PutChar+1
  7172  0CF8  35BB               	lslf	??_OLED_PutChar,f
  7173  0CF9  0DBC               	rlf	??_OLED_PutChar+1,f
  7174  0CFA  35BB               	lslf	??_OLED_PutChar,f
  7175  0CFB  0DBC               	rlf	??_OLED_PutChar+1,f
  7176  0CFC  35BB               	lslf	??_OLED_PutChar,f
  7177  0CFD  0DBC               	rlf	??_OLED_PutChar+1,f
  7178  0CFE  083B               	movf	??_OLED_PutChar,w
  7179  0CFF  3E00               	addlw	0
  7180  0D00  00BD               	movwf	??_OLED_PutChar+2
  7181  0D01  30FF               	movlw	255
  7182  0D02  3D3C               	addwfc	??_OLED_PutChar+1,w
  7183  0D03  00BE               	movwf	??_OLED_PutChar+3
  7184  0D04  30F7               	movlw	low (_OledFont| (0+32768))
  7185  0D05  00BF               	movwf	??_OLED_PutChar+4
  7186  0D06  3081               	movlw	high (_OledFont| (0+32768))
  7187  0D07  00C0               	movwf	??_OLED_PutChar+5
  7188  0D08  083D               	movf	??_OLED_PutChar+2,w
  7189  0D09  073F               	addwf	??_OLED_PutChar+4,w
  7190  0D0A  00CA               	movwf	OLED_PutChar@base
  7191  0D0B  083E               	movf	??_OLED_PutChar+3,w
  7192  0D0C  3D40               	addwfc	??_OLED_PutChar+5,w
  7193  0D0D  00CB               	movwf	OLED_PutChar@base+1
  7194                           
  7195                           ;oled.c: 237: uint8_t bytes[9];
  7196                           ;oled.c: 238: bytes[0] = 0x40;
  7197  0D0E  3040               	movlw	64
  7198  0D0F  00BB               	movwf	??_OLED_PutChar
  7199  0D10  083B               	movf	??_OLED_PutChar,w
  7200  0D11  00C1               	movwf	OLED_PutChar@bytes
  7201                           
  7202                           ;oled.c: 239: memmove( bytes + 1, base, 8 );
  7203  0D12  084B               	movf	OLED_PutChar@base+1,w
  7204  0D13  00B0               	movwf	memmove@s1+1
  7205  0D14  084A               	movf	OLED_PutChar@base,w
  7206  0D15  00AF               	movwf	memmove@s1
  7207  0D16  3008               	movlw	8
  7208  0D17  00B1               	movwf	memmove@n
  7209  0D18  3000               	movlw	0
  7210  0D19  00B2               	movwf	memmove@n+1
  7211  0D1A  3042               	movlw	(low ((OLED_PutChar@bytes| 0+1)))& (0+255)
  7212  0D1B  318C  2414  318C   	fcall	_memmove
  7213                           
  7214                           ;oled.c: 241: Send_I2C_StartBit();
  7215  0D1E  3195  25EB  318C   	fcall	_Send_I2C_StartBit
  7216                           
  7217                           ;oled.c: 242: Send_I2C_Data(0x3C << 1);
  7218  0D21  3078               	movlw	120
  7219  0D22  0020               	movlb	0	; select bank0
  7220  0D23  00AF               	movwf	Send_I2C_Data@databyte
  7221  0D24  3000               	movlw	0
  7222  0D25  00B0               	movwf	Send_I2C_Data@databyte+1
  7223  0D26  3195  25FB  318C   	fcall	_Send_I2C_Data
  7224                           
  7225                           ;oled.c: 243: Send_I2C_Data(0x40);
  7226  0D29  3040               	movlw	64
  7227  0D2A  0020               	movlb	0	; select bank0
  7228  0D2B  00AF               	movwf	Send_I2C_Data@databyte
  7229  0D2C  3000               	movlw	0
  7230  0D2D  00B0               	movwf	Send_I2C_Data@databyte+1
  7231  0D2E  3195  25FB  318C   	fcall	_Send_I2C_Data
  7232                           
  7233                           ;oled.c: 245: int i;
  7234                           ;oled.c: 247: for (i = 1; i <= 8; i++){
  7235  0D31  3001               	movlw	1
  7236  0D32  0020               	movlb	0	; select bank0
  7237  0D33  00CD               	movwf	OLED_PutChar@i
  7238  0D34  3000               	movlw	0
  7239  0D35  00CE               	movwf	OLED_PutChar@i+1
  7240  0D36  084E               	movf	OLED_PutChar@i+1,w
  7241  0D37  3A80               	xorlw	128
  7242  0D38  00BB               	movwf	??_OLED_PutChar
  7243  0D39  3080               	movlw	128
  7244  0D3A  023B               	subwf	??_OLED_PutChar,w
  7245  0D3B  1D03               	skipz
  7246  0D3C  2D3F               	goto	u3005
  7247  0D3D  3009               	movlw	9
  7248  0D3E  024D               	subwf	OLED_PutChar@i,w
  7249  0D3F                     u3005:	
  7250  0D3F  1803               	btfsc	3,0
  7251  0D40  2D60               	goto	l3244
  7252  0D41                     l3238:	
  7253                           
  7254                           ;oled.c: 248: Send_I2C_Data(bytes[i]);
  7255  0D41  0020               	movlb	0	; select bank0
  7256  0D42  084D               	movf	OLED_PutChar@i,w
  7257  0D43  3E41               	addlw	(low (OLED_PutChar@bytes| 0))& (0+255)
  7258  0D44  0086               	movwf	6
  7259  0D45  0187               	clrf	7
  7260  0D46  0801               	movf	1,w
  7261  0D47  00BB               	movwf	??_OLED_PutChar
  7262  0D48  01BC               	clrf	??_OLED_PutChar+1
  7263  0D49  083B               	movf	??_OLED_PutChar,w
  7264  0D4A  00AF               	movwf	Send_I2C_Data@databyte
  7265  0D4B  083C               	movf	??_OLED_PutChar+1,w
  7266  0D4C  00B0               	movwf	Send_I2C_Data@databyte+1
  7267  0D4D  3195  25FB  318C   	fcall	_Send_I2C_Data
  7268  0D50  3001               	movlw	1
  7269  0D51  0020               	movlb	0	; select bank0
  7270  0D52  07CD               	addwf	OLED_PutChar@i,f
  7271  0D53  3000               	movlw	0
  7272  0D54  3DCE               	addwfc	OLED_PutChar@i+1,f
  7273  0D55  084E               	movf	OLED_PutChar@i+1,w
  7274  0D56  3A80               	xorlw	128
  7275  0D57  00BB               	movwf	??_OLED_PutChar
  7276  0D58  3080               	movlw	128
  7277  0D59  023B               	subwf	??_OLED_PutChar,w
  7278  0D5A  1D03               	skipz
  7279  0D5B  2D5E               	goto	u3015
  7280  0D5C  3009               	movlw	9
  7281  0D5D  024D               	subwf	OLED_PutChar@i,w
  7282  0D5E                     u3015:	
  7283  0D5E  1C03               	skipc
  7284  0D5F  2D41               	goto	l3238
  7285  0D60                     l3244:	
  7286                           
  7287                           ;oled.c: 249: }
  7288                           ;oled.c: 251: Send_I2C_StopBit();
  7289  0D60  3195  25F3         	fcall	_Send_I2C_StopBit
  7290  0D62  0008               	return
  7291  0D63                     __end_of_OLED_PutChar:	
  7292                           
  7293                           	psect	text16
  7294  0C14                     __ptext16:	
  7295 ;; *************** function _memmove *****************
  7296 ;; Defined at:
  7297 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\memmove.c"
  7298 ;; Parameters:    Size  Location     Type
  7299 ;;  d1              1    wreg     PTR void 
  7300 ;;		 -> OLED_PutChar@bytes(9), 
  7301 ;;  s1              2   15[BANK0 ] PTR const void 
  7302 ;;		 -> OledFont(768), 
  7303 ;;  n               2   17[BANK0 ] unsigned int 
  7304 ;; Auto vars:     Size  Location     Type
  7305 ;;  d1              1   23[BANK0 ] PTR void 
  7306 ;;		 -> OLED_PutChar@bytes(9), 
  7307 ;;  s               2   24[BANK0 ] PTR const unsigned char 
  7308 ;;		 -> OledFont(768), 
  7309 ;;  d               1   26[BANK0 ] PTR unsigned char 
  7310 ;;		 -> OLED_PutChar@bytes(9), 
  7311 ;; Return value:  Size  Location     Type
  7312 ;;                  1    wreg      PTR void 
  7313 ;; Registers used:
  7314 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  7315 ;; Tracked objects:
  7316 ;;		On entry : 0/0
  7317 ;;		On exit  : 0/0
  7318 ;;		Unchanged: 0/0
  7319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7320 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7321 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7322 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7323 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7324 ;;Total ram usage:       12 bytes
  7325 ;; Hardware stack levels used:    1
  7326 ;; Hardware stack levels required when called:    4
  7327 ;; This function calls:
  7328 ;;		Nothing
  7329 ;; This function is called by:
  7330 ;;		_OLED_PutChar
  7331 ;; This function uses a non-reentrant model
  7332 ;;
  7333                           
  7334                           
  7335                           ;psect for function _memmove
  7336  0C14                     _memmove:	
  7337                           
  7338                           ;incstack = 0
  7339                           ; Regs used in _memmove: [wreg-fsr1h+status,2+status,0+pclath]
  7340                           ;memmove@d1 stored from wreg
  7341  0C14  0020               	movlb	0	; select bank0
  7342  0C15  00B7               	movwf	memmove@d1
  7343  0C16  0830               	movf	memmove@s1+1,w
  7344  0C17  00B9               	movwf	memmove@s+1
  7345  0C18  082F               	movf	memmove@s1,w
  7346  0C19  00B8               	movwf	memmove@s
  7347  0C1A  0837               	movf	memmove@d1,w
  7348  0C1B  00B3               	movwf	??_memmove
  7349  0C1C  0833               	movf	??_memmove,w
  7350  0C1D  00BA               	movwf	memmove@d
  7351  0C1E  083A               	movf	memmove@d,w
  7352  0C1F  00B3               	movwf	??_memmove
  7353  0C20  3000               	movlw	0
  7354  0C21  00B4               	movwf	??_memmove+1
  7355  0C22  0834               	movf	??_memmove+1,w
  7356  0C23  0239               	subwf	memmove@s+1,w
  7357  0C24  1D03               	skipz
  7358  0C25  2C28               	goto	u2745
  7359  0C26  0833               	movf	??_memmove,w
  7360  0C27  0238               	subwf	memmove@s,w
  7361  0C28                     u2745:	
  7362  0C28  1803               	skipnc
  7363  0C29  2C5E               	goto	l3118
  7364  0C2A  0831               	movf	memmove@n,w
  7365  0C2B  0738               	addwf	memmove@s,w
  7366  0C2C  00B3               	movwf	??_memmove
  7367  0C2D  0832               	movf	memmove@n+1,w
  7368  0C2E  3D39               	addwfc	memmove@s+1,w
  7369  0C2F  00B4               	movwf	??_memmove+1
  7370  0C30  083A               	movf	memmove@d,w
  7371  0C31  00B5               	movwf	??_memmove+2
  7372  0C32  3000               	movlw	0
  7373  0C33  00B6               	movwf	??_memmove+3
  7374  0C34  0834               	movf	??_memmove+1,w
  7375  0C35  0236               	subwf	??_memmove+3,w
  7376  0C36  1D03               	skipz
  7377  0C37  2C3A               	goto	u2755
  7378  0C38  0833               	movf	??_memmove,w
  7379  0C39  0235               	subwf	??_memmove+2,w
  7380  0C3A                     u2755:	
  7381  0C3A  1803               	skipnc
  7382  0C3B  2C5E               	goto	l3118
  7383  0C3C  0831               	movf	memmove@n,w
  7384  0C3D  07B8               	addwf	memmove@s,f
  7385  0C3E  0832               	movf	memmove@n+1,w
  7386  0C3F  3DB9               	addwfc	memmove@s+1,f
  7387  0C40  0831               	movf	memmove@n,w
  7388  0C41  00B3               	movwf	??_memmove
  7389  0C42  0833               	movf	??_memmove,w
  7390  0C43  07BA               	addwf	memmove@d,f
  7391  0C44                     l3114:	
  7392  0C44  3001               	movlw	1
  7393  0C45  02B8               	subwf	memmove@s,f
  7394  0C46  3000               	movlw	0
  7395  0C47  3BB9               	subwfb	memmove@s+1,f
  7396  0C48  0838               	movf	memmove@s,w
  7397  0C49  0084               	movwf	4
  7398  0C4A  0839               	movf	memmove@s+1,w
  7399  0C4B  0085               	movwf	5
  7400  0C4C  0800               	movf	0,w	;code access
  7401  0C4D  00B3               	movwf	??_memmove
  7402  0C4E  3001               	movlw	1
  7403  0C4F  02BA               	subwf	memmove@d,f
  7404  0C50  083A               	movf	memmove@d,w
  7405  0C51  0086               	movwf	6
  7406  0C52  0187               	clrf	7
  7407  0C53  0833               	movf	??_memmove,w
  7408  0C54  0081               	movwf	1
  7409  0C55  3001               	movlw	1
  7410  0C56  02B1               	subwf	memmove@n,f
  7411  0C57  3000               	movlw	0
  7412  0C58  3BB2               	subwfb	memmove@n+1,f
  7413  0C59  0831               	movf	memmove@n,w
  7414  0C5A  0432               	iorwf	memmove@n+1,w
  7415  0C5B  1903               	btfsc	3,2
  7416  0C5C  0008               	return
  7417  0C5D  2C44               	goto	l3114
  7418  0C5E                     l3118:	
  7419  0C5E  0831               	movf	memmove@n,w
  7420  0C5F  0432               	iorwf	memmove@n+1,w
  7421  0C60  1903               	btfsc	3,2
  7422  0C61  0008               	return
  7423  0C62  0838               	movf	memmove@s,w
  7424  0C63  0084               	movwf	4
  7425  0C64  0839               	movf	memmove@s+1,w
  7426  0C65  0085               	movwf	5
  7427  0C66  0800               	movf	0,w	;code access
  7428  0C67  00B3               	movwf	??_memmove
  7429  0C68  083A               	movf	memmove@d,w
  7430  0C69  0086               	movwf	6
  7431  0C6A  0187               	clrf	7
  7432  0C6B  0833               	movf	??_memmove,w
  7433  0C6C  0081               	movwf	1
  7434  0C6D  3001               	movlw	1
  7435  0C6E  07B8               	addwf	memmove@s,f
  7436  0C6F  3000               	movlw	0
  7437  0C70  3DB9               	addwfc	memmove@s+1,f
  7438  0C71  3001               	movlw	1
  7439  0C72  00B3               	movwf	??_memmove
  7440  0C73  0833               	movf	??_memmove,w
  7441  0C74  07BA               	addwf	memmove@d,f
  7442  0C75  3001               	movlw	1
  7443  0C76  02B1               	subwf	memmove@n,f
  7444  0C77  3000               	movlw	0
  7445  0C78  3BB2               	subwfb	memmove@n+1,f
  7446  0C79  2C5E               	goto	l3118
  7447  0C7A                     __end_of_memmove:	
  7448                           ;	Return value of _memmove is never used
  7449                           
  7450                           
  7451                           	psect	text17
  7452  15F3                     __ptext17:	
  7453 ;; *************** function _Send_I2C_StopBit *****************
  7454 ;; Defined at:
  7455 ;;		line 106 in file "I2C.c"
  7456 ;; Parameters:    Size  Location     Type
  7457 ;;		None
  7458 ;; Auto vars:     Size  Location     Type
  7459 ;;		None
  7460 ;; Return value:  Size  Location     Type
  7461 ;;                  1    wreg      void 
  7462 ;; Registers used:
  7463 ;;		None
  7464 ;; Tracked objects:
  7465 ;;		On entry : 0/0
  7466 ;;		On exit  : 0/0
  7467 ;;		Unchanged: 0/0
  7468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7473 ;;Total ram usage:        0 bytes
  7474 ;; Hardware stack levels used:    1
  7475 ;; Hardware stack levels required when called:    4
  7476 ;; This function calls:
  7477 ;;		Nothing
  7478 ;; This function is called by:
  7479 ;;		_OLED_Command
  7480 ;;		_OLED_PutChar
  7481 ;;		_OLED_Data
  7482 ;; This function uses a non-reentrant model
  7483 ;;
  7484                           
  7485                           
  7486                           ;psect for function _Send_I2C_StopBit
  7487  15F3                     _Send_I2C_StopBit:	
  7488                           
  7489                           ;I2C.c: 108: PIR1bits.SSP1IF=0;
  7490                           
  7491                           ;incstack = 0
  7492                           ; Regs used in _Send_I2C_StopBit: []
  7493  15F3  0020               	movlb	0	; select bank0
  7494  15F4  1191               	bcf	17,3	;volatile
  7495                           
  7496                           ;I2C.c: 109: SSPCON2bits.PEN=1;
  7497  15F5  0024               	movlb	4	; select bank4
  7498  15F6  1516               	bsf	22,2	;volatile
  7499  15F7                     l77:	
  7500                           ;I2C.c: 110: while(!PIR1bits.SSP1IF);
  7501                           
  7502  15F7  0020               	movlb	0	; select bank0
  7503  15F8  1991               	btfsc	17,3	;volatile
  7504  15F9  0008               	return
  7505  15FA  2DF7               	goto	l77
  7506  15FB                     __end_of_Send_I2C_StopBit:	
  7507                           
  7508                           	psect	text18
  7509  15EB                     __ptext18:	
  7510 ;; *************** function _Send_I2C_StartBit *****************
  7511 ;; Defined at:
  7512 ;;		line 96 in file "I2C.c"
  7513 ;; Parameters:    Size  Location     Type
  7514 ;;		None
  7515 ;; Auto vars:     Size  Location     Type
  7516 ;;		None
  7517 ;; Return value:  Size  Location     Type
  7518 ;;                  1    wreg      void 
  7519 ;; Registers used:
  7520 ;;		None
  7521 ;; Tracked objects:
  7522 ;;		On entry : 0/0
  7523 ;;		On exit  : 0/0
  7524 ;;		Unchanged: 0/0
  7525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7530 ;;Total ram usage:        0 bytes
  7531 ;; Hardware stack levels used:    1
  7532 ;; Hardware stack levels required when called:    4
  7533 ;; This function calls:
  7534 ;;		Nothing
  7535 ;; This function is called by:
  7536 ;;		_OLED_Command
  7537 ;;		_OLED_PutChar
  7538 ;;		_OLED_Data
  7539 ;; This function uses a non-reentrant model
  7540 ;;
  7541                           
  7542                           
  7543                           ;psect for function _Send_I2C_StartBit
  7544  15EB                     _Send_I2C_StartBit:	
  7545                           
  7546                           ;I2C.c: 98: PIR1bits.SSP1IF=0;
  7547                           
  7548                           ;incstack = 0
  7549                           ; Regs used in _Send_I2C_StartBit: []
  7550  15EB  0020               	movlb	0	; select bank0
  7551  15EC  1191               	bcf	17,3	;volatile
  7552                           
  7553                           ;I2C.c: 99: SSPCON2bits.SEN=1;
  7554  15ED  0024               	movlb	4	; select bank4
  7555  15EE  1416               	bsf	22,0	;volatile
  7556  15EF                     l71:	
  7557                           ;I2C.c: 100: while(!PIR1bits.SSP1IF);
  7558                           
  7559  15EF  0020               	movlb	0	; select bank0
  7560  15F0  1991               	btfsc	17,3	;volatile
  7561  15F1  0008               	return
  7562  15F2  2DEF               	goto	l71
  7563  15F3                     __end_of_Send_I2C_StartBit:	
  7564                           
  7565                           	psect	text19
  7566  15FB                     __ptext19:	
  7567 ;; *************** function _Send_I2C_Data *****************
  7568 ;; Defined at:
  7569 ;;		line 48 in file "I2C.c"
  7570 ;; Parameters:    Size  Location     Type
  7571 ;;  databyte        2   15[BANK0 ] unsigned int 
  7572 ;; Auto vars:     Size  Location     Type
  7573 ;;		None
  7574 ;; Return value:  Size  Location     Type
  7575 ;;                  1    wreg      void 
  7576 ;; Registers used:
  7577 ;;		wreg
  7578 ;; Tracked objects:
  7579 ;;		On entry : 0/0
  7580 ;;		On exit  : 0/0
  7581 ;;		Unchanged: 0/0
  7582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7583 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7586 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7587 ;;Total ram usage:        2 bytes
  7588 ;; Hardware stack levels used:    1
  7589 ;; Hardware stack levels required when called:    4
  7590 ;; This function calls:
  7591 ;;		Nothing
  7592 ;; This function is called by:
  7593 ;;		_OLED_Command
  7594 ;;		_OLED_PutChar
  7595 ;;		_OLED_Data
  7596 ;; This function uses a non-reentrant model
  7597 ;;
  7598                           
  7599                           
  7600                           ;psect for function _Send_I2C_Data
  7601  15FB                     _Send_I2C_Data:	
  7602                           
  7603                           ;I2C.c: 50: PIR1bits.SSP1IF=0;
  7604                           
  7605                           ;incstack = 0
  7606                           ; Regs used in _Send_I2C_Data: [wreg]
  7607  15FB  0020               	movlb	0	; select bank0
  7608  15FC  1191               	bcf	17,3	;volatile
  7609                           
  7610                           ;I2C.c: 51: SSPBUF = databyte;
  7611  15FD  082F               	movf	Send_I2C_Data@databyte,w
  7612  15FE  0024               	movlb	4	; select bank4
  7613  15FF  0091               	movwf	17	;volatile
  7614  1600                     l53:	
  7615                           ;I2C.c: 52: while(!PIR1bits.SSP1IF);
  7616                           
  7617  1600  0020               	movlb	0	; select bank0
  7618  1601  1991               	btfsc	17,3	;volatile
  7619  1602  0008               	return
  7620  1603  2E00               	goto	l53
  7621  1604                     __end_of_Send_I2C_Data:	
  7622                           
  7623                           	psect	text20
  7624  1656                     __ptext20:	
  7625 ;; *************** function _I2C_Init *****************
  7626 ;; Defined at:
  7627 ;;		line 19 in file "I2C.c"
  7628 ;; Parameters:    Size  Location     Type
  7629 ;;		None
  7630 ;; Auto vars:     Size  Location     Type
  7631 ;;		None
  7632 ;; Return value:  Size  Location     Type
  7633 ;;                  1    wreg      void 
  7634 ;; Registers used:
  7635 ;;		wreg, status,2, status,0
  7636 ;; Tracked objects:
  7637 ;;		On entry : 0/0
  7638 ;;		On exit  : 0/0
  7639 ;;		Unchanged: 0/0
  7640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7643 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7644 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7645 ;;Total ram usage:        2 bytes
  7646 ;; Hardware stack levels used:    1
  7647 ;; Hardware stack levels required when called:    4
  7648 ;; This function calls:
  7649 ;;		Nothing
  7650 ;; This function is called by:
  7651 ;;		_initMain
  7652 ;; This function uses a non-reentrant model
  7653 ;;
  7654                           
  7655                           
  7656                           ;psect for function _I2C_Init
  7657  1656                     _I2C_Init:	
  7658                           
  7659                           ;I2C.c: 25: SSPCONbits.SSPM=0x08;
  7660                           
  7661                           ;incstack = 0
  7662                           ; Regs used in _I2C_Init: [wreg+status,2+status,0]
  7663  1656  0024               	movlb	4	; select bank4
  7664  1657  0815               	movf	21,w	;volatile
  7665  1658  39F0               	andlw	-16
  7666  1659  3808               	iorlw	8
  7667  165A  0095               	movwf	21	;volatile
  7668                           
  7669                           ;I2C.c: 26: SSPCONbits.SSPEN=1;
  7670  165B  1695               	bsf	21,5	;volatile
  7671                           
  7672                           ;I2C.c: 38: SSPADD = 39;
  7673  165C  3027               	movlw	39
  7674  165D  0092               	movwf	18	;volatile
  7675                           
  7676                           ;I2C.c: 42: _delay((unsigned long)((10)*(16000000/4000.0)));
  7677  165E  3034               	movlw	52
  7678  165F  0020               	movlb	0	; select bank0
  7679  1660  00B0               	movwf	??_I2C_Init+1
  7680  1661  30F1               	movlw	241
  7681  1662  00AF               	movwf	??_I2C_Init
  7682  1663                     u3847:	
  7683  1663  0BAF               	decfsz	??_I2C_Init,f
  7684  1664  2E63               	goto	u3847
  7685  1665  0BB0               	decfsz	??_I2C_Init+1,f
  7686  1666  2E63               	goto	u3847
  7687  1667  3200               	nop2
  7688  1668  0008               	return
  7689  1669                     __end_of_I2C_Init:	
  7690                           
  7691                           	psect	text21
  7692  0E66                     __ptext21:	
  7693 ;; *************** function _EUSART_Initialize *****************
  7694 ;; Defined at:
  7695 ;;		line 34 in file "EUSART.c"
  7696 ;; Parameters:    Size  Location     Type
  7697 ;;  baudrate        4   30[BANK0 ] const long 
  7698 ;; Auto vars:     Size  Location     Type
  7699 ;;  x               2   42[BANK0 ] unsigned int 
  7700 ;; Return value:  Size  Location     Type
  7701 ;;                  1    wreg      unsigned char 
  7702 ;; Registers used:
  7703 ;;		wreg, status,2, status,0, pclath, cstack
  7704 ;; Tracked objects:
  7705 ;;		On entry : 0/0
  7706 ;;		On exit  : 0/0
  7707 ;;		Unchanged: 0/0
  7708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7709 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7710 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7711 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7712 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7713 ;;Total ram usage:       14 bytes
  7714 ;; Hardware stack levels used:    1
  7715 ;; Hardware stack levels required when called:    5
  7716 ;; This function calls:
  7717 ;;		___aldiv
  7718 ;; This function is called by:
  7719 ;;		_initMain
  7720 ;; This function uses a non-reentrant model
  7721 ;;
  7722                           
  7723                           
  7724                           ;psect for function _EUSART_Initialize
  7725  0E66                     _EUSART_Initialize:	
  7726                           
  7727                           ;EUSART.c: 36: unsigned int x;
  7728                           ;EUSART.c: 37: x = (16000000 - baudrate*64)/(baudrate*64);
  7729                           
  7730                           ;incstack = 0
  7731                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7732  0E66  0020               	movlb	0	; select bank0
  7733  0E67  083E               	movf	EUSART_Initialize@baudrate,w
  7734  0E68  00C2               	movwf	??_EUSART_Initialize
  7735  0E69  083F               	movf	EUSART_Initialize@baudrate+1,w
  7736  0E6A  00C3               	movwf	??_EUSART_Initialize+1
  7737  0E6B  0840               	movf	EUSART_Initialize@baudrate+2,w
  7738  0E6C  00C4               	movwf	??_EUSART_Initialize+2
  7739  0E6D  0841               	movf	EUSART_Initialize@baudrate+3,w
  7740  0E6E  00C5               	movwf	??_EUSART_Initialize+3
  7741  0E6F  3006               	movlw	6
  7742  0E70                     u3405:	
  7743  0E70  35C2               	lslf	??_EUSART_Initialize,f
  7744  0E71  0DC3               	rlf	??_EUSART_Initialize+1,f
  7745  0E72  0DC4               	rlf	??_EUSART_Initialize+2,f
  7746  0E73  0DC5               	rlf	??_EUSART_Initialize+3,f
  7747  0E74  0B89               	decfsz	9,f
  7748  0E75  2E70               	goto	u3405
  7749  0E76  0845               	movf	??_EUSART_Initialize+3,w
  7750  0E77  00B2               	movwf	___aldiv@divisor+3
  7751  0E78  0844               	movf	??_EUSART_Initialize+2,w
  7752  0E79  00B1               	movwf	___aldiv@divisor+2
  7753  0E7A  0843               	movf	??_EUSART_Initialize+1,w
  7754  0E7B  00B0               	movwf	___aldiv@divisor+1
  7755  0E7C  0842               	movf	??_EUSART_Initialize,w
  7756  0E7D  00AF               	movwf	___aldiv@divisor
  7757  0E7E  083E               	movf	EUSART_Initialize@baudrate,w
  7758  0E7F  00C6               	movwf	??_EUSART_Initialize+4
  7759  0E80  083F               	movf	EUSART_Initialize@baudrate+1,w
  7760  0E81  00C7               	movwf	??_EUSART_Initialize+5
  7761  0E82  0840               	movf	EUSART_Initialize@baudrate+2,w
  7762  0E83  00C8               	movwf	??_EUSART_Initialize+6
  7763  0E84  0841               	movf	EUSART_Initialize@baudrate+3,w
  7764  0E85  00C9               	movwf	??_EUSART_Initialize+7
  7765  0E86  3006               	movlw	6
  7766  0E87                     u3415:	
  7767  0E87  35C6               	lslf	??_EUSART_Initialize+4,f
  7768  0E88  0DC7               	rlf	??_EUSART_Initialize+5,f
  7769  0E89  0DC8               	rlf	??_EUSART_Initialize+6,f
  7770  0E8A  0DC9               	rlf	??_EUSART_Initialize+7,f
  7771  0E8B  0B89               	decfsz	9,f
  7772  0E8C  2E87               	goto	u3415
  7773  0E8D  09C6               	comf	??_EUSART_Initialize+4,f
  7774  0E8E  09C7               	comf	??_EUSART_Initialize+5,f
  7775  0E8F  09C8               	comf	??_EUSART_Initialize+6,f
  7776  0E90  09C9               	comf	??_EUSART_Initialize+7,f
  7777  0E91  0AC6               	incf	??_EUSART_Initialize+4,f
  7778  0E92  1903               	skipnz
  7779  0E93  0AC7               	incf	??_EUSART_Initialize+5,f
  7780  0E94  1903               	skipnz
  7781  0E95  0AC8               	incf	??_EUSART_Initialize+6,f
  7782  0E96  1903               	skipnz
  7783  0E97  0AC9               	incf	??_EUSART_Initialize+7,f
  7784  0E98  3000               	movlw	0
  7785  0E99  0746               	addwf	??_EUSART_Initialize+4,w
  7786  0E9A  00B3               	movwf	___aldiv@dividend
  7787  0E9B  3024               	movlw	36
  7788  0E9C  3D47               	addwfc	??_EUSART_Initialize+5,w
  7789  0E9D  00B4               	movwf	___aldiv@dividend+1
  7790  0E9E  30F4               	movlw	244
  7791  0E9F  3D48               	addwfc	??_EUSART_Initialize+6,w
  7792  0EA0  00B5               	movwf	___aldiv@dividend+2
  7793  0EA1  3000               	movlw	0
  7794  0EA2  3D49               	addwfc	??_EUSART_Initialize+7,w
  7795  0EA3  00B6               	movwf	___aldiv@dividend+3
  7796  0EA4  318D  25E4  318E   	fcall	___aldiv
  7797  0EA7  0020               	movlb	0	; select bank0
  7798  0EA8  0830               	movf	?___aldiv+1,w
  7799  0EA9  00CB               	movwf	EUSART_Initialize@x+1
  7800  0EAA  082F               	movf	?___aldiv,w
  7801  0EAB  00CA               	movwf	EUSART_Initialize@x
  7802                           
  7803                           ;EUSART.c: 38: if(x>255)
  7804  0EAC  3001               	movlw	1
  7805  0EAD  024B               	subwf	EUSART_Initialize@x+1,w
  7806  0EAE  3000               	movlw	0
  7807  0EAF  1903               	skipnz
  7808  0EB0  024A               	subwf	EUSART_Initialize@x,w
  7809  0EB1  1C03               	skipc
  7810  0EB2  2EFA               	goto	l3492
  7811                           
  7812                           ;EUSART.c: 39: {
  7813                           ;EUSART.c: 40: x = (16000000 - baudrate*16)/(baudrate*16);
  7814  0EB3  083E               	movf	EUSART_Initialize@baudrate,w
  7815  0EB4  00C2               	movwf	??_EUSART_Initialize
  7816  0EB5  083F               	movf	EUSART_Initialize@baudrate+1,w
  7817  0EB6  00C3               	movwf	??_EUSART_Initialize+1
  7818  0EB7  0840               	movf	EUSART_Initialize@baudrate+2,w
  7819  0EB8  00C4               	movwf	??_EUSART_Initialize+2
  7820  0EB9  0841               	movf	EUSART_Initialize@baudrate+3,w
  7821  0EBA  00C5               	movwf	??_EUSART_Initialize+3
  7822  0EBB  3004               	movlw	4
  7823  0EBC                     u3435:	
  7824  0EBC  35C2               	lslf	??_EUSART_Initialize,f
  7825  0EBD  0DC3               	rlf	??_EUSART_Initialize+1,f
  7826  0EBE  0DC4               	rlf	??_EUSART_Initialize+2,f
  7827  0EBF  0DC5               	rlf	??_EUSART_Initialize+3,f
  7828  0EC0  0B89               	decfsz	9,f
  7829  0EC1  2EBC               	goto	u3435
  7830  0EC2  0845               	movf	??_EUSART_Initialize+3,w
  7831  0EC3  00B2               	movwf	___aldiv@divisor+3
  7832  0EC4  0844               	movf	??_EUSART_Initialize+2,w
  7833  0EC5  00B1               	movwf	___aldiv@divisor+2
  7834  0EC6  0843               	movf	??_EUSART_Initialize+1,w
  7835  0EC7  00B0               	movwf	___aldiv@divisor+1
  7836  0EC8  0842               	movf	??_EUSART_Initialize,w
  7837  0EC9  00AF               	movwf	___aldiv@divisor
  7838  0ECA  083E               	movf	EUSART_Initialize@baudrate,w
  7839  0ECB  00C6               	movwf	??_EUSART_Initialize+4
  7840  0ECC  083F               	movf	EUSART_Initialize@baudrate+1,w
  7841  0ECD  00C7               	movwf	??_EUSART_Initialize+5
  7842  0ECE  0840               	movf	EUSART_Initialize@baudrate+2,w
  7843  0ECF  00C8               	movwf	??_EUSART_Initialize+6
  7844  0ED0  0841               	movf	EUSART_Initialize@baudrate+3,w
  7845  0ED1  00C9               	movwf	??_EUSART_Initialize+7
  7846  0ED2  3004               	movlw	4
  7847  0ED3                     u3445:	
  7848  0ED3  35C6               	lslf	??_EUSART_Initialize+4,f
  7849  0ED4  0DC7               	rlf	??_EUSART_Initialize+5,f
  7850  0ED5  0DC8               	rlf	??_EUSART_Initialize+6,f
  7851  0ED6  0DC9               	rlf	??_EUSART_Initialize+7,f
  7852  0ED7  0B89               	decfsz	9,f
  7853  0ED8  2ED3               	goto	u3445
  7854  0ED9  09C6               	comf	??_EUSART_Initialize+4,f
  7855  0EDA  09C7               	comf	??_EUSART_Initialize+5,f
  7856  0EDB  09C8               	comf	??_EUSART_Initialize+6,f
  7857  0EDC  09C9               	comf	??_EUSART_Initialize+7,f
  7858  0EDD  0AC6               	incf	??_EUSART_Initialize+4,f
  7859  0EDE  1903               	skipnz
  7860  0EDF  0AC7               	incf	??_EUSART_Initialize+5,f
  7861  0EE0  1903               	skipnz
  7862  0EE1  0AC8               	incf	??_EUSART_Initialize+6,f
  7863  0EE2  1903               	skipnz
  7864  0EE3  0AC9               	incf	??_EUSART_Initialize+7,f
  7865  0EE4  3000               	movlw	0
  7866  0EE5  0746               	addwf	??_EUSART_Initialize+4,w
  7867  0EE6  00B3               	movwf	___aldiv@dividend
  7868  0EE7  3024               	movlw	36
  7869  0EE8  3D47               	addwfc	??_EUSART_Initialize+5,w
  7870  0EE9  00B4               	movwf	___aldiv@dividend+1
  7871  0EEA  30F4               	movlw	244
  7872  0EEB  3D48               	addwfc	??_EUSART_Initialize+6,w
  7873  0EEC  00B5               	movwf	___aldiv@dividend+2
  7874  0EED  3000               	movlw	0
  7875  0EEE  3D49               	addwfc	??_EUSART_Initialize+7,w
  7876  0EEF  00B6               	movwf	___aldiv@dividend+3
  7877  0EF0  318D  25E4  318E   	fcall	___aldiv
  7878  0EF3  0020               	movlb	0	; select bank0
  7879  0EF4  0830               	movf	?___aldiv+1,w
  7880  0EF5  00CB               	movwf	EUSART_Initialize@x+1
  7881  0EF6  082F               	movf	?___aldiv,w
  7882  0EF7  00CA               	movwf	EUSART_Initialize@x
  7883                           
  7884                           ;EUSART.c: 41: BRGH = 1;
  7885  0EF8  0023               	movlb	3	; select bank3
  7886  0EF9  151E               	bsf	30,2	;volatile
  7887  0EFA                     l3492:	
  7888                           
  7889                           ;EUSART.c: 42: }
  7890                           ;EUSART.c: 43: if(x<256)
  7891  0EFA  3001               	movlw	1
  7892  0EFB  0020               	movlb	0	; select bank0
  7893  0EFC  024B               	subwf	EUSART_Initialize@x+1,w
  7894  0EFD  3000               	movlw	0
  7895  0EFE  1903               	skipnz
  7896  0EFF  024A               	subwf	EUSART_Initialize@x,w
  7897  0F00  1803               	skipnc
  7898  0F01  0008               	return
  7899                           
  7900                           ;EUSART.c: 44: {
  7901                           ;EUSART.c: 45: SPBRG = x;
  7902  0F02  084A               	movf	EUSART_Initialize@x,w
  7903  0F03  0023               	movlb	3	; select bank3
  7904  0F04  009B               	movwf	27	;volatile
  7905                           
  7906                           ;EUSART.c: 46: SYNC = 0;
  7907  0F05  121E               	bcf	30,4	;volatile
  7908                           
  7909                           ;EUSART.c: 47: SPEN = 1;
  7910  0F06  179D               	bsf	29,7	;volatile
  7911                           
  7912                           ;EUSART.c: 48: TRISC7 = 1;
  7913  0F07  0021               	movlb	1	; select bank1
  7914  0F08  178E               	bsf	14,7	;volatile
  7915                           
  7916                           ;EUSART.c: 49: TRISC6 = 1;
  7917  0F09  170E               	bsf	14,6	;volatile
  7918                           
  7919                           ;EUSART.c: 50: CREN = 1;
  7920  0F0A  0023               	movlb	3	; select bank3
  7921  0F0B  161D               	bsf	29,4	;volatile
  7922                           
  7923                           ;EUSART.c: 51: TXEN = 1;
  7924  0F0C  169E               	bsf	30,5	;volatile
  7925                           
  7926                           ;EUSART.c: 52: return 1;
  7927                           ;	Return value of _EUSART_Initialize is never used
  7928  0F0D  0008               	return
  7929  0F0E                     __end_of_EUSART_Initialize:	
  7930                           ;EUSART.c: 53: }
  7931                           ;EUSART.c: 54: return 0;
  7932                           ;	Return value of _EUSART_Initialize is never used
  7933                           
  7934                           
  7935                           	psect	text22
  7936  0DE4                     __ptext22:	
  7937 ;; *************** function ___aldiv *****************
  7938 ;; Defined at:
  7939 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\aldiv.c"
  7940 ;; Parameters:    Size  Location     Type
  7941 ;;  divisor         4   15[BANK0 ] long 
  7942 ;;  dividend        4   19[BANK0 ] long 
  7943 ;; Auto vars:     Size  Location     Type
  7944 ;;  quotient        4   26[BANK0 ] long 
  7945 ;;  sign            1   25[BANK0 ] unsigned char 
  7946 ;;  counter         1   24[BANK0 ] unsigned char 
  7947 ;; Return value:  Size  Location     Type
  7948 ;;                  4   15[BANK0 ] long 
  7949 ;; Registers used:
  7950 ;;		wreg, status,2, status,0
  7951 ;; Tracked objects:
  7952 ;;		On entry : 0/0
  7953 ;;		On exit  : 0/0
  7954 ;;		Unchanged: 0/0
  7955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7956 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7957 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7958 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7959 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7960 ;;Total ram usage:       15 bytes
  7961 ;; Hardware stack levels used:    1
  7962 ;; Hardware stack levels required when called:    4
  7963 ;; This function calls:
  7964 ;;		Nothing
  7965 ;; This function is called by:
  7966 ;;		_EUSART_Initialize
  7967 ;; This function uses a non-reentrant model
  7968 ;;
  7969                           
  7970                           
  7971                           ;psect for function ___aldiv
  7972  0DE4                     ___aldiv:	
  7973                           
  7974                           ;incstack = 0
  7975                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  7976  0DE4  0020               	movlb	0	; select bank0
  7977  0DE5  01B9               	clrf	___aldiv@sign
  7978  0DE6  1FB2               	btfss	___aldiv@divisor+3,7
  7979  0DE7  2DF5               	goto	l569
  7980  0DE8  09AF               	comf	___aldiv@divisor,f
  7981  0DE9  09B0               	comf	___aldiv@divisor+1,f
  7982  0DEA  09B1               	comf	___aldiv@divisor+2,f
  7983  0DEB  09B2               	comf	___aldiv@divisor+3,f
  7984  0DEC  0AAF               	incf	___aldiv@divisor,f
  7985  0DED  1903               	skipnz
  7986  0DEE  0AB0               	incf	___aldiv@divisor+1,f
  7987  0DEF  1903               	skipnz
  7988  0DF0  0AB1               	incf	___aldiv@divisor+2,f
  7989  0DF1  1903               	skipnz
  7990  0DF2  0AB2               	incf	___aldiv@divisor+3,f
  7991  0DF3  01B9               	clrf	___aldiv@sign
  7992  0DF4  0AB9               	incf	___aldiv@sign,f
  7993  0DF5                     l569:	
  7994  0DF5  1FB6               	btfss	___aldiv@dividend+3,7
  7995  0DF6  2E06               	goto	l3264
  7996  0DF7  09B3               	comf	___aldiv@dividend,f
  7997  0DF8  09B4               	comf	___aldiv@dividend+1,f
  7998  0DF9  09B5               	comf	___aldiv@dividend+2,f
  7999  0DFA  09B6               	comf	___aldiv@dividend+3,f
  8000  0DFB  0AB3               	incf	___aldiv@dividend,f
  8001  0DFC  1903               	skipnz
  8002  0DFD  0AB4               	incf	___aldiv@dividend+1,f
  8003  0DFE  1903               	skipnz
  8004  0DFF  0AB5               	incf	___aldiv@dividend+2,f
  8005  0E00  1903               	skipnz
  8006  0E01  0AB6               	incf	___aldiv@dividend+3,f
  8007  0E02  3001               	movlw	1
  8008  0E03  00B7               	movwf	??___aldiv
  8009  0E04  0837               	movf	??___aldiv,w
  8010  0E05  06B9               	xorwf	___aldiv@sign,f
  8011  0E06                     l3264:	
  8012  0E06  3000               	movlw	0
  8013  0E07  00BD               	movwf	___aldiv@quotient+3
  8014  0E08  3000               	movlw	0
  8015  0E09  00BC               	movwf	___aldiv@quotient+2
  8016  0E0A  3000               	movlw	0
  8017  0E0B  00BB               	movwf	___aldiv@quotient+1
  8018  0E0C  3000               	movlw	0
  8019  0E0D  00BA               	movwf	___aldiv@quotient
  8020  0E0E  0832               	movf	___aldiv@divisor+3,w
  8021  0E0F  0431               	iorwf	___aldiv@divisor+2,w
  8022  0E10  0430               	iorwf	___aldiv@divisor+1,w
  8023  0E11  042F               	iorwf	___aldiv@divisor,w
  8024  0E12  1903               	skipnz
  8025  0E13  2E4F               	goto	l3286
  8026  0E14  01B8               	clrf	___aldiv@counter
  8027  0E15  0AB8               	incf	___aldiv@counter,f
  8028  0E16                     l3272:	
  8029  0E16  1BB2               	btfsc	___aldiv@divisor+3,7
  8030  0E17  2E24               	goto	l3274
  8031  0E18  3001               	movlw	1
  8032  0E19                     u3065:	
  8033  0E19  35AF               	lslf	___aldiv@divisor,f
  8034  0E1A  0DB0               	rlf	___aldiv@divisor+1,f
  8035  0E1B  0DB1               	rlf	___aldiv@divisor+2,f
  8036  0E1C  0DB2               	rlf	___aldiv@divisor+3,f
  8037  0E1D  0B89               	decfsz	9,f
  8038  0E1E  2E19               	goto	u3065
  8039  0E1F  3001               	movlw	1
  8040  0E20  00B7               	movwf	??___aldiv
  8041  0E21  0837               	movf	??___aldiv,w
  8042  0E22  07B8               	addwf	___aldiv@counter,f
  8043  0E23  2E16               	goto	l3272
  8044  0E24                     l3274:	
  8045  0E24  3001               	movlw	1
  8046  0E25                     u3085:	
  8047  0E25  35BA               	lslf	___aldiv@quotient,f
  8048  0E26  0DBB               	rlf	___aldiv@quotient+1,f
  8049  0E27  0DBC               	rlf	___aldiv@quotient+2,f
  8050  0E28  0DBD               	rlf	___aldiv@quotient+3,f
  8051  0E29  0B89               	decfsz	9,f
  8052  0E2A  2E25               	goto	u3085
  8053  0E2B  0832               	movf	___aldiv@divisor+3,w
  8054  0E2C  0236               	subwf	___aldiv@dividend+3,w
  8055  0E2D  1D03               	skipz
  8056  0E2E  2E39               	goto	u3095
  8057  0E2F  0831               	movf	___aldiv@divisor+2,w
  8058  0E30  0235               	subwf	___aldiv@dividend+2,w
  8059  0E31  1D03               	skipz
  8060  0E32  2E39               	goto	u3095
  8061  0E33  0830               	movf	___aldiv@divisor+1,w
  8062  0E34  0234               	subwf	___aldiv@dividend+1,w
  8063  0E35  1D03               	skipz
  8064  0E36  2E39               	goto	u3095
  8065  0E37  082F               	movf	___aldiv@divisor,w
  8066  0E38  0233               	subwf	___aldiv@dividend,w
  8067  0E39                     u3095:	
  8068  0E39  1C03               	skipc
  8069  0E3A  2E44               	goto	l3282
  8070  0E3B  082F               	movf	___aldiv@divisor,w
  8071  0E3C  02B3               	subwf	___aldiv@dividend,f
  8072  0E3D  0830               	movf	___aldiv@divisor+1,w
  8073  0E3E  3BB4               	subwfb	___aldiv@dividend+1,f
  8074  0E3F  0831               	movf	___aldiv@divisor+2,w
  8075  0E40  3BB5               	subwfb	___aldiv@dividend+2,f
  8076  0E41  0832               	movf	___aldiv@divisor+3,w
  8077  0E42  3BB6               	subwfb	___aldiv@dividend+3,f
  8078  0E43  143A               	bsf	___aldiv@quotient,0
  8079  0E44                     l3282:	
  8080  0E44  3001               	movlw	1
  8081  0E45                     u3105:	
  8082  0E45  36B2               	lsrf	___aldiv@divisor+3,f
  8083  0E46  0CB1               	rrf	___aldiv@divisor+2,f
  8084  0E47  0CB0               	rrf	___aldiv@divisor+1,f
  8085  0E48  0CAF               	rrf	___aldiv@divisor,f
  8086  0E49  0B89               	decfsz	9,f
  8087  0E4A  2E45               	goto	u3105
  8088  0E4B  3001               	movlw	1
  8089  0E4C  02B8               	subwf	___aldiv@counter,f
  8090  0E4D  1D03               	btfss	3,2
  8091  0E4E  2E24               	goto	l3274
  8092  0E4F                     l3286:	
  8093  0E4F  0839               	movf	___aldiv@sign,w
  8094  0E50  1903               	btfsc	3,2
  8095  0E51  2E5D               	goto	l3290
  8096  0E52  09BA               	comf	___aldiv@quotient,f
  8097  0E53  09BB               	comf	___aldiv@quotient+1,f
  8098  0E54  09BC               	comf	___aldiv@quotient+2,f
  8099  0E55  09BD               	comf	___aldiv@quotient+3,f
  8100  0E56  0ABA               	incf	___aldiv@quotient,f
  8101  0E57  1903               	skipnz
  8102  0E58  0ABB               	incf	___aldiv@quotient+1,f
  8103  0E59  1903               	skipnz
  8104  0E5A  0ABC               	incf	___aldiv@quotient+2,f
  8105  0E5B  1903               	skipnz
  8106  0E5C  0ABD               	incf	___aldiv@quotient+3,f
  8107  0E5D                     l3290:	
  8108  0E5D  083D               	movf	___aldiv@quotient+3,w
  8109  0E5E  00B2               	movwf	?___aldiv+3
  8110  0E5F  083C               	movf	___aldiv@quotient+2,w
  8111  0E60  00B1               	movwf	?___aldiv+2
  8112  0E61  083B               	movf	___aldiv@quotient+1,w
  8113  0E62  00B0               	movwf	?___aldiv+1
  8114  0E63  083A               	movf	___aldiv@quotient,w
  8115  0E64  00AF               	movwf	?___aldiv
  8116  0E65  0008               	return
  8117  0E66                     __end_of___aldiv:	
  8118                           
  8119                           	psect	text23
  8120  0D63                     __ptext23:	
  8121 ;; *************** function _DS1302_Initialize *****************
  8122 ;; Defined at:
  8123 ;;		line 105 in file "ds1302.c"
  8124 ;; Parameters:    Size  Location     Type
  8125 ;;  sec             1    wreg     unsigned char 
  8126 ;;  min             1   30[BANK0 ] unsigned char 
  8127 ;;  hr              1   31[BANK0 ] unsigned char 
  8128 ;;  day             1   32[BANK0 ] unsigned char 
  8129 ;;  date            1   33[BANK0 ] unsigned char 
  8130 ;;  mth             1   34[BANK0 ] unsigned char 
  8131 ;;  year            1   35[BANK0 ] unsigned char 
  8132 ;; Auto vars:     Size  Location     Type
  8133 ;;  sec             1   37[BANK0 ] unsigned char 
  8134 ;;  year1           1   44[BANK0 ] unsigned char 
  8135 ;;  mth1            1   43[BANK0 ] unsigned char 
  8136 ;;  date1           1   42[BANK0 ] unsigned char 
  8137 ;;  day1            1   41[BANK0 ] unsigned char 
  8138 ;;  hr1             1   40[BANK0 ] unsigned char 
  8139 ;;  min1            1   39[BANK0 ] unsigned char 
  8140 ;;  sec1            1   38[BANK0 ] unsigned char 
  8141 ;; Return value:  Size  Location     Type
  8142 ;;                  1    wreg      void 
  8143 ;; Registers used:
  8144 ;;		wreg, status,2, status,0, pclath, cstack
  8145 ;; Tracked objects:
  8146 ;;		On entry : 0/0
  8147 ;;		On exit  : 0/0
  8148 ;;		Unchanged: 0/0
  8149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8150 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8151 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8152 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8153 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8154 ;;Total ram usage:       15 bytes
  8155 ;; Hardware stack levels used:    1
  8156 ;; Hardware stack levels required when called:    6
  8157 ;; This function calls:
  8158 ;;		_DS1302_Reset
  8159 ;;		_DS1302_WriteByte
  8160 ;;		_get_bcd
  8161 ;; This function is called by:
  8162 ;;		_main
  8163 ;;		_initMain
  8164 ;; This function uses a non-reentrant model
  8165 ;;
  8166                           
  8167                           
  8168                           ;psect for function _DS1302_Initialize
  8169  0D63                     _DS1302_Initialize:	
  8170                           
  8171                           ;incstack = 0
  8172                           ; Regs used in _DS1302_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8173                           ;DS1302_Initialize@sec stored from wreg
  8174  0D63  0020               	movlb	0	; select bank0
  8175  0D64  00C5               	movwf	DS1302_Initialize@sec
  8176                           
  8177                           ;ds1302.c: 109: byte sec1 = get_bcd(sec);
  8178  0D65  0845               	movf	DS1302_Initialize@sec,w
  8179  0D66  3189  2149  318D   	fcall	_get_bcd
  8180  0D69  0020               	movlb	0	; select bank0
  8181  0D6A  00C4               	movwf	??_DS1302_Initialize
  8182  0D6B  0844               	movf	??_DS1302_Initialize,w
  8183  0D6C  00C6               	movwf	DS1302_Initialize@sec1
  8184                           
  8185                           ;ds1302.c: 110: byte min1 = get_bcd(min);
  8186  0D6D  083E               	movf	DS1302_Initialize@min,w
  8187  0D6E  3189  2149  318D   	fcall	_get_bcd
  8188  0D71  0020               	movlb	0	; select bank0
  8189  0D72  00C4               	movwf	??_DS1302_Initialize
  8190  0D73  0844               	movf	??_DS1302_Initialize,w
  8191  0D74  00C7               	movwf	DS1302_Initialize@min1
  8192                           
  8193                           ;ds1302.c: 111: byte hr1 = get_bcd(hr);
  8194  0D75  083F               	movf	DS1302_Initialize@hr,w
  8195  0D76  3189  2149  318D   	fcall	_get_bcd
  8196  0D79  0020               	movlb	0	; select bank0
  8197  0D7A  00C4               	movwf	??_DS1302_Initialize
  8198  0D7B  0844               	movf	??_DS1302_Initialize,w
  8199  0D7C  00C8               	movwf	DS1302_Initialize@hr1
  8200                           
  8201                           ;ds1302.c: 112: byte day1 = get_bcd(day);
  8202  0D7D  0840               	movf	DS1302_Initialize@day,w
  8203  0D7E  3189  2149  318D   	fcall	_get_bcd
  8204  0D81  0020               	movlb	0	; select bank0
  8205  0D82  00C4               	movwf	??_DS1302_Initialize
  8206  0D83  0844               	movf	??_DS1302_Initialize,w
  8207  0D84  00C9               	movwf	DS1302_Initialize@day1
  8208                           
  8209                           ;ds1302.c: 113: byte date1 = get_bcd(date);
  8210  0D85  0841               	movf	DS1302_Initialize@date,w
  8211  0D86  3189  2149  318D   	fcall	_get_bcd
  8212  0D89  0020               	movlb	0	; select bank0
  8213  0D8A  00C4               	movwf	??_DS1302_Initialize
  8214  0D8B  0844               	movf	??_DS1302_Initialize,w
  8215  0D8C  00CA               	movwf	DS1302_Initialize@date1
  8216                           
  8217                           ;ds1302.c: 114: byte mth1 = get_bcd(mth);
  8218  0D8D  0842               	movf	DS1302_Initialize@mth,w
  8219  0D8E  3189  2149  318D   	fcall	_get_bcd
  8220  0D91  0020               	movlb	0	; select bank0
  8221  0D92  00C4               	movwf	??_DS1302_Initialize
  8222  0D93  0844               	movf	??_DS1302_Initialize,w
  8223  0D94  00CB               	movwf	DS1302_Initialize@mth1
  8224                           
  8225                           ;ds1302.c: 115: byte year1 = get_bcd(year);
  8226  0D95  0843               	movf	DS1302_Initialize@year,w
  8227  0D96  3189  2149  318D   	fcall	_get_bcd
  8228  0D99  0020               	movlb	0	; select bank0
  8229  0D9A  00C4               	movwf	??_DS1302_Initialize
  8230  0D9B  0844               	movf	??_DS1302_Initialize,w
  8231  0D9C  00CC               	movwf	DS1302_Initialize@year1
  8232                           
  8233                           ;ds1302.c: 118: DS1302_Reset();
  8234  0D9D  3195  25CA  318D   	fcall	_DS1302_Reset
  8235                           
  8236                           ;ds1302.c: 119: DS1302_WriteByte(0x8e);
  8237  0DA0  308E               	movlw	142
  8238  0DA1  3196  2643  318D   	fcall	_DS1302_WriteByte
  8239                           
  8240                           ;ds1302.c: 120: DS1302_WriteByte(0);
  8241  0DA4  3000               	movlw	0
  8242  0DA5  3196  2643  318D   	fcall	_DS1302_WriteByte
  8243                           
  8244                           ;ds1302.c: 121: DS1302_Reset();
  8245  0DA8  3195  25CA  318D   	fcall	_DS1302_Reset
  8246                           
  8247                           ;ds1302.c: 122: DS1302_WriteByte(0x90);
  8248  0DAB  3090               	movlw	144
  8249  0DAC  3196  2643  318D   	fcall	_DS1302_WriteByte
  8250                           
  8251                           ;ds1302.c: 123: DS1302_WriteByte(0xab);
  8252  0DAF  30AB               	movlw	171
  8253  0DB0  3196  2643  318D   	fcall	_DS1302_WriteByte
  8254                           
  8255                           ;ds1302.c: 124: DS1302_Reset();
  8256  0DB3  3195  25CA  318D   	fcall	_DS1302_Reset
  8257                           
  8258                           ;ds1302.c: 125: DS1302_WriteByte(0xbe);
  8259  0DB6  30BE               	movlw	190
  8260  0DB7  3196  2643  318D   	fcall	_DS1302_WriteByte
  8261                           
  8262                           ;ds1302.c: 126: DS1302_WriteByte(sec1);
  8263  0DBA  0020               	movlb	0	; select bank0
  8264  0DBB  0846               	movf	DS1302_Initialize@sec1,w
  8265  0DBC  3196  2643  318D   	fcall	_DS1302_WriteByte
  8266                           
  8267                           ;ds1302.c: 127: DS1302_WriteByte(min1);
  8268  0DBF  0020               	movlb	0	; select bank0
  8269  0DC0  0847               	movf	DS1302_Initialize@min1,w
  8270  0DC1  3196  2643  318D   	fcall	_DS1302_WriteByte
  8271                           
  8272                           ;ds1302.c: 128: DS1302_WriteByte(hr1);
  8273  0DC4  0020               	movlb	0	; select bank0
  8274  0DC5  0848               	movf	DS1302_Initialize@hr1,w
  8275  0DC6  3196  2643  318D   	fcall	_DS1302_WriteByte
  8276                           
  8277                           ;ds1302.c: 129: DS1302_WriteByte(date1);
  8278  0DC9  0020               	movlb	0	; select bank0
  8279  0DCA  084A               	movf	DS1302_Initialize@date1,w
  8280  0DCB  3196  2643  318D   	fcall	_DS1302_WriteByte
  8281                           
  8282                           ;ds1302.c: 130: DS1302_WriteByte(mth1);
  8283  0DCE  0020               	movlb	0	; select bank0
  8284  0DCF  084B               	movf	DS1302_Initialize@mth1,w
  8285  0DD0  3196  2643  318D   	fcall	_DS1302_WriteByte
  8286                           
  8287                           ;ds1302.c: 131: DS1302_WriteByte(day1);
  8288  0DD3  0020               	movlb	0	; select bank0
  8289  0DD4  0849               	movf	DS1302_Initialize@day1,w
  8290  0DD5  3196  2643  318D   	fcall	_DS1302_WriteByte
  8291                           
  8292                           ;ds1302.c: 132: DS1302_WriteByte(year1);
  8293  0DD8  0020               	movlb	0	; select bank0
  8294  0DD9  084C               	movf	DS1302_Initialize@year1,w
  8295  0DDA  3196  2643  318D   	fcall	_DS1302_WriteByte
  8296                           
  8297                           ;ds1302.c: 133: DS1302_WriteByte(0);
  8298  0DDD  3000               	movlw	0
  8299  0DDE  3196  2643  318D   	fcall	_DS1302_WriteByte
  8300                           
  8301                           ;ds1302.c: 134: DS1302_Reset();
  8302  0DE1  3195  25CA         	fcall	_DS1302_Reset
  8303  0DE3  0008               	return
  8304  0DE4                     __end_of_DS1302_Initialize:	
  8305                           
  8306                           	psect	text24
  8307  0949                     __ptext24:	
  8308 ;; *************** function _get_bcd *****************
  8309 ;; Defined at:
  8310 ;;		line 147 in file "ds1302.c"
  8311 ;; Parameters:    Size  Location     Type
  8312 ;;  data            1    wreg     unsigned char 
  8313 ;; Auto vars:     Size  Location     Type
  8314 ;;  data            1   28[BANK0 ] unsigned char 
  8315 ;;  nibh            1   29[BANK0 ] unsigned char 
  8316 ;;  nibl            1   27[BANK0 ] unsigned char 
  8317 ;; Return value:  Size  Location     Type
  8318 ;;                  1    wreg      unsigned char 
  8319 ;; Registers used:
  8320 ;;		wreg, status,2, status,0, pclath, cstack
  8321 ;; Tracked objects:
  8322 ;;		On entry : 0/0
  8323 ;;		On exit  : 0/0
  8324 ;;		Unchanged: 0/0
  8325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8327 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8328 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8329 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8330 ;;Total ram usage:        6 bytes
  8331 ;; Hardware stack levels used:    1
  8332 ;; Hardware stack levels required when called:    5
  8333 ;; This function calls:
  8334 ;;		___awdiv
  8335 ;;		___bmul
  8336 ;; This function is called by:
  8337 ;;		_DS1302_Initialize
  8338 ;; This function uses a non-reentrant model
  8339 ;;
  8340                           
  8341                           
  8342                           ;psect for function _get_bcd
  8343  0949                     _get_bcd:	
  8344                           
  8345                           ;incstack = 0
  8346                           ; Regs used in _get_bcd: [wreg+status,2+status,0+pclath+cstack]
  8347                           ;get_bcd@data stored from wreg
  8348  0949  0020               	movlb	0	; select bank0
  8349  094A  00BC               	movwf	get_bcd@data
  8350                           
  8351                           ;ds1302.c: 149: unsigned char nibh;
  8352                           ;ds1302.c: 150: unsigned char nibl;
  8353                           ;ds1302.c: 152: nibh=data/10;
  8354  094B  300A               	movlw	10
  8355  094C  00AF               	movwf	___awdiv@divisor
  8356  094D  3000               	movlw	0
  8357  094E  00B0               	movwf	___awdiv@divisor+1
  8358  094F  083C               	movf	get_bcd@data,w
  8359  0950  00B8               	movwf	??_get_bcd
  8360  0951  01B9               	clrf	??_get_bcd+1
  8361  0952  0838               	movf	??_get_bcd,w
  8362  0953  00B1               	movwf	___awdiv@dividend
  8363  0954  0839               	movf	??_get_bcd+1,w
  8364  0955  00B2               	movwf	___awdiv@dividend+1
  8365  0956  318A  2294  3189   	fcall	___awdiv
  8366  0959  0020               	movlb	0	; select bank0
  8367  095A  082F               	movf	?___awdiv,w
  8368  095B  00BA               	movwf	??_get_bcd+2
  8369  095C  083A               	movf	??_get_bcd+2,w
  8370  095D  00BD               	movwf	get_bcd@nibh
  8371                           
  8372                           ;ds1302.c: 153: nibl=data-(nibh*10);
  8373  095E  300A               	movlw	10
  8374  095F  00B8               	movwf	??_get_bcd
  8375  0960  0838               	movf	??_get_bcd,w
  8376  0961  00AF               	movwf	___bmul@multiplicand
  8377  0962  083D               	movf	get_bcd@nibh,w
  8378  0963  3196  261E  3189   	fcall	___bmul
  8379  0966  3AFF               	xorlw	255
  8380  0967  3E01               	addlw	1
  8381  0968  0020               	movlb	0	; select bank0
  8382  0969  073C               	addwf	get_bcd@data,w
  8383  096A  00B9               	movwf	??_get_bcd+1
  8384  096B  0839               	movf	??_get_bcd+1,w
  8385  096C  00BB               	movwf	get_bcd@nibl
  8386                           
  8387                           ;ds1302.c: 155: return((nibh<<4)|nibl);
  8388  096D  083D               	movf	get_bcd@nibh,w
  8389  096E  00B8               	movwf	??_get_bcd
  8390  096F  3003               	movlw	3
  8391  0970                     u2955:	
  8392  0970  35B8               	lslf	??_get_bcd,f
  8393  0971  3EFF               	addlw	-1
  8394  0972  1D03               	skipz
  8395  0973  2970               	goto	u2955
  8396  0974  3538               	lslf	??_get_bcd,w
  8397  0975  043B               	iorwf	get_bcd@nibl,w
  8398  0976  0008               	return
  8399  0977                     __end_of_get_bcd:	
  8400                           
  8401                           	psect	text25
  8402  161E                     __ptext25:	
  8403 ;; *************** function ___bmul *****************
  8404 ;; Defined at:
  8405 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul8.c"
  8406 ;; Parameters:    Size  Location     Type
  8407 ;;  multiplier      1    wreg     unsigned char 
  8408 ;;  multiplicand    1   15[BANK0 ] unsigned char 
  8409 ;; Auto vars:     Size  Location     Type
  8410 ;;  multiplier      1   18[BANK0 ] unsigned char 
  8411 ;;  product         1   17[BANK0 ] unsigned char 
  8412 ;; Return value:  Size  Location     Type
  8413 ;;                  1    wreg      unsigned char 
  8414 ;; Registers used:
  8415 ;;		wreg, status,2, status,0
  8416 ;; Tracked objects:
  8417 ;;		On entry : 0/0
  8418 ;;		On exit  : 0/0
  8419 ;;		Unchanged: 0/0
  8420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8421 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8422 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8423 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8424 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8425 ;;Total ram usage:        4 bytes
  8426 ;; Hardware stack levels used:    1
  8427 ;; Hardware stack levels required when called:    4
  8428 ;; This function calls:
  8429 ;;		Nothing
  8430 ;; This function is called by:
  8431 ;;		_get_bcd
  8432 ;; This function uses a non-reentrant model
  8433 ;;
  8434                           
  8435                           
  8436                           ;psect for function ___bmul
  8437  161E                     ___bmul:	
  8438                           
  8439                           ;incstack = 0
  8440                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  8441                           ;___bmul@multiplier stored from wreg
  8442  161E  0020               	movlb	0	; select bank0
  8443  161F  00B2               	movwf	___bmul@multiplier
  8444  1620  01B1               	clrf	___bmul@product
  8445  1621                     l3134:	
  8446  1621  1C32               	btfss	___bmul@multiplier,0
  8447  1622  2E27               	goto	l3138
  8448  1623  082F               	movf	___bmul@multiplicand,w
  8449  1624  00B0               	movwf	??___bmul
  8450  1625  0830               	movf	??___bmul,w
  8451  1626  07B1               	addwf	___bmul@product,f
  8452  1627                     l3138:	
  8453  1627  1003               	clrc
  8454  1628  0DAF               	rlf	___bmul@multiplicand,f
  8455  1629  1003               	clrc
  8456  162A  0CB2               	rrf	___bmul@multiplier,f
  8457  162B  0832               	movf	___bmul@multiplier,w
  8458  162C  1D03               	btfss	3,2
  8459  162D  2E21               	goto	l3134
  8460  162E  0831               	movf	___bmul@product,w
  8461  162F  0008               	return
  8462  1630                     __end_of___bmul:	
  8463                           
  8464                           	psect	text26
  8465  0A94                     __ptext26:	
  8466 ;; *************** function ___awdiv *****************
  8467 ;; Defined at:
  8468 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
  8469 ;; Parameters:    Size  Location     Type
  8470 ;;  divisor         2   15[BANK0 ] int 
  8471 ;;  dividend        2   17[BANK0 ] int 
  8472 ;; Auto vars:     Size  Location     Type
  8473 ;;  quotient        2   22[BANK0 ] int 
  8474 ;;  sign            1   21[BANK0 ] unsigned char 
  8475 ;;  counter         1   20[BANK0 ] unsigned char 
  8476 ;; Return value:  Size  Location     Type
  8477 ;;                  2   15[BANK0 ] int 
  8478 ;; Registers used:
  8479 ;;		wreg, status,2, status,0
  8480 ;; Tracked objects:
  8481 ;;		On entry : 0/0
  8482 ;;		On exit  : 0/0
  8483 ;;		Unchanged: 0/0
  8484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8485 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8486 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8487 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8488 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8489 ;;Total ram usage:        9 bytes
  8490 ;; Hardware stack levels used:    1
  8491 ;; Hardware stack levels required when called:    4
  8492 ;; This function calls:
  8493 ;;		Nothing
  8494 ;; This function is called by:
  8495 ;;		_get_bcd
  8496 ;; This function uses a non-reentrant model
  8497 ;;
  8498                           
  8499                           
  8500                           ;psect for function ___awdiv
  8501  0A94                     ___awdiv:	
  8502                           
  8503                           ;incstack = 0
  8504                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  8505  0A94  0020               	movlb	0	; select bank0
  8506  0A95  01B5               	clrf	___awdiv@sign
  8507  0A96  1FB0               	btfss	___awdiv@divisor+1,7
  8508  0A97  2A9F               	goto	l3154
  8509  0A98  09AF               	comf	___awdiv@divisor,f
  8510  0A99  09B0               	comf	___awdiv@divisor+1,f
  8511  0A9A  0AAF               	incf	___awdiv@divisor,f
  8512  0A9B  1903               	skipnz
  8513  0A9C  0AB0               	incf	___awdiv@divisor+1,f
  8514  0A9D  01B5               	clrf	___awdiv@sign
  8515  0A9E  0AB5               	incf	___awdiv@sign,f
  8516  0A9F                     l3154:	
  8517  0A9F  1FB2               	btfss	___awdiv@dividend+1,7
  8518  0AA0  2AAA               	goto	l3160
  8519  0AA1  09B1               	comf	___awdiv@dividend,f
  8520  0AA2  09B2               	comf	___awdiv@dividend+1,f
  8521  0AA3  0AB1               	incf	___awdiv@dividend,f
  8522  0AA4  1903               	skipnz
  8523  0AA5  0AB2               	incf	___awdiv@dividend+1,f
  8524  0AA6  3001               	movlw	1
  8525  0AA7  00B3               	movwf	??___awdiv
  8526  0AA8  0833               	movf	??___awdiv,w
  8527  0AA9  06B5               	xorwf	___awdiv@sign,f
  8528  0AAA                     l3160:	
  8529  0AAA  01B6               	clrf	___awdiv@quotient
  8530  0AAB  01B7               	clrf	___awdiv@quotient+1
  8531  0AAC  082F               	movf	___awdiv@divisor,w
  8532  0AAD  0430               	iorwf	___awdiv@divisor+1,w
  8533  0AAE  1903               	btfsc	3,2
  8534  0AAF  2AD9               	goto	l3182
  8535  0AB0  01B4               	clrf	___awdiv@counter
  8536  0AB1  0AB4               	incf	___awdiv@counter,f
  8537  0AB2                     l3170:	
  8538  0AB2  1BB0               	btfsc	___awdiv@divisor+1,7
  8539  0AB3  2ABE               	goto	l3172
  8540  0AB4  3001               	movlw	1
  8541  0AB5                     u2855:	
  8542  0AB5  35AF               	lslf	___awdiv@divisor,f
  8543  0AB6  0DB0               	rlf	___awdiv@divisor+1,f
  8544  0AB7  0B89               	decfsz	9,f
  8545  0AB8  2AB5               	goto	u2855
  8546  0AB9  3001               	movlw	1
  8547  0ABA  00B3               	movwf	??___awdiv
  8548  0ABB  0833               	movf	??___awdiv,w
  8549  0ABC  07B4               	addwf	___awdiv@counter,f
  8550  0ABD  2AB2               	goto	l3170
  8551  0ABE                     l3172:	
  8552  0ABE  3001               	movlw	1
  8553  0ABF                     u2875:	
  8554  0ABF  35B6               	lslf	___awdiv@quotient,f
  8555  0AC0  0DB7               	rlf	___awdiv@quotient+1,f
  8556  0AC1  0B89               	decfsz	9,f
  8557  0AC2  2ABF               	goto	u2875
  8558  0AC3  0830               	movf	___awdiv@divisor+1,w
  8559  0AC4  0232               	subwf	___awdiv@dividend+1,w
  8560  0AC5  1D03               	skipz
  8561  0AC6  2AC9               	goto	u2885
  8562  0AC7  082F               	movf	___awdiv@divisor,w
  8563  0AC8  0231               	subwf	___awdiv@dividend,w
  8564  0AC9                     u2885:	
  8565  0AC9  1C03               	skipc
  8566  0ACA  2AD0               	goto	l3178
  8567  0ACB  082F               	movf	___awdiv@divisor,w
  8568  0ACC  02B1               	subwf	___awdiv@dividend,f
  8569  0ACD  0830               	movf	___awdiv@divisor+1,w
  8570  0ACE  3BB2               	subwfb	___awdiv@dividend+1,f
  8571  0ACF  1436               	bsf	___awdiv@quotient,0
  8572  0AD0                     l3178:	
  8573  0AD0  3001               	movlw	1
  8574  0AD1                     u2895:	
  8575  0AD1  36B0               	lsrf	___awdiv@divisor+1,f
  8576  0AD2  0CAF               	rrf	___awdiv@divisor,f
  8577  0AD3  0B89               	decfsz	9,f
  8578  0AD4  2AD1               	goto	u2895
  8579  0AD5  3001               	movlw	1
  8580  0AD6  02B4               	subwf	___awdiv@counter,f
  8581  0AD7  1D03               	btfss	3,2
  8582  0AD8  2ABE               	goto	l3172
  8583  0AD9                     l3182:	
  8584  0AD9  0835               	movf	___awdiv@sign,w
  8585  0ADA  1903               	btfsc	3,2
  8586  0ADB  2AE1               	goto	l3186
  8587  0ADC  09B6               	comf	___awdiv@quotient,f
  8588  0ADD  09B7               	comf	___awdiv@quotient+1,f
  8589  0ADE  0AB6               	incf	___awdiv@quotient,f
  8590  0ADF  1903               	skipnz
  8591  0AE0  0AB7               	incf	___awdiv@quotient+1,f
  8592  0AE1                     l3186:	
  8593  0AE1  0837               	movf	___awdiv@quotient+1,w
  8594  0AE2  00B0               	movwf	?___awdiv+1
  8595  0AE3  0836               	movf	___awdiv@quotient,w
  8596  0AE4  00AF               	movwf	?___awdiv
  8597  0AE5  0008               	return
  8598  0AE6                     __end_of___awdiv:	
  8599                           
  8600                           	psect	text27
  8601  1643                     __ptext27:	
  8602 ;; *************** function _DS1302_WriteByte *****************
  8603 ;; Defined at:
  8604 ;;		line 43 in file "ds1302.c"
  8605 ;; Parameters:    Size  Location     Type
  8606 ;;  W_Byte          1    wreg     unsigned char 
  8607 ;; Auto vars:     Size  Location     Type
  8608 ;;  W_Byte          1   16[BANK0 ] unsigned char 
  8609 ;;  i               1   17[BANK0 ] unsigned char 
  8610 ;; Return value:  Size  Location     Type
  8611 ;;                  1    wreg      void 
  8612 ;; Registers used:
  8613 ;;		wreg, status,2, status,0
  8614 ;; Tracked objects:
  8615 ;;		On entry : 0/0
  8616 ;;		On exit  : 0/0
  8617 ;;		Unchanged: 0/0
  8618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8620 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8621 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8622 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8623 ;;Total ram usage:        3 bytes
  8624 ;; Hardware stack levels used:    1
  8625 ;; Hardware stack levels required when called:    4
  8626 ;; This function calls:
  8627 ;;		Nothing
  8628 ;; This function is called by:
  8629 ;;		_DS1302_Initialize
  8630 ;; This function uses a non-reentrant model
  8631 ;;
  8632                           
  8633                           
  8634                           ;psect for function _DS1302_WriteByte
  8635  1643                     _DS1302_WriteByte:	
  8636                           
  8637                           ;incstack = 0
  8638                           ; Regs used in _DS1302_WriteByte: [wreg+status,2+status,0]
  8639                           ;DS1302_WriteByte@W_Byte stored from wreg
  8640  1643  0020               	movlb	0	; select bank0
  8641  1644  00B0               	movwf	DS1302_WriteByte@W_Byte
  8642                           
  8643                           ;ds1302.c: 45: unsigned char i;
  8644                           ;ds1302.c: 47: for(i = 0; i < 8; ++i)
  8645  1645  01B1               	clrf	DS1302_WriteByte@i
  8646  1646                     L2:	
  8647  1646  3008               	movlw	8
  8648  1647  0231               	subwf	DS1302_WriteByte@i,w
  8649  1648  1803               	btfsc	3,0
  8650  1649  0008               	return
  8651                           
  8652                           ;ds1302.c: 48: {
  8653                           ;ds1302.c: 49: RD2 = 0;
  8654  164A  110F               	bcf	15,2	;volatile
  8655                           
  8656                           ;ds1302.c: 51: if(W_Byte & 0x01)
  8657  164B  1830               	btfsc	DS1302_WriteByte@W_Byte,0
  8658                           
  8659                           ;ds1302.c: 52: {
  8660                           ;ds1302.c: 53: RD2 = 1;
  8661  164C  150F               	bsf	15,2	;volatile
  8662                           
  8663                           ;ds1302.c: 54: }
  8664                           ;ds1302.c: 56: RD1 = 0;
  8665  164D  108F               	bcf	15,1	;volatile
  8666                           
  8667                           ;ds1302.c: 57: RD1 = 1;
  8668  164E  148F               	bsf	15,1	;volatile
  8669                           
  8670                           ;ds1302.c: 58: W_Byte >>= 1;
  8671  164F  1003               	clrc
  8672  1650  0CB0               	rrf	DS1302_WriteByte@W_Byte,f
  8673  1651  3001               	movlw	1
  8674  1652  00AF               	movwf	??_DS1302_WriteByte
  8675  1653  082F               	movf	??_DS1302_WriteByte,w
  8676  1654  07B1               	addwf	DS1302_WriteByte@i,f
  8677  1655  2E46               	goto	L2
  8678  1656                     __end_of_DS1302_WriteByte:	
  8679                           
  8680                           	psect	text28
  8681  15CA                     __ptext28:	
  8682 ;; *************** function _DS1302_Reset *****************
  8683 ;; Defined at:
  8684 ;;		line 26 in file "ds1302.c"
  8685 ;; Parameters:    Size  Location     Type
  8686 ;;		None
  8687 ;; Auto vars:     Size  Location     Type
  8688 ;;		None
  8689 ;; Return value:  Size  Location     Type
  8690 ;;                  1    wreg      void 
  8691 ;; Registers used:
  8692 ;;		None
  8693 ;; Tracked objects:
  8694 ;;		On entry : 0/0
  8695 ;;		On exit  : 0/0
  8696 ;;		Unchanged: 0/0
  8697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8702 ;;Total ram usage:        0 bytes
  8703 ;; Hardware stack levels used:    1
  8704 ;; Hardware stack levels required when called:    4
  8705 ;; This function calls:
  8706 ;;		Nothing
  8707 ;; This function is called by:
  8708 ;;		_DS1302_Initialize
  8709 ;; This function uses a non-reentrant model
  8710 ;;
  8711                           
  8712                           
  8713                           ;psect for function _DS1302_Reset
  8714  15CA                     _DS1302_Reset:	
  8715                           
  8716                           ;ds1302.c: 28: RD1 = 0;
  8717                           
  8718                           ;incstack = 0
  8719                           ; Regs used in _DS1302_Reset: []
  8720  15CA  0020               	movlb	0	; select bank0
  8721  15CB  108F               	bcf	15,1	;volatile
  8722                           
  8723                           ;ds1302.c: 29: RD0 = 0;
  8724  15CC  100F               	bcf	15,0	;volatile
  8725                           
  8726                           ;ds1302.c: 30: RD0 = 1;
  8727  15CD  140F               	bsf	15,0	;volatile
  8728  15CE  0008               	return
  8729  15CF                     __end_of_DS1302_Reset:	
  8730                           
  8731                           	psect	text29
  8732  0C7A                     __ptext29:	
  8733 ;; *************** function _green *****************
  8734 ;; Defined at:
  8735 ;;		line 273 in file "Main.c"
  8736 ;; Parameters:    Size  Location     Type
  8737 ;;  buf             1    wreg     PTR unsigned char 
  8738 ;;		 -> buf(50), 
  8739 ;; Auto vars:     Size  Location     Type
  8740 ;;  buf             1   37[BANK0 ] PTR unsigned char 
  8741 ;;		 -> buf(50), 
  8742 ;;  green1          1   38[BANK0 ] PTR unsigned char 
  8743 ;;		 -> NULL(0), buf(50), 
  8744 ;; Return value:  Size  Location     Type
  8745 ;;                  1    wreg      void 
  8746 ;; Registers used:
  8747 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8748 ;; Tracked objects:
  8749 ;;		On entry : 0/0
  8750 ;;		On exit  : 0/0
  8751 ;;		Unchanged: 0/0
  8752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8754 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8755 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8756 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8757 ;;Total ram usage:        5 bytes
  8758 ;; Hardware stack levels used:    1
  8759 ;; Hardware stack levels required when called:    7
  8760 ;; This function calls:
  8761 ;;		_strstr
  8762 ;;		_touchscreen_command
  8763 ;; This function is called by:
  8764 ;;		_main
  8765 ;; This function uses a non-reentrant model
  8766 ;;
  8767                           
  8768                           
  8769                           ;psect for function _green
  8770  0C7A                     _green:	
  8771                           
  8772                           ;incstack = 0
  8773                           ; Regs used in _green: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8774                           ;green@buf stored from wreg
  8775  0C7A  0020               	movlb	0	; select bank0
  8776  0C7B  00C5               	movwf	green@buf
  8777                           
  8778                           ;Main.c: 275: char* green1;
  8779                           ;Main.c: 277: green1 = strstr(buf, "ener");
  8780  0C7C  3086               	movlw	low (STR_29| (0+32768))
  8781  0C7D  00BC               	movwf	strstr@s2
  8782  0C7E  3085               	movlw	high (STR_29| (0+32768))
  8783  0C7F  00BD               	movwf	strstr@s2+1
  8784  0C80  0845               	movf	green@buf,w
  8785  0C81  318A  2212  318C   	fcall	_strstr
  8786  0C84  0020               	movlb	0	; select bank0
  8787  0C85  00C2               	movwf	??_green
  8788  0C86  0842               	movf	??_green,w
  8789  0C87  00C6               	movwf	green@green1
  8790                           
  8791                           ;Main.c: 279: if (green1 == (0))
  8792  0C88  0846               	movf	green@green1,w
  8793  0C89  1903               	btfsc	3,2
  8794  0C8A  0008               	return
  8795                           
  8796                           ;Main.c: 284: else
  8797                           ;Main.c: 285: {
  8798                           ;Main.c: 287: if (!on){
  8799                           
  8800                           ;Main.c: 282: }
  8801                           
  8802                           ;Main.c: 280: {
  8803                           ;Main.c: 281: return;
  8804  0C8B  085C               	movf	_on,w
  8805  0C8C  1D03               	btfss	3,2
  8806  0C8D  2CBB               	goto	l3696
  8807                           
  8808                           ;Main.c: 288: touchscreen_command("t0.txt=\"ON\"");
  8809  0C8E  3043               	movlw	low (STR_30| (0+32768))
  8810  0C8F  00B5               	movwf	touchscreen_command@string
  8811  0C90  3085               	movlw	high (STR_30| (0+32768))
  8812  0C91  00B6               	movwf	touchscreen_command@string+1
  8813  0C92  3197  2793  318C   	fcall	_touchscreen_command
  8814                           
  8815                           ;Main.c: 289: _delay((unsigned long)((100)*(16000000/4000.0)));
  8816  0C95  3003               	movlw	3
  8817  0C96  0020               	movlb	0	; select bank0
  8818  0C97  00C4               	movwf	??_green+2
  8819  0C98  3008               	movlw	8
  8820  0C99  00C3               	movwf	??_green+1
  8821  0C9A  3078               	movlw	120
  8822  0C9B  00C2               	movwf	??_green
  8823  0C9C                     u3857:	
  8824  0C9C  0BC2               	decfsz	??_green,f
  8825  0C9D  2C9C               	goto	u3857
  8826  0C9E  0BC3               	decfsz	??_green+1,f
  8827  0C9F  2C9C               	goto	u3857
  8828  0CA0  0BC4               	decfsz	??_green+2,f
  8829  0CA1  2C9C               	goto	u3857
  8830                           
  8831                           ;Main.c: 290: touchscreen_command("dim=30");
  8832  0CA2  3069               	movlw	low (STR_31| (0+32768))
  8833  0CA3  0020               	movlb	0	; select bank0
  8834  0CA4  00B5               	movwf	touchscreen_command@string
  8835  0CA5  3085               	movlw	high (STR_31| (0+32768))
  8836  0CA6  00B6               	movwf	touchscreen_command@string+1
  8837  0CA7  3197  2793  318C   	fcall	_touchscreen_command
  8838                           
  8839                           ;Main.c: 291: _delay((unsigned long)((100)*(16000000/4000.0)));
  8840  0CAA  3003               	movlw	3
  8841  0CAB  0020               	movlb	0	; select bank0
  8842  0CAC  00C4               	movwf	??_green+2
  8843  0CAD  3008               	movlw	8
  8844  0CAE  00C3               	movwf	??_green+1
  8845  0CAF  3078               	movlw	120
  8846  0CB0  00C2               	movwf	??_green
  8847  0CB1                     u3867:	
  8848  0CB1  0BC2               	decfsz	??_green,f
  8849  0CB2  2CB1               	goto	u3867
  8850  0CB3  0BC3               	decfsz	??_green+1,f
  8851  0CB4  2CB1               	goto	u3867
  8852  0CB5  0BC4               	decfsz	??_green+2,f
  8853  0CB6  2CB1               	goto	u3867
  8854                           
  8855                           ;Main.c: 293: on = 1;
  8856  0CB7  0020               	movlb	0	; select bank0
  8857  0CB8  01DC               	clrf	_on
  8858  0CB9  0ADC               	incf	_on,f
  8859                           
  8860                           ;Main.c: 294: }
  8861  0CBA  0008               	return
  8862  0CBB                     l3696:	
  8863                           
  8864                           ;Main.c: 296: else {
  8865                           ;Main.c: 297: touchscreen_command("t0.txt=\"OFF\"");
  8866  0CBB  3036               	movlw	low (STR_32| (0+32768))
  8867  0CBC  00B5               	movwf	touchscreen_command@string
  8868  0CBD  3085               	movlw	high (STR_32| (0+32768))
  8869  0CBE  00B6               	movwf	touchscreen_command@string+1
  8870  0CBF  3197  2793  318C   	fcall	_touchscreen_command
  8871                           
  8872                           ;Main.c: 298: _delay((unsigned long)((100)*(16000000/4000.0)));
  8873  0CC2  3003               	movlw	3
  8874  0CC3  0020               	movlb	0	; select bank0
  8875  0CC4  00C4               	movwf	??_green+2
  8876  0CC5  3008               	movlw	8
  8877  0CC6  00C3               	movwf	??_green+1
  8878  0CC7  3078               	movlw	120
  8879  0CC8  00C2               	movwf	??_green
  8880  0CC9                     u3877:	
  8881  0CC9  0BC2               	decfsz	??_green,f
  8882  0CCA  2CC9               	goto	u3877
  8883  0CCB  0BC3               	decfsz	??_green+1,f
  8884  0CCC  2CC9               	goto	u3877
  8885  0CCD  0BC4               	decfsz	??_green+2,f
  8886  0CCE  2CC9               	goto	u3877
  8887                           
  8888                           ;Main.c: 299: touchscreen_command("dim=100");
  8889  0CCF  305A               	movlw	low (STR_33| (0+32768))
  8890  0CD0  0020               	movlb	0	; select bank0
  8891  0CD1  00B5               	movwf	touchscreen_command@string
  8892  0CD2  3085               	movlw	high (STR_33| (0+32768))
  8893  0CD3  00B6               	movwf	touchscreen_command@string+1
  8894  0CD4  3197  2793  318C   	fcall	_touchscreen_command
  8895                           
  8896                           ;Main.c: 300: _delay((unsigned long)((100)*(16000000/4000.0)));
  8897  0CD7  3003               	movlw	3
  8898  0CD8  0020               	movlb	0	; select bank0
  8899  0CD9  00C4               	movwf	??_green+2
  8900  0CDA  3008               	movlw	8
  8901  0CDB  00C3               	movwf	??_green+1
  8902  0CDC  3078               	movlw	120
  8903  0CDD  00C2               	movwf	??_green
  8904  0CDE                     u3887:	
  8905  0CDE  0BC2               	decfsz	??_green,f
  8906  0CDF  2CDE               	goto	u3887
  8907  0CE0  0BC3               	decfsz	??_green+1,f
  8908  0CE1  2CDE               	goto	u3887
  8909  0CE2  0BC4               	decfsz	??_green+2,f
  8910  0CE3  2CDE               	goto	u3887
  8911                           
  8912                           ;Main.c: 302: on = 0;
  8913  0CE4  0020               	movlb	0	; select bank0
  8914  0CE5  01DC               	clrf	_on
  8915  0CE6  0008               	return
  8916  0CE7                     __end_of_green:	
  8917                           
  8918                           	psect	text30
  8919  1793                     __ptext30:	
  8920 ;; *************** function _touchscreen_command *****************
  8921 ;; Defined at:
  8922 ;;		line 22 in file "touchscreen.c"
  8923 ;; Parameters:    Size  Location     Type
  8924 ;;  string          2   21[BANK0 ] PTR unsigned char 
  8925 ;;		 -> STR_33(8), STR_32(13), STR_31(7), STR_30(12), 
  8926 ;;		 -> STR_28(7), 
  8927 ;; Auto vars:     Size  Location     Type
  8928 ;;		None
  8929 ;; Return value:  Size  Location     Type
  8930 ;;                  1    wreg      void 
  8931 ;; Registers used:
  8932 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8933 ;; Tracked objects:
  8934 ;;		On entry : 0/0
  8935 ;;		On exit  : 0/0
  8936 ;;		Unchanged: 0/0
  8937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8938 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8940 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8941 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8942 ;;Total ram usage:        5 bytes
  8943 ;; Hardware stack levels used:    1
  8944 ;; Hardware stack levels required when called:    6
  8945 ;; This function calls:
  8946 ;;		_EUSART_Write
  8947 ;;		_EUSART_Write_Text
  8948 ;; This function is called by:
  8949 ;;		_main
  8950 ;;		_green
  8951 ;; This function uses a non-reentrant model
  8952 ;;
  8953                           
  8954                           
  8955                           ;psect for function _touchscreen_command
  8956  1793                     _touchscreen_command:	
  8957                           
  8958                           ;touchscreen.c: 24: EUSART_Write_Text(string);
  8959                           
  8960                           ;incstack = 0
  8961                           ; Regs used in _touchscreen_command: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8962  1793  0020               	movlb	0	; select bank0
  8963  1794  0836               	movf	touchscreen_command@string+1,w
  8964  1795  00B1               	movwf	EUSART_Write_Text@text+1
  8965  1796  0835               	movf	touchscreen_command@string,w
  8966  1797  00B0               	movwf	EUSART_Write_Text@text
  8967  1798  3197  2717  3197   	fcall	_EUSART_Write_Text
  8968                           
  8969                           ;touchscreen.c: 25: EUSART_Write(0xFF);
  8970  179B  30FF               	movlw	255
  8971  179C  3195  25E3  3197   	fcall	_EUSART_Write
  8972                           
  8973                           ;touchscreen.c: 26: EUSART_Write(0xFF);
  8974  179F  30FF               	movlw	255
  8975  17A0  3195  25E3  3197   	fcall	_EUSART_Write
  8976                           
  8977                           ;touchscreen.c: 27: EUSART_Write(0xFF);
  8978  17A3  30FF               	movlw	255
  8979  17A4  3195  25E3  3197   	fcall	_EUSART_Write
  8980                           
  8981                           ;touchscreen.c: 28: _delay((unsigned long)((1000)*(16000000/4000.0)));
  8982  17A7  3015               	movlw	21
  8983  17A8  0020               	movlb	0	; select bank0
  8984  17A9  00B9               	movwf	??_touchscreen_command+2
  8985  17AA  304B               	movlw	75
  8986  17AB  00B8               	movwf	??_touchscreen_command+1
  8987  17AC  30D1               	movlw	209
  8988  17AD  00B7               	movwf	??_touchscreen_command
  8989  17AE                     u3897:	
  8990  17AE  0BB7               	decfsz	??_touchscreen_command,f
  8991  17AF  2FAE               	goto	u3897
  8992  17B0  0BB8               	decfsz	??_touchscreen_command+1,f
  8993  17B1  2FAE               	goto	u3897
  8994  17B2  0BB9               	decfsz	??_touchscreen_command+2,f
  8995  17B3  2FAE               	goto	u3897
  8996  17B4  0000               	nop
  8997  17B5  0008               	return
  8998  17B6                     __end_of_touchscreen_command:	
  8999                           
  9000                           	psect	text31
  9001  1717                     __ptext31:	
  9002 ;; *************** function _EUSART_Write_Text *****************
  9003 ;; Defined at:
  9004 ;;		line 125 in file "EUSART.c"
  9005 ;; Parameters:    Size  Location     Type
  9006 ;;  text            2   16[BANK0 ] PTR unsigned char 
  9007 ;;		 -> screen_date(10), screen_mth(11), screen_time(10), time_string(10), 
  9008 ;;		 -> mth_string(10), date_string(10), STR_33(8), STR_32(13), 
  9009 ;;		 -> STR_31(7), STR_30(12), STR_28(7), screen_month(8), 
  9010 ;;		 -> month_string(10), screen_date1(8), date1_string(10), screen_hour(8), 
  9011 ;;		 -> hour_string(10), screen_mins(8), min_string(10), 
  9012 ;; Auto vars:     Size  Location     Type
  9013 ;;  i               2   19[BANK0 ] int 
  9014 ;; Return value:  Size  Location     Type
  9015 ;;                  1    wreg      void 
  9016 ;; Registers used:
  9017 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9018 ;; Tracked objects:
  9019 ;;		On entry : 0/0
  9020 ;;		On exit  : 0/0
  9021 ;;		Unchanged: 0/0
  9022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9023 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9024 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9025 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9026 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9027 ;;Total ram usage:        5 bytes
  9028 ;; Hardware stack levels used:    1
  9029 ;; Hardware stack levels required when called:    5
  9030 ;; This function calls:
  9031 ;;		_EUSART_Write
  9032 ;; This function is called by:
  9033 ;;		_touchscreen_command
  9034 ;;		_touchscreen_data
  9035 ;; This function uses a non-reentrant model
  9036 ;;
  9037                           
  9038                           
  9039                           ;psect for function _EUSART_Write_Text
  9040  1717                     _EUSART_Write_Text:	
  9041                           
  9042                           ;EUSART.c: 127: int i;
  9043                           ;EUSART.c: 128: for(i=0;text[i]!='\0';i++)
  9044                           
  9045                           ;incstack = 0
  9046                           ; Regs used in _EUSART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9047  1717  0020               	movlb	0	; select bank0
  9048  1718  01B3               	clrf	EUSART_Write_Text@i
  9049  1719  01B4               	clrf	EUSART_Write_Text@i+1
  9050  171A                     l3252:	
  9051  171A  0830               	movf	EUSART_Write_Text@text,w
  9052  171B  0733               	addwf	EUSART_Write_Text@i,w
  9053  171C  0084               	movwf	4
  9054  171D  0831               	movf	EUSART_Write_Text@text+1,w
  9055  171E  3D34               	addwfc	EUSART_Write_Text@i+1,w
  9056  171F  0085               	movwf	5
  9057  1720  0012               	moviw fsr0++
  9058  1721  1903               	btfsc	3,2
  9059  1722  0008               	return
  9060                           
  9061                           ;EUSART.c: 129: EUSART_Write(text[i]);
  9062  1723  0830               	movf	EUSART_Write_Text@text,w
  9063  1724  0733               	addwf	EUSART_Write_Text@i,w
  9064  1725  0084               	movwf	4
  9065  1726  0831               	movf	EUSART_Write_Text@text+1,w
  9066  1727  3D34               	addwfc	EUSART_Write_Text@i+1,w
  9067  1728  0085               	movwf	5
  9068  1729  0800               	movf	0,w	;code access
  9069  172A  3195  25E3  3197   	fcall	_EUSART_Write
  9070  172D  3001               	movlw	1
  9071  172E  0020               	movlb	0	; select bank0
  9072  172F  07B3               	addwf	EUSART_Write_Text@i,f
  9073  1730  3000               	movlw	0
  9074  1731  3DB4               	addwfc	EUSART_Write_Text@i+1,f
  9075  1732  2F1A               	goto	l3252
  9076  1733                     __end_of_EUSART_Write_Text:	
  9077                           
  9078                           	psect	text32
  9079  15E3                     __ptext32:	
  9080 ;; *************** function _EUSART_Write *****************
  9081 ;; Defined at:
  9082 ;;		line 98 in file "EUSART.c"
  9083 ;; Parameters:    Size  Location     Type
  9084 ;;  txData          1    wreg     unsigned char 
  9085 ;; Auto vars:     Size  Location     Type
  9086 ;;  txData          1   15[BANK0 ] unsigned char 
  9087 ;; Return value:  Size  Location     Type
  9088 ;;                  1    wreg      void 
  9089 ;; Registers used:
  9090 ;;		wreg
  9091 ;; Tracked objects:
  9092 ;;		On entry : 0/0
  9093 ;;		On exit  : 0/0
  9094 ;;		Unchanged: 0/0
  9095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9097 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9099 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9100 ;;Total ram usage:        1 bytes
  9101 ;; Hardware stack levels used:    1
  9102 ;; Hardware stack levels required when called:    4
  9103 ;; This function calls:
  9104 ;;		Nothing
  9105 ;; This function is called by:
  9106 ;;		_EUSART_Write_Text
  9107 ;;		_touchscreen_command
  9108 ;;		_touchscreen_data
  9109 ;; This function uses a non-reentrant model
  9110 ;;
  9111                           
  9112                           
  9113                           ;psect for function _EUSART_Write
  9114  15E3                     _EUSART_Write:	
  9115                           
  9116                           ;incstack = 0
  9117                           ; Regs used in _EUSART_Write: [wreg]
  9118                           ;EUSART_Write@txData stored from wreg
  9119  15E3  0020               	movlb	0	; select bank0
  9120  15E4  00AF               	movwf	EUSART_Write@txData
  9121  15E5                     l380:	
  9122                           ;EUSART.c: 101: {
  9123                           
  9124                           ;EUSART.c: 100: while(0 == PIR1bits.TXIF)
  9125                           
  9126  15E5  1E11               	btfss	17,4	;volatile
  9127  15E6  2DE5               	goto	l380
  9128                           
  9129                           ;EUSART.c: 102: }
  9130                           ;EUSART.c: 104: TX1REG = txData;
  9131  15E7  082F               	movf	EUSART_Write@txData,w
  9132  15E8  0023               	movlb	3	; select bank3
  9133  15E9  009A               	movwf	26	;volatile
  9134  15EA  0008               	return
  9135  15EB                     __end_of_EUSART_Write:	
  9136                           
  9137                           	psect	text33
  9138  0A12                     __ptext33:	
  9139 ;; *************** function _strstr *****************
  9140 ;; Defined at:
  9141 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\strstr.c"
  9142 ;; Parameters:    Size  Location     Type
  9143 ;;  s1              1    wreg     PTR const unsigned char 
  9144 ;;		 -> NULL(0), buf(50), 
  9145 ;;  s2              2   28[BANK0 ] PTR const unsigned char 
  9146 ;;		 -> STR_29(5), STR_18(4), STR_17(6), STR_16(5), 
  9147 ;;		 -> STR_15(5), STR_14(5), 
  9148 ;; Auto vars:     Size  Location     Type
  9149 ;;  s1              1   33[BANK0 ] PTR const unsigned char 
  9150 ;;		 -> NULL(0), buf(50), 
  9151 ;; Return value:  Size  Location     Type
  9152 ;;                  1    wreg      PTR unsigned char 
  9153 ;; Registers used:
  9154 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9155 ;; Tracked objects:
  9156 ;;		On entry : 0/0
  9157 ;;		On exit  : 0/0
  9158 ;;		Unchanged: 0/0
  9159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9160 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9161 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9162 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9163 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9164 ;;Total ram usage:        6 bytes
  9165 ;; Hardware stack levels used:    1
  9166 ;; Hardware stack levels required when called:    5
  9167 ;; This function calls:
  9168 ;;		_strchr
  9169 ;;		_strlen
  9170 ;;		_strncmp
  9171 ;; This function is called by:
  9172 ;;		_main
  9173 ;;		_green
  9174 ;; This function uses a non-reentrant model
  9175 ;;
  9176                           
  9177                           
  9178                           ;psect for function _strstr
  9179  0A12                     _strstr:	
  9180                           
  9181                           ;incstack = 0
  9182                           ; Regs used in _strstr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9183                           ;strstr@s1 stored from wreg
  9184  0A12  0020               	movlb	0	; select bank0
  9185  0A13  00C1               	movwf	strstr@s1
  9186  0A14  2A44               	goto	l3404
  9187  0A15                     l3396:	
  9188  0A15  083D               	movf	strstr@s2+1,w
  9189  0A16  00B6               	movwf	strncmp@s2+1
  9190  0A17  083C               	movf	strstr@s2,w
  9191  0A18  00B5               	movwf	strncmp@s2
  9192  0A19  083D               	movf	strstr@s2+1,w
  9193  0A1A  00B0               	movwf	strlen@s+1
  9194  0A1B  083C               	movf	strstr@s2,w
  9195  0A1C  00AF               	movwf	strlen@s
  9196  0A1D  3197  2752  318A   	fcall	_strlen
  9197  0A20  0020               	movlb	0	; select bank0
  9198  0A21  0830               	movf	?_strlen+1,w
  9199  0A22  00B8               	movwf	strncmp@len+1
  9200  0A23  082F               	movf	?_strlen,w
  9201  0A24  00B7               	movwf	strncmp@len
  9202  0A25  0841               	movf	strstr@s1,w
  9203  0A26  318A  2250  318A   	fcall	_strncmp
  9204  0A29  0020               	movlb	0	; select bank0
  9205  0A2A  0835               	movf	?_strncmp,w
  9206  0A2B  0436               	iorwf	?_strncmp+1,w
  9207  0A2C  1D03               	btfss	3,2
  9208  0A2D  2A30               	goto	l3402
  9209  0A2E  0841               	movf	strstr@s1,w
  9210  0A2F  0008               	return
  9211  0A30                     l3402:	
  9212  0A30  083C               	movf	strstr@s2,w
  9213  0A31  0084               	movwf	4
  9214  0A32  083D               	movf	strstr@s2+1,w
  9215  0A33  0085               	movwf	5
  9216  0A34  0800               	movf	0,w	;code access
  9217  0A35  00BE               	movwf	??_strstr
  9218  0A36  01BF               	clrf	??_strstr+1
  9219  0A37  083E               	movf	??_strstr,w
  9220  0A38  00AF               	movwf	strchr@chr
  9221  0A39  083F               	movf	??_strstr+1,w
  9222  0A3A  00B0               	movwf	strchr@chr+1
  9223  0A3B  0841               	movf	strstr@s1,w
  9224  0A3C  3E01               	addlw	1
  9225  0A3D  3196  2669  318A   	fcall	_strchr
  9226  0A40  0020               	movlb	0	; select bank0
  9227  0A41  00C0               	movwf	??_strstr+2
  9228  0A42  0840               	movf	??_strstr+2,w
  9229  0A43  00C1               	movwf	strstr@s1
  9230  0A44                     l3404:	
  9231  0A44  0841               	movf	strstr@s1,w
  9232  0A45  1903               	btfsc	3,2
  9233  0A46  2A4E               	goto	l3408
  9234  0A47  0841               	movf	strstr@s1,w
  9235  0A48  0086               	movwf	6
  9236  0A49  3002               	movlw	2	; select bank4/5
  9237  0A4A  0087               	movwf	7
  9238  0A4B  0801               	movf	1,w
  9239  0A4C  1D03               	btfss	3,2
  9240  0A4D  2A15               	goto	l3396
  9241  0A4E                     l3408:	
  9242  0A4E  3000               	movlw	0
  9243  0A4F  0008               	return
  9244  0A50                     __end_of_strstr:	
  9245                           
  9246                           	psect	text34
  9247  0A50                     __ptext34:	
  9248 ;; *************** function _strncmp *****************
  9249 ;; Defined at:
  9250 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\strncmp.c"
  9251 ;; Parameters:    Size  Location     Type
  9252 ;;  s1              1    wreg     PTR const unsigned char 
  9253 ;;		 -> NULL(0), buf(50), 
  9254 ;;  s2              2   21[BANK0 ] PTR const unsigned char 
  9255 ;;		 -> STR_29(5), STR_18(4), STR_17(6), STR_16(5), 
  9256 ;;		 -> STR_15(5), STR_14(5), 
  9257 ;;  len             2   23[BANK0 ] unsigned int 
  9258 ;; Auto vars:     Size  Location     Type
  9259 ;;  s1              1   27[BANK0 ] PTR const unsigned char 
  9260 ;;		 -> NULL(0), buf(50), 
  9261 ;; Return value:  Size  Location     Type
  9262 ;;                  2   21[BANK0 ] int 
  9263 ;; Registers used:
  9264 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  9265 ;; Tracked objects:
  9266 ;;		On entry : 0/0
  9267 ;;		On exit  : 0/0
  9268 ;;		Unchanged: 0/0
  9269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9270 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9271 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9272 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9273 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9274 ;;Total ram usage:        7 bytes
  9275 ;; Hardware stack levels used:    1
  9276 ;; Hardware stack levels required when called:    4
  9277 ;; This function calls:
  9278 ;;		Nothing
  9279 ;; This function is called by:
  9280 ;;		_strstr
  9281 ;; This function uses a non-reentrant model
  9282 ;;
  9283                           
  9284                           
  9285                           ;psect for function _strncmp
  9286  0A50                     _strncmp:	
  9287                           
  9288                           ;incstack = 0
  9289                           ; Regs used in _strncmp: [wreg-fsr1h+status,2+status,0+pclath]
  9290                           ;strncmp@s1 stored from wreg
  9291  0A50  0020               	movlb	0	; select bank0
  9292  0A51  00BB               	movwf	strncmp@s1
  9293  0A52                     l3366:	
  9294  0A52  3001               	movlw	1
  9295  0A53  02B7               	subwf	strncmp@len,f
  9296  0A54  3000               	movlw	0
  9297  0A55  3BB8               	subwfb	strncmp@len+1,f
  9298  0A56  0A37               	incf	strncmp@len,w
  9299  0A57  1903               	btfsc	3,2
  9300  0A58  0A38               	incf	strncmp@len+1,w
  9301  0A59  1903               	btfsc	3,2
  9302  0A5A  2A91               	goto	l3368
  9303  0A5B  083B               	movf	strncmp@s1,w
  9304  0A5C  0086               	movwf	6
  9305  0A5D  3002               	movlw	2	; select bank4/5
  9306  0A5E  0087               	movwf	7
  9307  0A5F  0801               	movf	1,w
  9308  0A60  1903               	btfsc	3,2
  9309  0A61  2A70               	goto	l3358
  9310  0A62  0835               	movf	strncmp@s2,w
  9311  0A63  0084               	movwf	4
  9312  0A64  0836               	movf	strncmp@s2+1,w
  9313  0A65  0085               	movwf	5
  9314  0A66  0800               	movf	0,w	;code access
  9315  0A67  00B9               	movwf	??_strncmp
  9316  0A68  083B               	movf	strncmp@s1,w
  9317  0A69  0086               	movwf	6
  9318  0A6A  3002               	movlw	2	; select bank4/5
  9319  0A6B  0087               	movwf	7
  9320  0A6C  0801               	movf	1,w
  9321  0A6D  0639               	xorwf	??_strncmp,w
  9322  0A6E  1903               	skipnz
  9323  0A6F  2A88               	goto	l3362
  9324  0A70                     l3358:	
  9325  0A70  0835               	movf	strncmp@s2,w
  9326  0A71  0084               	movwf	4
  9327  0A72  0836               	movf	strncmp@s2+1,w
  9328  0A73  0085               	movwf	5
  9329  0A74  0800               	movf	0,w	;code access
  9330  0A75  00B9               	movwf	??_strncmp
  9331  0A76  01BA               	clrf	??_strncmp+1
  9332  0A77  09B9               	comf	??_strncmp,f
  9333  0A78  09BA               	comf	??_strncmp+1,f
  9334  0A79  0AB9               	incf	??_strncmp,f
  9335  0A7A  1903               	skipnz
  9336  0A7B  0ABA               	incf	??_strncmp+1,f
  9337  0A7C  083B               	movf	strncmp@s1,w
  9338  0A7D  0086               	movwf	6
  9339  0A7E  3002               	movlw	2	; select bank4/5
  9340  0A7F  0087               	movwf	7
  9341  0A80  0801               	movf	1,w
  9342  0A81  0739               	addwf	??_strncmp,w
  9343  0A82  00B5               	movwf	?_strncmp
  9344  0A83  083A               	movf	??_strncmp+1,w
  9345  0A84  1803               	skipnc
  9346  0A85  0A3A               	incf	??_strncmp+1,w
  9347  0A86  00B6               	movwf	?_strncmp+1
  9348  0A87  0008               	return
  9349  0A88                     l3362:	
  9350  0A88  3001               	movlw	1
  9351  0A89  00B9               	movwf	??_strncmp
  9352  0A8A  0839               	movf	??_strncmp,w
  9353  0A8B  07BB               	addwf	strncmp@s1,f
  9354  0A8C  3001               	movlw	1
  9355  0A8D  07B5               	addwf	strncmp@s2,f
  9356  0A8E  3000               	movlw	0
  9357  0A8F  3DB6               	addwfc	strncmp@s2+1,f
  9358  0A90  2A52               	goto	l3366
  9359  0A91                     l3368:	
  9360  0A91  01B5               	clrf	?_strncmp
  9361  0A92  01B6               	clrf	?_strncmp+1
  9362  0A93  0008               	return
  9363  0A94                     __end_of_strncmp:	
  9364                           
  9365                           	psect	text35
  9366  1752                     __ptext35:	
  9367 ;; *************** function _strlen *****************
  9368 ;; Defined at:
  9369 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\strlen.c"
  9370 ;; Parameters:    Size  Location     Type
  9371 ;;  s               2   15[BANK0 ] PTR const unsigned char 
  9372 ;;		 -> STR_29(5), STR_18(4), STR_17(6), STR_16(5), 
  9373 ;;		 -> STR_15(5), STR_14(5), 
  9374 ;; Auto vars:     Size  Location     Type
  9375 ;;  cp              2   19[BANK0 ] PTR const unsigned char 
  9376 ;;		 -> STR_29(5), STR_18(4), STR_17(6), STR_16(5), 
  9377 ;;		 -> STR_15(5), STR_14(5), 
  9378 ;; Return value:  Size  Location     Type
  9379 ;;                  2   15[BANK0 ] unsigned int 
  9380 ;; Registers used:
  9381 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9382 ;; Tracked objects:
  9383 ;;		On entry : 0/0
  9384 ;;		On exit  : 0/0
  9385 ;;		Unchanged: 0/0
  9386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9387 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9388 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9389 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9390 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9391 ;;Total ram usage:        6 bytes
  9392 ;; Hardware stack levels used:    1
  9393 ;; Hardware stack levels required when called:    4
  9394 ;; This function calls:
  9395 ;;		Nothing
  9396 ;; This function is called by:
  9397 ;;		_strstr
  9398 ;; This function uses a non-reentrant model
  9399 ;;
  9400                           
  9401                           
  9402                           ;psect for function _strlen
  9403  1752                     _strlen:	
  9404                           
  9405                           ;incstack = 0
  9406                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  9407  1752  0020               	movlb	0	; select bank0
  9408  1753  0830               	movf	strlen@s+1,w
  9409  1754  00B4               	movwf	strlen@cp+1
  9410  1755  082F               	movf	strlen@s,w
  9411  1756  00B3               	movwf	strlen@cp
  9412  1757                     l3346:	
  9413  1757  0833               	movf	strlen@cp,w
  9414  1758  0084               	movwf	4
  9415  1759  0834               	movf	strlen@cp+1,w
  9416  175A  0085               	movwf	5
  9417  175B  0012               	moviw fsr0++
  9418  175C  1903               	btfsc	3,2
  9419  175D  2F63               	goto	l3348
  9420  175E  3001               	movlw	1
  9421  175F  07B3               	addwf	strlen@cp,f
  9422  1760  3000               	movlw	0
  9423  1761  3DB4               	addwfc	strlen@cp+1,f
  9424  1762  2F57               	goto	l3346
  9425  1763                     l3348:	
  9426  1763  092F               	comf	strlen@s,w
  9427  1764  00B1               	movwf	??_strlen
  9428  1765  0930               	comf	strlen@s+1,w
  9429  1766  00B2               	movwf	??_strlen+1
  9430  1767  0AB1               	incf	??_strlen,f
  9431  1768  1903               	skipnz
  9432  1769  0AB2               	incf	??_strlen+1,f
  9433  176A  0833               	movf	strlen@cp,w
  9434  176B  0731               	addwf	??_strlen,w
  9435  176C  00AF               	movwf	?_strlen
  9436  176D  0834               	movf	strlen@cp+1,w
  9437  176E  3D32               	addwfc	??_strlen+1,w
  9438  176F  00B0               	movwf	?_strlen+1
  9439  1770  0008               	return
  9440  1771                     __end_of_strlen:	
  9441                           
  9442                           	psect	text36
  9443  1669                     __ptext36:	
  9444 ;; *************** function _strchr *****************
  9445 ;; Defined at:
  9446 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\strchr.c"
  9447 ;; Parameters:    Size  Location     Type
  9448 ;;  ptr             1    wreg     PTR const unsigned char 
  9449 ;;		 -> NULL(0), buf(50), 
  9450 ;;  chr             2   15[BANK0 ] int 
  9451 ;; Auto vars:     Size  Location     Type
  9452 ;;  ptr             1   17[BANK0 ] PTR const unsigned char 
  9453 ;;		 -> NULL(0), buf(50), 
  9454 ;; Return value:  Size  Location     Type
  9455 ;;                  1    wreg      PTR unsigned char 
  9456 ;; Registers used:
  9457 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9458 ;; Tracked objects:
  9459 ;;		On entry : 0/0
  9460 ;;		On exit  : 0/0
  9461 ;;		Unchanged: 0/0
  9462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9463 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9464 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9466 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9467 ;;Total ram usage:        3 bytes
  9468 ;; Hardware stack levels used:    1
  9469 ;; Hardware stack levels required when called:    4
  9470 ;; This function calls:
  9471 ;;		Nothing
  9472 ;; This function is called by:
  9473 ;;		_strstr
  9474 ;; This function uses a non-reentrant model
  9475 ;;
  9476                           
  9477                           
  9478                           ;psect for function _strchr
  9479  1669                     _strchr:	
  9480                           
  9481                           ;incstack = 0
  9482                           ; Regs used in _strchr: [wreg+fsr1l+fsr1h+status,2+status,0]
  9483                           ;strchr@ptr stored from wreg
  9484  1669  0020               	movlb	0	; select bank0
  9485  166A  00B1               	movwf	strchr@ptr
  9486  166B                     l938:	
  9487  166B  0831               	movf	strchr@ptr,w
  9488  166C  0086               	movwf	6
  9489  166D  3002               	movlw	2	; select bank4/5
  9490  166E  0087               	movwf	7
  9491  166F  0801               	movf	1,w
  9492  1670  062F               	xorwf	strchr@chr,w
  9493  1671  1D03               	skipz
  9494  1672  2E75               	goto	l3378
  9495  1673  0831               	movf	strchr@ptr,w
  9496  1674  0008               	return
  9497  1675                     l3378:	
  9498  1675  0831               	movf	strchr@ptr,w
  9499  1676  0086               	movwf	6
  9500  1677  3002               	movlw	2	; select bank4/5
  9501  1678  0087               	movwf	7
  9502  1679  0AB1               	incf	strchr@ptr,f
  9503  167A  0801               	movf	1,w
  9504  167B  1D03               	btfss	3,2
  9505  167C  2E6B               	goto	l938
  9506  167D  3000               	movlw	0
  9507  167E  0008               	return
  9508  167F                     __end_of_strchr:	
  9509                           
  9510                           	psect	text37
  9511  1733                     __ptext37:	
  9512 ;; *************** function _EUSART_Read_Text *****************
  9513 ;; Defined at:
  9514 ;;		line 107 in file "EUSART.c"
  9515 ;; Parameters:    Size  Location     Type
  9516 ;;  Output          1    wreg     PTR unsigned char 
  9517 ;;		 -> buf(50), 
  9518 ;;  length          2   15[BANK0 ] unsigned int 
  9519 ;; Auto vars:     Size  Location     Type
  9520 ;;  Output          1   19[BANK0 ] PTR unsigned char 
  9521 ;;		 -> buf(50), 
  9522 ;;  i               2   20[BANK0 ] int 
  9523 ;;  i               2    0        int 
  9524 ;; Return value:  Size  Location     Type
  9525 ;;                  1    wreg      void 
  9526 ;; Registers used:
  9527 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9528 ;; Tracked objects:
  9529 ;;		On entry : 0/0
  9530 ;;		On exit  : 0/0
  9531 ;;		Unchanged: 0/0
  9532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9533 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9534 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9535 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9536 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9537 ;;Total ram usage:        7 bytes
  9538 ;; Hardware stack levels used:    1
  9539 ;; Hardware stack levels required when called:    5
  9540 ;; This function calls:
  9541 ;;		_EUSART_Read
  9542 ;; This function is called by:
  9543 ;;		_main
  9544 ;; This function uses a non-reentrant model
  9545 ;;
  9546                           
  9547                           
  9548                           ;psect for function _EUSART_Read_Text
  9549  1733                     _EUSART_Read_Text:	
  9550                           
  9551                           ;incstack = 0
  9552                           ; Regs used in _EUSART_Read_Text: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9553                           ;EUSART_Read_Text@Output stored from wreg
  9554  1733  0020               	movlb	0	; select bank0
  9555  1734  00B3               	movwf	EUSART_Read_Text@Output
  9556                           
  9557                           ;EUSART.c: 109: int i;
  9558                           ;EUSART.c: 110: for(int i=0;i<length;i++)
  9559  1735  01B4               	clrf	EUSART_Read_Text@i_522
  9560  1736  01B5               	clrf	EUSART_Read_Text@i_522+1
  9561  1737                     l3676:	
  9562  1737  0830               	movf	EUSART_Read_Text@length+1,w
  9563  1738  0235               	subwf	EUSART_Read_Text@i_522+1,w
  9564  1739  1D03               	skipz
  9565  173A  2F3D               	goto	u3545
  9566  173B  082F               	movf	EUSART_Read_Text@length,w
  9567  173C  0234               	subwf	EUSART_Read_Text@i_522,w
  9568  173D                     u3545:	
  9569  173D  1803               	btfsc	3,0
  9570  173E  0008               	return
  9571                           
  9572                           ;EUSART.c: 111: Output[i] = EUSART_Read();
  9573  173F  3187  27F0  3197   	fcall	_EUSART_Read
  9574  1742  0020               	movlb	0	; select bank0
  9575  1743  00B1               	movwf	??_EUSART_Read_Text
  9576  1744  0834               	movf	EUSART_Read_Text@i_522,w
  9577  1745  0733               	addwf	EUSART_Read_Text@Output,w
  9578  1746  00B2               	movwf	??_EUSART_Read_Text+1
  9579  1747  0832               	movf	??_EUSART_Read_Text+1,w
  9580  1748  0086               	movwf	6
  9581  1749  3002               	movlw	2	; select bank4/5
  9582  174A  0087               	movwf	7
  9583  174B  0831               	movf	??_EUSART_Read_Text,w
  9584  174C  0081               	movwf	1
  9585  174D  3001               	movlw	1
  9586  174E  07B4               	addwf	EUSART_Read_Text@i_522,f
  9587  174F  3000               	movlw	0
  9588  1750  3DB5               	addwfc	EUSART_Read_Text@i_522+1,f
  9589  1751  2F37               	goto	l3676
  9590  1752                     __end_of_EUSART_Read_Text:	
  9591                           
  9592                           	psect	text38
  9593  07F0                     __ptext38:	
  9594 ;; *************** function _EUSART_Read *****************
  9595 ;; Defined at:
  9596 ;;		line 68 in file "EUSART.c"
  9597 ;; Parameters:    Size  Location     Type
  9598 ;;		None
  9599 ;; Auto vars:     Size  Location     Type
  9600 ;;		None
  9601 ;; Return value:  Size  Location     Type
  9602 ;;                  1    wreg      unsigned char 
  9603 ;; Registers used:
  9604 ;;		wreg
  9605 ;; Tracked objects:
  9606 ;;		On entry : 0/0
  9607 ;;		On exit  : 0/0
  9608 ;;		Unchanged: 0/0
  9609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9614 ;;Total ram usage:        0 bytes
  9615 ;; Hardware stack levels used:    1
  9616 ;; Hardware stack levels required when called:    4
  9617 ;; This function calls:
  9618 ;;		Nothing
  9619 ;; This function is called by:
  9620 ;;		_EUSART_Read_Text
  9621 ;; This function uses a non-reentrant model
  9622 ;;
  9623                           
  9624                           
  9625                           ;psect for function _EUSART_Read
  9626  07F0                     _EUSART_Read:	
  9627                           
  9628                           ;EUSART.c: 71: RC1STAbits.SREN = 1;
  9629                           
  9630                           ;incstack = 0
  9631                           ; Regs used in _EUSART_Read: [wreg]
  9632  07F0  0023               	movlb	3	; select bank3
  9633  07F1  169D               	bsf	29,5	;volatile
  9634  07F2                     l373:	
  9635                           ;EUSART.c: 73: {
  9636                           
  9637                           ;EUSART.c: 72: while(!PIR1bits.RCIF)
  9638                           
  9639  07F2  0020               	movlb	0	; select bank0
  9640  07F3  1E91               	btfss	17,5	;volatile
  9641  07F4  2FF2               	goto	l373
  9642                           
  9643                           ;EUSART.c: 74: }
  9644                           ;EUSART.c: 77: if(1 == RC1STAbits.OERR)
  9645  07F5  0023               	movlb	3	; select bank3
  9646  07F6  1C9D               	btfss	29,1	;volatile
  9647  07F7  2FFA               	goto	l3514
  9648                           
  9649                           ;EUSART.c: 78: {
  9650                           ;EUSART.c: 81: RC1STAbits.SPEN = 0;
  9651  07F8  139D               	bcf	29,7	;volatile
  9652                           
  9653                           ;EUSART.c: 82: RC1STAbits.SPEN = 1;
  9654  07F9  179D               	bsf	29,7	;volatile
  9655  07FA                     l3514:	
  9656                           
  9657                           ;EUSART.c: 83: }
  9658                           ;EUSART.c: 85: return RC1REG;
  9659  07FA  0819               	movf	25,w	;volatile
  9660  07FB  0008               	return
  9661  07FC                     __end_of_EUSART_Read:	
  9662                           
  9663                           	psect	intentry
  9664  0004                     __pintentry:	
  9665 ;; *************** function _isr *****************
  9666 ;; Defined at:
  9667 ;;		line 316 in file "Main.c"
  9668 ;; Parameters:    Size  Location     Type
  9669 ;;		None
  9670 ;; Auto vars:     Size  Location     Type
  9671 ;;		None
  9672 ;; Return value:  Size  Location     Type
  9673 ;;                  1    wreg      void 
  9674 ;; Registers used:
  9675 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9676 ;; Tracked objects:
  9677 ;;		On entry : 0/0
  9678 ;;		On exit  : 0/0
  9679 ;;		Unchanged: 0/0
  9680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9683 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9684 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9685 ;;Total ram usage:        3 bytes
  9686 ;; Hardware stack levels used:    1
  9687 ;; Hardware stack levels required when called:    3
  9688 ;; This function calls:
  9689 ;;		_DS1302_ReadByte
  9690 ;;		_get_dec
  9691 ;;		i1_DS1302_Reset
  9692 ;;		i1_DS1302_WriteByte
  9693 ;;		i1_itoa
  9694 ;;		i1_strcat
  9695 ;;		i1_strcpy
  9696 ;;		i1_touchscreen_data
  9697 ;; This function is called by:
  9698 ;;		Interrupt level 1
  9699 ;; This function uses a non-reentrant model
  9700 ;;
  9701                           
  9702  0004                     _isr:	
  9703                           
  9704                           ;incstack = 0
  9705  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  9706                           
  9707                           ; Regs used in _isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9708  0005  3180               	pagesel	$
  9709  0006  0020               	movlb	0	; select bank0
  9710  0007  087F               	movf	127,w
  9711  0008  00AE               	movwf	??_isr+2
  9712                           
  9713                           ;Main.c: 319: static int count = 0;
  9714                           ;Main.c: 322: INTCONbits.TMR0IF = 0;
  9715  0009  110B               	bcf	11,2	;volatile
  9716                           
  9717                           ;Main.c: 325: TMR0 = 0;
  9718  000A  0195               	clrf	21	;volatile
  9719                           
  9720                           ;Main.c: 328: count++;
  9721  000B  3001               	movlw	1
  9722  000C  0021               	movlb	1	; select bank1
  9723  000D  07A0               	addwf	isr@count^(0+128),f
  9724  000E  3000               	movlw	0
  9725  000F  3DA1               	addwfc	(isr@count+1)^(0+128),f
  9726                           
  9727                           ;Main.c: 336: if (count == 305){
  9728  0010  3031               	movlw	49
  9729  0011  0620               	xorwf	isr@count^(0+128),w
  9730  0012  1D03               	skipz
  9731  0013  2985               	goto	i1l255
  9732  0014  0321               	decf	(isr@count+1)^(0+128),w
  9733  0015  1D03               	btfss	3,2
  9734  0016  2985               	goto	i1l255
  9735                           
  9736                           ;Main.c: 342: DS1302_Reset();
  9737  0017  3195  25C5  3180   	fcall	i1_DS1302_Reset
  9738                           
  9739                           ;Main.c: 343: DS1302_WriteByte(0xBF);
  9740  001A  30BF               	movlw	191
  9741  001B  3196  2630  3180   	fcall	i1_DS1302_WriteByte
  9742                           
  9743                           ;Main.c: 345: sec1 = DS1302_ReadByte();
  9744  001E  3197  27B6  3180   	fcall	_DS1302_ReadByte
  9745  0021  0020               	movlb	0	; select bank0
  9746  0022  00AC               	movwf	??_isr
  9747  0023  082C               	movf	??_isr,w
  9748  0024  00DD               	movwf	_sec1
  9749                           
  9750                           ;Main.c: 346: min1 = DS1302_ReadByte();
  9751  0025  3197  27B6  3180   	fcall	_DS1302_ReadByte
  9752  0028  0020               	movlb	0	; select bank0
  9753  0029  00AC               	movwf	??_isr
  9754  002A  082C               	movf	??_isr,w
  9755  002B  00D8               	movwf	_min1
  9756                           
  9757                           ;Main.c: 347: hr1 = DS1302_ReadByte();
  9758  002C  3197  27B6  3180   	fcall	_DS1302_ReadByte
  9759  002F  0020               	movlb	0	; select bank0
  9760  0030  00AC               	movwf	??_isr
  9761  0031  082C               	movf	??_isr,w
  9762  0032  00D5               	movwf	_hr1
  9763                           
  9764                           ;Main.c: 348: date1 = DS1302_ReadByte();
  9765  0033  3197  27B6  3180   	fcall	_DS1302_ReadByte
  9766  0036  0020               	movlb	0	; select bank0
  9767  0037  00AC               	movwf	??_isr
  9768  0038  082C               	movf	??_isr,w
  9769  0039  00D1               	movwf	_date1
  9770                           
  9771                           ;Main.c: 349: mn1 = DS1302_ReadByte();
  9772  003A  3197  27B6  3180   	fcall	_DS1302_ReadByte
  9773  003D  0020               	movlb	0	; select bank0
  9774  003E  00AC               	movwf	??_isr
  9775  003F  082C               	movf	??_isr,w
  9776  0040  00DA               	movwf	_mn1
  9777                           
  9778                           ;Main.c: 350: dy1 = DS1302_ReadByte();
  9779  0041  3197  27B6  3180   	fcall	_DS1302_ReadByte
  9780  0044  0020               	movlb	0	; select bank0
  9781  0045  00AC               	movwf	??_isr
  9782  0046  082C               	movf	??_isr,w
  9783  0047  00D3               	movwf	_dy1
  9784                           
  9785                           ;Main.c: 351: yr1 = DS1302_ReadByte();
  9786  0048  3197  27B6  3180   	fcall	_DS1302_ReadByte
  9787  004B  0020               	movlb	0	; select bank0
  9788  004C  00AC               	movwf	??_isr
  9789  004D  082C               	movf	??_isr,w
  9790  004E  00DF               	movwf	_yr1
  9791                           
  9792                           ;Main.c: 353: DS1302_Reset();
  9793  004F  3195  25C5  3180   	fcall	i1_DS1302_Reset
  9794                           
  9795                           ;Main.c: 361: yr2 = get_dec(yr1);
  9796  0052  0020               	movlb	0	; select bank0
  9797  0053  085F               	movf	_yr1,w
  9798  0054  3196  2696  3180   	fcall	_get_dec
  9799  0057  0020               	movlb	0	; select bank0
  9800  0058  00AC               	movwf	??_isr
  9801  0059  082C               	movf	??_isr,w
  9802  005A  00E0               	movwf	_yr2
  9803                           
  9804                           ;Main.c: 364: mn2 = get_dec(mn1);
  9805  005B  085A               	movf	_mn1,w
  9806  005C  3196  2696  3180   	fcall	_get_dec
  9807  005F  0020               	movlb	0	; select bank0
  9808  0060  00AC               	movwf	??_isr
  9809  0061  082C               	movf	??_isr,w
  9810  0062  00DB               	movwf	_mn2
  9811                           
  9812                           ;Main.c: 367: date2 = get_dec(date1);
  9813  0063  0851               	movf	_date1,w
  9814  0064  3196  2696  3180   	fcall	_get_dec
  9815  0067  0020               	movlb	0	; select bank0
  9816  0068  00AC               	movwf	??_isr
  9817  0069  082C               	movf	??_isr,w
  9818  006A  00D2               	movwf	_date2
  9819                           
  9820                           ;Main.c: 370: hr2 = get_dec(hr1);
  9821  006B  0855               	movf	_hr1,w
  9822  006C  3196  2696  3180   	fcall	_get_dec
  9823  006F  0020               	movlb	0	; select bank0
  9824  0070  00AC               	movwf	??_isr
  9825  0071  082C               	movf	??_isr,w
  9826  0072  00D6               	movwf	_hr2
  9827                           
  9828                           ;Main.c: 373: min2 = get_dec(min1);
  9829  0073  0858               	movf	_min1,w
  9830  0074  3196  2696  3180   	fcall	_get_dec
  9831  0077  0020               	movlb	0	; select bank0
  9832  0078  00AC               	movwf	??_isr
  9833  0079  082C               	movf	??_isr,w
  9834  007A  00D9               	movwf	_min2
  9835                           
  9836                           ;Main.c: 376: sec2 = get_dec(sec1);
  9837  007B  085D               	movf	_sec1,w
  9838  007C  3196  2696  3180   	fcall	_get_dec
  9839  007F  0020               	movlb	0	; select bank0
  9840  0080  00AC               	movwf	??_isr
  9841  0081  082C               	movf	??_isr,w
  9842  0082  00DE               	movwf	_sec2
  9843                           
  9844                           ;Main.c: 383: if (hr2 <= 12 && hr2 > 0){
  9845  0083  300D               	movlw	13
  9846  0084  0256               	subwf	_hr2,w
  9847  0085  1803               	skipnc
  9848  0086  288C               	goto	i1l3908
  9849  0087  0856               	movf	_hr2,w
  9850  0088  1903               	btfsc	3,2
  9851  0089  288C               	goto	i1l3908
  9852                           
  9853                           ;Main.c: 384: hr3 = hr2;
  9854  008A  0856               	movf	_hr2,w
  9855  008B  2898               	goto	L4
  9856  008C                     i1l3908:	
  9857                           ;Main.c: 385: }
  9858                           
  9859                           
  9860                           ;Main.c: 387: else if (hr2 >= 13 && hr2 < 24)
  9861  008C  300D               	movlw	13
  9862  008D  0256               	subwf	_hr2,w
  9863  008E  1C03               	skipc
  9864  008F  2897               	goto	i1l3914
  9865  0090  3018               	movlw	24
  9866  0091  0256               	subwf	_hr2,w
  9867  0092  1803               	skipnc
  9868  0093  2897               	goto	i1l3914
  9869                           
  9870                           ;Main.c: 388: {
  9871                           ;Main.c: 389: hr3 = (hr2-12);
  9872  0094  0856               	movf	_hr2,w
  9873  0095  3EF4               	addlw	244
  9874  0096  2898               	goto	L4
  9875  0097                     i1l3914:	
  9876                           ;Main.c: 390: }
  9877                           
  9878                           
  9879                           ;Main.c: 392: else {
  9880                           ;Main.c: 393: hr3 = 12;
  9881  0097  300C               	movlw	12
  9882  0098                     L4:	
  9883  0098  00AC               	movwf	??_isr
  9884  0099  082C               	movf	??_isr,w
  9885  009A  00D7               	movwf	_hr3
  9886                           
  9887                           ;Main.c: 394: }
  9888                           ;Main.c: 401: itoa( min_arr, min2, 10 );
  9889  009B  30CB               	movlw	low _min_arr
  9890  009C  00A4               	movwf	i1itoa@buf
  9891  009D  3000               	movlw	high _min_arr
  9892  009E  00A5               	movwf	i1itoa@buf+1
  9893  009F  0859               	movf	_min2,w
  9894  00A0  00AC               	movwf	??_isr
  9895  00A1  01AD               	clrf	??_isr+1
  9896  00A2  082C               	movf	??_isr,w
  9897  00A3  00A6               	movwf	i1itoa@val
  9898  00A4  082D               	movf	??_isr+1,w
  9899  00A5  00A7               	movwf	i1itoa@val+1
  9900  00A6  300A               	movlw	10
  9901  00A7  00A8               	movwf	i1itoa@base
  9902  00A8  3000               	movlw	0
  9903  00A9  00A9               	movwf	i1itoa@base+1
  9904  00AA  3197  27DB  3180   	fcall	i1_itoa
  9905                           
  9906                           ;Main.c: 402: itoa( hr_arr, hr3, 10 );
  9907  00AD  3066               	movlw	low _hr_arr
  9908  00AE  0020               	movlb	0	; select bank0
  9909  00AF  00A4               	movwf	i1itoa@buf
  9910  00B0  3001               	movlw	high _hr_arr
  9911  00B1  00A5               	movwf	i1itoa@buf+1
  9912  00B2  0857               	movf	_hr3,w
  9913  00B3  00AC               	movwf	??_isr
  9914  00B4  01AD               	clrf	??_isr+1
  9915  00B5  082C               	movf	??_isr,w
  9916  00B6  00A6               	movwf	i1itoa@val
  9917  00B7  082D               	movf	??_isr+1,w
  9918  00B8  00A7               	movwf	i1itoa@val+1
  9919  00B9  300A               	movlw	10
  9920  00BA  00A8               	movwf	i1itoa@base
  9921  00BB  3000               	movlw	0
  9922  00BC  00A9               	movwf	i1itoa@base+1
  9923  00BD  3197  27DB  3180   	fcall	i1_itoa
  9924                           
  9925                           ;Main.c: 403: itoa( dt_arr, date2, 10);
  9926  00C0  30D3               	movlw	low _dt_arr
  9927  00C1  0020               	movlb	0	; select bank0
  9928  00C2  00A4               	movwf	i1itoa@buf
  9929  00C3  3000               	movlw	high _dt_arr
  9930  00C4  00A5               	movwf	i1itoa@buf+1
  9931  00C5  0852               	movf	_date2,w
  9932  00C6  00AC               	movwf	??_isr
  9933  00C7  01AD               	clrf	??_isr+1
  9934  00C8  082C               	movf	??_isr,w
  9935  00C9  00A6               	movwf	i1itoa@val
  9936  00CA  082D               	movf	??_isr+1,w
  9937  00CB  00A7               	movwf	i1itoa@val+1
  9938  00CC  300A               	movlw	10
  9939  00CD  00A8               	movwf	i1itoa@base
  9940  00CE  3000               	movlw	0
  9941  00CF  00A9               	movwf	i1itoa@base+1
  9942  00D0  3197  27DB  3180   	fcall	i1_itoa
  9943                           
  9944                           ;Main.c: 409: strcpy(date_string, "\"");
  9945  00D3  30A3               	movlw	low _date_string
  9946  00D4  00F0               	movwf	i1strcpy@to
  9947  00D5  3000               	movlw	high _date_string
  9948  00D6  00F1               	movwf	i1strcpy@to+1
  9949  00D7  3041               	movlw	low ((STR_32+11)| (0+32768))
  9950  00D8  00F2               	movwf	i1strcpy@from
  9951  00D9  3085               	movlw	high ((STR_32+11)| (0+32768))
  9952  00DA  00F3               	movwf	i1strcpy@from+1
  9953  00DB  3196  26AE  3180   	fcall	i1_strcpy
  9954                           
  9955                           ;Main.c: 410: strcat(date_string, dt_arr);
  9956  00DE  30A3               	movlw	low _date_string
  9957  00DF  00F0               	movwf	i1strcat@to
  9958  00E0  3000               	movlw	high _date_string
  9959  00E1  00F1               	movwf	i1strcat@to+1
  9960  00E2  30D3               	movlw	low _dt_arr
  9961  00E3  00F2               	movwf	i1strcat@from
  9962  00E4  3000               	movlw	high _dt_arr
  9963  00E5  00F3               	movwf	i1strcat@from+1
  9964  00E6  3188  2027  3180   	fcall	i1_strcat
  9965                           
  9966                           ;Main.c: 411: strcat(date_string, "\"");
  9967  00E9  30A3               	movlw	low _date_string
  9968  00EA  00F0               	movwf	i1strcat@to
  9969  00EB  3000               	movlw	high _date_string
  9970  00EC  00F1               	movwf	i1strcat@to+1
  9971  00ED  3041               	movlw	low ((STR_32+11)| (0+32768))
  9972  00EE  00F2               	movwf	i1strcat@from
  9973  00EF  3085               	movlw	high ((STR_32+11)| (0+32768))
  9974  00F0  00F3               	movwf	i1strcat@from+1
  9975  00F1  3188  2027  3180   	fcall	i1_strcat
  9976                           
  9977                           ;Main.c: 416: strcpy(mth_string, "\"");
  9978  00F4  305C               	movlw	low _mth_string
  9979  00F5  00F0               	movwf	i1strcpy@to
  9980  00F6  3001               	movlw	high _mth_string
  9981  00F7  00F1               	movwf	i1strcpy@to+1
  9982  00F8  3041               	movlw	low ((STR_32+11)| (0+32768))
  9983  00F9  00F2               	movwf	i1strcpy@from
  9984  00FA  3085               	movlw	high ((STR_32+11)| (0+32768))
  9985  00FB  00F3               	movwf	i1strcpy@from+1
  9986  00FC  3196  26AE  3180   	fcall	i1_strcpy
  9987                           
  9988                           ;Main.c: 417: strcat(mth_string, months[mn2]);
  9989  00FF  305C               	movlw	low _mth_string
  9990  0100  00F0               	movwf	i1strcat@to
  9991  0101  3001               	movlw	high _mth_string
  9992  0102  00F1               	movwf	i1strcat@to+1
  9993  0103  0020               	movlb	0	; select bank0
  9994  0104  355B               	lslf	_mn2,w
  9995  0105  3EBB               	addlw	(low (_months| (0+256)))& (0+255)
  9996  0106  0086               	movwf	6
  9997  0107  3001               	movlw	1	; select bank3/4
  9998  0108  0087               	movwf	7
  9999  0109  3F40               	moviw [0]fsr1
 10000  010A  00F2               	movwf	i1strcat@from
 10001  010B  3F41               	moviw [1]fsr1
 10002  010C  00F3               	movwf	i1strcat@from+1
 10003  010D  3188  2027  3180   	fcall	i1_strcat
 10004                           
 10005                           ;Main.c: 418: strcat(mth_string, "\"");
 10006  0110  305C               	movlw	low _mth_string
 10007  0111  00F0               	movwf	i1strcat@to
 10008  0112  3001               	movlw	high _mth_string
 10009  0113  00F1               	movwf	i1strcat@to+1
 10010  0114  3041               	movlw	low ((STR_32+11)| (0+32768))
 10011  0115  00F2               	movwf	i1strcat@from
 10012  0116  3085               	movlw	high ((STR_32+11)| (0+32768))
 10013  0117  00F3               	movwf	i1strcat@from+1
 10014  0118  3188  2027  3180   	fcall	i1_strcat
 10015                           
 10016                           ;Main.c: 424: strcpy(time_string, "\"");
 10017  011B  30C1               	movlw	low _time_string
 10018  011C  00F0               	movwf	i1strcpy@to
 10019  011D  3000               	movlw	high _time_string
 10020  011E  00F1               	movwf	i1strcpy@to+1
 10021  011F  3041               	movlw	low ((STR_32+11)| (0+32768))
 10022  0120  00F2               	movwf	i1strcpy@from
 10023  0121  3085               	movlw	high ((STR_32+11)| (0+32768))
 10024  0122  00F3               	movwf	i1strcpy@from+1
 10025  0123  3196  26AE  3180   	fcall	i1_strcpy
 10026                           
 10027                           ;Main.c: 425: strcat(time_string, hr_arr);
 10028  0126  30C1               	movlw	low _time_string
 10029  0127  00F0               	movwf	i1strcat@to
 10030  0128  3000               	movlw	high _time_string
 10031  0129  00F1               	movwf	i1strcat@to+1
 10032  012A  3066               	movlw	low _hr_arr
 10033  012B  00F2               	movwf	i1strcat@from
 10034  012C  3001               	movlw	high _hr_arr
 10035  012D  00F3               	movwf	i1strcat@from+1
 10036  012E  3188  2027  3180   	fcall	i1_strcat
 10037                           
 10038                           ;Main.c: 426: strcat(time_string, ":");
 10039  0131  30C1               	movlw	low _time_string
 10040  0132  00F0               	movwf	i1strcat@to
 10041  0133  3000               	movlw	high _time_string
 10042  0134  00F1               	movwf	i1strcat@to+1
 10043  0135  30CD               	movlw	low (STR_39| (0+32768))
 10044  0136  00F2               	movwf	i1strcat@from
 10045  0137  3085               	movlw	high (STR_39| (0+32768))
 10046  0138  00F3               	movwf	i1strcat@from+1
 10047  0139  3188  2027  3180   	fcall	i1_strcat
 10048                           
 10049                           ;Main.c: 429: if (min2 < 10){
 10050  013C  300A               	movlw	10
 10051  013D  0020               	movlb	0	; select bank0
 10052  013E  0259               	subwf	_min2,w
 10053  013F  1803               	skipnc
 10054  0140  294C               	goto	i1l3944
 10055                           
 10056                           ;Main.c: 430: strcat(time_string, "0");
 10057  0141  30C1               	movlw	low _time_string
 10058  0142  00F0               	movwf	i1strcat@to
 10059  0143  3000               	movlw	high _time_string
 10060  0144  00F1               	movwf	i1strcat@to+1
 10061  0145  3067               	movlw	low ((STR_28+5)| (0+32768))
 10062  0146  00F2               	movwf	i1strcat@from
 10063  0147  3085               	movlw	high ((STR_28+5)| (0+32768))
 10064  0148  00F3               	movwf	i1strcat@from+1
 10065  0149  3188  2027  3180   	fcall	i1_strcat
 10066  014C                     i1l3944:	
 10067                           ;Main.c: 432: }
 10068                           
 10069                           ;Main.c: 431: strcat(time_string, min_arr);
 10070                           
 10071                           
 10072                           ;Main.c: 434: else
 10073                           ;Main.c: 435: {
 10074                           ;Main.c: 436: strcat(time_string, min_arr);
 10075  014C  30C1               	movlw	low _time_string
 10076  014D  00F0               	movwf	i1strcat@to
 10077  014E  3000               	movlw	high _time_string
 10078  014F  00F1               	movwf	i1strcat@to+1
 10079  0150  30CB               	movlw	low _min_arr
 10080  0151  00F2               	movwf	i1strcat@from
 10081  0152  3000               	movlw	high _min_arr
 10082  0153  00F3               	movwf	i1strcat@from+1
 10083  0154  3188  2027  3180   	fcall	i1_strcat
 10084                           
 10085                           ;Main.c: 437: }
 10086                           ;Main.c: 439: strcat(time_string, "\"");
 10087  0157  30C1               	movlw	low _time_string
 10088  0158  00F0               	movwf	i1strcat@to
 10089  0159  3000               	movlw	high _time_string
 10090  015A  00F1               	movwf	i1strcat@to+1
 10091  015B  3041               	movlw	low ((STR_32+11)| (0+32768))
 10092  015C  00F2               	movwf	i1strcat@from
 10093  015D  3085               	movlw	high ((STR_32+11)| (0+32768))
 10094  015E  00F3               	movwf	i1strcat@from+1
 10095  015F  3188  2027  3180   	fcall	i1_strcat
 10096                           
 10097                           ;Main.c: 442: touchscreen_data(screen_time, time_string);
 10098  0162  300C               	movlw	low (_screen_time| (0+32768))
 10099  0163  00F6               	movwf	i1touchscreen_data@cmd
 10100  0164  3085               	movlw	high (_screen_time| (0+32768))
 10101  0165  00F7               	movwf	i1touchscreen_data@cmd+1
 10102  0166  30C1               	movlw	low _time_string
 10103  0167  00F8               	movwf	i1touchscreen_data@string2
 10104  0168  3000               	movlw	high _time_string
 10105  0169  00F9               	movwf	i1touchscreen_data@string2+1
 10106  016A  3188  204D  3180   	fcall	i1_touchscreen_data
 10107                           
 10108                           ;Main.c: 445: touchscreen_data(screen_mth, mth_string);
 10109  016D  30F7               	movlw	low (_screen_mth| (0+32768))
 10110  016E  00F6               	movwf	i1touchscreen_data@cmd
 10111  016F  3084               	movlw	high (_screen_mth| (0+32768))
 10112  0170  00F7               	movwf	i1touchscreen_data@cmd+1
 10113  0171  305C               	movlw	low _mth_string
 10114  0172  00F8               	movwf	i1touchscreen_data@string2
 10115  0173  3001               	movlw	high _mth_string
 10116  0174  00F9               	movwf	i1touchscreen_data@string2+1
 10117  0175  3188  204D  3180   	fcall	i1_touchscreen_data
 10118                           
 10119                           ;Main.c: 448: touchscreen_data(screen_date, date_string);
 10120  0178  3002               	movlw	low (_screen_date| (0+32768))
 10121  0179  00F6               	movwf	i1touchscreen_data@cmd
 10122  017A  3085               	movlw	high (_screen_date| (0+32768))
 10123  017B  00F7               	movwf	i1touchscreen_data@cmd+1
 10124  017C  30A3               	movlw	low _date_string
 10125  017D  00F8               	movwf	i1touchscreen_data@string2
 10126  017E  3000               	movlw	high _date_string
 10127  017F  00F9               	movwf	i1touchscreen_data@string2+1
 10128  0180  3188  204D         	fcall	i1_touchscreen_data
 10129                           
 10130                           ;Main.c: 451: count = 0;
 10131  0182  0021               	movlb	1	; select bank1
 10132  0183  01A0               	clrf	isr@count^(0+128)
 10133  0184  01A1               	clrf	(isr@count+1)^(0+128)
 10134  0185                     i1l255:	
 10135                           ;Main.c: 455: else {
 10136                           
 10137                           ;Main.c: 452: }
 10138                           
 10139  0185  0020               	movlb	0	; select bank0
 10140  0186  082E               	movf	??_isr+2,w
 10141  0187  00FF               	movwf	127
 10142  0188  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 10143  0189  0009               	retfie
 10144  018A                     __end_of_isr:	
 10145                           
 10146                           	psect	text40
 10147  084D                     __ptext40:	
 10148 ;; *************** function i1_touchscreen_data *****************
 10149 ;; Defined at:
 10150 ;;		line 31 in file "touchscreen.c"
 10151 ;; Parameters:    Size  Location     Type
 10152 ;;  cmd             2    6[COMMON] PTR unsigned char 
 10153 ;;		 -> screen_date(10), screen_mth(11), screen_time(10), screen_month(8), 
 10154 ;;		 -> screen_date1(8), screen_hour(8), screen_mins(8), 
 10155 ;;  string2         2    8[COMMON] PTR unsigned char 
 10156 ;;		 -> time_string(10), mth_string(10), date_string(10), month_string(10), 
 10157 ;;		 -> date1_string(10), hour_string(10), min_string(10), 
 10158 ;; Auto vars:     Size  Location     Type
 10159 ;;		None
 10160 ;; Return value:  Size  Location     Type
 10161 ;;                  1    wreg      void 
 10162 ;; Registers used:
 10163 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10164 ;; Tracked objects:
 10165 ;;		On entry : 0/0
 10166 ;;		On exit  : 0/0
 10167 ;;		Unchanged: 0/0
 10168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10169 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10171 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10172 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10173 ;;Total ram usage:        7 bytes
 10174 ;; Hardware stack levels used:    1
 10175 ;; Hardware stack levels required when called:    2
 10176 ;; This function calls:
 10177 ;;		i1_EUSART_Write
 10178 ;;		i1_EUSART_Write_Text
 10179 ;; This function is called by:
 10180 ;;		_isr
 10181 ;; This function uses a non-reentrant model
 10182 ;;
 10183                           
 10184                           
 10185                           ;psect for function i1_touchscreen_data
 10186  084D                     i1_touchscreen_data:	
 10187                           
 10188                           ;touchscreen.c: 33: EUSART_Write_Text(cmd);
 10189                           
 10190                           ;incstack = 0
 10191                           ; Regs used in i1_touchscreen_data: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10192  084D  0877               	movf	i1touchscreen_data@cmd+1,w
 10193  084E  00F2               	movwf	i1EUSART_Write_Text@text+1
 10194  084F  0876               	movf	i1touchscreen_data@cmd,w
 10195  0850  00F1               	movwf	i1EUSART_Write_Text@text
 10196  0851  3196  26C8  3188   	fcall	i1_EUSART_Write_Text
 10197                           
 10198                           ;touchscreen.c: 34: EUSART_Write_Text(string2);
 10199  0854  0879               	movf	i1touchscreen_data@string2+1,w
 10200  0855  00F2               	movwf	i1EUSART_Write_Text@text+1
 10201  0856  0878               	movf	i1touchscreen_data@string2,w
 10202  0857  00F1               	movwf	i1EUSART_Write_Text@text
 10203  0858  3196  26C8  3188   	fcall	i1_EUSART_Write_Text
 10204                           
 10205                           ;touchscreen.c: 35: EUSART_Write(0xFF);
 10206  085B  30FF               	movlw	255
 10207  085C  3195  25DB  3188   	fcall	i1_EUSART_Write
 10208                           
 10209                           ;touchscreen.c: 36: EUSART_Write(0xFF);
 10210  085F  30FF               	movlw	255
 10211  0860  3195  25DB  3188   	fcall	i1_EUSART_Write
 10212                           
 10213                           ;touchscreen.c: 37: EUSART_Write(0xFF);
 10214  0863  30FF               	movlw	255
 10215  0864  3195  25DB  3188   	fcall	i1_EUSART_Write
 10216                           
 10217                           ;touchscreen.c: 39: _delay((unsigned long)((100)*(16000000/4000.0)));
 10218  0867  3003               	movlw	3
 10219  0868  00FC               	movwf	??i1_touchscreen_data+2
 10220  0869  3008               	movlw	8
 10221  086A  00FB               	movwf	??i1_touchscreen_data+1
 10222  086B  3078               	movlw	120
 10223  086C  00FA               	movwf	??i1_touchscreen_data
 10224  086D                     u390_27:	
 10225  086D  0BFA               	decfsz	??i1_touchscreen_data,f
 10226  086E  286D               	goto	u390_27
 10227  086F  0BFB               	decfsz	??i1_touchscreen_data+1,f
 10228  0870  286D               	goto	u390_27
 10229  0871  0BFC               	decfsz	??i1_touchscreen_data+2,f
 10230  0872  286D               	goto	u390_27
 10231  0873  0008               	return
 10232  0874                     __end_ofi1_touchscreen_data:	
 10233                           
 10234                           	psect	text41
 10235  16C8                     __ptext41:	
 10236 ;; *************** function i1_EUSART_Write_Text *****************
 10237 ;; Defined at:
 10238 ;;		line 125 in file "EUSART.c"
 10239 ;; Parameters:    Size  Location     Type
 10240 ;;  text            2    1[COMMON] PTR unsigned char 
 10241 ;;		 -> screen_date(10), screen_mth(11), screen_time(10), time_string(10), 
 10242 ;;		 -> mth_string(10), date_string(10), STR_33(8), STR_32(13), 
 10243 ;;		 -> STR_31(7), STR_30(12), STR_28(7), screen_month(8), 
 10244 ;;		 -> month_string(10), screen_date1(8), date1_string(10), screen_hour(8), 
 10245 ;;		 -> hour_string(10), screen_mins(8), min_string(10), 
 10246 ;; Auto vars:     Size  Location     Type
 10247 ;;  EUSART_Write    2    4[COMMON] int 
 10248 ;; Return value:  Size  Location     Type
 10249 ;;                  1    wreg      void 
 10250 ;; Registers used:
 10251 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10252 ;; Tracked objects:
 10253 ;;		On entry : 0/0
 10254 ;;		On exit  : 0/0
 10255 ;;		Unchanged: 0/0
 10256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10257 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10258 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10259 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10260 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10261 ;;Total ram usage:        5 bytes
 10262 ;; Hardware stack levels used:    1
 10263 ;; Hardware stack levels required when called:    1
 10264 ;; This function calls:
 10265 ;;		i1_EUSART_Write
 10266 ;; This function is called by:
 10267 ;;		i1_touchscreen_data
 10268 ;; This function uses a non-reentrant model
 10269 ;;
 10270                           
 10271                           
 10272                           ;psect for function i1_EUSART_Write_Text
 10273  16C8                     i1_EUSART_Write_Text:	
 10274                           
 10275                           ;EUSART.c: 127: int i;
 10276                           ;EUSART.c: 128: for(i=0;text[i]!='\0';i++)
 10277                           
 10278                           ;incstack = 0
 10279                           ; Regs used in i1_EUSART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10280  16C8  01F4               	clrf	i1EUSART_Write_Text@i
 10281  16C9  01F5               	clrf	i1EUSART_Write_Text@i+1
 10282  16CA                     i1l2568:	
 10283  16CA  0871               	movf	i1EUSART_Write_Text@text,w
 10284  16CB  0774               	addwf	i1EUSART_Write_Text@i,w
 10285  16CC  0084               	movwf	4
 10286  16CD  0872               	movf	i1EUSART_Write_Text@text+1,w
 10287  16CE  3D75               	addwfc	i1EUSART_Write_Text@i+1,w
 10288  16CF  0085               	movwf	5
 10289  16D0  0012               	moviw fsr0++
 10290  16D1  1903               	btfsc	3,2
 10291  16D2  0008               	return
 10292                           
 10293                           ;EUSART.c: 129: EUSART_Write(text[i]);
 10294  16D3  0871               	movf	i1EUSART_Write_Text@text,w
 10295  16D4  0774               	addwf	i1EUSART_Write_Text@i,w
 10296  16D5  0084               	movwf	4
 10297  16D6  0872               	movf	i1EUSART_Write_Text@text+1,w
 10298  16D7  3D75               	addwfc	i1EUSART_Write_Text@i+1,w
 10299  16D8  0085               	movwf	5
 10300  16D9  0800               	movf	0,w	;code access
 10301  16DA  3195  25DB  3196   	fcall	i1_EUSART_Write
 10302  16DD  3001               	movlw	1
 10303  16DE  07F4               	addwf	i1EUSART_Write_Text@i,f
 10304  16DF  3000               	movlw	0
 10305  16E0  3DF5               	addwfc	i1EUSART_Write_Text@i+1,f
 10306  16E1  2ECA               	goto	i1l2568
 10307  16E2                     __end_ofi1_EUSART_Write_Text:	
 10308                           
 10309                           	psect	text42
 10310  15DB                     __ptext42:	
 10311 ;; *************** function i1_EUSART_Write *****************
 10312 ;; Defined at:
 10313 ;;		line 98 in file "EUSART.c"
 10314 ;; Parameters:    Size  Location     Type
 10315 ;;  txData          1    wreg     unsigned char 
 10316 ;; Auto vars:     Size  Location     Type
 10317 ;;  txData          1    0[COMMON] unsigned char 
 10318 ;; Return value:  Size  Location     Type
 10319 ;;                  1    wreg      void 
 10320 ;; Registers used:
 10321 ;;		wreg
 10322 ;; Tracked objects:
 10323 ;;		On entry : 0/0
 10324 ;;		On exit  : 0/0
 10325 ;;		Unchanged: 0/0
 10326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10328 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10330 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10331 ;;Total ram usage:        1 bytes
 10332 ;; Hardware stack levels used:    1
 10333 ;; This function calls:
 10334 ;;		Nothing
 10335 ;; This function is called by:
 10336 ;;		i1_EUSART_Write_Text
 10337 ;;		i1_touchscreen_data
 10338 ;; This function uses a non-reentrant model
 10339 ;;
 10340                           
 10341                           
 10342                           ;psect for function i1_EUSART_Write
 10343  15DB                     i1_EUSART_Write:	
 10344                           
 10345                           ;incstack = 0
 10346                           ; Regs used in i1_EUSART_Write: [wreg]
 10347                           ;i1EUSART_Write@txData stored from wreg
 10348  15DB  00F0               	movwf	i1EUSART_Write@txData
 10349  15DC                     i1l380:	
 10350                           ;EUSART.c: 101: {
 10351                           
 10352                           ;EUSART.c: 100: while(0 == PIR1bits.TXIF)
 10353                           
 10354  15DC  0020               	movlb	0	; select bank0
 10355  15DD  1E11               	btfss	17,4	;volatile
 10356  15DE  2DDC               	goto	i1l380
 10357                           
 10358                           ;EUSART.c: 102: }
 10359                           ;EUSART.c: 104: TX1REG = txData;
 10360  15DF  0870               	movf	i1EUSART_Write@txData,w
 10361  15E0  0023               	movlb	3	; select bank3
 10362  15E1  009A               	movwf	26	;volatile
 10363  15E2  0008               	return
 10364  15E3                     __end_ofi1_EUSART_Write:	
 10365                           
 10366                           	psect	text43
 10367  16AE                     __ptext43:	
 10368 ;; *************** function i1_strcpy *****************
 10369 ;; Defined at:
 10370 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\strcpy.c"
 10371 ;; Parameters:    Size  Location     Type
 10372 ;;  to              2    0[COMMON] PTR unsigned char 
 10373 ;;		 -> time_string(10), mth_string(10), date_string(10), month_string(10), 
 10374 ;;		 -> date1_string(10), hour_string(10), min_string(10), 
 10375 ;;  from            2    2[COMMON] PTR const unsigned char 
 10376 ;;		 -> STR_38(2), STR_36(2), STR_34(2), STR_26(2), 
 10377 ;;		 -> STR_24(2), STR_22(2), STR_19(2), 
 10378 ;; Auto vars:     Size  Location     Type
 10379 ;;  strcpy          2    4[COMMON] PTR unsigned char 
 10380 ;;		 -> time_string(10), mth_string(10), date_string(10), month_string(10), 
 10381 ;;		 -> date1_string(10), hour_string(10), min_string(10), 
 10382 ;; Return value:  Size  Location     Type
 10383 ;;                  1    wreg      PTR unsigned char 
 10384 ;; Registers used:
 10385 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, pclath
 10386 ;; Tracked objects:
 10387 ;;		On entry : 0/0
 10388 ;;		On exit  : 0/0
 10389 ;;		Unchanged: 0/0
 10390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10391 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10392 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10394 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10395 ;;Total ram usage:        6 bytes
 10396 ;; Hardware stack levels used:    1
 10397 ;; This function calls:
 10398 ;;		Nothing
 10399 ;; This function is called by:
 10400 ;;		_isr
 10401 ;; This function uses a non-reentrant model
 10402 ;;
 10403                           
 10404                           
 10405                           ;psect for function i1_strcpy
 10406  16AE                     i1_strcpy:	
 10407                           
 10408                           ;incstack = 0
 10409                           ; Regs used in i1_strcpy: [wreg-fsr1h+pclath]
 10410  16AE  0871               	movf	i1strcpy@to+1,w
 10411  16AF  00F5               	movwf	i1strcpy@cp+1
 10412  16B0  0870               	movf	i1strcpy@to,w
 10413  16B1  00F4               	movwf	i1strcpy@cp
 10414  16B2                     i1l2868:	
 10415  16B2  0874               	movf	i1strcpy@cp,w
 10416  16B3  0086               	movwf	6
 10417  16B4  0875               	movf	i1strcpy@cp+1,w
 10418  16B5  0087               	movwf	7
 10419  16B6  0872               	movf	i1strcpy@from,w
 10420  16B7  0084               	movwf	4
 10421  16B8  0873               	movf	i1strcpy@from+1,w
 10422  16B9  0085               	movwf	5
 10423  16BA  0800               	movf	0,w	;code access
 10424  16BB  3FC0               	movwi [0]fsr1
 10425  16BC  0889               	movf	9,f
 10426  16BD  1903               	btfsc	3,2
 10427  16BE  0008               	return
 10428  16BF  3001               	movlw	1
 10429  16C0  07F4               	addwf	i1strcpy@cp,f
 10430  16C1  3000               	movlw	0
 10431  16C2  3DF5               	addwfc	i1strcpy@cp+1,f
 10432  16C3  3001               	movlw	1
 10433  16C4  07F2               	addwf	i1strcpy@from,f
 10434  16C5  3000               	movlw	0
 10435  16C6  3DF3               	addwfc	i1strcpy@from+1,f
 10436  16C7  2EB2               	goto	i1l2868
 10437  16C8                     __end_ofi1_strcpy:	
 10438                           ;	Return value of i1_strcpy is never used
 10439                           
 10440                           
 10441                           	psect	text44
 10442  0827                     __ptext44:	
 10443 ;; *************** function i1_strcat *****************
 10444 ;; Defined at:
 10445 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\strcat.c"
 10446 ;; Parameters:    Size  Location     Type
 10447 ;;  to              2    0[COMMON] PTR unsigned char 
 10448 ;;		 -> time_string(10), mth_string(10), date_string(10), month_string(10), 
 10449 ;;		 -> date1_string(10), hour_string(10), min_string(10), 
 10450 ;;  from            2    2[COMMON] PTR const unsigned char 
 10451 ;;		 -> STR_41(2), STR_40(2), STR_39(2), STR_37(2), 
 10452 ;;		 -> STR_35(2), dt_arr(5), hr_arr(8), min_arr(8), 
 10453 ;;		 -> STR_27(2), month_arr(10), STR_25(2), date_arr(10), 
 10454 ;;		 -> STR_23(2), hour_arr(10), STR_21(2), STR_20(2), 
 10455 ;;		 -> minute_arr(10), STR_13(4), STR_12(4), STR_11(4), 
 10456 ;;		 -> STR_10(4), STR_9(4), STR_8(4), STR_7(4), 
 10457 ;;		 -> STR_6(4), STR_5(4), STR_4(4), STR_3(4), 
 10458 ;;		 -> STR_2(4), STR_1(4), 
 10459 ;; Auto vars:     Size  Location     Type
 10460 ;;  strcat          2    4[COMMON] PTR unsigned char 
 10461 ;;		 -> time_string(10), mth_string(10), date_string(10), month_string(10), 
 10462 ;;		 -> date1_string(10), hour_string(10), min_string(10), 
 10463 ;; Return value:  Size  Location     Type
 10464 ;;                  1    wreg      PTR unsigned char 
 10465 ;; Registers used:
 10466 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 10467 ;; Tracked objects:
 10468 ;;		On entry : 0/0
 10469 ;;		On exit  : 0/0
 10470 ;;		Unchanged: 0/0
 10471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10472 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10473 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10475 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10476 ;;Total ram usage:        6 bytes
 10477 ;; Hardware stack levels used:    1
 10478 ;; This function calls:
 10479 ;;		Nothing
 10480 ;; This function is called by:
 10481 ;;		_isr
 10482 ;; This function uses a non-reentrant model
 10483 ;;
 10484                           
 10485                           
 10486                           ;psect for function i1_strcat
 10487  0827                     i1_strcat:	
 10488                           
 10489                           ;incstack = 0
 10490                           ; Regs used in i1_strcat: [wreg-fsr1h+status,2+status,0+pclath]
 10491  0827  0871               	movf	i1strcat@to+1,w
 10492  0828  00F5               	movwf	i1strcat@cp+1
 10493  0829  0870               	movf	i1strcat@to,w
 10494  082A  00F4               	movwf	i1strcat@cp
 10495  082B                     i1l2858:	
 10496  082B  0874               	movf	i1strcat@cp,w
 10497  082C  0086               	movwf	6
 10498  082D  0875               	movf	i1strcat@cp+1,w
 10499  082E  0087               	movwf	7
 10500  082F  0801               	movf	1,w
 10501  0830  1903               	btfsc	3,2
 10502  0831  283F               	goto	i1l2862
 10503  0832  3001               	movlw	1
 10504  0833  07F4               	addwf	i1strcat@cp,f
 10505  0834  3000               	movlw	0
 10506  0835  3DF5               	addwfc	i1strcat@cp+1,f
 10507  0836  282B               	goto	i1l2858
 10508  0837                     i1l2860:	
 10509  0837  3001               	movlw	1
 10510  0838  07F4               	addwf	i1strcat@cp,f
 10511  0839  3000               	movlw	0
 10512  083A  3DF5               	addwfc	i1strcat@cp+1,f
 10513  083B  3001               	movlw	1
 10514  083C  07F2               	addwf	i1strcat@from,f
 10515  083D  3000               	movlw	0
 10516  083E  3DF3               	addwfc	i1strcat@from+1,f
 10517  083F                     i1l2862:	
 10518  083F  0874               	movf	i1strcat@cp,w
 10519  0840  0086               	movwf	6
 10520  0841  0875               	movf	i1strcat@cp+1,w
 10521  0842  0087               	movwf	7
 10522  0843  0872               	movf	i1strcat@from,w
 10523  0844  0084               	movwf	4
 10524  0845  0873               	movf	i1strcat@from+1,w
 10525  0846  0085               	movwf	5
 10526  0847  0800               	movf	0,w	;code access
 10527  0848  3FC0               	movwi [0]fsr1
 10528  0849  0889               	movf	9,f
 10529  084A  1903               	btfsc	3,2
 10530  084B  0008               	return
 10531  084C  2837               	goto	i1l2860
 10532  084D                     __end_ofi1_strcat:	
 10533                           ;	Return value of i1_strcat is never used
 10534                           
 10535                           
 10536                           	psect	text45
 10537  17DB                     __ptext45:	
 10538 ;; *************** function i1_itoa *****************
 10539 ;; Defined at:
 10540 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\itoa.c"
 10541 ;; Parameters:    Size  Location     Type
 10542 ;;  buf             2    4[BANK0 ] PTR unsigned char 
 10543 ;;		 -> OLED_Write_Integer@s(20), dt_arr(5), hr_arr(8), min_arr(8), 
 10544 ;;		 -> month_arr(10), date_arr(10), hour_arr(10), minute_arr(10), 
 10545 ;;  val             2    6[BANK0 ] int 
 10546 ;;  base            2    8[BANK0 ] int 
 10547 ;; Auto vars:     Size  Location     Type
 10548 ;;  itoa            2   10[BANK0 ] PTR unsigned char 
 10549 ;;		 -> OLED_Write_Integer@s(20), dt_arr(5), hr_arr(8), min_arr(8), 
 10550 ;;		 -> month_arr(10), date_arr(10), hour_arr(10), minute_arr(10), 
 10551 ;; Return value:  Size  Location     Type
 10552 ;;                  1    wreg      PTR unsigned char 
 10553 ;; Registers used:
 10554 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10555 ;; Tracked objects:
 10556 ;;		On entry : 0/0
 10557 ;;		On exit  : 0/0
 10558 ;;		Unchanged: 0/0
 10559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10560 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10561 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10563 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10564 ;;Total ram usage:        8 bytes
 10565 ;; Hardware stack levels used:    1
 10566 ;; Hardware stack levels required when called:    2
 10567 ;; This function calls:
 10568 ;;		i1_utoa
 10569 ;; This function is called by:
 10570 ;;		_isr
 10571 ;; This function uses a non-reentrant model
 10572 ;;
 10573                           
 10574                           
 10575                           ;psect for function i1_itoa
 10576  17DB                     i1_itoa:	
 10577                           
 10578                           ;incstack = 0
 10579                           ; Regs used in i1_itoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10580  17DB  0020               	movlb	0	; select bank0
 10581  17DC  0825               	movf	i1itoa@buf+1,w
 10582  17DD  00AB               	movwf	i1itoa@cp+1
 10583  17DE  0824               	movf	i1itoa@buf,w
 10584  17DF  00AA               	movwf	i1itoa@cp
 10585  17E0  1FA7               	btfss	i1itoa@val+1,7
 10586  17E1  2FF1               	goto	i1l3754
 10587  17E2  0824               	movf	i1itoa@buf,w
 10588  17E3  0086               	movwf	6
 10589  17E4  0825               	movf	i1itoa@buf+1,w
 10590  17E5  0087               	movwf	7
 10591  17E6  302D               	movlw	45
 10592  17E7  0081               	movwf	1
 10593  17E8  3001               	movlw	1
 10594  17E9  07A4               	addwf	i1itoa@buf,f
 10595  17EA  3000               	movlw	0
 10596  17EB  3DA5               	addwfc	i1itoa@buf+1,f
 10597  17EC  09A6               	comf	i1itoa@val,f
 10598  17ED  09A7               	comf	i1itoa@val+1,f
 10599  17EE  0AA6               	incf	i1itoa@val,f
 10600  17EF  1903               	skipnz
 10601  17F0  0AA7               	incf	i1itoa@val+1,f
 10602  17F1                     i1l3754:	
 10603  17F1  0825               	movf	i1itoa@buf+1,w
 10604  17F2  00F9               	movwf	i1utoa@buf+1
 10605  17F3  0824               	movf	i1itoa@buf,w
 10606  17F4  00F8               	movwf	i1utoa@buf
 10607  17F5  0827               	movf	i1itoa@val+1,w
 10608  17F6  00FB               	movwf	i1utoa@val+1
 10609  17F7  0826               	movf	i1itoa@val,w
 10610  17F8  00FA               	movwf	i1utoa@val
 10611  17F9  0829               	movf	i1itoa@base+1,w
 10612  17FA  00FD               	movwf	i1utoa@base+1
 10613  17FB  0828               	movf	i1itoa@base,w
 10614  17FC  00FC               	movwf	i1utoa@base
 10615  17FD  318B  234A         	fcall	i1_utoa
 10616  17FF  0008               	return
 10617  1800                     __end_ofi1_itoa:	
 10618                           ;	Return value of i1_itoa is never used
 10619                           
 10620                           
 10621                           	psect	text46
 10622  0B4A                     __ptext46:	
 10623 ;; *************** function i1_utoa *****************
 10624 ;; Defined at:
 10625 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\itoa.c"
 10626 ;; Parameters:    Size  Location     Type
 10627 ;;  buf             2    8[COMMON] PTR unsigned char 
 10628 ;;		 -> OLED_Write_Integer@s(20), dt_arr(5), hr_arr(8), min_arr(8), 
 10629 ;;		 -> month_arr(10), date_arr(10), hour_arr(10), minute_arr(10), 
 10630 ;;  val             2   10[COMMON] unsigned int 
 10631 ;;  base            2   12[COMMON] int 
 10632 ;; Auto vars:     Size  Location     Type
 10633 ;;  utoa            2    1[BANK0 ] unsigned int 
 10634 ;;  utoa            1    3[BANK0 ] unsigned char 
 10635 ;; Return value:  Size  Location     Type
 10636 ;;                  1    wreg      PTR unsigned char 
 10637 ;; Registers used:
 10638 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10639 ;; Tracked objects:
 10640 ;;		On entry : 0/0
 10641 ;;		On exit  : 0/0
 10642 ;;		Unchanged: 0/0
 10643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10644 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10645 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10646 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10647 ;;      Totals:         6       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10648 ;;Total ram usage:       10 bytes
 10649 ;; Hardware stack levels used:    1
 10650 ;; Hardware stack levels required when called:    1
 10651 ;; This function calls:
 10652 ;;		i1___lwdiv
 10653 ;;		i1___lwmod
 10654 ;; This function is called by:
 10655 ;;		i1_itoa
 10656 ;; This function uses a non-reentrant model
 10657 ;;
 10658                           
 10659                           
 10660                           ;psect for function i1_utoa
 10661  0B4A                     i1_utoa:	
 10662                           
 10663                           ;incstack = 0
 10664                           ; Regs used in i1_utoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10665  0B4A  087B               	movf	i1utoa@val+1,w
 10666  0B4B  0020               	movlb	0	; select bank0
 10667  0B4C  00A2               	movwf	i1utoa@v+1
 10668  0B4D  087A               	movf	i1utoa@val,w
 10669  0B4E  00A1               	movwf	i1utoa@v
 10670  0B4F                     i1l3550:	
 10671  0B4F  087D               	movf	i1utoa@base+1,w
 10672  0B50  00F1               	movwf	i1___lwdiv@divisor+1
 10673  0B51  087C               	movf	i1utoa@base,w
 10674  0B52  00F0               	movwf	i1___lwdiv@divisor
 10675  0B53  0822               	movf	i1utoa@v+1,w
 10676  0B54  00F3               	movwf	i1___lwdiv@dividend+1
 10677  0B55  0821               	movf	i1utoa@v,w
 10678  0B56  00F2               	movwf	i1___lwdiv@dividend
 10679  0B57  3189  21A9  318B   	fcall	i1___lwdiv
 10680  0B5A  0871               	movf	?i1___lwdiv+1,w
 10681  0B5B  0020               	movlb	0	; select bank0
 10682  0B5C  00A2               	movwf	i1utoa@v+1
 10683  0B5D  0870               	movf	?i1___lwdiv,w
 10684  0B5E  00A1               	movwf	i1utoa@v
 10685  0B5F  3001               	movlw	1
 10686  0B60  07F8               	addwf	i1utoa@buf,f
 10687  0B61  3000               	movlw	0
 10688  0B62  3DF9               	addwfc	i1utoa@buf+1,f
 10689  0B63  0821               	movf	i1utoa@v,w
 10690  0B64  0422               	iorwf	i1utoa@v+1,w
 10691  0B65  1D03               	btfss	3,2
 10692  0B66  2B4F               	goto	i1l3550
 10693  0B67  0878               	movf	i1utoa@buf,w
 10694  0B68  0086               	movwf	6
 10695  0B69  0879               	movf	i1utoa@buf+1,w
 10696  0B6A  0087               	movwf	7
 10697  0B6B  0181               	clrf	1
 10698  0B6C  3001               	movlw	1
 10699  0B6D  02F8               	subwf	i1utoa@buf,f
 10700  0B6E  3000               	movlw	0
 10701  0B6F  3BF9               	subwfb	i1utoa@buf+1,f
 10702  0B70                     i1l3560:	
 10703  0B70  087D               	movf	i1utoa@base+1,w
 10704  0B71  00F1               	movwf	i1___lwmod@divisor+1
 10705  0B72  087C               	movf	i1utoa@base,w
 10706  0B73  00F0               	movwf	i1___lwmod@divisor
 10707  0B74  087B               	movf	i1utoa@val+1,w
 10708  0B75  00F3               	movwf	i1___lwmod@dividend+1
 10709  0B76  087A               	movf	i1utoa@val,w
 10710  0B77  00F2               	movwf	i1___lwmod@dividend
 10711  0B78  3188  20F0  318B   	fcall	i1___lwmod
 10712  0B7B  0870               	movf	?i1___lwmod,w
 10713  0B7C  0020               	movlb	0	; select bank0
 10714  0B7D  00A0               	movwf	??i1_utoa
 10715  0B7E  0820               	movf	??i1_utoa,w
 10716  0B7F  00A3               	movwf	i1utoa@c
 10717  0B80  087D               	movf	i1utoa@base+1,w
 10718  0B81  00F1               	movwf	i1___lwdiv@divisor+1
 10719  0B82  087C               	movf	i1utoa@base,w
 10720  0B83  00F0               	movwf	i1___lwdiv@divisor
 10721  0B84  087B               	movf	i1utoa@val+1,w
 10722  0B85  00F3               	movwf	i1___lwdiv@dividend+1
 10723  0B86  087A               	movf	i1utoa@val,w
 10724  0B87  00F2               	movwf	i1___lwdiv@dividend
 10725  0B88  3189  21A9  318B   	fcall	i1___lwdiv
 10726  0B8B  0871               	movf	?i1___lwdiv+1,w
 10727  0B8C  00FB               	movwf	i1utoa@val+1
 10728  0B8D  0870               	movf	?i1___lwdiv,w
 10729  0B8E  00FA               	movwf	i1utoa@val
 10730  0B8F  300A               	movlw	10
 10731  0B90  0020               	movlb	0	; select bank0
 10732  0B91  0223               	subwf	i1utoa@c,w
 10733  0B92  1C03               	skipc
 10734  0B93  2B98               	goto	i1l794
 10735  0B94  3007               	movlw	7
 10736  0B95  00A0               	movwf	??i1_utoa
 10737  0B96  0820               	movf	??i1_utoa,w
 10738  0B97  07A3               	addwf	i1utoa@c,f
 10739  0B98                     i1l794:	
 10740  0B98  3030               	movlw	48
 10741  0B99  00A0               	movwf	??i1_utoa
 10742  0B9A  0820               	movf	??i1_utoa,w
 10743  0B9B  07A3               	addwf	i1utoa@c,f
 10744  0B9C  0878               	movf	i1utoa@buf,w
 10745  0B9D  0086               	movwf	6
 10746  0B9E  0879               	movf	i1utoa@buf+1,w
 10747  0B9F  0087               	movwf	7
 10748  0BA0  0823               	movf	i1utoa@c,w
 10749  0BA1  0081               	movwf	1
 10750  0BA2  3001               	movlw	1
 10751  0BA3  02F8               	subwf	i1utoa@buf,f
 10752  0BA4  3000               	movlw	0
 10753  0BA5  3BF9               	subwfb	i1utoa@buf+1,f
 10754  0BA6  087A               	movf	i1utoa@val,w
 10755  0BA7  047B               	iorwf	i1utoa@val+1,w
 10756  0BA8  1D03               	btfss	3,2
 10757  0BA9  2B70               	goto	i1l3560
 10758                           
 10759                           ;	Return value of i1_utoa is never used
 10760  0BAA  3001               	movlw	1
 10761  0BAB  07F8               	addwf	i1utoa@buf,f
 10762  0BAC  3000               	movlw	0
 10763  0BAD  3DF9               	addwfc	i1utoa@buf+1,f
 10764  0BAE  0008               	return
 10765  0BAF                     __end_ofi1_utoa:	
 10766                           
 10767                           	psect	text47
 10768  08F0                     __ptext47:	
 10769 ;; *************** function i1___lwmod *****************
 10770 ;; Defined at:
 10771 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwmod.c"
 10772 ;; Parameters:    Size  Location     Type
 10773 ;;  divisor         2    0[COMMON] unsigned int 
 10774 ;;  dividend        2    2[COMMON] unsigned int 
 10775 ;; Auto vars:     Size  Location     Type
 10776 ;;  __lwmod         1    5[COMMON] unsigned char 
 10777 ;; Return value:  Size  Location     Type
 10778 ;;                  2    0[COMMON] unsigned int 
 10779 ;; Registers used:
 10780 ;;		wreg, status,2, status,0
 10781 ;; Tracked objects:
 10782 ;;		On entry : 0/0
 10783 ;;		On exit  : 0/0
 10784 ;;		Unchanged: 0/0
 10785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10786 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10787 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10788 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10789 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10790 ;;Total ram usage:        6 bytes
 10791 ;; Hardware stack levels used:    1
 10792 ;; This function calls:
 10793 ;;		Nothing
 10794 ;; This function is called by:
 10795 ;;		i1_utoa
 10796 ;; This function uses a non-reentrant model
 10797 ;;
 10798                           
 10799                           
 10800                           ;psect for function i1___lwmod
 10801  08F0                     i1___lwmod:	
 10802                           
 10803                           ;incstack = 0
 10804                           ; Regs used in i1___lwmod: [wreg+status,2+status,0]
 10805  08F0  0870               	movf	i1___lwmod@divisor,w
 10806  08F1  0471               	iorwf	i1___lwmod@divisor+1,w
 10807  08F2  1903               	btfsc	3,2
 10808  08F3  2917               	goto	i1l2394
 10809  08F4  01F5               	clrf	i1___lwmod@counter
 10810  08F5  0AF5               	incf	i1___lwmod@counter,f
 10811  08F6                     i1l2384:	
 10812  08F6  1BF1               	btfsc	i1___lwmod@divisor+1,7
 10813  08F7  2902               	goto	i1l2386
 10814  08F8  3001               	movlw	1
 10815  08F9                     u208_25:	
 10816  08F9  35F0               	lslf	i1___lwmod@divisor,f
 10817  08FA  0DF1               	rlf	i1___lwmod@divisor+1,f
 10818  08FB  0B89               	decfsz	9,f
 10819  08FC  28F9               	goto	u208_25
 10820  08FD  3001               	movlw	1
 10821  08FE  00F4               	movwf	??i1___lwmod
 10822  08FF  0874               	movf	??i1___lwmod,w
 10823  0900  07F5               	addwf	i1___lwmod@counter,f
 10824  0901  28F6               	goto	i1l2384
 10825  0902                     i1l2386:	
 10826  0902  0871               	movf	i1___lwmod@divisor+1,w
 10827  0903  0273               	subwf	i1___lwmod@dividend+1,w
 10828  0904  1D03               	skipz
 10829  0905  2908               	goto	u210_25
 10830  0906  0870               	movf	i1___lwmod@divisor,w
 10831  0907  0272               	subwf	i1___lwmod@dividend,w
 10832  0908                     u210_25:	
 10833  0908  1C03               	skipc
 10834  0909  290E               	goto	i1l2390
 10835  090A  0870               	movf	i1___lwmod@divisor,w
 10836  090B  02F2               	subwf	i1___lwmod@dividend,f
 10837  090C  0871               	movf	i1___lwmod@divisor+1,w
 10838  090D  3BF3               	subwfb	i1___lwmod@dividend+1,f
 10839  090E                     i1l2390:	
 10840  090E  3001               	movlw	1
 10841  090F                     u211_25:	
 10842  090F  36F1               	lsrf	i1___lwmod@divisor+1,f
 10843  0910  0CF0               	rrf	i1___lwmod@divisor,f
 10844  0911  0B89               	decfsz	9,f
 10845  0912  290F               	goto	u211_25
 10846  0913  3001               	movlw	1
 10847  0914  02F5               	subwf	i1___lwmod@counter,f
 10848  0915  1D03               	btfss	3,2
 10849  0916  2902               	goto	i1l2386
 10850  0917                     i1l2394:	
 10851  0917  0873               	movf	i1___lwmod@dividend+1,w
 10852  0918  00F1               	movwf	?i1___lwmod+1
 10853  0919  0872               	movf	i1___lwmod@dividend,w
 10854  091A  00F0               	movwf	?i1___lwmod
 10855  091B  0008               	return
 10856  091C                     __end_ofi1___lwmod:	
 10857                           
 10858                           	psect	text48
 10859  09A9                     __ptext48:	
 10860 ;; *************** function i1___lwdiv *****************
 10861 ;; Defined at:
 10862 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c"
 10863 ;; Parameters:    Size  Location     Type
 10864 ;;  divisor         2    0[COMMON] unsigned int 
 10865 ;;  dividend        2    2[COMMON] unsigned int 
 10866 ;; Auto vars:     Size  Location     Type
 10867 ;;  __lwdiv         2    5[COMMON] unsigned int 
 10868 ;;  __lwdiv         1    7[COMMON] unsigned char 
 10869 ;; Return value:  Size  Location     Type
 10870 ;;                  2    0[COMMON] unsigned int 
 10871 ;; Registers used:
 10872 ;;		wreg, status,2, status,0
 10873 ;; Tracked objects:
 10874 ;;		On entry : 0/0
 10875 ;;		On exit  : 0/0
 10876 ;;		Unchanged: 0/0
 10877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10878 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10879 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10880 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10881 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10882 ;;Total ram usage:        8 bytes
 10883 ;; Hardware stack levels used:    1
 10884 ;; This function calls:
 10885 ;;		Nothing
 10886 ;; This function is called by:
 10887 ;;		i1_utoa
 10888 ;; This function uses a non-reentrant model
 10889 ;;
 10890                           
 10891                           
 10892                           ;psect for function i1___lwdiv
 10893  09A9                     i1___lwdiv:	
 10894                           
 10895                           ;incstack = 0
 10896                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
 10897  09A9  01F5               	clrf	i1___lwdiv@quotient
 10898  09AA  01F6               	clrf	i1___lwdiv@quotient+1
 10899  09AB  0870               	movf	i1___lwdiv@divisor,w
 10900  09AC  0471               	iorwf	i1___lwdiv@divisor+1,w
 10901  09AD  1903               	btfsc	3,2
 10902  09AE  29D8               	goto	i1l2372
 10903  09AF  01F7               	clrf	i1___lwdiv@counter
 10904  09B0  0AF7               	incf	i1___lwdiv@counter,f
 10905  09B1                     i1l2360:	
 10906  09B1  1BF1               	btfsc	i1___lwdiv@divisor+1,7
 10907  09B2  29BD               	goto	i1l2362
 10908  09B3  3001               	movlw	1
 10909  09B4                     u201_25:	
 10910  09B4  35F0               	lslf	i1___lwdiv@divisor,f
 10911  09B5  0DF1               	rlf	i1___lwdiv@divisor+1,f
 10912  09B6  0B89               	decfsz	9,f
 10913  09B7  29B4               	goto	u201_25
 10914  09B8  3001               	movlw	1
 10915  09B9  00F4               	movwf	??i1___lwdiv
 10916  09BA  0874               	movf	??i1___lwdiv,w
 10917  09BB  07F7               	addwf	i1___lwdiv@counter,f
 10918  09BC  29B1               	goto	i1l2360
 10919  09BD                     i1l2362:	
 10920  09BD  3001               	movlw	1
 10921  09BE                     u203_25:	
 10922  09BE  35F5               	lslf	i1___lwdiv@quotient,f
 10923  09BF  0DF6               	rlf	i1___lwdiv@quotient+1,f
 10924  09C0  0B89               	decfsz	9,f
 10925  09C1  29BE               	goto	u203_25
 10926  09C2  0871               	movf	i1___lwdiv@divisor+1,w
 10927  09C3  0273               	subwf	i1___lwdiv@dividend+1,w
 10928  09C4  1D03               	skipz
 10929  09C5  29C8               	goto	u204_25
 10930  09C6  0870               	movf	i1___lwdiv@divisor,w
 10931  09C7  0272               	subwf	i1___lwdiv@dividend,w
 10932  09C8                     u204_25:	
 10933  09C8  1C03               	skipc
 10934  09C9  29CF               	goto	i1l2368
 10935  09CA  0870               	movf	i1___lwdiv@divisor,w
 10936  09CB  02F2               	subwf	i1___lwdiv@dividend,f
 10937  09CC  0871               	movf	i1___lwdiv@divisor+1,w
 10938  09CD  3BF3               	subwfb	i1___lwdiv@dividend+1,f
 10939  09CE  1475               	bsf	i1___lwdiv@quotient,0
 10940  09CF                     i1l2368:	
 10941  09CF  3001               	movlw	1
 10942  09D0                     u205_25:	
 10943  09D0  36F1               	lsrf	i1___lwdiv@divisor+1,f
 10944  09D1  0CF0               	rrf	i1___lwdiv@divisor,f
 10945  09D2  0B89               	decfsz	9,f
 10946  09D3  29D0               	goto	u205_25
 10947  09D4  3001               	movlw	1
 10948  09D5  02F7               	subwf	i1___lwdiv@counter,f
 10949  09D6  1D03               	btfss	3,2
 10950  09D7  29BD               	goto	i1l2362
 10951  09D8                     i1l2372:	
 10952  09D8  0876               	movf	i1___lwdiv@quotient+1,w
 10953  09D9  00F1               	movwf	?i1___lwdiv+1
 10954  09DA  0875               	movf	i1___lwdiv@quotient,w
 10955  09DB  00F0               	movwf	?i1___lwdiv
 10956  09DC  0008               	return
 10957  09DD                     __end_ofi1___lwdiv:	
 10958                           
 10959                           	psect	text49
 10960  1630                     __ptext49:	
 10961 ;; *************** function i1_DS1302_WriteByte *****************
 10962 ;; Defined at:
 10963 ;;		line 43 in file "ds1302.c"
 10964 ;; Parameters:    Size  Location     Type
 10965 ;;  W_Byte          1    wreg     unsigned char 
 10966 ;; Auto vars:     Size  Location     Type
 10967 ;;  W_Byte          1    1[COMMON] unsigned char 
 10968 ;;  DS1302_Write    1    2[COMMON] unsigned char 
 10969 ;; Return value:  Size  Location     Type
 10970 ;;                  1    wreg      void 
 10971 ;; Registers used:
 10972 ;;		wreg, status,2, status,0
 10973 ;; Tracked objects:
 10974 ;;		On entry : 0/0
 10975 ;;		On exit  : 0/0
 10976 ;;		Unchanged: 0/0
 10977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10979 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10980 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10981 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10982 ;;Total ram usage:        3 bytes
 10983 ;; Hardware stack levels used:    1
 10984 ;; This function calls:
 10985 ;;		Nothing
 10986 ;; This function is called by:
 10987 ;;		_isr
 10988 ;; This function uses a non-reentrant model
 10989 ;;
 10990                           
 10991                           
 10992                           ;psect for function i1_DS1302_WriteByte
 10993  1630                     i1_DS1302_WriteByte:	
 10994                           
 10995                           ;incstack = 0
 10996                           ; Regs used in i1_DS1302_WriteByte: [wreg+status,2+status,0]
 10997                           ;i1DS1302_WriteByte@W_Byte stored from wreg
 10998  1630  00F1               	movwf	i1DS1302_WriteByte@W_Byte
 10999                           
 11000                           ;ds1302.c: 45: unsigned char i;
 11001                           ;ds1302.c: 47: for(i = 0; i < 8; ++i)
 11002  1631  01F2               	clrf	i1DS1302_WriteByte@i
 11003  1632                     L5:	
 11004  1632  3008               	movlw	8
 11005  1633  0272               	subwf	i1DS1302_WriteByte@i,w
 11006  1634  1803               	btfsc	3,0
 11007  1635  0008               	return
 11008                           
 11009                           ;ds1302.c: 48: {
 11010                           ;ds1302.c: 49: RD2 = 0;
 11011  1636  0020               	movlb	0	; select bank0
 11012  1637  110F               	bcf	15,2	;volatile
 11013                           
 11014                           ;ds1302.c: 51: if(W_Byte & 0x01)
 11015  1638  1871               	btfsc	i1DS1302_WriteByte@W_Byte,0
 11016                           
 11017                           ;ds1302.c: 52: {
 11018                           ;ds1302.c: 53: RD2 = 1;
 11019  1639  150F               	bsf	15,2	;volatile
 11020                           
 11021                           ;ds1302.c: 54: }
 11022                           ;ds1302.c: 56: RD1 = 0;
 11023  163A  108F               	bcf	15,1	;volatile
 11024                           
 11025                           ;ds1302.c: 57: RD1 = 1;
 11026  163B  148F               	bsf	15,1	;volatile
 11027                           
 11028                           ;ds1302.c: 58: W_Byte >>= 1;
 11029  163C  1003               	clrc
 11030  163D  0CF1               	rrf	i1DS1302_WriteByte@W_Byte,f
 11031  163E  3001               	movlw	1
 11032  163F  00F0               	movwf	??i1_DS1302_WriteByte
 11033  1640  0870               	movf	??i1_DS1302_WriteByte,w
 11034  1641  07F2               	addwf	i1DS1302_WriteByte@i,f
 11035  1642  2E32               	goto	L5
 11036  1643                     __end_ofi1_DS1302_WriteByte:	
 11037                           
 11038                           	psect	text50
 11039  15C5                     __ptext50:	
 11040 ;; *************** function i1_DS1302_Reset *****************
 11041 ;; Defined at:
 11042 ;;		line 26 in file "ds1302.c"
 11043 ;; Parameters:    Size  Location     Type
 11044 ;;		None
 11045 ;; Auto vars:     Size  Location     Type
 11046 ;;		None
 11047 ;; Return value:  Size  Location     Type
 11048 ;;                  1    wreg      void 
 11049 ;; Registers used:
 11050 ;;		None
 11051 ;; Tracked objects:
 11052 ;;		On entry : 0/0
 11053 ;;		On exit  : 0/0
 11054 ;;		Unchanged: 0/0
 11055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11060 ;;Total ram usage:        0 bytes
 11061 ;; Hardware stack levels used:    1
 11062 ;; This function calls:
 11063 ;;		Nothing
 11064 ;; This function is called by:
 11065 ;;		_isr
 11066 ;; This function uses a non-reentrant model
 11067 ;;
 11068                           
 11069                           
 11070                           ;psect for function i1_DS1302_Reset
 11071  15C5                     i1_DS1302_Reset:	
 11072                           
 11073                           ;ds1302.c: 28: RD1 = 0;
 11074                           
 11075                           ;incstack = 0
 11076                           ; Regs used in i1_DS1302_Reset: []
 11077  15C5  0020               	movlb	0	; select bank0
 11078  15C6  108F               	bcf	15,1	;volatile
 11079                           
 11080                           ;ds1302.c: 29: RD0 = 0;
 11081  15C7  100F               	bcf	15,0	;volatile
 11082                           
 11083                           ;ds1302.c: 30: RD0 = 1;
 11084  15C8  140F               	bsf	15,0	;volatile
 11085  15C9  0008               	return
 11086  15CA                     __end_ofi1_DS1302_Reset:	
 11087                           
 11088                           	psect	text51
 11089  1696                     __ptext51:	
 11090 ;; *************** function _get_dec *****************
 11091 ;; Defined at:
 11092 ;;		line 159 in file "ds1302.c"
 11093 ;; Parameters:    Size  Location     Type
 11094 ;;  var             1    wreg     unsigned char 
 11095 ;; Auto vars:     Size  Location     Type
 11096 ;;  var             1    8[COMMON] unsigned char 
 11097 ;;  var2            1    7[COMMON] unsigned char 
 11098 ;; Return value:  Size  Location     Type
 11099 ;;                  1    wreg      unsigned char 
 11100 ;; Registers used:
 11101 ;;		wreg, status,2, status,0, pclath, cstack
 11102 ;; Tracked objects:
 11103 ;;		On entry : 0/0
 11104 ;;		On exit  : 0/0
 11105 ;;		Unchanged: 0/0
 11106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11108 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11109 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11110 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11111 ;;Total ram usage:        5 bytes
 11112 ;; Hardware stack levels used:    1
 11113 ;; Hardware stack levels required when called:    1
 11114 ;; This function calls:
 11115 ;;		i1___bmul
 11116 ;; This function is called by:
 11117 ;;		_isr
 11118 ;; This function uses a non-reentrant model
 11119 ;;
 11120                           
 11121                           
 11122                           ;psect for function _get_dec
 11123  1696                     _get_dec:	
 11124                           
 11125                           ;incstack = 0
 11126                           ; Regs used in _get_dec: [wreg+status,2+status,0+pclath+cstack]
 11127                           ;get_dec@var stored from wreg
 11128  1696  00F8               	movwf	get_dec@var
 11129                           
 11130                           ;ds1302.c: 161: unsigned char var2;
 11131                           ;ds1302.c: 163: var2 = (var >> 4) * 10;
 11132  1697  300A               	movlw	10
 11133  1698  00F4               	movwf	??_get_dec
 11134  1699  0874               	movf	??_get_dec,w
 11135  169A  00F0               	movwf	i1___bmul@multiplicand
 11136  169B  0878               	movf	get_dec@var,w
 11137  169C  00F5               	movwf	??_get_dec+1
 11138  169D  3004               	movlw	4
 11139  169E                     u247_25:	
 11140  169E  36F5               	lsrf	??_get_dec+1,f
 11141  169F  0B89               	decfsz	9,f
 11142  16A0  2E9E               	goto	u247_25
 11143  16A1  0875               	movf	??_get_dec+1,w
 11144  16A2  3196  260D         	fcall	i1___bmul
 11145  16A4  00F6               	movwf	??_get_dec+2
 11146  16A5  0876               	movf	??_get_dec+2,w
 11147  16A6  00F7               	movwf	get_dec@var2
 11148                           
 11149                           ;ds1302.c: 164: var2 += (var & 15);
 11150  16A7  0878               	movf	get_dec@var,w
 11151  16A8  390F               	andlw	15
 11152  16A9  00F4               	movwf	??_get_dec
 11153  16AA  0874               	movf	??_get_dec,w
 11154  16AB  07F7               	addwf	get_dec@var2,f
 11155                           
 11156                           ;ds1302.c: 166: return var2;
 11157  16AC  0877               	movf	get_dec@var2,w
 11158  16AD  0008               	return
 11159  16AE                     __end_of_get_dec:	
 11160                           
 11161                           	psect	text52
 11162  160D                     __ptext52:	
 11163 ;; *************** function i1___bmul *****************
 11164 ;; Defined at:
 11165 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul8.c"
 11166 ;; Parameters:    Size  Location     Type
 11167 ;;  multiplier      1    wreg     unsigned char 
 11168 ;;  multiplicand    1    0[COMMON] unsigned char 
 11169 ;; Auto vars:     Size  Location     Type
 11170 ;;  multiplier      1    3[COMMON] unsigned char 
 11171 ;;  __bmul          1    2[COMMON] unsigned char 
 11172 ;; Return value:  Size  Location     Type
 11173 ;;                  1    wreg      unsigned char 
 11174 ;; Registers used:
 11175 ;;		wreg, status,2, status,0
 11176 ;; Tracked objects:
 11177 ;;		On entry : 0/0
 11178 ;;		On exit  : 0/0
 11179 ;;		Unchanged: 0/0
 11180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11181 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11182 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11183 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11184 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11185 ;;Total ram usage:        4 bytes
 11186 ;; Hardware stack levels used:    1
 11187 ;; This function calls:
 11188 ;;		Nothing
 11189 ;; This function is called by:
 11190 ;;		_get_dec
 11191 ;; This function uses a non-reentrant model
 11192 ;;
 11193                           
 11194                           
 11195                           ;psect for function i1___bmul
 11196  160D                     i1___bmul:	
 11197                           
 11198                           ;incstack = 0
 11199                           ; Regs used in i1___bmul: [wreg+status,2+status,0]
 11200                           ;i1___bmul@multiplier stored from wreg
 11201  160D  00F3               	movwf	i1___bmul@multiplier
 11202  160E  01F2               	clrf	i1___bmul@product
 11203  160F                     i1l2572:	
 11204  160F  1C73               	btfss	i1___bmul@multiplier,0
 11205  1610  2E15               	goto	i1l2576
 11206  1611  0870               	movf	i1___bmul@multiplicand,w
 11207  1612  00F1               	movwf	??i1___bmul
 11208  1613  0871               	movf	??i1___bmul,w
 11209  1614  07F2               	addwf	i1___bmul@product,f
 11210  1615                     i1l2576:	
 11211  1615  1003               	clrc
 11212  1616  0DF0               	rlf	i1___bmul@multiplicand,f
 11213  1617  1003               	clrc
 11214  1618  0CF3               	rrf	i1___bmul@multiplier,f
 11215  1619  0873               	movf	i1___bmul@multiplier,w
 11216  161A  1D03               	btfss	3,2
 11217  161B  2E0F               	goto	i1l2572
 11218  161C  0872               	movf	i1___bmul@product,w
 11219  161D  0008               	return
 11220  161E                     __end_ofi1___bmul:	
 11221                           
 11222                           	psect	text53
 11223  17B6                     __ptext53:	
 11224 ;; *************** function _DS1302_ReadByte *****************
 11225 ;; Defined at:
 11226 ;;		line 71 in file "ds1302.c"
 11227 ;; Parameters:    Size  Location     Type
 11228 ;;		None
 11229 ;; Auto vars:     Size  Location     Type
 11230 ;;  i               1    3[COMMON] unsigned char 
 11231 ;;  R_Byte          1    2[COMMON] unsigned char 
 11232 ;;  TmpByte         1    1[COMMON] unsigned char 
 11233 ;; Return value:  Size  Location     Type
 11234 ;;                  1    wreg      unsigned char 
 11235 ;; Registers used:
 11236 ;;		wreg, status,2, status,0
 11237 ;; Tracked objects:
 11238 ;;		On entry : 0/0
 11239 ;;		On exit  : 0/0
 11240 ;;		Unchanged: 0/0
 11241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11243 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11244 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11245 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11246 ;;Total ram usage:        4 bytes
 11247 ;; Hardware stack levels used:    1
 11248 ;; This function calls:
 11249 ;;		Nothing
 11250 ;; This function is called by:
 11251 ;;		_isr
 11252 ;; This function uses a non-reentrant model
 11253 ;;
 11254                           
 11255                           
 11256                           ;psect for function _DS1302_ReadByte
 11257  17B6                     _DS1302_ReadByte:	
 11258                           
 11259                           ;ds1302.c: 73: unsigned char i;
 11260                           ;ds1302.c: 74: unsigned char R_Byte;
 11261                           ;ds1302.c: 75: unsigned char TmpByte;
 11262                           ;ds1302.c: 77: R_Byte = 0x00;
 11263                           
 11264                           ;incstack = 0
 11265                           ; Regs used in _DS1302_ReadByte: [wreg+status,2+status,0]
 11266  17B6  01F2               	clrf	DS1302_ReadByte@R_Byte
 11267                           
 11268                           ;ds1302.c: 79: TRISD2 = 1;
 11269  17B7  0021               	movlb	1	; select bank1
 11270  17B8  150F               	bsf	15,2	;volatile
 11271                           
 11272                           ;ds1302.c: 80: RD2 = 1;
 11273  17B9  0020               	movlb	0	; select bank0
 11274  17BA  150F               	bsf	15,2	;volatile
 11275                           
 11276                           ;ds1302.c: 82: for(i=0; i<8; ++i)
 11277  17BB  01F3               	clrf	DS1302_ReadByte@i
 11278  17BC  3008               	movlw	8
 11279  17BD  0273               	subwf	DS1302_ReadByte@i,w
 11280  17BE  1803               	btfsc	3,0
 11281  17BF  2FD7               	goto	i1l278
 11282  17C0                     i1l277:	
 11283                           
 11284                           ;ds1302.c: 83: {
 11285                           ;ds1302.c: 84: RD1 = 1;
 11286  17C0  148F               	bsf	15,1	;volatile
 11287                           
 11288                           ;ds1302.c: 85: RD1 = 0;
 11289  17C1  108F               	bcf	15,1	;volatile
 11290                           
 11291                           ;ds1302.c: 86: TmpByte = (unsigned char)RD2;
 11292  17C2  3000               	movlw	0
 11293  17C3  190F               	btfsc	15,2	;volatile
 11294  17C4  3001               	movlw	1
 11295  17C5  00F1               	movwf	DS1302_ReadByte@TmpByte
 11296                           
 11297                           ;ds1302.c: 87: TmpByte <<= 7;
 11298  17C6  0CF1               	rrf	DS1302_ReadByte@TmpByte,f
 11299  17C7  01F1               	clrf	DS1302_ReadByte@TmpByte
 11300  17C8  0CF1               	rrf	DS1302_ReadByte@TmpByte,f
 11301                           
 11302                           ;ds1302.c: 88: R_Byte >>= 1;
 11303  17C9  1003               	clrc
 11304  17CA  0CF2               	rrf	DS1302_ReadByte@R_Byte,f
 11305                           
 11306                           ;ds1302.c: 89: R_Byte |= TmpByte;
 11307  17CB  0871               	movf	DS1302_ReadByte@TmpByte,w
 11308  17CC  00F0               	movwf	??_DS1302_ReadByte
 11309  17CD  0870               	movf	??_DS1302_ReadByte,w
 11310  17CE  04F2               	iorwf	DS1302_ReadByte@R_Byte,f
 11311  17CF  3001               	movlw	1
 11312  17D0  00F0               	movwf	??_DS1302_ReadByte
 11313  17D1  0870               	movf	??_DS1302_ReadByte,w
 11314  17D2  07F3               	addwf	DS1302_ReadByte@i,f
 11315  17D3  3008               	movlw	8
 11316  17D4  0273               	subwf	DS1302_ReadByte@i,w
 11317  17D5  1C03               	skipc
 11318  17D6  2FC0               	goto	i1l277
 11319  17D7                     i1l278:	
 11320                           
 11321                           ;ds1302.c: 90: }
 11322                           ;ds1302.c: 91: TRISD2 = 0;
 11323  17D7  0021               	movlb	1	; select bank1
 11324  17D8  110F               	bcf	15,2	;volatile
 11325                           
 11326                           ;ds1302.c: 92: return R_Byte;
 11327  17D9  0872               	movf	DS1302_ReadByte@R_Byte,w
 11328  17DA  0008               	return
 11329  17DB                     __end_of_DS1302_ReadByte:	
 11330  007E                     btemp	set	126	;btemp
 11331  007E                     int$flags	set	126
 11332  007E                     wtemp	set	126
 11333  007E                     wtemp0	set	126
 11334  0080                     wtemp1	set	128
 11335  0082                     wtemp2	set	130
 11336  0084                     wtemp3	set	132
 11337  0086                     wtemp4	set	134
 11338  0088                     wtemp5	set	136
 11339  007F                     wtemp6	set	127
 11340  007E                     ttemp	set	126
 11341  007E                     ttemp0	set	126
 11342  0081                     ttemp1	set	129
 11343  0084                     ttemp2	set	132
 11344  0087                     ttemp3	set	135
 11345  007F                     ttemp4	set	127
 11346  007E                     ltemp	set	126
 11347  007E                     ltemp0	set	126
 11348  0082                     ltemp1	set	130
 11349  0086                     ltemp2	set	134
 11350  0080                     ltemp3	set	128


Data Sizes:
    Strings     153
    Constant    871
    Data        29
    BSS         227
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     49      65
    BANK1            80     17      76
    BANK2            80      0      78
    BANK3            80     18      71
    BANK4            80      0      50
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_29(CODE[5]), STR_18(CODE[4]), STR_17(CODE[6]), STR_16(CODE[5]), 
		 -> STR_15(CODE[5]), STR_14(CODE[5]), 

    strncmp@s1	PTR const unsigned char  size(1) Largest target is 50
		 -> NULL(NULL[0]), buf(BANK4[50]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_29(CODE[5]), STR_18(CODE[4]), STR_17(CODE[6]), STR_16(CODE[5]), 
		 -> STR_15(CODE[5]), STR_14(CODE[5]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_29(CODE[5]), STR_18(CODE[4]), STR_17(CODE[6]), STR_16(CODE[5]), 
		 -> STR_15(CODE[5]), STR_14(CODE[5]), 

    strchr@ptr	PTR const unsigned char  size(1) Largest target is 50
		 -> NULL(NULL[0]), buf(BANK4[50]), 

    sp__strchr	PTR unsigned char  size(1) Largest target is 50
		 -> NULL(NULL[0]), buf(BANK4[50]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_29(CODE[5]), STR_18(CODE[4]), STR_17(CODE[6]), STR_16(CODE[5]), 
		 -> STR_15(CODE[5]), STR_14(CODE[5]), 

    strstr@s1	PTR const unsigned char  size(1) Largest target is 50
		 -> NULL(NULL[0]), buf(BANK4[50]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_38(CODE[2]), STR_36(CODE[2]), STR_34(CODE[2]), STR_26(CODE[2]), 
		 -> STR_24(CODE[2]), STR_22(CODE[2]), STR_19(CODE[2]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 10
		 -> time_string(BANK1[10]), mth_string(BANK2[10]), date_string(BANK1[10]), month_string(BANK2[10]), 
		 -> date1_string(BANK2[10]), hour_string(BANK1[10]), min_string(BANK1[10]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 10
		 -> time_string(BANK1[10]), mth_string(BANK2[10]), date_string(BANK1[10]), month_string(BANK2[10]), 
		 -> date1_string(BANK2[10]), hour_string(BANK1[10]), min_string(BANK1[10]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_41(CODE[2]), STR_40(CODE[2]), STR_39(CODE[2]), STR_37(CODE[2]), 
		 -> STR_35(CODE[2]), dt_arr(BANK1[5]), hr_arr(BANK2[8]), min_arr(BANK1[8]), 
		 -> STR_27(CODE[2]), month_arr(BANK2[10]), STR_25(CODE[2]), date_arr(BANK2[10]), 
		 -> STR_23(CODE[2]), hour_arr(BANK2[10]), STR_21(CODE[2]), STR_20(CODE[2]), 
		 -> minute_arr(BANK2[10]), STR_13(CODE[4]), STR_12(CODE[4]), STR_11(CODE[4]), 
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
		 -> STR_6(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> STR_2(CODE[4]), STR_1(CODE[4]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 10
		 -> time_string(BANK1[10]), mth_string(BANK2[10]), date_string(BANK1[10]), month_string(BANK2[10]), 
		 -> date1_string(BANK2[10]), hour_string(BANK1[10]), min_string(BANK1[10]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 10
		 -> time_string(BANK1[10]), mth_string(BANK2[10]), date_string(BANK1[10]), month_string(BANK2[10]), 
		 -> date1_string(BANK2[10]), hour_string(BANK1[10]), min_string(BANK1[10]), 

    memmove@d1	PTR void  size(1) Largest target is 9
		 -> OLED_PutChar@bytes(BANK0[9]), 

    memmove@d	PTR unsigned char  size(1) Largest target is 9
		 -> OLED_PutChar@bytes(BANK0[9]), 

    memmove@s1	PTR const void  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    memmove@s	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 20
		 -> OLED_Write_Integer@s(BANK0[20]), dt_arr(BANK1[5]), hr_arr(BANK2[8]), min_arr(BANK1[8]), 
		 -> month_arr(BANK2[10]), date_arr(BANK2[10]), hour_arr(BANK2[10]), minute_arr(BANK2[10]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 20
		 -> OLED_Write_Integer@s(BANK0[20]), dt_arr(BANK1[5]), hr_arr(BANK2[8]), min_arr(BANK1[8]), 
		 -> month_arr(BANK2[10]), date_arr(BANK2[10]), hour_arr(BANK2[10]), minute_arr(BANK2[10]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 20
		 -> OLED_Write_Integer@s(BANK0[20]), dt_arr(BANK1[5]), hr_arr(BANK2[8]), min_arr(BANK1[8]), 
		 -> month_arr(BANK2[10]), date_arr(BANK2[10]), hour_arr(BANK2[10]), minute_arr(BANK2[10]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 20
		 -> OLED_Write_Integer@s(BANK0[20]), dt_arr(BANK1[5]), hr_arr(BANK2[8]), min_arr(BANK1[8]), 
		 -> month_arr(BANK2[10]), date_arr(BANK2[10]), hour_arr(BANK2[10]), minute_arr(BANK2[10]), 

    touchscreen_data@string2	PTR unsigned char  size(2) Largest target is 10
		 -> time_string(BANK1[10]), mth_string(BANK2[10]), date_string(BANK1[10]), month_string(BANK2[10]), 
		 -> date1_string(BANK2[10]), hour_string(BANK1[10]), min_string(BANK1[10]), 

    touchscreen_data@cmd	PTR unsigned char  size(2) Largest target is 11
		 -> screen_date(CODE[10]), screen_mth(CODE[11]), screen_time(CODE[10]), screen_month(CODE[8]), 
		 -> screen_date1(CODE[8]), screen_hour(CODE[8]), screen_mins(CODE[8]), 

    touchscreen_command@string	PTR unsigned char  size(2) Largest target is 13
		 -> STR_33(CODE[8]), STR_32(CODE[13]), STR_31(CODE[7]), STR_30(CODE[12]), 
		 -> STR_28(CODE[7]), 

    EUSART_Write_Text@text	PTR unsigned char  size(2) Largest target is 13
		 -> screen_date(CODE[10]), screen_mth(CODE[11]), screen_time(CODE[10]), time_string(BANK1[10]), 
		 -> mth_string(BANK2[10]), date_string(BANK1[10]), STR_33(CODE[8]), STR_32(CODE[13]), 
		 -> STR_31(CODE[7]), STR_30(CODE[12]), STR_28(CODE[7]), screen_month(CODE[8]), 
		 -> month_string(BANK2[10]), screen_date1(CODE[8]), date1_string(BANK2[10]), screen_hour(CODE[8]), 
		 -> hour_string(BANK1[10]), screen_mins(CODE[8]), min_string(BANK1[10]), 

    EUSART_Read_Text@Output	PTR unsigned char  size(1) Largest target is 50
		 -> buf(BANK4[50]), 

    sp__ftoa	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK3[17]), 

    OLED_Write_String@s	PTR unsigned char  size(2) Largest target is 20
		 -> ftoa@buf(BANK3[17]), STR_44(CODE[5]), STR_43(CODE[6]), STR_42(CODE[6]), 
		 -> OLED_Write_Integer@s(BANK0[20]), 

    sp__memmove	PTR void  size(1) Largest target is 9
		 -> OLED_PutChar@bytes(BANK0[9]), 

    OLED_PutChar@base	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    green@buf	PTR unsigned char  size(1) Largest target is 50
		 -> buf(BANK4[50]), 

    green@green1	PTR unsigned char  size(1) Largest target is 50
		 -> NULL(NULL[0]), buf(BANK4[50]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 10
		 -> time_string(BANK1[10]), mth_string(BANK2[10]), date_string(BANK1[10]), month_string(BANK2[10]), 
		 -> date1_string(BANK2[10]), hour_string(BANK1[10]), min_string(BANK1[10]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 10
		 -> time_string(BANK1[10]), mth_string(BANK2[10]), date_string(BANK1[10]), month_string(BANK2[10]), 
		 -> date1_string(BANK2[10]), hour_string(BANK1[10]), min_string(BANK1[10]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 20
		 -> OLED_Write_Integer@s(BANK0[20]), dt_arr(BANK1[5]), hr_arr(BANK2[8]), min_arr(BANK1[8]), 
		 -> month_arr(BANK2[10]), date_arr(BANK2[10]), hour_arr(BANK2[10]), minute_arr(BANK2[10]), 

    main@set1	PTR unsigned char  size(1) Largest target is 50
		 -> NULL(NULL[0]), buf(BANK4[50]), 

    main@month1	PTR unsigned char  size(1) Largest target is 50
		 -> NULL(NULL[0]), buf(BANK4[50]), 

    main@date3	PTR unsigned char  size(1) Largest target is 50
		 -> NULL(NULL[0]), buf(BANK4[50]), 

    main@min1	PTR unsigned char  size(1) Largest target is 50
		 -> NULL(NULL[0]), buf(BANK4[50]), 

    sp__strstr	PTR unsigned char  size(1) Largest target is 50
		 -> NULL(NULL[0]), buf(BANK4[50]), 

    main@hour1	PTR unsigned char  size(1) Largest target is 50
		 -> NULL(NULL[0]), buf(BANK4[50]), 

    months	PTR const unsigned char [13] size(2) Largest target is 4
		 -> STR_13(CODE[4]), STR_12(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), 
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[4]), 
		 -> STR_5(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    i1_touchscreen_data->i1_EUSART_Write_Text
    i1_EUSART_Write_Text->i1_EUSART_Write
    i1_itoa->i1_utoa
    i1_utoa->i1___lwdiv
    _get_dec->i1___bmul

Critical Paths under _main in BANK0

    _touchscreen_data->_EUSART_Write_Text
    _itoa->_utoa
    _utoa->___lwdiv
    _initMain->_OLED_Write_String
    _OLED_Write_String->_OLED_PutChar
    _OLED_Init->_OLED_Command
    _OLED_Clear->_OLED_PutChar
    _OLED_YX->_OLED_Command
    _OLED_Command->_Send_I2C_Data
    _OLED_PutChar->_memmove
    _EUSART_Initialize->___aldiv
    _DS1302_Initialize->_get_bcd
    _get_bcd->___awdiv
    _green->_strstr
    _touchscreen_command->_EUSART_Write_Text
    _EUSART_Write_Text->_EUSART_Write
    _strstr->_strncmp
    _strncmp->_strlen

Critical Paths under _isr in BANK0

    _isr->i1_itoa
    i1_itoa->i1_utoa

Critical Paths under _main in BANK1

    _main->_initMain
    _initMain->_OLED_Clear

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0   23771
                                              0 BANK3     18    18      0
                  _DS1302_Initialize
                   _EUSART_Read_Text
                              _green
                           _initMain
                               _itoa
                             _strcat
                             _strcpy
                             _strstr
                _touchscreen_command
                   _touchscreen_data
 ---------------------------------------------------------------------------------
 (1) _touchscreen_data                                     7     3      4    1149
                                             21 BANK0      7     3      4
                       _EUSART_Write
                  _EUSART_Write_Text
 ---------------------------------------------------------------------------------
 (1) _strcpy                                               6     2      4     685
                                             15 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _strcat                                               6     2      4    1733
                                             15 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _itoa                                                 8     2      6    2790
                                             33 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (2) _utoa                                                10     4      6    1467
                                             23 BANK0     10     4      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     362
                                             15 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     501
                                             15 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _initMain                                            13    13      0    9722
                                              4 BANK1     13    13      0
                  _DS1302_Initialize
                  _EUSART_Initialize
                           _I2C_Init
                         _OLED_Clear
                          _OLED_Init
                  _OLED_Write_String
                            _OLED_YX
                        _internal_16
 ---------------------------------------------------------------------------------
 (2) _internal_16                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OLED_Write_String                                    3     1      2    1996
                                             47 BANK0      2     0      2
                                              0 BANK1      1     1      0
                       _OLED_PutChar
 ---------------------------------------------------------------------------------
 (2) _OLED_Init                                            0     0      0     647
                       _OLED_Command
 ---------------------------------------------------------------------------------
 (2) _OLED_Clear                                           5     5      0    2674
                                             47 BANK0      1     1      0
                                              0 BANK1      4     4      0
                       _OLED_PutChar
                            _OLED_YX
 ---------------------------------------------------------------------------------
 (2) _OLED_YX                                              5     4      1     870
                                             20 BANK0      5     4      1
                       _OLED_Command
 ---------------------------------------------------------------------------------
 (3) _OLED_Command                                         3     3      0     647
                                             17 BANK0      3     3      0
                      _Send_I2C_Data
                  _Send_I2C_StartBit
                   _Send_I2C_StopBit
 ---------------------------------------------------------------------------------
 (3) _OLED_PutChar                                        20    20      0    1606
                                             27 BANK0     20    20      0
                      _Send_I2C_Data
                  _Send_I2C_StartBit
                   _Send_I2C_StopBit
                            _memmove
 ---------------------------------------------------------------------------------
 (4) _memmove                                             12     8      4     681
                                             15 BANK0     12     8      4
 ---------------------------------------------------------------------------------
 (4) _Send_I2C_StopBit                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Send_I2C_StartBit                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Send_I2C_Data                                        2     0      2     616
                                             15 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             2     2      0       0
                                             15 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                   14    10      4     993
                                             30 BANK0     14    10      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             15     7      8     705
                                             15 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (2) _DS1302_Initialize                                   15     9      6    2304
                                             30 BANK0     15     9      6
                       _DS1302_Reset
                   _DS1302_WriteByte
                            _get_bcd
 ---------------------------------------------------------------------------------
 (3) _get_bcd                                              6     6      0     967
                                             24 BANK0      6     6      0
                            ___awdiv
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               4     3      1     231
                                             15 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     575
                                             15 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (3) _DS1302_WriteByte                                     3     3      0     102
                                             15 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _DS1302_Reset                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _green                                                5     5      0    2425
                                             34 BANK0      5     5      0
                             _strstr
                _touchscreen_command
 ---------------------------------------------------------------------------------
 (1) _touchscreen_command                                  5     3      2     743
                                             21 BANK0      5     3      2
                       _EUSART_Write
                  _EUSART_Write_Text
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write_Text                                    5     3      2     356
                                             16 BANK0      5     3      2
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         1     1      0      31
                                             15 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _strstr                                               6     4      2    1587
                                             28 BANK0      6     4      2
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (2) _strncmp                                              7     3      4     352
                                             21 BANK0      7     3      4
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     195
                                             15 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _strchr                                               3     1      2     219
                                             15 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read_Text                                     9     7      2     225
                                             15 BANK0      7     5      2
                        _EUSART_Read
 ---------------------------------------------------------------------------------
 (2) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  3     3      0    2706
                                             12 BANK0      3     3      0
                    _DS1302_ReadByte
                            _get_dec
                     i1_DS1302_Reset
                 i1_DS1302_WriteByte
                             i1_itoa
                           i1_strcat
                           i1_strcpy
                 i1_touchscreen_data
 ---------------------------------------------------------------------------------
 (7) i1_touchscreen_data                                   7     3      4     386
                                              6 COMMON     7     3      4
                     i1_EUSART_Write
                i1_EUSART_Write_Text
 ---------------------------------------------------------------------------------
 (8) i1_EUSART_Write_Text                                  5     3      2     164
                                              1 COMMON     5     3      2
                     i1_EUSART_Write
 ---------------------------------------------------------------------------------
 (9) i1_EUSART_Write                                       1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) i1_strcpy                                             6     2      4     156
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (7) i1_strcat                                             6     2      4     368
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (7) i1_itoa                                               8     2      6    1446
                                              4 BANK0      8     2      6
                             i1_utoa
 ---------------------------------------------------------------------------------
 (8) i1_utoa                                              10     4      6     991
                                              8 COMMON     6     0      6
                                              0 BANK0      4     4      0
                          i1___lwdiv
                          i1___lwmod
 ---------------------------------------------------------------------------------
 (9) i1___lwmod                                            6     2      4     211
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (9) i1___lwdiv                                            8     4      4     266
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (7) i1_DS1302_WriteByte                                   3     3      0      69
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (7) i1_DS1302_Reset                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _get_dec                                              5     5      0     186
                                              4 COMMON     5     5      0
                           i1___bmul
 ---------------------------------------------------------------------------------
 (8) i1___bmul                                             4     3      1     118
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (7) _DS1302_ReadByte                                      4     4      0      95
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DS1302_Initialize
     _DS1302_Reset
     _DS1302_WriteByte
     _get_bcd
       ___awdiv
       ___bmul
   _EUSART_Read_Text
     _EUSART_Read
   _green
     _strstr
       _strchr
       _strlen
       _strncmp
         _strlen (ARG)
     _touchscreen_command
       _EUSART_Write
       _EUSART_Write_Text
         _EUSART_Write
   _initMain
     _DS1302_Initialize
       _DS1302_Reset
       _DS1302_WriteByte
       _get_bcd
         ___awdiv
         ___bmul
     _EUSART_Initialize
       ___aldiv
     _I2C_Init
     _OLED_Clear
       _OLED_PutChar
         _Send_I2C_Data
         _Send_I2C_StartBit
         _Send_I2C_StopBit
         _memmove
       _OLED_YX
         _OLED_Command
           _Send_I2C_Data
           _Send_I2C_StartBit
           _Send_I2C_StopBit
     _OLED_Init
       _OLED_Command
         _Send_I2C_Data
         _Send_I2C_StartBit
         _Send_I2C_StopBit
     _OLED_Write_String
       _OLED_PutChar
         _Send_I2C_Data
         _Send_I2C_StartBit
         _Send_I2C_StopBit
         _memmove
     _OLED_YX
       _OLED_Command
         _Send_I2C_Data
         _Send_I2C_StartBit
         _Send_I2C_StopBit
     _internal_16
   _itoa
     _utoa
       ___lwdiv
       ___lwmod
   _strcat
   _strcpy
   _strstr
     _strchr
     _strlen
     _strncmp
       _strlen (ARG)
   _touchscreen_command
     _EUSART_Write
     _EUSART_Write_Text
       _EUSART_Write
   _touchscreen_data
     _EUSART_Write
     _EUSART_Write_Text
       _EUSART_Write

 _isr (ROOT)
   _DS1302_ReadByte
   _get_dec
     i1___bmul
   i1_DS1302_Reset
   i1_DS1302_WriteByte
   i1_itoa
     i1_utoa
       i1___lwdiv
       i1___lwmod
   i1_strcat
   i1_strcpy
   i1_touchscreen_data
     i1_EUSART_Write
     i1_EUSART_Write_Text
       i1_EUSART_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     31      41       5       81.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     11      4C       7       95.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      4E       9       97.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50     12      47      11       88.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      32      13       62.5%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     162      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     162      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Thu Jul 04 14:25:54 2019

            ??i1_EUSART_Write 0070                             _d 00E9                             _m 00EA  
                           _x 00EB                             _y 00A2                ___bmul@product 0031  
                 __CFG_CP$OFF 0000                            l53 1600                            l71 15EF  
                          l77 15F7                  ___awdiv@sign 0035                            _on 005C  
          OLED_Write_String@s 004F                           l230 0788                           l224 06D5  
                         l380 15E5                           l373 07F2                           l569 0DF5  
                         l938 166B                           l794 0BFD                           _GIE 005F  
                         _RD0 0078                           _RD1 0079                           _RD2 007A  
                _DS1302_Reset 15CA                           _dy1 0053                           _dy2 0054  
                         _hr1 0055                           _hr2 0056                           _hr3 0057  
                         _mn1 005A                           _mn2 005B                           _buf 0220  
                         _yr1 005F                           _yr2 0060                           _isr 0004  
                __CFG_BORV$LO 0000                           wreg 0009                  __CFG_IESO$ON 0000  
            OLED_Command@temp 0033                  ?_EUSART_Read 0070                  __CFG_LVP$OFF 0000  
                        l3114 0C44                          l3220 0CF5                          l3134 1621  
                        l3118 0C5E                          l3160 0AAA                          l3312 0A04  
                        l3304 09E6                          l3402 0A30                          l3170 0AB2  
                        l3154 0A9F                          l3138 1627                          l3218 0CF1  
                        l3306 09F2                          l3330 092F                          l3404 0A44  
                        l3252 171A                          l3172 0ABE                          l3244 0D60  
                        l3316 0A0D                          l3182 0AD9                          l3238 0D41  
                        l3334 093B             DS1302_WriteByte@i 0031                          l3408 0A4E  
                        l3272 0E16                          l3264 0E06                          l3328 0923  
                        l3520 0BB4                          l3514 07FA                          l3346 1757  
                        l3362 0A88                          l3186 0AE1                          l3178 0AD0  
                        l3290 0E5D                          l3282 0E44                          l3274 0E24  
                        l3338 0944                          l3530 0BD5                          l3348 1763  
                        l3358 0A70                          l3366 0A52                          l3286 0E4F  
                        l3368 0A91                          l3378 1675                          l3474 09A4  
                        l3466 098A                          l3482 167F                          l3714 0818  
                        l3730 0885                          l3722 1701                          l3810 06E3  
                        l3396 0A15                          l3492 0EFA                          l3732 088D  
                        l3728 0879                          l3824 072F                          l3808 06D7  
                        l3760 05D2                          l3842 078A                          l3826 0730  
                        l3676 1737                          l3844 0796                          l3828 073C  
                        l3790 067C                          l3696 0CBB                          l3792 067D  
                        l3784 0658                          l3794 0689                          ?_isr 0070  
                        STR_1 05A5                          STR_2 05A9                          STR_3 0595  
                        STR_4 05B5                          STR_5 05B9                          STR_6 05C5  
                        STR_7 05AD                          STR_8 05A1                          STR_9 059D  
                        _BRGH 0CF2               __end_of_OLED_YX 08F0                          _CREN 0CEC  
                 ?_OLED_Clear 0070                          u3005 0D3F                          u3015 0D5E  
                        u3105 0E45                          u3215 0926                          u3065 0E19  
                        u3145 09E9                          u3235 0935                          u3085 0E25  
                        u3405 0E70                          u3165 09F3                          u3245 093C  
                        u3095 0E39                          u3415 0E87                          u3175 09FD  
                        u3185 0A05                          u3435 0EBC                          u3445 0ED3  
                        u3545 173D                          u2745 0C28                          u2755 0C3A  
                        u2855 0AB5                          u3807 0F64                          u3817 0F80  
                        u2875 0ABF                          u2955 0970                          u3827 0F91  
                        u2885 0AC9                          u2965 08D0                          u3837 0FF0  
                        u2895 0AD1                          u3847 1663                          u2975 08E5  
                        u3857 0C9C                          _SCS0 04C8                          u3867 0CB1  
                        u3787 08BE                          _SCS1 04C9                          u3877 0CC9  
                        u3797 0F53                          u3887 0CDE                          u3897 17AE  
                        _TMR0 0015                          _SPEN 0CEF                          _TXEN 0CF5  
                        _SYNC 0CF4                  __CFG_WRT$OFF 0000         ??i1_EUSART_Write_Text 0073  
                        _min1 0058                          _min2 0059                          _sec1 005D  
                        _sec2 005E                          _main 05CF                          _itoa 0802  
            __end_of_I2C_Init 1669                          fsr0h 0005                          fsr1h 0007  
                        fsr0l 0004                          indf0 0000                          indf1 0001  
                        fsr1l 0006                          btemp 007E                          _utoa 0BAF  
                        ltemp 007E                          start 018A                          ttemp 007E  
                        wtemp 007E             ___bmul@multiplier 0032            __size_of_OLED_Init 0064  
    i1DS1302_WriteByte@W_Byte 0071                         ??_isr 002C                 ?_EUSART_Write 0070  
             __end_of___aldiv 0E66                         ?_main 0070                         ?_itoa 0041  
             __end_of___awdiv 0AE6                         STR_10 05B1                         STR_11 05BD  
                       STR_20 0567                         STR_12 05C1                         STR_21 0541  
                       STR_13 0599                         STR_22 0541                         STR_14 058B  
                       STR_30 0543                         STR_23 0541                         STR_15 0590  
                       STR_31 0569                         STR_24 0541                         STR_40 0567  
                       STR_16 0581                         STR_32 0536                         STR_41 0541  
                       STR_25 0541                         STR_17 0576                         STR_33 055A  
               __CFG_WDTE$OFF 0000                         STR_34 0541                         STR_26 0541  
                       STR_18 05C9                         STR_42 0570                         STR_35 0541  
                       STR_27 0541                         STR_19 0541                         STR_36 0541  
                       STR_44 057C                         STR_28 0562                         STR_37 0541  
                       STR_29 0586                         STR_45 054F                         STR_38 0541  
                       STR_39 05CD             ?_touchscreen_data 0035                         ?_utoa 0037  
             ___awdiv@divisor 002F                         _IRCF0 04CB                         _IRCF1 04CC  
                       _IRCF2 04CD                         _IRCF3 04CE               __end_of___lwdiv 0A12  
                       i1l255 0185               __end_of___lwmod 0949                         i1l380 15DC  
                       i1l277 17C0                         i1l278 17D7                         i1l794 0B98  
             ___awdiv@counter 0034                         _SPBRG 019B                         _TRISD 008F  
                  i1itoa@base 0028         i1touchscreen_data@cmd 0076   __end_of_touchscreen_command 17B6  
          ??_touchscreen_data 0039                i1_DS1302_Reset 15C5                __CFG_FCMEN$OFF 0000  
             __end_of_get_bcd 0977               __end_of_get_dec 16AE            i1___lwmod@dividend 0072  
                       _date1 0051                         _date2 0052       touchscreen_data@string2 0037  
             __end_of_dpowers 01F7                         _green 0C7A               __end_of_memmove 0C7A  
                 green@green1 0046              __end_ofi1___bmul 161E                __CFG_BOREN$OFF 0000  
                       ltemp0 007E                         ltemp1 0082                         ltemp2 0086  
                       ltemp3 0080                         ttemp0 007E                         ttemp1 0081  
                       ttemp2 0084                         ttemp3 0087                         ttemp4 007F  
                       utoa@c 0040                         utoa@v 003E                         status 0003  
                       wtemp0 007E                         wtemp1 0080                         wtemp2 0082  
                       wtemp3 0084                         wtemp4 0086                         wtemp5 0088  
                       wtemp6 007F    __size_of_Send_I2C_StartBit 0008               __end_of_strncmp 0A94  
                ?_internal_16 0070            __size_ofi1___lwdiv 0034            __size_ofi1___lwmod 002C  
   i1touchscreen_data@string2 0078              __end_ofi1_strcat 084D              __end_ofi1_strcpy 16C8  
              __CFG_MCLRE$OFF 0000               __initialization 018C                  __end_of_main 07F0  
                __end_of_itoa 0827                  __end_of_utoa 0C14                ??_EUSART_Write 002F  
                  i1utoa@base 007C                __CFG_LPBOR$OFF 0000              __end_of_OledFont 04F7  
                  i1strcat@cp 0074           __size_of_OLED_Clear 0032                    i1strcat@to 0070  
 __size_ofi1_touchscreen_data 0027                        ??_main 01D5                        ??_itoa 0047  
                  i1strcpy@cp 0074                    i1strcpy@to 0070                        ??_utoa 003D  
      __end_ofi1_DS1302_Reset 15CA                __CFG_PLLEN$OFF 0000           DS1302_Initialize@hr 003F  
                   ??_OLED_YX 0035                   initMain@day 00E5                   initMain@min 00E3  
                 initMain@sec 00E2                        ?_green 0070              ___awdiv@dividend 0031  
              __CFG_ZCDDIS$ON 0000                        _ANSELD 018F             __end_of_OLED_Init 0B4A  
                      _RC1REG 0199                        i1l2360 09B1                        i1l2362 09BD  
                      i1l2372 09D8                        u201_25 09B4                        i1l2390 090E  
                      i1l2368 09CF                        i1l2384 08F6                        i1l2386 0902  
                      i1l2394 0917                        i1l2572 160F                        u210_25 0908  
                      i1l3550 0B4F                        i1l2576 1615                        i1l3560 0B70  
                      i1l2568 16CA                        i1l2860 0837                        u203_25 09BE  
                      u211_25 090F                        i1l2862 083F                        i1l3754 17F1  
                      i1l2858 082B                        i1l3914 0097                        i1l2868 16B2  
                      i1l3908 008C                        u204_25 09C8                        i1l3944 014C  
                      u205_25 09D0                        u208_25 08F9               _DS1302_ReadByte 17B6  
                      u247_25 169E                        u390_27 086D                 ?_OLED_Command 0070  
                      _TX1REG 019A                        _SPLLEN 04CF                        _SSPADD 0212  
                      _TRISD2 047A                        _TRISC6 0476                        _TRISC7 0477  
                      _SSPBUF 0211                        i1_itoa 17DB                        i1_utoa 0B4A  
                _date1_string 0120                __CFG_PWRTE$OFF 0000                 ?_OLED_PutChar 0070  
                      ___bmul 161E                     ??___aldiv 0037        __size_of_Send_I2C_Data 0009  
                   ??___awdiv 0033                __CFG_STVREN$ON 0000                     ??___lwdiv 0033  
                   ??___lwmod 0033                        _dt_arr 00D3              __end_of_initMain 1000  
                      _hr_arr 0166              ___awdiv@quotient 0036                        _months 01BB  
                   ??_get_bcd 0038                     ??_get_dec 0074                        main@hr 01E2  
                      _strcat 0874                        _strchr 1669                        _strcpy 16FC  
                      _strlen 1752                        _strstr 0A12               ?i1_DS1302_Reset 0070  
                      itoa@cp 0047             __end_ofi1___lwdiv 09DD             __end_ofi1___lwmod 091C  
                   ?_I2C_Init 0070                     ??_memmove 0033             ?_EUSART_Read_Text 002F  
   __size_of_DS1302_WriteByte 0013         Send_I2C_Data@databyte 002F            ??_EUSART_Read_Text 0031  
                   ??_strncmp 0039                ??_OLED_Command 0031          __size_of_EUSART_Read 000C  
     __end_of__initialization 01CB                ??_OLED_PutChar 003B           ___bmul@multiplicand 002F  
   __size_of_Send_I2C_StopBit 0008                __pcstackCOMMON 0070        DS1302_Initialize@date1 004A  
                __pidataBANK1 07FC                  __pidataBANK3 16E2         DS1302_ReadByte@R_Byte 0072  
               __end_of_green 0CE7        DS1302_Initialize@year1 004C                     ?i1___bmul 0070  
                  ??_I2C_Init 002F                _OPTION_REGbits 0095       __end_of_DS1302_ReadByte 17DB  
                   ?i1_strcat 0070                     ?i1_strcpy 0070              i1___bmul@product 0072  
               _Send_I2C_Data 15FB                       ??_green 0042                  ??_OLED_Clear 004F  
                  __pbssBANK0 0051                    __pbssBANK1 00A0                    __pbssBANK2 0120  
                  __pbssBANK3 01A0                    __pbssBANK4 0220          __end_of_EUSART_Write 15EB  
      EUSART_Read_Text@Output 0033          DS1302_Initialize@hr1 0048          DS1302_Initialize@day 0040  
        DS1302_Initialize@min 003E          DS1302_Initialize@sec 0045          DS1302_Initialize@mth 0042  
  __end_ofi1_DS1302_WriteByte 1643                       ?i1_itoa 0024                       ?i1_utoa 0078  
      EUSART_Read_Text@length 002F                    __pmaintext 05CF          __size_of_internal_16 0009  
                     ?___bmul 002F                  initMain@date 00E6                  initMain@year 00E8  
             __CFG_PPS1WAY$ON 0000                    __pintentry 0004                    ??i1___bmul 0071  
          __end_of_OLED_Clear 09A9                       ?_strcat 002F                       ?_strchr 002F  
                     ?_strcpy 002F                       ?_strlen 002F                       ?_strstr 003C  
      DS1302_WriteByte@W_Byte 0030                       _OLED_YX 08C5                    ??i1_strcat 0074  
              ?_Send_I2C_Data 002F                    ??i1_strcpy 0074   __end_ofi1_EUSART_Write_Text 16E2  
                     _PPSLOCK 0E0F                     ?_initMain 0070     __size_of_touchscreen_data 002A  
             __size_ofi1_itoa 0025                       i1utoa@c 0023                       i1utoa@v 0021  
             __size_ofi1_utoa 0065                       ___aldiv 0DE4               __size_of___bmul 0012  
                     ___awdiv 0A94           i1DS1302_WriteByte@i 0072                       ___lwdiv 09DD  
                     ___lwmod 091C          __end_of_OLED_Command 1793                       __ptext1 089B  
                     __ptext2 16FC                       __ptext3 0874                       __ptext4 0802  
                     __ptext5 0BAF                       __ptext6 091C                       __ptext7 09DD  
                     __ptext8 0F0E                       __ptext9 1604                       _get_bcd 0949  
                     _get_dec 1696               __size_of_strcat 0027               __size_of_strchr 0016  
             __size_of_strcpy 001B               __size_of_strlen 001F               __size_of_strstr 003E  
                     _dpowers 01CF             i1___lwdiv@divisor 0070       __size_ofi1_EUSART_Write 0008  
                __size_of_isr 0186                       _min_arr 00CB             i1___lwdiv@counter 0077  
                     _memmove 0C14                    _min_string 00B7              ___aldiv@dividend 0033  
        __end_of_OLED_PutChar 0D63              _DS1302_WriteByte 1643                       _mth_arr 01A0  
         i1___bmul@multiplier 0073              ?_DS1302_ReadByte 0070                       main@day 01E3  
                     main@min 01E1                       main@sec 01E0                       clrloop0 15D0  
                     _strncmp 0A50          end_of_initialization 01CB                       ftoa@buf 01AA  
                  _minute_arr 013E  __size_of_touchscreen_command 0023                    ??_initMain 00DC  
                     itoa@buf 0041                       init_ram 15D5                       itoa@val 0043  
                     initloop 15D6                     _OLED_Init 0AE6                    _screen_mth 04F7  
           _EUSART_Initialize 0E66                    _mth_string 015C              OLED_PutChar@base 004A  
            _Send_I2C_StopBit 15F3            ?_EUSART_Initialize 003E              ___aldiv@quotient 003A  
  __end_ofi1_touchscreen_data 0874                  __pstringtext 01CF              ??i1_DS1302_Reset 0070  
                     utoa@buf 0037            EUSART_Initialize@x 004A                       utoa@val 0039  
                     strlen@s 002F           ??_EUSART_Initialize 0042               ??_Send_I2C_Data 0031  
            __CFG_FOSC$INTOSC 0000                    get_dec@var 0078                     _TRISBbits 008D  
                   _TRISCbits 008E         __size_of_EUSART_Write 0008             __size_of_I2C_Init 0013  
                   i1___lwdiv 09A9                     i1___lwmod 08F0                     _RXPPSbits 0E24  
   __end_of_EUSART_Initialize 0F0E                    ?_OLED_Init 0070                    main@month1 01DE  
   __size_of_EUSART_Read_Text 001F                __end_ofi1_itoa 1800                __end_ofi1_utoa 0BAF  
              __end_of___bmul 1630                     i1itoa@buf 0024                     i1itoa@val 0026  
                _EUSART_Write 15E3             i1___lwmod@divisor 0070             i1___lwmod@counter 0075  
               ?_DS1302_Reset 0070                __end_of_strcat 089B                __end_of_strchr 167F  
           __size_ofi1___bmul 0011                __end_of_strcpy 1717                __end_of_strlen 1771  
              __end_of_strstr 0A50        DS1302_ReadByte@TmpByte 0071           start_initialization 018C  
                 __end_of_isr 018A                 ??_EUSART_Read 002F                    ?i1___lwdiv 0070  
                  ?i1___lwmod 0070                     i1utoa@buf 0078                     i1utoa@val 007A  
           __size_ofi1_strcat 0026             __size_ofi1_strcpy 001A              _touchscreen_data 089B  
                  initMain@hr 00E4             _EUSART_Write_Text 1717                      ??i1_itoa 007E  
        __end_of_screen_date1 051E                      ??i1_utoa 0020             _OLED_Write_String 167F  
          ?_EUSART_Write_Text 0030          __end_of_screen_month 0536                  i1strcat@from 0072  
          ?_OLED_Write_String 004F         __size_of_OLED_Command 0022                      ??___bmul 0030  
                  OLED_YX@Row 0038                   __pdataBANK1 00E9                   __pdataBANK3 01BB  
         ??_EUSART_Write_Text 0032            i1_DS1302_WriteByte 1630                  i1strcpy@from 0072  
       __size_of_OLED_PutChar 007C           ??_OLED_Write_String 00D8                ??_DS1302_Reset 002F  
                    ??_strcat 0033                      ??_strchr 0031                      ??_strcpy 0033  
                    ??_strlen 0031                      ??_strstr 003E                i1_EUSART_Write 15DB  
         ?i1_DS1302_WriteByte 0070           touchscreen_data@cmd 0035                     ___latbits 0002  
                    ?_OLED_YX 0034                 __pcstackBANK0 0020                 __pcstackBANK1 00D8  
               __pcstackBANK3 01D5         DS1302_Initialize@day1 0049         DS1302_Initialize@date 0041  
       DS1302_Initialize@min1 0047         DS1302_Initialize@sec1 0046         DS1302_Initialize@mth1 004B  
       DS1302_Initialize@year 0043     __end_of_EUSART_Write_Text 1733    __size_of_EUSART_Initialize 00A8  
                _OLED_Command 1771     __end_of_OLED_Write_String 1696         EUSART_Read_Text@i_522 0034  
         __end_of_EUSART_Read 07FC                   _date_string 00A3                 ??_internal_16 002F  
                 ??_OLED_Init 0034             __size_of_initMain 00F2          ??i1_DS1302_WriteByte 0070  
            ___lwdiv@dividend 0031      __end_of_DS1302_WriteByte 1656                  _OLED_PutChar 0CE7  
                    ?___aldiv 002F                      ?___awdiv 002F                      ?___lwdiv 002F  
                    ?___lwmod 002F                 initMain@month 00E7           _touchscreen_command 1793  
   EUSART_Initialize@baudrate 003E        __end_ofi1_EUSART_Write 15E3                      ?_get_bcd 0070  
                    ?_get_dec 0070                      _I2C_Init 1656                      ?_memmove 002F  
    __end_of_Send_I2C_StopBit 15FB              ___lwdiv@quotient 0035                   ??i1___lwdiv 0074  
                 ??i1___lwmod 0074                __size_of_green 006D                      ?_strncmp 0035  
        i1EUSART_Write@txData 0070          ?_touchscreen_command 0035               ___aldiv@divisor 002F  
             ___aldiv@counter 0038  __size_ofi1_EUSART_Write_Text 001A                     clear_ram0 15CF  
            _EUSART_Read_Text 1733          i1EUSART_Write_Text@i 0074         i1___bmul@multiplicand 0070  
                   _month_arr 0148                      _PIR1bits 0011             _DS1302_Initialize 0D63  
         __end_of_internal_16 160D            ?_DS1302_Initialize 003E               ?i1_EUSART_Write 0070  
                    i1___bmul 160D                     main@date3 01DD           ??_DS1302_Initialize 0044  
                   main@hour1 01DB                     main@month 01E5            i1_touchscreen_data 084D  
                    i1_strcat 0827                      i1_strcpy 16AE              __size_of_OLED_YX 002B  
                 _EUSART_Read 07F0                      i1itoa@cp 002A         ??_touchscreen_command 0037  
  __size_of_EUSART_Write_Text 001C           ?i1_touchscreen_data 0076      __size_of_DS1302_ReadByte 0025  
  __size_of_OLED_Write_String 0017                      _OledFont 01F7          __end_of_DS1302_Reset 15CF  
   __end_of_DS1302_Initialize 0DE4           __end_of_screen_date 050C           __end_of_screen_hour 0526  
         __end_of_screen_mins 052E           __end_of_screen_time 0516                     memmove@d1 0037  
                   memmove@s1 002F              __size_of___aldiv 0082              __size_of___awdiv 0052  
            __size_of___lwdiv 0035              __size_of___lwmod 002D          ??i1_touchscreen_data 007A  
    __end_of_touchscreen_data 08C5                    _ANSELBbits 018D                    _ANSELCbits 018E  
     i1EUSART_Write_Text@text 0071              __size_of_get_bcd 002E              __size_of_get_dec 0018  
                _screen_date1 0516                    strcat@from 0031                      _date_arr 012A  
            __size_of_memmove 0066                  _screen_month 052E               ___lwdiv@divisor 002F  
       __end_of_Send_I2C_Data 1604               ___lwdiv@counter 0034                      __ptext10 167F  
                    __ptext11 0AE6                      __ptext20 1656                      __ptext12 0977  
                    __ptext21 0E66                      __ptext13 08C5                      __ptext30 1793  
                    __ptext22 0DE4                      __ptext14 1771                      __ptext31 1717  
                    __ptext23 0D63                      __ptext15 0CE7                      __ptext40 084D  
                    __ptext32 15E3                      __ptext24 0949                      __ptext16 0C14  
                    __ptext41 16C8                      __ptext33 0A12                      __ptext25 161E  
                    __ptext17 15F3                      __ptext50 15C5                      __ptext42 15DB  
                    __ptext34 0A50                      __ptext26 0A94                      __ptext18 15EB  
                    __ptext51 1696                      __ptext43 16AE                      __ptext35 1752  
                    __ptext27 1643                      __ptext19 15FB                      __ptext52 160D  
                    __ptext44 0827                      __ptext36 1669                      __ptext28 15CA  
                    __ptext53 17B6                      __ptext45 17DB                      __ptext37 1733  
                    __ptext29 0C7A                      __ptext46 0B4A                      __ptext38 07F0  
                    __ptext47 08F0                      __ptext48 09A9                      __ptext49 1630  
            __size_of_strncmp 0044            i1___lwdiv@dividend 0072                    strcpy@from 0031  
                    _initMain 0F0E                 __size_of_main 0221                 _SSPDATPPSbits 0E21  
               __size_of_itoa 0025                 __size_of_utoa 0065                 OLED_Clear@col 00DA  
                    _hour_arr 0134                    strncmp@len 0037                   _internal_16 1604  
               OLED_Clear@row 00D8                 OLED_YX@Column 0034                    _RB2PPSbits 0E9A  
                _month_string 0152                OLED_PutChar@ch 004C                    _RC1STAbits 019D  
                  _RC4PPSbits 0EA4                 _SSPCLKPPSbits 0E20                      int$flags 007E  
                 _hour_string 00AD                    _RC5PPSbits 0EA5                      main@date 01E4  
                    main@min1 01DC                      main@set1 01DF                      main@year 01E6  
            DS1302_ReadByte@i 0073            i1___lwdiv@quotient 0075                      green@buf 0045  
                  _INTCONbits 000B                      isr@count 00A0            __end_of_screen_mth 0502  
     __size_ofi1_DS1302_Reset 0005                      itoa@base 0045                      memmove@d 003A  
                    memmove@n 0031                      memmove@s 0038                      intlevel1 0000  
                  _OLED_Clear 0977                   _screen_date 0502                   _screen_hour 051E  
                 _screen_mins 0526                   _screen_time 050C                     strchr@chr 002F  
            ___lwmod@dividend 0031                     strchr@ptr 0031             __CFG_CLKOUTEN$OFF 0000  
                 _PPSLOCKbits 0E0F    __size_of_DS1302_Initialize 0081                     strncmp@s1 003B  
                   strncmp@s2 0035             _Send_I2C_StartBit 15EB             OLED_PutChar@bytes 0041  
               OLED_PutChar@i 004D             ?_DS1302_WriteByte 0070            ?_Send_I2C_StartBit 0070  
           ??_DS1302_ReadByte 0070            ??_DS1302_WriteByte 002F                      utoa@base 003B  
         ??_Send_I2C_StartBit 002F           i1_EUSART_Write_Text 16C8                      strcat@cp 0033  
                    strcat@to 002F               ___lwmod@divisor 002F      __end_of_EUSART_Read_Text 1752  
                    strcpy@cp 0033                      strlen@cp 0033                      strcpy@to 002F  
             ___lwmod@counter 0034                   _time_string 00C1         EUSART_Write_Text@text 0030  
                ___aldiv@sign 0039                   _SSPCON2bits 0216     touchscreen_command@string 0035  
                    strstr@s1 0041                      strstr@s2 003C             ?_Send_I2C_StopBit 0070  
       __size_of_DS1302_Reset 0005            EUSART_Write@txData 002F            ??_Send_I2C_StopBit 002F  
        ?i1_EUSART_Write_Text 0071     __end_of_Send_I2C_StartBit 15F3                   get_bcd@data 003C  
                 get_bcd@nibh 003D                   get_bcd@nibl 003B                    _SSPCONbits 0215  
          EUSART_Write_Text@i 0033                   get_dec@var2 0077   __size_ofi1_DS1302_WriteByte 0013  
