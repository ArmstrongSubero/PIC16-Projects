

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Thu Nov 10 12:48:25 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F1717
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	dabs	1,0x7E,2
    29  0000                     	;# 
    30  0001                     	;# 
    31  0002                     	;# 
    32  0003                     	;# 
    33  0004                     	;# 
    34  0005                     	;# 
    35  0006                     	;# 
    36  0007                     	;# 
    37  0008                     	;# 
    38  0009                     	;# 
    39  000A                     	;# 
    40  000B                     	;# 
    41  000C                     	;# 
    42  000D                     	;# 
    43  000E                     	;# 
    44  000F                     	;# 
    45  0010                     	;# 
    46  0011                     	;# 
    47  0012                     	;# 
    48  0013                     	;# 
    49  0015                     	;# 
    50  0016                     	;# 
    51  0016                     	;# 
    52  0017                     	;# 
    53  0018                     	;# 
    54  0019                     	;# 
    55  001A                     	;# 
    56  001B                     	;# 
    57  001C                     	;# 
    58  008C                     	;# 
    59  008D                     	;# 
    60  008E                     	;# 
    61  008F                     	;# 
    62  0090                     	;# 
    63  0091                     	;# 
    64  0092                     	;# 
    65  0093                     	;# 
    66  0095                     	;# 
    67  0096                     	;# 
    68  0097                     	;# 
    69  0098                     	;# 
    70  0099                     	;# 
    71  009A                     	;# 
    72  009B                     	;# 
    73  009B                     	;# 
    74  009C                     	;# 
    75  009D                     	;# 
    76  009E                     	;# 
    77  009F                     	;# 
    78  010C                     	;# 
    79  010D                     	;# 
    80  010E                     	;# 
    81  010F                     	;# 
    82  0110                     	;# 
    83  0111                     	;# 
    84  0112                     	;# 
    85  0113                     	;# 
    86  0114                     	;# 
    87  0115                     	;# 
    88  0116                     	;# 
    89  0117                     	;# 
    90  0118                     	;# 
    91  0119                     	;# 
    92  011A                     	;# 
    93  011B                     	;# 
    94  011B                     	;# 
    95  011C                     	;# 
    96  018C                     	;# 
    97  018D                     	;# 
    98  018E                     	;# 
    99  018F                     	;# 
   100  0190                     	;# 
   101  0191                     	;# 
   102  0191                     	;# 
   103  0192                     	;# 
   104  0193                     	;# 
   105  0193                     	;# 
   106  0194                     	;# 
   107  0195                     	;# 
   108  0196                     	;# 
   109  0197                     	;# 
   110  0199                     	;# 
   111  0199                     	;# 
   112  0199                     	;# 
   113  019A                     	;# 
   114  019A                     	;# 
   115  019A                     	;# 
   116  019B                     	;# 
   117  019B                     	;# 
   118  019B                     	;# 
   119  019B                     	;# 
   120  019B                     	;# 
   121  019C                     	;# 
   122  019C                     	;# 
   123  019C                     	;# 
   124  019D                     	;# 
   125  019D                     	;# 
   126  019D                     	;# 
   127  019E                     	;# 
   128  019E                     	;# 
   129  019E                     	;# 
   130  019F                     	;# 
   131  019F                     	;# 
   132  019F                     	;# 
   133  019F                     	;# 
   134  019F                     	;# 
   135  020C                     	;# 
   136  020D                     	;# 
   137  020E                     	;# 
   138  020F                     	;# 
   139  0210                     	;# 
   140  0211                     	;# 
   141  0211                     	;# 
   142  0212                     	;# 
   143  0212                     	;# 
   144  0213                     	;# 
   145  0213                     	;# 
   146  0214                     	;# 
   147  0214                     	;# 
   148  0215                     	;# 
   149  0215                     	;# 
   150  0215                     	;# 
   151  0215                     	;# 
   152  0216                     	;# 
   153  0216                     	;# 
   154  0217                     	;# 
   155  0217                     	;# 
   156  028C                     	;# 
   157  028D                     	;# 
   158  028E                     	;# 
   159  028F                     	;# 
   160  0290                     	;# 
   161  0291                     	;# 
   162  0291                     	;# 
   163  0292                     	;# 
   164  0293                     	;# 
   165  0293                     	;# 
   166  0298                     	;# 
   167  0298                     	;# 
   168  0299                     	;# 
   169  029A                     	;# 
   170  029A                     	;# 
   171  029E                     	;# 
   172  030C                     	;# 
   173  030D                     	;# 
   174  030E                     	;# 
   175  030F                     	;# 
   176  0310                     	;# 
   177  038C                     	;# 
   178  038D                     	;# 
   179  038E                     	;# 
   180  038F                     	;# 
   181  0390                     	;# 
   182  0391                     	;# 
   183  0392                     	;# 
   184  0393                     	;# 
   185  0394                     	;# 
   186  0395                     	;# 
   187  0396                     	;# 
   188  0397                     	;# 
   189  0398                     	;# 
   190  0399                     	;# 
   191  039D                     	;# 
   192  039E                     	;# 
   193  039F                     	;# 
   194  0415                     	;# 
   195  0416                     	;# 
   196  0417                     	;# 
   197  041C                     	;# 
   198  041D                     	;# 
   199  041E                     	;# 
   200  0498                     	;# 
   201  0498                     	;# 
   202  0499                     	;# 
   203  049A                     	;# 
   204  049B                     	;# 
   205  049B                     	;# 
   206  049C                     	;# 
   207  049D                     	;# 
   208  049E                     	;# 
   209  049F                     	;# 
   210  0511                     	;# 
   211  0515                     	;# 
   212  0617                     	;# 
   213  0618                     	;# 
   214  0619                     	;# 
   215  0619                     	;# 
   216  061A                     	;# 
   217  061B                     	;# 
   218  061C                     	;# 
   219  061C                     	;# 
   220  0691                     	;# 
   221  0692                     	;# 
   222  0693                     	;# 
   223  0694                     	;# 
   224  0695                     	;# 
   225  0696                     	;# 
   226  0697                     	;# 
   227  0698                     	;# 
   228  0699                     	;# 
   229  069A                     	;# 
   230  069B                     	;# 
   231  069C                     	;# 
   232  069D                     	;# 
   233  069E                     	;# 
   234  069F                     	;# 
   235  0E0F                     	;# 
   236  0E10                     	;# 
   237  0E11                     	;# 
   238  0E12                     	;# 
   239  0E13                     	;# 
   240  0E14                     	;# 
   241  0E15                     	;# 
   242  0E17                     	;# 
   243  0E20                     	;# 
   244  0E21                     	;# 
   245  0E22                     	;# 
   246  0E24                     	;# 
   247  0E25                     	;# 
   248  0E28                     	;# 
   249  0E29                     	;# 
   250  0E2A                     	;# 
   251  0E2B                     	;# 
   252  0E90                     	;# 
   253  0E91                     	;# 
   254  0E92                     	;# 
   255  0E93                     	;# 
   256  0E94                     	;# 
   257  0E95                     	;# 
   258  0E96                     	;# 
   259  0E97                     	;# 
   260  0E98                     	;# 
   261  0E99                     	;# 
   262  0E9A                     	;# 
   263  0E9B                     	;# 
   264  0E9C                     	;# 
   265  0E9D                     	;# 
   266  0E9E                     	;# 
   267  0E9F                     	;# 
   268  0EA0                     	;# 
   269  0EA1                     	;# 
   270  0EA2                     	;# 
   271  0EA3                     	;# 
   272  0EA4                     	;# 
   273  0EA5                     	;# 
   274  0EA6                     	;# 
   275  0EA7                     	;# 
   276  0EA8                     	;# 
   277  0EA9                     	;# 
   278  0EAA                     	;# 
   279  0EAB                     	;# 
   280  0EAC                     	;# 
   281  0EAD                     	;# 
   282  0EAE                     	;# 
   283  0EAF                     	;# 
   284  0EB0                     	;# 
   285  0EB1                     	;# 
   286  0EB2                     	;# 
   287  0F0F                     	;# 
   288  0F10                     	;# 
   289  0F11                     	;# 
   290  0F12                     	;# 
   291  0F13                     	;# 
   292  0F14                     	;# 
   293  0F15                     	;# 
   294  0F16                     	;# 
   295  0F17                     	;# 
   296  0F18                     	;# 
   297  0F19                     	;# 
   298  0F1A                     	;# 
   299  0F1B                     	;# 
   300  0F1C                     	;# 
   301  0F1D                     	;# 
   302  0F1E                     	;# 
   303  0F1F                     	;# 
   304  0F20                     	;# 
   305  0F21                     	;# 
   306  0F22                     	;# 
   307  0F23                     	;# 
   308  0F24                     	;# 
   309  0F25                     	;# 
   310  0F26                     	;# 
   311  0F27                     	;# 
   312  0F28                     	;# 
   313  0F29                     	;# 
   314  0F2A                     	;# 
   315  0F2B                     	;# 
   316  0F2C                     	;# 
   317  0F2D                     	;# 
   318  0F2E                     	;# 
   319  0F2F                     	;# 
   320  0F30                     	;# 
   321  0F31                     	;# 
   322  0F32                     	;# 
   323  0F33                     	;# 
   324  0F34                     	;# 
   325  0F35                     	;# 
   326  0F36                     	;# 
   327  0F37                     	;# 
   328  0FE4                     	;# 
   329  0FE5                     	;# 
   330  0FE6                     	;# 
   331  0FE7                     	;# 
   332  0FE8                     	;# 
   333  0FE9                     	;# 
   334  0FEA                     	;# 
   335  0FEB                     	;# 
   336  0FED                     	;# 
   337  0FEE                     	;# 
   338  0FEF                     	;# 
   339  0000                     	;# 
   340  0001                     	;# 
   341  0002                     	;# 
   342  0003                     	;# 
   343  0004                     	;# 
   344  0005                     	;# 
   345  0006                     	;# 
   346  0007                     	;# 
   347  0008                     	;# 
   348  0009                     	;# 
   349  000A                     	;# 
   350  000B                     	;# 
   351  000C                     	;# 
   352  000D                     	;# 
   353  000E                     	;# 
   354  000F                     	;# 
   355  0010                     	;# 
   356  0011                     	;# 
   357  0012                     	;# 
   358  0013                     	;# 
   359  0015                     	;# 
   360  0016                     	;# 
   361  0016                     	;# 
   362  0017                     	;# 
   363  0018                     	;# 
   364  0019                     	;# 
   365  001A                     	;# 
   366  001B                     	;# 
   367  001C                     	;# 
   368  008C                     	;# 
   369  008D                     	;# 
   370  008E                     	;# 
   371  008F                     	;# 
   372  0090                     	;# 
   373  0091                     	;# 
   374  0092                     	;# 
   375  0093                     	;# 
   376  0095                     	;# 
   377  0096                     	;# 
   378  0097                     	;# 
   379  0098                     	;# 
   380  0099                     	;# 
   381  009A                     	;# 
   382  009B                     	;# 
   383  009B                     	;# 
   384  009C                     	;# 
   385  009D                     	;# 
   386  009E                     	;# 
   387  009F                     	;# 
   388  010C                     	;# 
   389  010D                     	;# 
   390  010E                     	;# 
   391  010F                     	;# 
   392  0110                     	;# 
   393  0111                     	;# 
   394  0112                     	;# 
   395  0113                     	;# 
   396  0114                     	;# 
   397  0115                     	;# 
   398  0116                     	;# 
   399  0117                     	;# 
   400  0118                     	;# 
   401  0119                     	;# 
   402  011A                     	;# 
   403  011B                     	;# 
   404  011B                     	;# 
   405  011C                     	;# 
   406  018C                     	;# 
   407  018D                     	;# 
   408  018E                     	;# 
   409  018F                     	;# 
   410  0190                     	;# 
   411  0191                     	;# 
   412  0191                     	;# 
   413  0192                     	;# 
   414  0193                     	;# 
   415  0193                     	;# 
   416  0194                     	;# 
   417  0195                     	;# 
   418  0196                     	;# 
   419  0197                     	;# 
   420  0199                     	;# 
   421  0199                     	;# 
   422  0199                     	;# 
   423  019A                     	;# 
   424  019A                     	;# 
   425  019A                     	;# 
   426  019B                     	;# 
   427  019B                     	;# 
   428  019B                     	;# 
   429  019B                     	;# 
   430  019B                     	;# 
   431  019C                     	;# 
   432  019C                     	;# 
   433  019C                     	;# 
   434  019D                     	;# 
   435  019D                     	;# 
   436  019D                     	;# 
   437  019E                     	;# 
   438  019E                     	;# 
   439  019E                     	;# 
   440  019F                     	;# 
   441  019F                     	;# 
   442  019F                     	;# 
   443  019F                     	;# 
   444  019F                     	;# 
   445  020C                     	;# 
   446  020D                     	;# 
   447  020E                     	;# 
   448  020F                     	;# 
   449  0210                     	;# 
   450  0211                     	;# 
   451  0211                     	;# 
   452  0212                     	;# 
   453  0212                     	;# 
   454  0213                     	;# 
   455  0213                     	;# 
   456  0214                     	;# 
   457  0214                     	;# 
   458  0215                     	;# 
   459  0215                     	;# 
   460  0215                     	;# 
   461  0215                     	;# 
   462  0216                     	;# 
   463  0216                     	;# 
   464  0217                     	;# 
   465  0217                     	;# 
   466  028C                     	;# 
   467  028D                     	;# 
   468  028E                     	;# 
   469  028F                     	;# 
   470  0290                     	;# 
   471  0291                     	;# 
   472  0291                     	;# 
   473  0292                     	;# 
   474  0293                     	;# 
   475  0293                     	;# 
   476  0298                     	;# 
   477  0298                     	;# 
   478  0299                     	;# 
   479  029A                     	;# 
   480  029A                     	;# 
   481  029E                     	;# 
   482  030C                     	;# 
   483  030D                     	;# 
   484  030E                     	;# 
   485  030F                     	;# 
   486  0310                     	;# 
   487  038C                     	;# 
   488  038D                     	;# 
   489  038E                     	;# 
   490  038F                     	;# 
   491  0390                     	;# 
   492  0391                     	;# 
   493  0392                     	;# 
   494  0393                     	;# 
   495  0394                     	;# 
   496  0395                     	;# 
   497  0396                     	;# 
   498  0397                     	;# 
   499  0398                     	;# 
   500  0399                     	;# 
   501  039D                     	;# 
   502  039E                     	;# 
   503  039F                     	;# 
   504  0415                     	;# 
   505  0416                     	;# 
   506  0417                     	;# 
   507  041C                     	;# 
   508  041D                     	;# 
   509  041E                     	;# 
   510  0498                     	;# 
   511  0498                     	;# 
   512  0499                     	;# 
   513  049A                     	;# 
   514  049B                     	;# 
   515  049B                     	;# 
   516  049C                     	;# 
   517  049D                     	;# 
   518  049E                     	;# 
   519  049F                     	;# 
   520  0511                     	;# 
   521  0515                     	;# 
   522  0617                     	;# 
   523  0618                     	;# 
   524  0619                     	;# 
   525  0619                     	;# 
   526  061A                     	;# 
   527  061B                     	;# 
   528  061C                     	;# 
   529  061C                     	;# 
   530  0691                     	;# 
   531  0692                     	;# 
   532  0693                     	;# 
   533  0694                     	;# 
   534  0695                     	;# 
   535  0696                     	;# 
   536  0697                     	;# 
   537  0698                     	;# 
   538  0699                     	;# 
   539  069A                     	;# 
   540  069B                     	;# 
   541  069C                     	;# 
   542  069D                     	;# 
   543  069E                     	;# 
   544  069F                     	;# 
   545  0E0F                     	;# 
   546  0E10                     	;# 
   547  0E11                     	;# 
   548  0E12                     	;# 
   549  0E13                     	;# 
   550  0E14                     	;# 
   551  0E15                     	;# 
   552  0E17                     	;# 
   553  0E20                     	;# 
   554  0E21                     	;# 
   555  0E22                     	;# 
   556  0E24                     	;# 
   557  0E25                     	;# 
   558  0E28                     	;# 
   559  0E29                     	;# 
   560  0E2A                     	;# 
   561  0E2B                     	;# 
   562  0E90                     	;# 
   563  0E91                     	;# 
   564  0E92                     	;# 
   565  0E93                     	;# 
   566  0E94                     	;# 
   567  0E95                     	;# 
   568  0E96                     	;# 
   569  0E97                     	;# 
   570  0E98                     	;# 
   571  0E99                     	;# 
   572  0E9A                     	;# 
   573  0E9B                     	;# 
   574  0E9C                     	;# 
   575  0E9D                     	;# 
   576  0E9E                     	;# 
   577  0E9F                     	;# 
   578  0EA0                     	;# 
   579  0EA1                     	;# 
   580  0EA2                     	;# 
   581  0EA3                     	;# 
   582  0EA4                     	;# 
   583  0EA5                     	;# 
   584  0EA6                     	;# 
   585  0EA7                     	;# 
   586  0EA8                     	;# 
   587  0EA9                     	;# 
   588  0EAA                     	;# 
   589  0EAB                     	;# 
   590  0EAC                     	;# 
   591  0EAD                     	;# 
   592  0EAE                     	;# 
   593  0EAF                     	;# 
   594  0EB0                     	;# 
   595  0EB1                     	;# 
   596  0EB2                     	;# 
   597  0F0F                     	;# 
   598  0F10                     	;# 
   599  0F11                     	;# 
   600  0F12                     	;# 
   601  0F13                     	;# 
   602  0F14                     	;# 
   603  0F15                     	;# 
   604  0F16                     	;# 
   605  0F17                     	;# 
   606  0F18                     	;# 
   607  0F19                     	;# 
   608  0F1A                     	;# 
   609  0F1B                     	;# 
   610  0F1C                     	;# 
   611  0F1D                     	;# 
   612  0F1E                     	;# 
   613  0F1F                     	;# 
   614  0F20                     	;# 
   615  0F21                     	;# 
   616  0F22                     	;# 
   617  0F23                     	;# 
   618  0F24                     	;# 
   619  0F25                     	;# 
   620  0F26                     	;# 
   621  0F27                     	;# 
   622  0F28                     	;# 
   623  0F29                     	;# 
   624  0F2A                     	;# 
   625  0F2B                     	;# 
   626  0F2C                     	;# 
   627  0F2D                     	;# 
   628  0F2E                     	;# 
   629  0F2F                     	;# 
   630  0F30                     	;# 
   631  0F31                     	;# 
   632  0F32                     	;# 
   633  0F33                     	;# 
   634  0F34                     	;# 
   635  0F35                     	;# 
   636  0F36                     	;# 
   637  0F37                     	;# 
   638  0FE4                     	;# 
   639  0FE5                     	;# 
   640  0FE6                     	;# 
   641  0FE7                     	;# 
   642  0FE8                     	;# 
   643  0FE9                     	;# 
   644  0FEA                     	;# 
   645  0FEB                     	;# 
   646  0FED                     	;# 
   647  0FEE                     	;# 
   648  0FEF                     	;# 
   649  0000                     	;# 
   650  0001                     	;# 
   651  0002                     	;# 
   652  0003                     	;# 
   653  0004                     	;# 
   654  0005                     	;# 
   655  0006                     	;# 
   656  0007                     	;# 
   657  0008                     	;# 
   658  0009                     	;# 
   659  000A                     	;# 
   660  000B                     	;# 
   661  000C                     	;# 
   662  000D                     	;# 
   663  000E                     	;# 
   664  000F                     	;# 
   665  0010                     	;# 
   666  0011                     	;# 
   667  0012                     	;# 
   668  0013                     	;# 
   669  0015                     	;# 
   670  0016                     	;# 
   671  0016                     	;# 
   672  0017                     	;# 
   673  0018                     	;# 
   674  0019                     	;# 
   675  001A                     	;# 
   676  001B                     	;# 
   677  001C                     	;# 
   678  008C                     	;# 
   679  008D                     	;# 
   680  008E                     	;# 
   681  008F                     	;# 
   682  0090                     	;# 
   683  0091                     	;# 
   684  0092                     	;# 
   685  0093                     	;# 
   686  0095                     	;# 
   687  0096                     	;# 
   688  0097                     	;# 
   689  0098                     	;# 
   690  0099                     	;# 
   691  009A                     	;# 
   692  009B                     	;# 
   693  009B                     	;# 
   694  009C                     	;# 
   695  009D                     	;# 
   696  009E                     	;# 
   697  009F                     	;# 
   698  010C                     	;# 
   699  010D                     	;# 
   700  010E                     	;# 
   701  010F                     	;# 
   702  0110                     	;# 
   703  0111                     	;# 
   704  0112                     	;# 
   705  0113                     	;# 
   706  0114                     	;# 
   707  0115                     	;# 
   708  0116                     	;# 
   709  0117                     	;# 
   710  0118                     	;# 
   711  0119                     	;# 
   712  011A                     	;# 
   713  011B                     	;# 
   714  011B                     	;# 
   715  011C                     	;# 
   716  018C                     	;# 
   717  018D                     	;# 
   718  018E                     	;# 
   719  018F                     	;# 
   720  0190                     	;# 
   721  0191                     	;# 
   722  0191                     	;# 
   723  0192                     	;# 
   724  0193                     	;# 
   725  0193                     	;# 
   726  0194                     	;# 
   727  0195                     	;# 
   728  0196                     	;# 
   729  0197                     	;# 
   730  0199                     	;# 
   731  0199                     	;# 
   732  0199                     	;# 
   733  019A                     	;# 
   734  019A                     	;# 
   735  019A                     	;# 
   736  019B                     	;# 
   737  019B                     	;# 
   738  019B                     	;# 
   739  019B                     	;# 
   740  019B                     	;# 
   741  019C                     	;# 
   742  019C                     	;# 
   743  019C                     	;# 
   744  019D                     	;# 
   745  019D                     	;# 
   746  019D                     	;# 
   747  019E                     	;# 
   748  019E                     	;# 
   749  019E                     	;# 
   750  019F                     	;# 
   751  019F                     	;# 
   752  019F                     	;# 
   753  019F                     	;# 
   754  019F                     	;# 
   755  020C                     	;# 
   756  020D                     	;# 
   757  020E                     	;# 
   758  020F                     	;# 
   759  0210                     	;# 
   760  0211                     	;# 
   761  0211                     	;# 
   762  0212                     	;# 
   763  0212                     	;# 
   764  0213                     	;# 
   765  0213                     	;# 
   766  0214                     	;# 
   767  0214                     	;# 
   768  0215                     	;# 
   769  0215                     	;# 
   770  0215                     	;# 
   771  0215                     	;# 
   772  0216                     	;# 
   773  0216                     	;# 
   774  0217                     	;# 
   775  0217                     	;# 
   776  028C                     	;# 
   777  028D                     	;# 
   778  028E                     	;# 
   779  028F                     	;# 
   780  0290                     	;# 
   781  0291                     	;# 
   782  0291                     	;# 
   783  0292                     	;# 
   784  0293                     	;# 
   785  0293                     	;# 
   786  0298                     	;# 
   787  0298                     	;# 
   788  0299                     	;# 
   789  029A                     	;# 
   790  029A                     	;# 
   791  029E                     	;# 
   792  030C                     	;# 
   793  030D                     	;# 
   794  030E                     	;# 
   795  030F                     	;# 
   796  0310                     	;# 
   797  038C                     	;# 
   798  038D                     	;# 
   799  038E                     	;# 
   800  038F                     	;# 
   801  0390                     	;# 
   802  0391                     	;# 
   803  0392                     	;# 
   804  0393                     	;# 
   805  0394                     	;# 
   806  0395                     	;# 
   807  0396                     	;# 
   808  0397                     	;# 
   809  0398                     	;# 
   810  0399                     	;# 
   811  039D                     	;# 
   812  039E                     	;# 
   813  039F                     	;# 
   814  0415                     	;# 
   815  0416                     	;# 
   816  0417                     	;# 
   817  041C                     	;# 
   818  041D                     	;# 
   819  041E                     	;# 
   820  0498                     	;# 
   821  0498                     	;# 
   822  0499                     	;# 
   823  049A                     	;# 
   824  049B                     	;# 
   825  049B                     	;# 
   826  049C                     	;# 
   827  049D                     	;# 
   828  049E                     	;# 
   829  049F                     	;# 
   830  0511                     	;# 
   831  0515                     	;# 
   832  0617                     	;# 
   833  0618                     	;# 
   834  0619                     	;# 
   835  0619                     	;# 
   836  061A                     	;# 
   837  061B                     	;# 
   838  061C                     	;# 
   839  061C                     	;# 
   840  0691                     	;# 
   841  0692                     	;# 
   842  0693                     	;# 
   843  0694                     	;# 
   844  0695                     	;# 
   845  0696                     	;# 
   846  0697                     	;# 
   847  0698                     	;# 
   848  0699                     	;# 
   849  069A                     	;# 
   850  069B                     	;# 
   851  069C                     	;# 
   852  069D                     	;# 
   853  069E                     	;# 
   854  069F                     	;# 
   855  0E0F                     	;# 
   856  0E10                     	;# 
   857  0E11                     	;# 
   858  0E12                     	;# 
   859  0E13                     	;# 
   860  0E14                     	;# 
   861  0E15                     	;# 
   862  0E17                     	;# 
   863  0E20                     	;# 
   864  0E21                     	;# 
   865  0E22                     	;# 
   866  0E24                     	;# 
   867  0E25                     	;# 
   868  0E28                     	;# 
   869  0E29                     	;# 
   870  0E2A                     	;# 
   871  0E2B                     	;# 
   872  0E90                     	;# 
   873  0E91                     	;# 
   874  0E92                     	;# 
   875  0E93                     	;# 
   876  0E94                     	;# 
   877  0E95                     	;# 
   878  0E96                     	;# 
   879  0E97                     	;# 
   880  0E98                     	;# 
   881  0E99                     	;# 
   882  0E9A                     	;# 
   883  0E9B                     	;# 
   884  0E9C                     	;# 
   885  0E9D                     	;# 
   886  0E9E                     	;# 
   887  0E9F                     	;# 
   888  0EA0                     	;# 
   889  0EA1                     	;# 
   890  0EA2                     	;# 
   891  0EA3                     	;# 
   892  0EA4                     	;# 
   893  0EA5                     	;# 
   894  0EA6                     	;# 
   895  0EA7                     	;# 
   896  0EA8                     	;# 
   897  0EA9                     	;# 
   898  0EAA                     	;# 
   899  0EAB                     	;# 
   900  0EAC                     	;# 
   901  0EAD                     	;# 
   902  0EAE                     	;# 
   903  0EAF                     	;# 
   904  0EB0                     	;# 
   905  0EB1                     	;# 
   906  0EB2                     	;# 
   907  0F0F                     	;# 
   908  0F10                     	;# 
   909  0F11                     	;# 
   910  0F12                     	;# 
   911  0F13                     	;# 
   912  0F14                     	;# 
   913  0F15                     	;# 
   914  0F16                     	;# 
   915  0F17                     	;# 
   916  0F18                     	;# 
   917  0F19                     	;# 
   918  0F1A                     	;# 
   919  0F1B                     	;# 
   920  0F1C                     	;# 
   921  0F1D                     	;# 
   922  0F1E                     	;# 
   923  0F1F                     	;# 
   924  0F20                     	;# 
   925  0F21                     	;# 
   926  0F22                     	;# 
   927  0F23                     	;# 
   928  0F24                     	;# 
   929  0F25                     	;# 
   930  0F26                     	;# 
   931  0F27                     	;# 
   932  0F28                     	;# 
   933  0F29                     	;# 
   934  0F2A                     	;# 
   935  0F2B                     	;# 
   936  0F2C                     	;# 
   937  0F2D                     	;# 
   938  0F2E                     	;# 
   939  0F2F                     	;# 
   940  0F30                     	;# 
   941  0F31                     	;# 
   942  0F32                     	;# 
   943  0F33                     	;# 
   944  0F34                     	;# 
   945  0F35                     	;# 
   946  0F36                     	;# 
   947  0F37                     	;# 
   948  0FE4                     	;# 
   949  0FE5                     	;# 
   950  0FE6                     	;# 
   951  0FE7                     	;# 
   952  0FE8                     	;# 
   953  0FE9                     	;# 
   954  0FEA                     	;# 
   955  0FEB                     	;# 
   956  0FED                     	;# 
   957  0FEE                     	;# 
   958  0FEF                     	;# 
   959  0000                     	;# 
   960  0001                     	;# 
   961  0002                     	;# 
   962  0003                     	;# 
   963  0004                     	;# 
   964  0005                     	;# 
   965  0006                     	;# 
   966  0007                     	;# 
   967  0008                     	;# 
   968  0009                     	;# 
   969  000A                     	;# 
   970  000B                     	;# 
   971  000C                     	;# 
   972  000D                     	;# 
   973  000E                     	;# 
   974  000F                     	;# 
   975  0010                     	;# 
   976  0011                     	;# 
   977  0012                     	;# 
   978  0013                     	;# 
   979  0015                     	;# 
   980  0016                     	;# 
   981  0016                     	;# 
   982  0017                     	;# 
   983  0018                     	;# 
   984  0019                     	;# 
   985  001A                     	;# 
   986  001B                     	;# 
   987  001C                     	;# 
   988  008C                     	;# 
   989  008D                     	;# 
   990  008E                     	;# 
   991  008F                     	;# 
   992  0090                     	;# 
   993  0091                     	;# 
   994  0092                     	;# 
   995  0093                     	;# 
   996  0095                     	;# 
   997  0096                     	;# 
   998  0097                     	;# 
   999  0098                     	;# 
  1000  0099                     	;# 
  1001  009A                     	;# 
  1002  009B                     	;# 
  1003  009B                     	;# 
  1004  009C                     	;# 
  1005  009D                     	;# 
  1006  009E                     	;# 
  1007  009F                     	;# 
  1008  010C                     	;# 
  1009  010D                     	;# 
  1010  010E                     	;# 
  1011  010F                     	;# 
  1012  0110                     	;# 
  1013  0111                     	;# 
  1014  0112                     	;# 
  1015  0113                     	;# 
  1016  0114                     	;# 
  1017  0115                     	;# 
  1018  0116                     	;# 
  1019  0117                     	;# 
  1020  0118                     	;# 
  1021  0119                     	;# 
  1022  011A                     	;# 
  1023  011B                     	;# 
  1024  011B                     	;# 
  1025  011C                     	;# 
  1026  018C                     	;# 
  1027  018D                     	;# 
  1028  018E                     	;# 
  1029  018F                     	;# 
  1030  0190                     	;# 
  1031  0191                     	;# 
  1032  0191                     	;# 
  1033  0192                     	;# 
  1034  0193                     	;# 
  1035  0193                     	;# 
  1036  0194                     	;# 
  1037  0195                     	;# 
  1038  0196                     	;# 
  1039  0197                     	;# 
  1040  0199                     	;# 
  1041  0199                     	;# 
  1042  0199                     	;# 
  1043  019A                     	;# 
  1044  019A                     	;# 
  1045  019A                     	;# 
  1046  019B                     	;# 
  1047  019B                     	;# 
  1048  019B                     	;# 
  1049  019B                     	;# 
  1050  019B                     	;# 
  1051  019C                     	;# 
  1052  019C                     	;# 
  1053  019C                     	;# 
  1054  019D                     	;# 
  1055  019D                     	;# 
  1056  019D                     	;# 
  1057  019E                     	;# 
  1058  019E                     	;# 
  1059  019E                     	;# 
  1060  019F                     	;# 
  1061  019F                     	;# 
  1062  019F                     	;# 
  1063  019F                     	;# 
  1064  019F                     	;# 
  1065  020C                     	;# 
  1066  020D                     	;# 
  1067  020E                     	;# 
  1068  020F                     	;# 
  1069  0210                     	;# 
  1070  0211                     	;# 
  1071  0211                     	;# 
  1072  0212                     	;# 
  1073  0212                     	;# 
  1074  0213                     	;# 
  1075  0213                     	;# 
  1076  0214                     	;# 
  1077  0214                     	;# 
  1078  0215                     	;# 
  1079  0215                     	;# 
  1080  0215                     	;# 
  1081  0215                     	;# 
  1082  0216                     	;# 
  1083  0216                     	;# 
  1084  0217                     	;# 
  1085  0217                     	;# 
  1086  028C                     	;# 
  1087  028D                     	;# 
  1088  028E                     	;# 
  1089  028F                     	;# 
  1090  0290                     	;# 
  1091  0291                     	;# 
  1092  0291                     	;# 
  1093  0292                     	;# 
  1094  0293                     	;# 
  1095  0293                     	;# 
  1096  0298                     	;# 
  1097  0298                     	;# 
  1098  0299                     	;# 
  1099  029A                     	;# 
  1100  029A                     	;# 
  1101  029E                     	;# 
  1102  030C                     	;# 
  1103  030D                     	;# 
  1104  030E                     	;# 
  1105  030F                     	;# 
  1106  0310                     	;# 
  1107  038C                     	;# 
  1108  038D                     	;# 
  1109  038E                     	;# 
  1110  038F                     	;# 
  1111  0390                     	;# 
  1112  0391                     	;# 
  1113  0392                     	;# 
  1114  0393                     	;# 
  1115  0394                     	;# 
  1116  0395                     	;# 
  1117  0396                     	;# 
  1118  0397                     	;# 
  1119  0398                     	;# 
  1120  0399                     	;# 
  1121  039D                     	;# 
  1122  039E                     	;# 
  1123  039F                     	;# 
  1124  0415                     	;# 
  1125  0416                     	;# 
  1126  0417                     	;# 
  1127  041C                     	;# 
  1128  041D                     	;# 
  1129  041E                     	;# 
  1130  0498                     	;# 
  1131  0498                     	;# 
  1132  0499                     	;# 
  1133  049A                     	;# 
  1134  049B                     	;# 
  1135  049B                     	;# 
  1136  049C                     	;# 
  1137  049D                     	;# 
  1138  049E                     	;# 
  1139  049F                     	;# 
  1140  0511                     	;# 
  1141  0515                     	;# 
  1142  0617                     	;# 
  1143  0618                     	;# 
  1144  0619                     	;# 
  1145  0619                     	;# 
  1146  061A                     	;# 
  1147  061B                     	;# 
  1148  061C                     	;# 
  1149  061C                     	;# 
  1150  0691                     	;# 
  1151  0692                     	;# 
  1152  0693                     	;# 
  1153  0694                     	;# 
  1154  0695                     	;# 
  1155  0696                     	;# 
  1156  0697                     	;# 
  1157  0698                     	;# 
  1158  0699                     	;# 
  1159  069A                     	;# 
  1160  069B                     	;# 
  1161  069C                     	;# 
  1162  069D                     	;# 
  1163  069E                     	;# 
  1164  069F                     	;# 
  1165  0E0F                     	;# 
  1166  0E10                     	;# 
  1167  0E11                     	;# 
  1168  0E12                     	;# 
  1169  0E13                     	;# 
  1170  0E14                     	;# 
  1171  0E15                     	;# 
  1172  0E17                     	;# 
  1173  0E20                     	;# 
  1174  0E21                     	;# 
  1175  0E22                     	;# 
  1176  0E24                     	;# 
  1177  0E25                     	;# 
  1178  0E28                     	;# 
  1179  0E29                     	;# 
  1180  0E2A                     	;# 
  1181  0E2B                     	;# 
  1182  0E90                     	;# 
  1183  0E91                     	;# 
  1184  0E92                     	;# 
  1185  0E93                     	;# 
  1186  0E94                     	;# 
  1187  0E95                     	;# 
  1188  0E96                     	;# 
  1189  0E97                     	;# 
  1190  0E98                     	;# 
  1191  0E99                     	;# 
  1192  0E9A                     	;# 
  1193  0E9B                     	;# 
  1194  0E9C                     	;# 
  1195  0E9D                     	;# 
  1196  0E9E                     	;# 
  1197  0E9F                     	;# 
  1198  0EA0                     	;# 
  1199  0EA1                     	;# 
  1200  0EA2                     	;# 
  1201  0EA3                     	;# 
  1202  0EA4                     	;# 
  1203  0EA5                     	;# 
  1204  0EA6                     	;# 
  1205  0EA7                     	;# 
  1206  0EA8                     	;# 
  1207  0EA9                     	;# 
  1208  0EAA                     	;# 
  1209  0EAB                     	;# 
  1210  0EAC                     	;# 
  1211  0EAD                     	;# 
  1212  0EAE                     	;# 
  1213  0EAF                     	;# 
  1214  0EB0                     	;# 
  1215  0EB1                     	;# 
  1216  0EB2                     	;# 
  1217  0F0F                     	;# 
  1218  0F10                     	;# 
  1219  0F11                     	;# 
  1220  0F12                     	;# 
  1221  0F13                     	;# 
  1222  0F14                     	;# 
  1223  0F15                     	;# 
  1224  0F16                     	;# 
  1225  0F17                     	;# 
  1226  0F18                     	;# 
  1227  0F19                     	;# 
  1228  0F1A                     	;# 
  1229  0F1B                     	;# 
  1230  0F1C                     	;# 
  1231  0F1D                     	;# 
  1232  0F1E                     	;# 
  1233  0F1F                     	;# 
  1234  0F20                     	;# 
  1235  0F21                     	;# 
  1236  0F22                     	;# 
  1237  0F23                     	;# 
  1238  0F24                     	;# 
  1239  0F25                     	;# 
  1240  0F26                     	;# 
  1241  0F27                     	;# 
  1242  0F28                     	;# 
  1243  0F29                     	;# 
  1244  0F2A                     	;# 
  1245  0F2B                     	;# 
  1246  0F2C                     	;# 
  1247  0F2D                     	;# 
  1248  0F2E                     	;# 
  1249  0F2F                     	;# 
  1250  0F30                     	;# 
  1251  0F31                     	;# 
  1252  0F32                     	;# 
  1253  0F33                     	;# 
  1254  0F34                     	;# 
  1255  0F35                     	;# 
  1256  0F36                     	;# 
  1257  0F37                     	;# 
  1258  0FE4                     	;# 
  1259  0FE5                     	;# 
  1260  0FE6                     	;# 
  1261  0FE7                     	;# 
  1262  0FE8                     	;# 
  1263  0FE9                     	;# 
  1264  0FEA                     	;# 
  1265  0FEB                     	;# 
  1266  0FED                     	;# 
  1267  0FEE                     	;# 
  1268  0FEF                     	;# 
  1269                           
  1270                           	psect	stringtext
  1271  0800                     __pstringtext:	
  1272  0800                     _dpowers:	
  1273  0800  3401               	retlw	1
  1274  0801  3400               	retlw	0
  1275  0802  3400               	retlw	0
  1276  0803  3400               	retlw	0
  1277  0804  340A               	retlw	10
  1278  0805  3400               	retlw	0
  1279  0806  3400               	retlw	0
  1280  0807  3400               	retlw	0
  1281  0808  3464               	retlw	100
  1282  0809  3400               	retlw	0
  1283  080A  3400               	retlw	0
  1284  080B  3400               	retlw	0
  1285  080C  34E8               	retlw	232
  1286  080D  3403               	retlw	3
  1287  080E  3400               	retlw	0
  1288  080F  3400               	retlw	0
  1289  0810  3410               	retlw	16
  1290  0811  3427               	retlw	39
  1291  0812  3400               	retlw	0
  1292  0813  3400               	retlw	0
  1293  0814  34A0               	retlw	160
  1294  0815  3486               	retlw	134
  1295  0816  3401               	retlw	1
  1296  0817  3400               	retlw	0
  1297  0818  3440               	retlw	64
  1298  0819  3442               	retlw	66
  1299  081A  340F               	retlw	15
  1300  081B  3400               	retlw	0
  1301  081C  3480               	retlw	128
  1302  081D  3496               	retlw	150
  1303  081E  3498               	retlw	152
  1304  081F  3400               	retlw	0
  1305  0820  3400               	retlw	0
  1306  0821  34E1               	retlw	225
  1307  0822  34F5               	retlw	245
  1308  0823  3405               	retlw	5
  1309  0824  3400               	retlw	0
  1310  0825  34CA               	retlw	202
  1311  0826  349A               	retlw	154
  1312  0827  343B               	retlw	59
  1313  0828                     __end_of_dpowers:	
  1314  007A                     _RD2	set	122
  1315  007B                     _RD3	set	123
  1316  007C                     _RD4	set	124
  1317  007D                     _RD5	set	125
  1318  007E                     _RD6	set	126
  1319  007F                     _RD7	set	127
  1320  008E                     _TRISCbits	set	142
  1321  008F                     _TRISD	set	143
  1322  008F                     _TRISDbits	set	143
  1323  04CB                     _IRCF0	set	1227
  1324  04CC                     _IRCF1	set	1228
  1325  04CD                     _IRCF2	set	1229
  1326  04CE                     _IRCF3	set	1230
  1327  04C8                     _SCS0	set	1224
  1328  04C9                     _SCS1	set	1225
  1329  04CF                     _SPLLEN	set	1231
  1330  010F                     _LATDbits	set	271
  1331  018E                     _ANSELCbits	set	398
  1332  018F                     _ANSELD	set	399
  1333  0212                     _SSP1ADD	set	530
  1334  0215                     _SSP1CON1	set	533
  1335  0215                     _SSP1CON1bits	set	533
  1336  0214                     _SSP1STAT	set	532
  1337  0214                     _SSP1STATbits	set	532
  1338  0211                     _SSPBUF	set	529
  1339  0E0F                     _PPSLOCK	set	3599
  1340  0E0F                     _PPSLOCKbits	set	3599
  1341  0E21                     _SSPDATPPSbits	set	3617
  1342  0EA3                     _RC3PPSbits	set	3747
  1343  0EA5                     _RC5PPSbits	set	3749
  1344  0828                     STR_2:	
  1345  0828  3425               	retlw	37	;'%'
  1346  0829  346C               	retlw	108	;'l'
  1347  082A  3475               	retlw	117	;'u'
  1348  082B  342E               	retlw	46	;'.'
  1349  082C  3425               	retlw	37	;'%'
  1350  082D  3436               	retlw	54	;'6'
  1351  082E  342E               	retlw	46	;'.'
  1352  082F  3436               	retlw	54	;'6'
  1353  0830  346C               	retlw	108	;'l'
  1354  0831  3475               	retlw	117	;'u'
  1355  0832  3400               	retlw	0
  1356  0833                     STR_1:	
  1357  0833  3453               	retlw	83	;'S'
  1358  0834  3450               	retlw	80	;'P'
  1359  0835  3449               	retlw	73	;'I'
  1360  0836  3420               	retlw	32	;' '
  1361  0837  3452               	retlw	82	;'R'
  1362  0838  3465               	retlw	101	;'e'
  1363  0839  3461               	retlw	97	;'a'
  1364  083A  3464               	retlw	100	;'d'
  1365  083B  3479               	retlw	121	;'y'
  1366  083C  3400               	retlw	0
  1367                           
  1368                           ; #config settings
  1369  0000                     
  1370                           	psect	cinit
  1371  07F6                     start_initialization:	
  1372  07F6                     __initialization:	
  1373                           
  1374                           ; Clear objects allocated to BANK0
  1375  07F6  303E               	movlw	low __pbssBANK0
  1376  07F7  0084               	movwf	4
  1377  07F8  3000               	movlw	high __pbssBANK0
  1378  07F9  0085               	movwf	5
  1379  07FA  3011               	movlw	17
  1380  07FB  3185  251A         	fcall	clear_ram0
  1381  07FD                     end_of_initialization:	
  1382                           ;End of C runtime variable initialization code
  1383                           
  1384  07FD                     __end_of__initialization:	
  1385  07FD  0020               	movlb	0
  1386  07FE  3187  2F85         	ljmp	_main	;jump to C main() function
  1387                           
  1388                           	psect	bssBANK0
  1389  003E                     __pbssBANK0:	
  1390  003E                     ftoa@buf:	
  1391  003E                     	ds	17
  1392                           
  1393                           	psect	clrtext
  1394  051A                     clear_ram0:	
  1395                           ;	Called with FSR0 containing the base address, and
  1396                           ;	WREG with the size to clear
  1397                           
  1398  051A  0064               	clrwdt	;clear the watchdog before getting into this loop
  1399  051B                     clrloop0:	
  1400  051B  0180               	clrf	0	;clear RAM location pointed to by FSR
  1401  051C  3101               	addfsr 0,1
  1402  051D  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1403  051E  2D1B               	goto	clrloop0	;have we reached the end yet?
  1404  051F  3400               	retlw	0	;all done for this memory range, return
  1405                           
  1406                           	psect	cstackCOMMON
  1407  0070                     __pcstackCOMMON:	
  1408  0070                     ?_SPI_Initialize:	
  1409  0070                     ??_SPI_Initialize:	
  1410                           ; 1 bytes @ 0x0
  1411                           
  1412  0070                     ?_SPI_Exchange8bit:	
  1413                           ; 1 bytes @ 0x0
  1414                           
  1415  0070                     ??_SPI_Exchange8bit:	
  1416                           ; 1 bytes @ 0x0
  1417                           
  1418  0070                     ?_internal_16:	
  1419                           ; 1 bytes @ 0x0
  1420                           
  1421  0070                     ??_internal_16:	
  1422                           ; 1 bytes @ 0x0
  1423                           
  1424  0070                     ?_Lcd_Port:	
  1425                           ; 1 bytes @ 0x0
  1426                           
  1427  0070                     ??_Lcd_Port:	
  1428                           ; 1 bytes @ 0x0
  1429                           
  1430  0070                     ?_Lcd_Cmd:	
  1431                           ; 1 bytes @ 0x0
  1432                           
  1433  0070                     ?_Lcd_Clear:	
  1434                           ; 1 bytes @ 0x0
  1435                           
  1436  0070                     ?_Lcd_Init:	
  1437                           ; 1 bytes @ 0x0
  1438                           
  1439  0070                     ?_Lcd_Write_Char:	
  1440                           ; 1 bytes @ 0x0
  1441                           
  1442  0070                     ?_initMain:	
  1443                           ; 1 bytes @ 0x0
  1444                           
  1445  0070                     ?_main:	
  1446                           ; 1 bytes @ 0x0
  1447                           
  1448  0070                     ?___lwdiv:	
  1449                           ; 1 bytes @ 0x0
  1450                           
  1451  0070                     ?___lwmod:	
  1452                           ; 2 bytes @ 0x0
  1453                           
  1454  0070                     Lcd_Port@a:	
  1455                           ; 2 bytes @ 0x0
  1456                           
  1457  0070                     SPI_Exchange8bit@data:	
  1458                           ; 1 bytes @ 0x0
  1459                           
  1460  0070                     ___lwdiv@divisor:	
  1461                           ; 1 bytes @ 0x0
  1462                           
  1463  0070                     ___lwmod@divisor:	
  1464                           ; 2 bytes @ 0x0
  1465                           
  1466                           
  1467                           ; 2 bytes @ 0x0
  1468  0070                     	ds	1
  1469  0071                     ?_digiPot_write:	
  1470  0071                     ??_Lcd_Cmd:	
  1471                           ; 1 bytes @ 0x1
  1472                           
  1473  0071                     ??_Lcd_Write_Char:	
  1474                           ; 1 bytes @ 0x1
  1475                           
  1476  0071                     digiPot_write@i:	
  1477                           ; 1 bytes @ 0x1
  1478                           
  1479                           
  1480                           ; 2 bytes @ 0x1
  1481  0071                     	ds	1
  1482  0072                     Lcd_Write_Char@temp:	
  1483  0072                     ___lwdiv@dividend:	
  1484                           ; 1 bytes @ 0x2
  1485                           
  1486  0072                     ___lwmod@dividend:	
  1487                           ; 2 bytes @ 0x2
  1488                           
  1489                           
  1490                           ; 2 bytes @ 0x2
  1491  0072                     	ds	1
  1492  0073                     ??_digiPot_write:	
  1493  0073                     Lcd_Cmd@a:	
  1494                           ; 1 bytes @ 0x3
  1495                           
  1496  0073                     Lcd_Write_Char@y:	
  1497                           ; 1 bytes @ 0x3
  1498                           
  1499                           
  1500                           ; 1 bytes @ 0x3
  1501  0073                     	ds	1
  1502  0074                     ??_Lcd_Clear:	
  1503  0074                     ?_Lcd_Set_Cursor:	
  1504                           ; 1 bytes @ 0x4
  1505                           
  1506  0074                     ??_Lcd_Init:	
  1507                           ; 1 bytes @ 0x4
  1508                           
  1509  0074                     ??___lwdiv:	
  1510                           ; 1 bytes @ 0x4
  1511                           
  1512  0074                     ??___lwmod:	
  1513                           ; 1 bytes @ 0x4
  1514                           
  1515  0074                     Lcd_Set_Cursor@b:	
  1516                           ; 1 bytes @ 0x4
  1517                           
  1518  0074                     Lcd_Write_Char@a:	
  1519                           ; 1 bytes @ 0x4
  1520                           
  1521                           
  1522                           ; 1 bytes @ 0x4
  1523  0074                     	ds	1
  1524  0075                     ??_Lcd_Set_Cursor:	
  1525  0075                     ___lwmod@counter:	
  1526                           ; 1 bytes @ 0x5
  1527                           
  1528  0075                     ___lwdiv@quotient:	
  1529                           ; 1 bytes @ 0x5
  1530                           
  1531                           
  1532                           ; 2 bytes @ 0x5
  1533  0075                     	ds	1
  1534  0076                     ??_initMain:	
  1535                           
  1536                           ; 1 bytes @ 0x6
  1537  0076                     	ds	1
  1538  0077                     Lcd_Set_Cursor@a:	
  1539  0077                     ___lwdiv@counter:	
  1540                           ; 1 bytes @ 0x7
  1541                           
  1542                           
  1543                           ; 1 bytes @ 0x7
  1544  0077                     	ds	1
  1545  0078                     ?_utoa:	
  1546  0078                     Lcd_Set_Cursor@z:	
  1547                           ; 1 bytes @ 0x8
  1548                           
  1549  0078                     utoa@val:	
  1550                           ; 1 bytes @ 0x8
  1551                           
  1552                           
  1553                           ; 2 bytes @ 0x8
  1554  0078                     	ds	1
  1555  0079                     Lcd_Set_Cursor@y:	
  1556                           
  1557                           ; 1 bytes @ 0x9
  1558  0079                     	ds	1
  1559  007A                     Lcd_Set_Cursor@temp:	
  1560  007A                     utoa@base:	
  1561                           ; 1 bytes @ 0xA
  1562                           
  1563                           
  1564                           ; 2 bytes @ 0xA
  1565  007A                     	ds	2
  1566  007C                     ??_utoa:	
  1567                           
  1568                           ; 1 bytes @ 0xC
  1569  007C                     	ds	1
  1570  007D                     ??_itoa:	
  1571                           
  1572                           ; 1 bytes @ 0xD
  1573  007D                     	ds	1
  1574  007E                     ??_Lcd_Write_Integer:	
  1575                           
  1576                           	psect	cstackBANK0
  1577  0020                     __pcstackBANK0:	
  1578                           ; 1 bytes @ 0xE
  1579                           
  1580  0020                     utoa@v:	
  1581                           
  1582                           ; 2 bytes @ 0x0
  1583  0020                     	ds	2
  1584  0022                     utoa@c:	
  1585                           
  1586                           ; 1 bytes @ 0x2
  1587  0022                     	ds	1
  1588  0023                     utoa@buf:	
  1589                           
  1590                           ; 1 bytes @ 0x3
  1591  0023                     	ds	1
  1592  0024                     ?_itoa:	
  1593  0024                     itoa@val:	
  1594                           ; 1 bytes @ 0x4
  1595                           
  1596                           
  1597                           ; 2 bytes @ 0x4
  1598  0024                     	ds	2
  1599  0026                     itoa@base:	
  1600                           
  1601                           ; 2 bytes @ 0x6
  1602  0026                     	ds	2
  1603  0028                     itoa@cp:	
  1604                           
  1605                           ; 1 bytes @ 0x8
  1606  0028                     	ds	1
  1607  0029                     itoa@buf:	
  1608                           
  1609                           ; 1 bytes @ 0x9
  1610  0029                     	ds	1
  1611  002A                     ?_Lcd_Write_String:	
  1612  002A                     Lcd_Write_String@a:	
  1613                           ; 1 bytes @ 0xA
  1614                           
  1615                           
  1616                           ; 2 bytes @ 0xA
  1617  002A                     	ds	2
  1618  002C                     ??_Lcd_Write_String:	
  1619                           
  1620                           ; 1 bytes @ 0xC
  1621  002C                     	ds	1
  1622  002D                     Lcd_Write_String@i:	
  1623                           
  1624                           ; 2 bytes @ 0xD
  1625  002D                     	ds	2
  1626  002F                     ?_Lcd_Write_Integer:	
  1627  002F                     Lcd_Write_Integer@v:	
  1628                           ; 1 bytes @ 0xF
  1629                           
  1630                           
  1631                           ; 2 bytes @ 0xF
  1632  002F                     	ds	2
  1633  0031                     Lcd_Write_Integer@buf:	
  1634                           
  1635                           ; 8 bytes @ 0x11
  1636  0031                     	ds	8
  1637  0039                     ??_main:	
  1638                           
  1639                           ; 1 bytes @ 0x19
  1640  0039                     	ds	3
  1641  003C                     main@i:	
  1642                           
  1643                           ; 2 bytes @ 0x1C
  1644  003C                     	ds	2
  1645                           
  1646                           	psect	maintext
  1647  0785                     __pmaintext:	
  1648 ;;
  1649 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1650 ;;
  1651 ;; *************** function _main *****************
  1652 ;; Defined at:
  1653 ;;		line 106 in file "Main.c"
  1654 ;; Parameters:    Size  Location     Type
  1655 ;;		None
  1656 ;; Auto vars:     Size  Location     Type
  1657 ;;  i               2   28[BANK0 ] int 
  1658 ;; Return value:  Size  Location     Type
  1659 ;;                  1    wreg      void 
  1660 ;; Registers used:
  1661 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1662 ;; Tracked objects:
  1663 ;;		On entry : B1F/0
  1664 ;;		On exit  : 0/0
  1665 ;;		Unchanged: 0/0
  1666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1668 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1669 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1670 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1671 ;;Total ram usage:        5 bytes
  1672 ;; Hardware stack levels required when called:    4
  1673 ;; This function calls:
  1674 ;;		_Lcd_Clear
  1675 ;;		_Lcd_Set_Cursor
  1676 ;;		_Lcd_Write_Integer
  1677 ;;		_Lcd_Write_String
  1678 ;;		_digiPot_write
  1679 ;;		_initMain
  1680 ;; This function is called by:
  1681 ;;		Startup code after reset
  1682 ;; This function uses a non-reentrant model
  1683 ;;
  1684                           
  1685                           
  1686                           ;psect for function _main
  1687  0785                     _main:	
  1688                           
  1689                           ;Main.c: 107: initMain();
  1690                           
  1691                           ;incstack = 0
  1692                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1693  0785  3186  269C  3187   	fcall	_initMain
  1694                           
  1695                           ;Main.c: 110: int i;
  1696                           ;Main.c: 112: Lcd_Set_Cursor(1,1);
  1697  0788  01F4               	clrf	Lcd_Set_Cursor@b
  1698  0789  0AF4               	incf	Lcd_Set_Cursor@b,f
  1699  078A  3001               	movlw	1
  1700  078B  3186  265C  3187   	fcall	_Lcd_Set_Cursor
  1701                           
  1702                           ;Main.c: 113: _delay((unsigned long)((5)*(16000000/4000.0)));
  1703  078E  301A               	movlw	26
  1704  078F  0020               	movlb	0	; select bank0
  1705  0790  00BA               	movwf	??_main+1
  1706  0791  30F8               	movlw	248
  1707  0792  00B9               	movwf	??_main
  1708  0793                     u737:	
  1709  0793  0BB9               	decfsz	??_main,f
  1710  0794  2F93               	goto	u737
  1711  0795  0BBA               	decfsz	??_main+1,f
  1712  0796  2F93               	goto	u737
  1713  0797  0000               	nop
  1714                           
  1715                           ;Main.c: 114: Lcd_Write_String("SPI Ready");
  1716  0798  3033               	movlw	low (STR_1| (0+32768))
  1717  0799  0020               	movlb	0	; select bank0
  1718  079A  00AA               	movwf	Lcd_Write_String@a
  1719  079B  3088               	movlw	high (STR_1| (0+32768))
  1720  079C  00AB               	movwf	Lcd_Write_String@a+1
  1721  079D  3185  258E  3187   	fcall	_Lcd_Write_String
  1722                           
  1723                           ;Main.c: 115: _delay((unsigned long)((1000)*(16000000/4000.0)));
  1724  07A0  3015               	movlw	21
  1725  07A1  0020               	movlb	0	; select bank0
  1726  07A2  00BB               	movwf	??_main+2
  1727  07A3  304B               	movlw	75
  1728  07A4  00BA               	movwf	??_main+1
  1729  07A5  30D1               	movlw	209
  1730  07A6  00B9               	movwf	??_main
  1731  07A7                     u747:	
  1732  07A7  0BB9               	decfsz	??_main,f
  1733  07A8  2FA7               	goto	u747
  1734  07A9  0BBA               	decfsz	??_main+1,f
  1735  07AA  2FA7               	goto	u747
  1736  07AB  0BBB               	decfsz	??_main+2,f
  1737  07AC  2FA7               	goto	u747
  1738  07AD  0000               	nop
  1739                           
  1740                           ;Main.c: 116: Lcd_Clear();
  1741  07AE  3185  2527  3187   	fcall	_Lcd_Clear
  1742  07B1                     l1258:	
  1743                           ;Main.c: 118: while(1){
  1744                           
  1745                           
  1746                           ;Main.c: 121: for (i = 0; i <= 128; i++){
  1747  07B1  0020               	movlb	0	; select bank0
  1748  07B2  01BC               	clrf	main@i
  1749  07B3  01BD               	clrf	main@i+1
  1750  07B4                     L1:	
  1751  07B4  083D               	movf	main@i+1,w
  1752  07B5  3A80               	xorlw	128
  1753  07B6  00B9               	movwf	??_main
  1754  07B7  3080               	movlw	128
  1755  07B8  0239               	subwf	??_main,w
  1756  07B9  1D03               	skipz
  1757  07BA  2FBD               	goto	u655
  1758  07BB  3081               	movlw	129
  1759  07BC  023C               	subwf	main@i,w
  1760  07BD                     u655:	
  1761  07BD  1803               	btfsc	3,0
  1762  07BE  2FB1               	goto	l1258
  1763                           
  1764                           ;Main.c: 123: digiPot_write(i);
  1765  07BF  0020               	movlb	0	; select bank0
  1766  07C0  083D               	movf	main@i+1,w
  1767  07C1  00F2               	movwf	digiPot_write@i+1
  1768  07C2  083C               	movf	main@i,w
  1769  07C3  00F1               	movwf	digiPot_write@i
  1770  07C4  3185  2541  3187   	fcall	_digiPot_write
  1771                           
  1772                           ;Main.c: 126: Lcd_Set_Cursor(1,1);
  1773  07C7  01F4               	clrf	Lcd_Set_Cursor@b
  1774  07C8  0AF4               	incf	Lcd_Set_Cursor@b,f
  1775  07C9  3001               	movlw	1
  1776  07CA  3186  265C  3187   	fcall	_Lcd_Set_Cursor
  1777                           
  1778                           ;Main.c: 127: _delay((unsigned long)((5)*(16000000/4000.0)));
  1779  07CD  301A               	movlw	26
  1780  07CE  0020               	movlb	0	; select bank0
  1781  07CF  00BA               	movwf	??_main+1
  1782  07D0  30F8               	movlw	248
  1783  07D1  00B9               	movwf	??_main
  1784  07D2                     u757:	
  1785  07D2  0BB9               	decfsz	??_main,f
  1786  07D3  2FD2               	goto	u757
  1787  07D4  0BBA               	decfsz	??_main+1,f
  1788  07D5  2FD2               	goto	u757
  1789  07D6  0000               	nop
  1790                           
  1791                           ;Main.c: 128: Lcd_Write_Integer(i);
  1792  07D7  0020               	movlb	0	; select bank0
  1793  07D8  083D               	movf	main@i+1,w
  1794  07D9  00B0               	movwf	Lcd_Write_Integer@v+1
  1795  07DA  083C               	movf	main@i,w
  1796  07DB  00AF               	movwf	Lcd_Write_Integer@v
  1797  07DC  3185  254D  3187   	fcall	_Lcd_Write_Integer
  1798                           
  1799                           ;Main.c: 129: _delay((unsigned long)((250)*(16000000/4000.0)));
  1800  07DF  3006               	movlw	6
  1801  07E0  0020               	movlb	0	; select bank0
  1802  07E1  00BB               	movwf	??_main+2
  1803  07E2  3013               	movlw	19
  1804  07E3  00BA               	movwf	??_main+1
  1805  07E4  30B1               	movlw	177
  1806  07E5  00B9               	movwf	??_main
  1807  07E6                     u767:	
  1808  07E6  0BB9               	decfsz	??_main,f
  1809  07E7  2FE6               	goto	u767
  1810  07E8  0BBA               	decfsz	??_main+1,f
  1811  07E9  2FE6               	goto	u767
  1812  07EA  0BBB               	decfsz	??_main+2,f
  1813  07EB  2FE6               	goto	u767
  1814  07EC  3200               	nop2
  1815                           
  1816                           ;Main.c: 130: Lcd_Clear();
  1817  07ED  3185  2527  3187   	fcall	_Lcd_Clear
  1818  07F0  3001               	movlw	1
  1819  07F1  0020               	movlb	0	; select bank0
  1820  07F2  07BC               	addwf	main@i,f
  1821  07F3  3000               	movlw	0
  1822  07F4  3DBD               	addwfc	main@i+1,f
  1823  07F5  2FB4               	goto	L1
  1824  07F6                     __end_of_main:	
  1825                           ;Main.c: 131: }
  1826                           ;Main.c: 132: }
  1827                           ;Main.c: 134: return;
  1828                           
  1829                           
  1830                           	psect	text1
  1831  069C                     __ptext1:	
  1832 ;; *************** function _initMain *****************
  1833 ;; Defined at:
  1834 ;;		line 51 in file "Main.c"
  1835 ;; Parameters:    Size  Location     Type
  1836 ;;		None
  1837 ;; Auto vars:     Size  Location     Type
  1838 ;;		None
  1839 ;; Return value:  Size  Location     Type
  1840 ;;                  1    wreg      void 
  1841 ;; Registers used:
  1842 ;;		wreg, status,2, status,0, pclath, cstack
  1843 ;; Tracked objects:
  1844 ;;		On entry : 0/0
  1845 ;;		On exit  : 0/0
  1846 ;;		Unchanged: 0/0
  1847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1850 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1851 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1852 ;;Total ram usage:        3 bytes
  1853 ;; Hardware stack levels used:    1
  1854 ;; Hardware stack levels required when called:    3
  1855 ;; This function calls:
  1856 ;;		_Lcd_Clear
  1857 ;;		_Lcd_Init
  1858 ;;		_SPI_Initialize
  1859 ;;		_internal_16
  1860 ;; This function is called by:
  1861 ;;		_main
  1862 ;; This function uses a non-reentrant model
  1863 ;;
  1864                           
  1865                           
  1866                           ;psect for function _initMain
  1867  069C                     _initMain:	
  1868                           
  1869                           ;Main.c: 53: internal_16();
  1870                           
  1871                           ;incstack = 0
  1872                           ; Regs used in _initMain: [wreg+status,2+status,0+pclath+cstack]
  1873  069C  3185  2538  3186   	fcall	_internal_16
  1874                           
  1875                           ;Main.c: 56: TRISDbits.TRISD1 = 0;
  1876  069F  0021               	movlb	1	; select bank1
  1877  06A0  108F               	bcf	15,1	;volatile
  1878                           
  1879                           ;Main.c: 59: LATDbits.LATD1 = 0;
  1880  06A1  0022               	movlb	2	; select bank2
  1881  06A2  108F               	bcf	15,1	;volatile
  1882                           
  1883                           ;Main.c: 62: TRISD = 0;
  1884  06A3  0021               	movlb	1	; select bank1
  1885  06A4  018F               	clrf	15	;volatile
  1886                           
  1887                           ;Main.c: 63: ANSELD = 0;
  1888  06A5  0023               	movlb	3	; select bank3
  1889  06A6  018F               	clrf	15	;volatile
  1890                           
  1891                           ;Main.c: 67: Lcd_Init();
  1892  06A7  3186  26DD  3186   	fcall	_Lcd_Init
  1893                           
  1894                           ;Main.c: 68: _delay((unsigned long)((100)*(16000000/4000.0)));
  1895  06AA  3003               	movlw	3
  1896  06AB  00F8               	movwf	??_initMain+2
  1897  06AC  3008               	movlw	8
  1898  06AD  00F7               	movwf	??_initMain+1
  1899  06AE  3078               	movlw	120
  1900  06AF  00F6               	movwf	??_initMain
  1901  06B0                     u777:	
  1902  06B0  0BF6               	decfsz	??_initMain,f
  1903  06B1  2EB0               	goto	u777
  1904  06B2  0BF7               	decfsz	??_initMain+1,f
  1905  06B3  2EB0               	goto	u777
  1906  06B4  0BF8               	decfsz	??_initMain+2,f
  1907  06B5  2EB0               	goto	u777
  1908                           
  1909                           ;Main.c: 69: Lcd_Clear();
  1910  06B6  3185  2527  3186   	fcall	_Lcd_Clear
  1911                           
  1912                           ;Main.c: 72: ANSELCbits.ANSC3 = 0;
  1913  06B9  0023               	movlb	3	; select bank3
  1914  06BA  118E               	bcf	14,3	;volatile
  1915                           
  1916                           ;Main.c: 73: ANSELCbits.ANSC4 = 0;
  1917  06BB  120E               	bcf	14,4	;volatile
  1918                           
  1919                           ;Main.c: 74: ANSELCbits.ANSC5 = 0;
  1920  06BC  128E               	bcf	14,5	;volatile
  1921                           
  1922                           ;Main.c: 76: TRISCbits.TRISC3 = 0;
  1923  06BD  0021               	movlb	1	; select bank1
  1924  06BE  118E               	bcf	14,3	;volatile
  1925                           
  1926                           ;Main.c: 77: TRISCbits.TRISC4 = 1;
  1927  06BF  160E               	bsf	14,4	;volatile
  1928                           
  1929                           ;Main.c: 78: TRISCbits.TRISC5 = 0;
  1930  06C0  128E               	bcf	14,5	;volatile
  1931                           
  1932                           ;Main.c: 80: PPSLOCK = 0x55;
  1933  06C1  3055               	movlw	85
  1934  06C2  003C               	movlb	28	; select bank28
  1935  06C3  008F               	movwf	15	;volatile
  1936                           
  1937                           ;Main.c: 81: PPSLOCK = 0xAA;
  1938  06C4  30AA               	movlw	170
  1939  06C5  008F               	movwf	15	;volatile
  1940                           
  1941                           ;Main.c: 82: PPSLOCKbits.PPSLOCKED = 0x00;
  1942  06C6  100F               	bcf	15,0	;volatile
  1943                           
  1944                           ;Main.c: 84: SSPDATPPSbits.SSPDATPPS = 0x14;
  1945  06C7  0821               	movf	33,w	;volatile
  1946  06C8  39E0               	andlw	-32
  1947  06C9  3814               	iorlw	20
  1948  06CA  00A1               	movwf	33	;volatile
  1949                           
  1950                           ;Main.c: 85: RC3PPSbits.RC3PPS = 0x10;
  1951  06CB  003D               	movlb	29	; select bank29
  1952  06CC  0823               	movf	35,w	;volatile
  1953  06CD  39E0               	andlw	-32
  1954  06CE  3810               	iorlw	16
  1955  06CF  00A3               	movwf	35	;volatile
  1956                           
  1957                           ;Main.c: 86: RC5PPSbits.RC5PPS = 0x11;
  1958  06D0  0825               	movf	37,w	;volatile
  1959  06D1  39E0               	andlw	-32
  1960  06D2  3811               	iorlw	17
  1961  06D3  00A5               	movwf	37	;volatile
  1962                           
  1963                           ;Main.c: 88: PPSLOCK = 0x55;
  1964  06D4  3055               	movlw	85
  1965  06D5  003C               	movlb	28	; select bank28
  1966  06D6  008F               	movwf	15	;volatile
  1967                           
  1968                           ;Main.c: 89: PPSLOCK = 0xAA;
  1969  06D7  30AA               	movlw	170
  1970  06D8  008F               	movwf	15	;volatile
  1971                           
  1972                           ;Main.c: 90: PPSLOCKbits.PPSLOCKED = 0x01;
  1973  06D9  140F               	bsf	15,0	;volatile
  1974                           
  1975                           ;Main.c: 94: SPI_Initialize();
  1976  06DA  3185  2520         	fcall	_SPI_Initialize
  1977  06DC  0008               	return
  1978  06DD                     __end_of_initMain:	
  1979                           
  1980                           	psect	text2
  1981  0538                     __ptext2:	
  1982 ;; *************** function _internal_16 *****************
  1983 ;; Defined at:
  1984 ;;		line 56 in file "16F1717_Internal.c"
  1985 ;; Parameters:    Size  Location     Type
  1986 ;;		None
  1987 ;; Auto vars:     Size  Location     Type
  1988 ;;		None
  1989 ;; Return value:  Size  Location     Type
  1990 ;;                  1    wreg      void 
  1991 ;; Registers used:
  1992 ;;		None
  1993 ;; Tracked objects:
  1994 ;;		On entry : 0/0
  1995 ;;		On exit  : 0/0
  1996 ;;		Unchanged: 0/0
  1997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2002 ;;Total ram usage:        0 bytes
  2003 ;; Hardware stack levels used:    1
  2004 ;; This function calls:
  2005 ;;		Nothing
  2006 ;; This function is called by:
  2007 ;;		_initMain
  2008 ;; This function uses a non-reentrant model
  2009 ;;
  2010                           
  2011                           
  2012                           ;psect for function _internal_16
  2013  0538                     _internal_16:	
  2014                           
  2015                           ;16F1717_Internal.c: 58: SCS0 = 0;
  2016                           
  2017                           ;incstack = 0
  2018                           ; Regs used in _internal_16: []
  2019  0538  0021               	movlb	1	; select bank1
  2020  0539  1019               	bcf	25,0	;volatile
  2021                           
  2022                           ;16F1717_Internal.c: 59: SCS1 = 0;
  2023  053A  1099               	bcf	25,1	;volatile
  2024                           
  2025                           ;16F1717_Internal.c: 62: IRCF0 = 1;
  2026  053B  1599               	bsf	25,3	;volatile
  2027                           
  2028                           ;16F1717_Internal.c: 63: IRCF1 = 1;
  2029  053C  1619               	bsf	25,4	;volatile
  2030                           
  2031                           ;16F1717_Internal.c: 64: IRCF2 = 1;
  2032  053D  1699               	bsf	25,5	;volatile
  2033                           
  2034                           ;16F1717_Internal.c: 65: IRCF3 = 1;
  2035  053E  1719               	bsf	25,6	;volatile
  2036                           
  2037                           ;16F1717_Internal.c: 68: SPLLEN = 0;
  2038  053F  1399               	bcf	25,7	;volatile
  2039  0540  0008               	return
  2040  0541                     __end_of_internal_16:	
  2041                           
  2042                           	psect	text3
  2043  0520                     __ptext3:	
  2044 ;; *************** function _SPI_Initialize *****************
  2045 ;; Defined at:
  2046 ;;		line 63 in file "SPI.c"
  2047 ;; Parameters:    Size  Location     Type
  2048 ;;		None
  2049 ;; Auto vars:     Size  Location     Type
  2050 ;;		None
  2051 ;; Return value:  Size  Location     Type
  2052 ;;                  1    wreg      void 
  2053 ;; Registers used:
  2054 ;;		wreg, status,2
  2055 ;; Tracked objects:
  2056 ;;		On entry : 0/0
  2057 ;;		On exit  : 0/0
  2058 ;;		Unchanged: 0/0
  2059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2064 ;;Total ram usage:        0 bytes
  2065 ;; Hardware stack levels used:    1
  2066 ;; This function calls:
  2067 ;;		Nothing
  2068 ;; This function is called by:
  2069 ;;		_initMain
  2070 ;; This function uses a non-reentrant model
  2071 ;;
  2072                           
  2073                           
  2074                           ;psect for function _SPI_Initialize
  2075  0520                     _SPI_Initialize:	
  2076                           
  2077                           ;SPI.c: 68: SSP1STAT = 0x40;
  2078                           
  2079                           ;incstack = 0
  2080                           ; Regs used in _SPI_Initialize: [wreg+status,2]
  2081  0520  3040               	movlw	64
  2082  0521  0024               	movlb	4	; select bank4
  2083  0522  0094               	movwf	20	;volatile
  2084                           
  2085                           ;SPI.c: 71: SSP1CON1 = 0x22;
  2086  0523  3022               	movlw	34
  2087  0524  0095               	movwf	21	;volatile
  2088                           
  2089                           ;SPI.c: 74: SSP1ADD = 0x00;
  2090  0525  0192               	clrf	18	;volatile
  2091  0526  0008               	return
  2092  0527                     __end_of_SPI_Initialize:	
  2093                           
  2094                           	psect	text4
  2095  06DD                     __ptext4:	
  2096 ;; *************** function _Lcd_Init *****************
  2097 ;; Defined at:
  2098 ;;		line 122 in file "LCD.c"
  2099 ;; Parameters:    Size  Location     Type
  2100 ;;		None
  2101 ;; Auto vars:     Size  Location     Type
  2102 ;;		None
  2103 ;; Return value:  Size  Location     Type
  2104 ;;                  1    wreg      void 
  2105 ;; Registers used:
  2106 ;;		wreg, status,2, status,0, pclath, cstack
  2107 ;; Tracked objects:
  2108 ;;		On entry : 0/0
  2109 ;;		On exit  : 0/0
  2110 ;;		Unchanged: 0/0
  2111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2114 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2115 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2116 ;;Total ram usage:        2 bytes
  2117 ;; Hardware stack levels used:    1
  2118 ;; Hardware stack levels required when called:    2
  2119 ;; This function calls:
  2120 ;;		_Lcd_Cmd
  2121 ;;		_Lcd_Port
  2122 ;; This function is called by:
  2123 ;;		_initMain
  2124 ;; This function uses a non-reentrant model
  2125 ;;
  2126                           
  2127                           
  2128                           ;psect for function _Lcd_Init
  2129  06DD                     _Lcd_Init:	
  2130                           
  2131                           ;LCD.c: 124: Lcd_Port(0x00);
  2132                           
  2133                           ;incstack = 0
  2134                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2135  06DD  3000               	movlw	0
  2136  06DE  3185  2576  3186   	fcall	_Lcd_Port
  2137                           
  2138                           ;LCD.c: 125: _delay((unsigned long)((20)*(16000000/4000.0)));
  2139  06E1  3068               	movlw	104
  2140  06E2  00F5               	movwf	??_Lcd_Init+1
  2141  06E3  30E4               	movlw	228
  2142  06E4  00F4               	movwf	??_Lcd_Init
  2143  06E5                     u787:	
  2144  06E5  0BF4               	decfsz	??_Lcd_Init,f
  2145  06E6  2EE5               	goto	u787
  2146  06E7  0BF5               	decfsz	??_Lcd_Init+1,f
  2147  06E8  2EE5               	goto	u787
  2148  06E9  0000               	nop
  2149                           
  2150                           ;LCD.c: 126: Lcd_Cmd(0x03);
  2151  06EA  3003               	movlw	3
  2152  06EB  3185  2561  3186   	fcall	_Lcd_Cmd
  2153                           
  2154                           ;LCD.c: 127: _delay((unsigned long)((5)*(16000000/4000.0)));
  2155  06EE  301A               	movlw	26
  2156  06EF  00F5               	movwf	??_Lcd_Init+1
  2157  06F0  30F8               	movlw	248
  2158  06F1  00F4               	movwf	??_Lcd_Init
  2159  06F2                     u797:	
  2160  06F2  0BF4               	decfsz	??_Lcd_Init,f
  2161  06F3  2EF2               	goto	u797
  2162  06F4  0BF5               	decfsz	??_Lcd_Init+1,f
  2163  06F5  2EF2               	goto	u797
  2164  06F6  0000               	nop
  2165                           
  2166                           ;LCD.c: 128: Lcd_Cmd(0x03);
  2167  06F7  3003               	movlw	3
  2168  06F8  3185  2561  3186   	fcall	_Lcd_Cmd
  2169                           
  2170                           ;LCD.c: 129: _delay((unsigned long)((11)*(16000000/4000.0)));
  2171  06FB  303A               	movlw	58
  2172  06FC  00F5               	movwf	??_Lcd_Init+1
  2173  06FD  3023               	movlw	35
  2174  06FE  00F4               	movwf	??_Lcd_Init
  2175  06FF                     u807:	
  2176  06FF  0BF4               	decfsz	??_Lcd_Init,f
  2177  0700  2EFF               	goto	u807
  2178  0701  0BF5               	decfsz	??_Lcd_Init+1,f
  2179  0702  2EFF               	goto	u807
  2180                           
  2181                           ;LCD.c: 130: Lcd_Cmd(0x03);
  2182  0703  3003               	movlw	3
  2183  0704  3185  2561  3186   	fcall	_Lcd_Cmd
  2184                           
  2185                           ;LCD.c: 132: Lcd_Cmd(0x02);
  2186  0707  3002               	movlw	2
  2187  0708  3185  2561  3186   	fcall	_Lcd_Cmd
  2188                           
  2189                           ;LCD.c: 133: Lcd_Cmd(0x02);
  2190  070B  3002               	movlw	2
  2191  070C  3185  2561  3186   	fcall	_Lcd_Cmd
  2192                           
  2193                           ;LCD.c: 134: Lcd_Cmd(0x08);
  2194  070F  3008               	movlw	8
  2195  0710  3185  2561  3186   	fcall	_Lcd_Cmd
  2196                           
  2197                           ;LCD.c: 135: Lcd_Cmd(0x00);
  2198  0713  3000               	movlw	0
  2199  0714  3185  2561  3186   	fcall	_Lcd_Cmd
  2200                           
  2201                           ;LCD.c: 136: Lcd_Cmd(0x0C);
  2202  0717  300C               	movlw	12
  2203  0718  3185  2561  3186   	fcall	_Lcd_Cmd
  2204                           
  2205                           ;LCD.c: 137: Lcd_Cmd(0x00);
  2206  071B  3000               	movlw	0
  2207  071C  3185  2561  3186   	fcall	_Lcd_Cmd
  2208                           
  2209                           ;LCD.c: 138: Lcd_Cmd(0x06);
  2210  071F  3006               	movlw	6
  2211  0720  3185  2561         	fcall	_Lcd_Cmd
  2212  0722  0008               	return
  2213  0723                     __end_of_Lcd_Init:	
  2214                           
  2215                           	psect	text5
  2216  0527                     __ptext5:	
  2217 ;; *************** function _Lcd_Clear *****************
  2218 ;; Defined at:
  2219 ;;		line 79 in file "LCD.c"
  2220 ;; Parameters:    Size  Location     Type
  2221 ;;		None
  2222 ;; Auto vars:     Size  Location     Type
  2223 ;;		None
  2224 ;; Return value:  Size  Location     Type
  2225 ;;                  1    wreg      void 
  2226 ;; Registers used:
  2227 ;;		wreg, status,2, status,0, pclath, cstack
  2228 ;; Tracked objects:
  2229 ;;		On entry : 0/0
  2230 ;;		On exit  : 0/0
  2231 ;;		Unchanged: 0/0
  2232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2237 ;;Total ram usage:        0 bytes
  2238 ;; Hardware stack levels used:    1
  2239 ;; Hardware stack levels required when called:    2
  2240 ;; This function calls:
  2241 ;;		_Lcd_Cmd
  2242 ;; This function is called by:
  2243 ;;		_initMain
  2244 ;;		_main
  2245 ;; This function uses a non-reentrant model
  2246 ;;
  2247                           
  2248                           
  2249                           ;psect for function _Lcd_Clear
  2250  0527                     _Lcd_Clear:	
  2251                           
  2252                           ;LCD.c: 81: Lcd_Cmd(0);
  2253                           
  2254                           ;incstack = 0
  2255                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2256  0527  3000               	movlw	0
  2257  0528  3185  2561  3185   	fcall	_Lcd_Cmd
  2258                           
  2259                           ;LCD.c: 82: Lcd_Cmd(1);
  2260  052B  3001               	movlw	1
  2261  052C  3185  2561         	fcall	_Lcd_Cmd
  2262  052E  0008               	return
  2263  052F                     __end_of_Lcd_Clear:	
  2264                           
  2265                           	psect	text6
  2266  0541                     __ptext6:	
  2267 ;; *************** function _digiPot_write *****************
  2268 ;; Defined at:
  2269 ;;		line 149 in file "Main.c"
  2270 ;; Parameters:    Size  Location     Type
  2271 ;;  i               2    1[COMMON] int 
  2272 ;; Auto vars:     Size  Location     Type
  2273 ;;		None
  2274 ;; Return value:  Size  Location     Type
  2275 ;;                  1    wreg      void 
  2276 ;; Registers used:
  2277 ;;		wreg, status,2, status,0, pclath, cstack
  2278 ;; Tracked objects:
  2279 ;;		On entry : 0/0
  2280 ;;		On exit  : 0/0
  2281 ;;		Unchanged: 0/0
  2282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2283 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2286 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2287 ;;Total ram usage:        2 bytes
  2288 ;; Hardware stack levels used:    1
  2289 ;; Hardware stack levels required when called:    1
  2290 ;; This function calls:
  2291 ;;		_SPI_Exchange8bit
  2292 ;; This function is called by:
  2293 ;;		_main
  2294 ;; This function uses a non-reentrant model
  2295 ;;
  2296                           
  2297                           
  2298                           ;psect for function _digiPot_write
  2299  0541                     _digiPot_write:	
  2300                           
  2301                           ;Main.c: 151: LATDbits.LATD1 = 0;
  2302                           
  2303                           ;incstack = 0
  2304                           ; Regs used in _digiPot_write: [wreg+status,2+status,0+pclath+cstack]
  2305  0541  0022               	movlb	2	; select bank2
  2306  0542  108F               	bcf	15,1	;volatile
  2307                           
  2308                           ;Main.c: 154: SPI_Exchange8bit(0x00);
  2309  0543  3000               	movlw	0
  2310  0544  3185  252F  3185   	fcall	_SPI_Exchange8bit
  2311                           
  2312                           ;Main.c: 157: SPI_Exchange8bit(i);
  2313  0547  0871               	movf	digiPot_write@i,w
  2314  0548  3185  252F         	fcall	_SPI_Exchange8bit
  2315                           
  2316                           ;Main.c: 160: LATDbits.LATD1 = 1;
  2317  054A  0022               	movlb	2	; select bank2
  2318  054B  148F               	bsf	15,1	;volatile
  2319  054C  0008               	return
  2320  054D                     __end_of_digiPot_write:	
  2321                           
  2322                           	psect	text7
  2323  052F                     __ptext7:	
  2324 ;; *************** function _SPI_Exchange8bit *****************
  2325 ;; Defined at:
  2326 ;;		line 77 in file "SPI.c"
  2327 ;; Parameters:    Size  Location     Type
  2328 ;;  data            1    wreg     unsigned char 
  2329 ;; Auto vars:     Size  Location     Type
  2330 ;;  data            1    0[COMMON] unsigned char 
  2331 ;; Return value:  Size  Location     Type
  2332 ;;                  1    wreg      unsigned char 
  2333 ;; Registers used:
  2334 ;;		wreg
  2335 ;; Tracked objects:
  2336 ;;		On entry : 0/0
  2337 ;;		On exit  : 0/0
  2338 ;;		Unchanged: 0/0
  2339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2341 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2343 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2344 ;;Total ram usage:        1 bytes
  2345 ;; Hardware stack levels used:    1
  2346 ;; This function calls:
  2347 ;;		Nothing
  2348 ;; This function is called by:
  2349 ;;		_digiPot_write
  2350 ;;		_SPI_Exchange8bitBuffer
  2351 ;; This function uses a non-reentrant model
  2352 ;;
  2353                           
  2354                           
  2355                           ;psect for function _SPI_Exchange8bit
  2356  052F                     _SPI_Exchange8bit:	
  2357                           
  2358                           ;incstack = 0
  2359                           ; Regs used in _SPI_Exchange8bit: [wreg]
  2360                           ;SPI_Exchange8bit@data stored from wreg
  2361  052F  00F0               	movwf	SPI_Exchange8bit@data
  2362                           
  2363                           ;SPI.c: 80: SSP1CON1bits.WCOL = 0;
  2364  0530  0024               	movlb	4	; select bank4
  2365  0531  1395               	bcf	21,7	;volatile
  2366                           
  2367                           ;SPI.c: 82: SSPBUF = data;
  2368  0532  0870               	movf	SPI_Exchange8bit@data,w
  2369  0533  0091               	movwf	17	;volatile
  2370  0534                     l174:	
  2371                           ;SPI.c: 85: {
  2372                           
  2373                           ;SPI.c: 84: while(SSP1STATbits.BF == 0x0)
  2374                           
  2375  0534  1C14               	btfss	20,0	;volatile
  2376  0535  2D34               	goto	l174
  2377                           
  2378                           ;SPI.c: 86: }
  2379                           ;SPI.c: 88: return (SSPBUF);
  2380  0536  0811               	movf	17,w	;volatile
  2381  0537  0008               	return
  2382  0538                     __end_of_SPI_Exchange8bit:	
  2383                           
  2384                           	psect	text8
  2385  054D                     __ptext8:	
  2386 ;; *************** function _Lcd_Write_Integer *****************
  2387 ;; Defined at:
  2388 ;;		line 216 in file "LCD.c"
  2389 ;; Parameters:    Size  Location     Type
  2390 ;;  v               2   15[BANK0 ] int 
  2391 ;; Auto vars:     Size  Location     Type
  2392 ;;  buf             8   17[BANK0 ] unsigned char [8]
  2393 ;; Return value:  Size  Location     Type
  2394 ;;                  1    wreg      void 
  2395 ;; Registers used:
  2396 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2397 ;; Tracked objects:
  2398 ;;		On entry : 0/0
  2399 ;;		On exit  : 0/0
  2400 ;;		Unchanged: 0/0
  2401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2402 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2403 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2405 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2406 ;;Total ram usage:       10 bytes
  2407 ;; Hardware stack levels used:    1
  2408 ;; Hardware stack levels required when called:    3
  2409 ;; This function calls:
  2410 ;;		_Lcd_Write_String
  2411 ;;		_itoa
  2412 ;; This function is called by:
  2413 ;;		_main
  2414 ;; This function uses a non-reentrant model
  2415 ;;
  2416                           
  2417                           
  2418                           ;psect for function _Lcd_Write_Integer
  2419  054D                     _Lcd_Write_Integer:	
  2420                           
  2421                           ;LCD.c: 218: unsigned char buf[8];
  2422                           ;LCD.c: 220: Lcd_Write_String(itoa(buf, v, 10));
  2423                           
  2424                           ;incstack = 0
  2425                           ; Regs used in _Lcd_Write_Integer: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2426  054D  0020               	movlb	0	; select bank0
  2427  054E  0830               	movf	Lcd_Write_Integer@v+1,w
  2428  054F  00A5               	movwf	itoa@val+1
  2429  0550  082F               	movf	Lcd_Write_Integer@v,w
  2430  0551  00A4               	movwf	itoa@val
  2431  0552  300A               	movlw	10
  2432  0553  00A6               	movwf	itoa@base
  2433  0554  3000               	movlw	0
  2434  0555  00A7               	movwf	itoa@base+1
  2435  0556  3031               	movlw	(low (Lcd_Write_Integer@buf| 0))& (0+255)
  2436  0557  3185  25AA  3185   	fcall	_itoa
  2437  055A  0020               	movlb	0	; select bank0
  2438  055B  00AA               	movwf	Lcd_Write_String@a
  2439  055C  3000               	movlw	0
  2440  055D  00AB               	movwf	Lcd_Write_String@a+1
  2441  055E  3185  258E         	fcall	_Lcd_Write_String
  2442  0560  0008               	return
  2443  0561                     __end_of_Lcd_Write_Integer:	
  2444                           
  2445                           	psect	text9
  2446  05AA                     __ptext9:	
  2447 ;; *************** function _itoa *****************
  2448 ;; Defined at:
  2449 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\itoa.c"
  2450 ;; Parameters:    Size  Location     Type
  2451 ;;  buf             1    wreg     PTR unsigned char 
  2452 ;;		 -> Lcd_Write_Integer@buf(8), 
  2453 ;;  val             2    4[BANK0 ] int 
  2454 ;;  base            2    6[BANK0 ] int 
  2455 ;; Auto vars:     Size  Location     Type
  2456 ;;  buf             1    9[BANK0 ] PTR unsigned char 
  2457 ;;		 -> Lcd_Write_Integer@buf(8), 
  2458 ;;  cp              1    8[BANK0 ] PTR unsigned char 
  2459 ;;		 -> Lcd_Write_Integer@buf(8), 
  2460 ;; Return value:  Size  Location     Type
  2461 ;;                  1    wreg      PTR unsigned char 
  2462 ;; Registers used:
  2463 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2464 ;; Tracked objects:
  2465 ;;		On entry : 0/0
  2466 ;;		On exit  : 0/0
  2467 ;;		Unchanged: 0/0
  2468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2469 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2470 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2471 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2472 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2473 ;;Total ram usage:        7 bytes
  2474 ;; Hardware stack levels used:    1
  2475 ;; Hardware stack levels required when called:    2
  2476 ;; This function calls:
  2477 ;;		_utoa
  2478 ;; This function is called by:
  2479 ;;		_Lcd_Write_Integer
  2480 ;; This function uses a non-reentrant model
  2481 ;;
  2482                           
  2483                           
  2484                           ;psect for function _itoa
  2485  05AA                     _itoa:	
  2486                           
  2487                           ;incstack = 0
  2488                           ; Regs used in _itoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2489                           ;itoa@buf stored from wreg
  2490  05AA  0020               	movlb	0	; select bank0
  2491  05AB  00A9               	movwf	itoa@buf
  2492  05AC  0829               	movf	itoa@buf,w
  2493  05AD  00FD               	movwf	??_itoa
  2494  05AE  087D               	movf	??_itoa,w
  2495  05AF  00A8               	movwf	itoa@cp
  2496  05B0  1FA5               	btfss	itoa@val+1,7
  2497  05B1  2DC2               	goto	l1148
  2498  05B2  302D               	movlw	45
  2499  05B3  00FD               	movwf	??_itoa
  2500  05B4  0829               	movf	itoa@buf,w
  2501  05B5  0086               	movwf	6
  2502  05B6  0187               	clrf	7
  2503  05B7  087D               	movf	??_itoa,w
  2504  05B8  0081               	movwf	1
  2505  05B9  3001               	movlw	1
  2506  05BA  00FD               	movwf	??_itoa
  2507  05BB  087D               	movf	??_itoa,w
  2508  05BC  07A9               	addwf	itoa@buf,f
  2509  05BD  09A4               	comf	itoa@val,f
  2510  05BE  09A5               	comf	itoa@val+1,f
  2511  05BF  0AA4               	incf	itoa@val,f
  2512  05C0  1903               	skipnz
  2513  05C1  0AA5               	incf	itoa@val+1,f
  2514  05C2                     l1148:	
  2515  05C2  0825               	movf	itoa@val+1,w
  2516  05C3  00F9               	movwf	utoa@val+1
  2517  05C4  0824               	movf	itoa@val,w
  2518  05C5  00F8               	movwf	utoa@val
  2519  05C6  0827               	movf	itoa@base+1,w
  2520  05C7  00FB               	movwf	utoa@base+1
  2521  05C8  0826               	movf	itoa@base,w
  2522  05C9  00FA               	movwf	utoa@base
  2523  05CA  0829               	movf	itoa@buf,w
  2524  05CB  3187  2723         	fcall	_utoa
  2525  05CD  0020               	movlb	0	; select bank0
  2526  05CE  0828               	movf	itoa@cp,w
  2527  05CF  0008               	return
  2528  05D0                     __end_of_itoa:	
  2529                           
  2530                           	psect	text10
  2531  0723                     __ptext10:	
  2532 ;; *************** function _utoa *****************
  2533 ;; Defined at:
  2534 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\itoa.c"
  2535 ;; Parameters:    Size  Location     Type
  2536 ;;  buf             1    wreg     PTR unsigned char 
  2537 ;;		 -> Lcd_Write_Integer@buf(8), 
  2538 ;;  val             2    8[COMMON] unsigned int 
  2539 ;;  base            2   10[COMMON] int 
  2540 ;; Auto vars:     Size  Location     Type
  2541 ;;  buf             1    3[BANK0 ] PTR unsigned char 
  2542 ;;		 -> Lcd_Write_Integer@buf(8), 
  2543 ;;  v               2    0[BANK0 ] unsigned int 
  2544 ;;  c               1    2[BANK0 ] unsigned char 
  2545 ;; Return value:  Size  Location     Type
  2546 ;;                  1    wreg      PTR unsigned char 
  2547 ;; Registers used:
  2548 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2549 ;; Tracked objects:
  2550 ;;		On entry : 0/0
  2551 ;;		On exit  : 0/0
  2552 ;;		Unchanged: 0/0
  2553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2554 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2555 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2556 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2557 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2558 ;;Total ram usage:        9 bytes
  2559 ;; Hardware stack levels used:    1
  2560 ;; Hardware stack levels required when called:    1
  2561 ;; This function calls:
  2562 ;;		___lwdiv
  2563 ;;		___lwmod
  2564 ;; This function is called by:
  2565 ;;		_itoa
  2566 ;; This function uses a non-reentrant model
  2567 ;;
  2568                           
  2569                           
  2570                           ;psect for function _utoa
  2571  0723                     _utoa:	
  2572                           
  2573                           ;incstack = 0
  2574                           ; Regs used in _utoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2575                           ;utoa@buf stored from wreg
  2576  0723  0020               	movlb	0	; select bank0
  2577  0724  00A3               	movwf	utoa@buf
  2578  0725  0879               	movf	utoa@val+1,w
  2579  0726  00A1               	movwf	utoa@v+1
  2580  0727  0878               	movf	utoa@val,w
  2581  0728  00A0               	movwf	utoa@v
  2582  0729                     l1088:	
  2583  0729  087B               	movf	utoa@base+1,w
  2584  072A  00F1               	movwf	___lwdiv@divisor+1
  2585  072B  087A               	movf	utoa@base,w
  2586  072C  00F0               	movwf	___lwdiv@divisor
  2587  072D  0821               	movf	utoa@v+1,w
  2588  072E  00F3               	movwf	___lwdiv@dividend+1
  2589  072F  0820               	movf	utoa@v,w
  2590  0730  00F2               	movwf	___lwdiv@dividend
  2591  0731  3186  2628  3187   	fcall	___lwdiv
  2592  0734  0871               	movf	?___lwdiv+1,w
  2593  0735  0020               	movlb	0	; select bank0
  2594  0736  00A1               	movwf	utoa@v+1
  2595  0737  0870               	movf	?___lwdiv,w
  2596  0738  00A0               	movwf	utoa@v
  2597  0739  3001               	movlw	1
  2598  073A  00FC               	movwf	??_utoa
  2599  073B  087C               	movf	??_utoa,w
  2600  073C  07A3               	addwf	utoa@buf,f
  2601  073D  0820               	movf	utoa@v,w
  2602  073E  0421               	iorwf	utoa@v+1,w
  2603  073F  1D03               	btfss	3,2
  2604  0740  2F29               	goto	l1088
  2605  0741  0823               	movf	utoa@buf,w
  2606  0742  0086               	movwf	6
  2607  0743  0187               	clrf	7
  2608  0744  0181               	clrf	1
  2609  0745  3001               	movlw	1
  2610  0746  02A3               	subwf	utoa@buf,f
  2611  0747                     l1098:	
  2612  0747  087B               	movf	utoa@base+1,w
  2613  0748  00F1               	movwf	___lwmod@divisor+1
  2614  0749  087A               	movf	utoa@base,w
  2615  074A  00F0               	movwf	___lwmod@divisor
  2616  074B  0879               	movf	utoa@val+1,w
  2617  074C  00F3               	movwf	___lwmod@dividend+1
  2618  074D  0878               	movf	utoa@val,w
  2619  074E  00F2               	movwf	___lwmod@dividend
  2620  074F  3185  25FC  3187   	fcall	___lwmod
  2621  0752  0870               	movf	?___lwmod,w
  2622  0753  00FC               	movwf	??_utoa
  2623  0754  087C               	movf	??_utoa,w
  2624  0755  0020               	movlb	0	; select bank0
  2625  0756  00A2               	movwf	utoa@c
  2626  0757  087B               	movf	utoa@base+1,w
  2627  0758  00F1               	movwf	___lwdiv@divisor+1
  2628  0759  087A               	movf	utoa@base,w
  2629  075A  00F0               	movwf	___lwdiv@divisor
  2630  075B  0879               	movf	utoa@val+1,w
  2631  075C  00F3               	movwf	___lwdiv@dividend+1
  2632  075D  0878               	movf	utoa@val,w
  2633  075E  00F2               	movwf	___lwdiv@dividend
  2634  075F  3186  2628  3187   	fcall	___lwdiv
  2635  0762  0871               	movf	?___lwdiv+1,w
  2636  0763  00F9               	movwf	utoa@val+1
  2637  0764  0870               	movf	?___lwdiv,w
  2638  0765  00F8               	movwf	utoa@val
  2639  0766  300A               	movlw	10
  2640  0767  0020               	movlb	0	; select bank0
  2641  0768  0222               	subwf	utoa@c,w
  2642  0769  1C03               	skipc
  2643  076A  2F6F               	goto	l533
  2644  076B  3007               	movlw	7
  2645  076C  00FC               	movwf	??_utoa
  2646  076D  087C               	movf	??_utoa,w
  2647  076E  07A2               	addwf	utoa@c,f
  2648  076F                     l533:	
  2649  076F  3030               	movlw	48
  2650  0770  00FC               	movwf	??_utoa
  2651  0771  087C               	movf	??_utoa,w
  2652  0772  07A2               	addwf	utoa@c,f
  2653  0773  0822               	movf	utoa@c,w
  2654  0774  00FC               	movwf	??_utoa
  2655  0775  0823               	movf	utoa@buf,w
  2656  0776  0086               	movwf	6
  2657  0777  0187               	clrf	7
  2658  0778  087C               	movf	??_utoa,w
  2659  0779  0081               	movwf	1
  2660  077A  3001               	movlw	1
  2661  077B  02A3               	subwf	utoa@buf,f
  2662  077C  0878               	movf	utoa@val,w
  2663  077D  0479               	iorwf	utoa@val+1,w
  2664  077E  1D03               	btfss	3,2
  2665  077F  2F47               	goto	l1098
  2666                           
  2667                           ;	Return value of _utoa is never used
  2668  0780  3001               	movlw	1
  2669  0781  00FC               	movwf	??_utoa
  2670  0782  087C               	movf	??_utoa,w
  2671  0783  07A3               	addwf	utoa@buf,f
  2672  0784  0008               	return
  2673  0785                     __end_of_utoa:	
  2674                           
  2675                           	psect	text11
  2676  05FC                     __ptext11:	
  2677 ;; *************** function ___lwmod *****************
  2678 ;; Defined at:
  2679 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwmod.c"
  2680 ;; Parameters:    Size  Location     Type
  2681 ;;  divisor         2    0[COMMON] unsigned int 
  2682 ;;  dividend        2    2[COMMON] unsigned int 
  2683 ;; Auto vars:     Size  Location     Type
  2684 ;;  counter         1    5[COMMON] unsigned char 
  2685 ;; Return value:  Size  Location     Type
  2686 ;;                  2    0[COMMON] unsigned int 
  2687 ;; Registers used:
  2688 ;;		wreg, status,2, status,0
  2689 ;; Tracked objects:
  2690 ;;		On entry : 0/0
  2691 ;;		On exit  : 0/0
  2692 ;;		Unchanged: 0/0
  2693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2694 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2695 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2696 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2697 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2698 ;;Total ram usage:        6 bytes
  2699 ;; Hardware stack levels used:    1
  2700 ;; This function calls:
  2701 ;;		Nothing
  2702 ;; This function is called by:
  2703 ;;		_utoa
  2704 ;; This function uses a non-reentrant model
  2705 ;;
  2706                           
  2707                           
  2708                           ;psect for function ___lwmod
  2709  05FC                     ___lwmod:	
  2710                           
  2711                           ;incstack = 0
  2712                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2713  05FC  0870               	movf	___lwmod@divisor,w
  2714  05FD  0471               	iorwf	___lwmod@divisor+1,w
  2715  05FE  1903               	btfsc	3,2
  2716  05FF  2E23               	goto	l1052
  2717  0600  01F5               	clrf	___lwmod@counter
  2718  0601  0AF5               	incf	___lwmod@counter,f
  2719  0602                     l1042:	
  2720  0602  1BF1               	btfsc	___lwmod@divisor+1,7
  2721  0603  2E0E               	goto	l1044
  2722  0604  3001               	movlw	1
  2723  0605                     u495:	
  2724  0605  35F0               	lslf	___lwmod@divisor,f
  2725  0606  0DF1               	rlf	___lwmod@divisor+1,f
  2726  0607  0B89               	decfsz	9,f
  2727  0608  2E05               	goto	u495
  2728  0609  3001               	movlw	1
  2729  060A  00F4               	movwf	??___lwmod
  2730  060B  0874               	movf	??___lwmod,w
  2731  060C  07F5               	addwf	___lwmod@counter,f
  2732  060D  2E02               	goto	l1042
  2733  060E                     l1044:	
  2734  060E  0871               	movf	___lwmod@divisor+1,w
  2735  060F  0273               	subwf	___lwmod@dividend+1,w
  2736  0610  1D03               	skipz
  2737  0611  2E14               	goto	u515
  2738  0612  0870               	movf	___lwmod@divisor,w
  2739  0613  0272               	subwf	___lwmod@dividend,w
  2740  0614                     u515:	
  2741  0614  1C03               	skipc
  2742  0615  2E1A               	goto	l1048
  2743  0616  0870               	movf	___lwmod@divisor,w
  2744  0617  02F2               	subwf	___lwmod@dividend,f
  2745  0618  0871               	movf	___lwmod@divisor+1,w
  2746  0619  3BF3               	subwfb	___lwmod@dividend+1,f
  2747  061A                     l1048:	
  2748  061A  3001               	movlw	1
  2749  061B                     u525:	
  2750  061B  36F1               	lsrf	___lwmod@divisor+1,f
  2751  061C  0CF0               	rrf	___lwmod@divisor,f
  2752  061D  0B89               	decfsz	9,f
  2753  061E  2E1B               	goto	u525
  2754  061F  3001               	movlw	1
  2755  0620  02F5               	subwf	___lwmod@counter,f
  2756  0621  1D03               	btfss	3,2
  2757  0622  2E0E               	goto	l1044
  2758  0623                     l1052:	
  2759  0623  0873               	movf	___lwmod@dividend+1,w
  2760  0624  00F1               	movwf	?___lwmod+1
  2761  0625  0872               	movf	___lwmod@dividend,w
  2762  0626  00F0               	movwf	?___lwmod
  2763  0627  0008               	return
  2764  0628                     __end_of___lwmod:	
  2765                           
  2766                           	psect	text12
  2767  0628                     __ptext12:	
  2768 ;; *************** function ___lwdiv *****************
  2769 ;; Defined at:
  2770 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c"
  2771 ;; Parameters:    Size  Location     Type
  2772 ;;  divisor         2    0[COMMON] unsigned int 
  2773 ;;  dividend        2    2[COMMON] unsigned int 
  2774 ;; Auto vars:     Size  Location     Type
  2775 ;;  quotient        2    5[COMMON] unsigned int 
  2776 ;;  counter         1    7[COMMON] unsigned char 
  2777 ;; Return value:  Size  Location     Type
  2778 ;;                  2    0[COMMON] unsigned int 
  2779 ;; Registers used:
  2780 ;;		wreg, status,2, status,0
  2781 ;; Tracked objects:
  2782 ;;		On entry : 0/0
  2783 ;;		On exit  : 0/0
  2784 ;;		Unchanged: 0/0
  2785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2786 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2787 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2788 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2789 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2790 ;;Total ram usage:        8 bytes
  2791 ;; Hardware stack levels used:    1
  2792 ;; This function calls:
  2793 ;;		Nothing
  2794 ;; This function is called by:
  2795 ;;		_utoa
  2796 ;; This function uses a non-reentrant model
  2797 ;;
  2798                           
  2799                           
  2800                           ;psect for function ___lwdiv
  2801  0628                     ___lwdiv:	
  2802                           
  2803                           ;incstack = 0
  2804                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2805  0628  01F5               	clrf	___lwdiv@quotient
  2806  0629  01F6               	clrf	___lwdiv@quotient+1
  2807  062A  0870               	movf	___lwdiv@divisor,w
  2808  062B  0471               	iorwf	___lwdiv@divisor+1,w
  2809  062C  1903               	btfsc	3,2
  2810  062D  2E57               	goto	l1030
  2811  062E  01F7               	clrf	___lwdiv@counter
  2812  062F  0AF7               	incf	___lwdiv@counter,f
  2813  0630                     l1018:	
  2814  0630  1BF1               	btfsc	___lwdiv@divisor+1,7
  2815  0631  2E3C               	goto	l1020
  2816  0632  3001               	movlw	1
  2817  0633                     u425:	
  2818  0633  35F0               	lslf	___lwdiv@divisor,f
  2819  0634  0DF1               	rlf	___lwdiv@divisor+1,f
  2820  0635  0B89               	decfsz	9,f
  2821  0636  2E33               	goto	u425
  2822  0637  3001               	movlw	1
  2823  0638  00F4               	movwf	??___lwdiv
  2824  0639  0874               	movf	??___lwdiv,w
  2825  063A  07F7               	addwf	___lwdiv@counter,f
  2826  063B  2E30               	goto	l1018
  2827  063C                     l1020:	
  2828  063C  3001               	movlw	1
  2829  063D                     u445:	
  2830  063D  35F5               	lslf	___lwdiv@quotient,f
  2831  063E  0DF6               	rlf	___lwdiv@quotient+1,f
  2832  063F  0B89               	decfsz	9,f
  2833  0640  2E3D               	goto	u445
  2834  0641  0871               	movf	___lwdiv@divisor+1,w
  2835  0642  0273               	subwf	___lwdiv@dividend+1,w
  2836  0643  1D03               	skipz
  2837  0644  2E47               	goto	u455
  2838  0645  0870               	movf	___lwdiv@divisor,w
  2839  0646  0272               	subwf	___lwdiv@dividend,w
  2840  0647                     u455:	
  2841  0647  1C03               	skipc
  2842  0648  2E4E               	goto	l1026
  2843  0649  0870               	movf	___lwdiv@divisor,w
  2844  064A  02F2               	subwf	___lwdiv@dividend,f
  2845  064B  0871               	movf	___lwdiv@divisor+1,w
  2846  064C  3BF3               	subwfb	___lwdiv@dividend+1,f
  2847  064D  1475               	bsf	___lwdiv@quotient,0
  2848  064E                     l1026:	
  2849  064E  3001               	movlw	1
  2850  064F                     u465:	
  2851  064F  36F1               	lsrf	___lwdiv@divisor+1,f
  2852  0650  0CF0               	rrf	___lwdiv@divisor,f
  2853  0651  0B89               	decfsz	9,f
  2854  0652  2E4F               	goto	u465
  2855  0653  3001               	movlw	1
  2856  0654  02F7               	subwf	___lwdiv@counter,f
  2857  0655  1D03               	btfss	3,2
  2858  0656  2E3C               	goto	l1020
  2859  0657                     l1030:	
  2860  0657  0876               	movf	___lwdiv@quotient+1,w
  2861  0658  00F1               	movwf	?___lwdiv+1
  2862  0659  0875               	movf	___lwdiv@quotient,w
  2863  065A  00F0               	movwf	?___lwdiv
  2864  065B  0008               	return
  2865  065C                     __end_of___lwdiv:	
  2866                           
  2867                           	psect	text13
  2868  058E                     __ptext13:	
  2869 ;; *************** function _Lcd_Write_String *****************
  2870 ;; Defined at:
  2871 ;;		line 173 in file "LCD.c"
  2872 ;; Parameters:    Size  Location     Type
  2873 ;;  a               2   10[BANK0 ] PTR const unsigned char 
  2874 ;;		 -> ftoa@buf(17), STR_1(10), Lcd_Write_Integer@buf(8), 
  2875 ;; Auto vars:     Size  Location     Type
  2876 ;;  i               2   13[BANK0 ] int 
  2877 ;; Return value:  Size  Location     Type
  2878 ;;                  1    wreg      void 
  2879 ;; Registers used:
  2880 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2881 ;; Tracked objects:
  2882 ;;		On entry : 0/0
  2883 ;;		On exit  : 0/0
  2884 ;;		Unchanged: 0/0
  2885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2886 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2887 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2888 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2889 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2890 ;;Total ram usage:        5 bytes
  2891 ;; Hardware stack levels used:    1
  2892 ;; Hardware stack levels required when called:    2
  2893 ;; This function calls:
  2894 ;;		_Lcd_Write_Char
  2895 ;; This function is called by:
  2896 ;;		_Lcd_Write_Integer
  2897 ;;		_main
  2898 ;;		_Lcd_Write_Float
  2899 ;; This function uses a non-reentrant model
  2900 ;;
  2901                           
  2902                           
  2903                           ;psect for function _Lcd_Write_String
  2904  058E                     _Lcd_Write_String:	
  2905                           
  2906                           ;LCD.c: 175: int i;
  2907                           ;LCD.c: 176: for(i=0;a[i]!='\0';i++)
  2908                           
  2909                           ;incstack = 0
  2910                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2911  058E  0020               	movlb	0	; select bank0
  2912  058F  01AD               	clrf	Lcd_Write_String@i
  2913  0590  01AE               	clrf	Lcd_Write_String@i+1
  2914  0591                     l1136:	
  2915  0591  082A               	movf	Lcd_Write_String@a,w
  2916  0592  072D               	addwf	Lcd_Write_String@i,w
  2917  0593  0084               	movwf	4
  2918  0594  082B               	movf	Lcd_Write_String@a+1,w
  2919  0595  3D2E               	addwfc	Lcd_Write_String@i+1,w
  2920  0596  0085               	movwf	5
  2921  0597  0012               	moviw fsr0++
  2922  0598  1903               	btfsc	3,2
  2923  0599  0008               	return
  2924                           
  2925                           ;LCD.c: 177: Lcd_Write_Char(a[i]);
  2926  059A  082A               	movf	Lcd_Write_String@a,w
  2927  059B  072D               	addwf	Lcd_Write_String@i,w
  2928  059C  0084               	movwf	4
  2929  059D  082B               	movf	Lcd_Write_String@a+1,w
  2930  059E  3D2E               	addwfc	Lcd_Write_String@i+1,w
  2931  059F  0085               	movwf	5
  2932  05A0  0800               	movf	0,w	;code access
  2933  05A1  3185  25D0  3185   	fcall	_Lcd_Write_Char
  2934  05A4  3001               	movlw	1
  2935  05A5  0020               	movlb	0	; select bank0
  2936  05A6  07AD               	addwf	Lcd_Write_String@i,f
  2937  05A7  3000               	movlw	0
  2938  05A8  3DAE               	addwfc	Lcd_Write_String@i+1,f
  2939  05A9  2D91               	goto	l1136
  2940  05AA                     __end_of_Lcd_Write_String:	
  2941                           
  2942                           	psect	text14
  2943  05D0                     __ptext14:	
  2944 ;; *************** function _Lcd_Write_Char *****************
  2945 ;; Defined at:
  2946 ;;		line 149 in file "LCD.c"
  2947 ;; Parameters:    Size  Location     Type
  2948 ;;  a               1    wreg     unsigned char 
  2949 ;; Auto vars:     Size  Location     Type
  2950 ;;  a               1    4[COMMON] unsigned char 
  2951 ;;  y               1    3[COMMON] unsigned char 
  2952 ;;  temp            1    2[COMMON] unsigned char 
  2953 ;; Return value:  Size  Location     Type
  2954 ;;                  1    wreg      void 
  2955 ;; Registers used:
  2956 ;;		wreg, status,2, status,0, pclath, cstack
  2957 ;; Tracked objects:
  2958 ;;		On entry : 0/0
  2959 ;;		On exit  : 0/0
  2960 ;;		Unchanged: 0/0
  2961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2963 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2964 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2965 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2966 ;;Total ram usage:        4 bytes
  2967 ;; Hardware stack levels used:    1
  2968 ;; Hardware stack levels required when called:    1
  2969 ;; This function calls:
  2970 ;;		_Lcd_Port
  2971 ;; This function is called by:
  2972 ;;		_Lcd_Write_String
  2973 ;; This function uses a non-reentrant model
  2974 ;;
  2975                           
  2976                           
  2977                           ;psect for function _Lcd_Write_Char
  2978  05D0                     _Lcd_Write_Char:	
  2979                           
  2980                           ;incstack = 0
  2981                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2982                           ;Lcd_Write_Char@a stored from wreg
  2983  05D0  00F4               	movwf	Lcd_Write_Char@a
  2984                           
  2985                           ;LCD.c: 151: char temp,y;
  2986                           ;LCD.c: 152: temp = a&0x0F;
  2987  05D1  0874               	movf	Lcd_Write_Char@a,w
  2988  05D2  390F               	andlw	15
  2989  05D3  00F1               	movwf	??_Lcd_Write_Char
  2990  05D4  0871               	movf	??_Lcd_Write_Char,w
  2991  05D5  00F2               	movwf	Lcd_Write_Char@temp
  2992                           
  2993                           ;LCD.c: 153: y = a&0xF0;
  2994  05D6  0874               	movf	Lcd_Write_Char@a,w
  2995  05D7  39F0               	andlw	240
  2996  05D8  00F1               	movwf	??_Lcd_Write_Char
  2997  05D9  0871               	movf	??_Lcd_Write_Char,w
  2998  05DA  00F3               	movwf	Lcd_Write_Char@y
  2999                           
  3000                           ;LCD.c: 154: RD2 = 1;
  3001  05DB  0020               	movlb	0	; select bank0
  3002  05DC  150F               	bsf	15,2	;volatile
  3003                           
  3004                           ;LCD.c: 155: Lcd_Port(y>>4);
  3005  05DD  0873               	movf	Lcd_Write_Char@y,w
  3006  05DE  00F1               	movwf	??_Lcd_Write_Char
  3007  05DF  3004               	movlw	4
  3008  05E0                     u545:	
  3009  05E0  36F1               	lsrf	??_Lcd_Write_Char,f
  3010  05E1  0B89               	decfsz	9,f
  3011  05E2  2DE0               	goto	u545
  3012  05E3  0871               	movf	??_Lcd_Write_Char,w
  3013  05E4  3185  2576  3185   	fcall	_Lcd_Port
  3014                           
  3015                           ;LCD.c: 156: RD3 = 1;
  3016  05E7  0020               	movlb	0	; select bank0
  3017  05E8  158F               	bsf	15,3	;volatile
  3018                           
  3019                           ;LCD.c: 157: _delay((unsigned long)((40)*(16000000/4000000.0)));
  3020  05E9  3035               	movlw	53
  3021  05EA  00F1               	movwf	??_Lcd_Write_Char
  3022  05EB                     u817:	
  3023  05EB  0BF1               	decfsz	??_Lcd_Write_Char,f
  3024  05EC  2DEB               	goto	u817
  3025                           
  3026                           ;LCD.c: 158: RD3 = 0;
  3027  05ED  0020               	movlb	0	; select bank0
  3028  05EE  118F               	bcf	15,3	;volatile
  3029                           
  3030                           ;LCD.c: 159: Lcd_Port(temp);
  3031  05EF  0872               	movf	Lcd_Write_Char@temp,w
  3032  05F0  3185  2576  3185   	fcall	_Lcd_Port
  3033                           
  3034                           ;LCD.c: 160: RD3 = 1;
  3035  05F3  0020               	movlb	0	; select bank0
  3036  05F4  158F               	bsf	15,3	;volatile
  3037                           
  3038                           ;LCD.c: 161: _delay((unsigned long)((40)*(16000000/4000000.0)));
  3039  05F5  3035               	movlw	53
  3040  05F6  00F1               	movwf	??_Lcd_Write_Char
  3041  05F7                     u827:	
  3042  05F7  0BF1               	decfsz	??_Lcd_Write_Char,f
  3043  05F8  2DF7               	goto	u827
  3044                           
  3045                           ;LCD.c: 162: RD3 = 0;
  3046  05F9  0020               	movlb	0	; select bank0
  3047  05FA  118F               	bcf	15,3	;volatile
  3048  05FB  0008               	return
  3049  05FC                     __end_of_Lcd_Write_Char:	
  3050                           
  3051                           	psect	text15
  3052  065C                     __ptext15:	
  3053 ;; *************** function _Lcd_Set_Cursor *****************
  3054 ;; Defined at:
  3055 ;;		line 93 in file "LCD.c"
  3056 ;; Parameters:    Size  Location     Type
  3057 ;;  a               1    wreg     unsigned char 
  3058 ;;  b               1    4[COMMON] unsigned char 
  3059 ;; Auto vars:     Size  Location     Type
  3060 ;;  a               1    7[COMMON] unsigned char 
  3061 ;;  temp            1   10[COMMON] unsigned char 
  3062 ;;  y               1    9[COMMON] unsigned char 
  3063 ;;  z               1    8[COMMON] unsigned char 
  3064 ;; Return value:  Size  Location     Type
  3065 ;;                  1    wreg      void 
  3066 ;; Registers used:
  3067 ;;		wreg, status,2, status,0, pclath, cstack
  3068 ;; Tracked objects:
  3069 ;;		On entry : 0/0
  3070 ;;		On exit  : 0/0
  3071 ;;		Unchanged: 0/0
  3072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3073 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3074 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3075 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3076 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3077 ;;Total ram usage:        7 bytes
  3078 ;; Hardware stack levels used:    1
  3079 ;; Hardware stack levels required when called:    2
  3080 ;; This function calls:
  3081 ;;		_Lcd_Cmd
  3082 ;; This function is called by:
  3083 ;;		_main
  3084 ;; This function uses a non-reentrant model
  3085 ;;
  3086                           
  3087                           
  3088                           ;psect for function _Lcd_Set_Cursor
  3089  065C                     _Lcd_Set_Cursor:	
  3090                           
  3091                           ;incstack = 0
  3092                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3093                           ;Lcd_Set_Cursor@a stored from wreg
  3094  065C  00F7               	movwf	Lcd_Set_Cursor@a
  3095                           
  3096                           ;LCD.c: 95: char temp,z,y;
  3097                           ;LCD.c: 96: if(a == 1)
  3098  065D  0377               	decf	Lcd_Set_Cursor@a,w
  3099  065E  1D03               	btfss	3,2
  3100  065F  2E7C               	goto	l1176
  3101                           
  3102                           ;LCD.c: 97: {
  3103                           ;LCD.c: 98: temp = 0x80 + b - 1;
  3104  0660  0874               	movf	Lcd_Set_Cursor@b,w
  3105  0661  3E7F               	addlw	127
  3106  0662  00F5               	movwf	??_Lcd_Set_Cursor
  3107  0663  0875               	movf	??_Lcd_Set_Cursor,w
  3108  0664  00FA               	movwf	Lcd_Set_Cursor@temp
  3109                           
  3110                           ;LCD.c: 99: z = temp>>4;
  3111  0665  087A               	movf	Lcd_Set_Cursor@temp,w
  3112  0666  00F5               	movwf	??_Lcd_Set_Cursor
  3113  0667  3004               	movlw	4
  3114  0668                     u625:	
  3115  0668  36F5               	lsrf	??_Lcd_Set_Cursor,f
  3116  0669  0B89               	decfsz	9,f
  3117  066A  2E68               	goto	u625
  3118  066B  0875               	movf	??_Lcd_Set_Cursor,w
  3119  066C  00F6               	movwf	??_Lcd_Set_Cursor+1
  3120  066D  0876               	movf	??_Lcd_Set_Cursor+1,w
  3121  066E  00F8               	movwf	Lcd_Set_Cursor@z
  3122                           
  3123                           ;LCD.c: 100: y = temp & 0x0F;
  3124  066F  087A               	movf	Lcd_Set_Cursor@temp,w
  3125  0670  390F               	andlw	15
  3126  0671  00F5               	movwf	??_Lcd_Set_Cursor
  3127  0672  0875               	movf	??_Lcd_Set_Cursor,w
  3128  0673  00F9               	movwf	Lcd_Set_Cursor@y
  3129                           
  3130                           ;LCD.c: 101: Lcd_Cmd(z);
  3131  0674  0878               	movf	Lcd_Set_Cursor@z,w
  3132  0675  3185  2561  3186   	fcall	_Lcd_Cmd
  3133                           
  3134                           ;LCD.c: 102: Lcd_Cmd(y);
  3135  0678  0879               	movf	Lcd_Set_Cursor@y,w
  3136  0679  3185  2561         	fcall	_Lcd_Cmd
  3137                           
  3138                           ;LCD.c: 103: }
  3139  067B  0008               	return
  3140  067C                     l1176:	
  3141                           
  3142                           ;LCD.c: 104: else if(a == 2)
  3143  067C  3002               	movlw	2
  3144  067D  0677               	xorwf	Lcd_Set_Cursor@a,w
  3145  067E  1D03               	btfss	3,2
  3146  067F  0008               	return
  3147                           
  3148                           ;LCD.c: 105: {
  3149                           ;LCD.c: 106: temp = 0xC0 + b - 1;
  3150  0680  0874               	movf	Lcd_Set_Cursor@b,w
  3151  0681  3EBF               	addlw	191
  3152  0682  00F5               	movwf	??_Lcd_Set_Cursor
  3153  0683  0875               	movf	??_Lcd_Set_Cursor,w
  3154  0684  00FA               	movwf	Lcd_Set_Cursor@temp
  3155                           
  3156                           ;LCD.c: 107: z = temp>>4;
  3157  0685  087A               	movf	Lcd_Set_Cursor@temp,w
  3158  0686  00F5               	movwf	??_Lcd_Set_Cursor
  3159  0687  3004               	movlw	4
  3160  0688                     u645:	
  3161  0688  36F5               	lsrf	??_Lcd_Set_Cursor,f
  3162  0689  0B89               	decfsz	9,f
  3163  068A  2E88               	goto	u645
  3164  068B  0875               	movf	??_Lcd_Set_Cursor,w
  3165  068C  00F6               	movwf	??_Lcd_Set_Cursor+1
  3166  068D  0876               	movf	??_Lcd_Set_Cursor+1,w
  3167  068E  00F8               	movwf	Lcd_Set_Cursor@z
  3168                           
  3169                           ;LCD.c: 108: y = temp & 0x0F;
  3170  068F  087A               	movf	Lcd_Set_Cursor@temp,w
  3171  0690  390F               	andlw	15
  3172  0691  00F5               	movwf	??_Lcd_Set_Cursor
  3173  0692  0875               	movf	??_Lcd_Set_Cursor,w
  3174  0693  00F9               	movwf	Lcd_Set_Cursor@y
  3175                           
  3176                           ;LCD.c: 109: Lcd_Cmd(z);
  3177  0694  0878               	movf	Lcd_Set_Cursor@z,w
  3178  0695  3185  2561  3186   	fcall	_Lcd_Cmd
  3179                           
  3180                           ;LCD.c: 110: Lcd_Cmd(y);
  3181  0698  0879               	movf	Lcd_Set_Cursor@y,w
  3182  0699  3185  2561         	fcall	_Lcd_Cmd
  3183  069B  0008               	return
  3184  069C                     __end_of_Lcd_Set_Cursor:	
  3185                           
  3186                           	psect	text16
  3187  0561                     __ptext16:	
  3188 ;; *************** function _Lcd_Cmd *****************
  3189 ;; Defined at:
  3190 ;;		line 62 in file "LCD.c"
  3191 ;; Parameters:    Size  Location     Type
  3192 ;;  a               1    wreg     unsigned char 
  3193 ;; Auto vars:     Size  Location     Type
  3194 ;;  a               1    3[COMMON] unsigned char 
  3195 ;; Return value:  Size  Location     Type
  3196 ;;                  1    wreg      void 
  3197 ;; Registers used:
  3198 ;;		wreg, status,2, status,0, pclath, cstack
  3199 ;; Tracked objects:
  3200 ;;		On entry : 0/0
  3201 ;;		On exit  : 0/0
  3202 ;;		Unchanged: 0/0
  3203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3205 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3206 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3207 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3208 ;;Total ram usage:        3 bytes
  3209 ;; Hardware stack levels used:    1
  3210 ;; Hardware stack levels required when called:    1
  3211 ;; This function calls:
  3212 ;;		_Lcd_Port
  3213 ;; This function is called by:
  3214 ;;		_Lcd_Clear
  3215 ;;		_Lcd_Set_Cursor
  3216 ;;		_Lcd_Init
  3217 ;;		_Lcd_Shift_Right
  3218 ;;		_Lcd_Shift_Left
  3219 ;; This function uses a non-reentrant model
  3220 ;;
  3221                           
  3222                           
  3223                           ;psect for function _Lcd_Cmd
  3224  0561                     _Lcd_Cmd:	
  3225                           
  3226                           ;incstack = 0
  3227                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3228                           ;Lcd_Cmd@a stored from wreg
  3229  0561  00F3               	movwf	Lcd_Cmd@a
  3230                           
  3231                           ;LCD.c: 64: RD2 = 0;
  3232  0562  0020               	movlb	0	; select bank0
  3233  0563  110F               	bcf	15,2	;volatile
  3234                           
  3235                           ;LCD.c: 65: Lcd_Port(a);
  3236  0564  0873               	movf	Lcd_Cmd@a,w
  3237  0565  3185  2576  3185   	fcall	_Lcd_Port
  3238                           
  3239                           ;LCD.c: 66: RD3 = 1;
  3240  0568  0020               	movlb	0	; select bank0
  3241  0569  158F               	bsf	15,3	;volatile
  3242                           
  3243                           ;LCD.c: 67: _delay((unsigned long)((4)*(16000000/4000.0)));
  3244  056A  3015               	movlw	21
  3245  056B  00F2               	movwf	??_Lcd_Cmd+1
  3246  056C  30C6               	movlw	198
  3247  056D  00F1               	movwf	??_Lcd_Cmd
  3248  056E                     u837:	
  3249  056E  0BF1               	decfsz	??_Lcd_Cmd,f
  3250  056F  2D6E               	goto	u837
  3251  0570  0BF2               	decfsz	??_Lcd_Cmd+1,f
  3252  0571  2D6E               	goto	u837
  3253  0572  0000               	nop
  3254                           
  3255                           ;LCD.c: 68: RD3 = 0;
  3256  0573  0020               	movlb	0	; select bank0
  3257  0574  118F               	bcf	15,3	;volatile
  3258  0575  0008               	return
  3259  0576                     __end_of_Lcd_Cmd:	
  3260                           
  3261                           	psect	text17
  3262  0576                     __ptext17:	
  3263 ;; *************** function _Lcd_Port *****************
  3264 ;; Defined at:
  3265 ;;		line 31 in file "LCD.c"
  3266 ;; Parameters:    Size  Location     Type
  3267 ;;  a               1    wreg     unsigned char 
  3268 ;; Auto vars:     Size  Location     Type
  3269 ;;  a               1    0[COMMON] unsigned char 
  3270 ;; Return value:  Size  Location     Type
  3271 ;;                  1    wreg      void 
  3272 ;; Registers used:
  3273 ;;		wreg
  3274 ;; Tracked objects:
  3275 ;;		On entry : 0/0
  3276 ;;		On exit  : 0/0
  3277 ;;		Unchanged: 0/0
  3278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3280 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3282 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3283 ;;Total ram usage:        1 bytes
  3284 ;; Hardware stack levels used:    1
  3285 ;; This function calls:
  3286 ;;		Nothing
  3287 ;; This function is called by:
  3288 ;;		_Lcd_Cmd
  3289 ;;		_Lcd_Init
  3290 ;;		_Lcd_Write_Char
  3291 ;; This function uses a non-reentrant model
  3292 ;;
  3293                           
  3294                           
  3295                           ;psect for function _Lcd_Port
  3296  0576                     _Lcd_Port:	
  3297                           
  3298                           ;incstack = 0
  3299                           ; Regs used in _Lcd_Port: [wreg]
  3300                           ;Lcd_Port@a stored from wreg
  3301  0576  00F0               	movwf	Lcd_Port@a
  3302                           
  3303                           ;LCD.c: 33: if(a & 1)
  3304  0577  1C70               	btfss	Lcd_Port@a,0
  3305  0578  2D7C               	goto	l56
  3306                           
  3307                           ;LCD.c: 34: RD4 = 1;
  3308  0579  0020               	movlb	0	; select bank0
  3309  057A  160F               	bsf	15,4	;volatile
  3310  057B  2D7E               	goto	l996
  3311  057C                     l56:	
  3312                           
  3313                           ;LCD.c: 35: else
  3314                           ;LCD.c: 36: RD4 = 0;
  3315  057C  0020               	movlb	0	; select bank0
  3316  057D  120F               	bcf	15,4	;volatile
  3317  057E                     l996:	
  3318                           
  3319                           ;LCD.c: 38: if(a & 2)
  3320  057E  1CF0               	btfss	Lcd_Port@a,1
  3321  057F  2D82               	goto	l58
  3322                           
  3323                           ;LCD.c: 39: RD5 = 1;
  3324  0580  168F               	bsf	15,5	;volatile
  3325  0581  2D83               	goto	l1000
  3326  0582                     l58:	
  3327                           
  3328                           ;LCD.c: 40: else
  3329                           ;LCD.c: 41: RD5 = 0;
  3330  0582  128F               	bcf	15,5	;volatile
  3331  0583                     l1000:	
  3332                           
  3333                           ;LCD.c: 43: if(a & 4)
  3334  0583  1D70               	btfss	Lcd_Port@a,2
  3335  0584  2D87               	goto	l60
  3336                           
  3337                           ;LCD.c: 44: RD6 = 1;
  3338  0585  170F               	bsf	15,6	;volatile
  3339  0586  2D88               	goto	l1004
  3340  0587                     l60:	
  3341                           
  3342                           ;LCD.c: 45: else
  3343                           ;LCD.c: 46: RD6 = 0;
  3344  0587  130F               	bcf	15,6	;volatile
  3345  0588                     l1004:	
  3346                           
  3347                           ;LCD.c: 48: if(a & 8)
  3348  0588  1DF0               	btfss	Lcd_Port@a,3
  3349  0589  2D8C               	goto	l62
  3350                           
  3351                           ;LCD.c: 49: RD7 = 1;
  3352  058A  178F               	bsf	15,7	;volatile
  3353  058B  0008               	return
  3354  058C                     l62:	
  3355                           
  3356                           ;LCD.c: 50: else
  3357                           ;LCD.c: 51: RD7 = 0;
  3358  058C  138F               	bcf	15,7	;volatile
  3359  058D  0008               	return
  3360  058E                     __end_of_Lcd_Port:	
  3361  007E                     btemp	set	126	;btemp
  3362  007E                     wtemp	set	126
  3363  007E                     wtemp0	set	126
  3364  0080                     wtemp1	set	128
  3365  0082                     wtemp2	set	130
  3366  0084                     wtemp3	set	132
  3367  0086                     wtemp4	set	134
  3368  0088                     wtemp5	set	136
  3369  007F                     wtemp6	set	127
  3370  007E                     ttemp	set	126
  3371  007E                     ttemp0	set	126
  3372  0081                     ttemp1	set	129
  3373  0084                     ttemp2	set	132
  3374  0087                     ttemp3	set	135
  3375  007F                     ttemp4	set	127
  3376  007E                     ltemp	set	126
  3377  007E                     ltemp0	set	126
  3378  0082                     ltemp1	set	130
  3379  0086                     ltemp2	set	134
  3380  0080                     ltemp3	set	128


Data Sizes:
    Strings     21
    Constant    40
    Data        0
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     30      47
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(1) Largest target is 8
		 -> Lcd_Write_Integer@buf(BANK0[8]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 8
		 -> Lcd_Write_Integer@buf(BANK0[8]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 8
		 -> Lcd_Write_Integer@buf(BANK0[8]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 8
		 -> Lcd_Write_Integer@buf(BANK0[8]), 

    sp__ftoa	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK0[17]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 8
		 -> Lcd_Write_Integer@buf(BANK0[8]), 

    Lcd_Write_String@a	PTR const unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK0[17]), STR_1(CODE[10]), Lcd_Write_Integer@buf(BANK0[8]), 


Critical Paths under _main in COMMON

    _initMain->_Lcd_Init
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _digiPot_write->_SPI_Exchange8bit
    _Lcd_Write_Integer->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _Lcd_Write_String->_itoa
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_Lcd_Write_Integer
    _Lcd_Write_Integer->_Lcd_Write_String
    _itoa->_utoa
    _Lcd_Write_String->_itoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    3436
                                             25 BANK0      5     5      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                  _Lcd_Write_Integer
                   _Lcd_Write_String
                      _digiPot_write
                           _initMain
 ---------------------------------------------------------------------------------
 (1) _initMain                                             3     3      0     308
                                              6 COMMON     3     3      0
                          _Lcd_Clear
                           _Lcd_Init
                     _SPI_Initialize
                        _internal_16
 ---------------------------------------------------------------------------------
 (2) _internal_16                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _digiPot_write                                        2     0      2      97
                                              1 COMMON     2     0      2
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (2) _SPI_Exchange8bit                                     1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_Integer                                   10     8      2    1918
                                             15 BANK0     10     8      2
                   _Lcd_Write_String
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 7     3      4    1386
                                             13 COMMON     1     1      0
                                              4 BANK0      6     2      4
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     5      4    1074
                                              8 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     265
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     374
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     5     3      2     427
                                             10 BANK0      5     3      2
                     _Lcd_Write_Char
                               _itoa (ARG)
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     486
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Integer
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
       _itoa (ARG)
         _utoa
           ___lwdiv
           ___lwmod
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
     _itoa (ARG)
       _utoa
         ___lwdiv
         ___lwmod
   _digiPot_write
     _SPI_Exchange8bit
   _initMain
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Init
       _Lcd_Cmd
         _Lcd_Port
       _Lcd_Port
     _SPI_Initialize
     _internal_16

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1E      2F       5       58.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      3D      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      3D      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Thu Nov 10 12:48:25 2016

            _SPI_Initialize 0520                 __CFG_CP$OFF 0000                          l60 0587  
                        l62 058C                          l56 057C                          l58 0582  
                       l174 0534                         l533 076F                         l996 057E  
                       _RD2 007A                         _RD3 007B                         _RD4 007C  
                       _RD5 007D                         _RD6 007E                         _RD7 007F  
                       u425 0633                         u515 0614                         u445 063D  
                       u525 061B                         u455 0647                         u625 0668  
                       u545 05E0                         u465 064F                         u645 0688  
                       u495 0605                         u807 06FF                         u655 07BD  
                       u817 05EB                         u737 0793                         u827 05F7  
                       u747 07A7                         u837 056E                         u757 07D2  
                       u767 07E6                         u777 06B0                         u787 06E5  
                       u797 06F2                __CFG_BORV$LO 0000                         wreg 0009  
              __CFG_IESO$ON 0000                __CFG_LVP$OFF 0000                        l1000 0583  
                      l1004 0588                        l1020 063C                        l1030 0657  
                      l1026 064E                        l1018 0630                        l1042 0602  
                      l1044 060E                        l1052 0623                        l1136 0591  
                      l1048 061A                        l1148 05C2                        l1176 067C  
                      l1088 0729                        l1098 0747                        l1258 07B1  
                      STR_1 0833                        STR_2 0828                        _SCS0 04C8  
                      _SCS1 04C9                __CFG_WRT$OFF 0000           ?_Lcd_Write_String 002A  
                      _main 0785                        _itoa 05AA                        fsr0h 0005  
                      fsr1h 0007                        fsr0l 0004                        indf0 0000  
                      indf1 0001                        fsr1l 0006                        btemp 007E  
                      _utoa 0723                        ltemp 007E              digiPot_write@i 0071  
                      start 0002                        ttemp 007E          ??_Lcd_Write_String 002C  
                      wtemp 007E      __end_of_SPI_Initialize 0527             __end_of_Lcd_Cmd 0576  
         _Lcd_Write_Integer 054D                       ?_main 0070                       ?_itoa 0024  
             __CFG_WDTE$OFF 0000                       ?_utoa 0078                       _IRCF0 04CB  
                     _IRCF1 04CC                       _IRCF2 04CD                       _IRCF3 04CE  
        ?_Lcd_Write_Integer 002F             __end_of___lwdiv 065C             __end_of___lwmod 0628  
   __size_of_Lcd_Set_Cursor 0040                       _TRISD 008F              __CFG_FCMEN$OFF 0000  
           __end_of_dpowers 0828         ??_Lcd_Write_Integer 007E                       main@i 003C  
            __CFG_BOREN$OFF 0000                       ltemp0 007E                       ltemp1 0082  
                     ltemp2 0086                       ltemp3 0080                       ttemp0 007E  
                     ttemp1 0081                       ttemp2 0084                       ttemp3 0087  
                     ttemp4 007F                       utoa@c 0022                       utoa@v 0020  
                     status 0003                       wtemp0 007E                       wtemp1 0080  
                     wtemp2 0082                       wtemp3 0084                       wtemp4 0086  
                     wtemp5 0088                       wtemp6 007F                ?_internal_16 0070  
          __end_of_Lcd_Init 0723             ?_SPI_Initialize 0070            __end_of_Lcd_Port 058E  
            __CFG_MCLRE$OFF 0000             __initialization 07F6                __end_of_main 07F6  
              __end_of_itoa 05D0                __end_of_utoa 0785   __end_of_Lcd_Write_Integer 0561  
            __CFG_LPBOR$OFF 0000                      ??_main 0039                      ??_itoa 007D  
                    ??_utoa 007C          __size_of_Lcd_Clear 0008              __CFG_PLLEN$OFF 0000  
     __end_of_digiPot_write 054D    __end_of_SPI_Exchange8bit 0538              __CFG_ZCDDIS$ON 0000  
                    _ANSELD 018F                   ??_Lcd_Cmd 0071                      _SPLLEN 04CF  
   __size_of_Lcd_Write_Char 002C                      _SSPBUF 0211              __CFG_PWRTE$OFF 0000  
            __CFG_STVREN$ON 0000                   ??___lwdiv 0074                   ??___lwmod 0074  
          __end_of_initMain 06DD                      itoa@cp 0028             Lcd_Set_Cursor@a 0077  
           Lcd_Set_Cursor@b 0074             Lcd_Set_Cursor@y 0079             Lcd_Set_Cursor@z 0078  
   __end_of__initialization 07FD           __end_of_Lcd_Clear 052F              __pcstackCOMMON 0070  
__size_of_Lcd_Write_Integer 0014              _Lcd_Set_Cursor 065C                   ?_Lcd_Init 0070  
                 ?_Lcd_Port 0070                  __pbssBANK0 003E                  __pmaintext 0785  
      __size_of_internal_16 0009             __CFG_PPS1WAY$ON 0000   __size_of_Lcd_Write_String 001C  
    __end_of_Lcd_Set_Cursor 069C                  ??_Lcd_Init 0074                     _SSP1ADD 0212  
                   _PPSLOCK 0E0F                  ??_Lcd_Port 0070            ??_SPI_Initialize 0070  
                 ?_initMain 0070              _Lcd_Write_Char 05D0                     _Lcd_Cmd 0561  
                   ___lwdiv 0628                     ___lwmod 05FC             ?_Lcd_Set_Cursor 0074  
                   __ptext1 069C                     __ptext2 0538                     __ptext3 0520  
                   __ptext4 06DD                     __ptext5 0527                     __ptext6 0541  
                   __ptext7 052F                     __ptext8 054D                     __ptext9 05AA  
                   _dpowers 0800           ?_SPI_Exchange8bit 0070                     clrloop0 051B  
    __end_of_Lcd_Write_Char 05FC        end_of_initialization 07FD                     ftoa@buf 003E  
        ??_SPI_Exchange8bit 0070        SPI_Exchange8bit@data 0070                  ??_initMain 0076  
                   itoa@buf 0029                     itoa@val 0024                   Lcd_Port@a 0070  
              __pstringtext 0800                     utoa@buf 0023                     utoa@val 0078  
          __CFG_FOSC$INTOSC 0000                   _TRISCbits 008E                   _TRISDbits 008F  
           ?_Lcd_Write_Char 0070           Lcd_Write_String@a 002A           Lcd_Write_String@i 002D  
    __size_of_digiPot_write 000C                   _Lcd_Clear 0527            _Lcd_Write_String 058E  
       start_initialization 07F6           __size_of_Lcd_Init 0046           __size_of_Lcd_Port 0018  
                ?_Lcd_Clear 0070             Lcd_Write_Char@a 0074             Lcd_Write_Char@y 0073  
             _digiPot_write 0541                   ___latbits 0002               __pcstackBANK0 0020  
                  ?_Lcd_Cmd 0070               ??_internal_16 0070           __size_of_initMain 0041  
          ___lwdiv@dividend 0072            ??_Lcd_Set_Cursor 0075                    ?___lwdiv 0070  
                  ?___lwmod 0070              ?_digiPot_write 0071            ___lwdiv@quotient 0075  
                  _LATDbits 010F                   clear_ram0 051A                    Lcd_Cmd@a 0073  
 __size_of_SPI_Exchange8bit 0009                 ??_Lcd_Clear 0074                    _SSP1CON1 0215  
       __end_of_internal_16 0541                    _SSP1STAT 0214            ??_Lcd_Write_Char 0071  
                  _Lcd_Init 06DD                    _Lcd_Port 0576    __end_of_Lcd_Write_String 05AA  
          __size_of_Lcd_Cmd 0015     __size_of_SPI_Initialize 0007            __size_of___lwdiv 0034  
          __size_of___lwmod 002C             ??_digiPot_write 0073                  _ANSELCbits 018E  
           ___lwdiv@divisor 0070             ___lwdiv@counter 0077                    __ptext10 0723  
                  __ptext11 05FC                    __ptext12 0628                    __ptext13 058E  
                  __ptext14 05D0                    __ptext15 065C                    __ptext16 0561  
                  __ptext17 0576                _SSP1CON1bits 0215                    _initMain 069C  
             __size_of_main 0071               _SSPDATPPSbits 0E21               __size_of_itoa 0026  
             __size_of_utoa 0062                 _internal_16 0538                  _RC3PPSbits 0EA3  
                _RC5PPSbits 0EA5        Lcd_Write_Integer@buf 0031                _SSP1STATbits 0214  
                  itoa@base 0026          Lcd_Write_Char@temp 0072            ___lwmod@dividend 0072  
         __CFG_CLKOUTEN$OFF 0000                 _PPSLOCKbits 0E0F            _SPI_Exchange8bit 052F  
        Lcd_Set_Cursor@temp 007A                    utoa@base 007A             ___lwmod@divisor 0070  
           ___lwmod@counter 0075          Lcd_Write_Integer@v 002F  
