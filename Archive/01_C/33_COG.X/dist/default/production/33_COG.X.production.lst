

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri May 03 00:20:34 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1719
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	stringtext4,global,class=STRCODE,delta=2
     8                           	psect	stringtext5,global,class=STRCODE,delta=2
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2
    52                           	psect	text36,local,class=CODE,merge=1,delta=2
    53                           	psect	text37,local,class=CODE,merge=1,delta=2
    54                           	dabs	1,0x7E,2
    55  0000                     
    56                           ; Version 2.05
    57                           ; Generated 20/12/2018 GMT
    58                           ; 
    59                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC16F1719 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90  0000                     	;# 
    91  0001                     	;# 
    92  0002                     	;# 
    93  0003                     	;# 
    94  0004                     	;# 
    95  0005                     	;# 
    96  0006                     	;# 
    97  0007                     	;# 
    98  0008                     	;# 
    99  0009                     	;# 
   100  000A                     	;# 
   101  000B                     	;# 
   102  000C                     	;# 
   103  000D                     	;# 
   104  000E                     	;# 
   105  000F                     	;# 
   106  0010                     	;# 
   107  0011                     	;# 
   108  0012                     	;# 
   109  0013                     	;# 
   110  0015                     	;# 
   111  0016                     	;# 
   112  0016                     	;# 
   113  0017                     	;# 
   114  0018                     	;# 
   115  0019                     	;# 
   116  001A                     	;# 
   117  001B                     	;# 
   118  001C                     	;# 
   119  008C                     	;# 
   120  008D                     	;# 
   121  008E                     	;# 
   122  008F                     	;# 
   123  0090                     	;# 
   124  0091                     	;# 
   125  0092                     	;# 
   126  0093                     	;# 
   127  0095                     	;# 
   128  0096                     	;# 
   129  0097                     	;# 
   130  0098                     	;# 
   131  0099                     	;# 
   132  009A                     	;# 
   133  009B                     	;# 
   134  009B                     	;# 
   135  009C                     	;# 
   136  009D                     	;# 
   137  009E                     	;# 
   138  009F                     	;# 
   139  010C                     	;# 
   140  010D                     	;# 
   141  010E                     	;# 
   142  010F                     	;# 
   143  0110                     	;# 
   144  0111                     	;# 
   145  0112                     	;# 
   146  0113                     	;# 
   147  0114                     	;# 
   148  0115                     	;# 
   149  0116                     	;# 
   150  0117                     	;# 
   151  0118                     	;# 
   152  0119                     	;# 
   153  011A                     	;# 
   154  011B                     	;# 
   155  011B                     	;# 
   156  011C                     	;# 
   157  018C                     	;# 
   158  018D                     	;# 
   159  018E                     	;# 
   160  018F                     	;# 
   161  0190                     	;# 
   162  0191                     	;# 
   163  0191                     	;# 
   164  0192                     	;# 
   165  0193                     	;# 
   166  0193                     	;# 
   167  0194                     	;# 
   168  0195                     	;# 
   169  0196                     	;# 
   170  0197                     	;# 
   171  0199                     	;# 
   172  0199                     	;# 
   173  0199                     	;# 
   174  019A                     	;# 
   175  019A                     	;# 
   176  019A                     	;# 
   177  019B                     	;# 
   178  019B                     	;# 
   179  019B                     	;# 
   180  019B                     	;# 
   181  019B                     	;# 
   182  019C                     	;# 
   183  019C                     	;# 
   184  019C                     	;# 
   185  019D                     	;# 
   186  019D                     	;# 
   187  019D                     	;# 
   188  019E                     	;# 
   189  019E                     	;# 
   190  019E                     	;# 
   191  019F                     	;# 
   192  019F                     	;# 
   193  019F                     	;# 
   194  019F                     	;# 
   195  019F                     	;# 
   196  020C                     	;# 
   197  020D                     	;# 
   198  020E                     	;# 
   199  020F                     	;# 
   200  0210                     	;# 
   201  0211                     	;# 
   202  0211                     	;# 
   203  0212                     	;# 
   204  0212                     	;# 
   205  0213                     	;# 
   206  0213                     	;# 
   207  0214                     	;# 
   208  0214                     	;# 
   209  0215                     	;# 
   210  0215                     	;# 
   211  0215                     	;# 
   212  0215                     	;# 
   213  0216                     	;# 
   214  0216                     	;# 
   215  0217                     	;# 
   216  0217                     	;# 
   217  028C                     	;# 
   218  028D                     	;# 
   219  028E                     	;# 
   220  028F                     	;# 
   221  0290                     	;# 
   222  0291                     	;# 
   223  0291                     	;# 
   224  0292                     	;# 
   225  0293                     	;# 
   226  0293                     	;# 
   227  0298                     	;# 
   228  0298                     	;# 
   229  0299                     	;# 
   230  029A                     	;# 
   231  029A                     	;# 
   232  029E                     	;# 
   233  030C                     	;# 
   234  030D                     	;# 
   235  030E                     	;# 
   236  030F                     	;# 
   237  0310                     	;# 
   238  038C                     	;# 
   239  038D                     	;# 
   240  038E                     	;# 
   241  038F                     	;# 
   242  0390                     	;# 
   243  0391                     	;# 
   244  0392                     	;# 
   245  0393                     	;# 
   246  0394                     	;# 
   247  0395                     	;# 
   248  0396                     	;# 
   249  0397                     	;# 
   250  0398                     	;# 
   251  0399                     	;# 
   252  039D                     	;# 
   253  039E                     	;# 
   254  039F                     	;# 
   255  0415                     	;# 
   256  0416                     	;# 
   257  0417                     	;# 
   258  041C                     	;# 
   259  041D                     	;# 
   260  041E                     	;# 
   261  0498                     	;# 
   262  0498                     	;# 
   263  0499                     	;# 
   264  049A                     	;# 
   265  049B                     	;# 
   266  049B                     	;# 
   267  049C                     	;# 
   268  049D                     	;# 
   269  049E                     	;# 
   270  049F                     	;# 
   271  0511                     	;# 
   272  0515                     	;# 
   273  0617                     	;# 
   274  0618                     	;# 
   275  0619                     	;# 
   276  0619                     	;# 
   277  061A                     	;# 
   278  061B                     	;# 
   279  061C                     	;# 
   280  061C                     	;# 
   281  0691                     	;# 
   282  0692                     	;# 
   283  0693                     	;# 
   284  0694                     	;# 
   285  0695                     	;# 
   286  0696                     	;# 
   287  0697                     	;# 
   288  0698                     	;# 
   289  0699                     	;# 
   290  069A                     	;# 
   291  069B                     	;# 
   292  069C                     	;# 
   293  069D                     	;# 
   294  069E                     	;# 
   295  069F                     	;# 
   296  0E0F                     	;# 
   297  0E10                     	;# 
   298  0E11                     	;# 
   299  0E12                     	;# 
   300  0E13                     	;# 
   301  0E14                     	;# 
   302  0E15                     	;# 
   303  0E17                     	;# 
   304  0E20                     	;# 
   305  0E21                     	;# 
   306  0E22                     	;# 
   307  0E24                     	;# 
   308  0E25                     	;# 
   309  0E28                     	;# 
   310  0E29                     	;# 
   311  0E2A                     	;# 
   312  0E2B                     	;# 
   313  0E90                     	;# 
   314  0E91                     	;# 
   315  0E92                     	;# 
   316  0E93                     	;# 
   317  0E94                     	;# 
   318  0E95                     	;# 
   319  0E96                     	;# 
   320  0E97                     	;# 
   321  0E98                     	;# 
   322  0E99                     	;# 
   323  0E9A                     	;# 
   324  0E9B                     	;# 
   325  0E9C                     	;# 
   326  0E9D                     	;# 
   327  0E9E                     	;# 
   328  0E9F                     	;# 
   329  0EA0                     	;# 
   330  0EA1                     	;# 
   331  0EA2                     	;# 
   332  0EA3                     	;# 
   333  0EA4                     	;# 
   334  0EA5                     	;# 
   335  0EA6                     	;# 
   336  0EA7                     	;# 
   337  0EA8                     	;# 
   338  0EA9                     	;# 
   339  0EAA                     	;# 
   340  0EAB                     	;# 
   341  0EAC                     	;# 
   342  0EAD                     	;# 
   343  0EAE                     	;# 
   344  0EAF                     	;# 
   345  0EB0                     	;# 
   346  0EB1                     	;# 
   347  0EB2                     	;# 
   348  0F0F                     	;# 
   349  0F10                     	;# 
   350  0F11                     	;# 
   351  0F12                     	;# 
   352  0F13                     	;# 
   353  0F14                     	;# 
   354  0F15                     	;# 
   355  0F16                     	;# 
   356  0F17                     	;# 
   357  0F18                     	;# 
   358  0F19                     	;# 
   359  0F1A                     	;# 
   360  0F1B                     	;# 
   361  0F1C                     	;# 
   362  0F1D                     	;# 
   363  0F1E                     	;# 
   364  0F1F                     	;# 
   365  0F20                     	;# 
   366  0F21                     	;# 
   367  0F22                     	;# 
   368  0F23                     	;# 
   369  0F24                     	;# 
   370  0F25                     	;# 
   371  0F26                     	;# 
   372  0F27                     	;# 
   373  0F28                     	;# 
   374  0F29                     	;# 
   375  0F2A                     	;# 
   376  0F2B                     	;# 
   377  0F2C                     	;# 
   378  0F2D                     	;# 
   379  0F2E                     	;# 
   380  0F2F                     	;# 
   381  0F30                     	;# 
   382  0F31                     	;# 
   383  0F32                     	;# 
   384  0F33                     	;# 
   385  0F34                     	;# 
   386  0F35                     	;# 
   387  0F36                     	;# 
   388  0F37                     	;# 
   389  0FE4                     	;# 
   390  0FE5                     	;# 
   391  0FE6                     	;# 
   392  0FE7                     	;# 
   393  0FE8                     	;# 
   394  0FE9                     	;# 
   395  0FEA                     	;# 
   396  0FEB                     	;# 
   397  0FED                     	;# 
   398  0FEE                     	;# 
   399  0FEF                     	;# 
   400  0000                     	;# 
   401  0001                     	;# 
   402  0002                     	;# 
   403  0003                     	;# 
   404  0004                     	;# 
   405  0005                     	;# 
   406  0006                     	;# 
   407  0007                     	;# 
   408  0008                     	;# 
   409  0009                     	;# 
   410  000A                     	;# 
   411  000B                     	;# 
   412  000C                     	;# 
   413  000D                     	;# 
   414  000E                     	;# 
   415  000F                     	;# 
   416  0010                     	;# 
   417  0011                     	;# 
   418  0012                     	;# 
   419  0013                     	;# 
   420  0015                     	;# 
   421  0016                     	;# 
   422  0016                     	;# 
   423  0017                     	;# 
   424  0018                     	;# 
   425  0019                     	;# 
   426  001A                     	;# 
   427  001B                     	;# 
   428  001C                     	;# 
   429  008C                     	;# 
   430  008D                     	;# 
   431  008E                     	;# 
   432  008F                     	;# 
   433  0090                     	;# 
   434  0091                     	;# 
   435  0092                     	;# 
   436  0093                     	;# 
   437  0095                     	;# 
   438  0096                     	;# 
   439  0097                     	;# 
   440  0098                     	;# 
   441  0099                     	;# 
   442  009A                     	;# 
   443  009B                     	;# 
   444  009B                     	;# 
   445  009C                     	;# 
   446  009D                     	;# 
   447  009E                     	;# 
   448  009F                     	;# 
   449  010C                     	;# 
   450  010D                     	;# 
   451  010E                     	;# 
   452  010F                     	;# 
   453  0110                     	;# 
   454  0111                     	;# 
   455  0112                     	;# 
   456  0113                     	;# 
   457  0114                     	;# 
   458  0115                     	;# 
   459  0116                     	;# 
   460  0117                     	;# 
   461  0118                     	;# 
   462  0119                     	;# 
   463  011A                     	;# 
   464  011B                     	;# 
   465  011B                     	;# 
   466  011C                     	;# 
   467  018C                     	;# 
   468  018D                     	;# 
   469  018E                     	;# 
   470  018F                     	;# 
   471  0190                     	;# 
   472  0191                     	;# 
   473  0191                     	;# 
   474  0192                     	;# 
   475  0193                     	;# 
   476  0193                     	;# 
   477  0194                     	;# 
   478  0195                     	;# 
   479  0196                     	;# 
   480  0197                     	;# 
   481  0199                     	;# 
   482  0199                     	;# 
   483  0199                     	;# 
   484  019A                     	;# 
   485  019A                     	;# 
   486  019A                     	;# 
   487  019B                     	;# 
   488  019B                     	;# 
   489  019B                     	;# 
   490  019B                     	;# 
   491  019B                     	;# 
   492  019C                     	;# 
   493  019C                     	;# 
   494  019C                     	;# 
   495  019D                     	;# 
   496  019D                     	;# 
   497  019D                     	;# 
   498  019E                     	;# 
   499  019E                     	;# 
   500  019E                     	;# 
   501  019F                     	;# 
   502  019F                     	;# 
   503  019F                     	;# 
   504  019F                     	;# 
   505  019F                     	;# 
   506  020C                     	;# 
   507  020D                     	;# 
   508  020E                     	;# 
   509  020F                     	;# 
   510  0210                     	;# 
   511  0211                     	;# 
   512  0211                     	;# 
   513  0212                     	;# 
   514  0212                     	;# 
   515  0213                     	;# 
   516  0213                     	;# 
   517  0214                     	;# 
   518  0214                     	;# 
   519  0215                     	;# 
   520  0215                     	;# 
   521  0215                     	;# 
   522  0215                     	;# 
   523  0216                     	;# 
   524  0216                     	;# 
   525  0217                     	;# 
   526  0217                     	;# 
   527  028C                     	;# 
   528  028D                     	;# 
   529  028E                     	;# 
   530  028F                     	;# 
   531  0290                     	;# 
   532  0291                     	;# 
   533  0291                     	;# 
   534  0292                     	;# 
   535  0293                     	;# 
   536  0293                     	;# 
   537  0298                     	;# 
   538  0298                     	;# 
   539  0299                     	;# 
   540  029A                     	;# 
   541  029A                     	;# 
   542  029E                     	;# 
   543  030C                     	;# 
   544  030D                     	;# 
   545  030E                     	;# 
   546  030F                     	;# 
   547  0310                     	;# 
   548  038C                     	;# 
   549  038D                     	;# 
   550  038E                     	;# 
   551  038F                     	;# 
   552  0390                     	;# 
   553  0391                     	;# 
   554  0392                     	;# 
   555  0393                     	;# 
   556  0394                     	;# 
   557  0395                     	;# 
   558  0396                     	;# 
   559  0397                     	;# 
   560  0398                     	;# 
   561  0399                     	;# 
   562  039D                     	;# 
   563  039E                     	;# 
   564  039F                     	;# 
   565  0415                     	;# 
   566  0416                     	;# 
   567  0417                     	;# 
   568  041C                     	;# 
   569  041D                     	;# 
   570  041E                     	;# 
   571  0498                     	;# 
   572  0498                     	;# 
   573  0499                     	;# 
   574  049A                     	;# 
   575  049B                     	;# 
   576  049B                     	;# 
   577  049C                     	;# 
   578  049D                     	;# 
   579  049E                     	;# 
   580  049F                     	;# 
   581  0511                     	;# 
   582  0515                     	;# 
   583  0617                     	;# 
   584  0618                     	;# 
   585  0619                     	;# 
   586  0619                     	;# 
   587  061A                     	;# 
   588  061B                     	;# 
   589  061C                     	;# 
   590  061C                     	;# 
   591  0691                     	;# 
   592  0692                     	;# 
   593  0693                     	;# 
   594  0694                     	;# 
   595  0695                     	;# 
   596  0696                     	;# 
   597  0697                     	;# 
   598  0698                     	;# 
   599  0699                     	;# 
   600  069A                     	;# 
   601  069B                     	;# 
   602  069C                     	;# 
   603  069D                     	;# 
   604  069E                     	;# 
   605  069F                     	;# 
   606  0E0F                     	;# 
   607  0E10                     	;# 
   608  0E11                     	;# 
   609  0E12                     	;# 
   610  0E13                     	;# 
   611  0E14                     	;# 
   612  0E15                     	;# 
   613  0E17                     	;# 
   614  0E20                     	;# 
   615  0E21                     	;# 
   616  0E22                     	;# 
   617  0E24                     	;# 
   618  0E25                     	;# 
   619  0E28                     	;# 
   620  0E29                     	;# 
   621  0E2A                     	;# 
   622  0E2B                     	;# 
   623  0E90                     	;# 
   624  0E91                     	;# 
   625  0E92                     	;# 
   626  0E93                     	;# 
   627  0E94                     	;# 
   628  0E95                     	;# 
   629  0E96                     	;# 
   630  0E97                     	;# 
   631  0E98                     	;# 
   632  0E99                     	;# 
   633  0E9A                     	;# 
   634  0E9B                     	;# 
   635  0E9C                     	;# 
   636  0E9D                     	;# 
   637  0E9E                     	;# 
   638  0E9F                     	;# 
   639  0EA0                     	;# 
   640  0EA1                     	;# 
   641  0EA2                     	;# 
   642  0EA3                     	;# 
   643  0EA4                     	;# 
   644  0EA5                     	;# 
   645  0EA6                     	;# 
   646  0EA7                     	;# 
   647  0EA8                     	;# 
   648  0EA9                     	;# 
   649  0EAA                     	;# 
   650  0EAB                     	;# 
   651  0EAC                     	;# 
   652  0EAD                     	;# 
   653  0EAE                     	;# 
   654  0EAF                     	;# 
   655  0EB0                     	;# 
   656  0EB1                     	;# 
   657  0EB2                     	;# 
   658  0F0F                     	;# 
   659  0F10                     	;# 
   660  0F11                     	;# 
   661  0F12                     	;# 
   662  0F13                     	;# 
   663  0F14                     	;# 
   664  0F15                     	;# 
   665  0F16                     	;# 
   666  0F17                     	;# 
   667  0F18                     	;# 
   668  0F19                     	;# 
   669  0F1A                     	;# 
   670  0F1B                     	;# 
   671  0F1C                     	;# 
   672  0F1D                     	;# 
   673  0F1E                     	;# 
   674  0F1F                     	;# 
   675  0F20                     	;# 
   676  0F21                     	;# 
   677  0F22                     	;# 
   678  0F23                     	;# 
   679  0F24                     	;# 
   680  0F25                     	;# 
   681  0F26                     	;# 
   682  0F27                     	;# 
   683  0F28                     	;# 
   684  0F29                     	;# 
   685  0F2A                     	;# 
   686  0F2B                     	;# 
   687  0F2C                     	;# 
   688  0F2D                     	;# 
   689  0F2E                     	;# 
   690  0F2F                     	;# 
   691  0F30                     	;# 
   692  0F31                     	;# 
   693  0F32                     	;# 
   694  0F33                     	;# 
   695  0F34                     	;# 
   696  0F35                     	;# 
   697  0F36                     	;# 
   698  0F37                     	;# 
   699  0FE4                     	;# 
   700  0FE5                     	;# 
   701  0FE6                     	;# 
   702  0FE7                     	;# 
   703  0FE8                     	;# 
   704  0FE9                     	;# 
   705  0FEA                     	;# 
   706  0FEB                     	;# 
   707  0FED                     	;# 
   708  0FEE                     	;# 
   709  0FEF                     	;# 
   710  0000                     	;# 
   711  0001                     	;# 
   712  0002                     	;# 
   713  0003                     	;# 
   714  0004                     	;# 
   715  0005                     	;# 
   716  0006                     	;# 
   717  0007                     	;# 
   718  0008                     	;# 
   719  0009                     	;# 
   720  000A                     	;# 
   721  000B                     	;# 
   722  000C                     	;# 
   723  000D                     	;# 
   724  000E                     	;# 
   725  000F                     	;# 
   726  0010                     	;# 
   727  0011                     	;# 
   728  0012                     	;# 
   729  0013                     	;# 
   730  0015                     	;# 
   731  0016                     	;# 
   732  0016                     	;# 
   733  0017                     	;# 
   734  0018                     	;# 
   735  0019                     	;# 
   736  001A                     	;# 
   737  001B                     	;# 
   738  001C                     	;# 
   739  008C                     	;# 
   740  008D                     	;# 
   741  008E                     	;# 
   742  008F                     	;# 
   743  0090                     	;# 
   744  0091                     	;# 
   745  0092                     	;# 
   746  0093                     	;# 
   747  0095                     	;# 
   748  0096                     	;# 
   749  0097                     	;# 
   750  0098                     	;# 
   751  0099                     	;# 
   752  009A                     	;# 
   753  009B                     	;# 
   754  009B                     	;# 
   755  009C                     	;# 
   756  009D                     	;# 
   757  009E                     	;# 
   758  009F                     	;# 
   759  010C                     	;# 
   760  010D                     	;# 
   761  010E                     	;# 
   762  010F                     	;# 
   763  0110                     	;# 
   764  0111                     	;# 
   765  0112                     	;# 
   766  0113                     	;# 
   767  0114                     	;# 
   768  0115                     	;# 
   769  0116                     	;# 
   770  0117                     	;# 
   771  0118                     	;# 
   772  0119                     	;# 
   773  011A                     	;# 
   774  011B                     	;# 
   775  011B                     	;# 
   776  011C                     	;# 
   777  018C                     	;# 
   778  018D                     	;# 
   779  018E                     	;# 
   780  018F                     	;# 
   781  0190                     	;# 
   782  0191                     	;# 
   783  0191                     	;# 
   784  0192                     	;# 
   785  0193                     	;# 
   786  0193                     	;# 
   787  0194                     	;# 
   788  0195                     	;# 
   789  0196                     	;# 
   790  0197                     	;# 
   791  0199                     	;# 
   792  0199                     	;# 
   793  0199                     	;# 
   794  019A                     	;# 
   795  019A                     	;# 
   796  019A                     	;# 
   797  019B                     	;# 
   798  019B                     	;# 
   799  019B                     	;# 
   800  019B                     	;# 
   801  019B                     	;# 
   802  019C                     	;# 
   803  019C                     	;# 
   804  019C                     	;# 
   805  019D                     	;# 
   806  019D                     	;# 
   807  019D                     	;# 
   808  019E                     	;# 
   809  019E                     	;# 
   810  019E                     	;# 
   811  019F                     	;# 
   812  019F                     	;# 
   813  019F                     	;# 
   814  019F                     	;# 
   815  019F                     	;# 
   816  020C                     	;# 
   817  020D                     	;# 
   818  020E                     	;# 
   819  020F                     	;# 
   820  0210                     	;# 
   821  0211                     	;# 
   822  0211                     	;# 
   823  0212                     	;# 
   824  0212                     	;# 
   825  0213                     	;# 
   826  0213                     	;# 
   827  0214                     	;# 
   828  0214                     	;# 
   829  0215                     	;# 
   830  0215                     	;# 
   831  0215                     	;# 
   832  0215                     	;# 
   833  0216                     	;# 
   834  0216                     	;# 
   835  0217                     	;# 
   836  0217                     	;# 
   837  028C                     	;# 
   838  028D                     	;# 
   839  028E                     	;# 
   840  028F                     	;# 
   841  0290                     	;# 
   842  0291                     	;# 
   843  0291                     	;# 
   844  0292                     	;# 
   845  0293                     	;# 
   846  0293                     	;# 
   847  0298                     	;# 
   848  0298                     	;# 
   849  0299                     	;# 
   850  029A                     	;# 
   851  029A                     	;# 
   852  029E                     	;# 
   853  030C                     	;# 
   854  030D                     	;# 
   855  030E                     	;# 
   856  030F                     	;# 
   857  0310                     	;# 
   858  038C                     	;# 
   859  038D                     	;# 
   860  038E                     	;# 
   861  038F                     	;# 
   862  0390                     	;# 
   863  0391                     	;# 
   864  0392                     	;# 
   865  0393                     	;# 
   866  0394                     	;# 
   867  0395                     	;# 
   868  0396                     	;# 
   869  0397                     	;# 
   870  0398                     	;# 
   871  0399                     	;# 
   872  039D                     	;# 
   873  039E                     	;# 
   874  039F                     	;# 
   875  0415                     	;# 
   876  0416                     	;# 
   877  0417                     	;# 
   878  041C                     	;# 
   879  041D                     	;# 
   880  041E                     	;# 
   881  0498                     	;# 
   882  0498                     	;# 
   883  0499                     	;# 
   884  049A                     	;# 
   885  049B                     	;# 
   886  049B                     	;# 
   887  049C                     	;# 
   888  049D                     	;# 
   889  049E                     	;# 
   890  049F                     	;# 
   891  0511                     	;# 
   892  0515                     	;# 
   893  0617                     	;# 
   894  0618                     	;# 
   895  0619                     	;# 
   896  0619                     	;# 
   897  061A                     	;# 
   898  061B                     	;# 
   899  061C                     	;# 
   900  061C                     	;# 
   901  0691                     	;# 
   902  0692                     	;# 
   903  0693                     	;# 
   904  0694                     	;# 
   905  0695                     	;# 
   906  0696                     	;# 
   907  0697                     	;# 
   908  0698                     	;# 
   909  0699                     	;# 
   910  069A                     	;# 
   911  069B                     	;# 
   912  069C                     	;# 
   913  069D                     	;# 
   914  069E                     	;# 
   915  069F                     	;# 
   916  0E0F                     	;# 
   917  0E10                     	;# 
   918  0E11                     	;# 
   919  0E12                     	;# 
   920  0E13                     	;# 
   921  0E14                     	;# 
   922  0E15                     	;# 
   923  0E17                     	;# 
   924  0E20                     	;# 
   925  0E21                     	;# 
   926  0E22                     	;# 
   927  0E24                     	;# 
   928  0E25                     	;# 
   929  0E28                     	;# 
   930  0E29                     	;# 
   931  0E2A                     	;# 
   932  0E2B                     	;# 
   933  0E90                     	;# 
   934  0E91                     	;# 
   935  0E92                     	;# 
   936  0E93                     	;# 
   937  0E94                     	;# 
   938  0E95                     	;# 
   939  0E96                     	;# 
   940  0E97                     	;# 
   941  0E98                     	;# 
   942  0E99                     	;# 
   943  0E9A                     	;# 
   944  0E9B                     	;# 
   945  0E9C                     	;# 
   946  0E9D                     	;# 
   947  0E9E                     	;# 
   948  0E9F                     	;# 
   949  0EA0                     	;# 
   950  0EA1                     	;# 
   951  0EA2                     	;# 
   952  0EA3                     	;# 
   953  0EA4                     	;# 
   954  0EA5                     	;# 
   955  0EA6                     	;# 
   956  0EA7                     	;# 
   957  0EA8                     	;# 
   958  0EA9                     	;# 
   959  0EAA                     	;# 
   960  0EAB                     	;# 
   961  0EAC                     	;# 
   962  0EAD                     	;# 
   963  0EAE                     	;# 
   964  0EAF                     	;# 
   965  0EB0                     	;# 
   966  0EB1                     	;# 
   967  0EB2                     	;# 
   968  0F0F                     	;# 
   969  0F10                     	;# 
   970  0F11                     	;# 
   971  0F12                     	;# 
   972  0F13                     	;# 
   973  0F14                     	;# 
   974  0F15                     	;# 
   975  0F16                     	;# 
   976  0F17                     	;# 
   977  0F18                     	;# 
   978  0F19                     	;# 
   979  0F1A                     	;# 
   980  0F1B                     	;# 
   981  0F1C                     	;# 
   982  0F1D                     	;# 
   983  0F1E                     	;# 
   984  0F1F                     	;# 
   985  0F20                     	;# 
   986  0F21                     	;# 
   987  0F22                     	;# 
   988  0F23                     	;# 
   989  0F24                     	;# 
   990  0F25                     	;# 
   991  0F26                     	;# 
   992  0F27                     	;# 
   993  0F28                     	;# 
   994  0F29                     	;# 
   995  0F2A                     	;# 
   996  0F2B                     	;# 
   997  0F2C                     	;# 
   998  0F2D                     	;# 
   999  0F2E                     	;# 
  1000  0F2F                     	;# 
  1001  0F30                     	;# 
  1002  0F31                     	;# 
  1003  0F32                     	;# 
  1004  0F33                     	;# 
  1005  0F34                     	;# 
  1006  0F35                     	;# 
  1007  0F36                     	;# 
  1008  0F37                     	;# 
  1009  0FE4                     	;# 
  1010  0FE5                     	;# 
  1011  0FE6                     	;# 
  1012  0FE7                     	;# 
  1013  0FE8                     	;# 
  1014  0FE9                     	;# 
  1015  0FEA                     	;# 
  1016  0FEB                     	;# 
  1017  0FED                     	;# 
  1018  0FEE                     	;# 
  1019  0FEF                     	;# 
  1020  0000                     	;# 
  1021  0001                     	;# 
  1022  0002                     	;# 
  1023  0003                     	;# 
  1024  0004                     	;# 
  1025  0005                     	;# 
  1026  0006                     	;# 
  1027  0007                     	;# 
  1028  0008                     	;# 
  1029  0009                     	;# 
  1030  000A                     	;# 
  1031  000B                     	;# 
  1032  000C                     	;# 
  1033  000D                     	;# 
  1034  000E                     	;# 
  1035  000F                     	;# 
  1036  0010                     	;# 
  1037  0011                     	;# 
  1038  0012                     	;# 
  1039  0013                     	;# 
  1040  0015                     	;# 
  1041  0016                     	;# 
  1042  0016                     	;# 
  1043  0017                     	;# 
  1044  0018                     	;# 
  1045  0019                     	;# 
  1046  001A                     	;# 
  1047  001B                     	;# 
  1048  001C                     	;# 
  1049  008C                     	;# 
  1050  008D                     	;# 
  1051  008E                     	;# 
  1052  008F                     	;# 
  1053  0090                     	;# 
  1054  0091                     	;# 
  1055  0092                     	;# 
  1056  0093                     	;# 
  1057  0095                     	;# 
  1058  0096                     	;# 
  1059  0097                     	;# 
  1060  0098                     	;# 
  1061  0099                     	;# 
  1062  009A                     	;# 
  1063  009B                     	;# 
  1064  009B                     	;# 
  1065  009C                     	;# 
  1066  009D                     	;# 
  1067  009E                     	;# 
  1068  009F                     	;# 
  1069  010C                     	;# 
  1070  010D                     	;# 
  1071  010E                     	;# 
  1072  010F                     	;# 
  1073  0110                     	;# 
  1074  0111                     	;# 
  1075  0112                     	;# 
  1076  0113                     	;# 
  1077  0114                     	;# 
  1078  0115                     	;# 
  1079  0116                     	;# 
  1080  0117                     	;# 
  1081  0118                     	;# 
  1082  0119                     	;# 
  1083  011A                     	;# 
  1084  011B                     	;# 
  1085  011B                     	;# 
  1086  011C                     	;# 
  1087  018C                     	;# 
  1088  018D                     	;# 
  1089  018E                     	;# 
  1090  018F                     	;# 
  1091  0190                     	;# 
  1092  0191                     	;# 
  1093  0191                     	;# 
  1094  0192                     	;# 
  1095  0193                     	;# 
  1096  0193                     	;# 
  1097  0194                     	;# 
  1098  0195                     	;# 
  1099  0196                     	;# 
  1100  0197                     	;# 
  1101  0199                     	;# 
  1102  0199                     	;# 
  1103  0199                     	;# 
  1104  019A                     	;# 
  1105  019A                     	;# 
  1106  019A                     	;# 
  1107  019B                     	;# 
  1108  019B                     	;# 
  1109  019B                     	;# 
  1110  019B                     	;# 
  1111  019B                     	;# 
  1112  019C                     	;# 
  1113  019C                     	;# 
  1114  019C                     	;# 
  1115  019D                     	;# 
  1116  019D                     	;# 
  1117  019D                     	;# 
  1118  019E                     	;# 
  1119  019E                     	;# 
  1120  019E                     	;# 
  1121  019F                     	;# 
  1122  019F                     	;# 
  1123  019F                     	;# 
  1124  019F                     	;# 
  1125  019F                     	;# 
  1126  020C                     	;# 
  1127  020D                     	;# 
  1128  020E                     	;# 
  1129  020F                     	;# 
  1130  0210                     	;# 
  1131  0211                     	;# 
  1132  0211                     	;# 
  1133  0212                     	;# 
  1134  0212                     	;# 
  1135  0213                     	;# 
  1136  0213                     	;# 
  1137  0214                     	;# 
  1138  0214                     	;# 
  1139  0215                     	;# 
  1140  0215                     	;# 
  1141  0215                     	;# 
  1142  0215                     	;# 
  1143  0216                     	;# 
  1144  0216                     	;# 
  1145  0217                     	;# 
  1146  0217                     	;# 
  1147  028C                     	;# 
  1148  028D                     	;# 
  1149  028E                     	;# 
  1150  028F                     	;# 
  1151  0290                     	;# 
  1152  0291                     	;# 
  1153  0291                     	;# 
  1154  0292                     	;# 
  1155  0293                     	;# 
  1156  0293                     	;# 
  1157  0298                     	;# 
  1158  0298                     	;# 
  1159  0299                     	;# 
  1160  029A                     	;# 
  1161  029A                     	;# 
  1162  029E                     	;# 
  1163  030C                     	;# 
  1164  030D                     	;# 
  1165  030E                     	;# 
  1166  030F                     	;# 
  1167  0310                     	;# 
  1168  038C                     	;# 
  1169  038D                     	;# 
  1170  038E                     	;# 
  1171  038F                     	;# 
  1172  0390                     	;# 
  1173  0391                     	;# 
  1174  0392                     	;# 
  1175  0393                     	;# 
  1176  0394                     	;# 
  1177  0395                     	;# 
  1178  0396                     	;# 
  1179  0397                     	;# 
  1180  0398                     	;# 
  1181  0399                     	;# 
  1182  039D                     	;# 
  1183  039E                     	;# 
  1184  039F                     	;# 
  1185  0415                     	;# 
  1186  0416                     	;# 
  1187  0417                     	;# 
  1188  041C                     	;# 
  1189  041D                     	;# 
  1190  041E                     	;# 
  1191  0498                     	;# 
  1192  0498                     	;# 
  1193  0499                     	;# 
  1194  049A                     	;# 
  1195  049B                     	;# 
  1196  049B                     	;# 
  1197  049C                     	;# 
  1198  049D                     	;# 
  1199  049E                     	;# 
  1200  049F                     	;# 
  1201  0511                     	;# 
  1202  0515                     	;# 
  1203  0617                     	;# 
  1204  0618                     	;# 
  1205  0619                     	;# 
  1206  0619                     	;# 
  1207  061A                     	;# 
  1208  061B                     	;# 
  1209  061C                     	;# 
  1210  061C                     	;# 
  1211  0691                     	;# 
  1212  0692                     	;# 
  1213  0693                     	;# 
  1214  0694                     	;# 
  1215  0695                     	;# 
  1216  0696                     	;# 
  1217  0697                     	;# 
  1218  0698                     	;# 
  1219  0699                     	;# 
  1220  069A                     	;# 
  1221  069B                     	;# 
  1222  069C                     	;# 
  1223  069D                     	;# 
  1224  069E                     	;# 
  1225  069F                     	;# 
  1226  0E0F                     	;# 
  1227  0E10                     	;# 
  1228  0E11                     	;# 
  1229  0E12                     	;# 
  1230  0E13                     	;# 
  1231  0E14                     	;# 
  1232  0E15                     	;# 
  1233  0E17                     	;# 
  1234  0E20                     	;# 
  1235  0E21                     	;# 
  1236  0E22                     	;# 
  1237  0E24                     	;# 
  1238  0E25                     	;# 
  1239  0E28                     	;# 
  1240  0E29                     	;# 
  1241  0E2A                     	;# 
  1242  0E2B                     	;# 
  1243  0E90                     	;# 
  1244  0E91                     	;# 
  1245  0E92                     	;# 
  1246  0E93                     	;# 
  1247  0E94                     	;# 
  1248  0E95                     	;# 
  1249  0E96                     	;# 
  1250  0E97                     	;# 
  1251  0E98                     	;# 
  1252  0E99                     	;# 
  1253  0E9A                     	;# 
  1254  0E9B                     	;# 
  1255  0E9C                     	;# 
  1256  0E9D                     	;# 
  1257  0E9E                     	;# 
  1258  0E9F                     	;# 
  1259  0EA0                     	;# 
  1260  0EA1                     	;# 
  1261  0EA2                     	;# 
  1262  0EA3                     	;# 
  1263  0EA4                     	;# 
  1264  0EA5                     	;# 
  1265  0EA6                     	;# 
  1266  0EA7                     	;# 
  1267  0EA8                     	;# 
  1268  0EA9                     	;# 
  1269  0EAA                     	;# 
  1270  0EAB                     	;# 
  1271  0EAC                     	;# 
  1272  0EAD                     	;# 
  1273  0EAE                     	;# 
  1274  0EAF                     	;# 
  1275  0EB0                     	;# 
  1276  0EB1                     	;# 
  1277  0EB2                     	;# 
  1278  0F0F                     	;# 
  1279  0F10                     	;# 
  1280  0F11                     	;# 
  1281  0F12                     	;# 
  1282  0F13                     	;# 
  1283  0F14                     	;# 
  1284  0F15                     	;# 
  1285  0F16                     	;# 
  1286  0F17                     	;# 
  1287  0F18                     	;# 
  1288  0F19                     	;# 
  1289  0F1A                     	;# 
  1290  0F1B                     	;# 
  1291  0F1C                     	;# 
  1292  0F1D                     	;# 
  1293  0F1E                     	;# 
  1294  0F1F                     	;# 
  1295  0F20                     	;# 
  1296  0F21                     	;# 
  1297  0F22                     	;# 
  1298  0F23                     	;# 
  1299  0F24                     	;# 
  1300  0F25                     	;# 
  1301  0F26                     	;# 
  1302  0F27                     	;# 
  1303  0F28                     	;# 
  1304  0F29                     	;# 
  1305  0F2A                     	;# 
  1306  0F2B                     	;# 
  1307  0F2C                     	;# 
  1308  0F2D                     	;# 
  1309  0F2E                     	;# 
  1310  0F2F                     	;# 
  1311  0F30                     	;# 
  1312  0F31                     	;# 
  1313  0F32                     	;# 
  1314  0F33                     	;# 
  1315  0F34                     	;# 
  1316  0F35                     	;# 
  1317  0F36                     	;# 
  1318  0F37                     	;# 
  1319  0FE4                     	;# 
  1320  0FE5                     	;# 
  1321  0FE6                     	;# 
  1322  0FE7                     	;# 
  1323  0FE8                     	;# 
  1324  0FE9                     	;# 
  1325  0FEA                     	;# 
  1326  0FEB                     	;# 
  1327  0FED                     	;# 
  1328  0FEE                     	;# 
  1329  0FEF                     	;# 
  1330  0000                     	;# 
  1331  0001                     	;# 
  1332  0002                     	;# 
  1333  0003                     	;# 
  1334  0004                     	;# 
  1335  0005                     	;# 
  1336  0006                     	;# 
  1337  0007                     	;# 
  1338  0008                     	;# 
  1339  0009                     	;# 
  1340  000A                     	;# 
  1341  000B                     	;# 
  1342  000C                     	;# 
  1343  000D                     	;# 
  1344  000E                     	;# 
  1345  000F                     	;# 
  1346  0010                     	;# 
  1347  0011                     	;# 
  1348  0012                     	;# 
  1349  0013                     	;# 
  1350  0015                     	;# 
  1351  0016                     	;# 
  1352  0016                     	;# 
  1353  0017                     	;# 
  1354  0018                     	;# 
  1355  0019                     	;# 
  1356  001A                     	;# 
  1357  001B                     	;# 
  1358  001C                     	;# 
  1359  008C                     	;# 
  1360  008D                     	;# 
  1361  008E                     	;# 
  1362  008F                     	;# 
  1363  0090                     	;# 
  1364  0091                     	;# 
  1365  0092                     	;# 
  1366  0093                     	;# 
  1367  0095                     	;# 
  1368  0096                     	;# 
  1369  0097                     	;# 
  1370  0098                     	;# 
  1371  0099                     	;# 
  1372  009A                     	;# 
  1373  009B                     	;# 
  1374  009B                     	;# 
  1375  009C                     	;# 
  1376  009D                     	;# 
  1377  009E                     	;# 
  1378  009F                     	;# 
  1379  010C                     	;# 
  1380  010D                     	;# 
  1381  010E                     	;# 
  1382  010F                     	;# 
  1383  0110                     	;# 
  1384  0111                     	;# 
  1385  0112                     	;# 
  1386  0113                     	;# 
  1387  0114                     	;# 
  1388  0115                     	;# 
  1389  0116                     	;# 
  1390  0117                     	;# 
  1391  0118                     	;# 
  1392  0119                     	;# 
  1393  011A                     	;# 
  1394  011B                     	;# 
  1395  011B                     	;# 
  1396  011C                     	;# 
  1397  018C                     	;# 
  1398  018D                     	;# 
  1399  018E                     	;# 
  1400  018F                     	;# 
  1401  0190                     	;# 
  1402  0191                     	;# 
  1403  0191                     	;# 
  1404  0192                     	;# 
  1405  0193                     	;# 
  1406  0193                     	;# 
  1407  0194                     	;# 
  1408  0195                     	;# 
  1409  0196                     	;# 
  1410  0197                     	;# 
  1411  0199                     	;# 
  1412  0199                     	;# 
  1413  0199                     	;# 
  1414  019A                     	;# 
  1415  019A                     	;# 
  1416  019A                     	;# 
  1417  019B                     	;# 
  1418  019B                     	;# 
  1419  019B                     	;# 
  1420  019B                     	;# 
  1421  019B                     	;# 
  1422  019C                     	;# 
  1423  019C                     	;# 
  1424  019C                     	;# 
  1425  019D                     	;# 
  1426  019D                     	;# 
  1427  019D                     	;# 
  1428  019E                     	;# 
  1429  019E                     	;# 
  1430  019E                     	;# 
  1431  019F                     	;# 
  1432  019F                     	;# 
  1433  019F                     	;# 
  1434  019F                     	;# 
  1435  019F                     	;# 
  1436  020C                     	;# 
  1437  020D                     	;# 
  1438  020E                     	;# 
  1439  020F                     	;# 
  1440  0210                     	;# 
  1441  0211                     	;# 
  1442  0211                     	;# 
  1443  0212                     	;# 
  1444  0212                     	;# 
  1445  0213                     	;# 
  1446  0213                     	;# 
  1447  0214                     	;# 
  1448  0214                     	;# 
  1449  0215                     	;# 
  1450  0215                     	;# 
  1451  0215                     	;# 
  1452  0215                     	;# 
  1453  0216                     	;# 
  1454  0216                     	;# 
  1455  0217                     	;# 
  1456  0217                     	;# 
  1457  028C                     	;# 
  1458  028D                     	;# 
  1459  028E                     	;# 
  1460  028F                     	;# 
  1461  0290                     	;# 
  1462  0291                     	;# 
  1463  0291                     	;# 
  1464  0292                     	;# 
  1465  0293                     	;# 
  1466  0293                     	;# 
  1467  0298                     	;# 
  1468  0298                     	;# 
  1469  0299                     	;# 
  1470  029A                     	;# 
  1471  029A                     	;# 
  1472  029E                     	;# 
  1473  030C                     	;# 
  1474  030D                     	;# 
  1475  030E                     	;# 
  1476  030F                     	;# 
  1477  0310                     	;# 
  1478  038C                     	;# 
  1479  038D                     	;# 
  1480  038E                     	;# 
  1481  038F                     	;# 
  1482  0390                     	;# 
  1483  0391                     	;# 
  1484  0392                     	;# 
  1485  0393                     	;# 
  1486  0394                     	;# 
  1487  0395                     	;# 
  1488  0396                     	;# 
  1489  0397                     	;# 
  1490  0398                     	;# 
  1491  0399                     	;# 
  1492  039D                     	;# 
  1493  039E                     	;# 
  1494  039F                     	;# 
  1495  0415                     	;# 
  1496  0416                     	;# 
  1497  0417                     	;# 
  1498  041C                     	;# 
  1499  041D                     	;# 
  1500  041E                     	;# 
  1501  0498                     	;# 
  1502  0498                     	;# 
  1503  0499                     	;# 
  1504  049A                     	;# 
  1505  049B                     	;# 
  1506  049B                     	;# 
  1507  049C                     	;# 
  1508  049D                     	;# 
  1509  049E                     	;# 
  1510  049F                     	;# 
  1511  0511                     	;# 
  1512  0515                     	;# 
  1513  0617                     	;# 
  1514  0618                     	;# 
  1515  0619                     	;# 
  1516  0619                     	;# 
  1517  061A                     	;# 
  1518  061B                     	;# 
  1519  061C                     	;# 
  1520  061C                     	;# 
  1521  0691                     	;# 
  1522  0692                     	;# 
  1523  0693                     	;# 
  1524  0694                     	;# 
  1525  0695                     	;# 
  1526  0696                     	;# 
  1527  0697                     	;# 
  1528  0698                     	;# 
  1529  0699                     	;# 
  1530  069A                     	;# 
  1531  069B                     	;# 
  1532  069C                     	;# 
  1533  069D                     	;# 
  1534  069E                     	;# 
  1535  069F                     	;# 
  1536  0E0F                     	;# 
  1537  0E10                     	;# 
  1538  0E11                     	;# 
  1539  0E12                     	;# 
  1540  0E13                     	;# 
  1541  0E14                     	;# 
  1542  0E15                     	;# 
  1543  0E17                     	;# 
  1544  0E20                     	;# 
  1545  0E21                     	;# 
  1546  0E22                     	;# 
  1547  0E24                     	;# 
  1548  0E25                     	;# 
  1549  0E28                     	;# 
  1550  0E29                     	;# 
  1551  0E2A                     	;# 
  1552  0E2B                     	;# 
  1553  0E90                     	;# 
  1554  0E91                     	;# 
  1555  0E92                     	;# 
  1556  0E93                     	;# 
  1557  0E94                     	;# 
  1558  0E95                     	;# 
  1559  0E96                     	;# 
  1560  0E97                     	;# 
  1561  0E98                     	;# 
  1562  0E99                     	;# 
  1563  0E9A                     	;# 
  1564  0E9B                     	;# 
  1565  0E9C                     	;# 
  1566  0E9D                     	;# 
  1567  0E9E                     	;# 
  1568  0E9F                     	;# 
  1569  0EA0                     	;# 
  1570  0EA1                     	;# 
  1571  0EA2                     	;# 
  1572  0EA3                     	;# 
  1573  0EA4                     	;# 
  1574  0EA5                     	;# 
  1575  0EA6                     	;# 
  1576  0EA7                     	;# 
  1577  0EA8                     	;# 
  1578  0EA9                     	;# 
  1579  0EAA                     	;# 
  1580  0EAB                     	;# 
  1581  0EAC                     	;# 
  1582  0EAD                     	;# 
  1583  0EAE                     	;# 
  1584  0EAF                     	;# 
  1585  0EB0                     	;# 
  1586  0EB1                     	;# 
  1587  0EB2                     	;# 
  1588  0F0F                     	;# 
  1589  0F10                     	;# 
  1590  0F11                     	;# 
  1591  0F12                     	;# 
  1592  0F13                     	;# 
  1593  0F14                     	;# 
  1594  0F15                     	;# 
  1595  0F16                     	;# 
  1596  0F17                     	;# 
  1597  0F18                     	;# 
  1598  0F19                     	;# 
  1599  0F1A                     	;# 
  1600  0F1B                     	;# 
  1601  0F1C                     	;# 
  1602  0F1D                     	;# 
  1603  0F1E                     	;# 
  1604  0F1F                     	;# 
  1605  0F20                     	;# 
  1606  0F21                     	;# 
  1607  0F22                     	;# 
  1608  0F23                     	;# 
  1609  0F24                     	;# 
  1610  0F25                     	;# 
  1611  0F26                     	;# 
  1612  0F27                     	;# 
  1613  0F28                     	;# 
  1614  0F29                     	;# 
  1615  0F2A                     	;# 
  1616  0F2B                     	;# 
  1617  0F2C                     	;# 
  1618  0F2D                     	;# 
  1619  0F2E                     	;# 
  1620  0F2F                     	;# 
  1621  0F30                     	;# 
  1622  0F31                     	;# 
  1623  0F32                     	;# 
  1624  0F33                     	;# 
  1625  0F34                     	;# 
  1626  0F35                     	;# 
  1627  0F36                     	;# 
  1628  0F37                     	;# 
  1629  0FE4                     	;# 
  1630  0FE5                     	;# 
  1631  0FE6                     	;# 
  1632  0FE7                     	;# 
  1633  0FE8                     	;# 
  1634  0FE9                     	;# 
  1635  0FEA                     	;# 
  1636  0FEB                     	;# 
  1637  0FED                     	;# 
  1638  0FEE                     	;# 
  1639  0FEF                     	;# 
  1640  0000                     	;# 
  1641  0001                     	;# 
  1642  0002                     	;# 
  1643  0003                     	;# 
  1644  0004                     	;# 
  1645  0005                     	;# 
  1646  0006                     	;# 
  1647  0007                     	;# 
  1648  0008                     	;# 
  1649  0009                     	;# 
  1650  000A                     	;# 
  1651  000B                     	;# 
  1652  000C                     	;# 
  1653  000D                     	;# 
  1654  000E                     	;# 
  1655  000F                     	;# 
  1656  0010                     	;# 
  1657  0011                     	;# 
  1658  0012                     	;# 
  1659  0013                     	;# 
  1660  0015                     	;# 
  1661  0016                     	;# 
  1662  0016                     	;# 
  1663  0017                     	;# 
  1664  0018                     	;# 
  1665  0019                     	;# 
  1666  001A                     	;# 
  1667  001B                     	;# 
  1668  001C                     	;# 
  1669  008C                     	;# 
  1670  008D                     	;# 
  1671  008E                     	;# 
  1672  008F                     	;# 
  1673  0090                     	;# 
  1674  0091                     	;# 
  1675  0092                     	;# 
  1676  0093                     	;# 
  1677  0095                     	;# 
  1678  0096                     	;# 
  1679  0097                     	;# 
  1680  0098                     	;# 
  1681  0099                     	;# 
  1682  009A                     	;# 
  1683  009B                     	;# 
  1684  009B                     	;# 
  1685  009C                     	;# 
  1686  009D                     	;# 
  1687  009E                     	;# 
  1688  009F                     	;# 
  1689  010C                     	;# 
  1690  010D                     	;# 
  1691  010E                     	;# 
  1692  010F                     	;# 
  1693  0110                     	;# 
  1694  0111                     	;# 
  1695  0112                     	;# 
  1696  0113                     	;# 
  1697  0114                     	;# 
  1698  0115                     	;# 
  1699  0116                     	;# 
  1700  0117                     	;# 
  1701  0118                     	;# 
  1702  0119                     	;# 
  1703  011A                     	;# 
  1704  011B                     	;# 
  1705  011B                     	;# 
  1706  011C                     	;# 
  1707  018C                     	;# 
  1708  018D                     	;# 
  1709  018E                     	;# 
  1710  018F                     	;# 
  1711  0190                     	;# 
  1712  0191                     	;# 
  1713  0191                     	;# 
  1714  0192                     	;# 
  1715  0193                     	;# 
  1716  0193                     	;# 
  1717  0194                     	;# 
  1718  0195                     	;# 
  1719  0196                     	;# 
  1720  0197                     	;# 
  1721  0199                     	;# 
  1722  0199                     	;# 
  1723  0199                     	;# 
  1724  019A                     	;# 
  1725  019A                     	;# 
  1726  019A                     	;# 
  1727  019B                     	;# 
  1728  019B                     	;# 
  1729  019B                     	;# 
  1730  019B                     	;# 
  1731  019B                     	;# 
  1732  019C                     	;# 
  1733  019C                     	;# 
  1734  019C                     	;# 
  1735  019D                     	;# 
  1736  019D                     	;# 
  1737  019D                     	;# 
  1738  019E                     	;# 
  1739  019E                     	;# 
  1740  019E                     	;# 
  1741  019F                     	;# 
  1742  019F                     	;# 
  1743  019F                     	;# 
  1744  019F                     	;# 
  1745  019F                     	;# 
  1746  020C                     	;# 
  1747  020D                     	;# 
  1748  020E                     	;# 
  1749  020F                     	;# 
  1750  0210                     	;# 
  1751  0211                     	;# 
  1752  0211                     	;# 
  1753  0212                     	;# 
  1754  0212                     	;# 
  1755  0213                     	;# 
  1756  0213                     	;# 
  1757  0214                     	;# 
  1758  0214                     	;# 
  1759  0215                     	;# 
  1760  0215                     	;# 
  1761  0215                     	;# 
  1762  0215                     	;# 
  1763  0216                     	;# 
  1764  0216                     	;# 
  1765  0217                     	;# 
  1766  0217                     	;# 
  1767  028C                     	;# 
  1768  028D                     	;# 
  1769  028E                     	;# 
  1770  028F                     	;# 
  1771  0290                     	;# 
  1772  0291                     	;# 
  1773  0291                     	;# 
  1774  0292                     	;# 
  1775  0293                     	;# 
  1776  0293                     	;# 
  1777  0298                     	;# 
  1778  0298                     	;# 
  1779  0299                     	;# 
  1780  029A                     	;# 
  1781  029A                     	;# 
  1782  029E                     	;# 
  1783  030C                     	;# 
  1784  030D                     	;# 
  1785  030E                     	;# 
  1786  030F                     	;# 
  1787  0310                     	;# 
  1788  038C                     	;# 
  1789  038D                     	;# 
  1790  038E                     	;# 
  1791  038F                     	;# 
  1792  0390                     	;# 
  1793  0391                     	;# 
  1794  0392                     	;# 
  1795  0393                     	;# 
  1796  0394                     	;# 
  1797  0395                     	;# 
  1798  0396                     	;# 
  1799  0397                     	;# 
  1800  0398                     	;# 
  1801  0399                     	;# 
  1802  039D                     	;# 
  1803  039E                     	;# 
  1804  039F                     	;# 
  1805  0415                     	;# 
  1806  0416                     	;# 
  1807  0417                     	;# 
  1808  041C                     	;# 
  1809  041D                     	;# 
  1810  041E                     	;# 
  1811  0498                     	;# 
  1812  0498                     	;# 
  1813  0499                     	;# 
  1814  049A                     	;# 
  1815  049B                     	;# 
  1816  049B                     	;# 
  1817  049C                     	;# 
  1818  049D                     	;# 
  1819  049E                     	;# 
  1820  049F                     	;# 
  1821  0511                     	;# 
  1822  0515                     	;# 
  1823  0617                     	;# 
  1824  0618                     	;# 
  1825  0619                     	;# 
  1826  0619                     	;# 
  1827  061A                     	;# 
  1828  061B                     	;# 
  1829  061C                     	;# 
  1830  061C                     	;# 
  1831  0691                     	;# 
  1832  0692                     	;# 
  1833  0693                     	;# 
  1834  0694                     	;# 
  1835  0695                     	;# 
  1836  0696                     	;# 
  1837  0697                     	;# 
  1838  0698                     	;# 
  1839  0699                     	;# 
  1840  069A                     	;# 
  1841  069B                     	;# 
  1842  069C                     	;# 
  1843  069D                     	;# 
  1844  069E                     	;# 
  1845  069F                     	;# 
  1846  0E0F                     	;# 
  1847  0E10                     	;# 
  1848  0E11                     	;# 
  1849  0E12                     	;# 
  1850  0E13                     	;# 
  1851  0E14                     	;# 
  1852  0E15                     	;# 
  1853  0E17                     	;# 
  1854  0E20                     	;# 
  1855  0E21                     	;# 
  1856  0E22                     	;# 
  1857  0E24                     	;# 
  1858  0E25                     	;# 
  1859  0E28                     	;# 
  1860  0E29                     	;# 
  1861  0E2A                     	;# 
  1862  0E2B                     	;# 
  1863  0E90                     	;# 
  1864  0E91                     	;# 
  1865  0E92                     	;# 
  1866  0E93                     	;# 
  1867  0E94                     	;# 
  1868  0E95                     	;# 
  1869  0E96                     	;# 
  1870  0E97                     	;# 
  1871  0E98                     	;# 
  1872  0E99                     	;# 
  1873  0E9A                     	;# 
  1874  0E9B                     	;# 
  1875  0E9C                     	;# 
  1876  0E9D                     	;# 
  1877  0E9E                     	;# 
  1878  0E9F                     	;# 
  1879  0EA0                     	;# 
  1880  0EA1                     	;# 
  1881  0EA2                     	;# 
  1882  0EA3                     	;# 
  1883  0EA4                     	;# 
  1884  0EA5                     	;# 
  1885  0EA6                     	;# 
  1886  0EA7                     	;# 
  1887  0EA8                     	;# 
  1888  0EA9                     	;# 
  1889  0EAA                     	;# 
  1890  0EAB                     	;# 
  1891  0EAC                     	;# 
  1892  0EAD                     	;# 
  1893  0EAE                     	;# 
  1894  0EAF                     	;# 
  1895  0EB0                     	;# 
  1896  0EB1                     	;# 
  1897  0EB2                     	;# 
  1898  0F0F                     	;# 
  1899  0F10                     	;# 
  1900  0F11                     	;# 
  1901  0F12                     	;# 
  1902  0F13                     	;# 
  1903  0F14                     	;# 
  1904  0F15                     	;# 
  1905  0F16                     	;# 
  1906  0F17                     	;# 
  1907  0F18                     	;# 
  1908  0F19                     	;# 
  1909  0F1A                     	;# 
  1910  0F1B                     	;# 
  1911  0F1C                     	;# 
  1912  0F1D                     	;# 
  1913  0F1E                     	;# 
  1914  0F1F                     	;# 
  1915  0F20                     	;# 
  1916  0F21                     	;# 
  1917  0F22                     	;# 
  1918  0F23                     	;# 
  1919  0F24                     	;# 
  1920  0F25                     	;# 
  1921  0F26                     	;# 
  1922  0F27                     	;# 
  1923  0F28                     	;# 
  1924  0F29                     	;# 
  1925  0F2A                     	;# 
  1926  0F2B                     	;# 
  1927  0F2C                     	;# 
  1928  0F2D                     	;# 
  1929  0F2E                     	;# 
  1930  0F2F                     	;# 
  1931  0F30                     	;# 
  1932  0F31                     	;# 
  1933  0F32                     	;# 
  1934  0F33                     	;# 
  1935  0F34                     	;# 
  1936  0F35                     	;# 
  1937  0F36                     	;# 
  1938  0F37                     	;# 
  1939  0FE4                     	;# 
  1940  0FE5                     	;# 
  1941  0FE6                     	;# 
  1942  0FE7                     	;# 
  1943  0FE8                     	;# 
  1944  0FE9                     	;# 
  1945  0FEA                     	;# 
  1946  0FEB                     	;# 
  1947  0FED                     	;# 
  1948  0FEE                     	;# 
  1949  0FEF                     	;# 
  1950  0000                     	;# 
  1951  0001                     	;# 
  1952  0002                     	;# 
  1953  0003                     	;# 
  1954  0004                     	;# 
  1955  0005                     	;# 
  1956  0006                     	;# 
  1957  0007                     	;# 
  1958  0008                     	;# 
  1959  0009                     	;# 
  1960  000A                     	;# 
  1961  000B                     	;# 
  1962  000C                     	;# 
  1963  000D                     	;# 
  1964  000E                     	;# 
  1965  000F                     	;# 
  1966  0010                     	;# 
  1967  0011                     	;# 
  1968  0012                     	;# 
  1969  0013                     	;# 
  1970  0015                     	;# 
  1971  0016                     	;# 
  1972  0016                     	;# 
  1973  0017                     	;# 
  1974  0018                     	;# 
  1975  0019                     	;# 
  1976  001A                     	;# 
  1977  001B                     	;# 
  1978  001C                     	;# 
  1979  008C                     	;# 
  1980  008D                     	;# 
  1981  008E                     	;# 
  1982  008F                     	;# 
  1983  0090                     	;# 
  1984  0091                     	;# 
  1985  0092                     	;# 
  1986  0093                     	;# 
  1987  0095                     	;# 
  1988  0096                     	;# 
  1989  0097                     	;# 
  1990  0098                     	;# 
  1991  0099                     	;# 
  1992  009A                     	;# 
  1993  009B                     	;# 
  1994  009B                     	;# 
  1995  009C                     	;# 
  1996  009D                     	;# 
  1997  009E                     	;# 
  1998  009F                     	;# 
  1999  010C                     	;# 
  2000  010D                     	;# 
  2001  010E                     	;# 
  2002  010F                     	;# 
  2003  0110                     	;# 
  2004  0111                     	;# 
  2005  0112                     	;# 
  2006  0113                     	;# 
  2007  0114                     	;# 
  2008  0115                     	;# 
  2009  0116                     	;# 
  2010  0117                     	;# 
  2011  0118                     	;# 
  2012  0119                     	;# 
  2013  011A                     	;# 
  2014  011B                     	;# 
  2015  011B                     	;# 
  2016  011C                     	;# 
  2017  018C                     	;# 
  2018  018D                     	;# 
  2019  018E                     	;# 
  2020  018F                     	;# 
  2021  0190                     	;# 
  2022  0191                     	;# 
  2023  0191                     	;# 
  2024  0192                     	;# 
  2025  0193                     	;# 
  2026  0193                     	;# 
  2027  0194                     	;# 
  2028  0195                     	;# 
  2029  0196                     	;# 
  2030  0197                     	;# 
  2031  0199                     	;# 
  2032  0199                     	;# 
  2033  0199                     	;# 
  2034  019A                     	;# 
  2035  019A                     	;# 
  2036  019A                     	;# 
  2037  019B                     	;# 
  2038  019B                     	;# 
  2039  019B                     	;# 
  2040  019B                     	;# 
  2041  019B                     	;# 
  2042  019C                     	;# 
  2043  019C                     	;# 
  2044  019C                     	;# 
  2045  019D                     	;# 
  2046  019D                     	;# 
  2047  019D                     	;# 
  2048  019E                     	;# 
  2049  019E                     	;# 
  2050  019E                     	;# 
  2051  019F                     	;# 
  2052  019F                     	;# 
  2053  019F                     	;# 
  2054  019F                     	;# 
  2055  019F                     	;# 
  2056  020C                     	;# 
  2057  020D                     	;# 
  2058  020E                     	;# 
  2059  020F                     	;# 
  2060  0210                     	;# 
  2061  0211                     	;# 
  2062  0211                     	;# 
  2063  0212                     	;# 
  2064  0212                     	;# 
  2065  0213                     	;# 
  2066  0213                     	;# 
  2067  0214                     	;# 
  2068  0214                     	;# 
  2069  0215                     	;# 
  2070  0215                     	;# 
  2071  0215                     	;# 
  2072  0215                     	;# 
  2073  0216                     	;# 
  2074  0216                     	;# 
  2075  0217                     	;# 
  2076  0217                     	;# 
  2077  028C                     	;# 
  2078  028D                     	;# 
  2079  028E                     	;# 
  2080  028F                     	;# 
  2081  0290                     	;# 
  2082  0291                     	;# 
  2083  0291                     	;# 
  2084  0292                     	;# 
  2085  0293                     	;# 
  2086  0293                     	;# 
  2087  0298                     	;# 
  2088  0298                     	;# 
  2089  0299                     	;# 
  2090  029A                     	;# 
  2091  029A                     	;# 
  2092  029E                     	;# 
  2093  030C                     	;# 
  2094  030D                     	;# 
  2095  030E                     	;# 
  2096  030F                     	;# 
  2097  0310                     	;# 
  2098  038C                     	;# 
  2099  038D                     	;# 
  2100  038E                     	;# 
  2101  038F                     	;# 
  2102  0390                     	;# 
  2103  0391                     	;# 
  2104  0392                     	;# 
  2105  0393                     	;# 
  2106  0394                     	;# 
  2107  0395                     	;# 
  2108  0396                     	;# 
  2109  0397                     	;# 
  2110  0398                     	;# 
  2111  0399                     	;# 
  2112  039D                     	;# 
  2113  039E                     	;# 
  2114  039F                     	;# 
  2115  0415                     	;# 
  2116  0416                     	;# 
  2117  0417                     	;# 
  2118  041C                     	;# 
  2119  041D                     	;# 
  2120  041E                     	;# 
  2121  0498                     	;# 
  2122  0498                     	;# 
  2123  0499                     	;# 
  2124  049A                     	;# 
  2125  049B                     	;# 
  2126  049B                     	;# 
  2127  049C                     	;# 
  2128  049D                     	;# 
  2129  049E                     	;# 
  2130  049F                     	;# 
  2131  0511                     	;# 
  2132  0515                     	;# 
  2133  0617                     	;# 
  2134  0618                     	;# 
  2135  0619                     	;# 
  2136  0619                     	;# 
  2137  061A                     	;# 
  2138  061B                     	;# 
  2139  061C                     	;# 
  2140  061C                     	;# 
  2141  0691                     	;# 
  2142  0692                     	;# 
  2143  0693                     	;# 
  2144  0694                     	;# 
  2145  0695                     	;# 
  2146  0696                     	;# 
  2147  0697                     	;# 
  2148  0698                     	;# 
  2149  0699                     	;# 
  2150  069A                     	;# 
  2151  069B                     	;# 
  2152  069C                     	;# 
  2153  069D                     	;# 
  2154  069E                     	;# 
  2155  069F                     	;# 
  2156  0E0F                     	;# 
  2157  0E10                     	;# 
  2158  0E11                     	;# 
  2159  0E12                     	;# 
  2160  0E13                     	;# 
  2161  0E14                     	;# 
  2162  0E15                     	;# 
  2163  0E17                     	;# 
  2164  0E20                     	;# 
  2165  0E21                     	;# 
  2166  0E22                     	;# 
  2167  0E24                     	;# 
  2168  0E25                     	;# 
  2169  0E28                     	;# 
  2170  0E29                     	;# 
  2171  0E2A                     	;# 
  2172  0E2B                     	;# 
  2173  0E90                     	;# 
  2174  0E91                     	;# 
  2175  0E92                     	;# 
  2176  0E93                     	;# 
  2177  0E94                     	;# 
  2178  0E95                     	;# 
  2179  0E96                     	;# 
  2180  0E97                     	;# 
  2181  0E98                     	;# 
  2182  0E99                     	;# 
  2183  0E9A                     	;# 
  2184  0E9B                     	;# 
  2185  0E9C                     	;# 
  2186  0E9D                     	;# 
  2187  0E9E                     	;# 
  2188  0E9F                     	;# 
  2189  0EA0                     	;# 
  2190  0EA1                     	;# 
  2191  0EA2                     	;# 
  2192  0EA3                     	;# 
  2193  0EA4                     	;# 
  2194  0EA5                     	;# 
  2195  0EA6                     	;# 
  2196  0EA7                     	;# 
  2197  0EA8                     	;# 
  2198  0EA9                     	;# 
  2199  0EAA                     	;# 
  2200  0EAB                     	;# 
  2201  0EAC                     	;# 
  2202  0EAD                     	;# 
  2203  0EAE                     	;# 
  2204  0EAF                     	;# 
  2205  0EB0                     	;# 
  2206  0EB1                     	;# 
  2207  0EB2                     	;# 
  2208  0F0F                     	;# 
  2209  0F10                     	;# 
  2210  0F11                     	;# 
  2211  0F12                     	;# 
  2212  0F13                     	;# 
  2213  0F14                     	;# 
  2214  0F15                     	;# 
  2215  0F16                     	;# 
  2216  0F17                     	;# 
  2217  0F18                     	;# 
  2218  0F19                     	;# 
  2219  0F1A                     	;# 
  2220  0F1B                     	;# 
  2221  0F1C                     	;# 
  2222  0F1D                     	;# 
  2223  0F1E                     	;# 
  2224  0F1F                     	;# 
  2225  0F20                     	;# 
  2226  0F21                     	;# 
  2227  0F22                     	;# 
  2228  0F23                     	;# 
  2229  0F24                     	;# 
  2230  0F25                     	;# 
  2231  0F26                     	;# 
  2232  0F27                     	;# 
  2233  0F28                     	;# 
  2234  0F29                     	;# 
  2235  0F2A                     	;# 
  2236  0F2B                     	;# 
  2237  0F2C                     	;# 
  2238  0F2D                     	;# 
  2239  0F2E                     	;# 
  2240  0F2F                     	;# 
  2241  0F30                     	;# 
  2242  0F31                     	;# 
  2243  0F32                     	;# 
  2244  0F33                     	;# 
  2245  0F34                     	;# 
  2246  0F35                     	;# 
  2247  0F36                     	;# 
  2248  0F37                     	;# 
  2249  0FE4                     	;# 
  2250  0FE5                     	;# 
  2251  0FE6                     	;# 
  2252  0FE7                     	;# 
  2253  0FE8                     	;# 
  2254  0FE9                     	;# 
  2255  0FEA                     	;# 
  2256  0FEB                     	;# 
  2257  0FED                     	;# 
  2258  0FEE                     	;# 
  2259  0FEF                     	;# 
  2260                           
  2261                           	psect	stringtext1
  2262  1800                     __pstringtext1:	
  2263  1800                     _dpowers:	
  2264  1800  3401               	retlw	1
  2265  1801  3400               	retlw	0
  2266  1802  3400               	retlw	0
  2267  1803  3400               	retlw	0
  2268  1804  340A               	retlw	10
  2269  1805  3400               	retlw	0
  2270  1806  3400               	retlw	0
  2271  1807  3400               	retlw	0
  2272  1808  3464               	retlw	100
  2273  1809  3400               	retlw	0
  2274  180A  3400               	retlw	0
  2275  180B  3400               	retlw	0
  2276  180C  34E8               	retlw	232
  2277  180D  3403               	retlw	3
  2278  180E  3400               	retlw	0
  2279  180F  3400               	retlw	0
  2280  1810  3410               	retlw	16
  2281  1811  3427               	retlw	39
  2282  1812  3400               	retlw	0
  2283  1813  3400               	retlw	0
  2284  1814  34A0               	retlw	160
  2285  1815  3486               	retlw	134
  2286  1816  3401               	retlw	1
  2287  1817  3400               	retlw	0
  2288  1818  3440               	retlw	64
  2289  1819  3442               	retlw	66
  2290  181A  340F               	retlw	15
  2291  181B  3400               	retlw	0
  2292  181C  3480               	retlw	128
  2293  181D  3496               	retlw	150
  2294  181E  3498               	retlw	152
  2295  181F  3400               	retlw	0
  2296  1820  3400               	retlw	0
  2297  1821  34E1               	retlw	225
  2298  1822  34F5               	retlw	245
  2299  1823  3405               	retlw	5
  2300  1824  3400               	retlw	0
  2301  1825  34CA               	retlw	202
  2302  1826  349A               	retlw	154
  2303  1827  343B               	retlw	59
  2304  1828                     __end_of_dpowers:	
  2305                           
  2306                           	psect	stringtext2
  2307  0800                     __pstringtext2:	
  2308  0800                     _OledFont:	
  2309  0800  3400               	retlw	0
  2310  0801  3400               	retlw	0
  2311  0802  3400               	retlw	0
  2312  0803  3400               	retlw	0
  2313  0804  3400               	retlw	0
  2314  0805  3400               	retlw	0
  2315  0806  3400               	retlw	0
  2316  0807  3400               	retlw	0
  2317  0808  3400               	retlw	0
  2318  0809  3400               	retlw	0
  2319  080A  345F               	retlw	95
  2320  080B  3400               	retlw	0
  2321  080C  3400               	retlw	0
  2322  080D  3400               	retlw	0
  2323  080E  3400               	retlw	0
  2324  080F  3400               	retlw	0
  2325  0810  3400               	retlw	0
  2326  0811  3400               	retlw	0
  2327  0812  3407               	retlw	7
  2328  0813  3400               	retlw	0
  2329  0814  3407               	retlw	7
  2330  0815  3400               	retlw	0
  2331  0816  3400               	retlw	0
  2332  0817  3400               	retlw	0
  2333  0818  3400               	retlw	0
  2334  0819  3414               	retlw	20
  2335  081A  347F               	retlw	127
  2336  081B  3414               	retlw	20
  2337  081C  347F               	retlw	127
  2338  081D  3414               	retlw	20
  2339  081E  3400               	retlw	0
  2340  081F  3400               	retlw	0
  2341  0820  3400               	retlw	0
  2342  0821  3424               	retlw	36
  2343  0822  342A               	retlw	42
  2344  0823  347F               	retlw	127
  2345  0824  342A               	retlw	42
  2346  0825  3412               	retlw	18
  2347  0826  3400               	retlw	0
  2348  0827  3400               	retlw	0
  2349  0828  3400               	retlw	0
  2350  0829  3423               	retlw	35
  2351  082A  3413               	retlw	19
  2352  082B  3408               	retlw	8
  2353  082C  3464               	retlw	100
  2354  082D  3462               	retlw	98
  2355  082E  3400               	retlw	0
  2356  082F  3400               	retlw	0
  2357  0830  3400               	retlw	0
  2358  0831  3436               	retlw	54
  2359  0832  3449               	retlw	73
  2360  0833  3455               	retlw	85
  2361  0834  3422               	retlw	34
  2362  0835  3450               	retlw	80
  2363  0836  3400               	retlw	0
  2364  0837  3400               	retlw	0
  2365  0838  3400               	retlw	0
  2366  0839  3400               	retlw	0
  2367  083A  3405               	retlw	5
  2368  083B  3403               	retlw	3
  2369  083C  3400               	retlw	0
  2370  083D  3400               	retlw	0
  2371  083E  3400               	retlw	0
  2372  083F  3400               	retlw	0
  2373  0840  3400               	retlw	0
  2374  0841  341C               	retlw	28
  2375  0842  3422               	retlw	34
  2376  0843  3441               	retlw	65
  2377  0844  3400               	retlw	0
  2378  0845  3400               	retlw	0
  2379  0846  3400               	retlw	0
  2380  0847  3400               	retlw	0
  2381  0848  3400               	retlw	0
  2382  0849  3441               	retlw	65
  2383  084A  3422               	retlw	34
  2384  084B  341C               	retlw	28
  2385  084C  3400               	retlw	0
  2386  084D  3400               	retlw	0
  2387  084E  3400               	retlw	0
  2388  084F  3400               	retlw	0
  2389  0850  3400               	retlw	0
  2390  0851  3408               	retlw	8
  2391  0852  342A               	retlw	42
  2392  0853  341C               	retlw	28
  2393  0854  342A               	retlw	42
  2394  0855  3408               	retlw	8
  2395  0856  3400               	retlw	0
  2396  0857  3400               	retlw	0
  2397  0858  3400               	retlw	0
  2398  0859  3408               	retlw	8
  2399  085A  3408               	retlw	8
  2400  085B  343E               	retlw	62
  2401  085C  3408               	retlw	8
  2402  085D  3408               	retlw	8
  2403  085E  3400               	retlw	0
  2404  085F  3400               	retlw	0
  2405  0860  3400               	retlw	0
  2406  0861  34A0               	retlw	160
  2407  0862  3460               	retlw	96
  2408  0863  3400               	retlw	0
  2409  0864  3400               	retlw	0
  2410  0865  3400               	retlw	0
  2411  0866  3400               	retlw	0
  2412  0867  3400               	retlw	0
  2413  0868  3400               	retlw	0
  2414  0869  3408               	retlw	8
  2415  086A  3408               	retlw	8
  2416  086B  3408               	retlw	8
  2417  086C  3408               	retlw	8
  2418  086D  3408               	retlw	8
  2419  086E  3400               	retlw	0
  2420  086F  3400               	retlw	0
  2421  0870  3400               	retlw	0
  2422  0871  3460               	retlw	96
  2423  0872  3460               	retlw	96
  2424  0873  3400               	retlw	0
  2425  0874  3400               	retlw	0
  2426  0875  3400               	retlw	0
  2427  0876  3400               	retlw	0
  2428  0877  3400               	retlw	0
  2429  0878  3400               	retlw	0
  2430  0879  3420               	retlw	32
  2431  087A  3410               	retlw	16
  2432  087B  3408               	retlw	8
  2433  087C  3404               	retlw	4
  2434  087D  3402               	retlw	2
  2435  087E  3400               	retlw	0
  2436  087F  3400               	retlw	0
  2437  0880  3400               	retlw	0
  2438  0881  343E               	retlw	62
  2439  0882  3451               	retlw	81
  2440  0883  3449               	retlw	73
  2441  0884  3445               	retlw	69
  2442  0885  343E               	retlw	62
  2443  0886  3400               	retlw	0
  2444  0887  3400               	retlw	0
  2445  0888  3400               	retlw	0
  2446  0889  3400               	retlw	0
  2447  088A  3442               	retlw	66
  2448  088B  347F               	retlw	127
  2449  088C  3440               	retlw	64
  2450  088D  3400               	retlw	0
  2451  088E  3400               	retlw	0
  2452  088F  3400               	retlw	0
  2453  0890  3400               	retlw	0
  2454  0891  3462               	retlw	98
  2455  0892  3451               	retlw	81
  2456  0893  3449               	retlw	73
  2457  0894  3449               	retlw	73
  2458  0895  3446               	retlw	70
  2459  0896  3400               	retlw	0
  2460  0897  3400               	retlw	0
  2461  0898  3400               	retlw	0
  2462  0899  3422               	retlw	34
  2463  089A  3441               	retlw	65
  2464  089B  3449               	retlw	73
  2465  089C  3449               	retlw	73
  2466  089D  3436               	retlw	54
  2467  089E  3400               	retlw	0
  2468  089F  3400               	retlw	0
  2469  08A0  3400               	retlw	0
  2470  08A1  3418               	retlw	24
  2471  08A2  3414               	retlw	20
  2472  08A3  3412               	retlw	18
  2473  08A4  347F               	retlw	127
  2474  08A5  3410               	retlw	16
  2475  08A6  3400               	retlw	0
  2476  08A7  3400               	retlw	0
  2477  08A8  3400               	retlw	0
  2478  08A9  3427               	retlw	39
  2479  08AA  3445               	retlw	69
  2480  08AB  3445               	retlw	69
  2481  08AC  3445               	retlw	69
  2482  08AD  3439               	retlw	57
  2483  08AE  3400               	retlw	0
  2484  08AF  3400               	retlw	0
  2485  08B0  3400               	retlw	0
  2486  08B1  343C               	retlw	60
  2487  08B2  344A               	retlw	74
  2488  08B3  3449               	retlw	73
  2489  08B4  3449               	retlw	73
  2490  08B5  3430               	retlw	48
  2491  08B6  3400               	retlw	0
  2492  08B7  3400               	retlw	0
  2493  08B8  3400               	retlw	0
  2494  08B9  3401               	retlw	1
  2495  08BA  3471               	retlw	113
  2496  08BB  3409               	retlw	9
  2497  08BC  3405               	retlw	5
  2498  08BD  3403               	retlw	3
  2499  08BE  3400               	retlw	0
  2500  08BF  3400               	retlw	0
  2501  08C0  3400               	retlw	0
  2502  08C1  3436               	retlw	54
  2503  08C2  3449               	retlw	73
  2504  08C3  3449               	retlw	73
  2505  08C4  3449               	retlw	73
  2506  08C5  3436               	retlw	54
  2507  08C6  3400               	retlw	0
  2508  08C7  3400               	retlw	0
  2509  08C8  3400               	retlw	0
  2510  08C9  3406               	retlw	6
  2511  08CA  3449               	retlw	73
  2512  08CB  3449               	retlw	73
  2513  08CC  3429               	retlw	41
  2514  08CD  341E               	retlw	30
  2515  08CE  3400               	retlw	0
  2516  08CF  3400               	retlw	0
  2517  08D0  3400               	retlw	0
  2518  08D1  3400               	retlw	0
  2519  08D2  3436               	retlw	54
  2520  08D3  3436               	retlw	54
  2521  08D4  3400               	retlw	0
  2522  08D5  3400               	retlw	0
  2523  08D6  3400               	retlw	0
  2524  08D7  3400               	retlw	0
  2525  08D8  3400               	retlw	0
  2526  08D9  3400               	retlw	0
  2527  08DA  34AC               	retlw	172
  2528  08DB  346C               	retlw	108
  2529  08DC  3400               	retlw	0
  2530  08DD  3400               	retlw	0
  2531  08DE  3400               	retlw	0
  2532  08DF  3400               	retlw	0
  2533  08E0  3400               	retlw	0
  2534  08E1  3408               	retlw	8
  2535  08E2  3414               	retlw	20
  2536  08E3  3422               	retlw	34
  2537  08E4  3441               	retlw	65
  2538  08E5  3400               	retlw	0
  2539  08E6  3400               	retlw	0
  2540  08E7  3400               	retlw	0
  2541  08E8  3400               	retlw	0
  2542  08E9  3414               	retlw	20
  2543  08EA  3414               	retlw	20
  2544  08EB  3414               	retlw	20
  2545  08EC  3414               	retlw	20
  2546  08ED  3414               	retlw	20
  2547  08EE  3400               	retlw	0
  2548  08EF  3400               	retlw	0
  2549  08F0  3400               	retlw	0
  2550  08F1  3441               	retlw	65
  2551  08F2  3422               	retlw	34
  2552  08F3  3414               	retlw	20
  2553  08F4  3408               	retlw	8
  2554  08F5  3400               	retlw	0
  2555  08F6  3400               	retlw	0
  2556  08F7  3400               	retlw	0
  2557  08F8  3400               	retlw	0
  2558  08F9  3402               	retlw	2
  2559  08FA  3401               	retlw	1
  2560  08FB  3451               	retlw	81
  2561  08FC  3409               	retlw	9
  2562  08FD  3406               	retlw	6
  2563  08FE  3400               	retlw	0
  2564  08FF  3400               	retlw	0
  2565  0900  3400               	retlw	0
  2566  0901  3432               	retlw	50
  2567  0902  3449               	retlw	73
  2568  0903  3479               	retlw	121
  2569  0904  3441               	retlw	65
  2570  0905  343E               	retlw	62
  2571  0906  3400               	retlw	0
  2572  0907  3400               	retlw	0
  2573  0908  3400               	retlw	0
  2574  0909  347E               	retlw	126
  2575  090A  3409               	retlw	9
  2576  090B  3409               	retlw	9
  2577  090C  3409               	retlw	9
  2578  090D  347E               	retlw	126
  2579  090E  3400               	retlw	0
  2580  090F  3400               	retlw	0
  2581  0910  3400               	retlw	0
  2582  0911  347F               	retlw	127
  2583  0912  3449               	retlw	73
  2584  0913  3449               	retlw	73
  2585  0914  3449               	retlw	73
  2586  0915  3436               	retlw	54
  2587  0916  3400               	retlw	0
  2588  0917  3400               	retlw	0
  2589  0918  3400               	retlw	0
  2590  0919  343E               	retlw	62
  2591  091A  3441               	retlw	65
  2592  091B  3441               	retlw	65
  2593  091C  3441               	retlw	65
  2594  091D  3422               	retlw	34
  2595  091E  3400               	retlw	0
  2596  091F  3400               	retlw	0
  2597  0920  3400               	retlw	0
  2598  0921  347F               	retlw	127
  2599  0922  3441               	retlw	65
  2600  0923  3441               	retlw	65
  2601  0924  3422               	retlw	34
  2602  0925  341C               	retlw	28
  2603  0926  3400               	retlw	0
  2604  0927  3400               	retlw	0
  2605  0928  3400               	retlw	0
  2606  0929  347F               	retlw	127
  2607  092A  3449               	retlw	73
  2608  092B  3449               	retlw	73
  2609  092C  3449               	retlw	73
  2610  092D  3441               	retlw	65
  2611  092E  3400               	retlw	0
  2612  092F  3400               	retlw	0
  2613  0930  3400               	retlw	0
  2614  0931  347F               	retlw	127
  2615  0932  3409               	retlw	9
  2616  0933  3409               	retlw	9
  2617  0934  3409               	retlw	9
  2618  0935  3401               	retlw	1
  2619  0936  3400               	retlw	0
  2620  0937  3400               	retlw	0
  2621  0938  3400               	retlw	0
  2622  0939  343E               	retlw	62
  2623  093A  3441               	retlw	65
  2624  093B  3441               	retlw	65
  2625  093C  3451               	retlw	81
  2626  093D  3472               	retlw	114
  2627  093E  3400               	retlw	0
  2628  093F  3400               	retlw	0
  2629  0940  3400               	retlw	0
  2630  0941  347F               	retlw	127
  2631  0942  3408               	retlw	8
  2632  0943  3408               	retlw	8
  2633  0944  3408               	retlw	8
  2634  0945  347F               	retlw	127
  2635  0946  3400               	retlw	0
  2636  0947  3400               	retlw	0
  2637  0948  3400               	retlw	0
  2638  0949  3441               	retlw	65
  2639  094A  347F               	retlw	127
  2640  094B  3441               	retlw	65
  2641  094C  3400               	retlw	0
  2642  094D  3400               	retlw	0
  2643  094E  3400               	retlw	0
  2644  094F  3400               	retlw	0
  2645  0950  3400               	retlw	0
  2646  0951  3420               	retlw	32
  2647  0952  3440               	retlw	64
  2648  0953  3441               	retlw	65
  2649  0954  343F               	retlw	63
  2650  0955  3401               	retlw	1
  2651  0956  3400               	retlw	0
  2652  0957  3400               	retlw	0
  2653  0958  3400               	retlw	0
  2654  0959  347F               	retlw	127
  2655  095A  3408               	retlw	8
  2656  095B  3414               	retlw	20
  2657  095C  3422               	retlw	34
  2658  095D  3441               	retlw	65
  2659  095E  3400               	retlw	0
  2660  095F  3400               	retlw	0
  2661  0960  3400               	retlw	0
  2662  0961  347F               	retlw	127
  2663  0962  3440               	retlw	64
  2664  0963  3440               	retlw	64
  2665  0964  3440               	retlw	64
  2666  0965  3440               	retlw	64
  2667  0966  3400               	retlw	0
  2668  0967  3400               	retlw	0
  2669  0968  3400               	retlw	0
  2670  0969  347F               	retlw	127
  2671  096A  3402               	retlw	2
  2672  096B  340C               	retlw	12
  2673  096C  3402               	retlw	2
  2674  096D  347F               	retlw	127
  2675  096E  3400               	retlw	0
  2676  096F  3400               	retlw	0
  2677  0970  3400               	retlw	0
  2678  0971  347F               	retlw	127
  2679  0972  3404               	retlw	4
  2680  0973  3408               	retlw	8
  2681  0974  3410               	retlw	16
  2682  0975  347F               	retlw	127
  2683  0976  3400               	retlw	0
  2684  0977  3400               	retlw	0
  2685  0978  3400               	retlw	0
  2686  0979  343E               	retlw	62
  2687  097A  3441               	retlw	65
  2688  097B  3441               	retlw	65
  2689  097C  3441               	retlw	65
  2690  097D  343E               	retlw	62
  2691  097E  3400               	retlw	0
  2692  097F  3400               	retlw	0
  2693  0980  3400               	retlw	0
  2694  0981  347F               	retlw	127
  2695  0982  3409               	retlw	9
  2696  0983  3409               	retlw	9
  2697  0984  3409               	retlw	9
  2698  0985  3406               	retlw	6
  2699  0986  3400               	retlw	0
  2700  0987  3400               	retlw	0
  2701  0988  3400               	retlw	0
  2702  0989  343E               	retlw	62
  2703  098A  3441               	retlw	65
  2704  098B  3451               	retlw	81
  2705  098C  3421               	retlw	33
  2706  098D  345E               	retlw	94
  2707  098E  3400               	retlw	0
  2708  098F  3400               	retlw	0
  2709  0990  3400               	retlw	0
  2710  0991  347F               	retlw	127
  2711  0992  3409               	retlw	9
  2712  0993  3419               	retlw	25
  2713  0994  3429               	retlw	41
  2714  0995  3446               	retlw	70
  2715  0996  3400               	retlw	0
  2716  0997  3400               	retlw	0
  2717  0998  3400               	retlw	0
  2718  0999  3426               	retlw	38
  2719  099A  3449               	retlw	73
  2720  099B  3449               	retlw	73
  2721  099C  3449               	retlw	73
  2722  099D  3432               	retlw	50
  2723  099E  3400               	retlw	0
  2724  099F  3400               	retlw	0
  2725  09A0  3400               	retlw	0
  2726  09A1  3401               	retlw	1
  2727  09A2  3401               	retlw	1
  2728  09A3  347F               	retlw	127
  2729  09A4  3401               	retlw	1
  2730  09A5  3401               	retlw	1
  2731  09A6  3400               	retlw	0
  2732  09A7  3400               	retlw	0
  2733  09A8  3400               	retlw	0
  2734  09A9  343F               	retlw	63
  2735  09AA  3440               	retlw	64
  2736  09AB  3440               	retlw	64
  2737  09AC  3440               	retlw	64
  2738  09AD  343F               	retlw	63
  2739  09AE  3400               	retlw	0
  2740  09AF  3400               	retlw	0
  2741  09B0  3400               	retlw	0
  2742  09B1  341F               	retlw	31
  2743  09B2  3420               	retlw	32
  2744  09B3  3440               	retlw	64
  2745  09B4  3420               	retlw	32
  2746  09B5  341F               	retlw	31
  2747  09B6  3400               	retlw	0
  2748  09B7  3400               	retlw	0
  2749  09B8  3400               	retlw	0
  2750  09B9  343F               	retlw	63
  2751  09BA  3440               	retlw	64
  2752  09BB  3438               	retlw	56
  2753  09BC  3440               	retlw	64
  2754  09BD  343F               	retlw	63
  2755  09BE  3400               	retlw	0
  2756  09BF  3400               	retlw	0
  2757  09C0  3400               	retlw	0
  2758  09C1  3463               	retlw	99
  2759  09C2  3414               	retlw	20
  2760  09C3  3408               	retlw	8
  2761  09C4  3414               	retlw	20
  2762  09C5  3463               	retlw	99
  2763  09C6  3400               	retlw	0
  2764  09C7  3400               	retlw	0
  2765  09C8  3400               	retlw	0
  2766  09C9  3403               	retlw	3
  2767  09CA  3404               	retlw	4
  2768  09CB  3478               	retlw	120
  2769  09CC  3404               	retlw	4
  2770  09CD  3403               	retlw	3
  2771  09CE  3400               	retlw	0
  2772  09CF  3400               	retlw	0
  2773  09D0  3400               	retlw	0
  2774  09D1  3461               	retlw	97
  2775  09D2  3451               	retlw	81
  2776  09D3  3449               	retlw	73
  2777  09D4  3445               	retlw	69
  2778  09D5  3443               	retlw	67
  2779  09D6  3400               	retlw	0
  2780  09D7  3400               	retlw	0
  2781  09D8  3400               	retlw	0
  2782  09D9  347F               	retlw	127
  2783  09DA  3441               	retlw	65
  2784  09DB  3441               	retlw	65
  2785  09DC  3400               	retlw	0
  2786  09DD  3400               	retlw	0
  2787  09DE  3400               	retlw	0
  2788  09DF  3400               	retlw	0
  2789  09E0  3400               	retlw	0
  2790  09E1  3402               	retlw	2
  2791  09E2  3404               	retlw	4
  2792  09E3  3408               	retlw	8
  2793  09E4  3410               	retlw	16
  2794  09E5  3420               	retlw	32
  2795  09E6  3400               	retlw	0
  2796  09E7  3400               	retlw	0
  2797  09E8  3400               	retlw	0
  2798  09E9  3441               	retlw	65
  2799  09EA  3441               	retlw	65
  2800  09EB  347F               	retlw	127
  2801  09EC  3400               	retlw	0
  2802  09ED  3400               	retlw	0
  2803  09EE  3400               	retlw	0
  2804  09EF  3400               	retlw	0
  2805  09F0  3400               	retlw	0
  2806  09F1  3404               	retlw	4
  2807  09F2  3402               	retlw	2
  2808  09F3  3401               	retlw	1
  2809  09F4  3402               	retlw	2
  2810  09F5  3404               	retlw	4
  2811  09F6  3400               	retlw	0
  2812  09F7  3400               	retlw	0
  2813  09F8  3400               	retlw	0
  2814  09F9  3480               	retlw	128
  2815  09FA  3480               	retlw	128
  2816  09FB  3480               	retlw	128
  2817  09FC  3480               	retlw	128
  2818  09FD  3480               	retlw	128
  2819  09FE  3400               	retlw	0
  2820  09FF  3400               	retlw	0
  2821  0A00  3400               	retlw	0
  2822  0A01  3401               	retlw	1
  2823  0A02  3402               	retlw	2
  2824  0A03  3404               	retlw	4
  2825  0A04  3400               	retlw	0
  2826  0A05  3400               	retlw	0
  2827  0A06  3400               	retlw	0
  2828  0A07  3400               	retlw	0
  2829  0A08  3400               	retlw	0
  2830  0A09  3420               	retlw	32
  2831  0A0A  3454               	retlw	84
  2832  0A0B  3454               	retlw	84
  2833  0A0C  3454               	retlw	84
  2834  0A0D  3478               	retlw	120
  2835  0A0E  3400               	retlw	0
  2836  0A0F  3400               	retlw	0
  2837  0A10  3400               	retlw	0
  2838  0A11  347F               	retlw	127
  2839  0A12  3448               	retlw	72
  2840  0A13  3444               	retlw	68
  2841  0A14  3444               	retlw	68
  2842  0A15  3438               	retlw	56
  2843  0A16  3400               	retlw	0
  2844  0A17  3400               	retlw	0
  2845  0A18  3400               	retlw	0
  2846  0A19  3438               	retlw	56
  2847  0A1A  3444               	retlw	68
  2848  0A1B  3444               	retlw	68
  2849  0A1C  3428               	retlw	40
  2850  0A1D  3400               	retlw	0
  2851  0A1E  3400               	retlw	0
  2852  0A1F  3400               	retlw	0
  2853  0A20  3400               	retlw	0
  2854  0A21  3438               	retlw	56
  2855  0A22  3444               	retlw	68
  2856  0A23  3444               	retlw	68
  2857  0A24  3448               	retlw	72
  2858  0A25  347F               	retlw	127
  2859  0A26  3400               	retlw	0
  2860  0A27  3400               	retlw	0
  2861  0A28  3400               	retlw	0
  2862  0A29  3438               	retlw	56
  2863  0A2A  3454               	retlw	84
  2864  0A2B  3454               	retlw	84
  2865  0A2C  3454               	retlw	84
  2866  0A2D  3418               	retlw	24
  2867  0A2E  3400               	retlw	0
  2868  0A2F  3400               	retlw	0
  2869  0A30  3400               	retlw	0
  2870  0A31  3408               	retlw	8
  2871  0A32  347E               	retlw	126
  2872  0A33  3409               	retlw	9
  2873  0A34  3402               	retlw	2
  2874  0A35  3400               	retlw	0
  2875  0A36  3400               	retlw	0
  2876  0A37  3400               	retlw	0
  2877  0A38  3400               	retlw	0
  2878  0A39  3418               	retlw	24
  2879  0A3A  34A4               	retlw	164
  2880  0A3B  34A4               	retlw	164
  2881  0A3C  34A4               	retlw	164
  2882  0A3D  347C               	retlw	124
  2883  0A3E  3400               	retlw	0
  2884  0A3F  3400               	retlw	0
  2885  0A40  3400               	retlw	0
  2886  0A41  347F               	retlw	127
  2887  0A42  3408               	retlw	8
  2888  0A43  3404               	retlw	4
  2889  0A44  3404               	retlw	4
  2890  0A45  3478               	retlw	120
  2891  0A46  3400               	retlw	0
  2892  0A47  3400               	retlw	0
  2893  0A48  3400               	retlw	0
  2894  0A49  3400               	retlw	0
  2895  0A4A  347D               	retlw	125
  2896  0A4B  3400               	retlw	0
  2897  0A4C  3400               	retlw	0
  2898  0A4D  3400               	retlw	0
  2899  0A4E  3400               	retlw	0
  2900  0A4F  3400               	retlw	0
  2901  0A50  3400               	retlw	0
  2902  0A51  3480               	retlw	128
  2903  0A52  3484               	retlw	132
  2904  0A53  347D               	retlw	125
  2905  0A54  3400               	retlw	0
  2906  0A55  3400               	retlw	0
  2907  0A56  3400               	retlw	0
  2908  0A57  3400               	retlw	0
  2909  0A58  3400               	retlw	0
  2910  0A59  347F               	retlw	127
  2911  0A5A  3410               	retlw	16
  2912  0A5B  3428               	retlw	40
  2913  0A5C  3444               	retlw	68
  2914  0A5D  3400               	retlw	0
  2915  0A5E  3400               	retlw	0
  2916  0A5F  3400               	retlw	0
  2917  0A60  3400               	retlw	0
  2918  0A61  3441               	retlw	65
  2919  0A62  347F               	retlw	127
  2920  0A63  3440               	retlw	64
  2921  0A64  3400               	retlw	0
  2922  0A65  3400               	retlw	0
  2923  0A66  3400               	retlw	0
  2924  0A67  3400               	retlw	0
  2925  0A68  3400               	retlw	0
  2926  0A69  347C               	retlw	124
  2927  0A6A  3404               	retlw	4
  2928  0A6B  3418               	retlw	24
  2929  0A6C  3404               	retlw	4
  2930  0A6D  3478               	retlw	120
  2931  0A6E  3400               	retlw	0
  2932  0A6F  3400               	retlw	0
  2933  0A70  3400               	retlw	0
  2934  0A71  347C               	retlw	124
  2935  0A72  3408               	retlw	8
  2936  0A73  3404               	retlw	4
  2937  0A74  347C               	retlw	124
  2938  0A75  3400               	retlw	0
  2939  0A76  3400               	retlw	0
  2940  0A77  3400               	retlw	0
  2941  0A78  3400               	retlw	0
  2942  0A79  3438               	retlw	56
  2943  0A7A  3444               	retlw	68
  2944  0A7B  3444               	retlw	68
  2945  0A7C  3438               	retlw	56
  2946  0A7D  3400               	retlw	0
  2947  0A7E  3400               	retlw	0
  2948  0A7F  3400               	retlw	0
  2949  0A80  3400               	retlw	0
  2950  0A81  34FC               	retlw	252
  2951  0A82  3424               	retlw	36
  2952  0A83  3424               	retlw	36
  2953  0A84  3418               	retlw	24
  2954  0A85  3400               	retlw	0
  2955  0A86  3400               	retlw	0
  2956  0A87  3400               	retlw	0
  2957  0A88  3400               	retlw	0
  2958  0A89  3418               	retlw	24
  2959  0A8A  3424               	retlw	36
  2960  0A8B  3424               	retlw	36
  2961  0A8C  34FC               	retlw	252
  2962  0A8D  3400               	retlw	0
  2963  0A8E  3400               	retlw	0
  2964  0A8F  3400               	retlw	0
  2965  0A90  3400               	retlw	0
  2966  0A91  3400               	retlw	0
  2967  0A92  347C               	retlw	124
  2968  0A93  3408               	retlw	8
  2969  0A94  3404               	retlw	4
  2970  0A95  3400               	retlw	0
  2971  0A96  3400               	retlw	0
  2972  0A97  3400               	retlw	0
  2973  0A98  3400               	retlw	0
  2974  0A99  3448               	retlw	72
  2975  0A9A  3454               	retlw	84
  2976  0A9B  3454               	retlw	84
  2977  0A9C  3424               	retlw	36
  2978  0A9D  3400               	retlw	0
  2979  0A9E  3400               	retlw	0
  2980  0A9F  3400               	retlw	0
  2981  0AA0  3400               	retlw	0
  2982  0AA1  3404               	retlw	4
  2983  0AA2  347F               	retlw	127
  2984  0AA3  3444               	retlw	68
  2985  0AA4  3400               	retlw	0
  2986  0AA5  3400               	retlw	0
  2987  0AA6  3400               	retlw	0
  2988  0AA7  3400               	retlw	0
  2989  0AA8  3400               	retlw	0
  2990  0AA9  343C               	retlw	60
  2991  0AAA  3440               	retlw	64
  2992  0AAB  3440               	retlw	64
  2993  0AAC  347C               	retlw	124
  2994  0AAD  3400               	retlw	0
  2995  0AAE  3400               	retlw	0
  2996  0AAF  3400               	retlw	0
  2997  0AB0  3400               	retlw	0
  2998  0AB1  341C               	retlw	28
  2999  0AB2  3420               	retlw	32
  3000  0AB3  3440               	retlw	64
  3001  0AB4  3420               	retlw	32
  3002  0AB5  341C               	retlw	28
  3003  0AB6  3400               	retlw	0
  3004  0AB7  3400               	retlw	0
  3005  0AB8  3400               	retlw	0
  3006  0AB9  343C               	retlw	60
  3007  0ABA  3440               	retlw	64
  3008  0ABB  3430               	retlw	48
  3009  0ABC  3440               	retlw	64
  3010  0ABD  343C               	retlw	60
  3011  0ABE  3400               	retlw	0
  3012  0ABF  3400               	retlw	0
  3013  0AC0  3400               	retlw	0
  3014  0AC1  3444               	retlw	68
  3015  0AC2  3428               	retlw	40
  3016  0AC3  3410               	retlw	16
  3017  0AC4  3428               	retlw	40
  3018  0AC5  3444               	retlw	68
  3019  0AC6  3400               	retlw	0
  3020  0AC7  3400               	retlw	0
  3021  0AC8  3400               	retlw	0
  3022  0AC9  341C               	retlw	28
  3023  0ACA  34A0               	retlw	160
  3024  0ACB  34A0               	retlw	160
  3025  0ACC  347C               	retlw	124
  3026  0ACD  3400               	retlw	0
  3027  0ACE  3400               	retlw	0
  3028  0ACF  3400               	retlw	0
  3029  0AD0  3400               	retlw	0
  3030  0AD1  3444               	retlw	68
  3031  0AD2  3464               	retlw	100
  3032  0AD3  3454               	retlw	84
  3033  0AD4  344C               	retlw	76
  3034  0AD5  3444               	retlw	68
  3035  0AD6  3400               	retlw	0
  3036  0AD7  3400               	retlw	0
  3037  0AD8  3400               	retlw	0
  3038  0AD9  3408               	retlw	8
  3039  0ADA  3436               	retlw	54
  3040  0ADB  3441               	retlw	65
  3041  0ADC  3400               	retlw	0
  3042  0ADD  3400               	retlw	0
  3043  0ADE  3400               	retlw	0
  3044  0ADF  3400               	retlw	0
  3045  0AE0  3400               	retlw	0
  3046  0AE1  3400               	retlw	0
  3047  0AE2  347F               	retlw	127
  3048  0AE3  3400               	retlw	0
  3049  0AE4  3400               	retlw	0
  3050  0AE5  3400               	retlw	0
  3051  0AE6  3400               	retlw	0
  3052  0AE7  3400               	retlw	0
  3053  0AE8  3400               	retlw	0
  3054  0AE9  3441               	retlw	65
  3055  0AEA  3436               	retlw	54
  3056  0AEB  3408               	retlw	8
  3057  0AEC  3400               	retlw	0
  3058  0AED  3400               	retlw	0
  3059  0AEE  3400               	retlw	0
  3060  0AEF  3400               	retlw	0
  3061  0AF0  3400               	retlw	0
  3062  0AF1  3402               	retlw	2
  3063  0AF2  3401               	retlw	1
  3064  0AF3  3401               	retlw	1
  3065  0AF4  3402               	retlw	2
  3066  0AF5  3401               	retlw	1
  3067  0AF6  3400               	retlw	0
  3068  0AF7  3400               	retlw	0
  3069  0AF8  3400               	retlw	0
  3070  0AF9  3402               	retlw	2
  3071  0AFA  3405               	retlw	5
  3072  0AFB  3405               	retlw	5
  3073  0AFC  3402               	retlw	2
  3074  0AFD  3400               	retlw	0
  3075  0AFE  3400               	retlw	0
  3076  0AFF  3400               	retlw	0
  3077  0B00                     __end_of_OledFont:	
  3078  0011                     _PIR1bits	set	17
  3079  0012                     _PIR2bits	set	18
  3080  009C                     _ADRESH	set	156
  3081  009B                     _ADRESL	set	155
  3082  009D                     _ADCON0bits	set	157
  3083  009E                     _ADCON1bits	set	158
  3084  008C                     _TRISAbits	set	140
  3085  008E                     _TRISCbits	set	142
  3086  0095                     _OPTION_REGbits	set	149
  3087  008F                     _TRISD	set	143
  3088  008E                     _TRISC	set	142
  3089  008D                     _TRISB	set	141
  3090  008C                     _TRISA	set	140
  3091  0090                     _TRISE	set	144
  3092  0097                     _WDTCON	set	151
  3093  0098                     _OSCTUNE	set	152
  3094  0099                     _OSCCON	set	153
  3095  010E                     _LATC	set	270
  3096  010D                     _LATB	set	269
  3097  010C                     _LATA	set	268
  3098  010F                     _LATD	set	271
  3099  0110                     _LATE	set	272
  3100  0116                     _BORCON	set	278
  3101  018C                     _ANSELAbits	set	396
  3102  018E                     _ANSELCbits	set	398
  3103  018C                     _ANSELA	set	396
  3104  0190                     _ANSELE	set	400
  3105  018D                     _ANSELB	set	397
  3106  018E                     _ANSELC	set	398
  3107  018F                     _ANSELD	set	399
  3108  0216                     _SSPCON2bits	set	534
  3109  0211                     _SSPBUF	set	529
  3110  0212                     _SSPADD	set	530
  3111  0215                     _SSPCONbits	set	533
  3112  020E                     _WPUC	set	526
  3113  020C                     _WPUA	set	524
  3114  020D                     _WPUB	set	525
  3115  0210                     _WPUE	set	528
  3116  020F                     _WPUD	set	527
  3117  029E                     _CCPTMRSbits	set	670
  3118  028F                     _ODCOND	set	655
  3119  028E                     _ODCONC	set	654
  3120  028D                     _ODCONB	set	653
  3121  028C                     _ODCONA	set	652
  3122  0290                     _ODCONE	set	656
  3123  0310                     _SLRCONE	set	784
  3124  030F                     _SLRCOND	set	783
  3125  030E                     _SLRCONC	set	782
  3126  030D                     _SLRCONB	set	781
  3127  030C                     _SLRCONA	set	780
  3128  041E                     _T6CONbits	set	1054
  3129  041E                     _T6CON	set	1054
  3130  041C                     _TMR6	set	1052
  3131  041D                     _PR6	set	1053
  3132  0617                     _PWM3DCL	set	1559
  3133  0618                     _PWM3DCH	set	1560
  3134  0619                     _PWM3CON	set	1561
  3135  0E20                     _SSPCLKPPSbits	set	3616
  3136  0E21                     _SSPDATPPSbits	set	3617
  3137  0E0F                     _PPSLOCKbits	set	3599
  3138  0E0F                     _PPSLOCK	set	3599
  3139  0EA5                     _RC5PPSbits	set	3749
  3140  0EA4                     _RC4PPSbits	set	3748
  3141  0E98                     _RB0PPS	set	3736
  3142  0B00                     STR_4:	
  3143  0B00  3425               	retlw	37	;'%'
  3144  0B01  346C               	retlw	108	;'l'
  3145  0B02  3475               	retlw	117	;'u'
  3146  0B03  342E               	retlw	46	;'.'
  3147  0B04  3425               	retlw	37	;'%'
  3148  0B05  3436               	retlw	54	;'6'
  3149  0B06  342E               	retlw	46	;'.'
  3150  0B07  3436               	retlw	54	;'6'
  3151  0B08  346C               	retlw	108	;'l'
  3152  0B09  3475               	retlw	117	;'u'
  3153  0B0A  3400               	retlw	0
  3154                           
  3155                           	psect	stringtext3
  3156  1828                     __pstringtext3:	
  3157  1828                     STR_1:	
  3158  1828  3456               	retlw	86	;'V'
  3159  1829  346F               	retlw	111	;'o'
  3160  182A  346C               	retlw	108	;'l'
  3161  182B  3474               	retlw	116	;'t'
  3162  182C  3461               	retlw	97	;'a'
  3163  182D  3467               	retlw	103	;'g'
  3164  182E  3465               	retlw	101	;'e'
  3165  182F  343A               	retlw	58	;':'
  3166  1830  3400               	retlw	0
  3167                           
  3168                           	psect	stringtext4
  3169  1831                     __pstringtext4:	
  3170  1831                     STR_2:	
  3171  1831  3420               	retlw	32	;' '
  3172  1832  3420               	retlw	32	;' '
  3173  1833  3420               	retlw	32	;' '
  3174  1834  3420               	retlw	32	;' '
  3175  1835  3420               	retlw	32	;' '
  3176  1836  3400               	retlw	0
  3177                           
  3178                           	psect	stringtext5
  3179  0000                     __pstringtext5:	
  3180  1831                     
  3181                           ; #config settings
  3182  0000                     
  3183                           	psect	cinit
  3184  07F3                     start_initialization:	
  3185  07F3                     __initialization:	
  3186                           
  3187                           ; Clear objects allocated to BANK0
  3188  07F3  0020               	movlb	0	; select bank0
  3189  07F4  01E9               	clrf	__pbssBANK0& (0+127)
  3190  07F5  01EA               	clrf	(__pbssBANK0+1)& (0+127)
  3191                           
  3192                           ; Clear objects allocated to BANK1
  3193  07F6  30BA               	movlw	low __pbssBANK1
  3194  07F7  0084               	movwf	4
  3195  07F8  3000               	movlw	high __pbssBANK1
  3196  07F9  0085               	movwf	5
  3197  07FA  3011               	movlw	17
  3198  07FB  318B  230B         	fcall	clear_ram0
  3199  07FD                     end_of_initialization:	
  3200                           ;End of C runtime variable initialization code
  3201                           
  3202  07FD                     __end_of__initialization:	
  3203  07FD  0020               	movlb	0
  3204  07FE  3180  287C         	ljmp	_main	;jump to C main() function
  3205                           
  3206                           	psect	bssBANK0
  3207  0069                     __pbssBANK0:	
  3208  0069                     _errno:	
  3209  0069                     	ds	2
  3210                           
  3211                           	psect	bssBANK1
  3212  00BA                     __pbssBANK1:	
  3213  00BA                     ftoa@buf:	
  3214  00BA                     	ds	17
  3215                           
  3216                           	psect	clrtext
  3217  0B0B                     clear_ram0:	
  3218                           ;	Called with FSR0 containing the base address, and
  3219                           ;	WREG with the size to clear
  3220                           
  3221  0B0B  0064               	clrwdt	;clear the watchdog before getting into this loop
  3222  0B0C                     clrloop0:	
  3223  0B0C  0180               	clrf	0	;clear RAM location pointed to by FSR
  3224  0B0D  3101               	addfsr 0,1
  3225  0B0E  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3226  0B0F  2B0C               	goto	clrloop0	;have we reached the end yet?
  3227  0B10  3400               	retlw	0	;all done for this memory range, return
  3228                           
  3229                           	psect	cstackBANK1
  3230  00A0                     __pcstackBANK1:	
  3231  00A0                     	ds	6
  3232  00A6                     main@result:	
  3233                           
  3234                           ; 2 bytes @ 0x6
  3235  00A6                     	ds	4
  3236  00AA                     main@outVolt:	
  3237                           
  3238                           ; 4 bytes @ 0xA
  3239  00AA                     	ds	4
  3240  00AE                     main@i:	
  3241                           
  3242                           ; 2 bytes @ 0xE
  3243  00AE                     	ds	2
  3244  00B0                     main@finalVolt:	
  3245                           
  3246                           ; 4 bytes @ 0x10
  3247  00B0                     	ds	4
  3248  00B4                     main@desiredVolt:	
  3249                           
  3250                           ; 4 bytes @ 0x14
  3251  00B4                     	ds	4
  3252  00B8                     main@duty:	
  3253                           
  3254                           ; 2 bytes @ 0x18
  3255  00B8                     	ds	2
  3256                           
  3257                           	psect	cstackCOMMON
  3258  0070                     __pcstackCOMMON:	
  3259  0070                     ?_isdigit:	
  3260  0070                     ?___fleq:	
  3261                           ; 1 bit 
  3262                           
  3263  0070                     ?___flge:	
  3264                           ; 1 bit 
  3265                           
  3266  0070                     ?_PIN_MANAGER_Initialize:	
  3267                           ; 1 bit 
  3268                           
  3269  0070                     ??_PIN_MANAGER_Initialize:	
  3270                           ; 1 bytes @ 0x0
  3271                           
  3272  0070                     ?_OSCILLATOR_Initialize:	
  3273                           ; 1 bytes @ 0x0
  3274                           
  3275  0070                     ??_OSCILLATOR_Initialize:	
  3276                           ; 1 bytes @ 0x0
  3277                           
  3278  0070                     ?_WDT_Initialize:	
  3279                           ; 1 bytes @ 0x0
  3280                           
  3281  0070                     ??_WDT_Initialize:	
  3282                           ; 1 bytes @ 0x0
  3283                           
  3284  0070                     ?_TMR6_Initialize:	
  3285                           ; 1 bytes @ 0x0
  3286                           
  3287  0070                     ??_TMR6_Initialize:	
  3288                           ; 1 bytes @ 0x0
  3289                           
  3290  0070                     ?_PWM3_Initialize:	
  3291                           ; 1 bytes @ 0x0
  3292                           
  3293  0070                     ??_PWM3_Initialize:	
  3294                           ; 1 bytes @ 0x0
  3295                           
  3296  0070                     ?_I2C_Init:	
  3297                           ; 1 bytes @ 0x0
  3298                           
  3299  0070                     ??_I2C_Init:	
  3300                           ; 1 bytes @ 0x0
  3301                           
  3302  0070                     ?_OLED_Init:	
  3303                           ; 1 bytes @ 0x0
  3304                           
  3305  0070                     ?_OLED_Clear:	
  3306                           ; 1 bytes @ 0x0
  3307                           
  3308  0070                     ?_Send_I2C_StartBit:	
  3309                           ; 1 bytes @ 0x0
  3310                           
  3311  0070                     ??_Send_I2C_StartBit:	
  3312                           ; 1 bytes @ 0x0
  3313                           
  3314  0070                     ?_Send_I2C_Data:	
  3315                           ; 1 bytes @ 0x0
  3316                           
  3317  0070                     ?_Send_I2C_StopBit:	
  3318                           ; 1 bytes @ 0x0
  3319                           
  3320  0070                     ??_Send_I2C_StopBit:	
  3321                           ; 1 bytes @ 0x0
  3322                           
  3323  0070                     ?_memmove:	
  3324                           ; 1 bytes @ 0x0
  3325                           
  3326  0070                     ??_isdigit:	
  3327                           ; 1 bytes @ 0x0
  3328                           
  3329  0070                     ?_SYSTEM_Initialize:	
  3330                           ; 1 bytes @ 0x0
  3331                           
  3332  0070                     ??_SYSTEM_Initialize:	
  3333                           ; 1 bytes @ 0x0
  3334                           
  3335  0070                     ?_PWM3_LoadDutyValue:	
  3336                           ; 1 bytes @ 0x0
  3337                           
  3338  0070                     ?_main:	
  3339                           ; 1 bytes @ 0x0
  3340                           
  3341  0070                     ?_OLED_Command:	
  3342                           ; 1 bytes @ 0x0
  3343                           
  3344  0070                     ?_OLED_PutChar:	
  3345                           ; 1 bytes @ 0x0
  3346                           
  3347  0070                     ?__Umul8_16:	
  3348                           ; 1 bytes @ 0x0
  3349                           
  3350  0070                     ?___wmul:	
  3351                           ; 2 bytes @ 0x0
  3352                           
  3353  0070                     ?___lldiv:	
  3354                           ; 2 bytes @ 0x0
  3355                           
  3356  0070                     ?___flneg:	
  3357                           ; 4 bytes @ 0x0
  3358                           
  3359  0070                     ?___fladd:	
  3360                           ; 4 bytes @ 0x0
  3361                           
  3362  0070                     _isdigit$1072:	
  3363                           ; 4 bytes @ 0x0
  3364                           
  3365  0070                     __Umul8_16@multiplicand:	
  3366                           ; 1 bytes @ 0x0
  3367                           
  3368  0070                     PWM3_LoadDutyValue@dutyValue:	
  3369                           ; 1 bytes @ 0x0
  3370                           
  3371  0070                     Send_I2C_Data@databyte:	
  3372                           ; 2 bytes @ 0x0
  3373                           
  3374  0070                     ___wmul@multiplier:	
  3375                           ; 2 bytes @ 0x0
  3376                           
  3377  0070                     memmove@s1:	
  3378                           ; 2 bytes @ 0x0
  3379                           
  3380  0070                     ___lldiv@divisor:	
  3381                           ; 2 bytes @ 0x0
  3382                           
  3383  0070                     ___fleq@ff1:	
  3384                           ; 4 bytes @ 0x0
  3385                           
  3386  0070                     ___flge@ff1:	
  3387                           ; 4 bytes @ 0x0
  3388                           
  3389  0070                     ___flneg@f1:	
  3390                           ; 4 bytes @ 0x0
  3391                           
  3392  0070                     ___fladd@b:	
  3393                           ; 4 bytes @ 0x0
  3394                           
  3395                           
  3396                           ; 4 bytes @ 0x0
  3397  0070                     	ds	1
  3398  0071                     isdigit@c:	
  3399                           
  3400                           ; 1 bytes @ 0x1
  3401  0071                     	ds	1
  3402  0072                     ??_Send_I2C_Data:	
  3403  0072                     ??__Umul8_16:	
  3404                           ; 1 bytes @ 0x2
  3405                           
  3406  0072                     ??_PWM3_LoadDutyValue:	
  3407                           ; 1 bytes @ 0x2
  3408                           
  3409  0072                     ??_OLED_Command:	
  3410                           ; 1 bytes @ 0x2
  3411                           
  3412  0072                     ___wmul@multiplicand:	
  3413                           ; 1 bytes @ 0x2
  3414                           
  3415  0072                     memmove@n:	
  3416                           ; 2 bytes @ 0x2
  3417                           
  3418                           
  3419                           ; 2 bytes @ 0x2
  3420  0072                     	ds	2
  3421  0074                     ??_memmove:	
  3422  0074                     ??___wmul:	
  3423                           ; 1 bytes @ 0x4
  3424                           
  3425  0074                     ??___flneg:	
  3426                           ; 1 bytes @ 0x4
  3427                           
  3428  0074                     OLED_Command@temp:	
  3429                           ; 1 bytes @ 0x4
  3430                           
  3431  0074                     ___wmul@product:	
  3432                           ; 1 bytes @ 0x4
  3433                           
  3434  0074                     __Umul8_16@product:	
  3435                           ; 2 bytes @ 0x4
  3436                           
  3437  0074                     ___lldiv@dividend:	
  3438                           ; 2 bytes @ 0x4
  3439                           
  3440  0074                     ___fleq@ff2:	
  3441                           ; 4 bytes @ 0x4
  3442                           
  3443  0074                     ___flge@ff2:	
  3444                           ; 4 bytes @ 0x4
  3445                           
  3446  0074                     ___fladd@a:	
  3447                           ; 4 bytes @ 0x4
  3448                           
  3449                           
  3450                           ; 4 bytes @ 0x4
  3451  0074                     	ds	1
  3452  0075                     ??_OLED_Init:	
  3453  0075                     ?_OLED_YX:	
  3454                           ; 1 bytes @ 0x5
  3455                           
  3456  0075                     OLED_YX@Column:	
  3457                           ; 1 bytes @ 0x5
  3458                           
  3459                           
  3460                           ; 1 bytes @ 0x5
  3461  0075                     	ds	1
  3462  0076                     ??_OLED_YX:	
  3463  0076                     __Umul8_16@word_mpld:	
  3464                           ; 1 bytes @ 0x6
  3465                           
  3466                           
  3467                           ; 2 bytes @ 0x6
  3468  0076                     	ds	2
  3469  0078                     ??___lldiv:	
  3470  0078                     ??___fleq:	
  3471                           ; 1 bytes @ 0x8
  3472                           
  3473  0078                     ??___flge:	
  3474                           ; 1 bytes @ 0x8
  3475                           
  3476  0078                     ___fladd@signs:	
  3477                           ; 1 bytes @ 0x8
  3478                           
  3479  0078                     memmove@d1:	
  3480                           ; 1 bytes @ 0x8
  3481                           
  3482  0078                     __Umul8_16@multiplier:	
  3483                           ; 1 bytes @ 0x8
  3484                           
  3485                           
  3486                           ; 1 bytes @ 0x8
  3487  0078                     	ds	1
  3488  0079                     ?___fltol:	
  3489  0079                     OLED_YX@Row:	
  3490                           ; 4 bytes @ 0x9
  3491                           
  3492  0079                     ___fladd@aexp:	
  3493                           ; 1 bytes @ 0x9
  3494                           
  3495  0079                     memmove@s:	
  3496                           ; 1 bytes @ 0x9
  3497                           
  3498  0079                     ___lldiv@quotient:	
  3499                           ; 2 bytes @ 0x9
  3500                           
  3501  0079                     ___fltol@f1:	
  3502                           ; 4 bytes @ 0x9
  3503                           
  3504                           
  3505                           ; 4 bytes @ 0x9
  3506  0079                     	ds	1
  3507  007A                     ___fladd@bexp:	
  3508                           
  3509                           ; 1 bytes @ 0xA
  3510  007A                     	ds	1
  3511  007B                     ___fladd@grs:	
  3512  007B                     memmove@d:	
  3513                           ; 1 bytes @ 0xB
  3514                           
  3515                           
  3516                           ; 1 bytes @ 0xB
  3517  007B                     	ds	1
  3518  007C                     ??_OLED_Clear:	
  3519  007C                     ?_OLED_Write_String:	
  3520                           ; 1 bytes @ 0xC
  3521                           
  3522  007C                     ??_frexp:	
  3523                           ; 1 bytes @ 0xC
  3524                           
  3525  007C                     OLED_Write_String@s:	
  3526                           ; 1 bytes @ 0xC
  3527                           
  3528                           
  3529                           ; 2 bytes @ 0xC
  3530  007C                     	ds	1
  3531  007D                     ??___flsub:	
  3532  007D                     ___lldiv@counter:	
  3533                           ; 1 bytes @ 0xD
  3534                           
  3535                           
  3536                           ; 1 bytes @ 0xD
  3537  007D                     	ds	1
  3538  007E                     ??_roundf:	
  3539                           
  3540                           	psect	cstackBANK0
  3541  0020                     __pcstackBANK0:	
  3542                           ; 1 bytes @ 0xE
  3543                           
  3544  0020                     ??_OLED_PutChar:	
  3545  0020                     ??___fltol:	
  3546                           ; 1 bytes @ 0x0
  3547                           
  3548  0020                     ??___fladd:	
  3549                           ; 1 bytes @ 0x0
  3550                           
  3551  0020                     ?_frexp:	
  3552                           ; 1 bytes @ 0x0
  3553                           
  3554  0020                     ?___llmod:	
  3555                           ; 4 bytes @ 0x0
  3556                           
  3557  0020                     ___llmod@divisor:	
  3558                           ; 4 bytes @ 0x0
  3559                           
  3560  0020                     frexp@value:	
  3561                           ; 4 bytes @ 0x0
  3562                           
  3563                           
  3564                           ; 4 bytes @ 0x0
  3565  0020                     	ds	4
  3566  0024                     frexp@eptr:	
  3567  0024                     ___llmod@dividend:	
  3568                           ; 1 bytes @ 0x4
  3569                           
  3570  0024                     OLED_PutChar@bytes:	
  3571                           ; 4 bytes @ 0x4
  3572                           
  3573                           
  3574                           ; 9 bytes @ 0x4
  3575  0024                     	ds	1
  3576  0025                     ___fltol@sign1:	
  3577                           
  3578                           ; 1 bytes @ 0x5
  3579  0025                     	ds	1
  3580  0026                     ___fltol@exp1:	
  3581                           
  3582                           ; 1 bytes @ 0x6
  3583  0026                     	ds	1
  3584  0027                     ?___xxtofl:	
  3585  0027                     ___xxtofl@val:	
  3586                           ; 4 bytes @ 0x7
  3587                           
  3588                           
  3589                           ; 4 bytes @ 0x7
  3590  0027                     	ds	1
  3591  0028                     ??___llmod:	
  3592                           
  3593                           ; 1 bytes @ 0x8
  3594  0028                     	ds	1
  3595  0029                     ___llmod@counter:	
  3596                           
  3597                           ; 1 bytes @ 0x9
  3598  0029                     	ds	1
  3599  002A                     ?_sprintf:	
  3600  002A                     sprintf@f:	
  3601                           ; 2 bytes @ 0xA
  3602                           
  3603                           
  3604                           ; 2 bytes @ 0xA
  3605  002A                     	ds	1
  3606  002B                     ??___xxtofl:	
  3607                           
  3608                           ; 1 bytes @ 0xB
  3609  002B                     	ds	2
  3610  002D                     OLED_PutChar@base:	
  3611                           
  3612                           ; 2 bytes @ 0xD
  3613  002D                     	ds	2
  3614  002F                     ___xxtofl@sign:	
  3615  002F                     OLED_PutChar@i:	
  3616                           ; 1 bytes @ 0xF
  3617                           
  3618                           
  3619                           ; 2 bytes @ 0xF
  3620  002F                     	ds	1
  3621  0030                     ___xxtofl@exp:	
  3622                           
  3623                           ; 1 bytes @ 0x10
  3624  0030                     	ds	1
  3625  0031                     OLED_PutChar@ch:	
  3626  0031                     ___xxtofl@arg:	
  3627                           ; 1 bytes @ 0x11
  3628                           
  3629                           
  3630                           ; 4 bytes @ 0x11
  3631  0031                     	ds	1
  3632  0032                     ??_OLED_Write_String:	
  3633  0032                     OLED_Clear@row:	
  3634                           ; 1 bytes @ 0x12
  3635                           
  3636                           
  3637                           ; 2 bytes @ 0x12
  3638  0032                     	ds	2
  3639  0034                     ??_sprintf:	
  3640  0034                     OLED_Clear@col:	
  3641                           ; 1 bytes @ 0x14
  3642                           
  3643                           
  3644                           ; 2 bytes @ 0x14
  3645  0034                     	ds	1
  3646  0035                     ?_floor:	
  3647  0035                     ?___flsub:	
  3648                           ; 4 bytes @ 0x15
  3649                           
  3650  0035                     ?___flmul:	
  3651                           ; 4 bytes @ 0x15
  3652                           
  3653  0035                     ___flsub@a:	
  3654                           ; 4 bytes @ 0x15
  3655                           
  3656  0035                     ___flmul@b:	
  3657                           ; 4 bytes @ 0x15
  3658                           
  3659  0035                     floor@x:	
  3660                           ; 4 bytes @ 0x15
  3661                           
  3662                           
  3663                           ; 4 bytes @ 0x15
  3664  0035                     	ds	4
  3665  0039                     ??_floor:	
  3666  0039                     ___flsub@b:	
  3667                           ; 1 bytes @ 0x19
  3668                           
  3669  0039                     ___flmul@a:	
  3670                           ; 4 bytes @ 0x19
  3671                           
  3672                           
  3673                           ; 4 bytes @ 0x19
  3674  0039                     	ds	1
  3675  003A                     sprintf@flag:	
  3676  003A                     floor@i:	
  3677                           ; 1 bytes @ 0x1A
  3678                           
  3679                           
  3680                           ; 4 bytes @ 0x1A
  3681  003A                     	ds	1
  3682  003B                     sprintf@ap:	
  3683                           
  3684                           ; 1 bytes @ 0x1B
  3685  003B                     	ds	1
  3686  003C                     sprintf@val:	
  3687                           
  3688                           ; 4 bytes @ 0x1C
  3689  003C                     	ds	1
  3690  003D                     ??___flmul:	
  3691                           
  3692                           ; 1 bytes @ 0x1D
  3693  003D                     	ds	1
  3694  003E                     floor@expon:	
  3695                           
  3696                           ; 2 bytes @ 0x1E
  3697  003E                     	ds	2
  3698  0040                     ?_roundf:	
  3699  0040                     sprintf@sp:	
  3700                           ; 4 bytes @ 0x20
  3701                           
  3702  0040                     roundf@x:	
  3703                           ; 1 bytes @ 0x20
  3704                           
  3705                           
  3706                           ; 4 bytes @ 0x20
  3707  0040                     	ds	1
  3708  0041                     sprintf@width:	
  3709                           
  3710                           ; 2 bytes @ 0x21
  3711  0041                     	ds	1
  3712  0042                     ___flmul@sign:	
  3713                           
  3714                           ; 1 bytes @ 0x22
  3715  0042                     	ds	1
  3716  0043                     sprintf@prec:	
  3717  0043                     ___flmul@grs:	
  3718                           ; 2 bytes @ 0x23
  3719                           
  3720                           
  3721                           ; 4 bytes @ 0x23
  3722  0043                     	ds	1
  3723  0044                     _roundf$1268:	
  3724                           
  3725                           ; 4 bytes @ 0x24
  3726  0044                     	ds	1
  3727  0045                     sprintf@c:	
  3728                           
  3729                           ; 1 bytes @ 0x25
  3730  0045                     	ds	2
  3731  0047                     ___flmul@aexp:	
  3732                           
  3733                           ; 1 bytes @ 0x27
  3734  0047                     	ds	1
  3735  0048                     ___flmul@bexp:	
  3736                           
  3737                           ; 1 bytes @ 0x28
  3738  0048                     	ds	1
  3739  0049                     ___flmul@prod:	
  3740                           
  3741                           ; 4 bytes @ 0x29
  3742  0049                     	ds	4
  3743  004D                     ___flmul@temp:	
  3744                           
  3745                           ; 2 bytes @ 0x2D
  3746  004D                     	ds	2
  3747  004F                     ?_ftoa:	
  3748  004F                     ftoa@f:	
  3749                           ; 1 bytes @ 0x2F
  3750                           
  3751                           
  3752                           ; 4 bytes @ 0x2F
  3753  004F                     	ds	4
  3754  0053                     ftoa@status:	
  3755                           
  3756                           ; 1 bytes @ 0x33
  3757  0053                     	ds	1
  3758  0054                     ??_ftoa:	
  3759                           
  3760                           ; 1 bytes @ 0x34
  3761  0054                     	ds	1
  3762  0055                     ftoa@rem:	
  3763                           
  3764                           ; 4 bytes @ 0x35
  3765  0055                     	ds	4
  3766  0059                     ftoa@l:	
  3767                           
  3768                           ; 4 bytes @ 0x39
  3769  0059                     	ds	4
  3770  005D                     ftoa@cp:	
  3771                           
  3772                           ; 1 bytes @ 0x3D
  3773  005D                     	ds	1
  3774  005E                     ?_OLED_Write_Float:	
  3775  005E                     OLED_Write_Float@f:	
  3776                           ; 1 bytes @ 0x3E
  3777                           
  3778                           
  3779                           ; 4 bytes @ 0x3E
  3780  005E                     	ds	4
  3781  0062                     ??_OLED_Write_Float:	
  3782                           
  3783                           ; 1 bytes @ 0x42
  3784  0062                     	ds	2
  3785  0064                     OLED_Write_Float@status:	
  3786                           
  3787                           ; 2 bytes @ 0x44
  3788  0064                     	ds	2
  3789  0066                     OLED_Write_Float@buf11:	
  3790                           
  3791                           ; 1 bytes @ 0x46
  3792  0066                     	ds	1
  3793  0067                     ??_main:	
  3794                           
  3795                           ; 1 bytes @ 0x47
  3796  0067                     	ds	2
  3797                           
  3798                           	psect	maintext
  3799  007C                     __pmaintext:	
  3800 ;;
  3801 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3802 ;;
  3803 ;; *************** function _main *****************
  3804 ;; Defined at:
  3805 ;;		line 59 in file "main.c"
  3806 ;; Parameters:    Size  Location     Type
  3807 ;;		None
  3808 ;; Auto vars:     Size  Location     Type
  3809 ;;  desiredVolt     4   20[BANK1 ] float 
  3810 ;;  finalVolt       4   16[BANK1 ] float 
  3811 ;;  outVolt         4   10[BANK1 ] float 
  3812 ;;  dec             4    0        float 
  3813 ;;  duty            2   24[BANK1 ] unsigned int 
  3814 ;;  i               2   14[BANK1 ] int 
  3815 ;;  minDuty         2    0        unsigned int 
  3816 ;;  result          2    6[BANK1 ] unsigned int 
  3817 ;;  count           2    0        int 
  3818 ;;  convertedVal    2    0        unsigned int 
  3819 ;; Return value:  Size  Location     Type
  3820 ;;                  1    wreg      void 
  3821 ;; Registers used:
  3822 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3823 ;; Tracked objects:
  3824 ;;		On entry : B1F/0
  3825 ;;		On exit  : 0/0
  3826 ;;		Unchanged: 0/0
  3827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3829 ;;      Locals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3830 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3831 ;;      Totals:         0       2      26       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3832 ;;Total ram usage:       28 bytes
  3833 ;; Hardware stack levels required when called:    4
  3834 ;; This function calls:
  3835 ;;		_I2C_Init
  3836 ;;		_OLED_Clear
  3837 ;;		_OLED_Init
  3838 ;;		_OLED_Write_Float
  3839 ;;		_OLED_Write_String
  3840 ;;		_OLED_YX
  3841 ;;		_PWM3_LoadDutyValue
  3842 ;;		_SYSTEM_Initialize
  3843 ;;		___fleq
  3844 ;;		___flge
  3845 ;;		___flmul
  3846 ;;		___xxtofl
  3847 ;;		_roundf
  3848 ;; This function is called by:
  3849 ;;		Startup code after reset
  3850 ;; This function uses a non-reentrant model
  3851 ;;
  3852                           
  3853                           
  3854                           ;psect for function _main
  3855  007C                     _main:	
  3856                           
  3857                           ;main.c: 62: SYSTEM_Initialize();
  3858                           
  3859                           ;incstack = 0
  3860                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3861  007C  3180  2004  3180   	fcall	_SYSTEM_Initialize
  3862                           
  3863                           ;main.c: 80: ANSELCbits.ANSC4 = 0;
  3864  007F  0023               	movlb	3	; select bank3
  3865  0080  120E               	bcf	14,4	;volatile
  3866                           
  3867                           ;main.c: 81: ANSELCbits.ANSC5 = 0;
  3868  0081  128E               	bcf	14,5	;volatile
  3869                           
  3870                           ;main.c: 83: TRISCbits.TRISC4 = 1;
  3871  0082  0021               	movlb	1	; select bank1
  3872  0083  160E               	bsf	14,4	;volatile
  3873                           
  3874                           ;main.c: 84: TRISCbits.TRISC5 = 1;
  3875  0084  168E               	bsf	14,5	;volatile
  3876                           
  3877                           ;main.c: 86: PPSLOCK = 0x55;
  3878  0085  3055               	movlw	85
  3879  0086  003C               	movlb	28	; select bank28
  3880  0087  008F               	movwf	15	;volsfr
  3881                           
  3882                           ;main.c: 87: PPSLOCK = 0xAA;
  3883  0088  30AA               	movlw	170
  3884  0089  008F               	movwf	15	;volsfr
  3885                           
  3886                           ;main.c: 88: PPSLOCKbits.PPSLOCKED = 0x00;
  3887  008A  100F               	bcf	15,0	;volsfr
  3888                           
  3889                           ;main.c: 90: RC4PPSbits.RC4PPS = 0x0011;
  3890  008B  003D               	movlb	29	; select bank29
  3891  008C  0824               	movf	36,w	;volatile
  3892  008D  39E0               	andlw	-32
  3893  008E  3811               	iorlw	17
  3894  008F  00A4               	movwf	36	;volatile
  3895                           
  3896                           ;main.c: 91: SSPDATPPSbits.SSPDATPPS = 0x0014;
  3897  0090  003C               	movlb	28	; select bank28
  3898  0091  0821               	movf	33,w	;volatile
  3899  0092  39E0               	andlw	-32
  3900  0093  3814               	iorlw	20
  3901  0094  00A1               	movwf	33	;volatile
  3902                           
  3903                           ;main.c: 92: SSPCLKPPSbits.SSPCLKPPS = 0x0015;
  3904  0095  0820               	movf	32,w	;volatile
  3905  0096  39E0               	andlw	-32
  3906  0097  3815               	iorlw	21
  3907  0098  00A0               	movwf	32	;volatile
  3908                           
  3909                           ;main.c: 93: RC5PPSbits.RC5PPS = 0x0010;
  3910  0099  003D               	movlb	29	; select bank29
  3911  009A  0825               	movf	37,w	;volatile
  3912  009B  39E0               	andlw	-32
  3913  009C  3810               	iorlw	16
  3914  009D  00A5               	movwf	37	;volatile
  3915                           
  3916                           ;main.c: 95: PPSLOCK = 0x55;
  3917  009E  3055               	movlw	85
  3918  009F  003C               	movlb	28	; select bank28
  3919  00A0  008F               	movwf	15	;volsfr
  3920                           
  3921                           ;main.c: 96: PPSLOCK = 0xAA;
  3922  00A1  30AA               	movlw	170
  3923  00A2  008F               	movwf	15	;volsfr
  3924                           
  3925                           ;main.c: 97: PPSLOCKbits.PPSLOCKED = 0x01;
  3926  00A3  140F               	bsf	15,0	;volsfr
  3927                           
  3928                           ;main.c: 100: TRISAbits.TRISA0 = 1;
  3929  00A4  0021               	movlb	1	; select bank1
  3930  00A5  140C               	bsf	12,0	;volatile
  3931                           
  3932                           ;main.c: 103: ANSELAbits.ANSA0 = 1;
  3933  00A6  0023               	movlb	3	; select bank3
  3934  00A7  140C               	bsf	12,0	;volatile
  3935                           
  3936                           ;main.c: 110: ADCON1bits.ADCS = 0b010;
  3937  00A8  0021               	movlb	1	; select bank1
  3938  00A9  081E               	movf	30,w	;volatile
  3939  00AA  398F               	andlw	-113
  3940  00AB  3820               	iorlw	32
  3941  00AC  009E               	movwf	30	;volatile
  3942                           
  3943                           ;main.c: 113: ADCON1bits.ADFM = 1;
  3944  00AD  179E               	bsf	30,7	;volatile
  3945                           
  3946                           ;main.c: 116: ADCON1bits.ADNREF = 0;
  3947  00AE  111E               	bcf	30,2	;volatile
  3948                           
  3949                           ;main.c: 119: ADCON1bits.ADPREF = 0b00;
  3950  00AF  30FC               	movlw	-4
  3951  00B0  059E               	andwf	30,f	;volatile
  3952                           
  3953                           ;main.c: 122: ADCON0bits.CHS = 0b00000;
  3954  00B1  3083               	movlw	-125
  3955  00B2  059D               	andwf	29,f	;volatile
  3956                           
  3957                           ;main.c: 125: ADRESL = 0;
  3958  00B3  019B               	clrf	27	;volatile
  3959                           
  3960                           ;main.c: 126: ADRESH = 0;
  3961  00B4  019C               	clrf	28	;volatile
  3962                           
  3963                           ;main.c: 130: I2C_Init();
  3964  00B5  3196  26A3  3180   	fcall	_I2C_Init
  3965                           
  3966                           ;main.c: 132: _delay((unsigned long)((100)*(16000000/4000.0)));
  3967  00B8  3003               	movlw	3
  3968  00B9  0020               	movlb	0	; select bank0
  3969  00BA  00E8               	movwf	??_main+1
  3970  00BB  3008               	movlw	8
  3971  00BC  00E7               	movwf	??_main
  3972  00BD  3077               	movlw	119
  3973  00BE                     u3447:	
  3974  00BE  0B89               	decfsz	9,f
  3975  00BF  28BE               	goto	u3447
  3976  00C0  0BE7               	decfsz	??_main,f
  3977  00C1  28BE               	goto	u3447
  3978  00C2  0BE8               	decfsz	??_main+1,f
  3979  00C3  28BE               	goto	u3447
  3980                           
  3981                           ;main.c: 135: OLED_Init();
  3982  00C4  318C  2467  3180   	fcall	_OLED_Init
  3983                           
  3984                           ;main.c: 138: OLED_Clear();
  3985  00C7  3197  279E  3180   	fcall	_OLED_Clear
  3986                           
  3987                           ;main.c: 144: uint16_t convertedValue;;main.c: 145: uint16_t result;;main.c: 147: float 
      +                          outVolt;;main.c: 148: float desiredVolt = 14.2;
  3988  00CA  3041               	movlw	65
  3989  00CB  0021               	movlb	1	; select bank1
  3990  00CC  00B7               	movwf	(main@desiredVolt+3)^(0+128)
  3991  00CD  3063               	movlw	99
  3992  00CE  00B6               	movwf	(main@desiredVolt+2)^(0+128)
  3993  00CF  3033               	movlw	51
  3994  00D0  00B5               	movwf	(main@desiredVolt+1)^(0+128)
  3995  00D1  3033               	movlw	51
  3996  00D2  00B4               	movwf	main@desiredVolt^(0+128)
  3997                           
  3998                           ;main.c: 149: float finalVolt;;main.c: 152: ADCON0bits.ADON = 1;
  3999  00D3  141D               	bsf	29,0	;volatile
  4000                           
  4001                           ;main.c: 154: uint16_t duty = 950;
  4002  00D4  30B6               	movlw	182
  4003  00D5  00B8               	movwf	main@duty^(0+128)
  4004  00D6  3003               	movlw	3
  4005  00D7  00B9               	movwf	(main@duty^(0+128)+1)
  4006                           
  4007                           ;main.c: 158: PWM3_LoadDutyValue(duty);
  4008  00D8  30B6               	movlw	182
  4009  00D9  00F0               	movwf	PWM3_LoadDutyValue@dutyValue
  4010  00DA  3003               	movlw	3
  4011  00DB  00F1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  4012  00DC  3196  26C7  3180   	fcall	_PWM3_LoadDutyValue
  4013  00DF                     l3065:	
  4014                           
  4015                           ;main.c: 164: {;main.c: 167: for (i = 0; i<= 10; i++)
  4016  00DF  0021               	movlb	1	; select bank1
  4017  00E0  01AE               	clrf	main@i^(0+128)
  4018  00E1  01AF               	clrf	(main@i+1)^(0+128)
  4019  00E2                     l3071:	
  4020                           
  4021                           ;main.c: 168: {;main.c: 170: _delay((unsigned long)((10)*(16000000/4000000.0)));
  4022  00E2  300D               	movlw	13
  4023  00E3                     u3457:	
  4024  00E3  0B89               	decfsz	9,f
  4025  00E4  28E3               	goto	u3457
  4026  00E5  0000               	nop
  4027                           
  4028                           ;main.c: 171: ADCON0bits.GO = 1;
  4029  00E6  0021               	movlb	1	; select bank1
  4030  00E7  149D               	bsf	29,1	;volatile
  4031  00E8                     l202:	
  4032                           ;main.c: 172: while (ADCON0bits.GO_nDONE);
  4033                           
  4034  00E8  189D               	btfsc	29,1	;volatile
  4035  00E9  28E8               	goto	l202
  4036                           
  4037                           ;main.c: 175: result = ((ADRESH<<8)+ADRESL);
  4038  00EA  081C               	movf	28,w	;volatile
  4039  00EB  00A7               	movwf	(main@result+1)^(0+128)
  4040  00EC  081B               	movf	27,w	;volatile
  4041  00ED  00A6               	movwf	main@result^(0+128)
  4042                           
  4043                           ;main.c: 177: outVolt = (float)result * 0.0050;
  4044  00EE  303B               	movlw	59
  4045  00EF  0020               	movlb	0	; select bank0
  4046  00F0  00B8               	movwf	___flmul@b+3
  4047  00F1  30A3               	movlw	163
  4048  00F2  00B7               	movwf	___flmul@b+2
  4049  00F3  30D7               	movlw	215
  4050  00F4  00B6               	movwf	___flmul@b+1
  4051  00F5  300A               	movlw	10
  4052  00F6  00B5               	movwf	___flmul@b
  4053  00F7  0021               	movlb	1	; select bank1
  4054  00F8  0826               	movf	main@result^(0+128),w
  4055  00F9  0020               	movlb	0	; select bank0
  4056  00FA  00A7               	movwf	___xxtofl@val
  4057  00FB  0021               	movlb	1	; select bank1
  4058  00FC  0827               	movf	(main@result+1)^(0+128),w
  4059  00FD  0020               	movlb	0	; select bank0
  4060  00FE  00A8               	movwf	___xxtofl@val+1
  4061  00FF  01A9               	clrf	___xxtofl@val+2
  4062  0100  01AA               	clrf	___xxtofl@val+3
  4063  0101  3000               	movlw	0
  4064  0102  318E  2611  3180   	fcall	___xxtofl
  4065  0105  0020               	movlb	0	; select bank0
  4066  0106  082A               	movf	?___xxtofl+3,w
  4067  0107  00BC               	movwf	___flmul@a+3
  4068  0108  0829               	movf	?___xxtofl+2,w
  4069  0109  00BB               	movwf	___flmul@a+2
  4070  010A  0828               	movf	?___xxtofl+1,w
  4071  010B  00BA               	movwf	___flmul@a+1
  4072  010C  0827               	movf	?___xxtofl,w
  4073  010D  00B9               	movwf	___flmul@a
  4074  010E  3185  25C7  3180   	fcall	___flmul
  4075  0111  0020               	movlb	0	; select bank0
  4076  0112  0838               	movf	?___flmul+3,w
  4077  0113  0021               	movlb	1	; select bank1
  4078  0114  00AD               	movwf	(main@outVolt+3)^(0+128)
  4079  0115  0020               	movlb	0	; select bank0
  4080  0116  0837               	movf	?___flmul+2,w
  4081  0117  0021               	movlb	1	; select bank1
  4082  0118  00AC               	movwf	(main@outVolt+2)^(0+128)
  4083  0119  0020               	movlb	0	; select bank0
  4084  011A  0836               	movf	?___flmul+1,w
  4085  011B  0021               	movlb	1	; select bank1
  4086  011C  00AB               	movwf	(main@outVolt+1)^(0+128)
  4087  011D  0020               	movlb	0	; select bank0
  4088  011E  0835               	movf	?___flmul,w
  4089  011F  0021               	movlb	1	; select bank1
  4090  0120  00AA               	movwf	main@outVolt^(0+128)
  4091                           
  4092                           ;main.c: 178: outVolt *= 6;
  4093  0121  3040               	movlw	64
  4094  0122  0020               	movlb	0	; select bank0
  4095  0123  00B8               	movwf	___flmul@b+3
  4096  0124  30C0               	movlw	192
  4097  0125  00B7               	movwf	___flmul@b+2
  4098  0126  3000               	movlw	0
  4099  0127  00B6               	movwf	___flmul@b+1
  4100  0128  3000               	movlw	0
  4101  0129  00B5               	movwf	___flmul@b
  4102  012A  0021               	movlb	1	; select bank1
  4103  012B  082D               	movf	(main@outVolt+3)^(0+128),w
  4104  012C  0020               	movlb	0	; select bank0
  4105  012D  00BC               	movwf	___flmul@a+3
  4106  012E  0021               	movlb	1	; select bank1
  4107  012F  082C               	movf	(main@outVolt+2)^(0+128),w
  4108  0130  0020               	movlb	0	; select bank0
  4109  0131  00BB               	movwf	___flmul@a+2
  4110  0132  0021               	movlb	1	; select bank1
  4111  0133  082B               	movf	(main@outVolt+1)^(0+128),w
  4112  0134  0020               	movlb	0	; select bank0
  4113  0135  00BA               	movwf	___flmul@a+1
  4114  0136  0021               	movlb	1	; select bank1
  4115  0137  082A               	movf	main@outVolt^(0+128),w
  4116  0138  0020               	movlb	0	; select bank0
  4117  0139  00B9               	movwf	___flmul@a
  4118  013A  3185  25C7  3180   	fcall	___flmul
  4119  013D  0020               	movlb	0	; select bank0
  4120  013E  0838               	movf	?___flmul+3,w
  4121  013F  0021               	movlb	1	; select bank1
  4122  0140  00AD               	movwf	(main@outVolt+3)^(0+128)
  4123  0141  0020               	movlb	0	; select bank0
  4124  0142  0837               	movf	?___flmul+2,w
  4125  0143  0021               	movlb	1	; select bank1
  4126  0144  00AC               	movwf	(main@outVolt+2)^(0+128)
  4127  0145  0020               	movlb	0	; select bank0
  4128  0146  0836               	movf	?___flmul+1,w
  4129  0147  0021               	movlb	1	; select bank1
  4130  0148  00AB               	movwf	(main@outVolt+1)^(0+128)
  4131  0149  0020               	movlb	0	; select bank0
  4132  014A  0835               	movf	?___flmul,w
  4133  014B  0021               	movlb	1	; select bank1
  4134  014C  00AA               	movwf	main@outVolt^(0+128)
  4135                           
  4136                           ;main.c: 179: finalVolt = roundf(outVolt);
  4137  014D  082D               	movf	(main@outVolt+3)^(0+128),w
  4138  014E  0020               	movlb	0	; select bank0
  4139  014F  00C3               	movwf	roundf@x+3
  4140  0150  0021               	movlb	1	; select bank1
  4141  0151  082C               	movf	(main@outVolt+2)^(0+128),w
  4142  0152  0020               	movlb	0	; select bank0
  4143  0153  00C2               	movwf	roundf@x+2
  4144  0154  0021               	movlb	1	; select bank1
  4145  0155  082B               	movf	(main@outVolt+1)^(0+128),w
  4146  0156  0020               	movlb	0	; select bank0
  4147  0157  00C1               	movwf	roundf@x+1
  4148  0158  0021               	movlb	1	; select bank1
  4149  0159  082A               	movf	main@outVolt^(0+128),w
  4150  015A  0020               	movlb	0	; select bank0
  4151  015B  00C0               	movwf	roundf@x
  4152  015C  318B  2311  3180   	fcall	_roundf
  4153  015F  0020               	movlb	0	; select bank0
  4154  0160  0843               	movf	?_roundf+3,w
  4155  0161  0021               	movlb	1	; select bank1
  4156  0162  00B3               	movwf	(main@finalVolt+3)^(0+128)
  4157  0163  0020               	movlb	0	; select bank0
  4158  0164  0842               	movf	?_roundf+2,w
  4159  0165  0021               	movlb	1	; select bank1
  4160  0166  00B2               	movwf	(main@finalVolt+2)^(0+128)
  4161  0167  0020               	movlb	0	; select bank0
  4162  0168  0841               	movf	?_roundf+1,w
  4163  0169  0021               	movlb	1	; select bank1
  4164  016A  00B1               	movwf	(main@finalVolt+1)^(0+128)
  4165  016B  0020               	movlb	0	; select bank0
  4166  016C  0840               	movf	?_roundf,w
  4167  016D  0021               	movlb	1	; select bank1
  4168  016E  00B0               	movwf	main@finalVolt^(0+128)
  4169                           
  4170                           ;main.c: 182: if (finalVolt < desiredVolt)
  4171  016F  0833               	movf	(main@finalVolt+3)^(0+128),w
  4172  0170  00F3               	movwf	___flge@ff1+3
  4173  0171  0832               	movf	(main@finalVolt+2)^(0+128),w
  4174  0172  00F2               	movwf	___flge@ff1+2
  4175  0173  0831               	movf	(main@finalVolt+1)^(0+128),w
  4176  0174  00F1               	movwf	___flge@ff1+1
  4177  0175  0830               	movf	main@finalVolt^(0+128),w
  4178  0176  00F0               	movwf	___flge@ff1
  4179  0177  0837               	movf	(main@desiredVolt+3)^(0+128),w
  4180  0178  00F7               	movwf	___flge@ff2+3
  4181  0179  0836               	movf	(main@desiredVolt+2)^(0+128),w
  4182  017A  00F6               	movwf	___flge@ff2+2
  4183  017B  0835               	movf	(main@desiredVolt+1)^(0+128),w
  4184  017C  00F5               	movwf	___flge@ff2+1
  4185  017D  0834               	movf	main@desiredVolt^(0+128),w
  4186  017E  00F4               	movwf	___flge@ff2
  4187  017F  318D  2596  3180   	fcall	___flge
  4188  0182  1803               	btfsc	3,0
  4189  0183  2991               	goto	l3089
  4190                           
  4191                           ;main.c: 186: if (duty < minDuty)
  4192  0184  3001               	movlw	1
  4193  0185  0021               	movlb	1	; select bank1
  4194  0186  02B8               	subwf	main@duty^(0+128),f
  4195  0187  3000               	movlw	0
  4196  0188  3BB9               	subwfb	(main@duty+1)^(0+128),f
  4197  0189                     l3087:	
  4198                           
  4199                           ;main.c: 190: };main.c: 191: PWM3_LoadDutyValue(duty);
  4200  0189  0839               	movf	(main@duty+1)^(0+128),w
  4201  018A  00F1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  4202  018B  0838               	movf	main@duty^(0+128),w
  4203  018C  00F0               	movwf	PWM3_LoadDutyValue@dutyValue
  4204  018D  3196  26C7  3180   	fcall	_PWM3_LoadDutyValue
  4205                           
  4206                           ;main.c: 194: }
  4207  0190  29D7               	goto	l3101
  4208  0191                     l3089:	
  4209                           
  4210                           ;main.c: 197: else if (finalVolt > desiredVolt)
  4211  0191  0021               	movlb	1	; select bank1
  4212  0192  0837               	movf	(main@desiredVolt+3)^(0+128),w
  4213  0193  00F3               	movwf	___flge@ff1+3
  4214  0194  0836               	movf	(main@desiredVolt+2)^(0+128),w
  4215  0195  00F2               	movwf	___flge@ff1+2
  4216  0196  0835               	movf	(main@desiredVolt+1)^(0+128),w
  4217  0197  00F1               	movwf	___flge@ff1+1
  4218  0198  0834               	movf	main@desiredVolt^(0+128),w
  4219  0199  00F0               	movwf	___flge@ff1
  4220  019A  0833               	movf	(main@finalVolt+3)^(0+128),w
  4221  019B  00F7               	movwf	___flge@ff2+3
  4222  019C  0832               	movf	(main@finalVolt+2)^(0+128),w
  4223  019D  00F6               	movwf	___flge@ff2+2
  4224  019E  0831               	movf	(main@finalVolt+1)^(0+128),w
  4225  019F  00F5               	movwf	___flge@ff2+1
  4226  01A0  0830               	movf	main@finalVolt^(0+128),w
  4227  01A1  00F4               	movwf	___flge@ff2
  4228  01A2  318D  2596  3180   	fcall	___flge
  4229  01A5  1803               	btfsc	3,0
  4230  01A6  29AD               	goto	l3095
  4231                           
  4232                           ;main.c: 198: {;main.c: 199: duty++;
  4233  01A7  3001               	movlw	1
  4234  01A8  0021               	movlb	1	; select bank1
  4235  01A9  07B8               	addwf	main@duty^(0+128),f
  4236  01AA  3000               	movlw	0
  4237  01AB  3DB9               	addwfc	(main@duty+1)^(0+128),f
  4238  01AC  2989               	goto	l3087
  4239  01AD                     l3095:	
  4240                           
  4241                           ;main.c: 205: else if (finalVolt == desiredVolt)
  4242  01AD  0021               	movlb	1	; select bank1
  4243  01AE  0833               	movf	(main@finalVolt+3)^(0+128),w
  4244  01AF  00F3               	movwf	___fleq@ff1+3
  4245  01B0  0832               	movf	(main@finalVolt+2)^(0+128),w
  4246  01B1  00F2               	movwf	___fleq@ff1+2
  4247  01B2  0831               	movf	(main@finalVolt+1)^(0+128),w
  4248  01B3  00F1               	movwf	___fleq@ff1+1
  4249  01B4  0830               	movf	main@finalVolt^(0+128),w
  4250  01B5  00F0               	movwf	___fleq@ff1
  4251  01B6  0837               	movf	(main@desiredVolt+3)^(0+128),w
  4252  01B7  00F7               	movwf	___fleq@ff2+3
  4253  01B8  0836               	movf	(main@desiredVolt+2)^(0+128),w
  4254  01B9  00F6               	movwf	___fleq@ff2+2
  4255  01BA  0835               	movf	(main@desiredVolt+1)^(0+128),w
  4256  01BB  00F5               	movwf	___fleq@ff2+1
  4257  01BC  0834               	movf	main@desiredVolt^(0+128),w
  4258  01BD  00F4               	movwf	___fleq@ff2
  4259  01BE  318B  2385  3180   	fcall	___fleq
  4260  01C1  1C03               	btfss	3,0
  4261  01C2  29D7               	goto	l3101
  4262                           
  4263                           ;main.c: 208: PWM3_LoadDutyValue(duty);
  4264  01C3  0021               	movlb	1	; select bank1
  4265  01C4  0839               	movf	(main@duty+1)^(0+128),w
  4266  01C5  00F1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  4267  01C6  0838               	movf	main@duty^(0+128),w
  4268  01C7  00F0               	movwf	PWM3_LoadDutyValue@dutyValue
  4269  01C8  3196  26C7  3180   	fcall	_PWM3_LoadDutyValue
  4270                           
  4271                           ;main.c: 209: _delay((unsigned long)((5000)*(16000000/4000.0)));
  4272  01CB  3066               	movlw	102
  4273  01CC  0020               	movlb	0	; select bank0
  4274  01CD  00E8               	movwf	??_main+1
  4275  01CE  3076               	movlw	118
  4276  01CF  00E7               	movwf	??_main
  4277  01D0  30C1               	movlw	193
  4278  01D1                     u3467:	
  4279  01D1  0B89               	decfsz	9,f
  4280  01D2  29D1               	goto	u3467
  4281  01D3  0BE7               	decfsz	??_main,f
  4282  01D4  29D1               	goto	u3467
  4283  01D5  0BE8               	decfsz	??_main+1,f
  4284  01D6  29D1               	goto	u3467
  4285  01D7                     l3101:	
  4286                           
  4287                           ;main.c: 210: };main.c: 213: _delay((unsigned long)((100)*(16000000/4000.0)));
  4288  01D7  3003               	movlw	3
  4289  01D8  0020               	movlb	0	; select bank0
  4290  01D9  00E8               	movwf	??_main+1
  4291  01DA  3008               	movlw	8
  4292  01DB  00E7               	movwf	??_main
  4293  01DC  3077               	movlw	119
  4294  01DD                     u3477:	
  4295  01DD  0B89               	decfsz	9,f
  4296  01DE  29DD               	goto	u3477
  4297  01DF  0BE7               	decfsz	??_main,f
  4298  01E0  29DD               	goto	u3477
  4299  01E1  0BE8               	decfsz	??_main+1,f
  4300  01E2  29DD               	goto	u3477
  4301  01E3  3001               	movlw	1
  4302  01E4  0021               	movlb	1	; select bank1
  4303  01E5  07AE               	addwf	main@i^(0+128),f
  4304  01E6  3000               	movlw	0
  4305  01E7  3DAF               	addwfc	(main@i+1)^(0+128),f
  4306  01E8  082F               	movf	(main@i+1)^(0+128),w
  4307  01E9  3A80               	xorlw	128
  4308  01EA  0020               	movlb	0	; select bank0
  4309  01EB  00E7               	movwf	??_main
  4310  01EC  3080               	movlw	128
  4311  01ED  0267               	subwf	??_main,w
  4312  01EE  1D03               	skipz
  4313  01EF  29F3               	goto	u3435
  4314  01F0  300B               	movlw	11
  4315  01F1  0021               	movlb	1	; select bank1
  4316  01F2  022E               	subwf	main@i^(0+128),w
  4317  01F3                     u3435:	
  4318  01F3  1C03               	skipc
  4319  01F4  28E2               	goto	l3071
  4320                           
  4321                           ;main.c: 215: };main.c: 217: OLED_YX( 0, 0 );
  4322  01F5  01F5               	clrf	OLED_YX@Column
  4323  01F6  3000               	movlw	0
  4324  01F7  3197  2776  3180   	fcall	_OLED_YX
  4325                           
  4326                           ;main.c: 218: OLED_Write_String( "Voltage:" );
  4327  01FA  3028               	movlw	low (STR_1| (0+32768))
  4328  01FB  00FC               	movwf	OLED_Write_String@s
  4329  01FC  3098               	movlw	high (STR_1| (0+32768))
  4330  01FD  00FD               	movwf	OLED_Write_String@s+1
  4331  01FE  3196  26B3  3180   	fcall	_OLED_Write_String
  4332                           
  4333                           ;main.c: 219: OLED_YX(2, 0);
  4334  0201  01F5               	clrf	OLED_YX@Column
  4335  0202  3002               	movlw	2
  4336  0203  3197  2776  3180   	fcall	_OLED_YX
  4337                           
  4338                           ;main.c: 220: OLED_Write_Float(desiredVolt);
  4339  0206  0021               	movlb	1	; select bank1
  4340  0207  0837               	movf	(main@desiredVolt+3)^(0+128),w
  4341  0208  0020               	movlb	0	; select bank0
  4342  0209  00E1               	movwf	OLED_Write_Float@f+3
  4343  020A  0021               	movlb	1	; select bank1
  4344  020B  0836               	movf	(main@desiredVolt+2)^(0+128),w
  4345  020C  0020               	movlb	0	; select bank0
  4346  020D  00E0               	movwf	OLED_Write_Float@f+2
  4347  020E  0021               	movlb	1	; select bank1
  4348  020F  0835               	movf	(main@desiredVolt+1)^(0+128),w
  4349  0210  0020               	movlb	0	; select bank0
  4350  0211  00DF               	movwf	OLED_Write_Float@f+1
  4351  0212  0021               	movlb	1	; select bank1
  4352  0213  0834               	movf	main@desiredVolt^(0+128),w
  4353  0214  0020               	movlb	0	; select bank0
  4354  0215  00DE               	movwf	OLED_Write_Float@f
  4355  0216  3197  2754  3180   	fcall	_OLED_Write_Float
  4356  0219  28DF               	goto	l3065
  4357  021A                     __end_of_main:	
  4358                           
  4359                           	psect	text1
  4360  0B11                     __ptext1:	
  4361 ;; *************** function _roundf *****************
  4362 ;; Defined at:
  4363 ;;		line 51 in file "main.c"
  4364 ;; Parameters:    Size  Location     Type
  4365 ;;  x               4   32[BANK0 ] float 
  4366 ;; Auto vars:     Size  Location     Type
  4367 ;;		None
  4368 ;; Return value:  Size  Location     Type
  4369 ;;                  4   32[BANK0 ] float 
  4370 ;; Registers used:
  4371 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4372 ;; Tracked objects:
  4373 ;;		On entry : 0/0
  4374 ;;		On exit  : 0/0
  4375 ;;		Unchanged: 0/0
  4376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4377 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4378 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4380 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4381 ;;Total ram usage:        8 bytes
  4382 ;; Hardware stack levels used:    1
  4383 ;; Hardware stack levels required when called:    3
  4384 ;; This function calls:
  4385 ;;		___fladd
  4386 ;;		_floor
  4387 ;; This function is called by:
  4388 ;;		_main
  4389 ;; This function uses a non-reentrant model
  4390 ;;
  4391                           
  4392                           
  4393                           ;psect for function _roundf
  4394  0B11                     _roundf:	
  4395                           
  4396                           ;main.c: 53: return floor(x + 0.5f);
  4397                           
  4398                           ;incstack = 0
  4399                           ; Regs used in _roundf: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4400  0B11  303F               	movlw	63
  4401  0B12  00F3               	movwf	___fladd@b+3
  4402  0B13  3000               	movlw	0
  4403  0B14  00F2               	movwf	___fladd@b+2
  4404  0B15  3000               	movlw	0
  4405  0B16  00F1               	movwf	___fladd@b+1
  4406  0B17  3000               	movlw	0
  4407  0B18  00F0               	movwf	___fladd@b
  4408  0B19  0020               	movlb	0	; select bank0
  4409  0B1A  0843               	movf	roundf@x+3,w
  4410  0B1B  00F7               	movwf	___fladd@a+3
  4411  0B1C  0842               	movf	roundf@x+2,w
  4412  0B1D  00F6               	movwf	___fladd@a+2
  4413  0B1E  0841               	movf	roundf@x+1,w
  4414  0B1F  00F5               	movwf	___fladd@a+1
  4415  0B20  0840               	movf	roundf@x,w
  4416  0B21  00F4               	movwf	___fladd@a
  4417  0B22  3183  23DE  318B   	fcall	___fladd
  4418  0B25  0873               	movf	?___fladd+3,w
  4419  0B26  0020               	movlb	0	; select bank0
  4420  0B27  00C7               	movwf	_roundf$1268+3
  4421  0B28  0872               	movf	?___fladd+2,w
  4422  0B29  00C6               	movwf	_roundf$1268+2
  4423  0B2A  0871               	movf	?___fladd+1,w
  4424  0B2B  00C5               	movwf	_roundf$1268+1
  4425  0B2C  0870               	movf	?___fladd,w
  4426  0B2D  00C4               	movwf	_roundf$1268
  4427                           
  4428                           ;main.c: 53: return floor(x + 0.5f);
  4429  0B2E  0847               	movf	_roundf$1268+3,w
  4430  0B2F  00B8               	movwf	floor@x+3
  4431  0B30  0846               	movf	_roundf$1268+2,w
  4432  0B31  00B7               	movwf	floor@x+2
  4433  0B32  0845               	movf	_roundf$1268+1,w
  4434  0B33  00B6               	movwf	floor@x+1
  4435  0B34  0844               	movf	_roundf$1268,w
  4436  0B35  00B5               	movwf	floor@x
  4437  0B36  318E  26A7         	fcall	_floor
  4438  0B38  0020               	movlb	0	; select bank0
  4439  0B39  0838               	movf	?_floor+3,w
  4440  0B3A  00C3               	movwf	?_roundf+3
  4441  0B3B  0837               	movf	?_floor+2,w
  4442  0B3C  00C2               	movwf	?_roundf+2
  4443  0B3D  0836               	movf	?_floor+1,w
  4444  0B3E  00C1               	movwf	?_roundf+1
  4445  0B3F  0835               	movf	?_floor,w
  4446  0B40  00C0               	movwf	?_roundf
  4447  0B41  0008               	return
  4448  0B42                     __end_of_roundf:	
  4449                           
  4450                           	psect	text2
  4451  0EA7                     __ptext2:	
  4452 ;; *************** function _floor *****************
  4453 ;; Defined at:
  4454 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\floor.c"
  4455 ;; Parameters:    Size  Location     Type
  4456 ;;  x               4   21[BANK0 ] float 
  4457 ;; Auto vars:     Size  Location     Type
  4458 ;;  i               4   26[BANK0 ] float 
  4459 ;;  expon           2   30[BANK0 ] int 
  4460 ;; Return value:  Size  Location     Type
  4461 ;;                  4   21[BANK0 ] int 
  4462 ;; Registers used:
  4463 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4464 ;; Tracked objects:
  4465 ;;		On entry : 0/0
  4466 ;;		On exit  : 0/0
  4467 ;;		Unchanged: 0/0
  4468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4469 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4470 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4471 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4472 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4473 ;;Total ram usage:       11 bytes
  4474 ;; Hardware stack levels used:    1
  4475 ;; Hardware stack levels required when called:    2
  4476 ;; This function calls:
  4477 ;;		___fladd
  4478 ;;		___flge
  4479 ;;		___fltol
  4480 ;;		___xxtofl
  4481 ;;		_frexp
  4482 ;; This function is called by:
  4483 ;;		_roundf
  4484 ;; This function uses a non-reentrant model
  4485 ;;
  4486                           
  4487                           
  4488                           ;psect for function _floor
  4489  0EA7                     _floor:	
  4490                           
  4491                           ;incstack = 0
  4492                           ; Regs used in _floor: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4493  0EA7  0020               	movlb	0	; select bank0
  4494  0EA8  0838               	movf	floor@x+3,w
  4495  0EA9  00A3               	movwf	frexp@value+3
  4496  0EAA  0837               	movf	floor@x+2,w
  4497  0EAB  00A2               	movwf	frexp@value+2
  4498  0EAC  0836               	movf	floor@x+1,w
  4499  0EAD  00A1               	movwf	frexp@value+1
  4500  0EAE  0835               	movf	floor@x,w
  4501  0EAF  00A0               	movwf	frexp@value
  4502  0EB0  303E               	movlw	(low (floor@expon| 0))& (0+255)
  4503  0EB1  00B9               	movwf	??_floor
  4504  0EB2  0839               	movf	??_floor,w
  4505  0EB3  00A4               	movwf	frexp@eptr
  4506  0EB4  318B  23CD  318E   	fcall	_frexp
  4507  0EB7  0020               	movlb	0	; select bank0
  4508  0EB8  1FBF               	btfss	floor@expon+1,7
  4509  0EB9  2EE3               	goto	l2905
  4510  0EBA  0838               	movf	floor@x+3,w
  4511  0EBB  00F3               	movwf	___flge@ff1+3
  4512  0EBC  0837               	movf	floor@x+2,w
  4513  0EBD  00F2               	movwf	___flge@ff1+2
  4514  0EBE  0836               	movf	floor@x+1,w
  4515  0EBF  00F1               	movwf	___flge@ff1+1
  4516  0EC0  0835               	movf	floor@x,w
  4517  0EC1  00F0               	movwf	___flge@ff1
  4518  0EC2  3000               	movlw	0
  4519  0EC3  00F7               	movwf	___flge@ff2+3
  4520  0EC4  3000               	movlw	0
  4521  0EC5  00F6               	movwf	___flge@ff2+2
  4522  0EC6  3000               	movlw	0
  4523  0EC7  00F5               	movwf	___flge@ff2+1
  4524  0EC8  3000               	movlw	0
  4525  0EC9  00F4               	movwf	___flge@ff2
  4526  0ECA  318D  2596  318E   	fcall	___flge
  4527  0ECD  1803               	btfsc	3,0
  4528  0ECE  2ED9               	goto	l2901
  4529  0ECF  30BF               	movlw	191
  4530  0ED0  0020               	movlb	0	; select bank0
  4531  0ED1  00B8               	movwf	?_floor+3
  4532  0ED2  3080               	movlw	128
  4533  0ED3  00B7               	movwf	?_floor+2
  4534  0ED4  3000               	movlw	0
  4535  0ED5  00B6               	movwf	?_floor+1
  4536  0ED6  3000               	movlw	0
  4537  0ED7  00B5               	movwf	?_floor
  4538  0ED8  0008               	return
  4539  0ED9                     l2901:	
  4540  0ED9  3000               	movlw	0
  4541  0EDA  0020               	movlb	0	; select bank0
  4542  0EDB  00B8               	movwf	?_floor+3
  4543  0EDC  3000               	movlw	0
  4544  0EDD  00B7               	movwf	?_floor+2
  4545  0EDE  3000               	movlw	0
  4546  0EDF  00B6               	movwf	?_floor+1
  4547  0EE0  3000               	movlw	0
  4548  0EE1  00B5               	movwf	?_floor
  4549  0EE2  0008               	return
  4550  0EE3                     l2905:	
  4551  0EE3  3000               	movlw	0
  4552  0EE4  023F               	subwf	floor@expon+1,w
  4553  0EE5  301D               	movlw	29
  4554  0EE6  1903               	skipnz
  4555  0EE7  023E               	subwf	floor@expon,w
  4556  0EE8  1803               	btfsc	3,0
  4557  0EE9  0008               	return
  4558  0EEA  0838               	movf	floor@x+3,w
  4559  0EEB  00FC               	movwf	___fltol@f1+3
  4560  0EEC  0837               	movf	floor@x+2,w
  4561  0EED  00FB               	movwf	___fltol@f1+2
  4562  0EEE  0836               	movf	floor@x+1,w
  4563  0EEF  00FA               	movwf	___fltol@f1+1
  4564  0EF0  0835               	movf	floor@x,w
  4565  0EF1  00F9               	movwf	___fltol@f1
  4566  0EF2  318D  2530  318E   	fcall	___fltol
  4567  0EF5  087C               	movf	?___fltol+3,w
  4568  0EF6  0020               	movlb	0	; select bank0
  4569  0EF7  00AA               	movwf	___xxtofl@val+3
  4570  0EF8  087B               	movf	?___fltol+2,w
  4571  0EF9  00A9               	movwf	___xxtofl@val+2
  4572  0EFA  087A               	movf	?___fltol+1,w
  4573  0EFB  00A8               	movwf	___xxtofl@val+1
  4574  0EFC  0879               	movf	?___fltol,w
  4575  0EFD  00A7               	movwf	___xxtofl@val
  4576  0EFE  3001               	movlw	1
  4577  0EFF  318E  2611  318E   	fcall	___xxtofl
  4578  0F02  0020               	movlb	0	; select bank0
  4579  0F03  082A               	movf	?___xxtofl+3,w
  4580  0F04  00BD               	movwf	floor@i+3
  4581  0F05  0829               	movf	?___xxtofl+2,w
  4582  0F06  00BC               	movwf	floor@i+2
  4583  0F07  0828               	movf	?___xxtofl+1,w
  4584  0F08  00BB               	movwf	floor@i+1
  4585  0F09  0827               	movf	?___xxtofl,w
  4586  0F0A  00BA               	movwf	floor@i
  4587  0F0B  0838               	movf	floor@x+3,w
  4588  0F0C  00F3               	movwf	___flge@ff1+3
  4589  0F0D  0837               	movf	floor@x+2,w
  4590  0F0E  00F2               	movwf	___flge@ff1+2
  4591  0F0F  0836               	movf	floor@x+1,w
  4592  0F10  00F1               	movwf	___flge@ff1+1
  4593  0F11  0835               	movf	floor@x,w
  4594  0F12  00F0               	movwf	___flge@ff1
  4595  0F13  083D               	movf	floor@i+3,w
  4596  0F14  00F7               	movwf	___flge@ff2+3
  4597  0F15  083C               	movf	floor@i+2,w
  4598  0F16  00F6               	movwf	___flge@ff2+2
  4599  0F17  083B               	movf	floor@i+1,w
  4600  0F18  00F5               	movwf	___flge@ff2+1
  4601  0F19  083A               	movf	floor@i,w
  4602  0F1A  00F4               	movwf	___flge@ff2
  4603  0F1B  318D  2596  318E   	fcall	___flge
  4604  0F1E  1803               	btfsc	3,0
  4605  0F1F  2F3D               	goto	l2915
  4606  0F20  30BF               	movlw	191
  4607  0F21  00F3               	movwf	___fladd@b+3
  4608  0F22  3080               	movlw	128
  4609  0F23  00F2               	movwf	___fladd@b+2
  4610  0F24  3000               	movlw	0
  4611  0F25  00F1               	movwf	___fladd@b+1
  4612  0F26  3000               	movlw	0
  4613  0F27  00F0               	movwf	___fladd@b
  4614  0F28  0020               	movlb	0	; select bank0
  4615  0F29  083D               	movf	floor@i+3,w
  4616  0F2A  00F7               	movwf	___fladd@a+3
  4617  0F2B  083C               	movf	floor@i+2,w
  4618  0F2C  00F6               	movwf	___fladd@a+2
  4619  0F2D  083B               	movf	floor@i+1,w
  4620  0F2E  00F5               	movwf	___fladd@a+1
  4621  0F2F  083A               	movf	floor@i,w
  4622  0F30  00F4               	movwf	___fladd@a
  4623  0F31  3183  23DE         	fcall	___fladd
  4624  0F33  0873               	movf	?___fladd+3,w
  4625  0F34  0020               	movlb	0	; select bank0
  4626  0F35  00B8               	movwf	?_floor+3
  4627  0F36  0872               	movf	?___fladd+2,w
  4628  0F37  00B7               	movwf	?_floor+2
  4629  0F38  0871               	movf	?___fladd+1,w
  4630  0F39  00B6               	movwf	?_floor+1
  4631  0F3A  0870               	movf	?___fladd,w
  4632  0F3B  00B5               	movwf	?_floor
  4633  0F3C  0008               	return
  4634  0F3D                     l2915:	
  4635  0F3D  0020               	movlb	0	; select bank0
  4636  0F3E  083D               	movf	floor@i+3,w
  4637  0F3F  00B8               	movwf	?_floor+3
  4638  0F40  083C               	movf	floor@i+2,w
  4639  0F41  00B7               	movwf	?_floor+2
  4640  0F42  083B               	movf	floor@i+1,w
  4641  0F43  00B6               	movwf	?_floor+1
  4642  0F44  083A               	movf	floor@i,w
  4643  0F45  00B5               	movwf	?_floor
  4644  0F46  0008               	return
  4645  0F47                     __end_of_floor:	
  4646                           
  4647                           	psect	text3
  4648  0BCD                     __ptext3:	
  4649 ;; *************** function _frexp *****************
  4650 ;; Defined at:
  4651 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\frexp.c"
  4652 ;; Parameters:    Size  Location     Type
  4653 ;;  value           4    0[BANK0 ] int 
  4654 ;;  eptr            1    4[BANK0 ] PTR int 
  4655 ;;		 -> floor@expon(2), 
  4656 ;; Auto vars:     Size  Location     Type
  4657 ;;		None
  4658 ;; Return value:  Size  Location     Type
  4659 ;;                  4    0[BANK0 ] PTR int 
  4660 ;; Registers used:
  4661 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4662 ;; Tracked objects:
  4663 ;;		On entry : 0/0
  4664 ;;		On exit  : 0/0
  4665 ;;		Unchanged: 0/0
  4666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4667 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4669 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4670 ;;      Totals:         2       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4671 ;;Total ram usage:        7 bytes
  4672 ;; Hardware stack levels used:    1
  4673 ;; Hardware stack levels required when called:    1
  4674 ;; This function calls:
  4675 ;;		___fleq
  4676 ;; This function is called by:
  4677 ;;		_floor
  4678 ;; This function uses a non-reentrant model
  4679 ;;
  4680                           
  4681                           
  4682                           ;psect for function _frexp
  4683  0BCD                     _frexp:	
  4684                           
  4685                           ;incstack = 0
  4686                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4687  0BCD  0020               	movlb	0	; select bank0
  4688  0BCE  0823               	movf	frexp@value+3,w
  4689  0BCF  00F3               	movwf	___fleq@ff1+3
  4690  0BD0  0822               	movf	frexp@value+2,w
  4691  0BD1  00F2               	movwf	___fleq@ff1+2
  4692  0BD2  0821               	movf	frexp@value+1,w
  4693  0BD3  00F1               	movwf	___fleq@ff1+1
  4694  0BD4  0820               	movf	frexp@value,w
  4695  0BD5  00F0               	movwf	___fleq@ff1
  4696  0BD6  3000               	movlw	0
  4697  0BD7  00F7               	movwf	___fleq@ff2+3
  4698  0BD8  3000               	movlw	0
  4699  0BD9  00F6               	movwf	___fleq@ff2+2
  4700  0BDA  3000               	movlw	0
  4701  0BDB  00F5               	movwf	___fleq@ff2+1
  4702  0BDC  3000               	movlw	0
  4703  0BDD  00F4               	movwf	___fleq@ff2
  4704  0BDE  318B  2385  318B   	fcall	___fleq
  4705  0BE1  1C03               	btfss	3,0
  4706  0BE2  2BEB               	goto	l2825
  4707  0BE3  0020               	movlb	0	; select bank0
  4708  0BE4  0824               	movf	frexp@eptr,w
  4709  0BE5  0086               	movwf	6
  4710  0BE6  0187               	clrf	7
  4711  0BE7  3000               	movlw	0
  4712  0BE8  3FC0               	movwi [0]fsr1
  4713  0BE9  3FC1               	movwi [1]fsr1
  4714  0BEA  0008               	return
  4715  0BEB                     l2825:	
  4716  0BEB  0020               	movlb	0	; select bank0
  4717  0BEC  0823               	movf	frexp@value+3,w
  4718  0BED  397F               	andlw	127
  4719  0BEE  00FC               	movwf	??_frexp
  4720  0BEF  01FD               	clrf	??_frexp+1
  4721  0BF0  35FC               	lslf	??_frexp,f
  4722  0BF1  0DFD               	rlf	??_frexp+1,f
  4723  0BF2  0824               	movf	frexp@eptr,w
  4724  0BF3  0086               	movwf	6
  4725  0BF4  0187               	clrf	7
  4726  0BF5  087C               	movf	??_frexp,w
  4727  0BF6  3FC0               	movwi [0]fsr1
  4728  0BF7  087D               	movf	??_frexp+1,w
  4729  0BF8  3FC1               	movwi [1]fsr1
  4730  0BF9  0D22               	rlf	frexp@value+2,w
  4731  0BFA  0D22               	rlf	frexp@value+2,w
  4732  0BFB  3901               	andlw	1
  4733  0BFC  00FC               	movwf	??_frexp
  4734  0BFD  01FD               	clrf	??_frexp+1
  4735  0BFE  0824               	movf	frexp@eptr,w
  4736  0BFF  0086               	movwf	6
  4737  0C00  0187               	clrf	7
  4738  0C01  087C               	movf	??_frexp,w
  4739  0C02  0481               	iorwf	1,f
  4740  0C03  3141               	addfsr 1,1
  4741  0C04  087D               	movf	??_frexp+1,w
  4742  0C05  0481               	iorwf	1,f
  4743  0C06  0824               	movf	frexp@eptr,w
  4744  0C07  0086               	movwf	6
  4745  0C08  0187               	clrf	7
  4746  0C09  3082               	movlw	130
  4747  0C0A  0781               	addwf	1,f
  4748  0C0B  3141               	addfsr 1,1
  4749  0C0C  30FF               	movlw	255
  4750  0C0D  3D81               	addwfc	1,f
  4751  0C0E  317F               	addfsr 1,-1
  4752  0C0F  0823               	movf	frexp@value+3,w
  4753  0C10  3980               	andlw	-128
  4754  0C11  383F               	iorlw	63
  4755  0C12  00A3               	movwf	frexp@value+3
  4756  0C13  13A2               	bcf	frexp@value+2,7
  4757  0C14  0008               	return
  4758  0C15                     __end_of_frexp:	
  4759                           
  4760                           	psect	text4
  4761  0B85                     __ptext4:	
  4762 ;; *************** function ___fleq *****************
  4763 ;; Defined at:
  4764 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fleq.c"
  4765 ;; Parameters:    Size  Location     Type
  4766 ;;  ff1             4    0[COMMON] PTR int 
  4767 ;;  ff2             4    4[COMMON] PTR int 
  4768 ;; Auto vars:     Size  Location     Type
  4769 ;;		None
  4770 ;; Return value:  Size  Location     Type
  4771 ;;		None               void
  4772 ;; Registers used:
  4773 ;;		wreg, status,2, status,0
  4774 ;; Tracked objects:
  4775 ;;		On entry : 0/0
  4776 ;;		On exit  : 0/0
  4777 ;;		Unchanged: 0/0
  4778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4779 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4781 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4782 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4783 ;;Total ram usage:       12 bytes
  4784 ;; Hardware stack levels used:    1
  4785 ;; This function calls:
  4786 ;;		Nothing
  4787 ;; This function is called by:
  4788 ;;		_main
  4789 ;;		_frexp
  4790 ;; This function uses a non-reentrant model
  4791 ;;
  4792                           
  4793                           
  4794                           ;psect for function ___fleq
  4795  0B85                     ___fleq:	
  4796                           
  4797                           ;incstack = 0
  4798                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  4799  0B85  3000               	movlw	0
  4800  0B86  0570               	andwf	___fleq@ff1,w
  4801  0B87  00F8               	movwf	??___fleq
  4802  0B88  3000               	movlw	0
  4803  0B89  0571               	andwf	___fleq@ff1+1,w
  4804  0B8A  00F9               	movwf	??___fleq+1
  4805  0B8B  3080               	movlw	128
  4806  0B8C  0572               	andwf	___fleq@ff1+2,w
  4807  0B8D  00FA               	movwf	??___fleq+2
  4808  0B8E  307F               	movlw	127
  4809  0B8F  0573               	andwf	___fleq@ff1+3,w
  4810  0B90  00FB               	movwf	??___fleq+3
  4811  0B91  087B               	movf	??___fleq+3,w
  4812  0B92  047A               	iorwf	??___fleq+2,w
  4813  0B93  0479               	iorwf	??___fleq+1,w
  4814  0B94  0478               	iorwf	??___fleq,w
  4815  0B95  1D03               	skipz
  4816  0B96  2B9F               	goto	l608
  4817  0B97  3000               	movlw	0
  4818  0B98  00F3               	movwf	___fleq@ff1+3
  4819  0B99  3000               	movlw	0
  4820  0B9A  00F2               	movwf	___fleq@ff1+2
  4821  0B9B  3000               	movlw	0
  4822  0B9C  00F1               	movwf	___fleq@ff1+1
  4823  0B9D  3000               	movlw	0
  4824  0B9E  00F0               	movwf	___fleq@ff1
  4825  0B9F                     l608:	
  4826  0B9F  3000               	movlw	0
  4827  0BA0  0574               	andwf	___fleq@ff2,w
  4828  0BA1  00F8               	movwf	??___fleq
  4829  0BA2  3000               	movlw	0
  4830  0BA3  0575               	andwf	___fleq@ff2+1,w
  4831  0BA4  00F9               	movwf	??___fleq+1
  4832  0BA5  3080               	movlw	128
  4833  0BA6  0576               	andwf	___fleq@ff2+2,w
  4834  0BA7  00FA               	movwf	??___fleq+2
  4835  0BA8  307F               	movlw	127
  4836  0BA9  0577               	andwf	___fleq@ff2+3,w
  4837  0BAA  00FB               	movwf	??___fleq+3
  4838  0BAB  087B               	movf	??___fleq+3,w
  4839  0BAC  047A               	iorwf	??___fleq+2,w
  4840  0BAD  0479               	iorwf	??___fleq+1,w
  4841  0BAE  0478               	iorwf	??___fleq,w
  4842  0BAF  1D03               	skipz
  4843  0BB0  2BB9               	goto	l609
  4844  0BB1  3000               	movlw	0
  4845  0BB2  00F7               	movwf	___fleq@ff2+3
  4846  0BB3  3000               	movlw	0
  4847  0BB4  00F6               	movwf	___fleq@ff2+2
  4848  0BB5  3000               	movlw	0
  4849  0BB6  00F5               	movwf	___fleq@ff2+1
  4850  0BB7  3000               	movlw	0
  4851  0BB8  00F4               	movwf	___fleq@ff2
  4852  0BB9                     l609:	
  4853  0BB9  0877               	movf	___fleq@ff2+3,w
  4854  0BBA  0673               	xorwf	___fleq@ff1+3,w
  4855  0BBB  1D03               	skipz
  4856  0BBC  2BC7               	goto	u1985
  4857  0BBD  0876               	movf	___fleq@ff2+2,w
  4858  0BBE  0672               	xorwf	___fleq@ff1+2,w
  4859  0BBF  1D03               	skipz
  4860  0BC0  2BC7               	goto	u1985
  4861  0BC1  0875               	movf	___fleq@ff2+1,w
  4862  0BC2  0671               	xorwf	___fleq@ff1+1,w
  4863  0BC3  1D03               	skipz
  4864  0BC4  2BC7               	goto	u1985
  4865  0BC5  0874               	movf	___fleq@ff2,w
  4866  0BC6  0670               	xorwf	___fleq@ff1,w
  4867  0BC7                     u1985:	
  4868  0BC7  1903               	skipnz
  4869  0BC8  2BCB               	goto	l2189
  4870  0BC9  1003               	clrc
  4871  0BCA  0008               	return
  4872  0BCB                     l2189:	
  4873  0BCB  1403               	setc
  4874  0BCC  0008               	return
  4875  0BCD                     __end_of___fleq:	
  4876                           
  4877                           	psect	text5
  4878  0004                     __ptext5:	
  4879 ;; *************** function _SYSTEM_Initialize *****************
  4880 ;; Defined at:
  4881 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4882 ;; Parameters:    Size  Location     Type
  4883 ;;		None
  4884 ;; Auto vars:     Size  Location     Type
  4885 ;;		None
  4886 ;; Return value:  Size  Location     Type
  4887 ;;                  1    wreg      void 
  4888 ;; Registers used:
  4889 ;;		wreg, status,2, status,0, pclath, cstack
  4890 ;; Tracked objects:
  4891 ;;		On entry : 0/0
  4892 ;;		On exit  : 0/0
  4893 ;;		Unchanged: 0/0
  4894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4899 ;;Total ram usage:        0 bytes
  4900 ;; Hardware stack levels used:    1
  4901 ;; Hardware stack levels required when called:    1
  4902 ;; This function calls:
  4903 ;;		_OSCILLATOR_Initialize
  4904 ;;		_PIN_MANAGER_Initialize
  4905 ;;		_PWM3_Initialize
  4906 ;;		_TMR6_Initialize
  4907 ;;		_WDT_Initialize
  4908 ;; This function is called by:
  4909 ;;		_main
  4910 ;; This function uses a non-reentrant model
  4911 ;;
  4912                           
  4913                           
  4914                           ;psect for function _SYSTEM_Initialize
  4915  0004                     _SYSTEM_Initialize:	
  4916                           
  4917                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  4918                           
  4919                           ;incstack = 0
  4920                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4921  0004  3197  27C7  3180   	fcall	_PIN_MANAGER_Initialize
  4922                           
  4923                           ;mcc.c: 54: OSCILLATOR_Initialize();
  4924  0007  3196  2655  3180   	fcall	_OSCILLATOR_Initialize
  4925                           
  4926                           ;mcc.c: 55: WDT_Initialize();
  4927  000A  3196  2651  3180   	fcall	_WDT_Initialize
  4928                           
  4929                           ;mcc.c: 56: TMR6_Initialize();
  4930  000D  3196  267E  3180   	fcall	_TMR6_Initialize
  4931                           
  4932                           ;mcc.c: 57: PWM3_Initialize();
  4933  0010  3196  2688         	fcall	_PWM3_Initialize
  4934  0012  0008               	return
  4935  0013                     __end_of_SYSTEM_Initialize:	
  4936                           
  4937                           	psect	text6
  4938  1651                     __ptext6:	
  4939 ;; *************** function _WDT_Initialize *****************
  4940 ;; Defined at:
  4941 ;;		line 70 in file "mcc_generated_files/mcc.c"
  4942 ;; Parameters:    Size  Location     Type
  4943 ;;		None
  4944 ;; Auto vars:     Size  Location     Type
  4945 ;;		None
  4946 ;; Return value:  Size  Location     Type
  4947 ;;                  1    wreg      void 
  4948 ;; Registers used:
  4949 ;;		wreg
  4950 ;; Tracked objects:
  4951 ;;		On entry : 0/0
  4952 ;;		On exit  : 0/0
  4953 ;;		Unchanged: 0/0
  4954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4959 ;;Total ram usage:        0 bytes
  4960 ;; Hardware stack levels used:    1
  4961 ;; This function calls:
  4962 ;;		Nothing
  4963 ;; This function is called by:
  4964 ;;		_SYSTEM_Initialize
  4965 ;; This function uses a non-reentrant model
  4966 ;;
  4967                           
  4968                           
  4969                           ;psect for function _WDT_Initialize
  4970  1651                     _WDT_Initialize:	
  4971                           
  4972                           ;mcc.c: 73: WDTCON = 0x16;
  4973                           
  4974                           ;incstack = 0
  4975                           ; Regs used in _WDT_Initialize: [wreg]
  4976  1651  3016               	movlw	22
  4977  1652  0021               	movlb	1	; select bank1
  4978  1653  0097               	movwf	23	;volatile
  4979  1654  0008               	return
  4980  1655                     __end_of_WDT_Initialize:	
  4981                           
  4982                           	psect	text7
  4983  167E                     __ptext7:	
  4984 ;; *************** function _TMR6_Initialize *****************
  4985 ;; Defined at:
  4986 ;;		line 62 in file "mcc_generated_files/tmr6.c"
  4987 ;; Parameters:    Size  Location     Type
  4988 ;;		None
  4989 ;; Auto vars:     Size  Location     Type
  4990 ;;		None
  4991 ;; Return value:  Size  Location     Type
  4992 ;;                  1    wreg      void 
  4993 ;; Registers used:
  4994 ;;		wreg, status,2
  4995 ;; Tracked objects:
  4996 ;;		On entry : 0/0
  4997 ;;		On exit  : 0/0
  4998 ;;		Unchanged: 0/0
  4999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5004 ;;Total ram usage:        0 bytes
  5005 ;; Hardware stack levels used:    1
  5006 ;; This function calls:
  5007 ;;		Nothing
  5008 ;; This function is called by:
  5009 ;;		_SYSTEM_Initialize
  5010 ;; This function uses a non-reentrant model
  5011 ;;
  5012                           
  5013                           
  5014                           ;psect for function _TMR6_Initialize
  5015  167E                     _TMR6_Initialize:	
  5016                           
  5017                           ;tmr6.c: 67: PR6 = 0xFF;
  5018                           
  5019                           ;incstack = 0
  5020                           ; Regs used in _TMR6_Initialize: [wreg+status,2]
  5021  167E  30FF               	movlw	255
  5022  167F  0028               	movlb	8	; select bank8
  5023  1680  009D               	movwf	29	;volatile
  5024                           
  5025                           ;tmr6.c: 70: TMR6 = 0x00;
  5026  1681  019C               	clrf	28	;volatile
  5027                           
  5028                           ;tmr6.c: 73: PIR2bits.TMR6IF = 0;
  5029  1682  0020               	movlb	0	; select bank0
  5030  1683  1112               	bcf	18,2	;volatile
  5031                           
  5032                           ;tmr6.c: 76: T6CON = 0x2C;
  5033  1684  302C               	movlw	44
  5034  1685  0028               	movlb	8	; select bank8
  5035  1686  009E               	movwf	30	;volatile
  5036  1687  0008               	return
  5037  1688                     __end_of_TMR6_Initialize:	
  5038                           
  5039                           	psect	text8
  5040  1688                     __ptext8:	
  5041 ;; *************** function _PWM3_Initialize *****************
  5042 ;; Defined at:
  5043 ;;		line 58 in file "mcc_generated_files/pwm3.c"
  5044 ;; Parameters:    Size  Location     Type
  5045 ;;		None
  5046 ;; Auto vars:     Size  Location     Type
  5047 ;;		None
  5048 ;; Return value:  Size  Location     Type
  5049 ;;                  1    wreg      void 
  5050 ;; Registers used:
  5051 ;;		wreg, status,2, status,0
  5052 ;; Tracked objects:
  5053 ;;		On entry : 0/0
  5054 ;;		On exit  : 0/0
  5055 ;;		Unchanged: 0/0
  5056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5061 ;;Total ram usage:        0 bytes
  5062 ;; Hardware stack levels used:    1
  5063 ;; This function calls:
  5064 ;;		Nothing
  5065 ;; This function is called by:
  5066 ;;		_SYSTEM_Initialize
  5067 ;; This function uses a non-reentrant model
  5068 ;;
  5069                           
  5070                           
  5071                           ;psect for function _PWM3_Initialize
  5072  1688                     _PWM3_Initialize:	
  5073                           
  5074                           ;pwm3.c: 62: PWM3CON = 0x80;
  5075                           
  5076                           ;incstack = 0
  5077                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
  5078  1688  3080               	movlw	128
  5079  1689  002C               	movlb	12	; select bank12
  5080  168A  0099               	movwf	25	;volatile
  5081                           
  5082                           ;pwm3.c: 65: PWM3DCH = 0x7F;
  5083  168B  307F               	movlw	127
  5084  168C  0098               	movwf	24	;volatile
  5085                           
  5086                           ;pwm3.c: 68: PWM3DCL = 0xC0;
  5087  168D  30C0               	movlw	192
  5088  168E  0097               	movwf	23	;volatile
  5089                           
  5090                           ;pwm3.c: 71: CCPTMRSbits.P3TSEL = 2;
  5091  168F  0025               	movlb	5	; select bank5
  5092  1690  081E               	movf	30,w	;volatile
  5093  1691  39CF               	andlw	-49
  5094  1692  3820               	iorlw	32
  5095  1693  009E               	movwf	30	;volatile
  5096  1694  0008               	return
  5097  1695                     __end_of_PWM3_Initialize:	
  5098                           
  5099                           	psect	text9
  5100  17C7                     __ptext9:	
  5101 ;; *************** function _PIN_MANAGER_Initialize *****************
  5102 ;; Defined at:
  5103 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5104 ;; Parameters:    Size  Location     Type
  5105 ;;		None
  5106 ;; Auto vars:     Size  Location     Type
  5107 ;;		None
  5108 ;; Return value:  Size  Location     Type
  5109 ;;                  1    wreg      void 
  5110 ;; Registers used:
  5111 ;;		wreg, status,2
  5112 ;; Tracked objects:
  5113 ;;		On entry : 0/0
  5114 ;;		On exit  : 0/0
  5115 ;;		Unchanged: 0/0
  5116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5121 ;;Total ram usage:        0 bytes
  5122 ;; Hardware stack levels used:    1
  5123 ;; This function calls:
  5124 ;;		Nothing
  5125 ;; This function is called by:
  5126 ;;		_SYSTEM_Initialize
  5127 ;; This function uses a non-reentrant model
  5128 ;;
  5129                           
  5130                           
  5131                           ;psect for function _PIN_MANAGER_Initialize
  5132  17C7                     _PIN_MANAGER_Initialize:	
  5133                           
  5134                           ;pin_manager.c: 60: LATE = 0x00;
  5135                           
  5136                           ;incstack = 0
  5137                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  5138  17C7  0022               	movlb	2	; select bank2
  5139  17C8  0190               	clrf	16	;volatile
  5140                           
  5141                           ;pin_manager.c: 61: LATD = 0x00;
  5142  17C9  018F               	clrf	15	;volatile
  5143                           
  5144                           ;pin_manager.c: 62: LATA = 0x00;
  5145  17CA  018C               	clrf	12	;volatile
  5146                           
  5147                           ;pin_manager.c: 63: LATB = 0x00;
  5148  17CB  018D               	clrf	13	;volatile
  5149                           
  5150                           ;pin_manager.c: 64: LATC = 0x00;
  5151  17CC  018E               	clrf	14	;volatile
  5152                           
  5153                           ;pin_manager.c: 69: TRISE = 0x0F;
  5154  17CD  300F               	movlw	15
  5155  17CE  0021               	movlb	1	; select bank1
  5156  17CF  0090               	movwf	16	;volatile
  5157                           
  5158                           ;pin_manager.c: 70: TRISA = 0xFF;
  5159  17D0  30FF               	movlw	255
  5160  17D1  008C               	movwf	12	;volatile
  5161                           
  5162                           ;pin_manager.c: 71: TRISB = 0xFE;
  5163  17D2  30FE               	movlw	254
  5164  17D3  008D               	movwf	13	;volatile
  5165                           
  5166                           ;pin_manager.c: 72: TRISC = 0xFF;
  5167  17D4  30FF               	movlw	255
  5168  17D5  008E               	movwf	14	;volatile
  5169                           
  5170                           ;pin_manager.c: 73: TRISD = 0xFF;
  5171  17D6  30FF               	movlw	255
  5172  17D7  008F               	movwf	15	;volatile
  5173                           
  5174                           ;pin_manager.c: 78: ANSELD = 0xFF;
  5175  17D8  30FF               	movlw	255
  5176  17D9  0023               	movlb	3	; select bank3
  5177  17DA  008F               	movwf	15	;volatile
  5178                           
  5179                           ;pin_manager.c: 79: ANSELC = 0xFC;
  5180  17DB  30FC               	movlw	252
  5181  17DC  008E               	movwf	14	;volatile
  5182                           
  5183                           ;pin_manager.c: 80: ANSELB = 0x3F;
  5184  17DD  303F               	movlw	63
  5185  17DE  008D               	movwf	13	;volatile
  5186                           
  5187                           ;pin_manager.c: 81: ANSELE = 0x07;
  5188  17DF  3007               	movlw	7
  5189  17E0  0090               	movwf	16	;volatile
  5190                           
  5191                           ;pin_manager.c: 82: ANSELA = 0x3F;
  5192  17E1  303F               	movlw	63
  5193  17E2  008C               	movwf	12	;volatile
  5194                           
  5195                           ;pin_manager.c: 87: WPUD = 0x00;
  5196  17E3  0024               	movlb	4	; select bank4
  5197  17E4  018F               	clrf	15	;volatile
  5198                           
  5199                           ;pin_manager.c: 88: WPUE = 0x00;
  5200  17E5  0190               	clrf	16	;volatile
  5201                           
  5202                           ;pin_manager.c: 89: WPUB = 0x00;
  5203  17E6  018D               	clrf	13	;volatile
  5204                           
  5205                           ;pin_manager.c: 90: WPUA = 0x00;
  5206  17E7  018C               	clrf	12	;volatile
  5207                           
  5208                           ;pin_manager.c: 91: WPUC = 0x00;
  5209  17E8  018E               	clrf	14	;volatile
  5210                           
  5211                           ;pin_manager.c: 92: OPTION_REGbits.nWPUEN = 1;
  5212  17E9  0021               	movlb	1	; select bank1
  5213  17EA  1795               	bsf	21,7	;volatile
  5214                           
  5215                           ;pin_manager.c: 97: ODCONE = 0x00;
  5216  17EB  0025               	movlb	5	; select bank5
  5217  17EC  0190               	clrf	16	;volatile
  5218                           
  5219                           ;pin_manager.c: 98: ODCONA = 0x00;
  5220  17ED  018C               	clrf	12	;volatile
  5221                           
  5222                           ;pin_manager.c: 99: ODCONB = 0x00;
  5223  17EE  018D               	clrf	13	;volatile
  5224                           
  5225                           ;pin_manager.c: 100: ODCONC = 0x00;
  5226  17EF  018E               	clrf	14	;volatile
  5227                           
  5228                           ;pin_manager.c: 101: ODCOND = 0x00;
  5229  17F0  018F               	clrf	15	;volatile
  5230                           
  5231                           ;pin_manager.c: 106: SLRCONA = 0xFF;
  5232  17F1  30FF               	movlw	255
  5233  17F2  0026               	movlb	6	; select bank6
  5234  17F3  008C               	movwf	12	;volatile
  5235                           
  5236                           ;pin_manager.c: 107: SLRCONB = 0xFF;
  5237  17F4  30FF               	movlw	255
  5238  17F5  008D               	movwf	13	;volatile
  5239                           
  5240                           ;pin_manager.c: 108: SLRCONC = 0xFF;
  5241  17F6  30FF               	movlw	255
  5242  17F7  008E               	movwf	14	;volatile
  5243                           
  5244                           ;pin_manager.c: 109: SLRCOND = 0xFF;
  5245  17F8  30FF               	movlw	255
  5246  17F9  008F               	movwf	15	;volatile
  5247                           
  5248                           ;pin_manager.c: 110: SLRCONE = 0x07;
  5249  17FA  3007               	movlw	7
  5250  17FB  0090               	movwf	16	;volatile
  5251                           
  5252                           ;pin_manager.c: 119: RB0PPS = 0x0E;
  5253  17FC  300E               	movlw	14
  5254  17FD  003D               	movlb	29	; select bank29
  5255  17FE  0098               	movwf	24	;volatile
  5256  17FF  0008               	return
  5257  1800                     __end_of_PIN_MANAGER_Initialize:	
  5258                           
  5259                           	psect	text10
  5260  1655                     __ptext10:	
  5261 ;; *************** function _OSCILLATOR_Initialize *****************
  5262 ;; Defined at:
  5263 ;;		line 60 in file "mcc_generated_files/mcc.c"
  5264 ;; Parameters:    Size  Location     Type
  5265 ;;		None
  5266 ;; Auto vars:     Size  Location     Type
  5267 ;;		None
  5268 ;; Return value:  Size  Location     Type
  5269 ;;                  1    wreg      void 
  5270 ;; Registers used:
  5271 ;;		wreg, status,2
  5272 ;; Tracked objects:
  5273 ;;		On entry : 0/0
  5274 ;;		On exit  : 0/0
  5275 ;;		Unchanged: 0/0
  5276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5281 ;;Total ram usage:        0 bytes
  5282 ;; Hardware stack levels used:    1
  5283 ;; This function calls:
  5284 ;;		Nothing
  5285 ;; This function is called by:
  5286 ;;		_SYSTEM_Initialize
  5287 ;; This function uses a non-reentrant model
  5288 ;;
  5289                           
  5290                           
  5291                           ;psect for function _OSCILLATOR_Initialize
  5292  1655                     _OSCILLATOR_Initialize:	
  5293                           
  5294                           ;mcc.c: 63: OSCCON = 0x78;
  5295                           
  5296                           ;incstack = 0
  5297                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  5298  1655  3078               	movlw	120
  5299  1656  0021               	movlb	1	; select bank1
  5300  1657  0099               	movwf	25	;volatile
  5301                           
  5302                           ;mcc.c: 65: OSCTUNE = 0x00;
  5303  1658  0198               	clrf	24	;volatile
  5304                           
  5305                           ;mcc.c: 67: BORCON = 0x00;
  5306  1659  0022               	movlb	2	; select bank2
  5307  165A  0196               	clrf	22	;volatile
  5308  165B  0008               	return
  5309  165C                     __end_of_OSCILLATOR_Initialize:	
  5310                           
  5311                           	psect	text11
  5312  16C7                     __ptext11:	
  5313 ;; *************** function _PWM3_LoadDutyValue *****************
  5314 ;; Defined at:
  5315 ;;		line 74 in file "mcc_generated_files/pwm3.c"
  5316 ;; Parameters:    Size  Location     Type
  5317 ;;  dutyValue       2    0[COMMON] unsigned int 
  5318 ;; Auto vars:     Size  Location     Type
  5319 ;;		None
  5320 ;; Return value:  Size  Location     Type
  5321 ;;                  1    wreg      void 
  5322 ;; Registers used:
  5323 ;;		wreg, status,2, status,0
  5324 ;; Tracked objects:
  5325 ;;		On entry : 0/0
  5326 ;;		On exit  : 0/0
  5327 ;;		Unchanged: 0/0
  5328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5329 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5331 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5332 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5333 ;;Total ram usage:        4 bytes
  5334 ;; Hardware stack levels used:    1
  5335 ;; This function calls:
  5336 ;;		Nothing
  5337 ;; This function is called by:
  5338 ;;		_main
  5339 ;; This function uses a non-reentrant model
  5340 ;;
  5341                           
  5342                           
  5343                           ;psect for function _PWM3_LoadDutyValue
  5344  16C7                     _PWM3_LoadDutyValue:	
  5345                           
  5346                           ;pwm3.c: 77: PWM3DCH = (dutyValue & 0x03FC)>>2;
  5347                           
  5348                           ;incstack = 0
  5349                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2+status,0]
  5350  16C7  0871               	movf	PWM3_LoadDutyValue@dutyValue+1,w
  5351  16C8  00F3               	movwf	??_PWM3_LoadDutyValue+1
  5352  16C9  0870               	movf	PWM3_LoadDutyValue@dutyValue,w
  5353  16CA  00F2               	movwf	??_PWM3_LoadDutyValue
  5354  16CB  36F3               	lsrf	??_PWM3_LoadDutyValue+1,f
  5355  16CC  0CF2               	rrf	??_PWM3_LoadDutyValue,f
  5356  16CD  36F3               	lsrf	??_PWM3_LoadDutyValue+1,f
  5357  16CE  0CF2               	rrf	??_PWM3_LoadDutyValue,f
  5358  16CF  0872               	movf	??_PWM3_LoadDutyValue,w
  5359  16D0  002C               	movlb	12	; select bank12
  5360  16D1  0098               	movwf	24	;volatile
  5361                           
  5362                           ;pwm3.c: 80: PWM3DCL = (dutyValue & 0x0003)<<6;
  5363  16D2  0870               	movf	PWM3_LoadDutyValue@dutyValue,w
  5364  16D3  3903               	andlw	3
  5365  16D4  00F2               	movwf	??_PWM3_LoadDutyValue
  5366  16D5  3005               	movlw	5
  5367  16D6                     u3365:	
  5368  16D6  35F2               	lslf	??_PWM3_LoadDutyValue,f
  5369  16D7  3EFF               	addlw	-1
  5370  16D8  1D03               	skipz
  5371  16D9  2ED6               	goto	u3365
  5372  16DA  3572               	lslf	??_PWM3_LoadDutyValue,w
  5373  16DB  0097               	movwf	23	;volatile
  5374  16DC  0008               	return
  5375  16DD                     __end_of_PWM3_LoadDutyValue:	
  5376                           
  5377                           	psect	text12
  5378  1754                     __ptext12:	
  5379 ;; *************** function _OLED_Write_Float *****************
  5380 ;; Defined at:
  5381 ;;		line 316 in file "oled.c"
  5382 ;; Parameters:    Size  Location     Type
  5383 ;;  f               4   62[BANK0 ] float 
  5384 ;; Auto vars:     Size  Location     Type
  5385 ;;  status          2   68[BANK0 ] int 
  5386 ;;  buf11           1   70[BANK0 ] PTR unsigned char 
  5387 ;;		 -> ftoa@buf(17), 
  5388 ;; Return value:  Size  Location     Type
  5389 ;;                  1    wreg      void 
  5390 ;; Registers used:
  5391 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5392 ;; Tracked objects:
  5393 ;;		On entry : 0/0
  5394 ;;		On exit  : 0/0
  5395 ;;		Unchanged: 0/0
  5396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5397 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5398 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5399 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5400 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5401 ;;Total ram usage:        9 bytes
  5402 ;; Hardware stack levels used:    1
  5403 ;; Hardware stack levels required when called:    3
  5404 ;; This function calls:
  5405 ;;		_OLED_Write_String
  5406 ;;		_ftoa
  5407 ;; This function is called by:
  5408 ;;		_main
  5409 ;; This function uses a non-reentrant model
  5410 ;;
  5411                           
  5412                           
  5413                           ;psect for function _OLED_Write_Float
  5414  1754                     _OLED_Write_Float:	
  5415                           
  5416                           ;oled.c: 318: char* buf11;;oled.c: 319: int status;;oled.c: 321: buf11 = ftoa(f, &status
      +                          );
  5417                           
  5418                           ;incstack = 0
  5419                           ; Regs used in _OLED_Write_Float: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5420  1754  0020               	movlb	0	; select bank0
  5421  1755  0861               	movf	OLED_Write_Float@f+3,w
  5422  1756  00D2               	movwf	ftoa@f+3
  5423  1757  0860               	movf	OLED_Write_Float@f+2,w
  5424  1758  00D1               	movwf	ftoa@f+2
  5425  1759  085F               	movf	OLED_Write_Float@f+1,w
  5426  175A  00D0               	movwf	ftoa@f+1
  5427  175B  085E               	movf	OLED_Write_Float@f,w
  5428  175C  00CF               	movwf	ftoa@f
  5429  175D  3064               	movlw	(low (OLED_Write_Float@status| 0))& (0+255)
  5430  175E  00E2               	movwf	??_OLED_Write_Float
  5431  175F  0862               	movf	??_OLED_Write_Float,w
  5432  1760  00D3               	movwf	ftoa@status
  5433  1761  318F  2747  3197   	fcall	_ftoa
  5434  1764  0020               	movlb	0	; select bank0
  5435  1765  00E3               	movwf	??_OLED_Write_Float+1
  5436  1766  0863               	movf	??_OLED_Write_Float+1,w
  5437  1767  00E6               	movwf	OLED_Write_Float@buf11
  5438                           
  5439                           ;oled.c: 323: OLED_Write_String(buf11);
  5440  1768  0866               	movf	OLED_Write_Float@buf11,w
  5441  1769  00FC               	movwf	OLED_Write_String@s
  5442  176A  3000               	movlw	0
  5443  176B  00FD               	movwf	OLED_Write_String@s+1
  5444  176C  3196  26B3  3197   	fcall	_OLED_Write_String
  5445                           
  5446                           ;oled.c: 324: OLED_Write_String( "     " );
  5447  176F  3031               	movlw	low (STR_2| (0+32768))
  5448  1770  00FC               	movwf	OLED_Write_String@s
  5449  1771  3098               	movlw	high (STR_2| (0+32768))
  5450  1772  00FD               	movwf	OLED_Write_String@s+1
  5451  1773  3196  26B3         	fcall	_OLED_Write_String
  5452  1775  0008               	return
  5453  1776                     __end_of_OLED_Write_Float:	
  5454                           
  5455                           	psect	text13
  5456  0F47                     __ptext13:	
  5457 ;; *************** function _ftoa *****************
  5458 ;; Defined at:
  5459 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\ftoa.c"
  5460 ;; Parameters:    Size  Location     Type
  5461 ;;  f               4   47[BANK0 ] float 
  5462 ;;  status          1   51[BANK0 ] PTR int 
  5463 ;;		 -> OLED_Write_Float@status(2), 
  5464 ;; Auto vars:     Size  Location     Type
  5465 ;;  l               4   57[BANK0 ] unsigned long 
  5466 ;;  rem             4   53[BANK0 ] unsigned long 
  5467 ;;  cp              1   61[BANK0 ] PTR unsigned char 
  5468 ;;		 -> ftoa@buf(17), 
  5469 ;; Return value:  Size  Location     Type
  5470 ;;                  1    wreg      PTR unsigned char 
  5471 ;; Registers used:
  5472 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5473 ;; Tracked objects:
  5474 ;;		On entry : 0/0
  5475 ;;		On exit  : 0/0
  5476 ;;		Unchanged: 0/0
  5477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5478 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5479 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5480 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5481 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5482 ;;Total ram usage:       15 bytes
  5483 ;; Hardware stack levels used:    1
  5484 ;; Hardware stack levels required when called:    2
  5485 ;; This function calls:
  5486 ;;		___flge
  5487 ;;		___flmul
  5488 ;;		___flneg
  5489 ;;		___flsub
  5490 ;;		___fltol
  5491 ;;		___xxtofl
  5492 ;;		_sprintf
  5493 ;; This function is called by:
  5494 ;;		_OLED_Write_Float
  5495 ;; This function uses a non-reentrant model
  5496 ;;
  5497                           
  5498                           
  5499                           ;psect for function _ftoa
  5500  0F47                     _ftoa:	
  5501                           
  5502                           ;incstack = 0
  5503                           ; Regs used in _ftoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5504  0F47  30BA               	movlw	(low (ftoa@buf| 0))& (0+255)
  5505  0F48  0020               	movlb	0	; select bank0
  5506  0F49  00D4               	movwf	??_ftoa
  5507  0F4A  0854               	movf	??_ftoa,w
  5508  0F4B  00DD               	movwf	ftoa@cp
  5509  0F4C  0852               	movf	ftoa@f+3,w
  5510  0F4D  00F3               	movwf	___flge@ff1+3
  5511  0F4E  0851               	movf	ftoa@f+2,w
  5512  0F4F  00F2               	movwf	___flge@ff1+2
  5513  0F50  0850               	movf	ftoa@f+1,w
  5514  0F51  00F1               	movwf	___flge@ff1+1
  5515  0F52  084F               	movf	ftoa@f,w
  5516  0F53  00F0               	movwf	___flge@ff1
  5517  0F54  3000               	movlw	0
  5518  0F55  00F7               	movwf	___flge@ff2+3
  5519  0F56  3000               	movlw	0
  5520  0F57  00F6               	movwf	___flge@ff2+2
  5521  0F58  3000               	movlw	0
  5522  0F59  00F5               	movwf	___flge@ff2+1
  5523  0F5A  3000               	movlw	0
  5524  0F5B  00F4               	movwf	___flge@ff2
  5525  0F5C  318D  2596  318F   	fcall	___flge
  5526  0F5F  1803               	btfsc	3,0
  5527  0F60  2F81               	goto	l2939
  5528  0F61  302D               	movlw	45
  5529  0F62  0020               	movlb	0	; select bank0
  5530  0F63  00D4               	movwf	??_ftoa
  5531  0F64  085D               	movf	ftoa@cp,w
  5532  0F65  0086               	movwf	6
  5533  0F66  0187               	clrf	7
  5534  0F67  0854               	movf	??_ftoa,w
  5535  0F68  0081               	movwf	1
  5536  0F69  3001               	movlw	1
  5537  0F6A  00D4               	movwf	??_ftoa
  5538  0F6B  0854               	movf	??_ftoa,w
  5539  0F6C  07DD               	addwf	ftoa@cp,f
  5540  0F6D  0852               	movf	ftoa@f+3,w
  5541  0F6E  00F3               	movwf	___flneg@f1+3
  5542  0F6F  0851               	movf	ftoa@f+2,w
  5543  0F70  00F2               	movwf	___flneg@f1+2
  5544  0F71  0850               	movf	ftoa@f+1,w
  5545  0F72  00F1               	movwf	___flneg@f1+1
  5546  0F73  084F               	movf	ftoa@f,w
  5547  0F74  00F0               	movwf	___flneg@f1
  5548  0F75  3196  2675  318F   	fcall	___flneg
  5549  0F78  0873               	movf	?___flneg+3,w
  5550  0F79  0020               	movlb	0	; select bank0
  5551  0F7A  00D2               	movwf	ftoa@f+3
  5552  0F7B  0872               	movf	?___flneg+2,w
  5553  0F7C  00D1               	movwf	ftoa@f+2
  5554  0F7D  0871               	movf	?___flneg+1,w
  5555  0F7E  00D0               	movwf	ftoa@f+1
  5556  0F7F  0870               	movf	?___flneg,w
  5557  0F80  00CF               	movwf	ftoa@f
  5558  0F81                     l2939:	
  5559  0F81  0020               	movlb	0	; select bank0
  5560  0F82  0852               	movf	ftoa@f+3,w
  5561  0F83  00FC               	movwf	___fltol@f1+3
  5562  0F84  0851               	movf	ftoa@f+2,w
  5563  0F85  00FB               	movwf	___fltol@f1+2
  5564  0F86  0850               	movf	ftoa@f+1,w
  5565  0F87  00FA               	movwf	___fltol@f1+1
  5566  0F88  084F               	movf	ftoa@f,w
  5567  0F89  00F9               	movwf	___fltol@f1
  5568  0F8A  318D  2530  318F   	fcall	___fltol
  5569  0F8D  087C               	movf	?___fltol+3,w
  5570  0F8E  0020               	movlb	0	; select bank0
  5571  0F8F  00DC               	movwf	ftoa@l+3
  5572  0F90  087B               	movf	?___fltol+2,w
  5573  0F91  00DB               	movwf	ftoa@l+2
  5574  0F92  087A               	movf	?___fltol+1,w
  5575  0F93  00DA               	movwf	ftoa@l+1
  5576  0F94  0879               	movf	?___fltol,w
  5577  0F95  00D9               	movwf	ftoa@l
  5578  0F96  085C               	movf	ftoa@l+3,w
  5579  0F97  00AA               	movwf	___xxtofl@val+3
  5580  0F98  085B               	movf	ftoa@l+2,w
  5581  0F99  00A9               	movwf	___xxtofl@val+2
  5582  0F9A  085A               	movf	ftoa@l+1,w
  5583  0F9B  00A8               	movwf	___xxtofl@val+1
  5584  0F9C  0859               	movf	ftoa@l,w
  5585  0F9D  00A7               	movwf	___xxtofl@val
  5586  0F9E  3000               	movlw	0
  5587  0F9F  318E  2611  318F   	fcall	___xxtofl
  5588  0FA2  0020               	movlb	0	; select bank0
  5589  0FA3  082A               	movf	?___xxtofl+3,w
  5590  0FA4  00B8               	movwf	___flsub@a+3
  5591  0FA5  0829               	movf	?___xxtofl+2,w
  5592  0FA6  00B7               	movwf	___flsub@a+2
  5593  0FA7  0828               	movf	?___xxtofl+1,w
  5594  0FA8  00B6               	movwf	___flsub@a+1
  5595  0FA9  0827               	movf	?___xxtofl,w
  5596  0FAA  00B5               	movwf	___flsub@a
  5597  0FAB  0852               	movf	ftoa@f+3,w
  5598  0FAC  00BC               	movwf	___flsub@b+3
  5599  0FAD  0851               	movf	ftoa@f+2,w
  5600  0FAE  00BB               	movwf	___flsub@b+2
  5601  0FAF  0850               	movf	ftoa@f+1,w
  5602  0FB0  00BA               	movwf	___flsub@b+1
  5603  0FB1  084F               	movf	ftoa@f,w
  5604  0FB2  00B9               	movwf	___flsub@b
  5605  0FB3  3197  2735  318F   	fcall	___flsub
  5606  0FB6  0020               	movlb	0	; select bank0
  5607  0FB7  0838               	movf	?___flsub+3,w
  5608  0FB8  00D2               	movwf	ftoa@f+3
  5609  0FB9  0837               	movf	?___flsub+2,w
  5610  0FBA  00D1               	movwf	ftoa@f+2
  5611  0FBB  0836               	movf	?___flsub+1,w
  5612  0FBC  00D0               	movwf	ftoa@f+1
  5613  0FBD  0835               	movf	?___flsub,w
  5614  0FBE  00CF               	movwf	ftoa@f
  5615  0FBF  0852               	movf	ftoa@f+3,w
  5616  0FC0  00BC               	movwf	___flmul@a+3
  5617  0FC1  0851               	movf	ftoa@f+2,w
  5618  0FC2  00BB               	movwf	___flmul@a+2
  5619  0FC3  0850               	movf	ftoa@f+1,w
  5620  0FC4  00BA               	movwf	___flmul@a+1
  5621  0FC5  084F               	movf	ftoa@f,w
  5622  0FC6  00B9               	movwf	___flmul@a
  5623  0FC7  3049               	movlw	73
  5624  0FC8  00B8               	movwf	___flmul@b+3
  5625  0FC9  3074               	movlw	116
  5626  0FCA  00B7               	movwf	___flmul@b+2
  5627  0FCB  3024               	movlw	36
  5628  0FCC  00B6               	movwf	___flmul@b+1
  5629  0FCD  3000               	movlw	0
  5630  0FCE  00B5               	movwf	___flmul@b
  5631  0FCF  3185  25C7  318F   	fcall	___flmul
  5632  0FD2  0020               	movlb	0	; select bank0
  5633  0FD3  0838               	movf	?___flmul+3,w
  5634  0FD4  00FC               	movwf	___fltol@f1+3
  5635  0FD5  0837               	movf	?___flmul+2,w
  5636  0FD6  00FB               	movwf	___fltol@f1+2
  5637  0FD7  0836               	movf	?___flmul+1,w
  5638  0FD8  00FA               	movwf	___fltol@f1+1
  5639  0FD9  0835               	movf	?___flmul,w
  5640  0FDA  00F9               	movwf	___fltol@f1
  5641  0FDB  318D  2530  318F   	fcall	___fltol
  5642  0FDE  087C               	movf	?___fltol+3,w
  5643  0FDF  0020               	movlb	0	; select bank0
  5644  0FE0  00D8               	movwf	ftoa@rem+3
  5645  0FE1  087B               	movf	?___fltol+2,w
  5646  0FE2  00D7               	movwf	ftoa@rem+2
  5647  0FE3  087A               	movf	?___fltol+1,w
  5648  0FE4  00D6               	movwf	ftoa@rem+1
  5649  0FE5  0879               	movf	?___fltol,w
  5650  0FE6  00D5               	movwf	ftoa@rem
  5651  0FE7  3000               	movlw	low (STR_4| (0+32768))
  5652  0FE8  00AA               	movwf	sprintf@f
  5653  0FE9  308B               	movlw	high (STR_4| (0+32768))
  5654  0FEA  00AB               	movwf	sprintf@f+1
  5655  0FEB  085C               	movf	ftoa@l+3,w
  5656  0FEC  00AF               	movwf	?_sprintf+5
  5657  0FED  085B               	movf	ftoa@l+2,w
  5658  0FEE  00AE               	movwf	?_sprintf+4
  5659  0FEF  085A               	movf	ftoa@l+1,w
  5660  0FF0  00AD               	movwf	?_sprintf+3
  5661  0FF1  0859               	movf	ftoa@l,w
  5662  0FF2  00AC               	movwf	?_sprintf+2
  5663  0FF3  0858               	movf	ftoa@rem+3,w
  5664  0FF4  00B3               	movwf	?_sprintf+9
  5665  0FF5  0857               	movf	ftoa@rem+2,w
  5666  0FF6  00B2               	movwf	?_sprintf+8
  5667  0FF7  0856               	movf	ftoa@rem+1,w
  5668  0FF8  00B1               	movwf	?_sprintf+7
  5669  0FF9  0855               	movf	ftoa@rem,w
  5670  0FFA  00B0               	movwf	?_sprintf+6
  5671  0FFB  085D               	movf	ftoa@cp,w
  5672  0FFC  3182  221A         	fcall	_sprintf
  5673  0FFE  30BA               	movlw	(low (ftoa@buf| 0))& (0+255)
  5674  0FFF  0008               	return
  5675  1000                     __end_of_ftoa:	
  5676                           
  5677                           	psect	text14
  5678  021A                     __ptext14:	
  5679 ;; *************** function _sprintf *****************
  5680 ;; Defined at:
  5681 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  5682 ;; Parameters:    Size  Location     Type
  5683 ;;  sp              1    wreg     PTR unsigned char 
  5684 ;;		 -> ftoa@buf(17), 
  5685 ;;  f               2   10[BANK0 ] PTR const unsigned char 
  5686 ;;		 -> STR_4(11), 
  5687 ;; Auto vars:     Size  Location     Type
  5688 ;;  sp              1   32[BANK0 ] PTR unsigned char 
  5689 ;;		 -> ftoa@buf(17), 
  5690 ;;  val             4   28[BANK0 ] unsigned long 
  5691 ;;  tmpval          4    0        struct .
  5692 ;;  prec            2   35[BANK0 ] int 
  5693 ;;  width           2   33[BANK0 ] int 
  5694 ;;  cp              2    0        PTR const unsigned char 
  5695 ;;  len             2    0        unsigned int 
  5696 ;;  c               1   37[BANK0 ] unsigned char 
  5697 ;;  ap              1   27[BANK0 ] PTR void [1]
  5698 ;;		 -> ?_sprintf(2), 
  5699 ;;  flag            1   26[BANK0 ] unsigned char 
  5700 ;; Return value:  Size  Location     Type
  5701 ;;                  2   10[BANK0 ] int 
  5702 ;; Registers used:
  5703 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5704 ;; Tracked objects:
  5705 ;;		On entry : 0/0
  5706 ;;		On exit  : 0/0
  5707 ;;		Unchanged: 0/0
  5708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5709 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5710 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5711 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5712 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5713 ;;Total ram usage:       28 bytes
  5714 ;; Hardware stack levels used:    1
  5715 ;; Hardware stack levels required when called:    1
  5716 ;; This function calls:
  5717 ;;		___lldiv
  5718 ;;		___llmod
  5719 ;;		___wmul
  5720 ;;		_isdigit
  5721 ;; This function is called by:
  5722 ;;		_ftoa
  5723 ;; This function uses a non-reentrant model
  5724 ;;
  5725                           
  5726                           
  5727                           ;psect for function _sprintf
  5728  021A                     _sprintf:	
  5729                           
  5730                           ;incstack = 0
  5731                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5732                           ;sprintf@sp stored from wreg
  5733  021A  0020               	movlb	0	; select bank0
  5734  021B  00C0               	movwf	sprintf@sp
  5735                           
  5736                           ;doprnt.c: 502: va_list ap;;doprnt.c: 507: char c;;doprnt.c: 509: int width;;doprnt.c: 5
      +                          12: int prec;;doprnt.c: 520: unsigned char flag;;doprnt.c: 535: union {;doprnt.c: 536: u
      +                          nsigned long vd;;doprnt.c: 537: double integ;;doprnt.c: 538: } tmpval;;doprnt.c: 540: un
      +                          signed long val;;doprnt.c: 541: unsigned len;;doprnt.c: 542: const char * cp;;doprnt.c: 
      +                          545: *ap = __va_start();
  5737  021C  302C               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  5738  021D  00B4               	movwf	??_sprintf
  5739  021E  0834               	movf	??_sprintf,w
  5740  021F  00BB               	movwf	sprintf@ap
  5741  0220                     l2559:	
  5742                           ;doprnt.c: 548: while((c = *f++)) {
  5743                           
  5744  0220  082B               	movf	sprintf@f+1,w
  5745  0221  00B5               	movwf	??_sprintf+1
  5746  0222  082A               	movf	sprintf@f,w
  5747  0223  00B4               	movwf	??_sprintf
  5748  0224  0AAA               	incf	sprintf@f,f
  5749  0225  1903               	skipnz
  5750  0226  0AAB               	incf	sprintf@f+1,f
  5751  0227  0834               	movf	??_sprintf,w
  5752  0228  0084               	movwf	4
  5753  0229  0835               	movf	??_sprintf+1,w
  5754  022A  0085               	movwf	5
  5755  022B  0800               	movf	0,w	;code access
  5756  022C  00B6               	movwf	??_sprintf+2
  5757  022D  0836               	movf	??_sprintf+2,w
  5758  022E  00C5               	movwf	sprintf@c
  5759  022F  0845               	movf	sprintf@c,w
  5760  0230  1903               	btfsc	3,2
  5761  0231  2BD9               	goto	l2561
  5762                           
  5763                           ;doprnt.c: 550: if(c != '%')
  5764  0232  3025               	movlw	37
  5765  0233  0645               	xorwf	sprintf@c,w
  5766  0234  1903               	btfsc	3,2
  5767  0235  2A42               	goto	l2471
  5768                           
  5769                           ;doprnt.c: 552: {;doprnt.c: 553: ((*sp++ = (c)));
  5770  0236  0845               	movf	sprintf@c,w
  5771  0237  00B4               	movwf	??_sprintf
  5772  0238  0840               	movf	sprintf@sp,w
  5773  0239  0086               	movwf	6
  5774  023A  0187               	clrf	7
  5775  023B  0834               	movf	??_sprintf,w
  5776  023C  0081               	movwf	1
  5777  023D  3001               	movlw	1
  5778  023E  00B4               	movwf	??_sprintf
  5779  023F  0834               	movf	??_sprintf,w
  5780  0240  07C0               	addwf	sprintf@sp,f
  5781                           
  5782                           ;doprnt.c: 554: continue;
  5783  0241  2A20               	goto	l2559
  5784  0242                     l2471:	
  5785                           
  5786                           ;doprnt.c: 555: };doprnt.c: 558: width = 0;
  5787  0242  01C1               	clrf	sprintf@width
  5788  0243  01C2               	clrf	sprintf@width+1
  5789                           
  5790                           ;doprnt.c: 560: flag = 0;
  5791  0244  01BA               	clrf	sprintf@flag
  5792                           
  5793                           ;doprnt.c: 609: if(isdigit((unsigned)*f)) {
  5794  0245  082A               	movf	sprintf@f,w
  5795  0246  0084               	movwf	4
  5796  0247  082B               	movf	sprintf@f+1,w
  5797  0248  0085               	movwf	5
  5798  0249  0800               	movf	0,w	;code access
  5799  024A  3196  2695  3182   	fcall	_isdigit
  5800  024D  1C03               	btfss	3,0
  5801  024E  2A80               	goto	l2485
  5802                           
  5803                           ;doprnt.c: 610: width = 0;
  5804  024F  0020               	movlb	0	; select bank0
  5805  0250  01C1               	clrf	sprintf@width
  5806  0251  01C2               	clrf	sprintf@width+1
  5807  0252                     l2477:	
  5808                           
  5809                           ;doprnt.c: 612: width *= 10;
  5810  0252  300A               	movlw	10
  5811  0253  00F0               	movwf	___wmul@multiplier
  5812  0254  3000               	movlw	0
  5813  0255  00F1               	movwf	___wmul@multiplier+1
  5814  0256  0020               	movlb	0	; select bank0
  5815  0257  0842               	movf	sprintf@width+1,w
  5816  0258  00F3               	movwf	___wmul@multiplicand+1
  5817  0259  0841               	movf	sprintf@width,w
  5818  025A  00F2               	movwf	___wmul@multiplicand
  5819  025B  3196  26DD  3182   	fcall	___wmul
  5820  025E  0871               	movf	?___wmul+1,w
  5821  025F  0020               	movlb	0	; select bank0
  5822  0260  00C2               	movwf	sprintf@width+1
  5823  0261  0870               	movf	?___wmul,w
  5824  0262  00C1               	movwf	sprintf@width
  5825                           
  5826                           ;doprnt.c: 613: width += *f++ - '0';
  5827  0263  082A               	movf	sprintf@f,w
  5828  0264  0084               	movwf	4
  5829  0265  082B               	movf	sprintf@f+1,w
  5830  0266  0085               	movwf	5
  5831  0267  0800               	movf	0,w	;code access
  5832  0268  3ED0               	addlw	208
  5833  0269  00B4               	movwf	??_sprintf
  5834  026A  30FF               	movlw	255
  5835  026B  1803               	skipnc
  5836  026C  3000               	movlw	0
  5837  026D  00B5               	movwf	??_sprintf+1
  5838  026E  0834               	movf	??_sprintf,w
  5839  026F  07C1               	addwf	sprintf@width,f
  5840  0270  0835               	movf	??_sprintf+1,w
  5841  0271  3DC2               	addwfc	sprintf@width+1,f
  5842  0272  3001               	movlw	1
  5843  0273  07AA               	addwf	sprintf@f,f
  5844  0274  3000               	movlw	0
  5845  0275  3DAB               	addwfc	sprintf@f+1,f
  5846                           
  5847                           ;doprnt.c: 614: } while(isdigit((unsigned)*f));
  5848  0276  082A               	movf	sprintf@f,w
  5849  0277  0084               	movwf	4
  5850  0278  082B               	movf	sprintf@f+1,w
  5851  0279  0085               	movwf	5
  5852  027A  0800               	movf	0,w	;code access
  5853  027B  3196  2695  3182   	fcall	_isdigit
  5854  027E  1803               	btfsc	3,0
  5855  027F  2A52               	goto	l2477
  5856  0280                     l2485:	
  5857                           
  5858                           ;doprnt.c: 620: };doprnt.c: 623: if(*f == '.') {
  5859  0280  0020               	movlb	0	; select bank0
  5860  0281  082A               	movf	sprintf@f,w
  5861  0282  0084               	movwf	4
  5862  0283  082B               	movf	sprintf@f+1,w
  5863  0284  0085               	movwf	5
  5864  0285  0012               	moviw fsr0++
  5865  0286  3A2E               	xorlw	46
  5866  0287  1D03               	btfss	3,2
  5867  0288  2ABE               	goto	l2497
  5868                           
  5869                           ;doprnt.c: 625: f++;
  5870  0289  3001               	movlw	1
  5871  028A  07AA               	addwf	sprintf@f,f
  5872  028B  3000               	movlw	0
  5873  028C  3DAB               	addwfc	sprintf@f+1,f
  5874                           
  5875                           ;doprnt.c: 639: {;doprnt.c: 640: prec = 0;
  5876  028D  01C3               	clrf	sprintf@prec
  5877  028E  01C4               	clrf	sprintf@prec+1
  5878  028F                     l2495:	
  5879                           ;doprnt.c: 641: while(isdigit((unsigned)*f))
  5880                           
  5881  028F  082A               	movf	sprintf@f,w
  5882  0290  0084               	movwf	4
  5883  0291  082B               	movf	sprintf@f+1,w
  5884  0292  0085               	movwf	5
  5885  0293  0800               	movf	0,w	;code access
  5886  0294  3196  2695  3182   	fcall	_isdigit
  5887  0297  1C03               	btfss	3,0
  5888  0298  2AC8               	goto	l2503
  5889                           
  5890                           ;doprnt.c: 642: prec = prec*10 + *f++ - '0';
  5891  0299  0020               	movlb	0	; select bank0
  5892  029A  082A               	movf	sprintf@f,w
  5893  029B  0084               	movwf	4
  5894  029C  082B               	movf	sprintf@f+1,w
  5895  029D  0085               	movwf	5
  5896  029E  0800               	movf	0,w	;code access
  5897  029F  00B4               	movwf	??_sprintf
  5898  02A0  01B5               	clrf	??_sprintf+1
  5899  02A1  0844               	movf	sprintf@prec+1,w
  5900  02A2  00F1               	movwf	___wmul@multiplier+1
  5901  02A3  0843               	movf	sprintf@prec,w
  5902  02A4  00F0               	movwf	___wmul@multiplier
  5903  02A5  300A               	movlw	10
  5904  02A6  00F2               	movwf	___wmul@multiplicand
  5905  02A7  3000               	movlw	0
  5906  02A8  00F3               	movwf	___wmul@multiplicand+1
  5907  02A9  3196  26DD  3182   	fcall	___wmul
  5908  02AC  0020               	movlb	0	; select bank0
  5909  02AD  0834               	movf	??_sprintf,w
  5910  02AE  0770               	addwf	?___wmul,w
  5911  02AF  00B6               	movwf	??_sprintf+2
  5912  02B0  0835               	movf	??_sprintf+1,w
  5913  02B1  3D71               	addwfc	?___wmul+1,w
  5914  02B2  00B7               	movwf	??_sprintf+3
  5915  02B3  0836               	movf	??_sprintf+2,w
  5916  02B4  3ED0               	addlw	208
  5917  02B5  00C3               	movwf	sprintf@prec
  5918  02B6  30FF               	movlw	255
  5919  02B7  3D37               	addwfc	??_sprintf+3,w
  5920  02B8  00C4               	movwf	sprintf@prec+1
  5921  02B9  3001               	movlw	1
  5922  02BA  07AA               	addwf	sprintf@f,f
  5923  02BB  3000               	movlw	0
  5924  02BC  3DAB               	addwfc	sprintf@f+1,f
  5925  02BD  2A8F               	goto	l2495
  5926  02BE                     l2497:	
  5927                           
  5928                           ;doprnt.c: 645: prec = 0;
  5929  02BE  01C3               	clrf	sprintf@prec
  5930  02BF  01C4               	clrf	sprintf@prec+1
  5931  02C0  2AC8               	goto	l2503
  5932  02C1                     l413:	
  5933                           ;doprnt.c: 660: case 'l':
  5934                           
  5935                           
  5936                           ;doprnt.c: 662: flag |= 0x10;
  5937  02C1  163A               	bsf	sprintf@flag,4
  5938                           
  5939                           ;doprnt.c: 663: goto loop;
  5940  02C2  2AC8               	goto	l2503
  5941  02C3                     l2499:	
  5942                           
  5943                           ;doprnt.c: 837: flag |= 0xC0;
  5944  02C3  30C0               	movlw	192
  5945  02C4  00B4               	movwf	??_sprintf
  5946  02C5  0834               	movf	??_sprintf,w
  5947  02C6  04BA               	iorwf	sprintf@flag,f
  5948                           
  5949                           ;doprnt.c: 838: break;
  5950  02C7  2AE0               	goto	l416
  5951  02C8                     l2503:	
  5952  02C8  0020               	movlb	0	; select bank0
  5953  02C9  082B               	movf	sprintf@f+1,w
  5954  02CA  00B5               	movwf	??_sprintf+1
  5955  02CB  082A               	movf	sprintf@f,w
  5956  02CC  00B4               	movwf	??_sprintf
  5957  02CD  0AAA               	incf	sprintf@f,f
  5958  02CE  1903               	skipnz
  5959  02CF  0AAB               	incf	sprintf@f+1,f
  5960  02D0  0834               	movf	??_sprintf,w
  5961  02D1  0084               	movwf	4
  5962  02D2  0835               	movf	??_sprintf+1,w
  5963  02D3  0085               	movwf	5
  5964  02D4  0800               	movf	0,w	;code access
  5965  02D5  00C5               	movwf	sprintf@c
  5966                           
  5967                           ; Switch size 1, requested type "simple"
  5968                           ; Number of cases is 3, Range of values is 0 to 117
  5969                           ; switch strategies available:
  5970                           ; Name         Instructions Cycles
  5971                           ; simple_byte           10     6 (average)
  5972                           ; direct_byte          242     6 (fixed)
  5973                           ; jumptable            260     6 (fixed)
  5974                           ;	Chosen strategy is simple_byte
  5975  02D6  3A00               	xorlw	0	; case 0
  5976  02D7  1903               	skipnz
  5977  02D8  2BD9               	goto	l2561
  5978  02D9  3A6C               	xorlw	108	; case 108
  5979  02DA  1903               	skipnz
  5980  02DB  2AC1               	goto	l413
  5981  02DC  3A19               	xorlw	25	; case 117
  5982  02DD  1903               	skipnz
  5983  02DE  2AC3               	goto	l2499
  5984  02DF  2A20               	goto	l2559
  5985  02E0                     l416:	
  5986                           
  5987                           ;doprnt.c: 1292: {;doprnt.c: 1300: if(flag & 0x10)
  5988  02E0  1E3A               	btfss	sprintf@flag,4
  5989  02E1  2AEF               	goto	l2509
  5990                           
  5991                           ;doprnt.c: 1301: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  5992  02E2  083B               	movf	sprintf@ap,w
  5993  02E3  0086               	movwf	6
  5994  02E4  0187               	clrf	7
  5995  02E5  3F40               	moviw [0]fsr1
  5996  02E6  00BC               	movwf	sprintf@val
  5997  02E7  3F41               	moviw [1]fsr1
  5998  02E8  00BD               	movwf	sprintf@val+1
  5999  02E9  3F42               	moviw [2]fsr1
  6000  02EA  00BE               	movwf	sprintf@val+2
  6001  02EB  3F43               	moviw [3]fsr1
  6002  02EC  00BF               	movwf	sprintf@val+3
  6003  02ED  3004               	movlw	4
  6004  02EE  2AFD               	goto	L1
  6005  02EF                     l2509:	
  6006                           
  6007                           ;doprnt.c: 1302: else;doprnt.c: 1305: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (
      +                          unsigned)0));
  6008  02EF  083B               	movf	sprintf@ap,w
  6009  02F0  0086               	movwf	6
  6010  02F1  0187               	clrf	7
  6011  02F2  3F40               	moviw [0]fsr1
  6012  02F3  00B4               	movwf	??_sprintf
  6013  02F4  3F41               	moviw [1]fsr1
  6014  02F5  00B5               	movwf	??_sprintf+1
  6015  02F6  0834               	movf	??_sprintf,w
  6016  02F7  00BC               	movwf	sprintf@val
  6017  02F8  0835               	movf	??_sprintf+1,w
  6018  02F9  00BD               	movwf	sprintf@val+1
  6019  02FA  01BE               	clrf	sprintf@val+2
  6020  02FB  01BF               	clrf	sprintf@val+3
  6021  02FC  3002               	movlw	2
  6022  02FD                     L1:	
  6023  02FD  00B4               	movwf	??_sprintf
  6024  02FE  0834               	movf	??_sprintf,w
  6025  02FF  07BB               	addwf	sprintf@ap,f
  6026                           
  6027                           ;doprnt.c: 1306: };doprnt.c: 1309: if(prec == 0 && val == 0)
  6028  0300  0843               	movf	sprintf@prec,w
  6029  0301  0444               	iorwf	sprintf@prec+1,w
  6030  0302  1D03               	btfss	3,2
  6031  0303  2B0E               	goto	l2519
  6032  0304  083F               	movf	sprintf@val+3,w
  6033  0305  043E               	iorwf	sprintf@val+2,w
  6034  0306  043D               	iorwf	sprintf@val+1,w
  6035  0307  043C               	iorwf	sprintf@val,w
  6036  0308  1D03               	skipz
  6037  0309  2B0E               	goto	l2519
  6038                           
  6039                           ;doprnt.c: 1310: prec++;
  6040  030A  3001               	movlw	1
  6041  030B  07C3               	addwf	sprintf@prec,f
  6042  030C  3000               	movlw	0
  6043  030D  3DC4               	addwfc	sprintf@prec+1,f
  6044  030E                     l2519:	
  6045                           
  6046                           ;doprnt.c: 1324: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  6047  030E  01C5               	clrf	sprintf@c
  6048  030F  0AC5               	incf	sprintf@c,f
  6049  0310                     l2525:	
  6050                           
  6051                           ;doprnt.c: 1325: if(val < dpowers[c])
  6052  0310  0845               	movf	sprintf@c,w
  6053  0311  00B4               	movwf	??_sprintf
  6054  0312  01B5               	clrf	??_sprintf+1
  6055  0313  35B4               	lslf	??_sprintf,f
  6056  0314  0DB5               	rlf	??_sprintf+1,f
  6057  0315  35B4               	lslf	??_sprintf,f
  6058  0316  0DB5               	rlf	??_sprintf+1,f
  6059  0317  3000               	movlw	low (_dpowers| (0+32768))
  6060  0318  0734               	addwf	??_sprintf,w
  6061  0319  0084               	movwf	4
  6062  031A  3098               	movlw	high (_dpowers| (0+32768))
  6063  031B  3D35               	addwfc	??_sprintf+1,w
  6064  031C  0085               	movwf	5
  6065  031D  3F00               	moviw [0]fsr0
  6066  031E  00B6               	movwf	??_sprintf+2
  6067  031F  3F01               	moviw [1]fsr0
  6068  0320  00B7               	movwf	??_sprintf+3
  6069  0321  3F02               	moviw [2]fsr0
  6070  0322  00B8               	movwf	??_sprintf+4
  6071  0323  3F03               	moviw [3]fsr0
  6072  0324  00B9               	movwf	??_sprintf+5
  6073  0325  0839               	movf	??_sprintf+5,w
  6074  0326  023F               	subwf	sprintf@val+3,w
  6075  0327  1D03               	skipz
  6076  0328  2B33               	goto	u2625
  6077  0329  0838               	movf	??_sprintf+4,w
  6078  032A  023E               	subwf	sprintf@val+2,w
  6079  032B  1D03               	skipz
  6080  032C  2B33               	goto	u2625
  6081  032D  0837               	movf	??_sprintf+3,w
  6082  032E  023D               	subwf	sprintf@val+1,w
  6083  032F  1D03               	skipz
  6084  0330  2B33               	goto	u2625
  6085  0331  0836               	movf	??_sprintf+2,w
  6086  0332  023C               	subwf	sprintf@val,w
  6087  0333                     u2625:	
  6088  0333  1C03               	btfss	3,0
  6089  0334  2B3D               	goto	l2531
  6090  0335  3001               	movlw	1
  6091  0336  00B4               	movwf	??_sprintf
  6092  0337  0834               	movf	??_sprintf,w
  6093  0338  07C5               	addwf	sprintf@c,f
  6094  0339  300A               	movlw	10
  6095  033A  0645               	xorwf	sprintf@c,w
  6096  033B  1D03               	btfss	3,2
  6097  033C  2B10               	goto	l2525
  6098  033D                     l2531:	
  6099                           
  6100                           ;doprnt.c: 1358: if(c < prec)
  6101  033D  0844               	movf	sprintf@prec+1,w
  6102  033E  3A80               	xorlw	128
  6103  033F  3C80               	sublw	128
  6104  0340  1D03               	skipz
  6105  0341  2B44               	goto	u2645
  6106  0342  0843               	movf	sprintf@prec,w
  6107  0343  0245               	subwf	sprintf@c,w
  6108  0344                     u2645:	
  6109  0344  1803               	skipnc
  6110  0345  2B4C               	goto	l2535
  6111                           
  6112                           ;doprnt.c: 1359: c = prec;
  6113  0346  0020               	movlb	0	; select bank0
  6114  0347  0843               	movf	sprintf@prec,w
  6115  0348  00B4               	movwf	??_sprintf
  6116  0349  0834               	movf	??_sprintf,w
  6117  034A  00C5               	movwf	sprintf@c
  6118  034B  2B60               	goto	l424
  6119  034C                     l2535:	
  6120                           
  6121                           ;doprnt.c: 1360: else if(prec < c)
  6122  034C  0020               	movlb	0	; select bank0
  6123  034D  0844               	movf	sprintf@prec+1,w
  6124  034E  3A80               	xorlw	128
  6125  034F  00B4               	movwf	??_sprintf
  6126  0350  3080               	movlw	128
  6127  0351  0234               	subwf	??_sprintf,w
  6128  0352  1D03               	skipz
  6129  0353  2B56               	goto	u2655
  6130  0354  0845               	movf	sprintf@c,w
  6131  0355  0243               	subwf	sprintf@prec,w
  6132  0356                     u2655:	
  6133  0356  1803               	skipnc
  6134  0357  2B60               	goto	l424
  6135                           
  6136                           ;doprnt.c: 1361: prec = c;
  6137  0358  0020               	movlb	0	; select bank0
  6138  0359  0845               	movf	sprintf@c,w
  6139  035A  00B4               	movwf	??_sprintf
  6140  035B  01B5               	clrf	??_sprintf+1
  6141  035C  0834               	movf	??_sprintf,w
  6142  035D  00C3               	movwf	sprintf@prec
  6143  035E  0835               	movf	??_sprintf+1,w
  6144  035F  00C4               	movwf	sprintf@prec+1
  6145  0360                     l424:	
  6146                           
  6147                           ;doprnt.c: 1400: if(width > c)
  6148  0360  0020               	movlb	0	; select bank0
  6149  0361  0842               	movf	sprintf@width+1,w
  6150  0362  3A80               	xorlw	128
  6151  0363  3C80               	sublw	128
  6152  0364  1D03               	skipz
  6153  0365  2B68               	goto	u2665
  6154  0366  0841               	movf	sprintf@width,w
  6155  0367  0245               	subwf	sprintf@c,w
  6156  0368                     u2665:	
  6157  0368  1803               	skipnc
  6158  0369  2B73               	goto	l2541
  6159                           
  6160                           ;doprnt.c: 1401: width -= c;
  6161  036A  0020               	movlb	0	; select bank0
  6162  036B  0845               	movf	sprintf@c,w
  6163  036C  00B4               	movwf	??_sprintf
  6164  036D  01B5               	clrf	??_sprintf+1
  6165  036E  0834               	movf	??_sprintf,w
  6166  036F  02C1               	subwf	sprintf@width,f
  6167  0370  0835               	movf	??_sprintf+1,w
  6168  0371  3BC2               	subwfb	sprintf@width+1,f
  6169  0372  2B76               	goto	l2543
  6170  0373                     l2541:	
  6171                           
  6172                           ;doprnt.c: 1402: else;doprnt.c: 1403: width = 0;
  6173  0373  0020               	movlb	0	; select bank0
  6174  0374  01C1               	clrf	sprintf@width
  6175  0375  01C2               	clrf	sprintf@width+1
  6176  0376                     l2543:	
  6177                           
  6178                           ;doprnt.c: 1441: {;doprnt.c: 1443: if(width;doprnt.c: 1447: )
  6179  0376  0841               	movf	sprintf@width,w
  6180  0377  0442               	iorwf	sprintf@width+1,w
  6181  0378  1903               	btfsc	3,2
  6182  0379  2BCE               	goto	l2557
  6183                           
  6184                           ;doprnt.c: 1449: ((*sp++ = (' ')));
  6185  037A  3020               	movlw	32
  6186  037B  00B4               	movwf	??_sprintf
  6187  037C  0840               	movf	sprintf@sp,w
  6188  037D  0086               	movwf	6
  6189  037E  0187               	clrf	7
  6190  037F  0834               	movf	??_sprintf,w
  6191  0380  0081               	movwf	1
  6192  0381  3001               	movlw	1
  6193  0382  00B4               	movwf	??_sprintf
  6194  0383  0834               	movf	??_sprintf,w
  6195  0384  07C0               	addwf	sprintf@sp,f
  6196                           
  6197                           ;doprnt.c: 1450: while(--width);
  6198  0385  30FF               	movlw	255
  6199  0386  07C1               	addwf	sprintf@width,f
  6200  0387  30FF               	movlw	255
  6201  0388  3DC2               	addwfc	sprintf@width+1,f
  6202  0389  2B76               	goto	l2543
  6203  038A                     l2551:	
  6204                           
  6205                           ;doprnt.c: 1497: {;doprnt.c: 1508: c = (val / dpowers[prec]) % 10 + '0';
  6206  038A  3000               	movlw	0
  6207  038B  00A3               	movwf	___llmod@divisor+3
  6208  038C  3000               	movlw	0
  6209  038D  00A2               	movwf	___llmod@divisor+2
  6210  038E  3000               	movlw	0
  6211  038F  00A1               	movwf	___llmod@divisor+1
  6212  0390  300A               	movlw	10
  6213  0391  00A0               	movwf	___llmod@divisor
  6214  0392  0844               	movf	sprintf@prec+1,w
  6215  0393  0085               	movwf	5
  6216  0394  0843               	movf	sprintf@prec,w
  6217  0395  0084               	movwf	4
  6218  0396  3584               	lslf	4,f
  6219  0397  0D85               	rlf	5,f
  6220  0398  3584               	lslf	4,f
  6221  0399  0D85               	rlf	5,f
  6222  039A  3000               	movlw	low (_dpowers| (0+32768))
  6223  039B  0784               	addwf	4,f
  6224  039C  3098               	movlw	high (_dpowers| (0+32768))
  6225  039D  3D85               	addwfc	5,f
  6226  039E  3F00               	moviw [0]fsr0
  6227  039F  00F0               	movwf	___lldiv@divisor
  6228  03A0  3F01               	moviw [1]fsr0
  6229  03A1  00F1               	movwf	___lldiv@divisor+1
  6230  03A2  3F02               	moviw [2]fsr0
  6231  03A3  00F2               	movwf	___lldiv@divisor+2
  6232  03A4  3F03               	moviw [3]fsr0
  6233  03A5  00F3               	movwf	___lldiv@divisor+3
  6234  03A6  083F               	movf	sprintf@val+3,w
  6235  03A7  00F7               	movwf	___lldiv@dividend+3
  6236  03A8  083E               	movf	sprintf@val+2,w
  6237  03A9  00F6               	movwf	___lldiv@dividend+2
  6238  03AA  083D               	movf	sprintf@val+1,w
  6239  03AB  00F5               	movwf	___lldiv@dividend+1
  6240  03AC  083C               	movf	sprintf@val,w
  6241  03AD  00F4               	movwf	___lldiv@dividend
  6242  03AE  318C  2415  3182   	fcall	___lldiv
  6243  03B1  0873               	movf	?___lldiv+3,w
  6244  03B2  0020               	movlb	0	; select bank0
  6245  03B3  00A7               	movwf	___llmod@dividend+3
  6246  03B4  0872               	movf	?___lldiv+2,w
  6247  03B5  00A6               	movwf	___llmod@dividend+2
  6248  03B6  0871               	movf	?___lldiv+1,w
  6249  03B7  00A5               	movwf	___llmod@dividend+1
  6250  03B8  0870               	movf	?___lldiv,w
  6251  03B9  00A4               	movwf	___llmod@dividend
  6252  03BA  318B  2342  3182   	fcall	___llmod
  6253  03BD  0020               	movlb	0	; select bank0
  6254  03BE  0820               	movf	?___llmod,w
  6255  03BF  3E30               	addlw	48
  6256  03C0  00B4               	movwf	??_sprintf
  6257  03C1  0834               	movf	??_sprintf,w
  6258  03C2  00C5               	movwf	sprintf@c
  6259                           
  6260                           ;doprnt.c: 1542: };doprnt.c: 1543: ((*sp++ = (c)));
  6261  03C3  0845               	movf	sprintf@c,w
  6262  03C4  00B4               	movwf	??_sprintf
  6263  03C5  0840               	movf	sprintf@sp,w
  6264  03C6  0086               	movwf	6
  6265  03C7  0187               	clrf	7
  6266  03C8  0834               	movf	??_sprintf,w
  6267  03C9  0081               	movwf	1
  6268  03CA  3001               	movlw	1
  6269  03CB  00B4               	movwf	??_sprintf
  6270  03CC  0834               	movf	??_sprintf,w
  6271  03CD  07C0               	addwf	sprintf@sp,f
  6272  03CE                     l2557:	
  6273  03CE  30FF               	movlw	255
  6274  03CF  07C3               	addwf	sprintf@prec,f
  6275  03D0  30FF               	movlw	255
  6276  03D1  3DC4               	addwfc	sprintf@prec+1,f
  6277  03D2  0A43               	incf	sprintf@prec,w
  6278  03D3  1D03               	skipz
  6279  03D4  2B8A               	goto	l2551
  6280  03D5  0A44               	incf	sprintf@prec+1,w
  6281  03D6  1903               	btfsc	3,2
  6282  03D7  2A20               	goto	l2559
  6283  03D8  2B8A               	goto	l2551
  6284  03D9                     l2561:	
  6285                           
  6286                           ;doprnt.c: 1557: *sp = 0;
  6287  03D9  0840               	movf	sprintf@sp,w
  6288  03DA  0086               	movwf	6
  6289  03DB  0187               	clrf	7
  6290  03DC  0181               	clrf	1
  6291  03DD  0008               	return
  6292  03DE                     __end_of_sprintf:	
  6293                           
  6294                           	psect	text15
  6295  1695                     __ptext15:	
  6296 ;; *************** function _isdigit *****************
  6297 ;; Defined at:
  6298 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\isdigit.c"
  6299 ;; Parameters:    Size  Location     Type
  6300 ;;  c               1    wreg     unsigned char 
  6301 ;; Auto vars:     Size  Location     Type
  6302 ;;  c               1    1[COMMON] unsigned char 
  6303 ;; Return value:  Size  Location     Type
  6304 ;;		None               void
  6305 ;; Registers used:
  6306 ;;		wreg, status,2, status,0
  6307 ;; Tracked objects:
  6308 ;;		On entry : 0/0
  6309 ;;		On exit  : 0/0
  6310 ;;		Unchanged: 0/0
  6311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6313 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6315 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6316 ;;Total ram usage:        2 bytes
  6317 ;; Hardware stack levels used:    1
  6318 ;; This function calls:
  6319 ;;		Nothing
  6320 ;; This function is called by:
  6321 ;;		_sprintf
  6322 ;; This function uses a non-reentrant model
  6323 ;;
  6324                           
  6325                           
  6326                           ;psect for function _isdigit
  6327  1695                     _isdigit:	
  6328                           
  6329                           ;incstack = 0
  6330                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  6331                           ;isdigit@c stored from wreg
  6332  1695  00F1               	movwf	isdigit@c
  6333  1696  01F0               	clrf	_isdigit$1072
  6334  1697  303A               	movlw	58
  6335  1698  0271               	subwf	isdigit@c,w
  6336  1699  1803               	skipnc
  6337  169A  2EA1               	goto	l2139
  6338  169B  3030               	movlw	48
  6339  169C  0271               	subwf	isdigit@c,w
  6340  169D  1C03               	skipc
  6341  169E  2EA1               	goto	l2139
  6342  169F  01F0               	clrf	_isdigit$1072
  6343  16A0  0AF0               	incf	_isdigit$1072,f
  6344  16A1                     l2139:	
  6345  16A1  0C70               	rrf	_isdigit$1072,w
  6346  16A2  0008               	return
  6347  16A3                     __end_of_isdigit:	
  6348                           
  6349                           	psect	text16
  6350  16DD                     __ptext16:	
  6351 ;; *************** function ___wmul *****************
  6352 ;; Defined at:
  6353 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
  6354 ;; Parameters:    Size  Location     Type
  6355 ;;  multiplier      2    0[COMMON] unsigned int 
  6356 ;;  multiplicand    2    2[COMMON] unsigned int 
  6357 ;; Auto vars:     Size  Location     Type
  6358 ;;  product         2    4[COMMON] unsigned int 
  6359 ;; Return value:  Size  Location     Type
  6360 ;;                  2    0[COMMON] unsigned int 
  6361 ;; Registers used:
  6362 ;;		wreg, status,2, status,0
  6363 ;; Tracked objects:
  6364 ;;		On entry : 0/0
  6365 ;;		On exit  : 0/0
  6366 ;;		Unchanged: 0/0
  6367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6368 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6369 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6371 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6372 ;;Total ram usage:        6 bytes
  6373 ;; Hardware stack levels used:    1
  6374 ;; This function calls:
  6375 ;;		Nothing
  6376 ;; This function is called by:
  6377 ;;		_sprintf
  6378 ;; This function uses a non-reentrant model
  6379 ;;
  6380                           
  6381                           
  6382                           ;psect for function ___wmul
  6383  16DD                     ___wmul:	
  6384                           
  6385                           ;incstack = 0
  6386                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6387  16DD  01F4               	clrf	___wmul@product
  6388  16DE  01F5               	clrf	___wmul@product+1
  6389  16DF                     l2145:	
  6390  16DF  1C70               	btfss	___wmul@multiplier,0
  6391  16E0  2EE5               	goto	l439
  6392  16E1  0872               	movf	___wmul@multiplicand,w
  6393  16E2  07F4               	addwf	___wmul@product,f
  6394  16E3  0873               	movf	___wmul@multiplicand+1,w
  6395  16E4  3DF5               	addwfc	___wmul@product+1,f
  6396  16E5                     l439:	
  6397  16E5  3001               	movlw	1
  6398  16E6                     u1865:	
  6399  16E6  35F2               	lslf	___wmul@multiplicand,f
  6400  16E7  0DF3               	rlf	___wmul@multiplicand+1,f
  6401  16E8  0B89               	decfsz	9,f
  6402  16E9  2EE6               	goto	u1865
  6403  16EA  3001               	movlw	1
  6404  16EB                     u1875:	
  6405  16EB  36F1               	lsrf	___wmul@multiplier+1,f
  6406  16EC  0CF0               	rrf	___wmul@multiplier,f
  6407  16ED  0B89               	decfsz	9,f
  6408  16EE  2EEB               	goto	u1875
  6409  16EF  0870               	movf	___wmul@multiplier,w
  6410  16F0  0471               	iorwf	___wmul@multiplier+1,w
  6411  16F1  1D03               	btfss	3,2
  6412  16F2  2EDF               	goto	l2145
  6413  16F3  0875               	movf	___wmul@product+1,w
  6414  16F4  00F1               	movwf	?___wmul+1
  6415  16F5  0874               	movf	___wmul@product,w
  6416  16F6  00F0               	movwf	?___wmul
  6417  16F7  0008               	return
  6418  16F8                     __end_of___wmul:	
  6419                           
  6420                           	psect	text17
  6421  0B42                     __ptext17:	
  6422 ;; *************** function ___llmod *****************
  6423 ;; Defined at:
  6424 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\llmod.c"
  6425 ;; Parameters:    Size  Location     Type
  6426 ;;  divisor         4    0[BANK0 ] unsigned long 
  6427 ;;  dividend        4    4[BANK0 ] unsigned long 
  6428 ;; Auto vars:     Size  Location     Type
  6429 ;;  counter         1    9[BANK0 ] unsigned char 
  6430 ;; Return value:  Size  Location     Type
  6431 ;;                  4    0[BANK0 ] unsigned long 
  6432 ;; Registers used:
  6433 ;;		wreg, status,2, status,0
  6434 ;; Tracked objects:
  6435 ;;		On entry : 0/0
  6436 ;;		On exit  : 0/0
  6437 ;;		Unchanged: 0/0
  6438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6439 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6440 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6441 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6442 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6443 ;;Total ram usage:       10 bytes
  6444 ;; Hardware stack levels used:    1
  6445 ;; This function calls:
  6446 ;;		Nothing
  6447 ;; This function is called by:
  6448 ;;		_sprintf
  6449 ;; This function uses a non-reentrant model
  6450 ;;
  6451                           
  6452                           
  6453                           ;psect for function ___llmod
  6454  0B42                     ___llmod:	
  6455                           
  6456                           ;incstack = 0
  6457                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6458  0B42  0020               	movlb	0	; select bank0
  6459  0B43  0823               	movf	___llmod@divisor+3,w
  6460  0B44  0422               	iorwf	___llmod@divisor+2,w
  6461  0B45  0421               	iorwf	___llmod@divisor+1,w
  6462  0B46  0420               	iorwf	___llmod@divisor,w
  6463  0B47  1903               	skipnz
  6464  0B48  2B7C               	goto	l2209
  6465  0B49  01A9               	clrf	___llmod@counter
  6466  0B4A  0AA9               	incf	___llmod@counter,f
  6467  0B4B                     l2199:	
  6468  0B4B  1BA3               	btfsc	___llmod@divisor+3,7
  6469  0B4C  2B59               	goto	l2201
  6470  0B4D  3001               	movlw	1
  6471  0B4E                     u2005:	
  6472  0B4E  35A0               	lslf	___llmod@divisor,f
  6473  0B4F  0DA1               	rlf	___llmod@divisor+1,f
  6474  0B50  0DA2               	rlf	___llmod@divisor+2,f
  6475  0B51  0DA3               	rlf	___llmod@divisor+3,f
  6476  0B52  0B89               	decfsz	9,f
  6477  0B53  2B4E               	goto	u2005
  6478  0B54  3001               	movlw	1
  6479  0B55  00A8               	movwf	??___llmod
  6480  0B56  0828               	movf	??___llmod,w
  6481  0B57  07A9               	addwf	___llmod@counter,f
  6482  0B58  2B4B               	goto	l2199
  6483  0B59                     l2201:	
  6484  0B59  0823               	movf	___llmod@divisor+3,w
  6485  0B5A  0227               	subwf	___llmod@dividend+3,w
  6486  0B5B  1D03               	skipz
  6487  0B5C  2B67               	goto	u2025
  6488  0B5D  0822               	movf	___llmod@divisor+2,w
  6489  0B5E  0226               	subwf	___llmod@dividend+2,w
  6490  0B5F  1D03               	skipz
  6491  0B60  2B67               	goto	u2025
  6492  0B61  0821               	movf	___llmod@divisor+1,w
  6493  0B62  0225               	subwf	___llmod@dividend+1,w
  6494  0B63  1D03               	skipz
  6495  0B64  2B67               	goto	u2025
  6496  0B65  0820               	movf	___llmod@divisor,w
  6497  0B66  0224               	subwf	___llmod@dividend,w
  6498  0B67                     u2025:	
  6499  0B67  1C03               	skipc
  6500  0B68  2B71               	goto	l2205
  6501  0B69  0820               	movf	___llmod@divisor,w
  6502  0B6A  02A4               	subwf	___llmod@dividend,f
  6503  0B6B  0821               	movf	___llmod@divisor+1,w
  6504  0B6C  3BA5               	subwfb	___llmod@dividend+1,f
  6505  0B6D  0822               	movf	___llmod@divisor+2,w
  6506  0B6E  3BA6               	subwfb	___llmod@dividend+2,f
  6507  0B6F  0823               	movf	___llmod@divisor+3,w
  6508  0B70  3BA7               	subwfb	___llmod@dividend+3,f
  6509  0B71                     l2205:	
  6510  0B71  3001               	movlw	1
  6511  0B72                     u2035:	
  6512  0B72  36A3               	lsrf	___llmod@divisor+3,f
  6513  0B73  0CA2               	rrf	___llmod@divisor+2,f
  6514  0B74  0CA1               	rrf	___llmod@divisor+1,f
  6515  0B75  0CA0               	rrf	___llmod@divisor,f
  6516  0B76  0B89               	decfsz	9,f
  6517  0B77  2B72               	goto	u2035
  6518  0B78  3001               	movlw	1
  6519  0B79  02A9               	subwf	___llmod@counter,f
  6520  0B7A  1D03               	btfss	3,2
  6521  0B7B  2B59               	goto	l2201
  6522  0B7C                     l2209:	
  6523  0B7C  0827               	movf	___llmod@dividend+3,w
  6524  0B7D  00A3               	movwf	?___llmod+3
  6525  0B7E  0826               	movf	___llmod@dividend+2,w
  6526  0B7F  00A2               	movwf	?___llmod+2
  6527  0B80  0825               	movf	___llmod@dividend+1,w
  6528  0B81  00A1               	movwf	?___llmod+1
  6529  0B82  0824               	movf	___llmod@dividend,w
  6530  0B83  00A0               	movwf	?___llmod
  6531  0B84  0008               	return
  6532  0B85                     __end_of___llmod:	
  6533                           
  6534                           	psect	text18
  6535  0C15                     __ptext18:	
  6536 ;; *************** function ___lldiv *****************
  6537 ;; Defined at:
  6538 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
  6539 ;; Parameters:    Size  Location     Type
  6540 ;;  divisor         4    0[COMMON] unsigned long 
  6541 ;;  dividend        4    4[COMMON] unsigned long 
  6542 ;; Auto vars:     Size  Location     Type
  6543 ;;  quotient        4    9[COMMON] unsigned long 
  6544 ;;  counter         1   13[COMMON] unsigned char 
  6545 ;; Return value:  Size  Location     Type
  6546 ;;                  4    0[COMMON] unsigned long 
  6547 ;; Registers used:
  6548 ;;		wreg, status,2, status,0
  6549 ;; Tracked objects:
  6550 ;;		On entry : 0/0
  6551 ;;		On exit  : 0/0
  6552 ;;		Unchanged: 0/0
  6553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6554 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6555 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6556 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6557 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6558 ;;Total ram usage:       14 bytes
  6559 ;; Hardware stack levels used:    1
  6560 ;; This function calls:
  6561 ;;		Nothing
  6562 ;; This function is called by:
  6563 ;;		_sprintf
  6564 ;; This function uses a non-reentrant model
  6565 ;;
  6566                           
  6567                           
  6568                           ;psect for function ___lldiv
  6569  0C15                     ___lldiv:	
  6570                           
  6571                           ;incstack = 0
  6572                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6573  0C15  3000               	movlw	0
  6574  0C16  00FC               	movwf	___lldiv@quotient+3
  6575  0C17  3000               	movlw	0
  6576  0C18  00FB               	movwf	___lldiv@quotient+2
  6577  0C19  3000               	movlw	0
  6578  0C1A  00FA               	movwf	___lldiv@quotient+1
  6579  0C1B  3000               	movlw	0
  6580  0C1C  00F9               	movwf	___lldiv@quotient
  6581  0C1D  0873               	movf	___lldiv@divisor+3,w
  6582  0C1E  0472               	iorwf	___lldiv@divisor+2,w
  6583  0C1F  0471               	iorwf	___lldiv@divisor+1,w
  6584  0C20  0470               	iorwf	___lldiv@divisor,w
  6585  0C21  1903               	skipnz
  6586  0C22  2C5E               	goto	l2177
  6587  0C23  01FD               	clrf	___lldiv@counter
  6588  0C24  0AFD               	incf	___lldiv@counter,f
  6589  0C25                     l2163:	
  6590  0C25  1BF3               	btfsc	___lldiv@divisor+3,7
  6591  0C26  2C33               	goto	l2165
  6592  0C27  3001               	movlw	1
  6593  0C28                     u1905:	
  6594  0C28  35F0               	lslf	___lldiv@divisor,f
  6595  0C29  0DF1               	rlf	___lldiv@divisor+1,f
  6596  0C2A  0DF2               	rlf	___lldiv@divisor+2,f
  6597  0C2B  0DF3               	rlf	___lldiv@divisor+3,f
  6598  0C2C  0B89               	decfsz	9,f
  6599  0C2D  2C28               	goto	u1905
  6600  0C2E  3001               	movlw	1
  6601  0C2F  00F8               	movwf	??___lldiv
  6602  0C30  0878               	movf	??___lldiv,w
  6603  0C31  07FD               	addwf	___lldiv@counter,f
  6604  0C32  2C25               	goto	l2163
  6605  0C33                     l2165:	
  6606  0C33  3001               	movlw	1
  6607  0C34                     u1925:	
  6608  0C34  35F9               	lslf	___lldiv@quotient,f
  6609  0C35  0DFA               	rlf	___lldiv@quotient+1,f
  6610  0C36  0DFB               	rlf	___lldiv@quotient+2,f
  6611  0C37  0DFC               	rlf	___lldiv@quotient+3,f
  6612  0C38  0B89               	decfsz	9,f
  6613  0C39  2C34               	goto	u1925
  6614  0C3A  0873               	movf	___lldiv@divisor+3,w
  6615  0C3B  0277               	subwf	___lldiv@dividend+3,w
  6616  0C3C  1D03               	skipz
  6617  0C3D  2C48               	goto	u1935
  6618  0C3E  0872               	movf	___lldiv@divisor+2,w
  6619  0C3F  0276               	subwf	___lldiv@dividend+2,w
  6620  0C40  1D03               	skipz
  6621  0C41  2C48               	goto	u1935
  6622  0C42  0871               	movf	___lldiv@divisor+1,w
  6623  0C43  0275               	subwf	___lldiv@dividend+1,w
  6624  0C44  1D03               	skipz
  6625  0C45  2C48               	goto	u1935
  6626  0C46  0870               	movf	___lldiv@divisor,w
  6627  0C47  0274               	subwf	___lldiv@dividend,w
  6628  0C48                     u1935:	
  6629  0C48  1C03               	skipc
  6630  0C49  2C53               	goto	l2173
  6631  0C4A  0870               	movf	___lldiv@divisor,w
  6632  0C4B  02F4               	subwf	___lldiv@dividend,f
  6633  0C4C  0871               	movf	___lldiv@divisor+1,w
  6634  0C4D  3BF5               	subwfb	___lldiv@dividend+1,f
  6635  0C4E  0872               	movf	___lldiv@divisor+2,w
  6636  0C4F  3BF6               	subwfb	___lldiv@dividend+2,f
  6637  0C50  0873               	movf	___lldiv@divisor+3,w
  6638  0C51  3BF7               	subwfb	___lldiv@dividend+3,f
  6639  0C52  1479               	bsf	___lldiv@quotient,0
  6640  0C53                     l2173:	
  6641  0C53  3001               	movlw	1
  6642  0C54                     u1945:	
  6643  0C54  36F3               	lsrf	___lldiv@divisor+3,f
  6644  0C55  0CF2               	rrf	___lldiv@divisor+2,f
  6645  0C56  0CF1               	rrf	___lldiv@divisor+1,f
  6646  0C57  0CF0               	rrf	___lldiv@divisor,f
  6647  0C58  0B89               	decfsz	9,f
  6648  0C59  2C54               	goto	u1945
  6649  0C5A  3001               	movlw	1
  6650  0C5B  02FD               	subwf	___lldiv@counter,f
  6651  0C5C  1D03               	btfss	3,2
  6652  0C5D  2C33               	goto	l2165
  6653  0C5E                     l2177:	
  6654  0C5E  087C               	movf	___lldiv@quotient+3,w
  6655  0C5F  00F3               	movwf	?___lldiv+3
  6656  0C60  087B               	movf	___lldiv@quotient+2,w
  6657  0C61  00F2               	movwf	?___lldiv+2
  6658  0C62  087A               	movf	___lldiv@quotient+1,w
  6659  0C63  00F1               	movwf	?___lldiv+1
  6660  0C64  0879               	movf	___lldiv@quotient,w
  6661  0C65  00F0               	movwf	?___lldiv
  6662  0C66  0008               	return
  6663  0C67                     __end_of___lldiv:	
  6664                           
  6665                           	psect	text19
  6666  0E11                     __ptext19:	
  6667 ;; *************** function ___xxtofl *****************
  6668 ;; Defined at:
  6669 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
  6670 ;; Parameters:    Size  Location     Type
  6671 ;;  sign            1    wreg     unsigned char 
  6672 ;;  val             4    7[BANK0 ] long 
  6673 ;; Auto vars:     Size  Location     Type
  6674 ;;  sign            1   15[BANK0 ] unsigned char 
  6675 ;;  arg             4   17[BANK0 ] unsigned long 
  6676 ;;  exp             1   16[BANK0 ] unsigned char 
  6677 ;; Return value:  Size  Location     Type
  6678 ;;                  4    7[BANK0 ] unsigned char 
  6679 ;; Registers used:
  6680 ;;		wreg, status,2, status,0
  6681 ;; Tracked objects:
  6682 ;;		On entry : 0/0
  6683 ;;		On exit  : 0/0
  6684 ;;		Unchanged: 0/0
  6685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6686 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6687 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6688 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6689 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6690 ;;Total ram usage:       14 bytes
  6691 ;; Hardware stack levels used:    1
  6692 ;; This function calls:
  6693 ;;		Nothing
  6694 ;; This function is called by:
  6695 ;;		_main
  6696 ;;		_floor
  6697 ;;		_ftoa
  6698 ;; This function uses a non-reentrant model
  6699 ;;
  6700                           
  6701                           
  6702                           ;psect for function ___xxtofl
  6703  0E11                     ___xxtofl:	
  6704                           
  6705                           ;incstack = 0
  6706                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  6707                           ;___xxtofl@sign stored from wreg
  6708  0E11  0020               	movlb	0	; select bank0
  6709  0E12  00AF               	movwf	___xxtofl@sign
  6710  0E13  082F               	movf	___xxtofl@sign,w
  6711  0E14  1D03               	btfss	3,2
  6712  0E15  1FAA               	btfss	___xxtofl@val+3,7
  6713  0E16  2E27               	goto	l2781
  6714  0E17  0927               	comf	___xxtofl@val,w
  6715  0E18  00B1               	movwf	___xxtofl@arg
  6716  0E19  0928               	comf	___xxtofl@val+1,w
  6717  0E1A  00B2               	movwf	___xxtofl@arg+1
  6718  0E1B  0929               	comf	___xxtofl@val+2,w
  6719  0E1C  00B3               	movwf	___xxtofl@arg+2
  6720  0E1D  092A               	comf	___xxtofl@val+3,w
  6721  0E1E  00B4               	movwf	___xxtofl@arg+3
  6722  0E1F  0AB1               	incf	___xxtofl@arg,f
  6723  0E20  1903               	skipnz
  6724  0E21  0AB2               	incf	___xxtofl@arg+1,f
  6725  0E22  1903               	skipnz
  6726  0E23  0AB3               	incf	___xxtofl@arg+2,f
  6727  0E24  1903               	skipnz
  6728  0E25  0AB4               	incf	___xxtofl@arg+3,f
  6729  0E26  2E2F               	goto	l866
  6730  0E27                     l2781:	
  6731  0E27  082A               	movf	___xxtofl@val+3,w
  6732  0E28  00B4               	movwf	___xxtofl@arg+3
  6733  0E29  0829               	movf	___xxtofl@val+2,w
  6734  0E2A  00B3               	movwf	___xxtofl@arg+2
  6735  0E2B  0828               	movf	___xxtofl@val+1,w
  6736  0E2C  00B2               	movwf	___xxtofl@arg+1
  6737  0E2D  0827               	movf	___xxtofl@val,w
  6738  0E2E  00B1               	movwf	___xxtofl@arg
  6739  0E2F                     l866:	
  6740  0E2F  082A               	movf	___xxtofl@val+3,w
  6741  0E30  0429               	iorwf	___xxtofl@val+2,w
  6742  0E31  0428               	iorwf	___xxtofl@val+1,w
  6743  0E32  0427               	iorwf	___xxtofl@val,w
  6744  0E33  1D03               	skipz
  6745  0E34  2E3E               	goto	l2787
  6746  0E35  3000               	movlw	0
  6747  0E36  00AA               	movwf	?___xxtofl+3
  6748  0E37  3000               	movlw	0
  6749  0E38  00A9               	movwf	?___xxtofl+2
  6750  0E39  3000               	movlw	0
  6751  0E3A  00A8               	movwf	?___xxtofl+1
  6752  0E3B  3000               	movlw	0
  6753  0E3C  00A7               	movwf	?___xxtofl
  6754  0E3D  0008               	return
  6755  0E3E                     l2787:	
  6756  0E3E  3096               	movlw	150
  6757  0E3F  00AB               	movwf	??___xxtofl
  6758  0E40  082B               	movf	??___xxtofl,w
  6759  0E41  00B0               	movwf	___xxtofl@exp
  6760  0E42                     l2791:	
  6761  0E42  30FE               	movlw	254
  6762  0E43  0534               	andwf	___xxtofl@arg+3,w
  6763  0E44  1903               	btfsc	3,2
  6764  0E45  2E65               	goto	l872
  6765  0E46  3001               	movlw	1
  6766  0E47  00AB               	movwf	??___xxtofl
  6767  0E48  082B               	movf	??___xxtofl,w
  6768  0E49  07B0               	addwf	___xxtofl@exp,f
  6769  0E4A  3001               	movlw	1
  6770  0E4B                     u3165:	
  6771  0E4B  36B4               	lsrf	___xxtofl@arg+3,f
  6772  0E4C  0CB3               	rrf	___xxtofl@arg+2,f
  6773  0E4D  0CB2               	rrf	___xxtofl@arg+1,f
  6774  0E4E  0CB1               	rrf	___xxtofl@arg,f
  6775  0E4F  0B89               	decfsz	9,f
  6776  0E50  2E4B               	goto	u3165
  6777  0E51  2E42               	goto	l2791
  6778  0E52                     l2793:	
  6779  0E52  3001               	movlw	1
  6780  0E53  00AB               	movwf	??___xxtofl
  6781  0E54  082B               	movf	??___xxtofl,w
  6782  0E55  07B0               	addwf	___xxtofl@exp,f
  6783  0E56  3001               	movlw	1
  6784  0E57  07B1               	addwf	___xxtofl@arg,f
  6785  0E58  3000               	movlw	0
  6786  0E59  3DB2               	addwfc	___xxtofl@arg+1,f
  6787  0E5A  3000               	movlw	0
  6788  0E5B  3DB3               	addwfc	___xxtofl@arg+2,f
  6789  0E5C  3000               	movlw	0
  6790  0E5D  3DB4               	addwfc	___xxtofl@arg+3,f
  6791  0E5E  3001               	movlw	1
  6792  0E5F                     u3185:	
  6793  0E5F  36B4               	lsrf	___xxtofl@arg+3,f
  6794  0E60  0CB3               	rrf	___xxtofl@arg+2,f
  6795  0E61  0CB2               	rrf	___xxtofl@arg+1,f
  6796  0E62  0CB1               	rrf	___xxtofl@arg,f
  6797  0E63  0B89               	decfsz	9,f
  6798  0E64  2E5F               	goto	u3185
  6799  0E65                     l872:	
  6800  0E65  30FF               	movlw	255
  6801  0E66  0534               	andwf	___xxtofl@arg+3,w
  6802  0E67  1903               	btfsc	3,2
  6803  0E68  2E77               	goto	l2801
  6804  0E69  2E52               	goto	l2793
  6805  0E6A                     l2803:	
  6806  0E6A  3002               	movlw	2
  6807  0E6B  0230               	subwf	___xxtofl@exp,w
  6808  0E6C  1C03               	btfss	3,0
  6809  0E6D  2E79               	goto	l879
  6810  0E6E  3001               	movlw	1
  6811  0E6F  02B0               	subwf	___xxtofl@exp,f
  6812  0E70  3001               	movlw	1
  6813  0E71                     u3205:	
  6814  0E71  35B1               	lslf	___xxtofl@arg,f
  6815  0E72  0DB2               	rlf	___xxtofl@arg+1,f
  6816  0E73  0DB3               	rlf	___xxtofl@arg+2,f
  6817  0E74  0DB4               	rlf	___xxtofl@arg+3,f
  6818  0E75  0B89               	decfsz	9,f
  6819  0E76  2E71               	goto	u3205
  6820  0E77                     l2801:	
  6821  0E77  1FB3               	btfss	___xxtofl@arg+2,7
  6822  0E78  2E6A               	goto	l2803
  6823  0E79                     l879:	
  6824  0E79  1830               	btfsc	___xxtofl@exp,0
  6825  0E7A  2E83               	goto	l880
  6826  0E7B  30FF               	movlw	255
  6827  0E7C  05B1               	andwf	___xxtofl@arg,f
  6828  0E7D  30FF               	movlw	255
  6829  0E7E  05B2               	andwf	___xxtofl@arg+1,f
  6830  0E7F  307F               	movlw	127
  6831  0E80  05B3               	andwf	___xxtofl@arg+2,f
  6832  0E81  30FF               	movlw	255
  6833  0E82  05B4               	andwf	___xxtofl@arg+3,f
  6834  0E83                     l880:	
  6835  0E83  1003               	clrc
  6836  0E84  0CB0               	rrf	___xxtofl@exp,f
  6837  0E85  0830               	movf	___xxtofl@exp,w
  6838  0E86  00AB               	movwf	??___xxtofl
  6839  0E87  01AC               	clrf	??___xxtofl+1
  6840  0E88  01AD               	clrf	??___xxtofl+2
  6841  0E89  01AE               	clrf	??___xxtofl+3
  6842  0E8A  3018               	movlw	24
  6843  0E8B                     u3245:	
  6844  0E8B  35AB               	lslf	??___xxtofl,f
  6845  0E8C  0DAC               	rlf	??___xxtofl+1,f
  6846  0E8D  0DAD               	rlf	??___xxtofl+2,f
  6847  0E8E  0DAE               	rlf	??___xxtofl+3,f
  6848  0E8F  0B89               	decfsz	9,f
  6849  0E90  2E8B               	goto	u3245
  6850  0E91  082B               	movf	??___xxtofl,w
  6851  0E92  04B1               	iorwf	___xxtofl@arg,f
  6852  0E93  082C               	movf	??___xxtofl+1,w
  6853  0E94  04B2               	iorwf	___xxtofl@arg+1,f
  6854  0E95  082D               	movf	??___xxtofl+2,w
  6855  0E96  04B3               	iorwf	___xxtofl@arg+2,f
  6856  0E97  082E               	movf	??___xxtofl+3,w
  6857  0E98  04B4               	iorwf	___xxtofl@arg+3,f
  6858  0E99  082F               	movf	___xxtofl@sign,w
  6859  0E9A  1D03               	btfss	3,2
  6860  0E9B  1FAA               	btfss	___xxtofl@val+3,7
  6861  0E9C  2E9E               	goto	l2815
  6862  0E9D  17B4               	bsf	___xxtofl@arg+3,7
  6863  0E9E                     l2815:	
  6864  0E9E  0834               	movf	___xxtofl@arg+3,w
  6865  0E9F  00AA               	movwf	?___xxtofl+3
  6866  0EA0  0833               	movf	___xxtofl@arg+2,w
  6867  0EA1  00A9               	movwf	?___xxtofl+2
  6868  0EA2  0832               	movf	___xxtofl@arg+1,w
  6869  0EA3  00A8               	movwf	?___xxtofl+1
  6870  0EA4  0831               	movf	___xxtofl@arg,w
  6871  0EA5  00A7               	movwf	?___xxtofl
  6872  0EA6  0008               	return
  6873  0EA7                     __end_of___xxtofl:	
  6874                           
  6875                           	psect	text20
  6876  0D30                     __ptext20:	
  6877 ;; *************** function ___fltol *****************
  6878 ;; Defined at:
  6879 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fltol.c"
  6880 ;; Parameters:    Size  Location     Type
  6881 ;;  f1              4    9[COMMON] unsigned char 
  6882 ;; Auto vars:     Size  Location     Type
  6883 ;;  exp1            1    6[BANK0 ] unsigned char 
  6884 ;;  sign1           1    5[BANK0 ] unsigned char 
  6885 ;; Return value:  Size  Location     Type
  6886 ;;                  4    9[COMMON] long 
  6887 ;; Registers used:
  6888 ;;		wreg, status,2, status,0
  6889 ;; Tracked objects:
  6890 ;;		On entry : 0/0
  6891 ;;		On exit  : 0/0
  6892 ;;		Unchanged: 0/0
  6893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6894 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6895 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6896 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6897 ;;      Totals:         4       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6898 ;;Total ram usage:       11 bytes
  6899 ;; Hardware stack levels used:    1
  6900 ;; This function calls:
  6901 ;;		Nothing
  6902 ;; This function is called by:
  6903 ;;		_floor
  6904 ;;		_ftoa
  6905 ;; This function uses a non-reentrant model
  6906 ;;
  6907                           
  6908                           
  6909                           ;psect for function ___fltol
  6910  0D30                     ___fltol:	
  6911                           
  6912                           ;incstack = 0
  6913                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6914  0D30  1003               	clrc
  6915  0D31  0D7B               	rlf	___fltol@f1+2,w
  6916  0D32  0D7C               	rlf	___fltol@f1+3,w
  6917  0D33  0020               	movlb	0	; select bank0
  6918  0D34  00A0               	movwf	??___fltol
  6919  0D35  0820               	movf	??___fltol,w
  6920  0D36  00A6               	movwf	___fltol@exp1
  6921  0D37  0826               	movf	___fltol@exp1,w
  6922  0D38  1D03               	btfss	3,2
  6923  0D39  2D43               	goto	l2599
  6924  0D3A                     l2595:	
  6925  0D3A  3000               	movlw	0
  6926  0D3B  00FC               	movwf	?___fltol+3
  6927  0D3C  3000               	movlw	0
  6928  0D3D  00FB               	movwf	?___fltol+2
  6929  0D3E  3000               	movlw	0
  6930  0D3F  00FA               	movwf	?___fltol+1
  6931  0D40  3000               	movlw	0
  6932  0D41  00F9               	movwf	?___fltol
  6933  0D42  0008               	return
  6934  0D43                     l2599:	
  6935  0D43  0879               	movf	___fltol@f1,w
  6936  0D44  00A0               	movwf	??___fltol
  6937  0D45  087A               	movf	___fltol@f1+1,w
  6938  0D46  00A1               	movwf	??___fltol+1
  6939  0D47  087B               	movf	___fltol@f1+2,w
  6940  0D48  00A2               	movwf	??___fltol+2
  6941  0D49  087C               	movf	___fltol@f1+3,w
  6942  0D4A  00A3               	movwf	??___fltol+3
  6943  0D4B  301F               	movlw	31
  6944  0D4C                     u2785:	
  6945  0D4C  36A3               	lsrf	??___fltol+3,f
  6946  0D4D  0CA2               	rrf	??___fltol+2,f
  6947  0D4E  0CA1               	rrf	??___fltol+1,f
  6948  0D4F  0CA0               	rrf	??___fltol,f
  6949  0D50  0B89               	decfsz	9,f
  6950  0D51  2D4C               	goto	u2785
  6951  0D52  0820               	movf	??___fltol,w
  6952  0D53  00A4               	movwf	??___fltol+4
  6953  0D54  0824               	movf	??___fltol+4,w
  6954  0D55  00A5               	movwf	___fltol@sign1
  6955  0D56  17FB               	bsf	___fltol@f1+2,7
  6956  0D57  30FF               	movlw	255
  6957  0D58  05F9               	andwf	___fltol@f1,f
  6958  0D59  30FF               	movlw	255
  6959  0D5A  05FA               	andwf	___fltol@f1+1,f
  6960  0D5B  30FF               	movlw	255
  6961  0D5C  05FB               	andwf	___fltol@f1+2,f
  6962  0D5D  3000               	movlw	0
  6963  0D5E  05FC               	andwf	___fltol@f1+3,f
  6964  0D5F  3096               	movlw	150
  6965  0D60  02A6               	subwf	___fltol@exp1,f
  6966  0D61  1FA6               	btfss	___fltol@exp1,7
  6967  0D62  2D76               	goto	l2617
  6968  0D63  0826               	movf	___fltol@exp1,w
  6969  0D64  3A80               	xorlw	128
  6970  0D65  3E97               	addlw	151
  6971  0D66  1C03               	btfss	3,0
  6972  0D67  2D3A               	goto	l2595
  6973  0D68                     l2615:	
  6974  0D68  3001               	movlw	1
  6975  0D69                     u2815:	
  6976  0D69  36FC               	lsrf	___fltol@f1+3,f
  6977  0D6A  0CFB               	rrf	___fltol@f1+2,f
  6978  0D6B  0CFA               	rrf	___fltol@f1+1,f
  6979  0D6C  0CF9               	rrf	___fltol@f1,f
  6980  0D6D  0B89               	decfsz	9,f
  6981  0D6E  2D69               	goto	u2815
  6982  0D6F  3001               	movlw	1
  6983  0D70  00A0               	movwf	??___fltol
  6984  0D71  0820               	movf	??___fltol,w
  6985  0D72  07A6               	addwf	___fltol@exp1,f
  6986  0D73  1903               	btfsc	3,2
  6987  0D74  2D87               	goto	l2625
  6988  0D75  2D68               	goto	l2615
  6989  0D76                     l2617:	
  6990  0D76  3020               	movlw	32
  6991  0D77  0226               	subwf	___fltol@exp1,w
  6992  0D78  1803               	btfsc	3,0
  6993  0D79  2D3A               	goto	l2595
  6994  0D7A                     l632:	
  6995  0D7A  0826               	movf	___fltol@exp1,w
  6996  0D7B  1903               	btfsc	3,2
  6997  0D7C  2D87               	goto	l2625
  6998  0D7D  3001               	movlw	1
  6999  0D7E                     u2845:	
  7000  0D7E  35F9               	lslf	___fltol@f1,f
  7001  0D7F  0DFA               	rlf	___fltol@f1+1,f
  7002  0D80  0DFB               	rlf	___fltol@f1+2,f
  7003  0D81  0DFC               	rlf	___fltol@f1+3,f
  7004  0D82  0B89               	decfsz	9,f
  7005  0D83  2D7E               	goto	u2845
  7006  0D84  3001               	movlw	1
  7007  0D85  02A6               	subwf	___fltol@exp1,f
  7008  0D86  2D7A               	goto	l632
  7009  0D87                     l2625:	
  7010  0D87  0825               	movf	___fltol@sign1,w
  7011  0D88  1903               	btfsc	3,2
  7012  0D89  0008               	return
  7013  0D8A  09F9               	comf	___fltol@f1,f
  7014  0D8B  09FA               	comf	___fltol@f1+1,f
  7015  0D8C  09FB               	comf	___fltol@f1+2,f
  7016  0D8D  09FC               	comf	___fltol@f1+3,f
  7017  0D8E  0AF9               	incf	___fltol@f1,f
  7018  0D8F  1903               	skipnz
  7019  0D90  0AFA               	incf	___fltol@f1+1,f
  7020  0D91  1903               	skipnz
  7021  0D92  0AFB               	incf	___fltol@f1+2,f
  7022  0D93  1903               	skipnz
  7023  0D94  0AFC               	incf	___fltol@f1+3,f
  7024  0D95  0008               	return
  7025  0D96                     __end_of___fltol:	
  7026                           
  7027                           	psect	text21
  7028  1735                     __ptext21:	
  7029 ;; *************** function ___flsub *****************
  7030 ;; Defined at:
  7031 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  7032 ;; Parameters:    Size  Location     Type
  7033 ;;  a               4   21[BANK0 ] long 
  7034 ;;  b               4   25[BANK0 ] long 
  7035 ;; Auto vars:     Size  Location     Type
  7036 ;;		None
  7037 ;; Return value:  Size  Location     Type
  7038 ;;                  4   21[BANK0 ] long 
  7039 ;; Registers used:
  7040 ;;		wreg, status,2, status,0, pclath, cstack
  7041 ;; Tracked objects:
  7042 ;;		On entry : 0/0
  7043 ;;		On exit  : 0/0
  7044 ;;		Unchanged: 0/0
  7045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7046 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7049 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7050 ;;Total ram usage:        8 bytes
  7051 ;; Hardware stack levels used:    1
  7052 ;; Hardware stack levels required when called:    1
  7053 ;; This function calls:
  7054 ;;		___fladd
  7055 ;; This function is called by:
  7056 ;;		_ftoa
  7057 ;; This function uses a non-reentrant model
  7058 ;;
  7059                           
  7060                           
  7061                           ;psect for function ___flsub
  7062  1735                     ___flsub:	
  7063                           
  7064                           ;incstack = 0
  7065                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
  7066  1735  3080               	movlw	128
  7067  1736  0020               	movlb	0	; select bank0
  7068  1737  06B8               	xorwf	___flsub@a+3,f
  7069  1738  083C               	movf	___flsub@b+3,w
  7070  1739  00F3               	movwf	___fladd@b+3
  7071  173A  083B               	movf	___flsub@b+2,w
  7072  173B  00F2               	movwf	___fladd@b+2
  7073  173C  083A               	movf	___flsub@b+1,w
  7074  173D  00F1               	movwf	___fladd@b+1
  7075  173E  0839               	movf	___flsub@b,w
  7076  173F  00F0               	movwf	___fladd@b
  7077  1740  0838               	movf	___flsub@a+3,w
  7078  1741  00F7               	movwf	___fladd@a+3
  7079  1742  0837               	movf	___flsub@a+2,w
  7080  1743  00F6               	movwf	___fladd@a+2
  7081  1744  0836               	movf	___flsub@a+1,w
  7082  1745  00F5               	movwf	___fladd@a+1
  7083  1746  0835               	movf	___flsub@a,w
  7084  1747  00F4               	movwf	___fladd@a
  7085  1748  3183  23DE         	fcall	___fladd
  7086  174A  0873               	movf	?___fladd+3,w
  7087  174B  0020               	movlb	0	; select bank0
  7088  174C  00B8               	movwf	?___flsub+3
  7089  174D  0872               	movf	?___fladd+2,w
  7090  174E  00B7               	movwf	?___flsub+2
  7091  174F  0871               	movf	?___fladd+1,w
  7092  1750  00B6               	movwf	?___flsub+1
  7093  1751  0870               	movf	?___fladd,w
  7094  1752  00B5               	movwf	?___flsub
  7095  1753  0008               	return
  7096  1754                     __end_of___flsub:	
  7097                           
  7098                           	psect	text22
  7099  03DE                     __ptext22:	
  7100 ;; *************** function ___fladd *****************
  7101 ;; Defined at:
  7102 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  7103 ;; Parameters:    Size  Location     Type
  7104 ;;  b               4    0[COMMON] long 
  7105 ;;  a               4    4[COMMON] long 
  7106 ;; Auto vars:     Size  Location     Type
  7107 ;;  grs             1   11[COMMON] unsigned char 
  7108 ;;  bexp            1   10[COMMON] unsigned char 
  7109 ;;  aexp            1    9[COMMON] unsigned char 
  7110 ;;  signs           1    8[COMMON] unsigned char 
  7111 ;; Return value:  Size  Location     Type
  7112 ;;                  4    0[COMMON] unsigned char 
  7113 ;; Registers used:
  7114 ;;		wreg, status,2, status,0
  7115 ;; Tracked objects:
  7116 ;;		On entry : 0/0
  7117 ;;		On exit  : 0/0
  7118 ;;		Unchanged: 0/0
  7119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7120 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7121 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7122 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7123 ;;      Totals:        12       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7124 ;;Total ram usage:       20 bytes
  7125 ;; Hardware stack levels used:    1
  7126 ;; This function calls:
  7127 ;;		Nothing
  7128 ;; This function is called by:
  7129 ;;		_roundf
  7130 ;;		___flsub
  7131 ;;		_floor
  7132 ;; This function uses a non-reentrant model
  7133 ;;
  7134                           
  7135                           
  7136                           ;psect for function ___fladd
  7137  03DE                     ___fladd:	
  7138                           
  7139                           ;incstack = 0
  7140                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  7141  03DE  0873               	movf	___fladd@b+3,w
  7142  03DF  3980               	andlw	128
  7143  03E0  0020               	movlb	0	; select bank0
  7144  03E1  00A0               	movwf	??___fladd
  7145  03E2  0820               	movf	??___fladd,w
  7146  03E3  00F8               	movwf	___fladd@signs
  7147  03E4  3573               	lslf	___fladd@b+3,w
  7148  03E5  00A0               	movwf	??___fladd
  7149  03E6  0820               	movf	??___fladd,w
  7150  03E7  00FA               	movwf	___fladd@bexp
  7151  03E8  1BF2               	btfsc	___fladd@b+2,7
  7152  03E9  147A               	bsf	___fladd@bexp,0
  7153  03EA  087A               	movf	___fladd@bexp,w
  7154  03EB  1903               	btfsc	3,2
  7155  03EC  2BFB               	goto	l2231
  7156  03ED  0A7A               	incf	___fladd@bexp,w
  7157  03EE  1D03               	btfss	3,2
  7158  03EF  2BF8               	goto	l2227
  7159  03F0  3000               	movlw	0
  7160  03F1  00F3               	movwf	___fladd@b+3
  7161  03F2  3000               	movlw	0
  7162  03F3  00F2               	movwf	___fladd@b+2
  7163  03F4  3000               	movlw	0
  7164  03F5  00F1               	movwf	___fladd@b+1
  7165  03F6  3000               	movlw	0
  7166  03F7  00F0               	movwf	___fladd@b
  7167  03F8                     l2227:	
  7168  03F8  17F2               	bsf	___fladd@b+2,7
  7169  03F9  01F3               	clrf	___fladd@b+3
  7170  03FA  2C03               	goto	l2233
  7171  03FB                     l2231:	
  7172  03FB  3000               	movlw	0
  7173  03FC  00F3               	movwf	___fladd@b+3
  7174  03FD  3000               	movlw	0
  7175  03FE  00F2               	movwf	___fladd@b+2
  7176  03FF  3000               	movlw	0
  7177  0400  00F1               	movwf	___fladd@b+1
  7178  0401  3000               	movlw	0
  7179  0402  00F0               	movwf	___fladd@b
  7180  0403                     l2233:	
  7181  0403  0877               	movf	___fladd@a+3,w
  7182  0404  3980               	andlw	128
  7183  0405  00A0               	movwf	??___fladd
  7184  0406  0820               	movf	??___fladd,w
  7185  0407  00F9               	movwf	___fladd@aexp
  7186  0408  0879               	movf	___fladd@aexp,w
  7187  0409  0678               	xorwf	___fladd@signs,w
  7188  040A  1D03               	btfss	3,2
  7189  040B  1778               	bsf	___fladd@signs,6
  7190  040C  3577               	lslf	___fladd@a+3,w
  7191  040D  00A0               	movwf	??___fladd
  7192  040E  0820               	movf	??___fladd,w
  7193  040F  00F9               	movwf	___fladd@aexp
  7194  0410  1BF6               	btfsc	___fladd@a+2,7
  7195  0411  1479               	bsf	___fladd@aexp,0
  7196  0412  0879               	movf	___fladd@aexp,w
  7197  0413  1903               	btfsc	3,2
  7198  0414  2C23               	goto	l2255
  7199  0415  0A79               	incf	___fladd@aexp,w
  7200  0416  1D03               	btfss	3,2
  7201  0417  2C20               	goto	l2251
  7202  0418  3000               	movlw	0
  7203  0419  00F7               	movwf	___fladd@a+3
  7204  041A  3000               	movlw	0
  7205  041B  00F6               	movwf	___fladd@a+2
  7206  041C  3000               	movlw	0
  7207  041D  00F5               	movwf	___fladd@a+1
  7208  041E  3000               	movlw	0
  7209  041F  00F4               	movwf	___fladd@a
  7210  0420                     l2251:	
  7211  0420  17F6               	bsf	___fladd@a+2,7
  7212  0421  01F7               	clrf	___fladd@a+3
  7213  0422  2C2B               	goto	l732
  7214  0423                     l2255:	
  7215  0423  3000               	movlw	0
  7216  0424  00F7               	movwf	___fladd@a+3
  7217  0425  3000               	movlw	0
  7218  0426  00F6               	movwf	___fladd@a+2
  7219  0427  3000               	movlw	0
  7220  0428  00F5               	movwf	___fladd@a+1
  7221  0429  3000               	movlw	0
  7222  042A  00F4               	movwf	___fladd@a
  7223  042B                     l732:	
  7224  042B  087A               	movf	___fladd@bexp,w
  7225  042C  0279               	subwf	___fladd@aexp,w
  7226  042D  1803               	skipnc
  7227  042E  2C71               	goto	l2291
  7228  042F  1F78               	btfss	___fladd@signs,6
  7229  0430  2C35               	goto	l2261
  7230  0431  3080               	movlw	128
  7231  0432  00A0               	movwf	??___fladd
  7232  0433  0820               	movf	??___fladd,w
  7233  0434  06F8               	xorwf	___fladd@signs,f
  7234  0435                     l2261:	
  7235  0435  087A               	movf	___fladd@bexp,w
  7236  0436  00A0               	movwf	??___fladd
  7237  0437  0820               	movf	??___fladd,w
  7238  0438  00FB               	movwf	___fladd@grs
  7239  0439  0879               	movf	___fladd@aexp,w
  7240  043A  00A0               	movwf	??___fladd
  7241  043B  0820               	movf	??___fladd,w
  7242  043C  00FA               	movwf	___fladd@bexp
  7243  043D  087B               	movf	___fladd@grs,w
  7244  043E  00A0               	movwf	??___fladd
  7245  043F  0820               	movf	??___fladd,w
  7246  0440  00F9               	movwf	___fladd@aexp
  7247  0441  0870               	movf	___fladd@b,w
  7248  0442  00A0               	movwf	??___fladd
  7249  0443  0820               	movf	??___fladd,w
  7250  0444  00FB               	movwf	___fladd@grs
  7251  0445  0874               	movf	___fladd@a,w
  7252  0446  00A0               	movwf	??___fladd
  7253  0447  0820               	movf	??___fladd,w
  7254  0448  00F0               	movwf	___fladd@b
  7255  0449  087B               	movf	___fladd@grs,w
  7256  044A  00A0               	movwf	??___fladd
  7257  044B  0820               	movf	??___fladd,w
  7258  044C  00F4               	movwf	___fladd@a
  7259  044D  0871               	movf	___fladd@b+1,w
  7260  044E  00A0               	movwf	??___fladd
  7261  044F  0820               	movf	??___fladd,w
  7262  0450  00FB               	movwf	___fladd@grs
  7263  0451  0875               	movf	___fladd@a+1,w
  7264  0452  00A0               	movwf	??___fladd
  7265  0453  0820               	movf	??___fladd,w
  7266  0454  00F1               	movwf	___fladd@b+1
  7267  0455  087B               	movf	___fladd@grs,w
  7268  0456  00A0               	movwf	??___fladd
  7269  0457  0820               	movf	??___fladd,w
  7270  0458  00F5               	movwf	___fladd@a+1
  7271  0459  0872               	movf	___fladd@b+2,w
  7272  045A  00A0               	movwf	??___fladd
  7273  045B  0820               	movf	??___fladd,w
  7274  045C  00FB               	movwf	___fladd@grs
  7275  045D  0876               	movf	___fladd@a+2,w
  7276  045E  00A0               	movwf	??___fladd
  7277  045F  0820               	movf	??___fladd,w
  7278  0460  00F2               	movwf	___fladd@b+2
  7279  0461  087B               	movf	___fladd@grs,w
  7280  0462  00A0               	movwf	??___fladd
  7281  0463  0820               	movf	??___fladd,w
  7282  0464  00F6               	movwf	___fladd@a+2
  7283  0465  0873               	movf	___fladd@b+3,w
  7284  0466  00A0               	movwf	??___fladd
  7285  0467  0820               	movf	??___fladd,w
  7286  0468  00FB               	movwf	___fladd@grs
  7287  0469  0877               	movf	___fladd@a+3,w
  7288  046A  00A0               	movwf	??___fladd
  7289  046B  0820               	movf	??___fladd,w
  7290  046C  00F3               	movwf	___fladd@b+3
  7291  046D  087B               	movf	___fladd@grs,w
  7292  046E  00A0               	movwf	??___fladd
  7293  046F  0820               	movf	??___fladd,w
  7294  0470  00F7               	movwf	___fladd@a+3
  7295  0471                     l2291:	
  7296  0471  01FB               	clrf	___fladd@grs
  7297  0472  0879               	movf	___fladd@aexp,w
  7298  0473  00A0               	movwf	??___fladd
  7299  0474  01A1               	clrf	??___fladd+1
  7300  0475  0821               	movf	??___fladd+1,w
  7301  0476  00A3               	movwf	??___fladd+3
  7302  0477  087A               	movf	___fladd@bexp,w
  7303  0478  0220               	subwf	??___fladd,w
  7304  0479  00A2               	movwf	??___fladd+2
  7305  047A  1C03               	skipc
  7306  047B  03A3               	decf	??___fladd+3,f
  7307  047C  0823               	movf	??___fladd+3,w
  7308  047D  3A80               	xorlw	128
  7309  047E  00A4               	movwf	??___fladd+4
  7310  047F  3080               	movlw	128
  7311  0480  0224               	subwf	??___fladd+4,w
  7312  0481  1D03               	skipz
  7313  0482  2C85               	goto	u2145
  7314  0483  301A               	movlw	26
  7315  0484  0222               	subwf	??___fladd+2,w
  7316  0485                     u2145:	
  7317  0485  1C03               	skipc
  7318  0486  2CBB               	goto	l2309
  7319  0487  0873               	movf	___fladd@b+3,w
  7320  0488  0472               	iorwf	___fladd@b+2,w
  7321  0489  0471               	iorwf	___fladd@b+1,w
  7322  048A  0470               	iorwf	___fladd@b,w
  7323  048B  1903               	btfsc	3,2
  7324  048C  2C8F               	goto	u2150
  7325  048D  3001               	movlw	1
  7326  048E  2C90               	goto	u2160
  7327  048F                     u2150:	
  7328  048F  3000               	movlw	0
  7329  0490                     u2160:	
  7330  0490  0020               	movlb	0	; select bank0
  7331  0491  00A0               	movwf	??___fladd
  7332  0492  0820               	movf	??___fladd,w
  7333  0493  00FB               	movwf	___fladd@grs
  7334  0494  3000               	movlw	0
  7335  0495  00F3               	movwf	___fladd@b+3
  7336  0496  3000               	movlw	0
  7337  0497  00F2               	movwf	___fladd@b+2
  7338  0498  3000               	movlw	0
  7339  0499  00F1               	movwf	___fladd@b+1
  7340  049A  3000               	movlw	0
  7341  049B  00F0               	movwf	___fladd@b
  7342  049C  0879               	movf	___fladd@aexp,w
  7343  049D  00A0               	movwf	??___fladd
  7344  049E  0820               	movf	??___fladd,w
  7345  049F  00FA               	movwf	___fladd@bexp
  7346  04A0  2CBF               	goto	l736
  7347  04A1                     l738:	
  7348  04A1  1C7B               	btfss	___fladd@grs,0
  7349  04A2  2CAA               	goto	l2299
  7350  04A3  367B               	lsrf	___fladd@grs,w
  7351  04A4  3801               	iorlw	1
  7352  04A5  0020               	movlb	0	; select bank0
  7353  04A6  00A0               	movwf	??___fladd
  7354  04A7  0820               	movf	??___fladd,w
  7355  04A8  00FB               	movwf	___fladd@grs
  7356  04A9  2CAC               	goto	l2301
  7357  04AA                     l2299:	
  7358  04AA  1003               	clrc
  7359  04AB  0CFB               	rrf	___fladd@grs,f
  7360  04AC                     l2301:	
  7361  04AC  1870               	btfsc	___fladd@b,0
  7362  04AD  17FB               	bsf	___fladd@grs,7
  7363  04AE  3001               	movlw	1
  7364  04AF  0020               	movlb	0	; select bank0
  7365  04B0  00A0               	movwf	??___fladd
  7366  04B1                     u2195:	
  7367  04B1  37F3               	asrf	___fladd@b+3,f
  7368  04B2  0CF2               	rrf	___fladd@b+2,f
  7369  04B3  0CF1               	rrf	___fladd@b+1,f
  7370  04B4  0CF0               	rrf	___fladd@b,f
  7371  04B5  0BA0               	decfsz	??___fladd& (0+127),f
  7372  04B6  2CB1               	goto	u2195
  7373  04B7  3001               	movlw	1
  7374  04B8  00A0               	movwf	??___fladd
  7375  04B9  0820               	movf	??___fladd,w
  7376  04BA  07FA               	addwf	___fladd@bexp,f
  7377  04BB                     l2309:	
  7378  04BB  0879               	movf	___fladd@aexp,w
  7379  04BC  027A               	subwf	___fladd@bexp,w
  7380  04BD  1C03               	skipc
  7381  04BE  2CA1               	goto	l738
  7382  04BF                     l736:	
  7383  04BF  1B78               	btfsc	___fladd@signs,6
  7384  04C0  2CF2               	goto	l2335
  7385  04C1  087A               	movf	___fladd@bexp,w
  7386  04C2  1D03               	btfss	3,2
  7387  04C3  2CCD               	goto	l2317
  7388  04C4  3000               	movlw	0
  7389  04C5  00F3               	movwf	?___fladd+3
  7390  04C6  3000               	movlw	0
  7391  04C7  00F2               	movwf	?___fladd+2
  7392  04C8  3000               	movlw	0
  7393  04C9  00F1               	movwf	?___fladd+1
  7394  04CA  3000               	movlw	0
  7395  04CB  00F0               	movwf	?___fladd
  7396  04CC  0008               	return
  7397  04CD                     l2317:	
  7398  04CD  0874               	movf	___fladd@a,w
  7399  04CE  07F0               	addwf	___fladd@b,f
  7400  04CF  0875               	movf	___fladd@a+1,w
  7401  04D0  3DF1               	addwfc	___fladd@b+1,f
  7402  04D1  0876               	movf	___fladd@a+2,w
  7403  04D2  3DF2               	addwfc	___fladd@b+2,f
  7404  04D3  0877               	movf	___fladd@a+3,w
  7405  04D4  3DF3               	addwfc	___fladd@b+3,f
  7406  04D5  1C73               	btfss	___fladd@b+3,0
  7407  04D6  2D6D               	goto	l2369
  7408  04D7  1C7B               	btfss	___fladd@grs,0
  7409  04D8  2CE0               	goto	l2325
  7410  04D9  367B               	lsrf	___fladd@grs,w
  7411  04DA  3801               	iorlw	1
  7412  04DB  0020               	movlb	0	; select bank0
  7413  04DC  00A0               	movwf	??___fladd
  7414  04DD  0820               	movf	??___fladd,w
  7415  04DE  00FB               	movwf	___fladd@grs
  7416  04DF  2CE2               	goto	l2327
  7417  04E0                     l2325:	
  7418  04E0  1003               	clrc
  7419  04E1  0CFB               	rrf	___fladd@grs,f
  7420  04E2                     l2327:	
  7421  04E2  1870               	btfsc	___fladd@b,0
  7422  04E3  17FB               	bsf	___fladd@grs,7
  7423  04E4  3001               	movlw	1
  7424  04E5  0020               	movlb	0	; select bank0
  7425  04E6  00A0               	movwf	??___fladd
  7426  04E7                     u2265:	
  7427  04E7  37F3               	asrf	___fladd@b+3,f
  7428  04E8  0CF2               	rrf	___fladd@b+2,f
  7429  04E9  0CF1               	rrf	___fladd@b+1,f
  7430  04EA  0CF0               	rrf	___fladd@b,f
  7431  04EB  0BA0               	decfsz	??___fladd& (0+127),f
  7432  04EC  2CE7               	goto	u2265
  7433  04ED  3001               	movlw	1
  7434  04EE  00A0               	movwf	??___fladd
  7435  04EF  0820               	movf	??___fladd,w
  7436  04F0  07FA               	addwf	___fladd@bexp,f
  7437  04F1  2D6D               	goto	l2369
  7438  04F2                     l2335:	
  7439  04F2  0873               	movf	___fladd@b+3,w
  7440  04F3  3A80               	xorlw	128
  7441  04F4  0020               	movlb	0	; select bank0
  7442  04F5  00A0               	movwf	??___fladd
  7443  04F6  0877               	movf	___fladd@a+3,w
  7444  04F7  3A80               	xorlw	128
  7445  04F8  0220               	subwf	??___fladd,w
  7446  04F9  1D03               	skipz
  7447  04FA  2D05               	goto	u2273
  7448  04FB  0876               	movf	___fladd@a+2,w
  7449  04FC  0272               	subwf	___fladd@b+2,w
  7450  04FD  1D03               	skipz
  7451  04FE  2D05               	goto	u2273
  7452  04FF  0875               	movf	___fladd@a+1,w
  7453  0500  0271               	subwf	___fladd@b+1,w
  7454  0501  1D03               	skipz
  7455  0502  2D05               	goto	u2273
  7456  0503  0874               	movf	___fladd@a,w
  7457  0504  0270               	subwf	___fladd@b,w
  7458  0505                     u2273:	
  7459  0505  1803               	skipnc
  7460  0506  2D3D               	goto	l2345
  7461  0507  30FF               	movlw	255
  7462  0508  00A0               	movwf	??___fladd
  7463  0509  30FF               	movlw	255
  7464  050A  00A1               	movwf	??___fladd+1
  7465  050B  30FF               	movlw	255
  7466  050C  00A2               	movwf	??___fladd+2
  7467  050D  30FF               	movlw	255
  7468  050E  00A3               	movwf	??___fladd+3
  7469  050F  0870               	movf	___fladd@b,w
  7470  0510  0274               	subwf	___fladd@a,w
  7471  0511  00A4               	movwf	??___fladd+4
  7472  0512  0871               	movf	___fladd@b+1,w
  7473  0513  3B75               	subwfb	___fladd@a+1,w
  7474  0514  00A5               	movwf	??___fladd+5
  7475  0515  0872               	movf	___fladd@b+2,w
  7476  0516  3B76               	subwfb	___fladd@a+2,w
  7477  0517  00A6               	movwf	??___fladd+6
  7478  0518  0873               	movf	___fladd@b+3,w
  7479  0519  3B77               	subwfb	___fladd@a+3,w
  7480  051A  00A7               	movwf	??___fladd+7
  7481  051B  0824               	movf	??___fladd+4,w
  7482  051C  07A0               	addwf	??___fladd,f
  7483  051D  0825               	movf	??___fladd+5,w
  7484  051E  3DA1               	addwfc	??___fladd+1,f
  7485  051F  0826               	movf	??___fladd+6,w
  7486  0520  3DA2               	addwfc	??___fladd+2,f
  7487  0521  0827               	movf	??___fladd+7,w
  7488  0522  3DA3               	addwfc	??___fladd+3,f
  7489  0523  0823               	movf	??___fladd+3,w
  7490  0524  00F3               	movwf	___fladd@b+3
  7491  0525  0822               	movf	??___fladd+2,w
  7492  0526  00F2               	movwf	___fladd@b+2
  7493  0527  0821               	movf	??___fladd+1,w
  7494  0528  00F1               	movwf	___fladd@b+1
  7495  0529  0820               	movf	??___fladd,w
  7496  052A  00F0               	movwf	___fladd@b
  7497  052B  3080               	movlw	128
  7498  052C  00A0               	movwf	??___fladd
  7499  052D  0820               	movf	??___fladd,w
  7500  052E  06F8               	xorwf	___fladd@signs,f
  7501  052F  09FB               	comf	___fladd@grs,f
  7502  0530  0AFB               	incf	___fladd@grs,f
  7503  0531  087B               	movf	___fladd@grs,w
  7504  0532  1D03               	btfss	3,2
  7505  0533  2D45               	goto	l753
  7506  0534  3001               	movlw	1
  7507  0535  07F0               	addwf	___fladd@b,f
  7508  0536  3000               	movlw	0
  7509  0537  3DF1               	addwfc	___fladd@b+1,f
  7510  0538  3000               	movlw	0
  7511  0539  3DF2               	addwfc	___fladd@b+2,f
  7512  053A  3000               	movlw	0
  7513  053B  3DF3               	addwfc	___fladd@b+3,f
  7514  053C  2D45               	goto	l753
  7515  053D                     l2345:	
  7516  053D  0874               	movf	___fladd@a,w
  7517  053E  02F0               	subwf	___fladd@b,f
  7518  053F  0875               	movf	___fladd@a+1,w
  7519  0540  3BF1               	subwfb	___fladd@b+1,f
  7520  0541  0876               	movf	___fladd@a+2,w
  7521  0542  3BF2               	subwfb	___fladd@b+2,f
  7522  0543  0877               	movf	___fladd@a+3,w
  7523  0544  3BF3               	subwfb	___fladd@b+3,f
  7524  0545                     l753:	
  7525  0545  0873               	movf	___fladd@b+3,w
  7526  0546  0472               	iorwf	___fladd@b+2,w
  7527  0547  0471               	iorwf	___fladd@b+1,w
  7528  0548  0470               	iorwf	___fladd@b,w
  7529  0549  1D03               	skipz
  7530  054A  2D6B               	goto	l2367
  7531  054B  087B               	movf	___fladd@grs,w
  7532  054C  1D03               	btfss	3,2
  7533  054D  2D6B               	goto	l2367
  7534  054E  3000               	movlw	0
  7535  054F  00F3               	movwf	?___fladd+3
  7536  0550  3000               	movlw	0
  7537  0551  00F2               	movwf	?___fladd+2
  7538  0552  3000               	movlw	0
  7539  0553  00F1               	movwf	?___fladd+1
  7540  0554  3000               	movlw	0
  7541  0555  00F0               	movwf	?___fladd
  7542  0556  0008               	return
  7543  0557                     l2353:	
  7544  0557  3001               	movlw	1
  7545  0558                     u2315:	
  7546  0558  35F0               	lslf	___fladd@b,f
  7547  0559  0DF1               	rlf	___fladd@b+1,f
  7548  055A  0DF2               	rlf	___fladd@b+2,f
  7549  055B  0DF3               	rlf	___fladd@b+3,f
  7550  055C  0B89               	decfsz	9,f
  7551  055D  2D58               	goto	u2315
  7552  055E  1BFB               	btfsc	___fladd@grs,7
  7553  055F  1470               	bsf	___fladd@b,0
  7554  0560  1C7B               	btfss	___fladd@grs,0
  7555  0561  2D64               	goto	l2361
  7556  0562  1403               	setc
  7557  0563  2D65               	goto	L2
  7558  0564                     l2361:	
  7559  0564  1003               	clrc
  7560  0565                     L2:	
  7561  0565  0DFB               	rlf	___fladd@grs,f
  7562  0566  087A               	movf	___fladd@bexp,w
  7563  0567  1903               	btfsc	3,2
  7564  0568  2D6B               	goto	l2367
  7565  0569  3001               	movlw	1
  7566  056A  02FA               	subwf	___fladd@bexp,f
  7567  056B                     l2367:	
  7568  056B  1FF2               	btfss	___fladd@b+2,7
  7569  056C  2D57               	goto	l2353
  7570  056D                     l2369:	
  7571  056D  01F9               	clrf	___fladd@aexp
  7572  056E  1FFB               	btfss	___fladd@grs,7
  7573  056F  2D78               	goto	l2379
  7574  0570  087B               	movf	___fladd@grs,w
  7575  0571  397F               	andlw	127
  7576  0572  1903               	btfsc	3,2
  7577  0573  1870               	btfsc	___fladd@b,0
  7578  0574  2D76               	goto	l2375
  7579  0575  2D78               	goto	l2379
  7580  0576                     l2375:	
  7581  0576  01F9               	clrf	___fladd@aexp
  7582  0577  0AF9               	incf	___fladd@aexp,f
  7583  0578                     l2379:	
  7584  0578  0879               	movf	___fladd@aexp,w
  7585  0579  1903               	btfsc	3,2
  7586  057A  2DA5               	goto	l766
  7587  057B  3001               	movlw	1
  7588  057C  07F0               	addwf	___fladd@b,f
  7589  057D  3000               	movlw	0
  7590  057E  3DF1               	addwfc	___fladd@b+1,f
  7591  057F  3000               	movlw	0
  7592  0580  3DF2               	addwfc	___fladd@b+2,f
  7593  0581  3000               	movlw	0
  7594  0582  3DF3               	addwfc	___fladd@b+3,f
  7595  0583  1C73               	btfss	___fladd@b+3,0
  7596  0584  2DA5               	goto	l766
  7597  0585  0870               	movf	___fladd@b,w
  7598  0586  0020               	movlb	0	; select bank0
  7599  0587  00A0               	movwf	??___fladd
  7600  0588  0871               	movf	___fladd@b+1,w
  7601  0589  00A1               	movwf	??___fladd+1
  7602  058A  0872               	movf	___fladd@b+2,w
  7603  058B  00A2               	movwf	??___fladd+2
  7604  058C  0873               	movf	___fladd@b+3,w
  7605  058D  00A3               	movwf	??___fladd+3
  7606  058E  3001               	movlw	1
  7607  058F  00A4               	movwf	??___fladd+4
  7608  0590                     u2415:	
  7609  0590  37A3               	asrf	??___fladd+3,f
  7610  0591  0CA2               	rrf	??___fladd+2,f
  7611  0592  0CA1               	rrf	??___fladd+1,f
  7612  0593  0CA0               	rrf	??___fladd,f
  7613  0594  0BA4               	decfsz	??___fladd+4,f
  7614  0595  2D90               	goto	u2415
  7615  0596  0823               	movf	??___fladd+3,w
  7616  0597  00F3               	movwf	___fladd@b+3
  7617  0598  0822               	movf	??___fladd+2,w
  7618  0599  00F2               	movwf	___fladd@b+2
  7619  059A  0821               	movf	??___fladd+1,w
  7620  059B  00F1               	movwf	___fladd@b+1
  7621  059C  0820               	movf	??___fladd,w
  7622  059D  00F0               	movwf	___fladd@b
  7623  059E  0A7A               	incf	___fladd@bexp,w
  7624  059F  1903               	btfsc	3,2
  7625  05A0  2DA5               	goto	l766
  7626  05A1  3001               	movlw	1
  7627  05A2  00A0               	movwf	??___fladd
  7628  05A3  0820               	movf	??___fladd,w
  7629  05A4  07FA               	addwf	___fladd@bexp,f
  7630  05A5                     l766:	
  7631  05A5  0A7A               	incf	___fladd@bexp,w
  7632  05A6  1D03               	btfss	3,2
  7633  05A7  087A               	movf	___fladd@bexp,w
  7634  05A8  1D03               	btfss	3,2
  7635  05A9  2DB5               	goto	l2397
  7636  05AA  3000               	movlw	0
  7637  05AB  00F3               	movwf	___fladd@b+3
  7638  05AC  3000               	movlw	0
  7639  05AD  00F2               	movwf	___fladd@b+2
  7640  05AE  3000               	movlw	0
  7641  05AF  00F1               	movwf	___fladd@b+1
  7642  05B0  3000               	movlw	0
  7643  05B1  00F0               	movwf	___fladd@b
  7644  05B2  087A               	movf	___fladd@bexp,w
  7645  05B3  1903               	btfsc	3,2
  7646  05B4  01F8               	clrf	___fladd@signs
  7647  05B5                     l2397:	
  7648  05B5  1C7A               	btfss	___fladd@bexp,0
  7649  05B6  2DB9               	goto	l2401
  7650  05B7  17F2               	bsf	___fladd@b+2,7
  7651  05B8  2DBE               	goto	l774
  7652  05B9                     l2401:	
  7653  05B9  307F               	movlw	127
  7654  05BA  0020               	movlb	0	; select bank0
  7655  05BB  00A0               	movwf	??___fladd
  7656  05BC  0820               	movf	??___fladd,w
  7657  05BD  05F2               	andwf	___fladd@b+2,f
  7658  05BE                     l774:	
  7659  05BE  367A               	lsrf	___fladd@bexp,w
  7660  05BF  0020               	movlb	0	; select bank0
  7661  05C0  00A0               	movwf	??___fladd
  7662  05C1  0820               	movf	??___fladd,w
  7663  05C2  00F3               	movwf	___fladd@b+3
  7664  05C3  1FF8               	btfss	___fladd@signs,7
  7665  05C4  0008               	return
  7666  05C5  17F3               	bsf	___fladd@b+3,7
  7667  05C6  0008               	return
  7668  05C7                     __end_of___fladd:	
  7669                           
  7670                           	psect	text23
  7671  1675                     __ptext23:	
  7672 ;; *************** function ___flneg *****************
  7673 ;; Defined at:
  7674 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flneg.c"
  7675 ;; Parameters:    Size  Location     Type
  7676 ;;  f1              4    0[COMMON] unsigned char 
  7677 ;; Auto vars:     Size  Location     Type
  7678 ;;		None
  7679 ;; Return value:  Size  Location     Type
  7680 ;;                  4    0[COMMON] unsigned char 
  7681 ;; Registers used:
  7682 ;;		wreg
  7683 ;; Tracked objects:
  7684 ;;		On entry : 0/0
  7685 ;;		On exit  : 0/0
  7686 ;;		Unchanged: 0/0
  7687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7688 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7691 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7692 ;;Total ram usage:        4 bytes
  7693 ;; Hardware stack levels used:    1
  7694 ;; This function calls:
  7695 ;;		Nothing
  7696 ;; This function is called by:
  7697 ;;		_ftoa
  7698 ;; This function uses a non-reentrant model
  7699 ;;
  7700                           
  7701                           
  7702                           ;psect for function ___flneg
  7703  1675                     ___flneg:	
  7704                           
  7705                           ;incstack = 0
  7706                           ; Regs used in ___flneg: [wreg]
  7707  1675  0873               	movf	___flneg@f1+3,w
  7708  1676  0472               	iorwf	___flneg@f1+2,w
  7709  1677  0471               	iorwf	___flneg@f1+1,w
  7710  1678  0470               	iorwf	___flneg@f1,w
  7711  1679  1903               	skipnz
  7712  167A  0008               	return
  7713  167B  3080               	movlw	128
  7714  167C  06F3               	xorwf	___flneg@f1+3,f
  7715  167D  0008               	return
  7716  167E                     __end_of___flneg:	
  7717                           
  7718                           	psect	text24
  7719  05C7                     __ptext24:	
  7720 ;; *************** function ___flmul *****************
  7721 ;; Defined at:
  7722 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcmul.c"
  7723 ;; Parameters:    Size  Location     Type
  7724 ;;  b               4   21[BANK0 ] unsigned char 
  7725 ;;  a               4   25[BANK0 ] unsigned char 
  7726 ;; Auto vars:     Size  Location     Type
  7727 ;;  prod            4   41[BANK0 ] struct .
  7728 ;;  grs             4   35[BANK0 ] unsigned long 
  7729 ;;  temp            2   45[BANK0 ] struct .
  7730 ;;  bexp            1   40[BANK0 ] unsigned char 
  7731 ;;  aexp            1   39[BANK0 ] unsigned char 
  7732 ;;  sign            1   34[BANK0 ] unsigned char 
  7733 ;; Return value:  Size  Location     Type
  7734 ;;                  4   21[BANK0 ] unsigned char 
  7735 ;; Registers used:
  7736 ;;		wreg, status,2, status,0, pclath, cstack
  7737 ;; Tracked objects:
  7738 ;;		On entry : 0/0
  7739 ;;		On exit  : 0/0
  7740 ;;		Unchanged: 0/0
  7741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7742 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7743 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7744 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7745 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7746 ;;Total ram usage:       26 bytes
  7747 ;; Hardware stack levels used:    1
  7748 ;; Hardware stack levels required when called:    1
  7749 ;; This function calls:
  7750 ;;		__Umul8_16
  7751 ;; This function is called by:
  7752 ;;		_main
  7753 ;;		_ftoa
  7754 ;; This function uses a non-reentrant model
  7755 ;;
  7756                           
  7757                           
  7758                           ;psect for function ___flmul
  7759  05C7                     ___flmul:	
  7760                           
  7761                           ;incstack = 0
  7762                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  7763  05C7  0020               	movlb	0	; select bank0
  7764  05C8  0838               	movf	___flmul@b+3,w
  7765  05C9  3980               	andlw	128
  7766  05CA  00BD               	movwf	??___flmul
  7767  05CB  083D               	movf	??___flmul,w
  7768  05CC  00C2               	movwf	___flmul@sign
  7769  05CD  3538               	lslf	___flmul@b+3,w
  7770  05CE  00BD               	movwf	??___flmul
  7771  05CF  083D               	movf	??___flmul,w
  7772  05D0  00C8               	movwf	___flmul@bexp
  7773  05D1  1BB7               	btfsc	___flmul@b+2,7
  7774  05D2  1448               	bsf	___flmul@bexp,0
  7775  05D3  0848               	movf	___flmul@bexp,w
  7776  05D4  1903               	btfsc	3,2
  7777  05D5  2DE3               	goto	l2651
  7778  05D6  0A48               	incf	___flmul@bexp,w
  7779  05D7  1D03               	btfss	3,2
  7780  05D8  2DE1               	goto	l2649
  7781  05D9  3000               	movlw	0
  7782  05DA  00B8               	movwf	___flmul@b+3
  7783  05DB  3000               	movlw	0
  7784  05DC  00B7               	movwf	___flmul@b+2
  7785  05DD  3000               	movlw	0
  7786  05DE  00B6               	movwf	___flmul@b+1
  7787  05DF  3000               	movlw	0
  7788  05E0  00B5               	movwf	___flmul@b
  7789  05E1                     l2649:	
  7790  05E1  17B7               	bsf	___flmul@b+2,7
  7791  05E2  2DEB               	goto	l2653
  7792  05E3                     l2651:	
  7793  05E3  3000               	movlw	0
  7794  05E4  00B8               	movwf	___flmul@b+3
  7795  05E5  3000               	movlw	0
  7796  05E6  00B7               	movwf	___flmul@b+2
  7797  05E7  3000               	movlw	0
  7798  05E8  00B6               	movwf	___flmul@b+1
  7799  05E9  3000               	movlw	0
  7800  05EA  00B5               	movwf	___flmul@b
  7801  05EB                     l2653:	
  7802  05EB  083C               	movf	___flmul@a+3,w
  7803  05EC  3980               	andlw	128
  7804  05ED  00BD               	movwf	??___flmul
  7805  05EE  083D               	movf	??___flmul,w
  7806  05EF  06C2               	xorwf	___flmul@sign,f
  7807  05F0  353C               	lslf	___flmul@a+3,w
  7808  05F1  00BD               	movwf	??___flmul
  7809  05F2  083D               	movf	??___flmul,w
  7810  05F3  00C7               	movwf	___flmul@aexp
  7811  05F4  1BBB               	btfsc	___flmul@a+2,7
  7812  05F5  1447               	bsf	___flmul@aexp,0
  7813  05F6  0847               	movf	___flmul@aexp,w
  7814  05F7  1903               	btfsc	3,2
  7815  05F8  2E06               	goto	l2669
  7816  05F9  0A47               	incf	___flmul@aexp,w
  7817  05FA  1D03               	btfss	3,2
  7818  05FB  2E04               	goto	l2667
  7819  05FC  3000               	movlw	0
  7820  05FD  00BC               	movwf	___flmul@a+3
  7821  05FE  3000               	movlw	0
  7822  05FF  00BB               	movwf	___flmul@a+2
  7823  0600  3000               	movlw	0
  7824  0601  00BA               	movwf	___flmul@a+1
  7825  0602  3000               	movlw	0
  7826  0603  00B9               	movwf	___flmul@a
  7827  0604                     l2667:	
  7828  0604  17BB               	bsf	___flmul@a+2,7
  7829  0605  2E0E               	goto	l2671
  7830  0606                     l2669:	
  7831  0606  3000               	movlw	0
  7832  0607  00BC               	movwf	___flmul@a+3
  7833  0608  3000               	movlw	0
  7834  0609  00BB               	movwf	___flmul@a+2
  7835  060A  3000               	movlw	0
  7836  060B  00BA               	movwf	___flmul@a+1
  7837  060C  3000               	movlw	0
  7838  060D  00B9               	movwf	___flmul@a
  7839  060E                     l2671:	
  7840  060E  0847               	movf	___flmul@aexp,w
  7841  060F  1D03               	btfss	3,2
  7842  0610  0848               	movf	___flmul@bexp,w
  7843  0611  1D03               	btfss	3,2
  7844  0612  2E1C               	goto	l2679
  7845  0613  3000               	movlw	0
  7846  0614  00B8               	movwf	?___flmul+3
  7847  0615  3000               	movlw	0
  7848  0616  00B7               	movwf	?___flmul+2
  7849  0617  3000               	movlw	0
  7850  0618  00B6               	movwf	?___flmul+1
  7851  0619  3000               	movlw	0
  7852  061A  00B5               	movwf	?___flmul
  7853  061B  0008               	return
  7854  061C                     l2679:	
  7855  061C  0835               	movf	___flmul@b,w
  7856  061D  00BD               	movwf	??___flmul
  7857  061E  083D               	movf	??___flmul,w
  7858  061F  00F0               	movwf	__Umul8_16@multiplicand
  7859  0620  083B               	movf	___flmul@a+2,w
  7860  0621  3197  2716  3185   	fcall	__Umul8_16
  7861  0624  0871               	movf	?__Umul8_16+1,w
  7862  0625  0020               	movlb	0	; select bank0
  7863  0626  00CE               	movwf	___flmul@temp+1
  7864  0627  0870               	movf	?__Umul8_16,w
  7865  0628  00CD               	movwf	___flmul@temp
  7866  0629  084D               	movf	___flmul@temp,w
  7867  062A  00BD               	movwf	??___flmul
  7868  062B  01BE               	clrf	??___flmul+1
  7869  062C  01BF               	clrf	??___flmul+2
  7870  062D  01C0               	clrf	??___flmul+3
  7871  062E  0840               	movf	??___flmul+3,w
  7872  062F  00C6               	movwf	___flmul@grs+3
  7873  0630  083F               	movf	??___flmul+2,w
  7874  0631  00C5               	movwf	___flmul@grs+2
  7875  0632  083E               	movf	??___flmul+1,w
  7876  0633  00C4               	movwf	___flmul@grs+1
  7877  0634  083D               	movf	??___flmul,w
  7878  0635  00C3               	movwf	___flmul@grs
  7879  0636  084E               	movf	___flmul@temp+1,w
  7880  0637  00BD               	movwf	??___flmul
  7881  0638  01BE               	clrf	??___flmul+1
  7882  0639  01BF               	clrf	??___flmul+2
  7883  063A  01C0               	clrf	??___flmul+3
  7884  063B  0840               	movf	??___flmul+3,w
  7885  063C  00CC               	movwf	___flmul@prod+3
  7886  063D  083F               	movf	??___flmul+2,w
  7887  063E  00CB               	movwf	___flmul@prod+2
  7888  063F  083E               	movf	??___flmul+1,w
  7889  0640  00CA               	movwf	___flmul@prod+1
  7890  0641  083D               	movf	??___flmul,w
  7891  0642  00C9               	movwf	___flmul@prod
  7892  0643  0836               	movf	___flmul@b+1,w
  7893  0644  00BD               	movwf	??___flmul
  7894  0645  083D               	movf	??___flmul,w
  7895  0646  00F0               	movwf	__Umul8_16@multiplicand
  7896  0647  083A               	movf	___flmul@a+1,w
  7897  0648  3197  2716  3185   	fcall	__Umul8_16
  7898  064B  0871               	movf	?__Umul8_16+1,w
  7899  064C  0020               	movlb	0	; select bank0
  7900  064D  00CE               	movwf	___flmul@temp+1
  7901  064E  0870               	movf	?__Umul8_16,w
  7902  064F  00CD               	movwf	___flmul@temp
  7903  0650  084D               	movf	___flmul@temp,w
  7904  0651  00BD               	movwf	??___flmul
  7905  0652  01BE               	clrf	??___flmul+1
  7906  0653  01BF               	clrf	??___flmul+2
  7907  0654  01C0               	clrf	??___flmul+3
  7908  0655  083D               	movf	??___flmul,w
  7909  0656  07C3               	addwf	___flmul@grs,f
  7910  0657  083E               	movf	??___flmul+1,w
  7911  0658  3DC4               	addwfc	___flmul@grs+1,f
  7912  0659  083F               	movf	??___flmul+2,w
  7913  065A  3DC5               	addwfc	___flmul@grs+2,f
  7914  065B  0840               	movf	??___flmul+3,w
  7915  065C  3DC6               	addwfc	___flmul@grs+3,f
  7916  065D  084E               	movf	___flmul@temp+1,w
  7917  065E  00BD               	movwf	??___flmul
  7918  065F  01BE               	clrf	??___flmul+1
  7919  0660  01BF               	clrf	??___flmul+2
  7920  0661  01C0               	clrf	??___flmul+3
  7921  0662  083D               	movf	??___flmul,w
  7922  0663  07C9               	addwf	___flmul@prod,f
  7923  0664  083E               	movf	??___flmul+1,w
  7924  0665  3DCA               	addwfc	___flmul@prod+1,f
  7925  0666  083F               	movf	??___flmul+2,w
  7926  0667  3DCB               	addwfc	___flmul@prod+2,f
  7927  0668  0840               	movf	??___flmul+3,w
  7928  0669  3DCC               	addwfc	___flmul@prod+3,f
  7929  066A  0837               	movf	___flmul@b+2,w
  7930  066B  00BD               	movwf	??___flmul
  7931  066C  083D               	movf	??___flmul,w
  7932  066D  00F0               	movwf	__Umul8_16@multiplicand
  7933  066E  0839               	movf	___flmul@a,w
  7934  066F  3197  2716  3185   	fcall	__Umul8_16
  7935  0672  0871               	movf	?__Umul8_16+1,w
  7936  0673  0020               	movlb	0	; select bank0
  7937  0674  00CE               	movwf	___flmul@temp+1
  7938  0675  0870               	movf	?__Umul8_16,w
  7939  0676  00CD               	movwf	___flmul@temp
  7940  0677  084D               	movf	___flmul@temp,w
  7941  0678  00BD               	movwf	??___flmul
  7942  0679  01BE               	clrf	??___flmul+1
  7943  067A  01BF               	clrf	??___flmul+2
  7944  067B  01C0               	clrf	??___flmul+3
  7945  067C  083D               	movf	??___flmul,w
  7946  067D  07C3               	addwf	___flmul@grs,f
  7947  067E  083E               	movf	??___flmul+1,w
  7948  067F  3DC4               	addwfc	___flmul@grs+1,f
  7949  0680  083F               	movf	??___flmul+2,w
  7950  0681  3DC5               	addwfc	___flmul@grs+2,f
  7951  0682  0840               	movf	??___flmul+3,w
  7952  0683  3DC6               	addwfc	___flmul@grs+3,f
  7953  0684  084E               	movf	___flmul@temp+1,w
  7954  0685  00BD               	movwf	??___flmul
  7955  0686  01BE               	clrf	??___flmul+1
  7956  0687  01BF               	clrf	??___flmul+2
  7957  0688  01C0               	clrf	??___flmul+3
  7958  0689  083D               	movf	??___flmul,w
  7959  068A  07C9               	addwf	___flmul@prod,f
  7960  068B  083E               	movf	??___flmul+1,w
  7961  068C  3DCA               	addwfc	___flmul@prod+1,f
  7962  068D  083F               	movf	??___flmul+2,w
  7963  068E  3DCB               	addwfc	___flmul@prod+2,f
  7964  068F  0840               	movf	??___flmul+3,w
  7965  0690  3DCC               	addwfc	___flmul@prod+3,f
  7966  0691  3008               	movlw	8
  7967  0692                     u2955:	
  7968  0692  35C3               	lslf	___flmul@grs,f
  7969  0693  0DC4               	rlf	___flmul@grs+1,f
  7970  0694  0DC5               	rlf	___flmul@grs+2,f
  7971  0695  0DC6               	rlf	___flmul@grs+3,f
  7972  0696  0B89               	decfsz	9,f
  7973  0697  2E92               	goto	u2955
  7974  0698  0836               	movf	___flmul@b+1,w
  7975  0699  00BD               	movwf	??___flmul
  7976  069A  083D               	movf	??___flmul,w
  7977  069B  00F0               	movwf	__Umul8_16@multiplicand
  7978  069C  0839               	movf	___flmul@a,w
  7979  069D  3197  2716  3185   	fcall	__Umul8_16
  7980  06A0  0871               	movf	?__Umul8_16+1,w
  7981  06A1  0020               	movlb	0	; select bank0
  7982  06A2  00CE               	movwf	___flmul@temp+1
  7983  06A3  0870               	movf	?__Umul8_16,w
  7984  06A4  00CD               	movwf	___flmul@temp
  7985  06A5  084D               	movf	___flmul@temp,w
  7986  06A6  07C3               	addwf	___flmul@grs,f
  7987  06A7  084E               	movf	___flmul@temp+1,w
  7988  06A8  3DC4               	addwfc	___flmul@grs+1,f
  7989  06A9  3000               	movlw	0
  7990  06AA  3DC5               	addwfc	___flmul@grs+2,f
  7991  06AB  3DC6               	addwfc	___flmul@grs+3,f
  7992  06AC  0835               	movf	___flmul@b,w
  7993  06AD  00BD               	movwf	??___flmul
  7994  06AE  083D               	movf	??___flmul,w
  7995  06AF  00F0               	movwf	__Umul8_16@multiplicand
  7996  06B0  083A               	movf	___flmul@a+1,w
  7997  06B1  3197  2716  3185   	fcall	__Umul8_16
  7998  06B4  0871               	movf	?__Umul8_16+1,w
  7999  06B5  0020               	movlb	0	; select bank0
  8000  06B6  00CE               	movwf	___flmul@temp+1
  8001  06B7  0870               	movf	?__Umul8_16,w
  8002  06B8  00CD               	movwf	___flmul@temp
  8003  06B9  084D               	movf	___flmul@temp,w
  8004  06BA  07C3               	addwf	___flmul@grs,f
  8005  06BB  084E               	movf	___flmul@temp+1,w
  8006  06BC  3DC4               	addwfc	___flmul@grs+1,f
  8007  06BD  3000               	movlw	0
  8008  06BE  3DC5               	addwfc	___flmul@grs+2,f
  8009  06BF  3DC6               	addwfc	___flmul@grs+3,f
  8010  06C0  3008               	movlw	8
  8011  06C1                     u2965:	
  8012  06C1  35C3               	lslf	___flmul@grs,f
  8013  06C2  0DC4               	rlf	___flmul@grs+1,f
  8014  06C3  0DC5               	rlf	___flmul@grs+2,f
  8015  06C4  0DC6               	rlf	___flmul@grs+3,f
  8016  06C5  0B89               	decfsz	9,f
  8017  06C6  2EC1               	goto	u2965
  8018  06C7  0835               	movf	___flmul@b,w
  8019  06C8  00BD               	movwf	??___flmul
  8020  06C9  083D               	movf	??___flmul,w
  8021  06CA  00F0               	movwf	__Umul8_16@multiplicand
  8022  06CB  0839               	movf	___flmul@a,w
  8023  06CC  3197  2716  3185   	fcall	__Umul8_16
  8024  06CF  0871               	movf	?__Umul8_16+1,w
  8025  06D0  0020               	movlb	0	; select bank0
  8026  06D1  00CE               	movwf	___flmul@temp+1
  8027  06D2  0870               	movf	?__Umul8_16,w
  8028  06D3  00CD               	movwf	___flmul@temp
  8029  06D4  084D               	movf	___flmul@temp,w
  8030  06D5  07C3               	addwf	___flmul@grs,f
  8031  06D6  084E               	movf	___flmul@temp+1,w
  8032  06D7  3DC4               	addwfc	___flmul@grs+1,f
  8033  06D8  3000               	movlw	0
  8034  06D9  3DC5               	addwfc	___flmul@grs+2,f
  8035  06DA  3DC6               	addwfc	___flmul@grs+3,f
  8036  06DB  0836               	movf	___flmul@b+1,w
  8037  06DC  00BD               	movwf	??___flmul
  8038  06DD  083D               	movf	??___flmul,w
  8039  06DE  00F0               	movwf	__Umul8_16@multiplicand
  8040  06DF  083B               	movf	___flmul@a+2,w
  8041  06E0  3197  2716  3185   	fcall	__Umul8_16
  8042  06E3  0871               	movf	?__Umul8_16+1,w
  8043  06E4  0020               	movlb	0	; select bank0
  8044  06E5  00CE               	movwf	___flmul@temp+1
  8045  06E6  0870               	movf	?__Umul8_16,w
  8046  06E7  00CD               	movwf	___flmul@temp
  8047  06E8  084D               	movf	___flmul@temp,w
  8048  06E9  07C9               	addwf	___flmul@prod,f
  8049  06EA  084E               	movf	___flmul@temp+1,w
  8050  06EB  3DCA               	addwfc	___flmul@prod+1,f
  8051  06EC  3000               	movlw	0
  8052  06ED  3DCB               	addwfc	___flmul@prod+2,f
  8053  06EE  3DCC               	addwfc	___flmul@prod+3,f
  8054  06EF  0837               	movf	___flmul@b+2,w
  8055  06F0  00BD               	movwf	??___flmul
  8056  06F1  083D               	movf	??___flmul,w
  8057  06F2  00F0               	movwf	__Umul8_16@multiplicand
  8058  06F3  083A               	movf	___flmul@a+1,w
  8059  06F4  3197  2716  3185   	fcall	__Umul8_16
  8060  06F7  0871               	movf	?__Umul8_16+1,w
  8061  06F8  0020               	movlb	0	; select bank0
  8062  06F9  00CE               	movwf	___flmul@temp+1
  8063  06FA  0870               	movf	?__Umul8_16,w
  8064  06FB  00CD               	movwf	___flmul@temp
  8065  06FC  084D               	movf	___flmul@temp,w
  8066  06FD  07C9               	addwf	___flmul@prod,f
  8067  06FE  084E               	movf	___flmul@temp+1,w
  8068  06FF  3DCA               	addwfc	___flmul@prod+1,f
  8069  0700  3000               	movlw	0
  8070  0701  3DCB               	addwfc	___flmul@prod+2,f
  8071  0702  3DCC               	addwfc	___flmul@prod+3,f
  8072  0703  0837               	movf	___flmul@b+2,w
  8073  0704  00BD               	movwf	??___flmul
  8074  0705  083D               	movf	??___flmul,w
  8075  0706  00F0               	movwf	__Umul8_16@multiplicand
  8076  0707  083B               	movf	___flmul@a+2,w
  8077  0708  3197  2716  3185   	fcall	__Umul8_16
  8078  070B  0871               	movf	?__Umul8_16+1,w
  8079  070C  0020               	movlb	0	; select bank0
  8080  070D  00CE               	movwf	___flmul@temp+1
  8081  070E  0870               	movf	?__Umul8_16,w
  8082  070F  00CD               	movwf	___flmul@temp
  8083  0710  084D               	movf	___flmul@temp,w
  8084  0711  00BD               	movwf	??___flmul
  8085  0712  084E               	movf	___flmul@temp+1,w
  8086  0713  00BE               	movwf	??___flmul+1
  8087  0714  01BF               	clrf	??___flmul+2
  8088  0715  01C0               	clrf	??___flmul+3
  8089  0716  3008               	movlw	8
  8090  0717                     u2975:	
  8091  0717  35BD               	lslf	??___flmul,f
  8092  0718  0DBE               	rlf	??___flmul+1,f
  8093  0719  0DBF               	rlf	??___flmul+2,f
  8094  071A  0DC0               	rlf	??___flmul+3,f
  8095  071B  0B89               	decfsz	9,f
  8096  071C  2F17               	goto	u2975
  8097  071D  083D               	movf	??___flmul,w
  8098  071E  07C9               	addwf	___flmul@prod,f
  8099  071F  083E               	movf	??___flmul+1,w
  8100  0720  3DCA               	addwfc	___flmul@prod+1,f
  8101  0721  083F               	movf	??___flmul+2,w
  8102  0722  3DCB               	addwfc	___flmul@prod+2,f
  8103  0723  0840               	movf	??___flmul+3,w
  8104  0724  3DCC               	addwfc	___flmul@prod+3,f
  8105  0725  0843               	movf	___flmul@grs,w
  8106  0726  00BD               	movwf	??___flmul
  8107  0727  0844               	movf	___flmul@grs+1,w
  8108  0728  00BE               	movwf	??___flmul+1
  8109  0729  0845               	movf	___flmul@grs+2,w
  8110  072A  00BF               	movwf	??___flmul+2
  8111  072B  0846               	movf	___flmul@grs+3,w
  8112  072C  00C0               	movwf	??___flmul+3
  8113  072D  3018               	movlw	24
  8114  072E                     u2985:	
  8115  072E  36C0               	lsrf	??___flmul+3,f
  8116  072F  0CBF               	rrf	??___flmul+2,f
  8117  0730  0CBE               	rrf	??___flmul+1,f
  8118  0731  0CBD               	rrf	??___flmul,f
  8119  0732  0B89               	decfsz	9,f
  8120  0733  2F2E               	goto	u2985
  8121  0734  083D               	movf	??___flmul,w
  8122  0735  07C9               	addwf	___flmul@prod,f
  8123  0736  083E               	movf	??___flmul+1,w
  8124  0737  3DCA               	addwfc	___flmul@prod+1,f
  8125  0738  083F               	movf	??___flmul+2,w
  8126  0739  3DCB               	addwfc	___flmul@prod+2,f
  8127  073A  0840               	movf	??___flmul+3,w
  8128  073B  3DCC               	addwfc	___flmul@prod+3,f
  8129  073C  3008               	movlw	8
  8130  073D                     u2995:	
  8131  073D  35C3               	lslf	___flmul@grs,f
  8132  073E  0DC4               	rlf	___flmul@grs+1,f
  8133  073F  0DC5               	rlf	___flmul@grs+2,f
  8134  0740  0DC6               	rlf	___flmul@grs+3,f
  8135  0741  0B89               	decfsz	9,f
  8136  0742  2F3D               	goto	u2995
  8137  0743  0848               	movf	___flmul@bexp,w
  8138  0744  0747               	addwf	___flmul@aexp,w
  8139  0745  00BD               	movwf	??___flmul
  8140  0746  01BE               	clrf	??___flmul+1
  8141  0747  0DBE               	rlf	??___flmul+1,f
  8142  0748  083D               	movf	??___flmul,w
  8143  0749  3E82               	addlw	130
  8144  074A  00CD               	movwf	___flmul@temp
  8145  074B  30FF               	movlw	255
  8146  074C  3D3E               	addwfc	??___flmul+1,w
  8147  074D  00CE               	movwf	___flmul@temp+1
  8148  074E                     l2731:	
  8149  074E  1BCB               	btfsc	___flmul@prod+2,7
  8150  074F  2F65               	goto	l2733
  8151  0750  3001               	movlw	1
  8152  0751                     u3005:	
  8153  0751  35C9               	lslf	___flmul@prod,f
  8154  0752  0DCA               	rlf	___flmul@prod+1,f
  8155  0753  0DCB               	rlf	___flmul@prod+2,f
  8156  0754  0DCC               	rlf	___flmul@prod+3,f
  8157  0755  0B89               	decfsz	9,f
  8158  0756  2F51               	goto	u3005
  8159  0757  1BC6               	btfsc	___flmul@grs+3,7
  8160  0758  1449               	bsf	___flmul@prod,0
  8161  0759  3001               	movlw	1
  8162  075A                     u3025:	
  8163  075A  35C3               	lslf	___flmul@grs,f
  8164  075B  0DC4               	rlf	___flmul@grs+1,f
  8165  075C  0DC5               	rlf	___flmul@grs+2,f
  8166  075D  0DC6               	rlf	___flmul@grs+3,f
  8167  075E  0B89               	decfsz	9,f
  8168  075F  2F5A               	goto	u3025
  8169  0760  30FF               	movlw	255
  8170  0761  07CD               	addwf	___flmul@temp,f
  8171  0762  30FF               	movlw	255
  8172  0763  3DCE               	addwfc	___flmul@temp+1,f
  8173  0764  2F4E               	goto	l2731
  8174  0765                     l2733:	
  8175  0765  01C7               	clrf	___flmul@aexp
  8176  0766  1FC6               	btfss	___flmul@grs+3,7
  8177  0767  2F7E               	goto	l2743
  8178  0768  30FF               	movlw	255
  8179  0769  0543               	andwf	___flmul@grs,w
  8180  076A  00BD               	movwf	??___flmul
  8181  076B  30FF               	movlw	255
  8182  076C  0544               	andwf	___flmul@grs+1,w
  8183  076D  00BE               	movwf	??___flmul+1
  8184  076E  30FF               	movlw	255
  8185  076F  0545               	andwf	___flmul@grs+2,w
  8186  0770  00BF               	movwf	??___flmul+2
  8187  0771  307F               	movlw	127
  8188  0772  0546               	andwf	___flmul@grs+3,w
  8189  0773  00C0               	movwf	??___flmul+3
  8190  0774  0840               	movf	??___flmul+3,w
  8191  0775  043F               	iorwf	??___flmul+2,w
  8192  0776  043E               	iorwf	??___flmul+1,w
  8193  0777  043D               	iorwf	??___flmul,w
  8194  0778  1903               	skipnz
  8195  0779  1849               	btfsc	___flmul@prod,0
  8196  077A  2F7C               	goto	l2739
  8197  077B  2F7E               	goto	l2743
  8198  077C                     l2739:	
  8199  077C  01C7               	clrf	___flmul@aexp
  8200  077D  0AC7               	incf	___flmul@aexp,f
  8201  077E                     l2743:	
  8202  077E  0847               	movf	___flmul@aexp,w
  8203  077F  1903               	btfsc	3,2
  8204  0780  2FA7               	goto	l2753
  8205  0781  3001               	movlw	1
  8206  0782  07C9               	addwf	___flmul@prod,f
  8207  0783  3000               	movlw	0
  8208  0784  3DCA               	addwfc	___flmul@prod+1,f
  8209  0785  3000               	movlw	0
  8210  0786  3DCB               	addwfc	___flmul@prod+2,f
  8211  0787  3000               	movlw	0
  8212  0788  3DCC               	addwfc	___flmul@prod+3,f
  8213  0789  1C4C               	btfss	___flmul@prod+3,0
  8214  078A  2FA7               	goto	l2753
  8215  078B  0849               	movf	___flmul@prod,w
  8216  078C  00BD               	movwf	??___flmul
  8217  078D  084A               	movf	___flmul@prod+1,w
  8218  078E  00BE               	movwf	??___flmul+1
  8219  078F  084B               	movf	___flmul@prod+2,w
  8220  0790  00BF               	movwf	??___flmul+2
  8221  0791  084C               	movf	___flmul@prod+3,w
  8222  0792  00C0               	movwf	??___flmul+3
  8223  0793  3001               	movlw	1
  8224  0794  00C1               	movwf	??___flmul+4
  8225  0795                     u3095:	
  8226  0795  37C0               	asrf	??___flmul+3,f
  8227  0796  0CBF               	rrf	??___flmul+2,f
  8228  0797  0CBE               	rrf	??___flmul+1,f
  8229  0798  0CBD               	rrf	??___flmul,f
  8230  0799  0BC1               	decfsz	??___flmul+4,f
  8231  079A  2F95               	goto	u3095
  8232  079B  0840               	movf	??___flmul+3,w
  8233  079C  00CC               	movwf	___flmul@prod+3
  8234  079D  083F               	movf	??___flmul+2,w
  8235  079E  00CB               	movwf	___flmul@prod+2
  8236  079F  083E               	movf	??___flmul+1,w
  8237  07A0  00CA               	movwf	___flmul@prod+1
  8238  07A1  083D               	movf	??___flmul,w
  8239  07A2  00C9               	movwf	___flmul@prod
  8240  07A3  3001               	movlw	1
  8241  07A4  07CD               	addwf	___flmul@temp,f
  8242  07A5  3000               	movlw	0
  8243  07A6  3DCE               	addwfc	___flmul@temp+1,f
  8244  07A7                     l2753:	
  8245  07A7  084E               	movf	___flmul@temp+1,w
  8246  07A8  3A80               	xorlw	128
  8247  07A9  00BD               	movwf	??___flmul
  8248  07AA  3080               	movlw	128
  8249  07AB  023D               	subwf	??___flmul,w
  8250  07AC  1D03               	skipz
  8251  07AD  2FB0               	goto	u3105
  8252  07AE  30FF               	movlw	255
  8253  07AF  024D               	subwf	___flmul@temp,w
  8254  07B0                     u3105:	
  8255  07B0  1C03               	skipc
  8256  07B1  2FBC               	goto	l2757
  8257  07B2  307F               	movlw	127
  8258  07B3  0020               	movlb	0	; select bank0
  8259  07B4  00CC               	movwf	___flmul@prod+3
  8260  07B5  3080               	movlw	128
  8261  07B6  00CB               	movwf	___flmul@prod+2
  8262  07B7  3000               	movlw	0
  8263  07B8  00CA               	movwf	___flmul@prod+1
  8264  07B9  3000               	movlw	0
  8265  07BA  00C9               	movwf	___flmul@prod
  8266  07BB  2FE6               	goto	l840
  8267  07BC                     l2757:	
  8268  07BC  0020               	movlb	0	; select bank0
  8269  07BD  084E               	movf	___flmul@temp+1,w
  8270  07BE  3A80               	xorlw	128
  8271  07BF  00BD               	movwf	??___flmul
  8272  07C0  3080               	movlw	128
  8273  07C1  023D               	subwf	??___flmul,w
  8274  07C2  1D03               	skipz
  8275  07C3  2FC6               	goto	u3115
  8276  07C4  3001               	movlw	1
  8277  07C5  024D               	subwf	___flmul@temp,w
  8278  07C6                     u3115:	
  8279  07C6  1803               	skipnc
  8280  07C7  2FD3               	goto	l2763
  8281  07C8  3000               	movlw	0
  8282  07C9  0020               	movlb	0	; select bank0
  8283  07CA  00CC               	movwf	___flmul@prod+3
  8284  07CB  3000               	movlw	0
  8285  07CC  00CB               	movwf	___flmul@prod+2
  8286  07CD  3000               	movlw	0
  8287  07CE  00CA               	movwf	___flmul@prod+1
  8288  07CF  3000               	movlw	0
  8289  07D0  00C9               	movwf	___flmul@prod
  8290  07D1  01C2               	clrf	___flmul@sign
  8291  07D2  2FE6               	goto	l840
  8292  07D3                     l2763:	
  8293  07D3  0020               	movlb	0	; select bank0
  8294  07D4  084D               	movf	___flmul@temp,w
  8295  07D5  00BD               	movwf	??___flmul
  8296  07D6  083D               	movf	??___flmul,w
  8297  07D7  00C8               	movwf	___flmul@bexp
  8298  07D8  30FF               	movlw	255
  8299  07D9  05C9               	andwf	___flmul@prod,f
  8300  07DA  30FF               	movlw	255
  8301  07DB  05CA               	andwf	___flmul@prod+1,f
  8302  07DC  307F               	movlw	127
  8303  07DD  05CB               	andwf	___flmul@prod+2,f
  8304  07DE  3000               	movlw	0
  8305  07DF  05CC               	andwf	___flmul@prod+3,f
  8306  07E0  1848               	btfsc	___flmul@bexp,0
  8307  07E1  17CB               	bsf	___flmul@prod+2,7
  8308  07E2  3648               	lsrf	___flmul@bexp,w
  8309  07E3  00BD               	movwf	??___flmul
  8310  07E4  083D               	movf	??___flmul,w
  8311  07E5  00CC               	movwf	___flmul@prod+3
  8312  07E6                     l840:	
  8313  07E6  0842               	movf	___flmul@sign,w
  8314  07E7  00BD               	movwf	??___flmul
  8315  07E8  083D               	movf	??___flmul,w
  8316  07E9  04CC               	iorwf	___flmul@prod+3,f
  8317  07EA  084C               	movf	___flmul@prod+3,w
  8318  07EB  00B8               	movwf	?___flmul+3
  8319  07EC  084B               	movf	___flmul@prod+2,w
  8320  07ED  00B7               	movwf	?___flmul+2
  8321  07EE  084A               	movf	___flmul@prod+1,w
  8322  07EF  00B6               	movwf	?___flmul+1
  8323  07F0  0849               	movf	___flmul@prod,w
  8324  07F1  00B5               	movwf	?___flmul
  8325  07F2  0008               	return
  8326  07F3                     __end_of___flmul:	
  8327                           
  8328                           	psect	text25
  8329  1716                     __ptext25:	
  8330 ;; *************** function __Umul8_16 *****************
  8331 ;; Defined at:
  8332 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8_16.c"
  8333 ;; Parameters:    Size  Location     Type
  8334 ;;  multiplier      1    wreg     unsigned char 
  8335 ;;  multiplicand    1    0[COMMON] unsigned char 
  8336 ;; Auto vars:     Size  Location     Type
  8337 ;;  multiplier      1    8[COMMON] unsigned char 
  8338 ;;  word_mpld       2    6[COMMON] unsigned int 
  8339 ;;  product         2    4[COMMON] unsigned int 
  8340 ;; Return value:  Size  Location     Type
  8341 ;;                  2    0[COMMON] unsigned int 
  8342 ;; Registers used:
  8343 ;;		wreg, status,2, status,0
  8344 ;; Tracked objects:
  8345 ;;		On entry : 0/0
  8346 ;;		On exit  : 0/0
  8347 ;;		Unchanged: 0/0
  8348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8349 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8350 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8351 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8352 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8353 ;;Total ram usage:        9 bytes
  8354 ;; Hardware stack levels used:    1
  8355 ;; This function calls:
  8356 ;;		Nothing
  8357 ;; This function is called by:
  8358 ;;		___flmul
  8359 ;; This function uses a non-reentrant model
  8360 ;;
  8361                           
  8362                           
  8363                           ;psect for function __Umul8_16
  8364  1716                     __Umul8_16:	
  8365                           
  8366                           ;incstack = 0
  8367                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8368                           ;__Umul8_16@multiplier stored from wreg
  8369  1716  00F8               	movwf	__Umul8_16@multiplier
  8370  1717  01F4               	clrf	__Umul8_16@product
  8371  1718  01F5               	clrf	__Umul8_16@product+1
  8372  1719  0870               	movf	__Umul8_16@multiplicand,w
  8373  171A  00F2               	movwf	??__Umul8_16
  8374  171B  01F3               	clrf	??__Umul8_16+1
  8375  171C  0872               	movf	??__Umul8_16,w
  8376  171D  00F6               	movwf	__Umul8_16@word_mpld
  8377  171E  0873               	movf	??__Umul8_16+1,w
  8378  171F  00F7               	movwf	__Umul8_16@word_mpld+1
  8379  1720                     l2411:	
  8380  1720  1C78               	btfss	__Umul8_16@multiplier,0
  8381  1721  2F26               	goto	l947
  8382  1722  0876               	movf	__Umul8_16@word_mpld,w
  8383  1723  07F4               	addwf	__Umul8_16@product,f
  8384  1724  0877               	movf	__Umul8_16@word_mpld+1,w
  8385  1725  3DF5               	addwfc	__Umul8_16@product+1,f
  8386  1726                     l947:	
  8387  1726  3001               	movlw	1
  8388  1727                     u2495:	
  8389  1727  35F6               	lslf	__Umul8_16@word_mpld,f
  8390  1728  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  8391  1729  0B89               	decfsz	9,f
  8392  172A  2F27               	goto	u2495
  8393  172B  1003               	clrc
  8394  172C  0CF8               	rrf	__Umul8_16@multiplier,f
  8395  172D  0878               	movf	__Umul8_16@multiplier,w
  8396  172E  1D03               	btfss	3,2
  8397  172F  2F20               	goto	l2411
  8398  1730  0875               	movf	__Umul8_16@product+1,w
  8399  1731  00F1               	movwf	?__Umul8_16+1
  8400  1732  0874               	movf	__Umul8_16@product,w
  8401  1733  00F0               	movwf	?__Umul8_16
  8402  1734  0008               	return
  8403  1735                     __end_of__Umul8_16:	
  8404                           
  8405                           	psect	text26
  8406  0D96                     __ptext26:	
  8407 ;; *************** function ___flge *****************
  8408 ;; Defined at:
  8409 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flge.c"
  8410 ;; Parameters:    Size  Location     Type
  8411 ;;  ff1             4    0[COMMON] unsigned int 
  8412 ;;  ff2             4    4[COMMON] unsigned int 
  8413 ;; Auto vars:     Size  Location     Type
  8414 ;;		None
  8415 ;; Return value:  Size  Location     Type
  8416 ;;		None               void
  8417 ;; Registers used:
  8418 ;;		wreg, status,2, status,0
  8419 ;; Tracked objects:
  8420 ;;		On entry : 0/0
  8421 ;;		On exit  : 0/0
  8422 ;;		Unchanged: 0/0
  8423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8424 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8426 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8427 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8428 ;;Total ram usage:       12 bytes
  8429 ;; Hardware stack levels used:    1
  8430 ;; This function calls:
  8431 ;;		Nothing
  8432 ;; This function is called by:
  8433 ;;		_main
  8434 ;;		_floor
  8435 ;;		_ftoa
  8436 ;; This function uses a non-reentrant model
  8437 ;;
  8438                           
  8439                           
  8440                           ;psect for function ___flge
  8441  0D96                     ___flge:	
  8442                           
  8443                           ;incstack = 0
  8444                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8445  0D96  3000               	movlw	0
  8446  0D97  0570               	andwf	___flge@ff1,w
  8447  0D98  00F8               	movwf	??___flge
  8448  0D99  3000               	movlw	0
  8449  0D9A  0571               	andwf	___flge@ff1+1,w
  8450  0D9B  00F9               	movwf	??___flge+1
  8451  0D9C  3080               	movlw	128
  8452  0D9D  0572               	andwf	___flge@ff1+2,w
  8453  0D9E  00FA               	movwf	??___flge+2
  8454  0D9F  307F               	movlw	127
  8455  0DA0  0573               	andwf	___flge@ff1+3,w
  8456  0DA1  00FB               	movwf	??___flge+3
  8457  0DA2  087B               	movf	??___flge+3,w
  8458  0DA3  047A               	iorwf	??___flge+2,w
  8459  0DA4  0479               	iorwf	??___flge+1,w
  8460  0DA5  0478               	iorwf	??___flge,w
  8461  0DA6  1D03               	skipz
  8462  0DA7  2DB0               	goto	l613
  8463  0DA8  3000               	movlw	0
  8464  0DA9  00F3               	movwf	___flge@ff1+3
  8465  0DAA  3000               	movlw	0
  8466  0DAB  00F2               	movwf	___flge@ff1+2
  8467  0DAC  3000               	movlw	0
  8468  0DAD  00F1               	movwf	___flge@ff1+1
  8469  0DAE  3000               	movlw	0
  8470  0DAF  00F0               	movwf	___flge@ff1
  8471  0DB0                     l613:	
  8472  0DB0  3000               	movlw	0
  8473  0DB1  0574               	andwf	___flge@ff2,w
  8474  0DB2  00F8               	movwf	??___flge
  8475  0DB3  3000               	movlw	0
  8476  0DB4  0575               	andwf	___flge@ff2+1,w
  8477  0DB5  00F9               	movwf	??___flge+1
  8478  0DB6  3080               	movlw	128
  8479  0DB7  0576               	andwf	___flge@ff2+2,w
  8480  0DB8  00FA               	movwf	??___flge+2
  8481  0DB9  307F               	movlw	127
  8482  0DBA  0577               	andwf	___flge@ff2+3,w
  8483  0DBB  00FB               	movwf	??___flge+3
  8484  0DBC  087B               	movf	??___flge+3,w
  8485  0DBD  047A               	iorwf	??___flge+2,w
  8486  0DBE  0479               	iorwf	??___flge+1,w
  8487  0DBF  0478               	iorwf	??___flge,w
  8488  0DC0  1D03               	skipz
  8489  0DC1  2DCA               	goto	l2571
  8490  0DC2  3000               	movlw	0
  8491  0DC3  00F7               	movwf	___flge@ff2+3
  8492  0DC4  3000               	movlw	0
  8493  0DC5  00F6               	movwf	___flge@ff2+2
  8494  0DC6  3000               	movlw	0
  8495  0DC7  00F5               	movwf	___flge@ff2+1
  8496  0DC8  3000               	movlw	0
  8497  0DC9  00F4               	movwf	___flge@ff2
  8498  0DCA                     l2571:	
  8499  0DCA  1FF3               	btfss	___flge@ff1+3,7
  8500  0DCB  2DE4               	goto	l2575
  8501  0DCC  3000               	movlw	0
  8502  0DCD  00F8               	movwf	??___flge
  8503  0DCE  3000               	movlw	0
  8504  0DCF  00F9               	movwf	??___flge+1
  8505  0DD0  3000               	movlw	0
  8506  0DD1  00FA               	movwf	??___flge+2
  8507  0DD2  3080               	movlw	128
  8508  0DD3  00FB               	movwf	??___flge+3
  8509  0DD4  0870               	movf	___flge@ff1,w
  8510  0DD5  02F8               	subwf	??___flge,f
  8511  0DD6  0871               	movf	___flge@ff1+1,w
  8512  0DD7  3BF9               	subwfb	??___flge+1,f
  8513  0DD8  0872               	movf	___flge@ff1+2,w
  8514  0DD9  3BFA               	subwfb	??___flge+2,f
  8515  0DDA  0873               	movf	___flge@ff1+3,w
  8516  0DDB  3BFB               	subwfb	??___flge+3,f
  8517  0DDC  087B               	movf	??___flge+3,w
  8518  0DDD  00F3               	movwf	___flge@ff1+3
  8519  0DDE  087A               	movf	??___flge+2,w
  8520  0DDF  00F2               	movwf	___flge@ff1+2
  8521  0DE0  0879               	movf	??___flge+1,w
  8522  0DE1  00F1               	movwf	___flge@ff1+1
  8523  0DE2  0878               	movf	??___flge,w
  8524  0DE3  00F0               	movwf	___flge@ff1
  8525  0DE4                     l2575:	
  8526  0DE4  1FF7               	btfss	___flge@ff2+3,7
  8527  0DE5  2DFE               	goto	l616
  8528  0DE6  3000               	movlw	0
  8529  0DE7  00F8               	movwf	??___flge
  8530  0DE8  3000               	movlw	0
  8531  0DE9  00F9               	movwf	??___flge+1
  8532  0DEA  3000               	movlw	0
  8533  0DEB  00FA               	movwf	??___flge+2
  8534  0DEC  3080               	movlw	128
  8535  0DED  00FB               	movwf	??___flge+3
  8536  0DEE  0874               	movf	___flge@ff2,w
  8537  0DEF  02F8               	subwf	??___flge,f
  8538  0DF0  0875               	movf	___flge@ff2+1,w
  8539  0DF1  3BF9               	subwfb	??___flge+1,f
  8540  0DF2  0876               	movf	___flge@ff2+2,w
  8541  0DF3  3BFA               	subwfb	??___flge+2,f
  8542  0DF4  0877               	movf	___flge@ff2+3,w
  8543  0DF5  3BFB               	subwfb	??___flge+3,f
  8544  0DF6  087B               	movf	??___flge+3,w
  8545  0DF7  00F7               	movwf	___flge@ff2+3
  8546  0DF8  087A               	movf	??___flge+2,w
  8547  0DF9  00F6               	movwf	___flge@ff2+2
  8548  0DFA  0879               	movf	??___flge+1,w
  8549  0DFB  00F5               	movwf	___flge@ff2+1
  8550  0DFC  0878               	movf	??___flge,w
  8551  0DFD  00F4               	movwf	___flge@ff2
  8552  0DFE                     l616:	
  8553  0DFE  3080               	movlw	128
  8554  0DFF  06F3               	xorwf	___flge@ff1+3,f
  8555  0E00  3080               	movlw	128
  8556  0E01  06F7               	xorwf	___flge@ff2+3,f
  8557  0E02  0877               	movf	___flge@ff2+3,w
  8558  0E03  0273               	subwf	___flge@ff1+3,w
  8559  0E04  1D03               	skipz
  8560  0E05  0008               	return
  8561  0E06  0876               	movf	___flge@ff2+2,w
  8562  0E07  0272               	subwf	___flge@ff1+2,w
  8563  0E08  1D03               	skipz
  8564  0E09  0008               	return
  8565  0E0A  0875               	movf	___flge@ff2+1,w
  8566  0E0B  0271               	subwf	___flge@ff1+1,w
  8567  0E0C  1D03               	skipz
  8568  0E0D  0008               	return
  8569  0E0E  0874               	movf	___flge@ff2,w
  8570  0E0F  0270               	subwf	___flge@ff1,w
  8571  0E10  0008               	return
  8572  0E11                     __end_of___flge:	
  8573                           
  8574                           	psect	text27
  8575  16B3                     __ptext27:	
  8576 ;; *************** function _OLED_Write_String *****************
  8577 ;; Defined at:
  8578 ;;		line 284 in file "oled.c"
  8579 ;; Parameters:    Size  Location     Type
  8580 ;;  s               2   12[COMMON] PTR unsigned char 
  8581 ;;		 -> ftoa@buf(17), STR_3(6), STR_2(6), OLED_Write_Integer@s(20), 
  8582 ;;		 -> STR_1(9), 
  8583 ;; Auto vars:     Size  Location     Type
  8584 ;;		None
  8585 ;; Return value:  Size  Location     Type
  8586 ;;                  1    wreg      void 
  8587 ;; Registers used:
  8588 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8589 ;; Tracked objects:
  8590 ;;		On entry : 0/0
  8591 ;;		On exit  : 0/0
  8592 ;;		Unchanged: 0/0
  8593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8594 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8596 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8597 ;;      Totals:         2       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8598 ;;Total ram usage:        3 bytes
  8599 ;; Hardware stack levels used:    1
  8600 ;; Hardware stack levels required when called:    2
  8601 ;; This function calls:
  8602 ;;		_OLED_PutChar
  8603 ;; This function is called by:
  8604 ;;		_main
  8605 ;;		_OLED_Write_Float
  8606 ;;		_OLED_Write_Integer
  8607 ;; This function uses a non-reentrant model
  8608 ;;
  8609                           
  8610                           
  8611                           ;psect for function _OLED_Write_String
  8612  16B3                     _OLED_Write_String:	
  8613  16B3                     l2927:	
  8614                           ;oled.c: 286: while (*s) OLED_PutChar( *s++);
  8615                           
  8616                           ;incstack = 0
  8617                           ; Regs used in _OLED_Write_String: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8618                           
  8619  16B3  087C               	movf	OLED_Write_String@s,w
  8620  16B4  0084               	movwf	4
  8621  16B5  087D               	movf	OLED_Write_String@s+1,w
  8622  16B6  0085               	movwf	5
  8623  16B7  0012               	moviw fsr0++
  8624  16B8  1903               	btfsc	3,2
  8625  16B9  0008               	return
  8626  16BA  087C               	movf	OLED_Write_String@s,w
  8627  16BB  0084               	movwf	4
  8628  16BC  087D               	movf	OLED_Write_String@s+1,w
  8629  16BD  0085               	movwf	5
  8630  16BE  0800               	movf	0,w	;code access
  8631  16BF  3180  2013  3196   	fcall	_OLED_PutChar
  8632  16C2  3001               	movlw	1
  8633  16C3  07FC               	addwf	OLED_Write_String@s,f
  8634  16C4  3000               	movlw	0
  8635  16C5  3DFD               	addwfc	OLED_Write_String@s+1,f
  8636  16C6  2EB3               	goto	l2927
  8637  16C7                     __end_of_OLED_Write_String:	
  8638                           
  8639                           	psect	text28
  8640  0C67                     __ptext28:	
  8641 ;; *************** function _OLED_Init *****************
  8642 ;; Defined at:
  8643 ;;		line 174 in file "oled.c"
  8644 ;; Parameters:    Size  Location     Type
  8645 ;;		None
  8646 ;; Auto vars:     Size  Location     Type
  8647 ;;		None
  8648 ;; Return value:  Size  Location     Type
  8649 ;;                  1    wreg      void 
  8650 ;; Registers used:
  8651 ;;		wreg, status,2, status,0, pclath, cstack
  8652 ;; Tracked objects:
  8653 ;;		On entry : 0/0
  8654 ;;		On exit  : 0/0
  8655 ;;		Unchanged: 0/0
  8656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8661 ;;Total ram usage:        0 bytes
  8662 ;; Hardware stack levels used:    1
  8663 ;; Hardware stack levels required when called:    2
  8664 ;; This function calls:
  8665 ;;		_OLED_Command
  8666 ;; This function is called by:
  8667 ;;		_main
  8668 ;; This function uses a non-reentrant model
  8669 ;;
  8670                           
  8671                           
  8672                           ;psect for function _OLED_Init
  8673  0C67                     _OLED_Init:	
  8674                           
  8675                           ;oled.c: 176: OLED_Command(0xAE);
  8676                           
  8677                           ;incstack = 0
  8678                           ; Regs used in _OLED_Init: [wreg+status,2+status,0+pclath+cstack]
  8679  0C67  30AE               	movlw	174
  8680  0C68  3196  26F8  318C   	fcall	_OLED_Command
  8681                           
  8682                           ;oled.c: 177: OLED_Command(0xD5);
  8683  0C6B  30D5               	movlw	213
  8684  0C6C  3196  26F8  318C   	fcall	_OLED_Command
  8685                           
  8686                           ;oled.c: 178: OLED_Command(0x80);
  8687  0C6F  3080               	movlw	128
  8688  0C70  3196  26F8  318C   	fcall	_OLED_Command
  8689                           
  8690                           ;oled.c: 179: OLED_Command(0xA8);
  8691  0C73  30A8               	movlw	168
  8692  0C74  3196  26F8  318C   	fcall	_OLED_Command
  8693                           
  8694                           ;oled.c: 180: OLED_Command(0x1F);
  8695  0C77  301F               	movlw	31
  8696  0C78  3196  26F8  318C   	fcall	_OLED_Command
  8697                           
  8698                           ;oled.c: 181: OLED_Command(0xD3);
  8699  0C7B  30D3               	movlw	211
  8700  0C7C  3196  26F8  318C   	fcall	_OLED_Command
  8701                           
  8702                           ;oled.c: 182: OLED_Command(0x0);
  8703  0C7F  3000               	movlw	0
  8704  0C80  3196  26F8  318C   	fcall	_OLED_Command
  8705                           
  8706                           ;oled.c: 183: OLED_Command(0x40 | 0x0);
  8707  0C83  3040               	movlw	64
  8708  0C84  3196  26F8  318C   	fcall	_OLED_Command
  8709                           
  8710                           ;oled.c: 184: OLED_Command(0x8D);
  8711  0C87  308D               	movlw	141
  8712  0C88  3196  26F8  318C   	fcall	_OLED_Command
  8713                           
  8714                           ;oled.c: 185: OLED_Command(0xAF);
  8715  0C8B  30AF               	movlw	175
  8716  0C8C  3196  26F8  318C   	fcall	_OLED_Command
  8717                           
  8718                           ;oled.c: 186: OLED_Command(0x20);
  8719  0C8F  3020               	movlw	32
  8720  0C90  3196  26F8  318C   	fcall	_OLED_Command
  8721                           
  8722                           ;oled.c: 187: OLED_Command(0x00);
  8723  0C93  3000               	movlw	0
  8724  0C94  3196  26F8  318C   	fcall	_OLED_Command
  8725                           
  8726                           ;oled.c: 188: OLED_Command(0xA0 | 0x1);
  8727  0C97  30A1               	movlw	161
  8728  0C98  3196  26F8  318C   	fcall	_OLED_Command
  8729                           
  8730                           ;oled.c: 189: OLED_Command(0xC8);
  8731  0C9B  30C8               	movlw	200
  8732  0C9C  3196  26F8  318C   	fcall	_OLED_Command
  8733                           
  8734                           ;oled.c: 190: OLED_Command(0xDA);
  8735  0C9F  30DA               	movlw	218
  8736  0CA0  3196  26F8  318C   	fcall	_OLED_Command
  8737                           
  8738                           ;oled.c: 191: OLED_Command(0x02);
  8739  0CA3  3002               	movlw	2
  8740  0CA4  3196  26F8  318C   	fcall	_OLED_Command
  8741                           
  8742                           ;oled.c: 192: OLED_Command(0x81);
  8743  0CA7  3081               	movlw	129
  8744  0CA8  3196  26F8  318C   	fcall	_OLED_Command
  8745                           
  8746                           ;oled.c: 193: OLED_Command(0x8F);
  8747  0CAB  308F               	movlw	143
  8748  0CAC  3196  26F8  318C   	fcall	_OLED_Command
  8749                           
  8750                           ;oled.c: 194: OLED_Command(0xD9);
  8751  0CAF  30D9               	movlw	217
  8752  0CB0  3196  26F8  318C   	fcall	_OLED_Command
  8753                           
  8754                           ;oled.c: 195: OLED_Command(0xF1);
  8755  0CB3  30F1               	movlw	241
  8756  0CB4  3196  26F8  318C   	fcall	_OLED_Command
  8757                           
  8758                           ;oled.c: 196: OLED_Command(0xDB);
  8759  0CB7  30DB               	movlw	219
  8760  0CB8  3196  26F8  318C   	fcall	_OLED_Command
  8761                           
  8762                           ;oled.c: 197: OLED_Command(0x40);
  8763  0CBB  3040               	movlw	64
  8764  0CBC  3196  26F8  318C   	fcall	_OLED_Command
  8765                           
  8766                           ;oled.c: 198: OLED_Command(0xA4);
  8767  0CBF  30A4               	movlw	164
  8768  0CC0  3196  26F8  318C   	fcall	_OLED_Command
  8769                           
  8770                           ;oled.c: 199: OLED_Command(0xA6);
  8771  0CC3  30A6               	movlw	166
  8772  0CC4  3196  26F8  318C   	fcall	_OLED_Command
  8773                           
  8774                           ;oled.c: 200: OLED_Command(0xAF);
  8775  0CC7  30AF               	movlw	175
  8776  0CC8  3196  26F8         	fcall	_OLED_Command
  8777  0CCA  0008               	return
  8778  0CCB                     __end_of_OLED_Init:	
  8779                           
  8780                           	psect	text29
  8781  179E                     __ptext29:	
  8782 ;; *************** function _OLED_Clear *****************
  8783 ;; Defined at:
  8784 ;;		line 264 in file "oled.c"
  8785 ;; Parameters:    Size  Location     Type
  8786 ;;		None
  8787 ;; Auto vars:     Size  Location     Type
  8788 ;;  col             2   20[BANK0 ] unsigned int 
  8789 ;;  row             2   18[BANK0 ] unsigned int 
  8790 ;; Return value:  Size  Location     Type
  8791 ;;                  1    wreg      void 
  8792 ;; Registers used:
  8793 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8794 ;; Tracked objects:
  8795 ;;		On entry : 0/0
  8796 ;;		On exit  : 0/0
  8797 ;;		Unchanged: 0/0
  8798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8800 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8801 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8802 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8803 ;;Total ram usage:        5 bytes
  8804 ;; Hardware stack levels used:    1
  8805 ;; Hardware stack levels required when called:    3
  8806 ;; This function calls:
  8807 ;;		_OLED_PutChar
  8808 ;;		_OLED_YX
  8809 ;; This function is called by:
  8810 ;;		_main
  8811 ;; This function uses a non-reentrant model
  8812 ;;
  8813                           
  8814                           
  8815                           ;psect for function _OLED_Clear
  8816  179E                     _OLED_Clear:	
  8817                           
  8818                           ;oled.c: 266: for ( uint16_t row = 0; row < 8; row++ ) {
  8819                           
  8820                           ;incstack = 0
  8821                           ; Regs used in _OLED_Clear: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8822  179E  0020               	movlb	0	; select bank0
  8823  179F  01B2               	clrf	OLED_Clear@row
  8824  17A0  01B3               	clrf	OLED_Clear@row+1
  8825  17A1                     l2977:	
  8826                           
  8827                           ;oled.c: 267: for ( uint16_t col = 0; col < 16; col++ ) {
  8828  17A1  01B4               	clrf	OLED_Clear@col
  8829  17A2  01B5               	clrf	OLED_Clear@col+1
  8830  17A3                     l2983:	
  8831                           
  8832                           ;oled.c: 268: OLED_YX( row, col );
  8833  17A3  0834               	movf	OLED_Clear@col,w
  8834  17A4  00FC               	movwf	??_OLED_Clear
  8835  17A5  087C               	movf	??_OLED_Clear,w
  8836  17A6  00F5               	movwf	OLED_YX@Column
  8837  17A7  0832               	movf	OLED_Clear@row,w
  8838  17A8  3197  2776  3197   	fcall	_OLED_YX
  8839                           
  8840                           ;oled.c: 269: OLED_PutChar(' ');
  8841  17AB  3020               	movlw	32
  8842  17AC  3180  2013  3197   	fcall	_OLED_PutChar
  8843  17AF  3001               	movlw	1
  8844  17B0  0020               	movlb	0	; select bank0
  8845  17B1  07B4               	addwf	OLED_Clear@col,f
  8846  17B2  3000               	movlw	0
  8847  17B3  3DB5               	addwfc	OLED_Clear@col+1,f
  8848  17B4  3000               	movlw	0
  8849  17B5  0235               	subwf	OLED_Clear@col+1,w
  8850  17B6  3010               	movlw	16
  8851  17B7  1903               	skipnz
  8852  17B8  0234               	subwf	OLED_Clear@col,w
  8853  17B9  1C03               	skipc
  8854  17BA  2FA3               	goto	l2983
  8855  17BB  3001               	movlw	1
  8856  17BC  07B2               	addwf	OLED_Clear@row,f
  8857  17BD  3000               	movlw	0
  8858  17BE  3DB3               	addwfc	OLED_Clear@row+1,f
  8859  17BF  3000               	movlw	0
  8860  17C0  0233               	subwf	OLED_Clear@row+1,w
  8861  17C1  3008               	movlw	8
  8862  17C2  1903               	skipnz
  8863  17C3  0232               	subwf	OLED_Clear@row,w
  8864  17C4  1803               	btfsc	3,0
  8865  17C5  0008               	return
  8866  17C6  2FA1               	goto	l2977
  8867  17C7                     __end_of_OLED_Clear:	
  8868                           
  8869                           	psect	text30
  8870  1776                     __ptext30:	
  8871 ;; *************** function _OLED_YX *****************
  8872 ;; Defined at:
  8873 ;;		line 213 in file "oled.c"
  8874 ;; Parameters:    Size  Location     Type
  8875 ;;  Row             1    wreg     unsigned char 
  8876 ;;  Column          1    5[COMMON] unsigned char 
  8877 ;; Auto vars:     Size  Location     Type
  8878 ;;  Row             1    9[COMMON] unsigned char 
  8879 ;; Return value:  Size  Location     Type
  8880 ;;                  1    wreg      void 
  8881 ;; Registers used:
  8882 ;;		wreg, status,2, status,0, pclath, cstack
  8883 ;; Tracked objects:
  8884 ;;		On entry : 0/0
  8885 ;;		On exit  : 0/0
  8886 ;;		Unchanged: 0/0
  8887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8888 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8889 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8890 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8891 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8892 ;;Total ram usage:        5 bytes
  8893 ;; Hardware stack levels used:    1
  8894 ;; Hardware stack levels required when called:    2
  8895 ;; This function calls:
  8896 ;;		_OLED_Command
  8897 ;; This function is called by:
  8898 ;;		_main
  8899 ;;		_OLED_Clear
  8900 ;; This function uses a non-reentrant model
  8901 ;;
  8902                           
  8903                           
  8904                           ;psect for function _OLED_YX
  8905  1776                     _OLED_YX:	
  8906                           
  8907                           ;incstack = 0
  8908                           ; Regs used in _OLED_YX: [wreg+status,2+status,0+pclath+cstack]
  8909                           ;OLED_YX@Row stored from wreg
  8910  1776  00F9               	movwf	OLED_YX@Row
  8911                           
  8912                           ;oled.c: 215: OLED_Command( 0xB0 + Row);
  8913  1777  0879               	movf	OLED_YX@Row,w
  8914  1778  3EB0               	addlw	176
  8915  1779  3196  26F8  3197   	fcall	_OLED_Command
  8916                           
  8917                           ;oled.c: 216: OLED_Command( 0x00 + (8*Column & 0x0F) );
  8918  177C  0875               	movf	OLED_YX@Column,w
  8919  177D  00F6               	movwf	??_OLED_YX
  8920  177E  3002               	movlw	2
  8921  177F                     u3325:	
  8922  177F  35F6               	lslf	??_OLED_YX,f
  8923  1780  3EFF               	addlw	-1
  8924  1781  1D03               	skipz
  8925  1782  2F7F               	goto	u3325
  8926  1783  3576               	lslf	??_OLED_YX,w
  8927  1784  390F               	andlw	15
  8928  1785  3196  26F8  3197   	fcall	_OLED_Command
  8929                           
  8930                           ;oled.c: 217: OLED_Command( 0x10 + ((8*Column>>4)&0x0F) );
  8931  1788  0875               	movf	OLED_YX@Column,w
  8932  1789  00F6               	movwf	??_OLED_YX
  8933  178A  01F7               	clrf	??_OLED_YX+1
  8934  178B  35F6               	lslf	??_OLED_YX,f
  8935  178C  0DF7               	rlf	??_OLED_YX+1,f
  8936  178D  35F6               	lslf	??_OLED_YX,f
  8937  178E  0DF7               	rlf	??_OLED_YX+1,f
  8938  178F  35F6               	lslf	??_OLED_YX,f
  8939  1790  0DF7               	rlf	??_OLED_YX+1,f
  8940  1791  3004               	movlw	4
  8941  1792  00F8               	movwf	??_OLED_YX+2
  8942  1793                     u3335:	
  8943  1793  0D77               	rlf	??_OLED_YX+1,w
  8944  1794  0CF7               	rrf	??_OLED_YX+1,f
  8945  1795  0CF6               	rrf	??_OLED_YX,f
  8946  1796  0BF8               	decfsz	??_OLED_YX+2,f
  8947  1797  2F93               	goto	u3335
  8948  1798  0876               	movf	??_OLED_YX,w
  8949  1799  390F               	andlw	15
  8950  179A  3E10               	addlw	16
  8951  179B  3196  26F8         	fcall	_OLED_Command
  8952  179D  0008               	return
  8953  179E                     __end_of_OLED_YX:	
  8954                           
  8955                           	psect	text31
  8956  16F8                     __ptext31:	
  8957 ;; *************** function _OLED_Command *****************
  8958 ;; Defined at:
  8959 ;;		line 138 in file "oled.c"
  8960 ;; Parameters:    Size  Location     Type
  8961 ;;  temp            1    wreg     unsigned char 
  8962 ;; Auto vars:     Size  Location     Type
  8963 ;;  temp            1    4[COMMON] unsigned char 
  8964 ;; Return value:  Size  Location     Type
  8965 ;;                  1    wreg      void 
  8966 ;; Registers used:
  8967 ;;		wreg, status,2, status,0, pclath, cstack
  8968 ;; Tracked objects:
  8969 ;;		On entry : 0/0
  8970 ;;		On exit  : 0/0
  8971 ;;		Unchanged: 0/0
  8972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8974 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8975 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8976 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8977 ;;Total ram usage:        3 bytes
  8978 ;; Hardware stack levels used:    1
  8979 ;; Hardware stack levels required when called:    1
  8980 ;; This function calls:
  8981 ;;		_Send_I2C_Data
  8982 ;;		_Send_I2C_StartBit
  8983 ;;		_Send_I2C_StopBit
  8984 ;; This function is called by:
  8985 ;;		_OLED_Init
  8986 ;;		_OLED_YX
  8987 ;; This function uses a non-reentrant model
  8988 ;;
  8989                           
  8990                           
  8991                           ;psect for function _OLED_Command
  8992  16F8                     _OLED_Command:	
  8993                           
  8994                           ;incstack = 0
  8995                           ; Regs used in _OLED_Command: [wreg+status,2+status,0+pclath+cstack]
  8996                           ;OLED_Command@temp stored from wreg
  8997  16F8  00F4               	movwf	OLED_Command@temp
  8998                           
  8999                           ;oled.c: 140: Send_I2C_StartBit();
  9000  16F9  3196  265C  3196   	fcall	_Send_I2C_StartBit
  9001                           
  9002                           ;oled.c: 141: Send_I2C_Data(0x3C << 1);
  9003  16FC  3078               	movlw	120
  9004  16FD  00F0               	movwf	Send_I2C_Data@databyte
  9005  16FE  3000               	movlw	0
  9006  16FF  00F1               	movwf	Send_I2C_Data@databyte+1
  9007  1700  3196  266C  3196   	fcall	_Send_I2C_Data
  9008                           
  9009                           ;oled.c: 142: Send_I2C_Data(0x00);
  9010  1703  3000               	movlw	0
  9011  1704  00F0               	movwf	Send_I2C_Data@databyte
  9012  1705  00F1               	movwf	Send_I2C_Data@databyte+1
  9013  1706  3196  266C  3196   	fcall	_Send_I2C_Data
  9014                           
  9015                           ;oled.c: 143: Send_I2C_Data(temp);
  9016  1709  0874               	movf	OLED_Command@temp,w
  9017  170A  00F2               	movwf	??_OLED_Command
  9018  170B  01F3               	clrf	??_OLED_Command+1
  9019  170C  0872               	movf	??_OLED_Command,w
  9020  170D  00F0               	movwf	Send_I2C_Data@databyte
  9021  170E  0873               	movf	??_OLED_Command+1,w
  9022  170F  00F1               	movwf	Send_I2C_Data@databyte+1
  9023  1710  3196  266C  3196   	fcall	_Send_I2C_Data
  9024                           
  9025                           ;oled.c: 144: Send_I2C_StopBit();
  9026  1713  3196  2664         	fcall	_Send_I2C_StopBit
  9027  1715  0008               	return
  9028  1716                     __end_of_OLED_Command:	
  9029                           
  9030                           	psect	text32
  9031  0013                     __ptext32:	
  9032 ;; *************** function _OLED_PutChar *****************
  9033 ;; Defined at:
  9034 ;;		line 229 in file "oled.c"
  9035 ;; Parameters:    Size  Location     Type
  9036 ;;  ch              1    wreg     unsigned char 
  9037 ;; Auto vars:     Size  Location     Type
  9038 ;;  ch              1   17[BANK0 ] unsigned char 
  9039 ;;  bytes           9    4[BANK0 ] unsigned char [9]
  9040 ;;  i               2   15[BANK0 ] int 
  9041 ;;  base            2   13[BANK0 ] PTR const unsigned char 
  9042 ;;		 -> OledFont(768), 
  9043 ;; Return value:  Size  Location     Type
  9044 ;;                  1    wreg      void 
  9045 ;; Registers used:
  9046 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9047 ;; Tracked objects:
  9048 ;;		On entry : 0/0
  9049 ;;		On exit  : 0/0
  9050 ;;		Unchanged: 0/0
  9051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9053 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9054 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9055 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9056 ;;Total ram usage:       18 bytes
  9057 ;; Hardware stack levels used:    1
  9058 ;; Hardware stack levels required when called:    1
  9059 ;; This function calls:
  9060 ;;		_Send_I2C_Data
  9061 ;;		_Send_I2C_StartBit
  9062 ;;		_Send_I2C_StopBit
  9063 ;;		_memmove
  9064 ;; This function is called by:
  9065 ;;		_OLED_Clear
  9066 ;;		_OLED_Write_String
  9067 ;; This function uses a non-reentrant model
  9068 ;;
  9069                           
  9070                           
  9071                           ;psect for function _OLED_PutChar
  9072  0013                     _OLED_PutChar:	
  9073                           
  9074                           ;incstack = 0
  9075                           ; Regs used in _OLED_PutChar: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9076                           ;OLED_PutChar@ch stored from wreg
  9077  0013  0020               	movlb	0	; select bank0
  9078  0014  00B1               	movwf	OLED_PutChar@ch
  9079                           
  9080                           ;oled.c: 231: if ( ( ch < 32 ) || ( ch > 127 ) ){
  9081  0015  3020               	movlw	32
  9082  0016  0231               	subwf	OLED_PutChar@ch,w
  9083  0017  1C03               	skipc
  9084  0018  281D               	goto	l2435
  9085  0019  3080               	movlw	128
  9086  001A  0231               	subwf	OLED_PutChar@ch,w
  9087  001B  1C03               	skipc
  9088  001C  2821               	goto	l2437
  9089  001D                     l2435:	
  9090                           
  9091                           ;oled.c: 232: ch = ' ';
  9092  001D  3020               	movlw	32
  9093  001E  00A0               	movwf	??_OLED_PutChar
  9094  001F  0820               	movf	??_OLED_PutChar,w
  9095  0020  00B1               	movwf	OLED_PutChar@ch
  9096  0021                     l2437:	
  9097                           
  9098                           ;oled.c: 233: };oled.c: 235: const uint8_t *base = &OledFont[ch - 32][0];
  9099  0021  0831               	movf	OLED_PutChar@ch,w
  9100  0022  00A0               	movwf	??_OLED_PutChar
  9101  0023  01A1               	clrf	??_OLED_PutChar+1
  9102  0024  35A0               	lslf	??_OLED_PutChar,f
  9103  0025  0DA1               	rlf	??_OLED_PutChar+1,f
  9104  0026  35A0               	lslf	??_OLED_PutChar,f
  9105  0027  0DA1               	rlf	??_OLED_PutChar+1,f
  9106  0028  35A0               	lslf	??_OLED_PutChar,f
  9107  0029  0DA1               	rlf	??_OLED_PutChar+1,f
  9108  002A  3000               	movlw	low ((_OledFont| (0+32768)+65280))
  9109  002B  00A2               	movwf	??_OLED_PutChar+2
  9110  002C  3087               	movlw	high ((_OledFont| (0+32768)+65280))
  9111  002D  00A3               	movwf	??_OLED_PutChar+3
  9112  002E  0820               	movf	??_OLED_PutChar,w
  9113  002F  0722               	addwf	??_OLED_PutChar+2,w
  9114  0030  00AD               	movwf	OLED_PutChar@base
  9115  0031  0821               	movf	??_OLED_PutChar+1,w
  9116  0032  3D23               	addwfc	??_OLED_PutChar+3,w
  9117  0033  00AE               	movwf	OLED_PutChar@base+1
  9118                           
  9119                           ;oled.c: 237: uint8_t bytes[9];;oled.c: 238: bytes[0] = 0x40;
  9120  0034  3040               	movlw	64
  9121  0035  00A0               	movwf	??_OLED_PutChar
  9122  0036  0820               	movf	??_OLED_PutChar,w
  9123  0037  00A4               	movwf	OLED_PutChar@bytes
  9124                           
  9125                           ;oled.c: 239: memmove( bytes + 1, base, 8 );
  9126  0038  082E               	movf	OLED_PutChar@base+1,w
  9127  0039  00F1               	movwf	memmove@s1+1
  9128  003A  082D               	movf	OLED_PutChar@base,w
  9129  003B  00F0               	movwf	memmove@s1
  9130  003C  3008               	movlw	8
  9131  003D  00F2               	movwf	memmove@n
  9132  003E  3000               	movlw	0
  9133  003F  00F3               	movwf	memmove@n+1
  9134  0040  3025               	movlw	(low ((OLED_PutChar@bytes| 0+1)))& (0+255)
  9135  0041  318C  24CB  3180   	fcall	_memmove
  9136                           
  9137                           ;oled.c: 241: Send_I2C_StartBit();
  9138  0044  3196  265C  3180   	fcall	_Send_I2C_StartBit
  9139                           
  9140                           ;oled.c: 242: Send_I2C_Data(0x3C << 1);
  9141  0047  3078               	movlw	120
  9142  0048  00F0               	movwf	Send_I2C_Data@databyte
  9143  0049  3000               	movlw	0
  9144  004A  00F1               	movwf	Send_I2C_Data@databyte+1
  9145  004B  3196  266C  3180   	fcall	_Send_I2C_Data
  9146                           
  9147                           ;oled.c: 243: Send_I2C_Data(0x40);
  9148  004E  3040               	movlw	64
  9149  004F  00F0               	movwf	Send_I2C_Data@databyte
  9150  0050  3000               	movlw	0
  9151  0051  00F1               	movwf	Send_I2C_Data@databyte+1
  9152  0052  3196  266C  3180   	fcall	_Send_I2C_Data
  9153                           
  9154                           ;oled.c: 245: int i;;oled.c: 247: for (i = 1; i <= 8; i++){
  9155  0055  3001               	movlw	1
  9156  0056  0020               	movlb	0	; select bank0
  9157  0057  00AF               	movwf	OLED_PutChar@i
  9158  0058  3000               	movlw	0
  9159  0059  00B0               	movwf	OLED_PutChar@i+1
  9160  005A                     l2455:	
  9161                           
  9162                           ;oled.c: 248: Send_I2C_Data(bytes[i]);
  9163  005A  0020               	movlb	0	; select bank0
  9164  005B  082F               	movf	OLED_PutChar@i,w
  9165  005C  3E24               	addlw	(low (OLED_PutChar@bytes| 0))& (0+255)
  9166  005D  0086               	movwf	6
  9167  005E  0187               	clrf	7
  9168  005F  0801               	movf	1,w
  9169  0060  00A0               	movwf	??_OLED_PutChar
  9170  0061  01A1               	clrf	??_OLED_PutChar+1
  9171  0062  0820               	movf	??_OLED_PutChar,w
  9172  0063  00F0               	movwf	Send_I2C_Data@databyte
  9173  0064  0821               	movf	??_OLED_PutChar+1,w
  9174  0065  00F1               	movwf	Send_I2C_Data@databyte+1
  9175  0066  3196  266C  3180   	fcall	_Send_I2C_Data
  9176  0069  3001               	movlw	1
  9177  006A  0020               	movlb	0	; select bank0
  9178  006B  07AF               	addwf	OLED_PutChar@i,f
  9179  006C  3000               	movlw	0
  9180  006D  3DB0               	addwfc	OLED_PutChar@i+1,f
  9181  006E  0830               	movf	OLED_PutChar@i+1,w
  9182  006F  3A80               	xorlw	128
  9183  0070  00A0               	movwf	??_OLED_PutChar
  9184  0071  3080               	movlw	128
  9185  0072  0220               	subwf	??_OLED_PutChar,w
  9186  0073  1D03               	skipz
  9187  0074  2877               	goto	u2535
  9188  0075  3009               	movlw	9
  9189  0076  022F               	subwf	OLED_PutChar@i,w
  9190  0077                     u2535:	
  9191  0077  1C03               	skipc
  9192  0078  285A               	goto	l2455
  9193                           
  9194                           ;oled.c: 249: };oled.c: 251: Send_I2C_StopBit();
  9195  0079  3196  2664         	fcall	_Send_I2C_StopBit
  9196  007B  0008               	return
  9197  007C                     __end_of_OLED_PutChar:	
  9198                           
  9199                           	psect	text33
  9200  0CCB                     __ptext33:	
  9201 ;; *************** function _memmove *****************
  9202 ;; Defined at:
  9203 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\memmove.c"
  9204 ;; Parameters:    Size  Location     Type
  9205 ;;  d1              1    wreg     PTR void 
  9206 ;;		 -> OLED_PutChar@bytes(9), 
  9207 ;;  s1              2    0[COMMON] PTR const void 
  9208 ;;		 -> OledFont(768), 
  9209 ;;  n               2    2[COMMON] unsigned int 
  9210 ;; Auto vars:     Size  Location     Type
  9211 ;;  d1              1    8[COMMON] PTR void 
  9212 ;;		 -> OLED_PutChar@bytes(9), 
  9213 ;;  s               2    9[COMMON] PTR const unsigned char 
  9214 ;;		 -> OledFont(768), 
  9215 ;;  d               1   11[COMMON] PTR unsigned char 
  9216 ;;		 -> OLED_PutChar@bytes(9), 
  9217 ;; Return value:  Size  Location     Type
  9218 ;;                  1    wreg      PTR void 
  9219 ;; Registers used:
  9220 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  9221 ;; Tracked objects:
  9222 ;;		On entry : 0/0
  9223 ;;		On exit  : 0/0
  9224 ;;		Unchanged: 0/0
  9225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9226 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9227 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9228 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9229 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9230 ;;Total ram usage:       12 bytes
  9231 ;; Hardware stack levels used:    1
  9232 ;; This function calls:
  9233 ;;		Nothing
  9234 ;; This function is called by:
  9235 ;;		_OLED_PutChar
  9236 ;; This function uses a non-reentrant model
  9237 ;;
  9238                           
  9239                           
  9240                           ;psect for function _memmove
  9241  0CCB                     _memmove:	
  9242                           
  9243                           ;incstack = 0
  9244                           ; Regs used in _memmove: [wreg-fsr1h+status,2+status,0+pclath]
  9245                           ;memmove@d1 stored from wreg
  9246  0CCB  00F8               	movwf	memmove@d1
  9247  0CCC  0871               	movf	memmove@s1+1,w
  9248  0CCD  00FA               	movwf	memmove@s+1
  9249  0CCE  0870               	movf	memmove@s1,w
  9250  0CCF  00F9               	movwf	memmove@s
  9251  0CD0  0878               	movf	memmove@d1,w
  9252  0CD1  00F4               	movwf	??_memmove
  9253  0CD2  0874               	movf	??_memmove,w
  9254  0CD3  00FB               	movwf	memmove@d
  9255  0CD4  087B               	movf	memmove@d,w
  9256  0CD5  00F4               	movwf	??_memmove
  9257  0CD6  3000               	movlw	0
  9258  0CD7  00F5               	movwf	??_memmove+1
  9259  0CD8  0875               	movf	??_memmove+1,w
  9260  0CD9  027A               	subwf	memmove@s+1,w
  9261  0CDA  1D03               	skipz
  9262  0CDB  2CDE               	goto	u1785
  9263  0CDC  0874               	movf	??_memmove,w
  9264  0CDD  0279               	subwf	memmove@s,w
  9265  0CDE                     u1785:	
  9266  0CDE  1803               	skipnc
  9267  0CDF  2D14               	goto	l2121
  9268  0CE0  0872               	movf	memmove@n,w
  9269  0CE1  0779               	addwf	memmove@s,w
  9270  0CE2  00F4               	movwf	??_memmove
  9271  0CE3  0873               	movf	memmove@n+1,w
  9272  0CE4  3D7A               	addwfc	memmove@s+1,w
  9273  0CE5  00F5               	movwf	??_memmove+1
  9274  0CE6  087B               	movf	memmove@d,w
  9275  0CE7  00F6               	movwf	??_memmove+2
  9276  0CE8  3000               	movlw	0
  9277  0CE9  00F7               	movwf	??_memmove+3
  9278  0CEA  0875               	movf	??_memmove+1,w
  9279  0CEB  0277               	subwf	??_memmove+3,w
  9280  0CEC  1D03               	skipz
  9281  0CED  2CF0               	goto	u1795
  9282  0CEE  0874               	movf	??_memmove,w
  9283  0CEF  0276               	subwf	??_memmove+2,w
  9284  0CF0                     u1795:	
  9285  0CF0  1803               	skipnc
  9286  0CF1  2D14               	goto	l2121
  9287  0CF2  0872               	movf	memmove@n,w
  9288  0CF3  07F9               	addwf	memmove@s,f
  9289  0CF4  0873               	movf	memmove@n+1,w
  9290  0CF5  3DFA               	addwfc	memmove@s+1,f
  9291  0CF6  0872               	movf	memmove@n,w
  9292  0CF7  00F4               	movwf	??_memmove
  9293  0CF8  0874               	movf	??_memmove,w
  9294  0CF9  07FB               	addwf	memmove@d,f
  9295  0CFA                     l2117:	
  9296  0CFA  3001               	movlw	1
  9297  0CFB  02F9               	subwf	memmove@s,f
  9298  0CFC  3000               	movlw	0
  9299  0CFD  3BFA               	subwfb	memmove@s+1,f
  9300  0CFE  0879               	movf	memmove@s,w
  9301  0CFF  0084               	movwf	4
  9302  0D00  087A               	movf	memmove@s+1,w
  9303  0D01  0085               	movwf	5
  9304  0D02  0800               	movf	0,w	;code access
  9305  0D03  00F4               	movwf	??_memmove
  9306  0D04  3001               	movlw	1
  9307  0D05  02FB               	subwf	memmove@d,f
  9308  0D06  087B               	movf	memmove@d,w
  9309  0D07  0086               	movwf	6
  9310  0D08  0187               	clrf	7
  9311  0D09  0874               	movf	??_memmove,w
  9312  0D0A  0081               	movwf	1
  9313  0D0B  3001               	movlw	1
  9314  0D0C  02F2               	subwf	memmove@n,f
  9315  0D0D  3000               	movlw	0
  9316  0D0E  3BF3               	subwfb	memmove@n+1,f
  9317  0D0F  0872               	movf	memmove@n,w
  9318  0D10  0473               	iorwf	memmove@n+1,w
  9319  0D11  1903               	btfsc	3,2
  9320  0D12  0008               	return
  9321  0D13  2CFA               	goto	l2117
  9322  0D14                     l2121:	
  9323  0D14  0872               	movf	memmove@n,w
  9324  0D15  0473               	iorwf	memmove@n+1,w
  9325  0D16  1903               	btfsc	3,2
  9326  0D17  0008               	return
  9327  0D18  0879               	movf	memmove@s,w
  9328  0D19  0084               	movwf	4
  9329  0D1A  087A               	movf	memmove@s+1,w
  9330  0D1B  0085               	movwf	5
  9331  0D1C  0800               	movf	0,w	;code access
  9332  0D1D  00F4               	movwf	??_memmove
  9333  0D1E  087B               	movf	memmove@d,w
  9334  0D1F  0086               	movwf	6
  9335  0D20  0187               	clrf	7
  9336  0D21  0874               	movf	??_memmove,w
  9337  0D22  0081               	movwf	1
  9338  0D23  3001               	movlw	1
  9339  0D24  07F9               	addwf	memmove@s,f
  9340  0D25  3000               	movlw	0
  9341  0D26  3DFA               	addwfc	memmove@s+1,f
  9342  0D27  3001               	movlw	1
  9343  0D28  00F4               	movwf	??_memmove
  9344  0D29  0874               	movf	??_memmove,w
  9345  0D2A  07FB               	addwf	memmove@d,f
  9346  0D2B  3001               	movlw	1
  9347  0D2C  02F2               	subwf	memmove@n,f
  9348  0D2D  3000               	movlw	0
  9349  0D2E  3BF3               	subwfb	memmove@n+1,f
  9350  0D2F  2D14               	goto	l2121
  9351  0D30                     __end_of_memmove:	
  9352                           
  9353                           	psect	text34
  9354  1664                     __ptext34:	
  9355 ;; *************** function _Send_I2C_StopBit *****************
  9356 ;; Defined at:
  9357 ;;		line 106 in file "I2C.c"
  9358 ;; Parameters:    Size  Location     Type
  9359 ;;		None
  9360 ;; Auto vars:     Size  Location     Type
  9361 ;;		None
  9362 ;; Return value:  Size  Location     Type
  9363 ;;                  1    wreg      void 
  9364 ;; Registers used:
  9365 ;;		None
  9366 ;; Tracked objects:
  9367 ;;		On entry : 0/0
  9368 ;;		On exit  : 0/0
  9369 ;;		Unchanged: 0/0
  9370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9375 ;;Total ram usage:        0 bytes
  9376 ;; Hardware stack levels used:    1
  9377 ;; This function calls:
  9378 ;;		Nothing
  9379 ;; This function is called by:
  9380 ;;		_OLED_Command
  9381 ;;		_OLED_PutChar
  9382 ;;		_OLED_Data
  9383 ;; This function uses a non-reentrant model
  9384 ;;
  9385                           
  9386                           
  9387                           ;psect for function _Send_I2C_StopBit
  9388  1664                     _Send_I2C_StopBit:	
  9389                           
  9390                           ;I2C.c: 108: PIR1bits.SSP1IF=0;
  9391                           
  9392                           ;incstack = 0
  9393                           ; Regs used in _Send_I2C_StopBit: []
  9394  1664  0020               	movlb	0	; select bank0
  9395  1665  1191               	bcf	17,3	;volatile
  9396                           
  9397                           ;I2C.c: 109: SSPCON2bits.PEN=1;
  9398  1666  0024               	movlb	4	; select bank4
  9399  1667  1516               	bsf	22,2	;volatile
  9400  1668                     l308:	
  9401                           ;I2C.c: 110: while(!PIR1bits.SSP1IF);
  9402                           
  9403  1668  0020               	movlb	0	; select bank0
  9404  1669  1991               	btfsc	17,3	;volatile
  9405  166A  0008               	return
  9406  166B  2E68               	goto	l308
  9407  166C                     __end_of_Send_I2C_StopBit:	
  9408                           
  9409                           	psect	text35
  9410  165C                     __ptext35:	
  9411 ;; *************** function _Send_I2C_StartBit *****************
  9412 ;; Defined at:
  9413 ;;		line 96 in file "I2C.c"
  9414 ;; Parameters:    Size  Location     Type
  9415 ;;		None
  9416 ;; Auto vars:     Size  Location     Type
  9417 ;;		None
  9418 ;; Return value:  Size  Location     Type
  9419 ;;                  1    wreg      void 
  9420 ;; Registers used:
  9421 ;;		None
  9422 ;; Tracked objects:
  9423 ;;		On entry : 0/0
  9424 ;;		On exit  : 0/0
  9425 ;;		Unchanged: 0/0
  9426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9431 ;;Total ram usage:        0 bytes
  9432 ;; Hardware stack levels used:    1
  9433 ;; This function calls:
  9434 ;;		Nothing
  9435 ;; This function is called by:
  9436 ;;		_OLED_Command
  9437 ;;		_OLED_PutChar
  9438 ;;		_OLED_Data
  9439 ;; This function uses a non-reentrant model
  9440 ;;
  9441                           
  9442                           
  9443                           ;psect for function _Send_I2C_StartBit
  9444  165C                     _Send_I2C_StartBit:	
  9445                           
  9446                           ;I2C.c: 98: PIR1bits.SSP1IF=0;
  9447                           
  9448                           ;incstack = 0
  9449                           ; Regs used in _Send_I2C_StartBit: []
  9450  165C  0020               	movlb	0	; select bank0
  9451  165D  1191               	bcf	17,3	;volatile
  9452                           
  9453                           ;I2C.c: 99: SSPCON2bits.SEN=1;
  9454  165E  0024               	movlb	4	; select bank4
  9455  165F  1416               	bsf	22,0	;volatile
  9456  1660                     l302:	
  9457                           ;I2C.c: 100: while(!PIR1bits.SSP1IF);
  9458                           
  9459  1660  0020               	movlb	0	; select bank0
  9460  1661  1991               	btfsc	17,3	;volatile
  9461  1662  0008               	return
  9462  1663  2E60               	goto	l302
  9463  1664                     __end_of_Send_I2C_StartBit:	
  9464                           
  9465                           	psect	text36
  9466  166C                     __ptext36:	
  9467 ;; *************** function _Send_I2C_Data *****************
  9468 ;; Defined at:
  9469 ;;		line 48 in file "I2C.c"
  9470 ;; Parameters:    Size  Location     Type
  9471 ;;  databyte        2    0[COMMON] unsigned int 
  9472 ;; Auto vars:     Size  Location     Type
  9473 ;;		None
  9474 ;; Return value:  Size  Location     Type
  9475 ;;                  1    wreg      void 
  9476 ;; Registers used:
  9477 ;;		wreg
  9478 ;; Tracked objects:
  9479 ;;		On entry : 0/0
  9480 ;;		On exit  : 0/0
  9481 ;;		Unchanged: 0/0
  9482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9483 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9486 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9487 ;;Total ram usage:        2 bytes
  9488 ;; Hardware stack levels used:    1
  9489 ;; This function calls:
  9490 ;;		Nothing
  9491 ;; This function is called by:
  9492 ;;		_OLED_Command
  9493 ;;		_OLED_PutChar
  9494 ;;		_OLED_Data
  9495 ;; This function uses a non-reentrant model
  9496 ;;
  9497                           
  9498                           
  9499                           ;psect for function _Send_I2C_Data
  9500  166C                     _Send_I2C_Data:	
  9501                           
  9502                           ;I2C.c: 50: PIR1bits.SSP1IF=0;
  9503                           
  9504                           ;incstack = 0
  9505                           ; Regs used in _Send_I2C_Data: [wreg]
  9506  166C  0020               	movlb	0	; select bank0
  9507  166D  1191               	bcf	17,3	;volatile
  9508                           
  9509                           ;I2C.c: 51: SSPBUF = databyte;
  9510  166E  0870               	movf	Send_I2C_Data@databyte,w
  9511  166F  0024               	movlb	4	; select bank4
  9512  1670  0091               	movwf	17	;volatile
  9513  1671                     l284:	
  9514                           ;I2C.c: 52: while(!PIR1bits.SSP1IF);
  9515                           
  9516  1671  0020               	movlb	0	; select bank0
  9517  1672  1991               	btfsc	17,3	;volatile
  9518  1673  0008               	return
  9519  1674  2E71               	goto	l284
  9520  1675                     __end_of_Send_I2C_Data:	
  9521                           
  9522                           	psect	text37
  9523  16A3                     __ptext37:	
  9524 ;; *************** function _I2C_Init *****************
  9525 ;; Defined at:
  9526 ;;		line 19 in file "I2C.c"
  9527 ;; Parameters:    Size  Location     Type
  9528 ;;		None
  9529 ;; Auto vars:     Size  Location     Type
  9530 ;;		None
  9531 ;; Return value:  Size  Location     Type
  9532 ;;                  1    wreg      void 
  9533 ;; Registers used:
  9534 ;;		wreg, status,2, status,0
  9535 ;; Tracked objects:
  9536 ;;		On entry : 0/0
  9537 ;;		On exit  : 0/0
  9538 ;;		Unchanged: 0/0
  9539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9542 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9543 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9544 ;;Total ram usage:        1 bytes
  9545 ;; Hardware stack levels used:    1
  9546 ;; This function calls:
  9547 ;;		Nothing
  9548 ;; This function is called by:
  9549 ;;		_main
  9550 ;; This function uses a non-reentrant model
  9551 ;;
  9552                           
  9553                           
  9554                           ;psect for function _I2C_Init
  9555  16A3                     _I2C_Init:	
  9556                           
  9557                           ;I2C.c: 25: SSPCONbits.SSPM=0x08;
  9558                           
  9559                           ;incstack = 0
  9560                           ; Regs used in _I2C_Init: [wreg+status,2+status,0]
  9561  16A3  0024               	movlb	4	; select bank4
  9562  16A4  0815               	movf	21,w	;volatile
  9563  16A5  39F0               	andlw	-16
  9564  16A6  3808               	iorlw	8
  9565  16A7  0095               	movwf	21	;volatile
  9566                           
  9567                           ;I2C.c: 26: SSPCONbits.SSPEN=1;
  9568  16A8  1695               	bsf	21,5	;volatile
  9569                           
  9570                           ;I2C.c: 38: SSPADD = 39;
  9571  16A9  3027               	movlw	39
  9572  16AA  0092               	movwf	18	;volatile
  9573                           
  9574                           ;I2C.c: 42: _delay((unsigned long)((10)*(16000000/4000.0)));
  9575  16AB  3034               	movlw	52
  9576  16AC  00F0               	movwf	??_I2C_Init
  9577  16AD  30F2               	movlw	242
  9578  16AE                     u3487:	
  9579  16AE  0B89               	decfsz	9,f
  9580  16AF  2EAE               	goto	u3487
  9581  16B0  0BF0               	decfsz	??_I2C_Init,f
  9582  16B1  2EAE               	goto	u3487
  9583  16B2  0008               	return
  9584  16B3                     __end_of_I2C_Init:	
  9585  007E                     btemp	set	126	;btemp
  9586  007E                     wtemp0	set	126


Data Sizes:
    Strings     26
    Constant    808
    Data        0
    BSS         19
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     73      75
    BANK1            80     26      43
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    ftoa@status	PTR int  size(1) Largest target is 2
		 -> OLED_Write_Float@status(BANK0[2]), 

    memmove@d1	PTR void  size(1) Largest target is 9
		 -> OLED_PutChar@bytes(BANK0[9]), 

    memmove@d	PTR unsigned char  size(1) Largest target is 9
		 -> OLED_PutChar@bytes(BANK0[9]), 

    memmove@s1	PTR const void  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    memmove@s	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 20
		 -> OLED_Write_Integer@s(BANK0[20]), 

    ftoa@cp	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> floor@expon(BANK0[2]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_4(CODE[11]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__ftoa	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    OLED_Write_Float@buf11	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 20
		 -> OLED_Write_Integer@s(BANK0[20]), 

    OLED_Write_String@s	PTR unsigned char  size(2) Largest target is 20
		 -> ftoa@buf(BANK1[17]), STR_3(CODE[6]), STR_2(CODE[6]), OLED_Write_Integer@s(BANK0[20]), 
		 -> STR_1(CODE[9]), 

    sp__memmove	PTR void  size(1) Largest target is 9
		 -> OLED_PutChar@bytes(BANK0[9]), 

    OLED_PutChar@base	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 


Critical Paths under _main in COMMON

    _main->_OLED_Write_String
    _floor->_frexp
    _frexp->___fleq
    _OLED_Write_Float->_OLED_Write_String
    _sprintf->___lldiv
    ___llmod->___lldiv
    ___xxtofl->___fltol
    ___fltol->__Umul8_16
    ___flmul->___fltol
    _OLED_Init->_OLED_Command
    _OLED_YX->_OLED_Command
    _OLED_Command->_Send_I2C_Data
    _OLED_PutChar->_memmove

Critical Paths under _main in BANK0

    _main->_OLED_Write_Float
    _roundf->_floor
    _floor->___xxtofl
    _OLED_Write_Float->_ftoa
    _ftoa->___flmul
    _sprintf->___llmod
    ___xxtofl->___fltol
    ___flsub->___xxtofl
    ___flmul->___xxtofl
    _OLED_Write_String->_OLED_PutChar
    _OLED_Clear->_OLED_PutChar

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0   32230
                                             71 BANK0      2     2      0
                                              0 BANK1     26    26      0
                           _I2C_Init
                         _OLED_Clear
                          _OLED_Init
                   _OLED_Write_Float
                  _OLED_Write_String
                            _OLED_YX
                 _PWM3_LoadDutyValue
                  _SYSTEM_Initialize
                             ___fleq
                             ___flge
                            ___flmul
                           ___xxtofl
                             _roundf
 ---------------------------------------------------------------------------------
 (1) _roundf                                               8     4      4    8283
                                             32 BANK0      8     4      4
                            ___fladd
                              _floor
 ---------------------------------------------------------------------------------
 (2) _floor                                               11     7      4    5722
                                             21 BANK0     11     7      4
                            ___fladd
                             ___flge
                            ___fltol
                           ___xxtofl
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                7     2      5     880
                                             12 COMMON     2     2      0
                                              0 BANK0      5     0      5
                             ___fleq
 ---------------------------------------------------------------------------------
 (4) ___fleq                                              12     4      8     520
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM3_Initialize
                    _TMR6_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM3_LoadDutyValue                                   4     2      2     348
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _OLED_Write_Float                                     9     5      4   12072
                                             62 BANK0      9     5      4
                  _OLED_Write_String
                               _ftoa
 ---------------------------------------------------------------------------------
 (2) _ftoa                                                15    10      5   10041
                                             47 BANK0     15    10      5
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             36    26     10    2109
                                             10 BANK0     28    18     10
                            ___lldiv
                            ___llmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___llmod                                             10     2      8     311
                                              0 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     550
                                              7 BANK0     14    10      4
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             11     7      4     457
                                              9 COMMON     4     0      4
                                              0 BANK0      7     7      0
                          __Umul8_16 (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    2637
                                             21 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2440
                                              0 COMMON    12     4      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    2721
                                             21 BANK0     26    18      8
                          __Umul8_16
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8    1068
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _OLED_Write_String                                    3     1      2    1888
                                             12 COMMON     2     0      2
                                             18 BANK0      1     1      0
                       _OLED_PutChar
 ---------------------------------------------------------------------------------
 (1) _OLED_Init                                            0     0      0     728
                       _OLED_Command
 ---------------------------------------------------------------------------------
 (1) _OLED_Clear                                           5     5      0    2621
                                             12 COMMON     1     1      0
                                             18 BANK0      4     4      0
                       _OLED_PutChar
                            _OLED_YX
 ---------------------------------------------------------------------------------
 (1) _OLED_YX                                              5     4      1    1022
                                              5 COMMON     5     4      1
                       _OLED_Command
 ---------------------------------------------------------------------------------
 (2) _OLED_Command                                         3     3      0     728
                                              2 COMMON     3     3      0
                      _Send_I2C_Data
                  _Send_I2C_StartBit
                   _Send_I2C_StopBit
 ---------------------------------------------------------------------------------
 (2) _OLED_PutChar                                        18    18      0    1463
                                              0 BANK0     18    18      0
                      _Send_I2C_Data
                  _Send_I2C_StartBit
                   _Send_I2C_StopBit
                            _memmove
 ---------------------------------------------------------------------------------
 (3) _memmove                                             12     8      4     549
                                              0 COMMON    12     8      4
 ---------------------------------------------------------------------------------
 (3) _Send_I2C_StopBit                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Send_I2C_StartBit                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Send_I2C_Data                                        2     0      2     706
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Init
   _OLED_Clear
     _OLED_PutChar
       _Send_I2C_Data
       _Send_I2C_StartBit
       _Send_I2C_StopBit
       _memmove
     _OLED_YX
       _OLED_Command
         _Send_I2C_Data
         _Send_I2C_StartBit
         _Send_I2C_StopBit
   _OLED_Init
     _OLED_Command
       _Send_I2C_Data
       _Send_I2C_StartBit
       _Send_I2C_StopBit
   _OLED_Write_Float
     _OLED_Write_String
       _OLED_PutChar
         _Send_I2C_Data
         _Send_I2C_StartBit
         _Send_I2C_StopBit
         _memmove
     _ftoa
       ___flge
       ___flmul
         __Umul8_16
         ___fltol (ARG)
           __Umul8_16 (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             __Umul8_16 (ARG)
       ___flneg
       ___flsub
         ___fladd
         ___xxtofl (ARG)
           ___fltol (ARG)
             __Umul8_16 (ARG)
       ___fltol
         __Umul8_16 (ARG)
       ___xxtofl
         ___fltol (ARG)
           __Umul8_16 (ARG)
       _sprintf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         _isdigit
   _OLED_Write_String
     _OLED_PutChar
       _Send_I2C_Data
       _Send_I2C_StartBit
       _Send_I2C_StopBit
       _memmove
   _OLED_YX
     _OLED_Command
       _Send_I2C_Data
       _Send_I2C_StartBit
       _Send_I2C_StopBit
   _PWM3_LoadDutyValue
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM3_Initialize
     _TMR6_Initialize
     _WDT_Initialize
   ___fleq
   ___flge
   ___flmul
     __Umul8_16
     ___fltol (ARG)
       __Umul8_16 (ARG)
     ___xxtofl (ARG)
       ___fltol (ARG)
         __Umul8_16 (ARG)
   ___xxtofl
     ___fltol (ARG)
       __Umul8_16 (ARG)
   _roundf
     ___fladd
     _floor
       ___fladd
       ___flge
       ___fltol
         __Umul8_16 (ARG)
       ___xxtofl
         ___fltol (ARG)
           __Umul8_16 (ARG)
       _frexp
         ___fleq

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     49      4B       5       93.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     1A      2B       7       53.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0      84      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      84      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              50      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24              50      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25              20      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri May 03 00:20:34 2019

                    __CFG_CP$OFF 0000              ___wmul@multiplicand 0072              __Umul8_16@word_mpld 0076  
             OLED_Write_String@s 007C                              l202 00E8                              l302 1660  
                            l308 1668                              l413 02C1                              l424 0360  
                            l416 02E0                              l284 1671                              l613 0DB0  
                            l439 16E5                              l616 0DFE                              l632 0D7A  
                            l608 0B9F                              l609 0BB9                              l732 042B  
                            l840 07E6                              l736 04BF                              l753 0545  
                            l738 04A1                              l774 05BE                              l766 05A5  
                            l880 0E83                              l872 0E65                              l866 0E2F  
                            l947 1726                              l879 0E79                              _PR6 041D  
       __end_of_OLED_Write_Float 1776                     __CFG_BORV$LO 0000                              wreg 0009  
                   __CFG_IESO$ON 0000                     __CFG_FOSC$HS 0000                     ___flmul@aexp 0047  
                   ___flmul@bexp 0048                 OLED_Command@temp 0074                     ___flmul@sign 0042  
                   ___flmul@temp 004D                     ___flmul@prod 0049                     __CFG_LVP$OFF 0000  
                   ___fltol@exp1 0026                             l2121 0D14                             l2201 0B59  
                           l2117 0CFA                             l2301 04AC                             l2205 0B71  
                           l3101 01D7                             l2231 03FB                             l2401 05B9  
                           l2233 0403                             l2209 0B7C                             l2145 16DF  
                           l2411 1720                             l2251 0420                             l2227 03F8  
                           l2163 0C25                             l2139 16A1                             l2325 04E0  
                           l2317 04CD                             l2309 04BB                             l2261 0435  
                           l2173 0C53                             l2165 0C33                             l2327 04E2  
                           l2335 04F2                             l2255 0423                             l2503 02C8  
                           l3071 00E2                             l2361 0564                             l2353 0557  
                           l2345 053D                             l2177 0C5E                             l3065 00DF  
                           l2435 001D                             l2291 0471                             l2531 033D  
                           l2437 0021                             l2541 0373                             l2525 0310  
                           l2509 02EF                             l2189 0BCB                             l2455 005A  
                           l2375 0576                             l2367 056B                             l2615 0D68  
                           l2199 0B4B                             l2551 038A                             l2543 0376  
                           l2535 034C                             l2519 030E                             l2471 0242  
                           l3095 01AD                             l3087 0189                             l2369 056D  
                           l2625 0D87                             l2617 0D76                             l2801 0E77  
                           l2561 03D9                             l3089 0191                             l2571 0DCA  
                           l2731 074E                             l2651 05E3                             l2379 0578  
                           l2299 04AA                             l2803 0E6A                             l2733 0765  
                           l2653 05EB                             l2397 05B5                             l2557 03CE  
                           l2477 0252                             l2485 0280                             l2901 0ED9  
                           l2575 0DE4                             l2743 077E                             l2671 060E  
                           l2815 0E9E                             l2495 028F                             l2559 0220  
                           l2753 07A7                             l2649 05E1                             l2497 02BE  
                           l2825 0BEB                             l2905 0EE3                             l2763 07D3  
                           l2739 077C                             l2667 0604                             l2595 0D3A  
                           l2499 02C3                             l2915 0F3D                             l2757 07BC  
                           l2669 0606                             l2781 0E27                             l2927 16B3  
                           l2679 061C                             l2599 0D43                             l2791 0E42  
                           l2793 0E52                             l2787 0E3E                             l2939 0F81  
                           l2983 17A3                             l2977 17A1                             STR_1 1828  
                           STR_2 1831                             STR_3 1831                             STR_4 0B00  
                __end_of_OLED_YX 179E                             u2005 0B4E                      ?_OLED_Clear 0070  
                           u2025 0B67                             u2035 0B72                             u3005 0751  
                           _LATA 010C                             u2150 048F                             _LATB 010D  
                           _LATC 010E                             u2160 0490                             _LATD 010F  
                           u3105 07B0                             u3025 075A                             u2145 0485  
                           _LATE 0110                             u3115 07C6                             u2315 0558  
                           u3205 0E71                             u2415 0590                             u2273 0505  
                           u2265 04E7                             u2195 04B1                             u3325 177F  
                           u3245 0E8B                             u3165 0E4B                             u2535 0077  
                           u3335 1793                             u3095 0795                             u3185 0E5F  
                           u1905 0C28                             u2625 0333                             u3435 01F3  
                           u1925 0C34                             u2645 0344                             u3365 16D6  
                           u2495 1727                             u2815 0D69                             u1935 0C48  
                           u2655 0356                             u3447 00BE                             u1785 0CDE  
                           u1945 0C54                             u1865 16E6                             u2665 0368  
                           u3457 00E3                             u1795 0CF0                             u1875 16EB  
                           u3467 01D1                             u2845 0D7E                             u3477 01DD  
                           u3487 16AE                             u2785 0D4C                             u1985 0BC7  
                           u2955 0692                             u2965 06C1                             u2975 0717  
                           u2985 072E                             u2995 073D                             _TMR6 041C  
                           _WPUA 020C                             _WPUB 020D                             _WPUC 020E  
                           _WPUD 020F                             _WPUE 0210                     __CFG_WRT$OFF 0000  
                  __CFG_FCMEN$ON 0000                             _main 007C                             _ftoa 0F47  
               __end_of_I2C_Init 16B3                             fsr0h 0005                             fsr1h 0007  
                           indf0 0000                             fsr0l 0004                             indf1 0001  
                           fsr1l 0006                             btemp 007E                    __CFG_BOREN$ON 0000  
                    main@outVolt 00AA                             start 0002                    __CFG_MCLRE$ON 0000  
             __size_of_OLED_Init 0064   __size_of_OSCILLATOR_Initialize 0007    __end_of_OSCILLATOR_Initialize 165C  
                  ___fltol@sign1 0025                  __end_of___fladd 05C7                            ?_main 0070  
                          ?_ftoa 004F                  __end_of___flneg 167E                    __CFG_WDTE$OFF 0000  
                __end_of___flmul 07F3                  __end_of___flsub 1754                  __end_of___fltol 0D96  
                __end_of___lldiv 0C67                  __end_of___llmod 0B85                            _T6CON 041E  
                          _TRISA 008C                            _TRISB 008D                            _TRISC 008E  
                          _TRISD 008F                            _TRISE 0090                  __end_of_dpowers 1828  
                 _WDT_Initialize 1651                            _floor 0EA7                            _frexp 0BCD  
                          _errno 0069                  __end_of_isdigit 16A3                  __end_of_memmove 0D30  
                          main@i 00AE                            ftoa@f 004F                            ftoa@l 0059  
        __end_of_PWM3_Initialize 1695                            status 0003                            wtemp0 007E  
                __end_of_sprintf 03DE       __size_of_Send_I2C_StartBit 0008                  __initialization 07F3  
                   __end_of_main 021A                     __end_of_ftoa 1000                   __CFG_LPBOR$OFF 0000  
               __end_of_OledFont 0B00              __size_of_OLED_Clear 0029                           ??_main 0067  
                         ??_ftoa 0054                   __CFG_PLLEN$OFF 0000                    main@finalVolt 00B0  
                      ??_OLED_YX 0076           __end_of_WDT_Initialize 1655                  _TMR6_Initialize 167E  
                         ?_floor 0035                           ?_frexp 0020                 ___llmod@dividend 0024  
                         _ADRESH 009C                           _ADRESL 009B                   __CFG_ZCDDIS$ON 0000  
                         _ANSELA 018C                           _ANSELB 018D                           _ANSELC 018E  
                         _ANSELD 018F                           _ANSELE 0190                           _BORCON 0116  
              __end_of_OLED_Init 0CCB                           _RB0PPS 0E98                           _ODCONA 028C  
                         _ODCONB 028D                           _ODCONC 028E                           _ODCOND 028F  
                         _ODCONE 0290                           _OSCCON 0099                    ?_OLED_Command 0070  
                         _WDTCON 0097                           _SSPADD 0212                           _SSPBUF 0211  
               __end_of___xxtofl 0EA7                   __CFG_PWRTE$OFF 0000                    ?_OLED_PutChar 0070  
                         ___flge 0D96                           ___fleq 0B85      __size_of_PWM3_LoadDutyValue 0016  
                      ??___fladd 0020                           ___wmul 16DD           __size_of_Send_I2C_Data 0009  
                      ??___flneg 0074                   __CFG_STVREN$ON 0000                        ??___flmul 003D  
                      ??___flsub 007D                        ??___fltol 0020                        ??___lldiv 0078  
                      ??___llmod 0028                           _roundf 0B11                           floor@i 003A  
                         floor@x 0035                           ftoa@cp 005D                        ??_isdigit 0070  
                      ?_I2C_Init 0070                        ??_memmove 0074               __size_of__Umul8_16 001F  
                ?_WDT_Initialize 0070            Send_I2C_Data@databyte 0070                        ??_sprintf 0034  
                     ___flge@ff1 0070                       ___flge@ff2 0074                   ??_OLED_Command 0072  
               ?_PWM3_Initialize 0070                     ___xxtofl@arg 0031                     ___xxtofl@exp 0030  
              _SYSTEM_Initialize 0004                     ___xxtofl@val 0027                       ___fleq@ff1 0070  
                     ___fleq@ff2 0074          __end_of__initialization 07FD                       ___flneg@f1 0070  
             ?_SYSTEM_Initialize 0070                       ___fltol@f1 0079                   ??_OLED_PutChar 0020  
      __size_of_Send_I2C_StopBit 0008                   __pcstackCOMMON 0070              ??_SYSTEM_Initialize 0070  
                  __end_of_floor 0F47                    __end_of_frexp 0C15          __end_of_TMR6_Initialize 1688  
                     ??_I2C_Init 0070                   _OPTION_REGbits 0095                ?_OLED_Write_Float 005E  
             ??_OLED_Write_Float 0062                    _Send_I2C_Data 166C                          ??_floor 0039  
                        ??_frexp 007C        __end_of_SYSTEM_Initialize 0013                     sprintf@width 0041  
                   ??_OLED_Clear 007C                       __pbssBANK0 0069                       __pbssBANK1 00BA  
              __end_of__Umul8_16 1735                       __pmaintext 007C                          ?___flge 0070  
                        ?___fleq 0070                          ?___wmul 0070                          ?_roundf 0040  
             __end_of_OLED_Clear 17C7                        ?___xxtofl 0027                          _OLED_YX 1776  
                 ?_Send_I2C_Data 0070                          _OSCTUNE 0098                          _PWM3DCH 0618  
                        _PWM3DCL 0617                          _PWM3CON 0619                          _SLRCONA 030C  
                        _SLRCONB 030D                          _SLRCONC 030E                          _SLRCOND 030F  
                        _SLRCONE 0310                          _PPSLOCK 0E0F                  __size_of___flge 007B  
                __size_of___fleq 0048                          ___fladd 03DE                          ___flneg 1675  
                        ___flmul 05C7                          ___flsub 1735                          ___fltol 0D30  
                        ___lldiv 0C15                  __size_of___wmul 001B                          ___llmod 0B42  
               ?_TMR6_Initialize 0070             __end_of_OLED_Command 1716                          __ptext1 0B11  
                        __ptext2 0EA7                          __ptext3 0BCD                          __ptext4 0B85  
                        __ptext5 0004                          __ptext6 1651                          __ptext7 167E  
                        __ptext8 1688                          __ptext9 17C7                  __size_of_roundf 0031  
                        _dpowers 1800            _OSCILLATOR_Initialize 1655                          _isdigit 1695  
                        _memmove 0CCB                       ??___xxtofl 002B             __end_of_OLED_PutChar 007C  
       ??_PIN_MANAGER_Initialize 0070                        _T6CONbits 041E       __size_of_SYSTEM_Initialize 000F  
                        _sprintf 021A                          clrloop0 0B0C             end_of_initialization 07FD  
                        ftoa@buf 00BA                          ftoa@rem 0055                        _OLED_Init 0C67  
                ___lldiv@divisor 0070                 OLED_PutChar@base 002D                  ___lldiv@counter 007D  
               _Send_I2C_StopBit 1664                          roundf@x 0040                 ??_WDT_Initialize 0070  
              OLED_Write_Float@f 005E                      ___fladd@grs 007B                  ??_Send_I2C_Data 0072  
                  ___xxtofl@sign 002F                        _TRISAbits 008C                        _TRISCbits 008E  
              __size_of_I2C_Init 0010                      ___flmul@grs 0043                       ?_OLED_Init 0070  
                     main@result 00A6       __end_of_PWM3_LoadDutyValue 16DD                   __end_of___flge 0E11  
                 __end_of___fleq 0BCD                   __end_of___wmul 16F8           ?_OSCILLATOR_Initialize 0070  
                     floor@expon 003E                   __end_of_roundf 0B42              start_initialization 07F3  
__size_of_PIN_MANAGER_Initialize 0039                       ftoa@status 0053                       frexp@value 0020  
                ___llmod@divisor 0020                  ___llmod@counter 0029        __size_of_OLED_Write_Float 0022  
              _OLED_Write_String 16B3         __size_of_PWM3_Initialize 000D               ?_OLED_Write_String 007C  
                       ??___flge 0078            __size_of_OLED_Command 001E                         ??___fleq 0078  
                       ??___wmul 0074                      _CCPTMRSbits 029E                       OLED_YX@Row 0079  
                      __Umul8_16 1716            __size_of_OLED_PutChar 0069              ??_OLED_Write_String 0032  
                       ??_roundf 007E                        ___fladd@a 0074                        ___fladd@b 0070  
                      ___flmul@a 0039                        ___flmul@b 0035                        ___flsub@a 0035  
                      ___flsub@b 0039                        ___latbits 0003                         ?_OLED_YX 0075  
                main@desiredVolt 00B4                    __pcstackBANK0 0020                    __pcstackBANK1 00A0  
              __size_of___xxtofl 0096                     _isdigit$1072 0070                      sprintf@flag 003A  
                   _OLED_Command 16F8        __end_of_OLED_Write_String 16C7                      sprintf@prec 0043  
                    ??_OLED_Init 0075           _PIN_MANAGER_Initialize 17C7                     _OLED_PutChar 0013  
                       ?___fladd 0070                         ?___flneg 0070                         ?___flmul 0035  
                       ?___flsub 0035                         ?___fltol 0079                         ?___lldiv 0070  
                       ?___llmod 0020                       ?__Umul8_16 0070                 __CFG_PPS1WAY$OFF 0000  
                       ?_isdigit 0070                         _I2C_Init 16A3                         ?_memmove 0070  
         OLED_Write_Float@status 0064         __end_of_Send_I2C_StopBit 166C                         ?_sprintf 002A  
                 __size_of_floor 00A0                   __size_of_frexp 0048                   ___wmul@product 0074  
                      clear_ram0 0B0B                         _PIR1bits 0011                         _PIR2bits 0012  
              ??_PWM3_Initialize 0070                       _ADCON0bits 009D                       _ADCON1bits 009E  
              ___wmul@multiplier 0070                 __size_of_OLED_YX 0028         __size_of_TMR6_Initialize 000A  
     __size_of_OLED_Write_String 0014                         _OledFont 0800                        frexp@eptr 0024  
               _OLED_Write_Float 1754          ??_OSCILLATOR_Initialize 0070                      ??__Umul8_16 0072  
                      memmove@d1 0078                        memmove@s1 0070                 __size_of___fladd 01E9  
               __size_of___flneg 0009                 __size_of___flmul 022C                 __size_of___flsub 001F  
               __size_of___fltol 0066                 __size_of___lldiv 0052                 __size_of___llmod 0043  
             _PWM3_LoadDutyValue 16C7                       _ANSELAbits 018C                       _ANSELCbits 018E  
                     sprintf@val 003C                         ___xxtofl 0E11                 __size_of_isdigit 000E  
               __size_of_memmove 0065            __end_of_Send_I2C_Data 1675                         __ptext10 1655  
                       __ptext11 16C7                         __ptext20 0D30                         __ptext12 1754  
                       __ptext21 1735                         __ptext13 0F47                         __ptext30 1776  
                       __ptext22 03DE                         __ptext14 021A                         __ptext31 16F8  
                       __ptext23 1675                         __ptext15 1695                         __ptext32 0013  
                       __ptext24 05C7                         __ptext16 16DD                         __ptext33 0CCB  
                       __ptext25 1716                         __ptext17 0B42                         __ptext34 1664  
                       __ptext26 0D96                         __ptext18 0C15                         __ptext35 165C  
                       __ptext27 16B3                         __ptext19 0E11                         __ptext36 166C  
                       __ptext28 0C67                         __ptext37 16A3                         __ptext29 179E  
            ?_PWM3_LoadDutyValue 0070            OLED_Write_Float@buf11 0066                 __size_of_sprintf 01C4  
                  __size_of_main 019E                    _SSPDATPPSbits 0E21                    __size_of_ftoa 00B9  
                  OLED_Clear@col 0034                    OLED_Clear@row 0032                    OLED_YX@Column 0075  
                 OLED_PutChar@ch 0031             ??_PWM3_LoadDutyValue 0072                       _RC4PPSbits 0EA4  
                  _SSPCLKPPSbits 0E20                       _RC5PPSbits 0EA5                         main@duty 00B8  
                       isdigit@c 0071                         memmove@d 007B                         memmove@n 0072  
                       memmove@s 0079          __size_of_WDT_Initialize 0004                       _OLED_Clear 179E  
                      sprintf@ap 003B                        sprintf@sp 0040                 ___lldiv@dividend 0074  
        ?_PIN_MANAGER_Initialize 0070                ??_TMR6_Initialize 0070                __CFG_CLKOUTEN$OFF 0000  
                    _PPSLOCKbits 0E0F                _Send_I2C_StartBit 165C                OLED_PutChar@bytes 0024  
                  OLED_PutChar@i 002F               ?_Send_I2C_StartBit 0070      PWM3_LoadDutyValue@dutyValue 0070  
                  __pstringtext1 1800                    __pstringtext2 0800                    __pstringtext3 1828  
                  __pstringtext4 1831                    __pstringtext5 0000              ??_Send_I2C_StartBit 0070  
         __Umul8_16@multiplicand 0070                         sprintf@c 0045                         sprintf@f 002A  
               ___lldiv@quotient 0079                      _SSPCON2bits 0216                ?_Send_I2C_StopBit 0070  
                  ___fladd@signs 0078               ??_Send_I2C_StopBit 0070   __end_of_PIN_MANAGER_Initialize 1800  
                   ___fladd@aexp 0079                     ___fladd@bexp 007A        __end_of_Send_I2C_StartBit 1664  
           __Umul8_16@multiplier 0078                       _SSPCONbits 0215                  _PWM3_Initialize 1688  
                    _roundf$1268 0044                __Umul8_16@product 0074  
