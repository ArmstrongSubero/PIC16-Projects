

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Apr 24 15:59:22 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1719
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	stringtext4,global,class=STRCODE,delta=2
     8                           	psect	stringtext5,global,class=STRCODE,delta=2
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2
    45                           	dabs	1,0x7E,2
    46  0000                     
    47                           ; Version 2.05
    48                           ; Generated 20/12/2018 GMT
    49                           ; 
    50                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC16F1719 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     	;# 
    82  0001                     	;# 
    83  0002                     	;# 
    84  0003                     	;# 
    85  0004                     	;# 
    86  0005                     	;# 
    87  0006                     	;# 
    88  0007                     	;# 
    89  0008                     	;# 
    90  0009                     	;# 
    91  000A                     	;# 
    92  000B                     	;# 
    93  000C                     	;# 
    94  000D                     	;# 
    95  000E                     	;# 
    96  000F                     	;# 
    97  0010                     	;# 
    98  0011                     	;# 
    99  0012                     	;# 
   100  0013                     	;# 
   101  0015                     	;# 
   102  0016                     	;# 
   103  0016                     	;# 
   104  0017                     	;# 
   105  0018                     	;# 
   106  0019                     	;# 
   107  001A                     	;# 
   108  001B                     	;# 
   109  001C                     	;# 
   110  008C                     	;# 
   111  008D                     	;# 
   112  008E                     	;# 
   113  008F                     	;# 
   114  0090                     	;# 
   115  0091                     	;# 
   116  0092                     	;# 
   117  0093                     	;# 
   118  0095                     	;# 
   119  0096                     	;# 
   120  0097                     	;# 
   121  0098                     	;# 
   122  0099                     	;# 
   123  009A                     	;# 
   124  009B                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  010C                     	;# 
   131  010D                     	;# 
   132  010E                     	;# 
   133  010F                     	;# 
   134  0110                     	;# 
   135  0111                     	;# 
   136  0112                     	;# 
   137  0113                     	;# 
   138  0114                     	;# 
   139  0115                     	;# 
   140  0116                     	;# 
   141  0117                     	;# 
   142  0118                     	;# 
   143  0119                     	;# 
   144  011A                     	;# 
   145  011B                     	;# 
   146  011B                     	;# 
   147  011C                     	;# 
   148  018C                     	;# 
   149  018D                     	;# 
   150  018E                     	;# 
   151  018F                     	;# 
   152  0190                     	;# 
   153  0191                     	;# 
   154  0191                     	;# 
   155  0192                     	;# 
   156  0193                     	;# 
   157  0193                     	;# 
   158  0194                     	;# 
   159  0195                     	;# 
   160  0196                     	;# 
   161  0197                     	;# 
   162  0199                     	;# 
   163  0199                     	;# 
   164  0199                     	;# 
   165  019A                     	;# 
   166  019A                     	;# 
   167  019A                     	;# 
   168  019B                     	;# 
   169  019B                     	;# 
   170  019B                     	;# 
   171  019B                     	;# 
   172  019B                     	;# 
   173  019C                     	;# 
   174  019C                     	;# 
   175  019C                     	;# 
   176  019D                     	;# 
   177  019D                     	;# 
   178  019D                     	;# 
   179  019E                     	;# 
   180  019E                     	;# 
   181  019E                     	;# 
   182  019F                     	;# 
   183  019F                     	;# 
   184  019F                     	;# 
   185  019F                     	;# 
   186  019F                     	;# 
   187  020C                     	;# 
   188  020D                     	;# 
   189  020E                     	;# 
   190  020F                     	;# 
   191  0210                     	;# 
   192  0211                     	;# 
   193  0211                     	;# 
   194  0212                     	;# 
   195  0212                     	;# 
   196  0213                     	;# 
   197  0213                     	;# 
   198  0214                     	;# 
   199  0214                     	;# 
   200  0215                     	;# 
   201  0215                     	;# 
   202  0215                     	;# 
   203  0215                     	;# 
   204  0216                     	;# 
   205  0216                     	;# 
   206  0217                     	;# 
   207  0217                     	;# 
   208  028C                     	;# 
   209  028D                     	;# 
   210  028E                     	;# 
   211  028F                     	;# 
   212  0290                     	;# 
   213  0291                     	;# 
   214  0291                     	;# 
   215  0292                     	;# 
   216  0293                     	;# 
   217  0293                     	;# 
   218  0298                     	;# 
   219  0298                     	;# 
   220  0299                     	;# 
   221  029A                     	;# 
   222  029A                     	;# 
   223  029E                     	;# 
   224  030C                     	;# 
   225  030D                     	;# 
   226  030E                     	;# 
   227  030F                     	;# 
   228  0310                     	;# 
   229  038C                     	;# 
   230  038D                     	;# 
   231  038E                     	;# 
   232  038F                     	;# 
   233  0390                     	;# 
   234  0391                     	;# 
   235  0392                     	;# 
   236  0393                     	;# 
   237  0394                     	;# 
   238  0395                     	;# 
   239  0396                     	;# 
   240  0397                     	;# 
   241  0398                     	;# 
   242  0399                     	;# 
   243  039D                     	;# 
   244  039E                     	;# 
   245  039F                     	;# 
   246  0415                     	;# 
   247  0416                     	;# 
   248  0417                     	;# 
   249  041C                     	;# 
   250  041D                     	;# 
   251  041E                     	;# 
   252  0498                     	;# 
   253  0498                     	;# 
   254  0499                     	;# 
   255  049A                     	;# 
   256  049B                     	;# 
   257  049B                     	;# 
   258  049C                     	;# 
   259  049D                     	;# 
   260  049E                     	;# 
   261  049F                     	;# 
   262  0511                     	;# 
   263  0515                     	;# 
   264  0617                     	;# 
   265  0618                     	;# 
   266  0619                     	;# 
   267  0619                     	;# 
   268  061A                     	;# 
   269  061B                     	;# 
   270  061C                     	;# 
   271  061C                     	;# 
   272  0691                     	;# 
   273  0692                     	;# 
   274  0693                     	;# 
   275  0694                     	;# 
   276  0695                     	;# 
   277  0696                     	;# 
   278  0697                     	;# 
   279  0698                     	;# 
   280  0699                     	;# 
   281  069A                     	;# 
   282  069B                     	;# 
   283  069C                     	;# 
   284  069D                     	;# 
   285  069E                     	;# 
   286  069F                     	;# 
   287  0E0F                     	;# 
   288  0E10                     	;# 
   289  0E11                     	;# 
   290  0E12                     	;# 
   291  0E13                     	;# 
   292  0E14                     	;# 
   293  0E15                     	;# 
   294  0E17                     	;# 
   295  0E20                     	;# 
   296  0E21                     	;# 
   297  0E22                     	;# 
   298  0E24                     	;# 
   299  0E25                     	;# 
   300  0E28                     	;# 
   301  0E29                     	;# 
   302  0E2A                     	;# 
   303  0E2B                     	;# 
   304  0E90                     	;# 
   305  0E91                     	;# 
   306  0E92                     	;# 
   307  0E93                     	;# 
   308  0E94                     	;# 
   309  0E95                     	;# 
   310  0E96                     	;# 
   311  0E97                     	;# 
   312  0E98                     	;# 
   313  0E99                     	;# 
   314  0E9A                     	;# 
   315  0E9B                     	;# 
   316  0E9C                     	;# 
   317  0E9D                     	;# 
   318  0E9E                     	;# 
   319  0E9F                     	;# 
   320  0EA0                     	;# 
   321  0EA1                     	;# 
   322  0EA2                     	;# 
   323  0EA3                     	;# 
   324  0EA4                     	;# 
   325  0EA5                     	;# 
   326  0EA6                     	;# 
   327  0EA7                     	;# 
   328  0EA8                     	;# 
   329  0EA9                     	;# 
   330  0EAA                     	;# 
   331  0EAB                     	;# 
   332  0EAC                     	;# 
   333  0EAD                     	;# 
   334  0EAE                     	;# 
   335  0EAF                     	;# 
   336  0EB0                     	;# 
   337  0EB1                     	;# 
   338  0EB2                     	;# 
   339  0F0F                     	;# 
   340  0F10                     	;# 
   341  0F11                     	;# 
   342  0F12                     	;# 
   343  0F13                     	;# 
   344  0F14                     	;# 
   345  0F15                     	;# 
   346  0F16                     	;# 
   347  0F17                     	;# 
   348  0F18                     	;# 
   349  0F19                     	;# 
   350  0F1A                     	;# 
   351  0F1B                     	;# 
   352  0F1C                     	;# 
   353  0F1D                     	;# 
   354  0F1E                     	;# 
   355  0F1F                     	;# 
   356  0F20                     	;# 
   357  0F21                     	;# 
   358  0F22                     	;# 
   359  0F23                     	;# 
   360  0F24                     	;# 
   361  0F25                     	;# 
   362  0F26                     	;# 
   363  0F27                     	;# 
   364  0F28                     	;# 
   365  0F29                     	;# 
   366  0F2A                     	;# 
   367  0F2B                     	;# 
   368  0F2C                     	;# 
   369  0F2D                     	;# 
   370  0F2E                     	;# 
   371  0F2F                     	;# 
   372  0F30                     	;# 
   373  0F31                     	;# 
   374  0F32                     	;# 
   375  0F33                     	;# 
   376  0F34                     	;# 
   377  0F35                     	;# 
   378  0F36                     	;# 
   379  0F37                     	;# 
   380  0FE4                     	;# 
   381  0FE5                     	;# 
   382  0FE6                     	;# 
   383  0FE7                     	;# 
   384  0FE8                     	;# 
   385  0FE9                     	;# 
   386  0FEA                     	;# 
   387  0FEB                     	;# 
   388  0FED                     	;# 
   389  0FEE                     	;# 
   390  0FEF                     	;# 
   391  0000                     	;# 
   392  0001                     	;# 
   393  0002                     	;# 
   394  0003                     	;# 
   395  0004                     	;# 
   396  0005                     	;# 
   397  0006                     	;# 
   398  0007                     	;# 
   399  0008                     	;# 
   400  0009                     	;# 
   401  000A                     	;# 
   402  000B                     	;# 
   403  000C                     	;# 
   404  000D                     	;# 
   405  000E                     	;# 
   406  000F                     	;# 
   407  0010                     	;# 
   408  0011                     	;# 
   409  0012                     	;# 
   410  0013                     	;# 
   411  0015                     	;# 
   412  0016                     	;# 
   413  0016                     	;# 
   414  0017                     	;# 
   415  0018                     	;# 
   416  0019                     	;# 
   417  001A                     	;# 
   418  001B                     	;# 
   419  001C                     	;# 
   420  008C                     	;# 
   421  008D                     	;# 
   422  008E                     	;# 
   423  008F                     	;# 
   424  0090                     	;# 
   425  0091                     	;# 
   426  0092                     	;# 
   427  0093                     	;# 
   428  0095                     	;# 
   429  0096                     	;# 
   430  0097                     	;# 
   431  0098                     	;# 
   432  0099                     	;# 
   433  009A                     	;# 
   434  009B                     	;# 
   435  009B                     	;# 
   436  009C                     	;# 
   437  009D                     	;# 
   438  009E                     	;# 
   439  009F                     	;# 
   440  010C                     	;# 
   441  010D                     	;# 
   442  010E                     	;# 
   443  010F                     	;# 
   444  0110                     	;# 
   445  0111                     	;# 
   446  0112                     	;# 
   447  0113                     	;# 
   448  0114                     	;# 
   449  0115                     	;# 
   450  0116                     	;# 
   451  0117                     	;# 
   452  0118                     	;# 
   453  0119                     	;# 
   454  011A                     	;# 
   455  011B                     	;# 
   456  011B                     	;# 
   457  011C                     	;# 
   458  018C                     	;# 
   459  018D                     	;# 
   460  018E                     	;# 
   461  018F                     	;# 
   462  0190                     	;# 
   463  0191                     	;# 
   464  0191                     	;# 
   465  0192                     	;# 
   466  0193                     	;# 
   467  0193                     	;# 
   468  0194                     	;# 
   469  0195                     	;# 
   470  0196                     	;# 
   471  0197                     	;# 
   472  0199                     	;# 
   473  0199                     	;# 
   474  0199                     	;# 
   475  019A                     	;# 
   476  019A                     	;# 
   477  019A                     	;# 
   478  019B                     	;# 
   479  019B                     	;# 
   480  019B                     	;# 
   481  019B                     	;# 
   482  019B                     	;# 
   483  019C                     	;# 
   484  019C                     	;# 
   485  019C                     	;# 
   486  019D                     	;# 
   487  019D                     	;# 
   488  019D                     	;# 
   489  019E                     	;# 
   490  019E                     	;# 
   491  019E                     	;# 
   492  019F                     	;# 
   493  019F                     	;# 
   494  019F                     	;# 
   495  019F                     	;# 
   496  019F                     	;# 
   497  020C                     	;# 
   498  020D                     	;# 
   499  020E                     	;# 
   500  020F                     	;# 
   501  0210                     	;# 
   502  0211                     	;# 
   503  0211                     	;# 
   504  0212                     	;# 
   505  0212                     	;# 
   506  0213                     	;# 
   507  0213                     	;# 
   508  0214                     	;# 
   509  0214                     	;# 
   510  0215                     	;# 
   511  0215                     	;# 
   512  0215                     	;# 
   513  0215                     	;# 
   514  0216                     	;# 
   515  0216                     	;# 
   516  0217                     	;# 
   517  0217                     	;# 
   518  028C                     	;# 
   519  028D                     	;# 
   520  028E                     	;# 
   521  028F                     	;# 
   522  0290                     	;# 
   523  0291                     	;# 
   524  0291                     	;# 
   525  0292                     	;# 
   526  0293                     	;# 
   527  0293                     	;# 
   528  0298                     	;# 
   529  0298                     	;# 
   530  0299                     	;# 
   531  029A                     	;# 
   532  029A                     	;# 
   533  029E                     	;# 
   534  030C                     	;# 
   535  030D                     	;# 
   536  030E                     	;# 
   537  030F                     	;# 
   538  0310                     	;# 
   539  038C                     	;# 
   540  038D                     	;# 
   541  038E                     	;# 
   542  038F                     	;# 
   543  0390                     	;# 
   544  0391                     	;# 
   545  0392                     	;# 
   546  0393                     	;# 
   547  0394                     	;# 
   548  0395                     	;# 
   549  0396                     	;# 
   550  0397                     	;# 
   551  0398                     	;# 
   552  0399                     	;# 
   553  039D                     	;# 
   554  039E                     	;# 
   555  039F                     	;# 
   556  0415                     	;# 
   557  0416                     	;# 
   558  0417                     	;# 
   559  041C                     	;# 
   560  041D                     	;# 
   561  041E                     	;# 
   562  0498                     	;# 
   563  0498                     	;# 
   564  0499                     	;# 
   565  049A                     	;# 
   566  049B                     	;# 
   567  049B                     	;# 
   568  049C                     	;# 
   569  049D                     	;# 
   570  049E                     	;# 
   571  049F                     	;# 
   572  0511                     	;# 
   573  0515                     	;# 
   574  0617                     	;# 
   575  0618                     	;# 
   576  0619                     	;# 
   577  0619                     	;# 
   578  061A                     	;# 
   579  061B                     	;# 
   580  061C                     	;# 
   581  061C                     	;# 
   582  0691                     	;# 
   583  0692                     	;# 
   584  0693                     	;# 
   585  0694                     	;# 
   586  0695                     	;# 
   587  0696                     	;# 
   588  0697                     	;# 
   589  0698                     	;# 
   590  0699                     	;# 
   591  069A                     	;# 
   592  069B                     	;# 
   593  069C                     	;# 
   594  069D                     	;# 
   595  069E                     	;# 
   596  069F                     	;# 
   597  0E0F                     	;# 
   598  0E10                     	;# 
   599  0E11                     	;# 
   600  0E12                     	;# 
   601  0E13                     	;# 
   602  0E14                     	;# 
   603  0E15                     	;# 
   604  0E17                     	;# 
   605  0E20                     	;# 
   606  0E21                     	;# 
   607  0E22                     	;# 
   608  0E24                     	;# 
   609  0E25                     	;# 
   610  0E28                     	;# 
   611  0E29                     	;# 
   612  0E2A                     	;# 
   613  0E2B                     	;# 
   614  0E90                     	;# 
   615  0E91                     	;# 
   616  0E92                     	;# 
   617  0E93                     	;# 
   618  0E94                     	;# 
   619  0E95                     	;# 
   620  0E96                     	;# 
   621  0E97                     	;# 
   622  0E98                     	;# 
   623  0E99                     	;# 
   624  0E9A                     	;# 
   625  0E9B                     	;# 
   626  0E9C                     	;# 
   627  0E9D                     	;# 
   628  0E9E                     	;# 
   629  0E9F                     	;# 
   630  0EA0                     	;# 
   631  0EA1                     	;# 
   632  0EA2                     	;# 
   633  0EA3                     	;# 
   634  0EA4                     	;# 
   635  0EA5                     	;# 
   636  0EA6                     	;# 
   637  0EA7                     	;# 
   638  0EA8                     	;# 
   639  0EA9                     	;# 
   640  0EAA                     	;# 
   641  0EAB                     	;# 
   642  0EAC                     	;# 
   643  0EAD                     	;# 
   644  0EAE                     	;# 
   645  0EAF                     	;# 
   646  0EB0                     	;# 
   647  0EB1                     	;# 
   648  0EB2                     	;# 
   649  0F0F                     	;# 
   650  0F10                     	;# 
   651  0F11                     	;# 
   652  0F12                     	;# 
   653  0F13                     	;# 
   654  0F14                     	;# 
   655  0F15                     	;# 
   656  0F16                     	;# 
   657  0F17                     	;# 
   658  0F18                     	;# 
   659  0F19                     	;# 
   660  0F1A                     	;# 
   661  0F1B                     	;# 
   662  0F1C                     	;# 
   663  0F1D                     	;# 
   664  0F1E                     	;# 
   665  0F1F                     	;# 
   666  0F20                     	;# 
   667  0F21                     	;# 
   668  0F22                     	;# 
   669  0F23                     	;# 
   670  0F24                     	;# 
   671  0F25                     	;# 
   672  0F26                     	;# 
   673  0F27                     	;# 
   674  0F28                     	;# 
   675  0F29                     	;# 
   676  0F2A                     	;# 
   677  0F2B                     	;# 
   678  0F2C                     	;# 
   679  0F2D                     	;# 
   680  0F2E                     	;# 
   681  0F2F                     	;# 
   682  0F30                     	;# 
   683  0F31                     	;# 
   684  0F32                     	;# 
   685  0F33                     	;# 
   686  0F34                     	;# 
   687  0F35                     	;# 
   688  0F36                     	;# 
   689  0F37                     	;# 
   690  0FE4                     	;# 
   691  0FE5                     	;# 
   692  0FE6                     	;# 
   693  0FE7                     	;# 
   694  0FE8                     	;# 
   695  0FE9                     	;# 
   696  0FEA                     	;# 
   697  0FEB                     	;# 
   698  0FED                     	;# 
   699  0FEE                     	;# 
   700  0FEF                     	;# 
   701  0000                     	;# 
   702  0001                     	;# 
   703  0002                     	;# 
   704  0003                     	;# 
   705  0004                     	;# 
   706  0005                     	;# 
   707  0006                     	;# 
   708  0007                     	;# 
   709  0008                     	;# 
   710  0009                     	;# 
   711  000A                     	;# 
   712  000B                     	;# 
   713  000C                     	;# 
   714  000D                     	;# 
   715  000E                     	;# 
   716  000F                     	;# 
   717  0010                     	;# 
   718  0011                     	;# 
   719  0012                     	;# 
   720  0013                     	;# 
   721  0015                     	;# 
   722  0016                     	;# 
   723  0016                     	;# 
   724  0017                     	;# 
   725  0018                     	;# 
   726  0019                     	;# 
   727  001A                     	;# 
   728  001B                     	;# 
   729  001C                     	;# 
   730  008C                     	;# 
   731  008D                     	;# 
   732  008E                     	;# 
   733  008F                     	;# 
   734  0090                     	;# 
   735  0091                     	;# 
   736  0092                     	;# 
   737  0093                     	;# 
   738  0095                     	;# 
   739  0096                     	;# 
   740  0097                     	;# 
   741  0098                     	;# 
   742  0099                     	;# 
   743  009A                     	;# 
   744  009B                     	;# 
   745  009B                     	;# 
   746  009C                     	;# 
   747  009D                     	;# 
   748  009E                     	;# 
   749  009F                     	;# 
   750  010C                     	;# 
   751  010D                     	;# 
   752  010E                     	;# 
   753  010F                     	;# 
   754  0110                     	;# 
   755  0111                     	;# 
   756  0112                     	;# 
   757  0113                     	;# 
   758  0114                     	;# 
   759  0115                     	;# 
   760  0116                     	;# 
   761  0117                     	;# 
   762  0118                     	;# 
   763  0119                     	;# 
   764  011A                     	;# 
   765  011B                     	;# 
   766  011B                     	;# 
   767  011C                     	;# 
   768  018C                     	;# 
   769  018D                     	;# 
   770  018E                     	;# 
   771  018F                     	;# 
   772  0190                     	;# 
   773  0191                     	;# 
   774  0191                     	;# 
   775  0192                     	;# 
   776  0193                     	;# 
   777  0193                     	;# 
   778  0194                     	;# 
   779  0195                     	;# 
   780  0196                     	;# 
   781  0197                     	;# 
   782  0199                     	;# 
   783  0199                     	;# 
   784  0199                     	;# 
   785  019A                     	;# 
   786  019A                     	;# 
   787  019A                     	;# 
   788  019B                     	;# 
   789  019B                     	;# 
   790  019B                     	;# 
   791  019B                     	;# 
   792  019B                     	;# 
   793  019C                     	;# 
   794  019C                     	;# 
   795  019C                     	;# 
   796  019D                     	;# 
   797  019D                     	;# 
   798  019D                     	;# 
   799  019E                     	;# 
   800  019E                     	;# 
   801  019E                     	;# 
   802  019F                     	;# 
   803  019F                     	;# 
   804  019F                     	;# 
   805  019F                     	;# 
   806  019F                     	;# 
   807  020C                     	;# 
   808  020D                     	;# 
   809  020E                     	;# 
   810  020F                     	;# 
   811  0210                     	;# 
   812  0211                     	;# 
   813  0211                     	;# 
   814  0212                     	;# 
   815  0212                     	;# 
   816  0213                     	;# 
   817  0213                     	;# 
   818  0214                     	;# 
   819  0214                     	;# 
   820  0215                     	;# 
   821  0215                     	;# 
   822  0215                     	;# 
   823  0215                     	;# 
   824  0216                     	;# 
   825  0216                     	;# 
   826  0217                     	;# 
   827  0217                     	;# 
   828  028C                     	;# 
   829  028D                     	;# 
   830  028E                     	;# 
   831  028F                     	;# 
   832  0290                     	;# 
   833  0291                     	;# 
   834  0291                     	;# 
   835  0292                     	;# 
   836  0293                     	;# 
   837  0293                     	;# 
   838  0298                     	;# 
   839  0298                     	;# 
   840  0299                     	;# 
   841  029A                     	;# 
   842  029A                     	;# 
   843  029E                     	;# 
   844  030C                     	;# 
   845  030D                     	;# 
   846  030E                     	;# 
   847  030F                     	;# 
   848  0310                     	;# 
   849  038C                     	;# 
   850  038D                     	;# 
   851  038E                     	;# 
   852  038F                     	;# 
   853  0390                     	;# 
   854  0391                     	;# 
   855  0392                     	;# 
   856  0393                     	;# 
   857  0394                     	;# 
   858  0395                     	;# 
   859  0396                     	;# 
   860  0397                     	;# 
   861  0398                     	;# 
   862  0399                     	;# 
   863  039D                     	;# 
   864  039E                     	;# 
   865  039F                     	;# 
   866  0415                     	;# 
   867  0416                     	;# 
   868  0417                     	;# 
   869  041C                     	;# 
   870  041D                     	;# 
   871  041E                     	;# 
   872  0498                     	;# 
   873  0498                     	;# 
   874  0499                     	;# 
   875  049A                     	;# 
   876  049B                     	;# 
   877  049B                     	;# 
   878  049C                     	;# 
   879  049D                     	;# 
   880  049E                     	;# 
   881  049F                     	;# 
   882  0511                     	;# 
   883  0515                     	;# 
   884  0617                     	;# 
   885  0618                     	;# 
   886  0619                     	;# 
   887  0619                     	;# 
   888  061A                     	;# 
   889  061B                     	;# 
   890  061C                     	;# 
   891  061C                     	;# 
   892  0691                     	;# 
   893  0692                     	;# 
   894  0693                     	;# 
   895  0694                     	;# 
   896  0695                     	;# 
   897  0696                     	;# 
   898  0697                     	;# 
   899  0698                     	;# 
   900  0699                     	;# 
   901  069A                     	;# 
   902  069B                     	;# 
   903  069C                     	;# 
   904  069D                     	;# 
   905  069E                     	;# 
   906  069F                     	;# 
   907  0E0F                     	;# 
   908  0E10                     	;# 
   909  0E11                     	;# 
   910  0E12                     	;# 
   911  0E13                     	;# 
   912  0E14                     	;# 
   913  0E15                     	;# 
   914  0E17                     	;# 
   915  0E20                     	;# 
   916  0E21                     	;# 
   917  0E22                     	;# 
   918  0E24                     	;# 
   919  0E25                     	;# 
   920  0E28                     	;# 
   921  0E29                     	;# 
   922  0E2A                     	;# 
   923  0E2B                     	;# 
   924  0E90                     	;# 
   925  0E91                     	;# 
   926  0E92                     	;# 
   927  0E93                     	;# 
   928  0E94                     	;# 
   929  0E95                     	;# 
   930  0E96                     	;# 
   931  0E97                     	;# 
   932  0E98                     	;# 
   933  0E99                     	;# 
   934  0E9A                     	;# 
   935  0E9B                     	;# 
   936  0E9C                     	;# 
   937  0E9D                     	;# 
   938  0E9E                     	;# 
   939  0E9F                     	;# 
   940  0EA0                     	;# 
   941  0EA1                     	;# 
   942  0EA2                     	;# 
   943  0EA3                     	;# 
   944  0EA4                     	;# 
   945  0EA5                     	;# 
   946  0EA6                     	;# 
   947  0EA7                     	;# 
   948  0EA8                     	;# 
   949  0EA9                     	;# 
   950  0EAA                     	;# 
   951  0EAB                     	;# 
   952  0EAC                     	;# 
   953  0EAD                     	;# 
   954  0EAE                     	;# 
   955  0EAF                     	;# 
   956  0EB0                     	;# 
   957  0EB1                     	;# 
   958  0EB2                     	;# 
   959  0F0F                     	;# 
   960  0F10                     	;# 
   961  0F11                     	;# 
   962  0F12                     	;# 
   963  0F13                     	;# 
   964  0F14                     	;# 
   965  0F15                     	;# 
   966  0F16                     	;# 
   967  0F17                     	;# 
   968  0F18                     	;# 
   969  0F19                     	;# 
   970  0F1A                     	;# 
   971  0F1B                     	;# 
   972  0F1C                     	;# 
   973  0F1D                     	;# 
   974  0F1E                     	;# 
   975  0F1F                     	;# 
   976  0F20                     	;# 
   977  0F21                     	;# 
   978  0F22                     	;# 
   979  0F23                     	;# 
   980  0F24                     	;# 
   981  0F25                     	;# 
   982  0F26                     	;# 
   983  0F27                     	;# 
   984  0F28                     	;# 
   985  0F29                     	;# 
   986  0F2A                     	;# 
   987  0F2B                     	;# 
   988  0F2C                     	;# 
   989  0F2D                     	;# 
   990  0F2E                     	;# 
   991  0F2F                     	;# 
   992  0F30                     	;# 
   993  0F31                     	;# 
   994  0F32                     	;# 
   995  0F33                     	;# 
   996  0F34                     	;# 
   997  0F35                     	;# 
   998  0F36                     	;# 
   999  0F37                     	;# 
  1000  0FE4                     	;# 
  1001  0FE5                     	;# 
  1002  0FE6                     	;# 
  1003  0FE7                     	;# 
  1004  0FE8                     	;# 
  1005  0FE9                     	;# 
  1006  0FEA                     	;# 
  1007  0FEB                     	;# 
  1008  0FED                     	;# 
  1009  0FEE                     	;# 
  1010  0FEF                     	;# 
  1011  0000                     	;# 
  1012  0001                     	;# 
  1013  0002                     	;# 
  1014  0003                     	;# 
  1015  0004                     	;# 
  1016  0005                     	;# 
  1017  0006                     	;# 
  1018  0007                     	;# 
  1019  0008                     	;# 
  1020  0009                     	;# 
  1021  000A                     	;# 
  1022  000B                     	;# 
  1023  000C                     	;# 
  1024  000D                     	;# 
  1025  000E                     	;# 
  1026  000F                     	;# 
  1027  0010                     	;# 
  1028  0011                     	;# 
  1029  0012                     	;# 
  1030  0013                     	;# 
  1031  0015                     	;# 
  1032  0016                     	;# 
  1033  0016                     	;# 
  1034  0017                     	;# 
  1035  0018                     	;# 
  1036  0019                     	;# 
  1037  001A                     	;# 
  1038  001B                     	;# 
  1039  001C                     	;# 
  1040  008C                     	;# 
  1041  008D                     	;# 
  1042  008E                     	;# 
  1043  008F                     	;# 
  1044  0090                     	;# 
  1045  0091                     	;# 
  1046  0092                     	;# 
  1047  0093                     	;# 
  1048  0095                     	;# 
  1049  0096                     	;# 
  1050  0097                     	;# 
  1051  0098                     	;# 
  1052  0099                     	;# 
  1053  009A                     	;# 
  1054  009B                     	;# 
  1055  009B                     	;# 
  1056  009C                     	;# 
  1057  009D                     	;# 
  1058  009E                     	;# 
  1059  009F                     	;# 
  1060  010C                     	;# 
  1061  010D                     	;# 
  1062  010E                     	;# 
  1063  010F                     	;# 
  1064  0110                     	;# 
  1065  0111                     	;# 
  1066  0112                     	;# 
  1067  0113                     	;# 
  1068  0114                     	;# 
  1069  0115                     	;# 
  1070  0116                     	;# 
  1071  0117                     	;# 
  1072  0118                     	;# 
  1073  0119                     	;# 
  1074  011A                     	;# 
  1075  011B                     	;# 
  1076  011B                     	;# 
  1077  011C                     	;# 
  1078  018C                     	;# 
  1079  018D                     	;# 
  1080  018E                     	;# 
  1081  018F                     	;# 
  1082  0190                     	;# 
  1083  0191                     	;# 
  1084  0191                     	;# 
  1085  0192                     	;# 
  1086  0193                     	;# 
  1087  0193                     	;# 
  1088  0194                     	;# 
  1089  0195                     	;# 
  1090  0196                     	;# 
  1091  0197                     	;# 
  1092  0199                     	;# 
  1093  0199                     	;# 
  1094  0199                     	;# 
  1095  019A                     	;# 
  1096  019A                     	;# 
  1097  019A                     	;# 
  1098  019B                     	;# 
  1099  019B                     	;# 
  1100  019B                     	;# 
  1101  019B                     	;# 
  1102  019B                     	;# 
  1103  019C                     	;# 
  1104  019C                     	;# 
  1105  019C                     	;# 
  1106  019D                     	;# 
  1107  019D                     	;# 
  1108  019D                     	;# 
  1109  019E                     	;# 
  1110  019E                     	;# 
  1111  019E                     	;# 
  1112  019F                     	;# 
  1113  019F                     	;# 
  1114  019F                     	;# 
  1115  019F                     	;# 
  1116  019F                     	;# 
  1117  020C                     	;# 
  1118  020D                     	;# 
  1119  020E                     	;# 
  1120  020F                     	;# 
  1121  0210                     	;# 
  1122  0211                     	;# 
  1123  0211                     	;# 
  1124  0212                     	;# 
  1125  0212                     	;# 
  1126  0213                     	;# 
  1127  0213                     	;# 
  1128  0214                     	;# 
  1129  0214                     	;# 
  1130  0215                     	;# 
  1131  0215                     	;# 
  1132  0215                     	;# 
  1133  0215                     	;# 
  1134  0216                     	;# 
  1135  0216                     	;# 
  1136  0217                     	;# 
  1137  0217                     	;# 
  1138  028C                     	;# 
  1139  028D                     	;# 
  1140  028E                     	;# 
  1141  028F                     	;# 
  1142  0290                     	;# 
  1143  0291                     	;# 
  1144  0291                     	;# 
  1145  0292                     	;# 
  1146  0293                     	;# 
  1147  0293                     	;# 
  1148  0298                     	;# 
  1149  0298                     	;# 
  1150  0299                     	;# 
  1151  029A                     	;# 
  1152  029A                     	;# 
  1153  029E                     	;# 
  1154  030C                     	;# 
  1155  030D                     	;# 
  1156  030E                     	;# 
  1157  030F                     	;# 
  1158  0310                     	;# 
  1159  038C                     	;# 
  1160  038D                     	;# 
  1161  038E                     	;# 
  1162  038F                     	;# 
  1163  0390                     	;# 
  1164  0391                     	;# 
  1165  0392                     	;# 
  1166  0393                     	;# 
  1167  0394                     	;# 
  1168  0395                     	;# 
  1169  0396                     	;# 
  1170  0397                     	;# 
  1171  0398                     	;# 
  1172  0399                     	;# 
  1173  039D                     	;# 
  1174  039E                     	;# 
  1175  039F                     	;# 
  1176  0415                     	;# 
  1177  0416                     	;# 
  1178  0417                     	;# 
  1179  041C                     	;# 
  1180  041D                     	;# 
  1181  041E                     	;# 
  1182  0498                     	;# 
  1183  0498                     	;# 
  1184  0499                     	;# 
  1185  049A                     	;# 
  1186  049B                     	;# 
  1187  049B                     	;# 
  1188  049C                     	;# 
  1189  049D                     	;# 
  1190  049E                     	;# 
  1191  049F                     	;# 
  1192  0511                     	;# 
  1193  0515                     	;# 
  1194  0617                     	;# 
  1195  0618                     	;# 
  1196  0619                     	;# 
  1197  0619                     	;# 
  1198  061A                     	;# 
  1199  061B                     	;# 
  1200  061C                     	;# 
  1201  061C                     	;# 
  1202  0691                     	;# 
  1203  0692                     	;# 
  1204  0693                     	;# 
  1205  0694                     	;# 
  1206  0695                     	;# 
  1207  0696                     	;# 
  1208  0697                     	;# 
  1209  0698                     	;# 
  1210  0699                     	;# 
  1211  069A                     	;# 
  1212  069B                     	;# 
  1213  069C                     	;# 
  1214  069D                     	;# 
  1215  069E                     	;# 
  1216  069F                     	;# 
  1217  0E0F                     	;# 
  1218  0E10                     	;# 
  1219  0E11                     	;# 
  1220  0E12                     	;# 
  1221  0E13                     	;# 
  1222  0E14                     	;# 
  1223  0E15                     	;# 
  1224  0E17                     	;# 
  1225  0E20                     	;# 
  1226  0E21                     	;# 
  1227  0E22                     	;# 
  1228  0E24                     	;# 
  1229  0E25                     	;# 
  1230  0E28                     	;# 
  1231  0E29                     	;# 
  1232  0E2A                     	;# 
  1233  0E2B                     	;# 
  1234  0E90                     	;# 
  1235  0E91                     	;# 
  1236  0E92                     	;# 
  1237  0E93                     	;# 
  1238  0E94                     	;# 
  1239  0E95                     	;# 
  1240  0E96                     	;# 
  1241  0E97                     	;# 
  1242  0E98                     	;# 
  1243  0E99                     	;# 
  1244  0E9A                     	;# 
  1245  0E9B                     	;# 
  1246  0E9C                     	;# 
  1247  0E9D                     	;# 
  1248  0E9E                     	;# 
  1249  0E9F                     	;# 
  1250  0EA0                     	;# 
  1251  0EA1                     	;# 
  1252  0EA2                     	;# 
  1253  0EA3                     	;# 
  1254  0EA4                     	;# 
  1255  0EA5                     	;# 
  1256  0EA6                     	;# 
  1257  0EA7                     	;# 
  1258  0EA8                     	;# 
  1259  0EA9                     	;# 
  1260  0EAA                     	;# 
  1261  0EAB                     	;# 
  1262  0EAC                     	;# 
  1263  0EAD                     	;# 
  1264  0EAE                     	;# 
  1265  0EAF                     	;# 
  1266  0EB0                     	;# 
  1267  0EB1                     	;# 
  1268  0EB2                     	;# 
  1269  0F0F                     	;# 
  1270  0F10                     	;# 
  1271  0F11                     	;# 
  1272  0F12                     	;# 
  1273  0F13                     	;# 
  1274  0F14                     	;# 
  1275  0F15                     	;# 
  1276  0F16                     	;# 
  1277  0F17                     	;# 
  1278  0F18                     	;# 
  1279  0F19                     	;# 
  1280  0F1A                     	;# 
  1281  0F1B                     	;# 
  1282  0F1C                     	;# 
  1283  0F1D                     	;# 
  1284  0F1E                     	;# 
  1285  0F1F                     	;# 
  1286  0F20                     	;# 
  1287  0F21                     	;# 
  1288  0F22                     	;# 
  1289  0F23                     	;# 
  1290  0F24                     	;# 
  1291  0F25                     	;# 
  1292  0F26                     	;# 
  1293  0F27                     	;# 
  1294  0F28                     	;# 
  1295  0F29                     	;# 
  1296  0F2A                     	;# 
  1297  0F2B                     	;# 
  1298  0F2C                     	;# 
  1299  0F2D                     	;# 
  1300  0F2E                     	;# 
  1301  0F2F                     	;# 
  1302  0F30                     	;# 
  1303  0F31                     	;# 
  1304  0F32                     	;# 
  1305  0F33                     	;# 
  1306  0F34                     	;# 
  1307  0F35                     	;# 
  1308  0F36                     	;# 
  1309  0F37                     	;# 
  1310  0FE4                     	;# 
  1311  0FE5                     	;# 
  1312  0FE6                     	;# 
  1313  0FE7                     	;# 
  1314  0FE8                     	;# 
  1315  0FE9                     	;# 
  1316  0FEA                     	;# 
  1317  0FEB                     	;# 
  1318  0FED                     	;# 
  1319  0FEE                     	;# 
  1320  0FEF                     	;# 
  1321                           
  1322                           	psect	stringtext1
  1323  1800                     __pstringtext1:	
  1324  1800                     _dpowers:	
  1325  1800  3401               	retlw	1
  1326  1801  3400               	retlw	0
  1327  1802  3400               	retlw	0
  1328  1803  3400               	retlw	0
  1329  1804  340A               	retlw	10
  1330  1805  3400               	retlw	0
  1331  1806  3400               	retlw	0
  1332  1807  3400               	retlw	0
  1333  1808  3464               	retlw	100
  1334  1809  3400               	retlw	0
  1335  180A  3400               	retlw	0
  1336  180B  3400               	retlw	0
  1337  180C  34E8               	retlw	232
  1338  180D  3403               	retlw	3
  1339  180E  3400               	retlw	0
  1340  180F  3400               	retlw	0
  1341  1810  3410               	retlw	16
  1342  1811  3427               	retlw	39
  1343  1812  3400               	retlw	0
  1344  1813  3400               	retlw	0
  1345  1814  34A0               	retlw	160
  1346  1815  3486               	retlw	134
  1347  1816  3401               	retlw	1
  1348  1817  3400               	retlw	0
  1349  1818  3440               	retlw	64
  1350  1819  3442               	retlw	66
  1351  181A  340F               	retlw	15
  1352  181B  3400               	retlw	0
  1353  181C  3480               	retlw	128
  1354  181D  3496               	retlw	150
  1355  181E  3498               	retlw	152
  1356  181F  3400               	retlw	0
  1357  1820  3400               	retlw	0
  1358  1821  34E1               	retlw	225
  1359  1822  34F5               	retlw	245
  1360  1823  3405               	retlw	5
  1361  1824  3400               	retlw	0
  1362  1825  34CA               	retlw	202
  1363  1826  349A               	retlw	154
  1364  1827  343B               	retlw	59
  1365  1828                     __end_of_dpowers:	
  1366                           
  1367                           	psect	stringtext2
  1368  0800                     __pstringtext2:	
  1369  0800                     _OledFont:	
  1370  0800  3400               	retlw	0
  1371  0801  3400               	retlw	0
  1372  0802  3400               	retlw	0
  1373  0803  3400               	retlw	0
  1374  0804  3400               	retlw	0
  1375  0805  3400               	retlw	0
  1376  0806  3400               	retlw	0
  1377  0807  3400               	retlw	0
  1378  0808  3400               	retlw	0
  1379  0809  3400               	retlw	0
  1380  080A  345F               	retlw	95
  1381  080B  3400               	retlw	0
  1382  080C  3400               	retlw	0
  1383  080D  3400               	retlw	0
  1384  080E  3400               	retlw	0
  1385  080F  3400               	retlw	0
  1386  0810  3400               	retlw	0
  1387  0811  3400               	retlw	0
  1388  0812  3407               	retlw	7
  1389  0813  3400               	retlw	0
  1390  0814  3407               	retlw	7
  1391  0815  3400               	retlw	0
  1392  0816  3400               	retlw	0
  1393  0817  3400               	retlw	0
  1394  0818  3400               	retlw	0
  1395  0819  3414               	retlw	20
  1396  081A  347F               	retlw	127
  1397  081B  3414               	retlw	20
  1398  081C  347F               	retlw	127
  1399  081D  3414               	retlw	20
  1400  081E  3400               	retlw	0
  1401  081F  3400               	retlw	0
  1402  0820  3400               	retlw	0
  1403  0821  3424               	retlw	36
  1404  0822  342A               	retlw	42
  1405  0823  347F               	retlw	127
  1406  0824  342A               	retlw	42
  1407  0825  3412               	retlw	18
  1408  0826  3400               	retlw	0
  1409  0827  3400               	retlw	0
  1410  0828  3400               	retlw	0
  1411  0829  3423               	retlw	35
  1412  082A  3413               	retlw	19
  1413  082B  3408               	retlw	8
  1414  082C  3464               	retlw	100
  1415  082D  3462               	retlw	98
  1416  082E  3400               	retlw	0
  1417  082F  3400               	retlw	0
  1418  0830  3400               	retlw	0
  1419  0831  3436               	retlw	54
  1420  0832  3449               	retlw	73
  1421  0833  3455               	retlw	85
  1422  0834  3422               	retlw	34
  1423  0835  3450               	retlw	80
  1424  0836  3400               	retlw	0
  1425  0837  3400               	retlw	0
  1426  0838  3400               	retlw	0
  1427  0839  3400               	retlw	0
  1428  083A  3405               	retlw	5
  1429  083B  3403               	retlw	3
  1430  083C  3400               	retlw	0
  1431  083D  3400               	retlw	0
  1432  083E  3400               	retlw	0
  1433  083F  3400               	retlw	0
  1434  0840  3400               	retlw	0
  1435  0841  341C               	retlw	28
  1436  0842  3422               	retlw	34
  1437  0843  3441               	retlw	65
  1438  0844  3400               	retlw	0
  1439  0845  3400               	retlw	0
  1440  0846  3400               	retlw	0
  1441  0847  3400               	retlw	0
  1442  0848  3400               	retlw	0
  1443  0849  3441               	retlw	65
  1444  084A  3422               	retlw	34
  1445  084B  341C               	retlw	28
  1446  084C  3400               	retlw	0
  1447  084D  3400               	retlw	0
  1448  084E  3400               	retlw	0
  1449  084F  3400               	retlw	0
  1450  0850  3400               	retlw	0
  1451  0851  3408               	retlw	8
  1452  0852  342A               	retlw	42
  1453  0853  341C               	retlw	28
  1454  0854  342A               	retlw	42
  1455  0855  3408               	retlw	8
  1456  0856  3400               	retlw	0
  1457  0857  3400               	retlw	0
  1458  0858  3400               	retlw	0
  1459  0859  3408               	retlw	8
  1460  085A  3408               	retlw	8
  1461  085B  343E               	retlw	62
  1462  085C  3408               	retlw	8
  1463  085D  3408               	retlw	8
  1464  085E  3400               	retlw	0
  1465  085F  3400               	retlw	0
  1466  0860  3400               	retlw	0
  1467  0861  34A0               	retlw	160
  1468  0862  3460               	retlw	96
  1469  0863  3400               	retlw	0
  1470  0864  3400               	retlw	0
  1471  0865  3400               	retlw	0
  1472  0866  3400               	retlw	0
  1473  0867  3400               	retlw	0
  1474  0868  3400               	retlw	0
  1475  0869  3408               	retlw	8
  1476  086A  3408               	retlw	8
  1477  086B  3408               	retlw	8
  1478  086C  3408               	retlw	8
  1479  086D  3408               	retlw	8
  1480  086E  3400               	retlw	0
  1481  086F  3400               	retlw	0
  1482  0870  3400               	retlw	0
  1483  0871  3460               	retlw	96
  1484  0872  3460               	retlw	96
  1485  0873  3400               	retlw	0
  1486  0874  3400               	retlw	0
  1487  0875  3400               	retlw	0
  1488  0876  3400               	retlw	0
  1489  0877  3400               	retlw	0
  1490  0878  3400               	retlw	0
  1491  0879  3420               	retlw	32
  1492  087A  3410               	retlw	16
  1493  087B  3408               	retlw	8
  1494  087C  3404               	retlw	4
  1495  087D  3402               	retlw	2
  1496  087E  3400               	retlw	0
  1497  087F  3400               	retlw	0
  1498  0880  3400               	retlw	0
  1499  0881  343E               	retlw	62
  1500  0882  3451               	retlw	81
  1501  0883  3449               	retlw	73
  1502  0884  3445               	retlw	69
  1503  0885  343E               	retlw	62
  1504  0886  3400               	retlw	0
  1505  0887  3400               	retlw	0
  1506  0888  3400               	retlw	0
  1507  0889  3400               	retlw	0
  1508  088A  3442               	retlw	66
  1509  088B  347F               	retlw	127
  1510  088C  3440               	retlw	64
  1511  088D  3400               	retlw	0
  1512  088E  3400               	retlw	0
  1513  088F  3400               	retlw	0
  1514  0890  3400               	retlw	0
  1515  0891  3462               	retlw	98
  1516  0892  3451               	retlw	81
  1517  0893  3449               	retlw	73
  1518  0894  3449               	retlw	73
  1519  0895  3446               	retlw	70
  1520  0896  3400               	retlw	0
  1521  0897  3400               	retlw	0
  1522  0898  3400               	retlw	0
  1523  0899  3422               	retlw	34
  1524  089A  3441               	retlw	65
  1525  089B  3449               	retlw	73
  1526  089C  3449               	retlw	73
  1527  089D  3436               	retlw	54
  1528  089E  3400               	retlw	0
  1529  089F  3400               	retlw	0
  1530  08A0  3400               	retlw	0
  1531  08A1  3418               	retlw	24
  1532  08A2  3414               	retlw	20
  1533  08A3  3412               	retlw	18
  1534  08A4  347F               	retlw	127
  1535  08A5  3410               	retlw	16
  1536  08A6  3400               	retlw	0
  1537  08A7  3400               	retlw	0
  1538  08A8  3400               	retlw	0
  1539  08A9  3427               	retlw	39
  1540  08AA  3445               	retlw	69
  1541  08AB  3445               	retlw	69
  1542  08AC  3445               	retlw	69
  1543  08AD  3439               	retlw	57
  1544  08AE  3400               	retlw	0
  1545  08AF  3400               	retlw	0
  1546  08B0  3400               	retlw	0
  1547  08B1  343C               	retlw	60
  1548  08B2  344A               	retlw	74
  1549  08B3  3449               	retlw	73
  1550  08B4  3449               	retlw	73
  1551  08B5  3430               	retlw	48
  1552  08B6  3400               	retlw	0
  1553  08B7  3400               	retlw	0
  1554  08B8  3400               	retlw	0
  1555  08B9  3401               	retlw	1
  1556  08BA  3471               	retlw	113
  1557  08BB  3409               	retlw	9
  1558  08BC  3405               	retlw	5
  1559  08BD  3403               	retlw	3
  1560  08BE  3400               	retlw	0
  1561  08BF  3400               	retlw	0
  1562  08C0  3400               	retlw	0
  1563  08C1  3436               	retlw	54
  1564  08C2  3449               	retlw	73
  1565  08C3  3449               	retlw	73
  1566  08C4  3449               	retlw	73
  1567  08C5  3436               	retlw	54
  1568  08C6  3400               	retlw	0
  1569  08C7  3400               	retlw	0
  1570  08C8  3400               	retlw	0
  1571  08C9  3406               	retlw	6
  1572  08CA  3449               	retlw	73
  1573  08CB  3449               	retlw	73
  1574  08CC  3429               	retlw	41
  1575  08CD  341E               	retlw	30
  1576  08CE  3400               	retlw	0
  1577  08CF  3400               	retlw	0
  1578  08D0  3400               	retlw	0
  1579  08D1  3400               	retlw	0
  1580  08D2  3436               	retlw	54
  1581  08D3  3436               	retlw	54
  1582  08D4  3400               	retlw	0
  1583  08D5  3400               	retlw	0
  1584  08D6  3400               	retlw	0
  1585  08D7  3400               	retlw	0
  1586  08D8  3400               	retlw	0
  1587  08D9  3400               	retlw	0
  1588  08DA  34AC               	retlw	172
  1589  08DB  346C               	retlw	108
  1590  08DC  3400               	retlw	0
  1591  08DD  3400               	retlw	0
  1592  08DE  3400               	retlw	0
  1593  08DF  3400               	retlw	0
  1594  08E0  3400               	retlw	0
  1595  08E1  3408               	retlw	8
  1596  08E2  3414               	retlw	20
  1597  08E3  3422               	retlw	34
  1598  08E4  3441               	retlw	65
  1599  08E5  3400               	retlw	0
  1600  08E6  3400               	retlw	0
  1601  08E7  3400               	retlw	0
  1602  08E8  3400               	retlw	0
  1603  08E9  3414               	retlw	20
  1604  08EA  3414               	retlw	20
  1605  08EB  3414               	retlw	20
  1606  08EC  3414               	retlw	20
  1607  08ED  3414               	retlw	20
  1608  08EE  3400               	retlw	0
  1609  08EF  3400               	retlw	0
  1610  08F0  3400               	retlw	0
  1611  08F1  3441               	retlw	65
  1612  08F2  3422               	retlw	34
  1613  08F3  3414               	retlw	20
  1614  08F4  3408               	retlw	8
  1615  08F5  3400               	retlw	0
  1616  08F6  3400               	retlw	0
  1617  08F7  3400               	retlw	0
  1618  08F8  3400               	retlw	0
  1619  08F9  3402               	retlw	2
  1620  08FA  3401               	retlw	1
  1621  08FB  3451               	retlw	81
  1622  08FC  3409               	retlw	9
  1623  08FD  3406               	retlw	6
  1624  08FE  3400               	retlw	0
  1625  08FF  3400               	retlw	0
  1626  0900  3400               	retlw	0
  1627  0901  3432               	retlw	50
  1628  0902  3449               	retlw	73
  1629  0903  3479               	retlw	121
  1630  0904  3441               	retlw	65
  1631  0905  343E               	retlw	62
  1632  0906  3400               	retlw	0
  1633  0907  3400               	retlw	0
  1634  0908  3400               	retlw	0
  1635  0909  347E               	retlw	126
  1636  090A  3409               	retlw	9
  1637  090B  3409               	retlw	9
  1638  090C  3409               	retlw	9
  1639  090D  347E               	retlw	126
  1640  090E  3400               	retlw	0
  1641  090F  3400               	retlw	0
  1642  0910  3400               	retlw	0
  1643  0911  347F               	retlw	127
  1644  0912  3449               	retlw	73
  1645  0913  3449               	retlw	73
  1646  0914  3449               	retlw	73
  1647  0915  3436               	retlw	54
  1648  0916  3400               	retlw	0
  1649  0917  3400               	retlw	0
  1650  0918  3400               	retlw	0
  1651  0919  343E               	retlw	62
  1652  091A  3441               	retlw	65
  1653  091B  3441               	retlw	65
  1654  091C  3441               	retlw	65
  1655  091D  3422               	retlw	34
  1656  091E  3400               	retlw	0
  1657  091F  3400               	retlw	0
  1658  0920  3400               	retlw	0
  1659  0921  347F               	retlw	127
  1660  0922  3441               	retlw	65
  1661  0923  3441               	retlw	65
  1662  0924  3422               	retlw	34
  1663  0925  341C               	retlw	28
  1664  0926  3400               	retlw	0
  1665  0927  3400               	retlw	0
  1666  0928  3400               	retlw	0
  1667  0929  347F               	retlw	127
  1668  092A  3449               	retlw	73
  1669  092B  3449               	retlw	73
  1670  092C  3449               	retlw	73
  1671  092D  3441               	retlw	65
  1672  092E  3400               	retlw	0
  1673  092F  3400               	retlw	0
  1674  0930  3400               	retlw	0
  1675  0931  347F               	retlw	127
  1676  0932  3409               	retlw	9
  1677  0933  3409               	retlw	9
  1678  0934  3409               	retlw	9
  1679  0935  3401               	retlw	1
  1680  0936  3400               	retlw	0
  1681  0937  3400               	retlw	0
  1682  0938  3400               	retlw	0
  1683  0939  343E               	retlw	62
  1684  093A  3441               	retlw	65
  1685  093B  3441               	retlw	65
  1686  093C  3451               	retlw	81
  1687  093D  3472               	retlw	114
  1688  093E  3400               	retlw	0
  1689  093F  3400               	retlw	0
  1690  0940  3400               	retlw	0
  1691  0941  347F               	retlw	127
  1692  0942  3408               	retlw	8
  1693  0943  3408               	retlw	8
  1694  0944  3408               	retlw	8
  1695  0945  347F               	retlw	127
  1696  0946  3400               	retlw	0
  1697  0947  3400               	retlw	0
  1698  0948  3400               	retlw	0
  1699  0949  3441               	retlw	65
  1700  094A  347F               	retlw	127
  1701  094B  3441               	retlw	65
  1702  094C  3400               	retlw	0
  1703  094D  3400               	retlw	0
  1704  094E  3400               	retlw	0
  1705  094F  3400               	retlw	0
  1706  0950  3400               	retlw	0
  1707  0951  3420               	retlw	32
  1708  0952  3440               	retlw	64
  1709  0953  3441               	retlw	65
  1710  0954  343F               	retlw	63
  1711  0955  3401               	retlw	1
  1712  0956  3400               	retlw	0
  1713  0957  3400               	retlw	0
  1714  0958  3400               	retlw	0
  1715  0959  347F               	retlw	127
  1716  095A  3408               	retlw	8
  1717  095B  3414               	retlw	20
  1718  095C  3422               	retlw	34
  1719  095D  3441               	retlw	65
  1720  095E  3400               	retlw	0
  1721  095F  3400               	retlw	0
  1722  0960  3400               	retlw	0
  1723  0961  347F               	retlw	127
  1724  0962  3440               	retlw	64
  1725  0963  3440               	retlw	64
  1726  0964  3440               	retlw	64
  1727  0965  3440               	retlw	64
  1728  0966  3400               	retlw	0
  1729  0967  3400               	retlw	0
  1730  0968  3400               	retlw	0
  1731  0969  347F               	retlw	127
  1732  096A  3402               	retlw	2
  1733  096B  340C               	retlw	12
  1734  096C  3402               	retlw	2
  1735  096D  347F               	retlw	127
  1736  096E  3400               	retlw	0
  1737  096F  3400               	retlw	0
  1738  0970  3400               	retlw	0
  1739  0971  347F               	retlw	127
  1740  0972  3404               	retlw	4
  1741  0973  3408               	retlw	8
  1742  0974  3410               	retlw	16
  1743  0975  347F               	retlw	127
  1744  0976  3400               	retlw	0
  1745  0977  3400               	retlw	0
  1746  0978  3400               	retlw	0
  1747  0979  343E               	retlw	62
  1748  097A  3441               	retlw	65
  1749  097B  3441               	retlw	65
  1750  097C  3441               	retlw	65
  1751  097D  343E               	retlw	62
  1752  097E  3400               	retlw	0
  1753  097F  3400               	retlw	0
  1754  0980  3400               	retlw	0
  1755  0981  347F               	retlw	127
  1756  0982  3409               	retlw	9
  1757  0983  3409               	retlw	9
  1758  0984  3409               	retlw	9
  1759  0985  3406               	retlw	6
  1760  0986  3400               	retlw	0
  1761  0987  3400               	retlw	0
  1762  0988  3400               	retlw	0
  1763  0989  343E               	retlw	62
  1764  098A  3441               	retlw	65
  1765  098B  3451               	retlw	81
  1766  098C  3421               	retlw	33
  1767  098D  345E               	retlw	94
  1768  098E  3400               	retlw	0
  1769  098F  3400               	retlw	0
  1770  0990  3400               	retlw	0
  1771  0991  347F               	retlw	127
  1772  0992  3409               	retlw	9
  1773  0993  3419               	retlw	25
  1774  0994  3429               	retlw	41
  1775  0995  3446               	retlw	70
  1776  0996  3400               	retlw	0
  1777  0997  3400               	retlw	0
  1778  0998  3400               	retlw	0
  1779  0999  3426               	retlw	38
  1780  099A  3449               	retlw	73
  1781  099B  3449               	retlw	73
  1782  099C  3449               	retlw	73
  1783  099D  3432               	retlw	50
  1784  099E  3400               	retlw	0
  1785  099F  3400               	retlw	0
  1786  09A0  3400               	retlw	0
  1787  09A1  3401               	retlw	1
  1788  09A2  3401               	retlw	1
  1789  09A3  347F               	retlw	127
  1790  09A4  3401               	retlw	1
  1791  09A5  3401               	retlw	1
  1792  09A6  3400               	retlw	0
  1793  09A7  3400               	retlw	0
  1794  09A8  3400               	retlw	0
  1795  09A9  343F               	retlw	63
  1796  09AA  3440               	retlw	64
  1797  09AB  3440               	retlw	64
  1798  09AC  3440               	retlw	64
  1799  09AD  343F               	retlw	63
  1800  09AE  3400               	retlw	0
  1801  09AF  3400               	retlw	0
  1802  09B0  3400               	retlw	0
  1803  09B1  341F               	retlw	31
  1804  09B2  3420               	retlw	32
  1805  09B3  3440               	retlw	64
  1806  09B4  3420               	retlw	32
  1807  09B5  341F               	retlw	31
  1808  09B6  3400               	retlw	0
  1809  09B7  3400               	retlw	0
  1810  09B8  3400               	retlw	0
  1811  09B9  343F               	retlw	63
  1812  09BA  3440               	retlw	64
  1813  09BB  3438               	retlw	56
  1814  09BC  3440               	retlw	64
  1815  09BD  343F               	retlw	63
  1816  09BE  3400               	retlw	0
  1817  09BF  3400               	retlw	0
  1818  09C0  3400               	retlw	0
  1819  09C1  3463               	retlw	99
  1820  09C2  3414               	retlw	20
  1821  09C3  3408               	retlw	8
  1822  09C4  3414               	retlw	20
  1823  09C5  3463               	retlw	99
  1824  09C6  3400               	retlw	0
  1825  09C7  3400               	retlw	0
  1826  09C8  3400               	retlw	0
  1827  09C9  3403               	retlw	3
  1828  09CA  3404               	retlw	4
  1829  09CB  3478               	retlw	120
  1830  09CC  3404               	retlw	4
  1831  09CD  3403               	retlw	3
  1832  09CE  3400               	retlw	0
  1833  09CF  3400               	retlw	0
  1834  09D0  3400               	retlw	0
  1835  09D1  3461               	retlw	97
  1836  09D2  3451               	retlw	81
  1837  09D3  3449               	retlw	73
  1838  09D4  3445               	retlw	69
  1839  09D5  3443               	retlw	67
  1840  09D6  3400               	retlw	0
  1841  09D7  3400               	retlw	0
  1842  09D8  3400               	retlw	0
  1843  09D9  347F               	retlw	127
  1844  09DA  3441               	retlw	65
  1845  09DB  3441               	retlw	65
  1846  09DC  3400               	retlw	0
  1847  09DD  3400               	retlw	0
  1848  09DE  3400               	retlw	0
  1849  09DF  3400               	retlw	0
  1850  09E0  3400               	retlw	0
  1851  09E1  3402               	retlw	2
  1852  09E2  3404               	retlw	4
  1853  09E3  3408               	retlw	8
  1854  09E4  3410               	retlw	16
  1855  09E5  3420               	retlw	32
  1856  09E6  3400               	retlw	0
  1857  09E7  3400               	retlw	0
  1858  09E8  3400               	retlw	0
  1859  09E9  3441               	retlw	65
  1860  09EA  3441               	retlw	65
  1861  09EB  347F               	retlw	127
  1862  09EC  3400               	retlw	0
  1863  09ED  3400               	retlw	0
  1864  09EE  3400               	retlw	0
  1865  09EF  3400               	retlw	0
  1866  09F0  3400               	retlw	0
  1867  09F1  3404               	retlw	4
  1868  09F2  3402               	retlw	2
  1869  09F3  3401               	retlw	1
  1870  09F4  3402               	retlw	2
  1871  09F5  3404               	retlw	4
  1872  09F6  3400               	retlw	0
  1873  09F7  3400               	retlw	0
  1874  09F8  3400               	retlw	0
  1875  09F9  3480               	retlw	128
  1876  09FA  3480               	retlw	128
  1877  09FB  3480               	retlw	128
  1878  09FC  3480               	retlw	128
  1879  09FD  3480               	retlw	128
  1880  09FE  3400               	retlw	0
  1881  09FF  3400               	retlw	0
  1882  0A00  3400               	retlw	0
  1883  0A01  3401               	retlw	1
  1884  0A02  3402               	retlw	2
  1885  0A03  3404               	retlw	4
  1886  0A04  3400               	retlw	0
  1887  0A05  3400               	retlw	0
  1888  0A06  3400               	retlw	0
  1889  0A07  3400               	retlw	0
  1890  0A08  3400               	retlw	0
  1891  0A09  3420               	retlw	32
  1892  0A0A  3454               	retlw	84
  1893  0A0B  3454               	retlw	84
  1894  0A0C  3454               	retlw	84
  1895  0A0D  3478               	retlw	120
  1896  0A0E  3400               	retlw	0
  1897  0A0F  3400               	retlw	0
  1898  0A10  3400               	retlw	0
  1899  0A11  347F               	retlw	127
  1900  0A12  3448               	retlw	72
  1901  0A13  3444               	retlw	68
  1902  0A14  3444               	retlw	68
  1903  0A15  3438               	retlw	56
  1904  0A16  3400               	retlw	0
  1905  0A17  3400               	retlw	0
  1906  0A18  3400               	retlw	0
  1907  0A19  3438               	retlw	56
  1908  0A1A  3444               	retlw	68
  1909  0A1B  3444               	retlw	68
  1910  0A1C  3428               	retlw	40
  1911  0A1D  3400               	retlw	0
  1912  0A1E  3400               	retlw	0
  1913  0A1F  3400               	retlw	0
  1914  0A20  3400               	retlw	0
  1915  0A21  3438               	retlw	56
  1916  0A22  3444               	retlw	68
  1917  0A23  3444               	retlw	68
  1918  0A24  3448               	retlw	72
  1919  0A25  347F               	retlw	127
  1920  0A26  3400               	retlw	0
  1921  0A27  3400               	retlw	0
  1922  0A28  3400               	retlw	0
  1923  0A29  3438               	retlw	56
  1924  0A2A  3454               	retlw	84
  1925  0A2B  3454               	retlw	84
  1926  0A2C  3454               	retlw	84
  1927  0A2D  3418               	retlw	24
  1928  0A2E  3400               	retlw	0
  1929  0A2F  3400               	retlw	0
  1930  0A30  3400               	retlw	0
  1931  0A31  3408               	retlw	8
  1932  0A32  347E               	retlw	126
  1933  0A33  3409               	retlw	9
  1934  0A34  3402               	retlw	2
  1935  0A35  3400               	retlw	0
  1936  0A36  3400               	retlw	0
  1937  0A37  3400               	retlw	0
  1938  0A38  3400               	retlw	0
  1939  0A39  3418               	retlw	24
  1940  0A3A  34A4               	retlw	164
  1941  0A3B  34A4               	retlw	164
  1942  0A3C  34A4               	retlw	164
  1943  0A3D  347C               	retlw	124
  1944  0A3E  3400               	retlw	0
  1945  0A3F  3400               	retlw	0
  1946  0A40  3400               	retlw	0
  1947  0A41  347F               	retlw	127
  1948  0A42  3408               	retlw	8
  1949  0A43  3404               	retlw	4
  1950  0A44  3404               	retlw	4
  1951  0A45  3478               	retlw	120
  1952  0A46  3400               	retlw	0
  1953  0A47  3400               	retlw	0
  1954  0A48  3400               	retlw	0
  1955  0A49  3400               	retlw	0
  1956  0A4A  347D               	retlw	125
  1957  0A4B  3400               	retlw	0
  1958  0A4C  3400               	retlw	0
  1959  0A4D  3400               	retlw	0
  1960  0A4E  3400               	retlw	0
  1961  0A4F  3400               	retlw	0
  1962  0A50  3400               	retlw	0
  1963  0A51  3480               	retlw	128
  1964  0A52  3484               	retlw	132
  1965  0A53  347D               	retlw	125
  1966  0A54  3400               	retlw	0
  1967  0A55  3400               	retlw	0
  1968  0A56  3400               	retlw	0
  1969  0A57  3400               	retlw	0
  1970  0A58  3400               	retlw	0
  1971  0A59  347F               	retlw	127
  1972  0A5A  3410               	retlw	16
  1973  0A5B  3428               	retlw	40
  1974  0A5C  3444               	retlw	68
  1975  0A5D  3400               	retlw	0
  1976  0A5E  3400               	retlw	0
  1977  0A5F  3400               	retlw	0
  1978  0A60  3400               	retlw	0
  1979  0A61  3441               	retlw	65
  1980  0A62  347F               	retlw	127
  1981  0A63  3440               	retlw	64
  1982  0A64  3400               	retlw	0
  1983  0A65  3400               	retlw	0
  1984  0A66  3400               	retlw	0
  1985  0A67  3400               	retlw	0
  1986  0A68  3400               	retlw	0
  1987  0A69  347C               	retlw	124
  1988  0A6A  3404               	retlw	4
  1989  0A6B  3418               	retlw	24
  1990  0A6C  3404               	retlw	4
  1991  0A6D  3478               	retlw	120
  1992  0A6E  3400               	retlw	0
  1993  0A6F  3400               	retlw	0
  1994  0A70  3400               	retlw	0
  1995  0A71  347C               	retlw	124
  1996  0A72  3408               	retlw	8
  1997  0A73  3404               	retlw	4
  1998  0A74  347C               	retlw	124
  1999  0A75  3400               	retlw	0
  2000  0A76  3400               	retlw	0
  2001  0A77  3400               	retlw	0
  2002  0A78  3400               	retlw	0
  2003  0A79  3438               	retlw	56
  2004  0A7A  3444               	retlw	68
  2005  0A7B  3444               	retlw	68
  2006  0A7C  3438               	retlw	56
  2007  0A7D  3400               	retlw	0
  2008  0A7E  3400               	retlw	0
  2009  0A7F  3400               	retlw	0
  2010  0A80  3400               	retlw	0
  2011  0A81  34FC               	retlw	252
  2012  0A82  3424               	retlw	36
  2013  0A83  3424               	retlw	36
  2014  0A84  3418               	retlw	24
  2015  0A85  3400               	retlw	0
  2016  0A86  3400               	retlw	0
  2017  0A87  3400               	retlw	0
  2018  0A88  3400               	retlw	0
  2019  0A89  3418               	retlw	24
  2020  0A8A  3424               	retlw	36
  2021  0A8B  3424               	retlw	36
  2022  0A8C  34FC               	retlw	252
  2023  0A8D  3400               	retlw	0
  2024  0A8E  3400               	retlw	0
  2025  0A8F  3400               	retlw	0
  2026  0A90  3400               	retlw	0
  2027  0A91  3400               	retlw	0
  2028  0A92  347C               	retlw	124
  2029  0A93  3408               	retlw	8
  2030  0A94  3404               	retlw	4
  2031  0A95  3400               	retlw	0
  2032  0A96  3400               	retlw	0
  2033  0A97  3400               	retlw	0
  2034  0A98  3400               	retlw	0
  2035  0A99  3448               	retlw	72
  2036  0A9A  3454               	retlw	84
  2037  0A9B  3454               	retlw	84
  2038  0A9C  3424               	retlw	36
  2039  0A9D  3400               	retlw	0
  2040  0A9E  3400               	retlw	0
  2041  0A9F  3400               	retlw	0
  2042  0AA0  3400               	retlw	0
  2043  0AA1  3404               	retlw	4
  2044  0AA2  347F               	retlw	127
  2045  0AA3  3444               	retlw	68
  2046  0AA4  3400               	retlw	0
  2047  0AA5  3400               	retlw	0
  2048  0AA6  3400               	retlw	0
  2049  0AA7  3400               	retlw	0
  2050  0AA8  3400               	retlw	0
  2051  0AA9  343C               	retlw	60
  2052  0AAA  3440               	retlw	64
  2053  0AAB  3440               	retlw	64
  2054  0AAC  347C               	retlw	124
  2055  0AAD  3400               	retlw	0
  2056  0AAE  3400               	retlw	0
  2057  0AAF  3400               	retlw	0
  2058  0AB0  3400               	retlw	0
  2059  0AB1  341C               	retlw	28
  2060  0AB2  3420               	retlw	32
  2061  0AB3  3440               	retlw	64
  2062  0AB4  3420               	retlw	32
  2063  0AB5  341C               	retlw	28
  2064  0AB6  3400               	retlw	0
  2065  0AB7  3400               	retlw	0
  2066  0AB8  3400               	retlw	0
  2067  0AB9  343C               	retlw	60
  2068  0ABA  3440               	retlw	64
  2069  0ABB  3430               	retlw	48
  2070  0ABC  3440               	retlw	64
  2071  0ABD  343C               	retlw	60
  2072  0ABE  3400               	retlw	0
  2073  0ABF  3400               	retlw	0
  2074  0AC0  3400               	retlw	0
  2075  0AC1  3444               	retlw	68
  2076  0AC2  3428               	retlw	40
  2077  0AC3  3410               	retlw	16
  2078  0AC4  3428               	retlw	40
  2079  0AC5  3444               	retlw	68
  2080  0AC6  3400               	retlw	0
  2081  0AC7  3400               	retlw	0
  2082  0AC8  3400               	retlw	0
  2083  0AC9  341C               	retlw	28
  2084  0ACA  34A0               	retlw	160
  2085  0ACB  34A0               	retlw	160
  2086  0ACC  347C               	retlw	124
  2087  0ACD  3400               	retlw	0
  2088  0ACE  3400               	retlw	0
  2089  0ACF  3400               	retlw	0
  2090  0AD0  3400               	retlw	0
  2091  0AD1  3444               	retlw	68
  2092  0AD2  3464               	retlw	100
  2093  0AD3  3454               	retlw	84
  2094  0AD4  344C               	retlw	76
  2095  0AD5  3444               	retlw	68
  2096  0AD6  3400               	retlw	0
  2097  0AD7  3400               	retlw	0
  2098  0AD8  3400               	retlw	0
  2099  0AD9  3408               	retlw	8
  2100  0ADA  3436               	retlw	54
  2101  0ADB  3441               	retlw	65
  2102  0ADC  3400               	retlw	0
  2103  0ADD  3400               	retlw	0
  2104  0ADE  3400               	retlw	0
  2105  0ADF  3400               	retlw	0
  2106  0AE0  3400               	retlw	0
  2107  0AE1  3400               	retlw	0
  2108  0AE2  347F               	retlw	127
  2109  0AE3  3400               	retlw	0
  2110  0AE4  3400               	retlw	0
  2111  0AE5  3400               	retlw	0
  2112  0AE6  3400               	retlw	0
  2113  0AE7  3400               	retlw	0
  2114  0AE8  3400               	retlw	0
  2115  0AE9  3441               	retlw	65
  2116  0AEA  3436               	retlw	54
  2117  0AEB  3408               	retlw	8
  2118  0AEC  3400               	retlw	0
  2119  0AED  3400               	retlw	0
  2120  0AEE  3400               	retlw	0
  2121  0AEF  3400               	retlw	0
  2122  0AF0  3400               	retlw	0
  2123  0AF1  3402               	retlw	2
  2124  0AF2  3401               	retlw	1
  2125  0AF3  3401               	retlw	1
  2126  0AF4  3402               	retlw	2
  2127  0AF5  3401               	retlw	1
  2128  0AF6  3400               	retlw	0
  2129  0AF7  3400               	retlw	0
  2130  0AF8  3400               	retlw	0
  2131  0AF9  3402               	retlw	2
  2132  0AFA  3405               	retlw	5
  2133  0AFB  3405               	retlw	5
  2134  0AFC  3402               	retlw	2
  2135  0AFD  3400               	retlw	0
  2136  0AFE  3400               	retlw	0
  2137  0AFF  3400               	retlw	0
  2138  0B00                     __end_of_OledFont:	
  2139  0011                     _PIR1bits	set	17
  2140  009C                     _ADRESH	set	156
  2141  009B                     _ADRESL	set	155
  2142  009D                     _ADCON0bits	set	157
  2143  009E                     _ADCON1bits	set	158
  2144  008C                     _TRISAbits	set	140
  2145  008E                     _TRISCbits	set	142
  2146  04CF                     _SPLLEN	set	1231
  2147  04CE                     _IRCF3	set	1230
  2148  04CD                     _IRCF2	set	1229
  2149  04CC                     _IRCF1	set	1228
  2150  04CB                     _IRCF0	set	1227
  2151  04C9                     _SCS1	set	1225
  2152  04C8                     _SCS0	set	1224
  2153  018C                     _ANSELAbits	set	396
  2154  018E                     _ANSELCbits	set	398
  2155  0216                     _SSPCON2bits	set	534
  2156  0211                     _SSPBUF	set	529
  2157  0212                     _SSPADD	set	530
  2158  0215                     _SSPCONbits	set	533
  2159  0E20                     _SSPCLKPPSbits	set	3616
  2160  0E21                     _SSPDATPPSbits	set	3617
  2161  0E0F                     _PPSLOCKbits	set	3599
  2162  0E0F                     _PPSLOCK	set	3599
  2163  0EA5                     _RC5PPSbits	set	3749
  2164  0EA4                     _RC4PPSbits	set	3748
  2165  0B00                     STR_4:	
  2166  0B00  3425               	retlw	37	;'%'
  2167  0B01  346C               	retlw	108	;'l'
  2168  0B02  3475               	retlw	117	;'u'
  2169  0B03  342E               	retlw	46	;'.'
  2170  0B04  3425               	retlw	37	;'%'
  2171  0B05  3436               	retlw	54	;'6'
  2172  0B06  342E               	retlw	46	;'.'
  2173  0B07  3436               	retlw	54	;'6'
  2174  0B08  346C               	retlw	108	;'l'
  2175  0B09  3475               	retlw	117	;'u'
  2176  0B0A  3400               	retlw	0
  2177                           
  2178                           	psect	stringtext3
  2179  1828                     __pstringtext3:	
  2180  1828                     STR_2:	
  2181  1828  3420               	retlw	32	;' '
  2182  1829  3420               	retlw	32	;' '
  2183  182A  3420               	retlw	32	;' '
  2184  182B  3420               	retlw	32	;' '
  2185  182C  3420               	retlw	32	;' '
  2186  182D  3400               	retlw	0
  2187                           
  2188                           	psect	stringtext4
  2189  182E                     __pstringtext4:	
  2190  182E                     STR_1:	
  2191  182E  3441               	retlw	65	;'A'
  2192  182F  343A               	retlw	58	;':'
  2193  1830  3400               	retlw	0
  2194                           
  2195                           	psect	stringtext5
  2196  0000                     __pstringtext5:	
  2197  1828                     
  2198                           ; #config settings
  2199  0000                     
  2200                           	psect	cinit
  2201  07F6                     start_initialization:	
  2202  07F6                     __initialization:	
  2203                           
  2204                           ; Clear objects allocated to BANK1
  2205  07F6  30A0               	movlw	low __pbssBANK1
  2206  07F7  0084               	movwf	4
  2207  07F8  3000               	movlw	high __pbssBANK1
  2208  07F9  0085               	movwf	5
  2209  07FA  3021               	movlw	33
  2210  07FB  3196  26CC         	fcall	clear_ram0
  2211  07FD                     end_of_initialization:	
  2212                           ;End of C runtime variable initialization code
  2213                           
  2214  07FD                     __end_of__initialization:	
  2215  07FD  0020               	movlb	0
  2216  07FE  318E  2EB1         	ljmp	_main	;jump to C main() function
  2217                           
  2218                           	psect	bssBANK1
  2219  00A0                     __pbssBANK1:	
  2220  00A0                     _readVoltage:	
  2221  00A0                     	ds	4
  2222  00A4                     _Current:	
  2223  00A4                     	ds	4
  2224  00A8                     _Voltage:	
  2225  00A8                     	ds	4
  2226  00AC                     _convertedValue1:	
  2227  00AC                     	ds	2
  2228  00AE                     _convertedValue:	
  2229  00AE                     	ds	2
  2230  00B0                     ftoa@buf:	
  2231  00B0                     	ds	17
  2232                           
  2233                           	psect	clrtext
  2234  16CC                     clear_ram0:	
  2235                           ;	Called with FSR0 containing the base address, and
  2236                           ;	WREG with the size to clear
  2237                           
  2238  16CC  0064               	clrwdt	;clear the watchdog before getting into this loop
  2239  16CD                     clrloop0:	
  2240  16CD  0180               	clrf	0	;clear RAM location pointed to by FSR
  2241  16CE  3101               	addfsr 0,1
  2242  16CF  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2243  16D0  2ECD               	goto	clrloop0	;have we reached the end yet?
  2244  16D1  3400               	retlw	0	;all done for this memory range, return
  2245                           
  2246                           	psect	cstackBANK1
  2247  00C1                     __pcstackBANK1:	
  2248  00C1                     main@i:	
  2249                           
  2250                           ; 2 bytes @ 0x0
  2251  00C1                     	ds	2
  2252                           
  2253                           	psect	cstackCOMMON
  2254  0070                     __pcstackCOMMON:	
  2255  0070                     ?_isdigit:	
  2256  0070                     ?___flge:	
  2257                           ; 1 bit 
  2258                           
  2259  0070                     ?_OLED_Init:	
  2260                           ; 1 bit 
  2261                           
  2262  0070                     ?_OLED_Clear:	
  2263                           ; 1 bytes @ 0x0
  2264                           
  2265  0070                     ?_memmove:	
  2266                           ; 1 bytes @ 0x0
  2267                           
  2268  0070                     ??_isdigit:	
  2269                           ; 1 bytes @ 0x0
  2270                           
  2271  0070                     ?_internal_16:	
  2272                           ; 1 bytes @ 0x0
  2273                           
  2274  0070                     ??_internal_16:	
  2275                           ; 1 bytes @ 0x0
  2276                           
  2277  0070                     ?_I2C_Init:	
  2278                           ; 1 bytes @ 0x0
  2279                           
  2280  0070                     ??_I2C_Init:	
  2281                           ; 1 bytes @ 0x0
  2282                           
  2283  0070                     ?_Send_I2C_Data:	
  2284                           ; 1 bytes @ 0x0
  2285                           
  2286  0070                     ?_Send_I2C_StartBit:	
  2287                           ; 1 bytes @ 0x0
  2288                           
  2289  0070                     ??_Send_I2C_StartBit:	
  2290                           ; 1 bytes @ 0x0
  2291                           
  2292  0070                     ?_Send_I2C_StopBit:	
  2293                           ; 1 bytes @ 0x0
  2294                           
  2295  0070                     ??_Send_I2C_StopBit:	
  2296                           ; 1 bytes @ 0x0
  2297                           
  2298  0070                     ?_initMain:	
  2299                           ; 1 bytes @ 0x0
  2300                           
  2301  0070                     ??_initMain:	
  2302                           ; 1 bytes @ 0x0
  2303                           
  2304  0070                     ?_main:	
  2305                           ; 1 bytes @ 0x0
  2306                           
  2307  0070                     ?_OLED_Command:	
  2308                           ; 1 bytes @ 0x0
  2309                           
  2310  0070                     ?_OLED_PutChar:	
  2311                           ; 1 bytes @ 0x0
  2312                           
  2313  0070                     ?__Umul8_16:	
  2314                           ; 1 bytes @ 0x0
  2315                           
  2316  0070                     ?___wmul:	
  2317                           ; 2 bytes @ 0x0
  2318                           
  2319  0070                     ?___lldiv:	
  2320                           ; 2 bytes @ 0x0
  2321                           
  2322  0070                     ?___flneg:	
  2323                           ; 4 bytes @ 0x0
  2324                           
  2325  0070                     ?___xxtofl:	
  2326                           ; 4 bytes @ 0x0
  2327                           
  2328  0070                     _isdigit$815:	
  2329                           ; 4 bytes @ 0x0
  2330                           
  2331  0070                     __Umul8_16@multiplicand:	
  2332                           ; 1 bytes @ 0x0
  2333                           
  2334  0070                     Send_I2C_Data@databyte:	
  2335                           ; 1 bytes @ 0x0
  2336                           
  2337  0070                     ___wmul@multiplier:	
  2338                           ; 2 bytes @ 0x0
  2339                           
  2340  0070                     memmove@s1:	
  2341                           ; 2 bytes @ 0x0
  2342                           
  2343  0070                     ___lldiv@divisor:	
  2344                           ; 2 bytes @ 0x0
  2345                           
  2346  0070                     ___flge@ff1:	
  2347                           ; 4 bytes @ 0x0
  2348                           
  2349  0070                     ___flneg@f1:	
  2350                           ; 4 bytes @ 0x0
  2351                           
  2352  0070                     ___xxtofl@val:	
  2353                           ; 4 bytes @ 0x0
  2354                           
  2355                           
  2356                           ; 4 bytes @ 0x0
  2357  0070                     	ds	1
  2358  0071                     isdigit@c:	
  2359                           
  2360                           ; 1 bytes @ 0x1
  2361  0071                     	ds	1
  2362  0072                     ??__Umul8_16:	
  2363  0072                     ??_Send_I2C_Data:	
  2364                           ; 1 bytes @ 0x2
  2365                           
  2366  0072                     ??_OLED_Command:	
  2367                           ; 1 bytes @ 0x2
  2368                           
  2369  0072                     ___wmul@multiplicand:	
  2370                           ; 1 bytes @ 0x2
  2371                           
  2372  0072                     memmove@n:	
  2373                           ; 2 bytes @ 0x2
  2374                           
  2375                           
  2376                           ; 2 bytes @ 0x2
  2377  0072                     	ds	2
  2378  0074                     ??_memmove:	
  2379  0074                     ??___wmul:	
  2380                           ; 1 bytes @ 0x4
  2381                           
  2382  0074                     ??___flneg:	
  2383                           ; 1 bytes @ 0x4
  2384                           
  2385  0074                     ??___xxtofl:	
  2386                           ; 1 bytes @ 0x4
  2387                           
  2388  0074                     OLED_Command@temp:	
  2389                           ; 1 bytes @ 0x4
  2390                           
  2391  0074                     ___wmul@product:	
  2392                           ; 1 bytes @ 0x4
  2393                           
  2394  0074                     __Umul8_16@product:	
  2395                           ; 2 bytes @ 0x4
  2396                           
  2397  0074                     ___lldiv@dividend:	
  2398                           ; 2 bytes @ 0x4
  2399                           
  2400  0074                     ___flge@ff2:	
  2401                           ; 4 bytes @ 0x4
  2402                           
  2403                           
  2404                           ; 4 bytes @ 0x4
  2405  0074                     	ds	1
  2406  0075                     ??_OLED_Init:	
  2407  0075                     ?_OLED_YX:	
  2408                           ; 1 bytes @ 0x5
  2409                           
  2410  0075                     OLED_YX@Column:	
  2411                           ; 1 bytes @ 0x5
  2412                           
  2413                           
  2414                           ; 1 bytes @ 0x5
  2415  0075                     	ds	1
  2416  0076                     ??_OLED_YX:	
  2417  0076                     __Umul8_16@word_mpld:	
  2418                           ; 1 bytes @ 0x6
  2419                           
  2420                           
  2421                           ; 2 bytes @ 0x6
  2422  0076                     	ds	2
  2423  0078                     ??___lldiv:	
  2424  0078                     ??___flge:	
  2425                           ; 1 bytes @ 0x8
  2426                           
  2427  0078                     ___xxtofl@sign:	
  2428                           ; 1 bytes @ 0x8
  2429                           
  2430  0078                     memmove@d1:	
  2431                           ; 1 bytes @ 0x8
  2432                           
  2433  0078                     __Umul8_16@multiplier:	
  2434                           ; 1 bytes @ 0x8
  2435                           
  2436                           
  2437                           ; 1 bytes @ 0x8
  2438  0078                     	ds	1
  2439  0079                     OLED_YX@Row:	
  2440  0079                     ___xxtofl@exp:	
  2441                           ; 1 bytes @ 0x9
  2442                           
  2443  0079                     memmove@s:	
  2444                           ; 1 bytes @ 0x9
  2445                           
  2446  0079                     ___lldiv@quotient:	
  2447                           ; 2 bytes @ 0x9
  2448                           
  2449                           
  2450                           ; 4 bytes @ 0x9
  2451  0079                     	ds	1
  2452  007A                     ___xxtofl@arg:	
  2453                           
  2454                           ; 4 bytes @ 0xA
  2455  007A                     	ds	1
  2456  007B                     memmove@d:	
  2457                           
  2458                           ; 1 bytes @ 0xB
  2459  007B                     	ds	1
  2460  007C                     ??_OLED_Clear:	
  2461  007C                     ?_OLED_Write_String:	
  2462                           ; 1 bytes @ 0xC
  2463                           
  2464  007C                     OLED_Write_String@s:	
  2465                           ; 1 bytes @ 0xC
  2466                           
  2467                           
  2468                           ; 2 bytes @ 0xC
  2469  007C                     	ds	1
  2470  007D                     ___lldiv@counter:	
  2471                           
  2472                           ; 1 bytes @ 0xD
  2473  007D                     	ds	1
  2474  007E                     ??___flsub:	
  2475                           
  2476                           	psect	cstackBANK0
  2477  0020                     __pcstackBANK0:	
  2478                           ; 1 bytes @ 0xE
  2479                           
  2480  0020                     ??_OLED_PutChar:	
  2481  0020                     ?___llmod:	
  2482                           ; 1 bytes @ 0x0
  2483                           
  2484  0020                     ?___flmul:	
  2485                           ; 4 bytes @ 0x0
  2486                           
  2487  0020                     ___llmod@divisor:	
  2488                           ; 4 bytes @ 0x0
  2489                           
  2490  0020                     ___flmul@b:	
  2491                           ; 4 bytes @ 0x0
  2492                           
  2493                           
  2494                           ; 4 bytes @ 0x0
  2495  0020                     	ds	4
  2496  0024                     ___llmod@dividend:	
  2497  0024                     ___flmul@a:	
  2498                           ; 4 bytes @ 0x4
  2499                           
  2500  0024                     OLED_PutChar@bytes:	
  2501                           ; 4 bytes @ 0x4
  2502                           
  2503                           
  2504                           ; 9 bytes @ 0x4
  2505  0024                     	ds	4
  2506  0028                     ??___llmod:	
  2507  0028                     ??___flmul:	
  2508                           ; 1 bytes @ 0x8
  2509                           
  2510                           
  2511                           ; 1 bytes @ 0x8
  2512  0028                     	ds	1
  2513  0029                     ___llmod@counter:	
  2514                           
  2515                           ; 1 bytes @ 0x9
  2516  0029                     	ds	1
  2517  002A                     ?_sprintf:	
  2518  002A                     sprintf@f:	
  2519                           ; 2 bytes @ 0xA
  2520                           
  2521                           
  2522                           ; 2 bytes @ 0xA
  2523  002A                     	ds	3
  2524  002D                     ___flmul@sign:	
  2525  002D                     OLED_PutChar@base:	
  2526                           ; 1 bytes @ 0xD
  2527                           
  2528                           
  2529                           ; 2 bytes @ 0xD
  2530  002D                     	ds	1
  2531  002E                     ___flmul@grs:	
  2532                           
  2533                           ; 4 bytes @ 0xE
  2534  002E                     	ds	1
  2535  002F                     OLED_PutChar@i:	
  2536                           
  2537                           ; 2 bytes @ 0xF
  2538  002F                     	ds	2
  2539  0031                     OLED_PutChar@ch:	
  2540                           
  2541                           ; 1 bytes @ 0x11
  2542  0031                     	ds	1
  2543  0032                     ??_OLED_Write_String:	
  2544  0032                     ___flmul@aexp:	
  2545                           ; 1 bytes @ 0x12
  2546                           
  2547  0032                     OLED_Clear@row:	
  2548                           ; 1 bytes @ 0x12
  2549                           
  2550                           
  2551                           ; 2 bytes @ 0x12
  2552  0032                     	ds	1
  2553  0033                     ___flmul@bexp:	
  2554                           
  2555                           ; 1 bytes @ 0x13
  2556  0033                     	ds	1
  2557  0034                     ??_sprintf:	
  2558  0034                     OLED_Clear@col:	
  2559                           ; 1 bytes @ 0x14
  2560                           
  2561  0034                     ___flmul@prod:	
  2562                           ; 2 bytes @ 0x14
  2563                           
  2564                           
  2565                           ; 4 bytes @ 0x14
  2566  0034                     	ds	4
  2567  0038                     ___flmul@temp:	
  2568                           
  2569                           ; 2 bytes @ 0x18
  2570  0038                     	ds	2
  2571  003A                     ?___fltol:	
  2572  003A                     ?___fladd:	
  2573                           ; 4 bytes @ 0x1A
  2574                           
  2575  003A                     sprintf@flag:	
  2576                           ; 4 bytes @ 0x1A
  2577                           
  2578  003A                     ___fltol@f1:	
  2579                           ; 1 bytes @ 0x1A
  2580                           
  2581  003A                     ___fladd@b:	
  2582                           ; 4 bytes @ 0x1A
  2583                           
  2584                           
  2585                           ; 4 bytes @ 0x1A
  2586  003A                     	ds	1
  2587  003B                     sprintf@ap:	
  2588                           
  2589                           ; 1 bytes @ 0x1B
  2590  003B                     	ds	1
  2591  003C                     sprintf@val:	
  2592                           
  2593                           ; 4 bytes @ 0x1C
  2594  003C                     	ds	2
  2595  003E                     ??___fltol:	
  2596  003E                     ___fladd@a:	
  2597                           ; 1 bytes @ 0x1E
  2598                           
  2599                           
  2600                           ; 4 bytes @ 0x1E
  2601  003E                     	ds	2
  2602  0040                     sprintf@sp:	
  2603                           
  2604                           ; 1 bytes @ 0x20
  2605  0040                     	ds	1
  2606  0041                     sprintf@width:	
  2607                           
  2608                           ; 2 bytes @ 0x21
  2609  0041                     	ds	1
  2610  0042                     ??___fladd:	
  2611                           
  2612                           ; 1 bytes @ 0x22
  2613  0042                     	ds	1
  2614  0043                     ___fltol@sign1:	
  2615  0043                     sprintf@prec:	
  2616                           ; 1 bytes @ 0x23
  2617                           
  2618                           
  2619                           ; 2 bytes @ 0x23
  2620  0043                     	ds	1
  2621  0044                     ___fltol@exp1:	
  2622                           
  2623                           ; 1 bytes @ 0x24
  2624  0044                     	ds	1
  2625  0045                     sprintf@c:	
  2626                           
  2627                           ; 1 bytes @ 0x25
  2628  0045                     	ds	5
  2629  004A                     ___fladd@signs:	
  2630                           
  2631                           ; 1 bytes @ 0x2A
  2632  004A                     	ds	1
  2633  004B                     ___fladd@aexp:	
  2634                           
  2635                           ; 1 bytes @ 0x2B
  2636  004B                     	ds	1
  2637  004C                     ___fladd@bexp:	
  2638                           
  2639                           ; 1 bytes @ 0x2C
  2640  004C                     	ds	1
  2641  004D                     ___fladd@grs:	
  2642                           
  2643                           ; 1 bytes @ 0x2D
  2644  004D                     	ds	1
  2645  004E                     ?___flsub:	
  2646  004E                     ?___fldiv:	
  2647                           ; 4 bytes @ 0x2E
  2648                           
  2649  004E                     ___flsub@a:	
  2650                           ; 4 bytes @ 0x2E
  2651                           
  2652  004E                     ___fldiv@a:	
  2653                           ; 4 bytes @ 0x2E
  2654                           
  2655                           
  2656                           ; 4 bytes @ 0x2E
  2657  004E                     	ds	4
  2658  0052                     ___flsub@b:	
  2659  0052                     ___fldiv@b:	
  2660                           ; 4 bytes @ 0x32
  2661                           
  2662                           
  2663                           ; 4 bytes @ 0x32
  2664  0052                     	ds	4
  2665  0056                     ?_ftoa:	
  2666  0056                     ??___fldiv:	
  2667                           ; 1 bytes @ 0x36
  2668                           
  2669  0056                     ftoa@f:	
  2670                           ; 1 bytes @ 0x36
  2671                           
  2672                           
  2673                           ; 4 bytes @ 0x36
  2674  0056                     	ds	4
  2675  005A                     ftoa@status:	
  2676                           
  2677                           ; 1 bytes @ 0x3A
  2678  005A                     	ds	1
  2679  005B                     ??_ftoa:	
  2680  005B                     ___fldiv@rem:	
  2681                           ; 1 bytes @ 0x3B
  2682                           
  2683                           
  2684                           ; 4 bytes @ 0x3B
  2685  005B                     	ds	1
  2686  005C                     ftoa@rem:	
  2687                           
  2688                           ; 4 bytes @ 0x3C
  2689  005C                     	ds	3
  2690  005F                     ___fldiv@sign:	
  2691                           
  2692                           ; 1 bytes @ 0x3F
  2693  005F                     	ds	1
  2694  0060                     ___fldiv@new_exp:	
  2695  0060                     ftoa@l:	
  2696                           ; 2 bytes @ 0x40
  2697                           
  2698                           
  2699                           ; 4 bytes @ 0x40
  2700  0060                     	ds	2
  2701  0062                     ___fldiv@grs:	
  2702                           
  2703                           ; 4 bytes @ 0x42
  2704  0062                     	ds	2
  2705  0064                     ftoa@cp:	
  2706                           
  2707                           ; 1 bytes @ 0x44
  2708  0064                     	ds	1
  2709  0065                     ?_OLED_Write_Float:	
  2710  0065                     OLED_Write_Float@f:	
  2711                           ; 1 bytes @ 0x45
  2712                           
  2713                           
  2714                           ; 4 bytes @ 0x45
  2715  0065                     	ds	1
  2716  0066                     ___fldiv@bexp:	
  2717                           
  2718                           ; 1 bytes @ 0x46
  2719  0066                     	ds	1
  2720  0067                     ___fldiv@aexp:	
  2721                           
  2722                           ; 1 bytes @ 0x47
  2723  0067                     	ds	2
  2724  0069                     ??_OLED_Write_Float:	
  2725                           
  2726                           ; 1 bytes @ 0x49
  2727  0069                     	ds	2
  2728  006B                     OLED_Write_Float@status:	
  2729                           
  2730                           ; 2 bytes @ 0x4B
  2731  006B                     	ds	2
  2732  006D                     OLED_Write_Float@buf11:	
  2733                           
  2734                           ; 1 bytes @ 0x4D
  2735  006D                     	ds	1
  2736  006E                     ??_main:	
  2737                           
  2738                           ; 1 bytes @ 0x4E
  2739  006E                     	ds	2
  2740                           
  2741                           	psect	maintext
  2742  0EB1                     __pmaintext:	
  2743 ;;
  2744 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2745 ;;
  2746 ;; *************** function _main *****************
  2747 ;; Defined at:
  2748 ;;		line 130 in file "Main.c"
  2749 ;; Parameters:    Size  Location     Type
  2750 ;;		None
  2751 ;; Auto vars:     Size  Location     Type
  2752 ;;  i               2    0[BANK1 ] int 
  2753 ;; Return value:  Size  Location     Type
  2754 ;;                  1    wreg      void 
  2755 ;; Registers used:
  2756 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2757 ;; Tracked objects:
  2758 ;;		On entry : B1F/0
  2759 ;;		On exit  : 0/0
  2760 ;;		Unchanged: 0/0
  2761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2763 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2764 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2765 ;;      Totals:         0       2       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2766 ;;Total ram usage:        4 bytes
  2767 ;; Hardware stack levels required when called:    4
  2768 ;; This function calls:
  2769 ;;		_I2C_Init
  2770 ;;		_OLED_Clear
  2771 ;;		_OLED_Init
  2772 ;;		_OLED_Write_Float
  2773 ;;		_OLED_Write_String
  2774 ;;		_OLED_YX
  2775 ;;		___fladd
  2776 ;;		___fldiv
  2777 ;;		___flmul
  2778 ;;		___flsub
  2779 ;;		___xxtofl
  2780 ;;		_initMain
  2781 ;; This function is called by:
  2782 ;;		Startup code after reset
  2783 ;; This function uses a non-reentrant model
  2784 ;;
  2785                           
  2786                           
  2787                           ;psect for function _main
  2788  0EB1                     _main:	
  2789                           
  2790                           ;Main.c: 131: initMain();
  2791                           
  2792                           ;incstack = 0
  2793                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2794  0EB1  318B  2315  318E   	fcall	_initMain
  2795                           
  2796                           ;Main.c: 134: I2C_Init();
  2797  0EB4  3180  2005  318E   	fcall	_I2C_Init
  2798                           
  2799                           ;Main.c: 136: _delay((unsigned long)((100)*(16000000/4000.0)));
  2800  0EB7  3003               	movlw	3
  2801  0EB8  0020               	movlb	0	; select bank0
  2802  0EB9  00EF               	movwf	??_main+1
  2803  0EBA  3008               	movlw	8
  2804  0EBB  00EE               	movwf	??_main
  2805  0EBC  3077               	movlw	119
  2806  0EBD                     u3777:	
  2807  0EBD  0B89               	decfsz	9,f
  2808  0EBE  2EBD               	goto	u3777
  2809  0EBF  0BEE               	decfsz	??_main,f
  2810  0EC0  2EBD               	goto	u3777
  2811  0EC1  0BEF               	decfsz	??_main+1,f
  2812  0EC2  2EBD               	goto	u3777
  2813                           
  2814                           ;Main.c: 139: OLED_Init();
  2815  0EC3  318B  23E5  318E   	fcall	_OLED_Init
  2816                           
  2817                           ;Main.c: 142: OLED_Clear();
  2818  0EC6  3197  27D7  318E   	fcall	_OLED_Clear
  2819  0EC9                     l2904:	
  2820                           
  2821                           ;Main.c: 151: ADCON0bits.CHS = 0b00000;
  2822  0EC9  3083               	movlw	-125
  2823  0ECA  0021               	movlb	1	; select bank1
  2824  0ECB  059D               	andwf	29,f	;volatile
  2825                           
  2826                           ;Main.c: 154: for(int i = 0; i < 1000; i++) {
  2827  0ECC  01C1               	clrf	main@i^(0+128)
  2828  0ECD  01C2               	clrf	(main@i+1)^(0+128)
  2829  0ECE                     l2912:	
  2830                           
  2831                           ;Main.c: 156: _delay((unsigned long)((10)*(16000000/4000000.0)));
  2832  0ECE  300D               	movlw	13
  2833  0ECF                     u3787:	
  2834  0ECF  0B89               	decfsz	9,f
  2835  0ED0  2ECF               	goto	u3787
  2836  0ED1  0000               	nop
  2837                           
  2838                           ;Main.c: 157: ADCON0bits.GO = 1;
  2839  0ED2  0021               	movlb	1	; select bank1
  2840  0ED3  149D               	bsf	29,1	;volatile
  2841  0ED4                     l157:	
  2842                           ;Main.c: 158: while (ADCON0bits.GO_nDONE);
  2843                           
  2844  0ED4  189D               	btfsc	29,1	;volatile
  2845  0ED5  2ED4               	goto	l157
  2846                           
  2847                           ;Main.c: 161: convertedValue = ((ADRESH<<8)+ADRESL);
  2848  0ED6  081C               	movf	28,w	;volatile
  2849  0ED7  00AF               	movwf	(_convertedValue+1)^(0+128)
  2850  0ED8  081B               	movf	27,w	;volatile
  2851  0ED9  00AE               	movwf	_convertedValue^(0+128)
  2852                           
  2853                           ;Main.c: 164: Voltage = (Voltage + (.0049 * convertedValue));
  2854  0EDA  082B               	movf	(_Voltage+3)^(0+128),w
  2855  0EDB  0020               	movlb	0	; select bank0
  2856  0EDC  00BD               	movwf	___fladd@b+3
  2857  0EDD  0021               	movlb	1	; select bank1
  2858  0EDE  082A               	movf	(_Voltage+2)^(0+128),w
  2859  0EDF  0020               	movlb	0	; select bank0
  2860  0EE0  00BC               	movwf	___fladd@b+2
  2861  0EE1  0021               	movlb	1	; select bank1
  2862  0EE2  0829               	movf	(_Voltage+1)^(0+128),w
  2863  0EE3  0020               	movlb	0	; select bank0
  2864  0EE4  00BB               	movwf	___fladd@b+1
  2865  0EE5  0021               	movlb	1	; select bank1
  2866  0EE6  0828               	movf	_Voltage^(0+128),w
  2867  0EE7  0020               	movlb	0	; select bank0
  2868  0EE8  00BA               	movwf	___fladd@b
  2869  0EE9  303B               	movlw	59
  2870  0EEA  00A3               	movwf	___flmul@b+3
  2871  0EEB  30A0               	movlw	160
  2872  0EEC  00A2               	movwf	___flmul@b+2
  2873  0EED  3090               	movlw	144
  2874  0EEE  00A1               	movwf	___flmul@b+1
  2875  0EEF  302E               	movlw	46
  2876  0EF0  00A0               	movwf	___flmul@b
  2877  0EF1  0021               	movlb	1	; select bank1
  2878  0EF2  082E               	movf	_convertedValue^(0+128),w
  2879  0EF3  00F0               	movwf	___xxtofl@val
  2880  0EF4  082F               	movf	(_convertedValue+1)^(0+128),w
  2881  0EF5  00F1               	movwf	___xxtofl@val+1
  2882  0EF6  01F2               	clrf	___xxtofl@val+2
  2883  0EF7  01F3               	clrf	___xxtofl@val+3
  2884  0EF8  3000               	movlw	0
  2885  0EF9  3180  2015  318E   	fcall	___xxtofl
  2886  0EFC  0873               	movf	?___xxtofl+3,w
  2887  0EFD  0020               	movlb	0	; select bank0
  2888  0EFE  00A7               	movwf	___flmul@a+3
  2889  0EFF  0872               	movf	?___xxtofl+2,w
  2890  0F00  00A6               	movwf	___flmul@a+2
  2891  0F01  0871               	movf	?___xxtofl+1,w
  2892  0F02  00A5               	movwf	___flmul@a+1
  2893  0F03  0870               	movf	?___xxtofl,w
  2894  0F04  00A4               	movwf	___flmul@a
  2895  0F05  3185  25CA  318E   	fcall	___flmul
  2896  0F08  0020               	movlb	0	; select bank0
  2897  0F09  0823               	movf	?___flmul+3,w
  2898  0F0A  00C1               	movwf	___fladd@a+3
  2899  0F0B  0822               	movf	?___flmul+2,w
  2900  0F0C  00C0               	movwf	___fladd@a+2
  2901  0F0D  0821               	movf	?___flmul+1,w
  2902  0F0E  00BF               	movwf	___fladd@a+1
  2903  0F0F  0820               	movf	?___flmul,w
  2904  0F10  00BE               	movwf	___fladd@a
  2905  0F11  3183  23E8  318E   	fcall	___fladd
  2906  0F14  0020               	movlb	0	; select bank0
  2907  0F15  083D               	movf	?___fladd+3,w
  2908  0F16  0021               	movlb	1	; select bank1
  2909  0F17  00AB               	movwf	(_Voltage+3)^(0+128)
  2910  0F18  0020               	movlb	0	; select bank0
  2911  0F19  083C               	movf	?___fladd+2,w
  2912  0F1A  0021               	movlb	1	; select bank1
  2913  0F1B  00AA               	movwf	(_Voltage+2)^(0+128)
  2914  0F1C  0020               	movlb	0	; select bank0
  2915  0F1D  083B               	movf	?___fladd+1,w
  2916  0F1E  0021               	movlb	1	; select bank1
  2917  0F1F  00A9               	movwf	(_Voltage+1)^(0+128)
  2918  0F20  0020               	movlb	0	; select bank0
  2919  0F21  083A               	movf	?___fladd,w
  2920  0F22  0021               	movlb	1	; select bank1
  2921  0F23  00A8               	movwf	_Voltage^(0+128)
  2922                           
  2923                           ;Main.c: 165: _delay((unsigned long)((1)*(16000000/4000.0)));
  2924  0F24  3006               	movlw	6
  2925  0F25  0020               	movlb	0	; select bank0
  2926  0F26  00EE               	movwf	??_main
  2927  0F27  3030               	movlw	48
  2928  0F28                     u3797:	
  2929  0F28  0B89               	decfsz	9,f
  2930  0F29  2F28               	goto	u3797
  2931  0F2A  0BEE               	decfsz	??_main,f
  2932  0F2B  2F28               	goto	u3797
  2933  0F2C  0000               	nop
  2934  0F2D  3001               	movlw	1
  2935  0F2E  0021               	movlb	1	; select bank1
  2936  0F2F  07C1               	addwf	main@i^(0+128),f
  2937  0F30  3000               	movlw	0
  2938  0F31  3DC2               	addwfc	(main@i+1)^(0+128),f
  2939  0F32  0842               	movf	(main@i+1)^(0+128),w
  2940  0F33  3A80               	xorlw	128
  2941  0F34  0020               	movlb	0	; select bank0
  2942  0F35  00EE               	movwf	??_main
  2943  0F36  3083               	movlw	131
  2944  0F37  026E               	subwf	??_main,w
  2945  0F38  1D03               	skipz
  2946  0F39  2F3D               	goto	u3765
  2947  0F3A  30E8               	movlw	232
  2948  0F3B  0021               	movlb	1	; select bank1
  2949  0F3C  0241               	subwf	main@i^(0+128),w
  2950  0F3D                     u3765:	
  2951  0F3D  1C03               	skipc
  2952  0F3E  2ECE               	goto	l2912
  2953                           
  2954                           ;Main.c: 166: };Main.c: 168: Voltage = Voltage/1000;
  2955  0F3F  3044               	movlw	68
  2956  0F40  0020               	movlb	0	; select bank0
  2957  0F41  00D1               	movwf	___fldiv@a+3
  2958  0F42  307A               	movlw	122
  2959  0F43  00D0               	movwf	___fldiv@a+2
  2960  0F44  3000               	movlw	0
  2961  0F45  00CF               	movwf	___fldiv@a+1
  2962  0F46  3000               	movlw	0
  2963  0F47  00CE               	movwf	___fldiv@a
  2964  0F48  0021               	movlb	1	; select bank1
  2965  0F49  082B               	movf	(_Voltage+3)^(0+128),w
  2966  0F4A  0020               	movlb	0	; select bank0
  2967  0F4B  00D5               	movwf	___fldiv@b+3
  2968  0F4C  0021               	movlb	1	; select bank1
  2969  0F4D  082A               	movf	(_Voltage+2)^(0+128),w
  2970  0F4E  0020               	movlb	0	; select bank0
  2971  0F4F  00D4               	movwf	___fldiv@b+2
  2972  0F50  0021               	movlb	1	; select bank1
  2973  0F51  0829               	movf	(_Voltage+1)^(0+128),w
  2974  0F52  0020               	movlb	0	; select bank0
  2975  0F53  00D3               	movwf	___fldiv@b+1
  2976  0F54  0021               	movlb	1	; select bank1
  2977  0F55  0828               	movf	_Voltage^(0+128),w
  2978  0F56  0020               	movlb	0	; select bank0
  2979  0F57  00D2               	movwf	___fldiv@b
  2980  0F58  3180  20AA  318E   	fcall	___fldiv
  2981  0F5B  0020               	movlb	0	; select bank0
  2982  0F5C  0851               	movf	?___fldiv+3,w
  2983  0F5D  0021               	movlb	1	; select bank1
  2984  0F5E  00AB               	movwf	(_Voltage+3)^(0+128)
  2985  0F5F  0020               	movlb	0	; select bank0
  2986  0F60  0850               	movf	?___fldiv+2,w
  2987  0F61  0021               	movlb	1	; select bank1
  2988  0F62  00AA               	movwf	(_Voltage+2)^(0+128)
  2989  0F63  0020               	movlb	0	; select bank0
  2990  0F64  084F               	movf	?___fldiv+1,w
  2991  0F65  0021               	movlb	1	; select bank1
  2992  0F66  00A9               	movwf	(_Voltage+1)^(0+128)
  2993  0F67  0020               	movlb	0	; select bank0
  2994  0F68  084E               	movf	?___fldiv,w
  2995  0F69  0021               	movlb	1	; select bank1
  2996  0F6A  00A8               	movwf	_Voltage^(0+128)
  2997                           
  2998                           ;Main.c: 169: Current = (Voltage-2.5)/ 0.100;
  2999  0F6B  303D               	movlw	61
  3000  0F6C  0020               	movlb	0	; select bank0
  3001  0F6D  00D1               	movwf	___fldiv@a+3
  3002  0F6E  30CC               	movlw	204
  3003  0F6F  00D0               	movwf	___fldiv@a+2
  3004  0F70  30CC               	movlw	204
  3005  0F71  00CF               	movwf	___fldiv@a+1
  3006  0F72  30CD               	movlw	205
  3007  0F73  00CE               	movwf	___fldiv@a
  3008  0F74  30C0               	movlw	192
  3009  0F75  00BD               	movwf	___fladd@b+3
  3010  0F76  3020               	movlw	32
  3011  0F77  00BC               	movwf	___fladd@b+2
  3012  0F78  3000               	movlw	0
  3013  0F79  00BB               	movwf	___fladd@b+1
  3014  0F7A  3000               	movlw	0
  3015  0F7B  00BA               	movwf	___fladd@b
  3016  0F7C  0021               	movlb	1	; select bank1
  3017  0F7D  082B               	movf	(_Voltage+3)^(0+128),w
  3018  0F7E  0020               	movlb	0	; select bank0
  3019  0F7F  00C1               	movwf	___fladd@a+3
  3020  0F80  0021               	movlb	1	; select bank1
  3021  0F81  082A               	movf	(_Voltage+2)^(0+128),w
  3022  0F82  0020               	movlb	0	; select bank0
  3023  0F83  00C0               	movwf	___fladd@a+2
  3024  0F84  0021               	movlb	1	; select bank1
  3025  0F85  0829               	movf	(_Voltage+1)^(0+128),w
  3026  0F86  0020               	movlb	0	; select bank0
  3027  0F87  00BF               	movwf	___fladd@a+1
  3028  0F88  0021               	movlb	1	; select bank1
  3029  0F89  0828               	movf	_Voltage^(0+128),w
  3030  0F8A  0020               	movlb	0	; select bank0
  3031  0F8B  00BE               	movwf	___fladd@a
  3032  0F8C  3183  23E8  318E   	fcall	___fladd
  3033  0F8F  0020               	movlb	0	; select bank0
  3034  0F90  083D               	movf	?___fladd+3,w
  3035  0F91  00D5               	movwf	___fldiv@b+3
  3036  0F92  083C               	movf	?___fladd+2,w
  3037  0F93  00D4               	movwf	___fldiv@b+2
  3038  0F94  083B               	movf	?___fladd+1,w
  3039  0F95  00D3               	movwf	___fldiv@b+1
  3040  0F96  083A               	movf	?___fladd,w
  3041  0F97  00D2               	movwf	___fldiv@b
  3042  0F98  3180  20AA  318E   	fcall	___fldiv
  3043  0F9B  0020               	movlb	0	; select bank0
  3044  0F9C  0851               	movf	?___fldiv+3,w
  3045  0F9D  0021               	movlb	1	; select bank1
  3046  0F9E  00A7               	movwf	(_Current+3)^(0+128)
  3047  0F9F  0020               	movlb	0	; select bank0
  3048  0FA0  0850               	movf	?___fldiv+2,w
  3049  0FA1  0021               	movlb	1	; select bank1
  3050  0FA2  00A6               	movwf	(_Current+2)^(0+128)
  3051  0FA3  0020               	movlb	0	; select bank0
  3052  0FA4  084F               	movf	?___fldiv+1,w
  3053  0FA5  0021               	movlb	1	; select bank1
  3054  0FA6  00A5               	movwf	(_Current+1)^(0+128)
  3055  0FA7  0020               	movlb	0	; select bank0
  3056  0FA8  084E               	movf	?___fldiv,w
  3057  0FA9  0021               	movlb	1	; select bank1
  3058  0FAA  00A4               	movwf	_Current^(0+128)
  3059                           
  3060                           ;Main.c: 170: Current -= 0.07225;
  3061  0FAB  303D               	movlw	61
  3062  0FAC  0020               	movlb	0	; select bank0
  3063  0FAD  00D1               	movwf	___flsub@a+3
  3064  0FAE  3093               	movlw	147
  3065  0FAF  00D0               	movwf	___flsub@a+2
  3066  0FB0  30F7               	movlw	247
  3067  0FB1  00CF               	movwf	___flsub@a+1
  3068  0FB2  30CF               	movlw	207
  3069  0FB3  00CE               	movwf	___flsub@a
  3070  0FB4  0021               	movlb	1	; select bank1
  3071  0FB5  0827               	movf	(_Current+3)^(0+128),w
  3072  0FB6  0020               	movlb	0	; select bank0
  3073  0FB7  00D5               	movwf	___flsub@b+3
  3074  0FB8  0021               	movlb	1	; select bank1
  3075  0FB9  0826               	movf	(_Current+2)^(0+128),w
  3076  0FBA  0020               	movlb	0	; select bank0
  3077  0FBB  00D4               	movwf	___flsub@b+2
  3078  0FBC  0021               	movlb	1	; select bank1
  3079  0FBD  0825               	movf	(_Current+1)^(0+128),w
  3080  0FBE  0020               	movlb	0	; select bank0
  3081  0FBF  00D3               	movwf	___flsub@b+1
  3082  0FC0  0021               	movlb	1	; select bank1
  3083  0FC1  0824               	movf	_Current^(0+128),w
  3084  0FC2  0020               	movlb	0	; select bank0
  3085  0FC3  00D2               	movwf	___flsub@b
  3086  0FC4  3197  276E  318E   	fcall	___flsub
  3087  0FC7  0020               	movlb	0	; select bank0
  3088  0FC8  0851               	movf	?___flsub+3,w
  3089  0FC9  0021               	movlb	1	; select bank1
  3090  0FCA  00A7               	movwf	(_Current+3)^(0+128)
  3091  0FCB  0020               	movlb	0	; select bank0
  3092  0FCC  0850               	movf	?___flsub+2,w
  3093  0FCD  0021               	movlb	1	; select bank1
  3094  0FCE  00A6               	movwf	(_Current+2)^(0+128)
  3095  0FCF  0020               	movlb	0	; select bank0
  3096  0FD0  084F               	movf	?___flsub+1,w
  3097  0FD1  0021               	movlb	1	; select bank1
  3098  0FD2  00A5               	movwf	(_Current+1)^(0+128)
  3099  0FD3  0020               	movlb	0	; select bank0
  3100  0FD4  084E               	movf	?___flsub,w
  3101  0FD5  0021               	movlb	1	; select bank1
  3102  0FD6  00A4               	movwf	_Current^(0+128)
  3103                           
  3104                           ;Main.c: 173: OLED_YX( 0, 0 );
  3105  0FD7  01F5               	clrf	OLED_YX@Column
  3106  0FD8  3000               	movlw	0
  3107  0FD9  3197  27AF  318E   	fcall	_OLED_YX
  3108                           
  3109                           ;Main.c: 174: OLED_Write_String( "A:" );
  3110  0FDC  302E               	movlw	low (STR_1| (0+32768))
  3111  0FDD  00FC               	movwf	OLED_Write_String@s
  3112  0FDE  3098               	movlw	high (STR_1| (0+32768))
  3113  0FDF  00FD               	movwf	OLED_Write_String@s+1
  3114  0FE0  3197  2702  318E   	fcall	_OLED_Write_String
  3115                           
  3116                           ;Main.c: 176: OLED_YX( 0, 5);
  3117  0FE3  3005               	movlw	5
  3118  0FE4  0020               	movlb	0	; select bank0
  3119  0FE5  00EE               	movwf	??_main
  3120  0FE6  086E               	movf	??_main,w
  3121  0FE7  00F5               	movwf	OLED_YX@Column
  3122  0FE8  3000               	movlw	0
  3123  0FE9  3197  27AF  318E   	fcall	_OLED_YX
  3124                           
  3125                           ;Main.c: 177: OLED_Write_Float(Current);
  3126  0FEC  0021               	movlb	1	; select bank1
  3127  0FED  0827               	movf	(_Current+3)^(0+128),w
  3128  0FEE  0020               	movlb	0	; select bank0
  3129  0FEF  00E8               	movwf	OLED_Write_Float@f+3
  3130  0FF0  0021               	movlb	1	; select bank1
  3131  0FF1  0826               	movf	(_Current+2)^(0+128),w
  3132  0FF2  0020               	movlb	0	; select bank0
  3133  0FF3  00E7               	movwf	OLED_Write_Float@f+2
  3134  0FF4  0021               	movlb	1	; select bank1
  3135  0FF5  0825               	movf	(_Current+1)^(0+128),w
  3136  0FF6  0020               	movlb	0	; select bank0
  3137  0FF7  00E6               	movwf	OLED_Write_Float@f+1
  3138  0FF8  0021               	movlb	1	; select bank1
  3139  0FF9  0824               	movf	_Current^(0+128),w
  3140  0FFA  0020               	movlb	0	; select bank0
  3141  0FFB  00E5               	movwf	OLED_Write_Float@f
  3142  0FFC  3197  278D  318E   	fcall	_OLED_Write_Float
  3143  0FFF  2EC9               	goto	l2904
  3144  1000                     __end_of_main:	
  3145                           
  3146                           	psect	text1
  3147  0B15                     __ptext1:	
  3148 ;; *************** function _initMain *****************
  3149 ;; Defined at:
  3150 ;;		line 56 in file "Main.c"
  3151 ;; Parameters:    Size  Location     Type
  3152 ;;		None
  3153 ;; Auto vars:     Size  Location     Type
  3154 ;;		None
  3155 ;; Return value:  Size  Location     Type
  3156 ;;                  1    wreg      void 
  3157 ;; Registers used:
  3158 ;;		wreg, status,2, status,0, pclath, cstack
  3159 ;; Tracked objects:
  3160 ;;		On entry : 0/0
  3161 ;;		On exit  : 0/0
  3162 ;;		Unchanged: 0/0
  3163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3168 ;;Total ram usage:        0 bytes
  3169 ;; Hardware stack levels used:    1
  3170 ;; Hardware stack levels required when called:    1
  3171 ;; This function calls:
  3172 ;;		_internal_16
  3173 ;; This function is called by:
  3174 ;;		_main
  3175 ;; This function uses a non-reentrant model
  3176 ;;
  3177                           
  3178                           
  3179                           ;psect for function _initMain
  3180  0B15                     _initMain:	
  3181                           
  3182                           ;Main.c: 59: internal_16();
  3183                           
  3184                           ;incstack = 0
  3185                           ; Regs used in _initMain: [wreg+status,2+status,0+pclath+cstack]
  3186  0B15  318B  230C  318B   	fcall	_internal_16
  3187                           
  3188                           ;Main.c: 66: ANSELCbits.ANSC4 = 0;
  3189  0B18  0023               	movlb	3	; select bank3
  3190  0B19  120E               	bcf	14,4	;volatile
  3191                           
  3192                           ;Main.c: 67: ANSELCbits.ANSC5 = 0;
  3193  0B1A  128E               	bcf	14,5	;volatile
  3194                           
  3195                           ;Main.c: 69: TRISCbits.TRISC4 = 1;
  3196  0B1B  0021               	movlb	1	; select bank1
  3197  0B1C  160E               	bsf	14,4	;volatile
  3198                           
  3199                           ;Main.c: 70: TRISCbits.TRISC5 = 1;
  3200  0B1D  168E               	bsf	14,5	;volatile
  3201                           
  3202                           ;Main.c: 72: PPSLOCK = 0x55;
  3203  0B1E  3055               	movlw	85
  3204  0B1F  003C               	movlb	28	; select bank28
  3205  0B20  008F               	movwf	15	;volsfr
  3206                           
  3207                           ;Main.c: 73: PPSLOCK = 0xAA;
  3208  0B21  30AA               	movlw	170
  3209  0B22  008F               	movwf	15	;volsfr
  3210                           
  3211                           ;Main.c: 74: PPSLOCKbits.PPSLOCKED = 0x00;
  3212  0B23  100F               	bcf	15,0	;volsfr
  3213                           
  3214                           ;Main.c: 76: RC4PPSbits.RC4PPS = 0x0011;
  3215  0B24  003D               	movlb	29	; select bank29
  3216  0B25  0824               	movf	36,w	;volatile
  3217  0B26  39E0               	andlw	-32
  3218  0B27  3811               	iorlw	17
  3219  0B28  00A4               	movwf	36	;volatile
  3220                           
  3221                           ;Main.c: 77: SSPDATPPSbits.SSPDATPPS = 0x0014;
  3222  0B29  003C               	movlb	28	; select bank28
  3223  0B2A  0821               	movf	33,w	;volatile
  3224  0B2B  39E0               	andlw	-32
  3225  0B2C  3814               	iorlw	20
  3226  0B2D  00A1               	movwf	33	;volatile
  3227                           
  3228                           ;Main.c: 78: SSPCLKPPSbits.SSPCLKPPS = 0x0015;
  3229  0B2E  0820               	movf	32,w	;volatile
  3230  0B2F  39E0               	andlw	-32
  3231  0B30  3815               	iorlw	21
  3232  0B31  00A0               	movwf	32	;volatile
  3233                           
  3234                           ;Main.c: 79: RC5PPSbits.RC5PPS = 0x0010;
  3235  0B32  003D               	movlb	29	; select bank29
  3236  0B33  0825               	movf	37,w	;volatile
  3237  0B34  39E0               	andlw	-32
  3238  0B35  3810               	iorlw	16
  3239  0B36  00A5               	movwf	37	;volatile
  3240                           
  3241                           ;Main.c: 81: PPSLOCK = 0x55;
  3242  0B37  3055               	movlw	85
  3243  0B38  003C               	movlb	28	; select bank28
  3244  0B39  008F               	movwf	15	;volsfr
  3245                           
  3246                           ;Main.c: 82: PPSLOCK = 0xAA;
  3247  0B3A  30AA               	movlw	170
  3248  0B3B  008F               	movwf	15	;volsfr
  3249                           
  3250                           ;Main.c: 83: PPSLOCKbits.PPSLOCKED = 0x01;
  3251  0B3C  140F               	bsf	15,0	;volsfr
  3252                           
  3253                           ;Main.c: 87: TRISAbits.TRISA0 = 1;
  3254  0B3D  0021               	movlb	1	; select bank1
  3255  0B3E  140C               	bsf	12,0	;volatile
  3256                           
  3257                           ;Main.c: 90: ANSELAbits.ANSA0 = 1;
  3258  0B3F  0023               	movlb	3	; select bank3
  3259  0B40  140C               	bsf	12,0	;volatile
  3260                           
  3261                           ;Main.c: 97: ADCON1bits.ADCS = 0b010;
  3262  0B41  0021               	movlb	1	; select bank1
  3263  0B42  081E               	movf	30,w	;volatile
  3264  0B43  398F               	andlw	-113
  3265  0B44  3820               	iorlw	32
  3266  0B45  009E               	movwf	30	;volatile
  3267                           
  3268                           ;Main.c: 100: ADCON1bits.ADFM = 1;
  3269  0B46  179E               	bsf	30,7	;volatile
  3270                           
  3271                           ;Main.c: 103: ADCON1bits.ADNREF = 0;
  3272  0B47  111E               	bcf	30,2	;volatile
  3273                           
  3274                           ;Main.c: 106: ADCON1bits.ADPREF = 0b00;
  3275  0B48  30FC               	movlw	-4
  3276  0B49  059E               	andwf	30,f	;volatile
  3277                           
  3278                           ;Main.c: 109: ADCON0bits.CHS = 0b00000;
  3279  0B4A  3083               	movlw	-125
  3280  0B4B  059D               	andwf	29,f	;volatile
  3281                           
  3282                           ;Main.c: 112: ADRESL = 0;
  3283  0B4C  019B               	clrf	27	;volatile
  3284                           
  3285                           ;Main.c: 113: ADRESH = 0;
  3286  0B4D  019C               	clrf	28	;volatile
  3287                           
  3288                           ;Main.c: 117: ADCON0bits.ADON = 1;
  3289  0B4E  141D               	bsf	29,0	;volatile
  3290  0B4F  0008               	return
  3291  0B50                     __end_of_initMain:	
  3292                           
  3293                           	psect	text2
  3294  0B0C                     __ptext2:	
  3295 ;; *************** function _internal_16 *****************
  3296 ;; Defined at:
  3297 ;;		line 56 in file "16F1717_Internal.c"
  3298 ;; Parameters:    Size  Location     Type
  3299 ;;		None
  3300 ;; Auto vars:     Size  Location     Type
  3301 ;;		None
  3302 ;; Return value:  Size  Location     Type
  3303 ;;                  1    wreg      void 
  3304 ;; Registers used:
  3305 ;;		None
  3306 ;; Tracked objects:
  3307 ;;		On entry : 0/0
  3308 ;;		On exit  : 0/0
  3309 ;;		Unchanged: 0/0
  3310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3315 ;;Total ram usage:        0 bytes
  3316 ;; Hardware stack levels used:    1
  3317 ;; This function calls:
  3318 ;;		Nothing
  3319 ;; This function is called by:
  3320 ;;		_initMain
  3321 ;; This function uses a non-reentrant model
  3322 ;;
  3323                           
  3324                           
  3325                           ;psect for function _internal_16
  3326  0B0C                     _internal_16:	
  3327                           
  3328                           ;16F1717_Internal.c: 58: SCS0 = 0;
  3329                           
  3330                           ;incstack = 0
  3331                           ; Regs used in _internal_16: []
  3332  0B0C  0021               	movlb	1	; select bank1
  3333  0B0D  1019               	bcf	25,0	;volatile
  3334                           
  3335                           ;16F1717_Internal.c: 59: SCS1 = 0;
  3336  0B0E  1099               	bcf	25,1	;volatile
  3337                           
  3338                           ;16F1717_Internal.c: 62: IRCF0 = 1;
  3339  0B0F  1599               	bsf	25,3	;volatile
  3340                           
  3341                           ;16F1717_Internal.c: 63: IRCF1 = 1;
  3342  0B10  1619               	bsf	25,4	;volatile
  3343                           
  3344                           ;16F1717_Internal.c: 64: IRCF2 = 1;
  3345  0B11  1699               	bsf	25,5	;volatile
  3346                           
  3347                           ;16F1717_Internal.c: 65: IRCF3 = 1;
  3348  0B12  1719               	bsf	25,6	;volatile
  3349                           
  3350                           ;16F1717_Internal.c: 68: SPLLEN = 0;
  3351  0B13  1399               	bcf	25,7	;volatile
  3352  0B14  0008               	return
  3353  0B15                     __end_of_internal_16:	
  3354                           
  3355                           	psect	text3
  3356  00AA                     __ptext3:	
  3357 ;; *************** function ___fldiv *****************
  3358 ;; Defined at:
  3359 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcdiv.c"
  3360 ;; Parameters:    Size  Location     Type
  3361 ;;  a               4   46[BANK0 ] void 
  3362 ;;  b               4   50[BANK0 ] void 
  3363 ;; Auto vars:     Size  Location     Type
  3364 ;;  grs             4   66[BANK0 ] unsigned long 
  3365 ;;  rem             4   59[BANK0 ] unsigned long 
  3366 ;;  new_exp         2   64[BANK0 ] int 
  3367 ;;  aexp            1   71[BANK0 ] unsigned char 
  3368 ;;  bexp            1   70[BANK0 ] unsigned char 
  3369 ;;  sign            1   63[BANK0 ] unsigned char 
  3370 ;; Return value:  Size  Location     Type
  3371 ;;                  4   46[BANK0 ] unsigned char 
  3372 ;; Registers used:
  3373 ;;		wreg, status,2, status,0
  3374 ;; Tracked objects:
  3375 ;;		On entry : 0/0
  3376 ;;		On exit  : 0/0
  3377 ;;		Unchanged: 0/0
  3378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3379 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3380 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3381 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3382 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3383 ;;Total ram usage:       26 bytes
  3384 ;; Hardware stack levels used:    1
  3385 ;; This function calls:
  3386 ;;		Nothing
  3387 ;; This function is called by:
  3388 ;;		_main
  3389 ;; This function uses a non-reentrant model
  3390 ;;
  3391                           
  3392                           
  3393                           ;psect for function ___fldiv
  3394  00AA                     ___fldiv:	
  3395                           
  3396                           ;incstack = 0
  3397                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  3398  00AA  0020               	movlb	0	; select bank0
  3399  00AB  0855               	movf	___fldiv@b+3,w
  3400  00AC  3980               	andlw	128
  3401  00AD  00D6               	movwf	??___fldiv
  3402  00AE  0856               	movf	??___fldiv,w
  3403  00AF  00DF               	movwf	___fldiv@sign
  3404  00B0  3555               	lslf	___fldiv@b+3,w
  3405  00B1  00D6               	movwf	??___fldiv
  3406  00B2  0856               	movf	??___fldiv,w
  3407  00B3  00E6               	movwf	___fldiv@bexp
  3408  00B4  1BD4               	btfsc	___fldiv@b+2,7
  3409  00B5  1466               	bsf	___fldiv@bexp,0
  3410  00B6  0866               	movf	___fldiv@bexp,w
  3411  00B7  1903               	btfsc	3,2
  3412  00B8  28C7               	goto	l2774
  3413  00B9  0A66               	incf	___fldiv@bexp,w
  3414  00BA  1D03               	btfss	3,2
  3415  00BB  28C4               	goto	l2770
  3416  00BC  3000               	movlw	0
  3417  00BD  00D5               	movwf	___fldiv@b+3
  3418  00BE  3000               	movlw	0
  3419  00BF  00D4               	movwf	___fldiv@b+2
  3420  00C0  3000               	movlw	0
  3421  00C1  00D3               	movwf	___fldiv@b+1
  3422  00C2  3000               	movlw	0
  3423  00C3  00D2               	movwf	___fldiv@b
  3424  00C4                     l2770:	
  3425  00C4  17D4               	bsf	___fldiv@b+2,7
  3426  00C5  01D5               	clrf	___fldiv@b+3
  3427  00C6  28CF               	goto	l2776
  3428  00C7                     l2774:	
  3429  00C7  3000               	movlw	0
  3430  00C8  00D5               	movwf	___fldiv@b+3
  3431  00C9  3000               	movlw	0
  3432  00CA  00D4               	movwf	___fldiv@b+2
  3433  00CB  3000               	movlw	0
  3434  00CC  00D3               	movwf	___fldiv@b+1
  3435  00CD  3000               	movlw	0
  3436  00CE  00D2               	movwf	___fldiv@b
  3437  00CF                     l2776:	
  3438  00CF  0851               	movf	___fldiv@a+3,w
  3439  00D0  3980               	andlw	128
  3440  00D1  00D6               	movwf	??___fldiv
  3441  00D2  0856               	movf	??___fldiv,w
  3442  00D3  06DF               	xorwf	___fldiv@sign,f
  3443  00D4  3551               	lslf	___fldiv@a+3,w
  3444  00D5  00D6               	movwf	??___fldiv
  3445  00D6  0856               	movf	??___fldiv,w
  3446  00D7  00E7               	movwf	___fldiv@aexp
  3447  00D8  1BD0               	btfsc	___fldiv@a+2,7
  3448  00D9  1467               	bsf	___fldiv@aexp,0
  3449  00DA  0867               	movf	___fldiv@aexp,w
  3450  00DB  1903               	btfsc	3,2
  3451  00DC  28EB               	goto	l2794
  3452  00DD  0A67               	incf	___fldiv@aexp,w
  3453  00DE  1D03               	btfss	3,2
  3454  00DF  28E8               	goto	l2790
  3455  00E0  3000               	movlw	0
  3456  00E1  00D1               	movwf	___fldiv@a+3
  3457  00E2  3000               	movlw	0
  3458  00E3  00D0               	movwf	___fldiv@a+2
  3459  00E4  3000               	movlw	0
  3460  00E5  00CF               	movwf	___fldiv@a+1
  3461  00E6  3000               	movlw	0
  3462  00E7  00CE               	movwf	___fldiv@a
  3463  00E8                     l2790:	
  3464  00E8  17D0               	bsf	___fldiv@a+2,7
  3465  00E9  01D1               	clrf	___fldiv@a+3
  3466  00EA  28F3               	goto	l680
  3467  00EB                     l2794:	
  3468  00EB  3000               	movlw	0
  3469  00EC  00D1               	movwf	___fldiv@a+3
  3470  00ED  3000               	movlw	0
  3471  00EE  00D0               	movwf	___fldiv@a+2
  3472  00EF  3000               	movlw	0
  3473  00F0  00CF               	movwf	___fldiv@a+1
  3474  00F1  3000               	movlw	0
  3475  00F2  00CE               	movwf	___fldiv@a
  3476  00F3                     l680:	
  3477  00F3  0851               	movf	___fldiv@a+3,w
  3478  00F4  0450               	iorwf	___fldiv@a+2,w
  3479  00F5  044F               	iorwf	___fldiv@a+1,w
  3480  00F6  044E               	iorwf	___fldiv@a,w
  3481  00F7  1D03               	skipz
  3482  00F8  2912               	goto	l2804
  3483  00F9  3000               	movlw	0
  3484  00FA  00D5               	movwf	___fldiv@b+3
  3485  00FB  3000               	movlw	0
  3486  00FC  00D4               	movwf	___fldiv@b+2
  3487  00FD  3000               	movlw	0
  3488  00FE  00D3               	movwf	___fldiv@b+1
  3489  00FF  3000               	movlw	0
  3490  0100  00D2               	movwf	___fldiv@b
  3491  0101  3080               	movlw	128
  3492  0102  04D4               	iorwf	___fldiv@b+2,f
  3493  0103  307F               	movlw	127
  3494  0104  04D5               	iorwf	___fldiv@b+3,f
  3495  0105                     L1:	
  3496  0105  085F               	movf	___fldiv@sign,w
  3497  0106  00D6               	movwf	??___fldiv
  3498  0107  0856               	movf	??___fldiv,w
  3499  0108  04D5               	iorwf	___fldiv@b+3,f
  3500  0109  0855               	movf	___fldiv@b+3,w
  3501  010A  00D1               	movwf	?___fldiv+3
  3502  010B  0854               	movf	___fldiv@b+2,w
  3503  010C  00D0               	movwf	?___fldiv+2
  3504  010D  0853               	movf	___fldiv@b+1,w
  3505  010E  00CF               	movwf	?___fldiv+1
  3506  010F  0852               	movf	___fldiv@b,w
  3507  0110  00CE               	movwf	?___fldiv
  3508  0111  0008               	return
  3509  0112                     l2804:	
  3510  0112  0866               	movf	___fldiv@bexp,w
  3511  0113  1D03               	btfss	3,2
  3512  0114  291E               	goto	l2810
  3513  0115  3000               	movlw	0
  3514  0116  00D1               	movwf	?___fldiv+3
  3515  0117  3000               	movlw	0
  3516  0118  00D0               	movwf	?___fldiv+2
  3517  0119  3000               	movlw	0
  3518  011A  00CF               	movwf	?___fldiv+1
  3519  011B  3000               	movlw	0
  3520  011C  00CE               	movwf	?___fldiv
  3521  011D  0008               	return
  3522  011E                     l2810:	
  3523  011E  0866               	movf	___fldiv@bexp,w
  3524  011F  00D6               	movwf	??___fldiv
  3525  0120  01D7               	clrf	??___fldiv+1
  3526  0121  0857               	movf	??___fldiv+1,w
  3527  0122  00D9               	movwf	??___fldiv+3
  3528  0123  0867               	movf	___fldiv@aexp,w
  3529  0124  0256               	subwf	??___fldiv,w
  3530  0125  00D8               	movwf	??___fldiv+2
  3531  0126  1C03               	skipc
  3532  0127  03D9               	decf	??___fldiv+3,f
  3533  0128  0858               	movf	??___fldiv+2,w
  3534  0129  3E7F               	addlw	127
  3535  012A  00E0               	movwf	___fldiv@new_exp
  3536  012B  3000               	movlw	0
  3537  012C  3D59               	addwfc	??___fldiv+3,w
  3538  012D  00E1               	movwf	___fldiv@new_exp+1
  3539  012E  0855               	movf	___fldiv@b+3,w
  3540  012F  00DE               	movwf	___fldiv@rem+3
  3541  0130  0854               	movf	___fldiv@b+2,w
  3542  0131  00DD               	movwf	___fldiv@rem+2
  3543  0132  0853               	movf	___fldiv@b+1,w
  3544  0133  00DC               	movwf	___fldiv@rem+1
  3545  0134  0852               	movf	___fldiv@b,w
  3546  0135  00DB               	movwf	___fldiv@rem
  3547  0136  3000               	movlw	0
  3548  0137  00D5               	movwf	___fldiv@b+3
  3549  0138  3000               	movlw	0
  3550  0139  00D4               	movwf	___fldiv@b+2
  3551  013A  3000               	movlw	0
  3552  013B  00D3               	movwf	___fldiv@b+1
  3553  013C  3000               	movlw	0
  3554  013D  00D2               	movwf	___fldiv@b
  3555  013E  3000               	movlw	0
  3556  013F  00E5               	movwf	___fldiv@grs+3
  3557  0140  3000               	movlw	0
  3558  0141  00E4               	movwf	___fldiv@grs+2
  3559  0142  3000               	movlw	0
  3560  0143  00E3               	movwf	___fldiv@grs+1
  3561  0144  3000               	movlw	0
  3562  0145  00E2               	movwf	___fldiv@grs
  3563  0146  01E7               	clrf	___fldiv@aexp
  3564  0147                     l2838:	
  3565  0147  301A               	movlw	26
  3566  0148  0267               	subwf	___fldiv@aexp,w
  3567  0149  1803               	btfsc	3,0
  3568  014A  2983               	goto	l2840
  3569  014B  0867               	movf	___fldiv@aexp,w
  3570  014C  1903               	btfsc	3,2
  3571  014D  2965               	goto	l2830
  3572  014E  3001               	movlw	1
  3573  014F                     u3555:	
  3574  014F  35DB               	lslf	___fldiv@rem,f
  3575  0150  0DDC               	rlf	___fldiv@rem+1,f
  3576  0151  0DDD               	rlf	___fldiv@rem+2,f
  3577  0152  0DDE               	rlf	___fldiv@rem+3,f
  3578  0153  0B89               	decfsz	9,f
  3579  0154  294F               	goto	u3555
  3580  0155  3001               	movlw	1
  3581  0156                     u3565:	
  3582  0156  35D2               	lslf	___fldiv@b,f
  3583  0157  0DD3               	rlf	___fldiv@b+1,f
  3584  0158  0DD4               	rlf	___fldiv@b+2,f
  3585  0159  0DD5               	rlf	___fldiv@b+3,f
  3586  015A  0B89               	decfsz	9,f
  3587  015B  2956               	goto	u3565
  3588  015C  1BE5               	btfsc	___fldiv@grs+3,7
  3589  015D  1452               	bsf	___fldiv@b,0
  3590  015E  3001               	movlw	1
  3591  015F                     u3585:	
  3592  015F  35E2               	lslf	___fldiv@grs,f
  3593  0160  0DE3               	rlf	___fldiv@grs+1,f
  3594  0161  0DE4               	rlf	___fldiv@grs+2,f
  3595  0162  0DE5               	rlf	___fldiv@grs+3,f
  3596  0163  0B89               	decfsz	9,f
  3597  0164  295F               	goto	u3585
  3598  0165                     l2830:	
  3599  0165  0851               	movf	___fldiv@a+3,w
  3600  0166  025E               	subwf	___fldiv@rem+3,w
  3601  0167  1D03               	skipz
  3602  0168  2973               	goto	u3595
  3603  0169  0850               	movf	___fldiv@a+2,w
  3604  016A  025D               	subwf	___fldiv@rem+2,w
  3605  016B  1D03               	skipz
  3606  016C  2973               	goto	u3595
  3607  016D  084F               	movf	___fldiv@a+1,w
  3608  016E  025C               	subwf	___fldiv@rem+1,w
  3609  016F  1D03               	skipz
  3610  0170  2973               	goto	u3595
  3611  0171  084E               	movf	___fldiv@a,w
  3612  0172  025B               	subwf	___fldiv@rem,w
  3613  0173                     u3595:	
  3614  0173  1C03               	skipc
  3615  0174  297E               	goto	l2836
  3616  0175  1765               	bsf	___fldiv@grs+3,6
  3617  0176  084E               	movf	___fldiv@a,w
  3618  0177  02DB               	subwf	___fldiv@rem,f
  3619  0178  084F               	movf	___fldiv@a+1,w
  3620  0179  3BDC               	subwfb	___fldiv@rem+1,f
  3621  017A  0850               	movf	___fldiv@a+2,w
  3622  017B  3BDD               	subwfb	___fldiv@rem+2,f
  3623  017C  0851               	movf	___fldiv@a+3,w
  3624  017D  3BDE               	subwfb	___fldiv@rem+3,f
  3625  017E                     l2836:	
  3626  017E  3001               	movlw	1
  3627  017F  00D6               	movwf	??___fldiv
  3628  0180  0856               	movf	??___fldiv,w
  3629  0181  07E7               	addwf	___fldiv@aexp,f
  3630  0182  2947               	goto	l2838
  3631  0183                     l2840:	
  3632  0183  085E               	movf	___fldiv@rem+3,w
  3633  0184  045D               	iorwf	___fldiv@rem+2,w
  3634  0185  045C               	iorwf	___fldiv@rem+1,w
  3635  0186  045B               	iorwf	___fldiv@rem,w
  3636  0187  1D03               	btfss	3,2
  3637  0188  1462               	bsf	___fldiv@grs,0
  3638  0189                     l2854:	
  3639  0189  1BD4               	btfsc	___fldiv@b+2,7
  3640  018A  29A0               	goto	l2856
  3641  018B  3001               	movlw	1
  3642  018C                     u3625:	
  3643  018C  35D2               	lslf	___fldiv@b,f
  3644  018D  0DD3               	rlf	___fldiv@b+1,f
  3645  018E  0DD4               	rlf	___fldiv@b+2,f
  3646  018F  0DD5               	rlf	___fldiv@b+3,f
  3647  0190  0B89               	decfsz	9,f
  3648  0191  298C               	goto	u3625
  3649  0192  1BE5               	btfsc	___fldiv@grs+3,7
  3650  0193  1452               	bsf	___fldiv@b,0
  3651  0194  3001               	movlw	1
  3652  0195                     u3645:	
  3653  0195  35E2               	lslf	___fldiv@grs,f
  3654  0196  0DE3               	rlf	___fldiv@grs+1,f
  3655  0197  0DE4               	rlf	___fldiv@grs+2,f
  3656  0198  0DE5               	rlf	___fldiv@grs+3,f
  3657  0199  0B89               	decfsz	9,f
  3658  019A  2995               	goto	u3645
  3659  019B  30FF               	movlw	255
  3660  019C  07E0               	addwf	___fldiv@new_exp,f
  3661  019D  30FF               	movlw	255
  3662  019E  3DE1               	addwfc	___fldiv@new_exp+1,f
  3663  019F  2989               	goto	l2854
  3664  01A0                     l2856:	
  3665  01A0  01E7               	clrf	___fldiv@aexp
  3666  01A1  1FE5               	btfss	___fldiv@grs+3,7
  3667  01A2  29B9               	goto	l2866
  3668  01A3  30FF               	movlw	255
  3669  01A4  0562               	andwf	___fldiv@grs,w
  3670  01A5  00D6               	movwf	??___fldiv
  3671  01A6  30FF               	movlw	255
  3672  01A7  0563               	andwf	___fldiv@grs+1,w
  3673  01A8  00D7               	movwf	??___fldiv+1
  3674  01A9  30FF               	movlw	255
  3675  01AA  0564               	andwf	___fldiv@grs+2,w
  3676  01AB  00D8               	movwf	??___fldiv+2
  3677  01AC  307F               	movlw	127
  3678  01AD  0565               	andwf	___fldiv@grs+3,w
  3679  01AE  00D9               	movwf	??___fldiv+3
  3680  01AF  0859               	movf	??___fldiv+3,w
  3681  01B0  0458               	iorwf	??___fldiv+2,w
  3682  01B1  0457               	iorwf	??___fldiv+1,w
  3683  01B2  0456               	iorwf	??___fldiv,w
  3684  01B3  1903               	skipnz
  3685  01B4  1852               	btfsc	___fldiv@b,0
  3686  01B5  29B7               	goto	l2862
  3687  01B6  29B9               	goto	l2866
  3688  01B7                     l2862:	
  3689  01B7  01E7               	clrf	___fldiv@aexp
  3690  01B8  0AE7               	incf	___fldiv@aexp,f
  3691  01B9                     l2866:	
  3692  01B9  0867               	movf	___fldiv@aexp,w
  3693  01BA  1903               	btfsc	3,2
  3694  01BB  29E2               	goto	l2876
  3695  01BC  3001               	movlw	1
  3696  01BD  07D2               	addwf	___fldiv@b,f
  3697  01BE  3000               	movlw	0
  3698  01BF  3DD3               	addwfc	___fldiv@b+1,f
  3699  01C0  3000               	movlw	0
  3700  01C1  3DD4               	addwfc	___fldiv@b+2,f
  3701  01C2  3000               	movlw	0
  3702  01C3  3DD5               	addwfc	___fldiv@b+3,f
  3703  01C4  1C55               	btfss	___fldiv@b+3,0
  3704  01C5  29E2               	goto	l2876
  3705  01C6  0852               	movf	___fldiv@b,w
  3706  01C7  00D6               	movwf	??___fldiv
  3707  01C8  0853               	movf	___fldiv@b+1,w
  3708  01C9  00D7               	movwf	??___fldiv+1
  3709  01CA  0854               	movf	___fldiv@b+2,w
  3710  01CB  00D8               	movwf	??___fldiv+2
  3711  01CC  0855               	movf	___fldiv@b+3,w
  3712  01CD  00D9               	movwf	??___fldiv+3
  3713  01CE  3001               	movlw	1
  3714  01CF  00DA               	movwf	??___fldiv+4
  3715  01D0                     u3715:	
  3716  01D0  37D9               	asrf	??___fldiv+3,f
  3717  01D1  0CD8               	rrf	??___fldiv+2,f
  3718  01D2  0CD7               	rrf	??___fldiv+1,f
  3719  01D3  0CD6               	rrf	??___fldiv,f
  3720  01D4  0BDA               	decfsz	??___fldiv+4,f
  3721  01D5  29D0               	goto	u3715
  3722  01D6  0859               	movf	??___fldiv+3,w
  3723  01D7  00D5               	movwf	___fldiv@b+3
  3724  01D8  0858               	movf	??___fldiv+2,w
  3725  01D9  00D4               	movwf	___fldiv@b+2
  3726  01DA  0857               	movf	??___fldiv+1,w
  3727  01DB  00D3               	movwf	___fldiv@b+1
  3728  01DC  0856               	movf	??___fldiv,w
  3729  01DD  00D2               	movwf	___fldiv@b
  3730  01DE  3001               	movlw	1
  3731  01DF  07E0               	addwf	___fldiv@new_exp,f
  3732  01E0  3000               	movlw	0
  3733  01E1  3DE1               	addwfc	___fldiv@new_exp+1,f
  3734  01E2                     l2876:	
  3735  01E2  0861               	movf	___fldiv@new_exp+1,w
  3736  01E3  3A80               	xorlw	128
  3737  01E4  00D6               	movwf	??___fldiv
  3738  01E5  3080               	movlw	128
  3739  01E6  0256               	subwf	??___fldiv,w
  3740  01E7  1D03               	skipz
  3741  01E8  29EB               	goto	u3725
  3742  01E9  30FF               	movlw	255
  3743  01EA  0260               	subwf	___fldiv@new_exp,w
  3744  01EB                     u3725:	
  3745  01EB  1C03               	skipc
  3746  01EC  29FA               	goto	l701
  3747  01ED  30FF               	movlw	255
  3748  01EE  0020               	movlb	0	; select bank0
  3749  01EF  00E0               	movwf	___fldiv@new_exp
  3750  01F0  3000               	movlw	0
  3751  01F1  00E1               	movwf	___fldiv@new_exp+1
  3752  01F2  3000               	movlw	0
  3753  01F3  00D5               	movwf	___fldiv@b+3
  3754  01F4  3000               	movlw	0
  3755  01F5  00D4               	movwf	___fldiv@b+2
  3756  01F6  3000               	movlw	0
  3757  01F7  00D3               	movwf	___fldiv@b+1
  3758  01F8  3000               	movlw	0
  3759  01F9  00D2               	movwf	___fldiv@b
  3760  01FA                     l701:	
  3761  01FA  0020               	movlb	0	; select bank0
  3762  01FB  0861               	movf	___fldiv@new_exp+1,w
  3763  01FC  3A80               	xorlw	128
  3764  01FD  00D6               	movwf	??___fldiv
  3765  01FE  3080               	movlw	128
  3766  01FF  0256               	subwf	??___fldiv,w
  3767  0200  1D03               	skipz
  3768  0201  2A04               	goto	u3735
  3769  0202  3001               	movlw	1
  3770  0203  0260               	subwf	___fldiv@new_exp,w
  3771  0204                     u3735:	
  3772  0204  1803               	skipnc
  3773  0205  2A12               	goto	l702
  3774  0206  0020               	movlb	0	; select bank0
  3775  0207  01E0               	clrf	___fldiv@new_exp
  3776  0208  01E1               	clrf	___fldiv@new_exp+1
  3777  0209  3000               	movlw	0
  3778  020A  00D5               	movwf	___fldiv@b+3
  3779  020B  3000               	movlw	0
  3780  020C  00D4               	movwf	___fldiv@b+2
  3781  020D  3000               	movlw	0
  3782  020E  00D3               	movwf	___fldiv@b+1
  3783  020F  3000               	movlw	0
  3784  0210  00D2               	movwf	___fldiv@b
  3785  0211  01DF               	clrf	___fldiv@sign
  3786  0212                     l702:	
  3787  0212  0020               	movlb	0	; select bank0
  3788  0213  0860               	movf	___fldiv@new_exp,w
  3789  0214  00D6               	movwf	??___fldiv
  3790  0215  0856               	movf	??___fldiv,w
  3791  0216  00E6               	movwf	___fldiv@bexp
  3792  0217  1C66               	btfss	___fldiv@bexp,0
  3793  0218  2A1B               	goto	l2890
  3794  0219  17D4               	bsf	___fldiv@b+2,7
  3795  021A  2A1F               	goto	l704
  3796  021B                     l2890:	
  3797  021B  307F               	movlw	127
  3798  021C  00D6               	movwf	??___fldiv
  3799  021D  0856               	movf	??___fldiv,w
  3800  021E  05D4               	andwf	___fldiv@b+2,f
  3801  021F                     l704:	
  3802  021F  3666               	lsrf	___fldiv@bexp,w
  3803  0220  00D6               	movwf	??___fldiv
  3804  0221  0856               	movf	??___fldiv,w
  3805  0222  00D5               	movwf	___fldiv@b+3
  3806  0223  2905               	goto	L1
  3807  0224                     __end_of___fldiv:	
  3808                           
  3809                           	psect	text4
  3810  178D                     __ptext4:	
  3811 ;; *************** function _OLED_Write_Float *****************
  3812 ;; Defined at:
  3813 ;;		line 316 in file "oled.c"
  3814 ;; Parameters:    Size  Location     Type
  3815 ;;  f               4   69[BANK0 ] float 
  3816 ;; Auto vars:     Size  Location     Type
  3817 ;;  status          2   75[BANK0 ] int 
  3818 ;;  buf11           1   77[BANK0 ] PTR unsigned char 
  3819 ;;		 -> ftoa@buf(17), 
  3820 ;; Return value:  Size  Location     Type
  3821 ;;                  1    wreg      void 
  3822 ;; Registers used:
  3823 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3824 ;; Tracked objects:
  3825 ;;		On entry : 0/0
  3826 ;;		On exit  : 0/0
  3827 ;;		Unchanged: 0/0
  3828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3829 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3830 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3831 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3832 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3833 ;;Total ram usage:        9 bytes
  3834 ;; Hardware stack levels used:    1
  3835 ;; Hardware stack levels required when called:    3
  3836 ;; This function calls:
  3837 ;;		_OLED_Write_String
  3838 ;;		_ftoa
  3839 ;; This function is called by:
  3840 ;;		_main
  3841 ;; This function uses a non-reentrant model
  3842 ;;
  3843                           
  3844                           
  3845                           ;psect for function _OLED_Write_Float
  3846  178D                     _OLED_Write_Float:	
  3847                           
  3848                           ;oled.c: 318: char* buf11;;oled.c: 319: int status;;oled.c: 321: buf11 = ftoa(f, &status
      +                          );
  3849                           
  3850                           ;incstack = 0
  3851                           ; Regs used in _OLED_Write_Float: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3852  178D  0020               	movlb	0	; select bank0
  3853  178E  0868               	movf	OLED_Write_Float@f+3,w
  3854  178F  00D9               	movwf	ftoa@f+3
  3855  1790  0867               	movf	OLED_Write_Float@f+2,w
  3856  1791  00D8               	movwf	ftoa@f+2
  3857  1792  0866               	movf	OLED_Write_Float@f+1,w
  3858  1793  00D7               	movwf	ftoa@f+1
  3859  1794  0865               	movf	OLED_Write_Float@f,w
  3860  1795  00D6               	movwf	ftoa@f
  3861  1796  306B               	movlw	(low (OLED_Write_Float@status| 0))& (0+255)
  3862  1797  00E9               	movwf	??_OLED_Write_Float
  3863  1798  0869               	movf	??_OLED_Write_Float,w
  3864  1799  00DA               	movwf	ftoa@status
  3865  179A  318D  25F8  3197   	fcall	_ftoa
  3866  179D  0020               	movlb	0	; select bank0
  3867  179E  00EA               	movwf	??_OLED_Write_Float+1
  3868  179F  086A               	movf	??_OLED_Write_Float+1,w
  3869  17A0  00ED               	movwf	OLED_Write_Float@buf11
  3870                           
  3871                           ;oled.c: 323: OLED_Write_String(buf11);
  3872  17A1  086D               	movf	OLED_Write_Float@buf11,w
  3873  17A2  00FC               	movwf	OLED_Write_String@s
  3874  17A3  3000               	movlw	0
  3875  17A4  00FD               	movwf	OLED_Write_String@s+1
  3876  17A5  3197  2702  3197   	fcall	_OLED_Write_String
  3877                           
  3878                           ;oled.c: 324: OLED_Write_String( "     " );
  3879  17A8  3028               	movlw	low (STR_2| (0+32768))
  3880  17A9  00FC               	movwf	OLED_Write_String@s
  3881  17AA  3098               	movlw	high (STR_2| (0+32768))
  3882  17AB  00FD               	movwf	OLED_Write_String@s+1
  3883  17AC  3197  2702         	fcall	_OLED_Write_String
  3884  17AE  0008               	return
  3885  17AF                     __end_of_OLED_Write_Float:	
  3886                           
  3887                           	psect	text5
  3888  0DF8                     __ptext5:	
  3889 ;; *************** function _ftoa *****************
  3890 ;; Defined at:
  3891 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\ftoa.c"
  3892 ;; Parameters:    Size  Location     Type
  3893 ;;  f               4   54[BANK0 ] float 
  3894 ;;  status          1   58[BANK0 ] PTR int 
  3895 ;;		 -> OLED_Write_Float@status(2), 
  3896 ;; Auto vars:     Size  Location     Type
  3897 ;;  l               4   64[BANK0 ] unsigned long 
  3898 ;;  rem             4   60[BANK0 ] unsigned long 
  3899 ;;  cp              1   68[BANK0 ] PTR unsigned char 
  3900 ;;		 -> ftoa@buf(17), 
  3901 ;; Return value:  Size  Location     Type
  3902 ;;                  1    wreg      PTR unsigned char 
  3903 ;; Registers used:
  3904 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3905 ;; Tracked objects:
  3906 ;;		On entry : 0/0
  3907 ;;		On exit  : 0/0
  3908 ;;		Unchanged: 0/0
  3909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3910 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3911 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3912 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3913 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3914 ;;Total ram usage:       15 bytes
  3915 ;; Hardware stack levels used:    1
  3916 ;; Hardware stack levels required when called:    2
  3917 ;; This function calls:
  3918 ;;		___flge
  3919 ;;		___flmul
  3920 ;;		___flneg
  3921 ;;		___flsub
  3922 ;;		___fltol
  3923 ;;		___xxtofl
  3924 ;;		_sprintf
  3925 ;; This function is called by:
  3926 ;;		_OLED_Write_Float
  3927 ;; This function uses a non-reentrant model
  3928 ;;
  3929                           
  3930                           
  3931                           ;psect for function _ftoa
  3932  0DF8                     _ftoa:	
  3933                           
  3934                           ;incstack = 0
  3935                           ; Regs used in _ftoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3936  0DF8  30B0               	movlw	(low (ftoa@buf| 0))& (0+255)
  3937  0DF9  0020               	movlb	0	; select bank0
  3938  0DFA  00DB               	movwf	??_ftoa
  3939  0DFB  085B               	movf	??_ftoa,w
  3940  0DFC  00E4               	movwf	ftoa@cp
  3941  0DFD  0859               	movf	ftoa@f+3,w
  3942  0DFE  00F3               	movwf	___flge@ff1+3
  3943  0DFF  0858               	movf	ftoa@f+2,w
  3944  0E00  00F2               	movwf	___flge@ff1+2
  3945  0E01  0857               	movf	ftoa@f+1,w
  3946  0E02  00F1               	movwf	___flge@ff1+1
  3947  0E03  0856               	movf	ftoa@f,w
  3948  0E04  00F0               	movwf	___flge@ff1
  3949  0E05  3000               	movlw	0
  3950  0E06  00F7               	movwf	___flge@ff2+3
  3951  0E07  3000               	movlw	0
  3952  0E08  00F6               	movwf	___flge@ff2+2
  3953  0E09  3000               	movlw	0
  3954  0E0A  00F5               	movwf	___flge@ff2+1
  3955  0E0B  3000               	movlw	0
  3956  0E0C  00F4               	movwf	___flge@ff2
  3957  0E0D  318D  257D  318D   	fcall	___flge
  3958  0E10  1803               	btfsc	3,0
  3959  0E11  2E32               	goto	l2660
  3960  0E12  302D               	movlw	45
  3961  0E13  0020               	movlb	0	; select bank0
  3962  0E14  00DB               	movwf	??_ftoa
  3963  0E15  0864               	movf	ftoa@cp,w
  3964  0E16  0086               	movwf	6
  3965  0E17  0187               	clrf	7
  3966  0E18  085B               	movf	??_ftoa,w
  3967  0E19  0081               	movwf	1
  3968  0E1A  3001               	movlw	1
  3969  0E1B  00DB               	movwf	??_ftoa
  3970  0E1C  085B               	movf	??_ftoa,w
  3971  0E1D  07E4               	addwf	ftoa@cp,f
  3972  0E1E  0859               	movf	ftoa@f+3,w
  3973  0E1F  00F3               	movwf	___flneg@f1+3
  3974  0E20  0858               	movf	ftoa@f+2,w
  3975  0E21  00F2               	movwf	___flneg@f1+2
  3976  0E22  0857               	movf	ftoa@f+1,w
  3977  0E23  00F1               	movwf	___flneg@f1+1
  3978  0E24  0856               	movf	ftoa@f,w
  3979  0E25  00F0               	movwf	___flneg@f1
  3980  0E26  3196  26EB  318D   	fcall	___flneg
  3981  0E29  0873               	movf	?___flneg+3,w
  3982  0E2A  0020               	movlb	0	; select bank0
  3983  0E2B  00D9               	movwf	ftoa@f+3
  3984  0E2C  0872               	movf	?___flneg+2,w
  3985  0E2D  00D8               	movwf	ftoa@f+2
  3986  0E2E  0871               	movf	?___flneg+1,w
  3987  0E2F  00D7               	movwf	ftoa@f+1
  3988  0E30  0870               	movf	?___flneg,w
  3989  0E31  00D6               	movwf	ftoa@f
  3990  0E32                     l2660:	
  3991  0E32  0020               	movlb	0	; select bank0
  3992  0E33  0859               	movf	ftoa@f+3,w
  3993  0E34  00BD               	movwf	___fltol@f1+3
  3994  0E35  0858               	movf	ftoa@f+2,w
  3995  0E36  00BC               	movwf	___fltol@f1+2
  3996  0E37  0857               	movf	ftoa@f+1,w
  3997  0E38  00BB               	movwf	___fltol@f1+1
  3998  0E39  0856               	movf	ftoa@f,w
  3999  0E3A  00BA               	movwf	___fltol@f1
  4000  0E3B  318C  24AE  318D   	fcall	___fltol
  4001  0E3E  0020               	movlb	0	; select bank0
  4002  0E3F  083D               	movf	?___fltol+3,w
  4003  0E40  00E3               	movwf	ftoa@l+3
  4004  0E41  083C               	movf	?___fltol+2,w
  4005  0E42  00E2               	movwf	ftoa@l+2
  4006  0E43  083B               	movf	?___fltol+1,w
  4007  0E44  00E1               	movwf	ftoa@l+1
  4008  0E45  083A               	movf	?___fltol,w
  4009  0E46  00E0               	movwf	ftoa@l
  4010  0E47  0863               	movf	ftoa@l+3,w
  4011  0E48  00F3               	movwf	___xxtofl@val+3
  4012  0E49  0862               	movf	ftoa@l+2,w
  4013  0E4A  00F2               	movwf	___xxtofl@val+2
  4014  0E4B  0861               	movf	ftoa@l+1,w
  4015  0E4C  00F1               	movwf	___xxtofl@val+1
  4016  0E4D  0860               	movf	ftoa@l,w
  4017  0E4E  00F0               	movwf	___xxtofl@val
  4018  0E4F  3000               	movlw	0
  4019  0E50  3180  2015  318D   	fcall	___xxtofl
  4020  0E53  0873               	movf	?___xxtofl+3,w
  4021  0E54  0020               	movlb	0	; select bank0
  4022  0E55  00D1               	movwf	___flsub@a+3
  4023  0E56  0872               	movf	?___xxtofl+2,w
  4024  0E57  00D0               	movwf	___flsub@a+2
  4025  0E58  0871               	movf	?___xxtofl+1,w
  4026  0E59  00CF               	movwf	___flsub@a+1
  4027  0E5A  0870               	movf	?___xxtofl,w
  4028  0E5B  00CE               	movwf	___flsub@a
  4029  0E5C  0859               	movf	ftoa@f+3,w
  4030  0E5D  00D5               	movwf	___flsub@b+3
  4031  0E5E  0858               	movf	ftoa@f+2,w
  4032  0E5F  00D4               	movwf	___flsub@b+2
  4033  0E60  0857               	movf	ftoa@f+1,w
  4034  0E61  00D3               	movwf	___flsub@b+1
  4035  0E62  0856               	movf	ftoa@f,w
  4036  0E63  00D2               	movwf	___flsub@b
  4037  0E64  3197  276E  318D   	fcall	___flsub
  4038  0E67  0020               	movlb	0	; select bank0
  4039  0E68  0851               	movf	?___flsub+3,w
  4040  0E69  00D9               	movwf	ftoa@f+3
  4041  0E6A  0850               	movf	?___flsub+2,w
  4042  0E6B  00D8               	movwf	ftoa@f+2
  4043  0E6C  084F               	movf	?___flsub+1,w
  4044  0E6D  00D7               	movwf	ftoa@f+1
  4045  0E6E  084E               	movf	?___flsub,w
  4046  0E6F  00D6               	movwf	ftoa@f
  4047  0E70  0859               	movf	ftoa@f+3,w
  4048  0E71  00A7               	movwf	___flmul@a+3
  4049  0E72  0858               	movf	ftoa@f+2,w
  4050  0E73  00A6               	movwf	___flmul@a+2
  4051  0E74  0857               	movf	ftoa@f+1,w
  4052  0E75  00A5               	movwf	___flmul@a+1
  4053  0E76  0856               	movf	ftoa@f,w
  4054  0E77  00A4               	movwf	___flmul@a
  4055  0E78  3049               	movlw	73
  4056  0E79  00A3               	movwf	___flmul@b+3
  4057  0E7A  3074               	movlw	116
  4058  0E7B  00A2               	movwf	___flmul@b+2
  4059  0E7C  3024               	movlw	36
  4060  0E7D  00A1               	movwf	___flmul@b+1
  4061  0E7E  3000               	movlw	0
  4062  0E7F  00A0               	movwf	___flmul@b
  4063  0E80  3185  25CA  318D   	fcall	___flmul
  4064  0E83  0020               	movlb	0	; select bank0
  4065  0E84  0823               	movf	?___flmul+3,w
  4066  0E85  00BD               	movwf	___fltol@f1+3
  4067  0E86  0822               	movf	?___flmul+2,w
  4068  0E87  00BC               	movwf	___fltol@f1+2
  4069  0E88  0821               	movf	?___flmul+1,w
  4070  0E89  00BB               	movwf	___fltol@f1+1
  4071  0E8A  0820               	movf	?___flmul,w
  4072  0E8B  00BA               	movwf	___fltol@f1
  4073  0E8C  318C  24AE  318D   	fcall	___fltol
  4074  0E8F  0020               	movlb	0	; select bank0
  4075  0E90  083D               	movf	?___fltol+3,w
  4076  0E91  00DF               	movwf	ftoa@rem+3
  4077  0E92  083C               	movf	?___fltol+2,w
  4078  0E93  00DE               	movwf	ftoa@rem+2
  4079  0E94  083B               	movf	?___fltol+1,w
  4080  0E95  00DD               	movwf	ftoa@rem+1
  4081  0E96  083A               	movf	?___fltol,w
  4082  0E97  00DC               	movwf	ftoa@rem
  4083  0E98  3000               	movlw	low (STR_4| (0+32768))
  4084  0E99  00AA               	movwf	sprintf@f
  4085  0E9A  308B               	movlw	high (STR_4| (0+32768))
  4086  0E9B  00AB               	movwf	sprintf@f+1
  4087  0E9C  0863               	movf	ftoa@l+3,w
  4088  0E9D  00AF               	movwf	?_sprintf+5
  4089  0E9E  0862               	movf	ftoa@l+2,w
  4090  0E9F  00AE               	movwf	?_sprintf+4
  4091  0EA0  0861               	movf	ftoa@l+1,w
  4092  0EA1  00AD               	movwf	?_sprintf+3
  4093  0EA2  0860               	movf	ftoa@l,w
  4094  0EA3  00AC               	movwf	?_sprintf+2
  4095  0EA4  085F               	movf	ftoa@rem+3,w
  4096  0EA5  00B3               	movwf	?_sprintf+9
  4097  0EA6  085E               	movf	ftoa@rem+2,w
  4098  0EA7  00B2               	movwf	?_sprintf+8
  4099  0EA8  085D               	movf	ftoa@rem+1,w
  4100  0EA9  00B1               	movwf	?_sprintf+7
  4101  0EAA  085C               	movf	ftoa@rem,w
  4102  0EAB  00B0               	movwf	?_sprintf+6
  4103  0EAC  0864               	movf	ftoa@cp,w
  4104  0EAD  3182  2224         	fcall	_sprintf
  4105  0EAF  30B0               	movlw	(low (ftoa@buf| 0))& (0+255)
  4106  0EB0  0008               	return
  4107  0EB1                     __end_of_ftoa:	
  4108                           
  4109                           	psect	text6
  4110  0224                     __ptext6:	
  4111 ;; *************** function _sprintf *****************
  4112 ;; Defined at:
  4113 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  4114 ;; Parameters:    Size  Location     Type
  4115 ;;  sp              1    wreg     PTR unsigned char 
  4116 ;;		 -> ftoa@buf(17), 
  4117 ;;  f               2   10[BANK0 ] PTR const unsigned char 
  4118 ;;		 -> STR_4(11), 
  4119 ;; Auto vars:     Size  Location     Type
  4120 ;;  sp              1   32[BANK0 ] PTR unsigned char 
  4121 ;;		 -> ftoa@buf(17), 
  4122 ;;  val             4   28[BANK0 ] unsigned long 
  4123 ;;  tmpval          4    0        struct .
  4124 ;;  prec            2   35[BANK0 ] int 
  4125 ;;  width           2   33[BANK0 ] int 
  4126 ;;  cp              2    0        PTR const unsigned char 
  4127 ;;  len             2    0        unsigned int 
  4128 ;;  c               1   37[BANK0 ] unsigned char 
  4129 ;;  ap              1   27[BANK0 ] PTR void [1]
  4130 ;;		 -> ?_sprintf(2), 
  4131 ;;  flag            1   26[BANK0 ] unsigned char 
  4132 ;; Return value:  Size  Location     Type
  4133 ;;                  2   10[BANK0 ] int 
  4134 ;; Registers used:
  4135 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4136 ;; Tracked objects:
  4137 ;;		On entry : 0/0
  4138 ;;		On exit  : 0/0
  4139 ;;		Unchanged: 0/0
  4140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4141 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4142 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4143 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4144 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4145 ;;Total ram usage:       28 bytes
  4146 ;; Hardware stack levels used:    1
  4147 ;; Hardware stack levels required when called:    1
  4148 ;; This function calls:
  4149 ;;		___lldiv
  4150 ;;		___llmod
  4151 ;;		___wmul
  4152 ;;		_isdigit
  4153 ;; This function is called by:
  4154 ;;		_ftoa
  4155 ;; This function uses a non-reentrant model
  4156 ;;
  4157                           
  4158                           
  4159                           ;psect for function _sprintf
  4160  0224                     _sprintf:	
  4161                           
  4162                           ;incstack = 0
  4163                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4164                           ;sprintf@sp stored from wreg
  4165  0224  0020               	movlb	0	; select bank0
  4166  0225  00C0               	movwf	sprintf@sp
  4167                           
  4168                           ;doprnt.c: 502: va_list ap;;doprnt.c: 507: char c;;doprnt.c: 509: int width;;doprnt.c: 5
      +                          12: int prec;;doprnt.c: 520: unsigned char flag;;doprnt.c: 535: union {;doprnt.c: 536: u
      +                          nsigned long vd;;doprnt.c: 537: double integ;;doprnt.c: 538: } tmpval;;doprnt.c: 540: un
      +                          signed long val;;doprnt.c: 541: unsigned len;;doprnt.c: 542: const char * cp;;doprnt.c: 
      +                          545: *ap = __va_start();
  4169  0226  302C               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  4170  0227  00B4               	movwf	??_sprintf
  4171  0228  0834               	movf	??_sprintf,w
  4172  0229  00BB               	movwf	sprintf@ap
  4173  022A                     l2378:	
  4174                           ;doprnt.c: 548: while((c = *f++)) {
  4175                           
  4176  022A  082B               	movf	sprintf@f+1,w
  4177  022B  00B5               	movwf	??_sprintf+1
  4178  022C  082A               	movf	sprintf@f,w
  4179  022D  00B4               	movwf	??_sprintf
  4180  022E  0AAA               	incf	sprintf@f,f
  4181  022F  1903               	skipnz
  4182  0230  0AAB               	incf	sprintf@f+1,f
  4183  0231  0834               	movf	??_sprintf,w
  4184  0232  0084               	movwf	4
  4185  0233  0835               	movf	??_sprintf+1,w
  4186  0234  0085               	movwf	5
  4187  0235  0800               	movf	0,w	;code access
  4188  0236  00B6               	movwf	??_sprintf+2
  4189  0237  0836               	movf	??_sprintf+2,w
  4190  0238  00C5               	movwf	sprintf@c
  4191  0239  0845               	movf	sprintf@c,w
  4192  023A  1903               	btfsc	3,2
  4193  023B  2BE3               	goto	l2380
  4194                           
  4195                           ;doprnt.c: 550: if(c != '%')
  4196  023C  3025               	movlw	37
  4197  023D  0645               	xorwf	sprintf@c,w
  4198  023E  1903               	btfsc	3,2
  4199  023F  2A4C               	goto	l2290
  4200                           
  4201                           ;doprnt.c: 552: {;doprnt.c: 553: ((*sp++ = (c)));
  4202  0240  0845               	movf	sprintf@c,w
  4203  0241  00B4               	movwf	??_sprintf
  4204  0242  0840               	movf	sprintf@sp,w
  4205  0243  0086               	movwf	6
  4206  0244  0187               	clrf	7
  4207  0245  0834               	movf	??_sprintf,w
  4208  0246  0081               	movwf	1
  4209  0247  3001               	movlw	1
  4210  0248  00B4               	movwf	??_sprintf
  4211  0249  0834               	movf	??_sprintf,w
  4212  024A  07C0               	addwf	sprintf@sp,f
  4213                           
  4214                           ;doprnt.c: 554: continue;
  4215  024B  2A2A               	goto	l2378
  4216  024C                     l2290:	
  4217                           
  4218                           ;doprnt.c: 555: };doprnt.c: 558: width = 0;
  4219  024C  01C1               	clrf	sprintf@width
  4220  024D  01C2               	clrf	sprintf@width+1
  4221                           
  4222                           ;doprnt.c: 560: flag = 0;
  4223  024E  01BA               	clrf	sprintf@flag
  4224                           
  4225                           ;doprnt.c: 609: if(isdigit((unsigned)*f)) {
  4226  024F  082A               	movf	sprintf@f,w
  4227  0250  0084               	movwf	4
  4228  0251  082B               	movf	sprintf@f+1,w
  4229  0252  0085               	movwf	5
  4230  0253  0800               	movf	0,w	;code access
  4231  0254  3196  26F4  3182   	fcall	_isdigit
  4232  0257  1C03               	btfss	3,0
  4233  0258  2A8A               	goto	l2304
  4234                           
  4235                           ;doprnt.c: 610: width = 0;
  4236  0259  0020               	movlb	0	; select bank0
  4237  025A  01C1               	clrf	sprintf@width
  4238  025B  01C2               	clrf	sprintf@width+1
  4239  025C                     l2296:	
  4240                           
  4241                           ;doprnt.c: 612: width *= 10;
  4242  025C  300A               	movlw	10
  4243  025D  00F0               	movwf	___wmul@multiplier
  4244  025E  3000               	movlw	0
  4245  025F  00F1               	movwf	___wmul@multiplier+1
  4246  0260  0020               	movlb	0	; select bank0
  4247  0261  0842               	movf	sprintf@width+1,w
  4248  0262  00F3               	movwf	___wmul@multiplicand+1
  4249  0263  0841               	movf	sprintf@width,w
  4250  0264  00F2               	movwf	___wmul@multiplicand
  4251  0265  3197  2716  3182   	fcall	___wmul
  4252  0268  0871               	movf	?___wmul+1,w
  4253  0269  0020               	movlb	0	; select bank0
  4254  026A  00C2               	movwf	sprintf@width+1
  4255  026B  0870               	movf	?___wmul,w
  4256  026C  00C1               	movwf	sprintf@width
  4257                           
  4258                           ;doprnt.c: 613: width += *f++ - '0';
  4259  026D  082A               	movf	sprintf@f,w
  4260  026E  0084               	movwf	4
  4261  026F  082B               	movf	sprintf@f+1,w
  4262  0270  0085               	movwf	5
  4263  0271  0800               	movf	0,w	;code access
  4264  0272  3ED0               	addlw	208
  4265  0273  00B4               	movwf	??_sprintf
  4266  0274  30FF               	movlw	255
  4267  0275  1803               	skipnc
  4268  0276  3000               	movlw	0
  4269  0277  00B5               	movwf	??_sprintf+1
  4270  0278  0834               	movf	??_sprintf,w
  4271  0279  07C1               	addwf	sprintf@width,f
  4272  027A  0835               	movf	??_sprintf+1,w
  4273  027B  3DC2               	addwfc	sprintf@width+1,f
  4274  027C  3001               	movlw	1
  4275  027D  07AA               	addwf	sprintf@f,f
  4276  027E  3000               	movlw	0
  4277  027F  3DAB               	addwfc	sprintf@f+1,f
  4278                           
  4279                           ;doprnt.c: 614: } while(isdigit((unsigned)*f));
  4280  0280  082A               	movf	sprintf@f,w
  4281  0281  0084               	movwf	4
  4282  0282  082B               	movf	sprintf@f+1,w
  4283  0283  0085               	movwf	5
  4284  0284  0800               	movf	0,w	;code access
  4285  0285  3196  26F4  3182   	fcall	_isdigit
  4286  0288  1803               	btfsc	3,0
  4287  0289  2A5C               	goto	l2296
  4288  028A                     l2304:	
  4289                           
  4290                           ;doprnt.c: 620: };doprnt.c: 623: if(*f == '.') {
  4291  028A  0020               	movlb	0	; select bank0
  4292  028B  082A               	movf	sprintf@f,w
  4293  028C  0084               	movwf	4
  4294  028D  082B               	movf	sprintf@f+1,w
  4295  028E  0085               	movwf	5
  4296  028F  0012               	moviw fsr0++
  4297  0290  3A2E               	xorlw	46
  4298  0291  1D03               	btfss	3,2
  4299  0292  2AC8               	goto	l2316
  4300                           
  4301                           ;doprnt.c: 625: f++;
  4302  0293  3001               	movlw	1
  4303  0294  07AA               	addwf	sprintf@f,f
  4304  0295  3000               	movlw	0
  4305  0296  3DAB               	addwfc	sprintf@f+1,f
  4306                           
  4307                           ;doprnt.c: 639: {;doprnt.c: 640: prec = 0;
  4308  0297  01C3               	clrf	sprintf@prec
  4309  0298  01C4               	clrf	sprintf@prec+1
  4310  0299                     l2314:	
  4311                           ;doprnt.c: 641: while(isdigit((unsigned)*f))
  4312                           
  4313  0299  082A               	movf	sprintf@f,w
  4314  029A  0084               	movwf	4
  4315  029B  082B               	movf	sprintf@f+1,w
  4316  029C  0085               	movwf	5
  4317  029D  0800               	movf	0,w	;code access
  4318  029E  3196  26F4  3182   	fcall	_isdigit
  4319  02A1  1C03               	btfss	3,0
  4320  02A2  2AD2               	goto	l2322
  4321                           
  4322                           ;doprnt.c: 642: prec = prec*10 + *f++ - '0';
  4323  02A3  0020               	movlb	0	; select bank0
  4324  02A4  082A               	movf	sprintf@f,w
  4325  02A5  0084               	movwf	4
  4326  02A6  082B               	movf	sprintf@f+1,w
  4327  02A7  0085               	movwf	5
  4328  02A8  0800               	movf	0,w	;code access
  4329  02A9  00B4               	movwf	??_sprintf
  4330  02AA  01B5               	clrf	??_sprintf+1
  4331  02AB  0844               	movf	sprintf@prec+1,w
  4332  02AC  00F1               	movwf	___wmul@multiplier+1
  4333  02AD  0843               	movf	sprintf@prec,w
  4334  02AE  00F0               	movwf	___wmul@multiplier
  4335  02AF  300A               	movlw	10
  4336  02B0  00F2               	movwf	___wmul@multiplicand
  4337  02B1  3000               	movlw	0
  4338  02B2  00F3               	movwf	___wmul@multiplicand+1
  4339  02B3  3197  2716  3182   	fcall	___wmul
  4340  02B6  0020               	movlb	0	; select bank0
  4341  02B7  0834               	movf	??_sprintf,w
  4342  02B8  0770               	addwf	?___wmul,w
  4343  02B9  00B6               	movwf	??_sprintf+2
  4344  02BA  0835               	movf	??_sprintf+1,w
  4345  02BB  3D71               	addwfc	?___wmul+1,w
  4346  02BC  00B7               	movwf	??_sprintf+3
  4347  02BD  0836               	movf	??_sprintf+2,w
  4348  02BE  3ED0               	addlw	208
  4349  02BF  00C3               	movwf	sprintf@prec
  4350  02C0  30FF               	movlw	255
  4351  02C1  3D37               	addwfc	??_sprintf+3,w
  4352  02C2  00C4               	movwf	sprintf@prec+1
  4353  02C3  3001               	movlw	1
  4354  02C4  07AA               	addwf	sprintf@f,f
  4355  02C5  3000               	movlw	0
  4356  02C6  3DAB               	addwfc	sprintf@f+1,f
  4357  02C7  2A99               	goto	l2314
  4358  02C8                     l2316:	
  4359                           
  4360                           ;doprnt.c: 645: prec = 0;
  4361  02C8  01C3               	clrf	sprintf@prec
  4362  02C9  01C4               	clrf	sprintf@prec+1
  4363  02CA  2AD2               	goto	l2322
  4364  02CB                     l305:	
  4365                           ;doprnt.c: 660: case 'l':
  4366                           
  4367                           
  4368                           ;doprnt.c: 662: flag |= 0x10;
  4369  02CB  163A               	bsf	sprintf@flag,4
  4370                           
  4371                           ;doprnt.c: 663: goto loop;
  4372  02CC  2AD2               	goto	l2322
  4373  02CD                     l2318:	
  4374                           
  4375                           ;doprnt.c: 837: flag |= 0xC0;
  4376  02CD  30C0               	movlw	192
  4377  02CE  00B4               	movwf	??_sprintf
  4378  02CF  0834               	movf	??_sprintf,w
  4379  02D0  04BA               	iorwf	sprintf@flag,f
  4380                           
  4381                           ;doprnt.c: 838: break;
  4382  02D1  2AEA               	goto	l308
  4383  02D2                     l2322:	
  4384  02D2  0020               	movlb	0	; select bank0
  4385  02D3  082B               	movf	sprintf@f+1,w
  4386  02D4  00B5               	movwf	??_sprintf+1
  4387  02D5  082A               	movf	sprintf@f,w
  4388  02D6  00B4               	movwf	??_sprintf
  4389  02D7  0AAA               	incf	sprintf@f,f
  4390  02D8  1903               	skipnz
  4391  02D9  0AAB               	incf	sprintf@f+1,f
  4392  02DA  0834               	movf	??_sprintf,w
  4393  02DB  0084               	movwf	4
  4394  02DC  0835               	movf	??_sprintf+1,w
  4395  02DD  0085               	movwf	5
  4396  02DE  0800               	movf	0,w	;code access
  4397  02DF  00C5               	movwf	sprintf@c
  4398                           
  4399                           ; Switch size 1, requested type "simple"
  4400                           ; Number of cases is 3, Range of values is 0 to 117
  4401                           ; switch strategies available:
  4402                           ; Name         Instructions Cycles
  4403                           ; simple_byte           10     6 (average)
  4404                           ; direct_byte          242     6 (fixed)
  4405                           ; jumptable            260     6 (fixed)
  4406                           ;	Chosen strategy is simple_byte
  4407  02E0  3A00               	xorlw	0	; case 0
  4408  02E1  1903               	skipnz
  4409  02E2  2BE3               	goto	l2380
  4410  02E3  3A6C               	xorlw	108	; case 108
  4411  02E4  1903               	skipnz
  4412  02E5  2ACB               	goto	l305
  4413  02E6  3A19               	xorlw	25	; case 117
  4414  02E7  1903               	skipnz
  4415  02E8  2ACD               	goto	l2318
  4416  02E9  2A2A               	goto	l2378
  4417  02EA                     l308:	
  4418                           
  4419                           ;doprnt.c: 1292: {;doprnt.c: 1300: if(flag & 0x10)
  4420  02EA  1E3A               	btfss	sprintf@flag,4
  4421  02EB  2AF9               	goto	l2328
  4422                           
  4423                           ;doprnt.c: 1301: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  4424  02EC  083B               	movf	sprintf@ap,w
  4425  02ED  0086               	movwf	6
  4426  02EE  0187               	clrf	7
  4427  02EF  3F40               	moviw [0]fsr1
  4428  02F0  00BC               	movwf	sprintf@val
  4429  02F1  3F41               	moviw [1]fsr1
  4430  02F2  00BD               	movwf	sprintf@val+1
  4431  02F3  3F42               	moviw [2]fsr1
  4432  02F4  00BE               	movwf	sprintf@val+2
  4433  02F5  3F43               	moviw [3]fsr1
  4434  02F6  00BF               	movwf	sprintf@val+3
  4435  02F7  3004               	movlw	4
  4436  02F8  2B07               	goto	L2
  4437  02F9                     l2328:	
  4438                           
  4439                           ;doprnt.c: 1302: else;doprnt.c: 1305: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (
      +                          unsigned)0));
  4440  02F9  083B               	movf	sprintf@ap,w
  4441  02FA  0086               	movwf	6
  4442  02FB  0187               	clrf	7
  4443  02FC  3F40               	moviw [0]fsr1
  4444  02FD  00B4               	movwf	??_sprintf
  4445  02FE  3F41               	moviw [1]fsr1
  4446  02FF  00B5               	movwf	??_sprintf+1
  4447  0300  0834               	movf	??_sprintf,w
  4448  0301  00BC               	movwf	sprintf@val
  4449  0302  0835               	movf	??_sprintf+1,w
  4450  0303  00BD               	movwf	sprintf@val+1
  4451  0304  01BE               	clrf	sprintf@val+2
  4452  0305  01BF               	clrf	sprintf@val+3
  4453  0306  3002               	movlw	2
  4454  0307                     L2:	
  4455  0307  00B4               	movwf	??_sprintf
  4456  0308  0834               	movf	??_sprintf,w
  4457  0309  07BB               	addwf	sprintf@ap,f
  4458                           
  4459                           ;doprnt.c: 1306: };doprnt.c: 1309: if(prec == 0 && val == 0)
  4460  030A  0843               	movf	sprintf@prec,w
  4461  030B  0444               	iorwf	sprintf@prec+1,w
  4462  030C  1D03               	btfss	3,2
  4463  030D  2B18               	goto	l2338
  4464  030E  083F               	movf	sprintf@val+3,w
  4465  030F  043E               	iorwf	sprintf@val+2,w
  4466  0310  043D               	iorwf	sprintf@val+1,w
  4467  0311  043C               	iorwf	sprintf@val,w
  4468  0312  1D03               	skipz
  4469  0313  2B18               	goto	l2338
  4470                           
  4471                           ;doprnt.c: 1310: prec++;
  4472  0314  3001               	movlw	1
  4473  0315  07C3               	addwf	sprintf@prec,f
  4474  0316  3000               	movlw	0
  4475  0317  3DC4               	addwfc	sprintf@prec+1,f
  4476  0318                     l2338:	
  4477                           
  4478                           ;doprnt.c: 1324: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4479  0318  01C5               	clrf	sprintf@c
  4480  0319  0AC5               	incf	sprintf@c,f
  4481  031A                     l2344:	
  4482                           
  4483                           ;doprnt.c: 1325: if(val < dpowers[c])
  4484  031A  0845               	movf	sprintf@c,w
  4485  031B  00B4               	movwf	??_sprintf
  4486  031C  01B5               	clrf	??_sprintf+1
  4487  031D  35B4               	lslf	??_sprintf,f
  4488  031E  0DB5               	rlf	??_sprintf+1,f
  4489  031F  35B4               	lslf	??_sprintf,f
  4490  0320  0DB5               	rlf	??_sprintf+1,f
  4491  0321  3000               	movlw	low (_dpowers| (0+32768))
  4492  0322  0734               	addwf	??_sprintf,w
  4493  0323  0084               	movwf	4
  4494  0324  3098               	movlw	high (_dpowers| (0+32768))
  4495  0325  3D35               	addwfc	??_sprintf+1,w
  4496  0326  0085               	movwf	5
  4497  0327  3F00               	moviw [0]fsr0
  4498  0328  00B6               	movwf	??_sprintf+2
  4499  0329  3F01               	moviw [1]fsr0
  4500  032A  00B7               	movwf	??_sprintf+3
  4501  032B  3F02               	moviw [2]fsr0
  4502  032C  00B8               	movwf	??_sprintf+4
  4503  032D  3F03               	moviw [3]fsr0
  4504  032E  00B9               	movwf	??_sprintf+5
  4505  032F  0839               	movf	??_sprintf+5,w
  4506  0330  023F               	subwf	sprintf@val+3,w
  4507  0331  1D03               	skipz
  4508  0332  2B3D               	goto	u2755
  4509  0333  0838               	movf	??_sprintf+4,w
  4510  0334  023E               	subwf	sprintf@val+2,w
  4511  0335  1D03               	skipz
  4512  0336  2B3D               	goto	u2755
  4513  0337  0837               	movf	??_sprintf+3,w
  4514  0338  023D               	subwf	sprintf@val+1,w
  4515  0339  1D03               	skipz
  4516  033A  2B3D               	goto	u2755
  4517  033B  0836               	movf	??_sprintf+2,w
  4518  033C  023C               	subwf	sprintf@val,w
  4519  033D                     u2755:	
  4520  033D  1C03               	btfss	3,0
  4521  033E  2B47               	goto	l2350
  4522  033F  3001               	movlw	1
  4523  0340  00B4               	movwf	??_sprintf
  4524  0341  0834               	movf	??_sprintf,w
  4525  0342  07C5               	addwf	sprintf@c,f
  4526  0343  300A               	movlw	10
  4527  0344  0645               	xorwf	sprintf@c,w
  4528  0345  1D03               	btfss	3,2
  4529  0346  2B1A               	goto	l2344
  4530  0347                     l2350:	
  4531                           
  4532                           ;doprnt.c: 1358: if(c < prec)
  4533  0347  0844               	movf	sprintf@prec+1,w
  4534  0348  3A80               	xorlw	128
  4535  0349  3C80               	sublw	128
  4536  034A  1D03               	skipz
  4537  034B  2B4E               	goto	u2775
  4538  034C  0843               	movf	sprintf@prec,w
  4539  034D  0245               	subwf	sprintf@c,w
  4540  034E                     u2775:	
  4541  034E  1803               	skipnc
  4542  034F  2B56               	goto	l2354
  4543                           
  4544                           ;doprnt.c: 1359: c = prec;
  4545  0350  0020               	movlb	0	; select bank0
  4546  0351  0843               	movf	sprintf@prec,w
  4547  0352  00B4               	movwf	??_sprintf
  4548  0353  0834               	movf	??_sprintf,w
  4549  0354  00C5               	movwf	sprintf@c
  4550  0355  2B6A               	goto	l316
  4551  0356                     l2354:	
  4552                           
  4553                           ;doprnt.c: 1360: else if(prec < c)
  4554  0356  0020               	movlb	0	; select bank0
  4555  0357  0844               	movf	sprintf@prec+1,w
  4556  0358  3A80               	xorlw	128
  4557  0359  00B4               	movwf	??_sprintf
  4558  035A  3080               	movlw	128
  4559  035B  0234               	subwf	??_sprintf,w
  4560  035C  1D03               	skipz
  4561  035D  2B60               	goto	u2785
  4562  035E  0845               	movf	sprintf@c,w
  4563  035F  0243               	subwf	sprintf@prec,w
  4564  0360                     u2785:	
  4565  0360  1803               	skipnc
  4566  0361  2B6A               	goto	l316
  4567                           
  4568                           ;doprnt.c: 1361: prec = c;
  4569  0362  0020               	movlb	0	; select bank0
  4570  0363  0845               	movf	sprintf@c,w
  4571  0364  00B4               	movwf	??_sprintf
  4572  0365  01B5               	clrf	??_sprintf+1
  4573  0366  0834               	movf	??_sprintf,w
  4574  0367  00C3               	movwf	sprintf@prec
  4575  0368  0835               	movf	??_sprintf+1,w
  4576  0369  00C4               	movwf	sprintf@prec+1
  4577  036A                     l316:	
  4578                           
  4579                           ;doprnt.c: 1400: if(width > c)
  4580  036A  0020               	movlb	0	; select bank0
  4581  036B  0842               	movf	sprintf@width+1,w
  4582  036C  3A80               	xorlw	128
  4583  036D  3C80               	sublw	128
  4584  036E  1D03               	skipz
  4585  036F  2B72               	goto	u2795
  4586  0370  0841               	movf	sprintf@width,w
  4587  0371  0245               	subwf	sprintf@c,w
  4588  0372                     u2795:	
  4589  0372  1803               	skipnc
  4590  0373  2B7D               	goto	l2360
  4591                           
  4592                           ;doprnt.c: 1401: width -= c;
  4593  0374  0020               	movlb	0	; select bank0
  4594  0375  0845               	movf	sprintf@c,w
  4595  0376  00B4               	movwf	??_sprintf
  4596  0377  01B5               	clrf	??_sprintf+1
  4597  0378  0834               	movf	??_sprintf,w
  4598  0379  02C1               	subwf	sprintf@width,f
  4599  037A  0835               	movf	??_sprintf+1,w
  4600  037B  3BC2               	subwfb	sprintf@width+1,f
  4601  037C  2B80               	goto	l2362
  4602  037D                     l2360:	
  4603                           
  4604                           ;doprnt.c: 1402: else;doprnt.c: 1403: width = 0;
  4605  037D  0020               	movlb	0	; select bank0
  4606  037E  01C1               	clrf	sprintf@width
  4607  037F  01C2               	clrf	sprintf@width+1
  4608  0380                     l2362:	
  4609                           
  4610                           ;doprnt.c: 1441: {;doprnt.c: 1443: if(width;doprnt.c: 1447: )
  4611  0380  0841               	movf	sprintf@width,w
  4612  0381  0442               	iorwf	sprintf@width+1,w
  4613  0382  1903               	btfsc	3,2
  4614  0383  2BD8               	goto	l2376
  4615                           
  4616                           ;doprnt.c: 1449: ((*sp++ = (' ')));
  4617  0384  3020               	movlw	32
  4618  0385  00B4               	movwf	??_sprintf
  4619  0386  0840               	movf	sprintf@sp,w
  4620  0387  0086               	movwf	6
  4621  0388  0187               	clrf	7
  4622  0389  0834               	movf	??_sprintf,w
  4623  038A  0081               	movwf	1
  4624  038B  3001               	movlw	1
  4625  038C  00B4               	movwf	??_sprintf
  4626  038D  0834               	movf	??_sprintf,w
  4627  038E  07C0               	addwf	sprintf@sp,f
  4628                           
  4629                           ;doprnt.c: 1450: while(--width);
  4630  038F  30FF               	movlw	255
  4631  0390  07C1               	addwf	sprintf@width,f
  4632  0391  30FF               	movlw	255
  4633  0392  3DC2               	addwfc	sprintf@width+1,f
  4634  0393  2B80               	goto	l2362
  4635  0394                     l2370:	
  4636                           
  4637                           ;doprnt.c: 1497: {;doprnt.c: 1508: c = (val / dpowers[prec]) % 10 + '0';
  4638  0394  3000               	movlw	0
  4639  0395  00A3               	movwf	___llmod@divisor+3
  4640  0396  3000               	movlw	0
  4641  0397  00A2               	movwf	___llmod@divisor+2
  4642  0398  3000               	movlw	0
  4643  0399  00A1               	movwf	___llmod@divisor+1
  4644  039A  300A               	movlw	10
  4645  039B  00A0               	movwf	___llmod@divisor
  4646  039C  0844               	movf	sprintf@prec+1,w
  4647  039D  0085               	movwf	5
  4648  039E  0843               	movf	sprintf@prec,w
  4649  039F  0084               	movwf	4
  4650  03A0  3584               	lslf	4,f
  4651  03A1  0D85               	rlf	5,f
  4652  03A2  3584               	lslf	4,f
  4653  03A3  0D85               	rlf	5,f
  4654  03A4  3000               	movlw	low (_dpowers| (0+32768))
  4655  03A5  0784               	addwf	4,f
  4656  03A6  3098               	movlw	high (_dpowers| (0+32768))
  4657  03A7  3D85               	addwfc	5,f
  4658  03A8  3F00               	moviw [0]fsr0
  4659  03A9  00F0               	movwf	___lldiv@divisor
  4660  03AA  3F01               	moviw [1]fsr0
  4661  03AB  00F1               	movwf	___lldiv@divisor+1
  4662  03AC  3F02               	moviw [2]fsr0
  4663  03AD  00F2               	movwf	___lldiv@divisor+2
  4664  03AE  3F03               	moviw [3]fsr0
  4665  03AF  00F3               	movwf	___lldiv@divisor+3
  4666  03B0  083F               	movf	sprintf@val+3,w
  4667  03B1  00F7               	movwf	___lldiv@dividend+3
  4668  03B2  083E               	movf	sprintf@val+2,w
  4669  03B3  00F6               	movwf	___lldiv@dividend+2
  4670  03B4  083D               	movf	sprintf@val+1,w
  4671  03B5  00F5               	movwf	___lldiv@dividend+1
  4672  03B6  083C               	movf	sprintf@val,w
  4673  03B7  00F4               	movwf	___lldiv@dividend
  4674  03B8  318B  2393  3182   	fcall	___lldiv
  4675  03BB  0873               	movf	?___lldiv+3,w
  4676  03BC  0020               	movlb	0	; select bank0
  4677  03BD  00A7               	movwf	___llmod@dividend+3
  4678  03BE  0872               	movf	?___lldiv+2,w
  4679  03BF  00A6               	movwf	___llmod@dividend+2
  4680  03C0  0871               	movf	?___lldiv+1,w
  4681  03C1  00A5               	movwf	___llmod@dividend+1
  4682  03C2  0870               	movf	?___lldiv,w
  4683  03C3  00A4               	movwf	___llmod@dividend
  4684  03C4  318B  2350  3182   	fcall	___llmod
  4685  03C7  0020               	movlb	0	; select bank0
  4686  03C8  0820               	movf	?___llmod,w
  4687  03C9  3E30               	addlw	48
  4688  03CA  00B4               	movwf	??_sprintf
  4689  03CB  0834               	movf	??_sprintf,w
  4690  03CC  00C5               	movwf	sprintf@c
  4691                           
  4692                           ;doprnt.c: 1542: };doprnt.c: 1543: ((*sp++ = (c)));
  4693  03CD  0845               	movf	sprintf@c,w
  4694  03CE  00B4               	movwf	??_sprintf
  4695  03CF  0840               	movf	sprintf@sp,w
  4696  03D0  0086               	movwf	6
  4697  03D1  0187               	clrf	7
  4698  03D2  0834               	movf	??_sprintf,w
  4699  03D3  0081               	movwf	1
  4700  03D4  3001               	movlw	1
  4701  03D5  00B4               	movwf	??_sprintf
  4702  03D6  0834               	movf	??_sprintf,w
  4703  03D7  07C0               	addwf	sprintf@sp,f
  4704  03D8                     l2376:	
  4705  03D8  30FF               	movlw	255
  4706  03D9  07C3               	addwf	sprintf@prec,f
  4707  03DA  30FF               	movlw	255
  4708  03DB  3DC4               	addwfc	sprintf@prec+1,f
  4709  03DC  0A43               	incf	sprintf@prec,w
  4710  03DD  1D03               	skipz
  4711  03DE  2B94               	goto	l2370
  4712  03DF  0A44               	incf	sprintf@prec+1,w
  4713  03E0  1903               	btfsc	3,2
  4714  03E1  2A2A               	goto	l2378
  4715  03E2  2B94               	goto	l2370
  4716  03E3                     l2380:	
  4717                           
  4718                           ;doprnt.c: 1557: *sp = 0;
  4719  03E3  0840               	movf	sprintf@sp,w
  4720  03E4  0086               	movwf	6
  4721  03E5  0187               	clrf	7
  4722  03E6  0181               	clrf	1
  4723  03E7  0008               	return
  4724  03E8                     __end_of_sprintf:	
  4725                           
  4726                           	psect	text7
  4727  16F4                     __ptext7:	
  4728 ;; *************** function _isdigit *****************
  4729 ;; Defined at:
  4730 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\isdigit.c"
  4731 ;; Parameters:    Size  Location     Type
  4732 ;;  c               1    wreg     unsigned char 
  4733 ;; Auto vars:     Size  Location     Type
  4734 ;;  c               1    1[COMMON] unsigned char 
  4735 ;; Return value:  Size  Location     Type
  4736 ;;		None               void
  4737 ;; Registers used:
  4738 ;;		wreg, status,2, status,0
  4739 ;; Tracked objects:
  4740 ;;		On entry : 0/0
  4741 ;;		On exit  : 0/0
  4742 ;;		Unchanged: 0/0
  4743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4745 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4747 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4748 ;;Total ram usage:        2 bytes
  4749 ;; Hardware stack levels used:    1
  4750 ;; This function calls:
  4751 ;;		Nothing
  4752 ;; This function is called by:
  4753 ;;		_sprintf
  4754 ;; This function uses a non-reentrant model
  4755 ;;
  4756                           
  4757                           
  4758                           ;psect for function _isdigit
  4759  16F4                     _isdigit:	
  4760                           
  4761                           ;incstack = 0
  4762                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4763                           ;isdigit@c stored from wreg
  4764  16F4  00F1               	movwf	isdigit@c
  4765  16F5  01F0               	clrf	_isdigit$815
  4766  16F6  303A               	movlw	58
  4767  16F7  0271               	subwf	isdigit@c,w
  4768  16F8  1803               	skipnc
  4769  16F9  2F00               	goto	l1970
  4770  16FA  3030               	movlw	48
  4771  16FB  0271               	subwf	isdigit@c,w
  4772  16FC  1C03               	skipc
  4773  16FD  2F00               	goto	l1970
  4774  16FE  01F0               	clrf	_isdigit$815
  4775  16FF  0AF0               	incf	_isdigit$815,f
  4776  1700                     l1970:	
  4777  1700  0C70               	rrf	_isdigit$815,w
  4778  1701  0008               	return
  4779  1702                     __end_of_isdigit:	
  4780                           
  4781                           	psect	text8
  4782  1716                     __ptext8:	
  4783 ;; *************** function ___wmul *****************
  4784 ;; Defined at:
  4785 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
  4786 ;; Parameters:    Size  Location     Type
  4787 ;;  multiplier      2    0[COMMON] unsigned int 
  4788 ;;  multiplicand    2    2[COMMON] unsigned int 
  4789 ;; Auto vars:     Size  Location     Type
  4790 ;;  product         2    4[COMMON] unsigned int 
  4791 ;; Return value:  Size  Location     Type
  4792 ;;                  2    0[COMMON] unsigned int 
  4793 ;; Registers used:
  4794 ;;		wreg, status,2, status,0
  4795 ;; Tracked objects:
  4796 ;;		On entry : 0/0
  4797 ;;		On exit  : 0/0
  4798 ;;		Unchanged: 0/0
  4799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4800 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4801 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4803 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4804 ;;Total ram usage:        6 bytes
  4805 ;; Hardware stack levels used:    1
  4806 ;; This function calls:
  4807 ;;		Nothing
  4808 ;; This function is called by:
  4809 ;;		_sprintf
  4810 ;; This function uses a non-reentrant model
  4811 ;;
  4812                           
  4813                           
  4814                           ;psect for function ___wmul
  4815  1716                     ___wmul:	
  4816                           
  4817                           ;incstack = 0
  4818                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4819  1716  01F4               	clrf	___wmul@product
  4820  1717  01F5               	clrf	___wmul@product+1
  4821  1718                     l1976:	
  4822  1718  1C70               	btfss	___wmul@multiplier,0
  4823  1719  2F1E               	goto	l331
  4824  171A  0872               	movf	___wmul@multiplicand,w
  4825  171B  07F4               	addwf	___wmul@product,f
  4826  171C  0873               	movf	___wmul@multiplicand+1,w
  4827  171D  3DF5               	addwfc	___wmul@product+1,f
  4828  171E                     l331:	
  4829  171E  3001               	movlw	1
  4830  171F                     u2025:	
  4831  171F  35F2               	lslf	___wmul@multiplicand,f
  4832  1720  0DF3               	rlf	___wmul@multiplicand+1,f
  4833  1721  0B89               	decfsz	9,f
  4834  1722  2F1F               	goto	u2025
  4835  1723  3001               	movlw	1
  4836  1724                     u2035:	
  4837  1724  36F1               	lsrf	___wmul@multiplier+1,f
  4838  1725  0CF0               	rrf	___wmul@multiplier,f
  4839  1726  0B89               	decfsz	9,f
  4840  1727  2F24               	goto	u2035
  4841  1728  0870               	movf	___wmul@multiplier,w
  4842  1729  0471               	iorwf	___wmul@multiplier+1,w
  4843  172A  1D03               	btfss	3,2
  4844  172B  2F18               	goto	l1976
  4845  172C  0875               	movf	___wmul@product+1,w
  4846  172D  00F1               	movwf	?___wmul+1
  4847  172E  0874               	movf	___wmul@product,w
  4848  172F  00F0               	movwf	?___wmul
  4849  1730  0008               	return
  4850  1731                     __end_of___wmul:	
  4851                           
  4852                           	psect	text9
  4853  0B50                     __ptext9:	
  4854 ;; *************** function ___llmod *****************
  4855 ;; Defined at:
  4856 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\llmod.c"
  4857 ;; Parameters:    Size  Location     Type
  4858 ;;  divisor         4    0[BANK0 ] unsigned long 
  4859 ;;  dividend        4    4[BANK0 ] unsigned long 
  4860 ;; Auto vars:     Size  Location     Type
  4861 ;;  counter         1    9[BANK0 ] unsigned char 
  4862 ;; Return value:  Size  Location     Type
  4863 ;;                  4    0[BANK0 ] unsigned long 
  4864 ;; Registers used:
  4865 ;;		wreg, status,2, status,0
  4866 ;; Tracked objects:
  4867 ;;		On entry : 0/0
  4868 ;;		On exit  : 0/0
  4869 ;;		Unchanged: 0/0
  4870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4871 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4872 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4873 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4874 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4875 ;;Total ram usage:       10 bytes
  4876 ;; Hardware stack levels used:    1
  4877 ;; This function calls:
  4878 ;;		Nothing
  4879 ;; This function is called by:
  4880 ;;		_sprintf
  4881 ;; This function uses a non-reentrant model
  4882 ;;
  4883                           
  4884                           
  4885                           ;psect for function ___llmod
  4886  0B50                     ___llmod:	
  4887                           
  4888                           ;incstack = 0
  4889                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  4890  0B50  0020               	movlb	0	; select bank0
  4891  0B51  0823               	movf	___llmod@divisor+3,w
  4892  0B52  0422               	iorwf	___llmod@divisor+2,w
  4893  0B53  0421               	iorwf	___llmod@divisor+1,w
  4894  0B54  0420               	iorwf	___llmod@divisor,w
  4895  0B55  1903               	skipnz
  4896  0B56  2B8A               	goto	l2028
  4897  0B57  01A9               	clrf	___llmod@counter
  4898  0B58  0AA9               	incf	___llmod@counter,f
  4899  0B59                     l2018:	
  4900  0B59  1BA3               	btfsc	___llmod@divisor+3,7
  4901  0B5A  2B67               	goto	l2020
  4902  0B5B  3001               	movlw	1
  4903  0B5C                     u2135:	
  4904  0B5C  35A0               	lslf	___llmod@divisor,f
  4905  0B5D  0DA1               	rlf	___llmod@divisor+1,f
  4906  0B5E  0DA2               	rlf	___llmod@divisor+2,f
  4907  0B5F  0DA3               	rlf	___llmod@divisor+3,f
  4908  0B60  0B89               	decfsz	9,f
  4909  0B61  2B5C               	goto	u2135
  4910  0B62  3001               	movlw	1
  4911  0B63  00A8               	movwf	??___llmod
  4912  0B64  0828               	movf	??___llmod,w
  4913  0B65  07A9               	addwf	___llmod@counter,f
  4914  0B66  2B59               	goto	l2018
  4915  0B67                     l2020:	
  4916  0B67  0823               	movf	___llmod@divisor+3,w
  4917  0B68  0227               	subwf	___llmod@dividend+3,w
  4918  0B69  1D03               	skipz
  4919  0B6A  2B75               	goto	u2155
  4920  0B6B  0822               	movf	___llmod@divisor+2,w
  4921  0B6C  0226               	subwf	___llmod@dividend+2,w
  4922  0B6D  1D03               	skipz
  4923  0B6E  2B75               	goto	u2155
  4924  0B6F  0821               	movf	___llmod@divisor+1,w
  4925  0B70  0225               	subwf	___llmod@dividend+1,w
  4926  0B71  1D03               	skipz
  4927  0B72  2B75               	goto	u2155
  4928  0B73  0820               	movf	___llmod@divisor,w
  4929  0B74  0224               	subwf	___llmod@dividend,w
  4930  0B75                     u2155:	
  4931  0B75  1C03               	skipc
  4932  0B76  2B7F               	goto	l2024
  4933  0B77  0820               	movf	___llmod@divisor,w
  4934  0B78  02A4               	subwf	___llmod@dividend,f
  4935  0B79  0821               	movf	___llmod@divisor+1,w
  4936  0B7A  3BA5               	subwfb	___llmod@dividend+1,f
  4937  0B7B  0822               	movf	___llmod@divisor+2,w
  4938  0B7C  3BA6               	subwfb	___llmod@dividend+2,f
  4939  0B7D  0823               	movf	___llmod@divisor+3,w
  4940  0B7E  3BA7               	subwfb	___llmod@dividend+3,f
  4941  0B7F                     l2024:	
  4942  0B7F  3001               	movlw	1
  4943  0B80                     u2165:	
  4944  0B80  36A3               	lsrf	___llmod@divisor+3,f
  4945  0B81  0CA2               	rrf	___llmod@divisor+2,f
  4946  0B82  0CA1               	rrf	___llmod@divisor+1,f
  4947  0B83  0CA0               	rrf	___llmod@divisor,f
  4948  0B84  0B89               	decfsz	9,f
  4949  0B85  2B80               	goto	u2165
  4950  0B86  3001               	movlw	1
  4951  0B87  02A9               	subwf	___llmod@counter,f
  4952  0B88  1D03               	btfss	3,2
  4953  0B89  2B67               	goto	l2020
  4954  0B8A                     l2028:	
  4955  0B8A  0827               	movf	___llmod@dividend+3,w
  4956  0B8B  00A3               	movwf	?___llmod+3
  4957  0B8C  0826               	movf	___llmod@dividend+2,w
  4958  0B8D  00A2               	movwf	?___llmod+2
  4959  0B8E  0825               	movf	___llmod@dividend+1,w
  4960  0B8F  00A1               	movwf	?___llmod+1
  4961  0B90  0824               	movf	___llmod@dividend,w
  4962  0B91  00A0               	movwf	?___llmod
  4963  0B92  0008               	return
  4964  0B93                     __end_of___llmod:	
  4965                           
  4966                           	psect	text10
  4967  0B93                     __ptext10:	
  4968 ;; *************** function ___lldiv *****************
  4969 ;; Defined at:
  4970 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
  4971 ;; Parameters:    Size  Location     Type
  4972 ;;  divisor         4    0[COMMON] unsigned long 
  4973 ;;  dividend        4    4[COMMON] unsigned long 
  4974 ;; Auto vars:     Size  Location     Type
  4975 ;;  quotient        4    9[COMMON] unsigned long 
  4976 ;;  counter         1   13[COMMON] unsigned char 
  4977 ;; Return value:  Size  Location     Type
  4978 ;;                  4    0[COMMON] unsigned long 
  4979 ;; Registers used:
  4980 ;;		wreg, status,2, status,0
  4981 ;; Tracked objects:
  4982 ;;		On entry : 0/0
  4983 ;;		On exit  : 0/0
  4984 ;;		Unchanged: 0/0
  4985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4986 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4987 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4988 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4989 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4990 ;;Total ram usage:       14 bytes
  4991 ;; Hardware stack levels used:    1
  4992 ;; This function calls:
  4993 ;;		Nothing
  4994 ;; This function is called by:
  4995 ;;		_sprintf
  4996 ;; This function uses a non-reentrant model
  4997 ;;
  4998                           
  4999                           
  5000                           ;psect for function ___lldiv
  5001  0B93                     ___lldiv:	
  5002                           
  5003                           ;incstack = 0
  5004                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5005  0B93  3000               	movlw	0
  5006  0B94  00FC               	movwf	___lldiv@quotient+3
  5007  0B95  3000               	movlw	0
  5008  0B96  00FB               	movwf	___lldiv@quotient+2
  5009  0B97  3000               	movlw	0
  5010  0B98  00FA               	movwf	___lldiv@quotient+1
  5011  0B99  3000               	movlw	0
  5012  0B9A  00F9               	movwf	___lldiv@quotient
  5013  0B9B  0873               	movf	___lldiv@divisor+3,w
  5014  0B9C  0472               	iorwf	___lldiv@divisor+2,w
  5015  0B9D  0471               	iorwf	___lldiv@divisor+1,w
  5016  0B9E  0470               	iorwf	___lldiv@divisor,w
  5017  0B9F  1903               	skipnz
  5018  0BA0  2BDC               	goto	l2008
  5019  0BA1  01FD               	clrf	___lldiv@counter
  5020  0BA2  0AFD               	incf	___lldiv@counter,f
  5021  0BA3                     l1994:	
  5022  0BA3  1BF3               	btfsc	___lldiv@divisor+3,7
  5023  0BA4  2BB1               	goto	l1996
  5024  0BA5  3001               	movlw	1
  5025  0BA6                     u2065:	
  5026  0BA6  35F0               	lslf	___lldiv@divisor,f
  5027  0BA7  0DF1               	rlf	___lldiv@divisor+1,f
  5028  0BA8  0DF2               	rlf	___lldiv@divisor+2,f
  5029  0BA9  0DF3               	rlf	___lldiv@divisor+3,f
  5030  0BAA  0B89               	decfsz	9,f
  5031  0BAB  2BA6               	goto	u2065
  5032  0BAC  3001               	movlw	1
  5033  0BAD  00F8               	movwf	??___lldiv
  5034  0BAE  0878               	movf	??___lldiv,w
  5035  0BAF  07FD               	addwf	___lldiv@counter,f
  5036  0BB0  2BA3               	goto	l1994
  5037  0BB1                     l1996:	
  5038  0BB1  3001               	movlw	1
  5039  0BB2                     u2085:	
  5040  0BB2  35F9               	lslf	___lldiv@quotient,f
  5041  0BB3  0DFA               	rlf	___lldiv@quotient+1,f
  5042  0BB4  0DFB               	rlf	___lldiv@quotient+2,f
  5043  0BB5  0DFC               	rlf	___lldiv@quotient+3,f
  5044  0BB6  0B89               	decfsz	9,f
  5045  0BB7  2BB2               	goto	u2085
  5046  0BB8  0873               	movf	___lldiv@divisor+3,w
  5047  0BB9  0277               	subwf	___lldiv@dividend+3,w
  5048  0BBA  1D03               	skipz
  5049  0BBB  2BC6               	goto	u2095
  5050  0BBC  0872               	movf	___lldiv@divisor+2,w
  5051  0BBD  0276               	subwf	___lldiv@dividend+2,w
  5052  0BBE  1D03               	skipz
  5053  0BBF  2BC6               	goto	u2095
  5054  0BC0  0871               	movf	___lldiv@divisor+1,w
  5055  0BC1  0275               	subwf	___lldiv@dividend+1,w
  5056  0BC2  1D03               	skipz
  5057  0BC3  2BC6               	goto	u2095
  5058  0BC4  0870               	movf	___lldiv@divisor,w
  5059  0BC5  0274               	subwf	___lldiv@dividend,w
  5060  0BC6                     u2095:	
  5061  0BC6  1C03               	skipc
  5062  0BC7  2BD1               	goto	l2004
  5063  0BC8  0870               	movf	___lldiv@divisor,w
  5064  0BC9  02F4               	subwf	___lldiv@dividend,f
  5065  0BCA  0871               	movf	___lldiv@divisor+1,w
  5066  0BCB  3BF5               	subwfb	___lldiv@dividend+1,f
  5067  0BCC  0872               	movf	___lldiv@divisor+2,w
  5068  0BCD  3BF6               	subwfb	___lldiv@dividend+2,f
  5069  0BCE  0873               	movf	___lldiv@divisor+3,w
  5070  0BCF  3BF7               	subwfb	___lldiv@dividend+3,f
  5071  0BD0  1479               	bsf	___lldiv@quotient,0
  5072  0BD1                     l2004:	
  5073  0BD1  3001               	movlw	1
  5074  0BD2                     u2105:	
  5075  0BD2  36F3               	lsrf	___lldiv@divisor+3,f
  5076  0BD3  0CF2               	rrf	___lldiv@divisor+2,f
  5077  0BD4  0CF1               	rrf	___lldiv@divisor+1,f
  5078  0BD5  0CF0               	rrf	___lldiv@divisor,f
  5079  0BD6  0B89               	decfsz	9,f
  5080  0BD7  2BD2               	goto	u2105
  5081  0BD8  3001               	movlw	1
  5082  0BD9  02FD               	subwf	___lldiv@counter,f
  5083  0BDA  1D03               	btfss	3,2
  5084  0BDB  2BB1               	goto	l1996
  5085  0BDC                     l2008:	
  5086  0BDC  087C               	movf	___lldiv@quotient+3,w
  5087  0BDD  00F3               	movwf	?___lldiv+3
  5088  0BDE  087B               	movf	___lldiv@quotient+2,w
  5089  0BDF  00F2               	movwf	?___lldiv+2
  5090  0BE0  087A               	movf	___lldiv@quotient+1,w
  5091  0BE1  00F1               	movwf	?___lldiv+1
  5092  0BE2  0879               	movf	___lldiv@quotient,w
  5093  0BE3  00F0               	movwf	?___lldiv
  5094  0BE4  0008               	return
  5095  0BE5                     __end_of___lldiv:	
  5096                           
  5097                           	psect	text11
  5098  0015                     __ptext11:	
  5099 ;; *************** function ___xxtofl *****************
  5100 ;; Defined at:
  5101 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
  5102 ;; Parameters:    Size  Location     Type
  5103 ;;  sign            1    wreg     unsigned char 
  5104 ;;  val             4    0[COMMON] long 
  5105 ;; Auto vars:     Size  Location     Type
  5106 ;;  sign            1    8[COMMON] unsigned char 
  5107 ;;  arg             4   10[COMMON] unsigned long 
  5108 ;;  exp             1    9[COMMON] unsigned char 
  5109 ;; Return value:  Size  Location     Type
  5110 ;;                  4    0[COMMON] unsigned char 
  5111 ;; Registers used:
  5112 ;;		wreg, status,2, status,0
  5113 ;; Tracked objects:
  5114 ;;		On entry : 0/0
  5115 ;;		On exit  : 0/0
  5116 ;;		Unchanged: 0/0
  5117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5118 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5119 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5120 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5121 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5122 ;;Total ram usage:       14 bytes
  5123 ;; Hardware stack levels used:    1
  5124 ;; This function calls:
  5125 ;;		Nothing
  5126 ;; This function is called by:
  5127 ;;		_main
  5128 ;;		_ftoa
  5129 ;; This function uses a non-reentrant model
  5130 ;;
  5131                           
  5132                           
  5133                           ;psect for function ___xxtofl
  5134  0015                     ___xxtofl:	
  5135                           
  5136                           ;incstack = 0
  5137                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  5138                           ;___xxtofl@sign stored from wreg
  5139  0015  00F8               	movwf	___xxtofl@sign
  5140  0016  0878               	movf	___xxtofl@sign,w
  5141  0017  1D03               	btfss	3,2
  5142  0018  1FF3               	btfss	___xxtofl@val+3,7
  5143  0019  282A               	goto	l2600
  5144  001A  0970               	comf	___xxtofl@val,w
  5145  001B  00FA               	movwf	___xxtofl@arg
  5146  001C  0971               	comf	___xxtofl@val+1,w
  5147  001D  00FB               	movwf	___xxtofl@arg+1
  5148  001E  0972               	comf	___xxtofl@val+2,w
  5149  001F  00FC               	movwf	___xxtofl@arg+2
  5150  0020  0973               	comf	___xxtofl@val+3,w
  5151  0021  00FD               	movwf	___xxtofl@arg+3
  5152  0022  0AFA               	incf	___xxtofl@arg,f
  5153  0023  1903               	skipnz
  5154  0024  0AFB               	incf	___xxtofl@arg+1,f
  5155  0025  1903               	skipnz
  5156  0026  0AFC               	incf	___xxtofl@arg+2,f
  5157  0027  1903               	skipnz
  5158  0028  0AFD               	incf	___xxtofl@arg+3,f
  5159  0029  2832               	goto	l758
  5160  002A                     l2600:	
  5161  002A  0873               	movf	___xxtofl@val+3,w
  5162  002B  00FD               	movwf	___xxtofl@arg+3
  5163  002C  0872               	movf	___xxtofl@val+2,w
  5164  002D  00FC               	movwf	___xxtofl@arg+2
  5165  002E  0871               	movf	___xxtofl@val+1,w
  5166  002F  00FB               	movwf	___xxtofl@arg+1
  5167  0030  0870               	movf	___xxtofl@val,w
  5168  0031  00FA               	movwf	___xxtofl@arg
  5169  0032                     l758:	
  5170  0032  0873               	movf	___xxtofl@val+3,w
  5171  0033  0472               	iorwf	___xxtofl@val+2,w
  5172  0034  0471               	iorwf	___xxtofl@val+1,w
  5173  0035  0470               	iorwf	___xxtofl@val,w
  5174  0036  1D03               	skipz
  5175  0037  2841               	goto	l2606
  5176  0038  3000               	movlw	0
  5177  0039  00F3               	movwf	?___xxtofl+3
  5178  003A  3000               	movlw	0
  5179  003B  00F2               	movwf	?___xxtofl+2
  5180  003C  3000               	movlw	0
  5181  003D  00F1               	movwf	?___xxtofl+1
  5182  003E  3000               	movlw	0
  5183  003F  00F0               	movwf	?___xxtofl
  5184  0040  0008               	return
  5185  0041                     l2606:	
  5186  0041  3096               	movlw	150
  5187  0042  00F4               	movwf	??___xxtofl
  5188  0043  0874               	movf	??___xxtofl,w
  5189  0044  00F9               	movwf	___xxtofl@exp
  5190  0045                     l2610:	
  5191  0045  30FE               	movlw	254
  5192  0046  057D               	andwf	___xxtofl@arg+3,w
  5193  0047  1903               	btfsc	3,2
  5194  0048  2868               	goto	l764
  5195  0049  3001               	movlw	1
  5196  004A  00F4               	movwf	??___xxtofl
  5197  004B  0874               	movf	??___xxtofl,w
  5198  004C  07F9               	addwf	___xxtofl@exp,f
  5199  004D  3001               	movlw	1
  5200  004E                     u3295:	
  5201  004E  36FD               	lsrf	___xxtofl@arg+3,f
  5202  004F  0CFC               	rrf	___xxtofl@arg+2,f
  5203  0050  0CFB               	rrf	___xxtofl@arg+1,f
  5204  0051  0CFA               	rrf	___xxtofl@arg,f
  5205  0052  0B89               	decfsz	9,f
  5206  0053  284E               	goto	u3295
  5207  0054  2845               	goto	l2610
  5208  0055                     l2612:	
  5209  0055  3001               	movlw	1
  5210  0056  00F4               	movwf	??___xxtofl
  5211  0057  0874               	movf	??___xxtofl,w
  5212  0058  07F9               	addwf	___xxtofl@exp,f
  5213  0059  3001               	movlw	1
  5214  005A  07FA               	addwf	___xxtofl@arg,f
  5215  005B  3000               	movlw	0
  5216  005C  3DFB               	addwfc	___xxtofl@arg+1,f
  5217  005D  3000               	movlw	0
  5218  005E  3DFC               	addwfc	___xxtofl@arg+2,f
  5219  005F  3000               	movlw	0
  5220  0060  3DFD               	addwfc	___xxtofl@arg+3,f
  5221  0061  3001               	movlw	1
  5222  0062                     u3315:	
  5223  0062  36FD               	lsrf	___xxtofl@arg+3,f
  5224  0063  0CFC               	rrf	___xxtofl@arg+2,f
  5225  0064  0CFB               	rrf	___xxtofl@arg+1,f
  5226  0065  0CFA               	rrf	___xxtofl@arg,f
  5227  0066  0B89               	decfsz	9,f
  5228  0067  2862               	goto	u3315
  5229  0068                     l764:	
  5230  0068  30FF               	movlw	255
  5231  0069  057D               	andwf	___xxtofl@arg+3,w
  5232  006A  1903               	btfsc	3,2
  5233  006B  287A               	goto	l2620
  5234  006C  2855               	goto	l2612
  5235  006D                     l2622:	
  5236  006D  3002               	movlw	2
  5237  006E  0279               	subwf	___xxtofl@exp,w
  5238  006F  1C03               	btfss	3,0
  5239  0070  287C               	goto	l771
  5240  0071  3001               	movlw	1
  5241  0072  02F9               	subwf	___xxtofl@exp,f
  5242  0073  3001               	movlw	1
  5243  0074                     u3335:	
  5244  0074  35FA               	lslf	___xxtofl@arg,f
  5245  0075  0DFB               	rlf	___xxtofl@arg+1,f
  5246  0076  0DFC               	rlf	___xxtofl@arg+2,f
  5247  0077  0DFD               	rlf	___xxtofl@arg+3,f
  5248  0078  0B89               	decfsz	9,f
  5249  0079  2874               	goto	u3335
  5250  007A                     l2620:	
  5251  007A  1FFC               	btfss	___xxtofl@arg+2,7
  5252  007B  286D               	goto	l2622
  5253  007C                     l771:	
  5254  007C  1879               	btfsc	___xxtofl@exp,0
  5255  007D  2886               	goto	l772
  5256  007E  30FF               	movlw	255
  5257  007F  05FA               	andwf	___xxtofl@arg,f
  5258  0080  30FF               	movlw	255
  5259  0081  05FB               	andwf	___xxtofl@arg+1,f
  5260  0082  307F               	movlw	127
  5261  0083  05FC               	andwf	___xxtofl@arg+2,f
  5262  0084  30FF               	movlw	255
  5263  0085  05FD               	andwf	___xxtofl@arg+3,f
  5264  0086                     l772:	
  5265  0086  1003               	clrc
  5266  0087  0CF9               	rrf	___xxtofl@exp,f
  5267  0088  0879               	movf	___xxtofl@exp,w
  5268  0089  00F4               	movwf	??___xxtofl
  5269  008A  01F5               	clrf	??___xxtofl+1
  5270  008B  01F6               	clrf	??___xxtofl+2
  5271  008C  01F7               	clrf	??___xxtofl+3
  5272  008D  3018               	movlw	24
  5273  008E                     u3375:	
  5274  008E  35F4               	lslf	??___xxtofl,f
  5275  008F  0DF5               	rlf	??___xxtofl+1,f
  5276  0090  0DF6               	rlf	??___xxtofl+2,f
  5277  0091  0DF7               	rlf	??___xxtofl+3,f
  5278  0092  0B89               	decfsz	9,f
  5279  0093  288E               	goto	u3375
  5280  0094  0874               	movf	??___xxtofl,w
  5281  0095  04FA               	iorwf	___xxtofl@arg,f
  5282  0096  0875               	movf	??___xxtofl+1,w
  5283  0097  04FB               	iorwf	___xxtofl@arg+1,f
  5284  0098  0876               	movf	??___xxtofl+2,w
  5285  0099  04FC               	iorwf	___xxtofl@arg+2,f
  5286  009A  0877               	movf	??___xxtofl+3,w
  5287  009B  04FD               	iorwf	___xxtofl@arg+3,f
  5288  009C  0878               	movf	___xxtofl@sign,w
  5289  009D  1D03               	btfss	3,2
  5290  009E  1FF3               	btfss	___xxtofl@val+3,7
  5291  009F  28A1               	goto	l2634
  5292  00A0  17FD               	bsf	___xxtofl@arg+3,7
  5293  00A1                     l2634:	
  5294  00A1  087D               	movf	___xxtofl@arg+3,w
  5295  00A2  00F3               	movwf	?___xxtofl+3
  5296  00A3  087C               	movf	___xxtofl@arg+2,w
  5297  00A4  00F2               	movwf	?___xxtofl+2
  5298  00A5  087B               	movf	___xxtofl@arg+1,w
  5299  00A6  00F1               	movwf	?___xxtofl+1
  5300  00A7  087A               	movf	___xxtofl@arg,w
  5301  00A8  00F0               	movwf	?___xxtofl
  5302  00A9  0008               	return
  5303  00AA                     __end_of___xxtofl:	
  5304                           
  5305                           	psect	text12
  5306  0CAE                     __ptext12:	
  5307 ;; *************** function ___fltol *****************
  5308 ;; Defined at:
  5309 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fltol.c"
  5310 ;; Parameters:    Size  Location     Type
  5311 ;;  f1              4   26[BANK0 ] unsigned char 
  5312 ;; Auto vars:     Size  Location     Type
  5313 ;;  exp1            1   36[BANK0 ] unsigned char 
  5314 ;;  sign1           1   35[BANK0 ] unsigned char 
  5315 ;; Return value:  Size  Location     Type
  5316 ;;                  4   26[BANK0 ] long 
  5317 ;; Registers used:
  5318 ;;		wreg, status,2, status,0
  5319 ;; Tracked objects:
  5320 ;;		On entry : 0/0
  5321 ;;		On exit  : 0/0
  5322 ;;		Unchanged: 0/0
  5323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5324 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5325 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5326 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5327 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5328 ;;Total ram usage:       11 bytes
  5329 ;; Hardware stack levels used:    1
  5330 ;; This function calls:
  5331 ;;		Nothing
  5332 ;; This function is called by:
  5333 ;;		_ftoa
  5334 ;; This function uses a non-reentrant model
  5335 ;;
  5336                           
  5337                           
  5338                           ;psect for function ___fltol
  5339  0CAE                     ___fltol:	
  5340                           
  5341                           ;incstack = 0
  5342                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  5343  0CAE  1003               	clrc
  5344  0CAF  0020               	movlb	0	; select bank0
  5345  0CB0  0D3C               	rlf	___fltol@f1+2,w
  5346  0CB1  0D3D               	rlf	___fltol@f1+3,w
  5347  0CB2  00BE               	movwf	??___fltol
  5348  0CB3  083E               	movf	??___fltol,w
  5349  0CB4  00C4               	movwf	___fltol@exp1
  5350  0CB5  0844               	movf	___fltol@exp1,w
  5351  0CB6  1D03               	btfss	3,2
  5352  0CB7  2CC1               	goto	l2418
  5353  0CB8                     l2414:	
  5354  0CB8  3000               	movlw	0
  5355  0CB9  00BD               	movwf	?___fltol+3
  5356  0CBA  3000               	movlw	0
  5357  0CBB  00BC               	movwf	?___fltol+2
  5358  0CBC  3000               	movlw	0
  5359  0CBD  00BB               	movwf	?___fltol+1
  5360  0CBE  3000               	movlw	0
  5361  0CBF  00BA               	movwf	?___fltol
  5362  0CC0  0008               	return
  5363  0CC1                     l2418:	
  5364  0CC1  083A               	movf	___fltol@f1,w
  5365  0CC2  00BE               	movwf	??___fltol
  5366  0CC3  083B               	movf	___fltol@f1+1,w
  5367  0CC4  00BF               	movwf	??___fltol+1
  5368  0CC5  083C               	movf	___fltol@f1+2,w
  5369  0CC6  00C0               	movwf	??___fltol+2
  5370  0CC7  083D               	movf	___fltol@f1+3,w
  5371  0CC8  00C1               	movwf	??___fltol+3
  5372  0CC9  301F               	movlw	31
  5373  0CCA                     u2915:	
  5374  0CCA  36C1               	lsrf	??___fltol+3,f
  5375  0CCB  0CC0               	rrf	??___fltol+2,f
  5376  0CCC  0CBF               	rrf	??___fltol+1,f
  5377  0CCD  0CBE               	rrf	??___fltol,f
  5378  0CCE  0B89               	decfsz	9,f
  5379  0CCF  2CCA               	goto	u2915
  5380  0CD0  083E               	movf	??___fltol,w
  5381  0CD1  00C2               	movwf	??___fltol+4
  5382  0CD2  0842               	movf	??___fltol+4,w
  5383  0CD3  00C3               	movwf	___fltol@sign1
  5384  0CD4  17BC               	bsf	___fltol@f1+2,7
  5385  0CD5  30FF               	movlw	255
  5386  0CD6  05BA               	andwf	___fltol@f1,f
  5387  0CD7  30FF               	movlw	255
  5388  0CD8  05BB               	andwf	___fltol@f1+1,f
  5389  0CD9  30FF               	movlw	255
  5390  0CDA  05BC               	andwf	___fltol@f1+2,f
  5391  0CDB  3000               	movlw	0
  5392  0CDC  05BD               	andwf	___fltol@f1+3,f
  5393  0CDD  3096               	movlw	150
  5394  0CDE  02C4               	subwf	___fltol@exp1,f
  5395  0CDF  1FC4               	btfss	___fltol@exp1,7
  5396  0CE0  2CF4               	goto	l2436
  5397  0CE1  0844               	movf	___fltol@exp1,w
  5398  0CE2  3A80               	xorlw	128
  5399  0CE3  3E97               	addlw	151
  5400  0CE4  1C03               	btfss	3,0
  5401  0CE5  2CB8               	goto	l2414
  5402  0CE6                     l2434:	
  5403  0CE6  3001               	movlw	1
  5404  0CE7                     u2945:	
  5405  0CE7  36BD               	lsrf	___fltol@f1+3,f
  5406  0CE8  0CBC               	rrf	___fltol@f1+2,f
  5407  0CE9  0CBB               	rrf	___fltol@f1+1,f
  5408  0CEA  0CBA               	rrf	___fltol@f1,f
  5409  0CEB  0B89               	decfsz	9,f
  5410  0CEC  2CE7               	goto	u2945
  5411  0CED  3001               	movlw	1
  5412  0CEE  00BE               	movwf	??___fltol
  5413  0CEF  083E               	movf	??___fltol,w
  5414  0CF0  07C4               	addwf	___fltol@exp1,f
  5415  0CF1  1903               	btfsc	3,2
  5416  0CF2  2D05               	goto	l2444
  5417  0CF3  2CE6               	goto	l2434
  5418  0CF4                     l2436:	
  5419  0CF4  3020               	movlw	32
  5420  0CF5  0244               	subwf	___fltol@exp1,w
  5421  0CF6  1803               	btfsc	3,0
  5422  0CF7  2CB8               	goto	l2414
  5423  0CF8                     l524:	
  5424  0CF8  0844               	movf	___fltol@exp1,w
  5425  0CF9  1903               	btfsc	3,2
  5426  0CFA  2D05               	goto	l2444
  5427  0CFB  3001               	movlw	1
  5428  0CFC                     u2975:	
  5429  0CFC  35BA               	lslf	___fltol@f1,f
  5430  0CFD  0DBB               	rlf	___fltol@f1+1,f
  5431  0CFE  0DBC               	rlf	___fltol@f1+2,f
  5432  0CFF  0DBD               	rlf	___fltol@f1+3,f
  5433  0D00  0B89               	decfsz	9,f
  5434  0D01  2CFC               	goto	u2975
  5435  0D02  3001               	movlw	1
  5436  0D03  02C4               	subwf	___fltol@exp1,f
  5437  0D04  2CF8               	goto	l524
  5438  0D05                     l2444:	
  5439  0D05  0843               	movf	___fltol@sign1,w
  5440  0D06  1903               	btfsc	3,2
  5441  0D07  0008               	return
  5442  0D08  09BA               	comf	___fltol@f1,f
  5443  0D09  09BB               	comf	___fltol@f1+1,f
  5444  0D0A  09BC               	comf	___fltol@f1+2,f
  5445  0D0B  09BD               	comf	___fltol@f1+3,f
  5446  0D0C  0ABA               	incf	___fltol@f1,f
  5447  0D0D  1903               	skipnz
  5448  0D0E  0ABB               	incf	___fltol@f1+1,f
  5449  0D0F  1903               	skipnz
  5450  0D10  0ABC               	incf	___fltol@f1+2,f
  5451  0D11  1903               	skipnz
  5452  0D12  0ABD               	incf	___fltol@f1+3,f
  5453  0D13  0008               	return
  5454  0D14                     __end_of___fltol:	
  5455                           
  5456                           	psect	text13
  5457  176E                     __ptext13:	
  5458 ;; *************** function ___flsub *****************
  5459 ;; Defined at:
  5460 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  5461 ;; Parameters:    Size  Location     Type
  5462 ;;  a               4   46[BANK0 ] long 
  5463 ;;  b               4   50[BANK0 ] long 
  5464 ;; Auto vars:     Size  Location     Type
  5465 ;;		None
  5466 ;; Return value:  Size  Location     Type
  5467 ;;                  4   46[BANK0 ] long 
  5468 ;; Registers used:
  5469 ;;		wreg, status,2, status,0, pclath, cstack
  5470 ;; Tracked objects:
  5471 ;;		On entry : 0/0
  5472 ;;		On exit  : 0/0
  5473 ;;		Unchanged: 0/0
  5474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5475 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5478 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5479 ;;Total ram usage:        8 bytes
  5480 ;; Hardware stack levels used:    1
  5481 ;; Hardware stack levels required when called:    1
  5482 ;; This function calls:
  5483 ;;		___fladd
  5484 ;; This function is called by:
  5485 ;;		_main
  5486 ;;		_ftoa
  5487 ;; This function uses a non-reentrant model
  5488 ;;
  5489                           
  5490                           
  5491                           ;psect for function ___flsub
  5492  176E                     ___flsub:	
  5493                           
  5494                           ;incstack = 0
  5495                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
  5496  176E  3080               	movlw	128
  5497  176F  0020               	movlb	0	; select bank0
  5498  1770  06D1               	xorwf	___flsub@a+3,f
  5499  1771  0855               	movf	___flsub@b+3,w
  5500  1772  00BD               	movwf	___fladd@b+3
  5501  1773  0854               	movf	___flsub@b+2,w
  5502  1774  00BC               	movwf	___fladd@b+2
  5503  1775  0853               	movf	___flsub@b+1,w
  5504  1776  00BB               	movwf	___fladd@b+1
  5505  1777  0852               	movf	___flsub@b,w
  5506  1778  00BA               	movwf	___fladd@b
  5507  1779  0851               	movf	___flsub@a+3,w
  5508  177A  00C1               	movwf	___fladd@a+3
  5509  177B  0850               	movf	___flsub@a+2,w
  5510  177C  00C0               	movwf	___fladd@a+2
  5511  177D  084F               	movf	___flsub@a+1,w
  5512  177E  00BF               	movwf	___fladd@a+1
  5513  177F  084E               	movf	___flsub@a,w
  5514  1780  00BE               	movwf	___fladd@a
  5515  1781  3183  23E8         	fcall	___fladd
  5516  1783  0020               	movlb	0	; select bank0
  5517  1784  083D               	movf	?___fladd+3,w
  5518  1785  00D1               	movwf	?___flsub+3
  5519  1786  083C               	movf	?___fladd+2,w
  5520  1787  00D0               	movwf	?___flsub+2
  5521  1788  083B               	movf	?___fladd+1,w
  5522  1789  00CF               	movwf	?___flsub+1
  5523  178A  083A               	movf	?___fladd,w
  5524  178B  00CE               	movwf	?___flsub
  5525  178C  0008               	return
  5526  178D                     __end_of___flsub:	
  5527                           
  5528                           	psect	text14
  5529  03E8                     __ptext14:	
  5530 ;; *************** function ___fladd *****************
  5531 ;; Defined at:
  5532 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  5533 ;; Parameters:    Size  Location     Type
  5534 ;;  b               4   26[BANK0 ] long 
  5535 ;;  a               4   30[BANK0 ] long 
  5536 ;; Auto vars:     Size  Location     Type
  5537 ;;  grs             1   45[BANK0 ] unsigned char 
  5538 ;;  bexp            1   44[BANK0 ] unsigned char 
  5539 ;;  aexp            1   43[BANK0 ] unsigned char 
  5540 ;;  signs           1   42[BANK0 ] unsigned char 
  5541 ;; Return value:  Size  Location     Type
  5542 ;;                  4   26[BANK0 ] unsigned char 
  5543 ;; Registers used:
  5544 ;;		wreg, status,2, status,0
  5545 ;; Tracked objects:
  5546 ;;		On entry : 0/0
  5547 ;;		On exit  : 0/0
  5548 ;;		Unchanged: 0/0
  5549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5550 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5551 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5552 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5553 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5554 ;;Total ram usage:       20 bytes
  5555 ;; Hardware stack levels used:    1
  5556 ;; This function calls:
  5557 ;;		Nothing
  5558 ;; This function is called by:
  5559 ;;		_main
  5560 ;;		___flsub
  5561 ;; This function uses a non-reentrant model
  5562 ;;
  5563                           
  5564                           
  5565                           ;psect for function ___fladd
  5566  03E8                     ___fladd:	
  5567                           
  5568                           ;incstack = 0
  5569                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  5570  03E8  0020               	movlb	0	; select bank0
  5571  03E9  083D               	movf	___fladd@b+3,w
  5572  03EA  3980               	andlw	128
  5573  03EB  00C2               	movwf	??___fladd
  5574  03EC  0842               	movf	??___fladd,w
  5575  03ED  00CA               	movwf	___fladd@signs
  5576  03EE  353D               	lslf	___fladd@b+3,w
  5577  03EF  00C2               	movwf	??___fladd
  5578  03F0  0842               	movf	??___fladd,w
  5579  03F1  00CC               	movwf	___fladd@bexp
  5580  03F2  1BBC               	btfsc	___fladd@b+2,7
  5581  03F3  144C               	bsf	___fladd@bexp,0
  5582  03F4  084C               	movf	___fladd@bexp,w
  5583  03F5  1903               	btfsc	3,2
  5584  03F6  2C05               	goto	l2050
  5585  03F7  0A4C               	incf	___fladd@bexp,w
  5586  03F8  1D03               	btfss	3,2
  5587  03F9  2C02               	goto	l2046
  5588  03FA  3000               	movlw	0
  5589  03FB  00BD               	movwf	___fladd@b+3
  5590  03FC  3000               	movlw	0
  5591  03FD  00BC               	movwf	___fladd@b+2
  5592  03FE  3000               	movlw	0
  5593  03FF  00BB               	movwf	___fladd@b+1
  5594  0400  3000               	movlw	0
  5595  0401  00BA               	movwf	___fladd@b
  5596  0402                     l2046:	
  5597  0402  17BC               	bsf	___fladd@b+2,7
  5598  0403  01BD               	clrf	___fladd@b+3
  5599  0404  2C0D               	goto	l2052
  5600  0405                     l2050:	
  5601  0405  3000               	movlw	0
  5602  0406  00BD               	movwf	___fladd@b+3
  5603  0407  3000               	movlw	0
  5604  0408  00BC               	movwf	___fladd@b+2
  5605  0409  3000               	movlw	0
  5606  040A  00BB               	movwf	___fladd@b+1
  5607  040B  3000               	movlw	0
  5608  040C  00BA               	movwf	___fladd@b
  5609  040D                     l2052:	
  5610  040D  0841               	movf	___fladd@a+3,w
  5611  040E  3980               	andlw	128
  5612  040F  00C2               	movwf	??___fladd
  5613  0410  0842               	movf	??___fladd,w
  5614  0411  00CB               	movwf	___fladd@aexp
  5615  0412  084B               	movf	___fladd@aexp,w
  5616  0413  064A               	xorwf	___fladd@signs,w
  5617  0414  1D03               	btfss	3,2
  5618  0415  174A               	bsf	___fladd@signs,6
  5619  0416  3541               	lslf	___fladd@a+3,w
  5620  0417  00C2               	movwf	??___fladd
  5621  0418  0842               	movf	??___fladd,w
  5622  0419  00CB               	movwf	___fladd@aexp
  5623  041A  1BC0               	btfsc	___fladd@a+2,7
  5624  041B  144B               	bsf	___fladd@aexp,0
  5625  041C  084B               	movf	___fladd@aexp,w
  5626  041D  1903               	btfsc	3,2
  5627  041E  2C2D               	goto	l2074
  5628  041F  0A4B               	incf	___fladd@aexp,w
  5629  0420  1D03               	btfss	3,2
  5630  0421  2C2A               	goto	l2070
  5631  0422  3000               	movlw	0
  5632  0423  00C1               	movwf	___fladd@a+3
  5633  0424  3000               	movlw	0
  5634  0425  00C0               	movwf	___fladd@a+2
  5635  0426  3000               	movlw	0
  5636  0427  00BF               	movwf	___fladd@a+1
  5637  0428  3000               	movlw	0
  5638  0429  00BE               	movwf	___fladd@a
  5639  042A                     l2070:	
  5640  042A  17C0               	bsf	___fladd@a+2,7
  5641  042B  01C1               	clrf	___fladd@a+3
  5642  042C  2C35               	goto	l624
  5643  042D                     l2074:	
  5644  042D  3000               	movlw	0
  5645  042E  00C1               	movwf	___fladd@a+3
  5646  042F  3000               	movlw	0
  5647  0430  00C0               	movwf	___fladd@a+2
  5648  0431  3000               	movlw	0
  5649  0432  00BF               	movwf	___fladd@a+1
  5650  0433  3000               	movlw	0
  5651  0434  00BE               	movwf	___fladd@a
  5652  0435                     l624:	
  5653  0435  084C               	movf	___fladd@bexp,w
  5654  0436  024B               	subwf	___fladd@aexp,w
  5655  0437  1803               	skipnc
  5656  0438  2C7B               	goto	l2110
  5657  0439  1F4A               	btfss	___fladd@signs,6
  5658  043A  2C3F               	goto	l2080
  5659  043B  3080               	movlw	128
  5660  043C  00C2               	movwf	??___fladd
  5661  043D  0842               	movf	??___fladd,w
  5662  043E  06CA               	xorwf	___fladd@signs,f
  5663  043F                     l2080:	
  5664  043F  084C               	movf	___fladd@bexp,w
  5665  0440  00C2               	movwf	??___fladd
  5666  0441  0842               	movf	??___fladd,w
  5667  0442  00CD               	movwf	___fladd@grs
  5668  0443  084B               	movf	___fladd@aexp,w
  5669  0444  00C2               	movwf	??___fladd
  5670  0445  0842               	movf	??___fladd,w
  5671  0446  00CC               	movwf	___fladd@bexp
  5672  0447  084D               	movf	___fladd@grs,w
  5673  0448  00C2               	movwf	??___fladd
  5674  0449  0842               	movf	??___fladd,w
  5675  044A  00CB               	movwf	___fladd@aexp
  5676  044B  083A               	movf	___fladd@b,w
  5677  044C  00C2               	movwf	??___fladd
  5678  044D  0842               	movf	??___fladd,w
  5679  044E  00CD               	movwf	___fladd@grs
  5680  044F  083E               	movf	___fladd@a,w
  5681  0450  00C2               	movwf	??___fladd
  5682  0451  0842               	movf	??___fladd,w
  5683  0452  00BA               	movwf	___fladd@b
  5684  0453  084D               	movf	___fladd@grs,w
  5685  0454  00C2               	movwf	??___fladd
  5686  0455  0842               	movf	??___fladd,w
  5687  0456  00BE               	movwf	___fladd@a
  5688  0457  083B               	movf	___fladd@b+1,w
  5689  0458  00C2               	movwf	??___fladd
  5690  0459  0842               	movf	??___fladd,w
  5691  045A  00CD               	movwf	___fladd@grs
  5692  045B  083F               	movf	___fladd@a+1,w
  5693  045C  00C2               	movwf	??___fladd
  5694  045D  0842               	movf	??___fladd,w
  5695  045E  00BB               	movwf	___fladd@b+1
  5696  045F  084D               	movf	___fladd@grs,w
  5697  0460  00C2               	movwf	??___fladd
  5698  0461  0842               	movf	??___fladd,w
  5699  0462  00BF               	movwf	___fladd@a+1
  5700  0463  083C               	movf	___fladd@b+2,w
  5701  0464  00C2               	movwf	??___fladd
  5702  0465  0842               	movf	??___fladd,w
  5703  0466  00CD               	movwf	___fladd@grs
  5704  0467  0840               	movf	___fladd@a+2,w
  5705  0468  00C2               	movwf	??___fladd
  5706  0469  0842               	movf	??___fladd,w
  5707  046A  00BC               	movwf	___fladd@b+2
  5708  046B  084D               	movf	___fladd@grs,w
  5709  046C  00C2               	movwf	??___fladd
  5710  046D  0842               	movf	??___fladd,w
  5711  046E  00C0               	movwf	___fladd@a+2
  5712  046F  083D               	movf	___fladd@b+3,w
  5713  0470  00C2               	movwf	??___fladd
  5714  0471  0842               	movf	??___fladd,w
  5715  0472  00CD               	movwf	___fladd@grs
  5716  0473  0841               	movf	___fladd@a+3,w
  5717  0474  00C2               	movwf	??___fladd
  5718  0475  0842               	movf	??___fladd,w
  5719  0476  00BD               	movwf	___fladd@b+3
  5720  0477  084D               	movf	___fladd@grs,w
  5721  0478  00C2               	movwf	??___fladd
  5722  0479  0842               	movf	??___fladd,w
  5723  047A  00C1               	movwf	___fladd@a+3
  5724  047B                     l2110:	
  5725  047B  01CD               	clrf	___fladd@grs
  5726  047C  084B               	movf	___fladd@aexp,w
  5727  047D  00C2               	movwf	??___fladd
  5728  047E  01C3               	clrf	??___fladd+1
  5729  047F  0843               	movf	??___fladd+1,w
  5730  0480  00C5               	movwf	??___fladd+3
  5731  0481  084C               	movf	___fladd@bexp,w
  5732  0482  0242               	subwf	??___fladd,w
  5733  0483  00C4               	movwf	??___fladd+2
  5734  0484  1C03               	skipc
  5735  0485  03C5               	decf	??___fladd+3,f
  5736  0486  0845               	movf	??___fladd+3,w
  5737  0487  3A80               	xorlw	128
  5738  0488  00C6               	movwf	??___fladd+4
  5739  0489  3080               	movlw	128
  5740  048A  0246               	subwf	??___fladd+4,w
  5741  048B  1D03               	skipz
  5742  048C  2C8F               	goto	u2275
  5743  048D  301A               	movlw	26
  5744  048E  0244               	subwf	??___fladd+2,w
  5745  048F                     u2275:	
  5746  048F  1C03               	skipc
  5747  0490  2CC3               	goto	l2128
  5748  0491  0020               	movlb	0	; select bank0
  5749  0492  083D               	movf	___fladd@b+3,w
  5750  0493  043C               	iorwf	___fladd@b+2,w
  5751  0494  043B               	iorwf	___fladd@b+1,w
  5752  0495  043A               	iorwf	___fladd@b,w
  5753  0496  1903               	btfsc	3,2
  5754  0497  2C9A               	goto	u2280
  5755  0498  3001               	movlw	1
  5756  0499  2C9B               	goto	u2290
  5757  049A                     u2280:	
  5758  049A  3000               	movlw	0
  5759  049B                     u2290:	
  5760  049B  00C2               	movwf	??___fladd
  5761  049C  0842               	movf	??___fladd,w
  5762  049D  00CD               	movwf	___fladd@grs
  5763  049E  3000               	movlw	0
  5764  049F  00BD               	movwf	___fladd@b+3
  5765  04A0  3000               	movlw	0
  5766  04A1  00BC               	movwf	___fladd@b+2
  5767  04A2  3000               	movlw	0
  5768  04A3  00BB               	movwf	___fladd@b+1
  5769  04A4  3000               	movlw	0
  5770  04A5  00BA               	movwf	___fladd@b
  5771  04A6  084B               	movf	___fladd@aexp,w
  5772  04A7  00C2               	movwf	??___fladd
  5773  04A8  0842               	movf	??___fladd,w
  5774  04A9  00CC               	movwf	___fladd@bexp
  5775  04AA  2CC8               	goto	l628
  5776  04AB                     l630:	
  5777  04AB  1C4D               	btfss	___fladd@grs,0
  5778  04AC  2CB3               	goto	l2118
  5779  04AD  364D               	lsrf	___fladd@grs,w
  5780  04AE  3801               	iorlw	1
  5781  04AF  00C2               	movwf	??___fladd
  5782  04B0  0842               	movf	??___fladd,w
  5783  04B1  00CD               	movwf	___fladd@grs
  5784  04B2  2CB5               	goto	l2120
  5785  04B3                     l2118:	
  5786  04B3  1003               	clrc
  5787  04B4  0CCD               	rrf	___fladd@grs,f
  5788  04B5                     l2120:	
  5789  04B5  183A               	btfsc	___fladd@b,0
  5790  04B6  17CD               	bsf	___fladd@grs,7
  5791  04B7  3001               	movlw	1
  5792  04B8  00C2               	movwf	??___fladd
  5793  04B9                     u2325:	
  5794  04B9  37BD               	asrf	___fladd@b+3,f
  5795  04BA  0CBC               	rrf	___fladd@b+2,f
  5796  04BB  0CBB               	rrf	___fladd@b+1,f
  5797  04BC  0CBA               	rrf	___fladd@b,f
  5798  04BD  0BC2               	decfsz	??___fladd& (0+127),f
  5799  04BE  2CB9               	goto	u2325
  5800  04BF  3001               	movlw	1
  5801  04C0  00C2               	movwf	??___fladd
  5802  04C1  0842               	movf	??___fladd,w
  5803  04C2  07CC               	addwf	___fladd@bexp,f
  5804  04C3                     l2128:	
  5805  04C3  0020               	movlb	0	; select bank0
  5806  04C4  084B               	movf	___fladd@aexp,w
  5807  04C5  024C               	subwf	___fladd@bexp,w
  5808  04C6  1C03               	skipc
  5809  04C7  2CAB               	goto	l630
  5810  04C8                     l628:	
  5811  04C8  1B4A               	btfsc	___fladd@signs,6
  5812  04C9  2CF9               	goto	l2154
  5813  04CA  084C               	movf	___fladd@bexp,w
  5814  04CB  1D03               	btfss	3,2
  5815  04CC  2CD6               	goto	l2136
  5816  04CD  3000               	movlw	0
  5817  04CE  00BD               	movwf	?___fladd+3
  5818  04CF  3000               	movlw	0
  5819  04D0  00BC               	movwf	?___fladd+2
  5820  04D1  3000               	movlw	0
  5821  04D2  00BB               	movwf	?___fladd+1
  5822  04D3  3000               	movlw	0
  5823  04D4  00BA               	movwf	?___fladd
  5824  04D5  0008               	return
  5825  04D6                     l2136:	
  5826  04D6  083E               	movf	___fladd@a,w
  5827  04D7  07BA               	addwf	___fladd@b,f
  5828  04D8  083F               	movf	___fladd@a+1,w
  5829  04D9  3DBB               	addwfc	___fladd@b+1,f
  5830  04DA  0840               	movf	___fladd@a+2,w
  5831  04DB  3DBC               	addwfc	___fladd@b+2,f
  5832  04DC  0841               	movf	___fladd@a+3,w
  5833  04DD  3DBD               	addwfc	___fladd@b+3,f
  5834  04DE  1C3D               	btfss	___fladd@b+3,0
  5835  04DF  2D73               	goto	l2188
  5836  04E0  1C4D               	btfss	___fladd@grs,0
  5837  04E1  2CE8               	goto	l2144
  5838  04E2  364D               	lsrf	___fladd@grs,w
  5839  04E3  3801               	iorlw	1
  5840  04E4  00C2               	movwf	??___fladd
  5841  04E5  0842               	movf	??___fladd,w
  5842  04E6  00CD               	movwf	___fladd@grs
  5843  04E7  2CEA               	goto	l2146
  5844  04E8                     l2144:	
  5845  04E8  1003               	clrc
  5846  04E9  0CCD               	rrf	___fladd@grs,f
  5847  04EA                     l2146:	
  5848  04EA  183A               	btfsc	___fladd@b,0
  5849  04EB  17CD               	bsf	___fladd@grs,7
  5850  04EC  3001               	movlw	1
  5851  04ED  00C2               	movwf	??___fladd
  5852  04EE                     u2395:	
  5853  04EE  37BD               	asrf	___fladd@b+3,f
  5854  04EF  0CBC               	rrf	___fladd@b+2,f
  5855  04F0  0CBB               	rrf	___fladd@b+1,f
  5856  04F1  0CBA               	rrf	___fladd@b,f
  5857  04F2  0BC2               	decfsz	??___fladd& (0+127),f
  5858  04F3  2CEE               	goto	u2395
  5859  04F4  3001               	movlw	1
  5860  04F5  00C2               	movwf	??___fladd
  5861  04F6  0842               	movf	??___fladd,w
  5862  04F7  07CC               	addwf	___fladd@bexp,f
  5863  04F8  2D73               	goto	l2188
  5864  04F9                     l2154:	
  5865  04F9  083D               	movf	___fladd@b+3,w
  5866  04FA  3A80               	xorlw	128
  5867  04FB  00C2               	movwf	??___fladd
  5868  04FC  0841               	movf	___fladd@a+3,w
  5869  04FD  3A80               	xorlw	128
  5870  04FE  0242               	subwf	??___fladd,w
  5871  04FF  1D03               	skipz
  5872  0500  2D0B               	goto	u2403
  5873  0501  0840               	movf	___fladd@a+2,w
  5874  0502  023C               	subwf	___fladd@b+2,w
  5875  0503  1D03               	skipz
  5876  0504  2D0B               	goto	u2403
  5877  0505  083F               	movf	___fladd@a+1,w
  5878  0506  023B               	subwf	___fladd@b+1,w
  5879  0507  1D03               	skipz
  5880  0508  2D0B               	goto	u2403
  5881  0509  083E               	movf	___fladd@a,w
  5882  050A  023A               	subwf	___fladd@b,w
  5883  050B                     u2403:	
  5884  050B  1803               	skipnc
  5885  050C  2D43               	goto	l2164
  5886  050D  30FF               	movlw	255
  5887  050E  00C2               	movwf	??___fladd
  5888  050F  30FF               	movlw	255
  5889  0510  00C3               	movwf	??___fladd+1
  5890  0511  30FF               	movlw	255
  5891  0512  00C4               	movwf	??___fladd+2
  5892  0513  30FF               	movlw	255
  5893  0514  00C5               	movwf	??___fladd+3
  5894  0515  083A               	movf	___fladd@b,w
  5895  0516  023E               	subwf	___fladd@a,w
  5896  0517  00C6               	movwf	??___fladd+4
  5897  0518  083B               	movf	___fladd@b+1,w
  5898  0519  3B3F               	subwfb	___fladd@a+1,w
  5899  051A  00C7               	movwf	??___fladd+5
  5900  051B  083C               	movf	___fladd@b+2,w
  5901  051C  3B40               	subwfb	___fladd@a+2,w
  5902  051D  00C8               	movwf	??___fladd+6
  5903  051E  083D               	movf	___fladd@b+3,w
  5904  051F  3B41               	subwfb	___fladd@a+3,w
  5905  0520  00C9               	movwf	??___fladd+7
  5906  0521  0846               	movf	??___fladd+4,w
  5907  0522  07C2               	addwf	??___fladd,f
  5908  0523  0847               	movf	??___fladd+5,w
  5909  0524  3DC3               	addwfc	??___fladd+1,f
  5910  0525  0848               	movf	??___fladd+6,w
  5911  0526  3DC4               	addwfc	??___fladd+2,f
  5912  0527  0849               	movf	??___fladd+7,w
  5913  0528  3DC5               	addwfc	??___fladd+3,f
  5914  0529  0845               	movf	??___fladd+3,w
  5915  052A  00BD               	movwf	___fladd@b+3
  5916  052B  0844               	movf	??___fladd+2,w
  5917  052C  00BC               	movwf	___fladd@b+2
  5918  052D  0843               	movf	??___fladd+1,w
  5919  052E  00BB               	movwf	___fladd@b+1
  5920  052F  0842               	movf	??___fladd,w
  5921  0530  00BA               	movwf	___fladd@b
  5922  0531  3080               	movlw	128
  5923  0532  00C2               	movwf	??___fladd
  5924  0533  0842               	movf	??___fladd,w
  5925  0534  06CA               	xorwf	___fladd@signs,f
  5926  0535  09CD               	comf	___fladd@grs,f
  5927  0536  0ACD               	incf	___fladd@grs,f
  5928  0537  084D               	movf	___fladd@grs,w
  5929  0538  1D03               	btfss	3,2
  5930  0539  2D4B               	goto	l645
  5931  053A  3001               	movlw	1
  5932  053B  07BA               	addwf	___fladd@b,f
  5933  053C  3000               	movlw	0
  5934  053D  3DBB               	addwfc	___fladd@b+1,f
  5935  053E  3000               	movlw	0
  5936  053F  3DBC               	addwfc	___fladd@b+2,f
  5937  0540  3000               	movlw	0
  5938  0541  3DBD               	addwfc	___fladd@b+3,f
  5939  0542  2D4B               	goto	l645
  5940  0543                     l2164:	
  5941  0543  083E               	movf	___fladd@a,w
  5942  0544  02BA               	subwf	___fladd@b,f
  5943  0545  083F               	movf	___fladd@a+1,w
  5944  0546  3BBB               	subwfb	___fladd@b+1,f
  5945  0547  0840               	movf	___fladd@a+2,w
  5946  0548  3BBC               	subwfb	___fladd@b+2,f
  5947  0549  0841               	movf	___fladd@a+3,w
  5948  054A  3BBD               	subwfb	___fladd@b+3,f
  5949  054B                     l645:	
  5950  054B  083D               	movf	___fladd@b+3,w
  5951  054C  043C               	iorwf	___fladd@b+2,w
  5952  054D  043B               	iorwf	___fladd@b+1,w
  5953  054E  043A               	iorwf	___fladd@b,w
  5954  054F  1D03               	skipz
  5955  0550  2D71               	goto	l2186
  5956  0551  084D               	movf	___fladd@grs,w
  5957  0552  1D03               	btfss	3,2
  5958  0553  2D71               	goto	l2186
  5959  0554  3000               	movlw	0
  5960  0555  00BD               	movwf	?___fladd+3
  5961  0556  3000               	movlw	0
  5962  0557  00BC               	movwf	?___fladd+2
  5963  0558  3000               	movlw	0
  5964  0559  00BB               	movwf	?___fladd+1
  5965  055A  3000               	movlw	0
  5966  055B  00BA               	movwf	?___fladd
  5967  055C  0008               	return
  5968  055D                     l2172:	
  5969  055D  3001               	movlw	1
  5970  055E                     u2445:	
  5971  055E  35BA               	lslf	___fladd@b,f
  5972  055F  0DBB               	rlf	___fladd@b+1,f
  5973  0560  0DBC               	rlf	___fladd@b+2,f
  5974  0561  0DBD               	rlf	___fladd@b+3,f
  5975  0562  0B89               	decfsz	9,f
  5976  0563  2D5E               	goto	u2445
  5977  0564  1BCD               	btfsc	___fladd@grs,7
  5978  0565  143A               	bsf	___fladd@b,0
  5979  0566  1C4D               	btfss	___fladd@grs,0
  5980  0567  2D6A               	goto	l2180
  5981  0568  1403               	setc
  5982  0569  2D6B               	goto	L3
  5983  056A                     l2180:	
  5984  056A  1003               	clrc
  5985  056B                     L3:	
  5986  056B  0DCD               	rlf	___fladd@grs,f
  5987  056C  084C               	movf	___fladd@bexp,w
  5988  056D  1903               	btfsc	3,2
  5989  056E  2D71               	goto	l2186
  5990  056F  3001               	movlw	1
  5991  0570  02CC               	subwf	___fladd@bexp,f
  5992  0571                     l2186:	
  5993  0571  1FBC               	btfss	___fladd@b+2,7
  5994  0572  2D5D               	goto	l2172
  5995  0573                     l2188:	
  5996  0573  01CB               	clrf	___fladd@aexp
  5997  0574  1FCD               	btfss	___fladd@grs,7
  5998  0575  2D7E               	goto	l2198
  5999  0576  084D               	movf	___fladd@grs,w
  6000  0577  397F               	andlw	127
  6001  0578  1903               	btfsc	3,2
  6002  0579  183A               	btfsc	___fladd@b,0
  6003  057A  2D7C               	goto	l2194
  6004  057B  2D7E               	goto	l2198
  6005  057C                     l2194:	
  6006  057C  01CB               	clrf	___fladd@aexp
  6007  057D  0ACB               	incf	___fladd@aexp,f
  6008  057E                     l2198:	
  6009  057E  084B               	movf	___fladd@aexp,w
  6010  057F  1903               	btfsc	3,2
  6011  0580  2DAA               	goto	l658
  6012  0581  3001               	movlw	1
  6013  0582  07BA               	addwf	___fladd@b,f
  6014  0583  3000               	movlw	0
  6015  0584  3DBB               	addwfc	___fladd@b+1,f
  6016  0585  3000               	movlw	0
  6017  0586  3DBC               	addwfc	___fladd@b+2,f
  6018  0587  3000               	movlw	0
  6019  0588  3DBD               	addwfc	___fladd@b+3,f
  6020  0589  1C3D               	btfss	___fladd@b+3,0
  6021  058A  2DAA               	goto	l658
  6022  058B  083A               	movf	___fladd@b,w
  6023  058C  00C2               	movwf	??___fladd
  6024  058D  083B               	movf	___fladd@b+1,w
  6025  058E  00C3               	movwf	??___fladd+1
  6026  058F  083C               	movf	___fladd@b+2,w
  6027  0590  00C4               	movwf	??___fladd+2
  6028  0591  083D               	movf	___fladd@b+3,w
  6029  0592  00C5               	movwf	??___fladd+3
  6030  0593  3001               	movlw	1
  6031  0594  00C6               	movwf	??___fladd+4
  6032  0595                     u2545:	
  6033  0595  37C5               	asrf	??___fladd+3,f
  6034  0596  0CC4               	rrf	??___fladd+2,f
  6035  0597  0CC3               	rrf	??___fladd+1,f
  6036  0598  0CC2               	rrf	??___fladd,f
  6037  0599  0BC6               	decfsz	??___fladd+4,f
  6038  059A  2D95               	goto	u2545
  6039  059B  0845               	movf	??___fladd+3,w
  6040  059C  00BD               	movwf	___fladd@b+3
  6041  059D  0844               	movf	??___fladd+2,w
  6042  059E  00BC               	movwf	___fladd@b+2
  6043  059F  0843               	movf	??___fladd+1,w
  6044  05A0  00BB               	movwf	___fladd@b+1
  6045  05A1  0842               	movf	??___fladd,w
  6046  05A2  00BA               	movwf	___fladd@b
  6047  05A3  0A4C               	incf	___fladd@bexp,w
  6048  05A4  1903               	btfsc	3,2
  6049  05A5  2DAA               	goto	l658
  6050  05A6  3001               	movlw	1
  6051  05A7  00C2               	movwf	??___fladd
  6052  05A8  0842               	movf	??___fladd,w
  6053  05A9  07CC               	addwf	___fladd@bexp,f
  6054  05AA                     l658:	
  6055  05AA  0A4C               	incf	___fladd@bexp,w
  6056  05AB  1D03               	btfss	3,2
  6057  05AC  084C               	movf	___fladd@bexp,w
  6058  05AD  1D03               	btfss	3,2
  6059  05AE  2DBA               	goto	l2216
  6060  05AF  3000               	movlw	0
  6061  05B0  00BD               	movwf	___fladd@b+3
  6062  05B1  3000               	movlw	0
  6063  05B2  00BC               	movwf	___fladd@b+2
  6064  05B3  3000               	movlw	0
  6065  05B4  00BB               	movwf	___fladd@b+1
  6066  05B5  3000               	movlw	0
  6067  05B6  00BA               	movwf	___fladd@b
  6068  05B7  084C               	movf	___fladd@bexp,w
  6069  05B8  1903               	btfsc	3,2
  6070  05B9  01CA               	clrf	___fladd@signs
  6071  05BA                     l2216:	
  6072  05BA  1C4C               	btfss	___fladd@bexp,0
  6073  05BB  2DBE               	goto	l2220
  6074  05BC  17BC               	bsf	___fladd@b+2,7
  6075  05BD  2DC2               	goto	l666
  6076  05BE                     l2220:	
  6077  05BE  307F               	movlw	127
  6078  05BF  00C2               	movwf	??___fladd
  6079  05C0  0842               	movf	??___fladd,w
  6080  05C1  05BC               	andwf	___fladd@b+2,f
  6081  05C2                     l666:	
  6082  05C2  364C               	lsrf	___fladd@bexp,w
  6083  05C3  00C2               	movwf	??___fladd
  6084  05C4  0842               	movf	??___fladd,w
  6085  05C5  00BD               	movwf	___fladd@b+3
  6086  05C6  1FCA               	btfss	___fladd@signs,7
  6087  05C7  0008               	return
  6088  05C8  17BD               	bsf	___fladd@b+3,7
  6089  05C9  0008               	return
  6090  05CA                     __end_of___fladd:	
  6091                           
  6092                           	psect	text15
  6093  16EB                     __ptext15:	
  6094 ;; *************** function ___flneg *****************
  6095 ;; Defined at:
  6096 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flneg.c"
  6097 ;; Parameters:    Size  Location     Type
  6098 ;;  f1              4    0[COMMON] unsigned char 
  6099 ;; Auto vars:     Size  Location     Type
  6100 ;;		None
  6101 ;; Return value:  Size  Location     Type
  6102 ;;                  4    0[COMMON] unsigned char 
  6103 ;; Registers used:
  6104 ;;		wreg
  6105 ;; Tracked objects:
  6106 ;;		On entry : 0/0
  6107 ;;		On exit  : 0/0
  6108 ;;		Unchanged: 0/0
  6109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6110 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6113 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6114 ;;Total ram usage:        4 bytes
  6115 ;; Hardware stack levels used:    1
  6116 ;; This function calls:
  6117 ;;		Nothing
  6118 ;; This function is called by:
  6119 ;;		_ftoa
  6120 ;; This function uses a non-reentrant model
  6121 ;;
  6122                           
  6123                           
  6124                           ;psect for function ___flneg
  6125  16EB                     ___flneg:	
  6126                           
  6127                           ;incstack = 0
  6128                           ; Regs used in ___flneg: [wreg]
  6129  16EB  0873               	movf	___flneg@f1+3,w
  6130  16EC  0472               	iorwf	___flneg@f1+2,w
  6131  16ED  0471               	iorwf	___flneg@f1+1,w
  6132  16EE  0470               	iorwf	___flneg@f1,w
  6133  16EF  1903               	skipnz
  6134  16F0  0008               	return
  6135  16F1  3080               	movlw	128
  6136  16F2  06F3               	xorwf	___flneg@f1+3,f
  6137  16F3  0008               	return
  6138  16F4                     __end_of___flneg:	
  6139                           
  6140                           	psect	text16
  6141  05CA                     __ptext16:	
  6142 ;; *************** function ___flmul *****************
  6143 ;; Defined at:
  6144 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcmul.c"
  6145 ;; Parameters:    Size  Location     Type
  6146 ;;  b               4    0[BANK0 ] unsigned char 
  6147 ;;  a               4    4[BANK0 ] unsigned char 
  6148 ;; Auto vars:     Size  Location     Type
  6149 ;;  prod            4   20[BANK0 ] struct .
  6150 ;;  grs             4   14[BANK0 ] unsigned long 
  6151 ;;  temp            2   24[BANK0 ] struct .
  6152 ;;  bexp            1   19[BANK0 ] unsigned char 
  6153 ;;  aexp            1   18[BANK0 ] unsigned char 
  6154 ;;  sign            1   13[BANK0 ] unsigned char 
  6155 ;; Return value:  Size  Location     Type
  6156 ;;                  4    0[BANK0 ] unsigned char 
  6157 ;; Registers used:
  6158 ;;		wreg, status,2, status,0, pclath, cstack
  6159 ;; Tracked objects:
  6160 ;;		On entry : 0/0
  6161 ;;		On exit  : 0/0
  6162 ;;		Unchanged: 0/0
  6163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6164 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6165 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6166 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6167 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6168 ;;Total ram usage:       26 bytes
  6169 ;; Hardware stack levels used:    1
  6170 ;; Hardware stack levels required when called:    1
  6171 ;; This function calls:
  6172 ;;		__Umul8_16
  6173 ;; This function is called by:
  6174 ;;		_main
  6175 ;;		_ftoa
  6176 ;; This function uses a non-reentrant model
  6177 ;;
  6178                           
  6179                           
  6180                           ;psect for function ___flmul
  6181  05CA                     ___flmul:	
  6182                           
  6183                           ;incstack = 0
  6184                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  6185  05CA  0020               	movlb	0	; select bank0
  6186  05CB  0823               	movf	___flmul@b+3,w
  6187  05CC  3980               	andlw	128
  6188  05CD  00A8               	movwf	??___flmul
  6189  05CE  0828               	movf	??___flmul,w
  6190  05CF  00AD               	movwf	___flmul@sign
  6191  05D0  3523               	lslf	___flmul@b+3,w
  6192  05D1  00A8               	movwf	??___flmul
  6193  05D2  0828               	movf	??___flmul,w
  6194  05D3  00B3               	movwf	___flmul@bexp
  6195  05D4  1BA2               	btfsc	___flmul@b+2,7
  6196  05D5  1433               	bsf	___flmul@bexp,0
  6197  05D6  0833               	movf	___flmul@bexp,w
  6198  05D7  1903               	btfsc	3,2
  6199  05D8  2DE6               	goto	l2470
  6200  05D9  0A33               	incf	___flmul@bexp,w
  6201  05DA  1D03               	btfss	3,2
  6202  05DB  2DE4               	goto	l2468
  6203  05DC  3000               	movlw	0
  6204  05DD  00A3               	movwf	___flmul@b+3
  6205  05DE  3000               	movlw	0
  6206  05DF  00A2               	movwf	___flmul@b+2
  6207  05E0  3000               	movlw	0
  6208  05E1  00A1               	movwf	___flmul@b+1
  6209  05E2  3000               	movlw	0
  6210  05E3  00A0               	movwf	___flmul@b
  6211  05E4                     l2468:	
  6212  05E4  17A2               	bsf	___flmul@b+2,7
  6213  05E5  2DEE               	goto	l2472
  6214  05E6                     l2470:	
  6215  05E6  3000               	movlw	0
  6216  05E7  00A3               	movwf	___flmul@b+3
  6217  05E8  3000               	movlw	0
  6218  05E9  00A2               	movwf	___flmul@b+2
  6219  05EA  3000               	movlw	0
  6220  05EB  00A1               	movwf	___flmul@b+1
  6221  05EC  3000               	movlw	0
  6222  05ED  00A0               	movwf	___flmul@b
  6223  05EE                     l2472:	
  6224  05EE  0827               	movf	___flmul@a+3,w
  6225  05EF  3980               	andlw	128
  6226  05F0  00A8               	movwf	??___flmul
  6227  05F1  0828               	movf	??___flmul,w
  6228  05F2  06AD               	xorwf	___flmul@sign,f
  6229  05F3  3527               	lslf	___flmul@a+3,w
  6230  05F4  00A8               	movwf	??___flmul
  6231  05F5  0828               	movf	??___flmul,w
  6232  05F6  00B2               	movwf	___flmul@aexp
  6233  05F7  1BA6               	btfsc	___flmul@a+2,7
  6234  05F8  1432               	bsf	___flmul@aexp,0
  6235  05F9  0832               	movf	___flmul@aexp,w
  6236  05FA  1903               	btfsc	3,2
  6237  05FB  2E09               	goto	l2488
  6238  05FC  0A32               	incf	___flmul@aexp,w
  6239  05FD  1D03               	btfss	3,2
  6240  05FE  2E07               	goto	l2486
  6241  05FF  3000               	movlw	0
  6242  0600  00A7               	movwf	___flmul@a+3
  6243  0601  3000               	movlw	0
  6244  0602  00A6               	movwf	___flmul@a+2
  6245  0603  3000               	movlw	0
  6246  0604  00A5               	movwf	___flmul@a+1
  6247  0605  3000               	movlw	0
  6248  0606  00A4               	movwf	___flmul@a
  6249  0607                     l2486:	
  6250  0607  17A6               	bsf	___flmul@a+2,7
  6251  0608  2E11               	goto	l2490
  6252  0609                     l2488:	
  6253  0609  3000               	movlw	0
  6254  060A  00A7               	movwf	___flmul@a+3
  6255  060B  3000               	movlw	0
  6256  060C  00A6               	movwf	___flmul@a+2
  6257  060D  3000               	movlw	0
  6258  060E  00A5               	movwf	___flmul@a+1
  6259  060F  3000               	movlw	0
  6260  0610  00A4               	movwf	___flmul@a
  6261  0611                     l2490:	
  6262  0611  0832               	movf	___flmul@aexp,w
  6263  0612  1D03               	btfss	3,2
  6264  0613  0833               	movf	___flmul@bexp,w
  6265  0614  1D03               	btfss	3,2
  6266  0615  2E1F               	goto	l2498
  6267  0616  3000               	movlw	0
  6268  0617  00A3               	movwf	?___flmul+3
  6269  0618  3000               	movlw	0
  6270  0619  00A2               	movwf	?___flmul+2
  6271  061A  3000               	movlw	0
  6272  061B  00A1               	movwf	?___flmul+1
  6273  061C  3000               	movlw	0
  6274  061D  00A0               	movwf	?___flmul
  6275  061E  0008               	return
  6276  061F                     l2498:	
  6277  061F  0820               	movf	___flmul@b,w
  6278  0620  00A8               	movwf	??___flmul
  6279  0621  0828               	movf	??___flmul,w
  6280  0622  00F0               	movwf	__Umul8_16@multiplicand
  6281  0623  0826               	movf	___flmul@a+2,w
  6282  0624  3197  274F  3185   	fcall	__Umul8_16
  6283  0627  0871               	movf	?__Umul8_16+1,w
  6284  0628  0020               	movlb	0	; select bank0
  6285  0629  00B9               	movwf	___flmul@temp+1
  6286  062A  0870               	movf	?__Umul8_16,w
  6287  062B  00B8               	movwf	___flmul@temp
  6288  062C  0838               	movf	___flmul@temp,w
  6289  062D  00A8               	movwf	??___flmul
  6290  062E  01A9               	clrf	??___flmul+1
  6291  062F  01AA               	clrf	??___flmul+2
  6292  0630  01AB               	clrf	??___flmul+3
  6293  0631  082B               	movf	??___flmul+3,w
  6294  0632  00B1               	movwf	___flmul@grs+3
  6295  0633  082A               	movf	??___flmul+2,w
  6296  0634  00B0               	movwf	___flmul@grs+2
  6297  0635  0829               	movf	??___flmul+1,w
  6298  0636  00AF               	movwf	___flmul@grs+1
  6299  0637  0828               	movf	??___flmul,w
  6300  0638  00AE               	movwf	___flmul@grs
  6301  0639  0839               	movf	___flmul@temp+1,w
  6302  063A  00A8               	movwf	??___flmul
  6303  063B  01A9               	clrf	??___flmul+1
  6304  063C  01AA               	clrf	??___flmul+2
  6305  063D  01AB               	clrf	??___flmul+3
  6306  063E  082B               	movf	??___flmul+3,w
  6307  063F  00B7               	movwf	___flmul@prod+3
  6308  0640  082A               	movf	??___flmul+2,w
  6309  0641  00B6               	movwf	___flmul@prod+2
  6310  0642  0829               	movf	??___flmul+1,w
  6311  0643  00B5               	movwf	___flmul@prod+1
  6312  0644  0828               	movf	??___flmul,w
  6313  0645  00B4               	movwf	___flmul@prod
  6314  0646  0821               	movf	___flmul@b+1,w
  6315  0647  00A8               	movwf	??___flmul
  6316  0648  0828               	movf	??___flmul,w
  6317  0649  00F0               	movwf	__Umul8_16@multiplicand
  6318  064A  0825               	movf	___flmul@a+1,w
  6319  064B  3197  274F  3185   	fcall	__Umul8_16
  6320  064E  0871               	movf	?__Umul8_16+1,w
  6321  064F  0020               	movlb	0	; select bank0
  6322  0650  00B9               	movwf	___flmul@temp+1
  6323  0651  0870               	movf	?__Umul8_16,w
  6324  0652  00B8               	movwf	___flmul@temp
  6325  0653  0838               	movf	___flmul@temp,w
  6326  0654  00A8               	movwf	??___flmul
  6327  0655  01A9               	clrf	??___flmul+1
  6328  0656  01AA               	clrf	??___flmul+2
  6329  0657  01AB               	clrf	??___flmul+3
  6330  0658  0828               	movf	??___flmul,w
  6331  0659  07AE               	addwf	___flmul@grs,f
  6332  065A  0829               	movf	??___flmul+1,w
  6333  065B  3DAF               	addwfc	___flmul@grs+1,f
  6334  065C  082A               	movf	??___flmul+2,w
  6335  065D  3DB0               	addwfc	___flmul@grs+2,f
  6336  065E  082B               	movf	??___flmul+3,w
  6337  065F  3DB1               	addwfc	___flmul@grs+3,f
  6338  0660  0839               	movf	___flmul@temp+1,w
  6339  0661  00A8               	movwf	??___flmul
  6340  0662  01A9               	clrf	??___flmul+1
  6341  0663  01AA               	clrf	??___flmul+2
  6342  0664  01AB               	clrf	??___flmul+3
  6343  0665  0828               	movf	??___flmul,w
  6344  0666  07B4               	addwf	___flmul@prod,f
  6345  0667  0829               	movf	??___flmul+1,w
  6346  0668  3DB5               	addwfc	___flmul@prod+1,f
  6347  0669  082A               	movf	??___flmul+2,w
  6348  066A  3DB6               	addwfc	___flmul@prod+2,f
  6349  066B  082B               	movf	??___flmul+3,w
  6350  066C  3DB7               	addwfc	___flmul@prod+3,f
  6351  066D  0822               	movf	___flmul@b+2,w
  6352  066E  00A8               	movwf	??___flmul
  6353  066F  0828               	movf	??___flmul,w
  6354  0670  00F0               	movwf	__Umul8_16@multiplicand
  6355  0671  0824               	movf	___flmul@a,w
  6356  0672  3197  274F  3185   	fcall	__Umul8_16
  6357  0675  0871               	movf	?__Umul8_16+1,w
  6358  0676  0020               	movlb	0	; select bank0
  6359  0677  00B9               	movwf	___flmul@temp+1
  6360  0678  0870               	movf	?__Umul8_16,w
  6361  0679  00B8               	movwf	___flmul@temp
  6362  067A  0838               	movf	___flmul@temp,w
  6363  067B  00A8               	movwf	??___flmul
  6364  067C  01A9               	clrf	??___flmul+1
  6365  067D  01AA               	clrf	??___flmul+2
  6366  067E  01AB               	clrf	??___flmul+3
  6367  067F  0828               	movf	??___flmul,w
  6368  0680  07AE               	addwf	___flmul@grs,f
  6369  0681  0829               	movf	??___flmul+1,w
  6370  0682  3DAF               	addwfc	___flmul@grs+1,f
  6371  0683  082A               	movf	??___flmul+2,w
  6372  0684  3DB0               	addwfc	___flmul@grs+2,f
  6373  0685  082B               	movf	??___flmul+3,w
  6374  0686  3DB1               	addwfc	___flmul@grs+3,f
  6375  0687  0839               	movf	___flmul@temp+1,w
  6376  0688  00A8               	movwf	??___flmul
  6377  0689  01A9               	clrf	??___flmul+1
  6378  068A  01AA               	clrf	??___flmul+2
  6379  068B  01AB               	clrf	??___flmul+3
  6380  068C  0828               	movf	??___flmul,w
  6381  068D  07B4               	addwf	___flmul@prod,f
  6382  068E  0829               	movf	??___flmul+1,w
  6383  068F  3DB5               	addwfc	___flmul@prod+1,f
  6384  0690  082A               	movf	??___flmul+2,w
  6385  0691  3DB6               	addwfc	___flmul@prod+2,f
  6386  0692  082B               	movf	??___flmul+3,w
  6387  0693  3DB7               	addwfc	___flmul@prod+3,f
  6388  0694  3008               	movlw	8
  6389  0695                     u3085:	
  6390  0695  35AE               	lslf	___flmul@grs,f
  6391  0696  0DAF               	rlf	___flmul@grs+1,f
  6392  0697  0DB0               	rlf	___flmul@grs+2,f
  6393  0698  0DB1               	rlf	___flmul@grs+3,f
  6394  0699  0B89               	decfsz	9,f
  6395  069A  2E95               	goto	u3085
  6396  069B  0821               	movf	___flmul@b+1,w
  6397  069C  00A8               	movwf	??___flmul
  6398  069D  0828               	movf	??___flmul,w
  6399  069E  00F0               	movwf	__Umul8_16@multiplicand
  6400  069F  0824               	movf	___flmul@a,w
  6401  06A0  3197  274F  3185   	fcall	__Umul8_16
  6402  06A3  0871               	movf	?__Umul8_16+1,w
  6403  06A4  0020               	movlb	0	; select bank0
  6404  06A5  00B9               	movwf	___flmul@temp+1
  6405  06A6  0870               	movf	?__Umul8_16,w
  6406  06A7  00B8               	movwf	___flmul@temp
  6407  06A8  0838               	movf	___flmul@temp,w
  6408  06A9  07AE               	addwf	___flmul@grs,f
  6409  06AA  0839               	movf	___flmul@temp+1,w
  6410  06AB  3DAF               	addwfc	___flmul@grs+1,f
  6411  06AC  3000               	movlw	0
  6412  06AD  3DB0               	addwfc	___flmul@grs+2,f
  6413  06AE  3DB1               	addwfc	___flmul@grs+3,f
  6414  06AF  0820               	movf	___flmul@b,w
  6415  06B0  00A8               	movwf	??___flmul
  6416  06B1  0828               	movf	??___flmul,w
  6417  06B2  00F0               	movwf	__Umul8_16@multiplicand
  6418  06B3  0825               	movf	___flmul@a+1,w
  6419  06B4  3197  274F  3185   	fcall	__Umul8_16
  6420  06B7  0871               	movf	?__Umul8_16+1,w
  6421  06B8  0020               	movlb	0	; select bank0
  6422  06B9  00B9               	movwf	___flmul@temp+1
  6423  06BA  0870               	movf	?__Umul8_16,w
  6424  06BB  00B8               	movwf	___flmul@temp
  6425  06BC  0838               	movf	___flmul@temp,w
  6426  06BD  07AE               	addwf	___flmul@grs,f
  6427  06BE  0839               	movf	___flmul@temp+1,w
  6428  06BF  3DAF               	addwfc	___flmul@grs+1,f
  6429  06C0  3000               	movlw	0
  6430  06C1  3DB0               	addwfc	___flmul@grs+2,f
  6431  06C2  3DB1               	addwfc	___flmul@grs+3,f
  6432  06C3  3008               	movlw	8
  6433  06C4                     u3095:	
  6434  06C4  35AE               	lslf	___flmul@grs,f
  6435  06C5  0DAF               	rlf	___flmul@grs+1,f
  6436  06C6  0DB0               	rlf	___flmul@grs+2,f
  6437  06C7  0DB1               	rlf	___flmul@grs+3,f
  6438  06C8  0B89               	decfsz	9,f
  6439  06C9  2EC4               	goto	u3095
  6440  06CA  0820               	movf	___flmul@b,w
  6441  06CB  00A8               	movwf	??___flmul
  6442  06CC  0828               	movf	??___flmul,w
  6443  06CD  00F0               	movwf	__Umul8_16@multiplicand
  6444  06CE  0824               	movf	___flmul@a,w
  6445  06CF  3197  274F  3185   	fcall	__Umul8_16
  6446  06D2  0871               	movf	?__Umul8_16+1,w
  6447  06D3  0020               	movlb	0	; select bank0
  6448  06D4  00B9               	movwf	___flmul@temp+1
  6449  06D5  0870               	movf	?__Umul8_16,w
  6450  06D6  00B8               	movwf	___flmul@temp
  6451  06D7  0838               	movf	___flmul@temp,w
  6452  06D8  07AE               	addwf	___flmul@grs,f
  6453  06D9  0839               	movf	___flmul@temp+1,w
  6454  06DA  3DAF               	addwfc	___flmul@grs+1,f
  6455  06DB  3000               	movlw	0
  6456  06DC  3DB0               	addwfc	___flmul@grs+2,f
  6457  06DD  3DB1               	addwfc	___flmul@grs+3,f
  6458  06DE  0821               	movf	___flmul@b+1,w
  6459  06DF  00A8               	movwf	??___flmul
  6460  06E0  0828               	movf	??___flmul,w
  6461  06E1  00F0               	movwf	__Umul8_16@multiplicand
  6462  06E2  0826               	movf	___flmul@a+2,w
  6463  06E3  3197  274F  3185   	fcall	__Umul8_16
  6464  06E6  0871               	movf	?__Umul8_16+1,w
  6465  06E7  0020               	movlb	0	; select bank0
  6466  06E8  00B9               	movwf	___flmul@temp+1
  6467  06E9  0870               	movf	?__Umul8_16,w
  6468  06EA  00B8               	movwf	___flmul@temp
  6469  06EB  0838               	movf	___flmul@temp,w
  6470  06EC  07B4               	addwf	___flmul@prod,f
  6471  06ED  0839               	movf	___flmul@temp+1,w
  6472  06EE  3DB5               	addwfc	___flmul@prod+1,f
  6473  06EF  3000               	movlw	0
  6474  06F0  3DB6               	addwfc	___flmul@prod+2,f
  6475  06F1  3DB7               	addwfc	___flmul@prod+3,f
  6476  06F2  0822               	movf	___flmul@b+2,w
  6477  06F3  00A8               	movwf	??___flmul
  6478  06F4  0828               	movf	??___flmul,w
  6479  06F5  00F0               	movwf	__Umul8_16@multiplicand
  6480  06F6  0825               	movf	___flmul@a+1,w
  6481  06F7  3197  274F  3185   	fcall	__Umul8_16
  6482  06FA  0871               	movf	?__Umul8_16+1,w
  6483  06FB  0020               	movlb	0	; select bank0
  6484  06FC  00B9               	movwf	___flmul@temp+1
  6485  06FD  0870               	movf	?__Umul8_16,w
  6486  06FE  00B8               	movwf	___flmul@temp
  6487  06FF  0838               	movf	___flmul@temp,w
  6488  0700  07B4               	addwf	___flmul@prod,f
  6489  0701  0839               	movf	___flmul@temp+1,w
  6490  0702  3DB5               	addwfc	___flmul@prod+1,f
  6491  0703  3000               	movlw	0
  6492  0704  3DB6               	addwfc	___flmul@prod+2,f
  6493  0705  3DB7               	addwfc	___flmul@prod+3,f
  6494  0706  0822               	movf	___flmul@b+2,w
  6495  0707  00A8               	movwf	??___flmul
  6496  0708  0828               	movf	??___flmul,w
  6497  0709  00F0               	movwf	__Umul8_16@multiplicand
  6498  070A  0826               	movf	___flmul@a+2,w
  6499  070B  3197  274F  3185   	fcall	__Umul8_16
  6500  070E  0871               	movf	?__Umul8_16+1,w
  6501  070F  0020               	movlb	0	; select bank0
  6502  0710  00B9               	movwf	___flmul@temp+1
  6503  0711  0870               	movf	?__Umul8_16,w
  6504  0712  00B8               	movwf	___flmul@temp
  6505  0713  0838               	movf	___flmul@temp,w
  6506  0714  00A8               	movwf	??___flmul
  6507  0715  0839               	movf	___flmul@temp+1,w
  6508  0716  00A9               	movwf	??___flmul+1
  6509  0717  01AA               	clrf	??___flmul+2
  6510  0718  01AB               	clrf	??___flmul+3
  6511  0719  3008               	movlw	8
  6512  071A                     u3105:	
  6513  071A  35A8               	lslf	??___flmul,f
  6514  071B  0DA9               	rlf	??___flmul+1,f
  6515  071C  0DAA               	rlf	??___flmul+2,f
  6516  071D  0DAB               	rlf	??___flmul+3,f
  6517  071E  0B89               	decfsz	9,f
  6518  071F  2F1A               	goto	u3105
  6519  0720  0828               	movf	??___flmul,w
  6520  0721  07B4               	addwf	___flmul@prod,f
  6521  0722  0829               	movf	??___flmul+1,w
  6522  0723  3DB5               	addwfc	___flmul@prod+1,f
  6523  0724  082A               	movf	??___flmul+2,w
  6524  0725  3DB6               	addwfc	___flmul@prod+2,f
  6525  0726  082B               	movf	??___flmul+3,w
  6526  0727  3DB7               	addwfc	___flmul@prod+3,f
  6527  0728  082E               	movf	___flmul@grs,w
  6528  0729  00A8               	movwf	??___flmul
  6529  072A  082F               	movf	___flmul@grs+1,w
  6530  072B  00A9               	movwf	??___flmul+1
  6531  072C  0830               	movf	___flmul@grs+2,w
  6532  072D  00AA               	movwf	??___flmul+2
  6533  072E  0831               	movf	___flmul@grs+3,w
  6534  072F  00AB               	movwf	??___flmul+3
  6535  0730  3018               	movlw	24
  6536  0731                     u3115:	
  6537  0731  36AB               	lsrf	??___flmul+3,f
  6538  0732  0CAA               	rrf	??___flmul+2,f
  6539  0733  0CA9               	rrf	??___flmul+1,f
  6540  0734  0CA8               	rrf	??___flmul,f
  6541  0735  0B89               	decfsz	9,f
  6542  0736  2F31               	goto	u3115
  6543  0737  0828               	movf	??___flmul,w
  6544  0738  07B4               	addwf	___flmul@prod,f
  6545  0739  0829               	movf	??___flmul+1,w
  6546  073A  3DB5               	addwfc	___flmul@prod+1,f
  6547  073B  082A               	movf	??___flmul+2,w
  6548  073C  3DB6               	addwfc	___flmul@prod+2,f
  6549  073D  082B               	movf	??___flmul+3,w
  6550  073E  3DB7               	addwfc	___flmul@prod+3,f
  6551  073F  3008               	movlw	8
  6552  0740                     u3125:	
  6553  0740  35AE               	lslf	___flmul@grs,f
  6554  0741  0DAF               	rlf	___flmul@grs+1,f
  6555  0742  0DB0               	rlf	___flmul@grs+2,f
  6556  0743  0DB1               	rlf	___flmul@grs+3,f
  6557  0744  0B89               	decfsz	9,f
  6558  0745  2F40               	goto	u3125
  6559  0746  0833               	movf	___flmul@bexp,w
  6560  0747  0732               	addwf	___flmul@aexp,w
  6561  0748  00A8               	movwf	??___flmul
  6562  0749  01A9               	clrf	??___flmul+1
  6563  074A  0DA9               	rlf	??___flmul+1,f
  6564  074B  0828               	movf	??___flmul,w
  6565  074C  3E82               	addlw	130
  6566  074D  00B8               	movwf	___flmul@temp
  6567  074E  30FF               	movlw	255
  6568  074F  3D29               	addwfc	??___flmul+1,w
  6569  0750  00B9               	movwf	___flmul@temp+1
  6570  0751                     l2550:	
  6571  0751  1BB6               	btfsc	___flmul@prod+2,7
  6572  0752  2F68               	goto	l2552
  6573  0753  3001               	movlw	1
  6574  0754                     u3135:	
  6575  0754  35B4               	lslf	___flmul@prod,f
  6576  0755  0DB5               	rlf	___flmul@prod+1,f
  6577  0756  0DB6               	rlf	___flmul@prod+2,f
  6578  0757  0DB7               	rlf	___flmul@prod+3,f
  6579  0758  0B89               	decfsz	9,f
  6580  0759  2F54               	goto	u3135
  6581  075A  1BB1               	btfsc	___flmul@grs+3,7
  6582  075B  1434               	bsf	___flmul@prod,0
  6583  075C  3001               	movlw	1
  6584  075D                     u3155:	
  6585  075D  35AE               	lslf	___flmul@grs,f
  6586  075E  0DAF               	rlf	___flmul@grs+1,f
  6587  075F  0DB0               	rlf	___flmul@grs+2,f
  6588  0760  0DB1               	rlf	___flmul@grs+3,f
  6589  0761  0B89               	decfsz	9,f
  6590  0762  2F5D               	goto	u3155
  6591  0763  30FF               	movlw	255
  6592  0764  07B8               	addwf	___flmul@temp,f
  6593  0765  30FF               	movlw	255
  6594  0766  3DB9               	addwfc	___flmul@temp+1,f
  6595  0767  2F51               	goto	l2550
  6596  0768                     l2552:	
  6597  0768  01B2               	clrf	___flmul@aexp
  6598  0769  1FB1               	btfss	___flmul@grs+3,7
  6599  076A  2F81               	goto	l2562
  6600  076B  30FF               	movlw	255
  6601  076C  052E               	andwf	___flmul@grs,w
  6602  076D  00A8               	movwf	??___flmul
  6603  076E  30FF               	movlw	255
  6604  076F  052F               	andwf	___flmul@grs+1,w
  6605  0770  00A9               	movwf	??___flmul+1
  6606  0771  30FF               	movlw	255
  6607  0772  0530               	andwf	___flmul@grs+2,w
  6608  0773  00AA               	movwf	??___flmul+2
  6609  0774  307F               	movlw	127
  6610  0775  0531               	andwf	___flmul@grs+3,w
  6611  0776  00AB               	movwf	??___flmul+3
  6612  0777  082B               	movf	??___flmul+3,w
  6613  0778  042A               	iorwf	??___flmul+2,w
  6614  0779  0429               	iorwf	??___flmul+1,w
  6615  077A  0428               	iorwf	??___flmul,w
  6616  077B  1903               	skipnz
  6617  077C  1834               	btfsc	___flmul@prod,0
  6618  077D  2F7F               	goto	l2558
  6619  077E  2F81               	goto	l2562
  6620  077F                     l2558:	
  6621  077F  01B2               	clrf	___flmul@aexp
  6622  0780  0AB2               	incf	___flmul@aexp,f
  6623  0781                     l2562:	
  6624  0781  0832               	movf	___flmul@aexp,w
  6625  0782  1903               	btfsc	3,2
  6626  0783  2FAA               	goto	l2572
  6627  0784  3001               	movlw	1
  6628  0785  07B4               	addwf	___flmul@prod,f
  6629  0786  3000               	movlw	0
  6630  0787  3DB5               	addwfc	___flmul@prod+1,f
  6631  0788  3000               	movlw	0
  6632  0789  3DB6               	addwfc	___flmul@prod+2,f
  6633  078A  3000               	movlw	0
  6634  078B  3DB7               	addwfc	___flmul@prod+3,f
  6635  078C  1C37               	btfss	___flmul@prod+3,0
  6636  078D  2FAA               	goto	l2572
  6637  078E  0834               	movf	___flmul@prod,w
  6638  078F  00A8               	movwf	??___flmul
  6639  0790  0835               	movf	___flmul@prod+1,w
  6640  0791  00A9               	movwf	??___flmul+1
  6641  0792  0836               	movf	___flmul@prod+2,w
  6642  0793  00AA               	movwf	??___flmul+2
  6643  0794  0837               	movf	___flmul@prod+3,w
  6644  0795  00AB               	movwf	??___flmul+3
  6645  0796  3001               	movlw	1
  6646  0797  00AC               	movwf	??___flmul+4
  6647  0798                     u3225:	
  6648  0798  37AB               	asrf	??___flmul+3,f
  6649  0799  0CAA               	rrf	??___flmul+2,f
  6650  079A  0CA9               	rrf	??___flmul+1,f
  6651  079B  0CA8               	rrf	??___flmul,f
  6652  079C  0BAC               	decfsz	??___flmul+4,f
  6653  079D  2F98               	goto	u3225
  6654  079E  082B               	movf	??___flmul+3,w
  6655  079F  00B7               	movwf	___flmul@prod+3
  6656  07A0  082A               	movf	??___flmul+2,w
  6657  07A1  00B6               	movwf	___flmul@prod+2
  6658  07A2  0829               	movf	??___flmul+1,w
  6659  07A3  00B5               	movwf	___flmul@prod+1
  6660  07A4  0828               	movf	??___flmul,w
  6661  07A5  00B4               	movwf	___flmul@prod
  6662  07A6  3001               	movlw	1
  6663  07A7  07B8               	addwf	___flmul@temp,f
  6664  07A8  3000               	movlw	0
  6665  07A9  3DB9               	addwfc	___flmul@temp+1,f
  6666  07AA                     l2572:	
  6667  07AA  0839               	movf	___flmul@temp+1,w
  6668  07AB  3A80               	xorlw	128
  6669  07AC  00A8               	movwf	??___flmul
  6670  07AD  3080               	movlw	128
  6671  07AE  0228               	subwf	??___flmul,w
  6672  07AF  1D03               	skipz
  6673  07B0  2FB3               	goto	u3235
  6674  07B1  30FF               	movlw	255
  6675  07B2  0238               	subwf	___flmul@temp,w
  6676  07B3                     u3235:	
  6677  07B3  1C03               	skipc
  6678  07B4  2FBF               	goto	l2576
  6679  07B5  307F               	movlw	127
  6680  07B6  0020               	movlb	0	; select bank0
  6681  07B7  00B7               	movwf	___flmul@prod+3
  6682  07B8  3080               	movlw	128
  6683  07B9  00B6               	movwf	___flmul@prod+2
  6684  07BA  3000               	movlw	0
  6685  07BB  00B5               	movwf	___flmul@prod+1
  6686  07BC  3000               	movlw	0
  6687  07BD  00B4               	movwf	___flmul@prod
  6688  07BE  2FE9               	goto	l732
  6689  07BF                     l2576:	
  6690  07BF  0020               	movlb	0	; select bank0
  6691  07C0  0839               	movf	___flmul@temp+1,w
  6692  07C1  3A80               	xorlw	128
  6693  07C2  00A8               	movwf	??___flmul
  6694  07C3  3080               	movlw	128
  6695  07C4  0228               	subwf	??___flmul,w
  6696  07C5  1D03               	skipz
  6697  07C6  2FC9               	goto	u3245
  6698  07C7  3001               	movlw	1
  6699  07C8  0238               	subwf	___flmul@temp,w
  6700  07C9                     u3245:	
  6701  07C9  1803               	skipnc
  6702  07CA  2FD6               	goto	l2582
  6703  07CB  3000               	movlw	0
  6704  07CC  0020               	movlb	0	; select bank0
  6705  07CD  00B7               	movwf	___flmul@prod+3
  6706  07CE  3000               	movlw	0
  6707  07CF  00B6               	movwf	___flmul@prod+2
  6708  07D0  3000               	movlw	0
  6709  07D1  00B5               	movwf	___flmul@prod+1
  6710  07D2  3000               	movlw	0
  6711  07D3  00B4               	movwf	___flmul@prod
  6712  07D4  01AD               	clrf	___flmul@sign
  6713  07D5  2FE9               	goto	l732
  6714  07D6                     l2582:	
  6715  07D6  0020               	movlb	0	; select bank0
  6716  07D7  0838               	movf	___flmul@temp,w
  6717  07D8  00A8               	movwf	??___flmul
  6718  07D9  0828               	movf	??___flmul,w
  6719  07DA  00B3               	movwf	___flmul@bexp
  6720  07DB  30FF               	movlw	255
  6721  07DC  05B4               	andwf	___flmul@prod,f
  6722  07DD  30FF               	movlw	255
  6723  07DE  05B5               	andwf	___flmul@prod+1,f
  6724  07DF  307F               	movlw	127
  6725  07E0  05B6               	andwf	___flmul@prod+2,f
  6726  07E1  3000               	movlw	0
  6727  07E2  05B7               	andwf	___flmul@prod+3,f
  6728  07E3  1833               	btfsc	___flmul@bexp,0
  6729  07E4  17B6               	bsf	___flmul@prod+2,7
  6730  07E5  3633               	lsrf	___flmul@bexp,w
  6731  07E6  00A8               	movwf	??___flmul
  6732  07E7  0828               	movf	??___flmul,w
  6733  07E8  00B7               	movwf	___flmul@prod+3
  6734  07E9                     l732:	
  6735  07E9  082D               	movf	___flmul@sign,w
  6736  07EA  00A8               	movwf	??___flmul
  6737  07EB  0828               	movf	??___flmul,w
  6738  07EC  04B7               	iorwf	___flmul@prod+3,f
  6739  07ED  0837               	movf	___flmul@prod+3,w
  6740  07EE  00A3               	movwf	?___flmul+3
  6741  07EF  0836               	movf	___flmul@prod+2,w
  6742  07F0  00A2               	movwf	?___flmul+2
  6743  07F1  0835               	movf	___flmul@prod+1,w
  6744  07F2  00A1               	movwf	?___flmul+1
  6745  07F3  0834               	movf	___flmul@prod,w
  6746  07F4  00A0               	movwf	?___flmul
  6747  07F5  0008               	return
  6748  07F6                     __end_of___flmul:	
  6749                           
  6750                           	psect	text17
  6751  174F                     __ptext17:	
  6752 ;; *************** function __Umul8_16 *****************
  6753 ;; Defined at:
  6754 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8_16.c"
  6755 ;; Parameters:    Size  Location     Type
  6756 ;;  multiplier      1    wreg     unsigned char 
  6757 ;;  multiplicand    1    0[COMMON] unsigned char 
  6758 ;; Auto vars:     Size  Location     Type
  6759 ;;  multiplier      1    8[COMMON] unsigned char 
  6760 ;;  word_mpld       2    6[COMMON] unsigned int 
  6761 ;;  product         2    4[COMMON] unsigned int 
  6762 ;; Return value:  Size  Location     Type
  6763 ;;                  2    0[COMMON] unsigned int 
  6764 ;; Registers used:
  6765 ;;		wreg, status,2, status,0
  6766 ;; Tracked objects:
  6767 ;;		On entry : 0/0
  6768 ;;		On exit  : 0/0
  6769 ;;		Unchanged: 0/0
  6770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6771 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6772 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6773 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6774 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6775 ;;Total ram usage:        9 bytes
  6776 ;; Hardware stack levels used:    1
  6777 ;; This function calls:
  6778 ;;		Nothing
  6779 ;; This function is called by:
  6780 ;;		___flmul
  6781 ;; This function uses a non-reentrant model
  6782 ;;
  6783                           
  6784                           
  6785                           ;psect for function __Umul8_16
  6786  174F                     __Umul8_16:	
  6787                           
  6788                           ;incstack = 0
  6789                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6790                           ;__Umul8_16@multiplier stored from wreg
  6791  174F  00F8               	movwf	__Umul8_16@multiplier
  6792  1750  01F4               	clrf	__Umul8_16@product
  6793  1751  01F5               	clrf	__Umul8_16@product+1
  6794  1752  0870               	movf	__Umul8_16@multiplicand,w
  6795  1753  00F2               	movwf	??__Umul8_16
  6796  1754  01F3               	clrf	??__Umul8_16+1
  6797  1755  0872               	movf	??__Umul8_16,w
  6798  1756  00F6               	movwf	__Umul8_16@word_mpld
  6799  1757  0873               	movf	??__Umul8_16+1,w
  6800  1758  00F7               	movwf	__Umul8_16@word_mpld+1
  6801  1759                     l2230:	
  6802  1759  1C78               	btfss	__Umul8_16@multiplier,0
  6803  175A  2F5F               	goto	l814
  6804  175B  0876               	movf	__Umul8_16@word_mpld,w
  6805  175C  07F4               	addwf	__Umul8_16@product,f
  6806  175D  0877               	movf	__Umul8_16@word_mpld+1,w
  6807  175E  3DF5               	addwfc	__Umul8_16@product+1,f
  6808  175F                     l814:	
  6809  175F  3001               	movlw	1
  6810  1760                     u2625:	
  6811  1760  35F6               	lslf	__Umul8_16@word_mpld,f
  6812  1761  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  6813  1762  0B89               	decfsz	9,f
  6814  1763  2F60               	goto	u2625
  6815  1764  1003               	clrc
  6816  1765  0CF8               	rrf	__Umul8_16@multiplier,f
  6817  1766  0878               	movf	__Umul8_16@multiplier,w
  6818  1767  1D03               	btfss	3,2
  6819  1768  2F59               	goto	l2230
  6820  1769  0875               	movf	__Umul8_16@product+1,w
  6821  176A  00F1               	movwf	?__Umul8_16+1
  6822  176B  0874               	movf	__Umul8_16@product,w
  6823  176C  00F0               	movwf	?__Umul8_16
  6824  176D  0008               	return
  6825  176E                     __end_of__Umul8_16:	
  6826                           
  6827                           	psect	text18
  6828  0D7D                     __ptext18:	
  6829 ;; *************** function ___flge *****************
  6830 ;; Defined at:
  6831 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flge.c"
  6832 ;; Parameters:    Size  Location     Type
  6833 ;;  ff1             4    0[COMMON] unsigned int 
  6834 ;;  ff2             4    4[COMMON] unsigned int 
  6835 ;; Auto vars:     Size  Location     Type
  6836 ;;		None
  6837 ;; Return value:  Size  Location     Type
  6838 ;;		None               void
  6839 ;; Registers used:
  6840 ;;		wreg, status,2, status,0
  6841 ;; Tracked objects:
  6842 ;;		On entry : 0/0
  6843 ;;		On exit  : 0/0
  6844 ;;		Unchanged: 0/0
  6845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6846 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6848 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6849 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6850 ;;Total ram usage:       12 bytes
  6851 ;; Hardware stack levels used:    1
  6852 ;; This function calls:
  6853 ;;		Nothing
  6854 ;; This function is called by:
  6855 ;;		_ftoa
  6856 ;; This function uses a non-reentrant model
  6857 ;;
  6858                           
  6859                           
  6860                           ;psect for function ___flge
  6861  0D7D                     ___flge:	
  6862                           
  6863                           ;incstack = 0
  6864                           ; Regs used in ___flge: [wreg+status,2+status,0]
  6865  0D7D  3000               	movlw	0
  6866  0D7E  0570               	andwf	___flge@ff1,w
  6867  0D7F  00F8               	movwf	??___flge
  6868  0D80  3000               	movlw	0
  6869  0D81  0571               	andwf	___flge@ff1+1,w
  6870  0D82  00F9               	movwf	??___flge+1
  6871  0D83  3080               	movlw	128
  6872  0D84  0572               	andwf	___flge@ff1+2,w
  6873  0D85  00FA               	movwf	??___flge+2
  6874  0D86  307F               	movlw	127
  6875  0D87  0573               	andwf	___flge@ff1+3,w
  6876  0D88  00FB               	movwf	??___flge+3
  6877  0D89  087B               	movf	??___flge+3,w
  6878  0D8A  047A               	iorwf	??___flge+2,w
  6879  0D8B  0479               	iorwf	??___flge+1,w
  6880  0D8C  0478               	iorwf	??___flge,w
  6881  0D8D  1D03               	skipz
  6882  0D8E  2D97               	goto	l505
  6883  0D8F  3000               	movlw	0
  6884  0D90  00F3               	movwf	___flge@ff1+3
  6885  0D91  3000               	movlw	0
  6886  0D92  00F2               	movwf	___flge@ff1+2
  6887  0D93  3000               	movlw	0
  6888  0D94  00F1               	movwf	___flge@ff1+1
  6889  0D95  3000               	movlw	0
  6890  0D96  00F0               	movwf	___flge@ff1
  6891  0D97                     l505:	
  6892  0D97  3000               	movlw	0
  6893  0D98  0574               	andwf	___flge@ff2,w
  6894  0D99  00F8               	movwf	??___flge
  6895  0D9A  3000               	movlw	0
  6896  0D9B  0575               	andwf	___flge@ff2+1,w
  6897  0D9C  00F9               	movwf	??___flge+1
  6898  0D9D  3080               	movlw	128
  6899  0D9E  0576               	andwf	___flge@ff2+2,w
  6900  0D9F  00FA               	movwf	??___flge+2
  6901  0DA0  307F               	movlw	127
  6902  0DA1  0577               	andwf	___flge@ff2+3,w
  6903  0DA2  00FB               	movwf	??___flge+3
  6904  0DA3  087B               	movf	??___flge+3,w
  6905  0DA4  047A               	iorwf	??___flge+2,w
  6906  0DA5  0479               	iorwf	??___flge+1,w
  6907  0DA6  0478               	iorwf	??___flge,w
  6908  0DA7  1D03               	skipz
  6909  0DA8  2DB1               	goto	l2390
  6910  0DA9  3000               	movlw	0
  6911  0DAA  00F7               	movwf	___flge@ff2+3
  6912  0DAB  3000               	movlw	0
  6913  0DAC  00F6               	movwf	___flge@ff2+2
  6914  0DAD  3000               	movlw	0
  6915  0DAE  00F5               	movwf	___flge@ff2+1
  6916  0DAF  3000               	movlw	0
  6917  0DB0  00F4               	movwf	___flge@ff2
  6918  0DB1                     l2390:	
  6919  0DB1  1FF3               	btfss	___flge@ff1+3,7
  6920  0DB2  2DCB               	goto	l2394
  6921  0DB3  3000               	movlw	0
  6922  0DB4  00F8               	movwf	??___flge
  6923  0DB5  3000               	movlw	0
  6924  0DB6  00F9               	movwf	??___flge+1
  6925  0DB7  3000               	movlw	0
  6926  0DB8  00FA               	movwf	??___flge+2
  6927  0DB9  3080               	movlw	128
  6928  0DBA  00FB               	movwf	??___flge+3
  6929  0DBB  0870               	movf	___flge@ff1,w
  6930  0DBC  02F8               	subwf	??___flge,f
  6931  0DBD  0871               	movf	___flge@ff1+1,w
  6932  0DBE  3BF9               	subwfb	??___flge+1,f
  6933  0DBF  0872               	movf	___flge@ff1+2,w
  6934  0DC0  3BFA               	subwfb	??___flge+2,f
  6935  0DC1  0873               	movf	___flge@ff1+3,w
  6936  0DC2  3BFB               	subwfb	??___flge+3,f
  6937  0DC3  087B               	movf	??___flge+3,w
  6938  0DC4  00F3               	movwf	___flge@ff1+3
  6939  0DC5  087A               	movf	??___flge+2,w
  6940  0DC6  00F2               	movwf	___flge@ff1+2
  6941  0DC7  0879               	movf	??___flge+1,w
  6942  0DC8  00F1               	movwf	___flge@ff1+1
  6943  0DC9  0878               	movf	??___flge,w
  6944  0DCA  00F0               	movwf	___flge@ff1
  6945  0DCB                     l2394:	
  6946  0DCB  1FF7               	btfss	___flge@ff2+3,7
  6947  0DCC  2DE5               	goto	l508
  6948  0DCD  3000               	movlw	0
  6949  0DCE  00F8               	movwf	??___flge
  6950  0DCF  3000               	movlw	0
  6951  0DD0  00F9               	movwf	??___flge+1
  6952  0DD1  3000               	movlw	0
  6953  0DD2  00FA               	movwf	??___flge+2
  6954  0DD3  3080               	movlw	128
  6955  0DD4  00FB               	movwf	??___flge+3
  6956  0DD5  0874               	movf	___flge@ff2,w
  6957  0DD6  02F8               	subwf	??___flge,f
  6958  0DD7  0875               	movf	___flge@ff2+1,w
  6959  0DD8  3BF9               	subwfb	??___flge+1,f
  6960  0DD9  0876               	movf	___flge@ff2+2,w
  6961  0DDA  3BFA               	subwfb	??___flge+2,f
  6962  0DDB  0877               	movf	___flge@ff2+3,w
  6963  0DDC  3BFB               	subwfb	??___flge+3,f
  6964  0DDD  087B               	movf	??___flge+3,w
  6965  0DDE  00F7               	movwf	___flge@ff2+3
  6966  0DDF  087A               	movf	??___flge+2,w
  6967  0DE0  00F6               	movwf	___flge@ff2+2
  6968  0DE1  0879               	movf	??___flge+1,w
  6969  0DE2  00F5               	movwf	___flge@ff2+1
  6970  0DE3  0878               	movf	??___flge,w
  6971  0DE4  00F4               	movwf	___flge@ff2
  6972  0DE5                     l508:	
  6973  0DE5  3080               	movlw	128
  6974  0DE6  06F3               	xorwf	___flge@ff1+3,f
  6975  0DE7  3080               	movlw	128
  6976  0DE8  06F7               	xorwf	___flge@ff2+3,f
  6977  0DE9  0877               	movf	___flge@ff2+3,w
  6978  0DEA  0273               	subwf	___flge@ff1+3,w
  6979  0DEB  1D03               	skipz
  6980  0DEC  0008               	return
  6981  0DED  0876               	movf	___flge@ff2+2,w
  6982  0DEE  0272               	subwf	___flge@ff1+2,w
  6983  0DEF  1D03               	skipz
  6984  0DF0  0008               	return
  6985  0DF1  0875               	movf	___flge@ff2+1,w
  6986  0DF2  0271               	subwf	___flge@ff1+1,w
  6987  0DF3  1D03               	skipz
  6988  0DF4  0008               	return
  6989  0DF5  0874               	movf	___flge@ff2,w
  6990  0DF6  0270               	subwf	___flge@ff1,w
  6991  0DF7  0008               	return
  6992  0DF8                     __end_of___flge:	
  6993                           
  6994                           	psect	text19
  6995  1702                     __ptext19:	
  6996 ;; *************** function _OLED_Write_String *****************
  6997 ;; Defined at:
  6998 ;;		line 284 in file "oled.c"
  6999 ;; Parameters:    Size  Location     Type
  7000 ;;  s               2   12[COMMON] PTR unsigned char 
  7001 ;;		 -> ftoa@buf(17), STR_3(6), STR_2(6), OLED_Write_Integer@s(20), 
  7002 ;;		 -> STR_1(3), 
  7003 ;; Auto vars:     Size  Location     Type
  7004 ;;		None
  7005 ;; Return value:  Size  Location     Type
  7006 ;;                  1    wreg      void 
  7007 ;; Registers used:
  7008 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7009 ;; Tracked objects:
  7010 ;;		On entry : 0/0
  7011 ;;		On exit  : 0/0
  7012 ;;		Unchanged: 0/0
  7013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7014 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7016 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7017 ;;      Totals:         2       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7018 ;;Total ram usage:        3 bytes
  7019 ;; Hardware stack levels used:    1
  7020 ;; Hardware stack levels required when called:    2
  7021 ;; This function calls:
  7022 ;;		_OLED_PutChar
  7023 ;; This function is called by:
  7024 ;;		_main
  7025 ;;		_OLED_Write_Float
  7026 ;;		_OLED_Write_Integer
  7027 ;; This function uses a non-reentrant model
  7028 ;;
  7029                           
  7030                           
  7031                           ;psect for function _OLED_Write_String
  7032  1702                     _OLED_Write_String:	
  7033  1702                     l2648:	
  7034                           ;oled.c: 286: while (*s) OLED_PutChar( *s++);
  7035                           
  7036                           ;incstack = 0
  7037                           ; Regs used in _OLED_Write_String: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7038                           
  7039  1702  087C               	movf	OLED_Write_String@s,w
  7040  1703  0084               	movwf	4
  7041  1704  087D               	movf	OLED_Write_String@s+1,w
  7042  1705  0085               	movwf	5
  7043  1706  0012               	moviw fsr0++
  7044  1707  1903               	btfsc	3,2
  7045  1708  0008               	return
  7046  1709  087C               	movf	OLED_Write_String@s,w
  7047  170A  0084               	movwf	4
  7048  170B  087D               	movf	OLED_Write_String@s+1,w
  7049  170C  0085               	movwf	5
  7050  170D  0800               	movf	0,w	;code access
  7051  170E  318D  2514  3197   	fcall	_OLED_PutChar
  7052  1711  3001               	movlw	1
  7053  1712  07FC               	addwf	OLED_Write_String@s,f
  7054  1713  3000               	movlw	0
  7055  1714  3DFD               	addwfc	OLED_Write_String@s+1,f
  7056  1715  2F02               	goto	l2648
  7057  1716                     __end_of_OLED_Write_String:	
  7058                           
  7059                           	psect	text20
  7060  0BE5                     __ptext20:	
  7061 ;; *************** function _OLED_Init *****************
  7062 ;; Defined at:
  7063 ;;		line 174 in file "oled.c"
  7064 ;; Parameters:    Size  Location     Type
  7065 ;;		None
  7066 ;; Auto vars:     Size  Location     Type
  7067 ;;		None
  7068 ;; Return value:  Size  Location     Type
  7069 ;;                  1    wreg      void 
  7070 ;; Registers used:
  7071 ;;		wreg, status,2, status,0, pclath, cstack
  7072 ;; Tracked objects:
  7073 ;;		On entry : 0/0
  7074 ;;		On exit  : 0/0
  7075 ;;		Unchanged: 0/0
  7076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7081 ;;Total ram usage:        0 bytes
  7082 ;; Hardware stack levels used:    1
  7083 ;; Hardware stack levels required when called:    2
  7084 ;; This function calls:
  7085 ;;		_OLED_Command
  7086 ;; This function is called by:
  7087 ;;		_main
  7088 ;; This function uses a non-reentrant model
  7089 ;;
  7090                           
  7091                           
  7092                           ;psect for function _OLED_Init
  7093  0BE5                     _OLED_Init:	
  7094                           
  7095                           ;oled.c: 176: OLED_Command(0xAE);
  7096                           
  7097                           ;incstack = 0
  7098                           ; Regs used in _OLED_Init: [wreg+status,2+status,0+pclath+cstack]
  7099  0BE5  30AE               	movlw	174
  7100  0BE6  3197  2731  318B   	fcall	_OLED_Command
  7101                           
  7102                           ;oled.c: 177: OLED_Command(0xD5);
  7103  0BE9  30D5               	movlw	213
  7104  0BEA  3197  2731  318B   	fcall	_OLED_Command
  7105                           
  7106                           ;oled.c: 178: OLED_Command(0x80);
  7107  0BED  3080               	movlw	128
  7108  0BEE  3197  2731  318B   	fcall	_OLED_Command
  7109                           
  7110                           ;oled.c: 179: OLED_Command(0xA8);
  7111  0BF1  30A8               	movlw	168
  7112  0BF2  3197  2731  318B   	fcall	_OLED_Command
  7113                           
  7114                           ;oled.c: 180: OLED_Command(0x1F);
  7115  0BF5  301F               	movlw	31
  7116  0BF6  3197  2731  318B   	fcall	_OLED_Command
  7117                           
  7118                           ;oled.c: 181: OLED_Command(0xD3);
  7119  0BF9  30D3               	movlw	211
  7120  0BFA  3197  2731  318B   	fcall	_OLED_Command
  7121                           
  7122                           ;oled.c: 182: OLED_Command(0x0);
  7123  0BFD  3000               	movlw	0
  7124  0BFE  3197  2731  318B   	fcall	_OLED_Command
  7125                           
  7126                           ;oled.c: 183: OLED_Command(0x40 | 0x0);
  7127  0C01  3040               	movlw	64
  7128  0C02  3197  2731  318B   	fcall	_OLED_Command
  7129                           
  7130                           ;oled.c: 184: OLED_Command(0x8D);
  7131  0C05  308D               	movlw	141
  7132  0C06  3197  2731  318B   	fcall	_OLED_Command
  7133                           
  7134                           ;oled.c: 185: OLED_Command(0xAF);
  7135  0C09  30AF               	movlw	175
  7136  0C0A  3197  2731  318B   	fcall	_OLED_Command
  7137                           
  7138                           ;oled.c: 186: OLED_Command(0x20);
  7139  0C0D  3020               	movlw	32
  7140  0C0E  3197  2731  318B   	fcall	_OLED_Command
  7141                           
  7142                           ;oled.c: 187: OLED_Command(0x00);
  7143  0C11  3000               	movlw	0
  7144  0C12  3197  2731  318B   	fcall	_OLED_Command
  7145                           
  7146                           ;oled.c: 188: OLED_Command(0xA0 | 0x1);
  7147  0C15  30A1               	movlw	161
  7148  0C16  3197  2731  318B   	fcall	_OLED_Command
  7149                           
  7150                           ;oled.c: 189: OLED_Command(0xC8);
  7151  0C19  30C8               	movlw	200
  7152  0C1A  3197  2731  318B   	fcall	_OLED_Command
  7153                           
  7154                           ;oled.c: 190: OLED_Command(0xDA);
  7155  0C1D  30DA               	movlw	218
  7156  0C1E  3197  2731  318B   	fcall	_OLED_Command
  7157                           
  7158                           ;oled.c: 191: OLED_Command(0x02);
  7159  0C21  3002               	movlw	2
  7160  0C22  3197  2731  318B   	fcall	_OLED_Command
  7161                           
  7162                           ;oled.c: 192: OLED_Command(0x81);
  7163  0C25  3081               	movlw	129
  7164  0C26  3197  2731  318B   	fcall	_OLED_Command
  7165                           
  7166                           ;oled.c: 193: OLED_Command(0x8F);
  7167  0C29  308F               	movlw	143
  7168  0C2A  3197  2731  318B   	fcall	_OLED_Command
  7169                           
  7170                           ;oled.c: 194: OLED_Command(0xD9);
  7171  0C2D  30D9               	movlw	217
  7172  0C2E  3197  2731  318B   	fcall	_OLED_Command
  7173                           
  7174                           ;oled.c: 195: OLED_Command(0xF1);
  7175  0C31  30F1               	movlw	241
  7176  0C32  3197  2731  318B   	fcall	_OLED_Command
  7177                           
  7178                           ;oled.c: 196: OLED_Command(0xDB);
  7179  0C35  30DB               	movlw	219
  7180  0C36  3197  2731  318B   	fcall	_OLED_Command
  7181                           
  7182                           ;oled.c: 197: OLED_Command(0x40);
  7183  0C39  3040               	movlw	64
  7184  0C3A  3197  2731  318B   	fcall	_OLED_Command
  7185                           
  7186                           ;oled.c: 198: OLED_Command(0xA4);
  7187  0C3D  30A4               	movlw	164
  7188  0C3E  3197  2731  318B   	fcall	_OLED_Command
  7189                           
  7190                           ;oled.c: 199: OLED_Command(0xA6);
  7191  0C41  30A6               	movlw	166
  7192  0C42  3197  2731  318B   	fcall	_OLED_Command
  7193                           
  7194                           ;oled.c: 200: OLED_Command(0xAF);
  7195  0C45  30AF               	movlw	175
  7196  0C46  3197  2731         	fcall	_OLED_Command
  7197  0C48  0008               	return
  7198  0C49                     __end_of_OLED_Init:	
  7199                           
  7200                           	psect	text21
  7201  17D7                     __ptext21:	
  7202 ;; *************** function _OLED_Clear *****************
  7203 ;; Defined at:
  7204 ;;		line 264 in file "oled.c"
  7205 ;; Parameters:    Size  Location     Type
  7206 ;;		None
  7207 ;; Auto vars:     Size  Location     Type
  7208 ;;  col             2   20[BANK0 ] unsigned int 
  7209 ;;  row             2   18[BANK0 ] unsigned int 
  7210 ;; Return value:  Size  Location     Type
  7211 ;;                  1    wreg      void 
  7212 ;; Registers used:
  7213 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7214 ;; Tracked objects:
  7215 ;;		On entry : 0/0
  7216 ;;		On exit  : 0/0
  7217 ;;		Unchanged: 0/0
  7218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7220 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7221 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7222 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7223 ;;Total ram usage:        5 bytes
  7224 ;; Hardware stack levels used:    1
  7225 ;; Hardware stack levels required when called:    3
  7226 ;; This function calls:
  7227 ;;		_OLED_PutChar
  7228 ;;		_OLED_YX
  7229 ;; This function is called by:
  7230 ;;		_main
  7231 ;; This function uses a non-reentrant model
  7232 ;;
  7233                           
  7234                           
  7235                           ;psect for function _OLED_Clear
  7236  17D7                     _OLED_Clear:	
  7237                           
  7238                           ;oled.c: 266: for ( uint16_t row = 0; row < 8; row++ ) {
  7239                           
  7240                           ;incstack = 0
  7241                           ; Regs used in _OLED_Clear: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7242  17D7  0020               	movlb	0	; select bank0
  7243  17D8  01B2               	clrf	OLED_Clear@row
  7244  17D9  01B3               	clrf	OLED_Clear@row+1
  7245  17DA                     l2738:	
  7246                           
  7247                           ;oled.c: 267: for ( uint16_t col = 0; col < 16; col++ ) {
  7248  17DA  01B4               	clrf	OLED_Clear@col
  7249  17DB  01B5               	clrf	OLED_Clear@col+1
  7250  17DC                     l2744:	
  7251                           
  7252                           ;oled.c: 268: OLED_YX( row, col );
  7253  17DC  0834               	movf	OLED_Clear@col,w
  7254  17DD  00FC               	movwf	??_OLED_Clear
  7255  17DE  087C               	movf	??_OLED_Clear,w
  7256  17DF  00F5               	movwf	OLED_YX@Column
  7257  17E0  0832               	movf	OLED_Clear@row,w
  7258  17E1  3197  27AF  3197   	fcall	_OLED_YX
  7259                           
  7260                           ;oled.c: 269: OLED_PutChar(' ');
  7261  17E4  3020               	movlw	32
  7262  17E5  318D  2514  3197   	fcall	_OLED_PutChar
  7263  17E8  3001               	movlw	1
  7264  17E9  0020               	movlb	0	; select bank0
  7265  17EA  07B4               	addwf	OLED_Clear@col,f
  7266  17EB  3000               	movlw	0
  7267  17EC  3DB5               	addwfc	OLED_Clear@col+1,f
  7268  17ED  3000               	movlw	0
  7269  17EE  0235               	subwf	OLED_Clear@col+1,w
  7270  17EF  3010               	movlw	16
  7271  17F0  1903               	skipnz
  7272  17F1  0234               	subwf	OLED_Clear@col,w
  7273  17F2  1C03               	skipc
  7274  17F3  2FDC               	goto	l2744
  7275  17F4  3001               	movlw	1
  7276  17F5  07B2               	addwf	OLED_Clear@row,f
  7277  17F6  3000               	movlw	0
  7278  17F7  3DB3               	addwfc	OLED_Clear@row+1,f
  7279  17F8  3000               	movlw	0
  7280  17F9  0233               	subwf	OLED_Clear@row+1,w
  7281  17FA  3008               	movlw	8
  7282  17FB  1903               	skipnz
  7283  17FC  0232               	subwf	OLED_Clear@row,w
  7284  17FD  1803               	btfsc	3,0
  7285  17FE  0008               	return
  7286  17FF  2FDA               	goto	l2738
  7287  1800                     __end_of_OLED_Clear:	
  7288                           
  7289                           	psect	text22
  7290  17AF                     __ptext22:	
  7291 ;; *************** function _OLED_YX *****************
  7292 ;; Defined at:
  7293 ;;		line 213 in file "oled.c"
  7294 ;; Parameters:    Size  Location     Type
  7295 ;;  Row             1    wreg     unsigned char 
  7296 ;;  Column          1    5[COMMON] unsigned char 
  7297 ;; Auto vars:     Size  Location     Type
  7298 ;;  Row             1    9[COMMON] unsigned char 
  7299 ;; Return value:  Size  Location     Type
  7300 ;;                  1    wreg      void 
  7301 ;; Registers used:
  7302 ;;		wreg, status,2, status,0, pclath, cstack
  7303 ;; Tracked objects:
  7304 ;;		On entry : 0/0
  7305 ;;		On exit  : 0/0
  7306 ;;		Unchanged: 0/0
  7307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7308 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7309 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7310 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7311 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7312 ;;Total ram usage:        5 bytes
  7313 ;; Hardware stack levels used:    1
  7314 ;; Hardware stack levels required when called:    2
  7315 ;; This function calls:
  7316 ;;		_OLED_Command
  7317 ;; This function is called by:
  7318 ;;		_main
  7319 ;;		_OLED_Clear
  7320 ;; This function uses a non-reentrant model
  7321 ;;
  7322                           
  7323                           
  7324                           ;psect for function _OLED_YX
  7325  17AF                     _OLED_YX:	
  7326                           
  7327                           ;incstack = 0
  7328                           ; Regs used in _OLED_YX: [wreg+status,2+status,0+pclath+cstack]
  7329                           ;OLED_YX@Row stored from wreg
  7330  17AF  00F9               	movwf	OLED_YX@Row
  7331                           
  7332                           ;oled.c: 215: OLED_Command( 0xB0 + Row);
  7333  17B0  0879               	movf	OLED_YX@Row,w
  7334  17B1  3EB0               	addlw	176
  7335  17B2  3197  2731  3197   	fcall	_OLED_Command
  7336                           
  7337                           ;oled.c: 216: OLED_Command( 0x00 + (8*Column & 0x0F) );
  7338  17B5  0875               	movf	OLED_YX@Column,w
  7339  17B6  00F6               	movwf	??_OLED_YX
  7340  17B7  3002               	movlw	2
  7341  17B8                     u3405:	
  7342  17B8  35F6               	lslf	??_OLED_YX,f
  7343  17B9  3EFF               	addlw	-1
  7344  17BA  1D03               	skipz
  7345  17BB  2FB8               	goto	u3405
  7346  17BC  3576               	lslf	??_OLED_YX,w
  7347  17BD  390F               	andlw	15
  7348  17BE  3197  2731  3197   	fcall	_OLED_Command
  7349                           
  7350                           ;oled.c: 217: OLED_Command( 0x10 + ((8*Column>>4)&0x0F) );
  7351  17C1  0875               	movf	OLED_YX@Column,w
  7352  17C2  00F6               	movwf	??_OLED_YX
  7353  17C3  01F7               	clrf	??_OLED_YX+1
  7354  17C4  35F6               	lslf	??_OLED_YX,f
  7355  17C5  0DF7               	rlf	??_OLED_YX+1,f
  7356  17C6  35F6               	lslf	??_OLED_YX,f
  7357  17C7  0DF7               	rlf	??_OLED_YX+1,f
  7358  17C8  35F6               	lslf	??_OLED_YX,f
  7359  17C9  0DF7               	rlf	??_OLED_YX+1,f
  7360  17CA  3004               	movlw	4
  7361  17CB  00F8               	movwf	??_OLED_YX+2
  7362  17CC                     u3415:	
  7363  17CC  0D77               	rlf	??_OLED_YX+1,w
  7364  17CD  0CF7               	rrf	??_OLED_YX+1,f
  7365  17CE  0CF6               	rrf	??_OLED_YX,f
  7366  17CF  0BF8               	decfsz	??_OLED_YX+2,f
  7367  17D0  2FCC               	goto	u3415
  7368  17D1  0876               	movf	??_OLED_YX,w
  7369  17D2  390F               	andlw	15
  7370  17D3  3E10               	addlw	16
  7371  17D4  3197  2731         	fcall	_OLED_Command
  7372  17D6  0008               	return
  7373  17D7                     __end_of_OLED_YX:	
  7374                           
  7375                           	psect	text23
  7376  1731                     __ptext23:	
  7377 ;; *************** function _OLED_Command *****************
  7378 ;; Defined at:
  7379 ;;		line 138 in file "oled.c"
  7380 ;; Parameters:    Size  Location     Type
  7381 ;;  temp            1    wreg     unsigned char 
  7382 ;; Auto vars:     Size  Location     Type
  7383 ;;  temp            1    4[COMMON] unsigned char 
  7384 ;; Return value:  Size  Location     Type
  7385 ;;                  1    wreg      void 
  7386 ;; Registers used:
  7387 ;;		wreg, status,2, status,0, pclath, cstack
  7388 ;; Tracked objects:
  7389 ;;		On entry : 0/0
  7390 ;;		On exit  : 0/0
  7391 ;;		Unchanged: 0/0
  7392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7394 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7395 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7396 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7397 ;;Total ram usage:        3 bytes
  7398 ;; Hardware stack levels used:    1
  7399 ;; Hardware stack levels required when called:    1
  7400 ;; This function calls:
  7401 ;;		_Send_I2C_Data
  7402 ;;		_Send_I2C_StartBit
  7403 ;;		_Send_I2C_StopBit
  7404 ;; This function is called by:
  7405 ;;		_OLED_Init
  7406 ;;		_OLED_YX
  7407 ;; This function uses a non-reentrant model
  7408 ;;
  7409                           
  7410                           
  7411                           ;psect for function _OLED_Command
  7412  1731                     _OLED_Command:	
  7413                           
  7414                           ;incstack = 0
  7415                           ; Regs used in _OLED_Command: [wreg+status,2+status,0+pclath+cstack]
  7416                           ;OLED_Command@temp stored from wreg
  7417  1731  00F4               	movwf	OLED_Command@temp
  7418                           
  7419                           ;oled.c: 140: Send_I2C_StartBit();
  7420  1732  3196  26D2  3197   	fcall	_Send_I2C_StartBit
  7421                           
  7422                           ;oled.c: 141: Send_I2C_Data(0x3C << 1);
  7423  1735  3078               	movlw	120
  7424  1736  00F0               	movwf	Send_I2C_Data@databyte
  7425  1737  3000               	movlw	0
  7426  1738  00F1               	movwf	Send_I2C_Data@databyte+1
  7427  1739  3196  26E2  3197   	fcall	_Send_I2C_Data
  7428                           
  7429                           ;oled.c: 142: Send_I2C_Data(0x00);
  7430  173C  3000               	movlw	0
  7431  173D  00F0               	movwf	Send_I2C_Data@databyte
  7432  173E  00F1               	movwf	Send_I2C_Data@databyte+1
  7433  173F  3196  26E2  3197   	fcall	_Send_I2C_Data
  7434                           
  7435                           ;oled.c: 143: Send_I2C_Data(temp);
  7436  1742  0874               	movf	OLED_Command@temp,w
  7437  1743  00F2               	movwf	??_OLED_Command
  7438  1744  01F3               	clrf	??_OLED_Command+1
  7439  1745  0872               	movf	??_OLED_Command,w
  7440  1746  00F0               	movwf	Send_I2C_Data@databyte
  7441  1747  0873               	movf	??_OLED_Command+1,w
  7442  1748  00F1               	movwf	Send_I2C_Data@databyte+1
  7443  1749  3196  26E2  3197   	fcall	_Send_I2C_Data
  7444                           
  7445                           ;oled.c: 144: Send_I2C_StopBit();
  7446  174C  3196  26DA         	fcall	_Send_I2C_StopBit
  7447  174E  0008               	return
  7448  174F                     __end_of_OLED_Command:	
  7449                           
  7450                           	psect	text24
  7451  0D14                     __ptext24:	
  7452 ;; *************** function _OLED_PutChar *****************
  7453 ;; Defined at:
  7454 ;;		line 229 in file "oled.c"
  7455 ;; Parameters:    Size  Location     Type
  7456 ;;  ch              1    wreg     unsigned char 
  7457 ;; Auto vars:     Size  Location     Type
  7458 ;;  ch              1   17[BANK0 ] unsigned char 
  7459 ;;  bytes           9    4[BANK0 ] unsigned char [9]
  7460 ;;  i               2   15[BANK0 ] int 
  7461 ;;  base            2   13[BANK0 ] PTR const unsigned char 
  7462 ;;		 -> OledFont(768), 
  7463 ;; Return value:  Size  Location     Type
  7464 ;;                  1    wreg      void 
  7465 ;; Registers used:
  7466 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7467 ;; Tracked objects:
  7468 ;;		On entry : 0/0
  7469 ;;		On exit  : 0/0
  7470 ;;		Unchanged: 0/0
  7471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7473 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7474 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7475 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7476 ;;Total ram usage:       18 bytes
  7477 ;; Hardware stack levels used:    1
  7478 ;; Hardware stack levels required when called:    1
  7479 ;; This function calls:
  7480 ;;		_Send_I2C_Data
  7481 ;;		_Send_I2C_StartBit
  7482 ;;		_Send_I2C_StopBit
  7483 ;;		_memmove
  7484 ;; This function is called by:
  7485 ;;		_OLED_Clear
  7486 ;;		_OLED_Write_String
  7487 ;; This function uses a non-reentrant model
  7488 ;;
  7489                           
  7490                           
  7491                           ;psect for function _OLED_PutChar
  7492  0D14                     _OLED_PutChar:	
  7493                           
  7494                           ;incstack = 0
  7495                           ; Regs used in _OLED_PutChar: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7496                           ;OLED_PutChar@ch stored from wreg
  7497  0D14  0020               	movlb	0	; select bank0
  7498  0D15  00B1               	movwf	OLED_PutChar@ch
  7499                           
  7500                           ;oled.c: 231: if ( ( ch < 32 ) || ( ch > 127 ) ){
  7501  0D16  3020               	movlw	32
  7502  0D17  0231               	subwf	OLED_PutChar@ch,w
  7503  0D18  1C03               	skipc
  7504  0D19  2D1E               	goto	l2254
  7505  0D1A  3080               	movlw	128
  7506  0D1B  0231               	subwf	OLED_PutChar@ch,w
  7507  0D1C  1C03               	skipc
  7508  0D1D  2D22               	goto	l2256
  7509  0D1E                     l2254:	
  7510                           
  7511                           ;oled.c: 232: ch = ' ';
  7512  0D1E  3020               	movlw	32
  7513  0D1F  00A0               	movwf	??_OLED_PutChar
  7514  0D20  0820               	movf	??_OLED_PutChar,w
  7515  0D21  00B1               	movwf	OLED_PutChar@ch
  7516  0D22                     l2256:	
  7517                           
  7518                           ;oled.c: 233: };oled.c: 235: const uint8_t *base = &OledFont[ch - 32][0];
  7519  0D22  0831               	movf	OLED_PutChar@ch,w
  7520  0D23  00A0               	movwf	??_OLED_PutChar
  7521  0D24  01A1               	clrf	??_OLED_PutChar+1
  7522  0D25  35A0               	lslf	??_OLED_PutChar,f
  7523  0D26  0DA1               	rlf	??_OLED_PutChar+1,f
  7524  0D27  35A0               	lslf	??_OLED_PutChar,f
  7525  0D28  0DA1               	rlf	??_OLED_PutChar+1,f
  7526  0D29  35A0               	lslf	??_OLED_PutChar,f
  7527  0D2A  0DA1               	rlf	??_OLED_PutChar+1,f
  7528  0D2B  3000               	movlw	low ((_OledFont| (0+32768)+65280))
  7529  0D2C  00A2               	movwf	??_OLED_PutChar+2
  7530  0D2D  3087               	movlw	high ((_OledFont| (0+32768)+65280))
  7531  0D2E  00A3               	movwf	??_OLED_PutChar+3
  7532  0D2F  0820               	movf	??_OLED_PutChar,w
  7533  0D30  0722               	addwf	??_OLED_PutChar+2,w
  7534  0D31  00AD               	movwf	OLED_PutChar@base
  7535  0D32  0821               	movf	??_OLED_PutChar+1,w
  7536  0D33  3D23               	addwfc	??_OLED_PutChar+3,w
  7537  0D34  00AE               	movwf	OLED_PutChar@base+1
  7538                           
  7539                           ;oled.c: 237: uint8_t bytes[9];;oled.c: 238: bytes[0] = 0x40;
  7540  0D35  3040               	movlw	64
  7541  0D36  00A0               	movwf	??_OLED_PutChar
  7542  0D37  0820               	movf	??_OLED_PutChar,w
  7543  0D38  00A4               	movwf	OLED_PutChar@bytes
  7544                           
  7545                           ;oled.c: 239: memmove( bytes + 1, base, 8 );
  7546  0D39  082E               	movf	OLED_PutChar@base+1,w
  7547  0D3A  00F1               	movwf	memmove@s1+1
  7548  0D3B  082D               	movf	OLED_PutChar@base,w
  7549  0D3C  00F0               	movwf	memmove@s1
  7550  0D3D  3008               	movlw	8
  7551  0D3E  00F2               	movwf	memmove@n
  7552  0D3F  3000               	movlw	0
  7553  0D40  00F3               	movwf	memmove@n+1
  7554  0D41  3025               	movlw	(low ((OLED_PutChar@bytes| 0+1)))& (0+255)
  7555  0D42  318C  2449  318D   	fcall	_memmove
  7556                           
  7557                           ;oled.c: 241: Send_I2C_StartBit();
  7558  0D45  3196  26D2  318D   	fcall	_Send_I2C_StartBit
  7559                           
  7560                           ;oled.c: 242: Send_I2C_Data(0x3C << 1);
  7561  0D48  3078               	movlw	120
  7562  0D49  00F0               	movwf	Send_I2C_Data@databyte
  7563  0D4A  3000               	movlw	0
  7564  0D4B  00F1               	movwf	Send_I2C_Data@databyte+1
  7565  0D4C  3196  26E2  318D   	fcall	_Send_I2C_Data
  7566                           
  7567                           ;oled.c: 243: Send_I2C_Data(0x40);
  7568  0D4F  3040               	movlw	64
  7569  0D50  00F0               	movwf	Send_I2C_Data@databyte
  7570  0D51  3000               	movlw	0
  7571  0D52  00F1               	movwf	Send_I2C_Data@databyte+1
  7572  0D53  3196  26E2  318D   	fcall	_Send_I2C_Data
  7573                           
  7574                           ;oled.c: 245: int i;;oled.c: 247: for (i = 1; i <= 8; i++){
  7575  0D56  3001               	movlw	1
  7576  0D57  0020               	movlb	0	; select bank0
  7577  0D58  00AF               	movwf	OLED_PutChar@i
  7578  0D59  3000               	movlw	0
  7579  0D5A  00B0               	movwf	OLED_PutChar@i+1
  7580  0D5B                     l2274:	
  7581                           
  7582                           ;oled.c: 248: Send_I2C_Data(bytes[i]);
  7583  0D5B  0020               	movlb	0	; select bank0
  7584  0D5C  082F               	movf	OLED_PutChar@i,w
  7585  0D5D  3E24               	addlw	(low (OLED_PutChar@bytes| 0))& (0+255)
  7586  0D5E  0086               	movwf	6
  7587  0D5F  0187               	clrf	7
  7588  0D60  0801               	movf	1,w
  7589  0D61  00A0               	movwf	??_OLED_PutChar
  7590  0D62  01A1               	clrf	??_OLED_PutChar+1
  7591  0D63  0820               	movf	??_OLED_PutChar,w
  7592  0D64  00F0               	movwf	Send_I2C_Data@databyte
  7593  0D65  0821               	movf	??_OLED_PutChar+1,w
  7594  0D66  00F1               	movwf	Send_I2C_Data@databyte+1
  7595  0D67  3196  26E2  318D   	fcall	_Send_I2C_Data
  7596  0D6A  3001               	movlw	1
  7597  0D6B  0020               	movlb	0	; select bank0
  7598  0D6C  07AF               	addwf	OLED_PutChar@i,f
  7599  0D6D  3000               	movlw	0
  7600  0D6E  3DB0               	addwfc	OLED_PutChar@i+1,f
  7601  0D6F  0830               	movf	OLED_PutChar@i+1,w
  7602  0D70  3A80               	xorlw	128
  7603  0D71  00A0               	movwf	??_OLED_PutChar
  7604  0D72  3080               	movlw	128
  7605  0D73  0220               	subwf	??_OLED_PutChar,w
  7606  0D74  1D03               	skipz
  7607  0D75  2D78               	goto	u2665
  7608  0D76  3009               	movlw	9
  7609  0D77  022F               	subwf	OLED_PutChar@i,w
  7610  0D78                     u2665:	
  7611  0D78  1C03               	skipc
  7612  0D79  2D5B               	goto	l2274
  7613                           
  7614                           ;oled.c: 249: };oled.c: 251: Send_I2C_StopBit();
  7615  0D7A  3196  26DA         	fcall	_Send_I2C_StopBit
  7616  0D7C  0008               	return
  7617  0D7D                     __end_of_OLED_PutChar:	
  7618                           
  7619                           	psect	text25
  7620  0C49                     __ptext25:	
  7621 ;; *************** function _memmove *****************
  7622 ;; Defined at:
  7623 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\memmove.c"
  7624 ;; Parameters:    Size  Location     Type
  7625 ;;  d1              1    wreg     PTR void 
  7626 ;;		 -> OLED_PutChar@bytes(9), 
  7627 ;;  s1              2    0[COMMON] PTR const void 
  7628 ;;		 -> OledFont(768), 
  7629 ;;  n               2    2[COMMON] unsigned int 
  7630 ;; Auto vars:     Size  Location     Type
  7631 ;;  d1              1    8[COMMON] PTR void 
  7632 ;;		 -> OLED_PutChar@bytes(9), 
  7633 ;;  s               2    9[COMMON] PTR const unsigned char 
  7634 ;;		 -> OledFont(768), 
  7635 ;;  d               1   11[COMMON] PTR unsigned char 
  7636 ;;		 -> OLED_PutChar@bytes(9), 
  7637 ;; Return value:  Size  Location     Type
  7638 ;;                  1    wreg      PTR void 
  7639 ;; Registers used:
  7640 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  7641 ;; Tracked objects:
  7642 ;;		On entry : 0/0
  7643 ;;		On exit  : 0/0
  7644 ;;		Unchanged: 0/0
  7645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7646 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7647 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7648 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7649 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7650 ;;Total ram usage:       12 bytes
  7651 ;; Hardware stack levels used:    1
  7652 ;; This function calls:
  7653 ;;		Nothing
  7654 ;; This function is called by:
  7655 ;;		_OLED_PutChar
  7656 ;; This function uses a non-reentrant model
  7657 ;;
  7658                           
  7659                           
  7660                           ;psect for function _memmove
  7661  0C49                     _memmove:	
  7662                           
  7663                           ;incstack = 0
  7664                           ; Regs used in _memmove: [wreg-fsr1h+status,2+status,0+pclath]
  7665                           ;memmove@d1 stored from wreg
  7666  0C49  00F8               	movwf	memmove@d1
  7667  0C4A  0871               	movf	memmove@s1+1,w
  7668  0C4B  00FA               	movwf	memmove@s+1
  7669  0C4C  0870               	movf	memmove@s1,w
  7670  0C4D  00F9               	movwf	memmove@s
  7671  0C4E  0878               	movf	memmove@d1,w
  7672  0C4F  00F4               	movwf	??_memmove
  7673  0C50  0874               	movf	??_memmove,w
  7674  0C51  00FB               	movwf	memmove@d
  7675  0C52  087B               	movf	memmove@d,w
  7676  0C53  00F4               	movwf	??_memmove
  7677  0C54  3000               	movlw	0
  7678  0C55  00F5               	movwf	??_memmove+1
  7679  0C56  0875               	movf	??_memmove+1,w
  7680  0C57  027A               	subwf	memmove@s+1,w
  7681  0C58  1D03               	skipz
  7682  0C59  2C5C               	goto	u1945
  7683  0C5A  0874               	movf	??_memmove,w
  7684  0C5B  0279               	subwf	memmove@s,w
  7685  0C5C                     u1945:	
  7686  0C5C  1803               	skipnc
  7687  0C5D  2C92               	goto	l1952
  7688  0C5E  0872               	movf	memmove@n,w
  7689  0C5F  0779               	addwf	memmove@s,w
  7690  0C60  00F4               	movwf	??_memmove
  7691  0C61  0873               	movf	memmove@n+1,w
  7692  0C62  3D7A               	addwfc	memmove@s+1,w
  7693  0C63  00F5               	movwf	??_memmove+1
  7694  0C64  087B               	movf	memmove@d,w
  7695  0C65  00F6               	movwf	??_memmove+2
  7696  0C66  3000               	movlw	0
  7697  0C67  00F7               	movwf	??_memmove+3
  7698  0C68  0875               	movf	??_memmove+1,w
  7699  0C69  0277               	subwf	??_memmove+3,w
  7700  0C6A  1D03               	skipz
  7701  0C6B  2C6E               	goto	u1955
  7702  0C6C  0874               	movf	??_memmove,w
  7703  0C6D  0276               	subwf	??_memmove+2,w
  7704  0C6E                     u1955:	
  7705  0C6E  1803               	skipnc
  7706  0C6F  2C92               	goto	l1952
  7707  0C70  0872               	movf	memmove@n,w
  7708  0C71  07F9               	addwf	memmove@s,f
  7709  0C72  0873               	movf	memmove@n+1,w
  7710  0C73  3DFA               	addwfc	memmove@s+1,f
  7711  0C74  0872               	movf	memmove@n,w
  7712  0C75  00F4               	movwf	??_memmove
  7713  0C76  0874               	movf	??_memmove,w
  7714  0C77  07FB               	addwf	memmove@d,f
  7715  0C78                     l1948:	
  7716  0C78  3001               	movlw	1
  7717  0C79  02F9               	subwf	memmove@s,f
  7718  0C7A  3000               	movlw	0
  7719  0C7B  3BFA               	subwfb	memmove@s+1,f
  7720  0C7C  0879               	movf	memmove@s,w
  7721  0C7D  0084               	movwf	4
  7722  0C7E  087A               	movf	memmove@s+1,w
  7723  0C7F  0085               	movwf	5
  7724  0C80  0800               	movf	0,w	;code access
  7725  0C81  00F4               	movwf	??_memmove
  7726  0C82  3001               	movlw	1
  7727  0C83  02FB               	subwf	memmove@d,f
  7728  0C84  087B               	movf	memmove@d,w
  7729  0C85  0086               	movwf	6
  7730  0C86  0187               	clrf	7
  7731  0C87  0874               	movf	??_memmove,w
  7732  0C88  0081               	movwf	1
  7733  0C89  3001               	movlw	1
  7734  0C8A  02F2               	subwf	memmove@n,f
  7735  0C8B  3000               	movlw	0
  7736  0C8C  3BF3               	subwfb	memmove@n+1,f
  7737  0C8D  0872               	movf	memmove@n,w
  7738  0C8E  0473               	iorwf	memmove@n+1,w
  7739  0C8F  1903               	btfsc	3,2
  7740  0C90  0008               	return
  7741  0C91  2C78               	goto	l1948
  7742  0C92                     l1952:	
  7743  0C92  0872               	movf	memmove@n,w
  7744  0C93  0473               	iorwf	memmove@n+1,w
  7745  0C94  1903               	btfsc	3,2
  7746  0C95  0008               	return
  7747  0C96  0879               	movf	memmove@s,w
  7748  0C97  0084               	movwf	4
  7749  0C98  087A               	movf	memmove@s+1,w
  7750  0C99  0085               	movwf	5
  7751  0C9A  0800               	movf	0,w	;code access
  7752  0C9B  00F4               	movwf	??_memmove
  7753  0C9C  087B               	movf	memmove@d,w
  7754  0C9D  0086               	movwf	6
  7755  0C9E  0187               	clrf	7
  7756  0C9F  0874               	movf	??_memmove,w
  7757  0CA0  0081               	movwf	1
  7758  0CA1  3001               	movlw	1
  7759  0CA2  07F9               	addwf	memmove@s,f
  7760  0CA3  3000               	movlw	0
  7761  0CA4  3DFA               	addwfc	memmove@s+1,f
  7762  0CA5  3001               	movlw	1
  7763  0CA6  00F4               	movwf	??_memmove
  7764  0CA7  0874               	movf	??_memmove,w
  7765  0CA8  07FB               	addwf	memmove@d,f
  7766  0CA9  3001               	movlw	1
  7767  0CAA  02F2               	subwf	memmove@n,f
  7768  0CAB  3000               	movlw	0
  7769  0CAC  3BF3               	subwfb	memmove@n+1,f
  7770  0CAD  2C92               	goto	l1952
  7771  0CAE                     __end_of_memmove:	
  7772                           
  7773                           	psect	text26
  7774  16DA                     __ptext26:	
  7775 ;; *************** function _Send_I2C_StopBit *****************
  7776 ;; Defined at:
  7777 ;;		line 106 in file "I2C.c"
  7778 ;; Parameters:    Size  Location     Type
  7779 ;;		None
  7780 ;; Auto vars:     Size  Location     Type
  7781 ;;		None
  7782 ;; Return value:  Size  Location     Type
  7783 ;;                  1    wreg      void 
  7784 ;; Registers used:
  7785 ;;		None
  7786 ;; Tracked objects:
  7787 ;;		On entry : 0/0
  7788 ;;		On exit  : 0/0
  7789 ;;		Unchanged: 0/0
  7790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7795 ;;Total ram usage:        0 bytes
  7796 ;; Hardware stack levels used:    1
  7797 ;; This function calls:
  7798 ;;		Nothing
  7799 ;; This function is called by:
  7800 ;;		_OLED_Command
  7801 ;;		_OLED_PutChar
  7802 ;;		_OLED_Data
  7803 ;; This function uses a non-reentrant model
  7804 ;;
  7805                           
  7806                           
  7807                           ;psect for function _Send_I2C_StopBit
  7808  16DA                     _Send_I2C_StopBit:	
  7809                           
  7810                           ;I2C.c: 108: PIR1bits.SSP1IF=0;
  7811                           
  7812                           ;incstack = 0
  7813                           ; Regs used in _Send_I2C_StopBit: []
  7814  16DA  0020               	movlb	0	; select bank0
  7815  16DB  1191               	bcf	17,3	;volatile
  7816                           
  7817                           ;I2C.c: 109: SSPCON2bits.PEN=1;
  7818  16DC  0024               	movlb	4	; select bank4
  7819  16DD  1516               	bsf	22,2	;volatile
  7820  16DE                     l77:	
  7821                           ;I2C.c: 110: while(!PIR1bits.SSP1IF);
  7822                           
  7823  16DE  0020               	movlb	0	; select bank0
  7824  16DF  1991               	btfsc	17,3	;volatile
  7825  16E0  0008               	return
  7826  16E1  2EDE               	goto	l77
  7827  16E2                     __end_of_Send_I2C_StopBit:	
  7828                           
  7829                           	psect	text27
  7830  16D2                     __ptext27:	
  7831 ;; *************** function _Send_I2C_StartBit *****************
  7832 ;; Defined at:
  7833 ;;		line 96 in file "I2C.c"
  7834 ;; Parameters:    Size  Location     Type
  7835 ;;		None
  7836 ;; Auto vars:     Size  Location     Type
  7837 ;;		None
  7838 ;; Return value:  Size  Location     Type
  7839 ;;                  1    wreg      void 
  7840 ;; Registers used:
  7841 ;;		None
  7842 ;; Tracked objects:
  7843 ;;		On entry : 0/0
  7844 ;;		On exit  : 0/0
  7845 ;;		Unchanged: 0/0
  7846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7851 ;;Total ram usage:        0 bytes
  7852 ;; Hardware stack levels used:    1
  7853 ;; This function calls:
  7854 ;;		Nothing
  7855 ;; This function is called by:
  7856 ;;		_OLED_Command
  7857 ;;		_OLED_PutChar
  7858 ;;		_OLED_Data
  7859 ;; This function uses a non-reentrant model
  7860 ;;
  7861                           
  7862                           
  7863                           ;psect for function _Send_I2C_StartBit
  7864  16D2                     _Send_I2C_StartBit:	
  7865                           
  7866                           ;I2C.c: 98: PIR1bits.SSP1IF=0;
  7867                           
  7868                           ;incstack = 0
  7869                           ; Regs used in _Send_I2C_StartBit: []
  7870  16D2  0020               	movlb	0	; select bank0
  7871  16D3  1191               	bcf	17,3	;volatile
  7872                           
  7873                           ;I2C.c: 99: SSPCON2bits.SEN=1;
  7874  16D4  0024               	movlb	4	; select bank4
  7875  16D5  1416               	bsf	22,0	;volatile
  7876  16D6                     l71:	
  7877                           ;I2C.c: 100: while(!PIR1bits.SSP1IF);
  7878                           
  7879  16D6  0020               	movlb	0	; select bank0
  7880  16D7  1991               	btfsc	17,3	;volatile
  7881  16D8  0008               	return
  7882  16D9  2ED6               	goto	l71
  7883  16DA                     __end_of_Send_I2C_StartBit:	
  7884                           
  7885                           	psect	text28
  7886  16E2                     __ptext28:	
  7887 ;; *************** function _Send_I2C_Data *****************
  7888 ;; Defined at:
  7889 ;;		line 48 in file "I2C.c"
  7890 ;; Parameters:    Size  Location     Type
  7891 ;;  databyte        2    0[COMMON] unsigned int 
  7892 ;; Auto vars:     Size  Location     Type
  7893 ;;		None
  7894 ;; Return value:  Size  Location     Type
  7895 ;;                  1    wreg      void 
  7896 ;; Registers used:
  7897 ;;		wreg
  7898 ;; Tracked objects:
  7899 ;;		On entry : 0/0
  7900 ;;		On exit  : 0/0
  7901 ;;		Unchanged: 0/0
  7902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7903 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7906 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7907 ;;Total ram usage:        2 bytes
  7908 ;; Hardware stack levels used:    1
  7909 ;; This function calls:
  7910 ;;		Nothing
  7911 ;; This function is called by:
  7912 ;;		_OLED_Command
  7913 ;;		_OLED_PutChar
  7914 ;;		_OLED_Data
  7915 ;; This function uses a non-reentrant model
  7916 ;;
  7917                           
  7918                           
  7919                           ;psect for function _Send_I2C_Data
  7920  16E2                     _Send_I2C_Data:	
  7921                           
  7922                           ;I2C.c: 50: PIR1bits.SSP1IF=0;
  7923                           
  7924                           ;incstack = 0
  7925                           ; Regs used in _Send_I2C_Data: [wreg]
  7926  16E2  0020               	movlb	0	; select bank0
  7927  16E3  1191               	bcf	17,3	;volatile
  7928                           
  7929                           ;I2C.c: 51: SSPBUF = databyte;
  7930  16E4  0870               	movf	Send_I2C_Data@databyte,w
  7931  16E5  0024               	movlb	4	; select bank4
  7932  16E6  0091               	movwf	17	;volatile
  7933  16E7                     l53:	
  7934                           ;I2C.c: 52: while(!PIR1bits.SSP1IF);
  7935                           
  7936  16E7  0020               	movlb	0	; select bank0
  7937  16E8  1991               	btfsc	17,3	;volatile
  7938  16E9  0008               	return
  7939  16EA  2EE7               	goto	l53
  7940  16EB                     __end_of_Send_I2C_Data:	
  7941                           
  7942                           	psect	text29
  7943  0005                     __ptext29:	
  7944 ;; *************** function _I2C_Init *****************
  7945 ;; Defined at:
  7946 ;;		line 19 in file "I2C.c"
  7947 ;; Parameters:    Size  Location     Type
  7948 ;;		None
  7949 ;; Auto vars:     Size  Location     Type
  7950 ;;		None
  7951 ;; Return value:  Size  Location     Type
  7952 ;;                  1    wreg      void 
  7953 ;; Registers used:
  7954 ;;		wreg, status,2, status,0
  7955 ;; Tracked objects:
  7956 ;;		On entry : 0/0
  7957 ;;		On exit  : 0/0
  7958 ;;		Unchanged: 0/0
  7959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7962 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7963 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7964 ;;Total ram usage:        1 bytes
  7965 ;; Hardware stack levels used:    1
  7966 ;; This function calls:
  7967 ;;		Nothing
  7968 ;; This function is called by:
  7969 ;;		_main
  7970 ;; This function uses a non-reentrant model
  7971 ;;
  7972                           
  7973                           
  7974                           ;psect for function _I2C_Init
  7975  0005                     _I2C_Init:	
  7976                           
  7977                           ;I2C.c: 25: SSPCONbits.SSPM=0x08;
  7978                           
  7979                           ;incstack = 0
  7980                           ; Regs used in _I2C_Init: [wreg+status,2+status,0]
  7981  0005  0024               	movlb	4	; select bank4
  7982  0006  0815               	movf	21,w	;volatile
  7983  0007  39F0               	andlw	-16
  7984  0008  3808               	iorlw	8
  7985  0009  0095               	movwf	21	;volatile
  7986                           
  7987                           ;I2C.c: 26: SSPCONbits.SSPEN=1;
  7988  000A  1695               	bsf	21,5	;volatile
  7989                           
  7990                           ;I2C.c: 38: SSPADD = 39;
  7991  000B  3027               	movlw	39
  7992  000C  0092               	movwf	18	;volatile
  7993                           
  7994                           ;I2C.c: 42: _delay((unsigned long)((10)*(16000000/4000.0)));
  7995  000D  3034               	movlw	52
  7996  000E  00F0               	movwf	??_I2C_Init
  7997  000F  30F2               	movlw	242
  7998  0010                     u3807:	
  7999  0010  0B89               	decfsz	9,f
  8000  0011  2810               	goto	u3807
  8001  0012  0BF0               	decfsz	??_I2C_Init,f
  8002  0013  2810               	goto	u3807
  8003  0014  0008               	return
  8004  0015                     __end_of_I2C_Init:	
  8005  007E                     btemp	set	126	;btemp
  8006  007E                     wtemp0	set	126


Data Sizes:
    Strings     20
    Constant    808
    Data        0
    BSS         33
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80      2      35
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    ftoa@status	PTR int  size(1) Largest target is 2
		 -> OLED_Write_Float@status(BANK0[2]), 

    memmove@d1	PTR void  size(1) Largest target is 9
		 -> OLED_PutChar@bytes(BANK0[9]), 

    memmove@d	PTR unsigned char  size(1) Largest target is 9
		 -> OLED_PutChar@bytes(BANK0[9]), 

    memmove@s1	PTR const void  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    memmove@s	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 20
		 -> OLED_Write_Integer@s(BANK0[20]), 

    ftoa@cp	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_4(CODE[11]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__ftoa	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    OLED_Write_Float@buf11	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 20
		 -> OLED_Write_Integer@s(BANK0[20]), 

    OLED_Write_String@s	PTR unsigned char  size(2) Largest target is 20
		 -> ftoa@buf(BANK1[17]), STR_3(CODE[6]), STR_2(CODE[6]), OLED_Write_Integer@s(BANK0[20]), 
		 -> STR_1(CODE[3]), 

    sp__memmove	PTR void  size(1) Largest target is 9
		 -> OLED_PutChar@bytes(BANK0[9]), 

    OLED_PutChar@base	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 


Critical Paths under _main in COMMON

    _main->_OLED_Write_String
    _main->___xxtofl
    _OLED_Write_Float->_OLED_Write_String
    _ftoa->___xxtofl
    _sprintf->___lldiv
    ___llmod->___lldiv
    ___flsub->___xxtofl
    ___fladd->___xxtofl
    ___flmul->___xxtofl
    _OLED_Init->_OLED_Command
    _OLED_YX->_OLED_Command
    _OLED_Command->_Send_I2C_Data
    _OLED_PutChar->_memmove

Critical Paths under _main in BANK0

    _main->_OLED_Write_Float
    ___fldiv->___fladd
    _OLED_Write_Float->_ftoa
    _ftoa->___flsub
    _sprintf->___llmod
    ___fltol->___flmul
    ___flsub->___fladd
    ___fladd->___flmul
    _OLED_Write_String->_OLED_PutChar
    _OLED_Clear->_OLED_PutChar

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   27188
                                             78 BANK0      2     2      0
                                              0 BANK1      2     2      0
                           _I2C_Init
                         _OLED_Clear
                          _OLED_Init
                   _OLED_Write_Float
                  _OLED_Write_String
                            _OLED_YX
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                           _initMain
 ---------------------------------------------------------------------------------
 (1) _initMain                                             0     0      0       0
                        _internal_16
 ---------------------------------------------------------------------------------
 (2) _internal_16                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1425
                                             46 BANK0     26    18      8
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (1) _OLED_Write_Float                                     9     5      4   11186
                                             69 BANK0      9     5      4
                  _OLED_Write_String
                               _ftoa
 ---------------------------------------------------------------------------------
 (2) _ftoa                                                15    10      5    9155
                                             54 BANK0     15    10      5
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             36    26     10    2109
                                             10 BANK0     28    18     10
                            ___lldiv
                            ___llmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___llmod                                             10     2      8     311
                                              0 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             11     7      4     381
                                             26 BANK0     11     7      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flsub                                              8     0      8    2789
                                             46 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             20    12      8    2440
                                             26 BANK0     20    12      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    2569
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     334
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _OLED_Write_String                                    3     1      2    1888
                                             12 COMMON     2     0      2
                                             18 BANK0      1     1      0
                       _OLED_PutChar
 ---------------------------------------------------------------------------------
 (1) _OLED_Init                                            0     0      0     728
                       _OLED_Command
 ---------------------------------------------------------------------------------
 (1) _OLED_Clear                                           5     5      0    2621
                                             12 COMMON     1     1      0
                                             18 BANK0      4     4      0
                       _OLED_PutChar
                            _OLED_YX
 ---------------------------------------------------------------------------------
 (1) _OLED_YX                                              5     4      1    1022
                                              5 COMMON     5     4      1
                       _OLED_Command
 ---------------------------------------------------------------------------------
 (2) _OLED_Command                                         3     3      0     728
                                              2 COMMON     3     3      0
                      _Send_I2C_Data
                  _Send_I2C_StartBit
                   _Send_I2C_StopBit
 ---------------------------------------------------------------------------------
 (2) _OLED_PutChar                                        18    18      0    1463
                                              0 BANK0     18    18      0
                      _Send_I2C_Data
                  _Send_I2C_StartBit
                   _Send_I2C_StopBit
                            _memmove
 ---------------------------------------------------------------------------------
 (3) _memmove                                             12     8      4     549
                                              0 COMMON    12     8      4
 ---------------------------------------------------------------------------------
 (3) _Send_I2C_StopBit                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Send_I2C_StartBit                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Send_I2C_Data                                        2     0      2     706
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Init
   _OLED_Clear
     _OLED_PutChar
       _Send_I2C_Data
       _Send_I2C_StartBit
       _Send_I2C_StopBit
       _memmove
     _OLED_YX
       _OLED_Command
         _Send_I2C_Data
         _Send_I2C_StartBit
         _Send_I2C_StopBit
   _OLED_Init
     _OLED_Command
       _Send_I2C_Data
       _Send_I2C_StartBit
       _Send_I2C_StopBit
   _OLED_Write_Float
     _OLED_Write_String
       _OLED_PutChar
         _Send_I2C_Data
         _Send_I2C_StartBit
         _Send_I2C_StopBit
         _memmove
     _ftoa
       ___flge
       ___flmul
         __Umul8_16
         ___xxtofl (ARG)
       ___flneg
       ___flsub
         ___fladd
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
       ___xxtofl
       _sprintf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         _isdigit
   _OLED_Write_String
     _OLED_PutChar
       _Send_I2C_Data
       _Send_I2C_StartBit
       _Send_I2C_StopBit
       _memmove
   _OLED_YX
     _OLED_Command
       _Send_I2C_Data
       _Send_I2C_StartBit
       _Send_I2C_StopBit
   ___fladd
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___fldiv
     ___fladd (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
   ___flmul
     __Umul8_16
     ___xxtofl (ARG)
   ___flsub
     ___fladd
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _initMain
     _internal_16

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      2      23       7       43.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0      81      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      81      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              50      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24              50      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25              20      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Apr 24 15:59:22 2019

              ___fldiv@aexp 0067                ___fldiv@bexp 0066                ___fldiv@sign 005F  
               __CFG_CP$OFF 0000                          l53 16E7                          l71 16D6  
                        l77 16DE         ___wmul@multiplicand 0072         __Umul8_16@word_mpld 0076  
        OLED_Write_String@s 007C                         l305 02CB                         l331 171E  
                       l316 036A                         l308 02EA                         l157 0ED4  
                       l505 0D97                         l508 0DE5                         l524 0CF8  
                       l701 01FA                         l630 04AB                         l702 0212  
                       l624 0435                         l704 021F                         l732 07E9  
                       l628 04C8                         l645 054B                         l814 175F  
                       l680 00F3                         l666 05C2                         l658 05AA  
                       l771 007C                         l772 0086                         l764 0068  
                       l758 0032    __end_of_OLED_Write_Float 17AF                __CFG_BORV$LO 0000  
                       wreg 0009                __CFG_IESO$ON 0000                ___flmul@aexp 0032  
              ___flmul@bexp 0033            OLED_Command@temp 0074                ___flmul@sign 002D  
              ___flmul@temp 0038                ___flmul@prod 0034                __CFG_LVP$OFF 0000  
              ___fltol@exp1 0044                        l2004 0BD1                        l2020 0B67  
                      l2110 047B                        l2120 04B5                        l2008 0BDC  
                      l2024 0B7F                        l2050 0405                        l2018 0B59  
                      l2220 05BE                        l2052 040D                        l2028 0B8A  
                      l2230 1759                        l2118 04B3                        l2070 042A  
                      l2046 0402                        l2216 05BA                        l2144 04E8  
                      l2136 04D6                        l2128 04C3                        l2080 043F  
                      l2304 028A                        l2146 04EA                        l2154 04F9  
                      l2074 042D                        l2322 02D2                        l2314 0299  
                      l2180 056A                        l2172 055D                        l2164 0543  
                      l2316 02C8                        l2254 0D1E                        l2414 0CB8  
                      l2350 0347                        l2318 02CD                        l2256 0D22  
                      l2600 002A                        l2360 037D                        l2344 031A  
                      l2328 02F9                        l2274 0D5B                        l2194 057C  
                      l2186 0571                        l2434 0CE6                        l2418 0CC1  
                      l2610 0045                        l2370 0394                        l2362 0380  
                      l2354 0356                        l2338 0318                        l2290 024C  
                      l2188 0573                        l2444 0D05                        l2436 0CF4  
                      l2620 007A                        l2612 0055                        l2380 03E3  
                      l2390 0DB1                        l2550 0751                        l2470 05E6  
                      l2198 057E                        l2622 006D                        l2606 0041  
                      l2552 0768                        l2472 05EE                        l2376 03D8  
                      l2296 025C                        l2394 0DCB                        l2562 0781  
                      l2490 0611                        l2634 00A1                        l2378 022A  
                      l2810 011E                        l2572 07AA                        l2468 05E4  
                      l2660 0E32                        l2804 0112                        l2582 07D6  
                      l2558 077F                        l2486 0607                        l2830 0165  
                      l1952 0C92                        l2744 17DC                        l2648 1702  
                      l2576 07BF                        l2488 0609                        l2840 0183  
                      l2912 0ECE                        l2904 0EC9                        l2738 17DA  
                      l2498 061F                        l1970 1700                        l2770 00C4  
                      l1948 0C78                        l2836 017E                        l2862 01B7  
                      l2854 0189                        l2838 0147                        l2790 00E8  
                      l2774 00C7                        l1976 1718                        l2856 01A0  
                      l2776 00CF                        l1994 0BA3                        l2890 021B  
                      l2866 01B9                        l2794 00EB                        l1996 0BB1  
                      l2876 01E2                        STR_1 182E                        STR_2 1828  
                      STR_3 1828                        STR_4 0B00             __end_of_OLED_YX 17D7  
               ?_OLED_Clear 0070                        u2105 0BD2                        u2025 171F  
                      u2035 1724                        u2135 0B5C                        u3105 071A  
                      u2065 0BA6                        u3115 0731                        u2403 050B  
                      u2155 0B75                        u3125 0740                        u2325 04B9  
                      u2085 0BB2                        u2165 0B80                        u3135 0754  
                      u2095 0BC6                        u2280 049A                        u3225 0798  
                      u2290 049B                        u3235 07B3                        u3155 075D  
                      u2275 048F                        u3315 0062                        u3405 17B8  
                      u3245 07C9                        u3085 0695                        u2445 055E  
                      u3415 17CC                        u3095 06C4                        u3335 0074  
                      u2625 1760                        u2545 0595                        u2395 04EE  
                      u3375 008E                        u3295 004E                        u1945 0C5C  
                      u2665 0D78                        u3625 018C                        u1955 0C6E  
                      u2915 0CCA                        u2755 033D                        u3715 01D0  
                      u3555 014F                        u3725 01EB                        u3645 0195  
                      u3565 0156                        u3807 0010                        u2775 034E  
                      u3735 0204                        u2945 0CE7                        u2785 0360  
                      u3585 015F                        u2795 0372                        u3595 0173  
                      u3765 0F3D                        u2975 0CFC                        u3777 0EBD  
                      _SCS0 04C8                        u3787 0ECF                        _SCS1 04C9  
                      u3797 0F28                __CFG_WRT$OFF 0000                        _main 0EB1  
                      _ftoa 0DF8            __end_of_I2C_Init 0015                        fsr0h 0005  
                      fsr1h 0007                        indf0 0000                        fsr0l 0004  
                      indf1 0001                        fsr1l 0006                        btemp 007E  
                      start 0002             ___fldiv@new_exp 0060          __size_of_OLED_Init 0064  
             ___fltol@sign1 0043             __end_of___fladd 05CA                       ?_main 0070  
                     ?_ftoa 0056             __end_of___fldiv 0224             __end_of___flneg 16F4  
             __CFG_WDTE$OFF 0000             __end_of___flmul 07F6             __end_of___flsub 178D  
           __end_of___fltol 0D14             __end_of___lldiv 0BE5             __end_of___llmod 0B93  
                     _IRCF0 04CB                       _IRCF1 04CC                       _IRCF2 04CD  
                     _IRCF3 04CE              __CFG_FCMEN$OFF 0000             __end_of_dpowers 1828  
           __end_of_isdigit 1702             __end_of_memmove 0CAE                       main@i 00C1  
                     ftoa@f 0056                       ftoa@l 0060              __CFG_BOREN$OFF 0000  
                     status 0003                       wtemp0 007E             __end_of_sprintf 03E8  
__size_of_Send_I2C_StartBit 0008                ?_internal_16 0070              __CFG_MCLRE$OFF 0000  
           __initialization 07F6                __end_of_main 1000                __end_of_ftoa 0EB1  
            __CFG_LPBOR$OFF 0000            __end_of_OledFont 0B00         __size_of_OLED_Clear 0029  
                    ??_main 006E                      ??_ftoa 005B              __CFG_PLLEN$OFF 0000  
                 ??_OLED_YX 0076              _convertedValue 00AE            ___llmod@dividend 0024  
                    _ADRESH 009C                      _ADRESL 009B              __CFG_ZCDDIS$ON 0000  
         __end_of_OLED_Init 0C49               ?_OLED_Command 0070                      _SPLLEN 04CF  
                    _SSPADD 0212                      _SSPBUF 0211            __end_of___xxtofl 00AA  
            __CFG_PWRTE$OFF 0000               ?_OLED_PutChar 0070                      ___flge 0D7D  
                 ??___fladd 0042                      ___wmul 1716      __size_of_Send_I2C_Data 0009  
                 ??___fldiv 0056                   ??___flneg 0074              __CFG_STVREN$ON 0000  
                 ??___flmul 0028                   ??___flsub 007E                   ??___fltol 003E  
                 ??___lldiv 0078                   ??___llmod 0028            __end_of_initMain 0B50  
                    ftoa@cp 0064                   ??_isdigit 0070                   ?_I2C_Init 0070  
                 ??_memmove 0074          __size_of__Umul8_16 001F       Send_I2C_Data@databyte 0070  
                 ??_sprintf 0034                  ___flge@ff1 0070                  ___flge@ff2 0074  
            ??_OLED_Command 0072                ___xxtofl@arg 007A                ___xxtofl@exp 0079  
              ___xxtofl@val 0070     __end_of__initialization 07FD                  ___flneg@f1 0070  
                ___fltol@f1 003A              ??_OLED_PutChar 0020   __size_of_Send_I2C_StopBit 0008  
            __pcstackCOMMON 0070                  ??_I2C_Init 0070           ?_OLED_Write_Float 0065  
        ??_OLED_Write_Float 0069               _Send_I2C_Data 16E2                sprintf@width 0041  
              ??_OLED_Clear 007C                  __pbssBANK1 00A0           __end_of__Umul8_16 176E  
           _convertedValue1 00AC                  __pmaintext 0EB1        __size_of_internal_16 0009  
                   ?___flge 0070                     ?___wmul 0070             __CFG_PPS1WAY$ON 0000  
        __end_of_OLED_Clear 1800                   ?___xxtofl 0070                     _OLED_YX 17AF  
            ?_Send_I2C_Data 0070                     _PPSLOCK 0E0F                   ?_initMain 0070  
                   _Current 00A4             __size_of___flge 007B                     ___fladd 03E8  
                   ___fldiv 00AA                     ___flneg 16EB                     ___flmul 05CA  
                   _Voltage 00A8                     ___flsub 176E                     ___fltol 0CAE  
                   ___lldiv 0B93             __size_of___wmul 001B                     ___llmod 0B50  
      __end_of_OLED_Command 174F                     __ptext1 0B15                     __ptext2 0B0C  
                   __ptext3 00AA                     __ptext4 178D                     __ptext5 0DF8  
                   __ptext6 0224                     __ptext7 16F4                     __ptext8 1716  
                   __ptext9 0B50                     _dpowers 1800                     _isdigit 16F4  
                   _memmove 0C49                  ??___xxtofl 0074        __end_of_OLED_PutChar 0D7D  
                   _sprintf 0224                     clrloop0 16CD        end_of_initialization 07FD  
                   ftoa@buf 00B0                     ftoa@rem 005C                  ??_initMain 0070  
                 _OLED_Init 0BE5             ___lldiv@divisor 0070            OLED_PutChar@base 002D  
           ___lldiv@counter 007D            _Send_I2C_StopBit 16DA           OLED_Write_Float@f 0065  
               ___fladd@grs 004D             ??_Send_I2C_Data 0072            __CFG_FOSC$INTOSC 0000  
             ___xxtofl@sign 0078                   _TRISAbits 008C                   _TRISCbits 008E  
         __size_of_I2C_Init 0010                 ___fldiv@grs 0062                 ___fldiv@rem 005B  
               ___flmul@grs 002E                  ?_OLED_Init 0070              __end_of___flge 0DF8  
            __end_of___wmul 1731         start_initialization 07F6                  ftoa@status 005A  
           ___llmod@divisor 0020             ___llmod@counter 0029   __size_of_OLED_Write_Float 0022  
         _OLED_Write_String 1702          ?_OLED_Write_String 007C                    ??___flge 0078  
     __size_of_OLED_Command 001E                    ??___wmul 0074                  OLED_YX@Row 0079  
                 __Umul8_16 174F       __size_of_OLED_PutChar 0069         ??_OLED_Write_String 0032  
                 ___fladd@a 003E                   ___fladd@b 003A                   ___fldiv@a 004E  
                 ___fldiv@b 0052                   ___flmul@a 0024                   ___flmul@b 0020  
                 ___flsub@a 004E                   ___flsub@b 0052                   ___latbits 0003  
                  ?_OLED_YX 0075               __pcstackBANK0 0020               __pcstackBANK1 00C1  
         __size_of___xxtofl 0095                 sprintf@flag 003A                _OLED_Command 1731  
 __end_of_OLED_Write_String 1716                 sprintf@prec 0043               ??_internal_16 0070  
               ??_OLED_Init 0075           __size_of_initMain 003B                _OLED_PutChar 0D14  
                  ?___fladd 003A                    ?___fldiv 004E                    ?___flneg 0070  
                  ?___flmul 0020                    ?___flsub 004E                    ?___fltol 003A  
                  ?___lldiv 0070                    ?___llmod 0020                  ?__Umul8_16 0070  
                  ?_isdigit 0070                    _I2C_Init 0005                    ?_memmove 0070  
    OLED_Write_Float@status 006B    __end_of_Send_I2C_StopBit 16E2                    ?_sprintf 002A  
            ___wmul@product 0074                   clear_ram0 16CC                    _PIR1bits 0011  
       __end_of_internal_16 0B15                  _ADCON0bits 009D                  _ADCON1bits 009E  
         ___wmul@multiplier 0070            __size_of_OLED_YX 0028  __size_of_OLED_Write_String 0014  
                  _OledFont 0800            _OLED_Write_Float 178D                 ??__Umul8_16 0072  
                 memmove@d1 0078                   memmove@s1 0070            __size_of___fladd 01E2  
          __size_of___fldiv 017A            __size_of___flneg 0009            __size_of___flmul 022C  
          __size_of___flsub 001F            __size_of___fltol 0066            __size_of___lldiv 0052  
          __size_of___llmod 0043                 _isdigit$815 0070                  _ANSELAbits 018C  
                _ANSELCbits 018E                  sprintf@val 003C                    ___xxtofl 0015  
               _readVoltage 00A0            __size_of_isdigit 000E            __size_of_memmove 0065  
     __end_of_Send_I2C_Data 16EB                    __ptext10 0B93                    __ptext11 0015  
                  __ptext20 0BE5                    __ptext12 0CAE                    __ptext21 17D7  
                  __ptext13 176E                    __ptext22 17AF                    __ptext14 03E8  
                  __ptext23 1731                    __ptext15 16EB                    __ptext24 0D14  
                  __ptext16 05CA                    __ptext25 0C49                    __ptext17 174F  
                  __ptext26 16DA                    __ptext18 0D7D                    __ptext27 16D2  
                  __ptext19 1702                    __ptext28 16E2                    __ptext29 0005  
     OLED_Write_Float@buf11 006D            __size_of_sprintf 01C4                    _initMain 0B15  
             __size_of_main 014F               _SSPDATPPSbits 0E21               __size_of_ftoa 00B9  
             OLED_Clear@col 0034                 _internal_16 0B0C               OLED_Clear@row 0032  
             OLED_YX@Column 0075              OLED_PutChar@ch 0031                  _RC4PPSbits 0EA4  
             _SSPCLKPPSbits 0E20                  _RC5PPSbits 0EA5                    isdigit@c 0071  
                  memmove@d 007B                    memmove@n 0072                    memmove@s 0079  
                _OLED_Clear 17D7                   sprintf@ap 003B                   sprintf@sp 0040  
          ___lldiv@dividend 0074           __CFG_CLKOUTEN$OFF 0000                 _PPSLOCKbits 0E0F  
         _Send_I2C_StartBit 16D2           OLED_PutChar@bytes 0024               OLED_PutChar@i 002F  
        ?_Send_I2C_StartBit 0070               __pstringtext1 1800               __pstringtext2 0800  
             __pstringtext3 1828               __pstringtext4 182E               __pstringtext5 0000  
       ??_Send_I2C_StartBit 0070      __Umul8_16@multiplicand 0070                    sprintf@c 0045  
                  sprintf@f 002A            ___lldiv@quotient 0079                 _SSPCON2bits 0216  
         ?_Send_I2C_StopBit 0070               ___fladd@signs 004A          ??_Send_I2C_StopBit 0070  
              ___fladd@aexp 004B                ___fladd@bexp 004C   __end_of_Send_I2C_StartBit 16DA  
      __Umul8_16@multiplier 0078                  _SSPCONbits 0215           __Umul8_16@product 0074  
