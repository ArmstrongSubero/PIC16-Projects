

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Sat Apr 15 18:44:16 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1717
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    40                           	dabs	1,0x7E,2
    41  0000                     
    42                           ; Version 1.41
    43                           ; Generated 25/01/2017 GMT
    44                           ; 
    45                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC16F1717 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     	;# 
    77  0001                     	;# 
    78  0002                     	;# 
    79  0003                     	;# 
    80  0004                     	;# 
    81  0005                     	;# 
    82  0006                     	;# 
    83  0007                     	;# 
    84  0008                     	;# 
    85  0009                     	;# 
    86  000A                     	;# 
    87  000B                     	;# 
    88  000C                     	;# 
    89  000D                     	;# 
    90  000E                     	;# 
    91  000F                     	;# 
    92  0010                     	;# 
    93  0011                     	;# 
    94  0012                     	;# 
    95  0013                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0016                     	;# 
    99  0017                     	;# 
   100  0018                     	;# 
   101  0019                     	;# 
   102  001A                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  008F                     	;# 
   109  0090                     	;# 
   110  0091                     	;# 
   111  0092                     	;# 
   112  0093                     	;# 
   113  0095                     	;# 
   114  0096                     	;# 
   115  0097                     	;# 
   116  0098                     	;# 
   117  0099                     	;# 
   118  009A                     	;# 
   119  009B                     	;# 
   120  009B                     	;# 
   121  009C                     	;# 
   122  009D                     	;# 
   123  009E                     	;# 
   124  009F                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  0110                     	;# 
   130  0111                     	;# 
   131  0112                     	;# 
   132  0113                     	;# 
   133  0114                     	;# 
   134  0115                     	;# 
   135  0116                     	;# 
   136  0117                     	;# 
   137  0118                     	;# 
   138  0119                     	;# 
   139  011A                     	;# 
   140  011B                     	;# 
   141  011B                     	;# 
   142  011C                     	;# 
   143  018C                     	;# 
   144  018D                     	;# 
   145  018E                     	;# 
   146  018F                     	;# 
   147  0190                     	;# 
   148  0191                     	;# 
   149  0191                     	;# 
   150  0192                     	;# 
   151  0193                     	;# 
   152  0193                     	;# 
   153  0194                     	;# 
   154  0195                     	;# 
   155  0196                     	;# 
   156  0197                     	;# 
   157  0199                     	;# 
   158  0199                     	;# 
   159  0199                     	;# 
   160  019A                     	;# 
   161  019A                     	;# 
   162  019A                     	;# 
   163  019B                     	;# 
   164  019B                     	;# 
   165  019B                     	;# 
   166  019B                     	;# 
   167  019B                     	;# 
   168  019C                     	;# 
   169  019C                     	;# 
   170  019C                     	;# 
   171  019D                     	;# 
   172  019D                     	;# 
   173  019D                     	;# 
   174  019E                     	;# 
   175  019E                     	;# 
   176  019E                     	;# 
   177  019F                     	;# 
   178  019F                     	;# 
   179  019F                     	;# 
   180  019F                     	;# 
   181  019F                     	;# 
   182  020C                     	;# 
   183  020D                     	;# 
   184  020E                     	;# 
   185  020F                     	;# 
   186  0210                     	;# 
   187  0211                     	;# 
   188  0211                     	;# 
   189  0212                     	;# 
   190  0212                     	;# 
   191  0213                     	;# 
   192  0213                     	;# 
   193  0214                     	;# 
   194  0214                     	;# 
   195  0215                     	;# 
   196  0215                     	;# 
   197  0215                     	;# 
   198  0215                     	;# 
   199  0216                     	;# 
   200  0216                     	;# 
   201  0217                     	;# 
   202  0217                     	;# 
   203  028C                     	;# 
   204  028D                     	;# 
   205  028E                     	;# 
   206  028F                     	;# 
   207  0290                     	;# 
   208  0291                     	;# 
   209  0291                     	;# 
   210  0292                     	;# 
   211  0293                     	;# 
   212  0293                     	;# 
   213  0298                     	;# 
   214  0298                     	;# 
   215  0299                     	;# 
   216  029A                     	;# 
   217  029A                     	;# 
   218  029E                     	;# 
   219  030C                     	;# 
   220  030D                     	;# 
   221  030E                     	;# 
   222  030F                     	;# 
   223  0310                     	;# 
   224  038C                     	;# 
   225  038D                     	;# 
   226  038E                     	;# 
   227  038F                     	;# 
   228  0390                     	;# 
   229  0391                     	;# 
   230  0392                     	;# 
   231  0393                     	;# 
   232  0394                     	;# 
   233  0395                     	;# 
   234  0396                     	;# 
   235  0397                     	;# 
   236  0398                     	;# 
   237  0399                     	;# 
   238  039D                     	;# 
   239  039E                     	;# 
   240  039F                     	;# 
   241  0415                     	;# 
   242  0416                     	;# 
   243  0417                     	;# 
   244  041C                     	;# 
   245  041D                     	;# 
   246  041E                     	;# 
   247  0498                     	;# 
   248  0498                     	;# 
   249  0499                     	;# 
   250  049A                     	;# 
   251  049B                     	;# 
   252  049B                     	;# 
   253  049C                     	;# 
   254  049D                     	;# 
   255  049E                     	;# 
   256  049F                     	;# 
   257  0511                     	;# 
   258  0515                     	;# 
   259  0617                     	;# 
   260  0618                     	;# 
   261  0619                     	;# 
   262  0619                     	;# 
   263  061A                     	;# 
   264  061B                     	;# 
   265  061C                     	;# 
   266  061C                     	;# 
   267  0691                     	;# 
   268  0692                     	;# 
   269  0693                     	;# 
   270  0694                     	;# 
   271  0695                     	;# 
   272  0696                     	;# 
   273  0697                     	;# 
   274  0698                     	;# 
   275  0699                     	;# 
   276  069A                     	;# 
   277  069B                     	;# 
   278  069C                     	;# 
   279  069D                     	;# 
   280  069E                     	;# 
   281  069F                     	;# 
   282  0E0F                     	;# 
   283  0E10                     	;# 
   284  0E11                     	;# 
   285  0E12                     	;# 
   286  0E13                     	;# 
   287  0E14                     	;# 
   288  0E15                     	;# 
   289  0E17                     	;# 
   290  0E20                     	;# 
   291  0E21                     	;# 
   292  0E22                     	;# 
   293  0E24                     	;# 
   294  0E25                     	;# 
   295  0E28                     	;# 
   296  0E29                     	;# 
   297  0E2A                     	;# 
   298  0E2B                     	;# 
   299  0E90                     	;# 
   300  0E91                     	;# 
   301  0E92                     	;# 
   302  0E93                     	;# 
   303  0E94                     	;# 
   304  0E95                     	;# 
   305  0E96                     	;# 
   306  0E97                     	;# 
   307  0E98                     	;# 
   308  0E99                     	;# 
   309  0E9A                     	;# 
   310  0E9B                     	;# 
   311  0E9C                     	;# 
   312  0E9D                     	;# 
   313  0E9E                     	;# 
   314  0E9F                     	;# 
   315  0EA0                     	;# 
   316  0EA1                     	;# 
   317  0EA2                     	;# 
   318  0EA3                     	;# 
   319  0EA4                     	;# 
   320  0EA5                     	;# 
   321  0EA6                     	;# 
   322  0EA7                     	;# 
   323  0EA8                     	;# 
   324  0EA9                     	;# 
   325  0EAA                     	;# 
   326  0EAB                     	;# 
   327  0EAC                     	;# 
   328  0EAD                     	;# 
   329  0EAE                     	;# 
   330  0EAF                     	;# 
   331  0EB0                     	;# 
   332  0EB1                     	;# 
   333  0EB2                     	;# 
   334  0F0F                     	;# 
   335  0F10                     	;# 
   336  0F11                     	;# 
   337  0F12                     	;# 
   338  0F13                     	;# 
   339  0F14                     	;# 
   340  0F15                     	;# 
   341  0F16                     	;# 
   342  0F17                     	;# 
   343  0F18                     	;# 
   344  0F19                     	;# 
   345  0F1A                     	;# 
   346  0F1B                     	;# 
   347  0F1C                     	;# 
   348  0F1D                     	;# 
   349  0F1E                     	;# 
   350  0F1F                     	;# 
   351  0F20                     	;# 
   352  0F21                     	;# 
   353  0F22                     	;# 
   354  0F23                     	;# 
   355  0F24                     	;# 
   356  0F25                     	;# 
   357  0F26                     	;# 
   358  0F27                     	;# 
   359  0F28                     	;# 
   360  0F29                     	;# 
   361  0F2A                     	;# 
   362  0F2B                     	;# 
   363  0F2C                     	;# 
   364  0F2D                     	;# 
   365  0F2E                     	;# 
   366  0F2F                     	;# 
   367  0F30                     	;# 
   368  0F31                     	;# 
   369  0F32                     	;# 
   370  0F33                     	;# 
   371  0F34                     	;# 
   372  0F35                     	;# 
   373  0F36                     	;# 
   374  0F37                     	;# 
   375  0FE4                     	;# 
   376  0FE5                     	;# 
   377  0FE6                     	;# 
   378  0FE7                     	;# 
   379  0FE8                     	;# 
   380  0FE9                     	;# 
   381  0FEA                     	;# 
   382  0FEB                     	;# 
   383  0FED                     	;# 
   384  0FEE                     	;# 
   385  0FEF                     	;# 
   386  0000                     	;# 
   387  0001                     	;# 
   388  0002                     	;# 
   389  0003                     	;# 
   390  0004                     	;# 
   391  0005                     	;# 
   392  0006                     	;# 
   393  0007                     	;# 
   394  0008                     	;# 
   395  0009                     	;# 
   396  000A                     	;# 
   397  000B                     	;# 
   398  000C                     	;# 
   399  000D                     	;# 
   400  000E                     	;# 
   401  000F                     	;# 
   402  0010                     	;# 
   403  0011                     	;# 
   404  0012                     	;# 
   405  0013                     	;# 
   406  0015                     	;# 
   407  0016                     	;# 
   408  0016                     	;# 
   409  0017                     	;# 
   410  0018                     	;# 
   411  0019                     	;# 
   412  001A                     	;# 
   413  001B                     	;# 
   414  001C                     	;# 
   415  008C                     	;# 
   416  008D                     	;# 
   417  008E                     	;# 
   418  008F                     	;# 
   419  0090                     	;# 
   420  0091                     	;# 
   421  0092                     	;# 
   422  0093                     	;# 
   423  0095                     	;# 
   424  0096                     	;# 
   425  0097                     	;# 
   426  0098                     	;# 
   427  0099                     	;# 
   428  009A                     	;# 
   429  009B                     	;# 
   430  009B                     	;# 
   431  009C                     	;# 
   432  009D                     	;# 
   433  009E                     	;# 
   434  009F                     	;# 
   435  010C                     	;# 
   436  010D                     	;# 
   437  010E                     	;# 
   438  010F                     	;# 
   439  0110                     	;# 
   440  0111                     	;# 
   441  0112                     	;# 
   442  0113                     	;# 
   443  0114                     	;# 
   444  0115                     	;# 
   445  0116                     	;# 
   446  0117                     	;# 
   447  0118                     	;# 
   448  0119                     	;# 
   449  011A                     	;# 
   450  011B                     	;# 
   451  011B                     	;# 
   452  011C                     	;# 
   453  018C                     	;# 
   454  018D                     	;# 
   455  018E                     	;# 
   456  018F                     	;# 
   457  0190                     	;# 
   458  0191                     	;# 
   459  0191                     	;# 
   460  0192                     	;# 
   461  0193                     	;# 
   462  0193                     	;# 
   463  0194                     	;# 
   464  0195                     	;# 
   465  0196                     	;# 
   466  0197                     	;# 
   467  0199                     	;# 
   468  0199                     	;# 
   469  0199                     	;# 
   470  019A                     	;# 
   471  019A                     	;# 
   472  019A                     	;# 
   473  019B                     	;# 
   474  019B                     	;# 
   475  019B                     	;# 
   476  019B                     	;# 
   477  019B                     	;# 
   478  019C                     	;# 
   479  019C                     	;# 
   480  019C                     	;# 
   481  019D                     	;# 
   482  019D                     	;# 
   483  019D                     	;# 
   484  019E                     	;# 
   485  019E                     	;# 
   486  019E                     	;# 
   487  019F                     	;# 
   488  019F                     	;# 
   489  019F                     	;# 
   490  019F                     	;# 
   491  019F                     	;# 
   492  020C                     	;# 
   493  020D                     	;# 
   494  020E                     	;# 
   495  020F                     	;# 
   496  0210                     	;# 
   497  0211                     	;# 
   498  0211                     	;# 
   499  0212                     	;# 
   500  0212                     	;# 
   501  0213                     	;# 
   502  0213                     	;# 
   503  0214                     	;# 
   504  0214                     	;# 
   505  0215                     	;# 
   506  0215                     	;# 
   507  0215                     	;# 
   508  0215                     	;# 
   509  0216                     	;# 
   510  0216                     	;# 
   511  0217                     	;# 
   512  0217                     	;# 
   513  028C                     	;# 
   514  028D                     	;# 
   515  028E                     	;# 
   516  028F                     	;# 
   517  0290                     	;# 
   518  0291                     	;# 
   519  0291                     	;# 
   520  0292                     	;# 
   521  0293                     	;# 
   522  0293                     	;# 
   523  0298                     	;# 
   524  0298                     	;# 
   525  0299                     	;# 
   526  029A                     	;# 
   527  029A                     	;# 
   528  029E                     	;# 
   529  030C                     	;# 
   530  030D                     	;# 
   531  030E                     	;# 
   532  030F                     	;# 
   533  0310                     	;# 
   534  038C                     	;# 
   535  038D                     	;# 
   536  038E                     	;# 
   537  038F                     	;# 
   538  0390                     	;# 
   539  0391                     	;# 
   540  0392                     	;# 
   541  0393                     	;# 
   542  0394                     	;# 
   543  0395                     	;# 
   544  0396                     	;# 
   545  0397                     	;# 
   546  0398                     	;# 
   547  0399                     	;# 
   548  039D                     	;# 
   549  039E                     	;# 
   550  039F                     	;# 
   551  0415                     	;# 
   552  0416                     	;# 
   553  0417                     	;# 
   554  041C                     	;# 
   555  041D                     	;# 
   556  041E                     	;# 
   557  0498                     	;# 
   558  0498                     	;# 
   559  0499                     	;# 
   560  049A                     	;# 
   561  049B                     	;# 
   562  049B                     	;# 
   563  049C                     	;# 
   564  049D                     	;# 
   565  049E                     	;# 
   566  049F                     	;# 
   567  0511                     	;# 
   568  0515                     	;# 
   569  0617                     	;# 
   570  0618                     	;# 
   571  0619                     	;# 
   572  0619                     	;# 
   573  061A                     	;# 
   574  061B                     	;# 
   575  061C                     	;# 
   576  061C                     	;# 
   577  0691                     	;# 
   578  0692                     	;# 
   579  0693                     	;# 
   580  0694                     	;# 
   581  0695                     	;# 
   582  0696                     	;# 
   583  0697                     	;# 
   584  0698                     	;# 
   585  0699                     	;# 
   586  069A                     	;# 
   587  069B                     	;# 
   588  069C                     	;# 
   589  069D                     	;# 
   590  069E                     	;# 
   591  069F                     	;# 
   592  0E0F                     	;# 
   593  0E10                     	;# 
   594  0E11                     	;# 
   595  0E12                     	;# 
   596  0E13                     	;# 
   597  0E14                     	;# 
   598  0E15                     	;# 
   599  0E17                     	;# 
   600  0E20                     	;# 
   601  0E21                     	;# 
   602  0E22                     	;# 
   603  0E24                     	;# 
   604  0E25                     	;# 
   605  0E28                     	;# 
   606  0E29                     	;# 
   607  0E2A                     	;# 
   608  0E2B                     	;# 
   609  0E90                     	;# 
   610  0E91                     	;# 
   611  0E92                     	;# 
   612  0E93                     	;# 
   613  0E94                     	;# 
   614  0E95                     	;# 
   615  0E96                     	;# 
   616  0E97                     	;# 
   617  0E98                     	;# 
   618  0E99                     	;# 
   619  0E9A                     	;# 
   620  0E9B                     	;# 
   621  0E9C                     	;# 
   622  0E9D                     	;# 
   623  0E9E                     	;# 
   624  0E9F                     	;# 
   625  0EA0                     	;# 
   626  0EA1                     	;# 
   627  0EA2                     	;# 
   628  0EA3                     	;# 
   629  0EA4                     	;# 
   630  0EA5                     	;# 
   631  0EA6                     	;# 
   632  0EA7                     	;# 
   633  0EA8                     	;# 
   634  0EA9                     	;# 
   635  0EAA                     	;# 
   636  0EAB                     	;# 
   637  0EAC                     	;# 
   638  0EAD                     	;# 
   639  0EAE                     	;# 
   640  0EAF                     	;# 
   641  0EB0                     	;# 
   642  0EB1                     	;# 
   643  0EB2                     	;# 
   644  0F0F                     	;# 
   645  0F10                     	;# 
   646  0F11                     	;# 
   647  0F12                     	;# 
   648  0F13                     	;# 
   649  0F14                     	;# 
   650  0F15                     	;# 
   651  0F16                     	;# 
   652  0F17                     	;# 
   653  0F18                     	;# 
   654  0F19                     	;# 
   655  0F1A                     	;# 
   656  0F1B                     	;# 
   657  0F1C                     	;# 
   658  0F1D                     	;# 
   659  0F1E                     	;# 
   660  0F1F                     	;# 
   661  0F20                     	;# 
   662  0F21                     	;# 
   663  0F22                     	;# 
   664  0F23                     	;# 
   665  0F24                     	;# 
   666  0F25                     	;# 
   667  0F26                     	;# 
   668  0F27                     	;# 
   669  0F28                     	;# 
   670  0F29                     	;# 
   671  0F2A                     	;# 
   672  0F2B                     	;# 
   673  0F2C                     	;# 
   674  0F2D                     	;# 
   675  0F2E                     	;# 
   676  0F2F                     	;# 
   677  0F30                     	;# 
   678  0F31                     	;# 
   679  0F32                     	;# 
   680  0F33                     	;# 
   681  0F34                     	;# 
   682  0F35                     	;# 
   683  0F36                     	;# 
   684  0F37                     	;# 
   685  0FE4                     	;# 
   686  0FE5                     	;# 
   687  0FE6                     	;# 
   688  0FE7                     	;# 
   689  0FE8                     	;# 
   690  0FE9                     	;# 
   691  0FEA                     	;# 
   692  0FEB                     	;# 
   693  0FED                     	;# 
   694  0FEE                     	;# 
   695  0FEF                     	;# 
   696  0000                     	;# 
   697  0001                     	;# 
   698  0002                     	;# 
   699  0003                     	;# 
   700  0004                     	;# 
   701  0005                     	;# 
   702  0006                     	;# 
   703  0007                     	;# 
   704  0008                     	;# 
   705  0009                     	;# 
   706  000A                     	;# 
   707  000B                     	;# 
   708  000C                     	;# 
   709  000D                     	;# 
   710  000E                     	;# 
   711  000F                     	;# 
   712  0010                     	;# 
   713  0011                     	;# 
   714  0012                     	;# 
   715  0013                     	;# 
   716  0015                     	;# 
   717  0016                     	;# 
   718  0016                     	;# 
   719  0017                     	;# 
   720  0018                     	;# 
   721  0019                     	;# 
   722  001A                     	;# 
   723  001B                     	;# 
   724  001C                     	;# 
   725  008C                     	;# 
   726  008D                     	;# 
   727  008E                     	;# 
   728  008F                     	;# 
   729  0090                     	;# 
   730  0091                     	;# 
   731  0092                     	;# 
   732  0093                     	;# 
   733  0095                     	;# 
   734  0096                     	;# 
   735  0097                     	;# 
   736  0098                     	;# 
   737  0099                     	;# 
   738  009A                     	;# 
   739  009B                     	;# 
   740  009B                     	;# 
   741  009C                     	;# 
   742  009D                     	;# 
   743  009E                     	;# 
   744  009F                     	;# 
   745  010C                     	;# 
   746  010D                     	;# 
   747  010E                     	;# 
   748  010F                     	;# 
   749  0110                     	;# 
   750  0111                     	;# 
   751  0112                     	;# 
   752  0113                     	;# 
   753  0114                     	;# 
   754  0115                     	;# 
   755  0116                     	;# 
   756  0117                     	;# 
   757  0118                     	;# 
   758  0119                     	;# 
   759  011A                     	;# 
   760  011B                     	;# 
   761  011B                     	;# 
   762  011C                     	;# 
   763  018C                     	;# 
   764  018D                     	;# 
   765  018E                     	;# 
   766  018F                     	;# 
   767  0190                     	;# 
   768  0191                     	;# 
   769  0191                     	;# 
   770  0192                     	;# 
   771  0193                     	;# 
   772  0193                     	;# 
   773  0194                     	;# 
   774  0195                     	;# 
   775  0196                     	;# 
   776  0197                     	;# 
   777  0199                     	;# 
   778  0199                     	;# 
   779  0199                     	;# 
   780  019A                     	;# 
   781  019A                     	;# 
   782  019A                     	;# 
   783  019B                     	;# 
   784  019B                     	;# 
   785  019B                     	;# 
   786  019B                     	;# 
   787  019B                     	;# 
   788  019C                     	;# 
   789  019C                     	;# 
   790  019C                     	;# 
   791  019D                     	;# 
   792  019D                     	;# 
   793  019D                     	;# 
   794  019E                     	;# 
   795  019E                     	;# 
   796  019E                     	;# 
   797  019F                     	;# 
   798  019F                     	;# 
   799  019F                     	;# 
   800  019F                     	;# 
   801  019F                     	;# 
   802  020C                     	;# 
   803  020D                     	;# 
   804  020E                     	;# 
   805  020F                     	;# 
   806  0210                     	;# 
   807  0211                     	;# 
   808  0211                     	;# 
   809  0212                     	;# 
   810  0212                     	;# 
   811  0213                     	;# 
   812  0213                     	;# 
   813  0214                     	;# 
   814  0214                     	;# 
   815  0215                     	;# 
   816  0215                     	;# 
   817  0215                     	;# 
   818  0215                     	;# 
   819  0216                     	;# 
   820  0216                     	;# 
   821  0217                     	;# 
   822  0217                     	;# 
   823  028C                     	;# 
   824  028D                     	;# 
   825  028E                     	;# 
   826  028F                     	;# 
   827  0290                     	;# 
   828  0291                     	;# 
   829  0291                     	;# 
   830  0292                     	;# 
   831  0293                     	;# 
   832  0293                     	;# 
   833  0298                     	;# 
   834  0298                     	;# 
   835  0299                     	;# 
   836  029A                     	;# 
   837  029A                     	;# 
   838  029E                     	;# 
   839  030C                     	;# 
   840  030D                     	;# 
   841  030E                     	;# 
   842  030F                     	;# 
   843  0310                     	;# 
   844  038C                     	;# 
   845  038D                     	;# 
   846  038E                     	;# 
   847  038F                     	;# 
   848  0390                     	;# 
   849  0391                     	;# 
   850  0392                     	;# 
   851  0393                     	;# 
   852  0394                     	;# 
   853  0395                     	;# 
   854  0396                     	;# 
   855  0397                     	;# 
   856  0398                     	;# 
   857  0399                     	;# 
   858  039D                     	;# 
   859  039E                     	;# 
   860  039F                     	;# 
   861  0415                     	;# 
   862  0416                     	;# 
   863  0417                     	;# 
   864  041C                     	;# 
   865  041D                     	;# 
   866  041E                     	;# 
   867  0498                     	;# 
   868  0498                     	;# 
   869  0499                     	;# 
   870  049A                     	;# 
   871  049B                     	;# 
   872  049B                     	;# 
   873  049C                     	;# 
   874  049D                     	;# 
   875  049E                     	;# 
   876  049F                     	;# 
   877  0511                     	;# 
   878  0515                     	;# 
   879  0617                     	;# 
   880  0618                     	;# 
   881  0619                     	;# 
   882  0619                     	;# 
   883  061A                     	;# 
   884  061B                     	;# 
   885  061C                     	;# 
   886  061C                     	;# 
   887  0691                     	;# 
   888  0692                     	;# 
   889  0693                     	;# 
   890  0694                     	;# 
   891  0695                     	;# 
   892  0696                     	;# 
   893  0697                     	;# 
   894  0698                     	;# 
   895  0699                     	;# 
   896  069A                     	;# 
   897  069B                     	;# 
   898  069C                     	;# 
   899  069D                     	;# 
   900  069E                     	;# 
   901  069F                     	;# 
   902  0E0F                     	;# 
   903  0E10                     	;# 
   904  0E11                     	;# 
   905  0E12                     	;# 
   906  0E13                     	;# 
   907  0E14                     	;# 
   908  0E15                     	;# 
   909  0E17                     	;# 
   910  0E20                     	;# 
   911  0E21                     	;# 
   912  0E22                     	;# 
   913  0E24                     	;# 
   914  0E25                     	;# 
   915  0E28                     	;# 
   916  0E29                     	;# 
   917  0E2A                     	;# 
   918  0E2B                     	;# 
   919  0E90                     	;# 
   920  0E91                     	;# 
   921  0E92                     	;# 
   922  0E93                     	;# 
   923  0E94                     	;# 
   924  0E95                     	;# 
   925  0E96                     	;# 
   926  0E97                     	;# 
   927  0E98                     	;# 
   928  0E99                     	;# 
   929  0E9A                     	;# 
   930  0E9B                     	;# 
   931  0E9C                     	;# 
   932  0E9D                     	;# 
   933  0E9E                     	;# 
   934  0E9F                     	;# 
   935  0EA0                     	;# 
   936  0EA1                     	;# 
   937  0EA2                     	;# 
   938  0EA3                     	;# 
   939  0EA4                     	;# 
   940  0EA5                     	;# 
   941  0EA6                     	;# 
   942  0EA7                     	;# 
   943  0EA8                     	;# 
   944  0EA9                     	;# 
   945  0EAA                     	;# 
   946  0EAB                     	;# 
   947  0EAC                     	;# 
   948  0EAD                     	;# 
   949  0EAE                     	;# 
   950  0EAF                     	;# 
   951  0EB0                     	;# 
   952  0EB1                     	;# 
   953  0EB2                     	;# 
   954  0F0F                     	;# 
   955  0F10                     	;# 
   956  0F11                     	;# 
   957  0F12                     	;# 
   958  0F13                     	;# 
   959  0F14                     	;# 
   960  0F15                     	;# 
   961  0F16                     	;# 
   962  0F17                     	;# 
   963  0F18                     	;# 
   964  0F19                     	;# 
   965  0F1A                     	;# 
   966  0F1B                     	;# 
   967  0F1C                     	;# 
   968  0F1D                     	;# 
   969  0F1E                     	;# 
   970  0F1F                     	;# 
   971  0F20                     	;# 
   972  0F21                     	;# 
   973  0F22                     	;# 
   974  0F23                     	;# 
   975  0F24                     	;# 
   976  0F25                     	;# 
   977  0F26                     	;# 
   978  0F27                     	;# 
   979  0F28                     	;# 
   980  0F29                     	;# 
   981  0F2A                     	;# 
   982  0F2B                     	;# 
   983  0F2C                     	;# 
   984  0F2D                     	;# 
   985  0F2E                     	;# 
   986  0F2F                     	;# 
   987  0F30                     	;# 
   988  0F31                     	;# 
   989  0F32                     	;# 
   990  0F33                     	;# 
   991  0F34                     	;# 
   992  0F35                     	;# 
   993  0F36                     	;# 
   994  0F37                     	;# 
   995  0FE4                     	;# 
   996  0FE5                     	;# 
   997  0FE6                     	;# 
   998  0FE7                     	;# 
   999  0FE8                     	;# 
  1000  0FE9                     	;# 
  1001  0FEA                     	;# 
  1002  0FEB                     	;# 
  1003  0FED                     	;# 
  1004  0FEE                     	;# 
  1005  0FEF                     	;# 
  1006  0000                     	;# 
  1007  0001                     	;# 
  1008  0002                     	;# 
  1009  0003                     	;# 
  1010  0004                     	;# 
  1011  0005                     	;# 
  1012  0006                     	;# 
  1013  0007                     	;# 
  1014  0008                     	;# 
  1015  0009                     	;# 
  1016  000A                     	;# 
  1017  000B                     	;# 
  1018  000C                     	;# 
  1019  000D                     	;# 
  1020  000E                     	;# 
  1021  000F                     	;# 
  1022  0010                     	;# 
  1023  0011                     	;# 
  1024  0012                     	;# 
  1025  0013                     	;# 
  1026  0015                     	;# 
  1027  0016                     	;# 
  1028  0016                     	;# 
  1029  0017                     	;# 
  1030  0018                     	;# 
  1031  0019                     	;# 
  1032  001A                     	;# 
  1033  001B                     	;# 
  1034  001C                     	;# 
  1035  008C                     	;# 
  1036  008D                     	;# 
  1037  008E                     	;# 
  1038  008F                     	;# 
  1039  0090                     	;# 
  1040  0091                     	;# 
  1041  0092                     	;# 
  1042  0093                     	;# 
  1043  0095                     	;# 
  1044  0096                     	;# 
  1045  0097                     	;# 
  1046  0098                     	;# 
  1047  0099                     	;# 
  1048  009A                     	;# 
  1049  009B                     	;# 
  1050  009B                     	;# 
  1051  009C                     	;# 
  1052  009D                     	;# 
  1053  009E                     	;# 
  1054  009F                     	;# 
  1055  010C                     	;# 
  1056  010D                     	;# 
  1057  010E                     	;# 
  1058  010F                     	;# 
  1059  0110                     	;# 
  1060  0111                     	;# 
  1061  0112                     	;# 
  1062  0113                     	;# 
  1063  0114                     	;# 
  1064  0115                     	;# 
  1065  0116                     	;# 
  1066  0117                     	;# 
  1067  0118                     	;# 
  1068  0119                     	;# 
  1069  011A                     	;# 
  1070  011B                     	;# 
  1071  011B                     	;# 
  1072  011C                     	;# 
  1073  018C                     	;# 
  1074  018D                     	;# 
  1075  018E                     	;# 
  1076  018F                     	;# 
  1077  0190                     	;# 
  1078  0191                     	;# 
  1079  0191                     	;# 
  1080  0192                     	;# 
  1081  0193                     	;# 
  1082  0193                     	;# 
  1083  0194                     	;# 
  1084  0195                     	;# 
  1085  0196                     	;# 
  1086  0197                     	;# 
  1087  0199                     	;# 
  1088  0199                     	;# 
  1089  0199                     	;# 
  1090  019A                     	;# 
  1091  019A                     	;# 
  1092  019A                     	;# 
  1093  019B                     	;# 
  1094  019B                     	;# 
  1095  019B                     	;# 
  1096  019B                     	;# 
  1097  019B                     	;# 
  1098  019C                     	;# 
  1099  019C                     	;# 
  1100  019C                     	;# 
  1101  019D                     	;# 
  1102  019D                     	;# 
  1103  019D                     	;# 
  1104  019E                     	;# 
  1105  019E                     	;# 
  1106  019E                     	;# 
  1107  019F                     	;# 
  1108  019F                     	;# 
  1109  019F                     	;# 
  1110  019F                     	;# 
  1111  019F                     	;# 
  1112  020C                     	;# 
  1113  020D                     	;# 
  1114  020E                     	;# 
  1115  020F                     	;# 
  1116  0210                     	;# 
  1117  0211                     	;# 
  1118  0211                     	;# 
  1119  0212                     	;# 
  1120  0212                     	;# 
  1121  0213                     	;# 
  1122  0213                     	;# 
  1123  0214                     	;# 
  1124  0214                     	;# 
  1125  0215                     	;# 
  1126  0215                     	;# 
  1127  0215                     	;# 
  1128  0215                     	;# 
  1129  0216                     	;# 
  1130  0216                     	;# 
  1131  0217                     	;# 
  1132  0217                     	;# 
  1133  028C                     	;# 
  1134  028D                     	;# 
  1135  028E                     	;# 
  1136  028F                     	;# 
  1137  0290                     	;# 
  1138  0291                     	;# 
  1139  0291                     	;# 
  1140  0292                     	;# 
  1141  0293                     	;# 
  1142  0293                     	;# 
  1143  0298                     	;# 
  1144  0298                     	;# 
  1145  0299                     	;# 
  1146  029A                     	;# 
  1147  029A                     	;# 
  1148  029E                     	;# 
  1149  030C                     	;# 
  1150  030D                     	;# 
  1151  030E                     	;# 
  1152  030F                     	;# 
  1153  0310                     	;# 
  1154  038C                     	;# 
  1155  038D                     	;# 
  1156  038E                     	;# 
  1157  038F                     	;# 
  1158  0390                     	;# 
  1159  0391                     	;# 
  1160  0392                     	;# 
  1161  0393                     	;# 
  1162  0394                     	;# 
  1163  0395                     	;# 
  1164  0396                     	;# 
  1165  0397                     	;# 
  1166  0398                     	;# 
  1167  0399                     	;# 
  1168  039D                     	;# 
  1169  039E                     	;# 
  1170  039F                     	;# 
  1171  0415                     	;# 
  1172  0416                     	;# 
  1173  0417                     	;# 
  1174  041C                     	;# 
  1175  041D                     	;# 
  1176  041E                     	;# 
  1177  0498                     	;# 
  1178  0498                     	;# 
  1179  0499                     	;# 
  1180  049A                     	;# 
  1181  049B                     	;# 
  1182  049B                     	;# 
  1183  049C                     	;# 
  1184  049D                     	;# 
  1185  049E                     	;# 
  1186  049F                     	;# 
  1187  0511                     	;# 
  1188  0515                     	;# 
  1189  0617                     	;# 
  1190  0618                     	;# 
  1191  0619                     	;# 
  1192  0619                     	;# 
  1193  061A                     	;# 
  1194  061B                     	;# 
  1195  061C                     	;# 
  1196  061C                     	;# 
  1197  0691                     	;# 
  1198  0692                     	;# 
  1199  0693                     	;# 
  1200  0694                     	;# 
  1201  0695                     	;# 
  1202  0696                     	;# 
  1203  0697                     	;# 
  1204  0698                     	;# 
  1205  0699                     	;# 
  1206  069A                     	;# 
  1207  069B                     	;# 
  1208  069C                     	;# 
  1209  069D                     	;# 
  1210  069E                     	;# 
  1211  069F                     	;# 
  1212  0E0F                     	;# 
  1213  0E10                     	;# 
  1214  0E11                     	;# 
  1215  0E12                     	;# 
  1216  0E13                     	;# 
  1217  0E14                     	;# 
  1218  0E15                     	;# 
  1219  0E17                     	;# 
  1220  0E20                     	;# 
  1221  0E21                     	;# 
  1222  0E22                     	;# 
  1223  0E24                     	;# 
  1224  0E25                     	;# 
  1225  0E28                     	;# 
  1226  0E29                     	;# 
  1227  0E2A                     	;# 
  1228  0E2B                     	;# 
  1229  0E90                     	;# 
  1230  0E91                     	;# 
  1231  0E92                     	;# 
  1232  0E93                     	;# 
  1233  0E94                     	;# 
  1234  0E95                     	;# 
  1235  0E96                     	;# 
  1236  0E97                     	;# 
  1237  0E98                     	;# 
  1238  0E99                     	;# 
  1239  0E9A                     	;# 
  1240  0E9B                     	;# 
  1241  0E9C                     	;# 
  1242  0E9D                     	;# 
  1243  0E9E                     	;# 
  1244  0E9F                     	;# 
  1245  0EA0                     	;# 
  1246  0EA1                     	;# 
  1247  0EA2                     	;# 
  1248  0EA3                     	;# 
  1249  0EA4                     	;# 
  1250  0EA5                     	;# 
  1251  0EA6                     	;# 
  1252  0EA7                     	;# 
  1253  0EA8                     	;# 
  1254  0EA9                     	;# 
  1255  0EAA                     	;# 
  1256  0EAB                     	;# 
  1257  0EAC                     	;# 
  1258  0EAD                     	;# 
  1259  0EAE                     	;# 
  1260  0EAF                     	;# 
  1261  0EB0                     	;# 
  1262  0EB1                     	;# 
  1263  0EB2                     	;# 
  1264  0F0F                     	;# 
  1265  0F10                     	;# 
  1266  0F11                     	;# 
  1267  0F12                     	;# 
  1268  0F13                     	;# 
  1269  0F14                     	;# 
  1270  0F15                     	;# 
  1271  0F16                     	;# 
  1272  0F17                     	;# 
  1273  0F18                     	;# 
  1274  0F19                     	;# 
  1275  0F1A                     	;# 
  1276  0F1B                     	;# 
  1277  0F1C                     	;# 
  1278  0F1D                     	;# 
  1279  0F1E                     	;# 
  1280  0F1F                     	;# 
  1281  0F20                     	;# 
  1282  0F21                     	;# 
  1283  0F22                     	;# 
  1284  0F23                     	;# 
  1285  0F24                     	;# 
  1286  0F25                     	;# 
  1287  0F26                     	;# 
  1288  0F27                     	;# 
  1289  0F28                     	;# 
  1290  0F29                     	;# 
  1291  0F2A                     	;# 
  1292  0F2B                     	;# 
  1293  0F2C                     	;# 
  1294  0F2D                     	;# 
  1295  0F2E                     	;# 
  1296  0F2F                     	;# 
  1297  0F30                     	;# 
  1298  0F31                     	;# 
  1299  0F32                     	;# 
  1300  0F33                     	;# 
  1301  0F34                     	;# 
  1302  0F35                     	;# 
  1303  0F36                     	;# 
  1304  0F37                     	;# 
  1305  0FE4                     	;# 
  1306  0FE5                     	;# 
  1307  0FE6                     	;# 
  1308  0FE7                     	;# 
  1309  0FE8                     	;# 
  1310  0FE9                     	;# 
  1311  0FEA                     	;# 
  1312  0FEB                     	;# 
  1313  0FED                     	;# 
  1314  0FEE                     	;# 
  1315  0FEF                     	;# 
  1316  0000                     	;# 
  1317  0001                     	;# 
  1318  0002                     	;# 
  1319  0003                     	;# 
  1320  0004                     	;# 
  1321  0005                     	;# 
  1322  0006                     	;# 
  1323  0007                     	;# 
  1324  0008                     	;# 
  1325  0009                     	;# 
  1326  000A                     	;# 
  1327  000B                     	;# 
  1328  000C                     	;# 
  1329  000D                     	;# 
  1330  000E                     	;# 
  1331  000F                     	;# 
  1332  0010                     	;# 
  1333  0011                     	;# 
  1334  0012                     	;# 
  1335  0013                     	;# 
  1336  0015                     	;# 
  1337  0016                     	;# 
  1338  0016                     	;# 
  1339  0017                     	;# 
  1340  0018                     	;# 
  1341  0019                     	;# 
  1342  001A                     	;# 
  1343  001B                     	;# 
  1344  001C                     	;# 
  1345  008C                     	;# 
  1346  008D                     	;# 
  1347  008E                     	;# 
  1348  008F                     	;# 
  1349  0090                     	;# 
  1350  0091                     	;# 
  1351  0092                     	;# 
  1352  0093                     	;# 
  1353  0095                     	;# 
  1354  0096                     	;# 
  1355  0097                     	;# 
  1356  0098                     	;# 
  1357  0099                     	;# 
  1358  009A                     	;# 
  1359  009B                     	;# 
  1360  009B                     	;# 
  1361  009C                     	;# 
  1362  009D                     	;# 
  1363  009E                     	;# 
  1364  009F                     	;# 
  1365  010C                     	;# 
  1366  010D                     	;# 
  1367  010E                     	;# 
  1368  010F                     	;# 
  1369  0110                     	;# 
  1370  0111                     	;# 
  1371  0112                     	;# 
  1372  0113                     	;# 
  1373  0114                     	;# 
  1374  0115                     	;# 
  1375  0116                     	;# 
  1376  0117                     	;# 
  1377  0118                     	;# 
  1378  0119                     	;# 
  1379  011A                     	;# 
  1380  011B                     	;# 
  1381  011B                     	;# 
  1382  011C                     	;# 
  1383  018C                     	;# 
  1384  018D                     	;# 
  1385  018E                     	;# 
  1386  018F                     	;# 
  1387  0190                     	;# 
  1388  0191                     	;# 
  1389  0191                     	;# 
  1390  0192                     	;# 
  1391  0193                     	;# 
  1392  0193                     	;# 
  1393  0194                     	;# 
  1394  0195                     	;# 
  1395  0196                     	;# 
  1396  0197                     	;# 
  1397  0199                     	;# 
  1398  0199                     	;# 
  1399  0199                     	;# 
  1400  019A                     	;# 
  1401  019A                     	;# 
  1402  019A                     	;# 
  1403  019B                     	;# 
  1404  019B                     	;# 
  1405  019B                     	;# 
  1406  019B                     	;# 
  1407  019B                     	;# 
  1408  019C                     	;# 
  1409  019C                     	;# 
  1410  019C                     	;# 
  1411  019D                     	;# 
  1412  019D                     	;# 
  1413  019D                     	;# 
  1414  019E                     	;# 
  1415  019E                     	;# 
  1416  019E                     	;# 
  1417  019F                     	;# 
  1418  019F                     	;# 
  1419  019F                     	;# 
  1420  019F                     	;# 
  1421  019F                     	;# 
  1422  020C                     	;# 
  1423  020D                     	;# 
  1424  020E                     	;# 
  1425  020F                     	;# 
  1426  0210                     	;# 
  1427  0211                     	;# 
  1428  0211                     	;# 
  1429  0212                     	;# 
  1430  0212                     	;# 
  1431  0213                     	;# 
  1432  0213                     	;# 
  1433  0214                     	;# 
  1434  0214                     	;# 
  1435  0215                     	;# 
  1436  0215                     	;# 
  1437  0215                     	;# 
  1438  0215                     	;# 
  1439  0216                     	;# 
  1440  0216                     	;# 
  1441  0217                     	;# 
  1442  0217                     	;# 
  1443  028C                     	;# 
  1444  028D                     	;# 
  1445  028E                     	;# 
  1446  028F                     	;# 
  1447  0290                     	;# 
  1448  0291                     	;# 
  1449  0291                     	;# 
  1450  0292                     	;# 
  1451  0293                     	;# 
  1452  0293                     	;# 
  1453  0298                     	;# 
  1454  0298                     	;# 
  1455  0299                     	;# 
  1456  029A                     	;# 
  1457  029A                     	;# 
  1458  029E                     	;# 
  1459  030C                     	;# 
  1460  030D                     	;# 
  1461  030E                     	;# 
  1462  030F                     	;# 
  1463  0310                     	;# 
  1464  038C                     	;# 
  1465  038D                     	;# 
  1466  038E                     	;# 
  1467  038F                     	;# 
  1468  0390                     	;# 
  1469  0391                     	;# 
  1470  0392                     	;# 
  1471  0393                     	;# 
  1472  0394                     	;# 
  1473  0395                     	;# 
  1474  0396                     	;# 
  1475  0397                     	;# 
  1476  0398                     	;# 
  1477  0399                     	;# 
  1478  039D                     	;# 
  1479  039E                     	;# 
  1480  039F                     	;# 
  1481  0415                     	;# 
  1482  0416                     	;# 
  1483  0417                     	;# 
  1484  041C                     	;# 
  1485  041D                     	;# 
  1486  041E                     	;# 
  1487  0498                     	;# 
  1488  0498                     	;# 
  1489  0499                     	;# 
  1490  049A                     	;# 
  1491  049B                     	;# 
  1492  049B                     	;# 
  1493  049C                     	;# 
  1494  049D                     	;# 
  1495  049E                     	;# 
  1496  049F                     	;# 
  1497  0511                     	;# 
  1498  0515                     	;# 
  1499  0617                     	;# 
  1500  0618                     	;# 
  1501  0619                     	;# 
  1502  0619                     	;# 
  1503  061A                     	;# 
  1504  061B                     	;# 
  1505  061C                     	;# 
  1506  061C                     	;# 
  1507  0691                     	;# 
  1508  0692                     	;# 
  1509  0693                     	;# 
  1510  0694                     	;# 
  1511  0695                     	;# 
  1512  0696                     	;# 
  1513  0697                     	;# 
  1514  0698                     	;# 
  1515  0699                     	;# 
  1516  069A                     	;# 
  1517  069B                     	;# 
  1518  069C                     	;# 
  1519  069D                     	;# 
  1520  069E                     	;# 
  1521  069F                     	;# 
  1522  0E0F                     	;# 
  1523  0E10                     	;# 
  1524  0E11                     	;# 
  1525  0E12                     	;# 
  1526  0E13                     	;# 
  1527  0E14                     	;# 
  1528  0E15                     	;# 
  1529  0E17                     	;# 
  1530  0E20                     	;# 
  1531  0E21                     	;# 
  1532  0E22                     	;# 
  1533  0E24                     	;# 
  1534  0E25                     	;# 
  1535  0E28                     	;# 
  1536  0E29                     	;# 
  1537  0E2A                     	;# 
  1538  0E2B                     	;# 
  1539  0E90                     	;# 
  1540  0E91                     	;# 
  1541  0E92                     	;# 
  1542  0E93                     	;# 
  1543  0E94                     	;# 
  1544  0E95                     	;# 
  1545  0E96                     	;# 
  1546  0E97                     	;# 
  1547  0E98                     	;# 
  1548  0E99                     	;# 
  1549  0E9A                     	;# 
  1550  0E9B                     	;# 
  1551  0E9C                     	;# 
  1552  0E9D                     	;# 
  1553  0E9E                     	;# 
  1554  0E9F                     	;# 
  1555  0EA0                     	;# 
  1556  0EA1                     	;# 
  1557  0EA2                     	;# 
  1558  0EA3                     	;# 
  1559  0EA4                     	;# 
  1560  0EA5                     	;# 
  1561  0EA6                     	;# 
  1562  0EA7                     	;# 
  1563  0EA8                     	;# 
  1564  0EA9                     	;# 
  1565  0EAA                     	;# 
  1566  0EAB                     	;# 
  1567  0EAC                     	;# 
  1568  0EAD                     	;# 
  1569  0EAE                     	;# 
  1570  0EAF                     	;# 
  1571  0EB0                     	;# 
  1572  0EB1                     	;# 
  1573  0EB2                     	;# 
  1574  0F0F                     	;# 
  1575  0F10                     	;# 
  1576  0F11                     	;# 
  1577  0F12                     	;# 
  1578  0F13                     	;# 
  1579  0F14                     	;# 
  1580  0F15                     	;# 
  1581  0F16                     	;# 
  1582  0F17                     	;# 
  1583  0F18                     	;# 
  1584  0F19                     	;# 
  1585  0F1A                     	;# 
  1586  0F1B                     	;# 
  1587  0F1C                     	;# 
  1588  0F1D                     	;# 
  1589  0F1E                     	;# 
  1590  0F1F                     	;# 
  1591  0F20                     	;# 
  1592  0F21                     	;# 
  1593  0F22                     	;# 
  1594  0F23                     	;# 
  1595  0F24                     	;# 
  1596  0F25                     	;# 
  1597  0F26                     	;# 
  1598  0F27                     	;# 
  1599  0F28                     	;# 
  1600  0F29                     	;# 
  1601  0F2A                     	;# 
  1602  0F2B                     	;# 
  1603  0F2C                     	;# 
  1604  0F2D                     	;# 
  1605  0F2E                     	;# 
  1606  0F2F                     	;# 
  1607  0F30                     	;# 
  1608  0F31                     	;# 
  1609  0F32                     	;# 
  1610  0F33                     	;# 
  1611  0F34                     	;# 
  1612  0F35                     	;# 
  1613  0F36                     	;# 
  1614  0F37                     	;# 
  1615  0FE4                     	;# 
  1616  0FE5                     	;# 
  1617  0FE6                     	;# 
  1618  0FE7                     	;# 
  1619  0FE8                     	;# 
  1620  0FE9                     	;# 
  1621  0FEA                     	;# 
  1622  0FEB                     	;# 
  1623  0FED                     	;# 
  1624  0FEE                     	;# 
  1625  0FEF                     	;# 
  1626                           
  1627                           	psect	stringtext
  1628  0800                     __pstringtext:	
  1629  0800                     _dpowers:	
  1630  0800  3401               	retlw	1
  1631  0801  3400               	retlw	0
  1632  0802  3400               	retlw	0
  1633  0803  3400               	retlw	0
  1634  0804  340A               	retlw	10
  1635  0805  3400               	retlw	0
  1636  0806  3400               	retlw	0
  1637  0807  3400               	retlw	0
  1638  0808  3464               	retlw	100
  1639  0809  3400               	retlw	0
  1640  080A  3400               	retlw	0
  1641  080B  3400               	retlw	0
  1642  080C  34E8               	retlw	232
  1643  080D  3403               	retlw	3
  1644  080E  3400               	retlw	0
  1645  080F  3400               	retlw	0
  1646  0810  3410               	retlw	16
  1647  0811  3427               	retlw	39
  1648  0812  3400               	retlw	0
  1649  0813  3400               	retlw	0
  1650  0814  34A0               	retlw	160
  1651  0815  3486               	retlw	134
  1652  0816  3401               	retlw	1
  1653  0817  3400               	retlw	0
  1654  0818  3440               	retlw	64
  1655  0819  3442               	retlw	66
  1656  081A  340F               	retlw	15
  1657  081B  3400               	retlw	0
  1658  081C  3480               	retlw	128
  1659  081D  3496               	retlw	150
  1660  081E  3498               	retlw	152
  1661  081F  3400               	retlw	0
  1662  0820  3400               	retlw	0
  1663  0821  34E1               	retlw	225
  1664  0822  34F5               	retlw	245
  1665  0823  3405               	retlw	5
  1666  0824  3400               	retlw	0
  1667  0825  34CA               	retlw	202
  1668  0826  349A               	retlw	154
  1669  0827  343B               	retlw	59
  1670  0828                     __end_of_dpowers:	
  1671  0828                     _OledFont:	
  1672  0828  3400               	retlw	0
  1673  0829  3400               	retlw	0
  1674  082A  3400               	retlw	0
  1675  082B  3400               	retlw	0
  1676  082C  3400               	retlw	0
  1677  082D  3400               	retlw	0
  1678  082E  3400               	retlw	0
  1679  082F  3400               	retlw	0
  1680  0830  3400               	retlw	0
  1681  0831  3400               	retlw	0
  1682  0832  345F               	retlw	95
  1683  0833  3400               	retlw	0
  1684  0834  3400               	retlw	0
  1685  0835  3400               	retlw	0
  1686  0836  3400               	retlw	0
  1687  0837  3400               	retlw	0
  1688  0838  3400               	retlw	0
  1689  0839  3400               	retlw	0
  1690  083A  3407               	retlw	7
  1691  083B  3400               	retlw	0
  1692  083C  3407               	retlw	7
  1693  083D  3400               	retlw	0
  1694  083E  3400               	retlw	0
  1695  083F  3400               	retlw	0
  1696  0840  3400               	retlw	0
  1697  0841  3414               	retlw	20
  1698  0842  347F               	retlw	127
  1699  0843  3414               	retlw	20
  1700  0844  347F               	retlw	127
  1701  0845  3414               	retlw	20
  1702  0846  3400               	retlw	0
  1703  0847  3400               	retlw	0
  1704  0848  3400               	retlw	0
  1705  0849  3424               	retlw	36
  1706  084A  342A               	retlw	42
  1707  084B  347F               	retlw	127
  1708  084C  342A               	retlw	42
  1709  084D  3412               	retlw	18
  1710  084E  3400               	retlw	0
  1711  084F  3400               	retlw	0
  1712  0850  3400               	retlw	0
  1713  0851  3423               	retlw	35
  1714  0852  3413               	retlw	19
  1715  0853  3408               	retlw	8
  1716  0854  3464               	retlw	100
  1717  0855  3462               	retlw	98
  1718  0856  3400               	retlw	0
  1719  0857  3400               	retlw	0
  1720  0858  3400               	retlw	0
  1721  0859  3436               	retlw	54
  1722  085A  3449               	retlw	73
  1723  085B  3455               	retlw	85
  1724  085C  3422               	retlw	34
  1725  085D  3450               	retlw	80
  1726  085E  3400               	retlw	0
  1727  085F  3400               	retlw	0
  1728  0860  3400               	retlw	0
  1729  0861  3400               	retlw	0
  1730  0862  3405               	retlw	5
  1731  0863  3403               	retlw	3
  1732  0864  3400               	retlw	0
  1733  0865  3400               	retlw	0
  1734  0866  3400               	retlw	0
  1735  0867  3400               	retlw	0
  1736  0868  3400               	retlw	0
  1737  0869  341C               	retlw	28
  1738  086A  3422               	retlw	34
  1739  086B  3441               	retlw	65
  1740  086C  3400               	retlw	0
  1741  086D  3400               	retlw	0
  1742  086E  3400               	retlw	0
  1743  086F  3400               	retlw	0
  1744  0870  3400               	retlw	0
  1745  0871  3441               	retlw	65
  1746  0872  3422               	retlw	34
  1747  0873  341C               	retlw	28
  1748  0874  3400               	retlw	0
  1749  0875  3400               	retlw	0
  1750  0876  3400               	retlw	0
  1751  0877  3400               	retlw	0
  1752  0878  3400               	retlw	0
  1753  0879  3408               	retlw	8
  1754  087A  342A               	retlw	42
  1755  087B  341C               	retlw	28
  1756  087C  342A               	retlw	42
  1757  087D  3408               	retlw	8
  1758  087E  3400               	retlw	0
  1759  087F  3400               	retlw	0
  1760  0880  3400               	retlw	0
  1761  0881  3408               	retlw	8
  1762  0882  3408               	retlw	8
  1763  0883  343E               	retlw	62
  1764  0884  3408               	retlw	8
  1765  0885  3408               	retlw	8
  1766  0886  3400               	retlw	0
  1767  0887  3400               	retlw	0
  1768  0888  3400               	retlw	0
  1769  0889  34A0               	retlw	160
  1770  088A  3460               	retlw	96
  1771  088B  3400               	retlw	0
  1772  088C  3400               	retlw	0
  1773  088D  3400               	retlw	0
  1774  088E  3400               	retlw	0
  1775  088F  3400               	retlw	0
  1776  0890  3400               	retlw	0
  1777  0891  3408               	retlw	8
  1778  0892  3408               	retlw	8
  1779  0893  3408               	retlw	8
  1780  0894  3408               	retlw	8
  1781  0895  3408               	retlw	8
  1782  0896  3400               	retlw	0
  1783  0897  3400               	retlw	0
  1784  0898  3400               	retlw	0
  1785  0899  3460               	retlw	96
  1786  089A  3460               	retlw	96
  1787  089B  3400               	retlw	0
  1788  089C  3400               	retlw	0
  1789  089D  3400               	retlw	0
  1790  089E  3400               	retlw	0
  1791  089F  3400               	retlw	0
  1792  08A0  3400               	retlw	0
  1793  08A1  3420               	retlw	32
  1794  08A2  3410               	retlw	16
  1795  08A3  3408               	retlw	8
  1796  08A4  3404               	retlw	4
  1797  08A5  3402               	retlw	2
  1798  08A6  3400               	retlw	0
  1799  08A7  3400               	retlw	0
  1800  08A8  3400               	retlw	0
  1801  08A9  343E               	retlw	62
  1802  08AA  3451               	retlw	81
  1803  08AB  3449               	retlw	73
  1804  08AC  3445               	retlw	69
  1805  08AD  343E               	retlw	62
  1806  08AE  3400               	retlw	0
  1807  08AF  3400               	retlw	0
  1808  08B0  3400               	retlw	0
  1809  08B1  3400               	retlw	0
  1810  08B2  3442               	retlw	66
  1811  08B3  347F               	retlw	127
  1812  08B4  3440               	retlw	64
  1813  08B5  3400               	retlw	0
  1814  08B6  3400               	retlw	0
  1815  08B7  3400               	retlw	0
  1816  08B8  3400               	retlw	0
  1817  08B9  3462               	retlw	98
  1818  08BA  3451               	retlw	81
  1819  08BB  3449               	retlw	73
  1820  08BC  3449               	retlw	73
  1821  08BD  3446               	retlw	70
  1822  08BE  3400               	retlw	0
  1823  08BF  3400               	retlw	0
  1824  08C0  3400               	retlw	0
  1825  08C1  3422               	retlw	34
  1826  08C2  3441               	retlw	65
  1827  08C3  3449               	retlw	73
  1828  08C4  3449               	retlw	73
  1829  08C5  3436               	retlw	54
  1830  08C6  3400               	retlw	0
  1831  08C7  3400               	retlw	0
  1832  08C8  3400               	retlw	0
  1833  08C9  3418               	retlw	24
  1834  08CA  3414               	retlw	20
  1835  08CB  3412               	retlw	18
  1836  08CC  347F               	retlw	127
  1837  08CD  3410               	retlw	16
  1838  08CE  3400               	retlw	0
  1839  08CF  3400               	retlw	0
  1840  08D0  3400               	retlw	0
  1841  08D1  3427               	retlw	39
  1842  08D2  3445               	retlw	69
  1843  08D3  3445               	retlw	69
  1844  08D4  3445               	retlw	69
  1845  08D5  3439               	retlw	57
  1846  08D6  3400               	retlw	0
  1847  08D7  3400               	retlw	0
  1848  08D8  3400               	retlw	0
  1849  08D9  343C               	retlw	60
  1850  08DA  344A               	retlw	74
  1851  08DB  3449               	retlw	73
  1852  08DC  3449               	retlw	73
  1853  08DD  3430               	retlw	48
  1854  08DE  3400               	retlw	0
  1855  08DF  3400               	retlw	0
  1856  08E0  3400               	retlw	0
  1857  08E1  3401               	retlw	1
  1858  08E2  3471               	retlw	113
  1859  08E3  3409               	retlw	9
  1860  08E4  3405               	retlw	5
  1861  08E5  3403               	retlw	3
  1862  08E6  3400               	retlw	0
  1863  08E7  3400               	retlw	0
  1864  08E8  3400               	retlw	0
  1865  08E9  3436               	retlw	54
  1866  08EA  3449               	retlw	73
  1867  08EB  3449               	retlw	73
  1868  08EC  3449               	retlw	73
  1869  08ED  3436               	retlw	54
  1870  08EE  3400               	retlw	0
  1871  08EF  3400               	retlw	0
  1872  08F0  3400               	retlw	0
  1873  08F1  3406               	retlw	6
  1874  08F2  3449               	retlw	73
  1875  08F3  3449               	retlw	73
  1876  08F4  3429               	retlw	41
  1877  08F5  341E               	retlw	30
  1878  08F6  3400               	retlw	0
  1879  08F7  3400               	retlw	0
  1880  08F8  3400               	retlw	0
  1881  08F9  3400               	retlw	0
  1882  08FA  3436               	retlw	54
  1883  08FB  3436               	retlw	54
  1884  08FC  3400               	retlw	0
  1885  08FD  3400               	retlw	0
  1886  08FE  3400               	retlw	0
  1887  08FF  3400               	retlw	0
  1888  0900  3400               	retlw	0
  1889  0901  3400               	retlw	0
  1890  0902  34AC               	retlw	172
  1891  0903  346C               	retlw	108
  1892  0904  3400               	retlw	0
  1893  0905  3400               	retlw	0
  1894  0906  3400               	retlw	0
  1895  0907  3400               	retlw	0
  1896  0908  3400               	retlw	0
  1897  0909  3408               	retlw	8
  1898  090A  3414               	retlw	20
  1899  090B  3422               	retlw	34
  1900  090C  3441               	retlw	65
  1901  090D  3400               	retlw	0
  1902  090E  3400               	retlw	0
  1903  090F  3400               	retlw	0
  1904  0910  3400               	retlw	0
  1905  0911  3414               	retlw	20
  1906  0912  3414               	retlw	20
  1907  0913  3414               	retlw	20
  1908  0914  3414               	retlw	20
  1909  0915  3414               	retlw	20
  1910  0916  3400               	retlw	0
  1911  0917  3400               	retlw	0
  1912  0918  3400               	retlw	0
  1913  0919  3441               	retlw	65
  1914  091A  3422               	retlw	34
  1915  091B  3414               	retlw	20
  1916  091C  3408               	retlw	8
  1917  091D  3400               	retlw	0
  1918  091E  3400               	retlw	0
  1919  091F  3400               	retlw	0
  1920  0920  3400               	retlw	0
  1921  0921  3402               	retlw	2
  1922  0922  3401               	retlw	1
  1923  0923  3451               	retlw	81
  1924  0924  3409               	retlw	9
  1925  0925  3406               	retlw	6
  1926  0926  3400               	retlw	0
  1927  0927  3400               	retlw	0
  1928  0928  3400               	retlw	0
  1929  0929  3432               	retlw	50
  1930  092A  3449               	retlw	73
  1931  092B  3479               	retlw	121
  1932  092C  3441               	retlw	65
  1933  092D  343E               	retlw	62
  1934  092E  3400               	retlw	0
  1935  092F  3400               	retlw	0
  1936  0930  3400               	retlw	0
  1937  0931  347E               	retlw	126
  1938  0932  3409               	retlw	9
  1939  0933  3409               	retlw	9
  1940  0934  3409               	retlw	9
  1941  0935  347E               	retlw	126
  1942  0936  3400               	retlw	0
  1943  0937  3400               	retlw	0
  1944  0938  3400               	retlw	0
  1945  0939  347F               	retlw	127
  1946  093A  3449               	retlw	73
  1947  093B  3449               	retlw	73
  1948  093C  3449               	retlw	73
  1949  093D  3436               	retlw	54
  1950  093E  3400               	retlw	0
  1951  093F  3400               	retlw	0
  1952  0940  3400               	retlw	0
  1953  0941  343E               	retlw	62
  1954  0942  3441               	retlw	65
  1955  0943  3441               	retlw	65
  1956  0944  3441               	retlw	65
  1957  0945  3422               	retlw	34
  1958  0946  3400               	retlw	0
  1959  0947  3400               	retlw	0
  1960  0948  3400               	retlw	0
  1961  0949  347F               	retlw	127
  1962  094A  3441               	retlw	65
  1963  094B  3441               	retlw	65
  1964  094C  3422               	retlw	34
  1965  094D  341C               	retlw	28
  1966  094E  3400               	retlw	0
  1967  094F  3400               	retlw	0
  1968  0950  3400               	retlw	0
  1969  0951  347F               	retlw	127
  1970  0952  3449               	retlw	73
  1971  0953  3449               	retlw	73
  1972  0954  3449               	retlw	73
  1973  0955  3441               	retlw	65
  1974  0956  3400               	retlw	0
  1975  0957  3400               	retlw	0
  1976  0958  3400               	retlw	0
  1977  0959  347F               	retlw	127
  1978  095A  3409               	retlw	9
  1979  095B  3409               	retlw	9
  1980  095C  3409               	retlw	9
  1981  095D  3401               	retlw	1
  1982  095E  3400               	retlw	0
  1983  095F  3400               	retlw	0
  1984  0960  3400               	retlw	0
  1985  0961  343E               	retlw	62
  1986  0962  3441               	retlw	65
  1987  0963  3441               	retlw	65
  1988  0964  3451               	retlw	81
  1989  0965  3472               	retlw	114
  1990  0966  3400               	retlw	0
  1991  0967  3400               	retlw	0
  1992  0968  3400               	retlw	0
  1993  0969  347F               	retlw	127
  1994  096A  3408               	retlw	8
  1995  096B  3408               	retlw	8
  1996  096C  3408               	retlw	8
  1997  096D  347F               	retlw	127
  1998  096E  3400               	retlw	0
  1999  096F  3400               	retlw	0
  2000  0970  3400               	retlw	0
  2001  0971  3441               	retlw	65
  2002  0972  347F               	retlw	127
  2003  0973  3441               	retlw	65
  2004  0974  3400               	retlw	0
  2005  0975  3400               	retlw	0
  2006  0976  3400               	retlw	0
  2007  0977  3400               	retlw	0
  2008  0978  3400               	retlw	0
  2009  0979  3420               	retlw	32
  2010  097A  3440               	retlw	64
  2011  097B  3441               	retlw	65
  2012  097C  343F               	retlw	63
  2013  097D  3401               	retlw	1
  2014  097E  3400               	retlw	0
  2015  097F  3400               	retlw	0
  2016  0980  3400               	retlw	0
  2017  0981  347F               	retlw	127
  2018  0982  3408               	retlw	8
  2019  0983  3414               	retlw	20
  2020  0984  3422               	retlw	34
  2021  0985  3441               	retlw	65
  2022  0986  3400               	retlw	0
  2023  0987  3400               	retlw	0
  2024  0988  3400               	retlw	0
  2025  0989  347F               	retlw	127
  2026  098A  3440               	retlw	64
  2027  098B  3440               	retlw	64
  2028  098C  3440               	retlw	64
  2029  098D  3440               	retlw	64
  2030  098E  3400               	retlw	0
  2031  098F  3400               	retlw	0
  2032  0990  3400               	retlw	0
  2033  0991  347F               	retlw	127
  2034  0992  3402               	retlw	2
  2035  0993  340C               	retlw	12
  2036  0994  3402               	retlw	2
  2037  0995  347F               	retlw	127
  2038  0996  3400               	retlw	0
  2039  0997  3400               	retlw	0
  2040  0998  3400               	retlw	0
  2041  0999  347F               	retlw	127
  2042  099A  3404               	retlw	4
  2043  099B  3408               	retlw	8
  2044  099C  3410               	retlw	16
  2045  099D  347F               	retlw	127
  2046  099E  3400               	retlw	0
  2047  099F  3400               	retlw	0
  2048  09A0  3400               	retlw	0
  2049  09A1  343E               	retlw	62
  2050  09A2  3441               	retlw	65
  2051  09A3  3441               	retlw	65
  2052  09A4  3441               	retlw	65
  2053  09A5  343E               	retlw	62
  2054  09A6  3400               	retlw	0
  2055  09A7  3400               	retlw	0
  2056  09A8  3400               	retlw	0
  2057  09A9  347F               	retlw	127
  2058  09AA  3409               	retlw	9
  2059  09AB  3409               	retlw	9
  2060  09AC  3409               	retlw	9
  2061  09AD  3406               	retlw	6
  2062  09AE  3400               	retlw	0
  2063  09AF  3400               	retlw	0
  2064  09B0  3400               	retlw	0
  2065  09B1  343E               	retlw	62
  2066  09B2  3441               	retlw	65
  2067  09B3  3451               	retlw	81
  2068  09B4  3421               	retlw	33
  2069  09B5  345E               	retlw	94
  2070  09B6  3400               	retlw	0
  2071  09B7  3400               	retlw	0
  2072  09B8  3400               	retlw	0
  2073  09B9  347F               	retlw	127
  2074  09BA  3409               	retlw	9
  2075  09BB  3419               	retlw	25
  2076  09BC  3429               	retlw	41
  2077  09BD  3446               	retlw	70
  2078  09BE  3400               	retlw	0
  2079  09BF  3400               	retlw	0
  2080  09C0  3400               	retlw	0
  2081  09C1  3426               	retlw	38
  2082  09C2  3449               	retlw	73
  2083  09C3  3449               	retlw	73
  2084  09C4  3449               	retlw	73
  2085  09C5  3432               	retlw	50
  2086  09C6  3400               	retlw	0
  2087  09C7  3400               	retlw	0
  2088  09C8  3400               	retlw	0
  2089  09C9  3401               	retlw	1
  2090  09CA  3401               	retlw	1
  2091  09CB  347F               	retlw	127
  2092  09CC  3401               	retlw	1
  2093  09CD  3401               	retlw	1
  2094  09CE  3400               	retlw	0
  2095  09CF  3400               	retlw	0
  2096  09D0  3400               	retlw	0
  2097  09D1  343F               	retlw	63
  2098  09D2  3440               	retlw	64
  2099  09D3  3440               	retlw	64
  2100  09D4  3440               	retlw	64
  2101  09D5  343F               	retlw	63
  2102  09D6  3400               	retlw	0
  2103  09D7  3400               	retlw	0
  2104  09D8  3400               	retlw	0
  2105  09D9  341F               	retlw	31
  2106  09DA  3420               	retlw	32
  2107  09DB  3440               	retlw	64
  2108  09DC  3420               	retlw	32
  2109  09DD  341F               	retlw	31
  2110  09DE  3400               	retlw	0
  2111  09DF  3400               	retlw	0
  2112  09E0  3400               	retlw	0
  2113  09E1  343F               	retlw	63
  2114  09E2  3440               	retlw	64
  2115  09E3  3438               	retlw	56
  2116  09E4  3440               	retlw	64
  2117  09E5  343F               	retlw	63
  2118  09E6  3400               	retlw	0
  2119  09E7  3400               	retlw	0
  2120  09E8  3400               	retlw	0
  2121  09E9  3463               	retlw	99
  2122  09EA  3414               	retlw	20
  2123  09EB  3408               	retlw	8
  2124  09EC  3414               	retlw	20
  2125  09ED  3463               	retlw	99
  2126  09EE  3400               	retlw	0
  2127  09EF  3400               	retlw	0
  2128  09F0  3400               	retlw	0
  2129  09F1  3403               	retlw	3
  2130  09F2  3404               	retlw	4
  2131  09F3  3478               	retlw	120
  2132  09F4  3404               	retlw	4
  2133  09F5  3403               	retlw	3
  2134  09F6  3400               	retlw	0
  2135  09F7  3400               	retlw	0
  2136  09F8  3400               	retlw	0
  2137  09F9  3461               	retlw	97
  2138  09FA  3451               	retlw	81
  2139  09FB  3449               	retlw	73
  2140  09FC  3445               	retlw	69
  2141  09FD  3443               	retlw	67
  2142  09FE  3400               	retlw	0
  2143  09FF  3400               	retlw	0
  2144  0A00  3400               	retlw	0
  2145  0A01  347F               	retlw	127
  2146  0A02  3441               	retlw	65
  2147  0A03  3441               	retlw	65
  2148  0A04  3400               	retlw	0
  2149  0A05  3400               	retlw	0
  2150  0A06  3400               	retlw	0
  2151  0A07  3400               	retlw	0
  2152  0A08  3400               	retlw	0
  2153  0A09  3402               	retlw	2
  2154  0A0A  3404               	retlw	4
  2155  0A0B  3408               	retlw	8
  2156  0A0C  3410               	retlw	16
  2157  0A0D  3420               	retlw	32
  2158  0A0E  3400               	retlw	0
  2159  0A0F  3400               	retlw	0
  2160  0A10  3400               	retlw	0
  2161  0A11  3441               	retlw	65
  2162  0A12  3441               	retlw	65
  2163  0A13  347F               	retlw	127
  2164  0A14  3400               	retlw	0
  2165  0A15  3400               	retlw	0
  2166  0A16  3400               	retlw	0
  2167  0A17  3400               	retlw	0
  2168  0A18  3400               	retlw	0
  2169  0A19  3404               	retlw	4
  2170  0A1A  3402               	retlw	2
  2171  0A1B  3401               	retlw	1
  2172  0A1C  3402               	retlw	2
  2173  0A1D  3404               	retlw	4
  2174  0A1E  3400               	retlw	0
  2175  0A1F  3400               	retlw	0
  2176  0A20  3400               	retlw	0
  2177  0A21  3480               	retlw	128
  2178  0A22  3480               	retlw	128
  2179  0A23  3480               	retlw	128
  2180  0A24  3480               	retlw	128
  2181  0A25  3480               	retlw	128
  2182  0A26  3400               	retlw	0
  2183  0A27  3400               	retlw	0
  2184  0A28  3400               	retlw	0
  2185  0A29  3401               	retlw	1
  2186  0A2A  3402               	retlw	2
  2187  0A2B  3404               	retlw	4
  2188  0A2C  3400               	retlw	0
  2189  0A2D  3400               	retlw	0
  2190  0A2E  3400               	retlw	0
  2191  0A2F  3400               	retlw	0
  2192  0A30  3400               	retlw	0
  2193  0A31  3420               	retlw	32
  2194  0A32  3454               	retlw	84
  2195  0A33  3454               	retlw	84
  2196  0A34  3454               	retlw	84
  2197  0A35  3478               	retlw	120
  2198  0A36  3400               	retlw	0
  2199  0A37  3400               	retlw	0
  2200  0A38  3400               	retlw	0
  2201  0A39  347F               	retlw	127
  2202  0A3A  3448               	retlw	72
  2203  0A3B  3444               	retlw	68
  2204  0A3C  3444               	retlw	68
  2205  0A3D  3438               	retlw	56
  2206  0A3E  3400               	retlw	0
  2207  0A3F  3400               	retlw	0
  2208  0A40  3400               	retlw	0
  2209  0A41  3438               	retlw	56
  2210  0A42  3444               	retlw	68
  2211  0A43  3444               	retlw	68
  2212  0A44  3428               	retlw	40
  2213  0A45  3400               	retlw	0
  2214  0A46  3400               	retlw	0
  2215  0A47  3400               	retlw	0
  2216  0A48  3400               	retlw	0
  2217  0A49  3438               	retlw	56
  2218  0A4A  3444               	retlw	68
  2219  0A4B  3444               	retlw	68
  2220  0A4C  3448               	retlw	72
  2221  0A4D  347F               	retlw	127
  2222  0A4E  3400               	retlw	0
  2223  0A4F  3400               	retlw	0
  2224  0A50  3400               	retlw	0
  2225  0A51  3438               	retlw	56
  2226  0A52  3454               	retlw	84
  2227  0A53  3454               	retlw	84
  2228  0A54  3454               	retlw	84
  2229  0A55  3418               	retlw	24
  2230  0A56  3400               	retlw	0
  2231  0A57  3400               	retlw	0
  2232  0A58  3400               	retlw	0
  2233  0A59  3408               	retlw	8
  2234  0A5A  347E               	retlw	126
  2235  0A5B  3409               	retlw	9
  2236  0A5C  3402               	retlw	2
  2237  0A5D  3400               	retlw	0
  2238  0A5E  3400               	retlw	0
  2239  0A5F  3400               	retlw	0
  2240  0A60  3400               	retlw	0
  2241  0A61  3418               	retlw	24
  2242  0A62  34A4               	retlw	164
  2243  0A63  34A4               	retlw	164
  2244  0A64  34A4               	retlw	164
  2245  0A65  347C               	retlw	124
  2246  0A66  3400               	retlw	0
  2247  0A67  3400               	retlw	0
  2248  0A68  3400               	retlw	0
  2249  0A69  347F               	retlw	127
  2250  0A6A  3408               	retlw	8
  2251  0A6B  3404               	retlw	4
  2252  0A6C  3404               	retlw	4
  2253  0A6D  3478               	retlw	120
  2254  0A6E  3400               	retlw	0
  2255  0A6F  3400               	retlw	0
  2256  0A70  3400               	retlw	0
  2257  0A71  3400               	retlw	0
  2258  0A72  347D               	retlw	125
  2259  0A73  3400               	retlw	0
  2260  0A74  3400               	retlw	0
  2261  0A75  3400               	retlw	0
  2262  0A76  3400               	retlw	0
  2263  0A77  3400               	retlw	0
  2264  0A78  3400               	retlw	0
  2265  0A79  3480               	retlw	128
  2266  0A7A  3484               	retlw	132
  2267  0A7B  347D               	retlw	125
  2268  0A7C  3400               	retlw	0
  2269  0A7D  3400               	retlw	0
  2270  0A7E  3400               	retlw	0
  2271  0A7F  3400               	retlw	0
  2272  0A80  3400               	retlw	0
  2273  0A81  347F               	retlw	127
  2274  0A82  3410               	retlw	16
  2275  0A83  3428               	retlw	40
  2276  0A84  3444               	retlw	68
  2277  0A85  3400               	retlw	0
  2278  0A86  3400               	retlw	0
  2279  0A87  3400               	retlw	0
  2280  0A88  3400               	retlw	0
  2281  0A89  3441               	retlw	65
  2282  0A8A  347F               	retlw	127
  2283  0A8B  3440               	retlw	64
  2284  0A8C  3400               	retlw	0
  2285  0A8D  3400               	retlw	0
  2286  0A8E  3400               	retlw	0
  2287  0A8F  3400               	retlw	0
  2288  0A90  3400               	retlw	0
  2289  0A91  347C               	retlw	124
  2290  0A92  3404               	retlw	4
  2291  0A93  3418               	retlw	24
  2292  0A94  3404               	retlw	4
  2293  0A95  3478               	retlw	120
  2294  0A96  3400               	retlw	0
  2295  0A97  3400               	retlw	0
  2296  0A98  3400               	retlw	0
  2297  0A99  347C               	retlw	124
  2298  0A9A  3408               	retlw	8
  2299  0A9B  3404               	retlw	4
  2300  0A9C  347C               	retlw	124
  2301  0A9D  3400               	retlw	0
  2302  0A9E  3400               	retlw	0
  2303  0A9F  3400               	retlw	0
  2304  0AA0  3400               	retlw	0
  2305  0AA1  3438               	retlw	56
  2306  0AA2  3444               	retlw	68
  2307  0AA3  3444               	retlw	68
  2308  0AA4  3438               	retlw	56
  2309  0AA5  3400               	retlw	0
  2310  0AA6  3400               	retlw	0
  2311  0AA7  3400               	retlw	0
  2312  0AA8  3400               	retlw	0
  2313  0AA9  34FC               	retlw	252
  2314  0AAA  3424               	retlw	36
  2315  0AAB  3424               	retlw	36
  2316  0AAC  3418               	retlw	24
  2317  0AAD  3400               	retlw	0
  2318  0AAE  3400               	retlw	0
  2319  0AAF  3400               	retlw	0
  2320  0AB0  3400               	retlw	0
  2321  0AB1  3418               	retlw	24
  2322  0AB2  3424               	retlw	36
  2323  0AB3  3424               	retlw	36
  2324  0AB4  34FC               	retlw	252
  2325  0AB5  3400               	retlw	0
  2326  0AB6  3400               	retlw	0
  2327  0AB7  3400               	retlw	0
  2328  0AB8  3400               	retlw	0
  2329  0AB9  3400               	retlw	0
  2330  0ABA  347C               	retlw	124
  2331  0ABB  3408               	retlw	8
  2332  0ABC  3404               	retlw	4
  2333  0ABD  3400               	retlw	0
  2334  0ABE  3400               	retlw	0
  2335  0ABF  3400               	retlw	0
  2336  0AC0  3400               	retlw	0
  2337  0AC1  3448               	retlw	72
  2338  0AC2  3454               	retlw	84
  2339  0AC3  3454               	retlw	84
  2340  0AC4  3424               	retlw	36
  2341  0AC5  3400               	retlw	0
  2342  0AC6  3400               	retlw	0
  2343  0AC7  3400               	retlw	0
  2344  0AC8  3400               	retlw	0
  2345  0AC9  3404               	retlw	4
  2346  0ACA  347F               	retlw	127
  2347  0ACB  3444               	retlw	68
  2348  0ACC  3400               	retlw	0
  2349  0ACD  3400               	retlw	0
  2350  0ACE  3400               	retlw	0
  2351  0ACF  3400               	retlw	0
  2352  0AD0  3400               	retlw	0
  2353  0AD1  343C               	retlw	60
  2354  0AD2  3440               	retlw	64
  2355  0AD3  3440               	retlw	64
  2356  0AD4  347C               	retlw	124
  2357  0AD5  3400               	retlw	0
  2358  0AD6  3400               	retlw	0
  2359  0AD7  3400               	retlw	0
  2360  0AD8  3400               	retlw	0
  2361  0AD9  341C               	retlw	28
  2362  0ADA  3420               	retlw	32
  2363  0ADB  3440               	retlw	64
  2364  0ADC  3420               	retlw	32
  2365  0ADD  341C               	retlw	28
  2366  0ADE  3400               	retlw	0
  2367  0ADF  3400               	retlw	0
  2368  0AE0  3400               	retlw	0
  2369  0AE1  343C               	retlw	60
  2370  0AE2  3440               	retlw	64
  2371  0AE3  3430               	retlw	48
  2372  0AE4  3440               	retlw	64
  2373  0AE5  343C               	retlw	60
  2374  0AE6  3400               	retlw	0
  2375  0AE7  3400               	retlw	0
  2376  0AE8  3400               	retlw	0
  2377  0AE9  3444               	retlw	68
  2378  0AEA  3428               	retlw	40
  2379  0AEB  3410               	retlw	16
  2380  0AEC  3428               	retlw	40
  2381  0AED  3444               	retlw	68
  2382  0AEE  3400               	retlw	0
  2383  0AEF  3400               	retlw	0
  2384  0AF0  3400               	retlw	0
  2385  0AF1  341C               	retlw	28
  2386  0AF2  34A0               	retlw	160
  2387  0AF3  34A0               	retlw	160
  2388  0AF4  347C               	retlw	124
  2389  0AF5  3400               	retlw	0
  2390  0AF6  3400               	retlw	0
  2391  0AF7  3400               	retlw	0
  2392  0AF8  3400               	retlw	0
  2393  0AF9  3444               	retlw	68
  2394  0AFA  3464               	retlw	100
  2395  0AFB  3454               	retlw	84
  2396  0AFC  344C               	retlw	76
  2397  0AFD  3444               	retlw	68
  2398  0AFE  3400               	retlw	0
  2399  0AFF  3400               	retlw	0
  2400  0B00  3400               	retlw	0
  2401  0B01  3408               	retlw	8
  2402  0B02  3436               	retlw	54
  2403  0B03  3441               	retlw	65
  2404  0B04  3400               	retlw	0
  2405  0B05  3400               	retlw	0
  2406  0B06  3400               	retlw	0
  2407  0B07  3400               	retlw	0
  2408  0B08  3400               	retlw	0
  2409  0B09  3400               	retlw	0
  2410  0B0A  347F               	retlw	127
  2411  0B0B  3400               	retlw	0
  2412  0B0C  3400               	retlw	0
  2413  0B0D  3400               	retlw	0
  2414  0B0E  3400               	retlw	0
  2415  0B0F  3400               	retlw	0
  2416  0B10  3400               	retlw	0
  2417  0B11  3441               	retlw	65
  2418  0B12  3436               	retlw	54
  2419  0B13  3408               	retlw	8
  2420  0B14  3400               	retlw	0
  2421  0B15  3400               	retlw	0
  2422  0B16  3400               	retlw	0
  2423  0B17  3400               	retlw	0
  2424  0B18  3400               	retlw	0
  2425  0B19  3402               	retlw	2
  2426  0B1A  3401               	retlw	1
  2427  0B1B  3401               	retlw	1
  2428  0B1C  3402               	retlw	2
  2429  0B1D  3401               	retlw	1
  2430  0B1E  3400               	retlw	0
  2431  0B1F  3400               	retlw	0
  2432  0B20  3400               	retlw	0
  2433  0B21  3402               	retlw	2
  2434  0B22  3405               	retlw	5
  2435  0B23  3405               	retlw	5
  2436  0B24  3402               	retlw	2
  2437  0B25  3400               	retlw	0
  2438  0B26  3400               	retlw	0
  2439  0B27  3400               	retlw	0
  2440  0B28                     __end_of_OledFont:	
  2441  0011                     _PIR1bits	set	17
  2442  008E                     _TRISCbits	set	142
  2443  008D                     _TRISBbits	set	141
  2444  0476                     _TRISC6	set	1142
  2445  0477                     _TRISC7	set	1143
  2446  04CF                     _SPLLEN	set	1231
  2447  04CE                     _IRCF3	set	1230
  2448  04CD                     _IRCF2	set	1229
  2449  04CC                     _IRCF1	set	1228
  2450  04CB                     _IRCF0	set	1227
  2451  04C9                     _SCS1	set	1225
  2452  04C8                     _SCS0	set	1224
  2453  018E                     _ANSELCbits	set	398
  2454  018D                     _ANSELBbits	set	397
  2455  019A                     _TX1REG	set	410
  2456  0199                     _RC1REG	set	409
  2457  019D                     _RC1STAbits	set	413
  2458  019B                     _SPBRG	set	411
  2459  0CF5                     _TXEN	set	3317
  2460  0CEC                     _CREN	set	3308
  2461  0CEF                     _SPEN	set	3311
  2462  0CF4                     _SYNC	set	3316
  2463  0CF2                     _BRGH	set	3314
  2464  0216                     _SSPCON2bits	set	534
  2465  0211                     _SSPBUF	set	529
  2466  0212                     _SSPADD	set	530
  2467  0215                     _SSPCONbits	set	533
  2468  0E24                     _RXPPSbits	set	3620
  2469  0E20                     _SSPCLKPPSbits	set	3616
  2470  0E21                     _SSPDATPPSbits	set	3617
  2471  0E0F                     _PPSLOCKbits	set	3599
  2472  0E0F                     _PPSLOCK	set	3599
  2473  0E9A                     _RB2PPSbits	set	3738
  2474  0EA5                     _RC5PPSbits	set	3749
  2475  0EA4                     _RC4PPSbits	set	3748
  2476  0B28                     STR_3:	
  2477  0B28  3455               	retlw	85	;'U'
  2478  0B29  3470               	retlw	112	;'p'
  2479  0B2A  3464               	retlw	100	;'d'
  2480  0B2B  3461               	retlw	97	;'a'
  2481  0B2C  3474               	retlw	116	;'t'
  2482  0B2D  3465               	retlw	101	;'e'
  2483  0B2E  3420               	retlw	32	;' '
  2484  0B2F  3453               	retlw	83	;'S'
  2485  0B30  3463               	retlw	99	;'c'
  2486  0B31  3472               	retlw	114	;'r'
  2487  0B32  3465               	retlw	101	;'e'
  2488  0B33  3465               	retlw	101	;'e'
  2489  0B34  346E               	retlw	110	;'n'
  2490  0B35  3400               	retlw	0
  2491  0B36                     STR_16:	
  2492  0B36  3444               	retlw	68	;'D'
  2493  0B37  3469               	retlw	105	;'i'
  2494  0B38  3473               	retlw	115	;'s'
  2495  0B39  3463               	retlw	99	;'c'
  2496  0B3A  346F               	retlw	111	;'o'
  2497  0B3B  346E               	retlw	110	;'n'
  2498  0B3C  346E               	retlw	110	;'n'
  2499  0B3D  3465               	retlw	101	;'e'
  2500  0B3E  3463               	retlw	99	;'c'
  2501  0B3F  3474               	retlw	116	;'t'
  2502  0B40  3465               	retlw	101	;'e'
  2503  0B41  3464               	retlw	100	;'d'
  2504  0B42  3400               	retlw	0
  2505  0B43                     STR_4:	
  2506  0B43  3474               	retlw	116	;'t'
  2507  0B44  3433               	retlw	51	;'3'
  2508  0B45  342E               	retlw	46	;'.'
  2509  0B46  3474               	retlw	116	;'t'
  2510  0B47  3478               	retlw	120	;'x'
  2511  0B48  3474               	retlw	116	;'t'
  2512  0B49  343D               	retlw	61	;'='
  2513  0B4A  3422               	retlw	34	;'"'
  2514  0B4B  3431               	retlw	49	;'1'
  2515  0B4C  3436               	retlw	54	;'6'
  2516  0B4D  3422               	retlw	34	;'"'
  2517  0B4E  3400               	retlw	0
  2518  0B4F                     STR_19:	
  2519  0B4F  3425               	retlw	37	;'%'
  2520  0B50  346C               	retlw	108	;'l'
  2521  0B51  3475               	retlw	117	;'u'
  2522  0B52  342E               	retlw	46	;'.'
  2523  0B53  3425               	retlw	37	;'%'
  2524  0B54  3436               	retlw	54	;'6'
  2525  0B55  342E               	retlw	46	;'.'
  2526  0B56  3436               	retlw	54	;'6'
  2527  0B57  346C               	retlw	108	;'l'
  2528  0B58  3475               	retlw	117	;'u'
  2529  0B59  3400               	retlw	0
  2530  0B5A                     STR_1:	
  2531  0B5A  3444               	retlw	68	;'D'
  2532  0B5B  3469               	retlw	105	;'i'
  2533  0B5C  346D               	retlw	109	;'m'
  2534  0B5D  3420               	retlw	32	;' '
  2535  0B5E  3453               	retlw	83	;'S'
  2536  0B5F  3463               	retlw	99	;'c'
  2537  0B60  3472               	retlw	114	;'r'
  2538  0B61  3465               	retlw	101	;'e'
  2539  0B62  3465               	retlw	101	;'e'
  2540  0B63  346E               	retlw	110	;'n'
  2541  0B64  3400               	retlw	0
  2542  0B65                     STR_15:	
  2543  0B65  3443               	retlw	67	;'C'
  2544  0B66  346F               	retlw	111	;'o'
  2545  0B67  346E               	retlw	110	;'n'
  2546  0B68  346E               	retlw	110	;'n'
  2547  0B69  3465               	retlw	101	;'e'
  2548  0B6A  3463               	retlw	99	;'c'
  2549  0B6B  3474               	retlw	116	;'t'
  2550  0B6C  3465               	retlw	101	;'e'
  2551  0B6D  3464               	retlw	100	;'d'
  2552  0B6E  3400               	retlw	0
  2553  0B6F                     STR_10:	
  2554  0B6F  344D               	retlw	77	;'M'
  2555  0B70  346F               	retlw	111	;'o'
  2556  0B71  3474               	retlw	116	;'t'
  2557  0B72  346F               	retlw	111	;'o'
  2558  0B73  3472               	retlw	114	;'r'
  2559  0B74  3420               	retlw	32	;' '
  2560  0B75  344F               	retlw	79	;'O'
  2561  0B76  3466               	retlw	102	;'f'
  2562  0B77  3466               	retlw	102	;'f'
  2563  0B78  3400               	retlw	0
  2564  0B79                     STR_13:	
  2565  0B79  3450               	retlw	80	;'P'
  2566  0B7A  346C               	retlw	108	;'l'
  2567  0B7B  3461               	retlw	97	;'a'
  2568  0B7C  346E               	retlw	110	;'n'
  2569  0B7D  3474               	retlw	116	;'t'
  2570  0B7E  3420               	retlw	32	;' '
  2571  0B7F  344F               	retlw	79	;'O'
  2572  0B80  3466               	retlw	102	;'f'
  2573  0B81  3466               	retlw	102	;'f'
  2574  0B82  3400               	retlw	0
  2575  0B83                     STR_7:	
  2576  0B83  3442               	retlw	66	;'B'
  2577  0B84  3475               	retlw	117	;'u'
  2578  0B85  346C               	retlw	108	;'l'
  2579  0B86  3462               	retlw	98	;'b'
  2580  0B87  3420               	retlw	32	;' '
  2581  0B88  344F               	retlw	79	;'O'
  2582  0B89  3466               	retlw	102	;'f'
  2583  0B8A  3466               	retlw	102	;'f'
  2584  0B8B  3400               	retlw	0
  2585  0B8C                     STR_9:	
  2586  0B8C  344D               	retlw	77	;'M'
  2587  0B8D  346F               	retlw	111	;'o'
  2588  0B8E  3474               	retlw	116	;'t'
  2589  0B8F  346F               	retlw	111	;'o'
  2590  0B90  3472               	retlw	114	;'r'
  2591  0B91  3420               	retlw	32	;' '
  2592  0B92  344F               	retlw	79	;'O'
  2593  0B93  346E               	retlw	110	;'n'
  2594  0B94  3400               	retlw	0
  2595  0B95                     STR_12:	
  2596  0B95  3450               	retlw	80	;'P'
  2597  0B96  346C               	retlw	108	;'l'
  2598  0B97  3461               	retlw	97	;'a'
  2599  0B98  346E               	retlw	110	;'n'
  2600  0B99  3474               	retlw	116	;'t'
  2601  0B9A  3420               	retlw	32	;' '
  2602  0B9B  344F               	retlw	79	;'O'
  2603  0B9C  346E               	retlw	110	;'n'
  2604  0B9D  3400               	retlw	0
  2605  0B9E                     STR_6:	
  2606  0B9E  3442               	retlw	66	;'B'
  2607  0B9F  3475               	retlw	117	;'u'
  2608  0BA0  346C               	retlw	108	;'l'
  2609  0BA1  3462               	retlw	98	;'b'
  2610  0BA2  3420               	retlw	32	;' '
  2611  0BA3  344F               	retlw	79	;'O'
  2612  0BA4  346E               	retlw	110	;'n'
  2613  0BA5  3400               	retlw	0
  2614  0BA6                     STR_2:	
  2615  0BA6  3464               	retlw	100	;'d'
  2616  0BA7  3469               	retlw	105	;'i'
  2617  0BA8  346D               	retlw	109	;'m'
  2618  0BA9  343D               	retlw	61	;'='
  2619  0BAA  3433               	retlw	51	;'3'
  2620  0BAB  3430               	retlw	48	;'0'
  2621  0BAC  3400               	retlw	0
  2622  0BAD                     STR_17:	
  2623  0BAD  3420               	retlw	32	;' '
  2624  0BAE  3420               	retlw	32	;' '
  2625  0BAF  3420               	retlw	32	;' '
  2626  0BB0  3420               	retlw	32	;' '
  2627  0BB1  3420               	retlw	32	;' '
  2628  0BB2  3400               	retlw	0
  2629  0BB3                     STR_5:	
  2630  0BB3  3462               	retlw	98	;'b'
  2631  0BB4  3475               	retlw	117	;'u'
  2632  0BB5  346C               	retlw	108	;'l'
  2633  0BB6  3462               	retlw	98	;'b'
  2634  0BB7  3400               	retlw	0
  2635  0BB8                     STR_11:	
  2636  0BB8  3470               	retlw	112	;'p'
  2637  0BB9  346C               	retlw	108	;'l'
  2638  0BBA  3461               	retlw	97	;'a'
  2639  0BBB  346E               	retlw	110	;'n'
  2640  0BBC  3400               	retlw	0
  2641  0BBD                     STR_14:	
  2642  0BBD  3463               	retlw	99	;'c'
  2643  0BBE  346F               	retlw	111	;'o'
  2644  0BBF  346E               	retlw	110	;'n'
  2645  0BC0  346E               	retlw	110	;'n'
  2646  0BC1  3400               	retlw	0
  2647  0BC2                     STR_8:	
  2648  0BC2  346D               	retlw	109	;'m'
  2649  0BC3  346F               	retlw	111	;'o'
  2650  0BC4  3474               	retlw	116	;'t'
  2651  0BC5  346F               	retlw	111	;'o'
  2652  0BC6  3400               	retlw	0
  2653  0BAD                     
  2654                           ; #config settings
  2655  0000                     
  2656                           	psect	cinit
  2657  07EE                     start_initialization:	
  2658  07EE                     __initialization:	
  2659                           
  2660                           ; Clear objects allocated to BANK0
  2661  07EE  303E               	movlw	low __pbssBANK0
  2662  07EF  0084               	movwf	4
  2663  07F0  3000               	movlw	high __pbssBANK0
  2664  07F1  0085               	movwf	5
  2665  07F2  3012               	movlw	18
  2666  07F3  3181  21AE  3187   	fcall	clear_ram0
  2667                           
  2668                           ; Clear objects allocated to BANK1
  2669  07F6  30A0               	movlw	low __pbssBANK1
  2670  07F7  0084               	movwf	4
  2671  07F8  3000               	movlw	high __pbssBANK1
  2672  07F9  0085               	movwf	5
  2673  07FA  3032               	movlw	50
  2674  07FB  3181  21AE         	fcall	clear_ram0
  2675  07FD                     end_of_initialization:	
  2676                           ;End of C runtime variable initialization code
  2677                           
  2678  07FD                     __end_of__initialization:	
  2679  07FD  0020               	movlb	0
  2680  07FE  3186  2E46         	ljmp	_main	;jump to C main() function
  2681                           
  2682                           	psect	bssBANK0
  2683  003E                     __pbssBANK0:	
  2684  003E                     _on:	
  2685  003E                     	ds	1
  2686  003F                     ftoa@buf:	
  2687  003F                     	ds	17
  2688                           
  2689                           	psect	bssBANK1
  2690  00A0                     __pbssBANK1:	
  2691  00A0                     _buf:	
  2692  00A0                     	ds	50
  2693                           
  2694                           	psect	clrtext
  2695  01AE                     clear_ram0:	
  2696                           ;	Called with FSR0 containing the base address, and
  2697                           ;	WREG with the size to clear
  2698                           
  2699  01AE  0064               	clrwdt	;clear the watchdog before getting into this loop
  2700  01AF                     clrloop0:	
  2701  01AF  0180               	clrf	0	;clear RAM location pointed to by FSR
  2702  01B0  3101               	addfsr 0,1
  2703  01B1  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2704  01B2  29AF               	goto	clrloop0	;have we reached the end yet?
  2705  01B3  3400               	retlw	0	;all done for this memory range, return
  2706                           
  2707                           	psect	cstackCOMMON
  2708  0070                     __pcstackCOMMON:	
  2709  0070                     ??_I2C_Init:	
  2710  0070                     ?_OLED_Init:	
  2711                           ; 1 bytes @ 0x0
  2712                           
  2713  0070                     ?_OLED_Clear:	
  2714                           ; 1 bytes @ 0x0
  2715                           
  2716  0070                     ?_bulb_func:	
  2717                           ; 1 bytes @ 0x0
  2718                           
  2719  0070                     ?_moto_func:	
  2720                           ; 1 bytes @ 0x0
  2721                           
  2722  0070                     ?_plan_func:	
  2723                           ; 1 bytes @ 0x0
  2724                           
  2725  0070                     ?_conn_func:	
  2726                           ; 1 bytes @ 0x0
  2727                           
  2728  0070                     ?_memmove:	
  2729                           ; 1 bytes @ 0x0
  2730                           
  2731  0070                     ?_strchr:	
  2732                           ; 1 bytes @ 0x0
  2733                           
  2734  0070                     ?_internal_16:	
  2735                           ; 1 bytes @ 0x0
  2736                           
  2737  0070                     ??_internal_16:	
  2738                           ; 1 bytes @ 0x0
  2739                           
  2740  0070                     ?_EUSART_Read:	
  2741                           ; 1 bytes @ 0x0
  2742                           
  2743  0070                     ??_EUSART_Read:	
  2744                           ; 1 bytes @ 0x0
  2745                           
  2746  0070                     ?_EUSART_Write:	
  2747                           ; 1 bytes @ 0x0
  2748                           
  2749  0070                     ??_EUSART_Write:	
  2750                           ; 1 bytes @ 0x0
  2751                           
  2752  0070                     ?_EUSART_Read_Text:	
  2753                           ; 1 bytes @ 0x0
  2754                           
  2755  0070                     ?_initMain:	
  2756                           ; 1 bytes @ 0x0
  2757                           
  2758  0070                     ??_initMain:	
  2759                           ; 1 bytes @ 0x0
  2760                           
  2761  0070                     ?_main:	
  2762                           ; 1 bytes @ 0x0
  2763                           
  2764  0070                     ?_Send_I2C_Data:	
  2765                           ; 1 bytes @ 0x0
  2766                           
  2767  0070                     ?_Send_I2C_StartBit:	
  2768                           ; 1 bytes @ 0x0
  2769                           
  2770  0070                     ??_Send_I2C_StartBit:	
  2771                           ; 1 bytes @ 0x0
  2772                           
  2773  0070                     ?_Send_I2C_StopBit:	
  2774                           ; 1 bytes @ 0x0
  2775                           
  2776  0070                     ??_Send_I2C_StopBit:	
  2777                           ; 1 bytes @ 0x0
  2778                           
  2779  0070                     ?_OLED_Command:	
  2780                           ; 1 bytes @ 0x0
  2781                           
  2782  0070                     ?_OLED_PutChar:	
  2783                           ; 1 bytes @ 0x0
  2784                           
  2785  0070                     ?_I2C_Init:	
  2786                           ; 1 bytes @ 0x0
  2787                           
  2788  0070                     ?_strlen:	
  2789                           ; 2 bytes @ 0x0
  2790                           
  2791  0070                     ?___aldiv:	
  2792                           ; 2 bytes @ 0x0
  2793                           
  2794  0070                     EUSART_Write@txData:	
  2795                           ; 4 bytes @ 0x0
  2796                           
  2797  0070                     EUSART_Read_Text@length:	
  2798                           ; 1 bytes @ 0x0
  2799                           
  2800  0070                     Send_I2C_Data@databyte:	
  2801                           ; 2 bytes @ 0x0
  2802                           
  2803  0070                     memmove@s1:	
  2804                           ; 2 bytes @ 0x0
  2805                           
  2806  0070                     strchr@chr:	
  2807                           ; 2 bytes @ 0x0
  2808                           
  2809  0070                     strlen@s:	
  2810                           ; 2 bytes @ 0x0
  2811                           
  2812  0070                     ___aldiv@divisor:	
  2813                           ; 2 bytes @ 0x0
  2814                           
  2815                           
  2816                           ; 4 bytes @ 0x0
  2817  0070                     	ds	1
  2818  0071                     ?_EUSART_Write_Text:	
  2819  0071                     EUSART_Write_Text@text:	
  2820                           ; 1 bytes @ 0x1
  2821                           
  2822                           
  2823                           ; 2 bytes @ 0x1
  2824  0071                     	ds	1
  2825  0072                     ??_strlen:	
  2826  0072                     ??_strchr:	
  2827                           ; 1 bytes @ 0x2
  2828                           
  2829  0072                     ??_EUSART_Read_Text:	
  2830                           ; 1 bytes @ 0x2
  2831                           
  2832  0072                     ??_Send_I2C_Data:	
  2833                           ; 1 bytes @ 0x2
  2834                           
  2835  0072                     ??_OLED_Command:	
  2836                           ; 1 bytes @ 0x2
  2837                           
  2838  0072                     strchr@ptr:	
  2839                           ; 1 bytes @ 0x2
  2840                           
  2841  0072                     memmove@n:	
  2842                           ; 1 bytes @ 0x2
  2843                           
  2844                           
  2845                           ; 2 bytes @ 0x2
  2846  0072                     	ds	1
  2847  0073                     ??_EUSART_Write_Text:	
  2848                           
  2849                           ; 1 bytes @ 0x3
  2850  0073                     	ds	1
  2851  0074                     ??_memmove:	
  2852  0074                     EUSART_Read_Text@Output:	
  2853                           ; 1 bytes @ 0x4
  2854                           
  2855  0074                     OLED_Command@temp:	
  2856                           ; 1 bytes @ 0x4
  2857                           
  2858  0074                     EUSART_Write_Text@i:	
  2859                           ; 1 bytes @ 0x4
  2860                           
  2861  0074                     strlen@cp:	
  2862                           ; 2 bytes @ 0x4
  2863                           
  2864  0074                     ___aldiv@dividend:	
  2865                           ; 2 bytes @ 0x4
  2866                           
  2867                           
  2868                           ; 4 bytes @ 0x4
  2869  0074                     	ds	1
  2870  0075                     ??_OLED_Init:	
  2871  0075                     ?_OLED_YX:	
  2872                           ; 1 bytes @ 0x5
  2873                           
  2874  0075                     OLED_YX@Column:	
  2875                           ; 1 bytes @ 0x5
  2876                           
  2877  0075                     EUSART_Read_Text@i_111:	
  2878                           ; 1 bytes @ 0x5
  2879                           
  2880                           
  2881                           ; 2 bytes @ 0x5
  2882  0075                     	ds	1
  2883  0076                     ??_OLED_YX:	
  2884  0076                     ?_touchscreen_command:	
  2885                           ; 1 bytes @ 0x6
  2886                           
  2887  0076                     ?_strncmp:	
  2888                           ; 1 bytes @ 0x6
  2889                           
  2890  0076                     touchscreen_command@string:	
  2891                           ; 2 bytes @ 0x6
  2892                           
  2893  0076                     strncmp@s2:	
  2894                           ; 2 bytes @ 0x6
  2895                           
  2896                           
  2897                           ; 2 bytes @ 0x6
  2898  0076                     	ds	2
  2899  0078                     ??_touchscreen_command:	
  2900  0078                     ??___aldiv:	
  2901                           ; 1 bytes @ 0x8
  2902                           
  2903  0078                     memmove@d1:	
  2904                           ; 1 bytes @ 0x8
  2905                           
  2906  0078                     strncmp@len:	
  2907                           ; 1 bytes @ 0x8
  2908                           
  2909                           
  2910                           ; 2 bytes @ 0x8
  2911  0078                     	ds	1
  2912  0079                     OLED_YX@Row:	
  2913  0079                     EUSART_Initialize@x:	
  2914                           ; 1 bytes @ 0x9
  2915                           
  2916  0079                     memmove@s:	
  2917                           ; 2 bytes @ 0x9
  2918                           
  2919                           
  2920                           ; 2 bytes @ 0x9
  2921  0079                     	ds	1
  2922  007A                     ??_strncmp:	
  2923                           
  2924                           ; 1 bytes @ 0xA
  2925  007A                     	ds	1
  2926  007B                     memmove@d:	
  2927                           
  2928                           ; 1 bytes @ 0xB
  2929  007B                     	ds	1
  2930  007C                     ??_OLED_Clear:	
  2931  007C                     ?_OLED_Write_String:	
  2932                           ; 1 bytes @ 0xC
  2933                           
  2934  007C                     strncmp@s1:	
  2935                           ; 1 bytes @ 0xC
  2936                           
  2937  007C                     OLED_Write_String@s:	
  2938                           ; 1 bytes @ 0xC
  2939                           
  2940                           
  2941                           ; 2 bytes @ 0xC
  2942  007C                     	ds	1
  2943  007D                     strstr@s1:	
  2944                           
  2945                           ; 1 bytes @ 0xD
  2946  007D                     	ds	1
  2947                           
  2948                           	psect	cstackBANK0
  2949  0020                     __pcstackBANK0:	
  2950  0020                     ?_strstr:	
  2951  0020                     ??_OLED_PutChar:	
  2952                           ; 1 bytes @ 0x0
  2953                           
  2954  0020                     ___aldiv@counter:	
  2955                           ; 1 bytes @ 0x0
  2956                           
  2957  0020                     strstr@s2:	
  2958                           ; 1 bytes @ 0x0
  2959                           
  2960                           
  2961                           ; 2 bytes @ 0x0
  2962  0020                     	ds	1
  2963  0021                     ___aldiv@sign:	
  2964                           
  2965                           ; 1 bytes @ 0x1
  2966  0021                     	ds	1
  2967  0022                     ??_strstr:	
  2968  0022                     ___aldiv@quotient:	
  2969                           ; 1 bytes @ 0x2
  2970                           
  2971                           
  2972                           ; 4 bytes @ 0x2
  2973  0022                     	ds	4
  2974  0026                     ?_EUSART_Initialize:	
  2975  0026                     EUSART_Initialize@baudrate:	
  2976                           ; 1 bytes @ 0x6
  2977                           
  2978  0026                     OLED_PutChar@bytes:	
  2979                           ; 4 bytes @ 0x6
  2980                           
  2981                           
  2982                           ; 9 bytes @ 0x6
  2983  0026                     	ds	4
  2984  002A                     ??_EUSART_Initialize:	
  2985                           
  2986                           ; 1 bytes @ 0xA
  2987  002A                     	ds	5
  2988  002F                     OLED_PutChar@base:	
  2989                           
  2990                           ; 2 bytes @ 0xF
  2991  002F                     	ds	2
  2992  0031                     OLED_PutChar@i:	
  2993                           
  2994                           ; 2 bytes @ 0x11
  2995  0031                     	ds	2
  2996  0033                     OLED_PutChar@ch:	
  2997                           
  2998                           ; 1 bytes @ 0x13
  2999  0033                     	ds	1
  3000  0034                     ??_OLED_Write_String:	
  3001  0034                     OLED_Clear@row:	
  3002                           ; 1 bytes @ 0x14
  3003                           
  3004                           
  3005                           ; 2 bytes @ 0x14
  3006  0034                     	ds	2
  3007  0036                     OLED_Clear@col:	
  3008                           
  3009                           ; 2 bytes @ 0x16
  3010  0036                     	ds	2
  3011  0038                     ??_bulb_func:	
  3012  0038                     ??_moto_func:	
  3013                           ; 1 bytes @ 0x18
  3014                           
  3015  0038                     ??_plan_func:	
  3016                           ; 1 bytes @ 0x18
  3017                           
  3018  0038                     ??_conn_func:	
  3019                           ; 1 bytes @ 0x18
  3020                           
  3021                           
  3022                           ; 1 bytes @ 0x18
  3023  0038                     	ds	2
  3024  003A                     bulb_func@bulb1:	
  3025  003A                     moto_func@moto1:	
  3026                           ; 1 bytes @ 0x1A
  3027                           
  3028  003A                     plan_func@plant1:	
  3029                           ; 1 bytes @ 0x1A
  3030                           
  3031  003A                     conn_func@conn1:	
  3032                           ; 1 bytes @ 0x1A
  3033                           
  3034                           
  3035                           ; 1 bytes @ 0x1A
  3036  003A                     	ds	1
  3037  003B                     bulb_func@buf:	
  3038  003B                     moto_func@buf:	
  3039                           ; 1 bytes @ 0x1B
  3040                           
  3041  003B                     plan_func@buf:	
  3042                           ; 1 bytes @ 0x1B
  3043                           
  3044  003B                     conn_func@buf:	
  3045                           ; 1 bytes @ 0x1B
  3046                           
  3047                           
  3048                           ; 1 bytes @ 0x1B
  3049  003B                     	ds	1
  3050  003C                     ??_main:	
  3051                           
  3052                           ; 1 bytes @ 0x1C
  3053  003C                     	ds	2
  3054                           
  3055                           	psect	maintext
  3056  0646                     __pmaintext:	
  3057 ;;
  3058 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3059 ;;
  3060 ;; *************** function _main *****************
  3061 ;; Defined at:
  3062 ;;		line 114 in file "Main.c"
  3063 ;; Parameters:    Size  Location     Type
  3064 ;;		None
  3065 ;; Auto vars:     Size  Location     Type
  3066 ;;		None
  3067 ;; Return value:  Size  Location     Type
  3068 ;;                  1    wreg      void 
  3069 ;; Registers used:
  3070 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3071 ;; Tracked objects:
  3072 ;;		On entry : B1F/0
  3073 ;;		On exit  : 0/0
  3074 ;;		Unchanged: 0/0
  3075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3078 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3079 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3080 ;;Total ram usage:        2 bytes
  3081 ;; Hardware stack levels required when called:    5
  3082 ;; This function calls:
  3083 ;;		_EUSART_Initialize
  3084 ;;		_EUSART_Read_Text
  3085 ;;		_I2C_Init
  3086 ;;		_OLED_Clear
  3087 ;;		_OLED_Init
  3088 ;;		_OLED_Write_String
  3089 ;;		_OLED_YX
  3090 ;;		_bulb_func
  3091 ;;		_conn_func
  3092 ;;		_initMain
  3093 ;;		_moto_func
  3094 ;;		_plan_func
  3095 ;;		_touchscreen_command
  3096 ;; This function is called by:
  3097 ;;		Startup code after reset
  3098 ;; This function uses a non-reentrant model
  3099 ;;
  3100                           
  3101                           
  3102                           ;psect for function _main
  3103  0646                     _main:	
  3104                           
  3105                           ;Main.c: 115: initMain();
  3106                           
  3107                           ;incstack = 0
  3108                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3109  0646  3183  230B  3186   	fcall	_initMain
  3110                           
  3111                           ;Main.c: 118: I2C_Init();
  3112  0649  3181  21EA  3186   	fcall	_I2C_Init
  3113                           
  3114                           ;Main.c: 119: _delay((unsigned long)((500)*(16000000/4000.0)));
  3115  064C  300B               	movlw	11
  3116  064D  0020               	movlb	0	; select bank0
  3117  064E  00BD               	movwf	??_main+1
  3118  064F  3026               	movlw	38
  3119  0650  00BC               	movwf	??_main
  3120  0651  305D               	movlw	93
  3121  0652                     u1197:	
  3122  0652  0B89               	decfsz	9,f
  3123  0653  2E52               	goto	u1197
  3124  0654  0BBC               	decfsz	??_main,f
  3125  0655  2E52               	goto	u1197
  3126  0656  0BBD               	decfsz	??_main+1,f
  3127  0657  2E52               	goto	u1197
  3128  0658  3200               	nop2
  3129                           
  3130                           ;Main.c: 122: OLED_Init();
  3131  0659  3185  2503  3186   	fcall	_OLED_Init
  3132                           
  3133                           ;Main.c: 125: OLED_Clear();
  3134  065C  3182  22DB  3186   	fcall	_OLED_Clear
  3135                           
  3136                           ;Main.c: 127: _delay((unsigned long)((1000)*(16000000/4000.0)));
  3137  065F  3015               	movlw	21
  3138  0660  0020               	movlb	0	; select bank0
  3139  0661  00BD               	movwf	??_main+1
  3140  0662  304B               	movlw	75
  3141  0663  00BC               	movwf	??_main
  3142  0664  30BE               	movlw	190
  3143  0665                     u1207:	
  3144  0665  0B89               	decfsz	9,f
  3145  0666  2E65               	goto	u1207
  3146  0667  0BBC               	decfsz	??_main,f
  3147  0668  2E65               	goto	u1207
  3148  0669  0BBD               	decfsz	??_main+1,f
  3149  066A  2E65               	goto	u1207
  3150  066B  0000               	nop
  3151                           
  3152                           ;Main.c: 130: EUSART_Initialize(9600);
  3153  066C  3000               	movlw	0
  3154  066D  0020               	movlb	0	; select bank0
  3155  066E  00A9               	movwf	EUSART_Initialize@baudrate+3
  3156  066F  3000               	movlw	0
  3157  0670  00A8               	movwf	EUSART_Initialize@baudrate+2
  3158  0671  3025               	movlw	37
  3159  0672  00A7               	movwf	EUSART_Initialize@baudrate+1
  3160  0673  3080               	movlw	128
  3161  0674  00A6               	movwf	EUSART_Initialize@baudrate
  3162  0675  3187  2748  3186   	fcall	_EUSART_Initialize
  3163                           
  3164                           ;Main.c: 131: _delay((unsigned long)((2000)*(16000000/4000.0)));
  3165  0678  3029               	movlw	41
  3166  0679  0020               	movlb	0	; select bank0
  3167  067A  00BD               	movwf	??_main+1
  3168  067B  3096               	movlw	150
  3169  067C  00BC               	movwf	??_main
  3170  067D  307F               	movlw	127
  3171  067E                     u1217:	
  3172  067E  0B89               	decfsz	9,f
  3173  067F  2E7E               	goto	u1217
  3174  0680  0BBC               	decfsz	??_main,f
  3175  0681  2E7E               	goto	u1217
  3176  0682  0BBD               	decfsz	??_main+1,f
  3177  0683  2E7E               	goto	u1217
  3178                           
  3179                           ;Main.c: 134: OLED_YX(0, 0);
  3180  0684  01F5               	clrf	OLED_YX@Column
  3181  0685  3000               	movlw	0
  3182  0686  3182  22B3  3186   	fcall	_OLED_YX
  3183                           
  3184                           ;Main.c: 135: OLED_Write_String("Dim Screen");
  3185  0689  305A               	movlw	low (STR_1| (0+32768))
  3186  068A  00FC               	movwf	OLED_Write_String@s
  3187  068B  308B               	movlw	high (STR_1| (0+32768))
  3188  068C  00FD               	movwf	OLED_Write_String@s+1
  3189  068D  3182  220D  3186   	fcall	_OLED_Write_String
  3190                           
  3191                           ;Main.c: 137: touchscreen_command("dim=30");
  3192  0690  30A6               	movlw	low (STR_2| (0+32768))
  3193  0691  00F6               	movwf	touchscreen_command@string
  3194  0692  308B               	movlw	high (STR_2| (0+32768))
  3195  0693  00F7               	movwf	touchscreen_command@string+1
  3196  0694  3182  2293  3186   	fcall	_touchscreen_command
  3197                           
  3198                           ;Main.c: 140: OLED_YX(0, 0);
  3199  0697  01F5               	clrf	OLED_YX@Column
  3200  0698  3000               	movlw	0
  3201  0699  3182  22B3  3186   	fcall	_OLED_YX
  3202                           
  3203                           ;Main.c: 141: OLED_Write_String("Update Screen");
  3204  069C  3028               	movlw	low (STR_3| (0+32768))
  3205  069D  00FC               	movwf	OLED_Write_String@s
  3206  069E  308B               	movlw	high (STR_3| (0+32768))
  3207  069F  00FD               	movwf	OLED_Write_String@s+1
  3208  06A0  3182  220D  3186   	fcall	_OLED_Write_String
  3209                           
  3210                           ;Main.c: 143: touchscreen_command("t3.txt=\"16\"");
  3211  06A3  3043               	movlw	low (STR_4| (0+32768))
  3212  06A4  00F6               	movwf	touchscreen_command@string
  3213  06A5  308B               	movlw	high (STR_4| (0+32768))
  3214  06A6  00F7               	movwf	touchscreen_command@string+1
  3215  06A7  3182  2293  3186   	fcall	_touchscreen_command
  3216                           
  3217                           ;Main.c: 145: OLED_Clear();
  3218  06AA  3182  22DB  3186   	fcall	_OLED_Clear
  3219  06AD                     l1800:	
  3220                           ;Main.c: 147: while(1){
  3221                           
  3222                           
  3223                           ;Main.c: 150: EUSART_Read_Text(buf, 11);
  3224  06AD  300B               	movlw	11
  3225  06AE  00F0               	movwf	EUSART_Read_Text@length
  3226  06AF  3000               	movlw	0
  3227  06B0  00F1               	movwf	EUSART_Read_Text@length+1
  3228  06B1  30A0               	movlw	(low (_buf| 0))& (0+255)
  3229  06B2  3182  223B  3186   	fcall	_EUSART_Read_Text
  3230                           
  3231                           ;Main.c: 153: bulb_func(buf);
  3232  06B5  30A0               	movlw	(low (_buf| 0))& (0+255)
  3233  06B6  3183  23BF  3186   	fcall	_bulb_func
  3234                           
  3235                           ;Main.c: 154: moto_func(buf);
  3236  06B9  30A0               	movlw	(low (_buf| 0))& (0+255)
  3237  06BA  3184  2461  3186   	fcall	_moto_func
  3238                           
  3239                           ;Main.c: 155: plan_func(buf);
  3240  06BD  30A0               	movlw	(low (_buf| 0))& (0+255)
  3241  06BE  3184  24B2  3186   	fcall	_plan_func
  3242                           
  3243                           ;Main.c: 156: conn_func(buf);
  3244  06C1  30A0               	movlw	(low (_buf| 0))& (0+255)
  3245  06C2  3184  2410  3186   	fcall	_conn_func
  3246  06C5  2EAD               	goto	l1800
  3247  06C6                     __end_of_main:	
  3248                           ;Main.c: 157: }
  3249                           ;Main.c: 159: return;
  3250                           
  3251                           
  3252                           	psect	text1
  3253  0293                     __ptext1:	
  3254 ;; *************** function _touchscreen_command *****************
  3255 ;; Defined at:
  3256 ;;		line 165 in file "Main.c"
  3257 ;; Parameters:    Size  Location     Type
  3258 ;;  string          2    6[COMMON] PTR unsigned char 
  3259 ;;		 -> STR_4(12), STR_2(7), 
  3260 ;; Auto vars:     Size  Location     Type
  3261 ;;		None
  3262 ;; Return value:  Size  Location     Type
  3263 ;;                  1    wreg      void 
  3264 ;; Registers used:
  3265 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3266 ;; Tracked objects:
  3267 ;;		On entry : 0/0
  3268 ;;		On exit  : 0/0
  3269 ;;		Unchanged: 0/0
  3270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3271 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3273 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3274 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3275 ;;Total ram usage:        4 bytes
  3276 ;; Hardware stack levels used:    1
  3277 ;; Hardware stack levels required when called:    2
  3278 ;; This function calls:
  3279 ;;		_EUSART_Write
  3280 ;;		_EUSART_Write_Text
  3281 ;; This function is called by:
  3282 ;;		_main
  3283 ;; This function uses a non-reentrant model
  3284 ;;
  3285                           
  3286                           
  3287                           ;psect for function _touchscreen_command
  3288  0293                     _touchscreen_command:	
  3289                           
  3290                           ;Main.c: 167: EUSART_Write_Text(string);
  3291                           
  3292                           ;incstack = 0
  3293                           ; Regs used in _touchscreen_command: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3294  0293  0877               	movf	touchscreen_command@string+1,w
  3295  0294  00F2               	movwf	EUSART_Write_Text@text+1
  3296  0295  0876               	movf	touchscreen_command@string,w
  3297  0296  00F1               	movwf	EUSART_Write_Text@text
  3298  0297  3182  2221  3182   	fcall	_EUSART_Write_Text
  3299                           
  3300                           ;Main.c: 168: EUSART_Write(0xFF);
  3301  029A  30FF               	movlw	255
  3302  029B  3181  21C4  3182   	fcall	_EUSART_Write
  3303                           
  3304                           ;Main.c: 169: EUSART_Write(0xFF);
  3305  029E  30FF               	movlw	255
  3306  029F  3181  21C4  3182   	fcall	_EUSART_Write
  3307                           
  3308                           ;Main.c: 170: EUSART_Write(0xFF);
  3309  02A2  30FF               	movlw	255
  3310  02A3  3181  21C4  3182   	fcall	_EUSART_Write
  3311                           
  3312                           ;Main.c: 171: _delay((unsigned long)((1000)*(16000000/4000.0)));
  3313  02A6  3015               	movlw	21
  3314  02A7  00F9               	movwf	??_touchscreen_command+1
  3315  02A8  304B               	movlw	75
  3316  02A9  00F8               	movwf	??_touchscreen_command
  3317  02AA  30BE               	movlw	190
  3318  02AB                     u1227:	
  3319  02AB  0B89               	decfsz	9,f
  3320  02AC  2AAB               	goto	u1227
  3321  02AD  0BF8               	decfsz	??_touchscreen_command,f
  3322  02AE  2AAB               	goto	u1227
  3323  02AF  0BF9               	decfsz	??_touchscreen_command+1,f
  3324  02B0  2AAB               	goto	u1227
  3325  02B1  3200               	nop2
  3326  02B2  0008               	return
  3327  02B3                     __end_of_touchscreen_command:	
  3328                           
  3329                           	psect	text2
  3330  0221                     __ptext2:	
  3331 ;; *************** function _EUSART_Write_Text *****************
  3332 ;; Defined at:
  3333 ;;		line 125 in file "EUSART.c"
  3334 ;; Parameters:    Size  Location     Type
  3335 ;;  text            2    1[COMMON] PTR unsigned char 
  3336 ;;		 -> STR_4(12), STR_2(7), 
  3337 ;; Auto vars:     Size  Location     Type
  3338 ;;  i               2    4[COMMON] int 
  3339 ;; Return value:  Size  Location     Type
  3340 ;;                  1    wreg      void 
  3341 ;; Registers used:
  3342 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3343 ;; Tracked objects:
  3344 ;;		On entry : 0/0
  3345 ;;		On exit  : 0/0
  3346 ;;		Unchanged: 0/0
  3347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3348 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3349 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3350 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3351 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3352 ;;Total ram usage:        5 bytes
  3353 ;; Hardware stack levels used:    1
  3354 ;; Hardware stack levels required when called:    1
  3355 ;; This function calls:
  3356 ;;		_EUSART_Write
  3357 ;; This function is called by:
  3358 ;;		_touchscreen_command
  3359 ;; This function uses a non-reentrant model
  3360 ;;
  3361                           
  3362                           
  3363                           ;psect for function _EUSART_Write_Text
  3364  0221                     _EUSART_Write_Text:	
  3365                           
  3366                           ;EUSART.c: 127: int i;
  3367                           ;EUSART.c: 128: for(i=0;text[i]!='\0';i++)
  3368                           
  3369                           ;incstack = 0
  3370                           ; Regs used in _EUSART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3371  0221  01F4               	clrf	EUSART_Write_Text@i
  3372  0222  01F5               	clrf	EUSART_Write_Text@i+1
  3373  0223                     l1466:	
  3374  0223  0871               	movf	EUSART_Write_Text@text,w
  3375  0224  0774               	addwf	EUSART_Write_Text@i,w
  3376  0225  0084               	movwf	4
  3377  0226  0872               	movf	EUSART_Write_Text@text+1,w
  3378  0227  3D75               	addwfc	EUSART_Write_Text@i+1,w
  3379  0228  0085               	movwf	5
  3380  0229  0012               	moviw fsr0++
  3381  022A  1903               	btfsc	3,2
  3382  022B  0008               	return
  3383                           
  3384                           ;EUSART.c: 129: EUSART_Write(text[i]);
  3385  022C  0871               	movf	EUSART_Write_Text@text,w
  3386  022D  0774               	addwf	EUSART_Write_Text@i,w
  3387  022E  0084               	movwf	4
  3388  022F  0872               	movf	EUSART_Write_Text@text+1,w
  3389  0230  3D75               	addwfc	EUSART_Write_Text@i+1,w
  3390  0231  0085               	movwf	5
  3391  0232  0800               	movf	0,w	;code access
  3392  0233  3181  21C4  3182   	fcall	_EUSART_Write
  3393  0236  3001               	movlw	1
  3394  0237  07F4               	addwf	EUSART_Write_Text@i,f
  3395  0238  3000               	movlw	0
  3396  0239  3DF5               	addwfc	EUSART_Write_Text@i+1,f
  3397  023A  2A23               	goto	l1466
  3398  023B                     __end_of_EUSART_Write_Text:	
  3399                           
  3400                           	psect	text3
  3401  01C4                     __ptext3:	
  3402 ;; *************** function _EUSART_Write *****************
  3403 ;; Defined at:
  3404 ;;		line 98 in file "EUSART.c"
  3405 ;; Parameters:    Size  Location     Type
  3406 ;;  txData          1    wreg     unsigned char 
  3407 ;; Auto vars:     Size  Location     Type
  3408 ;;  txData          1    0[COMMON] unsigned char 
  3409 ;; Return value:  Size  Location     Type
  3410 ;;                  1    wreg      void 
  3411 ;; Registers used:
  3412 ;;		wreg
  3413 ;; Tracked objects:
  3414 ;;		On entry : 0/0
  3415 ;;		On exit  : 0/0
  3416 ;;		Unchanged: 0/0
  3417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3419 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3421 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3422 ;;Total ram usage:        1 bytes
  3423 ;; Hardware stack levels used:    1
  3424 ;; This function calls:
  3425 ;;		Nothing
  3426 ;; This function is called by:
  3427 ;;		_EUSART_Write_Text
  3428 ;;		_touchscreen_command
  3429 ;; This function uses a non-reentrant model
  3430 ;;
  3431                           
  3432                           
  3433                           ;psect for function _EUSART_Write
  3434  01C4                     _EUSART_Write:	
  3435                           
  3436                           ;incstack = 0
  3437                           ; Regs used in _EUSART_Write: [wreg]
  3438                           ;EUSART_Write@txData stored from wreg
  3439  01C4  00F0               	movwf	EUSART_Write@txData
  3440  01C5                     l74:	
  3441                           ;EUSART.c: 101: {
  3442                           
  3443                           ;EUSART.c: 100: while(0 == PIR1bits.TXIF)
  3444                           
  3445  01C5  0020               	movlb	0	; select bank0
  3446  01C6  1E11               	btfss	17,4	;volatile
  3447  01C7  29C5               	goto	l74
  3448                           
  3449                           ;EUSART.c: 102: }
  3450                           ;EUSART.c: 104: TX1REG = txData;
  3451  01C8  0870               	movf	EUSART_Write@txData,w
  3452  01C9  0023               	movlb	3	; select bank3
  3453  01CA  009A               	movwf	26	;volatile
  3454  01CB  0008               	return
  3455  01CC                     __end_of_EUSART_Write:	
  3456                           
  3457                           	psect	text4
  3458  04B2                     __ptext4:	
  3459 ;; *************** function _plan_func *****************
  3460 ;; Defined at:
  3461 ;;		line 250 in file "Main.c"
  3462 ;; Parameters:    Size  Location     Type
  3463 ;;  buf             1    wreg     PTR unsigned char 
  3464 ;;		 -> buf(50), 
  3465 ;; Auto vars:     Size  Location     Type
  3466 ;;  buf             1   27[BANK0 ] PTR unsigned char 
  3467 ;;		 -> buf(50), 
  3468 ;;  plant1          1   26[BANK0 ] PTR unsigned char 
  3469 ;;		 -> NULL(0), buf(50), 
  3470 ;; Return value:  Size  Location     Type
  3471 ;;                  1    wreg      void 
  3472 ;; Registers used:
  3473 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3474 ;; Tracked objects:
  3475 ;;		On entry : 0/0
  3476 ;;		On exit  : 0/0
  3477 ;;		Unchanged: 0/0
  3478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3480 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3481 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3482 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3483 ;;Total ram usage:        4 bytes
  3484 ;; Hardware stack levels used:    1
  3485 ;; Hardware stack levels required when called:    4
  3486 ;; This function calls:
  3487 ;;		_OLED_Clear
  3488 ;;		_OLED_Write_String
  3489 ;;		_OLED_YX
  3490 ;;		_strstr
  3491 ;; This function is called by:
  3492 ;;		_main
  3493 ;; This function uses a non-reentrant model
  3494 ;;
  3495                           
  3496                           
  3497                           ;psect for function _plan_func
  3498  04B2                     _plan_func:	
  3499                           
  3500                           ;incstack = 0
  3501                           ; Regs used in _plan_func: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3502                           ;plan_func@buf stored from wreg
  3503  04B2  0020               	movlb	0	; select bank0
  3504  04B3  00BB               	movwf	plan_func@buf
  3505                           
  3506                           ;Main.c: 252: char* plant1;
  3507                           ;Main.c: 254: plant1 = strstr(buf, "plan");
  3508  04B4  30B8               	movlw	low (STR_11| (0+32768))
  3509  04B5  00A0               	movwf	strstr@s2
  3510  04B6  308B               	movlw	high (STR_11| (0+32768))
  3511  04B7  00A1               	movwf	strstr@s2+1
  3512  04B8  083B               	movf	plan_func@buf,w
  3513  04B9  3183  2343  3184   	fcall	_strstr
  3514  04BC  0020               	movlb	0	; select bank0
  3515  04BD  00B8               	movwf	??_plan_func
  3516  04BE  0838               	movf	??_plan_func,w
  3517  04BF  00BA               	movwf	plan_func@plant1
  3518                           
  3519                           ;Main.c: 256: if (plant1 == (0))
  3520  04C0  083A               	movf	plan_func@plant1,w
  3521  04C1  1903               	btfsc	3,2
  3522  04C2  0008               	return
  3523                           
  3524                           ;Main.c: 261: else
  3525                           ;Main.c: 262: {
  3526                           ;Main.c: 263: if (!on){
  3527                           
  3528                           ;Main.c: 259: }
  3529                           
  3530                           ;Main.c: 257: {
  3531                           ;Main.c: 258: return;
  3532  04C3  083E               	movf	_on,w
  3533  04C4  1D03               	btfss	3,2
  3534  04C5  2CE5               	goto	l1732
  3535                           
  3536                           ;Main.c: 264: OLED_YX(0, 0);
  3537  04C6  01F5               	clrf	OLED_YX@Column
  3538  04C7  3000               	movlw	0
  3539  04C8  3182  22B3  3184   	fcall	_OLED_YX
  3540                           
  3541                           ;Main.c: 265: OLED_Write_String("Plant On");
  3542  04CB  3095               	movlw	low (STR_12| (0+32768))
  3543  04CC  00FC               	movwf	OLED_Write_String@s
  3544  04CD  308B               	movlw	high (STR_12| (0+32768))
  3545  04CE  00FD               	movwf	OLED_Write_String@s+1
  3546  04CF  3182  220D  3184   	fcall	_OLED_Write_String
  3547                           
  3548                           ;Main.c: 266: _delay((unsigned long)((1000)*(16000000/4000.0)));
  3549  04D2  3015               	movlw	21
  3550  04D3  0020               	movlb	0	; select bank0
  3551  04D4  00B9               	movwf	??_plan_func+1
  3552  04D5  304B               	movlw	75
  3553  04D6  00B8               	movwf	??_plan_func
  3554  04D7  30BE               	movlw	190
  3555  04D8                     u1237:	
  3556  04D8  0B89               	decfsz	9,f
  3557  04D9  2CD8               	goto	u1237
  3558  04DA  0BB8               	decfsz	??_plan_func,f
  3559  04DB  2CD8               	goto	u1237
  3560  04DC  0BB9               	decfsz	??_plan_func+1,f
  3561  04DD  2CD8               	goto	u1237
  3562  04DE  0000               	nop
  3563                           
  3564                           ;Main.c: 267: OLED_Clear();
  3565  04DF  3182  22DB         	fcall	_OLED_Clear
  3566                           
  3567                           ;Main.c: 269: on = 1;
  3568  04E1  0020               	movlb	0	; select bank0
  3569  04E2  01BE               	clrf	_on
  3570  04E3  0ABE               	incf	_on,f
  3571                           
  3572                           ;Main.c: 270: }
  3573  04E4  0008               	return
  3574  04E5                     l1732:	
  3575                           
  3576                           ;Main.c: 272: else {
  3577                           ;Main.c: 273: OLED_YX(0, 0);
  3578  04E5  01F5               	clrf	OLED_YX@Column
  3579  04E6  3000               	movlw	0
  3580  04E7  3182  22B3  3184   	fcall	_OLED_YX
  3581                           
  3582                           ;Main.c: 274: OLED_Write_String("Plant Off");
  3583  04EA  3079               	movlw	low (STR_13| (0+32768))
  3584  04EB  00FC               	movwf	OLED_Write_String@s
  3585  04EC  308B               	movlw	high (STR_13| (0+32768))
  3586  04ED  00FD               	movwf	OLED_Write_String@s+1
  3587  04EE  3182  220D  3184   	fcall	_OLED_Write_String
  3588                           
  3589                           ;Main.c: 275: _delay((unsigned long)((1000)*(16000000/4000.0)));
  3590  04F1  3015               	movlw	21
  3591  04F2  0020               	movlb	0	; select bank0
  3592  04F3  00B9               	movwf	??_plan_func+1
  3593  04F4  304B               	movlw	75
  3594  04F5  00B8               	movwf	??_plan_func
  3595  04F6  30BE               	movlw	190
  3596  04F7                     u1247:	
  3597  04F7  0B89               	decfsz	9,f
  3598  04F8  2CF7               	goto	u1247
  3599  04F9  0BB8               	decfsz	??_plan_func,f
  3600  04FA  2CF7               	goto	u1247
  3601  04FB  0BB9               	decfsz	??_plan_func+1,f
  3602  04FC  2CF7               	goto	u1247
  3603  04FD  0000               	nop
  3604                           
  3605                           ;Main.c: 276: OLED_Clear();
  3606  04FE  3182  22DB         	fcall	_OLED_Clear
  3607                           
  3608                           ;Main.c: 278: on = 0;
  3609  0500  0020               	movlb	0	; select bank0
  3610  0501  01BE               	clrf	_on
  3611  0502  0008               	return
  3612  0503                     __end_of_plan_func:	
  3613                           
  3614                           	psect	text5
  3615  0461                     __ptext5:	
  3616 ;; *************** function _moto_func *****************
  3617 ;; Defined at:
  3618 ;;		line 214 in file "Main.c"
  3619 ;; Parameters:    Size  Location     Type
  3620 ;;  buf             1    wreg     PTR unsigned char 
  3621 ;;		 -> buf(50), 
  3622 ;; Auto vars:     Size  Location     Type
  3623 ;;  buf             1   27[BANK0 ] PTR unsigned char 
  3624 ;;		 -> buf(50), 
  3625 ;;  moto1           1   26[BANK0 ] PTR unsigned char 
  3626 ;;		 -> NULL(0), buf(50), 
  3627 ;; Return value:  Size  Location     Type
  3628 ;;                  1    wreg      void 
  3629 ;; Registers used:
  3630 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3631 ;; Tracked objects:
  3632 ;;		On entry : 0/0
  3633 ;;		On exit  : 0/0
  3634 ;;		Unchanged: 0/0
  3635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3637 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3638 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3639 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3640 ;;Total ram usage:        4 bytes
  3641 ;; Hardware stack levels used:    1
  3642 ;; Hardware stack levels required when called:    4
  3643 ;; This function calls:
  3644 ;;		_OLED_Clear
  3645 ;;		_OLED_Write_String
  3646 ;;		_OLED_YX
  3647 ;;		_strstr
  3648 ;; This function is called by:
  3649 ;;		_main
  3650 ;; This function uses a non-reentrant model
  3651 ;;
  3652                           
  3653                           
  3654                           ;psect for function _moto_func
  3655  0461                     _moto_func:	
  3656                           
  3657                           ;incstack = 0
  3658                           ; Regs used in _moto_func: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3659                           ;moto_func@buf stored from wreg
  3660  0461  0020               	movlb	0	; select bank0
  3661  0462  00BB               	movwf	moto_func@buf
  3662                           
  3663                           ;Main.c: 216: char* moto1;
  3664                           ;Main.c: 218: moto1 = strstr(buf, "moto");
  3665  0463  30C2               	movlw	low (STR_8| (0+32768))
  3666  0464  00A0               	movwf	strstr@s2
  3667  0465  308B               	movlw	high (STR_8| (0+32768))
  3668  0466  00A1               	movwf	strstr@s2+1
  3669  0467  083B               	movf	moto_func@buf,w
  3670  0468  3183  2343  3184   	fcall	_strstr
  3671  046B  0020               	movlb	0	; select bank0
  3672  046C  00B8               	movwf	??_moto_func
  3673  046D  0838               	movf	??_moto_func,w
  3674  046E  00BA               	movwf	moto_func@moto1
  3675                           
  3676                           ;Main.c: 220: if (moto1 == (0))
  3677  046F  083A               	movf	moto_func@moto1,w
  3678  0470  1903               	btfsc	3,2
  3679  0471  0008               	return
  3680                           
  3681                           ;Main.c: 225: else
  3682                           ;Main.c: 226: {
  3683                           ;Main.c: 227: if (!on){
  3684                           
  3685                           ;Main.c: 223: }
  3686                           
  3687                           ;Main.c: 221: {
  3688                           ;Main.c: 222: return;
  3689  0472  083E               	movf	_on,w
  3690  0473  1D03               	btfss	3,2
  3691  0474  2C94               	goto	l1702
  3692                           
  3693                           ;Main.c: 228: OLED_YX(0, 0);
  3694  0475  01F5               	clrf	OLED_YX@Column
  3695  0476  3000               	movlw	0
  3696  0477  3182  22B3  3184   	fcall	_OLED_YX
  3697                           
  3698                           ;Main.c: 229: OLED_Write_String("Motor On");
  3699  047A  308C               	movlw	low (STR_9| (0+32768))
  3700  047B  00FC               	movwf	OLED_Write_String@s
  3701  047C  308B               	movlw	high (STR_9| (0+32768))
  3702  047D  00FD               	movwf	OLED_Write_String@s+1
  3703  047E  3182  220D  3184   	fcall	_OLED_Write_String
  3704                           
  3705                           ;Main.c: 230: _delay((unsigned long)((1000)*(16000000/4000.0)));
  3706  0481  3015               	movlw	21
  3707  0482  0020               	movlb	0	; select bank0
  3708  0483  00B9               	movwf	??_moto_func+1
  3709  0484  304B               	movlw	75
  3710  0485  00B8               	movwf	??_moto_func
  3711  0486  30BE               	movlw	190
  3712  0487                     u1257:	
  3713  0487  0B89               	decfsz	9,f
  3714  0488  2C87               	goto	u1257
  3715  0489  0BB8               	decfsz	??_moto_func,f
  3716  048A  2C87               	goto	u1257
  3717  048B  0BB9               	decfsz	??_moto_func+1,f
  3718  048C  2C87               	goto	u1257
  3719  048D  0000               	nop
  3720                           
  3721                           ;Main.c: 231: OLED_Clear();
  3722  048E  3182  22DB         	fcall	_OLED_Clear
  3723                           
  3724                           ;Main.c: 233: on = 1;
  3725  0490  0020               	movlb	0	; select bank0
  3726  0491  01BE               	clrf	_on
  3727  0492  0ABE               	incf	_on,f
  3728                           
  3729                           ;Main.c: 234: }
  3730  0493  0008               	return
  3731  0494                     l1702:	
  3732                           
  3733                           ;Main.c: 236: else {
  3734                           ;Main.c: 237: OLED_YX(0, 0);
  3735  0494  01F5               	clrf	OLED_YX@Column
  3736  0495  3000               	movlw	0
  3737  0496  3182  22B3  3184   	fcall	_OLED_YX
  3738                           
  3739                           ;Main.c: 238: OLED_Write_String("Motor Off");
  3740  0499  306F               	movlw	low (STR_10| (0+32768))
  3741  049A  00FC               	movwf	OLED_Write_String@s
  3742  049B  308B               	movlw	high (STR_10| (0+32768))
  3743  049C  00FD               	movwf	OLED_Write_String@s+1
  3744  049D  3182  220D  3184   	fcall	_OLED_Write_String
  3745                           
  3746                           ;Main.c: 239: _delay((unsigned long)((1000)*(16000000/4000.0)));
  3747  04A0  3015               	movlw	21
  3748  04A1  0020               	movlb	0	; select bank0
  3749  04A2  00B9               	movwf	??_moto_func+1
  3750  04A3  304B               	movlw	75
  3751  04A4  00B8               	movwf	??_moto_func
  3752  04A5  30BE               	movlw	190
  3753  04A6                     u1267:	
  3754  04A6  0B89               	decfsz	9,f
  3755  04A7  2CA6               	goto	u1267
  3756  04A8  0BB8               	decfsz	??_moto_func,f
  3757  04A9  2CA6               	goto	u1267
  3758  04AA  0BB9               	decfsz	??_moto_func+1,f
  3759  04AB  2CA6               	goto	u1267
  3760  04AC  0000               	nop
  3761                           
  3762                           ;Main.c: 240: OLED_Clear();
  3763  04AD  3182  22DB         	fcall	_OLED_Clear
  3764                           
  3765                           ;Main.c: 242: on = 0;
  3766  04AF  0020               	movlb	0	; select bank0
  3767  04B0  01BE               	clrf	_on
  3768  04B1  0008               	return
  3769  04B2                     __end_of_moto_func:	
  3770                           
  3771                           	psect	text6
  3772  030B                     __ptext6:	
  3773 ;; *************** function _initMain *****************
  3774 ;; Defined at:
  3775 ;;		line 67 in file "Main.c"
  3776 ;; Parameters:    Size  Location     Type
  3777 ;;		None
  3778 ;; Auto vars:     Size  Location     Type
  3779 ;;		None
  3780 ;; Return value:  Size  Location     Type
  3781 ;;                  1    wreg      void 
  3782 ;; Registers used:
  3783 ;;		wreg, status,2, status,0, pclath, cstack
  3784 ;; Tracked objects:
  3785 ;;		On entry : 0/0
  3786 ;;		On exit  : 0/0
  3787 ;;		Unchanged: 0/0
  3788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3793 ;;Total ram usage:        0 bytes
  3794 ;; Hardware stack levels used:    1
  3795 ;; Hardware stack levels required when called:    1
  3796 ;; This function calls:
  3797 ;;		_internal_16
  3798 ;; This function is called by:
  3799 ;;		_main
  3800 ;; This function uses a non-reentrant model
  3801 ;;
  3802                           
  3803                           
  3804                           ;psect for function _initMain
  3805  030B                     _initMain:	
  3806                           
  3807                           ;Main.c: 69: internal_16();
  3808                           
  3809                           ;incstack = 0
  3810                           ; Regs used in _initMain: [wreg+status,2+status,0+pclath+cstack]
  3811  030B  3181  21D5  3183   	fcall	_internal_16
  3812                           
  3813                           ;Main.c: 72: TRISBbits.TRISB2 = 0;
  3814  030E  0021               	movlb	1	; select bank1
  3815  030F  110D               	bcf	13,2	;volatile
  3816                           
  3817                           ;Main.c: 73: ANSELBbits.ANSB2 = 0;
  3818  0310  0023               	movlb	3	; select bank3
  3819  0311  110D               	bcf	13,2	;volatile
  3820                           
  3821                           ;Main.c: 75: TRISBbits.TRISB3 = 1;
  3822  0312  0021               	movlb	1	; select bank1
  3823  0313  158D               	bsf	13,3	;volatile
  3824                           
  3825                           ;Main.c: 76: ANSELBbits.ANSB3 = 0;
  3826  0314  0023               	movlb	3	; select bank3
  3827  0315  118D               	bcf	13,3	;volatile
  3828                           
  3829                           ;Main.c: 79: ANSELCbits.ANSC4 = 0;
  3830  0316  120E               	bcf	14,4	;volatile
  3831                           
  3832                           ;Main.c: 80: ANSELCbits.ANSC5 = 0;
  3833  0317  128E               	bcf	14,5	;volatile
  3834                           
  3835                           ;Main.c: 82: TRISCbits.TRISC4 = 1;
  3836  0318  0021               	movlb	1	; select bank1
  3837  0319  160E               	bsf	14,4	;volatile
  3838                           
  3839                           ;Main.c: 83: TRISCbits.TRISC5 = 1;
  3840  031A  168E               	bsf	14,5	;volatile
  3841                           
  3842                           ;Main.c: 88: PPSLOCK = 0x55;
  3843  031B  3055               	movlw	85
  3844  031C  003C               	movlb	28	; select bank28
  3845  031D  008F               	movwf	15	;volatile
  3846                           
  3847                           ;Main.c: 89: PPSLOCK = 0xAA;
  3848  031E  30AA               	movlw	170
  3849  031F  008F               	movwf	15	;volatile
  3850                           
  3851                           ;Main.c: 90: PPSLOCKbits.PPSLOCKED = 0x00;
  3852  0320  100F               	bcf	15,0	;volatile
  3853                           
  3854                           ;Main.c: 93: RC4PPSbits.RC4PPS = 0x0011;
  3855  0321  003D               	movlb	29	; select bank29
  3856  0322  0824               	movf	36,w	;volatile
  3857  0323  39E0               	andlw	-32
  3858  0324  3811               	iorlw	17
  3859  0325  00A4               	movwf	36	;volatile
  3860                           
  3861                           ;Main.c: 94: SSPDATPPSbits.SSPDATPPS = 0x0014;
  3862  0326  003C               	movlb	28	; select bank28
  3863  0327  0821               	movf	33,w	;volatile
  3864  0328  39E0               	andlw	-32
  3865  0329  3814               	iorlw	20
  3866  032A  00A1               	movwf	33	;volatile
  3867                           
  3868                           ;Main.c: 95: SSPCLKPPSbits.SSPCLKPPS = 0x0015;
  3869  032B  0820               	movf	32,w	;volatile
  3870  032C  39E0               	andlw	-32
  3871  032D  3815               	iorlw	21
  3872  032E  00A0               	movwf	32	;volatile
  3873                           
  3874                           ;Main.c: 96: RC5PPSbits.RC5PPS = 0x0010;
  3875  032F  003D               	movlb	29	; select bank29
  3876  0330  0825               	movf	37,w	;volatile
  3877  0331  39E0               	andlw	-32
  3878  0332  3810               	iorlw	16
  3879  0333  00A5               	movwf	37	;volatile
  3880                           
  3881                           ;Main.c: 98: RB2PPSbits.RB2PPS = 0x14;
  3882  0334  081A               	movf	26,w	;volatile
  3883  0335  39E0               	andlw	-32
  3884  0336  3814               	iorlw	20
  3885  0337  009A               	movwf	26	;volatile
  3886                           
  3887                           ;Main.c: 99: RXPPSbits.RXPPS = 0x0B;
  3888  0338  003C               	movlb	28	; select bank28
  3889  0339  0824               	movf	36,w	;volatile
  3890  033A  39E0               	andlw	-32
  3891  033B  380B               	iorlw	11
  3892  033C  00A4               	movwf	36	;volatile
  3893                           
  3894                           ;Main.c: 101: PPSLOCK = 0x55;
  3895  033D  3055               	movlw	85
  3896  033E  008F               	movwf	15	;volatile
  3897                           
  3898                           ;Main.c: 102: PPSLOCK = 0xAA;
  3899  033F  30AA               	movlw	170
  3900  0340  008F               	movwf	15	;volatile
  3901                           
  3902                           ;Main.c: 103: PPSLOCKbits.PPSLOCKED = 0x01;
  3903  0341  140F               	bsf	15,0	;volatile
  3904  0342  0008               	return
  3905  0343                     __end_of_initMain:	
  3906                           
  3907                           	psect	text7
  3908  01D5                     __ptext7:	
  3909 ;; *************** function _internal_16 *****************
  3910 ;; Defined at:
  3911 ;;		line 56 in file "16F1717_Internal.c"
  3912 ;; Parameters:    Size  Location     Type
  3913 ;;		None
  3914 ;; Auto vars:     Size  Location     Type
  3915 ;;		None
  3916 ;; Return value:  Size  Location     Type
  3917 ;;                  1    wreg      void 
  3918 ;; Registers used:
  3919 ;;		None
  3920 ;; Tracked objects:
  3921 ;;		On entry : 0/0
  3922 ;;		On exit  : 0/0
  3923 ;;		Unchanged: 0/0
  3924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3929 ;;Total ram usage:        0 bytes
  3930 ;; Hardware stack levels used:    1
  3931 ;; This function calls:
  3932 ;;		Nothing
  3933 ;; This function is called by:
  3934 ;;		_initMain
  3935 ;; This function uses a non-reentrant model
  3936 ;;
  3937                           
  3938                           
  3939                           ;psect for function _internal_16
  3940  01D5                     _internal_16:	
  3941                           
  3942                           ;16F1717_Internal.c: 58: SCS0 = 0;
  3943                           
  3944                           ;incstack = 0
  3945                           ; Regs used in _internal_16: []
  3946  01D5  0021               	movlb	1	; select bank1
  3947  01D6  1019               	bcf	25,0	;volatile
  3948                           
  3949                           ;16F1717_Internal.c: 59: SCS1 = 0;
  3950  01D7  1099               	bcf	25,1	;volatile
  3951                           
  3952                           ;16F1717_Internal.c: 62: IRCF0 = 1;
  3953  01D8  1599               	bsf	25,3	;volatile
  3954                           
  3955                           ;16F1717_Internal.c: 63: IRCF1 = 1;
  3956  01D9  1619               	bsf	25,4	;volatile
  3957                           
  3958                           ;16F1717_Internal.c: 64: IRCF2 = 1;
  3959  01DA  1699               	bsf	25,5	;volatile
  3960                           
  3961                           ;16F1717_Internal.c: 65: IRCF3 = 1;
  3962  01DB  1719               	bsf	25,6	;volatile
  3963                           
  3964                           ;16F1717_Internal.c: 68: SPLLEN = 0;
  3965  01DC  1399               	bcf	25,7	;volatile
  3966  01DD  0008               	return
  3967  01DE                     __end_of_internal_16:	
  3968                           
  3969                           	psect	text8
  3970  0410                     __ptext8:	
  3971 ;; *************** function _conn_func *****************
  3972 ;; Defined at:
  3973 ;;		line 287 in file "Main.c"
  3974 ;; Parameters:    Size  Location     Type
  3975 ;;  buf             1    wreg     PTR unsigned char 
  3976 ;;		 -> buf(50), 
  3977 ;; Auto vars:     Size  Location     Type
  3978 ;;  buf             1   27[BANK0 ] PTR unsigned char 
  3979 ;;		 -> buf(50), 
  3980 ;;  conn1           1   26[BANK0 ] PTR unsigned char 
  3981 ;;		 -> NULL(0), buf(50), 
  3982 ;; Return value:  Size  Location     Type
  3983 ;;                  1    wreg      void 
  3984 ;; Registers used:
  3985 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3986 ;; Tracked objects:
  3987 ;;		On entry : 0/0
  3988 ;;		On exit  : 0/0
  3989 ;;		Unchanged: 0/0
  3990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3992 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3993 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3994 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3995 ;;Total ram usage:        4 bytes
  3996 ;; Hardware stack levels used:    1
  3997 ;; Hardware stack levels required when called:    4
  3998 ;; This function calls:
  3999 ;;		_OLED_Clear
  4000 ;;		_OLED_Write_String
  4001 ;;		_OLED_YX
  4002 ;;		_strstr
  4003 ;; This function is called by:
  4004 ;;		_main
  4005 ;; This function uses a non-reentrant model
  4006 ;;
  4007                           
  4008                           
  4009                           ;psect for function _conn_func
  4010  0410                     _conn_func:	
  4011                           
  4012                           ;incstack = 0
  4013                           ; Regs used in _conn_func: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4014                           ;conn_func@buf stored from wreg
  4015  0410  0020               	movlb	0	; select bank0
  4016  0411  00BB               	movwf	conn_func@buf
  4017                           
  4018                           ;Main.c: 289: char* conn1;
  4019                           ;Main.c: 291: conn1 = strstr(buf, "conn");
  4020  0412  30BD               	movlw	low (STR_14| (0+32768))
  4021  0413  00A0               	movwf	strstr@s2
  4022  0414  308B               	movlw	high (STR_14| (0+32768))
  4023  0415  00A1               	movwf	strstr@s2+1
  4024  0416  083B               	movf	conn_func@buf,w
  4025  0417  3183  2343  3184   	fcall	_strstr
  4026  041A  0020               	movlb	0	; select bank0
  4027  041B  00B8               	movwf	??_conn_func
  4028  041C  0838               	movf	??_conn_func,w
  4029  041D  00BA               	movwf	conn_func@conn1
  4030                           
  4031                           ;Main.c: 293: if (conn1 == (0))
  4032  041E  083A               	movf	conn_func@conn1,w
  4033  041F  1903               	btfsc	3,2
  4034  0420  0008               	return
  4035                           
  4036                           ;Main.c: 298: else
  4037                           ;Main.c: 299: {
  4038                           ;Main.c: 300: if (!on){
  4039                           
  4040                           ;Main.c: 296: }
  4041                           
  4042                           ;Main.c: 294: {
  4043                           ;Main.c: 295: return;
  4044  0421  083E               	movf	_on,w
  4045  0422  1D03               	btfss	3,2
  4046  0423  2C43               	goto	l1762
  4047                           
  4048                           ;Main.c: 301: OLED_YX(0, 0);
  4049  0424  01F5               	clrf	OLED_YX@Column
  4050  0425  3000               	movlw	0
  4051  0426  3182  22B3  3184   	fcall	_OLED_YX
  4052                           
  4053                           ;Main.c: 302: OLED_Write_String("Connected");
  4054  0429  3065               	movlw	low (STR_15| (0+32768))
  4055  042A  00FC               	movwf	OLED_Write_String@s
  4056  042B  308B               	movlw	high (STR_15| (0+32768))
  4057  042C  00FD               	movwf	OLED_Write_String@s+1
  4058  042D  3182  220D  3184   	fcall	_OLED_Write_String
  4059                           
  4060                           ;Main.c: 303: _delay((unsigned long)((1000)*(16000000/4000.0)));
  4061  0430  3015               	movlw	21
  4062  0431  0020               	movlb	0	; select bank0
  4063  0432  00B9               	movwf	??_conn_func+1
  4064  0433  304B               	movlw	75
  4065  0434  00B8               	movwf	??_conn_func
  4066  0435  30BE               	movlw	190
  4067  0436                     u1277:	
  4068  0436  0B89               	decfsz	9,f
  4069  0437  2C36               	goto	u1277
  4070  0438  0BB8               	decfsz	??_conn_func,f
  4071  0439  2C36               	goto	u1277
  4072  043A  0BB9               	decfsz	??_conn_func+1,f
  4073  043B  2C36               	goto	u1277
  4074  043C  0000               	nop
  4075                           
  4076                           ;Main.c: 304: OLED_Clear();
  4077  043D  3182  22DB         	fcall	_OLED_Clear
  4078                           
  4079                           ;Main.c: 306: on = 1;
  4080  043F  0020               	movlb	0	; select bank0
  4081  0440  01BE               	clrf	_on
  4082  0441  0ABE               	incf	_on,f
  4083                           
  4084                           ;Main.c: 307: }
  4085  0442  0008               	return
  4086  0443                     l1762:	
  4087                           
  4088                           ;Main.c: 309: else {
  4089                           ;Main.c: 310: OLED_YX(0, 0);
  4090  0443  01F5               	clrf	OLED_YX@Column
  4091  0444  3000               	movlw	0
  4092  0445  3182  22B3  3184   	fcall	_OLED_YX
  4093                           
  4094                           ;Main.c: 311: OLED_Write_String("Disconnected");
  4095  0448  3036               	movlw	low (STR_16| (0+32768))
  4096  0449  00FC               	movwf	OLED_Write_String@s
  4097  044A  308B               	movlw	high (STR_16| (0+32768))
  4098  044B  00FD               	movwf	OLED_Write_String@s+1
  4099  044C  3182  220D  3184   	fcall	_OLED_Write_String
  4100                           
  4101                           ;Main.c: 312: _delay((unsigned long)((1000)*(16000000/4000.0)));
  4102  044F  3015               	movlw	21
  4103  0450  0020               	movlb	0	; select bank0
  4104  0451  00B9               	movwf	??_conn_func+1
  4105  0452  304B               	movlw	75
  4106  0453  00B8               	movwf	??_conn_func
  4107  0454  30BE               	movlw	190
  4108  0455                     u1287:	
  4109  0455  0B89               	decfsz	9,f
  4110  0456  2C55               	goto	u1287
  4111  0457  0BB8               	decfsz	??_conn_func,f
  4112  0458  2C55               	goto	u1287
  4113  0459  0BB9               	decfsz	??_conn_func+1,f
  4114  045A  2C55               	goto	u1287
  4115  045B  0000               	nop
  4116                           
  4117                           ;Main.c: 313: OLED_Clear();
  4118  045C  3182  22DB         	fcall	_OLED_Clear
  4119                           
  4120                           ;Main.c: 315: on = 0;
  4121  045E  0020               	movlb	0	; select bank0
  4122  045F  01BE               	clrf	_on
  4123  0460  0008               	return
  4124  0461                     __end_of_conn_func:	
  4125                           
  4126                           	psect	text9
  4127  03BF                     __ptext9:	
  4128 ;; *************** function _bulb_func *****************
  4129 ;; Defined at:
  4130 ;;		line 178 in file "Main.c"
  4131 ;; Parameters:    Size  Location     Type
  4132 ;;  buf             1    wreg     PTR unsigned char 
  4133 ;;		 -> buf(50), 
  4134 ;; Auto vars:     Size  Location     Type
  4135 ;;  buf             1   27[BANK0 ] PTR unsigned char 
  4136 ;;		 -> buf(50), 
  4137 ;;  bulb1           1   26[BANK0 ] PTR unsigned char 
  4138 ;;		 -> NULL(0), buf(50), 
  4139 ;; Return value:  Size  Location     Type
  4140 ;;                  1    wreg      void 
  4141 ;; Registers used:
  4142 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4143 ;; Tracked objects:
  4144 ;;		On entry : 0/0
  4145 ;;		On exit  : 0/0
  4146 ;;		Unchanged: 0/0
  4147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4149 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4150 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4151 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4152 ;;Total ram usage:        4 bytes
  4153 ;; Hardware stack levels used:    1
  4154 ;; Hardware stack levels required when called:    4
  4155 ;; This function calls:
  4156 ;;		_OLED_Clear
  4157 ;;		_OLED_Write_String
  4158 ;;		_OLED_YX
  4159 ;;		_strstr
  4160 ;; This function is called by:
  4161 ;;		_main
  4162 ;; This function uses a non-reentrant model
  4163 ;;
  4164                           
  4165                           
  4166                           ;psect for function _bulb_func
  4167  03BF                     _bulb_func:	
  4168                           
  4169                           ;incstack = 0
  4170                           ; Regs used in _bulb_func: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4171                           ;bulb_func@buf stored from wreg
  4172  03BF  0020               	movlb	0	; select bank0
  4173  03C0  00BB               	movwf	bulb_func@buf
  4174                           
  4175                           ;Main.c: 180: char* bulb1;
  4176                           ;Main.c: 182: bulb1 = strstr(buf, "bulb");
  4177  03C1  30B3               	movlw	low (STR_5| (0+32768))
  4178  03C2  00A0               	movwf	strstr@s2
  4179  03C3  308B               	movlw	high (STR_5| (0+32768))
  4180  03C4  00A1               	movwf	strstr@s2+1
  4181  03C5  083B               	movf	bulb_func@buf,w
  4182  03C6  3183  2343  3183   	fcall	_strstr
  4183  03C9  0020               	movlb	0	; select bank0
  4184  03CA  00B8               	movwf	??_bulb_func
  4185  03CB  0838               	movf	??_bulb_func,w
  4186  03CC  00BA               	movwf	bulb_func@bulb1
  4187                           
  4188                           ;Main.c: 184: if (bulb1 == (0))
  4189  03CD  083A               	movf	bulb_func@bulb1,w
  4190  03CE  1903               	btfsc	3,2
  4191  03CF  0008               	return
  4192                           
  4193                           ;Main.c: 189: else
  4194                           ;Main.c: 190: {
  4195                           ;Main.c: 191: if (!on){
  4196                           
  4197                           ;Main.c: 187: }
  4198                           
  4199                           ;Main.c: 185: {
  4200                           ;Main.c: 186: return;
  4201  03D0  083E               	movf	_on,w
  4202  03D1  1D03               	btfss	3,2
  4203  03D2  2BF2               	goto	l1672
  4204                           
  4205                           ;Main.c: 192: OLED_YX(0, 0);
  4206  03D3  01F5               	clrf	OLED_YX@Column
  4207  03D4  3000               	movlw	0
  4208  03D5  3182  22B3  3183   	fcall	_OLED_YX
  4209                           
  4210                           ;Main.c: 193: OLED_Write_String("Bulb On");
  4211  03D8  309E               	movlw	low (STR_6| (0+32768))
  4212  03D9  00FC               	movwf	OLED_Write_String@s
  4213  03DA  308B               	movlw	high (STR_6| (0+32768))
  4214  03DB  00FD               	movwf	OLED_Write_String@s+1
  4215  03DC  3182  220D  3183   	fcall	_OLED_Write_String
  4216                           
  4217                           ;Main.c: 194: _delay((unsigned long)((1000)*(16000000/4000.0)));
  4218  03DF  3015               	movlw	21
  4219  03E0  0020               	movlb	0	; select bank0
  4220  03E1  00B9               	movwf	??_bulb_func+1
  4221  03E2  304B               	movlw	75
  4222  03E3  00B8               	movwf	??_bulb_func
  4223  03E4  30BE               	movlw	190
  4224  03E5                     u1297:	
  4225  03E5  0B89               	decfsz	9,f
  4226  03E6  2BE5               	goto	u1297
  4227  03E7  0BB8               	decfsz	??_bulb_func,f
  4228  03E8  2BE5               	goto	u1297
  4229  03E9  0BB9               	decfsz	??_bulb_func+1,f
  4230  03EA  2BE5               	goto	u1297
  4231  03EB  0000               	nop
  4232                           
  4233                           ;Main.c: 195: OLED_Clear();
  4234  03EC  3182  22DB         	fcall	_OLED_Clear
  4235                           
  4236                           ;Main.c: 197: on = 1;
  4237  03EE  0020               	movlb	0	; select bank0
  4238  03EF  01BE               	clrf	_on
  4239  03F0  0ABE               	incf	_on,f
  4240                           
  4241                           ;Main.c: 198: }
  4242  03F1  0008               	return
  4243  03F2                     l1672:	
  4244                           
  4245                           ;Main.c: 200: else {
  4246                           ;Main.c: 201: OLED_YX(0, 0);
  4247  03F2  01F5               	clrf	OLED_YX@Column
  4248  03F3  3000               	movlw	0
  4249  03F4  3182  22B3  3183   	fcall	_OLED_YX
  4250                           
  4251                           ;Main.c: 202: OLED_Write_String("Bulb Off");
  4252  03F7  3083               	movlw	low (STR_7| (0+32768))
  4253  03F8  00FC               	movwf	OLED_Write_String@s
  4254  03F9  308B               	movlw	high (STR_7| (0+32768))
  4255  03FA  00FD               	movwf	OLED_Write_String@s+1
  4256  03FB  3182  220D  3183   	fcall	_OLED_Write_String
  4257                           
  4258                           ;Main.c: 203: _delay((unsigned long)((1000)*(16000000/4000.0)));
  4259  03FE  3015               	movlw	21
  4260  03FF  0020               	movlb	0	; select bank0
  4261  0400  00B9               	movwf	??_bulb_func+1
  4262  0401  304B               	movlw	75
  4263  0402  00B8               	movwf	??_bulb_func
  4264  0403  30BE               	movlw	190
  4265  0404                     u1307:	
  4266  0404  0B89               	decfsz	9,f
  4267  0405  2C04               	goto	u1307
  4268  0406  0BB8               	decfsz	??_bulb_func,f
  4269  0407  2C04               	goto	u1307
  4270  0408  0BB9               	decfsz	??_bulb_func+1,f
  4271  0409  2C04               	goto	u1307
  4272  040A  0000               	nop
  4273                           
  4274                           ;Main.c: 204: OLED_Clear();
  4275  040B  3182  22DB         	fcall	_OLED_Clear
  4276                           
  4277                           ;Main.c: 206: on = 0;
  4278  040D  0020               	movlb	0	; select bank0
  4279  040E  01BE               	clrf	_on
  4280  040F  0008               	return
  4281  0410                     __end_of_bulb_func:	
  4282                           
  4283                           	psect	text10
  4284  0343                     __ptext10:	
  4285 ;; *************** function _strstr *****************
  4286 ;; Defined at:
  4287 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\strstr.c"
  4288 ;; Parameters:    Size  Location     Type
  4289 ;;  s1              1    wreg     PTR const unsigned char 
  4290 ;;		 -> NULL(0), buf(50), 
  4291 ;;  s2              2    0[BANK0 ] PTR const unsigned char 
  4292 ;;		 -> STR_14(5), STR_11(5), STR_8(5), STR_5(5), 
  4293 ;; Auto vars:     Size  Location     Type
  4294 ;;  s1              1   13[COMMON] PTR const unsigned char 
  4295 ;;		 -> NULL(0), buf(50), 
  4296 ;; Return value:  Size  Location     Type
  4297 ;;                  1    wreg      PTR unsigned char 
  4298 ;; Registers used:
  4299 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4300 ;; Tracked objects:
  4301 ;;		On entry : 0/0
  4302 ;;		On exit  : 0/0
  4303 ;;		Unchanged: 0/0
  4304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4305 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4306 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4307 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4308 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4309 ;;Total ram usage:        6 bytes
  4310 ;; Hardware stack levels used:    1
  4311 ;; Hardware stack levels required when called:    1
  4312 ;; This function calls:
  4313 ;;		_strchr
  4314 ;;		_strlen
  4315 ;;		_strncmp
  4316 ;; This function is called by:
  4317 ;;		_bulb_func
  4318 ;;		_moto_func
  4319 ;;		_plan_func
  4320 ;;		_conn_func
  4321 ;; This function uses a non-reentrant model
  4322 ;;
  4323                           
  4324                           
  4325                           ;psect for function _strstr
  4326  0343                     _strstr:	
  4327                           
  4328                           ;incstack = 0
  4329                           ; Regs used in _strstr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4330                           ;strstr@s1 stored from wreg
  4331  0343  00FD               	movwf	strstr@s1
  4332  0344  2B74               	goto	l1508
  4333  0345                     l1500:	
  4334  0345  0020               	movlb	0	; select bank0
  4335  0346  0821               	movf	strstr@s2+1,w
  4336  0347  00F7               	movwf	strncmp@s2+1
  4337  0348  0820               	movf	strstr@s2,w
  4338  0349  00F6               	movwf	strncmp@s2
  4339  034A  0821               	movf	strstr@s2+1,w
  4340  034B  00F1               	movwf	strlen@s+1
  4341  034C  0820               	movf	strstr@s2,w
  4342  034D  00F0               	movwf	strlen@s
  4343  034E  3182  2275  3183   	fcall	_strlen
  4344  0351  0871               	movf	?_strlen+1,w
  4345  0352  00F9               	movwf	strncmp@len+1
  4346  0353  0870               	movf	?_strlen,w
  4347  0354  00F8               	movwf	strncmp@len
  4348  0355  087D               	movf	strstr@s1,w
  4349  0356  3183  237F  3183   	fcall	_strncmp
  4350  0359  0876               	movf	?_strncmp,w
  4351  035A  0477               	iorwf	?_strncmp+1,w
  4352  035B  1D03               	btfss	3,2
  4353  035C  2B5F               	goto	l1506
  4354  035D  087D               	movf	strstr@s1,w
  4355  035E  0008               	return
  4356  035F                     l1506:	
  4357  035F  0020               	movlb	0	; select bank0
  4358  0360  0820               	movf	strstr@s2,w
  4359  0361  0084               	movwf	4
  4360  0362  0821               	movf	strstr@s2+1,w
  4361  0363  0085               	movwf	5
  4362  0364  0800               	movf	0,w	;code access
  4363  0365  00A2               	movwf	??_strstr
  4364  0366  01A3               	clrf	??_strstr+1
  4365  0367  0822               	movf	??_strstr,w
  4366  0368  00F0               	movwf	strchr@chr
  4367  0369  0823               	movf	??_strstr+1,w
  4368  036A  00F1               	movwf	strchr@chr+1
  4369  036B  087D               	movf	strstr@s1,w
  4370  036C  3E01               	addlw	1
  4371  036D  3181  21FA  3183   	fcall	_strchr
  4372  0370  0020               	movlb	0	; select bank0
  4373  0371  00A4               	movwf	??_strstr+2
  4374  0372  0824               	movf	??_strstr+2,w
  4375  0373  00FD               	movwf	strstr@s1
  4376  0374                     l1508:	
  4377  0374  087D               	movf	strstr@s1,w
  4378  0375  1903               	btfsc	3,2
  4379  0376  2B7D               	goto	l1512
  4380  0377  087D               	movf	strstr@s1,w
  4381  0378  0086               	movwf	6
  4382  0379  0187               	clrf	7
  4383  037A  0801               	movf	1,w
  4384  037B  1D03               	btfss	3,2
  4385  037C  2B45               	goto	l1500
  4386  037D                     l1512:	
  4387  037D  3000               	movlw	0
  4388  037E  0008               	return
  4389  037F                     __end_of_strstr:	
  4390                           
  4391                           	psect	text11
  4392  037F                     __ptext11:	
  4393 ;; *************** function _strncmp *****************
  4394 ;; Defined at:
  4395 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\strncmp.c"
  4396 ;; Parameters:    Size  Location     Type
  4397 ;;  s1              1    wreg     PTR const unsigned char 
  4398 ;;		 -> NULL(0), buf(50), 
  4399 ;;  s2              2    6[COMMON] PTR const unsigned char 
  4400 ;;		 -> STR_14(5), STR_11(5), STR_8(5), STR_5(5), 
  4401 ;;  len             2    8[COMMON] unsigned int 
  4402 ;; Auto vars:     Size  Location     Type
  4403 ;;  s1              1   12[COMMON] PTR const unsigned char 
  4404 ;;		 -> NULL(0), buf(50), 
  4405 ;; Return value:  Size  Location     Type
  4406 ;;                  2    6[COMMON] int 
  4407 ;; Registers used:
  4408 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  4409 ;; Tracked objects:
  4410 ;;		On entry : 0/0
  4411 ;;		On exit  : 0/0
  4412 ;;		Unchanged: 0/0
  4413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4414 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4415 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4416 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4417 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4418 ;;Total ram usage:        7 bytes
  4419 ;; Hardware stack levels used:    1
  4420 ;; This function calls:
  4421 ;;		Nothing
  4422 ;; This function is called by:
  4423 ;;		_strstr
  4424 ;; This function uses a non-reentrant model
  4425 ;;
  4426                           
  4427                           
  4428                           ;psect for function _strncmp
  4429  037F                     _strncmp:	
  4430                           
  4431                           ;incstack = 0
  4432                           ; Regs used in _strncmp: [wreg-fsr1h+status,2+status,0+pclath]
  4433                           ;strncmp@s1 stored from wreg
  4434  037F  00FC               	movwf	strncmp@s1
  4435  0380                     l1432:	
  4436  0380  3001               	movlw	1
  4437  0381  02F8               	subwf	strncmp@len,f
  4438  0382  3000               	movlw	0
  4439  0383  3BF9               	subwfb	strncmp@len+1,f
  4440  0384  0A78               	incf	strncmp@len,w
  4441  0385  1903               	btfsc	3,2
  4442  0386  0A79               	incf	strncmp@len+1,w
  4443  0387  1903               	btfsc	3,2
  4444  0388  2BBC               	goto	l1434
  4445  0389  087C               	movf	strncmp@s1,w
  4446  038A  0086               	movwf	6
  4447  038B  0187               	clrf	7
  4448  038C  0801               	movf	1,w
  4449  038D  1903               	btfsc	3,2
  4450  038E  2B9C               	goto	l1424
  4451  038F  0876               	movf	strncmp@s2,w
  4452  0390  0084               	movwf	4
  4453  0391  0877               	movf	strncmp@s2+1,w
  4454  0392  0085               	movwf	5
  4455  0393  0800               	movf	0,w	;code access
  4456  0394  00FA               	movwf	??_strncmp
  4457  0395  087C               	movf	strncmp@s1,w
  4458  0396  0086               	movwf	6
  4459  0397  0187               	clrf	7
  4460  0398  0801               	movf	1,w
  4461  0399  067A               	xorwf	??_strncmp,w
  4462  039A  1903               	skipnz
  4463  039B  2BB3               	goto	l1428
  4464  039C                     l1424:	
  4465  039C  0876               	movf	strncmp@s2,w
  4466  039D  0084               	movwf	4
  4467  039E  0877               	movf	strncmp@s2+1,w
  4468  039F  0085               	movwf	5
  4469  03A0  0800               	movf	0,w	;code access
  4470  03A1  00FA               	movwf	??_strncmp
  4471  03A2  01FB               	clrf	??_strncmp+1
  4472  03A3  09FA               	comf	??_strncmp,f
  4473  03A4  09FB               	comf	??_strncmp+1,f
  4474  03A5  0AFA               	incf	??_strncmp,f
  4475  03A6  1903               	skipnz
  4476  03A7  0AFB               	incf	??_strncmp+1,f
  4477  03A8  087C               	movf	strncmp@s1,w
  4478  03A9  0086               	movwf	6
  4479  03AA  0187               	clrf	7
  4480  03AB  0801               	movf	1,w
  4481  03AC  077A               	addwf	??_strncmp,w
  4482  03AD  00F6               	movwf	?_strncmp
  4483  03AE  087B               	movf	??_strncmp+1,w
  4484  03AF  1803               	skipnc
  4485  03B0  0A7B               	incf	??_strncmp+1,w
  4486  03B1  00F7               	movwf	?_strncmp+1
  4487  03B2  0008               	return
  4488  03B3                     l1428:	
  4489  03B3  3001               	movlw	1
  4490  03B4  00FA               	movwf	??_strncmp
  4491  03B5  087A               	movf	??_strncmp,w
  4492  03B6  07FC               	addwf	strncmp@s1,f
  4493  03B7  3001               	movlw	1
  4494  03B8  07F6               	addwf	strncmp@s2,f
  4495  03B9  3000               	movlw	0
  4496  03BA  3DF7               	addwfc	strncmp@s2+1,f
  4497  03BB  2B80               	goto	l1432
  4498  03BC                     l1434:	
  4499  03BC  01F6               	clrf	?_strncmp
  4500  03BD  01F7               	clrf	?_strncmp+1
  4501  03BE  0008               	return
  4502  03BF                     __end_of_strncmp:	
  4503                           
  4504                           	psect	text12
  4505  0275                     __ptext12:	
  4506 ;; *************** function _strlen *****************
  4507 ;; Defined at:
  4508 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\strlen.c"
  4509 ;; Parameters:    Size  Location     Type
  4510 ;;  s               2    0[COMMON] PTR const unsigned char 
  4511 ;;		 -> STR_14(5), STR_11(5), STR_8(5), STR_5(5), 
  4512 ;; Auto vars:     Size  Location     Type
  4513 ;;  cp              2    4[COMMON] PTR const unsigned char 
  4514 ;;		 -> STR_14(5), STR_11(5), STR_8(5), STR_5(5), 
  4515 ;; Return value:  Size  Location     Type
  4516 ;;                  2    0[COMMON] unsigned int 
  4517 ;; Registers used:
  4518 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4519 ;; Tracked objects:
  4520 ;;		On entry : 0/0
  4521 ;;		On exit  : 0/0
  4522 ;;		Unchanged: 0/0
  4523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4524 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4525 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4526 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4527 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4528 ;;Total ram usage:        6 bytes
  4529 ;; Hardware stack levels used:    1
  4530 ;; This function calls:
  4531 ;;		Nothing
  4532 ;; This function is called by:
  4533 ;;		_strstr
  4534 ;; This function uses a non-reentrant model
  4535 ;;
  4536                           
  4537                           
  4538                           ;psect for function _strlen
  4539  0275                     _strlen:	
  4540                           
  4541                           ;incstack = 0
  4542                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  4543  0275  0871               	movf	strlen@s+1,w
  4544  0276  00F5               	movwf	strlen@cp+1
  4545  0277  0870               	movf	strlen@s,w
  4546  0278  00F4               	movwf	strlen@cp
  4547  0279                     l1412:	
  4548  0279  0874               	movf	strlen@cp,w
  4549  027A  0084               	movwf	4
  4550  027B  0875               	movf	strlen@cp+1,w
  4551  027C  0085               	movwf	5
  4552  027D  0012               	moviw fsr0++
  4553  027E  1903               	btfsc	3,2
  4554  027F  2A85               	goto	l1414
  4555  0280  3001               	movlw	1
  4556  0281  07F4               	addwf	strlen@cp,f
  4557  0282  3000               	movlw	0
  4558  0283  3DF5               	addwfc	strlen@cp+1,f
  4559  0284  2A79               	goto	l1412
  4560  0285                     l1414:	
  4561  0285  0970               	comf	strlen@s,w
  4562  0286  00F2               	movwf	??_strlen
  4563  0287  0971               	comf	strlen@s+1,w
  4564  0288  00F3               	movwf	??_strlen+1
  4565  0289  0AF2               	incf	??_strlen,f
  4566  028A  1903               	skipnz
  4567  028B  0AF3               	incf	??_strlen+1,f
  4568  028C  0874               	movf	strlen@cp,w
  4569  028D  0772               	addwf	??_strlen,w
  4570  028E  00F0               	movwf	?_strlen
  4571  028F  0875               	movf	strlen@cp+1,w
  4572  0290  3D73               	addwfc	??_strlen+1,w
  4573  0291  00F1               	movwf	?_strlen+1
  4574  0292  0008               	return
  4575  0293                     __end_of_strlen:	
  4576                           
  4577                           	psect	text13
  4578  01FA                     __ptext13:	
  4579 ;; *************** function _strchr *****************
  4580 ;; Defined at:
  4581 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\strchr.c"
  4582 ;; Parameters:    Size  Location     Type
  4583 ;;  ptr             1    wreg     PTR const unsigned char 
  4584 ;;		 -> NULL(0), buf(50), 
  4585 ;;  chr             2    0[COMMON] int 
  4586 ;; Auto vars:     Size  Location     Type
  4587 ;;  ptr             1    2[COMMON] PTR const unsigned char 
  4588 ;;		 -> NULL(0), buf(50), 
  4589 ;; Return value:  Size  Location     Type
  4590 ;;                  1    wreg      PTR unsigned char 
  4591 ;; Registers used:
  4592 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4593 ;; Tracked objects:
  4594 ;;		On entry : 0/0
  4595 ;;		On exit  : 0/0
  4596 ;;		Unchanged: 0/0
  4597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4598 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4599 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4601 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4602 ;;Total ram usage:        3 bytes
  4603 ;; Hardware stack levels used:    1
  4604 ;; This function calls:
  4605 ;;		Nothing
  4606 ;; This function is called by:
  4607 ;;		_strstr
  4608 ;; This function uses a non-reentrant model
  4609 ;;
  4610                           
  4611                           
  4612                           ;psect for function _strchr
  4613  01FA                     _strchr:	
  4614                           
  4615                           ;incstack = 0
  4616                           ; Regs used in _strchr: [wreg+fsr1l+fsr1h+status,2+status,0]
  4617                           ;strchr@ptr stored from wreg
  4618  01FA  00F2               	movwf	strchr@ptr
  4619  01FB                     l762:	
  4620  01FB  0872               	movf	strchr@ptr,w
  4621  01FC  0086               	movwf	6
  4622  01FD  0187               	clrf	7
  4623  01FE  0801               	movf	1,w
  4624  01FF  0670               	xorwf	strchr@chr,w
  4625  0200  1D03               	skipz
  4626  0201  2A04               	goto	l1444
  4627  0202  0872               	movf	strchr@ptr,w
  4628  0203  0008               	return
  4629  0204                     l1444:	
  4630  0204  0872               	movf	strchr@ptr,w
  4631  0205  0086               	movwf	6
  4632  0206  0187               	clrf	7
  4633  0207  0AF2               	incf	strchr@ptr,f
  4634  0208  0801               	movf	1,w
  4635  0209  1D03               	btfss	3,2
  4636  020A  29FB               	goto	l762
  4637  020B  3000               	movlw	0
  4638  020C  0008               	return
  4639  020D                     __end_of_strchr:	
  4640                           
  4641                           	psect	text14
  4642  020D                     __ptext14:	
  4643 ;; *************** function _OLED_Write_String *****************
  4644 ;; Defined at:
  4645 ;;		line 284 in file "oled.c"
  4646 ;; Parameters:    Size  Location     Type
  4647 ;;  s               2   12[COMMON] PTR unsigned char 
  4648 ;;		 -> ftoa@buf(17), STR_18(6), STR_17(6), OLED_Write_Integer@status(2), 
  4649 ;;		 -> STR_16(13), STR_15(10), STR_13(10), STR_12(9), 
  4650 ;;		 -> STR_10(10), STR_9(9), STR_7(9), STR_6(8), 
  4651 ;;		 -> STR_3(14), STR_1(11), 
  4652 ;; Auto vars:     Size  Location     Type
  4653 ;;		None
  4654 ;; Return value:  Size  Location     Type
  4655 ;;                  1    wreg      void 
  4656 ;; Registers used:
  4657 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4658 ;; Tracked objects:
  4659 ;;		On entry : 0/0
  4660 ;;		On exit  : 0/0
  4661 ;;		Unchanged: 0/0
  4662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4663 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4665 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4666 ;;      Totals:         2       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4667 ;;Total ram usage:        3 bytes
  4668 ;; Hardware stack levels used:    1
  4669 ;; Hardware stack levels required when called:    2
  4670 ;; This function calls:
  4671 ;;		_OLED_PutChar
  4672 ;; This function is called by:
  4673 ;;		_main
  4674 ;;		_bulb_func
  4675 ;;		_moto_func
  4676 ;;		_plan_func
  4677 ;;		_conn_func
  4678 ;;		_OLED_Write_Integer
  4679 ;;		_OLED_Write_Float
  4680 ;; This function uses a non-reentrant model
  4681 ;;
  4682                           
  4683                           
  4684                           ;psect for function _OLED_Write_String
  4685  020D                     _OLED_Write_String:	
  4686  020D                     l1496:	
  4687                           ;oled.c: 286: while (*s) OLED_PutChar( *s++);
  4688                           
  4689                           ;incstack = 0
  4690                           ; Regs used in _OLED_Write_String: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4691                           
  4692  020D  087C               	movf	OLED_Write_String@s,w
  4693  020E  0084               	movwf	4
  4694  020F  087D               	movf	OLED_Write_String@s+1,w
  4695  0210  0085               	movwf	5
  4696  0211  0012               	moviw fsr0++
  4697  0212  1903               	btfsc	3,2
  4698  0213  0008               	return
  4699  0214  087C               	movf	OLED_Write_String@s,w
  4700  0215  0084               	movwf	4
  4701  0216  087D               	movf	OLED_Write_String@s+1,w
  4702  0217  0085               	movwf	5
  4703  0218  0800               	movf	0,w	;code access
  4704  0219  3185  25CC  3182   	fcall	_OLED_PutChar
  4705  021C  3001               	movlw	1
  4706  021D  07FC               	addwf	OLED_Write_String@s,f
  4707  021E  3000               	movlw	0
  4708  021F  3DFD               	addwfc	OLED_Write_String@s+1,f
  4709  0220  2A0D               	goto	l1496
  4710  0221                     __end_of_OLED_Write_String:	
  4711                           
  4712                           	psect	text15
  4713  02DB                     __ptext15:	
  4714 ;; *************** function _OLED_Clear *****************
  4715 ;; Defined at:
  4716 ;;		line 264 in file "oled.c"
  4717 ;; Parameters:    Size  Location     Type
  4718 ;;		None
  4719 ;; Auto vars:     Size  Location     Type
  4720 ;;  col             2   22[BANK0 ] unsigned int 
  4721 ;;  row             2   20[BANK0 ] unsigned int 
  4722 ;; Return value:  Size  Location     Type
  4723 ;;                  1    wreg      void 
  4724 ;; Registers used:
  4725 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4726 ;; Tracked objects:
  4727 ;;		On entry : 0/0
  4728 ;;		On exit  : 0/0
  4729 ;;		Unchanged: 0/0
  4730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4732 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4733 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4734 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4735 ;;Total ram usage:        5 bytes
  4736 ;; Hardware stack levels used:    1
  4737 ;; Hardware stack levels required when called:    3
  4738 ;; This function calls:
  4739 ;;		_OLED_PutChar
  4740 ;;		_OLED_YX
  4741 ;; This function is called by:
  4742 ;;		_main
  4743 ;;		_bulb_func
  4744 ;;		_moto_func
  4745 ;;		_plan_func
  4746 ;;		_conn_func
  4747 ;; This function uses a non-reentrant model
  4748 ;;
  4749                           
  4750                           
  4751                           ;psect for function _OLED_Clear
  4752  02DB                     _OLED_Clear:	
  4753                           
  4754                           ;oled.c: 266: for ( uint16_t row = 0; row < 8; row++ ) {
  4755                           
  4756                           ;incstack = 0
  4757                           ; Regs used in _OLED_Clear: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4758  02DB  0020               	movlb	0	; select bank0
  4759  02DC  01B4               	clrf	OLED_Clear@row
  4760  02DD  01B5               	clrf	OLED_Clear@row+1
  4761  02DE                     L1:	
  4762  02DE  3000               	movlw	0
  4763  02DF  0235               	subwf	OLED_Clear@row+1,w
  4764  02E0  3008               	movlw	8
  4765  02E1  1903               	skipnz
  4766  02E2  0234               	subwf	OLED_Clear@row,w
  4767  02E3  1803               	btfsc	3,0
  4768  02E4  0008               	return
  4769                           
  4770                           ;oled.c: 267: for ( uint16_t col = 0; col < 16; col++ ) {
  4771  02E5  01B6               	clrf	OLED_Clear@col
  4772  02E6  01B7               	clrf	OLED_Clear@col+1
  4773  02E7  3000               	movlw	0
  4774  02E8  0237               	subwf	OLED_Clear@col+1,w
  4775  02E9  3010               	movlw	16
  4776  02EA  1903               	skipnz
  4777  02EB  0236               	subwf	OLED_Clear@col,w
  4778  02EC  1803               	btfsc	3,0
  4779  02ED  2B06               	goto	l1488
  4780  02EE                     l1480:	
  4781                           
  4782                           ;oled.c: 268: OLED_YX( row, col );
  4783  02EE  0836               	movf	OLED_Clear@col,w
  4784  02EF  00FC               	movwf	??_OLED_Clear
  4785  02F0  087C               	movf	??_OLED_Clear,w
  4786  02F1  00F5               	movwf	OLED_YX@Column
  4787  02F2  0834               	movf	OLED_Clear@row,w
  4788  02F3  3182  22B3  3182   	fcall	_OLED_YX
  4789                           
  4790                           ;oled.c: 269: OLED_PutChar(' ');
  4791  02F6  3020               	movlw	32
  4792  02F7  3185  25CC  3182   	fcall	_OLED_PutChar
  4793  02FA  3001               	movlw	1
  4794  02FB  0020               	movlb	0	; select bank0
  4795  02FC  07B6               	addwf	OLED_Clear@col,f
  4796  02FD  3000               	movlw	0
  4797  02FE  3DB7               	addwfc	OLED_Clear@col+1,f
  4798  02FF  3000               	movlw	0
  4799  0300  0237               	subwf	OLED_Clear@col+1,w
  4800  0301  3010               	movlw	16
  4801  0302  1903               	skipnz
  4802  0303  0236               	subwf	OLED_Clear@col,w
  4803  0304  1C03               	skipc
  4804  0305  2AEE               	goto	l1480
  4805  0306                     l1488:	
  4806  0306  3001               	movlw	1
  4807  0307  07B4               	addwf	OLED_Clear@row,f
  4808  0308  3000               	movlw	0
  4809  0309  3DB5               	addwfc	OLED_Clear@row+1,f
  4810  030A  2ADE               	goto	L1
  4811  030B                     __end_of_OLED_Clear:	
  4812                           
  4813                           	psect	text16
  4814  02B3                     __ptext16:	
  4815 ;; *************** function _OLED_YX *****************
  4816 ;; Defined at:
  4817 ;;		line 213 in file "oled.c"
  4818 ;; Parameters:    Size  Location     Type
  4819 ;;  Row             1    wreg     unsigned char 
  4820 ;;  Column          1    5[COMMON] unsigned char 
  4821 ;; Auto vars:     Size  Location     Type
  4822 ;;  Row             1    9[COMMON] unsigned char 
  4823 ;; Return value:  Size  Location     Type
  4824 ;;                  1    wreg      void 
  4825 ;; Registers used:
  4826 ;;		wreg, status,2, status,0, pclath, cstack
  4827 ;; Tracked objects:
  4828 ;;		On entry : 0/0
  4829 ;;		On exit  : 0/0
  4830 ;;		Unchanged: 0/0
  4831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4832 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4833 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4834 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4835 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4836 ;;Total ram usage:        5 bytes
  4837 ;; Hardware stack levels used:    1
  4838 ;; Hardware stack levels required when called:    2
  4839 ;; This function calls:
  4840 ;;		_OLED_Command
  4841 ;; This function is called by:
  4842 ;;		_main
  4843 ;;		_bulb_func
  4844 ;;		_moto_func
  4845 ;;		_plan_func
  4846 ;;		_conn_func
  4847 ;;		_OLED_Clear
  4848 ;; This function uses a non-reentrant model
  4849 ;;
  4850                           
  4851                           
  4852                           ;psect for function _OLED_YX
  4853  02B3                     _OLED_YX:	
  4854                           
  4855                           ;incstack = 0
  4856                           ; Regs used in _OLED_YX: [wreg+status,2+status,0+pclath+cstack]
  4857                           ;OLED_YX@Row stored from wreg
  4858  02B3  00F9               	movwf	OLED_YX@Row
  4859                           
  4860                           ;oled.c: 215: OLED_Command( 0xB0 + Row);
  4861  02B4  0879               	movf	OLED_YX@Row,w
  4862  02B5  3EB0               	addlw	176
  4863  02B6  3182  2257  3182   	fcall	_OLED_Command
  4864                           
  4865                           ;oled.c: 216: OLED_Command( 0x00 + (8*Column & 0x0F) );
  4866  02B9  0875               	movf	OLED_YX@Column,w
  4867  02BA  00F6               	movwf	??_OLED_YX
  4868  02BB  3002               	movlw	2
  4869  02BC                     u715:	
  4870  02BC  35F6               	lslf	??_OLED_YX,f
  4871  02BD  3EFF               	addlw	-1
  4872  02BE  1D03               	skipz
  4873  02BF  2ABC               	goto	u715
  4874  02C0  3576               	lslf	??_OLED_YX,w
  4875  02C1  390F               	andlw	15
  4876  02C2  3182  2257  3182   	fcall	_OLED_Command
  4877                           
  4878                           ;oled.c: 217: OLED_Command( 0x10 + ((8*Column>>4)&0x0F) );
  4879  02C5  0875               	movf	OLED_YX@Column,w
  4880  02C6  00F6               	movwf	??_OLED_YX
  4881  02C7  01F7               	clrf	??_OLED_YX+1
  4882  02C8  35F6               	lslf	??_OLED_YX,f
  4883  02C9  0DF7               	rlf	??_OLED_YX+1,f
  4884  02CA  35F6               	lslf	??_OLED_YX,f
  4885  02CB  0DF7               	rlf	??_OLED_YX+1,f
  4886  02CC  35F6               	lslf	??_OLED_YX,f
  4887  02CD  0DF7               	rlf	??_OLED_YX+1,f
  4888  02CE  3004               	movlw	4
  4889  02CF  00F8               	movwf	??_OLED_YX+2
  4890  02D0                     u725:	
  4891  02D0  0D77               	rlf	??_OLED_YX+1,w
  4892  02D1  0CF7               	rrf	??_OLED_YX+1,f
  4893  02D2  0CF6               	rrf	??_OLED_YX,f
  4894  02D3  0BF8               	decfsz	??_OLED_YX+2,f
  4895  02D4  2AD0               	goto	u725
  4896  02D5  0876               	movf	??_OLED_YX,w
  4897  02D6  390F               	andlw	15
  4898  02D7  3E10               	addlw	16
  4899  02D8  3182  2257         	fcall	_OLED_Command
  4900  02DA  0008               	return
  4901  02DB                     __end_of_OLED_YX:	
  4902                           
  4903                           	psect	text17
  4904  05CC                     __ptext17:	
  4905 ;; *************** function _OLED_PutChar *****************
  4906 ;; Defined at:
  4907 ;;		line 229 in file "oled.c"
  4908 ;; Parameters:    Size  Location     Type
  4909 ;;  ch              1    wreg     unsigned char 
  4910 ;; Auto vars:     Size  Location     Type
  4911 ;;  ch              1   19[BANK0 ] unsigned char 
  4912 ;;  bytes           9    6[BANK0 ] unsigned char [9]
  4913 ;;  i               2   17[BANK0 ] int 
  4914 ;;  base            2   15[BANK0 ] PTR const unsigned char 
  4915 ;;		 -> OledFont(768), 
  4916 ;; Return value:  Size  Location     Type
  4917 ;;                  1    wreg      void 
  4918 ;; Registers used:
  4919 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4920 ;; Tracked objects:
  4921 ;;		On entry : 0/0
  4922 ;;		On exit  : 0/0
  4923 ;;		Unchanged: 0/0
  4924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4926 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4927 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4928 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4929 ;;Total ram usage:       20 bytes
  4930 ;; Hardware stack levels used:    1
  4931 ;; Hardware stack levels required when called:    1
  4932 ;; This function calls:
  4933 ;;		_Send_I2C_Data
  4934 ;;		_Send_I2C_StartBit
  4935 ;;		_Send_I2C_StopBit
  4936 ;;		_memmove
  4937 ;; This function is called by:
  4938 ;;		_OLED_Clear
  4939 ;;		_OLED_Write_String
  4940 ;; This function uses a non-reentrant model
  4941 ;;
  4942                           
  4943                           
  4944                           ;psect for function _OLED_PutChar
  4945  05CC                     _OLED_PutChar:	
  4946                           
  4947                           ;incstack = 0
  4948                           ; Regs used in _OLED_PutChar: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4949                           ;OLED_PutChar@ch stored from wreg
  4950  05CC  0020               	movlb	0	; select bank0
  4951  05CD  00B3               	movwf	OLED_PutChar@ch
  4952                           
  4953                           ;oled.c: 231: if ( ( ch < 32 ) || ( ch > 127 ) ){
  4954  05CE  3020               	movlw	32
  4955  05CF  0233               	subwf	OLED_PutChar@ch,w
  4956  05D0  1C03               	skipc
  4957  05D1  2DD6               	goto	l1380
  4958  05D2  3080               	movlw	128
  4959  05D3  0233               	subwf	OLED_PutChar@ch,w
  4960  05D4  1C03               	skipc
  4961  05D5  2DDA               	goto	l1382
  4962  05D6                     l1380:	
  4963                           
  4964                           ;oled.c: 232: ch = ' ';
  4965  05D6  3020               	movlw	32
  4966  05D7  00A0               	movwf	??_OLED_PutChar
  4967  05D8  0820               	movf	??_OLED_PutChar,w
  4968  05D9  00B3               	movwf	OLED_PutChar@ch
  4969  05DA                     l1382:	
  4970                           
  4971                           ;oled.c: 233: }
  4972                           ;oled.c: 235: const uint8_t *base = &OledFont[ch - 32][0];
  4973  05DA  0833               	movf	OLED_PutChar@ch,w
  4974  05DB  00A0               	movwf	??_OLED_PutChar
  4975  05DC  01A1               	clrf	??_OLED_PutChar+1
  4976  05DD  35A0               	lslf	??_OLED_PutChar,f
  4977  05DE  0DA1               	rlf	??_OLED_PutChar+1,f
  4978  05DF  35A0               	lslf	??_OLED_PutChar,f
  4979  05E0  0DA1               	rlf	??_OLED_PutChar+1,f
  4980  05E1  35A0               	lslf	??_OLED_PutChar,f
  4981  05E2  0DA1               	rlf	??_OLED_PutChar+1,f
  4982  05E3  0820               	movf	??_OLED_PutChar,w
  4983  05E4  3E00               	addlw	0
  4984  05E5  00A2               	movwf	??_OLED_PutChar+2
  4985  05E6  30FF               	movlw	255
  4986  05E7  3D21               	addwfc	??_OLED_PutChar+1,w
  4987  05E8  00A3               	movwf	??_OLED_PutChar+3
  4988  05E9  3028               	movlw	low (_OledFont| (0+32768))
  4989  05EA  00A4               	movwf	??_OLED_PutChar+4
  4990  05EB  3088               	movlw	high (_OledFont| (0+32768))
  4991  05EC  00A5               	movwf	??_OLED_PutChar+5
  4992  05ED  0822               	movf	??_OLED_PutChar+2,w
  4993  05EE  0724               	addwf	??_OLED_PutChar+4,w
  4994  05EF  00AF               	movwf	OLED_PutChar@base
  4995  05F0  0823               	movf	??_OLED_PutChar+3,w
  4996  05F1  3D25               	addwfc	??_OLED_PutChar+5,w
  4997  05F2  00B0               	movwf	OLED_PutChar@base+1
  4998                           
  4999                           ;oled.c: 237: uint8_t bytes[9];
  5000                           ;oled.c: 238: bytes[0] = 0x40;
  5001  05F3  3040               	movlw	64
  5002  05F4  00A0               	movwf	??_OLED_PutChar
  5003  05F5  0820               	movf	??_OLED_PutChar,w
  5004  05F6  00A6               	movwf	OLED_PutChar@bytes
  5005                           
  5006                           ;oled.c: 239: memmove( bytes + 1, base, 8 );
  5007  05F7  0830               	movf	OLED_PutChar@base+1,w
  5008  05F8  00F1               	movwf	memmove@s1+1
  5009  05F9  082F               	movf	OLED_PutChar@base,w
  5010  05FA  00F0               	movwf	memmove@s1
  5011  05FB  3008               	movlw	8
  5012  05FC  00F2               	movwf	memmove@n
  5013  05FD  3000               	movlw	0
  5014  05FE  00F3               	movwf	memmove@n+1
  5015  05FF  3027               	movlw	(low ((OLED_PutChar@bytes| 0+1)))& (0+255)
  5016  0600  3185  2567  3185   	fcall	_memmove
  5017                           
  5018                           ;oled.c: 241: Send_I2C_StartBit();
  5019  0603  3181  21B4  3185   	fcall	_Send_I2C_StartBit
  5020                           
  5021                           ;oled.c: 242: Send_I2C_Data(0x3C << 1);
  5022  0606  3078               	movlw	120
  5023  0607  00F0               	movwf	Send_I2C_Data@databyte
  5024  0608  3000               	movlw	0
  5025  0609  00F1               	movwf	Send_I2C_Data@databyte+1
  5026  060A  3181  21CC  3185   	fcall	_Send_I2C_Data
  5027                           
  5028                           ;oled.c: 243: Send_I2C_Data(0x40);
  5029  060D  3040               	movlw	64
  5030  060E  00F0               	movwf	Send_I2C_Data@databyte
  5031  060F  3000               	movlw	0
  5032  0610  00F1               	movwf	Send_I2C_Data@databyte+1
  5033  0611  3181  21CC  3185   	fcall	_Send_I2C_Data
  5034                           
  5035                           ;oled.c: 245: int i;
  5036                           ;oled.c: 247: for (i = 1; i <= 8; i++){
  5037  0614  3001               	movlw	1
  5038  0615  0020               	movlb	0	; select bank0
  5039  0616  00B1               	movwf	OLED_PutChar@i
  5040  0617  3000               	movlw	0
  5041  0618  00B2               	movwf	OLED_PutChar@i+1
  5042  0619  0832               	movf	OLED_PutChar@i+1,w
  5043  061A  3A80               	xorlw	128
  5044  061B  00A0               	movwf	??_OLED_PutChar
  5045  061C  3080               	movlw	128
  5046  061D  0220               	subwf	??_OLED_PutChar,w
  5047  061E  1D03               	skipz
  5048  061F  2E22               	goto	u755
  5049  0620  3009               	movlw	9
  5050  0621  0231               	subwf	OLED_PutChar@i,w
  5051  0622                     u755:	
  5052  0622  1803               	btfsc	3,0
  5053  0623  2E43               	goto	l1406
  5054  0624                     l1400:	
  5055                           
  5056                           ;oled.c: 248: Send_I2C_Data(bytes[i]);
  5057  0624  0020               	movlb	0	; select bank0
  5058  0625  0831               	movf	OLED_PutChar@i,w
  5059  0626  3E26               	addlw	(low (OLED_PutChar@bytes| 0))& (0+255)
  5060  0627  0086               	movwf	6
  5061  0628  0187               	clrf	7
  5062  0629  0801               	movf	1,w
  5063  062A  00A0               	movwf	??_OLED_PutChar
  5064  062B  01A1               	clrf	??_OLED_PutChar+1
  5065  062C  0820               	movf	??_OLED_PutChar,w
  5066  062D  00F0               	movwf	Send_I2C_Data@databyte
  5067  062E  0821               	movf	??_OLED_PutChar+1,w
  5068  062F  00F1               	movwf	Send_I2C_Data@databyte+1
  5069  0630  3181  21CC  3185   	fcall	_Send_I2C_Data
  5070  0633  3001               	movlw	1
  5071  0634  0020               	movlb	0	; select bank0
  5072  0635  07B1               	addwf	OLED_PutChar@i,f
  5073  0636  3000               	movlw	0
  5074  0637  3DB2               	addwfc	OLED_PutChar@i+1,f
  5075  0638  0832               	movf	OLED_PutChar@i+1,w
  5076  0639  3A80               	xorlw	128
  5077  063A  00A0               	movwf	??_OLED_PutChar
  5078  063B  3080               	movlw	128
  5079  063C  0220               	subwf	??_OLED_PutChar,w
  5080  063D  1D03               	skipz
  5081  063E  2E41               	goto	u765
  5082  063F  3009               	movlw	9
  5083  0640  0231               	subwf	OLED_PutChar@i,w
  5084  0641                     u765:	
  5085  0641  1C03               	skipc
  5086  0642  2E24               	goto	l1400
  5087  0643                     l1406:	
  5088                           
  5089                           ;oled.c: 249: }
  5090                           ;oled.c: 251: Send_I2C_StopBit();
  5091  0643  3181  21BC         	fcall	_Send_I2C_StopBit
  5092  0645  0008               	return
  5093  0646                     __end_of_OLED_PutChar:	
  5094                           
  5095                           	psect	text18
  5096  0567                     __ptext18:	
  5097 ;; *************** function _memmove *****************
  5098 ;; Defined at:
  5099 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\memmove.c"
  5100 ;; Parameters:    Size  Location     Type
  5101 ;;  d1              1    wreg     PTR void 
  5102 ;;		 -> OLED_PutChar@bytes(9), 
  5103 ;;  s1              2    0[COMMON] PTR const void 
  5104 ;;		 -> OledFont(768), 
  5105 ;;  n               2    2[COMMON] unsigned int 
  5106 ;; Auto vars:     Size  Location     Type
  5107 ;;  d1              1    8[COMMON] PTR void 
  5108 ;;		 -> OLED_PutChar@bytes(9), 
  5109 ;;  s               2    9[COMMON] PTR const unsigned char 
  5110 ;;		 -> OledFont(768), 
  5111 ;;  d               1   11[COMMON] PTR unsigned char 
  5112 ;;		 -> OLED_PutChar@bytes(9), 
  5113 ;; Return value:  Size  Location     Type
  5114 ;;                  1    wreg      PTR void 
  5115 ;; Registers used:
  5116 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  5117 ;; Tracked objects:
  5118 ;;		On entry : 0/0
  5119 ;;		On exit  : 0/0
  5120 ;;		Unchanged: 0/0
  5121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5122 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5123 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5124 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5125 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5126 ;;Total ram usage:       12 bytes
  5127 ;; Hardware stack levels used:    1
  5128 ;; This function calls:
  5129 ;;		Nothing
  5130 ;; This function is called by:
  5131 ;;		_OLED_PutChar
  5132 ;; This function uses a non-reentrant model
  5133 ;;
  5134                           
  5135                           
  5136                           ;psect for function _memmove
  5137  0567                     _memmove:	
  5138                           
  5139                           ;incstack = 0
  5140                           ; Regs used in _memmove: [wreg-fsr1h+status,2+status,0+pclath]
  5141                           ;memmove@d1 stored from wreg
  5142  0567  00F8               	movwf	memmove@d1
  5143  0568  0871               	movf	memmove@s1+1,w
  5144  0569  00FA               	movwf	memmove@s+1
  5145  056A  0870               	movf	memmove@s1,w
  5146  056B  00F9               	movwf	memmove@s
  5147  056C  0878               	movf	memmove@d1,w
  5148  056D  00F4               	movwf	??_memmove
  5149  056E  0874               	movf	??_memmove,w
  5150  056F  00FB               	movwf	memmove@d
  5151  0570  087B               	movf	memmove@d,w
  5152  0571  00F4               	movwf	??_memmove
  5153  0572  3000               	movlw	0
  5154  0573  00F5               	movwf	??_memmove+1
  5155  0574  0875               	movf	??_memmove+1,w
  5156  0575  027A               	subwf	memmove@s+1,w
  5157  0576  1D03               	skipz
  5158  0577  2D7A               	goto	u655
  5159  0578  0874               	movf	??_memmove,w
  5160  0579  0279               	subwf	memmove@s,w
  5161  057A                     u655:	
  5162  057A  1803               	skipnc
  5163  057B  2DB0               	goto	l1360
  5164  057C  0872               	movf	memmove@n,w
  5165  057D  0779               	addwf	memmove@s,w
  5166  057E  00F4               	movwf	??_memmove
  5167  057F  0873               	movf	memmove@n+1,w
  5168  0580  3D7A               	addwfc	memmove@s+1,w
  5169  0581  00F5               	movwf	??_memmove+1
  5170  0582  087B               	movf	memmove@d,w
  5171  0583  00F6               	movwf	??_memmove+2
  5172  0584  3000               	movlw	0
  5173  0585  00F7               	movwf	??_memmove+3
  5174  0586  0875               	movf	??_memmove+1,w
  5175  0587  0277               	subwf	??_memmove+3,w
  5176  0588  1D03               	skipz
  5177  0589  2D8C               	goto	u665
  5178  058A  0874               	movf	??_memmove,w
  5179  058B  0276               	subwf	??_memmove+2,w
  5180  058C                     u665:	
  5181  058C  1803               	skipnc
  5182  058D  2DB0               	goto	l1360
  5183  058E  0872               	movf	memmove@n,w
  5184  058F  07F9               	addwf	memmove@s,f
  5185  0590  0873               	movf	memmove@n+1,w
  5186  0591  3DFA               	addwfc	memmove@s+1,f
  5187  0592  0872               	movf	memmove@n,w
  5188  0593  00F4               	movwf	??_memmove
  5189  0594  0874               	movf	??_memmove,w
  5190  0595  07FB               	addwf	memmove@d,f
  5191  0596                     l1356:	
  5192  0596  3001               	movlw	1
  5193  0597  02F9               	subwf	memmove@s,f
  5194  0598  3000               	movlw	0
  5195  0599  3BFA               	subwfb	memmove@s+1,f
  5196  059A  0879               	movf	memmove@s,w
  5197  059B  0084               	movwf	4
  5198  059C  087A               	movf	memmove@s+1,w
  5199  059D  0085               	movwf	5
  5200  059E  0800               	movf	0,w	;code access
  5201  059F  00F4               	movwf	??_memmove
  5202  05A0  3001               	movlw	1
  5203  05A1  02FB               	subwf	memmove@d,f
  5204  05A2  087B               	movf	memmove@d,w
  5205  05A3  0086               	movwf	6
  5206  05A4  0187               	clrf	7
  5207  05A5  0874               	movf	??_memmove,w
  5208  05A6  0081               	movwf	1
  5209  05A7  3001               	movlw	1
  5210  05A8  02F2               	subwf	memmove@n,f
  5211  05A9  3000               	movlw	0
  5212  05AA  3BF3               	subwfb	memmove@n+1,f
  5213  05AB  0872               	movf	memmove@n,w
  5214  05AC  0473               	iorwf	memmove@n+1,w
  5215  05AD  1903               	btfsc	3,2
  5216  05AE  0008               	return
  5217  05AF  2D96               	goto	l1356
  5218  05B0                     l1360:	
  5219  05B0  0872               	movf	memmove@n,w
  5220  05B1  0473               	iorwf	memmove@n+1,w
  5221  05B2  1903               	btfsc	3,2
  5222  05B3  0008               	return
  5223  05B4  0879               	movf	memmove@s,w
  5224  05B5  0084               	movwf	4
  5225  05B6  087A               	movf	memmove@s+1,w
  5226  05B7  0085               	movwf	5
  5227  05B8  0800               	movf	0,w	;code access
  5228  05B9  00F4               	movwf	??_memmove
  5229  05BA  087B               	movf	memmove@d,w
  5230  05BB  0086               	movwf	6
  5231  05BC  0187               	clrf	7
  5232  05BD  0874               	movf	??_memmove,w
  5233  05BE  0081               	movwf	1
  5234  05BF  3001               	movlw	1
  5235  05C0  07F9               	addwf	memmove@s,f
  5236  05C1  3000               	movlw	0
  5237  05C2  3DFA               	addwfc	memmove@s+1,f
  5238  05C3  3001               	movlw	1
  5239  05C4  00F4               	movwf	??_memmove
  5240  05C5  0874               	movf	??_memmove,w
  5241  05C6  07FB               	addwf	memmove@d,f
  5242  05C7  3001               	movlw	1
  5243  05C8  02F2               	subwf	memmove@n,f
  5244  05C9  3000               	movlw	0
  5245  05CA  3BF3               	subwfb	memmove@n+1,f
  5246  05CB  2DB0               	goto	l1360
  5247  05CC                     __end_of_memmove:	
  5248                           ;	Return value of _memmove is never used
  5249                           
  5250                           
  5251                           	psect	text19
  5252  0503                     __ptext19:	
  5253 ;; *************** function _OLED_Init *****************
  5254 ;; Defined at:
  5255 ;;		line 174 in file "oled.c"
  5256 ;; Parameters:    Size  Location     Type
  5257 ;;		None
  5258 ;; Auto vars:     Size  Location     Type
  5259 ;;		None
  5260 ;; Return value:  Size  Location     Type
  5261 ;;                  1    wreg      void 
  5262 ;; Registers used:
  5263 ;;		wreg, status,2, status,0, pclath, cstack
  5264 ;; Tracked objects:
  5265 ;;		On entry : 0/0
  5266 ;;		On exit  : 0/0
  5267 ;;		Unchanged: 0/0
  5268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5273 ;;Total ram usage:        0 bytes
  5274 ;; Hardware stack levels used:    1
  5275 ;; Hardware stack levels required when called:    2
  5276 ;; This function calls:
  5277 ;;		_OLED_Command
  5278 ;; This function is called by:
  5279 ;;		_main
  5280 ;; This function uses a non-reentrant model
  5281 ;;
  5282                           
  5283                           
  5284                           ;psect for function _OLED_Init
  5285  0503                     _OLED_Init:	
  5286                           
  5287                           ;oled.c: 176: OLED_Command(0xAE);
  5288                           
  5289                           ;incstack = 0
  5290                           ; Regs used in _OLED_Init: [wreg+status,2+status,0+pclath+cstack]
  5291  0503  30AE               	movlw	174
  5292  0504  3182  2257  3185   	fcall	_OLED_Command
  5293                           
  5294                           ;oled.c: 177: OLED_Command(0xD5);
  5295  0507  30D5               	movlw	213
  5296  0508  3182  2257  3185   	fcall	_OLED_Command
  5297                           
  5298                           ;oled.c: 178: OLED_Command(0x80);
  5299  050B  3080               	movlw	128
  5300  050C  3182  2257  3185   	fcall	_OLED_Command
  5301                           
  5302                           ;oled.c: 179: OLED_Command(0xA8);
  5303  050F  30A8               	movlw	168
  5304  0510  3182  2257  3185   	fcall	_OLED_Command
  5305                           
  5306                           ;oled.c: 180: OLED_Command(0x1F);
  5307  0513  301F               	movlw	31
  5308  0514  3182  2257  3185   	fcall	_OLED_Command
  5309                           
  5310                           ;oled.c: 181: OLED_Command(0xD3);
  5311  0517  30D3               	movlw	211
  5312  0518  3182  2257  3185   	fcall	_OLED_Command
  5313                           
  5314                           ;oled.c: 182: OLED_Command(0x0);
  5315  051B  3000               	movlw	0
  5316  051C  3182  2257  3185   	fcall	_OLED_Command
  5317                           
  5318                           ;oled.c: 183: OLED_Command(0x40 | 0x0);
  5319  051F  3040               	movlw	64
  5320  0520  3182  2257  3185   	fcall	_OLED_Command
  5321                           
  5322                           ;oled.c: 184: OLED_Command(0x8D);
  5323  0523  308D               	movlw	141
  5324  0524  3182  2257  3185   	fcall	_OLED_Command
  5325                           
  5326                           ;oled.c: 185: OLED_Command(0xAF);
  5327  0527  30AF               	movlw	175
  5328  0528  3182  2257  3185   	fcall	_OLED_Command
  5329                           
  5330                           ;oled.c: 186: OLED_Command(0x20);
  5331  052B  3020               	movlw	32
  5332  052C  3182  2257  3185   	fcall	_OLED_Command
  5333                           
  5334                           ;oled.c: 187: OLED_Command(0x00);
  5335  052F  3000               	movlw	0
  5336  0530  3182  2257  3185   	fcall	_OLED_Command
  5337                           
  5338                           ;oled.c: 188: OLED_Command(0xA0 | 0x1);
  5339  0533  30A1               	movlw	161
  5340  0534  3182  2257  3185   	fcall	_OLED_Command
  5341                           
  5342                           ;oled.c: 189: OLED_Command(0xC8);
  5343  0537  30C8               	movlw	200
  5344  0538  3182  2257  3185   	fcall	_OLED_Command
  5345                           
  5346                           ;oled.c: 190: OLED_Command(0xDA);
  5347  053B  30DA               	movlw	218
  5348  053C  3182  2257  3185   	fcall	_OLED_Command
  5349                           
  5350                           ;oled.c: 191: OLED_Command(0x02);
  5351  053F  3002               	movlw	2
  5352  0540  3182  2257  3185   	fcall	_OLED_Command
  5353                           
  5354                           ;oled.c: 192: OLED_Command(0x81);
  5355  0543  3081               	movlw	129
  5356  0544  3182  2257  3185   	fcall	_OLED_Command
  5357                           
  5358                           ;oled.c: 193: OLED_Command(0x8F);
  5359  0547  308F               	movlw	143
  5360  0548  3182  2257  3185   	fcall	_OLED_Command
  5361                           
  5362                           ;oled.c: 194: OLED_Command(0xD9);
  5363  054B  30D9               	movlw	217
  5364  054C  3182  2257  3185   	fcall	_OLED_Command
  5365                           
  5366                           ;oled.c: 195: OLED_Command(0xF1);
  5367  054F  30F1               	movlw	241
  5368  0550  3182  2257  3185   	fcall	_OLED_Command
  5369                           
  5370                           ;oled.c: 196: OLED_Command(0xDB);
  5371  0553  30DB               	movlw	219
  5372  0554  3182  2257  3185   	fcall	_OLED_Command
  5373                           
  5374                           ;oled.c: 197: OLED_Command(0x40);
  5375  0557  3040               	movlw	64
  5376  0558  3182  2257  3185   	fcall	_OLED_Command
  5377                           
  5378                           ;oled.c: 198: OLED_Command(0xA4);
  5379  055B  30A4               	movlw	164
  5380  055C  3182  2257  3185   	fcall	_OLED_Command
  5381                           
  5382                           ;oled.c: 199: OLED_Command(0xA6);
  5383  055F  30A6               	movlw	166
  5384  0560  3182  2257  3185   	fcall	_OLED_Command
  5385                           
  5386                           ;oled.c: 200: OLED_Command(0xAF);
  5387  0563  30AF               	movlw	175
  5388  0564  3182  2257         	fcall	_OLED_Command
  5389  0566  0008               	return
  5390  0567                     __end_of_OLED_Init:	
  5391                           
  5392                           	psect	text20
  5393  0257                     __ptext20:	
  5394 ;; *************** function _OLED_Command *****************
  5395 ;; Defined at:
  5396 ;;		line 138 in file "oled.c"
  5397 ;; Parameters:    Size  Location     Type
  5398 ;;  temp            1    wreg     unsigned char 
  5399 ;; Auto vars:     Size  Location     Type
  5400 ;;  temp            1    4[COMMON] unsigned char 
  5401 ;; Return value:  Size  Location     Type
  5402 ;;                  1    wreg      void 
  5403 ;; Registers used:
  5404 ;;		wreg, status,2, status,0, pclath, cstack
  5405 ;; Tracked objects:
  5406 ;;		On entry : 0/0
  5407 ;;		On exit  : 0/0
  5408 ;;		Unchanged: 0/0
  5409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5411 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5412 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5413 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5414 ;;Total ram usage:        3 bytes
  5415 ;; Hardware stack levels used:    1
  5416 ;; Hardware stack levels required when called:    1
  5417 ;; This function calls:
  5418 ;;		_Send_I2C_Data
  5419 ;;		_Send_I2C_StartBit
  5420 ;;		_Send_I2C_StopBit
  5421 ;; This function is called by:
  5422 ;;		_OLED_Init
  5423 ;;		_OLED_YX
  5424 ;; This function uses a non-reentrant model
  5425 ;;
  5426                           
  5427                           
  5428                           ;psect for function _OLED_Command
  5429  0257                     _OLED_Command:	
  5430                           
  5431                           ;incstack = 0
  5432                           ; Regs used in _OLED_Command: [wreg+status,2+status,0+pclath+cstack]
  5433                           ;OLED_Command@temp stored from wreg
  5434  0257  00F4               	movwf	OLED_Command@temp
  5435                           
  5436                           ;oled.c: 140: Send_I2C_StartBit();
  5437  0258  3181  21B4  3182   	fcall	_Send_I2C_StartBit
  5438                           
  5439                           ;oled.c: 141: Send_I2C_Data(0x3C << 1);
  5440  025B  3078               	movlw	120
  5441  025C  00F0               	movwf	Send_I2C_Data@databyte
  5442  025D  3000               	movlw	0
  5443  025E  00F1               	movwf	Send_I2C_Data@databyte+1
  5444  025F  3181  21CC  3182   	fcall	_Send_I2C_Data
  5445                           
  5446                           ;oled.c: 142: Send_I2C_Data(0x00);
  5447  0262  3000               	movlw	0
  5448  0263  00F0               	movwf	Send_I2C_Data@databyte
  5449  0264  00F1               	movwf	Send_I2C_Data@databyte+1
  5450  0265  3181  21CC  3182   	fcall	_Send_I2C_Data
  5451                           
  5452                           ;oled.c: 143: Send_I2C_Data(temp);
  5453  0268  0874               	movf	OLED_Command@temp,w
  5454  0269  00F2               	movwf	??_OLED_Command
  5455  026A  01F3               	clrf	??_OLED_Command+1
  5456  026B  0872               	movf	??_OLED_Command,w
  5457  026C  00F0               	movwf	Send_I2C_Data@databyte
  5458  026D  0873               	movf	??_OLED_Command+1,w
  5459  026E  00F1               	movwf	Send_I2C_Data@databyte+1
  5460  026F  3181  21CC  3182   	fcall	_Send_I2C_Data
  5461                           
  5462                           ;oled.c: 144: Send_I2C_StopBit();
  5463  0272  3181  21BC         	fcall	_Send_I2C_StopBit
  5464  0274  0008               	return
  5465  0275                     __end_of_OLED_Command:	
  5466                           
  5467                           	psect	text21
  5468  01BC                     __ptext21:	
  5469 ;; *************** function _Send_I2C_StopBit *****************
  5470 ;; Defined at:
  5471 ;;		line 106 in file "I2C.c"
  5472 ;; Parameters:    Size  Location     Type
  5473 ;;		None
  5474 ;; Auto vars:     Size  Location     Type
  5475 ;;		None
  5476 ;; Return value:  Size  Location     Type
  5477 ;;                  1    wreg      void 
  5478 ;; Registers used:
  5479 ;;		None
  5480 ;; Tracked objects:
  5481 ;;		On entry : 0/0
  5482 ;;		On exit  : 0/0
  5483 ;;		Unchanged: 0/0
  5484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5489 ;;Total ram usage:        0 bytes
  5490 ;; Hardware stack levels used:    1
  5491 ;; This function calls:
  5492 ;;		Nothing
  5493 ;; This function is called by:
  5494 ;;		_OLED_Command
  5495 ;;		_OLED_PutChar
  5496 ;;		_OLED_Data
  5497 ;; This function uses a non-reentrant model
  5498 ;;
  5499                           
  5500                           
  5501                           ;psect for function _Send_I2C_StopBit
  5502  01BC                     _Send_I2C_StopBit:	
  5503                           
  5504                           ;I2C.c: 108: PIR1bits.SSP1IF=0;
  5505                           
  5506                           ;incstack = 0
  5507                           ; Regs used in _Send_I2C_StopBit: []
  5508  01BC  0020               	movlb	0	; select bank0
  5509  01BD  1191               	bcf	17,3	;volatile
  5510                           
  5511                           ;I2C.c: 109: SSPCON2bits.PEN=1;
  5512  01BE  0024               	movlb	4	; select bank4
  5513  01BF  1516               	bsf	22,2	;volatile
  5514  01C0                     l233:	
  5515                           ;I2C.c: 110: while(!PIR1bits.SSP1IF);
  5516                           
  5517  01C0  0020               	movlb	0	; select bank0
  5518  01C1  1991               	btfsc	17,3	;volatile
  5519  01C2  0008               	return
  5520  01C3  29C0               	goto	l233
  5521  01C4                     __end_of_Send_I2C_StopBit:	
  5522                           
  5523                           	psect	text22
  5524  01B4                     __ptext22:	
  5525 ;; *************** function _Send_I2C_StartBit *****************
  5526 ;; Defined at:
  5527 ;;		line 96 in file "I2C.c"
  5528 ;; Parameters:    Size  Location     Type
  5529 ;;		None
  5530 ;; Auto vars:     Size  Location     Type
  5531 ;;		None
  5532 ;; Return value:  Size  Location     Type
  5533 ;;                  1    wreg      void 
  5534 ;; Registers used:
  5535 ;;		None
  5536 ;; Tracked objects:
  5537 ;;		On entry : 0/0
  5538 ;;		On exit  : 0/0
  5539 ;;		Unchanged: 0/0
  5540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5545 ;;Total ram usage:        0 bytes
  5546 ;; Hardware stack levels used:    1
  5547 ;; This function calls:
  5548 ;;		Nothing
  5549 ;; This function is called by:
  5550 ;;		_OLED_Command
  5551 ;;		_OLED_PutChar
  5552 ;;		_OLED_Data
  5553 ;; This function uses a non-reentrant model
  5554 ;;
  5555                           
  5556                           
  5557                           ;psect for function _Send_I2C_StartBit
  5558  01B4                     _Send_I2C_StartBit:	
  5559                           
  5560                           ;I2C.c: 98: PIR1bits.SSP1IF=0;
  5561                           
  5562                           ;incstack = 0
  5563                           ; Regs used in _Send_I2C_StartBit: []
  5564  01B4  0020               	movlb	0	; select bank0
  5565  01B5  1191               	bcf	17,3	;volatile
  5566                           
  5567                           ;I2C.c: 99: SSPCON2bits.SEN=1;
  5568  01B6  0024               	movlb	4	; select bank4
  5569  01B7  1416               	bsf	22,0	;volatile
  5570  01B8                     l227:	
  5571                           ;I2C.c: 100: while(!PIR1bits.SSP1IF);
  5572                           
  5573  01B8  0020               	movlb	0	; select bank0
  5574  01B9  1991               	btfsc	17,3	;volatile
  5575  01BA  0008               	return
  5576  01BB  29B8               	goto	l227
  5577  01BC                     __end_of_Send_I2C_StartBit:	
  5578                           
  5579                           	psect	text23
  5580  01CC                     __ptext23:	
  5581 ;; *************** function _Send_I2C_Data *****************
  5582 ;; Defined at:
  5583 ;;		line 48 in file "I2C.c"
  5584 ;; Parameters:    Size  Location     Type
  5585 ;;  databyte        2    0[COMMON] unsigned int 
  5586 ;; Auto vars:     Size  Location     Type
  5587 ;;		None
  5588 ;; Return value:  Size  Location     Type
  5589 ;;                  1    wreg      void 
  5590 ;; Registers used:
  5591 ;;		wreg
  5592 ;; Tracked objects:
  5593 ;;		On entry : 0/0
  5594 ;;		On exit  : 0/0
  5595 ;;		Unchanged: 0/0
  5596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5597 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5600 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5601 ;;Total ram usage:        2 bytes
  5602 ;; Hardware stack levels used:    1
  5603 ;; This function calls:
  5604 ;;		Nothing
  5605 ;; This function is called by:
  5606 ;;		_OLED_Command
  5607 ;;		_OLED_PutChar
  5608 ;;		_OLED_Data
  5609 ;; This function uses a non-reentrant model
  5610 ;;
  5611                           
  5612                           
  5613                           ;psect for function _Send_I2C_Data
  5614  01CC                     _Send_I2C_Data:	
  5615                           
  5616                           ;I2C.c: 50: PIR1bits.SSP1IF=0;
  5617                           
  5618                           ;incstack = 0
  5619                           ; Regs used in _Send_I2C_Data: [wreg]
  5620  01CC  0020               	movlb	0	; select bank0
  5621  01CD  1191               	bcf	17,3	;volatile
  5622                           
  5623                           ;I2C.c: 51: SSPBUF = databyte;
  5624  01CE  0870               	movf	Send_I2C_Data@databyte,w
  5625  01CF  0024               	movlb	4	; select bank4
  5626  01D0  0091               	movwf	17	;volatile
  5627  01D1                     l209:	
  5628                           ;I2C.c: 52: while(!PIR1bits.SSP1IF);
  5629                           
  5630  01D1  0020               	movlb	0	; select bank0
  5631  01D2  1991               	btfsc	17,3	;volatile
  5632  01D3  0008               	return
  5633  01D4  29D1               	goto	l209
  5634  01D5                     __end_of_Send_I2C_Data:	
  5635                           
  5636                           	psect	text24
  5637  01EA                     __ptext24:	
  5638 ;; *************** function _I2C_Init *****************
  5639 ;; Defined at:
  5640 ;;		line 19 in file "I2C.c"
  5641 ;; Parameters:    Size  Location     Type
  5642 ;;		None
  5643 ;; Auto vars:     Size  Location     Type
  5644 ;;		None
  5645 ;; Return value:  Size  Location     Type
  5646 ;;                  2  117[None  ] int 
  5647 ;; Registers used:
  5648 ;;		wreg, status,2, status,0
  5649 ;; Tracked objects:
  5650 ;;		On entry : 0/0
  5651 ;;		On exit  : 0/0
  5652 ;;		Unchanged: 0/0
  5653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5656 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5657 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5658 ;;Total ram usage:        1 bytes
  5659 ;; Hardware stack levels used:    1
  5660 ;; This function calls:
  5661 ;;		Nothing
  5662 ;; This function is called by:
  5663 ;;		_main
  5664 ;; This function uses a non-reentrant model
  5665 ;;
  5666                           
  5667                           
  5668                           ;psect for function _I2C_Init
  5669  01EA                     _I2C_Init:	
  5670                           
  5671                           ;I2C.c: 25: SSPCONbits.SSPM=0x08;
  5672                           
  5673                           ;incstack = 0
  5674                           ; Regs used in _I2C_Init: [wreg+status,2+status,0]
  5675  01EA  0024               	movlb	4	; select bank4
  5676  01EB  0815               	movf	21,w	;volatile
  5677  01EC  39F0               	andlw	-16
  5678  01ED  3808               	iorlw	8
  5679  01EE  0095               	movwf	21	;volatile
  5680                           
  5681                           ;I2C.c: 26: SSPCONbits.SSPEN=1;
  5682  01EF  1695               	bsf	21,5	;volatile
  5683                           
  5684                           ;I2C.c: 38: SSPADD = 39;
  5685  01F0  3027               	movlw	39
  5686  01F1  0092               	movwf	18	;volatile
  5687                           
  5688                           ;I2C.c: 42: _delay((unsigned long)((10)*(16000000/4000.0)));
  5689  01F2  3034               	movlw	52
  5690  01F3  00F0               	movwf	??_I2C_Init
  5691  01F4  30F2               	movlw	242
  5692  01F5                     u1317:	
  5693  01F5  0B89               	decfsz	9,f
  5694  01F6  29F5               	goto	u1317
  5695  01F7  0BF0               	decfsz	??_I2C_Init,f
  5696  01F8  29F5               	goto	u1317
  5697  01F9  0008               	return
  5698  01FA                     __end_of_I2C_Init:	
  5699                           
  5700                           	psect	text25
  5701  023B                     __ptext25:	
  5702 ;; *************** function _EUSART_Read_Text *****************
  5703 ;; Defined at:
  5704 ;;		line 107 in file "EUSART.c"
  5705 ;; Parameters:    Size  Location     Type
  5706 ;;  Output          1    wreg     PTR unsigned char 
  5707 ;;		 -> buf(50), 
  5708 ;;  length          2    0[COMMON] unsigned int 
  5709 ;; Auto vars:     Size  Location     Type
  5710 ;;  Output          1    4[COMMON] PTR unsigned char 
  5711 ;;		 -> buf(50), 
  5712 ;;  i               2    5[COMMON] int 
  5713 ;;  i               2    0        int 
  5714 ;; Return value:  Size  Location     Type
  5715 ;;                  1    wreg      void 
  5716 ;; Registers used:
  5717 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5718 ;; Tracked objects:
  5719 ;;		On entry : 0/0
  5720 ;;		On exit  : 0/0
  5721 ;;		Unchanged: 0/0
  5722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5723 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5724 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5725 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5726 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5727 ;;Total ram usage:        7 bytes
  5728 ;; Hardware stack levels used:    1
  5729 ;; Hardware stack levels required when called:    1
  5730 ;; This function calls:
  5731 ;;		_EUSART_Read
  5732 ;; This function is called by:
  5733 ;;		_main
  5734 ;; This function uses a non-reentrant model
  5735 ;;
  5736                           
  5737                           
  5738                           ;psect for function _EUSART_Read_Text
  5739  023B                     _EUSART_Read_Text:	
  5740                           
  5741                           ;incstack = 0
  5742                           ; Regs used in _EUSART_Read_Text: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5743                           ;EUSART_Read_Text@Output stored from wreg
  5744  023B  00F4               	movwf	EUSART_Read_Text@Output
  5745                           
  5746                           ;EUSART.c: 109: int i;
  5747                           ;EUSART.c: 110: for(int i=0;i<length;i++)
  5748  023C  01F5               	clrf	EUSART_Read_Text@i_111
  5749  023D  01F6               	clrf	EUSART_Read_Text@i_111+1
  5750  023E                     l1588:	
  5751  023E  0871               	movf	EUSART_Read_Text@length+1,w
  5752  023F  0276               	subwf	EUSART_Read_Text@i_111+1,w
  5753  0240  1D03               	skipz
  5754  0241  2A44               	goto	u1105
  5755  0242  0870               	movf	EUSART_Read_Text@length,w
  5756  0243  0275               	subwf	EUSART_Read_Text@i_111,w
  5757  0244                     u1105:	
  5758  0244  1803               	btfsc	3,0
  5759  0245  0008               	return
  5760                           
  5761                           ;EUSART.c: 111: Output[i] = EUSART_Read();
  5762  0246  3181  21DE  3182   	fcall	_EUSART_Read
  5763  0249  00F2               	movwf	??_EUSART_Read_Text
  5764  024A  0875               	movf	EUSART_Read_Text@i_111,w
  5765  024B  0774               	addwf	EUSART_Read_Text@Output,w
  5766  024C  00F3               	movwf	??_EUSART_Read_Text+1
  5767  024D  0873               	movf	??_EUSART_Read_Text+1,w
  5768  024E  0086               	movwf	6
  5769  024F  0187               	clrf	7
  5770  0250  0872               	movf	??_EUSART_Read_Text,w
  5771  0251  0081               	movwf	1
  5772  0252  3001               	movlw	1
  5773  0253  07F5               	addwf	EUSART_Read_Text@i_111,f
  5774  0254  3000               	movlw	0
  5775  0255  3DF6               	addwfc	EUSART_Read_Text@i_111+1,f
  5776  0256  2A3E               	goto	l1588
  5777  0257                     __end_of_EUSART_Read_Text:	
  5778                           
  5779                           	psect	text26
  5780  01DE                     __ptext26:	
  5781 ;; *************** function _EUSART_Read *****************
  5782 ;; Defined at:
  5783 ;;		line 68 in file "EUSART.c"
  5784 ;; Parameters:    Size  Location     Type
  5785 ;;		None
  5786 ;; Auto vars:     Size  Location     Type
  5787 ;;		None
  5788 ;; Return value:  Size  Location     Type
  5789 ;;                  1    wreg      unsigned char 
  5790 ;; Registers used:
  5791 ;;		wreg
  5792 ;; Tracked objects:
  5793 ;;		On entry : 0/0
  5794 ;;		On exit  : 0/0
  5795 ;;		Unchanged: 0/0
  5796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5801 ;;Total ram usage:        0 bytes
  5802 ;; Hardware stack levels used:    1
  5803 ;; This function calls:
  5804 ;;		Nothing
  5805 ;; This function is called by:
  5806 ;;		_EUSART_Read_Text
  5807 ;; This function uses a non-reentrant model
  5808 ;;
  5809                           
  5810                           
  5811                           ;psect for function _EUSART_Read
  5812  01DE                     _EUSART_Read:	
  5813                           
  5814                           ;EUSART.c: 71: RC1STAbits.SREN = 1;
  5815                           
  5816                           ;incstack = 0
  5817                           ; Regs used in _EUSART_Read: [wreg]
  5818  01DE  0023               	movlb	3	; select bank3
  5819  01DF  169D               	bsf	29,5	;volatile
  5820  01E0                     l67:	
  5821                           ;EUSART.c: 73: {
  5822                           
  5823                           ;EUSART.c: 72: while(!PIR1bits.RCIF)
  5824                           
  5825  01E0  0020               	movlb	0	; select bank0
  5826  01E1  1E91               	btfss	17,5	;volatile
  5827  01E2  29E0               	goto	l67
  5828                           
  5829                           ;EUSART.c: 74: }
  5830                           ;EUSART.c: 77: if(1 == RC1STAbits.OERR)
  5831  01E3  0023               	movlb	3	; select bank3
  5832  01E4  1C9D               	btfss	29,1	;volatile
  5833  01E5  29E8               	goto	l1456
  5834                           
  5835                           ;EUSART.c: 78: {
  5836                           ;EUSART.c: 81: RC1STAbits.SPEN = 0;
  5837  01E6  139D               	bcf	29,7	;volatile
  5838                           
  5839                           ;EUSART.c: 82: RC1STAbits.SPEN = 1;
  5840  01E7  179D               	bsf	29,7	;volatile
  5841  01E8                     l1456:	
  5842                           
  5843                           ;EUSART.c: 83: }
  5844                           ;EUSART.c: 85: return RC1REG;
  5845  01E8  0819               	movf	25,w	;volatile
  5846  01E9  0008               	return
  5847  01EA                     __end_of_EUSART_Read:	
  5848                           
  5849                           	psect	text27
  5850  0748                     __ptext27:	
  5851 ;; *************** function _EUSART_Initialize *****************
  5852 ;; Defined at:
  5853 ;;		line 34 in file "EUSART.c"
  5854 ;; Parameters:    Size  Location     Type
  5855 ;;  baudrate        4    6[BANK0 ] const long 
  5856 ;; Auto vars:     Size  Location     Type
  5857 ;;  x               2    9[COMMON] unsigned int 
  5858 ;; Return value:  Size  Location     Type
  5859 ;;                  1    wreg      unsigned char 
  5860 ;; Registers used:
  5861 ;;		wreg, status,2, status,0, pclath, cstack
  5862 ;; Tracked objects:
  5863 ;;		On entry : 0/0
  5864 ;;		On exit  : 0/0
  5865 ;;		Unchanged: 0/0
  5866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5867 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5868 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5869 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5870 ;;      Totals:         2      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5871 ;;Total ram usage:       14 bytes
  5872 ;; Hardware stack levels used:    1
  5873 ;; Hardware stack levels required when called:    1
  5874 ;; This function calls:
  5875 ;;		___aldiv
  5876 ;; This function is called by:
  5877 ;;		_main
  5878 ;; This function uses a non-reentrant model
  5879 ;;
  5880                           
  5881                           
  5882                           ;psect for function _EUSART_Initialize
  5883  0748                     _EUSART_Initialize:	
  5884                           
  5885                           ;EUSART.c: 36: unsigned int x;
  5886                           ;EUSART.c: 37: x = (16000000 - baudrate*64)/(baudrate*64);
  5887                           
  5888                           ;incstack = 0
  5889                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5890  0748  0020               	movlb	0	; select bank0
  5891  0749  0826               	movf	EUSART_Initialize@baudrate,w
  5892  074A  00AA               	movwf	??_EUSART_Initialize
  5893  074B  0827               	movf	EUSART_Initialize@baudrate+1,w
  5894  074C  00AB               	movwf	??_EUSART_Initialize+1
  5895  074D  0828               	movf	EUSART_Initialize@baudrate+2,w
  5896  074E  00AC               	movwf	??_EUSART_Initialize+2
  5897  074F  0829               	movf	EUSART_Initialize@baudrate+3,w
  5898  0750  00AD               	movwf	??_EUSART_Initialize+3
  5899  0751  3006               	movlw	6
  5900  0752                     u1045:	
  5901  0752  35AA               	lslf	??_EUSART_Initialize,f
  5902  0753  0DAB               	rlf	??_EUSART_Initialize+1,f
  5903  0754  0DAC               	rlf	??_EUSART_Initialize+2,f
  5904  0755  0DAD               	rlf	??_EUSART_Initialize+3,f
  5905  0756  0B89               	decfsz	9,f
  5906  0757  2F52               	goto	u1045
  5907  0758  082D               	movf	??_EUSART_Initialize+3,w
  5908  0759  00F3               	movwf	___aldiv@divisor+3
  5909  075A  082C               	movf	??_EUSART_Initialize+2,w
  5910  075B  00F2               	movwf	___aldiv@divisor+2
  5911  075C  082B               	movf	??_EUSART_Initialize+1,w
  5912  075D  00F1               	movwf	___aldiv@divisor+1
  5913  075E  082A               	movf	??_EUSART_Initialize,w
  5914  075F  00F0               	movwf	___aldiv@divisor
  5915  0760  0826               	movf	EUSART_Initialize@baudrate,w
  5916  0761  00AE               	movwf	??_EUSART_Initialize+4
  5917  0762  0827               	movf	EUSART_Initialize@baudrate+1,w
  5918  0763  00AF               	movwf	??_EUSART_Initialize+5
  5919  0764  0828               	movf	EUSART_Initialize@baudrate+2,w
  5920  0765  00B0               	movwf	??_EUSART_Initialize+6
  5921  0766  0829               	movf	EUSART_Initialize@baudrate+3,w
  5922  0767  00B1               	movwf	??_EUSART_Initialize+7
  5923  0768  3006               	movlw	6
  5924  0769                     u1055:	
  5925  0769  35AE               	lslf	??_EUSART_Initialize+4,f
  5926  076A  0DAF               	rlf	??_EUSART_Initialize+5,f
  5927  076B  0DB0               	rlf	??_EUSART_Initialize+6,f
  5928  076C  0DB1               	rlf	??_EUSART_Initialize+7,f
  5929  076D  0B89               	decfsz	9,f
  5930  076E  2F69               	goto	u1055
  5931  076F  09AE               	comf	??_EUSART_Initialize+4,f
  5932  0770  09AF               	comf	??_EUSART_Initialize+5,f
  5933  0771  09B0               	comf	??_EUSART_Initialize+6,f
  5934  0772  09B1               	comf	??_EUSART_Initialize+7,f
  5935  0773  0AAE               	incf	??_EUSART_Initialize+4,f
  5936  0774  1903               	skipnz
  5937  0775  0AAF               	incf	??_EUSART_Initialize+5,f
  5938  0776  1903               	skipnz
  5939  0777  0AB0               	incf	??_EUSART_Initialize+6,f
  5940  0778  1903               	skipnz
  5941  0779  0AB1               	incf	??_EUSART_Initialize+7,f
  5942  077A  3000               	movlw	0
  5943  077B  072E               	addwf	??_EUSART_Initialize+4,w
  5944  077C  00F4               	movwf	___aldiv@dividend
  5945  077D  3024               	movlw	36
  5946  077E  3D2F               	addwfc	??_EUSART_Initialize+5,w
  5947  077F  00F5               	movwf	___aldiv@dividend+1
  5948  0780  30F4               	movlw	244
  5949  0781  3D30               	addwfc	??_EUSART_Initialize+6,w
  5950  0782  00F6               	movwf	___aldiv@dividend+2
  5951  0783  3000               	movlw	0
  5952  0784  3D31               	addwfc	??_EUSART_Initialize+7,w
  5953  0785  00F7               	movwf	___aldiv@dividend+3
  5954  0786  3186  26C6  3187   	fcall	___aldiv
  5955  0789  0871               	movf	?___aldiv+1,w
  5956  078A  00FA               	movwf	EUSART_Initialize@x+1
  5957  078B  0870               	movf	?___aldiv,w
  5958  078C  00F9               	movwf	EUSART_Initialize@x
  5959                           
  5960                           ;EUSART.c: 38: if(x>255)
  5961  078D  3001               	movlw	1
  5962  078E  027A               	subwf	EUSART_Initialize@x+1,w
  5963  078F  3000               	movlw	0
  5964  0790  1903               	skipnz
  5965  0791  0279               	subwf	EUSART_Initialize@x,w
  5966  0792  1C03               	skipc
  5967  0793  2FDB               	goto	l1564
  5968                           
  5969                           ;EUSART.c: 39: {
  5970                           ;EUSART.c: 40: x = (16000000 - baudrate*16)/(baudrate*16);
  5971  0794  0020               	movlb	0	; select bank0
  5972  0795  0826               	movf	EUSART_Initialize@baudrate,w
  5973  0796  00AA               	movwf	??_EUSART_Initialize
  5974  0797  0827               	movf	EUSART_Initialize@baudrate+1,w
  5975  0798  00AB               	movwf	??_EUSART_Initialize+1
  5976  0799  0828               	movf	EUSART_Initialize@baudrate+2,w
  5977  079A  00AC               	movwf	??_EUSART_Initialize+2
  5978  079B  0829               	movf	EUSART_Initialize@baudrate+3,w
  5979  079C  00AD               	movwf	??_EUSART_Initialize+3
  5980  079D  3004               	movlw	4
  5981  079E                     u1075:	
  5982  079E  35AA               	lslf	??_EUSART_Initialize,f
  5983  079F  0DAB               	rlf	??_EUSART_Initialize+1,f
  5984  07A0  0DAC               	rlf	??_EUSART_Initialize+2,f
  5985  07A1  0DAD               	rlf	??_EUSART_Initialize+3,f
  5986  07A2  0B89               	decfsz	9,f
  5987  07A3  2F9E               	goto	u1075
  5988  07A4  082D               	movf	??_EUSART_Initialize+3,w
  5989  07A5  00F3               	movwf	___aldiv@divisor+3
  5990  07A6  082C               	movf	??_EUSART_Initialize+2,w
  5991  07A7  00F2               	movwf	___aldiv@divisor+2
  5992  07A8  082B               	movf	??_EUSART_Initialize+1,w
  5993  07A9  00F1               	movwf	___aldiv@divisor+1
  5994  07AA  082A               	movf	??_EUSART_Initialize,w
  5995  07AB  00F0               	movwf	___aldiv@divisor
  5996  07AC  0826               	movf	EUSART_Initialize@baudrate,w
  5997  07AD  00AE               	movwf	??_EUSART_Initialize+4
  5998  07AE  0827               	movf	EUSART_Initialize@baudrate+1,w
  5999  07AF  00AF               	movwf	??_EUSART_Initialize+5
  6000  07B0  0828               	movf	EUSART_Initialize@baudrate+2,w
  6001  07B1  00B0               	movwf	??_EUSART_Initialize+6
  6002  07B2  0829               	movf	EUSART_Initialize@baudrate+3,w
  6003  07B3  00B1               	movwf	??_EUSART_Initialize+7
  6004  07B4  3004               	movlw	4
  6005  07B5                     u1085:	
  6006  07B5  35AE               	lslf	??_EUSART_Initialize+4,f
  6007  07B6  0DAF               	rlf	??_EUSART_Initialize+5,f
  6008  07B7  0DB0               	rlf	??_EUSART_Initialize+6,f
  6009  07B8  0DB1               	rlf	??_EUSART_Initialize+7,f
  6010  07B9  0B89               	decfsz	9,f
  6011  07BA  2FB5               	goto	u1085
  6012  07BB  09AE               	comf	??_EUSART_Initialize+4,f
  6013  07BC  09AF               	comf	??_EUSART_Initialize+5,f
  6014  07BD  09B0               	comf	??_EUSART_Initialize+6,f
  6015  07BE  09B1               	comf	??_EUSART_Initialize+7,f
  6016  07BF  0AAE               	incf	??_EUSART_Initialize+4,f
  6017  07C0  1903               	skipnz
  6018  07C1  0AAF               	incf	??_EUSART_Initialize+5,f
  6019  07C2  1903               	skipnz
  6020  07C3  0AB0               	incf	??_EUSART_Initialize+6,f
  6021  07C4  1903               	skipnz
  6022  07C5  0AB1               	incf	??_EUSART_Initialize+7,f
  6023  07C6  3000               	movlw	0
  6024  07C7  072E               	addwf	??_EUSART_Initialize+4,w
  6025  07C8  00F4               	movwf	___aldiv@dividend
  6026  07C9  3024               	movlw	36
  6027  07CA  3D2F               	addwfc	??_EUSART_Initialize+5,w
  6028  07CB  00F5               	movwf	___aldiv@dividend+1
  6029  07CC  30F4               	movlw	244
  6030  07CD  3D30               	addwfc	??_EUSART_Initialize+6,w
  6031  07CE  00F6               	movwf	___aldiv@dividend+2
  6032  07CF  3000               	movlw	0
  6033  07D0  3D31               	addwfc	??_EUSART_Initialize+7,w
  6034  07D1  00F7               	movwf	___aldiv@dividend+3
  6035  07D2  3186  26C6  3187   	fcall	___aldiv
  6036  07D5  0871               	movf	?___aldiv+1,w
  6037  07D6  00FA               	movwf	EUSART_Initialize@x+1
  6038  07D7  0870               	movf	?___aldiv,w
  6039  07D8  00F9               	movwf	EUSART_Initialize@x
  6040                           
  6041                           ;EUSART.c: 41: BRGH = 1;
  6042  07D9  0023               	movlb	3	; select bank3
  6043  07DA  151E               	bsf	30,2	;volatile
  6044  07DB                     l1564:	
  6045                           
  6046                           ;EUSART.c: 42: }
  6047                           ;EUSART.c: 43: if(x<256)
  6048  07DB  3001               	movlw	1
  6049  07DC  027A               	subwf	EUSART_Initialize@x+1,w
  6050  07DD  3000               	movlw	0
  6051  07DE  1903               	skipnz
  6052  07DF  0279               	subwf	EUSART_Initialize@x,w
  6053  07E0  1803               	skipnc
  6054  07E1  0008               	return
  6055                           
  6056                           ;EUSART.c: 44: {
  6057                           ;EUSART.c: 45: SPBRG = x;
  6058  07E2  0879               	movf	EUSART_Initialize@x,w
  6059  07E3  0023               	movlb	3	; select bank3
  6060  07E4  009B               	movwf	27	;volatile
  6061                           
  6062                           ;EUSART.c: 46: SYNC = 0;
  6063  07E5  121E               	bcf	30,4	;volatile
  6064                           
  6065                           ;EUSART.c: 47: SPEN = 1;
  6066  07E6  179D               	bsf	29,7	;volatile
  6067                           
  6068                           ;EUSART.c: 48: TRISC7 = 1;
  6069  07E7  0021               	movlb	1	; select bank1
  6070  07E8  178E               	bsf	14,7	;volatile
  6071                           
  6072                           ;EUSART.c: 49: TRISC6 = 1;
  6073  07E9  170E               	bsf	14,6	;volatile
  6074                           
  6075                           ;EUSART.c: 50: CREN = 1;
  6076  07EA  0023               	movlb	3	; select bank3
  6077  07EB  161D               	bsf	29,4	;volatile
  6078                           
  6079                           ;EUSART.c: 51: TXEN = 1;
  6080  07EC  169E               	bsf	30,5	;volatile
  6081                           
  6082                           ;EUSART.c: 52: return 1;
  6083                           ;	Return value of _EUSART_Initialize is never used
  6084  07ED  0008               	return
  6085  07EE                     __end_of_EUSART_Initialize:	
  6086                           ;EUSART.c: 53: }
  6087                           ;EUSART.c: 54: return 0;
  6088                           ;	Return value of _EUSART_Initialize is never used
  6089                           
  6090                           
  6091                           	psect	text28
  6092  06C6                     __ptext28:	
  6093 ;; *************** function ___aldiv *****************
  6094 ;; Defined at:
  6095 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\aldiv.c"
  6096 ;; Parameters:    Size  Location     Type
  6097 ;;  divisor         4    0[COMMON] long 
  6098 ;;  dividend        4    4[COMMON] long 
  6099 ;; Auto vars:     Size  Location     Type
  6100 ;;  quotient        4    2[BANK0 ] long 
  6101 ;;  sign            1    1[BANK0 ] unsigned char 
  6102 ;;  counter         1    0[BANK0 ] unsigned char 
  6103 ;; Return value:  Size  Location     Type
  6104 ;;                  4    0[COMMON] long 
  6105 ;; Registers used:
  6106 ;;		wreg, status,2, status,0
  6107 ;; Tracked objects:
  6108 ;;		On entry : 0/0
  6109 ;;		On exit  : 0/0
  6110 ;;		Unchanged: 0/0
  6111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6112 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6113 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6114 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6115 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6116 ;;Total ram usage:       15 bytes
  6117 ;; Hardware stack levels used:    1
  6118 ;; This function calls:
  6119 ;;		Nothing
  6120 ;; This function is called by:
  6121 ;;		_EUSART_Initialize
  6122 ;; This function uses a non-reentrant model
  6123 ;;
  6124                           
  6125                           
  6126                           ;psect for function ___aldiv
  6127  06C6                     ___aldiv:	
  6128                           
  6129                           ;incstack = 0
  6130                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  6131  06C6  0020               	movlb	0	; select bank0
  6132  06C7  01A1               	clrf	___aldiv@sign
  6133  06C8  1FF3               	btfss	___aldiv@divisor+3,7
  6134  06C9  2ED7               	goto	l408
  6135  06CA  09F0               	comf	___aldiv@divisor,f
  6136  06CB  09F1               	comf	___aldiv@divisor+1,f
  6137  06CC  09F2               	comf	___aldiv@divisor+2,f
  6138  06CD  09F3               	comf	___aldiv@divisor+3,f
  6139  06CE  0AF0               	incf	___aldiv@divisor,f
  6140  06CF  1903               	skipnz
  6141  06D0  0AF1               	incf	___aldiv@divisor+1,f
  6142  06D1  1903               	skipnz
  6143  06D2  0AF2               	incf	___aldiv@divisor+2,f
  6144  06D3  1903               	skipnz
  6145  06D4  0AF3               	incf	___aldiv@divisor+3,f
  6146  06D5  01A1               	clrf	___aldiv@sign
  6147  06D6  0AA1               	incf	___aldiv@sign,f
  6148  06D7                     l408:	
  6149  06D7  1FF7               	btfss	___aldiv@dividend+3,7
  6150  06D8  2EE8               	goto	l1526
  6151  06D9  09F4               	comf	___aldiv@dividend,f
  6152  06DA  09F5               	comf	___aldiv@dividend+1,f
  6153  06DB  09F6               	comf	___aldiv@dividend+2,f
  6154  06DC  09F7               	comf	___aldiv@dividend+3,f
  6155  06DD  0AF4               	incf	___aldiv@dividend,f
  6156  06DE  1903               	skipnz
  6157  06DF  0AF5               	incf	___aldiv@dividend+1,f
  6158  06E0  1903               	skipnz
  6159  06E1  0AF6               	incf	___aldiv@dividend+2,f
  6160  06E2  1903               	skipnz
  6161  06E3  0AF7               	incf	___aldiv@dividend+3,f
  6162  06E4  3001               	movlw	1
  6163  06E5  00F8               	movwf	??___aldiv
  6164  06E6  0878               	movf	??___aldiv,w
  6165  06E7  06A1               	xorwf	___aldiv@sign,f
  6166  06E8                     l1526:	
  6167  06E8  3000               	movlw	0
  6168  06E9  00A5               	movwf	___aldiv@quotient+3
  6169  06EA  3000               	movlw	0
  6170  06EB  00A4               	movwf	___aldiv@quotient+2
  6171  06EC  3000               	movlw	0
  6172  06ED  00A3               	movwf	___aldiv@quotient+1
  6173  06EE  3000               	movlw	0
  6174  06EF  00A2               	movwf	___aldiv@quotient
  6175  06F0  0873               	movf	___aldiv@divisor+3,w
  6176  06F1  0472               	iorwf	___aldiv@divisor+2,w
  6177  06F2  0471               	iorwf	___aldiv@divisor+1,w
  6178  06F3  0470               	iorwf	___aldiv@divisor,w
  6179  06F4  1903               	skipnz
  6180  06F5  2F31               	goto	l1548
  6181  06F6  01A0               	clrf	___aldiv@counter
  6182  06F7  0AA0               	incf	___aldiv@counter,f
  6183  06F8                     l1534:	
  6184  06F8  1BF3               	btfsc	___aldiv@divisor+3,7
  6185  06F9  2F06               	goto	l1536
  6186  06FA  3001               	movlw	1
  6187  06FB                     u975:	
  6188  06FB  35F0               	lslf	___aldiv@divisor,f
  6189  06FC  0DF1               	rlf	___aldiv@divisor+1,f
  6190  06FD  0DF2               	rlf	___aldiv@divisor+2,f
  6191  06FE  0DF3               	rlf	___aldiv@divisor+3,f
  6192  06FF  0B89               	decfsz	9,f
  6193  0700  2EFB               	goto	u975
  6194  0701  3001               	movlw	1
  6195  0702  00F8               	movwf	??___aldiv
  6196  0703  0878               	movf	??___aldiv,w
  6197  0704  07A0               	addwf	___aldiv@counter,f
  6198  0705  2EF8               	goto	l1534
  6199  0706                     l1536:	
  6200  0706  3001               	movlw	1
  6201  0707                     u995:	
  6202  0707  35A2               	lslf	___aldiv@quotient,f
  6203  0708  0DA3               	rlf	___aldiv@quotient+1,f
  6204  0709  0DA4               	rlf	___aldiv@quotient+2,f
  6205  070A  0DA5               	rlf	___aldiv@quotient+3,f
  6206  070B  0B89               	decfsz	9,f
  6207  070C  2F07               	goto	u995
  6208  070D  0873               	movf	___aldiv@divisor+3,w
  6209  070E  0277               	subwf	___aldiv@dividend+3,w
  6210  070F  1D03               	skipz
  6211  0710  2F1B               	goto	u1005
  6212  0711  0872               	movf	___aldiv@divisor+2,w
  6213  0712  0276               	subwf	___aldiv@dividend+2,w
  6214  0713  1D03               	skipz
  6215  0714  2F1B               	goto	u1005
  6216  0715  0871               	movf	___aldiv@divisor+1,w
  6217  0716  0275               	subwf	___aldiv@dividend+1,w
  6218  0717  1D03               	skipz
  6219  0718  2F1B               	goto	u1005
  6220  0719  0870               	movf	___aldiv@divisor,w
  6221  071A  0274               	subwf	___aldiv@dividend,w
  6222  071B                     u1005:	
  6223  071B  1C03               	skipc
  6224  071C  2F26               	goto	l1544
  6225  071D  0870               	movf	___aldiv@divisor,w
  6226  071E  02F4               	subwf	___aldiv@dividend,f
  6227  071F  0871               	movf	___aldiv@divisor+1,w
  6228  0720  3BF5               	subwfb	___aldiv@dividend+1,f
  6229  0721  0872               	movf	___aldiv@divisor+2,w
  6230  0722  3BF6               	subwfb	___aldiv@dividend+2,f
  6231  0723  0873               	movf	___aldiv@divisor+3,w
  6232  0724  3BF7               	subwfb	___aldiv@dividend+3,f
  6233  0725  1422               	bsf	___aldiv@quotient,0
  6234  0726                     l1544:	
  6235  0726  3001               	movlw	1
  6236  0727                     u1015:	
  6237  0727  36F3               	lsrf	___aldiv@divisor+3,f
  6238  0728  0CF2               	rrf	___aldiv@divisor+2,f
  6239  0729  0CF1               	rrf	___aldiv@divisor+1,f
  6240  072A  0CF0               	rrf	___aldiv@divisor,f
  6241  072B  0B89               	decfsz	9,f
  6242  072C  2F27               	goto	u1015
  6243  072D  3001               	movlw	1
  6244  072E  02A0               	subwf	___aldiv@counter,f
  6245  072F  1D03               	btfss	3,2
  6246  0730  2F06               	goto	l1536
  6247  0731                     l1548:	
  6248  0731  0821               	movf	___aldiv@sign,w
  6249  0732  1903               	btfsc	3,2
  6250  0733  2F3F               	goto	l1552
  6251  0734  09A2               	comf	___aldiv@quotient,f
  6252  0735  09A3               	comf	___aldiv@quotient+1,f
  6253  0736  09A4               	comf	___aldiv@quotient+2,f
  6254  0737  09A5               	comf	___aldiv@quotient+3,f
  6255  0738  0AA2               	incf	___aldiv@quotient,f
  6256  0739  1903               	skipnz
  6257  073A  0AA3               	incf	___aldiv@quotient+1,f
  6258  073B  1903               	skipnz
  6259  073C  0AA4               	incf	___aldiv@quotient+2,f
  6260  073D  1903               	skipnz
  6261  073E  0AA5               	incf	___aldiv@quotient+3,f
  6262  073F                     l1552:	
  6263  073F  0825               	movf	___aldiv@quotient+3,w
  6264  0740  00F3               	movwf	?___aldiv+3
  6265  0741  0824               	movf	___aldiv@quotient+2,w
  6266  0742  00F2               	movwf	?___aldiv+2
  6267  0743  0823               	movf	___aldiv@quotient+1,w
  6268  0744  00F1               	movwf	?___aldiv+1
  6269  0745  0822               	movf	___aldiv@quotient,w
  6270  0746  00F0               	movwf	?___aldiv
  6271  0747  0008               	return
  6272  0748                     __end_of___aldiv:	
  6273  007E                     btemp	set	126	;btemp
  6274  007E                     wtemp0	set	126


Data Sizes:
    Strings     159
    Constant    808
    Data        0
    BSS         68
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     30      48
    BANK1            80      0      50
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_14(CODE[5]), STR_11(CODE[5]), STR_8(CODE[5]), STR_5(CODE[5]), 

    strncmp@s1	PTR const unsigned char  size(1) Largest target is 50
		 -> NULL(NULL[0]), buf(BANK1[50]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_14(CODE[5]), STR_11(CODE[5]), STR_8(CODE[5]), STR_5(CODE[5]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_14(CODE[5]), STR_11(CODE[5]), STR_8(CODE[5]), STR_5(CODE[5]), 

    strchr@ptr	PTR const unsigned char  size(1) Largest target is 50
		 -> NULL(NULL[0]), buf(BANK1[50]), 

    sp__strchr	PTR unsigned char  size(1) Largest target is 50
		 -> NULL(NULL[0]), buf(BANK1[50]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_14(CODE[5]), STR_11(CODE[5]), STR_8(CODE[5]), STR_5(CODE[5]), 

    strstr@s1	PTR const unsigned char  size(1) Largest target is 50
		 -> NULL(NULL[0]), buf(BANK1[50]), 

    memmove@d1	PTR void  size(1) Largest target is 9
		 -> OLED_PutChar@bytes(BANK0[9]), 

    memmove@d	PTR unsigned char  size(1) Largest target is 9
		 -> OLED_PutChar@bytes(BANK0[9]), 

    memmove@s1	PTR const void  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    memmove@s	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 2
		 -> OLED_Write_Integer@status(COMMON[2]), 

    sp__ftoa	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK0[17]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 2
		 -> OLED_Write_Integer@status(COMMON[2]), 

    OLED_Write_String@s	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK0[17]), STR_18(CODE[6]), STR_17(CODE[6]), OLED_Write_Integer@status(COMMON[2]), 
		 -> STR_16(CODE[13]), STR_15(CODE[10]), STR_13(CODE[10]), STR_12(CODE[9]), 
		 -> STR_10(CODE[10]), STR_9(CODE[9]), STR_7(CODE[9]), STR_6(CODE[8]), 
		 -> STR_3(CODE[14]), STR_1(CODE[11]), 

    sp__memmove	PTR void  size(1) Largest target is 9
		 -> OLED_PutChar@bytes(BANK0[9]), 

    OLED_PutChar@base	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    conn_func@buf	PTR unsigned char  size(1) Largest target is 50
		 -> buf(BANK1[50]), 

    conn_func@conn1	PTR unsigned char  size(1) Largest target is 50
		 -> NULL(NULL[0]), buf(BANK1[50]), 

    plan_func@buf	PTR unsigned char  size(1) Largest target is 50
		 -> buf(BANK1[50]), 

    plan_func@plant1	PTR unsigned char  size(1) Largest target is 50
		 -> NULL(NULL[0]), buf(BANK1[50]), 

    moto_func@buf	PTR unsigned char  size(1) Largest target is 50
		 -> buf(BANK1[50]), 

    moto_func@moto1	PTR unsigned char  size(1) Largest target is 50
		 -> NULL(NULL[0]), buf(BANK1[50]), 

    sp__strstr	PTR unsigned char  size(1) Largest target is 50
		 -> NULL(NULL[0]), buf(BANK1[50]), 

    bulb_func@buf	PTR unsigned char  size(1) Largest target is 50
		 -> buf(BANK1[50]), 

    bulb_func@bulb1	PTR unsigned char  size(1) Largest target is 50
		 -> NULL(NULL[0]), buf(BANK1[50]), 

    touchscreen_command@string	PTR unsigned char  size(2) Largest target is 12
		 -> STR_4(CODE[12]), STR_2(CODE[7]), 

    EUSART_Write_Text@text	PTR unsigned char  size(2) Largest target is 12
		 -> STR_4(CODE[12]), STR_2(CODE[7]), 

    EUSART_Read_Text@Output	PTR unsigned char  size(1) Largest target is 50
		 -> buf(BANK1[50]), 


Critical Paths under _main in COMMON

    _main->_OLED_Write_String
    _touchscreen_command->_EUSART_Write_Text
    _EUSART_Write_Text->_EUSART_Write
    _plan_func->_OLED_Write_String
    _plan_func->_strstr
    _moto_func->_OLED_Write_String
    _moto_func->_strstr
    _conn_func->_OLED_Write_String
    _conn_func->_strstr
    _bulb_func->_OLED_Write_String
    _bulb_func->_strstr
    _strstr->_strncmp
    _strncmp->_strlen
    _OLED_YX->_OLED_Command
    _OLED_PutChar->_memmove
    _OLED_Init->_OLED_Command
    _OLED_Command->_Send_I2C_Data
    _EUSART_Initialize->___aldiv

Critical Paths under _main in BANK0

    _main->_bulb_func
    _main->_conn_func
    _main->_moto_func
    _main->_plan_func
    _plan_func->_OLED_Clear
    _moto_func->_OLED_Clear
    _conn_func->_OLED_Clear
    _bulb_func->_OLED_Clear
    _OLED_Write_String->_OLED_PutChar
    _OLED_Clear->_OLED_PutChar
    _EUSART_Initialize->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   34670
                                             28 BANK0      2     2      0
                  _EUSART_Initialize
                   _EUSART_Read_Text
                           _I2C_Init
                         _OLED_Clear
                          _OLED_Init
                  _OLED_Write_String
                            _OLED_YX
                          _bulb_func
                          _conn_func
                           _initMain
                          _moto_func
                          _plan_func
                _touchscreen_command
 ---------------------------------------------------------------------------------
 (1) _touchscreen_command                                  4     2      2     315
                                              6 COMMON     4     2      2
                       _EUSART_Write
                  _EUSART_Write_Text
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write_Text                                    5     3      2     165
                                              1 COMMON     5     3      2
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _plan_func                                            4     4      0    6818
                                             24 BANK0      4     4      0
                         _OLED_Clear
                  _OLED_Write_String
                            _OLED_YX
                             _strstr
 ---------------------------------------------------------------------------------
 (1) _moto_func                                            4     4      0    6818
                                             24 BANK0      4     4      0
                         _OLED_Clear
                  _OLED_Write_String
                            _OLED_YX
                             _strstr
 ---------------------------------------------------------------------------------
 (1) _initMain                                             0     0      0       0
                        _internal_16
 ---------------------------------------------------------------------------------
 (2) _internal_16                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _conn_func                                            4     4      0    6818
                                             24 BANK0      4     4      0
                         _OLED_Clear
                  _OLED_Write_String
                            _OLED_YX
                             _strstr
 ---------------------------------------------------------------------------------
 (1) _bulb_func                                            4     4      0    6818
                                             24 BANK0      4     4      0
                         _OLED_Clear
                  _OLED_Write_String
                            _OLED_YX
                             _strstr
 ---------------------------------------------------------------------------------
 (2) _strstr                                               6     4      2    1075
                                             13 COMMON     1     1      0
                                              0 BANK0      5     3      2
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _strncmp                                              7     3      4     267
                                              6 COMMON     7     3      4
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (3) _strlen                                               6     4      2     143
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (3) _strchr                                               3     1      2     168
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (2) _OLED_Write_String                                    3     1      2    1991
                                             12 COMMON     2     0      2
                                             20 BANK0      1     1      0
                       _OLED_PutChar
 ---------------------------------------------------------------------------------
 (2) _OLED_Clear                                           5     5      0    2510
                                             12 COMMON     1     1      0
                                             20 BANK0      4     4      0
                       _OLED_PutChar
                            _OLED_YX
 ---------------------------------------------------------------------------------
 (2) _OLED_YX                                              5     4      1    1170
                                              5 COMMON     5     4      1
                       _OLED_Command
 ---------------------------------------------------------------------------------
 (3) _OLED_PutChar                                        20    20      0    1204
                                              0 BANK0     20    20      0
                      _Send_I2C_Data
                  _Send_I2C_StartBit
                   _Send_I2C_StopBit
                            _memmove
 ---------------------------------------------------------------------------------
 (4) _memmove                                             12     8      4     497
                                              0 COMMON    12     8      4
 ---------------------------------------------------------------------------------
 (1) _OLED_Init                                            0     0      0     521
                       _OLED_Command
 ---------------------------------------------------------------------------------
 (3) _OLED_Command                                         3     3      0     521
                                              2 COMMON     3     3      0
                      _Send_I2C_Data
                  _Send_I2C_StartBit
                   _Send_I2C_StopBit
 ---------------------------------------------------------------------------------
 (4) _Send_I2C_StopBit                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Send_I2C_StartBit                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Send_I2C_Data                                        2     0      2     499
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read_Text                                     9     7      2     170
                                              0 COMMON     7     5      2
                        _EUSART_Read
 ---------------------------------------------------------------------------------
 (2) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Initialize                                   14    10      4     721
                                              9 COMMON     2     2      0
                                              6 BANK0     12     8      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     512
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Initialize
     ___aldiv
   _EUSART_Read_Text
     _EUSART_Read
   _I2C_Init
   _OLED_Clear
     _OLED_PutChar
       _Send_I2C_Data
       _Send_I2C_StartBit
       _Send_I2C_StopBit
       _memmove
     _OLED_YX
       _OLED_Command
         _Send_I2C_Data
         _Send_I2C_StartBit
         _Send_I2C_StopBit
   _OLED_Init
     _OLED_Command
       _Send_I2C_Data
       _Send_I2C_StartBit
       _Send_I2C_StopBit
   _OLED_Write_String
     _OLED_PutChar
       _Send_I2C_Data
       _Send_I2C_StartBit
       _Send_I2C_StopBit
       _memmove
   _OLED_YX
     _OLED_Command
       _Send_I2C_Data
       _Send_I2C_StartBit
       _Send_I2C_StopBit
   _bulb_func
     _OLED_Clear
       _OLED_PutChar
         _Send_I2C_Data
         _Send_I2C_StartBit
         _Send_I2C_StopBit
         _memmove
       _OLED_YX
         _OLED_Command
           _Send_I2C_Data
           _Send_I2C_StartBit
           _Send_I2C_StopBit
     _OLED_Write_String
       _OLED_PutChar
         _Send_I2C_Data
         _Send_I2C_StartBit
         _Send_I2C_StopBit
         _memmove
     _OLED_YX
       _OLED_Command
         _Send_I2C_Data
         _Send_I2C_StartBit
         _Send_I2C_StopBit
     _strstr
       _strchr
       _strlen
       _strncmp
         _strlen (ARG)
   _conn_func
     _OLED_Clear
       _OLED_PutChar
         _Send_I2C_Data
         _Send_I2C_StartBit
         _Send_I2C_StopBit
         _memmove
       _OLED_YX
         _OLED_Command
           _Send_I2C_Data
           _Send_I2C_StartBit
           _Send_I2C_StopBit
     _OLED_Write_String
       _OLED_PutChar
         _Send_I2C_Data
         _Send_I2C_StartBit
         _Send_I2C_StopBit
         _memmove
     _OLED_YX
       _OLED_Command
         _Send_I2C_Data
         _Send_I2C_StartBit
         _Send_I2C_StopBit
     _strstr
       _strchr
       _strlen
       _strncmp
         _strlen (ARG)
   _initMain
     _internal_16
   _moto_func
     _OLED_Clear
       _OLED_PutChar
         _Send_I2C_Data
         _Send_I2C_StartBit
         _Send_I2C_StopBit
         _memmove
       _OLED_YX
         _OLED_Command
           _Send_I2C_Data
           _Send_I2C_StartBit
           _Send_I2C_StopBit
     _OLED_Write_String
       _OLED_PutChar
         _Send_I2C_Data
         _Send_I2C_StartBit
         _Send_I2C_StopBit
         _memmove
     _OLED_YX
       _OLED_Command
         _Send_I2C_Data
         _Send_I2C_StartBit
         _Send_I2C_StopBit
     _strstr
       _strchr
       _strlen
       _strncmp
         _strlen (ARG)
   _plan_func
     _OLED_Clear
       _OLED_PutChar
         _Send_I2C_Data
         _Send_I2C_StartBit
         _Send_I2C_StopBit
         _memmove
       _OLED_YX
         _OLED_Command
           _Send_I2C_Data
           _Send_I2C_StartBit
           _Send_I2C_StopBit
     _OLED_Write_String
       _OLED_PutChar
         _Send_I2C_Data
         _Send_I2C_StartBit
         _Send_I2C_StopBit
         _memmove
     _OLED_YX
       _OLED_Command
         _Send_I2C_Data
         _Send_I2C_StartBit
         _Send_I2C_StopBit
     _strstr
       _strchr
       _strlen
       _strncmp
         _strlen (ARG)
   _touchscreen_command
     _EUSART_Write
     _EUSART_Write_Text
       _EUSART_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1E      30       5       60.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      32       7       62.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      70      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      70      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Sat Apr 15 18:44:16 2017

                 __CFG_CP$OFF 0000                            l74 01C5                            l67 01E0  
                          _on 003E            OLED_Write_String@s 007C                           l209 01D1  
                         l233 01C0                           l227 01B8                           l408 06D7  
                         l762 01FB                           u715 02BC                           u725 02D0  
                         u655 057A                           u665 058C                           u755 0622  
                         u765 0641                           u975 06FB                           u995 0707  
                         _buf 00A0                  __CFG_BORV$LO 0000                           wreg 0009  
                __CFG_IESO$ON 0000              OLED_Command@temp 0074                  ?_EUSART_Read 0070  
                __CFG_LVP$OFF 0000                          l1400 0624                          l1412 0279  
                        l1500 0345                          l1406 0643                          l1414 0285  
                        l1360 05B0                          l1424 039C                          l1432 0380  
                        l1512 037D                          l1434 03BC                          l1506 035F  
                        l1356 0596                          l1380 05D6                          l1444 0204  
                        l1428 03B3                          l1508 0374                          l1534 06F8  
                        l1526 06E8                          l1382 05DA                          l1702 0494  
                        l1552 073F                          l1544 0726                          l1536 0706  
                        l1456 01E8                          l1480 02EE                          l1800 06AD  
                        l1466 0223                          l1548 0731                          l1564 07DB  
                        l1732 04E5                          l1488 0306                          l1496 020D  
                        l1672 03F2                          l1762 0443                          l1588 023E  
                        STR_1 0B5A                          STR_2 0BA6                          STR_3 0B28  
                        STR_4 0B43                          STR_5 0BB3                          STR_6 0B9E  
                        STR_7 0B83                          STR_8 0BC2                          STR_9 0B8C  
                        _BRGH 0CF2               __end_of_OLED_YX 02DB                          _CREN 0CEC  
                        u1005 071B                          u1015 0727                          u1105 0244  
                        u1045 0752                          u1055 0769                          u1207 0665  
                 ?_OLED_Clear 0070                          u1217 067E                          u1075 079E  
                        u1307 0404                          u1227 02AB                          u1085 07B5  
                        u1317 01F5                          u1237 04D8                          u1247 04F7  
                        u1257 0487                          u1267 04A6                          u1277 0436  
                        u1197 0652                          u1287 0455                          u1297 03E5  
                        _SCS0 04C8                          _SCS1 04C9                          _SPEN 0CEF  
                        _TXEN 0CF5                          _SYNC 0CF4                  __CFG_WRT$OFF 0000  
                        _main 0646              __end_of_I2C_Init 01FA                          fsr0h 0005  
                        fsr1h 0007                          indf0 0000                          fsr0l 0004  
                        indf1 0001                          fsr1l 0006                          btemp 007E  
                        start 0002            __size_of_OLED_Init 0064                 ?_EUSART_Write 0070  
             __end_of___aldiv 0748                         ?_main 0070                         STR_10 0B6F  
                       STR_11 0BB8                         STR_12 0B95                         STR_13 0B79  
                       STR_14 0BBD                         STR_15 0B65                         STR_16 0B36  
                       STR_17 0BAD                 __CFG_WDTE$OFF 0000                         STR_19 0B4F  
                       _IRCF0 04CB                         _IRCF1 04CC                         _IRCF2 04CD  
                       _IRCF3 04CE                         _SPBRG 019B   __end_of_touchscreen_command 02B3  
              __CFG_FCMEN$OFF 0000                  conn_func@buf 003B                  bulb_func@buf 003B  
             __end_of_dpowers 0828               __end_of_memmove 05CC                __CFG_BOREN$OFF 0000  
                       status 0003                         wtemp0 007E    __size_of_Send_I2C_StartBit 0008  
             __end_of_strncmp 03BF                  ?_internal_16 0070                __CFG_MCLRE$OFF 0000  
             __initialization 07EE                  __end_of_main 06C6                ??_EUSART_Write 0070  
              __CFG_LPBOR$OFF 0000              __end_of_OledFont 0B28           __size_of_OLED_Clear 0030  
                      ??_main 003C                __CFG_PLLEN$OFF 0000                     ??_OLED_YX 0076  
              __CFG_ZCDDIS$ON 0000             __end_of_OLED_Init 0567                        _RC1REG 0199  
               ?_OLED_Command 0070                        _TX1REG 019A                        _SPLLEN 04CF  
                      _SSPADD 0212                        _TRISC6 0476                        _TRISC7 0477  
                      _SSPBUF 0211                __CFG_PWRTE$OFF 0000                 ?_OLED_PutChar 0070  
                   ??___aldiv 0078        __size_of_Send_I2C_Data 0009                __CFG_STVREN$ON 0000  
            __end_of_initMain 0343                        _strchr 01FA                        _strlen 0275  
                      _strstr 0343                     ?_I2C_Init 0070                     ??_memmove 0074  
           ?_EUSART_Read_Text 0070         Send_I2C_Data@databyte 0070            ??_EUSART_Read_Text 0072  
                   ??_strncmp 007A                ??_OLED_Command 0072          __size_of_EUSART_Read 000C  
     __end_of__initialization 07FD                ??_OLED_PutChar 0020     __size_of_Send_I2C_StopBit 0008  
              __pcstackCOMMON 0070               plan_func@plant1 003A                    ??_I2C_Init 0070  
          __size_of_bulb_func 0051            __size_of_conn_func 0051                 _Send_I2C_Data 01CC  
                ??_OLED_Clear 007C                    __pbssBANK0 003E                    __pbssBANK1 00A0  
        __end_of_EUSART_Write 01CC        EUSART_Read_Text@Output 0074        EUSART_Read_Text@length 0070  
                  __pmaintext 0646          __size_of_internal_16 0009            __size_of_plan_func 0051  
             __CFG_PPS1WAY$ON 0000            __end_of_OLED_Clear 030B            __size_of_moto_func 0051  
                     ?_strchr 0070                       ?_strlen 0070                       ?_strstr 0020  
                     _OLED_YX 02B3                ?_Send_I2C_Data 0070                       _PPSLOCK 0E0F  
                   ?_initMain 0070                       ___aldiv 06C6             __end_of_bulb_func 0410  
           __end_of_conn_func 0461                conn_func@conn1 003A                bulb_func@bulb1 003A  
        __end_of_OLED_Command 0275                       __ptext1 0293                       __ptext2 0221  
                     __ptext3 01C4                       __ptext4 04B2                       __ptext5 0461  
                     __ptext6 030B                       __ptext7 01D5                       __ptext8 0410  
                     __ptext9 03BF               __size_of_strchr 0013               __size_of_strlen 001E  
             __size_of_strstr 003C                       _dpowers 0800                       _memmove 0567  
            ___aldiv@dividend 0074          __end_of_OLED_PutChar 0646                       clrloop0 01AF  
           __end_of_plan_func 0503                       _strncmp 037F          end_of_initialization 07FD  
                     ftoa@buf 003F  __size_of_touchscreen_command 0020                    ??_initMain 0070  
           __end_of_moto_func 04B2                     _OLED_Init 0503             _EUSART_Initialize 0748  
            OLED_PutChar@base 002F              _Send_I2C_StopBit 01BC            ?_EUSART_Initialize 0026  
            ___aldiv@quotient 0022                  __pstringtext 0800            EUSART_Initialize@x 0079  
                     strlen@s 0070           ??_EUSART_Initialize 002A               ??_Send_I2C_Data 0072  
            __CFG_FOSC$INTOSC 0000                     _TRISBbits 008D                     _TRISCbits 008E  
       __size_of_EUSART_Write 0008             __size_of_I2C_Init 0010                     _RXPPSbits 0E24  
   __end_of_EUSART_Initialize 07EE                    ?_OLED_Init 0070     __size_of_EUSART_Read_Text 001C  
                _EUSART_Write 01C4                __end_of_strchr 020D                moto_func@moto1 003A  
              __end_of_strlen 0293                __end_of_strstr 037F           start_initialization 07EE  
               ??_EUSART_Read 0070             _EUSART_Write_Text 0221             _OLED_Write_String 020D  
          ?_EUSART_Write_Text 0071            ?_OLED_Write_String 007C         __size_of_OLED_Command 001E  
                  OLED_YX@Row 0079           ??_EUSART_Write_Text 0073         __size_of_OLED_PutChar 007A  
         ??_OLED_Write_String 0034                      ??_strchr 0072                      ??_strlen 0072  
                    ??_strstr 0022                     ___latbits 0002                      ?_OLED_YX 0075  
               __pcstackBANK0 0020     __end_of_EUSART_Write_Text 023B    __size_of_EUSART_Initialize 00A6  
                _OLED_Command 0257     __end_of_OLED_Write_String 0221         EUSART_Read_Text@i_111 0075  
         __end_of_EUSART_Read 01EA                 ??_internal_16 0070                   ??_OLED_Init 0075  
           __size_of_initMain 0038                  plan_func@buf 003B                  _OLED_PutChar 05CC  
                    ?___aldiv 0070           _touchscreen_command 0293     EUSART_Initialize@baudrate 0026  
                   _conn_func 0410                     _bulb_func 03BF                      _I2C_Init 01EA  
                    ?_memmove 0070      __end_of_Send_I2C_StopBit 01C4                      ?_strncmp 0076  
        ?_touchscreen_command 0076               ___aldiv@divisor 0070               ___aldiv@counter 0020  
                   _plan_func 04B2                     clear_ram0 01AE              _EUSART_Read_Text 023B  
                    _PIR1bits 0011                     _moto_func 0461           __end_of_internal_16 01DE  
                  ?_conn_func 0070                    ?_bulb_func 0070              __size_of_OLED_YX 0028  
                 _EUSART_Read 01DE         ??_touchscreen_command 0078    __size_of_EUSART_Write_Text 001A  
  __size_of_OLED_Write_String 0014                    ?_plan_func 0070                      _OledFont 0828  
                  ?_moto_func 0070                     memmove@d1 0078                     memmove@s1 0070  
            __size_of___aldiv 0082                    _ANSELBbits 018D                    _ANSELCbits 018E  
            __size_of_memmove 0065         __end_of_Send_I2C_Data 01D5                      __ptext10 0343  
                    __ptext11 037F                      __ptext20 0257                      __ptext12 0275  
                    __ptext21 01BC                      __ptext13 01FA                      __ptext22 01B4  
                    __ptext14 020D                      __ptext23 01CC                      __ptext15 02DB  
                    __ptext24 01EA                      __ptext16 02B3                      __ptext25 023B  
                    __ptext17 05CC                      __ptext26 01DE                      __ptext18 0567  
                    __ptext27 0748                      __ptext19 0503                      __ptext28 06C6  
            __size_of_strncmp 0040                      _initMain 030B                 __size_of_main 0080  
               _SSPDATPPSbits 0E21                 OLED_Clear@col 0036                    strncmp@len 0078  
                 _internal_16 01D5                 OLED_Clear@row 0034                 OLED_YX@Column 0075  
                  _RB2PPSbits 0E9A                OLED_PutChar@ch 0033                    _RC1STAbits 019D  
                  _RC4PPSbits 0EA4                 _SSPCLKPPSbits 0E20                    _RC5PPSbits 0EA5  
                 ??_conn_func 0038                   ??_bulb_func 0038                  moto_func@buf 003B  
                    memmove@d 007B                      memmove@n 0072                      memmove@s 0079  
                  _OLED_Clear 02DB                     strchr@chr 0070                     strchr@ptr 0072  
                 ??_plan_func 0038             __CFG_CLKOUTEN$OFF 0000                   _PPSLOCKbits 0E0F  
                   strncmp@s1 007C                     strncmp@s2 0076             _Send_I2C_StartBit 01B4  
           OLED_PutChar@bytes 0026                 OLED_PutChar@i 0031                   ??_moto_func 0038  
          ?_Send_I2C_StartBit 0070           ??_Send_I2C_StartBit 0070      __end_of_EUSART_Read_Text 0257  
                    strlen@cp 0074         EUSART_Write_Text@text 0071                  ___aldiv@sign 0021  
                 _SSPCON2bits 0216     touchscreen_command@string 0076                      strstr@s1 007D  
                    strstr@s2 0020             ?_Send_I2C_StopBit 0070            EUSART_Write@txData 0070  
          ??_Send_I2C_StopBit 0070     __end_of_Send_I2C_StartBit 01BC                    _SSPCONbits 0215  
          EUSART_Write_Text@i 0074  
