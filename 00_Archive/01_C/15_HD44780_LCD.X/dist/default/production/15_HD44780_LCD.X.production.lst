

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Apr 20 22:08:48 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1717
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	dabs	1,0x7E,2
    45  0000                     
    46                           ; Version 2.05
    47                           ; Generated 20/12/2018 GMT
    48                           ; 
    49                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC16F1717 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     	;# 
    81  0001                     	;# 
    82  0002                     	;# 
    83  0003                     	;# 
    84  0004                     	;# 
    85  0005                     	;# 
    86  0006                     	;# 
    87  0007                     	;# 
    88  0008                     	;# 
    89  0009                     	;# 
    90  000A                     	;# 
    91  000B                     	;# 
    92  000C                     	;# 
    93  000D                     	;# 
    94  000E                     	;# 
    95  000F                     	;# 
    96  0010                     	;# 
    97  0011                     	;# 
    98  0012                     	;# 
    99  0013                     	;# 
   100  0015                     	;# 
   101  0016                     	;# 
   102  0016                     	;# 
   103  0017                     	;# 
   104  0018                     	;# 
   105  0019                     	;# 
   106  001A                     	;# 
   107  001B                     	;# 
   108  001C                     	;# 
   109  008C                     	;# 
   110  008D                     	;# 
   111  008E                     	;# 
   112  008F                     	;# 
   113  0090                     	;# 
   114  0091                     	;# 
   115  0092                     	;# 
   116  0093                     	;# 
   117  0095                     	;# 
   118  0096                     	;# 
   119  0097                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009A                     	;# 
   123  009B                     	;# 
   124  009B                     	;# 
   125  009C                     	;# 
   126  009D                     	;# 
   127  009E                     	;# 
   128  009F                     	;# 
   129  010C                     	;# 
   130  010D                     	;# 
   131  010E                     	;# 
   132  010F                     	;# 
   133  0110                     	;# 
   134  0111                     	;# 
   135  0112                     	;# 
   136  0113                     	;# 
   137  0114                     	;# 
   138  0115                     	;# 
   139  0116                     	;# 
   140  0117                     	;# 
   141  0118                     	;# 
   142  0119                     	;# 
   143  011A                     	;# 
   144  011B                     	;# 
   145  011B                     	;# 
   146  011C                     	;# 
   147  018C                     	;# 
   148  018D                     	;# 
   149  018E                     	;# 
   150  018F                     	;# 
   151  0190                     	;# 
   152  0191                     	;# 
   153  0191                     	;# 
   154  0192                     	;# 
   155  0193                     	;# 
   156  0193                     	;# 
   157  0194                     	;# 
   158  0195                     	;# 
   159  0196                     	;# 
   160  0197                     	;# 
   161  0199                     	;# 
   162  0199                     	;# 
   163  0199                     	;# 
   164  019A                     	;# 
   165  019A                     	;# 
   166  019A                     	;# 
   167  019B                     	;# 
   168  019B                     	;# 
   169  019B                     	;# 
   170  019B                     	;# 
   171  019B                     	;# 
   172  019C                     	;# 
   173  019C                     	;# 
   174  019C                     	;# 
   175  019D                     	;# 
   176  019D                     	;# 
   177  019D                     	;# 
   178  019E                     	;# 
   179  019E                     	;# 
   180  019E                     	;# 
   181  019F                     	;# 
   182  019F                     	;# 
   183  019F                     	;# 
   184  019F                     	;# 
   185  019F                     	;# 
   186  020C                     	;# 
   187  020D                     	;# 
   188  020E                     	;# 
   189  020F                     	;# 
   190  0210                     	;# 
   191  0211                     	;# 
   192  0211                     	;# 
   193  0212                     	;# 
   194  0212                     	;# 
   195  0213                     	;# 
   196  0213                     	;# 
   197  0214                     	;# 
   198  0214                     	;# 
   199  0215                     	;# 
   200  0215                     	;# 
   201  0215                     	;# 
   202  0215                     	;# 
   203  0216                     	;# 
   204  0216                     	;# 
   205  0217                     	;# 
   206  0217                     	;# 
   207  028C                     	;# 
   208  028D                     	;# 
   209  028E                     	;# 
   210  028F                     	;# 
   211  0290                     	;# 
   212  0291                     	;# 
   213  0291                     	;# 
   214  0292                     	;# 
   215  0293                     	;# 
   216  0293                     	;# 
   217  0298                     	;# 
   218  0298                     	;# 
   219  0299                     	;# 
   220  029A                     	;# 
   221  029A                     	;# 
   222  029E                     	;# 
   223  030C                     	;# 
   224  030D                     	;# 
   225  030E                     	;# 
   226  030F                     	;# 
   227  0310                     	;# 
   228  038C                     	;# 
   229  038D                     	;# 
   230  038E                     	;# 
   231  038F                     	;# 
   232  0390                     	;# 
   233  0391                     	;# 
   234  0392                     	;# 
   235  0393                     	;# 
   236  0394                     	;# 
   237  0395                     	;# 
   238  0396                     	;# 
   239  0397                     	;# 
   240  0398                     	;# 
   241  0399                     	;# 
   242  039D                     	;# 
   243  039E                     	;# 
   244  039F                     	;# 
   245  0415                     	;# 
   246  0416                     	;# 
   247  0417                     	;# 
   248  041C                     	;# 
   249  041D                     	;# 
   250  041E                     	;# 
   251  0498                     	;# 
   252  0498                     	;# 
   253  0499                     	;# 
   254  049A                     	;# 
   255  049B                     	;# 
   256  049B                     	;# 
   257  049C                     	;# 
   258  049D                     	;# 
   259  049E                     	;# 
   260  049F                     	;# 
   261  0511                     	;# 
   262  0515                     	;# 
   263  0617                     	;# 
   264  0618                     	;# 
   265  0619                     	;# 
   266  0619                     	;# 
   267  061A                     	;# 
   268  061B                     	;# 
   269  061C                     	;# 
   270  061C                     	;# 
   271  0691                     	;# 
   272  0692                     	;# 
   273  0693                     	;# 
   274  0694                     	;# 
   275  0695                     	;# 
   276  0696                     	;# 
   277  0697                     	;# 
   278  0698                     	;# 
   279  0699                     	;# 
   280  069A                     	;# 
   281  069B                     	;# 
   282  069C                     	;# 
   283  069D                     	;# 
   284  069E                     	;# 
   285  069F                     	;# 
   286  0E0F                     	;# 
   287  0E10                     	;# 
   288  0E11                     	;# 
   289  0E12                     	;# 
   290  0E13                     	;# 
   291  0E14                     	;# 
   292  0E15                     	;# 
   293  0E17                     	;# 
   294  0E20                     	;# 
   295  0E21                     	;# 
   296  0E22                     	;# 
   297  0E24                     	;# 
   298  0E25                     	;# 
   299  0E28                     	;# 
   300  0E29                     	;# 
   301  0E2A                     	;# 
   302  0E2B                     	;# 
   303  0E90                     	;# 
   304  0E91                     	;# 
   305  0E92                     	;# 
   306  0E93                     	;# 
   307  0E94                     	;# 
   308  0E95                     	;# 
   309  0E96                     	;# 
   310  0E97                     	;# 
   311  0E98                     	;# 
   312  0E99                     	;# 
   313  0E9A                     	;# 
   314  0E9B                     	;# 
   315  0E9C                     	;# 
   316  0E9D                     	;# 
   317  0E9E                     	;# 
   318  0E9F                     	;# 
   319  0EA0                     	;# 
   320  0EA1                     	;# 
   321  0EA2                     	;# 
   322  0EA3                     	;# 
   323  0EA4                     	;# 
   324  0EA5                     	;# 
   325  0EA6                     	;# 
   326  0EA7                     	;# 
   327  0EA8                     	;# 
   328  0EA9                     	;# 
   329  0EAA                     	;# 
   330  0EAB                     	;# 
   331  0EAC                     	;# 
   332  0EAD                     	;# 
   333  0EAE                     	;# 
   334  0EAF                     	;# 
   335  0EB0                     	;# 
   336  0EB1                     	;# 
   337  0EB2                     	;# 
   338  0F0F                     	;# 
   339  0F10                     	;# 
   340  0F11                     	;# 
   341  0F12                     	;# 
   342  0F13                     	;# 
   343  0F14                     	;# 
   344  0F15                     	;# 
   345  0F16                     	;# 
   346  0F17                     	;# 
   347  0F18                     	;# 
   348  0F19                     	;# 
   349  0F1A                     	;# 
   350  0F1B                     	;# 
   351  0F1C                     	;# 
   352  0F1D                     	;# 
   353  0F1E                     	;# 
   354  0F1F                     	;# 
   355  0F20                     	;# 
   356  0F21                     	;# 
   357  0F22                     	;# 
   358  0F23                     	;# 
   359  0F24                     	;# 
   360  0F25                     	;# 
   361  0F26                     	;# 
   362  0F27                     	;# 
   363  0F28                     	;# 
   364  0F29                     	;# 
   365  0F2A                     	;# 
   366  0F2B                     	;# 
   367  0F2C                     	;# 
   368  0F2D                     	;# 
   369  0F2E                     	;# 
   370  0F2F                     	;# 
   371  0F30                     	;# 
   372  0F31                     	;# 
   373  0F32                     	;# 
   374  0F33                     	;# 
   375  0F34                     	;# 
   376  0F35                     	;# 
   377  0F36                     	;# 
   378  0F37                     	;# 
   379  0FE4                     	;# 
   380  0FE5                     	;# 
   381  0FE6                     	;# 
   382  0FE7                     	;# 
   383  0FE8                     	;# 
   384  0FE9                     	;# 
   385  0FEA                     	;# 
   386  0FEB                     	;# 
   387  0FED                     	;# 
   388  0FEE                     	;# 
   389  0FEF                     	;# 
   390  0000                     	;# 
   391  0001                     	;# 
   392  0002                     	;# 
   393  0003                     	;# 
   394  0004                     	;# 
   395  0005                     	;# 
   396  0006                     	;# 
   397  0007                     	;# 
   398  0008                     	;# 
   399  0009                     	;# 
   400  000A                     	;# 
   401  000B                     	;# 
   402  000C                     	;# 
   403  000D                     	;# 
   404  000E                     	;# 
   405  000F                     	;# 
   406  0010                     	;# 
   407  0011                     	;# 
   408  0012                     	;# 
   409  0013                     	;# 
   410  0015                     	;# 
   411  0016                     	;# 
   412  0016                     	;# 
   413  0017                     	;# 
   414  0018                     	;# 
   415  0019                     	;# 
   416  001A                     	;# 
   417  001B                     	;# 
   418  001C                     	;# 
   419  008C                     	;# 
   420  008D                     	;# 
   421  008E                     	;# 
   422  008F                     	;# 
   423  0090                     	;# 
   424  0091                     	;# 
   425  0092                     	;# 
   426  0093                     	;# 
   427  0095                     	;# 
   428  0096                     	;# 
   429  0097                     	;# 
   430  0098                     	;# 
   431  0099                     	;# 
   432  009A                     	;# 
   433  009B                     	;# 
   434  009B                     	;# 
   435  009C                     	;# 
   436  009D                     	;# 
   437  009E                     	;# 
   438  009F                     	;# 
   439  010C                     	;# 
   440  010D                     	;# 
   441  010E                     	;# 
   442  010F                     	;# 
   443  0110                     	;# 
   444  0111                     	;# 
   445  0112                     	;# 
   446  0113                     	;# 
   447  0114                     	;# 
   448  0115                     	;# 
   449  0116                     	;# 
   450  0117                     	;# 
   451  0118                     	;# 
   452  0119                     	;# 
   453  011A                     	;# 
   454  011B                     	;# 
   455  011B                     	;# 
   456  011C                     	;# 
   457  018C                     	;# 
   458  018D                     	;# 
   459  018E                     	;# 
   460  018F                     	;# 
   461  0190                     	;# 
   462  0191                     	;# 
   463  0191                     	;# 
   464  0192                     	;# 
   465  0193                     	;# 
   466  0193                     	;# 
   467  0194                     	;# 
   468  0195                     	;# 
   469  0196                     	;# 
   470  0197                     	;# 
   471  0199                     	;# 
   472  0199                     	;# 
   473  0199                     	;# 
   474  019A                     	;# 
   475  019A                     	;# 
   476  019A                     	;# 
   477  019B                     	;# 
   478  019B                     	;# 
   479  019B                     	;# 
   480  019B                     	;# 
   481  019B                     	;# 
   482  019C                     	;# 
   483  019C                     	;# 
   484  019C                     	;# 
   485  019D                     	;# 
   486  019D                     	;# 
   487  019D                     	;# 
   488  019E                     	;# 
   489  019E                     	;# 
   490  019E                     	;# 
   491  019F                     	;# 
   492  019F                     	;# 
   493  019F                     	;# 
   494  019F                     	;# 
   495  019F                     	;# 
   496  020C                     	;# 
   497  020D                     	;# 
   498  020E                     	;# 
   499  020F                     	;# 
   500  0210                     	;# 
   501  0211                     	;# 
   502  0211                     	;# 
   503  0212                     	;# 
   504  0212                     	;# 
   505  0213                     	;# 
   506  0213                     	;# 
   507  0214                     	;# 
   508  0214                     	;# 
   509  0215                     	;# 
   510  0215                     	;# 
   511  0215                     	;# 
   512  0215                     	;# 
   513  0216                     	;# 
   514  0216                     	;# 
   515  0217                     	;# 
   516  0217                     	;# 
   517  028C                     	;# 
   518  028D                     	;# 
   519  028E                     	;# 
   520  028F                     	;# 
   521  0290                     	;# 
   522  0291                     	;# 
   523  0291                     	;# 
   524  0292                     	;# 
   525  0293                     	;# 
   526  0293                     	;# 
   527  0298                     	;# 
   528  0298                     	;# 
   529  0299                     	;# 
   530  029A                     	;# 
   531  029A                     	;# 
   532  029E                     	;# 
   533  030C                     	;# 
   534  030D                     	;# 
   535  030E                     	;# 
   536  030F                     	;# 
   537  0310                     	;# 
   538  038C                     	;# 
   539  038D                     	;# 
   540  038E                     	;# 
   541  038F                     	;# 
   542  0390                     	;# 
   543  0391                     	;# 
   544  0392                     	;# 
   545  0393                     	;# 
   546  0394                     	;# 
   547  0395                     	;# 
   548  0396                     	;# 
   549  0397                     	;# 
   550  0398                     	;# 
   551  0399                     	;# 
   552  039D                     	;# 
   553  039E                     	;# 
   554  039F                     	;# 
   555  0415                     	;# 
   556  0416                     	;# 
   557  0417                     	;# 
   558  041C                     	;# 
   559  041D                     	;# 
   560  041E                     	;# 
   561  0498                     	;# 
   562  0498                     	;# 
   563  0499                     	;# 
   564  049A                     	;# 
   565  049B                     	;# 
   566  049B                     	;# 
   567  049C                     	;# 
   568  049D                     	;# 
   569  049E                     	;# 
   570  049F                     	;# 
   571  0511                     	;# 
   572  0515                     	;# 
   573  0617                     	;# 
   574  0618                     	;# 
   575  0619                     	;# 
   576  0619                     	;# 
   577  061A                     	;# 
   578  061B                     	;# 
   579  061C                     	;# 
   580  061C                     	;# 
   581  0691                     	;# 
   582  0692                     	;# 
   583  0693                     	;# 
   584  0694                     	;# 
   585  0695                     	;# 
   586  0696                     	;# 
   587  0697                     	;# 
   588  0698                     	;# 
   589  0699                     	;# 
   590  069A                     	;# 
   591  069B                     	;# 
   592  069C                     	;# 
   593  069D                     	;# 
   594  069E                     	;# 
   595  069F                     	;# 
   596  0E0F                     	;# 
   597  0E10                     	;# 
   598  0E11                     	;# 
   599  0E12                     	;# 
   600  0E13                     	;# 
   601  0E14                     	;# 
   602  0E15                     	;# 
   603  0E17                     	;# 
   604  0E20                     	;# 
   605  0E21                     	;# 
   606  0E22                     	;# 
   607  0E24                     	;# 
   608  0E25                     	;# 
   609  0E28                     	;# 
   610  0E29                     	;# 
   611  0E2A                     	;# 
   612  0E2B                     	;# 
   613  0E90                     	;# 
   614  0E91                     	;# 
   615  0E92                     	;# 
   616  0E93                     	;# 
   617  0E94                     	;# 
   618  0E95                     	;# 
   619  0E96                     	;# 
   620  0E97                     	;# 
   621  0E98                     	;# 
   622  0E99                     	;# 
   623  0E9A                     	;# 
   624  0E9B                     	;# 
   625  0E9C                     	;# 
   626  0E9D                     	;# 
   627  0E9E                     	;# 
   628  0E9F                     	;# 
   629  0EA0                     	;# 
   630  0EA1                     	;# 
   631  0EA2                     	;# 
   632  0EA3                     	;# 
   633  0EA4                     	;# 
   634  0EA5                     	;# 
   635  0EA6                     	;# 
   636  0EA7                     	;# 
   637  0EA8                     	;# 
   638  0EA9                     	;# 
   639  0EAA                     	;# 
   640  0EAB                     	;# 
   641  0EAC                     	;# 
   642  0EAD                     	;# 
   643  0EAE                     	;# 
   644  0EAF                     	;# 
   645  0EB0                     	;# 
   646  0EB1                     	;# 
   647  0EB2                     	;# 
   648  0F0F                     	;# 
   649  0F10                     	;# 
   650  0F11                     	;# 
   651  0F12                     	;# 
   652  0F13                     	;# 
   653  0F14                     	;# 
   654  0F15                     	;# 
   655  0F16                     	;# 
   656  0F17                     	;# 
   657  0F18                     	;# 
   658  0F19                     	;# 
   659  0F1A                     	;# 
   660  0F1B                     	;# 
   661  0F1C                     	;# 
   662  0F1D                     	;# 
   663  0F1E                     	;# 
   664  0F1F                     	;# 
   665  0F20                     	;# 
   666  0F21                     	;# 
   667  0F22                     	;# 
   668  0F23                     	;# 
   669  0F24                     	;# 
   670  0F25                     	;# 
   671  0F26                     	;# 
   672  0F27                     	;# 
   673  0F28                     	;# 
   674  0F29                     	;# 
   675  0F2A                     	;# 
   676  0F2B                     	;# 
   677  0F2C                     	;# 
   678  0F2D                     	;# 
   679  0F2E                     	;# 
   680  0F2F                     	;# 
   681  0F30                     	;# 
   682  0F31                     	;# 
   683  0F32                     	;# 
   684  0F33                     	;# 
   685  0F34                     	;# 
   686  0F35                     	;# 
   687  0F36                     	;# 
   688  0F37                     	;# 
   689  0FE4                     	;# 
   690  0FE5                     	;# 
   691  0FE6                     	;# 
   692  0FE7                     	;# 
   693  0FE8                     	;# 
   694  0FE9                     	;# 
   695  0FEA                     	;# 
   696  0FEB                     	;# 
   697  0FED                     	;# 
   698  0FEE                     	;# 
   699  0FEF                     	;# 
   700  0000                     	;# 
   701  0001                     	;# 
   702  0002                     	;# 
   703  0003                     	;# 
   704  0004                     	;# 
   705  0005                     	;# 
   706  0006                     	;# 
   707  0007                     	;# 
   708  0008                     	;# 
   709  0009                     	;# 
   710  000A                     	;# 
   711  000B                     	;# 
   712  000C                     	;# 
   713  000D                     	;# 
   714  000E                     	;# 
   715  000F                     	;# 
   716  0010                     	;# 
   717  0011                     	;# 
   718  0012                     	;# 
   719  0013                     	;# 
   720  0015                     	;# 
   721  0016                     	;# 
   722  0016                     	;# 
   723  0017                     	;# 
   724  0018                     	;# 
   725  0019                     	;# 
   726  001A                     	;# 
   727  001B                     	;# 
   728  001C                     	;# 
   729  008C                     	;# 
   730  008D                     	;# 
   731  008E                     	;# 
   732  008F                     	;# 
   733  0090                     	;# 
   734  0091                     	;# 
   735  0092                     	;# 
   736  0093                     	;# 
   737  0095                     	;# 
   738  0096                     	;# 
   739  0097                     	;# 
   740  0098                     	;# 
   741  0099                     	;# 
   742  009A                     	;# 
   743  009B                     	;# 
   744  009B                     	;# 
   745  009C                     	;# 
   746  009D                     	;# 
   747  009E                     	;# 
   748  009F                     	;# 
   749  010C                     	;# 
   750  010D                     	;# 
   751  010E                     	;# 
   752  010F                     	;# 
   753  0110                     	;# 
   754  0111                     	;# 
   755  0112                     	;# 
   756  0113                     	;# 
   757  0114                     	;# 
   758  0115                     	;# 
   759  0116                     	;# 
   760  0117                     	;# 
   761  0118                     	;# 
   762  0119                     	;# 
   763  011A                     	;# 
   764  011B                     	;# 
   765  011B                     	;# 
   766  011C                     	;# 
   767  018C                     	;# 
   768  018D                     	;# 
   769  018E                     	;# 
   770  018F                     	;# 
   771  0190                     	;# 
   772  0191                     	;# 
   773  0191                     	;# 
   774  0192                     	;# 
   775  0193                     	;# 
   776  0193                     	;# 
   777  0194                     	;# 
   778  0195                     	;# 
   779  0196                     	;# 
   780  0197                     	;# 
   781  0199                     	;# 
   782  0199                     	;# 
   783  0199                     	;# 
   784  019A                     	;# 
   785  019A                     	;# 
   786  019A                     	;# 
   787  019B                     	;# 
   788  019B                     	;# 
   789  019B                     	;# 
   790  019B                     	;# 
   791  019B                     	;# 
   792  019C                     	;# 
   793  019C                     	;# 
   794  019C                     	;# 
   795  019D                     	;# 
   796  019D                     	;# 
   797  019D                     	;# 
   798  019E                     	;# 
   799  019E                     	;# 
   800  019E                     	;# 
   801  019F                     	;# 
   802  019F                     	;# 
   803  019F                     	;# 
   804  019F                     	;# 
   805  019F                     	;# 
   806  020C                     	;# 
   807  020D                     	;# 
   808  020E                     	;# 
   809  020F                     	;# 
   810  0210                     	;# 
   811  0211                     	;# 
   812  0211                     	;# 
   813  0212                     	;# 
   814  0212                     	;# 
   815  0213                     	;# 
   816  0213                     	;# 
   817  0214                     	;# 
   818  0214                     	;# 
   819  0215                     	;# 
   820  0215                     	;# 
   821  0215                     	;# 
   822  0215                     	;# 
   823  0216                     	;# 
   824  0216                     	;# 
   825  0217                     	;# 
   826  0217                     	;# 
   827  028C                     	;# 
   828  028D                     	;# 
   829  028E                     	;# 
   830  028F                     	;# 
   831  0290                     	;# 
   832  0291                     	;# 
   833  0291                     	;# 
   834  0292                     	;# 
   835  0293                     	;# 
   836  0293                     	;# 
   837  0298                     	;# 
   838  0298                     	;# 
   839  0299                     	;# 
   840  029A                     	;# 
   841  029A                     	;# 
   842  029E                     	;# 
   843  030C                     	;# 
   844  030D                     	;# 
   845  030E                     	;# 
   846  030F                     	;# 
   847  0310                     	;# 
   848  038C                     	;# 
   849  038D                     	;# 
   850  038E                     	;# 
   851  038F                     	;# 
   852  0390                     	;# 
   853  0391                     	;# 
   854  0392                     	;# 
   855  0393                     	;# 
   856  0394                     	;# 
   857  0395                     	;# 
   858  0396                     	;# 
   859  0397                     	;# 
   860  0398                     	;# 
   861  0399                     	;# 
   862  039D                     	;# 
   863  039E                     	;# 
   864  039F                     	;# 
   865  0415                     	;# 
   866  0416                     	;# 
   867  0417                     	;# 
   868  041C                     	;# 
   869  041D                     	;# 
   870  041E                     	;# 
   871  0498                     	;# 
   872  0498                     	;# 
   873  0499                     	;# 
   874  049A                     	;# 
   875  049B                     	;# 
   876  049B                     	;# 
   877  049C                     	;# 
   878  049D                     	;# 
   879  049E                     	;# 
   880  049F                     	;# 
   881  0511                     	;# 
   882  0515                     	;# 
   883  0617                     	;# 
   884  0618                     	;# 
   885  0619                     	;# 
   886  0619                     	;# 
   887  061A                     	;# 
   888  061B                     	;# 
   889  061C                     	;# 
   890  061C                     	;# 
   891  0691                     	;# 
   892  0692                     	;# 
   893  0693                     	;# 
   894  0694                     	;# 
   895  0695                     	;# 
   896  0696                     	;# 
   897  0697                     	;# 
   898  0698                     	;# 
   899  0699                     	;# 
   900  069A                     	;# 
   901  069B                     	;# 
   902  069C                     	;# 
   903  069D                     	;# 
   904  069E                     	;# 
   905  069F                     	;# 
   906  0E0F                     	;# 
   907  0E10                     	;# 
   908  0E11                     	;# 
   909  0E12                     	;# 
   910  0E13                     	;# 
   911  0E14                     	;# 
   912  0E15                     	;# 
   913  0E17                     	;# 
   914  0E20                     	;# 
   915  0E21                     	;# 
   916  0E22                     	;# 
   917  0E24                     	;# 
   918  0E25                     	;# 
   919  0E28                     	;# 
   920  0E29                     	;# 
   921  0E2A                     	;# 
   922  0E2B                     	;# 
   923  0E90                     	;# 
   924  0E91                     	;# 
   925  0E92                     	;# 
   926  0E93                     	;# 
   927  0E94                     	;# 
   928  0E95                     	;# 
   929  0E96                     	;# 
   930  0E97                     	;# 
   931  0E98                     	;# 
   932  0E99                     	;# 
   933  0E9A                     	;# 
   934  0E9B                     	;# 
   935  0E9C                     	;# 
   936  0E9D                     	;# 
   937  0E9E                     	;# 
   938  0E9F                     	;# 
   939  0EA0                     	;# 
   940  0EA1                     	;# 
   941  0EA2                     	;# 
   942  0EA3                     	;# 
   943  0EA4                     	;# 
   944  0EA5                     	;# 
   945  0EA6                     	;# 
   946  0EA7                     	;# 
   947  0EA8                     	;# 
   948  0EA9                     	;# 
   949  0EAA                     	;# 
   950  0EAB                     	;# 
   951  0EAC                     	;# 
   952  0EAD                     	;# 
   953  0EAE                     	;# 
   954  0EAF                     	;# 
   955  0EB0                     	;# 
   956  0EB1                     	;# 
   957  0EB2                     	;# 
   958  0F0F                     	;# 
   959  0F10                     	;# 
   960  0F11                     	;# 
   961  0F12                     	;# 
   962  0F13                     	;# 
   963  0F14                     	;# 
   964  0F15                     	;# 
   965  0F16                     	;# 
   966  0F17                     	;# 
   967  0F18                     	;# 
   968  0F19                     	;# 
   969  0F1A                     	;# 
   970  0F1B                     	;# 
   971  0F1C                     	;# 
   972  0F1D                     	;# 
   973  0F1E                     	;# 
   974  0F1F                     	;# 
   975  0F20                     	;# 
   976  0F21                     	;# 
   977  0F22                     	;# 
   978  0F23                     	;# 
   979  0F24                     	;# 
   980  0F25                     	;# 
   981  0F26                     	;# 
   982  0F27                     	;# 
   983  0F28                     	;# 
   984  0F29                     	;# 
   985  0F2A                     	;# 
   986  0F2B                     	;# 
   987  0F2C                     	;# 
   988  0F2D                     	;# 
   989  0F2E                     	;# 
   990  0F2F                     	;# 
   991  0F30                     	;# 
   992  0F31                     	;# 
   993  0F32                     	;# 
   994  0F33                     	;# 
   995  0F34                     	;# 
   996  0F35                     	;# 
   997  0F36                     	;# 
   998  0F37                     	;# 
   999  0FE4                     	;# 
  1000  0FE5                     	;# 
  1001  0FE6                     	;# 
  1002  0FE7                     	;# 
  1003  0FE8                     	;# 
  1004  0FE9                     	;# 
  1005  0FEA                     	;# 
  1006  0FEB                     	;# 
  1007  0FED                     	;# 
  1008  0FEE                     	;# 
  1009  0FEF                     	;# 
  1010                           
  1011                           	psect	stringtext1
  1012  0800                     __pstringtext1:	
  1013  0800                     _dpowers:	
  1014  0800  3401               	retlw	1
  1015  0801  3400               	retlw	0
  1016  0802  3400               	retlw	0
  1017  0803  3400               	retlw	0
  1018  0804  340A               	retlw	10
  1019  0805  3400               	retlw	0
  1020  0806  3400               	retlw	0
  1021  0807  3400               	retlw	0
  1022  0808  3464               	retlw	100
  1023  0809  3400               	retlw	0
  1024  080A  3400               	retlw	0
  1025  080B  3400               	retlw	0
  1026  080C  34E8               	retlw	232
  1027  080D  3403               	retlw	3
  1028  080E  3400               	retlw	0
  1029  080F  3400               	retlw	0
  1030  0810  3410               	retlw	16
  1031  0811  3427               	retlw	39
  1032  0812  3400               	retlw	0
  1033  0813  3400               	retlw	0
  1034  0814  34A0               	retlw	160
  1035  0815  3486               	retlw	134
  1036  0816  3401               	retlw	1
  1037  0817  3400               	retlw	0
  1038  0818  3440               	retlw	64
  1039  0819  3442               	retlw	66
  1040  081A  340F               	retlw	15
  1041  081B  3400               	retlw	0
  1042  081C  3480               	retlw	128
  1043  081D  3496               	retlw	150
  1044  081E  3498               	retlw	152
  1045  081F  3400               	retlw	0
  1046  0820  3400               	retlw	0
  1047  0821  34E1               	retlw	225
  1048  0822  34F5               	retlw	245
  1049  0823  3405               	retlw	5
  1050  0824  3400               	retlw	0
  1051  0825  34CA               	retlw	202
  1052  0826  349A               	retlw	154
  1053  0827  343B               	retlw	59
  1054  0828                     __end_of_dpowers:	
  1055  000F                     _PORTD	set	15
  1056  007B                     _RD3	set	123
  1057  007A                     _RD2	set	122
  1058  007F                     _RD7	set	127
  1059  007E                     _RD6	set	126
  1060  007D                     _RD5	set	125
  1061  007C                     _RD4	set	124
  1062  008F                     _TRISD	set	143
  1063  04CF                     _SPLLEN	set	1231
  1064  04CE                     _IRCF3	set	1230
  1065  04CD                     _IRCF2	set	1229
  1066  04CC                     _IRCF1	set	1228
  1067  04CB                     _IRCF0	set	1227
  1068  04C9                     _SCS1	set	1225
  1069  04C8                     _SCS0	set	1224
  1070  018F                     _ANSELD	set	399
  1071  0828                     STR_2:	
  1072  0828  3425               	retlw	37	;'%'
  1073  0829  346C               	retlw	108	;'l'
  1074  082A  3475               	retlw	117	;'u'
  1075  082B  342E               	retlw	46	;'.'
  1076  082C  3425               	retlw	37	;'%'
  1077  082D  3436               	retlw	54	;'6'
  1078  082E  342E               	retlw	46	;'.'
  1079  082F  3436               	retlw	54	;'6'
  1080  0830  346C               	retlw	108	;'l'
  1081  0831  3475               	retlw	117	;'u'
  1082  0832  3400               	retlw	0
  1083                           
  1084                           	psect	stringtext2
  1085  1000                     __pstringtext2:	
  1086  1000                     STR_1:	
  1087  1000  3450               	retlw	80	;'P'
  1088  1001  3449               	retlw	73	;'I'
  1089  1002  3443               	retlw	67	;'C'
  1090  1003  3431               	retlw	49	;'1'
  1091  1004  3436               	retlw	54	;'6'
  1092  1005  3446               	retlw	70	;'F'
  1093  1006  3431               	retlw	49	;'1'
  1094  1007  3437               	retlw	55	;'7'
  1095  1008  3431               	retlw	49	;'1'
  1096  1009  3437               	retlw	55	;'7'
  1097  100A  3400               	retlw	0
  1098                           
  1099                           	psect	stringtext3
  1100  0000                     __pstringtext3:	
  1101                           
  1102                           ; #config settings
  1103  0000                     
  1104                           	psect	cinit
  1105  07F6                     start_initialization:	
  1106  07F6                     __initialization:	
  1107                           
  1108                           ; Clear objects allocated to BANK1
  1109  07F6  30A0               	movlw	low __pbssBANK1
  1110  07F7  0084               	movwf	4
  1111  07F8  3000               	movlw	high __pbssBANK1
  1112  07F9  0085               	movwf	5
  1113  07FA  3011               	movlw	17
  1114  07FB  318E  2666         	fcall	clear_ram0
  1115  07FD                     end_of_initialization:	
  1116                           ;End of C runtime variable initialization code
  1117                           
  1118  07FD                     __end_of__initialization:	
  1119  07FD  0020               	movlb	0
  1120  07FE  3185  2D07         	ljmp	_main	;jump to C main() function
  1121                           
  1122                           	psect	bssBANK1
  1123  00A0                     __pbssBANK1:	
  1124  00A0                     ftoa@buf:	
  1125  00A0                     	ds	17
  1126                           
  1127                           	psect	clrtext
  1128  0E66                     clear_ram0:	
  1129                           ;	Called with FSR0 containing the base address, and
  1130                           ;	WREG with the size to clear
  1131                           
  1132  0E66  0064               	clrwdt	;clear the watchdog before getting into this loop
  1133  0E67                     clrloop0:	
  1134  0E67  0180               	clrf	0	;clear RAM location pointed to by FSR
  1135  0E68  3101               	addfsr 0,1
  1136  0E69  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1137  0E6A  2E67               	goto	clrloop0	;have we reached the end yet?
  1138  0E6B  3400               	retlw	0	;all done for this memory range, return
  1139                           
  1140                           	psect	cstackCOMMON
  1141  0070                     __pcstackCOMMON:	
  1142  0070                     ?_isdigit:	
  1143  0070                     ?___ftge:	
  1144                           ; 1 bit 
  1145                           
  1146  0070                     ?_Lcd_Init:	
  1147                           ; 1 bit 
  1148                           
  1149  0070                     ?_Lcd_Clear:	
  1150                           ; 1 bytes @ 0x0
  1151                           
  1152  0070                     ?_Lcd_Shift_Left:	
  1153                           ; 1 bytes @ 0x0
  1154                           
  1155  0070                     ?_Lcd_Shift_Right:	
  1156                           ; 1 bytes @ 0x0
  1157                           
  1158  0070                     ??_isdigit:	
  1159                           ; 1 bytes @ 0x0
  1160                           
  1161  0070                     ?_internal_16:	
  1162                           ; 1 bytes @ 0x0
  1163                           
  1164  0070                     ??_internal_16:	
  1165                           ; 1 bytes @ 0x0
  1166                           
  1167  0070                     ?_initMain:	
  1168                           ; 1 bytes @ 0x0
  1169                           
  1170  0070                     ??_initMain:	
  1171                           ; 1 bytes @ 0x0
  1172                           
  1173  0070                     ?_main:	
  1174                           ; 1 bytes @ 0x0
  1175                           
  1176  0070                     ?_Lcd_Port:	
  1177                           ; 1 bytes @ 0x0
  1178                           
  1179  0070                     ??_Lcd_Port:	
  1180                           ; 1 bytes @ 0x0
  1181                           
  1182  0070                     ?_Lcd_Cmd:	
  1183                           ; 1 bytes @ 0x0
  1184                           
  1185  0070                     ?_Lcd_Write_Char:	
  1186                           ; 1 bytes @ 0x0
  1187                           
  1188  0070                     ?___wmul:	
  1189                           ; 1 bytes @ 0x0
  1190                           
  1191  0070                     ?___lwdiv:	
  1192                           ; 2 bytes @ 0x0
  1193                           
  1194  0070                     ?___lwmod:	
  1195                           ; 2 bytes @ 0x0
  1196                           
  1197  0070                     ?___ftpack:	
  1198                           ; 2 bytes @ 0x0
  1199                           
  1200  0070                     ?___ftneg:	
  1201                           ; 3 bytes @ 0x0
  1202                           
  1203  0070                     ?___lldiv:	
  1204                           ; 3 bytes @ 0x0
  1205                           
  1206  0070                     Lcd_Port@a:	
  1207                           ; 4 bytes @ 0x0
  1208                           
  1209  0070                     _isdigit$434:	
  1210                           ; 1 bytes @ 0x0
  1211                           
  1212  0070                     ___wmul@multiplier:	
  1213                           ; 1 bytes @ 0x0
  1214                           
  1215  0070                     ___lwdiv@divisor:	
  1216                           ; 2 bytes @ 0x0
  1217                           
  1218  0070                     ___lwmod@divisor:	
  1219                           ; 2 bytes @ 0x0
  1220                           
  1221  0070                     ___ftpack@arg:	
  1222                           ; 2 bytes @ 0x0
  1223                           
  1224  0070                     ___ftge@ff1:	
  1225                           ; 3 bytes @ 0x0
  1226                           
  1227  0070                     ___ftneg@f1:	
  1228                           ; 3 bytes @ 0x0
  1229                           
  1230  0070                     ___lldiv@divisor:	
  1231                           ; 3 bytes @ 0x0
  1232                           
  1233                           
  1234                           ; 4 bytes @ 0x0
  1235  0070                     	ds	1
  1236  0071                     ??_Lcd_Cmd:	
  1237  0071                     ??_Lcd_Write_Char:	
  1238                           ; 1 bytes @ 0x1
  1239                           
  1240  0071                     isdigit@c:	
  1241                           ; 1 bytes @ 0x1
  1242                           
  1243                           
  1244                           ; 1 bytes @ 0x1
  1245  0071                     	ds	1
  1246  0072                     Lcd_Cmd@a:	
  1247  0072                     Lcd_Write_Char@temp:	
  1248                           ; 1 bytes @ 0x2
  1249                           
  1250  0072                     ___wmul@multiplicand:	
  1251                           ; 1 bytes @ 0x2
  1252                           
  1253  0072                     ___lwdiv@dividend:	
  1254                           ; 2 bytes @ 0x2
  1255                           
  1256  0072                     ___lwmod@dividend:	
  1257                           ; 2 bytes @ 0x2
  1258                           
  1259                           
  1260                           ; 2 bytes @ 0x2
  1261  0072                     	ds	1
  1262  0073                     ??_Lcd_Init:	
  1263  0073                     ??_Lcd_Clear:	
  1264                           ; 1 bytes @ 0x3
  1265                           
  1266  0073                     ?_Lcd_Set_Cursor:	
  1267                           ; 1 bytes @ 0x3
  1268                           
  1269  0073                     ??_Lcd_Shift_Left:	
  1270                           ; 1 bytes @ 0x3
  1271                           
  1272  0073                     ??_Lcd_Shift_Right:	
  1273                           ; 1 bytes @ 0x3
  1274                           
  1275  0073                     ??___ftneg:	
  1276                           ; 1 bytes @ 0x3
  1277                           
  1278  0073                     Lcd_Set_Cursor@b:	
  1279                           ; 1 bytes @ 0x3
  1280                           
  1281  0073                     Lcd_Write_Char@y:	
  1282                           ; 1 bytes @ 0x3
  1283                           
  1284  0073                     ___ftpack@exp:	
  1285                           ; 1 bytes @ 0x3
  1286                           
  1287  0073                     ___ftge@ff2:	
  1288                           ; 1 bytes @ 0x3
  1289                           
  1290                           
  1291                           ; 3 bytes @ 0x3
  1292  0073                     	ds	1
  1293  0074                     ??_Lcd_Set_Cursor:	
  1294  0074                     ??___wmul:	
  1295                           ; 1 bytes @ 0x4
  1296                           
  1297  0074                     ??___lwdiv:	
  1298                           ; 1 bytes @ 0x4
  1299                           
  1300  0074                     ??___lwmod:	
  1301                           ; 1 bytes @ 0x4
  1302                           
  1303  0074                     Lcd_Write_Char@a:	
  1304                           ; 1 bytes @ 0x4
  1305                           
  1306  0074                     ___ftpack@sign:	
  1307                           ; 1 bytes @ 0x4
  1308                           
  1309  0074                     ___wmul@product:	
  1310                           ; 1 bytes @ 0x4
  1311                           
  1312  0074                     ___lldiv@dividend:	
  1313                           ; 2 bytes @ 0x4
  1314                           
  1315                           
  1316                           ; 4 bytes @ 0x4
  1317  0074                     	ds	1
  1318  0075                     ??___ftpack:	
  1319  0075                     ___lwmod@counter:	
  1320                           ; 1 bytes @ 0x5
  1321                           
  1322  0075                     ___lwdiv@quotient:	
  1323                           ; 1 bytes @ 0x5
  1324                           
  1325                           
  1326                           ; 2 bytes @ 0x5
  1327  0075                     	ds	1
  1328  0076                     ??___ftge:	
  1329  0076                     Lcd_Set_Cursor@a:	
  1330                           ; 1 bytes @ 0x6
  1331                           
  1332                           
  1333                           ; 1 bytes @ 0x6
  1334  0076                     	ds	1
  1335  0077                     Lcd_Set_Cursor@z:	
  1336  0077                     ___lwdiv@counter:	
  1337                           ; 1 bytes @ 0x7
  1338                           
  1339                           
  1340                           ; 1 bytes @ 0x7
  1341  0077                     	ds	1
  1342  0078                     ?_utoa:	
  1343  0078                     ??___lldiv:	
  1344                           ; 1 bytes @ 0x8
  1345                           
  1346  0078                     ?___ftadd:	
  1347                           ; 1 bytes @ 0x8
  1348                           
  1349  0078                     ?___ftmul:	
  1350                           ; 3 bytes @ 0x8
  1351                           
  1352  0078                     ?___lltoft:	
  1353                           ; 3 bytes @ 0x8
  1354                           
  1355  0078                     Lcd_Set_Cursor@y:	
  1356                           ; 3 bytes @ 0x8
  1357                           
  1358  0078                     utoa@val:	
  1359                           ; 1 bytes @ 0x8
  1360                           
  1361  0078                     ___ftadd@f1:	
  1362                           ; 2 bytes @ 0x8
  1363                           
  1364  0078                     ___ftmul@f1:	
  1365                           ; 3 bytes @ 0x8
  1366                           
  1367  0078                     ___lltoft@c:	
  1368                           ; 3 bytes @ 0x8
  1369                           
  1370                           
  1371                           ; 4 bytes @ 0x8
  1372  0078                     	ds	1
  1373  0079                     Lcd_Set_Cursor@temp:	
  1374  0079                     ___lldiv@quotient:	
  1375                           ; 1 bytes @ 0x9
  1376                           
  1377                           
  1378                           ; 4 bytes @ 0x9
  1379  0079                     	ds	1
  1380  007A                     utoa@base:	
  1381                           
  1382                           ; 2 bytes @ 0xA
  1383  007A                     	ds	1
  1384  007B                     ___ftadd@f2:	
  1385  007B                     ___ftmul@f2:	
  1386                           ; 3 bytes @ 0xB
  1387                           
  1388                           
  1389                           ; 3 bytes @ 0xB
  1390  007B                     	ds	1
  1391  007C                     ??_utoa:	
  1392  007C                     ??___lltoft:	
  1393                           ; 1 bytes @ 0xC
  1394                           
  1395                           
  1396                           ; 1 bytes @ 0xC
  1397  007C                     	ds	1
  1398  007D                     ??_itoa:	
  1399  007D                     ___lldiv@counter:	
  1400                           ; 1 bytes @ 0xD
  1401                           
  1402  007D                     ___lltoft@exp:	
  1403                           ; 1 bytes @ 0xD
  1404                           
  1405                           
  1406                           ; 1 bytes @ 0xD
  1407  007D                     	ds	1
  1408  007E                     ??_Lcd_Write_Integer:	
  1409  007E                     ??___ftsub:	
  1410                           ; 1 bytes @ 0xE
  1411                           
  1412                           
  1413                           	psect	cstackBANK0
  1414  0020                     __pcstackBANK0:	
  1415                           ; 1 bytes @ 0xE
  1416                           
  1417  0020                     ??___ftadd:	
  1418  0020                     ??___ftmul:	
  1419                           ; 1 bytes @ 0x0
  1420                           
  1421  0020                     ?___llmod:	
  1422                           ; 1 bytes @ 0x0
  1423                           
  1424  0020                     utoa@v:	
  1425                           ; 4 bytes @ 0x0
  1426                           
  1427  0020                     ___llmod@divisor:	
  1428                           ; 2 bytes @ 0x0
  1429                           
  1430                           
  1431                           ; 4 bytes @ 0x0
  1432  0020                     	ds	2
  1433  0022                     utoa@c:	
  1434                           
  1435                           ; 1 bytes @ 0x2
  1436  0022                     	ds	1
  1437  0023                     utoa@buf:	
  1438                           
  1439                           ; 1 bytes @ 0x3
  1440  0023                     	ds	1
  1441  0024                     ?_itoa:	
  1442  0024                     ___ftadd@sign:	
  1443                           ; 1 bytes @ 0x4
  1444                           
  1445  0024                     ___ftmul@exp:	
  1446                           ; 1 bytes @ 0x4
  1447                           
  1448  0024                     itoa@val:	
  1449                           ; 1 bytes @ 0x4
  1450                           
  1451  0024                     ___llmod@dividend:	
  1452                           ; 2 bytes @ 0x4
  1453                           
  1454                           
  1455                           ; 4 bytes @ 0x4
  1456  0024                     	ds	1
  1457  0025                     ___ftadd@exp2:	
  1458  0025                     ___ftmul@f3_as_product:	
  1459                           ; 1 bytes @ 0x5
  1460                           
  1461                           
  1462                           ; 3 bytes @ 0x5
  1463  0025                     	ds	1
  1464  0026                     ___ftadd@exp1:	
  1465  0026                     itoa@base:	
  1466                           ; 1 bytes @ 0x6
  1467                           
  1468                           
  1469                           ; 2 bytes @ 0x6
  1470  0026                     	ds	1
  1471  0027                     ?___ftsub:	
  1472  0027                     ___ftsub@f2:	
  1473                           ; 3 bytes @ 0x7
  1474                           
  1475                           
  1476                           ; 3 bytes @ 0x7
  1477  0027                     	ds	1
  1478  0028                     ??___llmod:	
  1479  0028                     ___ftmul@cntr:	
  1480                           ; 1 bytes @ 0x8
  1481                           
  1482  0028                     itoa@cp:	
  1483                           ; 1 bytes @ 0x8
  1484                           
  1485                           
  1486                           ; 1 bytes @ 0x8
  1487  0028                     	ds	1
  1488  0029                     ___ftmul@sign:	
  1489  0029                     ___llmod@counter:	
  1490                           ; 1 bytes @ 0x9
  1491                           
  1492  0029                     itoa@buf:	
  1493                           ; 1 bytes @ 0x9
  1494                           
  1495                           
  1496                           ; 1 bytes @ 0x9
  1497  0029                     	ds	1
  1498  002A                     ?_Lcd_Write_String:	
  1499  002A                     ?_sprintf:	
  1500                           ; 1 bytes @ 0xA
  1501                           
  1502  002A                     ?___fttol:	
  1503                           ; 2 bytes @ 0xA
  1504                           
  1505  002A                     Lcd_Write_String@a:	
  1506                           ; 4 bytes @ 0xA
  1507                           
  1508  002A                     sprintf@f:	
  1509                           ; 2 bytes @ 0xA
  1510                           
  1511  002A                     ___ftsub@f1:	
  1512                           ; 2 bytes @ 0xA
  1513                           
  1514  002A                     ___fttol@f1:	
  1515                           ; 3 bytes @ 0xA
  1516                           
  1517                           
  1518                           ; 3 bytes @ 0xA
  1519  002A                     	ds	2
  1520  002C                     ??_Lcd_Write_String:	
  1521                           
  1522                           ; 1 bytes @ 0xC
  1523  002C                     	ds	1
  1524  002D                     Lcd_Write_String@i:	
  1525                           
  1526                           ; 2 bytes @ 0xD
  1527  002D                     	ds	1
  1528  002E                     ??___fttol:	
  1529                           
  1530                           ; 1 bytes @ 0xE
  1531  002E                     	ds	1
  1532  002F                     ?_Lcd_Write_Integer:	
  1533  002F                     Lcd_Write_Integer@v:	
  1534                           ; 1 bytes @ 0xF
  1535                           
  1536                           
  1537                           ; 2 bytes @ 0xF
  1538  002F                     	ds	2
  1539  0031                     Lcd_Write_Integer@buf:	
  1540                           
  1541                           ; 8 bytes @ 0x11
  1542  0031                     	ds	1
  1543  0032                     ___fttol@sign1:	
  1544                           
  1545                           ; 1 bytes @ 0x12
  1546  0032                     	ds	1
  1547  0033                     ___fttol@lval:	
  1548                           
  1549                           ; 4 bytes @ 0x13
  1550  0033                     	ds	1
  1551  0034                     ??_sprintf:	
  1552                           
  1553                           ; 1 bytes @ 0x14
  1554  0034                     	ds	3
  1555  0037                     ___fttol@exp1:	
  1556                           
  1557                           ; 1 bytes @ 0x17
  1558  0037                     	ds	3
  1559  003A                     sprintf@flag:	
  1560                           
  1561                           ; 1 bytes @ 0x1A
  1562  003A                     	ds	1
  1563  003B                     sprintf@ap:	
  1564                           
  1565                           ; 1 bytes @ 0x1B
  1566  003B                     	ds	1
  1567  003C                     sprintf@val:	
  1568                           
  1569                           ; 4 bytes @ 0x1C
  1570  003C                     	ds	4
  1571  0040                     sprintf@sp:	
  1572                           
  1573                           ; 1 bytes @ 0x20
  1574  0040                     	ds	1
  1575  0041                     sprintf@width:	
  1576                           
  1577                           ; 2 bytes @ 0x21
  1578  0041                     	ds	2
  1579  0043                     sprintf@prec:	
  1580                           
  1581                           ; 2 bytes @ 0x23
  1582  0043                     	ds	2
  1583  0045                     sprintf@c:	
  1584                           
  1585                           ; 1 bytes @ 0x25
  1586  0045                     	ds	1
  1587  0046                     ?_ftoa:	
  1588  0046                     ftoa@f:	
  1589                           ; 1 bytes @ 0x26
  1590                           
  1591                           
  1592                           ; 3 bytes @ 0x26
  1593  0046                     	ds	3
  1594  0049                     ftoa@status:	
  1595                           
  1596                           ; 1 bytes @ 0x29
  1597  0049                     	ds	1
  1598  004A                     ??_ftoa:	
  1599                           
  1600                           ; 1 bytes @ 0x2A
  1601  004A                     	ds	1
  1602  004B                     ftoa@rem:	
  1603                           
  1604                           ; 4 bytes @ 0x2B
  1605  004B                     	ds	4
  1606  004F                     ftoa@l:	
  1607                           
  1608                           ; 4 bytes @ 0x2F
  1609  004F                     	ds	4
  1610  0053                     ftoa@cp:	
  1611                           
  1612                           ; 1 bytes @ 0x33
  1613  0053                     	ds	1
  1614  0054                     ?_Lcd_Write_Float:	
  1615  0054                     Lcd_Write_Float@f:	
  1616                           ; 1 bytes @ 0x34
  1617                           
  1618                           
  1619                           ; 3 bytes @ 0x34
  1620  0054                     	ds	3
  1621  0057                     ??_Lcd_Write_Float:	
  1622                           
  1623                           ; 1 bytes @ 0x37
  1624  0057                     	ds	2
  1625  0059                     Lcd_Write_Float@status:	
  1626                           
  1627                           ; 2 bytes @ 0x39
  1628  0059                     	ds	2
  1629  005B                     Lcd_Write_Float@buf11:	
  1630                           
  1631                           ; 1 bytes @ 0x3B
  1632  005B                     	ds	1
  1633  005C                     ??_main:	
  1634                           
  1635                           ; 1 bytes @ 0x3C
  1636  005C                     	ds	2
  1637  005E                     main@c:	
  1638                           
  1639                           ; 2 bytes @ 0x3E
  1640  005E                     	ds	2
  1641  0060                     main@b:	
  1642                           
  1643                           ; 3 bytes @ 0x40
  1644  0060                     	ds	3
  1645  0063                     main@a:	
  1646                           
  1647                           ; 2 bytes @ 0x43
  1648  0063                     	ds	2
  1649                           
  1650                           	psect	maintext
  1651  0507                     __pmaintext:	
  1652 ;;
  1653 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1654 ;;
  1655 ;; *************** function _main *****************
  1656 ;; Defined at:
  1657 ;;		line 66 in file "Main.c"
  1658 ;; Parameters:    Size  Location     Type
  1659 ;;		None
  1660 ;; Auto vars:     Size  Location     Type
  1661 ;;  b               3   64[BANK0 ] float 
  1662 ;;  a               2   67[BANK0 ] int 
  1663 ;;  c               2   62[BANK0 ] int 
  1664 ;; Return value:  Size  Location     Type
  1665 ;;                  1    wreg      void 
  1666 ;; Registers used:
  1667 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1668 ;; Tracked objects:
  1669 ;;		On entry : B1F/0
  1670 ;;		On exit  : 0/0
  1671 ;;		Unchanged: 0/0
  1672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1674 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1675 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1676 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1677 ;;Total ram usage:        9 bytes
  1678 ;; Hardware stack levels required when called:    5
  1679 ;; This function calls:
  1680 ;;		_Lcd_Clear
  1681 ;;		_Lcd_Init
  1682 ;;		_Lcd_Set_Cursor
  1683 ;;		_Lcd_Shift_Left
  1684 ;;		_Lcd_Shift_Right
  1685 ;;		_Lcd_Write_Float
  1686 ;;		_Lcd_Write_Integer
  1687 ;;		_Lcd_Write_String
  1688 ;;		___ftadd
  1689 ;;		___ftge
  1690 ;;		_initMain
  1691 ;; This function is called by:
  1692 ;;		Startup code after reset
  1693 ;; This function uses a non-reentrant model
  1694 ;;
  1695                           
  1696                           
  1697                           ;psect for function _main
  1698  0507                     _main:	
  1699                           
  1700                           ;Main.c: 67: initMain();
  1701                           
  1702                           ;incstack = 0
  1703                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1704  0507  318E  2695  3185   	fcall	_initMain
  1705                           
  1706                           ;Main.c: 68: Lcd_Init();
  1707  050A  3180  20AA  3185   	fcall	_Lcd_Init
  1708                           
  1709                           ;Main.c: 69: _delay((unsigned long)((1000)*(16000000/4000.0)));
  1710  050D  3015               	movlw	21
  1711  050E  0020               	movlb	0	; select bank0
  1712  050F  00DD               	movwf	??_main+1
  1713  0510  304B               	movlw	75
  1714  0511  00DC               	movwf	??_main
  1715  0512  30BE               	movlw	190
  1716  0513                     u2677:	
  1717  0513  0B89               	decfsz	9,f
  1718  0514  2D13               	goto	u2677
  1719  0515  0BDC               	decfsz	??_main,f
  1720  0516  2D13               	goto	u2677
  1721  0517  0BDD               	decfsz	??_main+1,f
  1722  0518  2D13               	goto	u2677
  1723  0519  0000               	nop
  1724  051A                     l2113:	
  1725                           
  1726                           ;Main.c: 76: Lcd_Clear();
  1727  051A  318E  266C  3185   	fcall	_Lcd_Clear
  1728                           
  1729                           ;Main.c: 77: Lcd_Set_Cursor(1,1);
  1730  051D  01F3               	clrf	Lcd_Set_Cursor@b
  1731  051E  0AF3               	incf	Lcd_Set_Cursor@b,f
  1732  051F  3001               	movlw	1
  1733  0520  3180  206A  3185   	fcall	_Lcd_Set_Cursor
  1734                           
  1735                           ;Main.c: 78: _delay((unsigned long)((100)*(16000000/4000.0)));
  1736  0523  3003               	movlw	3
  1737  0524  0020               	movlb	0	; select bank0
  1738  0525  00DD               	movwf	??_main+1
  1739  0526  3008               	movlw	8
  1740  0527  00DC               	movwf	??_main
  1741  0528  3077               	movlw	119
  1742  0529                     u2687:	
  1743  0529  0B89               	decfsz	9,f
  1744  052A  2D29               	goto	u2687
  1745  052B  0BDC               	decfsz	??_main,f
  1746  052C  2D29               	goto	u2687
  1747  052D  0BDD               	decfsz	??_main+1,f
  1748  052E  2D29               	goto	u2687
  1749                           
  1750                           ;Main.c: 81: Lcd_Write_String("PIC16F1717");
  1751  052F  3000               	movlw	low (STR_1| (0+32768))
  1752  0530  0020               	movlb	0	; select bank0
  1753  0531  00AA               	movwf	Lcd_Write_String@a
  1754  0532  3090               	movlw	high (STR_1| (0+32768))
  1755  0533  00AB               	movwf	Lcd_Write_String@a+1
  1756  0534  318F  2720  3185   	fcall	_Lcd_Write_String
  1757                           
  1758                           ;Main.c: 82: _delay((unsigned long)((10)*(16000000/4000.0)));
  1759  0537  3034               	movlw	52
  1760  0538  0020               	movlb	0	; select bank0
  1761  0539  00DC               	movwf	??_main
  1762  053A  30F1               	movlw	241
  1763  053B                     u2697:	
  1764  053B  0B89               	decfsz	9,f
  1765  053C  2D3B               	goto	u2697
  1766  053D  0BDC               	decfsz	??_main,f
  1767  053E  2D3B               	goto	u2697
  1768  053F  3200               	nop2
  1769                           
  1770                           ;Main.c: 85: for(a=0;a<15;a++)
  1771  0540  0020               	movlb	0	; select bank0
  1772  0541  01E3               	clrf	main@a
  1773  0542  01E4               	clrf	main@a+1
  1774  0543                     l2127:	
  1775                           
  1776                           ;Main.c: 86: {;Main.c: 87: _delay((unsigned long)((500)*(16000000/4000.0)));
  1777  0543  300B               	movlw	11
  1778  0544  0020               	movlb	0	; select bank0
  1779  0545  00DD               	movwf	??_main+1
  1780  0546  3026               	movlw	38
  1781  0547  00DC               	movwf	??_main
  1782  0548  305D               	movlw	93
  1783  0549                     u2707:	
  1784  0549  0B89               	decfsz	9,f
  1785  054A  2D49               	goto	u2707
  1786  054B  0BDC               	decfsz	??_main,f
  1787  054C  2D49               	goto	u2707
  1788  054D  0BDD               	decfsz	??_main+1,f
  1789  054E  2D49               	goto	u2707
  1790  054F  3200               	nop2
  1791                           
  1792                           ;Main.c: 88: Lcd_Shift_Left();
  1793  0550  318E  2674  3185   	fcall	_Lcd_Shift_Left
  1794  0553  3001               	movlw	1
  1795  0554  0020               	movlb	0	; select bank0
  1796  0555  07E3               	addwf	main@a,f
  1797  0556  3000               	movlw	0
  1798  0557  3DE4               	addwfc	main@a+1,f
  1799  0558  0864               	movf	main@a+1,w
  1800  0559  3A80               	xorlw	128
  1801  055A  00DC               	movwf	??_main
  1802  055B  3080               	movlw	128
  1803  055C  025C               	subwf	??_main,w
  1804  055D  1D03               	skipz
  1805  055E  2D61               	goto	u2625
  1806  055F  300F               	movlw	15
  1807  0560  0263               	subwf	main@a,w
  1808  0561                     u2625:	
  1809  0561  1C03               	skipc
  1810  0562  2D43               	goto	l2127
  1811                           
  1812                           ;Main.c: 89: };Main.c: 92: for(a=0;a<15;a++)
  1813  0563  0020               	movlb	0	; select bank0
  1814  0564  01E3               	clrf	main@a
  1815  0565  01E4               	clrf	main@a+1
  1816  0566                     l2141:	
  1817                           
  1818                           ;Main.c: 93: {;Main.c: 94: _delay((unsigned long)((500)*(16000000/4000.0)));
  1819  0566  300B               	movlw	11
  1820  0567  0020               	movlb	0	; select bank0
  1821  0568  00DD               	movwf	??_main+1
  1822  0569  3026               	movlw	38
  1823  056A  00DC               	movwf	??_main
  1824  056B  305D               	movlw	93
  1825  056C                     u2717:	
  1826  056C  0B89               	decfsz	9,f
  1827  056D  2D6C               	goto	u2717
  1828  056E  0BDC               	decfsz	??_main,f
  1829  056F  2D6C               	goto	u2717
  1830  0570  0BDD               	decfsz	??_main+1,f
  1831  0571  2D6C               	goto	u2717
  1832  0572  3200               	nop2
  1833                           
  1834                           ;Main.c: 95: Lcd_Shift_Right();
  1835  0573  318E  267C  3185   	fcall	_Lcd_Shift_Right
  1836  0576  3001               	movlw	1
  1837  0577  0020               	movlb	0	; select bank0
  1838  0578  07E3               	addwf	main@a,f
  1839  0579  3000               	movlw	0
  1840  057A  3DE4               	addwfc	main@a+1,f
  1841  057B  0864               	movf	main@a+1,w
  1842  057C  3A80               	xorlw	128
  1843  057D  00DC               	movwf	??_main
  1844  057E  3080               	movlw	128
  1845  057F  025C               	subwf	??_main,w
  1846  0580  1D03               	skipz
  1847  0581  2D84               	goto	u2635
  1848  0582  300F               	movlw	15
  1849  0583  0263               	subwf	main@a,w
  1850  0584                     u2635:	
  1851  0584  1C03               	skipc
  1852  0585  2D66               	goto	l2141
  1853                           
  1854                           ;Main.c: 96: };Main.c: 98: Lcd_Clear();
  1855  0586  318E  266C  3185   	fcall	_Lcd_Clear
  1856                           
  1857                           ;Main.c: 99: Lcd_Set_Cursor(1,1);
  1858  0589  01F3               	clrf	Lcd_Set_Cursor@b
  1859  058A  0AF3               	incf	Lcd_Set_Cursor@b,f
  1860  058B  3001               	movlw	1
  1861  058C  3180  206A  3185   	fcall	_Lcd_Set_Cursor
  1862                           
  1863                           ;Main.c: 102: for (c = 0; c < 100; c++){
  1864  058F  0020               	movlb	0	; select bank0
  1865  0590  01DE               	clrf	main@c
  1866  0591  01DF               	clrf	main@c+1
  1867  0592                     l2157:	
  1868                           
  1869                           ;Main.c: 103: Lcd_Write_Integer(c);
  1870  0592  0020               	movlb	0	; select bank0
  1871  0593  085F               	movf	main@c+1,w
  1872  0594  00B0               	movwf	Lcd_Write_Integer@v+1
  1873  0595  085E               	movf	main@c,w
  1874  0596  00AF               	movwf	Lcd_Write_Integer@v
  1875  0597  318E  26C0  3185   	fcall	_Lcd_Write_Integer
  1876                           
  1877                           ;Main.c: 104: _delay((unsigned long)((300)*(16000000/4000.0)));
  1878  059A  3007               	movlw	7
  1879  059B  0020               	movlb	0	; select bank0
  1880  059C  00DD               	movwf	??_main+1
  1881  059D  3017               	movlw	23
  1882  059E  00DC               	movwf	??_main
  1883  059F  306A               	movlw	106
  1884  05A0                     u2727:	
  1885  05A0  0B89               	decfsz	9,f
  1886  05A1  2DA0               	goto	u2727
  1887  05A2  0BDC               	decfsz	??_main,f
  1888  05A3  2DA0               	goto	u2727
  1889  05A4  0BDD               	decfsz	??_main+1,f
  1890  05A5  2DA0               	goto	u2727
  1891  05A6  0000               	nop
  1892                           
  1893                           ;Main.c: 105: Lcd_Clear();
  1894  05A7  318E  266C  3185   	fcall	_Lcd_Clear
  1895                           
  1896                           ;Main.c: 106: _delay((unsigned long)((15)*(16000000/4000.0)));
  1897  05AA  304E               	movlw	78
  1898  05AB  0020               	movlb	0	; select bank0
  1899  05AC  00DC               	movwf	??_main
  1900  05AD  30EB               	movlw	235
  1901  05AE                     u2737:	
  1902  05AE  0B89               	decfsz	9,f
  1903  05AF  2DAE               	goto	u2737
  1904  05B0  0BDC               	decfsz	??_main,f
  1905  05B1  2DAE               	goto	u2737
  1906  05B2  3001               	movlw	1
  1907  05B3  0020               	movlb	0	; select bank0
  1908  05B4  07DE               	addwf	main@c,f
  1909  05B5  3000               	movlw	0
  1910  05B6  3DDF               	addwfc	main@c+1,f
  1911  05B7  085F               	movf	main@c+1,w
  1912  05B8  3A80               	xorlw	128
  1913  05B9  00DC               	movwf	??_main
  1914  05BA  3080               	movlw	128
  1915  05BB  025C               	subwf	??_main,w
  1916  05BC  1D03               	skipz
  1917  05BD  2DC0               	goto	u2645
  1918  05BE  3064               	movlw	100
  1919  05BF  025E               	subwf	main@c,w
  1920  05C0                     u2645:	
  1921  05C0  1C03               	skipc
  1922  05C1  2D92               	goto	l2157
  1923                           
  1924                           ;Main.c: 108: };Main.c: 111: for (b = 0.0; b <= 5; b+= 0.5)
  1925  05C2  3000               	movlw	0
  1926  05C3  0020               	movlb	0	; select bank0
  1927  05C4  00E0               	movwf	main@b
  1928  05C5  3000               	movlw	0
  1929  05C6  00E1               	movwf	main@b+1
  1930  05C7  3000               	movlw	0
  1931  05C8  00E2               	movwf	main@b+2
  1932  05C9  3000               	movlw	0
  1933  05CA  00F0               	movwf	___ftge@ff1
  1934  05CB  30A0               	movlw	160
  1935  05CC  00F1               	movwf	___ftge@ff1+1
  1936  05CD  3040               	movlw	64
  1937  05CE  00F2               	movwf	___ftge@ff1+2
  1938  05CF  0860               	movf	main@b,w
  1939  05D0  00F3               	movwf	___ftge@ff2
  1940  05D1  0861               	movf	main@b+1,w
  1941  05D2  00F4               	movwf	___ftge@ff2+1
  1942  05D3  0862               	movf	main@b+2,w
  1943  05D4  00F5               	movwf	___ftge@ff2+2
  1944  05D5  3180  2009  3185   	fcall	___ftge
  1945  05D8  1C03               	btfss	3,0
  1946  05D9  2E24               	goto	l2187
  1947  05DA                     l2175:	
  1948                           
  1949                           ;Main.c: 112: {;Main.c: 113: Lcd_Write_Float(b);
  1950  05DA  0020               	movlb	0	; select bank0
  1951  05DB  0860               	movf	main@b,w
  1952  05DC  00D4               	movwf	Lcd_Write_Float@f
  1953  05DD  0861               	movf	main@b+1,w
  1954  05DE  00D5               	movwf	Lcd_Write_Float@f+1
  1955  05DF  0862               	movf	main@b+2,w
  1956  05E0  00D6               	movwf	Lcd_Write_Float@f+2
  1957  05E1  318E  26EC  3185   	fcall	_Lcd_Write_Float
  1958                           
  1959                           ;Main.c: 114: _delay((unsigned long)((300)*(16000000/4000.0)));
  1960  05E4  3007               	movlw	7
  1961  05E5  0020               	movlb	0	; select bank0
  1962  05E6  00DD               	movwf	??_main+1
  1963  05E7  3017               	movlw	23
  1964  05E8  00DC               	movwf	??_main
  1965  05E9  306A               	movlw	106
  1966  05EA                     u2747:	
  1967  05EA  0B89               	decfsz	9,f
  1968  05EB  2DEA               	goto	u2747
  1969  05EC  0BDC               	decfsz	??_main,f
  1970  05ED  2DEA               	goto	u2747
  1971  05EE  0BDD               	decfsz	??_main+1,f
  1972  05EF  2DEA               	goto	u2747
  1973  05F0  0000               	nop
  1974                           
  1975                           ;Main.c: 115: Lcd_Clear();
  1976  05F1  318E  266C  3185   	fcall	_Lcd_Clear
  1977                           
  1978                           ;Main.c: 116: _delay((unsigned long)((15)*(16000000/4000.0)));
  1979  05F4  304E               	movlw	78
  1980  05F5  0020               	movlb	0	; select bank0
  1981  05F6  00DC               	movwf	??_main
  1982  05F7  30EB               	movlw	235
  1983  05F8                     u2757:	
  1984  05F8  0B89               	decfsz	9,f
  1985  05F9  2DF8               	goto	u2757
  1986  05FA  0BDC               	decfsz	??_main,f
  1987  05FB  2DF8               	goto	u2757
  1988  05FC  3000               	movlw	0
  1989  05FD  00F8               	movwf	___ftadd@f1
  1990  05FE  3000               	movlw	0
  1991  05FF  00F9               	movwf	___ftadd@f1+1
  1992  0600  303F               	movlw	63
  1993  0601  00FA               	movwf	___ftadd@f1+2
  1994  0602  0020               	movlb	0	; select bank0
  1995  0603  0860               	movf	main@b,w
  1996  0604  00FB               	movwf	___ftadd@f2
  1997  0605  0861               	movf	main@b+1,w
  1998  0606  00FC               	movwf	___ftadd@f2+1
  1999  0607  0862               	movf	main@b+2,w
  2000  0608  00FD               	movwf	___ftadd@f2+2
  2001  0609  3184  2412  3185   	fcall	___ftadd
  2002  060C  0878               	movf	?___ftadd,w
  2003  060D  0020               	movlb	0	; select bank0
  2004  060E  00E0               	movwf	main@b
  2005  060F  0879               	movf	?___ftadd+1,w
  2006  0610  00E1               	movwf	main@b+1
  2007  0611  087A               	movf	?___ftadd+2,w
  2008  0612  00E2               	movwf	main@b+2
  2009  0613  3000               	movlw	0
  2010  0614  00F0               	movwf	___ftge@ff1
  2011  0615  30A0               	movlw	160
  2012  0616  00F1               	movwf	___ftge@ff1+1
  2013  0617  3040               	movlw	64
  2014  0618  00F2               	movwf	___ftge@ff1+2
  2015  0619  0860               	movf	main@b,w
  2016  061A  00F3               	movwf	___ftge@ff2
  2017  061B  0861               	movf	main@b+1,w
  2018  061C  00F4               	movwf	___ftge@ff2+1
  2019  061D  0862               	movf	main@b+2,w
  2020  061E  00F5               	movwf	___ftge@ff2+2
  2021  061F  3180  2009  3185   	fcall	___ftge
  2022  0622  1803               	btfsc	3,0
  2023  0623  2DDA               	goto	l2175
  2024  0624                     l2187:	
  2025                           
  2026                           ;Main.c: 117: };Main.c: 119: _delay((unsigned long)((1000)*(16000000/4000.0)));
  2027  0624  3015               	movlw	21
  2028  0625  0020               	movlb	0	; select bank0
  2029  0626  00DD               	movwf	??_main+1
  2030  0627  304B               	movlw	75
  2031  0628  00DC               	movwf	??_main
  2032  0629  30BE               	movlw	190
  2033  062A                     u2767:	
  2034  062A  0B89               	decfsz	9,f
  2035  062B  2E2A               	goto	u2767
  2036  062C  0BDC               	decfsz	??_main,f
  2037  062D  2E2A               	goto	u2767
  2038  062E  0BDD               	decfsz	??_main+1,f
  2039  062F  2E2A               	goto	u2767
  2040  0630  0000               	nop
  2041  0631  2D1A               	goto	l2113
  2042  0632                     __end_of_main:	
  2043                           
  2044                           	psect	text1
  2045  0E95                     __ptext1:	
  2046 ;; *************** function _initMain *****************
  2047 ;; Defined at:
  2048 ;;		line 48 in file "Main.c"
  2049 ;; Parameters:    Size  Location     Type
  2050 ;;		None
  2051 ;; Auto vars:     Size  Location     Type
  2052 ;;		None
  2053 ;; Return value:  Size  Location     Type
  2054 ;;                  1    wreg      void 
  2055 ;; Registers used:
  2056 ;;		status,2, status,0, pclath, cstack
  2057 ;; Tracked objects:
  2058 ;;		On entry : 0/0
  2059 ;;		On exit  : 0/0
  2060 ;;		Unchanged: 0/0
  2061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2066 ;;Total ram usage:        0 bytes
  2067 ;; Hardware stack levels used:    1
  2068 ;; Hardware stack levels required when called:    1
  2069 ;; This function calls:
  2070 ;;		_internal_16
  2071 ;; This function is called by:
  2072 ;;		_main
  2073 ;; This function uses a non-reentrant model
  2074 ;;
  2075                           
  2076                           
  2077                           ;psect for function _initMain
  2078  0E95                     _initMain:	
  2079                           
  2080                           ;Main.c: 50: internal_16();
  2081                           
  2082                           ;incstack = 0
  2083                           ; Regs used in _initMain: [status,2+status,0+pclath+cstack]
  2084  0E95  318E  268C         	fcall	_internal_16
  2085                           
  2086                           ;Main.c: 52: TRISD = 0x00;
  2087  0E97  0021               	movlb	1	; select bank1
  2088  0E98  018F               	clrf	15	;volatile
  2089                           
  2090                           ;Main.c: 53: ANSELD = 0x00;
  2091  0E99  0023               	movlb	3	; select bank3
  2092  0E9A  018F               	clrf	15	;volatile
  2093                           
  2094                           ;Main.c: 54: PORTD = 0x00;
  2095  0E9B  0020               	movlb	0	; select bank0
  2096  0E9C  018F               	clrf	15	;volatile
  2097  0E9D  0008               	return
  2098  0E9E                     __end_of_initMain:	
  2099                           
  2100                           	psect	text2
  2101  0E8C                     __ptext2:	
  2102 ;; *************** function _internal_16 *****************
  2103 ;; Defined at:
  2104 ;;		line 56 in file "16F1717_Internal.c"
  2105 ;; Parameters:    Size  Location     Type
  2106 ;;		None
  2107 ;; Auto vars:     Size  Location     Type
  2108 ;;		None
  2109 ;; Return value:  Size  Location     Type
  2110 ;;                  1    wreg      void 
  2111 ;; Registers used:
  2112 ;;		None
  2113 ;; Tracked objects:
  2114 ;;		On entry : 0/0
  2115 ;;		On exit  : 0/0
  2116 ;;		Unchanged: 0/0
  2117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2122 ;;Total ram usage:        0 bytes
  2123 ;; Hardware stack levels used:    1
  2124 ;; This function calls:
  2125 ;;		Nothing
  2126 ;; This function is called by:
  2127 ;;		_initMain
  2128 ;; This function uses a non-reentrant model
  2129 ;;
  2130                           
  2131                           
  2132                           ;psect for function _internal_16
  2133  0E8C                     _internal_16:	
  2134                           
  2135                           ;16F1717_Internal.c: 58: SCS0 = 0;
  2136                           
  2137                           ;incstack = 0
  2138                           ; Regs used in _internal_16: []
  2139  0E8C  0021               	movlb	1	; select bank1
  2140  0E8D  1019               	bcf	25,0	;volatile
  2141                           
  2142                           ;16F1717_Internal.c: 59: SCS1 = 0;
  2143  0E8E  1099               	bcf	25,1	;volatile
  2144                           
  2145                           ;16F1717_Internal.c: 62: IRCF0 = 1;
  2146  0E8F  1599               	bsf	25,3	;volatile
  2147                           
  2148                           ;16F1717_Internal.c: 63: IRCF1 = 1;
  2149  0E90  1619               	bsf	25,4	;volatile
  2150                           
  2151                           ;16F1717_Internal.c: 64: IRCF2 = 1;
  2152  0E91  1699               	bsf	25,5	;volatile
  2153                           
  2154                           ;16F1717_Internal.c: 65: IRCF3 = 1;
  2155  0E92  1719               	bsf	25,6	;volatile
  2156                           
  2157                           ;16F1717_Internal.c: 68: SPLLEN = 0;
  2158  0E93  1399               	bcf	25,7	;volatile
  2159  0E94  0008               	return
  2160  0E95                     __end_of_internal_16:	
  2161                           
  2162                           	psect	text3
  2163  0EC0                     __ptext3:	
  2164 ;; *************** function _Lcd_Write_Integer *****************
  2165 ;; Defined at:
  2166 ;;		line 213 in file "LCD.c"
  2167 ;; Parameters:    Size  Location     Type
  2168 ;;  v               2   15[BANK0 ] int 
  2169 ;; Auto vars:     Size  Location     Type
  2170 ;;  buf             8   17[BANK0 ] unsigned char [8]
  2171 ;; Return value:  Size  Location     Type
  2172 ;;                  1    wreg      void 
  2173 ;; Registers used:
  2174 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2175 ;; Tracked objects:
  2176 ;;		On entry : 0/0
  2177 ;;		On exit  : 0/0
  2178 ;;		Unchanged: 0/0
  2179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2180 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2181 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2183 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2184 ;;Total ram usage:       10 bytes
  2185 ;; Hardware stack levels used:    1
  2186 ;; Hardware stack levels required when called:    3
  2187 ;; This function calls:
  2188 ;;		_Lcd_Write_String
  2189 ;;		_itoa
  2190 ;; This function is called by:
  2191 ;;		_main
  2192 ;; This function uses a non-reentrant model
  2193 ;;
  2194                           
  2195                           
  2196                           ;psect for function _Lcd_Write_Integer
  2197  0EC0                     _Lcd_Write_Integer:	
  2198                           
  2199                           ;LCD.c: 215: unsigned char buf[8];;LCD.c: 217: Lcd_Write_String(itoa(buf, v, 10));
  2200                           
  2201                           ;incstack = 0
  2202                           ; Regs used in _Lcd_Write_Integer: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2203  0EC0  0020               	movlb	0	; select bank0
  2204  0EC1  0830               	movf	Lcd_Write_Integer@v+1,w
  2205  0EC2  00A5               	movwf	itoa@val+1
  2206  0EC3  082F               	movf	Lcd_Write_Integer@v,w
  2207  0EC4  00A4               	movwf	itoa@val
  2208  0EC5  300A               	movlw	10
  2209  0EC6  00A6               	movwf	itoa@base
  2210  0EC7  3000               	movlw	0
  2211  0EC8  00A7               	movwf	itoa@base+1
  2212  0EC9  3031               	movlw	(low (Lcd_Write_Integer@buf| 0))& (0+255)
  2213  0ECA  318F  275A  318E   	fcall	_itoa
  2214  0ECD  0020               	movlb	0	; select bank0
  2215  0ECE  00AA               	movwf	Lcd_Write_String@a
  2216  0ECF  3000               	movlw	0
  2217  0ED0  00AB               	movwf	Lcd_Write_String@a+1
  2218  0ED1  318F  2720         	fcall	_Lcd_Write_String
  2219  0ED3  0008               	return
  2220  0ED4                     __end_of_Lcd_Write_Integer:	
  2221                           
  2222                           	psect	text4
  2223  0F5A                     __ptext4:	
  2224 ;; *************** function _itoa *****************
  2225 ;; Defined at:
  2226 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\itoa.c"
  2227 ;; Parameters:    Size  Location     Type
  2228 ;;  buf             1    wreg     PTR unsigned char 
  2229 ;;		 -> Lcd_Write_Integer@buf(8), 
  2230 ;;  val             2    4[BANK0 ] int 
  2231 ;;  base            2    6[BANK0 ] int 
  2232 ;; Auto vars:     Size  Location     Type
  2233 ;;  buf             1    9[BANK0 ] PTR unsigned char 
  2234 ;;		 -> Lcd_Write_Integer@buf(8), 
  2235 ;;  cp              1    8[BANK0 ] PTR unsigned char 
  2236 ;;		 -> Lcd_Write_Integer@buf(8), 
  2237 ;; Return value:  Size  Location     Type
  2238 ;;                  1    wreg      PTR unsigned char 
  2239 ;; Registers used:
  2240 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2241 ;; Tracked objects:
  2242 ;;		On entry : 0/0
  2243 ;;		On exit  : 0/0
  2244 ;;		Unchanged: 0/0
  2245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2246 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2247 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2248 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2249 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2250 ;;Total ram usage:        7 bytes
  2251 ;; Hardware stack levels used:    1
  2252 ;; Hardware stack levels required when called:    2
  2253 ;; This function calls:
  2254 ;;		_utoa
  2255 ;; This function is called by:
  2256 ;;		_Lcd_Write_Integer
  2257 ;; This function uses a non-reentrant model
  2258 ;;
  2259                           
  2260                           
  2261                           ;psect for function _itoa
  2262  0F5A                     _itoa:	
  2263                           
  2264                           ;incstack = 0
  2265                           ; Regs used in _itoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2266                           ;itoa@buf stored from wreg
  2267  0F5A  0020               	movlb	0	; select bank0
  2268  0F5B  00A9               	movwf	itoa@buf
  2269  0F5C  0829               	movf	itoa@buf,w
  2270  0F5D  00FD               	movwf	??_itoa
  2271  0F5E  087D               	movf	??_itoa,w
  2272  0F5F  00A8               	movwf	itoa@cp
  2273  0F60  1FA5               	btfss	itoa@val+1,7
  2274  0F61  2F72               	goto	l2031
  2275  0F62  302D               	movlw	45
  2276  0F63  00FD               	movwf	??_itoa
  2277  0F64  0829               	movf	itoa@buf,w
  2278  0F65  0086               	movwf	6
  2279  0F66  0187               	clrf	7
  2280  0F67  087D               	movf	??_itoa,w
  2281  0F68  0081               	movwf	1
  2282  0F69  3001               	movlw	1
  2283  0F6A  00FD               	movwf	??_itoa
  2284  0F6B  087D               	movf	??_itoa,w
  2285  0F6C  07A9               	addwf	itoa@buf,f
  2286  0F6D  09A4               	comf	itoa@val,f
  2287  0F6E  09A5               	comf	itoa@val+1,f
  2288  0F6F  0AA4               	incf	itoa@val,f
  2289  0F70  1903               	skipnz
  2290  0F71  0AA5               	incf	itoa@val+1,f
  2291  0F72                     l2031:	
  2292  0F72  0825               	movf	itoa@val+1,w
  2293  0F73  00F9               	movwf	utoa@val+1
  2294  0F74  0824               	movf	itoa@val,w
  2295  0F75  00F8               	movwf	utoa@val
  2296  0F76  0827               	movf	itoa@base+1,w
  2297  0F77  00FB               	movwf	utoa@base+1
  2298  0F78  0826               	movf	itoa@base,w
  2299  0F79  00FA               	movwf	utoa@base
  2300  0F7A  0829               	movf	itoa@buf,w
  2301  0F7B  3181  2181         	fcall	_utoa
  2302  0F7D  0020               	movlb	0	; select bank0
  2303  0F7E  0828               	movf	itoa@cp,w
  2304  0F7F  0008               	return
  2305  0F80                     __end_of_itoa:	
  2306                           
  2307                           	psect	text5
  2308  0181                     __ptext5:	
  2309 ;; *************** function _utoa *****************
  2310 ;; Defined at:
  2311 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\itoa.c"
  2312 ;; Parameters:    Size  Location     Type
  2313 ;;  buf             1    wreg     PTR unsigned char 
  2314 ;;		 -> Lcd_Write_Integer@buf(8), 
  2315 ;;  val             2    8[COMMON] unsigned int 
  2316 ;;  base            2   10[COMMON] int 
  2317 ;; Auto vars:     Size  Location     Type
  2318 ;;  buf             1    3[BANK0 ] PTR unsigned char 
  2319 ;;		 -> Lcd_Write_Integer@buf(8), 
  2320 ;;  v               2    0[BANK0 ] unsigned int 
  2321 ;;  c               1    2[BANK0 ] unsigned char 
  2322 ;; Return value:  Size  Location     Type
  2323 ;;                  1    wreg      PTR unsigned char 
  2324 ;; Registers used:
  2325 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2326 ;; Tracked objects:
  2327 ;;		On entry : 0/0
  2328 ;;		On exit  : 0/0
  2329 ;;		Unchanged: 0/0
  2330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2331 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2332 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2333 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2334 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2335 ;;Total ram usage:        9 bytes
  2336 ;; Hardware stack levels used:    1
  2337 ;; Hardware stack levels required when called:    1
  2338 ;; This function calls:
  2339 ;;		___lwdiv
  2340 ;;		___lwmod
  2341 ;; This function is called by:
  2342 ;;		_itoa
  2343 ;; This function uses a non-reentrant model
  2344 ;;
  2345                           
  2346                           
  2347                           ;psect for function _utoa
  2348  0181                     _utoa:	
  2349                           
  2350                           ;incstack = 0
  2351                           ; Regs used in _utoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2352                           ;utoa@buf stored from wreg
  2353  0181  0020               	movlb	0	; select bank0
  2354  0182  00A3               	movwf	utoa@buf
  2355  0183  0879               	movf	utoa@val+1,w
  2356  0184  00A1               	movwf	utoa@v+1
  2357  0185  0878               	movf	utoa@val,w
  2358  0186  00A0               	movwf	utoa@v
  2359  0187                     l1973:	
  2360  0187  087B               	movf	utoa@base+1,w
  2361  0188  00F1               	movwf	___lwdiv@divisor+1
  2362  0189  087A               	movf	utoa@base,w
  2363  018A  00F0               	movwf	___lwdiv@divisor
  2364  018B  0821               	movf	utoa@v+1,w
  2365  018C  00F3               	movwf	___lwdiv@dividend+1
  2366  018D  0820               	movf	utoa@v,w
  2367  018E  00F2               	movwf	___lwdiv@dividend
  2368  018F  3180  2036  3181   	fcall	___lwdiv
  2369  0192  0871               	movf	?___lwdiv+1,w
  2370  0193  0020               	movlb	0	; select bank0
  2371  0194  00A1               	movwf	utoa@v+1
  2372  0195  0870               	movf	?___lwdiv,w
  2373  0196  00A0               	movwf	utoa@v
  2374  0197  3001               	movlw	1
  2375  0198  00FC               	movwf	??_utoa
  2376  0199  087C               	movf	??_utoa,w
  2377  019A  07A3               	addwf	utoa@buf,f
  2378  019B  0820               	movf	utoa@v,w
  2379  019C  0421               	iorwf	utoa@v+1,w
  2380  019D  1D03               	btfss	3,2
  2381  019E  2987               	goto	l1973
  2382  019F  0823               	movf	utoa@buf,w
  2383  01A0  0086               	movwf	6
  2384  01A1  0187               	clrf	7
  2385  01A2  0181               	clrf	1
  2386  01A3  3001               	movlw	1
  2387  01A4  02A3               	subwf	utoa@buf,f
  2388  01A5                     l1983:	
  2389  01A5  087B               	movf	utoa@base+1,w
  2390  01A6  00F1               	movwf	___lwmod@divisor+1
  2391  01A7  087A               	movf	utoa@base,w
  2392  01A8  00F0               	movwf	___lwmod@divisor
  2393  01A9  0879               	movf	utoa@val+1,w
  2394  01AA  00F3               	movwf	___lwmod@dividend+1
  2395  01AB  0878               	movf	utoa@val,w
  2396  01AC  00F2               	movwf	___lwmod@dividend
  2397  01AD  318F  27D4  3181   	fcall	___lwmod
  2398  01B0  0870               	movf	?___lwmod,w
  2399  01B1  00FC               	movwf	??_utoa
  2400  01B2  087C               	movf	??_utoa,w
  2401  01B3  0020               	movlb	0	; select bank0
  2402  01B4  00A2               	movwf	utoa@c
  2403  01B5  087B               	movf	utoa@base+1,w
  2404  01B6  00F1               	movwf	___lwdiv@divisor+1
  2405  01B7  087A               	movf	utoa@base,w
  2406  01B8  00F0               	movwf	___lwdiv@divisor
  2407  01B9  0879               	movf	utoa@val+1,w
  2408  01BA  00F3               	movwf	___lwdiv@dividend+1
  2409  01BB  0878               	movf	utoa@val,w
  2410  01BC  00F2               	movwf	___lwdiv@dividend
  2411  01BD  3180  2036  3181   	fcall	___lwdiv
  2412  01C0  0871               	movf	?___lwdiv+1,w
  2413  01C1  00F9               	movwf	utoa@val+1
  2414  01C2  0870               	movf	?___lwdiv,w
  2415  01C3  00F8               	movwf	utoa@val
  2416  01C4  300A               	movlw	10
  2417  01C5  0020               	movlb	0	; select bank0
  2418  01C6  0222               	subwf	utoa@c,w
  2419  01C7  1C03               	skipc
  2420  01C8  29CD               	goto	l709
  2421  01C9  3007               	movlw	7
  2422  01CA  00FC               	movwf	??_utoa
  2423  01CB  087C               	movf	??_utoa,w
  2424  01CC  07A2               	addwf	utoa@c,f
  2425  01CD                     l709:	
  2426  01CD  3030               	movlw	48
  2427  01CE  00FC               	movwf	??_utoa
  2428  01CF  087C               	movf	??_utoa,w
  2429  01D0  07A2               	addwf	utoa@c,f
  2430  01D1  0822               	movf	utoa@c,w
  2431  01D2  00FC               	movwf	??_utoa
  2432  01D3  0823               	movf	utoa@buf,w
  2433  01D4  0086               	movwf	6
  2434  01D5  0187               	clrf	7
  2435  01D6  087C               	movf	??_utoa,w
  2436  01D7  0081               	movwf	1
  2437  01D8  3001               	movlw	1
  2438  01D9  02A3               	subwf	utoa@buf,f
  2439  01DA  0878               	movf	utoa@val,w
  2440  01DB  0479               	iorwf	utoa@val+1,w
  2441  01DC  1D03               	btfss	3,2
  2442  01DD  29A5               	goto	l1983
  2443                           
  2444                           ;	Return value of _utoa is never used
  2445  01DE  3001               	movlw	1
  2446  01DF  00FC               	movwf	??_utoa
  2447  01E0  087C               	movf	??_utoa,w
  2448  01E1  07A3               	addwf	utoa@buf,f
  2449  01E2  0008               	return
  2450  01E3                     __end_of_utoa:	
  2451                           
  2452                           	psect	text6
  2453  0FD4                     __ptext6:	
  2454 ;; *************** function ___lwmod *****************
  2455 ;; Defined at:
  2456 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
  2457 ;; Parameters:    Size  Location     Type
  2458 ;;  divisor         2    0[COMMON] unsigned int 
  2459 ;;  dividend        2    2[COMMON] unsigned int 
  2460 ;; Auto vars:     Size  Location     Type
  2461 ;;  counter         1    5[COMMON] unsigned char 
  2462 ;; Return value:  Size  Location     Type
  2463 ;;                  2    0[COMMON] unsigned int 
  2464 ;; Registers used:
  2465 ;;		wreg, status,2, status,0
  2466 ;; Tracked objects:
  2467 ;;		On entry : 0/0
  2468 ;;		On exit  : 0/0
  2469 ;;		Unchanged: 0/0
  2470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2471 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2472 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2473 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2474 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2475 ;;Total ram usage:        6 bytes
  2476 ;; Hardware stack levels used:    1
  2477 ;; This function calls:
  2478 ;;		Nothing
  2479 ;; This function is called by:
  2480 ;;		_utoa
  2481 ;; This function uses a non-reentrant model
  2482 ;;
  2483                           
  2484                           
  2485                           ;psect for function ___lwmod
  2486  0FD4                     ___lwmod:	
  2487                           
  2488                           ;incstack = 0
  2489                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2490  0FD4  0870               	movf	___lwmod@divisor,w
  2491  0FD5  0471               	iorwf	___lwmod@divisor+1,w
  2492  0FD6  1903               	btfsc	3,2
  2493  0FD7  2FFB               	goto	l1707
  2494  0FD8  01F5               	clrf	___lwmod@counter
  2495  0FD9  0AF5               	incf	___lwmod@counter,f
  2496  0FDA                     l1697:	
  2497  0FDA  1BF1               	btfsc	___lwmod@divisor+1,7
  2498  0FDB  2FE6               	goto	l1699
  2499  0FDC  3001               	movlw	1
  2500  0FDD                     u2005:	
  2501  0FDD  35F0               	lslf	___lwmod@divisor,f
  2502  0FDE  0DF1               	rlf	___lwmod@divisor+1,f
  2503  0FDF  0B89               	decfsz	9,f
  2504  0FE0  2FDD               	goto	u2005
  2505  0FE1  3001               	movlw	1
  2506  0FE2  00F4               	movwf	??___lwmod
  2507  0FE3  0874               	movf	??___lwmod,w
  2508  0FE4  07F5               	addwf	___lwmod@counter,f
  2509  0FE5  2FDA               	goto	l1697
  2510  0FE6                     l1699:	
  2511  0FE6  0871               	movf	___lwmod@divisor+1,w
  2512  0FE7  0273               	subwf	___lwmod@dividend+1,w
  2513  0FE8  1D03               	skipz
  2514  0FE9  2FEC               	goto	u2025
  2515  0FEA  0870               	movf	___lwmod@divisor,w
  2516  0FEB  0272               	subwf	___lwmod@dividend,w
  2517  0FEC                     u2025:	
  2518  0FEC  1C03               	skipc
  2519  0FED  2FF2               	goto	l1703
  2520  0FEE  0870               	movf	___lwmod@divisor,w
  2521  0FEF  02F2               	subwf	___lwmod@dividend,f
  2522  0FF0  0871               	movf	___lwmod@divisor+1,w
  2523  0FF1  3BF3               	subwfb	___lwmod@dividend+1,f
  2524  0FF2                     l1703:	
  2525  0FF2  3001               	movlw	1
  2526  0FF3                     u2035:	
  2527  0FF3  36F1               	lsrf	___lwmod@divisor+1,f
  2528  0FF4  0CF0               	rrf	___lwmod@divisor,f
  2529  0FF5  0B89               	decfsz	9,f
  2530  0FF6  2FF3               	goto	u2035
  2531  0FF7  3001               	movlw	1
  2532  0FF8  02F5               	subwf	___lwmod@counter,f
  2533  0FF9  1D03               	btfss	3,2
  2534  0FFA  2FE6               	goto	l1699
  2535  0FFB                     l1707:	
  2536  0FFB  0873               	movf	___lwmod@dividend+1,w
  2537  0FFC  00F1               	movwf	?___lwmod+1
  2538  0FFD  0872               	movf	___lwmod@dividend,w
  2539  0FFE  00F0               	movwf	?___lwmod
  2540  0FFF  0008               	return
  2541  1000                     __end_of___lwmod:	
  2542                           
  2543                           	psect	text7
  2544  0036                     __ptext7:	
  2545 ;; *************** function ___lwdiv *****************
  2546 ;; Defined at:
  2547 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  2548 ;; Parameters:    Size  Location     Type
  2549 ;;  divisor         2    0[COMMON] unsigned int 
  2550 ;;  dividend        2    2[COMMON] unsigned int 
  2551 ;; Auto vars:     Size  Location     Type
  2552 ;;  quotient        2    5[COMMON] unsigned int 
  2553 ;;  counter         1    7[COMMON] unsigned char 
  2554 ;; Return value:  Size  Location     Type
  2555 ;;                  2    0[COMMON] unsigned int 
  2556 ;; Registers used:
  2557 ;;		wreg, status,2, status,0
  2558 ;; Tracked objects:
  2559 ;;		On entry : 0/0
  2560 ;;		On exit  : 0/0
  2561 ;;		Unchanged: 0/0
  2562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2563 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2564 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2565 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2566 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2567 ;;Total ram usage:        8 bytes
  2568 ;; Hardware stack levels used:    1
  2569 ;; This function calls:
  2570 ;;		Nothing
  2571 ;; This function is called by:
  2572 ;;		_utoa
  2573 ;; This function uses a non-reentrant model
  2574 ;;
  2575                           
  2576                           
  2577                           ;psect for function ___lwdiv
  2578  0036                     ___lwdiv:	
  2579                           
  2580                           ;incstack = 0
  2581                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2582  0036  01F5               	clrf	___lwdiv@quotient
  2583  0037  01F6               	clrf	___lwdiv@quotient+1
  2584  0038  0870               	movf	___lwdiv@divisor,w
  2585  0039  0471               	iorwf	___lwdiv@divisor+1,w
  2586  003A  1903               	btfsc	3,2
  2587  003B  2865               	goto	l1685
  2588  003C  01F7               	clrf	___lwdiv@counter
  2589  003D  0AF7               	incf	___lwdiv@counter,f
  2590  003E                     l1673:	
  2591  003E  1BF1               	btfsc	___lwdiv@divisor+1,7
  2592  003F  284A               	goto	l1675
  2593  0040  3001               	movlw	1
  2594  0041                     u1935:	
  2595  0041  35F0               	lslf	___lwdiv@divisor,f
  2596  0042  0DF1               	rlf	___lwdiv@divisor+1,f
  2597  0043  0B89               	decfsz	9,f
  2598  0044  2841               	goto	u1935
  2599  0045  3001               	movlw	1
  2600  0046  00F4               	movwf	??___lwdiv
  2601  0047  0874               	movf	??___lwdiv,w
  2602  0048  07F7               	addwf	___lwdiv@counter,f
  2603  0049  283E               	goto	l1673
  2604  004A                     l1675:	
  2605  004A  3001               	movlw	1
  2606  004B                     u1955:	
  2607  004B  35F5               	lslf	___lwdiv@quotient,f
  2608  004C  0DF6               	rlf	___lwdiv@quotient+1,f
  2609  004D  0B89               	decfsz	9,f
  2610  004E  284B               	goto	u1955
  2611  004F  0871               	movf	___lwdiv@divisor+1,w
  2612  0050  0273               	subwf	___lwdiv@dividend+1,w
  2613  0051  1D03               	skipz
  2614  0052  2855               	goto	u1965
  2615  0053  0870               	movf	___lwdiv@divisor,w
  2616  0054  0272               	subwf	___lwdiv@dividend,w
  2617  0055                     u1965:	
  2618  0055  1C03               	skipc
  2619  0056  285C               	goto	l1681
  2620  0057  0870               	movf	___lwdiv@divisor,w
  2621  0058  02F2               	subwf	___lwdiv@dividend,f
  2622  0059  0871               	movf	___lwdiv@divisor+1,w
  2623  005A  3BF3               	subwfb	___lwdiv@dividend+1,f
  2624  005B  1475               	bsf	___lwdiv@quotient,0
  2625  005C                     l1681:	
  2626  005C  3001               	movlw	1
  2627  005D                     u1975:	
  2628  005D  36F1               	lsrf	___lwdiv@divisor+1,f
  2629  005E  0CF0               	rrf	___lwdiv@divisor,f
  2630  005F  0B89               	decfsz	9,f
  2631  0060  285D               	goto	u1975
  2632  0061  3001               	movlw	1
  2633  0062  02F7               	subwf	___lwdiv@counter,f
  2634  0063  1D03               	btfss	3,2
  2635  0064  284A               	goto	l1675
  2636  0065                     l1685:	
  2637  0065  0876               	movf	___lwdiv@quotient+1,w
  2638  0066  00F1               	movwf	?___lwdiv+1
  2639  0067  0875               	movf	___lwdiv@quotient,w
  2640  0068  00F0               	movwf	?___lwdiv
  2641  0069  0008               	return
  2642  006A                     __end_of___lwdiv:	
  2643                           
  2644                           	psect	text8
  2645  0EEC                     __ptext8:	
  2646 ;; *************** function _Lcd_Write_Float *****************
  2647 ;; Defined at:
  2648 ;;		line 229 in file "LCD.c"
  2649 ;; Parameters:    Size  Location     Type
  2650 ;;  f               3   52[BANK0 ] float 
  2651 ;; Auto vars:     Size  Location     Type
  2652 ;;  status          2   57[BANK0 ] int 
  2653 ;;  buf11           1   59[BANK0 ] PTR unsigned char 
  2654 ;;		 -> ftoa@buf(17), 
  2655 ;; Return value:  Size  Location     Type
  2656 ;;                  1    wreg      void 
  2657 ;; Registers used:
  2658 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2659 ;; Tracked objects:
  2660 ;;		On entry : 0/0
  2661 ;;		On exit  : 0/0
  2662 ;;		Unchanged: 0/0
  2663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2664 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2665 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2666 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2667 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2668 ;;Total ram usage:        8 bytes
  2669 ;; Hardware stack levels used:    1
  2670 ;; Hardware stack levels required when called:    4
  2671 ;; This function calls:
  2672 ;;		_Lcd_Write_String
  2673 ;;		_ftoa
  2674 ;; This function is called by:
  2675 ;;		_main
  2676 ;; This function uses a non-reentrant model
  2677 ;;
  2678                           
  2679                           
  2680                           ;psect for function _Lcd_Write_Float
  2681  0EEC                     _Lcd_Write_Float:	
  2682                           
  2683                           ;LCD.c: 231: char* buf11;;LCD.c: 232: int status;;LCD.c: 234: buf11 = ftoa(f, &status);
  2684                           
  2685                           ;incstack = 0
  2686                           ; Regs used in _Lcd_Write_Float: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2687  0EEC  0020               	movlb	0	; select bank0
  2688  0EED  0854               	movf	Lcd_Write_Float@f,w
  2689  0EEE  00C6               	movwf	ftoa@f
  2690  0EEF  0855               	movf	Lcd_Write_Float@f+1,w
  2691  0EF0  00C7               	movwf	ftoa@f+1
  2692  0EF1  0856               	movf	Lcd_Write_Float@f+2,w
  2693  0EF2  00C8               	movwf	ftoa@f+2
  2694  0EF3  3059               	movlw	(low (Lcd_Write_Float@status| 0))& (0+255)
  2695  0EF4  00D7               	movwf	??_Lcd_Write_Float
  2696  0EF5  0857               	movf	??_Lcd_Write_Float,w
  2697  0EF6  00C9               	movwf	ftoa@status
  2698  0EF7  3182  22BD  318E   	fcall	_ftoa
  2699  0EFA  0020               	movlb	0	; select bank0
  2700  0EFB  00D8               	movwf	??_Lcd_Write_Float+1
  2701  0EFC  0858               	movf	??_Lcd_Write_Float+1,w
  2702  0EFD  00DB               	movwf	Lcd_Write_Float@buf11
  2703                           
  2704                           ;LCD.c: 236: Lcd_Write_String(buf11);
  2705  0EFE  085B               	movf	Lcd_Write_Float@buf11,w
  2706  0EFF  00AA               	movwf	Lcd_Write_String@a
  2707  0F00  3000               	movlw	0
  2708  0F01  00AB               	movwf	Lcd_Write_String@a+1
  2709  0F02  318F  2720         	fcall	_Lcd_Write_String
  2710  0F04  0008               	return
  2711  0F05                     __end_of_Lcd_Write_Float:	
  2712                           
  2713                           	psect	text9
  2714  02BD                     __ptext9:	
  2715 ;; *************** function _ftoa *****************
  2716 ;; Defined at:
  2717 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\ftoa.c"
  2718 ;; Parameters:    Size  Location     Type
  2719 ;;  f               3   38[BANK0 ] float 
  2720 ;;  status          1   41[BANK0 ] PTR int 
  2721 ;;		 -> Lcd_Write_Float@status(2), 
  2722 ;; Auto vars:     Size  Location     Type
  2723 ;;  l               4   47[BANK0 ] unsigned long 
  2724 ;;  rem             4   43[BANK0 ] unsigned long 
  2725 ;;  cp              1   51[BANK0 ] PTR unsigned char 
  2726 ;;		 -> ftoa@buf(17), 
  2727 ;; Return value:  Size  Location     Type
  2728 ;;                  1    wreg      PTR unsigned char 
  2729 ;; Registers used:
  2730 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2731 ;; Tracked objects:
  2732 ;;		On entry : 0/0
  2733 ;;		On exit  : 0/0
  2734 ;;		Unchanged: 0/0
  2735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2736 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2737 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2738 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2739 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2740 ;;Total ram usage:       14 bytes
  2741 ;; Hardware stack levels used:    1
  2742 ;; Hardware stack levels required when called:    3
  2743 ;; This function calls:
  2744 ;;		___ftge
  2745 ;;		___ftmul
  2746 ;;		___ftneg
  2747 ;;		___ftsub
  2748 ;;		___fttol
  2749 ;;		___lltoft
  2750 ;;		_sprintf
  2751 ;; This function is called by:
  2752 ;;		_Lcd_Write_Float
  2753 ;; This function uses a non-reentrant model
  2754 ;;
  2755                           
  2756                           
  2757                           ;psect for function _ftoa
  2758  02BD                     _ftoa:	
  2759                           
  2760                           ;incstack = 0
  2761                           ; Regs used in _ftoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2762  02BD  30A0               	movlw	(low (ftoa@buf| 0))& (0+255)
  2763  02BE  0020               	movlb	0	; select bank0
  2764  02BF  00CA               	movwf	??_ftoa
  2765  02C0  084A               	movf	??_ftoa,w
  2766  02C1  00D3               	movwf	ftoa@cp
  2767  02C2  0846               	movf	ftoa@f,w
  2768  02C3  00F0               	movwf	___ftge@ff1
  2769  02C4  0847               	movf	ftoa@f+1,w
  2770  02C5  00F1               	movwf	___ftge@ff1+1
  2771  02C6  0848               	movf	ftoa@f+2,w
  2772  02C7  00F2               	movwf	___ftge@ff1+2
  2773  02C8  3000               	movlw	0
  2774  02C9  00F3               	movwf	___ftge@ff2
  2775  02CA  3000               	movlw	0
  2776  02CB  00F4               	movwf	___ftge@ff2+1
  2777  02CC  3000               	movlw	0
  2778  02CD  00F5               	movwf	___ftge@ff2+2
  2779  02CE  3180  2009  3182   	fcall	___ftge
  2780  02D1  1803               	btfsc	3,0
  2781  02D2  2AEF               	goto	l2047
  2782  02D3  302D               	movlw	45
  2783  02D4  0020               	movlb	0	; select bank0
  2784  02D5  00CA               	movwf	??_ftoa
  2785  02D6  0853               	movf	ftoa@cp,w
  2786  02D7  0086               	movwf	6
  2787  02D8  0187               	clrf	7
  2788  02D9  084A               	movf	??_ftoa,w
  2789  02DA  0081               	movwf	1
  2790  02DB  3001               	movlw	1
  2791  02DC  00CA               	movwf	??_ftoa
  2792  02DD  084A               	movf	??_ftoa,w
  2793  02DE  07D3               	addwf	ftoa@cp,f
  2794  02DF  0846               	movf	ftoa@f,w
  2795  02E0  00F0               	movwf	___ftneg@f1
  2796  02E1  0847               	movf	ftoa@f+1,w
  2797  02E2  00F1               	movwf	___ftneg@f1+1
  2798  02E3  0848               	movf	ftoa@f+2,w
  2799  02E4  00F2               	movwf	___ftneg@f1+2
  2800  02E5  318E  2684  3182   	fcall	___ftneg
  2801  02E8  0870               	movf	?___ftneg,w
  2802  02E9  0020               	movlb	0	; select bank0
  2803  02EA  00C6               	movwf	ftoa@f
  2804  02EB  0871               	movf	?___ftneg+1,w
  2805  02EC  00C7               	movwf	ftoa@f+1
  2806  02ED  0872               	movf	?___ftneg+2,w
  2807  02EE  00C8               	movwf	ftoa@f+2
  2808  02EF                     l2047:	
  2809  02EF  0020               	movlb	0	; select bank0
  2810  02F0  0846               	movf	ftoa@f,w
  2811  02F1  00AA               	movwf	___fttol@f1
  2812  02F2  0847               	movf	ftoa@f+1,w
  2813  02F3  00AB               	movwf	___fttol@f1+1
  2814  02F4  0848               	movf	ftoa@f+2,w
  2815  02F5  00AC               	movwf	___fttol@f1+2
  2816  02F6  3182  2247  3182   	fcall	___fttol
  2817  02F9  0020               	movlb	0	; select bank0
  2818  02FA  082D               	movf	?___fttol+3,w
  2819  02FB  00D2               	movwf	ftoa@l+3
  2820  02FC  082C               	movf	?___fttol+2,w
  2821  02FD  00D1               	movwf	ftoa@l+2
  2822  02FE  082B               	movf	?___fttol+1,w
  2823  02FF  00D0               	movwf	ftoa@l+1
  2824  0300  082A               	movf	?___fttol,w
  2825  0301  00CF               	movwf	ftoa@l
  2826  0302  0852               	movf	ftoa@l+3,w
  2827  0303  00FB               	movwf	___lltoft@c+3
  2828  0304  0851               	movf	ftoa@l+2,w
  2829  0305  00FA               	movwf	___lltoft@c+2
  2830  0306  0850               	movf	ftoa@l+1,w
  2831  0307  00F9               	movwf	___lltoft@c+1
  2832  0308  084F               	movf	ftoa@l,w
  2833  0309  00F8               	movwf	___lltoft@c
  2834  030A  318F  2780  3182   	fcall	___lltoft
  2835  030D  0878               	movf	?___lltoft,w
  2836  030E  0020               	movlb	0	; select bank0
  2837  030F  00A7               	movwf	___ftsub@f2
  2838  0310  0879               	movf	?___lltoft+1,w
  2839  0311  00A8               	movwf	___ftsub@f2+1
  2840  0312  087A               	movf	?___lltoft+2,w
  2841  0313  00A9               	movwf	___ftsub@f2+2
  2842  0314  0846               	movf	ftoa@f,w
  2843  0315  00AA               	movwf	___ftsub@f1
  2844  0316  0847               	movf	ftoa@f+1,w
  2845  0317  00AB               	movwf	___ftsub@f1+1
  2846  0318  0848               	movf	ftoa@f+2,w
  2847  0319  00AC               	movwf	___ftsub@f1+2
  2848  031A  318F  273C  3182   	fcall	___ftsub
  2849  031D  0020               	movlb	0	; select bank0
  2850  031E  0827               	movf	?___ftsub,w
  2851  031F  00C6               	movwf	ftoa@f
  2852  0320  0828               	movf	?___ftsub+1,w
  2853  0321  00C7               	movwf	ftoa@f+1
  2854  0322  0829               	movf	?___ftsub+2,w
  2855  0323  00C8               	movwf	ftoa@f+2
  2856  0324  0846               	movf	ftoa@f,w
  2857  0325  00FB               	movwf	___ftmul@f2
  2858  0326  0847               	movf	ftoa@f+1,w
  2859  0327  00FC               	movwf	___ftmul@f2+1
  2860  0328  0848               	movf	ftoa@f+2,w
  2861  0329  00FD               	movwf	___ftmul@f2+2
  2862  032A  3024               	movlw	36
  2863  032B  00F8               	movwf	___ftmul@f1
  2864  032C  3074               	movlw	116
  2865  032D  00F9               	movwf	___ftmul@f1+1
  2866  032E  3049               	movlw	73
  2867  032F  00FA               	movwf	___ftmul@f1+2
  2868  0330  3183  235F  3182   	fcall	___ftmul
  2869  0333  0878               	movf	?___ftmul,w
  2870  0334  0020               	movlb	0	; select bank0
  2871  0335  00AA               	movwf	___fttol@f1
  2872  0336  0879               	movf	?___ftmul+1,w
  2873  0337  00AB               	movwf	___fttol@f1+1
  2874  0338  087A               	movf	?___ftmul+2,w
  2875  0339  00AC               	movwf	___fttol@f1+2
  2876  033A  3182  2247  3182   	fcall	___fttol
  2877  033D  0020               	movlb	0	; select bank0
  2878  033E  082D               	movf	?___fttol+3,w
  2879  033F  00CE               	movwf	ftoa@rem+3
  2880  0340  082C               	movf	?___fttol+2,w
  2881  0341  00CD               	movwf	ftoa@rem+2
  2882  0342  082B               	movf	?___fttol+1,w
  2883  0343  00CC               	movwf	ftoa@rem+1
  2884  0344  082A               	movf	?___fttol,w
  2885  0345  00CB               	movwf	ftoa@rem
  2886  0346  3028               	movlw	low (STR_2| (0+32768))
  2887  0347  00AA               	movwf	sprintf@f
  2888  0348  3088               	movlw	high (STR_2| (0+32768))
  2889  0349  00AB               	movwf	sprintf@f+1
  2890  034A  0852               	movf	ftoa@l+3,w
  2891  034B  00AF               	movwf	?_sprintf+5
  2892  034C  0851               	movf	ftoa@l+2,w
  2893  034D  00AE               	movwf	?_sprintf+4
  2894  034E  0850               	movf	ftoa@l+1,w
  2895  034F  00AD               	movwf	?_sprintf+3
  2896  0350  084F               	movf	ftoa@l,w
  2897  0351  00AC               	movwf	?_sprintf+2
  2898  0352  084E               	movf	ftoa@rem+3,w
  2899  0353  00B3               	movwf	?_sprintf+9
  2900  0354  084D               	movf	ftoa@rem+2,w
  2901  0355  00B2               	movwf	?_sprintf+8
  2902  0356  084C               	movf	ftoa@rem+1,w
  2903  0357  00B1               	movwf	?_sprintf+7
  2904  0358  084B               	movf	ftoa@rem,w
  2905  0359  00B0               	movwf	?_sprintf+6
  2906  035A  0853               	movf	ftoa@cp,w
  2907  035B  3186  2632         	fcall	_sprintf
  2908  035D  30A0               	movlw	(low (ftoa@buf| 0))& (0+255)
  2909  035E  0008               	return
  2910  035F                     __end_of_ftoa:	
  2911                           
  2912                           	psect	text10
  2913  0632                     __ptext10:	
  2914 ;; *************** function _sprintf *****************
  2915 ;; Defined at:
  2916 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  2917 ;; Parameters:    Size  Location     Type
  2918 ;;  sp              1    wreg     PTR unsigned char 
  2919 ;;		 -> ftoa@buf(17), 
  2920 ;;  f               2   10[BANK0 ] PTR const unsigned char 
  2921 ;;		 -> STR_2(11), 
  2922 ;; Auto vars:     Size  Location     Type
  2923 ;;  sp              1   32[BANK0 ] PTR unsigned char 
  2924 ;;		 -> ftoa@buf(17), 
  2925 ;;  val             4   28[BANK0 ] unsigned long 
  2926 ;;  tmpval          4    0        struct .
  2927 ;;  prec            2   35[BANK0 ] int 
  2928 ;;  width           2   33[BANK0 ] int 
  2929 ;;  cp              2    0        PTR const unsigned char 
  2930 ;;  len             2    0        unsigned int 
  2931 ;;  c               1   37[BANK0 ] unsigned char 
  2932 ;;  ap              1   27[BANK0 ] PTR void [1]
  2933 ;;		 -> ?_sprintf(2), 
  2934 ;;  flag            1   26[BANK0 ] unsigned char 
  2935 ;; Return value:  Size  Location     Type
  2936 ;;                  2   10[BANK0 ] int 
  2937 ;; Registers used:
  2938 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2939 ;; Tracked objects:
  2940 ;;		On entry : 0/0
  2941 ;;		On exit  : 0/0
  2942 ;;		Unchanged: 0/0
  2943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2944 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2945 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2946 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2947 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2948 ;;Total ram usage:       28 bytes
  2949 ;; Hardware stack levels used:    1
  2950 ;; Hardware stack levels required when called:    1
  2951 ;; This function calls:
  2952 ;;		___lldiv
  2953 ;;		___llmod
  2954 ;;		___wmul
  2955 ;;		_isdigit
  2956 ;; This function is called by:
  2957 ;;		_ftoa
  2958 ;; This function uses a non-reentrant model
  2959 ;;
  2960                           
  2961                           
  2962                           ;psect for function _sprintf
  2963  0632                     _sprintf:	
  2964                           
  2965                           ;incstack = 0
  2966                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2967                           ;sprintf@sp stored from wreg
  2968  0632  0020               	movlb	0	; select bank0
  2969  0633  00C0               	movwf	sprintf@sp
  2970                           
  2971                           ;doprnt.c: 502: va_list ap;;doprnt.c: 507: char c;;doprnt.c: 509: int width;;doprnt.c: 5
      +                          12: int prec;;doprnt.c: 520: unsigned char flag;;doprnt.c: 535: union {;doprnt.c: 536: u
      +                          nsigned long vd;;doprnt.c: 537: double integ;;doprnt.c: 538: } tmpval;;doprnt.c: 540: un
      +                          signed long val;;doprnt.c: 541: unsigned len;;doprnt.c: 542: const char * cp;;doprnt.c: 
      +                          545: *ap = __va_start();
  2972  0634  302C               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  2973  0635  00B4               	movwf	??_sprintf
  2974  0636  0834               	movf	??_sprintf,w
  2975  0637  00BB               	movwf	sprintf@ap
  2976  0638                     l1827:	
  2977                           ;doprnt.c: 548: while((c = *f++)) {
  2978                           
  2979  0638  082B               	movf	sprintf@f+1,w
  2980  0639  00B5               	movwf	??_sprintf+1
  2981  063A  082A               	movf	sprintf@f,w
  2982  063B  00B4               	movwf	??_sprintf
  2983  063C  0AAA               	incf	sprintf@f,f
  2984  063D  1903               	skipnz
  2985  063E  0AAB               	incf	sprintf@f+1,f
  2986  063F  0834               	movf	??_sprintf,w
  2987  0640  0084               	movwf	4
  2988  0641  0835               	movf	??_sprintf+1,w
  2989  0642  0085               	movwf	5
  2990  0643  0800               	movf	0,w	;code access
  2991  0644  00B6               	movwf	??_sprintf+2
  2992  0645  0836               	movf	??_sprintf+2,w
  2993  0646  00C5               	movwf	sprintf@c
  2994  0647  0845               	movf	sprintf@c,w
  2995  0648  1903               	btfsc	3,2
  2996  0649  2FF1               	goto	l1829
  2997                           
  2998                           ;doprnt.c: 550: if(c != '%')
  2999  064A  3025               	movlw	37
  3000  064B  0645               	xorwf	sprintf@c,w
  3001  064C  1903               	btfsc	3,2
  3002  064D  2E5A               	goto	l1739
  3003                           
  3004                           ;doprnt.c: 552: {;doprnt.c: 553: ((*sp++ = (c)));
  3005  064E  0845               	movf	sprintf@c,w
  3006  064F  00B4               	movwf	??_sprintf
  3007  0650  0840               	movf	sprintf@sp,w
  3008  0651  0086               	movwf	6
  3009  0652  0187               	clrf	7
  3010  0653  0834               	movf	??_sprintf,w
  3011  0654  0081               	movwf	1
  3012  0655  3001               	movlw	1
  3013  0656  00B4               	movwf	??_sprintf
  3014  0657  0834               	movf	??_sprintf,w
  3015  0658  07C0               	addwf	sprintf@sp,f
  3016                           
  3017                           ;doprnt.c: 554: continue;
  3018  0659  2E38               	goto	l1827
  3019  065A                     l1739:	
  3020                           
  3021                           ;doprnt.c: 555: };doprnt.c: 558: width = 0;
  3022  065A  01C1               	clrf	sprintf@width
  3023  065B  01C2               	clrf	sprintf@width+1
  3024                           
  3025                           ;doprnt.c: 560: flag = 0;
  3026  065C  01BA               	clrf	sprintf@flag
  3027                           
  3028                           ;doprnt.c: 609: if(isdigit((unsigned)*f)) {
  3029  065D  082A               	movf	sprintf@f,w
  3030  065E  0084               	movwf	4
  3031  065F  082B               	movf	sprintf@f+1,w
  3032  0660  0085               	movwf	5
  3033  0661  0800               	movf	0,w	;code access
  3034  0662  318E  269E  3186   	fcall	_isdigit
  3035  0665  1C03               	btfss	3,0
  3036  0666  2E98               	goto	l1753
  3037                           
  3038                           ;doprnt.c: 610: width = 0;
  3039  0667  0020               	movlb	0	; select bank0
  3040  0668  01C1               	clrf	sprintf@width
  3041  0669  01C2               	clrf	sprintf@width+1
  3042  066A                     l1745:	
  3043                           
  3044                           ;doprnt.c: 612: width *= 10;
  3045  066A  300A               	movlw	10
  3046  066B  00F0               	movwf	___wmul@multiplier
  3047  066C  3000               	movlw	0
  3048  066D  00F1               	movwf	___wmul@multiplier+1
  3049  066E  0020               	movlb	0	; select bank0
  3050  066F  0842               	movf	sprintf@width+1,w
  3051  0670  00F3               	movwf	___wmul@multiplicand+1
  3052  0671  0841               	movf	sprintf@width,w
  3053  0672  00F2               	movwf	___wmul@multiplicand
  3054  0673  318F  2705  3186   	fcall	___wmul
  3055  0676  0871               	movf	?___wmul+1,w
  3056  0677  0020               	movlb	0	; select bank0
  3057  0678  00C2               	movwf	sprintf@width+1
  3058  0679  0870               	movf	?___wmul,w
  3059  067A  00C1               	movwf	sprintf@width
  3060                           
  3061                           ;doprnt.c: 613: width += *f++ - '0';
  3062  067B  082A               	movf	sprintf@f,w
  3063  067C  0084               	movwf	4
  3064  067D  082B               	movf	sprintf@f+1,w
  3065  067E  0085               	movwf	5
  3066  067F  0800               	movf	0,w	;code access
  3067  0680  3ED0               	addlw	208
  3068  0681  00B4               	movwf	??_sprintf
  3069  0682  30FF               	movlw	255
  3070  0683  1803               	skipnc
  3071  0684  3000               	movlw	0
  3072  0685  00B5               	movwf	??_sprintf+1
  3073  0686  0834               	movf	??_sprintf,w
  3074  0687  07C1               	addwf	sprintf@width,f
  3075  0688  0835               	movf	??_sprintf+1,w
  3076  0689  3DC2               	addwfc	sprintf@width+1,f
  3077  068A  3001               	movlw	1
  3078  068B  07AA               	addwf	sprintf@f,f
  3079  068C  3000               	movlw	0
  3080  068D  3DAB               	addwfc	sprintf@f+1,f
  3081                           
  3082                           ;doprnt.c: 614: } while(isdigit((unsigned)*f));
  3083  068E  082A               	movf	sprintf@f,w
  3084  068F  0084               	movwf	4
  3085  0690  082B               	movf	sprintf@f+1,w
  3086  0691  0085               	movwf	5
  3087  0692  0800               	movf	0,w	;code access
  3088  0693  318E  269E  3186   	fcall	_isdigit
  3089  0696  1803               	btfsc	3,0
  3090  0697  2E6A               	goto	l1745
  3091  0698                     l1753:	
  3092                           
  3093                           ;doprnt.c: 620: };doprnt.c: 623: if(*f == '.') {
  3094  0698  0020               	movlb	0	; select bank0
  3095  0699  082A               	movf	sprintf@f,w
  3096  069A  0084               	movwf	4
  3097  069B  082B               	movf	sprintf@f+1,w
  3098  069C  0085               	movwf	5
  3099  069D  0012               	moviw fsr0++
  3100  069E  3A2E               	xorlw	46
  3101  069F  1D03               	btfss	3,2
  3102  06A0  2ED6               	goto	l1765
  3103                           
  3104                           ;doprnt.c: 625: f++;
  3105  06A1  3001               	movlw	1
  3106  06A2  07AA               	addwf	sprintf@f,f
  3107  06A3  3000               	movlw	0
  3108  06A4  3DAB               	addwfc	sprintf@f+1,f
  3109                           
  3110                           ;doprnt.c: 639: {;doprnt.c: 640: prec = 0;
  3111  06A5  01C3               	clrf	sprintf@prec
  3112  06A6  01C4               	clrf	sprintf@prec+1
  3113  06A7                     l1763:	
  3114                           ;doprnt.c: 641: while(isdigit((unsigned)*f))
  3115                           
  3116  06A7  082A               	movf	sprintf@f,w
  3117  06A8  0084               	movwf	4
  3118  06A9  082B               	movf	sprintf@f+1,w
  3119  06AA  0085               	movwf	5
  3120  06AB  0800               	movf	0,w	;code access
  3121  06AC  318E  269E  3186   	fcall	_isdigit
  3122  06AF  1C03               	btfss	3,0
  3123  06B0  2EE0               	goto	l1771
  3124                           
  3125                           ;doprnt.c: 642: prec = prec*10 + *f++ - '0';
  3126  06B1  0020               	movlb	0	; select bank0
  3127  06B2  082A               	movf	sprintf@f,w
  3128  06B3  0084               	movwf	4
  3129  06B4  082B               	movf	sprintf@f+1,w
  3130  06B5  0085               	movwf	5
  3131  06B6  0800               	movf	0,w	;code access
  3132  06B7  00B4               	movwf	??_sprintf
  3133  06B8  01B5               	clrf	??_sprintf+1
  3134  06B9  0844               	movf	sprintf@prec+1,w
  3135  06BA  00F1               	movwf	___wmul@multiplier+1
  3136  06BB  0843               	movf	sprintf@prec,w
  3137  06BC  00F0               	movwf	___wmul@multiplier
  3138  06BD  300A               	movlw	10
  3139  06BE  00F2               	movwf	___wmul@multiplicand
  3140  06BF  3000               	movlw	0
  3141  06C0  00F3               	movwf	___wmul@multiplicand+1
  3142  06C1  318F  2705  3186   	fcall	___wmul
  3143  06C4  0020               	movlb	0	; select bank0
  3144  06C5  0834               	movf	??_sprintf,w
  3145  06C6  0770               	addwf	?___wmul,w
  3146  06C7  00B6               	movwf	??_sprintf+2
  3147  06C8  0835               	movf	??_sprintf+1,w
  3148  06C9  3D71               	addwfc	?___wmul+1,w
  3149  06CA  00B7               	movwf	??_sprintf+3
  3150  06CB  0836               	movf	??_sprintf+2,w
  3151  06CC  3ED0               	addlw	208
  3152  06CD  00C3               	movwf	sprintf@prec
  3153  06CE  30FF               	movlw	255
  3154  06CF  3D37               	addwfc	??_sprintf+3,w
  3155  06D0  00C4               	movwf	sprintf@prec+1
  3156  06D1  3001               	movlw	1
  3157  06D2  07AA               	addwf	sprintf@f,f
  3158  06D3  3000               	movlw	0
  3159  06D4  3DAB               	addwfc	sprintf@f+1,f
  3160  06D5  2EA7               	goto	l1763
  3161  06D6                     l1765:	
  3162                           
  3163                           ;doprnt.c: 645: prec = 0;
  3164  06D6  01C3               	clrf	sprintf@prec
  3165  06D7  01C4               	clrf	sprintf@prec+1
  3166  06D8  2EE0               	goto	l1771
  3167  06D9                     l235:	
  3168                           ;doprnt.c: 660: case 'l':
  3169                           
  3170                           
  3171                           ;doprnt.c: 662: flag |= 0x10;
  3172  06D9  163A               	bsf	sprintf@flag,4
  3173                           
  3174                           ;doprnt.c: 663: goto loop;
  3175  06DA  2EE0               	goto	l1771
  3176  06DB                     l1767:	
  3177                           
  3178                           ;doprnt.c: 837: flag |= 0xC0;
  3179  06DB  30C0               	movlw	192
  3180  06DC  00B4               	movwf	??_sprintf
  3181  06DD  0834               	movf	??_sprintf,w
  3182  06DE  04BA               	iorwf	sprintf@flag,f
  3183                           
  3184                           ;doprnt.c: 838: break;
  3185  06DF  2EF8               	goto	l238
  3186  06E0                     l1771:	
  3187  06E0  0020               	movlb	0	; select bank0
  3188  06E1  082B               	movf	sprintf@f+1,w
  3189  06E2  00B5               	movwf	??_sprintf+1
  3190  06E3  082A               	movf	sprintf@f,w
  3191  06E4  00B4               	movwf	??_sprintf
  3192  06E5  0AAA               	incf	sprintf@f,f
  3193  06E6  1903               	skipnz
  3194  06E7  0AAB               	incf	sprintf@f+1,f
  3195  06E8  0834               	movf	??_sprintf,w
  3196  06E9  0084               	movwf	4
  3197  06EA  0835               	movf	??_sprintf+1,w
  3198  06EB  0085               	movwf	5
  3199  06EC  0800               	movf	0,w	;code access
  3200  06ED  00C5               	movwf	sprintf@c
  3201                           
  3202                           ; Switch size 1, requested type "simple"
  3203                           ; Number of cases is 3, Range of values is 0 to 117
  3204                           ; switch strategies available:
  3205                           ; Name         Instructions Cycles
  3206                           ; simple_byte           10     6 (average)
  3207                           ; direct_byte          242     6 (fixed)
  3208                           ; jumptable            260     6 (fixed)
  3209                           ;	Chosen strategy is simple_byte
  3210  06EE  3A00               	xorlw	0	; case 0
  3211  06EF  1903               	skipnz
  3212  06F0  2FF1               	goto	l1829
  3213  06F1  3A6C               	xorlw	108	; case 108
  3214  06F2  1903               	skipnz
  3215  06F3  2ED9               	goto	l235
  3216  06F4  3A19               	xorlw	25	; case 117
  3217  06F5  1903               	skipnz
  3218  06F6  2EDB               	goto	l1767
  3219  06F7  2E38               	goto	l1827
  3220  06F8                     l238:	
  3221                           
  3222                           ;doprnt.c: 1292: {;doprnt.c: 1300: if(flag & 0x10)
  3223  06F8  1E3A               	btfss	sprintf@flag,4
  3224  06F9  2F07               	goto	l1777
  3225                           
  3226                           ;doprnt.c: 1301: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  3227  06FA  083B               	movf	sprintf@ap,w
  3228  06FB  0086               	movwf	6
  3229  06FC  0187               	clrf	7
  3230  06FD  3F40               	moviw [0]fsr1
  3231  06FE  00BC               	movwf	sprintf@val
  3232  06FF  3F41               	moviw [1]fsr1
  3233  0700  00BD               	movwf	sprintf@val+1
  3234  0701  3F42               	moviw [2]fsr1
  3235  0702  00BE               	movwf	sprintf@val+2
  3236  0703  3F43               	moviw [3]fsr1
  3237  0704  00BF               	movwf	sprintf@val+3
  3238  0705  3004               	movlw	4
  3239  0706  2F15               	goto	L1
  3240  0707                     l1777:	
  3241                           
  3242                           ;doprnt.c: 1302: else;doprnt.c: 1305: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (
      +                          unsigned)0));
  3243  0707  083B               	movf	sprintf@ap,w
  3244  0708  0086               	movwf	6
  3245  0709  0187               	clrf	7
  3246  070A  3F40               	moviw [0]fsr1
  3247  070B  00B4               	movwf	??_sprintf
  3248  070C  3F41               	moviw [1]fsr1
  3249  070D  00B5               	movwf	??_sprintf+1
  3250  070E  0834               	movf	??_sprintf,w
  3251  070F  00BC               	movwf	sprintf@val
  3252  0710  0835               	movf	??_sprintf+1,w
  3253  0711  00BD               	movwf	sprintf@val+1
  3254  0712  01BE               	clrf	sprintf@val+2
  3255  0713  01BF               	clrf	sprintf@val+3
  3256  0714  3002               	movlw	2
  3257  0715                     L1:	
  3258  0715  00B4               	movwf	??_sprintf
  3259  0716  0834               	movf	??_sprintf,w
  3260  0717  07BB               	addwf	sprintf@ap,f
  3261                           
  3262                           ;doprnt.c: 1306: };doprnt.c: 1309: if(prec == 0 && val == 0)
  3263  0718  0843               	movf	sprintf@prec,w
  3264  0719  0444               	iorwf	sprintf@prec+1,w
  3265  071A  1D03               	btfss	3,2
  3266  071B  2F26               	goto	l1787
  3267  071C  083F               	movf	sprintf@val+3,w
  3268  071D  043E               	iorwf	sprintf@val+2,w
  3269  071E  043D               	iorwf	sprintf@val+1,w
  3270  071F  043C               	iorwf	sprintf@val,w
  3271  0720  1D03               	skipz
  3272  0721  2F26               	goto	l1787
  3273                           
  3274                           ;doprnt.c: 1310: prec++;
  3275  0722  3001               	movlw	1
  3276  0723  07C3               	addwf	sprintf@prec,f
  3277  0724  3000               	movlw	0
  3278  0725  3DC4               	addwfc	sprintf@prec+1,f
  3279  0726                     l1787:	
  3280                           
  3281                           ;doprnt.c: 1324: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3282  0726  01C5               	clrf	sprintf@c
  3283  0727  0AC5               	incf	sprintf@c,f
  3284  0728                     l1793:	
  3285                           
  3286                           ;doprnt.c: 1325: if(val < dpowers[c])
  3287  0728  0845               	movf	sprintf@c,w
  3288  0729  00B4               	movwf	??_sprintf
  3289  072A  01B5               	clrf	??_sprintf+1
  3290  072B  35B4               	lslf	??_sprintf,f
  3291  072C  0DB5               	rlf	??_sprintf+1,f
  3292  072D  35B4               	lslf	??_sprintf,f
  3293  072E  0DB5               	rlf	??_sprintf+1,f
  3294  072F  3000               	movlw	low (_dpowers| (0+32768))
  3295  0730  0734               	addwf	??_sprintf,w
  3296  0731  0084               	movwf	4
  3297  0732  3088               	movlw	high (_dpowers| (0+32768))
  3298  0733  3D35               	addwfc	??_sprintf+1,w
  3299  0734  0085               	movwf	5
  3300  0735  3F00               	moviw [0]fsr0
  3301  0736  00B6               	movwf	??_sprintf+2
  3302  0737  3F01               	moviw [1]fsr0
  3303  0738  00B7               	movwf	??_sprintf+3
  3304  0739  3F02               	moviw [2]fsr0
  3305  073A  00B8               	movwf	??_sprintf+4
  3306  073B  3F03               	moviw [3]fsr0
  3307  073C  00B9               	movwf	??_sprintf+5
  3308  073D  0839               	movf	??_sprintf+5,w
  3309  073E  023F               	subwf	sprintf@val+3,w
  3310  073F  1D03               	skipz
  3311  0740  2F4B               	goto	u2145
  3312  0741  0838               	movf	??_sprintf+4,w
  3313  0742  023E               	subwf	sprintf@val+2,w
  3314  0743  1D03               	skipz
  3315  0744  2F4B               	goto	u2145
  3316  0745  0837               	movf	??_sprintf+3,w
  3317  0746  023D               	subwf	sprintf@val+1,w
  3318  0747  1D03               	skipz
  3319  0748  2F4B               	goto	u2145
  3320  0749  0836               	movf	??_sprintf+2,w
  3321  074A  023C               	subwf	sprintf@val,w
  3322  074B                     u2145:	
  3323  074B  1C03               	btfss	3,0
  3324  074C  2F55               	goto	l1799
  3325  074D  3001               	movlw	1
  3326  074E  00B4               	movwf	??_sprintf
  3327  074F  0834               	movf	??_sprintf,w
  3328  0750  07C5               	addwf	sprintf@c,f
  3329  0751  300A               	movlw	10
  3330  0752  0645               	xorwf	sprintf@c,w
  3331  0753  1D03               	btfss	3,2
  3332  0754  2F28               	goto	l1793
  3333  0755                     l1799:	
  3334                           
  3335                           ;doprnt.c: 1358: if(c < prec)
  3336  0755  0844               	movf	sprintf@prec+1,w
  3337  0756  3A80               	xorlw	128
  3338  0757  3C80               	sublw	128
  3339  0758  1D03               	skipz
  3340  0759  2F5C               	goto	u2165
  3341  075A  0843               	movf	sprintf@prec,w
  3342  075B  0245               	subwf	sprintf@c,w
  3343  075C                     u2165:	
  3344  075C  1803               	skipnc
  3345  075D  2F64               	goto	l1803
  3346                           
  3347                           ;doprnt.c: 1359: c = prec;
  3348  075E  0020               	movlb	0	; select bank0
  3349  075F  0843               	movf	sprintf@prec,w
  3350  0760  00B4               	movwf	??_sprintf
  3351  0761  0834               	movf	??_sprintf,w
  3352  0762  00C5               	movwf	sprintf@c
  3353  0763  2F78               	goto	l246
  3354  0764                     l1803:	
  3355                           
  3356                           ;doprnt.c: 1360: else if(prec < c)
  3357  0764  0020               	movlb	0	; select bank0
  3358  0765  0844               	movf	sprintf@prec+1,w
  3359  0766  3A80               	xorlw	128
  3360  0767  00B4               	movwf	??_sprintf
  3361  0768  3080               	movlw	128
  3362  0769  0234               	subwf	??_sprintf,w
  3363  076A  1D03               	skipz
  3364  076B  2F6E               	goto	u2175
  3365  076C  0845               	movf	sprintf@c,w
  3366  076D  0243               	subwf	sprintf@prec,w
  3367  076E                     u2175:	
  3368  076E  1803               	skipnc
  3369  076F  2F78               	goto	l246
  3370                           
  3371                           ;doprnt.c: 1361: prec = c;
  3372  0770  0020               	movlb	0	; select bank0
  3373  0771  0845               	movf	sprintf@c,w
  3374  0772  00B4               	movwf	??_sprintf
  3375  0773  01B5               	clrf	??_sprintf+1
  3376  0774  0834               	movf	??_sprintf,w
  3377  0775  00C3               	movwf	sprintf@prec
  3378  0776  0835               	movf	??_sprintf+1,w
  3379  0777  00C4               	movwf	sprintf@prec+1
  3380  0778                     l246:	
  3381                           
  3382                           ;doprnt.c: 1400: if(width > c)
  3383  0778  0020               	movlb	0	; select bank0
  3384  0779  0842               	movf	sprintf@width+1,w
  3385  077A  3A80               	xorlw	128
  3386  077B  3C80               	sublw	128
  3387  077C  1D03               	skipz
  3388  077D  2F80               	goto	u2185
  3389  077E  0841               	movf	sprintf@width,w
  3390  077F  0245               	subwf	sprintf@c,w
  3391  0780                     u2185:	
  3392  0780  1803               	skipnc
  3393  0781  2F8B               	goto	l1809
  3394                           
  3395                           ;doprnt.c: 1401: width -= c;
  3396  0782  0020               	movlb	0	; select bank0
  3397  0783  0845               	movf	sprintf@c,w
  3398  0784  00B4               	movwf	??_sprintf
  3399  0785  01B5               	clrf	??_sprintf+1
  3400  0786  0834               	movf	??_sprintf,w
  3401  0787  02C1               	subwf	sprintf@width,f
  3402  0788  0835               	movf	??_sprintf+1,w
  3403  0789  3BC2               	subwfb	sprintf@width+1,f
  3404  078A  2F8E               	goto	l1811
  3405  078B                     l1809:	
  3406                           
  3407                           ;doprnt.c: 1402: else;doprnt.c: 1403: width = 0;
  3408  078B  0020               	movlb	0	; select bank0
  3409  078C  01C1               	clrf	sprintf@width
  3410  078D  01C2               	clrf	sprintf@width+1
  3411  078E                     l1811:	
  3412                           
  3413                           ;doprnt.c: 1441: {;doprnt.c: 1443: if(width;doprnt.c: 1447: )
  3414  078E  0841               	movf	sprintf@width,w
  3415  078F  0442               	iorwf	sprintf@width+1,w
  3416  0790  1903               	btfsc	3,2
  3417  0791  2FE6               	goto	l1825
  3418                           
  3419                           ;doprnt.c: 1449: ((*sp++ = (' ')));
  3420  0792  3020               	movlw	32
  3421  0793  00B4               	movwf	??_sprintf
  3422  0794  0840               	movf	sprintf@sp,w
  3423  0795  0086               	movwf	6
  3424  0796  0187               	clrf	7
  3425  0797  0834               	movf	??_sprintf,w
  3426  0798  0081               	movwf	1
  3427  0799  3001               	movlw	1
  3428  079A  00B4               	movwf	??_sprintf
  3429  079B  0834               	movf	??_sprintf,w
  3430  079C  07C0               	addwf	sprintf@sp,f
  3431                           
  3432                           ;doprnt.c: 1450: while(--width);
  3433  079D  30FF               	movlw	255
  3434  079E  07C1               	addwf	sprintf@width,f
  3435  079F  30FF               	movlw	255
  3436  07A0  3DC2               	addwfc	sprintf@width+1,f
  3437  07A1  2F8E               	goto	l1811
  3438  07A2                     l1819:	
  3439                           
  3440                           ;doprnt.c: 1497: {;doprnt.c: 1508: c = (val / dpowers[prec]) % 10 + '0';
  3441  07A2  3000               	movlw	0
  3442  07A3  00A3               	movwf	___llmod@divisor+3
  3443  07A4  3000               	movlw	0
  3444  07A5  00A2               	movwf	___llmod@divisor+2
  3445  07A6  3000               	movlw	0
  3446  07A7  00A1               	movwf	___llmod@divisor+1
  3447  07A8  300A               	movlw	10
  3448  07A9  00A0               	movwf	___llmod@divisor
  3449  07AA  0844               	movf	sprintf@prec+1,w
  3450  07AB  0085               	movwf	5
  3451  07AC  0843               	movf	sprintf@prec,w
  3452  07AD  0084               	movwf	4
  3453  07AE  3584               	lslf	4,f
  3454  07AF  0D85               	rlf	5,f
  3455  07B0  3584               	lslf	4,f
  3456  07B1  0D85               	rlf	5,f
  3457  07B2  3000               	movlw	low (_dpowers| (0+32768))
  3458  07B3  0784               	addwf	4,f
  3459  07B4  3088               	movlw	high (_dpowers| (0+32768))
  3460  07B5  3D85               	addwfc	5,f
  3461  07B6  3F00               	moviw [0]fsr0
  3462  07B7  00F0               	movwf	___lldiv@divisor
  3463  07B8  3F01               	moviw [1]fsr0
  3464  07B9  00F1               	movwf	___lldiv@divisor+1
  3465  07BA  3F02               	moviw [2]fsr0
  3466  07BB  00F2               	movwf	___lldiv@divisor+2
  3467  07BC  3F03               	moviw [3]fsr0
  3468  07BD  00F3               	movwf	___lldiv@divisor+3
  3469  07BE  083F               	movf	sprintf@val+3,w
  3470  07BF  00F7               	movwf	___lldiv@dividend+3
  3471  07C0  083E               	movf	sprintf@val+2,w
  3472  07C1  00F6               	movwf	___lldiv@dividend+2
  3473  07C2  083D               	movf	sprintf@val+1,w
  3474  07C3  00F5               	movwf	___lldiv@dividend+1
  3475  07C4  083C               	movf	sprintf@val,w
  3476  07C5  00F4               	movwf	___lldiv@dividend
  3477  07C6  3181  212F  3186   	fcall	___lldiv
  3478  07C9  0873               	movf	?___lldiv+3,w
  3479  07CA  0020               	movlb	0	; select bank0
  3480  07CB  00A7               	movwf	___llmod@dividend+3
  3481  07CC  0872               	movf	?___lldiv+2,w
  3482  07CD  00A6               	movwf	___llmod@dividend+2
  3483  07CE  0871               	movf	?___lldiv+1,w
  3484  07CF  00A5               	movwf	___llmod@dividend+1
  3485  07D0  0870               	movf	?___lldiv,w
  3486  07D1  00A4               	movwf	___llmod@dividend
  3487  07D2  3180  20EC  3186   	fcall	___llmod
  3488  07D5  0020               	movlb	0	; select bank0
  3489  07D6  0820               	movf	?___llmod,w
  3490  07D7  3E30               	addlw	48
  3491  07D8  00B4               	movwf	??_sprintf
  3492  07D9  0834               	movf	??_sprintf,w
  3493  07DA  00C5               	movwf	sprintf@c
  3494                           
  3495                           ;doprnt.c: 1542: };doprnt.c: 1543: ((*sp++ = (c)));
  3496  07DB  0845               	movf	sprintf@c,w
  3497  07DC  00B4               	movwf	??_sprintf
  3498  07DD  0840               	movf	sprintf@sp,w
  3499  07DE  0086               	movwf	6
  3500  07DF  0187               	clrf	7
  3501  07E0  0834               	movf	??_sprintf,w
  3502  07E1  0081               	movwf	1
  3503  07E2  3001               	movlw	1
  3504  07E3  00B4               	movwf	??_sprintf
  3505  07E4  0834               	movf	??_sprintf,w
  3506  07E5  07C0               	addwf	sprintf@sp,f
  3507  07E6                     l1825:	
  3508  07E6  30FF               	movlw	255
  3509  07E7  07C3               	addwf	sprintf@prec,f
  3510  07E8  30FF               	movlw	255
  3511  07E9  3DC4               	addwfc	sprintf@prec+1,f
  3512  07EA  0A43               	incf	sprintf@prec,w
  3513  07EB  1D03               	skipz
  3514  07EC  2FA2               	goto	l1819
  3515  07ED  0A44               	incf	sprintf@prec+1,w
  3516  07EE  1903               	btfsc	3,2
  3517  07EF  2E38               	goto	l1827
  3518  07F0  2FA2               	goto	l1819
  3519  07F1                     l1829:	
  3520                           
  3521                           ;doprnt.c: 1557: *sp = 0;
  3522  07F1  0840               	movf	sprintf@sp,w
  3523  07F2  0086               	movwf	6
  3524  07F3  0187               	clrf	7
  3525  07F4  0181               	clrf	1
  3526  07F5  0008               	return
  3527  07F6                     __end_of_sprintf:	
  3528                           
  3529                           	psect	text11
  3530  0E9E                     __ptext11:	
  3531 ;; *************** function _isdigit *****************
  3532 ;; Defined at:
  3533 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\isdigit.c"
  3534 ;; Parameters:    Size  Location     Type
  3535 ;;  c               1    wreg     unsigned char 
  3536 ;; Auto vars:     Size  Location     Type
  3537 ;;  c               1    1[COMMON] unsigned char 
  3538 ;; Return value:  Size  Location     Type
  3539 ;;		None               void
  3540 ;; Registers used:
  3541 ;;		wreg, status,2, status,0
  3542 ;; Tracked objects:
  3543 ;;		On entry : 0/0
  3544 ;;		On exit  : 0/0
  3545 ;;		Unchanged: 0/0
  3546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3548 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3550 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3551 ;;Total ram usage:        2 bytes
  3552 ;; Hardware stack levels used:    1
  3553 ;; This function calls:
  3554 ;;		Nothing
  3555 ;; This function is called by:
  3556 ;;		_sprintf
  3557 ;; This function uses a non-reentrant model
  3558 ;;
  3559                           
  3560                           
  3561                           ;psect for function _isdigit
  3562  0E9E                     _isdigit:	
  3563                           
  3564                           ;incstack = 0
  3565                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3566                           ;isdigit@c stored from wreg
  3567  0E9E  00F1               	movwf	isdigit@c
  3568  0E9F  01F0               	clrf	_isdigit$434
  3569  0EA0  303A               	movlw	58
  3570  0EA1  0271               	subwf	isdigit@c,w
  3571  0EA2  1803               	skipnc
  3572  0EA3  2EAA               	goto	l1531
  3573  0EA4  3030               	movlw	48
  3574  0EA5  0271               	subwf	isdigit@c,w
  3575  0EA6  1C03               	skipc
  3576  0EA7  2EAA               	goto	l1531
  3577  0EA8  01F0               	clrf	_isdigit$434
  3578  0EA9  0AF0               	incf	_isdigit$434,f
  3579  0EAA                     l1531:	
  3580  0EAA  0C70               	rrf	_isdigit$434,w
  3581  0EAB  0008               	return
  3582  0EAC                     __end_of_isdigit:	
  3583                           
  3584                           	psect	text12
  3585  0F05                     __ptext12:	
  3586 ;; *************** function ___wmul *****************
  3587 ;; Defined at:
  3588 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
  3589 ;; Parameters:    Size  Location     Type
  3590 ;;  multiplier      2    0[COMMON] unsigned int 
  3591 ;;  multiplicand    2    2[COMMON] unsigned int 
  3592 ;; Auto vars:     Size  Location     Type
  3593 ;;  product         2    4[COMMON] unsigned int 
  3594 ;; Return value:  Size  Location     Type
  3595 ;;                  2    0[COMMON] unsigned int 
  3596 ;; Registers used:
  3597 ;;		wreg, status,2, status,0
  3598 ;; Tracked objects:
  3599 ;;		On entry : 0/0
  3600 ;;		On exit  : 0/0
  3601 ;;		Unchanged: 0/0
  3602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3603 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3604 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3606 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3607 ;;Total ram usage:        6 bytes
  3608 ;; Hardware stack levels used:    1
  3609 ;; This function calls:
  3610 ;;		Nothing
  3611 ;; This function is called by:
  3612 ;;		_sprintf
  3613 ;; This function uses a non-reentrant model
  3614 ;;
  3615                           
  3616                           
  3617                           ;psect for function ___wmul
  3618  0F05                     ___wmul:	
  3619                           
  3620                           ;incstack = 0
  3621                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3622  0F05  01F4               	clrf	___wmul@product
  3623  0F06  01F5               	clrf	___wmul@product+1
  3624  0F07                     l1537:	
  3625  0F07  1C70               	btfss	___wmul@multiplier,0
  3626  0F08  2F0D               	goto	l261
  3627  0F09  0872               	movf	___wmul@multiplicand,w
  3628  0F0A  07F4               	addwf	___wmul@product,f
  3629  0F0B  0873               	movf	___wmul@multiplicand+1,w
  3630  0F0C  3DF5               	addwfc	___wmul@product+1,f
  3631  0F0D                     l261:	
  3632  0F0D  3001               	movlw	1
  3633  0F0E                     u1535:	
  3634  0F0E  35F2               	lslf	___wmul@multiplicand,f
  3635  0F0F  0DF3               	rlf	___wmul@multiplicand+1,f
  3636  0F10  0B89               	decfsz	9,f
  3637  0F11  2F0E               	goto	u1535
  3638  0F12  3001               	movlw	1
  3639  0F13                     u1545:	
  3640  0F13  36F1               	lsrf	___wmul@multiplier+1,f
  3641  0F14  0CF0               	rrf	___wmul@multiplier,f
  3642  0F15  0B89               	decfsz	9,f
  3643  0F16  2F13               	goto	u1545
  3644  0F17  0870               	movf	___wmul@multiplier,w
  3645  0F18  0471               	iorwf	___wmul@multiplier+1,w
  3646  0F19  1D03               	btfss	3,2
  3647  0F1A  2F07               	goto	l1537
  3648  0F1B  0875               	movf	___wmul@product+1,w
  3649  0F1C  00F1               	movwf	?___wmul+1
  3650  0F1D  0874               	movf	___wmul@product,w
  3651  0F1E  00F0               	movwf	?___wmul
  3652  0F1F  0008               	return
  3653  0F20                     __end_of___wmul:	
  3654                           
  3655                           	psect	text13
  3656  00EC                     __ptext13:	
  3657 ;; *************** function ___llmod *****************
  3658 ;; Defined at:
  3659 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\llmod.c"
  3660 ;; Parameters:    Size  Location     Type
  3661 ;;  divisor         4    0[BANK0 ] unsigned long 
  3662 ;;  dividend        4    4[BANK0 ] unsigned long 
  3663 ;; Auto vars:     Size  Location     Type
  3664 ;;  counter         1    9[BANK0 ] unsigned char 
  3665 ;; Return value:  Size  Location     Type
  3666 ;;                  4    0[BANK0 ] unsigned long 
  3667 ;; Registers used:
  3668 ;;		wreg, status,2, status,0
  3669 ;; Tracked objects:
  3670 ;;		On entry : 0/0
  3671 ;;		On exit  : 0/0
  3672 ;;		Unchanged: 0/0
  3673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3674 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3675 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3676 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3677 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3678 ;;Total ram usage:       10 bytes
  3679 ;; Hardware stack levels used:    1
  3680 ;; This function calls:
  3681 ;;		Nothing
  3682 ;; This function is called by:
  3683 ;;		_sprintf
  3684 ;; This function uses a non-reentrant model
  3685 ;;
  3686                           
  3687                           
  3688                           ;psect for function ___llmod
  3689  00EC                     ___llmod:	
  3690                           
  3691                           ;incstack = 0
  3692                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  3693  00EC  0020               	movlb	0	; select bank0
  3694  00ED  0823               	movf	___llmod@divisor+3,w
  3695  00EE  0422               	iorwf	___llmod@divisor+2,w
  3696  00EF  0421               	iorwf	___llmod@divisor+1,w
  3697  00F0  0420               	iorwf	___llmod@divisor,w
  3698  00F1  1903               	skipnz
  3699  00F2  2926               	goto	l1659
  3700  00F3  01A9               	clrf	___llmod@counter
  3701  00F4  0AA9               	incf	___llmod@counter,f
  3702  00F5                     l1649:	
  3703  00F5  1BA3               	btfsc	___llmod@divisor+3,7
  3704  00F6  2903               	goto	l1651
  3705  00F7  3001               	movlw	1
  3706  00F8                     u1875:	
  3707  00F8  35A0               	lslf	___llmod@divisor,f
  3708  00F9  0DA1               	rlf	___llmod@divisor+1,f
  3709  00FA  0DA2               	rlf	___llmod@divisor+2,f
  3710  00FB  0DA3               	rlf	___llmod@divisor+3,f
  3711  00FC  0B89               	decfsz	9,f
  3712  00FD  28F8               	goto	u1875
  3713  00FE  3001               	movlw	1
  3714  00FF  00A8               	movwf	??___llmod
  3715  0100  0828               	movf	??___llmod,w
  3716  0101  07A9               	addwf	___llmod@counter,f
  3717  0102  28F5               	goto	l1649
  3718  0103                     l1651:	
  3719  0103  0823               	movf	___llmod@divisor+3,w
  3720  0104  0227               	subwf	___llmod@dividend+3,w
  3721  0105  1D03               	skipz
  3722  0106  2911               	goto	u1895
  3723  0107  0822               	movf	___llmod@divisor+2,w
  3724  0108  0226               	subwf	___llmod@dividend+2,w
  3725  0109  1D03               	skipz
  3726  010A  2911               	goto	u1895
  3727  010B  0821               	movf	___llmod@divisor+1,w
  3728  010C  0225               	subwf	___llmod@dividend+1,w
  3729  010D  1D03               	skipz
  3730  010E  2911               	goto	u1895
  3731  010F  0820               	movf	___llmod@divisor,w
  3732  0110  0224               	subwf	___llmod@dividend,w
  3733  0111                     u1895:	
  3734  0111  1C03               	skipc
  3735  0112  291B               	goto	l1655
  3736  0113  0820               	movf	___llmod@divisor,w
  3737  0114  02A4               	subwf	___llmod@dividend,f
  3738  0115  0821               	movf	___llmod@divisor+1,w
  3739  0116  3BA5               	subwfb	___llmod@dividend+1,f
  3740  0117  0822               	movf	___llmod@divisor+2,w
  3741  0118  3BA6               	subwfb	___llmod@dividend+2,f
  3742  0119  0823               	movf	___llmod@divisor+3,w
  3743  011A  3BA7               	subwfb	___llmod@dividend+3,f
  3744  011B                     l1655:	
  3745  011B  3001               	movlw	1
  3746  011C                     u1905:	
  3747  011C  36A3               	lsrf	___llmod@divisor+3,f
  3748  011D  0CA2               	rrf	___llmod@divisor+2,f
  3749  011E  0CA1               	rrf	___llmod@divisor+1,f
  3750  011F  0CA0               	rrf	___llmod@divisor,f
  3751  0120  0B89               	decfsz	9,f
  3752  0121  291C               	goto	u1905
  3753  0122  3001               	movlw	1
  3754  0123  02A9               	subwf	___llmod@counter,f
  3755  0124  1D03               	btfss	3,2
  3756  0125  2903               	goto	l1651
  3757  0126                     l1659:	
  3758  0126  0827               	movf	___llmod@dividend+3,w
  3759  0127  00A3               	movwf	?___llmod+3
  3760  0128  0826               	movf	___llmod@dividend+2,w
  3761  0129  00A2               	movwf	?___llmod+2
  3762  012A  0825               	movf	___llmod@dividend+1,w
  3763  012B  00A1               	movwf	?___llmod+1
  3764  012C  0824               	movf	___llmod@dividend,w
  3765  012D  00A0               	movwf	?___llmod
  3766  012E  0008               	return
  3767  012F                     __end_of___llmod:	
  3768                           
  3769                           	psect	text14
  3770  012F                     __ptext14:	
  3771 ;; *************** function ___lldiv *****************
  3772 ;; Defined at:
  3773 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
  3774 ;; Parameters:    Size  Location     Type
  3775 ;;  divisor         4    0[COMMON] unsigned long 
  3776 ;;  dividend        4    4[COMMON] unsigned long 
  3777 ;; Auto vars:     Size  Location     Type
  3778 ;;  quotient        4    9[COMMON] unsigned long 
  3779 ;;  counter         1   13[COMMON] unsigned char 
  3780 ;; Return value:  Size  Location     Type
  3781 ;;                  4    0[COMMON] unsigned long 
  3782 ;; Registers used:
  3783 ;;		wreg, status,2, status,0
  3784 ;; Tracked objects:
  3785 ;;		On entry : 0/0
  3786 ;;		On exit  : 0/0
  3787 ;;		Unchanged: 0/0
  3788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3789 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3790 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3791 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3792 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3793 ;;Total ram usage:       14 bytes
  3794 ;; Hardware stack levels used:    1
  3795 ;; This function calls:
  3796 ;;		Nothing
  3797 ;; This function is called by:
  3798 ;;		_sprintf
  3799 ;; This function uses a non-reentrant model
  3800 ;;
  3801                           
  3802                           
  3803                           ;psect for function ___lldiv
  3804  012F                     ___lldiv:	
  3805                           
  3806                           ;incstack = 0
  3807                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3808  012F  3000               	movlw	0
  3809  0130  00FC               	movwf	___lldiv@quotient+3
  3810  0131  3000               	movlw	0
  3811  0132  00FB               	movwf	___lldiv@quotient+2
  3812  0133  3000               	movlw	0
  3813  0134  00FA               	movwf	___lldiv@quotient+1
  3814  0135  3000               	movlw	0
  3815  0136  00F9               	movwf	___lldiv@quotient
  3816  0137  0873               	movf	___lldiv@divisor+3,w
  3817  0138  0472               	iorwf	___lldiv@divisor+2,w
  3818  0139  0471               	iorwf	___lldiv@divisor+1,w
  3819  013A  0470               	iorwf	___lldiv@divisor,w
  3820  013B  1903               	skipnz
  3821  013C  2978               	goto	l1569
  3822  013D  01FD               	clrf	___lldiv@counter
  3823  013E  0AFD               	incf	___lldiv@counter,f
  3824  013F                     l1555:	
  3825  013F  1BF3               	btfsc	___lldiv@divisor+3,7
  3826  0140  294D               	goto	l1557
  3827  0141  3001               	movlw	1
  3828  0142                     u1575:	
  3829  0142  35F0               	lslf	___lldiv@divisor,f
  3830  0143  0DF1               	rlf	___lldiv@divisor+1,f
  3831  0144  0DF2               	rlf	___lldiv@divisor+2,f
  3832  0145  0DF3               	rlf	___lldiv@divisor+3,f
  3833  0146  0B89               	decfsz	9,f
  3834  0147  2942               	goto	u1575
  3835  0148  3001               	movlw	1
  3836  0149  00F8               	movwf	??___lldiv
  3837  014A  0878               	movf	??___lldiv,w
  3838  014B  07FD               	addwf	___lldiv@counter,f
  3839  014C  293F               	goto	l1555
  3840  014D                     l1557:	
  3841  014D  3001               	movlw	1
  3842  014E                     u1595:	
  3843  014E  35F9               	lslf	___lldiv@quotient,f
  3844  014F  0DFA               	rlf	___lldiv@quotient+1,f
  3845  0150  0DFB               	rlf	___lldiv@quotient+2,f
  3846  0151  0DFC               	rlf	___lldiv@quotient+3,f
  3847  0152  0B89               	decfsz	9,f
  3848  0153  294E               	goto	u1595
  3849  0154  0873               	movf	___lldiv@divisor+3,w
  3850  0155  0277               	subwf	___lldiv@dividend+3,w
  3851  0156  1D03               	skipz
  3852  0157  2962               	goto	u1605
  3853  0158  0872               	movf	___lldiv@divisor+2,w
  3854  0159  0276               	subwf	___lldiv@dividend+2,w
  3855  015A  1D03               	skipz
  3856  015B  2962               	goto	u1605
  3857  015C  0871               	movf	___lldiv@divisor+1,w
  3858  015D  0275               	subwf	___lldiv@dividend+1,w
  3859  015E  1D03               	skipz
  3860  015F  2962               	goto	u1605
  3861  0160  0870               	movf	___lldiv@divisor,w
  3862  0161  0274               	subwf	___lldiv@dividend,w
  3863  0162                     u1605:	
  3864  0162  1C03               	skipc
  3865  0163  296D               	goto	l1565
  3866  0164  0870               	movf	___lldiv@divisor,w
  3867  0165  02F4               	subwf	___lldiv@dividend,f
  3868  0166  0871               	movf	___lldiv@divisor+1,w
  3869  0167  3BF5               	subwfb	___lldiv@dividend+1,f
  3870  0168  0872               	movf	___lldiv@divisor+2,w
  3871  0169  3BF6               	subwfb	___lldiv@dividend+2,f
  3872  016A  0873               	movf	___lldiv@divisor+3,w
  3873  016B  3BF7               	subwfb	___lldiv@dividend+3,f
  3874  016C  1479               	bsf	___lldiv@quotient,0
  3875  016D                     l1565:	
  3876  016D  3001               	movlw	1
  3877  016E                     u1615:	
  3878  016E  36F3               	lsrf	___lldiv@divisor+3,f
  3879  016F  0CF2               	rrf	___lldiv@divisor+2,f
  3880  0170  0CF1               	rrf	___lldiv@divisor+1,f
  3881  0171  0CF0               	rrf	___lldiv@divisor,f
  3882  0172  0B89               	decfsz	9,f
  3883  0173  296E               	goto	u1615
  3884  0174  3001               	movlw	1
  3885  0175  02FD               	subwf	___lldiv@counter,f
  3886  0176  1D03               	btfss	3,2
  3887  0177  294D               	goto	l1557
  3888  0178                     l1569:	
  3889  0178  087C               	movf	___lldiv@quotient+3,w
  3890  0179  00F3               	movwf	?___lldiv+3
  3891  017A  087B               	movf	___lldiv@quotient+2,w
  3892  017B  00F2               	movwf	?___lldiv+2
  3893  017C  087A               	movf	___lldiv@quotient+1,w
  3894  017D  00F1               	movwf	?___lldiv+1
  3895  017E  0879               	movf	___lldiv@quotient,w
  3896  017F  00F0               	movwf	?___lldiv
  3897  0180  0008               	return
  3898  0181                     __end_of___lldiv:	
  3899                           
  3900                           	psect	text15
  3901  0F80                     __ptext15:	
  3902 ;; *************** function ___lltoft *****************
  3903 ;; Defined at:
  3904 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lltoft.c"
  3905 ;; Parameters:    Size  Location     Type
  3906 ;;  c               4    8[COMMON] unsigned long 
  3907 ;; Auto vars:     Size  Location     Type
  3908 ;;  exp             1   13[COMMON] unsigned char 
  3909 ;; Return value:  Size  Location     Type
  3910 ;;                  3    8[COMMON] float 
  3911 ;; Registers used:
  3912 ;;		wreg, status,2, status,0, pclath, cstack
  3913 ;; Tracked objects:
  3914 ;;		On entry : 0/0
  3915 ;;		On exit  : 0/0
  3916 ;;		Unchanged: 0/0
  3917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3918 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3919 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3920 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3921 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3922 ;;Total ram usage:        6 bytes
  3923 ;; Hardware stack levels used:    1
  3924 ;; Hardware stack levels required when called:    1
  3925 ;; This function calls:
  3926 ;;		___ftpack
  3927 ;; This function is called by:
  3928 ;;		_ftoa
  3929 ;; This function uses a non-reentrant model
  3930 ;;
  3931                           
  3932                           
  3933                           ;psect for function ___lltoft
  3934  0F80                     ___lltoft:	
  3935                           
  3936                           ;incstack = 0
  3937                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  3938  0F80  308E               	movlw	142
  3939  0F81  00FC               	movwf	??___lltoft
  3940  0F82  087C               	movf	??___lltoft,w
  3941  0F83  00FD               	movwf	___lltoft@exp
  3942  0F84                     l1965:	
  3943  0F84  30FF               	movlw	255
  3944  0F85  057B               	andwf	___lltoft@c+3,w
  3945  0F86  1903               	btfsc	3,2
  3946  0F87  2F94               	goto	l1967
  3947  0F88  3001               	movlw	1
  3948  0F89                     u2505:	
  3949  0F89  36FB               	lsrf	___lltoft@c+3,f
  3950  0F8A  0CFA               	rrf	___lltoft@c+2,f
  3951  0F8B  0CF9               	rrf	___lltoft@c+1,f
  3952  0F8C  0CF8               	rrf	___lltoft@c,f
  3953  0F8D  0B89               	decfsz	9,f
  3954  0F8E  2F89               	goto	u2505
  3955  0F8F  3001               	movlw	1
  3956  0F90  00FC               	movwf	??___lltoft
  3957  0F91  087C               	movf	??___lltoft,w
  3958  0F92  07FD               	addwf	___lltoft@exp,f
  3959  0F93  2F84               	goto	l1965
  3960  0F94                     l1967:	
  3961  0F94  0878               	movf	___lltoft@c,w
  3962  0F95  00F0               	movwf	___ftpack@arg
  3963  0F96  0879               	movf	___lltoft@c+1,w
  3964  0F97  00F1               	movwf	___ftpack@arg+1
  3965  0F98  087A               	movf	___lltoft@c+2,w
  3966  0F99  00F2               	movwf	___ftpack@arg+2
  3967  0F9A  087D               	movf	___lltoft@exp,w
  3968  0F9B  00FC               	movwf	??___lltoft
  3969  0F9C  087C               	movf	??___lltoft,w
  3970  0F9D  00F3               	movwf	___ftpack@exp
  3971  0F9E  01F4               	clrf	___ftpack@sign
  3972  0F9F  3181  21E3         	fcall	___ftpack
  3973  0FA1  0870               	movf	?___ftpack,w
  3974  0FA2  00F8               	movwf	?___lltoft
  3975  0FA3  0871               	movf	?___ftpack+1,w
  3976  0FA4  00F9               	movwf	?___lltoft+1
  3977  0FA5  0872               	movf	?___ftpack+2,w
  3978  0FA6  00FA               	movwf	?___lltoft+2
  3979  0FA7  0008               	return
  3980  0FA8                     __end_of___lltoft:	
  3981                           
  3982                           	psect	text16
  3983  0247                     __ptext16:	
  3984 ;; *************** function ___fttol *****************
  3985 ;; Defined at:
  3986 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fttol.c"
  3987 ;; Parameters:    Size  Location     Type
  3988 ;;  f1              3   10[BANK0 ] float 
  3989 ;; Auto vars:     Size  Location     Type
  3990 ;;  lval            4   19[BANK0 ] unsigned long 
  3991 ;;  exp1            1   23[BANK0 ] unsigned char 
  3992 ;;  sign1           1   18[BANK0 ] unsigned char 
  3993 ;; Return value:  Size  Location     Type
  3994 ;;                  4   10[BANK0 ] long 
  3995 ;; Registers used:
  3996 ;;		wreg, status,2, status,0
  3997 ;; Tracked objects:
  3998 ;;		On entry : 0/0
  3999 ;;		On exit  : 0/0
  4000 ;;		Unchanged: 0/0
  4001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4002 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4003 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4004 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4005 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4006 ;;Total ram usage:       14 bytes
  4007 ;; Hardware stack levels used:    1
  4008 ;; This function calls:
  4009 ;;		Nothing
  4010 ;; This function is called by:
  4011 ;;		_ftoa
  4012 ;; This function uses a non-reentrant model
  4013 ;;
  4014                           
  4015                           
  4016                           ;psect for function ___fttol
  4017  0247                     ___fttol:	
  4018                           
  4019                           ;incstack = 0
  4020                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  4021  0247  0020               	movlb	0	; select bank0
  4022  0248  082A               	movf	___fttol@f1,w
  4023  0249  00AE               	movwf	??___fttol
  4024  024A  082B               	movf	___fttol@f1+1,w
  4025  024B  00AF               	movwf	??___fttol+1
  4026  024C  082C               	movf	___fttol@f1+2,w
  4027  024D  00B0               	movwf	??___fttol+2
  4028  024E  1003               	clrc
  4029  024F  0D2F               	rlf	??___fttol+1,w
  4030  0250  0D30               	rlf	??___fttol+2,w
  4031  0251  00B1               	movwf	??___fttol+3
  4032  0252  0831               	movf	??___fttol+3,w
  4033  0253  00B7               	movwf	___fttol@exp1
  4034  0254  0837               	movf	___fttol@exp1,w
  4035  0255  1D03               	btfss	3,2
  4036  0256  2A60               	goto	l1925
  4037  0257                     l1921:	
  4038  0257  3000               	movlw	0
  4039  0258  00AD               	movwf	?___fttol+3
  4040  0259  3000               	movlw	0
  4041  025A  00AC               	movwf	?___fttol+2
  4042  025B  3000               	movlw	0
  4043  025C  00AB               	movwf	?___fttol+1
  4044  025D  3000               	movlw	0
  4045  025E  00AA               	movwf	?___fttol
  4046  025F  0008               	return
  4047  0260                     l1925:	
  4048  0260  082A               	movf	___fttol@f1,w
  4049  0261  00AE               	movwf	??___fttol
  4050  0262  082B               	movf	___fttol@f1+1,w
  4051  0263  00AF               	movwf	??___fttol+1
  4052  0264  082C               	movf	___fttol@f1+2,w
  4053  0265  00B0               	movwf	??___fttol+2
  4054  0266  3017               	movlw	23
  4055  0267                     u2415:	
  4056  0267  36B0               	lsrf	??___fttol+2,f
  4057  0268  0CAF               	rrf	??___fttol+1,f
  4058  0269  0CAE               	rrf	??___fttol,f
  4059  026A  0B89               	decfsz	9,f
  4060  026B  2A67               	goto	u2415
  4061  026C  082E               	movf	??___fttol,w
  4062  026D  00B1               	movwf	??___fttol+3
  4063  026E  0831               	movf	??___fttol+3,w
  4064  026F  00B2               	movwf	___fttol@sign1
  4065  0270  17AB               	bsf	___fttol@f1+1,7
  4066  0271  30FF               	movlw	255
  4067  0272  05AA               	andwf	___fttol@f1,f
  4068  0273  30FF               	movlw	255
  4069  0274  05AB               	andwf	___fttol@f1+1,f
  4070  0275  3000               	movlw	0
  4071  0276  05AC               	andwf	___fttol@f1+2,f
  4072  0277  082A               	movf	___fttol@f1,w
  4073  0278  00B3               	movwf	___fttol@lval
  4074  0279  082B               	movf	___fttol@f1+1,w
  4075  027A  00B4               	movwf	___fttol@lval+1
  4076  027B  082C               	movf	___fttol@f1+2,w
  4077  027C  00B5               	movwf	___fttol@lval+2
  4078  027D  01B6               	clrf	___fttol@lval+3
  4079  027E  308E               	movlw	142
  4080  027F  02B7               	subwf	___fttol@exp1,f
  4081  0280  1FB7               	btfss	___fttol@exp1,7
  4082  0281  2A95               	goto	l1945
  4083  0282  0837               	movf	___fttol@exp1,w
  4084  0283  3A80               	xorlw	128
  4085  0284  3E8F               	addlw	143
  4086  0285  1C03               	btfss	3,0
  4087  0286  2A57               	goto	l1921
  4088  0287                     l1943:	
  4089  0287  3001               	movlw	1
  4090  0288                     u2445:	
  4091  0288  36B6               	lsrf	___fttol@lval+3,f
  4092  0289  0CB5               	rrf	___fttol@lval+2,f
  4093  028A  0CB4               	rrf	___fttol@lval+1,f
  4094  028B  0CB3               	rrf	___fttol@lval,f
  4095  028C  0B89               	decfsz	9,f
  4096  028D  2A88               	goto	u2445
  4097  028E  3001               	movlw	1
  4098  028F  00AE               	movwf	??___fttol
  4099  0290  082E               	movf	??___fttol,w
  4100  0291  07B7               	addwf	___fttol@exp1,f
  4101  0292  1903               	btfsc	3,2
  4102  0293  2AA6               	goto	l1953
  4103  0294  2A87               	goto	l1943
  4104  0295                     l1945:	
  4105  0295  3018               	movlw	24
  4106  0296  0237               	subwf	___fttol@exp1,w
  4107  0297  1803               	btfsc	3,0
  4108  0298  2A57               	goto	l1921
  4109  0299                     l564:	
  4110  0299  0837               	movf	___fttol@exp1,w
  4111  029A  1903               	btfsc	3,2
  4112  029B  2AA6               	goto	l1953
  4113  029C  3001               	movlw	1
  4114  029D                     u2475:	
  4115  029D  35B3               	lslf	___fttol@lval,f
  4116  029E  0DB4               	rlf	___fttol@lval+1,f
  4117  029F  0DB5               	rlf	___fttol@lval+2,f
  4118  02A0  0DB6               	rlf	___fttol@lval+3,f
  4119  02A1  0B89               	decfsz	9,f
  4120  02A2  2A9D               	goto	u2475
  4121  02A3  3001               	movlw	1
  4122  02A4  02B7               	subwf	___fttol@exp1,f
  4123  02A5  2A99               	goto	l564
  4124  02A6                     l1953:	
  4125  02A6  0832               	movf	___fttol@sign1,w
  4126  02A7  1903               	btfsc	3,2
  4127  02A8  2AB4               	goto	l1957
  4128  02A9  09B3               	comf	___fttol@lval,f
  4129  02AA  09B4               	comf	___fttol@lval+1,f
  4130  02AB  09B5               	comf	___fttol@lval+2,f
  4131  02AC  09B6               	comf	___fttol@lval+3,f
  4132  02AD  0AB3               	incf	___fttol@lval,f
  4133  02AE  1903               	skipnz
  4134  02AF  0AB4               	incf	___fttol@lval+1,f
  4135  02B0  1903               	skipnz
  4136  02B1  0AB5               	incf	___fttol@lval+2,f
  4137  02B2  1903               	skipnz
  4138  02B3  0AB6               	incf	___fttol@lval+3,f
  4139  02B4                     l1957:	
  4140  02B4  0836               	movf	___fttol@lval+3,w
  4141  02B5  00AD               	movwf	?___fttol+3
  4142  02B6  0835               	movf	___fttol@lval+2,w
  4143  02B7  00AC               	movwf	?___fttol+2
  4144  02B8  0834               	movf	___fttol@lval+1,w
  4145  02B9  00AB               	movwf	?___fttol+1
  4146  02BA  0833               	movf	___fttol@lval,w
  4147  02BB  00AA               	movwf	?___fttol
  4148  02BC  0008               	return
  4149  02BD                     __end_of___fttol:	
  4150                           
  4151                           	psect	text17
  4152  0F3C                     __ptext17:	
  4153 ;; *************** function ___ftsub *****************
  4154 ;; Defined at:
  4155 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\ftsub.c"
  4156 ;; Parameters:    Size  Location     Type
  4157 ;;  f2              3    7[BANK0 ] float 
  4158 ;;  f1              3   10[BANK0 ] float 
  4159 ;; Auto vars:     Size  Location     Type
  4160 ;;		None
  4161 ;; Return value:  Size  Location     Type
  4162 ;;                  3    7[BANK0 ] float 
  4163 ;; Registers used:
  4164 ;;		wreg, status,2, status,0, pclath, cstack
  4165 ;; Tracked objects:
  4166 ;;		On entry : 0/0
  4167 ;;		On exit  : 0/0
  4168 ;;		Unchanged: 0/0
  4169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4170 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4173 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4174 ;;Total ram usage:        6 bytes
  4175 ;; Hardware stack levels used:    1
  4176 ;; Hardware stack levels required when called:    2
  4177 ;; This function calls:
  4178 ;;		___ftadd
  4179 ;; This function is called by:
  4180 ;;		_ftoa
  4181 ;; This function uses a non-reentrant model
  4182 ;;
  4183                           
  4184                           
  4185                           ;psect for function ___ftsub
  4186  0F3C                     ___ftsub:	
  4187                           
  4188                           ;incstack = 0
  4189                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  4190  0F3C  0020               	movlb	0	; select bank0
  4191  0F3D  0829               	movf	___ftsub@f2+2,w
  4192  0F3E  0428               	iorwf	___ftsub@f2+1,w
  4193  0F3F  0427               	iorwf	___ftsub@f2,w
  4194  0F40  1903               	skipnz
  4195  0F41  2F44               	goto	l1915
  4196  0F42  3080               	movlw	128
  4197  0F43  06A9               	xorwf	___ftsub@f2+2,f
  4198  0F44                     l1915:	
  4199  0F44  082A               	movf	___ftsub@f1,w
  4200  0F45  00F8               	movwf	___ftadd@f1
  4201  0F46  082B               	movf	___ftsub@f1+1,w
  4202  0F47  00F9               	movwf	___ftadd@f1+1
  4203  0F48  082C               	movf	___ftsub@f1+2,w
  4204  0F49  00FA               	movwf	___ftadd@f1+2
  4205  0F4A  0827               	movf	___ftsub@f2,w
  4206  0F4B  00FB               	movwf	___ftadd@f2
  4207  0F4C  0828               	movf	___ftsub@f2+1,w
  4208  0F4D  00FC               	movwf	___ftadd@f2+1
  4209  0F4E  0829               	movf	___ftsub@f2+2,w
  4210  0F4F  00FD               	movwf	___ftadd@f2+2
  4211  0F50  3184  2412         	fcall	___ftadd
  4212  0F52  0878               	movf	?___ftadd,w
  4213  0F53  0020               	movlb	0	; select bank0
  4214  0F54  00A7               	movwf	?___ftsub
  4215  0F55  0879               	movf	?___ftadd+1,w
  4216  0F56  00A8               	movwf	?___ftsub+1
  4217  0F57  087A               	movf	?___ftadd+2,w
  4218  0F58  00A9               	movwf	?___ftsub+2
  4219  0F59  0008               	return
  4220  0F5A                     __end_of___ftsub:	
  4221                           
  4222                           	psect	text18
  4223  0412                     __ptext18:	
  4224 ;; *************** function ___ftadd *****************
  4225 ;; Defined at:
  4226 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\ftadd.c"
  4227 ;; Parameters:    Size  Location     Type
  4228 ;;  f1              3    8[COMMON] float 
  4229 ;;  f2              3   11[COMMON] float 
  4230 ;; Auto vars:     Size  Location     Type
  4231 ;;  exp1            1    6[BANK0 ] unsigned char 
  4232 ;;  exp2            1    5[BANK0 ] unsigned char 
  4233 ;;  sign            1    4[BANK0 ] unsigned char 
  4234 ;; Return value:  Size  Location     Type
  4235 ;;                  3    8[COMMON] float 
  4236 ;; Registers used:
  4237 ;;		wreg, status,2, status,0, pclath, cstack
  4238 ;; Tracked objects:
  4239 ;;		On entry : 0/0
  4240 ;;		On exit  : 0/0
  4241 ;;		Unchanged: 0/0
  4242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4243 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4244 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4245 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4246 ;;      Totals:         6       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4247 ;;Total ram usage:       13 bytes
  4248 ;; Hardware stack levels used:    1
  4249 ;; Hardware stack levels required when called:    1
  4250 ;; This function calls:
  4251 ;;		___ftpack
  4252 ;; This function is called by:
  4253 ;;		_main
  4254 ;;		___ftsub
  4255 ;; This function uses a non-reentrant model
  4256 ;;
  4257                           
  4258                           
  4259                           ;psect for function ___ftadd
  4260  0412                     ___ftadd:	
  4261                           
  4262                           ;incstack = 0
  4263                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  4264  0412  0878               	movf	___ftadd@f1,w
  4265  0413  0020               	movlb	0	; select bank0
  4266  0414  00A0               	movwf	??___ftadd
  4267  0415  0879               	movf	___ftadd@f1+1,w
  4268  0416  00A1               	movwf	??___ftadd+1
  4269  0417  087A               	movf	___ftadd@f1+2,w
  4270  0418  00A2               	movwf	??___ftadd+2
  4271  0419  1003               	clrc
  4272  041A  0D21               	rlf	??___ftadd+1,w
  4273  041B  0D22               	rlf	??___ftadd+2,w
  4274  041C  00A3               	movwf	??___ftadd+3
  4275  041D  0823               	movf	??___ftadd+3,w
  4276  041E  00A6               	movwf	___ftadd@exp1
  4277  041F  087B               	movf	___ftadd@f2,w
  4278  0420  00A0               	movwf	??___ftadd
  4279  0421  087C               	movf	___ftadd@f2+1,w
  4280  0422  00A1               	movwf	??___ftadd+1
  4281  0423  087D               	movf	___ftadd@f2+2,w
  4282  0424  00A2               	movwf	??___ftadd+2
  4283  0425  1003               	clrc
  4284  0426  0D21               	rlf	??___ftadd+1,w
  4285  0427  0D22               	rlf	??___ftadd+2,w
  4286  0428  00A3               	movwf	??___ftadd+3
  4287  0429  0823               	movf	??___ftadd+3,w
  4288  042A  00A5               	movwf	___ftadd@exp2
  4289  042B  0826               	movf	___ftadd@exp1,w
  4290  042C  1903               	btfsc	3,2
  4291  042D  2C3A               	goto	l1579
  4292  042E  0825               	movf	___ftadd@exp2,w
  4293  042F  0226               	subwf	___ftadd@exp1,w
  4294  0430  1803               	skipnc
  4295  0431  2C41               	goto	l1583
  4296  0432  0825               	movf	___ftadd@exp2,w
  4297  0433  00A0               	movwf	??___ftadd
  4298  0434  0826               	movf	___ftadd@exp1,w
  4299  0435  02A0               	subwf	??___ftadd,f
  4300  0436  3019               	movlw	25
  4301  0437  0220               	subwf	??___ftadd,w
  4302  0438  1C03               	skipc
  4303  0439  2C41               	goto	l1583
  4304  043A                     l1579:	
  4305  043A  087B               	movf	___ftadd@f2,w
  4306  043B  00F8               	movwf	?___ftadd
  4307  043C  087C               	movf	___ftadd@f2+1,w
  4308  043D  00F9               	movwf	?___ftadd+1
  4309  043E  087D               	movf	___ftadd@f2+2,w
  4310  043F  00FA               	movwf	?___ftadd+2
  4311  0440  0008               	return
  4312  0441                     l1583:	
  4313  0441  0825               	movf	___ftadd@exp2,w
  4314  0442  1903               	btfsc	3,2
  4315  0443  0008               	return
  4316  0444  0826               	movf	___ftadd@exp1,w
  4317  0445  0225               	subwf	___ftadd@exp2,w
  4318  0446  1803               	skipnc
  4319  0447  2C50               	goto	l1589
  4320  0448  0826               	movf	___ftadd@exp1,w
  4321  0449  00A0               	movwf	??___ftadd
  4322  044A  0825               	movf	___ftadd@exp2,w
  4323  044B  02A0               	subwf	??___ftadd,f
  4324  044C  3019               	movlw	25
  4325  044D  0220               	subwf	??___ftadd,w
  4326  044E  1803               	btfsc	3,0
  4327  044F  0008               	return
  4328  0450                     l1589:	
  4329  0450  3006               	movlw	6
  4330  0451  00A0               	movwf	??___ftadd
  4331  0452  0820               	movf	??___ftadd,w
  4332  0453  00A4               	movwf	___ftadd@sign
  4333  0454  1BFA               	btfsc	___ftadd@f1+2,7
  4334  0455  17A4               	bsf	___ftadd@sign,7
  4335  0456  1BFD               	btfsc	___ftadd@f2+2,7
  4336  0457  1724               	bsf	___ftadd@sign,6
  4337  0458  17F9               	bsf	___ftadd@f1+1,7
  4338  0459  30FF               	movlw	255
  4339  045A  05F8               	andwf	___ftadd@f1,f
  4340  045B  30FF               	movlw	255
  4341  045C  05F9               	andwf	___ftadd@f1+1,f
  4342  045D  3000               	movlw	0
  4343  045E  05FA               	andwf	___ftadd@f1+2,f
  4344  045F  17FC               	bsf	___ftadd@f2+1,7
  4345  0460  30FF               	movlw	255
  4346  0461  05FB               	andwf	___ftadd@f2,f
  4347  0462  30FF               	movlw	255
  4348  0463  05FC               	andwf	___ftadd@f2+1,f
  4349  0464  3000               	movlw	0
  4350  0465  05FD               	andwf	___ftadd@f2+2,f
  4351  0466  0825               	movf	___ftadd@exp2,w
  4352  0467  0226               	subwf	___ftadd@exp1,w
  4353  0468  1803               	skipnc
  4354  0469  2C8C               	goto	l1611
  4355  046A                     l1601:	
  4356  046A  3001               	movlw	1
  4357  046B                     u1725:	
  4358  046B  35FB               	lslf	___ftadd@f2,f
  4359  046C  0DFC               	rlf	___ftadd@f2+1,f
  4360  046D  0DFD               	rlf	___ftadd@f2+2,f
  4361  046E  0B89               	decfsz	9,f
  4362  046F  2C6B               	goto	u1725
  4363  0470  3001               	movlw	1
  4364  0471  02A5               	subwf	___ftadd@exp2,f
  4365  0472  0825               	movf	___ftadd@exp2,w
  4366  0473  0626               	xorwf	___ftadd@exp1,w
  4367  0474  1903               	skipnz
  4368  0475  2C87               	goto	l1609
  4369  0476  3001               	movlw	1
  4370  0477  02A4               	subwf	___ftadd@sign,f
  4371  0478  0824               	movf	___ftadd@sign,w
  4372  0479  3907               	andlw	7
  4373  047A  1903               	btfsc	3,2
  4374  047B  2C87               	goto	l1609
  4375  047C  2C6A               	goto	l1601
  4376  047D                     l1607:	
  4377  047D  3001               	movlw	1
  4378  047E                     u1755:	
  4379  047E  36FA               	lsrf	___ftadd@f1+2,f
  4380  047F  0CF9               	rrf	___ftadd@f1+1,f
  4381  0480  0CF8               	rrf	___ftadd@f1,f
  4382  0481  0B89               	decfsz	9,f
  4383  0482  2C7E               	goto	u1755
  4384  0483  3001               	movlw	1
  4385  0484  00A0               	movwf	??___ftadd
  4386  0485  0820               	movf	??___ftadd,w
  4387  0486  07A6               	addwf	___ftadd@exp1,f
  4388  0487                     l1609:	
  4389  0487  0826               	movf	___ftadd@exp1,w
  4390  0488  0625               	xorwf	___ftadd@exp2,w
  4391  0489  1903               	btfsc	3,2
  4392  048A  2CB1               	goto	l504
  4393  048B  2C7D               	goto	l1607
  4394  048C                     l1611:	
  4395  048C  0826               	movf	___ftadd@exp1,w
  4396  048D  0225               	subwf	___ftadd@exp2,w
  4397  048E  1803               	skipnc
  4398  048F  2CB1               	goto	l504
  4399  0490                     l1613:	
  4400  0490  3001               	movlw	1
  4401  0491                     u1785:	
  4402  0491  35F8               	lslf	___ftadd@f1,f
  4403  0492  0DF9               	rlf	___ftadd@f1+1,f
  4404  0493  0DFA               	rlf	___ftadd@f1+2,f
  4405  0494  0B89               	decfsz	9,f
  4406  0495  2C91               	goto	u1785
  4407  0496  3001               	movlw	1
  4408  0497  02A6               	subwf	___ftadd@exp1,f
  4409  0498  0825               	movf	___ftadd@exp2,w
  4410  0499  0626               	xorwf	___ftadd@exp1,w
  4411  049A  1903               	skipnz
  4412  049B  2CAD               	goto	l1621
  4413  049C  3001               	movlw	1
  4414  049D  02A4               	subwf	___ftadd@sign,f
  4415  049E  0824               	movf	___ftadd@sign,w
  4416  049F  3907               	andlw	7
  4417  04A0  1903               	btfsc	3,2
  4418  04A1  2CAD               	goto	l1621
  4419  04A2  2C90               	goto	l1613
  4420  04A3                     l1619:	
  4421  04A3  3001               	movlw	1
  4422  04A4                     u1815:	
  4423  04A4  36FD               	lsrf	___ftadd@f2+2,f
  4424  04A5  0CFC               	rrf	___ftadd@f2+1,f
  4425  04A6  0CFB               	rrf	___ftadd@f2,f
  4426  04A7  0B89               	decfsz	9,f
  4427  04A8  2CA4               	goto	u1815
  4428  04A9  3001               	movlw	1
  4429  04AA  00A0               	movwf	??___ftadd
  4430  04AB  0820               	movf	??___ftadd,w
  4431  04AC  07A5               	addwf	___ftadd@exp2,f
  4432  04AD                     l1621:	
  4433  04AD  0826               	movf	___ftadd@exp1,w
  4434  04AE  0625               	xorwf	___ftadd@exp2,w
  4435  04AF  1D03               	skipz
  4436  04B0  2CA3               	goto	l1619
  4437  04B1                     l504:	
  4438  04B1  1FA4               	btfss	___ftadd@sign,7
  4439  04B2  2CC3               	goto	l1625
  4440  04B3  30FF               	movlw	255
  4441  04B4  06F8               	xorwf	___ftadd@f1,f
  4442  04B5  30FF               	movlw	255
  4443  04B6  06F9               	xorwf	___ftadd@f1+1,f
  4444  04B7  30FF               	movlw	255
  4445  04B8  06FA               	xorwf	___ftadd@f1+2,f
  4446  04B9  3001               	movlw	1
  4447  04BA  07F8               	addwf	___ftadd@f1,f
  4448  04BB  3000               	movlw	0
  4449  04BC  1803               	skipnc
  4450  04BD  3001               	movlw	1
  4451  04BE  07F9               	addwf	___ftadd@f1+1,f
  4452  04BF  3000               	movlw	0
  4453  04C0  1803               	skipnc
  4454  04C1  3001               	movlw	1
  4455  04C2  07FA               	addwf	___ftadd@f1+2,f
  4456  04C3                     l1625:	
  4457  04C3  1F24               	btfss	___ftadd@sign,6
  4458  04C4  2CD5               	goto	l1629
  4459  04C5  30FF               	movlw	255
  4460  04C6  06FB               	xorwf	___ftadd@f2,f
  4461  04C7  30FF               	movlw	255
  4462  04C8  06FC               	xorwf	___ftadd@f2+1,f
  4463  04C9  30FF               	movlw	255
  4464  04CA  06FD               	xorwf	___ftadd@f2+2,f
  4465  04CB  3001               	movlw	1
  4466  04CC  07FB               	addwf	___ftadd@f2,f
  4467  04CD  3000               	movlw	0
  4468  04CE  1803               	skipnc
  4469  04CF  3001               	movlw	1
  4470  04D0  07FC               	addwf	___ftadd@f2+1,f
  4471  04D1  3000               	movlw	0
  4472  04D2  1803               	skipnc
  4473  04D3  3001               	movlw	1
  4474  04D4  07FD               	addwf	___ftadd@f2+2,f
  4475  04D5                     l1629:	
  4476  04D5  01A4               	clrf	___ftadd@sign
  4477  04D6  0878               	movf	___ftadd@f1,w
  4478  04D7  07FB               	addwf	___ftadd@f2,f
  4479  04D8  0879               	movf	___ftadd@f1+1,w
  4480  04D9  3DFC               	addwfc	___ftadd@f2+1,f
  4481  04DA  087A               	movf	___ftadd@f1+2,w
  4482  04DB  3DFD               	addwfc	___ftadd@f2+2,f
  4483  04DC  1FFD               	btfss	___ftadd@f2+2,7
  4484  04DD  2CF0               	goto	l1639
  4485  04DE  30FF               	movlw	255
  4486  04DF  06FB               	xorwf	___ftadd@f2,f
  4487  04E0  30FF               	movlw	255
  4488  04E1  06FC               	xorwf	___ftadd@f2+1,f
  4489  04E2  30FF               	movlw	255
  4490  04E3  06FD               	xorwf	___ftadd@f2+2,f
  4491  04E4  3001               	movlw	1
  4492  04E5  07FB               	addwf	___ftadd@f2,f
  4493  04E6  3000               	movlw	0
  4494  04E7  1803               	skipnc
  4495  04E8  3001               	movlw	1
  4496  04E9  07FC               	addwf	___ftadd@f2+1,f
  4497  04EA  3000               	movlw	0
  4498  04EB  1803               	skipnc
  4499  04EC  3001               	movlw	1
  4500  04ED  07FD               	addwf	___ftadd@f2+2,f
  4501  04EE  01A4               	clrf	___ftadd@sign
  4502  04EF  0AA4               	incf	___ftadd@sign,f
  4503  04F0                     l1639:	
  4504  04F0  087B               	movf	___ftadd@f2,w
  4505  04F1  00F0               	movwf	___ftpack@arg
  4506  04F2  087C               	movf	___ftadd@f2+1,w
  4507  04F3  00F1               	movwf	___ftpack@arg+1
  4508  04F4  087D               	movf	___ftadd@f2+2,w
  4509  04F5  00F2               	movwf	___ftpack@arg+2
  4510  04F6  0826               	movf	___ftadd@exp1,w
  4511  04F7  00A0               	movwf	??___ftadd
  4512  04F8  0820               	movf	??___ftadd,w
  4513  04F9  00F3               	movwf	___ftpack@exp
  4514  04FA  0824               	movf	___ftadd@sign,w
  4515  04FB  00A1               	movwf	??___ftadd+1
  4516  04FC  0821               	movf	??___ftadd+1,w
  4517  04FD  00F4               	movwf	___ftpack@sign
  4518  04FE  3181  21E3         	fcall	___ftpack
  4519  0500  0870               	movf	?___ftpack,w
  4520  0501  00F8               	movwf	?___ftadd
  4521  0502  0871               	movf	?___ftpack+1,w
  4522  0503  00F9               	movwf	?___ftadd+1
  4523  0504  0872               	movf	?___ftpack+2,w
  4524  0505  00FA               	movwf	?___ftadd+2
  4525  0506  0008               	return
  4526  0507                     __end_of___ftadd:	
  4527                           
  4528                           	psect	text19
  4529  0E84                     __ptext19:	
  4530 ;; *************** function ___ftneg *****************
  4531 ;; Defined at:
  4532 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\ftneg.c"
  4533 ;; Parameters:    Size  Location     Type
  4534 ;;  f1              3    0[COMMON] float 
  4535 ;; Auto vars:     Size  Location     Type
  4536 ;;		None
  4537 ;; Return value:  Size  Location     Type
  4538 ;;                  3    0[COMMON] float 
  4539 ;; Registers used:
  4540 ;;		wreg
  4541 ;; Tracked objects:
  4542 ;;		On entry : 0/0
  4543 ;;		On exit  : 0/0
  4544 ;;		Unchanged: 0/0
  4545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4546 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4549 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4550 ;;Total ram usage:        3 bytes
  4551 ;; Hardware stack levels used:    1
  4552 ;; This function calls:
  4553 ;;		Nothing
  4554 ;; This function is called by:
  4555 ;;		_ftoa
  4556 ;; This function uses a non-reentrant model
  4557 ;;
  4558                           
  4559                           
  4560                           ;psect for function ___ftneg
  4561  0E84                     ___ftneg:	
  4562                           
  4563                           ;incstack = 0
  4564                           ; Regs used in ___ftneg: [wreg]
  4565  0E84  0872               	movf	___ftneg@f1+2,w
  4566  0E85  0471               	iorwf	___ftneg@f1+1,w
  4567  0E86  0470               	iorwf	___ftneg@f1,w
  4568  0E87  1903               	skipnz
  4569  0E88  0008               	return
  4570  0E89  3080               	movlw	128
  4571  0E8A  06F2               	xorwf	___ftneg@f1+2,f
  4572  0E8B  0008               	return
  4573  0E8C                     __end_of___ftneg:	
  4574                           
  4575                           	psect	text20
  4576  035F                     __ptext20:	
  4577 ;; *************** function ___ftmul *****************
  4578 ;; Defined at:
  4579 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\ftmul.c"
  4580 ;; Parameters:    Size  Location     Type
  4581 ;;  f1              3    8[COMMON] float 
  4582 ;;  f2              3   11[COMMON] float 
  4583 ;; Auto vars:     Size  Location     Type
  4584 ;;  f3_as_produc    3    5[BANK0 ] unsigned um
  4585 ;;  sign            1    9[BANK0 ] unsigned char 
  4586 ;;  cntr            1    8[BANK0 ] unsigned char 
  4587 ;;  exp             1    4[BANK0 ] unsigned char 
  4588 ;; Return value:  Size  Location     Type
  4589 ;;                  3    8[COMMON] float 
  4590 ;; Registers used:
  4591 ;;		wreg, status,2, status,0, pclath, cstack
  4592 ;; Tracked objects:
  4593 ;;		On entry : 0/0
  4594 ;;		On exit  : 0/0
  4595 ;;		Unchanged: 0/0
  4596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4597 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4598 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4599 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4600 ;;      Totals:         6      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4601 ;;Total ram usage:       16 bytes
  4602 ;; Hardware stack levels used:    1
  4603 ;; Hardware stack levels required when called:    1
  4604 ;; This function calls:
  4605 ;;		___ftpack
  4606 ;; This function is called by:
  4607 ;;		_ftoa
  4608 ;; This function uses a non-reentrant model
  4609 ;;
  4610                           
  4611                           
  4612                           ;psect for function ___ftmul
  4613  035F                     ___ftmul:	
  4614                           
  4615                           ;incstack = 0
  4616                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  4617  035F  0878               	movf	___ftmul@f1,w
  4618  0360  0020               	movlb	0	; select bank0
  4619  0361  00A0               	movwf	??___ftmul
  4620  0362  0879               	movf	___ftmul@f1+1,w
  4621  0363  00A1               	movwf	??___ftmul+1
  4622  0364  087A               	movf	___ftmul@f1+2,w
  4623  0365  00A2               	movwf	??___ftmul+2
  4624  0366  1003               	clrc
  4625  0367  0D21               	rlf	??___ftmul+1,w
  4626  0368  0D22               	rlf	??___ftmul+2,w
  4627  0369  00A3               	movwf	??___ftmul+3
  4628  036A  0823               	movf	??___ftmul+3,w
  4629  036B  00A4               	movwf	___ftmul@exp
  4630  036C  0824               	movf	___ftmul@exp,w
  4631  036D  1D03               	btfss	3,2
  4632  036E  2B76               	goto	l1859
  4633  036F  3000               	movlw	0
  4634  0370  00F8               	movwf	?___ftmul
  4635  0371  3000               	movlw	0
  4636  0372  00F9               	movwf	?___ftmul+1
  4637  0373  3000               	movlw	0
  4638  0374  00FA               	movwf	?___ftmul+2
  4639  0375  0008               	return
  4640  0376                     l1859:	
  4641  0376  087B               	movf	___ftmul@f2,w
  4642  0377  00A0               	movwf	??___ftmul
  4643  0378  087C               	movf	___ftmul@f2+1,w
  4644  0379  00A1               	movwf	??___ftmul+1
  4645  037A  087D               	movf	___ftmul@f2+2,w
  4646  037B  00A2               	movwf	??___ftmul+2
  4647  037C  1003               	clrc
  4648  037D  0D21               	rlf	??___ftmul+1,w
  4649  037E  0D22               	rlf	??___ftmul+2,w
  4650  037F  00A3               	movwf	??___ftmul+3
  4651  0380  0823               	movf	??___ftmul+3,w
  4652  0381  00A9               	movwf	___ftmul@sign
  4653  0382  0829               	movf	___ftmul@sign,w
  4654  0383  1D03               	btfss	3,2
  4655  0384  2B8C               	goto	l1865
  4656  0385  3000               	movlw	0
  4657  0386  00F8               	movwf	?___ftmul
  4658  0387  3000               	movlw	0
  4659  0388  00F9               	movwf	?___ftmul+1
  4660  0389  3000               	movlw	0
  4661  038A  00FA               	movwf	?___ftmul+2
  4662  038B  0008               	return
  4663  038C                     l1865:	
  4664  038C  0829               	movf	___ftmul@sign,w
  4665  038D  3E7B               	addlw	123
  4666  038E  00A0               	movwf	??___ftmul
  4667  038F  0820               	movf	??___ftmul,w
  4668  0390  07A4               	addwf	___ftmul@exp,f
  4669  0391  0878               	movf	___ftmul@f1,w
  4670  0392  00A0               	movwf	??___ftmul
  4671  0393  0879               	movf	___ftmul@f1+1,w
  4672  0394  00A1               	movwf	??___ftmul+1
  4673  0395  087A               	movf	___ftmul@f1+2,w
  4674  0396  00A2               	movwf	??___ftmul+2
  4675  0397  3010               	movlw	16
  4676  0398                     u2285:	
  4677  0398  36A2               	lsrf	??___ftmul+2,f
  4678  0399  0CA1               	rrf	??___ftmul+1,f
  4679  039A  0CA0               	rrf	??___ftmul,f
  4680  039B  0B89               	decfsz	9,f
  4681  039C  2B98               	goto	u2285
  4682  039D  0820               	movf	??___ftmul,w
  4683  039E  00A3               	movwf	??___ftmul+3
  4684  039F  0823               	movf	??___ftmul+3,w
  4685  03A0  00A9               	movwf	___ftmul@sign
  4686  03A1  087B               	movf	___ftmul@f2,w
  4687  03A2  00A0               	movwf	??___ftmul
  4688  03A3  087C               	movf	___ftmul@f2+1,w
  4689  03A4  00A1               	movwf	??___ftmul+1
  4690  03A5  087D               	movf	___ftmul@f2+2,w
  4691  03A6  00A2               	movwf	??___ftmul+2
  4692  03A7  3010               	movlw	16
  4693  03A8                     u2295:	
  4694  03A8  36A2               	lsrf	??___ftmul+2,f
  4695  03A9  0CA1               	rrf	??___ftmul+1,f
  4696  03AA  0CA0               	rrf	??___ftmul,f
  4697  03AB  0B89               	decfsz	9,f
  4698  03AC  2BA8               	goto	u2295
  4699  03AD  0820               	movf	??___ftmul,w
  4700  03AE  00A3               	movwf	??___ftmul+3
  4701  03AF  0823               	movf	??___ftmul+3,w
  4702  03B0  06A9               	xorwf	___ftmul@sign,f
  4703  03B1  3080               	movlw	128
  4704  03B2  00A0               	movwf	??___ftmul
  4705  03B3  0820               	movf	??___ftmul,w
  4706  03B4  05A9               	andwf	___ftmul@sign,f
  4707  03B5  17F9               	bsf	___ftmul@f1+1,7
  4708  03B6  17FC               	bsf	___ftmul@f2+1,7
  4709  03B7  30FF               	movlw	255
  4710  03B8  05FB               	andwf	___ftmul@f2,f
  4711  03B9  30FF               	movlw	255
  4712  03BA  05FC               	andwf	___ftmul@f2+1,f
  4713  03BB  3000               	movlw	0
  4714  03BC  05FD               	andwf	___ftmul@f2+2,f
  4715  03BD  3000               	movlw	0
  4716  03BE  00A5               	movwf	___ftmul@f3_as_product
  4717  03BF  3000               	movlw	0
  4718  03C0  00A6               	movwf	___ftmul@f3_as_product+1
  4719  03C1  3000               	movlw	0
  4720  03C2  00A7               	movwf	___ftmul@f3_as_product+2
  4721  03C3  3007               	movlw	7
  4722  03C4  00A0               	movwf	??___ftmul
  4723  03C5  0820               	movf	??___ftmul,w
  4724  03C6  00A8               	movwf	___ftmul@cntr
  4725  03C7                     l1877:	
  4726  03C7  1C78               	btfss	___ftmul@f1,0
  4727  03C8  2BCF               	goto	l1881
  4728  03C9  087B               	movf	___ftmul@f2,w
  4729  03CA  07A5               	addwf	___ftmul@f3_as_product,f
  4730  03CB  087C               	movf	___ftmul@f2+1,w
  4731  03CC  3DA6               	addwfc	___ftmul@f3_as_product+1,f
  4732  03CD  087D               	movf	___ftmul@f2+2,w
  4733  03CE  3DA7               	addwfc	___ftmul@f3_as_product+2,f
  4734  03CF                     l1881:	
  4735  03CF  3001               	movlw	1
  4736  03D0                     u2315:	
  4737  03D0  36FA               	lsrf	___ftmul@f1+2,f
  4738  03D1  0CF9               	rrf	___ftmul@f1+1,f
  4739  03D2  0CF8               	rrf	___ftmul@f1,f
  4740  03D3  0B89               	decfsz	9,f
  4741  03D4  2BD0               	goto	u2315
  4742  03D5  3001               	movlw	1
  4743  03D6                     u2325:	
  4744  03D6  35FB               	lslf	___ftmul@f2,f
  4745  03D7  0DFC               	rlf	___ftmul@f2+1,f
  4746  03D8  0DFD               	rlf	___ftmul@f2+2,f
  4747  03D9  0B89               	decfsz	9,f
  4748  03DA  2BD6               	goto	u2325
  4749  03DB  3001               	movlw	1
  4750  03DC  02A8               	subwf	___ftmul@cntr,f
  4751  03DD  1D03               	btfss	3,2
  4752  03DE  2BC7               	goto	l1877
  4753  03DF  3009               	movlw	9
  4754  03E0  00A0               	movwf	??___ftmul
  4755  03E1  0820               	movf	??___ftmul,w
  4756  03E2  00A8               	movwf	___ftmul@cntr
  4757  03E3                     l1889:	
  4758  03E3  1C78               	btfss	___ftmul@f1,0
  4759  03E4  2BEB               	goto	l1893
  4760  03E5  087B               	movf	___ftmul@f2,w
  4761  03E6  07A5               	addwf	___ftmul@f3_as_product,f
  4762  03E7  087C               	movf	___ftmul@f2+1,w
  4763  03E8  3DA6               	addwfc	___ftmul@f3_as_product+1,f
  4764  03E9  087D               	movf	___ftmul@f2+2,w
  4765  03EA  3DA7               	addwfc	___ftmul@f3_as_product+2,f
  4766  03EB                     l1893:	
  4767  03EB  3001               	movlw	1
  4768  03EC                     u2355:	
  4769  03EC  36FA               	lsrf	___ftmul@f1+2,f
  4770  03ED  0CF9               	rrf	___ftmul@f1+1,f
  4771  03EE  0CF8               	rrf	___ftmul@f1,f
  4772  03EF  0B89               	decfsz	9,f
  4773  03F0  2BEC               	goto	u2355
  4774  03F1  3001               	movlw	1
  4775  03F2                     u2365:	
  4776  03F2  36A7               	lsrf	___ftmul@f3_as_product+2,f
  4777  03F3  0CA6               	rrf	___ftmul@f3_as_product+1,f
  4778  03F4  0CA5               	rrf	___ftmul@f3_as_product,f
  4779  03F5  0B89               	decfsz	9,f
  4780  03F6  2BF2               	goto	u2365
  4781  03F7  3001               	movlw	1
  4782  03F8  02A8               	subwf	___ftmul@cntr,f
  4783  03F9  1D03               	btfss	3,2
  4784  03FA  2BE3               	goto	l1889
  4785  03FB  0825               	movf	___ftmul@f3_as_product,w
  4786  03FC  00F0               	movwf	___ftpack@arg
  4787  03FD  0826               	movf	___ftmul@f3_as_product+1,w
  4788  03FE  00F1               	movwf	___ftpack@arg+1
  4789  03FF  0827               	movf	___ftmul@f3_as_product+2,w
  4790  0400  00F2               	movwf	___ftpack@arg+2
  4791  0401  0824               	movf	___ftmul@exp,w
  4792  0402  00A0               	movwf	??___ftmul
  4793  0403  0820               	movf	??___ftmul,w
  4794  0404  00F3               	movwf	___ftpack@exp
  4795  0405  0829               	movf	___ftmul@sign,w
  4796  0406  00A1               	movwf	??___ftmul+1
  4797  0407  0821               	movf	??___ftmul+1,w
  4798  0408  00F4               	movwf	___ftpack@sign
  4799  0409  3181  21E3         	fcall	___ftpack
  4800  040B  0870               	movf	?___ftpack,w
  4801  040C  00F8               	movwf	?___ftmul
  4802  040D  0871               	movf	?___ftpack+1,w
  4803  040E  00F9               	movwf	?___ftmul+1
  4804  040F  0872               	movf	?___ftpack+2,w
  4805  0410  00FA               	movwf	?___ftmul+2
  4806  0411  0008               	return
  4807  0412                     __end_of___ftmul:	
  4808                           
  4809                           	psect	text21
  4810  01E3                     __ptext21:	
  4811 ;; *************** function ___ftpack *****************
  4812 ;; Defined at:
  4813 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\float.c"
  4814 ;; Parameters:    Size  Location     Type
  4815 ;;  arg             3    0[COMMON] unsigned um
  4816 ;;  exp             1    3[COMMON] unsigned char 
  4817 ;;  sign            1    4[COMMON] unsigned char 
  4818 ;; Auto vars:     Size  Location     Type
  4819 ;;		None
  4820 ;; Return value:  Size  Location     Type
  4821 ;;                  3    0[COMMON] float 
  4822 ;; Registers used:
  4823 ;;		wreg, status,2, status,0
  4824 ;; Tracked objects:
  4825 ;;		On entry : 0/0
  4826 ;;		On exit  : 0/0
  4827 ;;		Unchanged: 0/0
  4828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4829 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4831 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4832 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4833 ;;Total ram usage:        8 bytes
  4834 ;; Hardware stack levels used:    1
  4835 ;; This function calls:
  4836 ;;		Nothing
  4837 ;; This function is called by:
  4838 ;;		___ftadd
  4839 ;;		___ftmul
  4840 ;;		___lltoft
  4841 ;; This function uses a non-reentrant model
  4842 ;;
  4843                           
  4844                           
  4845                           ;psect for function ___ftpack
  4846  01E3                     ___ftpack:	
  4847                           
  4848                           ;incstack = 0
  4849                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  4850  01E3  0873               	movf	___ftpack@exp,w
  4851  01E4  1903               	btfsc	3,2
  4852  01E5  29EB               	goto	l1479
  4853  01E6  0872               	movf	___ftpack@arg+2,w
  4854  01E7  0471               	iorwf	___ftpack@arg+1,w
  4855  01E8  0470               	iorwf	___ftpack@arg,w
  4856  01E9  1D03               	skipz
  4857  01EA  29FC               	goto	l1485
  4858  01EB                     l1479:	
  4859  01EB  3000               	movlw	0
  4860  01EC  00F0               	movwf	?___ftpack
  4861  01ED  3000               	movlw	0
  4862  01EE  00F1               	movwf	?___ftpack+1
  4863  01EF  3000               	movlw	0
  4864  01F0  00F2               	movwf	?___ftpack+2
  4865  01F1  0008               	return
  4866  01F2                     l1483:	
  4867  01F2  3001               	movlw	1
  4868  01F3  00F5               	movwf	??___ftpack
  4869  01F4  0875               	movf	??___ftpack,w
  4870  01F5  07F3               	addwf	___ftpack@exp,f
  4871  01F6  3001               	movlw	1
  4872  01F7                     u1365:	
  4873  01F7  36F2               	lsrf	___ftpack@arg+2,f
  4874  01F8  0CF1               	rrf	___ftpack@arg+1,f
  4875  01F9  0CF0               	rrf	___ftpack@arg,f
  4876  01FA  0B89               	decfsz	9,f
  4877  01FB  29F7               	goto	u1365
  4878  01FC                     l1485:	
  4879  01FC  30FE               	movlw	254
  4880  01FD  0572               	andwf	___ftpack@arg+2,w
  4881  01FE  1903               	btfsc	3,2
  4882  01FF  2A15               	goto	l473
  4883  0200  29F2               	goto	l1483
  4884  0201                     l1487:	
  4885  0201  3001               	movlw	1
  4886  0202  00F5               	movwf	??___ftpack
  4887  0203  0875               	movf	??___ftpack,w
  4888  0204  07F3               	addwf	___ftpack@exp,f
  4889  0205  3001               	movlw	1
  4890  0206  07F0               	addwf	___ftpack@arg,f
  4891  0207  3000               	movlw	0
  4892  0208  1803               	skipnc
  4893  0209  3001               	movlw	1
  4894  020A  07F1               	addwf	___ftpack@arg+1,f
  4895  020B  3000               	movlw	0
  4896  020C  1803               	skipnc
  4897  020D  3001               	movlw	1
  4898  020E  07F2               	addwf	___ftpack@arg+2,f
  4899  020F  3001               	movlw	1
  4900  0210                     u1385:	
  4901  0210  36F2               	lsrf	___ftpack@arg+2,f
  4902  0211  0CF1               	rrf	___ftpack@arg+1,f
  4903  0212  0CF0               	rrf	___ftpack@arg,f
  4904  0213  0B89               	decfsz	9,f
  4905  0214  2A10               	goto	u1385
  4906  0215                     l473:	
  4907  0215  30FF               	movlw	255
  4908  0216  0572               	andwf	___ftpack@arg+2,w
  4909  0217  1903               	btfsc	3,2
  4910  0218  2A26               	goto	l1495
  4911  0219  2A01               	goto	l1487
  4912  021A                     l1497:	
  4913  021A  3002               	movlw	2
  4914  021B  0273               	subwf	___ftpack@exp,w
  4915  021C  1C03               	btfss	3,0
  4916  021D  2A28               	goto	l480
  4917  021E  3001               	movlw	1
  4918  021F  02F3               	subwf	___ftpack@exp,f
  4919  0220  3001               	movlw	1
  4920  0221                     u1405:	
  4921  0221  35F0               	lslf	___ftpack@arg,f
  4922  0222  0DF1               	rlf	___ftpack@arg+1,f
  4923  0223  0DF2               	rlf	___ftpack@arg+2,f
  4924  0224  0B89               	decfsz	9,f
  4925  0225  2A21               	goto	u1405
  4926  0226                     l1495:	
  4927  0226  1FF1               	btfss	___ftpack@arg+1,7
  4928  0227  2A1A               	goto	l1497
  4929  0228                     l480:	
  4930  0228  1873               	btfsc	___ftpack@exp,0
  4931  0229  2A30               	goto	l481
  4932  022A  30FF               	movlw	255
  4933  022B  05F0               	andwf	___ftpack@arg,f
  4934  022C  307F               	movlw	127
  4935  022D  05F1               	andwf	___ftpack@arg+1,f
  4936  022E  30FF               	movlw	255
  4937  022F  05F2               	andwf	___ftpack@arg+2,f
  4938  0230                     l481:	
  4939  0230  1003               	clrc
  4940  0231  0CF3               	rrf	___ftpack@exp,f
  4941  0232  0873               	movf	___ftpack@exp,w
  4942  0233  00F5               	movwf	??___ftpack
  4943  0234  01F6               	clrf	??___ftpack+1
  4944  0235  01F7               	clrf	??___ftpack+2
  4945  0236  3010               	movlw	16
  4946  0237                     u1445:	
  4947  0237  35F5               	lslf	??___ftpack,f
  4948  0238  0DF6               	rlf	??___ftpack+1,f
  4949  0239  0DF7               	rlf	??___ftpack+2,f
  4950  023A  0B89               	decfsz	9,f
  4951  023B  2A37               	goto	u1445
  4952  023C  0875               	movf	??___ftpack,w
  4953  023D  04F0               	iorwf	___ftpack@arg,f
  4954  023E  0876               	movf	??___ftpack+1,w
  4955  023F  04F1               	iorwf	___ftpack@arg+1,f
  4956  0240  0877               	movf	??___ftpack+2,w
  4957  0241  04F2               	iorwf	___ftpack@arg+2,f
  4958  0242  0874               	movf	___ftpack@sign,w
  4959  0243  1903               	btfsc	3,2
  4960  0244  0008               	return
  4961  0245  17F2               	bsf	___ftpack@arg+2,7
  4962  0246  0008               	return
  4963  0247                     __end_of___ftpack:	
  4964                           
  4965                           	psect	text22
  4966  0009                     __ptext22:	
  4967 ;; *************** function ___ftge *****************
  4968 ;; Defined at:
  4969 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\ftge.c"
  4970 ;; Parameters:    Size  Location     Type
  4971 ;;  ff1             3    0[COMMON] float 
  4972 ;;  ff2             3    3[COMMON] float 
  4973 ;; Auto vars:     Size  Location     Type
  4974 ;;		None
  4975 ;; Return value:  Size  Location     Type
  4976 ;;		None               void
  4977 ;; Registers used:
  4978 ;;		wreg, status,2, status,0
  4979 ;; Tracked objects:
  4980 ;;		On entry : 0/0
  4981 ;;		On exit  : 0/0
  4982 ;;		Unchanged: 0/0
  4983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4984 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4987 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4988 ;;Total ram usage:        6 bytes
  4989 ;; Hardware stack levels used:    1
  4990 ;; This function calls:
  4991 ;;		Nothing
  4992 ;; This function is called by:
  4993 ;;		_main
  4994 ;;		_ftoa
  4995 ;; This function uses a non-reentrant model
  4996 ;;
  4997                           
  4998                           
  4999                           ;psect for function ___ftge
  5000  0009                     ___ftge:	
  5001                           
  5002                           ;incstack = 0
  5003                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  5004  0009  1FF2               	btfss	___ftge@ff1+2,7
  5005  000A  2818               	goto	l1837
  5006  000B  0870               	movf	___ftge@ff1,w
  5007  000C  3C00               	sublw	0
  5008  000D  00F0               	movwf	___ftge@ff1
  5009  000E  0871               	movf	___ftge@ff1+1,w
  5010  000F  1C03               	skipc
  5011  0010  0F71               	incfsz	___ftge@ff1+1,w
  5012  0011  3C00               	sublw	0
  5013  0012  00F1               	movwf	___ftge@ff1+1
  5014  0013  0872               	movf	___ftge@ff1+2,w
  5015  0014  1C03               	skipc
  5016  0015  0F72               	incfsz	___ftge@ff1+2,w
  5017  0016  3C80               	sublw	128
  5018  0017  00F2               	movwf	___ftge@ff1+2
  5019  0018                     l1837:	
  5020  0018  1FF5               	btfss	___ftge@ff2+2,7
  5021  0019  2827               	goto	l1841
  5022  001A  0873               	movf	___ftge@ff2,w
  5023  001B  3C00               	sublw	0
  5024  001C  00F3               	movwf	___ftge@ff2
  5025  001D  0874               	movf	___ftge@ff2+1,w
  5026  001E  1C03               	skipc
  5027  001F  0F74               	incfsz	___ftge@ff2+1,w
  5028  0020  3C00               	sublw	0
  5029  0021  00F4               	movwf	___ftge@ff2+1
  5030  0022  0875               	movf	___ftge@ff2+2,w
  5031  0023  1C03               	skipc
  5032  0024  0F75               	incfsz	___ftge@ff2+2,w
  5033  0025  3C80               	sublw	128
  5034  0026  00F5               	movwf	___ftge@ff2+2
  5035  0027                     l1841:	
  5036  0027  3080               	movlw	128
  5037  0028  06F2               	xorwf	___ftge@ff1+2,f
  5038  0029  3080               	movlw	128
  5039  002A  06F5               	xorwf	___ftge@ff2+2,f
  5040  002B  0875               	movf	___ftge@ff2+2,w
  5041  002C  0272               	subwf	___ftge@ff1+2,w
  5042  002D  1D03               	skipz
  5043  002E  0008               	return
  5044  002F  0874               	movf	___ftge@ff2+1,w
  5045  0030  0271               	subwf	___ftge@ff1+1,w
  5046  0031  1D03               	skipz
  5047  0032  0008               	return
  5048  0033  0873               	movf	___ftge@ff2,w
  5049  0034  0270               	subwf	___ftge@ff1,w
  5050  0035  0008               	return
  5051  0036                     __end_of___ftge:	
  5052                           
  5053                           	psect	text23
  5054  0F20                     __ptext23:	
  5055 ;; *************** function _Lcd_Write_String *****************
  5056 ;; Defined at:
  5057 ;;		line 170 in file "LCD.c"
  5058 ;; Parameters:    Size  Location     Type
  5059 ;;  a               2   10[BANK0 ] PTR const unsigned char 
  5060 ;;		 -> ftoa@buf(17), Lcd_Write_Integer@buf(8), STR_1(11), 
  5061 ;; Auto vars:     Size  Location     Type
  5062 ;;  i               2   13[BANK0 ] int 
  5063 ;; Return value:  Size  Location     Type
  5064 ;;                  1    wreg      void 
  5065 ;; Registers used:
  5066 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5067 ;; Tracked objects:
  5068 ;;		On entry : 0/0
  5069 ;;		On exit  : 0/0
  5070 ;;		Unchanged: 0/0
  5071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5072 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5073 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5074 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5075 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5076 ;;Total ram usage:        5 bytes
  5077 ;; Hardware stack levels used:    1
  5078 ;; Hardware stack levels required when called:    2
  5079 ;; This function calls:
  5080 ;;		_Lcd_Write_Char
  5081 ;; This function is called by:
  5082 ;;		_main
  5083 ;;		_Lcd_Write_Integer
  5084 ;;		_Lcd_Write_Float
  5085 ;; This function uses a non-reentrant model
  5086 ;;
  5087                           
  5088                           
  5089                           ;psect for function _Lcd_Write_String
  5090  0F20                     _Lcd_Write_String:	
  5091                           
  5092                           ;LCD.c: 172: int i;;LCD.c: 173: for(i=0;a[i]!='\0';i++)
  5093                           
  5094                           ;incstack = 0
  5095                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5096  0F20  0020               	movlb	0	; select bank0
  5097  0F21  01AD               	clrf	Lcd_Write_String@i
  5098  0F22  01AE               	clrf	Lcd_Write_String@i+1
  5099  0F23                     l2009:	
  5100  0F23  082A               	movf	Lcd_Write_String@a,w
  5101  0F24  072D               	addwf	Lcd_Write_String@i,w
  5102  0F25  0084               	movwf	4
  5103  0F26  082B               	movf	Lcd_Write_String@a+1,w
  5104  0F27  3D2E               	addwfc	Lcd_Write_String@i+1,w
  5105  0F28  0085               	movwf	5
  5106  0F29  0012               	moviw fsr0++
  5107  0F2A  1903               	btfsc	3,2
  5108  0F2B  0008               	return
  5109                           
  5110                           ;LCD.c: 174: Lcd_Write_Char(a[i]);
  5111  0F2C  082A               	movf	Lcd_Write_String@a,w
  5112  0F2D  072D               	addwf	Lcd_Write_String@i,w
  5113  0F2E  0084               	movwf	4
  5114  0F2F  082B               	movf	Lcd_Write_String@a+1,w
  5115  0F30  3D2E               	addwfc	Lcd_Write_String@i+1,w
  5116  0F31  0085               	movwf	5
  5117  0F32  0800               	movf	0,w	;code access
  5118  0F33  318F  27A8  318F   	fcall	_Lcd_Write_Char
  5119  0F36  3001               	movlw	1
  5120  0F37  0020               	movlb	0	; select bank0
  5121  0F38  07AD               	addwf	Lcd_Write_String@i,f
  5122  0F39  3000               	movlw	0
  5123  0F3A  3DAE               	addwfc	Lcd_Write_String@i+1,f
  5124  0F3B  2F23               	goto	l2009
  5125  0F3C                     __end_of_Lcd_Write_String:	
  5126                           
  5127                           	psect	text24
  5128  0FA8                     __ptext24:	
  5129 ;; *************** function _Lcd_Write_Char *****************
  5130 ;; Defined at:
  5131 ;;		line 146 in file "LCD.c"
  5132 ;; Parameters:    Size  Location     Type
  5133 ;;  a               1    wreg     unsigned char 
  5134 ;; Auto vars:     Size  Location     Type
  5135 ;;  a               1    4[COMMON] unsigned char 
  5136 ;;  y               1    3[COMMON] unsigned char 
  5137 ;;  temp            1    2[COMMON] unsigned char 
  5138 ;; Return value:  Size  Location     Type
  5139 ;;                  1    wreg      void 
  5140 ;; Registers used:
  5141 ;;		wreg, status,2, status,0, pclath, cstack
  5142 ;; Tracked objects:
  5143 ;;		On entry : 0/0
  5144 ;;		On exit  : 0/0
  5145 ;;		Unchanged: 0/0
  5146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5148 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5149 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5150 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5151 ;;Total ram usage:        4 bytes
  5152 ;; Hardware stack levels used:    1
  5153 ;; Hardware stack levels required when called:    1
  5154 ;; This function calls:
  5155 ;;		_Lcd_Port
  5156 ;; This function is called by:
  5157 ;;		_Lcd_Write_String
  5158 ;; This function uses a non-reentrant model
  5159 ;;
  5160                           
  5161                           
  5162                           ;psect for function _Lcd_Write_Char
  5163  0FA8                     _Lcd_Write_Char:	
  5164                           
  5165                           ;incstack = 0
  5166                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  5167                           ;Lcd_Write_Char@a stored from wreg
  5168  0FA8  00F4               	movwf	Lcd_Write_Char@a
  5169                           
  5170                           ;LCD.c: 148: char temp,y;;LCD.c: 149: temp = a&0x0F;
  5171  0FA9  0874               	movf	Lcd_Write_Char@a,w
  5172  0FAA  390F               	andlw	15
  5173  0FAB  00F1               	movwf	??_Lcd_Write_Char
  5174  0FAC  0871               	movf	??_Lcd_Write_Char,w
  5175  0FAD  00F2               	movwf	Lcd_Write_Char@temp
  5176                           
  5177                           ;LCD.c: 150: y = a&0xF0;
  5178  0FAE  0874               	movf	Lcd_Write_Char@a,w
  5179  0FAF  39F0               	andlw	240
  5180  0FB0  00F1               	movwf	??_Lcd_Write_Char
  5181  0FB1  0871               	movf	??_Lcd_Write_Char,w
  5182  0FB2  00F3               	movwf	Lcd_Write_Char@y
  5183                           
  5184                           ;LCD.c: 151: RD2 = 1;
  5185  0FB3  0020               	movlb	0	; select bank0
  5186  0FB4  150F               	bsf	15,2	;volatile
  5187                           
  5188                           ;LCD.c: 152: Lcd_Port(y>>4);
  5189  0FB5  0873               	movf	Lcd_Write_Char@y,w
  5190  0FB6  00F1               	movwf	??_Lcd_Write_Char
  5191  0FB7  3004               	movlw	4
  5192  0FB8                     u2055:	
  5193  0FB8  36F1               	lsrf	??_Lcd_Write_Char,f
  5194  0FB9  0B89               	decfsz	9,f
  5195  0FBA  2FB8               	goto	u2055
  5196  0FBB  0871               	movf	??_Lcd_Write_Char,w
  5197  0FBC  318E  26D4  318F   	fcall	_Lcd_Port
  5198                           
  5199                           ;LCD.c: 153: RD3 = 1;
  5200  0FBF  0020               	movlb	0	; select bank0
  5201  0FC0  158F               	bsf	15,3	;volatile
  5202                           
  5203                           ;LCD.c: 154: _delay((unsigned long)((20)*(16000000/4000000.0)));
  5204  0FC1  301A               	movlw	26
  5205  0FC2                     u2777:	
  5206  0FC2  0B89               	decfsz	9,f
  5207  0FC3  2FC2               	goto	u2777
  5208  0FC4  3200               	nop2
  5209                           
  5210                           ;LCD.c: 155: RD3 = 0;
  5211  0FC5  0020               	movlb	0	; select bank0
  5212  0FC6  118F               	bcf	15,3	;volatile
  5213                           
  5214                           ;LCD.c: 156: Lcd_Port(temp);
  5215  0FC7  0872               	movf	Lcd_Write_Char@temp,w
  5216  0FC8  318E  26D4  318F   	fcall	_Lcd_Port
  5217                           
  5218                           ;LCD.c: 157: RD3 = 1;
  5219  0FCB  0020               	movlb	0	; select bank0
  5220  0FCC  158F               	bsf	15,3	;volatile
  5221                           
  5222                           ;LCD.c: 158: _delay((unsigned long)((20)*(16000000/4000000.0)));
  5223  0FCD  301A               	movlw	26
  5224  0FCE                     u2787:	
  5225  0FCE  0B89               	decfsz	9,f
  5226  0FCF  2FCE               	goto	u2787
  5227  0FD0  3200               	nop2
  5228                           
  5229                           ;LCD.c: 159: RD3 = 0;
  5230  0FD1  0020               	movlb	0	; select bank0
  5231  0FD2  118F               	bcf	15,3	;volatile
  5232  0FD3  0008               	return
  5233  0FD4                     __end_of_Lcd_Write_Char:	
  5234                           
  5235                           	psect	text25
  5236  0E7C                     __ptext25:	
  5237 ;; *************** function _Lcd_Shift_Right *****************
  5238 ;; Defined at:
  5239 ;;		line 185 in file "LCD.c"
  5240 ;; Parameters:    Size  Location     Type
  5241 ;;		None
  5242 ;; Auto vars:     Size  Location     Type
  5243 ;;		None
  5244 ;; Return value:  Size  Location     Type
  5245 ;;                  1    wreg      void 
  5246 ;; Registers used:
  5247 ;;		wreg, status,2, status,0, pclath, cstack
  5248 ;; Tracked objects:
  5249 ;;		On entry : 0/0
  5250 ;;		On exit  : 0/0
  5251 ;;		Unchanged: 0/0
  5252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5257 ;;Total ram usage:        0 bytes
  5258 ;; Hardware stack levels used:    1
  5259 ;; Hardware stack levels required when called:    2
  5260 ;; This function calls:
  5261 ;;		_Lcd_Cmd
  5262 ;; This function is called by:
  5263 ;;		_main
  5264 ;; This function uses a non-reentrant model
  5265 ;;
  5266                           
  5267                           
  5268                           ;psect for function _Lcd_Shift_Right
  5269  0E7C                     _Lcd_Shift_Right:	
  5270                           
  5271                           ;LCD.c: 187: Lcd_Cmd(0x01);
  5272                           
  5273                           ;incstack = 0
  5274                           ; Regs used in _Lcd_Shift_Right: [wreg+status,2+status,0+pclath+cstack]
  5275  0E7C  3001               	movlw	1
  5276  0E7D  318E  26AC  318E   	fcall	_Lcd_Cmd
  5277                           
  5278                           ;LCD.c: 188: Lcd_Cmd(0x0C);
  5279  0E80  300C               	movlw	12
  5280  0E81  318E  26AC         	fcall	_Lcd_Cmd
  5281  0E83  0008               	return
  5282  0E84                     __end_of_Lcd_Shift_Right:	
  5283                           
  5284                           	psect	text26
  5285  0E74                     __ptext26:	
  5286 ;; *************** function _Lcd_Shift_Left *****************
  5287 ;; Defined at:
  5288 ;;		line 199 in file "LCD.c"
  5289 ;; Parameters:    Size  Location     Type
  5290 ;;		None
  5291 ;; Auto vars:     Size  Location     Type
  5292 ;;		None
  5293 ;; Return value:  Size  Location     Type
  5294 ;;                  1    wreg      void 
  5295 ;; Registers used:
  5296 ;;		wreg, status,2, status,0, pclath, cstack
  5297 ;; Tracked objects:
  5298 ;;		On entry : 0/0
  5299 ;;		On exit  : 0/0
  5300 ;;		Unchanged: 0/0
  5301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5306 ;;Total ram usage:        0 bytes
  5307 ;; Hardware stack levels used:    1
  5308 ;; Hardware stack levels required when called:    2
  5309 ;; This function calls:
  5310 ;;		_Lcd_Cmd
  5311 ;; This function is called by:
  5312 ;;		_main
  5313 ;; This function uses a non-reentrant model
  5314 ;;
  5315                           
  5316                           
  5317                           ;psect for function _Lcd_Shift_Left
  5318  0E74                     _Lcd_Shift_Left:	
  5319                           
  5320                           ;LCD.c: 201: Lcd_Cmd(0x01);
  5321                           
  5322                           ;incstack = 0
  5323                           ; Regs used in _Lcd_Shift_Left: [wreg+status,2+status,0+pclath+cstack]
  5324  0E74  3001               	movlw	1
  5325  0E75  318E  26AC  318E   	fcall	_Lcd_Cmd
  5326                           
  5327                           ;LCD.c: 202: Lcd_Cmd(0x08);
  5328  0E78  3008               	movlw	8
  5329  0E79  318E  26AC         	fcall	_Lcd_Cmd
  5330  0E7B  0008               	return
  5331  0E7C                     __end_of_Lcd_Shift_Left:	
  5332                           
  5333                           	psect	text27
  5334  006A                     __ptext27:	
  5335 ;; *************** function _Lcd_Set_Cursor *****************
  5336 ;; Defined at:
  5337 ;;		line 90 in file "LCD.c"
  5338 ;; Parameters:    Size  Location     Type
  5339 ;;  a               1    wreg     unsigned char 
  5340 ;;  b               1    3[COMMON] unsigned char 
  5341 ;; Auto vars:     Size  Location     Type
  5342 ;;  a               1    6[COMMON] unsigned char 
  5343 ;;  temp            1    9[COMMON] unsigned char 
  5344 ;;  y               1    8[COMMON] unsigned char 
  5345 ;;  z               1    7[COMMON] unsigned char 
  5346 ;; Return value:  Size  Location     Type
  5347 ;;                  1    wreg      void 
  5348 ;; Registers used:
  5349 ;;		wreg, status,2, status,0, pclath, cstack
  5350 ;; Tracked objects:
  5351 ;;		On entry : 0/0
  5352 ;;		On exit  : 0/0
  5353 ;;		Unchanged: 0/0
  5354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5355 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5356 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5357 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5358 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5359 ;;Total ram usage:        7 bytes
  5360 ;; Hardware stack levels used:    1
  5361 ;; Hardware stack levels required when called:    2
  5362 ;; This function calls:
  5363 ;;		_Lcd_Cmd
  5364 ;; This function is called by:
  5365 ;;		_main
  5366 ;; This function uses a non-reentrant model
  5367 ;;
  5368                           
  5369                           
  5370                           ;psect for function _Lcd_Set_Cursor
  5371  006A                     _Lcd_Set_Cursor:	
  5372                           
  5373                           ;incstack = 0
  5374                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  5375                           ;Lcd_Set_Cursor@a stored from wreg
  5376  006A  00F6               	movwf	Lcd_Set_Cursor@a
  5377                           
  5378                           ;LCD.c: 92: char temp,z,y;;LCD.c: 93: if(a == 1)
  5379  006B  0376               	decf	Lcd_Set_Cursor@a,w
  5380  006C  1D03               	btfss	3,2
  5381  006D  288A               	goto	l2089
  5382                           
  5383                           ;LCD.c: 94: {;LCD.c: 95: temp = 0x80 + b - 1;
  5384  006E  0873               	movf	Lcd_Set_Cursor@b,w
  5385  006F  3E7F               	addlw	127
  5386  0070  00F4               	movwf	??_Lcd_Set_Cursor
  5387  0071  0874               	movf	??_Lcd_Set_Cursor,w
  5388  0072  00F9               	movwf	Lcd_Set_Cursor@temp
  5389                           
  5390                           ;LCD.c: 96: z = temp>>4;
  5391  0073  0879               	movf	Lcd_Set_Cursor@temp,w
  5392  0074  00F4               	movwf	??_Lcd_Set_Cursor
  5393  0075  3004               	movlw	4
  5394  0076                     u2595:	
  5395  0076  36F4               	lsrf	??_Lcd_Set_Cursor,f
  5396  0077  0B89               	decfsz	9,f
  5397  0078  2876               	goto	u2595
  5398  0079  0874               	movf	??_Lcd_Set_Cursor,w
  5399  007A  00F5               	movwf	??_Lcd_Set_Cursor+1
  5400  007B  0875               	movf	??_Lcd_Set_Cursor+1,w
  5401  007C  00F7               	movwf	Lcd_Set_Cursor@z
  5402                           
  5403                           ;LCD.c: 97: y = temp & 0x0F;
  5404  007D  0879               	movf	Lcd_Set_Cursor@temp,w
  5405  007E  390F               	andlw	15
  5406  007F  00F4               	movwf	??_Lcd_Set_Cursor
  5407  0080  0874               	movf	??_Lcd_Set_Cursor,w
  5408  0081  00F8               	movwf	Lcd_Set_Cursor@y
  5409                           
  5410                           ;LCD.c: 98: Lcd_Cmd(z);
  5411  0082  0877               	movf	Lcd_Set_Cursor@z,w
  5412  0083  318E  26AC  3180   	fcall	_Lcd_Cmd
  5413                           
  5414                           ;LCD.c: 99: Lcd_Cmd(y);
  5415  0086  0878               	movf	Lcd_Set_Cursor@y,w
  5416  0087  318E  26AC         	fcall	_Lcd_Cmd
  5417                           
  5418                           ;LCD.c: 100: }
  5419  0089  0008               	return
  5420  008A                     l2089:	
  5421                           
  5422                           ;LCD.c: 101: else if(a == 2)
  5423  008A  3002               	movlw	2
  5424  008B  0676               	xorwf	Lcd_Set_Cursor@a,w
  5425  008C  1D03               	btfss	3,2
  5426  008D  0008               	return
  5427                           
  5428                           ;LCD.c: 102: {;LCD.c: 103: temp = 0xC0 + b - 1;
  5429  008E  0873               	movf	Lcd_Set_Cursor@b,w
  5430  008F  3EBF               	addlw	191
  5431  0090  00F4               	movwf	??_Lcd_Set_Cursor
  5432  0091  0874               	movf	??_Lcd_Set_Cursor,w
  5433  0092  00F9               	movwf	Lcd_Set_Cursor@temp
  5434                           
  5435                           ;LCD.c: 104: z = temp>>4;
  5436  0093  0879               	movf	Lcd_Set_Cursor@temp,w
  5437  0094  00F4               	movwf	??_Lcd_Set_Cursor
  5438  0095  3004               	movlw	4
  5439  0096                     u2615:	
  5440  0096  36F4               	lsrf	??_Lcd_Set_Cursor,f
  5441  0097  0B89               	decfsz	9,f
  5442  0098  2896               	goto	u2615
  5443  0099  0874               	movf	??_Lcd_Set_Cursor,w
  5444  009A  00F5               	movwf	??_Lcd_Set_Cursor+1
  5445  009B  0875               	movf	??_Lcd_Set_Cursor+1,w
  5446  009C  00F7               	movwf	Lcd_Set_Cursor@z
  5447                           
  5448                           ;LCD.c: 105: y = temp & 0x0F;
  5449  009D  0879               	movf	Lcd_Set_Cursor@temp,w
  5450  009E  390F               	andlw	15
  5451  009F  00F4               	movwf	??_Lcd_Set_Cursor
  5452  00A0  0874               	movf	??_Lcd_Set_Cursor,w
  5453  00A1  00F8               	movwf	Lcd_Set_Cursor@y
  5454                           
  5455                           ;LCD.c: 106: Lcd_Cmd(z);
  5456  00A2  0877               	movf	Lcd_Set_Cursor@z,w
  5457  00A3  318E  26AC  3180   	fcall	_Lcd_Cmd
  5458                           
  5459                           ;LCD.c: 107: Lcd_Cmd(y);
  5460  00A6  0878               	movf	Lcd_Set_Cursor@y,w
  5461  00A7  318E  26AC         	fcall	_Lcd_Cmd
  5462  00A9  0008               	return
  5463  00AA                     __end_of_Lcd_Set_Cursor:	
  5464                           
  5465                           	psect	text28
  5466  00AA                     __ptext28:	
  5467 ;; *************** function _Lcd_Init *****************
  5468 ;; Defined at:
  5469 ;;		line 119 in file "LCD.c"
  5470 ;; Parameters:    Size  Location     Type
  5471 ;;		None
  5472 ;; Auto vars:     Size  Location     Type
  5473 ;;		None
  5474 ;; Return value:  Size  Location     Type
  5475 ;;                  1    wreg      void 
  5476 ;; Registers used:
  5477 ;;		wreg, status,2, status,0, pclath, cstack
  5478 ;; Tracked objects:
  5479 ;;		On entry : 0/0
  5480 ;;		On exit  : 0/0
  5481 ;;		Unchanged: 0/0
  5482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5485 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5486 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5487 ;;Total ram usage:        1 bytes
  5488 ;; Hardware stack levels used:    1
  5489 ;; Hardware stack levels required when called:    2
  5490 ;; This function calls:
  5491 ;;		_Lcd_Cmd
  5492 ;;		_Lcd_Port
  5493 ;; This function is called by:
  5494 ;;		_main
  5495 ;; This function uses a non-reentrant model
  5496 ;;
  5497                           
  5498                           
  5499                           ;psect for function _Lcd_Init
  5500  00AA                     _Lcd_Init:	
  5501                           
  5502                           ;LCD.c: 121: Lcd_Port(0x00);
  5503                           
  5504                           ;incstack = 0
  5505                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  5506  00AA  3000               	movlw	0
  5507  00AB  318E  26D4  3180   	fcall	_Lcd_Port
  5508                           
  5509                           ;LCD.c: 122: _delay((unsigned long)((10)*(16000000/4000.0)));
  5510  00AE  3034               	movlw	52
  5511  00AF  00F3               	movwf	??_Lcd_Init
  5512  00B0  30F2               	movlw	242
  5513  00B1                     u2797:	
  5514  00B1  0B89               	decfsz	9,f
  5515  00B2  28B1               	goto	u2797
  5516  00B3  0BF3               	decfsz	??_Lcd_Init,f
  5517  00B4  28B1               	goto	u2797
  5518                           
  5519                           ;LCD.c: 123: Lcd_Cmd(0x03);
  5520  00B5  3003               	movlw	3
  5521  00B6  318E  26AC  3180   	fcall	_Lcd_Cmd
  5522                           
  5523                           ;LCD.c: 124: _delay((unsigned long)((3)*(16000000/4000.0)));
  5524  00B9  3010               	movlw	16
  5525  00BA  00F3               	movwf	??_Lcd_Init
  5526  00BB  3094               	movlw	148
  5527  00BC                     u2807:	
  5528  00BC  0B89               	decfsz	9,f
  5529  00BD  28BC               	goto	u2807
  5530  00BE  0BF3               	decfsz	??_Lcd_Init,f
  5531  00BF  28BC               	goto	u2807
  5532  00C0  3200               	nop2
  5533                           
  5534                           ;LCD.c: 125: Lcd_Cmd(0x03);
  5535  00C1  3003               	movlw	3
  5536  00C2  318E  26AC  3180   	fcall	_Lcd_Cmd
  5537                           
  5538                           ;LCD.c: 126: _delay((unsigned long)((10)*(16000000/4000.0)));
  5539  00C5  3034               	movlw	52
  5540  00C6  00F3               	movwf	??_Lcd_Init
  5541  00C7  30F2               	movlw	242
  5542  00C8                     u2817:	
  5543  00C8  0B89               	decfsz	9,f
  5544  00C9  28C8               	goto	u2817
  5545  00CA  0BF3               	decfsz	??_Lcd_Init,f
  5546  00CB  28C8               	goto	u2817
  5547                           
  5548                           ;LCD.c: 127: Lcd_Cmd(0x03);
  5549  00CC  3003               	movlw	3
  5550  00CD  318E  26AC  3180   	fcall	_Lcd_Cmd
  5551                           
  5552                           ;LCD.c: 129: Lcd_Cmd(0x02);
  5553  00D0  3002               	movlw	2
  5554  00D1  318E  26AC  3180   	fcall	_Lcd_Cmd
  5555                           
  5556                           ;LCD.c: 130: Lcd_Cmd(0x02);
  5557  00D4  3002               	movlw	2
  5558  00D5  318E  26AC  3180   	fcall	_Lcd_Cmd
  5559                           
  5560                           ;LCD.c: 131: Lcd_Cmd(0x08);
  5561  00D8  3008               	movlw	8
  5562  00D9  318E  26AC  3180   	fcall	_Lcd_Cmd
  5563                           
  5564                           ;LCD.c: 132: Lcd_Cmd(0x00);
  5565  00DC  3000               	movlw	0
  5566  00DD  318E  26AC  3180   	fcall	_Lcd_Cmd
  5567                           
  5568                           ;LCD.c: 133: Lcd_Cmd(0x0C);
  5569  00E0  300C               	movlw	12
  5570  00E1  318E  26AC  3180   	fcall	_Lcd_Cmd
  5571                           
  5572                           ;LCD.c: 134: Lcd_Cmd(0x00);
  5573  00E4  3000               	movlw	0
  5574  00E5  318E  26AC  3180   	fcall	_Lcd_Cmd
  5575                           
  5576                           ;LCD.c: 135: Lcd_Cmd(0x06);
  5577  00E8  3006               	movlw	6
  5578  00E9  318E  26AC         	fcall	_Lcd_Cmd
  5579  00EB  0008               	return
  5580  00EC                     __end_of_Lcd_Init:	
  5581                           
  5582                           	psect	text29
  5583  0E6C                     __ptext29:	
  5584 ;; *************** function _Lcd_Clear *****************
  5585 ;; Defined at:
  5586 ;;		line 76 in file "LCD.c"
  5587 ;; Parameters:    Size  Location     Type
  5588 ;;		None
  5589 ;; Auto vars:     Size  Location     Type
  5590 ;;		None
  5591 ;; Return value:  Size  Location     Type
  5592 ;;                  1    wreg      void 
  5593 ;; Registers used:
  5594 ;;		wreg, status,2, status,0, pclath, cstack
  5595 ;; Tracked objects:
  5596 ;;		On entry : 0/0
  5597 ;;		On exit  : 0/0
  5598 ;;		Unchanged: 0/0
  5599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5604 ;;Total ram usage:        0 bytes
  5605 ;; Hardware stack levels used:    1
  5606 ;; Hardware stack levels required when called:    2
  5607 ;; This function calls:
  5608 ;;		_Lcd_Cmd
  5609 ;; This function is called by:
  5610 ;;		_main
  5611 ;; This function uses a non-reentrant model
  5612 ;;
  5613                           
  5614                           
  5615                           ;psect for function _Lcd_Clear
  5616  0E6C                     _Lcd_Clear:	
  5617                           
  5618                           ;LCD.c: 78: Lcd_Cmd(0);
  5619                           
  5620                           ;incstack = 0
  5621                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  5622  0E6C  3000               	movlw	0
  5623  0E6D  318E  26AC  318E   	fcall	_Lcd_Cmd
  5624                           
  5625                           ;LCD.c: 79: Lcd_Cmd(1);
  5626  0E70  3001               	movlw	1
  5627  0E71  318E  26AC         	fcall	_Lcd_Cmd
  5628  0E73  0008               	return
  5629  0E74                     __end_of_Lcd_Clear:	
  5630                           
  5631                           	psect	text30
  5632  0EAC                     __ptext30:	
  5633 ;; *************** function _Lcd_Cmd *****************
  5634 ;; Defined at:
  5635 ;;		line 59 in file "LCD.c"
  5636 ;; Parameters:    Size  Location     Type
  5637 ;;  a               1    wreg     unsigned char 
  5638 ;; Auto vars:     Size  Location     Type
  5639 ;;  a               1    2[COMMON] unsigned char 
  5640 ;; Return value:  Size  Location     Type
  5641 ;;                  1    wreg      void 
  5642 ;; Registers used:
  5643 ;;		wreg, status,2, status,0, pclath, cstack
  5644 ;; Tracked objects:
  5645 ;;		On entry : 0/0
  5646 ;;		On exit  : 0/0
  5647 ;;		Unchanged: 0/0
  5648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5650 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5651 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5652 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5653 ;;Total ram usage:        2 bytes
  5654 ;; Hardware stack levels used:    1
  5655 ;; Hardware stack levels required when called:    1
  5656 ;; This function calls:
  5657 ;;		_Lcd_Port
  5658 ;; This function is called by:
  5659 ;;		_Lcd_Clear
  5660 ;;		_Lcd_Set_Cursor
  5661 ;;		_Lcd_Init
  5662 ;;		_Lcd_Shift_Right
  5663 ;;		_Lcd_Shift_Left
  5664 ;; This function uses a non-reentrant model
  5665 ;;
  5666                           
  5667                           
  5668                           ;psect for function _Lcd_Cmd
  5669  0EAC                     _Lcd_Cmd:	
  5670                           
  5671                           ;incstack = 0
  5672                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  5673                           ;Lcd_Cmd@a stored from wreg
  5674  0EAC  00F2               	movwf	Lcd_Cmd@a
  5675                           
  5676                           ;LCD.c: 61: RD2 = 0;
  5677  0EAD  0020               	movlb	0	; select bank0
  5678  0EAE  110F               	bcf	15,2	;volatile
  5679                           
  5680                           ;LCD.c: 62: Lcd_Port(a);
  5681  0EAF  0872               	movf	Lcd_Cmd@a,w
  5682  0EB0  318E  26D4  318E   	fcall	_Lcd_Port
  5683                           
  5684                           ;LCD.c: 63: RD3 = 1;
  5685  0EB3  0020               	movlb	0	; select bank0
  5686  0EB4  158F               	bsf	15,3	;volatile
  5687                           
  5688                           ;LCD.c: 64: _delay((unsigned long)((1)*(16000000/4000.0)));
  5689  0EB5  3006               	movlw	6
  5690  0EB6  00F1               	movwf	??_Lcd_Cmd
  5691  0EB7  3030               	movlw	48
  5692  0EB8                     u2827:	
  5693  0EB8  0B89               	decfsz	9,f
  5694  0EB9  2EB8               	goto	u2827
  5695  0EBA  0BF1               	decfsz	??_Lcd_Cmd,f
  5696  0EBB  2EB8               	goto	u2827
  5697  0EBC  3200               	nop2
  5698                           
  5699                           ;LCD.c: 65: RD3 = 0;
  5700  0EBD  0020               	movlb	0	; select bank0
  5701  0EBE  118F               	bcf	15,3	;volatile
  5702  0EBF  0008               	return
  5703  0EC0                     __end_of_Lcd_Cmd:	
  5704                           
  5705                           	psect	text31
  5706  0ED4                     __ptext31:	
  5707 ;; *************** function _Lcd_Port *****************
  5708 ;; Defined at:
  5709 ;;		line 28 in file "LCD.c"
  5710 ;; Parameters:    Size  Location     Type
  5711 ;;  a               1    wreg     unsigned char 
  5712 ;; Auto vars:     Size  Location     Type
  5713 ;;  a               1    0[COMMON] unsigned char 
  5714 ;; Return value:  Size  Location     Type
  5715 ;;                  1    wreg      void 
  5716 ;; Registers used:
  5717 ;;		wreg
  5718 ;; Tracked objects:
  5719 ;;		On entry : 0/0
  5720 ;;		On exit  : 0/0
  5721 ;;		Unchanged: 0/0
  5722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5724 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5726 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5727 ;;Total ram usage:        1 bytes
  5728 ;; Hardware stack levels used:    1
  5729 ;; This function calls:
  5730 ;;		Nothing
  5731 ;; This function is called by:
  5732 ;;		_Lcd_Cmd
  5733 ;;		_Lcd_Init
  5734 ;;		_Lcd_Write_Char
  5735 ;; This function uses a non-reentrant model
  5736 ;;
  5737                           
  5738                           
  5739                           ;psect for function _Lcd_Port
  5740  0ED4                     _Lcd_Port:	
  5741                           
  5742                           ;incstack = 0
  5743                           ; Regs used in _Lcd_Port: [wreg]
  5744                           ;Lcd_Port@a stored from wreg
  5745  0ED4  00F0               	movwf	Lcd_Port@a
  5746                           
  5747                           ;LCD.c: 30: if(a & 1)
  5748  0ED5  1C70               	btfss	Lcd_Port@a,0
  5749  0ED6  2EDA               	goto	l101
  5750                           
  5751                           ;LCD.c: 31: RD4 = 1;
  5752  0ED7  0020               	movlb	0	; select bank0
  5753  0ED8  160F               	bsf	15,4	;volatile
  5754  0ED9  2EDC               	goto	l1511
  5755  0EDA                     l101:	
  5756                           
  5757                           ;LCD.c: 32: else;LCD.c: 33: RD4 = 0;
  5758  0EDA  0020               	movlb	0	; select bank0
  5759  0EDB  120F               	bcf	15,4	;volatile
  5760  0EDC                     l1511:	
  5761                           
  5762                           ;LCD.c: 35: if(a & 2)
  5763  0EDC  1CF0               	btfss	Lcd_Port@a,1
  5764  0EDD  2EE0               	goto	l103
  5765                           
  5766                           ;LCD.c: 36: RD5 = 1;
  5767  0EDE  168F               	bsf	15,5	;volatile
  5768  0EDF  2EE1               	goto	l1515
  5769  0EE0                     l103:	
  5770                           
  5771                           ;LCD.c: 37: else;LCD.c: 38: RD5 = 0;
  5772  0EE0  128F               	bcf	15,5	;volatile
  5773  0EE1                     l1515:	
  5774                           
  5775                           ;LCD.c: 40: if(a & 4)
  5776  0EE1  1D70               	btfss	Lcd_Port@a,2
  5777  0EE2  2EE5               	goto	l105
  5778                           
  5779                           ;LCD.c: 41: RD6 = 1;
  5780  0EE3  170F               	bsf	15,6	;volatile
  5781  0EE4  2EE6               	goto	l1519
  5782  0EE5                     l105:	
  5783                           
  5784                           ;LCD.c: 42: else;LCD.c: 43: RD6 = 0;
  5785  0EE5  130F               	bcf	15,6	;volatile
  5786  0EE6                     l1519:	
  5787                           
  5788                           ;LCD.c: 45: if(a & 8)
  5789  0EE6  1DF0               	btfss	Lcd_Port@a,3
  5790  0EE7  2EEA               	goto	l107
  5791                           
  5792                           ;LCD.c: 46: RD7 = 1;
  5793  0EE8  178F               	bsf	15,7	;volatile
  5794  0EE9  0008               	return
  5795  0EEA                     l107:	
  5796                           
  5797                           ;LCD.c: 47: else;LCD.c: 48: RD7 = 0;
  5798  0EEA  138F               	bcf	15,7	;volatile
  5799  0EEB  0008               	return
  5800  0EEC                     __end_of_Lcd_Port:	
  5801  007E                     btemp	set	126	;btemp
  5802  007E                     wtemp0	set	126


Data Sizes:
    Strings     22
    Constant    40
    Data        0
    BSS         17
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     69      69
    BANK1            80      0      17
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    ftoa@status	PTR int  size(1) Largest target is 2
		 -> Lcd_Write_Float@status(BANK0[2]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 8
		 -> Lcd_Write_Integer@buf(BANK0[8]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 8
		 -> Lcd_Write_Integer@buf(BANK0[8]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 8
		 -> Lcd_Write_Integer@buf(BANK0[8]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 8
		 -> Lcd_Write_Integer@buf(BANK0[8]), 

    ftoa@cp	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_2(CODE[11]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__ftoa	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    Lcd_Write_Float@buf11	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 8
		 -> Lcd_Write_Integer@buf(BANK0[8]), 

    Lcd_Write_String@a	PTR const unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK1[17]), Lcd_Write_Integer@buf(BANK0[8]), STR_1(CODE[11]), 


Critical Paths under _main in COMMON

    _main->___ftadd
    _Lcd_Write_Integer->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _ftoa->___ftmul
    _ftoa->___lltoft
    _sprintf->___lldiv
    ___llmod->___lldiv
    ___lltoft->___ftpack
    ___fttol->___ftmul
    ___ftsub->___ftadd
    ___ftsub->___lltoft
    ___ftadd->___ftpack
    ___ftmul->___ftpack
    _Lcd_Write_String->_itoa
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Shift_Right->_Lcd_Cmd
    _Lcd_Shift_Left->_Lcd_Cmd
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_Lcd_Write_Float
    _Lcd_Write_Integer->_Lcd_Write_String
    _itoa->_utoa
    _Lcd_Write_Float->_ftoa
    _ftoa->_sprintf
    _sprintf->___llmod
    ___fttol->___ftmul
    ___ftsub->___ftadd
    _Lcd_Write_String->_itoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0   18211
                                             60 BANK0      9     9      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Shift_Left
                    _Lcd_Shift_Right
                    _Lcd_Write_Float
                  _Lcd_Write_Integer
                   _Lcd_Write_String
                            ___ftadd
                             ___ftge
                           _initMain
 ---------------------------------------------------------------------------------
 (1) _initMain                                             0     0      0       0
                        _internal_16
 ---------------------------------------------------------------------------------
 (2) _internal_16                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_Integer                                   10     8      2    1918
                                             15 BANK0     10     8      2
                   _Lcd_Write_String
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 7     3      4    1386
                                             13 COMMON     1     1      0
                                              4 BANK0      6     2      4
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     5      4    1074
                                              8 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     265
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     374
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_Float                                      8     5      3   11188
                                             52 BANK0      8     5      3
                   _Lcd_Write_String
                               _ftoa
 ---------------------------------------------------------------------------------
 (2) _ftoa                                                14    10      4   10641
                                             38 BANK0     14    10      4
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                           ___lltoft
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             36    26     10    1896
                                             10 BANK0     28    18     10
                            ___lldiv
                            ___llmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     304
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___llmod                                             10     2      8     265
                                              0 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             14     6      8     268
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             6     2      4    2030
                                              8 COMMON     6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     358
                                             10 BANK0     14    10      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftsub                                              6     0      6    3133
                                              7 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftadd                                             13     7      6    2960
                                              8 COMMON     6     0      6
                                              0 BANK0      7     7      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3      98
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    2340
                                              8 COMMON     6     0      6
                                              0 BANK0     10    10      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    1908
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) ___ftge                                               6     0      6     454
                                              0 COMMON     6     0      6
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     5     3      2     427
                                             10 BANK0      5     3      2
                     _Lcd_Write_Char
                               _itoa (ARG)
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Shift_Right                                      0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Shift_Left                                       0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     486
                                              3 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     198
                                              3 COMMON     1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0     110
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Shift_Left
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Shift_Right
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Float
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
       _itoa (ARG)
         _utoa
           ___lwdiv
           ___lwmod
     _ftoa
       ___ftge
       ___ftmul
         ___ftpack
       ___ftneg
       ___ftsub
         ___ftadd
           ___ftpack
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___ftpack
       ___lltoft
         ___ftpack
       _sprintf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         _isdigit
   _Lcd_Write_Integer
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
       _itoa (ARG)
         _utoa
           ___lwdiv
           ___lwmod
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
     _itoa (ARG)
       _utoa
         ___lwdiv
         ___lwmod
   ___ftadd
     ___ftpack
   ___ftge
   _initMain
     _internal_16

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     45      45       5       86.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      11       7       21.3%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      64      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      64      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Apr 20 22:08:48 2019

               __CFG_CP$OFF 0000         ___wmul@multiplicand 0072                ___ftadd@exp1 0026  
              ___ftadd@exp2 0025                ___ftadd@sign 0024            ?_Lcd_Write_Float 0054  
                       l101 0EDA                         l103 0EE0                         l105 0EE5  
                       l107 0EEA                         l235 06D9                         l261 0F0D  
                       l246 0778                         l238 06F8                         l504 04B1  
                       l480 0228                         l481 0230                         l473 0215  
                       l564 0299                         l709 01CD                         _RD2 007A  
                       _RD3 007B                         _RD4 007C                         _RD5 007D  
                       _RD6 007E                         _RD7 007F                __CFG_BORV$LO 0000  
                       wreg 0009                __CFG_IESO$ON 0000                __CFG_LVP$OFF 0000  
                      l2031 0F72                        l2009 0F23                        l2113 051A  
                      l2141 0566                        l1511 0EDC                        l2047 02EF  
                      l2127 0543                        l1601 046A                        l1515 0EE1  
                      l1611 048C                        l1531 0EAA                        l1621 04AD  
                      l1613 0490                        l2157 0592                        l1519 0EE6  
                      l1607 047D                        l1703 0FF2                        l2175 05DA  
                      l2089 008A                        l1625 04C3                        l1609 0487  
                      l1537 0F07                        l1483 01F2                        l1619 04A3  
                      l1555 013F                        l1651 0103                        l1811 078E  
                      l1803 0764                        l1707 0FFB                        l2187 0624  
                      l1485 01FC                        l1629 04D5                        l1565 016D  
                      l1557 014D                        l1495 0226                        l1487 0201  
                      l1479 01EB                        l1639 04F0                        l1583 0441  
                      l1655 011B                        l1841 0027                        l1497 021A  
                      l1921 0257                        l1569 0178                        l1649 00F5  
                      l1825 07E6                        l1809 078B                        l1745 066A  
                      l1753 0698                        l1681 005C                        l1673 003E  
                      l1579 043A                        l1915 0F44                        l1659 0126  
                      l1819 07A2                        l1771 06E0                        l1763 06A7  
                      l1739 065A                        l1827 0638                        l1675 004A  
                      l1837 0018                        l1589 0450                        l1925 0260  
                      l1829 07F1                        l1765 06D6                        l1685 0065  
                      l1943 0287                        l1767 06DB                        l1881 03CF  
                      l1865 038C                        l1953 02A6                        l1945 0295  
                      l1793 0728                        l1777 0707                        l1697 0FDA  
                      l1859 0376                        l1787 0726                        l1699 0FE6  
                      l1893 03EB                        l1877 03C7                        l1957 02B4  
                      l1965 0F84                        l1973 0187                        l1967 0F94  
                      l1799 0755                        l1983 01A5                        l1889 03E3  
                      STR_1 1000                        STR_2 0828                        u2005 0FDD  
                      u2025 0FEC                        u2035 0FF3                        u1405 0221  
                      u2055 0FB8                        u2145 074B                        u2315 03D0  
                      u1445 0237                        u1365 01F7                        u2325 03D6  
                      u1605 0162                        u2165 075C                        u2415 0267  
                      u1615 016E                        u1535 0F0E                        u2175 076E  
                      u1385 0210                        u2505 0F89                        u1545 0F13  
                      u2185 0780                        u2355 03EC                        u2365 03F2  
                      u2285 0398                        u1725 046B                        u2445 0288  
                      u2615 0096                        u2295 03A8                        u1815 04A4  
                      u1575 0142                        u1905 011C                        u2625 0561  
                      u1755 047E                        u2475 029D                        u1595 014E  
                      u2635 0584                        u2707 0549                        u2645 05C0  
                      u2717 056C                        u2807 00BC                        u1935 0041  
                      u2727 05A0                        u2817 00C8                        u1785 0491  
                      u2737 05AE                        u2827 0EB8                        u2595 0076  
                      u1875 00F8                        u1955 004B                        u2747 05EA  
                      u1965 0055                        u2757 05F8                        u2677 0513  
                      u1895 0111                        u1975 005D                        u2767 062A  
                      u2687 0529                        u2777 0FC2                        u2697 053B  
                      u2787 0FCE                        u2797 00B1                        _SCS0 04C8  
                      _SCS1 04C9                __CFG_WRT$OFF 0000           ?_Lcd_Write_String 002A  
                      _main 0507                        _ftoa 02BD                ___ftpack@arg 0070  
                      _itoa 0F5A                ___ftpack@exp 0073                        fsr0h 0005  
                      fsr1h 0007                        indf0 0000                        fsr0l 0004  
                      indf1 0001                        fsr1l 0006                        btemp 007E  
                      _utoa 0181                        start 0002          ??_Lcd_Write_String 002C  
           __end_of_Lcd_Cmd 0EC0                ___ftmul@cntr 0028                ___ftmul@sign 0029  
              ___fttol@exp1 0037                ___fttol@lval 0033           _Lcd_Write_Integer 0EC0  
                     ?_main 0070                       ?_ftoa 0046                       ?_itoa 0024  
           __end_of___ftadd 0507               __CFG_WDTE$OFF 0000             __end_of___ftneg 0E8C  
           __end_of___lldiv 0181                       ?_utoa 0078             __end_of___ftmul 0412  
           __end_of___llmod 012F             __end_of___ftsub 0F5A             __end_of___fttol 02BD  
                     _IRCF0 04CB                       _IRCF1 04CC                       _IRCF2 04CD  
                     _IRCF3 04CE          ?_Lcd_Write_Integer 002F             __end_of___lwdiv 006A  
           __end_of___lwmod 1000                       _PORTD 000F     __size_of_Lcd_Set_Cursor 0040  
                     _TRISD 008F                ___lltoft@exp 007D              __CFG_FCMEN$OFF 0000  
   __size_of_Lcd_Shift_Left 0008             __end_of_dpowers 0828         ??_Lcd_Write_Integer 007E  
           __end_of_isdigit 0EAC               ___ftpack@sign 0074                       main@a 0063  
                     main@b 0060                       main@c 005E                       ftoa@f 0046  
                     ftoa@l 004F              __CFG_BOREN$OFF 0000                       utoa@c 0022  
                     utoa@v 0020                       status 0003                       wtemp0 007E  
           __end_of_sprintf 07F6                ?_internal_16 0070            __end_of_Lcd_Init 00EC  
          __end_of_Lcd_Port 0EEC              __CFG_MCLRE$OFF 0000             __initialization 07F6  
              __end_of_main 0632                __end_of_ftoa 035F                __end_of_itoa 0F80  
              __end_of_utoa 01E3   __end_of_Lcd_Write_Integer 0ED4              __CFG_LPBOR$OFF 0000  
                    ??_main 005C                      ??_ftoa 004A               ___fttol@sign1 0032  
                    ??_itoa 007D                      ??_utoa 007C          __size_of_Lcd_Clear 0008  
            __CFG_PLLEN$OFF 0000            ___llmod@dividend 0024              __CFG_ZCDDIS$ON 0000  
                    _ANSELD 018F            __end_of___ftpack 0247            __end_of___lltoft 0FA8  
                 ??_Lcd_Cmd 0071                      _SPLLEN 04CF     __size_of_Lcd_Write_Char 002C  
            __CFG_PWRTE$OFF 0000                      ___ftge 0009                      ___wmul 0F05  
                 ??___ftadd 0020              __CFG_STVREN$ON 0000                   ??___ftneg 0073  
                 ??___lldiv 0078                   ??___ftmul 0020                   ??___llmod 0028  
                 ??___ftsub 007E                   ??___fttol 002E                   ??___lwdiv 0074  
                 ??___lwmod 0074            __end_of_initMain 0E9E    __size_of_Lcd_Shift_Right 0008  
                    ftoa@cp 0053       ___ftmul@f3_as_product 0025                      itoa@cp 0028  
                 ??_isdigit 0070            Lcd_Write_Float@f 0054                   ??_sprintf 0034  
           Lcd_Set_Cursor@a 0076             Lcd_Set_Cursor@b 0073             Lcd_Set_Cursor@y 0078  
           Lcd_Set_Cursor@z 0077     __end_of__initialization 07FD                  ___ftadd@f1 0078  
                ___ftadd@f2 007B                  ___ftge@ff1 0070                  ___ftge@ff2 0073  
         __end_of_Lcd_Clear 0E74                  ___ftneg@f1 0070                  ___ftmul@f1 0078  
                ___ftmul@f2 007B                  ___ftsub@f1 002A                  ___ftsub@f2 0027  
                ___fttol@f1 002A              __pcstackCOMMON 0070  __size_of_Lcd_Write_Integer 0014  
                ___lltoft@c 0078              _Lcd_Set_Cursor 006A              _Lcd_Shift_Left 0E74  
                 ?_Lcd_Init 0070                   ?_Lcd_Port 0070                sprintf@width 0041  
                __pbssBANK1 00A0                  __pmaintext 0507        __size_of_internal_16 0009  
                   ?___ftge 0070                     ?___wmul 0070             __CFG_PPS1WAY$ON 0000  
 __size_of_Lcd_Write_String 001C                   ?___ftpack 0070      __end_of_Lcd_Set_Cursor 00AA  
                 ?___lltoft 0078      __end_of_Lcd_Shift_Left 0E7C           ??_Lcd_Shift_Right 0073  
                ??_Lcd_Init 0073                  ??_Lcd_Port 0070    __size_of_Lcd_Write_Float 0019  
                 ?_initMain 0070              _Lcd_Write_Char 0FA8                     _Lcd_Cmd 0EAC  
           __size_of___ftge 002D                     ___ftadd 0412                     ___ftneg 0E84  
                   ___lldiv 012F             __size_of___wmul 001B                     ___ftmul 035F  
                   ___llmod 00EC                     ___ftsub 0F3C                     ___fttol 0247  
                   ___lwdiv 0036                     ___lwmod 0FD4                  ??___ftpack 0075  
           ?_Lcd_Set_Cursor 0073                  ??___lltoft 007C                     __ptext1 0E95  
                   __ptext2 0E8C                     __ptext3 0EC0                     __ptext4 0F5A  
                   __ptext5 0181                     __ptext6 0FD4                     __ptext7 0036  
                   __ptext8 0EEC                     __ptext9 02BD                     _dpowers 0800  
                   _isdigit 0E9E             ?_Lcd_Shift_Left 0070                     _sprintf 0632  
                   clrloop0 0E67      __end_of_Lcd_Write_Char 0FD4        end_of_initialization 07FD  
                   ftoa@buf 00A0                     ftoa@rem 004B                  ??_initMain 0070  
                   itoa@buf 0029                     itoa@val 0024             ___lldiv@divisor 0070  
           ___lldiv@counter 007D                   Lcd_Port@a 0070                     utoa@buf 0023  
                   utoa@val 0078            __CFG_FOSC$INTOSC 0000             ?_Lcd_Write_Char 0070  
         Lcd_Write_String@a 002A           Lcd_Write_String@i 002D           ??_Lcd_Write_Float 0057  
               ___ftmul@exp 0024                   _Lcd_Clear 0E6C              __end_of___ftge 0036  
            __end_of___wmul 0F20            _Lcd_Write_String 0F20       Lcd_Write_Float@status 0059  
       start_initialization 07F6                  ftoa@status 0049           __size_of_Lcd_Init 0042  
         __size_of_Lcd_Port 0018             ___llmod@divisor 0020             ___llmod@counter 0029  
                ?_Lcd_Clear 0070                    ??___ftge 0076             _Lcd_Shift_Right 0E7C  
                  ??___wmul 0074             Lcd_Write_Char@a 0074             Lcd_Write_Char@y 0073  
         __size_of___ftpack 0064           __size_of___lltoft 0028                   ___latbits 0002  
             __pcstackBANK0 0020                    ?_Lcd_Cmd 0070                 sprintf@flag 003A  
               sprintf@prec 0043               ??_internal_16 0070           __size_of_initMain 0009  
          ___lwdiv@dividend 0072            ??_Lcd_Set_Cursor 0074                    ?___ftadd 0078  
                  ?___ftneg 0070                    ?___lldiv 0070                    ?___ftmul 0078  
                  ?___llmod 0020                    ?___ftsub 0027                    ?___fttol 002A  
                  ?___lwdiv 0070                    ?___lwmod 0070            ??_Lcd_Shift_Left 0073  
                  ?_isdigit 0070            ___lwdiv@quotient 0075                    ?_sprintf 002A  
            ___wmul@product 0074     __end_of_Lcd_Shift_Right 0E84                   clear_ram0 0E66  
                  Lcd_Cmd@a 0072                 ??_Lcd_Clear 0073         __end_of_internal_16 0E95  
         ___wmul@multiplier 0070            ??_Lcd_Write_Char 0071             _Lcd_Write_Float 0EEC  
                  _Lcd_Init 00AA                    _Lcd_Port 0ED4        Lcd_Write_Float@buf11 005B  
  __end_of_Lcd_Write_String 0F3C            __size_of_Lcd_Cmd 0014            __size_of___ftadd 00F5  
          __size_of___ftneg 0008            __size_of___lldiv 0052            __size_of___ftmul 00B3  
          __size_of___llmod 0043            __size_of___ftsub 001E            __size_of___fttol 0076  
          __size_of___lwdiv 0034            __size_of___lwmod 002C                    ___ftpack 01E3  
                  ___lltoft 0F80                 _isdigit$434 0070                  sprintf@val 003C  
          __size_of_isdigit 000E             ___lwdiv@divisor 0070             ___lwdiv@counter 0077  
                  __ptext10 0632                    __ptext11 0E9E                    __ptext20 035F  
                  __ptext12 0F05                    __ptext21 01E3                    __ptext13 00EC  
                  __ptext30 0EAC                    __ptext22 0009                    __ptext14 012F  
                  __ptext31 0ED4                    __ptext23 0F20                    __ptext15 0F80  
                  __ptext24 0FA8                    __ptext16 0247                    __ptext25 0E7C  
                  __ptext17 0F3C                    __ptext26 0E74                    __ptext18 0412  
                  __ptext27 006A                    __ptext19 0E84                    __ptext28 00AA  
                  __ptext29 0E6C            __size_of_sprintf 01C4                    _initMain 0E95  
             __size_of_main 012B               __size_of_ftoa 00A2               __size_of_itoa 0026  
             __size_of_utoa 0062            ?_Lcd_Shift_Right 0070                 _internal_16 0E8C  
      Lcd_Write_Integer@buf 0031     __end_of_Lcd_Write_Float 0F05                    itoa@base 0026  
                  isdigit@c 0071          Lcd_Write_Char@temp 0072                   sprintf@ap 003B  
                 sprintf@sp 0040            ___lwmod@dividend 0072            ___lldiv@dividend 0074  
         __CFG_CLKOUTEN$OFF 0000          Lcd_Set_Cursor@temp 0079               __pstringtext1 0800  
             __pstringtext2 1000               __pstringtext3 0000                    utoa@base 007A  
                  sprintf@c 0045                    sprintf@f 002A            ___lldiv@quotient 0079  
           ___lwmod@divisor 0070             ___lwmod@counter 0075          Lcd_Write_Integer@v 002F  
