

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Tue Apr 18 11:34:44 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1717
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	intentry,global,class=CODE,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,delta=2
    50                           	psect	text38,local,class=CODE,merge=1,delta=2
    51                           	psect	text39,local,class=CODE,merge=1,delta=2
    52                           	psect	text40,local,class=CODE,merge=1,delta=2
    53                           	psect	text41,local,class=CODE,merge=1,delta=2
    54                           	psect	text42,local,class=CODE,merge=1,delta=2
    55                           	psect	text43,local,class=CODE,merge=1,delta=2
    56                           	psect	text44,local,class=CODE,merge=1,delta=2
    57                           	psect	text45,local,class=CODE,merge=1,delta=2
    58                           	psect	text46,local,class=CODE,merge=1,delta=2
    59                           	psect	text47,local,class=CODE,merge=1,delta=2
    60                           	psect	text48,local,class=CODE,merge=1,delta=2
    61                           	dabs	1,0x7E,2
    62  0000                     
    63                           ; Version 1.41
    64                           ; Generated 25/01/2017 GMT
    65                           ; 
    66                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution.
    80                           ; 
    81                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    82                           ;        software without specific prior written permission.
    83                           ; 
    84                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    85                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    86                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    87                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    88                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    89                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    90                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    91                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    92                           ; 
    93                           ; 
    94                           ; Code-generator required, PIC16F1717 Definitions
    95                           ; 
    96                           ; SFR Addresses
    97  0000                     	;# 
    98  0001                     	;# 
    99  0002                     	;# 
   100  0003                     	;# 
   101  0004                     	;# 
   102  0005                     	;# 
   103  0006                     	;# 
   104  0007                     	;# 
   105  0008                     	;# 
   106  0009                     	;# 
   107  000A                     	;# 
   108  000B                     	;# 
   109  000C                     	;# 
   110  000D                     	;# 
   111  000E                     	;# 
   112  000F                     	;# 
   113  0010                     	;# 
   114  0011                     	;# 
   115  0012                     	;# 
   116  0013                     	;# 
   117  0015                     	;# 
   118  0016                     	;# 
   119  0016                     	;# 
   120  0017                     	;# 
   121  0018                     	;# 
   122  0019                     	;# 
   123  001A                     	;# 
   124  001B                     	;# 
   125  001C                     	;# 
   126  008C                     	;# 
   127  008D                     	;# 
   128  008E                     	;# 
   129  008F                     	;# 
   130  0090                     	;# 
   131  0091                     	;# 
   132  0092                     	;# 
   133  0093                     	;# 
   134  0095                     	;# 
   135  0096                     	;# 
   136  0097                     	;# 
   137  0098                     	;# 
   138  0099                     	;# 
   139  009A                     	;# 
   140  009B                     	;# 
   141  009B                     	;# 
   142  009C                     	;# 
   143  009D                     	;# 
   144  009E                     	;# 
   145  009F                     	;# 
   146  010C                     	;# 
   147  010D                     	;# 
   148  010E                     	;# 
   149  010F                     	;# 
   150  0110                     	;# 
   151  0111                     	;# 
   152  0112                     	;# 
   153  0113                     	;# 
   154  0114                     	;# 
   155  0115                     	;# 
   156  0116                     	;# 
   157  0117                     	;# 
   158  0118                     	;# 
   159  0119                     	;# 
   160  011A                     	;# 
   161  011B                     	;# 
   162  011B                     	;# 
   163  011C                     	;# 
   164  018C                     	;# 
   165  018D                     	;# 
   166  018E                     	;# 
   167  018F                     	;# 
   168  0190                     	;# 
   169  0191                     	;# 
   170  0191                     	;# 
   171  0192                     	;# 
   172  0193                     	;# 
   173  0193                     	;# 
   174  0194                     	;# 
   175  0195                     	;# 
   176  0196                     	;# 
   177  0197                     	;# 
   178  0199                     	;# 
   179  0199                     	;# 
   180  0199                     	;# 
   181  019A                     	;# 
   182  019A                     	;# 
   183  019A                     	;# 
   184  019B                     	;# 
   185  019B                     	;# 
   186  019B                     	;# 
   187  019B                     	;# 
   188  019B                     	;# 
   189  019C                     	;# 
   190  019C                     	;# 
   191  019C                     	;# 
   192  019D                     	;# 
   193  019D                     	;# 
   194  019D                     	;# 
   195  019E                     	;# 
   196  019E                     	;# 
   197  019E                     	;# 
   198  019F                     	;# 
   199  019F                     	;# 
   200  019F                     	;# 
   201  019F                     	;# 
   202  019F                     	;# 
   203  020C                     	;# 
   204  020D                     	;# 
   205  020E                     	;# 
   206  020F                     	;# 
   207  0210                     	;# 
   208  0211                     	;# 
   209  0211                     	;# 
   210  0212                     	;# 
   211  0212                     	;# 
   212  0213                     	;# 
   213  0213                     	;# 
   214  0214                     	;# 
   215  0214                     	;# 
   216  0215                     	;# 
   217  0215                     	;# 
   218  0215                     	;# 
   219  0215                     	;# 
   220  0216                     	;# 
   221  0216                     	;# 
   222  0217                     	;# 
   223  0217                     	;# 
   224  028C                     	;# 
   225  028D                     	;# 
   226  028E                     	;# 
   227  028F                     	;# 
   228  0290                     	;# 
   229  0291                     	;# 
   230  0291                     	;# 
   231  0292                     	;# 
   232  0293                     	;# 
   233  0293                     	;# 
   234  0298                     	;# 
   235  0298                     	;# 
   236  0299                     	;# 
   237  029A                     	;# 
   238  029A                     	;# 
   239  029E                     	;# 
   240  030C                     	;# 
   241  030D                     	;# 
   242  030E                     	;# 
   243  030F                     	;# 
   244  0310                     	;# 
   245  038C                     	;# 
   246  038D                     	;# 
   247  038E                     	;# 
   248  038F                     	;# 
   249  0390                     	;# 
   250  0391                     	;# 
   251  0392                     	;# 
   252  0393                     	;# 
   253  0394                     	;# 
   254  0395                     	;# 
   255  0396                     	;# 
   256  0397                     	;# 
   257  0398                     	;# 
   258  0399                     	;# 
   259  039D                     	;# 
   260  039E                     	;# 
   261  039F                     	;# 
   262  0415                     	;# 
   263  0416                     	;# 
   264  0417                     	;# 
   265  041C                     	;# 
   266  041D                     	;# 
   267  041E                     	;# 
   268  0498                     	;# 
   269  0498                     	;# 
   270  0499                     	;# 
   271  049A                     	;# 
   272  049B                     	;# 
   273  049B                     	;# 
   274  049C                     	;# 
   275  049D                     	;# 
   276  049E                     	;# 
   277  049F                     	;# 
   278  0511                     	;# 
   279  0515                     	;# 
   280  0617                     	;# 
   281  0618                     	;# 
   282  0619                     	;# 
   283  0619                     	;# 
   284  061A                     	;# 
   285  061B                     	;# 
   286  061C                     	;# 
   287  061C                     	;# 
   288  0691                     	;# 
   289  0692                     	;# 
   290  0693                     	;# 
   291  0694                     	;# 
   292  0695                     	;# 
   293  0696                     	;# 
   294  0697                     	;# 
   295  0698                     	;# 
   296  0699                     	;# 
   297  069A                     	;# 
   298  069B                     	;# 
   299  069C                     	;# 
   300  069D                     	;# 
   301  069E                     	;# 
   302  069F                     	;# 
   303  0E0F                     	;# 
   304  0E10                     	;# 
   305  0E11                     	;# 
   306  0E12                     	;# 
   307  0E13                     	;# 
   308  0E14                     	;# 
   309  0E15                     	;# 
   310  0E17                     	;# 
   311  0E20                     	;# 
   312  0E21                     	;# 
   313  0E22                     	;# 
   314  0E24                     	;# 
   315  0E25                     	;# 
   316  0E28                     	;# 
   317  0E29                     	;# 
   318  0E2A                     	;# 
   319  0E2B                     	;# 
   320  0E90                     	;# 
   321  0E91                     	;# 
   322  0E92                     	;# 
   323  0E93                     	;# 
   324  0E94                     	;# 
   325  0E95                     	;# 
   326  0E96                     	;# 
   327  0E97                     	;# 
   328  0E98                     	;# 
   329  0E99                     	;# 
   330  0E9A                     	;# 
   331  0E9B                     	;# 
   332  0E9C                     	;# 
   333  0E9D                     	;# 
   334  0E9E                     	;# 
   335  0E9F                     	;# 
   336  0EA0                     	;# 
   337  0EA1                     	;# 
   338  0EA2                     	;# 
   339  0EA3                     	;# 
   340  0EA4                     	;# 
   341  0EA5                     	;# 
   342  0EA6                     	;# 
   343  0EA7                     	;# 
   344  0EA8                     	;# 
   345  0EA9                     	;# 
   346  0EAA                     	;# 
   347  0EAB                     	;# 
   348  0EAC                     	;# 
   349  0EAD                     	;# 
   350  0EAE                     	;# 
   351  0EAF                     	;# 
   352  0EB0                     	;# 
   353  0EB1                     	;# 
   354  0EB2                     	;# 
   355  0F0F                     	;# 
   356  0F10                     	;# 
   357  0F11                     	;# 
   358  0F12                     	;# 
   359  0F13                     	;# 
   360  0F14                     	;# 
   361  0F15                     	;# 
   362  0F16                     	;# 
   363  0F17                     	;# 
   364  0F18                     	;# 
   365  0F19                     	;# 
   366  0F1A                     	;# 
   367  0F1B                     	;# 
   368  0F1C                     	;# 
   369  0F1D                     	;# 
   370  0F1E                     	;# 
   371  0F1F                     	;# 
   372  0F20                     	;# 
   373  0F21                     	;# 
   374  0F22                     	;# 
   375  0F23                     	;# 
   376  0F24                     	;# 
   377  0F25                     	;# 
   378  0F26                     	;# 
   379  0F27                     	;# 
   380  0F28                     	;# 
   381  0F29                     	;# 
   382  0F2A                     	;# 
   383  0F2B                     	;# 
   384  0F2C                     	;# 
   385  0F2D                     	;# 
   386  0F2E                     	;# 
   387  0F2F                     	;# 
   388  0F30                     	;# 
   389  0F31                     	;# 
   390  0F32                     	;# 
   391  0F33                     	;# 
   392  0F34                     	;# 
   393  0F35                     	;# 
   394  0F36                     	;# 
   395  0F37                     	;# 
   396  0FE4                     	;# 
   397  0FE5                     	;# 
   398  0FE6                     	;# 
   399  0FE7                     	;# 
   400  0FE8                     	;# 
   401  0FE9                     	;# 
   402  0FEA                     	;# 
   403  0FEB                     	;# 
   404  0FED                     	;# 
   405  0FEE                     	;# 
   406  0FEF                     	;# 
   407  0000                     	;# 
   408  0001                     	;# 
   409  0002                     	;# 
   410  0003                     	;# 
   411  0004                     	;# 
   412  0005                     	;# 
   413  0006                     	;# 
   414  0007                     	;# 
   415  0008                     	;# 
   416  0009                     	;# 
   417  000A                     	;# 
   418  000B                     	;# 
   419  000C                     	;# 
   420  000D                     	;# 
   421  000E                     	;# 
   422  000F                     	;# 
   423  0010                     	;# 
   424  0011                     	;# 
   425  0012                     	;# 
   426  0013                     	;# 
   427  0015                     	;# 
   428  0016                     	;# 
   429  0016                     	;# 
   430  0017                     	;# 
   431  0018                     	;# 
   432  0019                     	;# 
   433  001A                     	;# 
   434  001B                     	;# 
   435  001C                     	;# 
   436  008C                     	;# 
   437  008D                     	;# 
   438  008E                     	;# 
   439  008F                     	;# 
   440  0090                     	;# 
   441  0091                     	;# 
   442  0092                     	;# 
   443  0093                     	;# 
   444  0095                     	;# 
   445  0096                     	;# 
   446  0097                     	;# 
   447  0098                     	;# 
   448  0099                     	;# 
   449  009A                     	;# 
   450  009B                     	;# 
   451  009B                     	;# 
   452  009C                     	;# 
   453  009D                     	;# 
   454  009E                     	;# 
   455  009F                     	;# 
   456  010C                     	;# 
   457  010D                     	;# 
   458  010E                     	;# 
   459  010F                     	;# 
   460  0110                     	;# 
   461  0111                     	;# 
   462  0112                     	;# 
   463  0113                     	;# 
   464  0114                     	;# 
   465  0115                     	;# 
   466  0116                     	;# 
   467  0117                     	;# 
   468  0118                     	;# 
   469  0119                     	;# 
   470  011A                     	;# 
   471  011B                     	;# 
   472  011B                     	;# 
   473  011C                     	;# 
   474  018C                     	;# 
   475  018D                     	;# 
   476  018E                     	;# 
   477  018F                     	;# 
   478  0190                     	;# 
   479  0191                     	;# 
   480  0191                     	;# 
   481  0192                     	;# 
   482  0193                     	;# 
   483  0193                     	;# 
   484  0194                     	;# 
   485  0195                     	;# 
   486  0196                     	;# 
   487  0197                     	;# 
   488  0199                     	;# 
   489  0199                     	;# 
   490  0199                     	;# 
   491  019A                     	;# 
   492  019A                     	;# 
   493  019A                     	;# 
   494  019B                     	;# 
   495  019B                     	;# 
   496  019B                     	;# 
   497  019B                     	;# 
   498  019B                     	;# 
   499  019C                     	;# 
   500  019C                     	;# 
   501  019C                     	;# 
   502  019D                     	;# 
   503  019D                     	;# 
   504  019D                     	;# 
   505  019E                     	;# 
   506  019E                     	;# 
   507  019E                     	;# 
   508  019F                     	;# 
   509  019F                     	;# 
   510  019F                     	;# 
   511  019F                     	;# 
   512  019F                     	;# 
   513  020C                     	;# 
   514  020D                     	;# 
   515  020E                     	;# 
   516  020F                     	;# 
   517  0210                     	;# 
   518  0211                     	;# 
   519  0211                     	;# 
   520  0212                     	;# 
   521  0212                     	;# 
   522  0213                     	;# 
   523  0213                     	;# 
   524  0214                     	;# 
   525  0214                     	;# 
   526  0215                     	;# 
   527  0215                     	;# 
   528  0215                     	;# 
   529  0215                     	;# 
   530  0216                     	;# 
   531  0216                     	;# 
   532  0217                     	;# 
   533  0217                     	;# 
   534  028C                     	;# 
   535  028D                     	;# 
   536  028E                     	;# 
   537  028F                     	;# 
   538  0290                     	;# 
   539  0291                     	;# 
   540  0291                     	;# 
   541  0292                     	;# 
   542  0293                     	;# 
   543  0293                     	;# 
   544  0298                     	;# 
   545  0298                     	;# 
   546  0299                     	;# 
   547  029A                     	;# 
   548  029A                     	;# 
   549  029E                     	;# 
   550  030C                     	;# 
   551  030D                     	;# 
   552  030E                     	;# 
   553  030F                     	;# 
   554  0310                     	;# 
   555  038C                     	;# 
   556  038D                     	;# 
   557  038E                     	;# 
   558  038F                     	;# 
   559  0390                     	;# 
   560  0391                     	;# 
   561  0392                     	;# 
   562  0393                     	;# 
   563  0394                     	;# 
   564  0395                     	;# 
   565  0396                     	;# 
   566  0397                     	;# 
   567  0398                     	;# 
   568  0399                     	;# 
   569  039D                     	;# 
   570  039E                     	;# 
   571  039F                     	;# 
   572  0415                     	;# 
   573  0416                     	;# 
   574  0417                     	;# 
   575  041C                     	;# 
   576  041D                     	;# 
   577  041E                     	;# 
   578  0498                     	;# 
   579  0498                     	;# 
   580  0499                     	;# 
   581  049A                     	;# 
   582  049B                     	;# 
   583  049B                     	;# 
   584  049C                     	;# 
   585  049D                     	;# 
   586  049E                     	;# 
   587  049F                     	;# 
   588  0511                     	;# 
   589  0515                     	;# 
   590  0617                     	;# 
   591  0618                     	;# 
   592  0619                     	;# 
   593  0619                     	;# 
   594  061A                     	;# 
   595  061B                     	;# 
   596  061C                     	;# 
   597  061C                     	;# 
   598  0691                     	;# 
   599  0692                     	;# 
   600  0693                     	;# 
   601  0694                     	;# 
   602  0695                     	;# 
   603  0696                     	;# 
   604  0697                     	;# 
   605  0698                     	;# 
   606  0699                     	;# 
   607  069A                     	;# 
   608  069B                     	;# 
   609  069C                     	;# 
   610  069D                     	;# 
   611  069E                     	;# 
   612  069F                     	;# 
   613  0E0F                     	;# 
   614  0E10                     	;# 
   615  0E11                     	;# 
   616  0E12                     	;# 
   617  0E13                     	;# 
   618  0E14                     	;# 
   619  0E15                     	;# 
   620  0E17                     	;# 
   621  0E20                     	;# 
   622  0E21                     	;# 
   623  0E22                     	;# 
   624  0E24                     	;# 
   625  0E25                     	;# 
   626  0E28                     	;# 
   627  0E29                     	;# 
   628  0E2A                     	;# 
   629  0E2B                     	;# 
   630  0E90                     	;# 
   631  0E91                     	;# 
   632  0E92                     	;# 
   633  0E93                     	;# 
   634  0E94                     	;# 
   635  0E95                     	;# 
   636  0E96                     	;# 
   637  0E97                     	;# 
   638  0E98                     	;# 
   639  0E99                     	;# 
   640  0E9A                     	;# 
   641  0E9B                     	;# 
   642  0E9C                     	;# 
   643  0E9D                     	;# 
   644  0E9E                     	;# 
   645  0E9F                     	;# 
   646  0EA0                     	;# 
   647  0EA1                     	;# 
   648  0EA2                     	;# 
   649  0EA3                     	;# 
   650  0EA4                     	;# 
   651  0EA5                     	;# 
   652  0EA6                     	;# 
   653  0EA7                     	;# 
   654  0EA8                     	;# 
   655  0EA9                     	;# 
   656  0EAA                     	;# 
   657  0EAB                     	;# 
   658  0EAC                     	;# 
   659  0EAD                     	;# 
   660  0EAE                     	;# 
   661  0EAF                     	;# 
   662  0EB0                     	;# 
   663  0EB1                     	;# 
   664  0EB2                     	;# 
   665  0F0F                     	;# 
   666  0F10                     	;# 
   667  0F11                     	;# 
   668  0F12                     	;# 
   669  0F13                     	;# 
   670  0F14                     	;# 
   671  0F15                     	;# 
   672  0F16                     	;# 
   673  0F17                     	;# 
   674  0F18                     	;# 
   675  0F19                     	;# 
   676  0F1A                     	;# 
   677  0F1B                     	;# 
   678  0F1C                     	;# 
   679  0F1D                     	;# 
   680  0F1E                     	;# 
   681  0F1F                     	;# 
   682  0F20                     	;# 
   683  0F21                     	;# 
   684  0F22                     	;# 
   685  0F23                     	;# 
   686  0F24                     	;# 
   687  0F25                     	;# 
   688  0F26                     	;# 
   689  0F27                     	;# 
   690  0F28                     	;# 
   691  0F29                     	;# 
   692  0F2A                     	;# 
   693  0F2B                     	;# 
   694  0F2C                     	;# 
   695  0F2D                     	;# 
   696  0F2E                     	;# 
   697  0F2F                     	;# 
   698  0F30                     	;# 
   699  0F31                     	;# 
   700  0F32                     	;# 
   701  0F33                     	;# 
   702  0F34                     	;# 
   703  0F35                     	;# 
   704  0F36                     	;# 
   705  0F37                     	;# 
   706  0FE4                     	;# 
   707  0FE5                     	;# 
   708  0FE6                     	;# 
   709  0FE7                     	;# 
   710  0FE8                     	;# 
   711  0FE9                     	;# 
   712  0FEA                     	;# 
   713  0FEB                     	;# 
   714  0FED                     	;# 
   715  0FEE                     	;# 
   716  0FEF                     	;# 
   717  0000                     	;# 
   718  0001                     	;# 
   719  0002                     	;# 
   720  0003                     	;# 
   721  0004                     	;# 
   722  0005                     	;# 
   723  0006                     	;# 
   724  0007                     	;# 
   725  0008                     	;# 
   726  0009                     	;# 
   727  000A                     	;# 
   728  000B                     	;# 
   729  000C                     	;# 
   730  000D                     	;# 
   731  000E                     	;# 
   732  000F                     	;# 
   733  0010                     	;# 
   734  0011                     	;# 
   735  0012                     	;# 
   736  0013                     	;# 
   737  0015                     	;# 
   738  0016                     	;# 
   739  0016                     	;# 
   740  0017                     	;# 
   741  0018                     	;# 
   742  0019                     	;# 
   743  001A                     	;# 
   744  001B                     	;# 
   745  001C                     	;# 
   746  008C                     	;# 
   747  008D                     	;# 
   748  008E                     	;# 
   749  008F                     	;# 
   750  0090                     	;# 
   751  0091                     	;# 
   752  0092                     	;# 
   753  0093                     	;# 
   754  0095                     	;# 
   755  0096                     	;# 
   756  0097                     	;# 
   757  0098                     	;# 
   758  0099                     	;# 
   759  009A                     	;# 
   760  009B                     	;# 
   761  009B                     	;# 
   762  009C                     	;# 
   763  009D                     	;# 
   764  009E                     	;# 
   765  009F                     	;# 
   766  010C                     	;# 
   767  010D                     	;# 
   768  010E                     	;# 
   769  010F                     	;# 
   770  0110                     	;# 
   771  0111                     	;# 
   772  0112                     	;# 
   773  0113                     	;# 
   774  0114                     	;# 
   775  0115                     	;# 
   776  0116                     	;# 
   777  0117                     	;# 
   778  0118                     	;# 
   779  0119                     	;# 
   780  011A                     	;# 
   781  011B                     	;# 
   782  011B                     	;# 
   783  011C                     	;# 
   784  018C                     	;# 
   785  018D                     	;# 
   786  018E                     	;# 
   787  018F                     	;# 
   788  0190                     	;# 
   789  0191                     	;# 
   790  0191                     	;# 
   791  0192                     	;# 
   792  0193                     	;# 
   793  0193                     	;# 
   794  0194                     	;# 
   795  0195                     	;# 
   796  0196                     	;# 
   797  0197                     	;# 
   798  0199                     	;# 
   799  0199                     	;# 
   800  0199                     	;# 
   801  019A                     	;# 
   802  019A                     	;# 
   803  019A                     	;# 
   804  019B                     	;# 
   805  019B                     	;# 
   806  019B                     	;# 
   807  019B                     	;# 
   808  019B                     	;# 
   809  019C                     	;# 
   810  019C                     	;# 
   811  019C                     	;# 
   812  019D                     	;# 
   813  019D                     	;# 
   814  019D                     	;# 
   815  019E                     	;# 
   816  019E                     	;# 
   817  019E                     	;# 
   818  019F                     	;# 
   819  019F                     	;# 
   820  019F                     	;# 
   821  019F                     	;# 
   822  019F                     	;# 
   823  020C                     	;# 
   824  020D                     	;# 
   825  020E                     	;# 
   826  020F                     	;# 
   827  0210                     	;# 
   828  0211                     	;# 
   829  0211                     	;# 
   830  0212                     	;# 
   831  0212                     	;# 
   832  0213                     	;# 
   833  0213                     	;# 
   834  0214                     	;# 
   835  0214                     	;# 
   836  0215                     	;# 
   837  0215                     	;# 
   838  0215                     	;# 
   839  0215                     	;# 
   840  0216                     	;# 
   841  0216                     	;# 
   842  0217                     	;# 
   843  0217                     	;# 
   844  028C                     	;# 
   845  028D                     	;# 
   846  028E                     	;# 
   847  028F                     	;# 
   848  0290                     	;# 
   849  0291                     	;# 
   850  0291                     	;# 
   851  0292                     	;# 
   852  0293                     	;# 
   853  0293                     	;# 
   854  0298                     	;# 
   855  0298                     	;# 
   856  0299                     	;# 
   857  029A                     	;# 
   858  029A                     	;# 
   859  029E                     	;# 
   860  030C                     	;# 
   861  030D                     	;# 
   862  030E                     	;# 
   863  030F                     	;# 
   864  0310                     	;# 
   865  038C                     	;# 
   866  038D                     	;# 
   867  038E                     	;# 
   868  038F                     	;# 
   869  0390                     	;# 
   870  0391                     	;# 
   871  0392                     	;# 
   872  0393                     	;# 
   873  0394                     	;# 
   874  0395                     	;# 
   875  0396                     	;# 
   876  0397                     	;# 
   877  0398                     	;# 
   878  0399                     	;# 
   879  039D                     	;# 
   880  039E                     	;# 
   881  039F                     	;# 
   882  0415                     	;# 
   883  0416                     	;# 
   884  0417                     	;# 
   885  041C                     	;# 
   886  041D                     	;# 
   887  041E                     	;# 
   888  0498                     	;# 
   889  0498                     	;# 
   890  0499                     	;# 
   891  049A                     	;# 
   892  049B                     	;# 
   893  049B                     	;# 
   894  049C                     	;# 
   895  049D                     	;# 
   896  049E                     	;# 
   897  049F                     	;# 
   898  0511                     	;# 
   899  0515                     	;# 
   900  0617                     	;# 
   901  0618                     	;# 
   902  0619                     	;# 
   903  0619                     	;# 
   904  061A                     	;# 
   905  061B                     	;# 
   906  061C                     	;# 
   907  061C                     	;# 
   908  0691                     	;# 
   909  0692                     	;# 
   910  0693                     	;# 
   911  0694                     	;# 
   912  0695                     	;# 
   913  0696                     	;# 
   914  0697                     	;# 
   915  0698                     	;# 
   916  0699                     	;# 
   917  069A                     	;# 
   918  069B                     	;# 
   919  069C                     	;# 
   920  069D                     	;# 
   921  069E                     	;# 
   922  069F                     	;# 
   923  0E0F                     	;# 
   924  0E10                     	;# 
   925  0E11                     	;# 
   926  0E12                     	;# 
   927  0E13                     	;# 
   928  0E14                     	;# 
   929  0E15                     	;# 
   930  0E17                     	;# 
   931  0E20                     	;# 
   932  0E21                     	;# 
   933  0E22                     	;# 
   934  0E24                     	;# 
   935  0E25                     	;# 
   936  0E28                     	;# 
   937  0E29                     	;# 
   938  0E2A                     	;# 
   939  0E2B                     	;# 
   940  0E90                     	;# 
   941  0E91                     	;# 
   942  0E92                     	;# 
   943  0E93                     	;# 
   944  0E94                     	;# 
   945  0E95                     	;# 
   946  0E96                     	;# 
   947  0E97                     	;# 
   948  0E98                     	;# 
   949  0E99                     	;# 
   950  0E9A                     	;# 
   951  0E9B                     	;# 
   952  0E9C                     	;# 
   953  0E9D                     	;# 
   954  0E9E                     	;# 
   955  0E9F                     	;# 
   956  0EA0                     	;# 
   957  0EA1                     	;# 
   958  0EA2                     	;# 
   959  0EA3                     	;# 
   960  0EA4                     	;# 
   961  0EA5                     	;# 
   962  0EA6                     	;# 
   963  0EA7                     	;# 
   964  0EA8                     	;# 
   965  0EA9                     	;# 
   966  0EAA                     	;# 
   967  0EAB                     	;# 
   968  0EAC                     	;# 
   969  0EAD                     	;# 
   970  0EAE                     	;# 
   971  0EAF                     	;# 
   972  0EB0                     	;# 
   973  0EB1                     	;# 
   974  0EB2                     	;# 
   975  0F0F                     	;# 
   976  0F10                     	;# 
   977  0F11                     	;# 
   978  0F12                     	;# 
   979  0F13                     	;# 
   980  0F14                     	;# 
   981  0F15                     	;# 
   982  0F16                     	;# 
   983  0F17                     	;# 
   984  0F18                     	;# 
   985  0F19                     	;# 
   986  0F1A                     	;# 
   987  0F1B                     	;# 
   988  0F1C                     	;# 
   989  0F1D                     	;# 
   990  0F1E                     	;# 
   991  0F1F                     	;# 
   992  0F20                     	;# 
   993  0F21                     	;# 
   994  0F22                     	;# 
   995  0F23                     	;# 
   996  0F24                     	;# 
   997  0F25                     	;# 
   998  0F26                     	;# 
   999  0F27                     	;# 
  1000  0F28                     	;# 
  1001  0F29                     	;# 
  1002  0F2A                     	;# 
  1003  0F2B                     	;# 
  1004  0F2C                     	;# 
  1005  0F2D                     	;# 
  1006  0F2E                     	;# 
  1007  0F2F                     	;# 
  1008  0F30                     	;# 
  1009  0F31                     	;# 
  1010  0F32                     	;# 
  1011  0F33                     	;# 
  1012  0F34                     	;# 
  1013  0F35                     	;# 
  1014  0F36                     	;# 
  1015  0F37                     	;# 
  1016  0FE4                     	;# 
  1017  0FE5                     	;# 
  1018  0FE6                     	;# 
  1019  0FE7                     	;# 
  1020  0FE8                     	;# 
  1021  0FE9                     	;# 
  1022  0FEA                     	;# 
  1023  0FEB                     	;# 
  1024  0FED                     	;# 
  1025  0FEE                     	;# 
  1026  0FEF                     	;# 
  1027  0000                     	;# 
  1028  0001                     	;# 
  1029  0002                     	;# 
  1030  0003                     	;# 
  1031  0004                     	;# 
  1032  0005                     	;# 
  1033  0006                     	;# 
  1034  0007                     	;# 
  1035  0008                     	;# 
  1036  0009                     	;# 
  1037  000A                     	;# 
  1038  000B                     	;# 
  1039  000C                     	;# 
  1040  000D                     	;# 
  1041  000E                     	;# 
  1042  000F                     	;# 
  1043  0010                     	;# 
  1044  0011                     	;# 
  1045  0012                     	;# 
  1046  0013                     	;# 
  1047  0015                     	;# 
  1048  0016                     	;# 
  1049  0016                     	;# 
  1050  0017                     	;# 
  1051  0018                     	;# 
  1052  0019                     	;# 
  1053  001A                     	;# 
  1054  001B                     	;# 
  1055  001C                     	;# 
  1056  008C                     	;# 
  1057  008D                     	;# 
  1058  008E                     	;# 
  1059  008F                     	;# 
  1060  0090                     	;# 
  1061  0091                     	;# 
  1062  0092                     	;# 
  1063  0093                     	;# 
  1064  0095                     	;# 
  1065  0096                     	;# 
  1066  0097                     	;# 
  1067  0098                     	;# 
  1068  0099                     	;# 
  1069  009A                     	;# 
  1070  009B                     	;# 
  1071  009B                     	;# 
  1072  009C                     	;# 
  1073  009D                     	;# 
  1074  009E                     	;# 
  1075  009F                     	;# 
  1076  010C                     	;# 
  1077  010D                     	;# 
  1078  010E                     	;# 
  1079  010F                     	;# 
  1080  0110                     	;# 
  1081  0111                     	;# 
  1082  0112                     	;# 
  1083  0113                     	;# 
  1084  0114                     	;# 
  1085  0115                     	;# 
  1086  0116                     	;# 
  1087  0117                     	;# 
  1088  0118                     	;# 
  1089  0119                     	;# 
  1090  011A                     	;# 
  1091  011B                     	;# 
  1092  011B                     	;# 
  1093  011C                     	;# 
  1094  018C                     	;# 
  1095  018D                     	;# 
  1096  018E                     	;# 
  1097  018F                     	;# 
  1098  0190                     	;# 
  1099  0191                     	;# 
  1100  0191                     	;# 
  1101  0192                     	;# 
  1102  0193                     	;# 
  1103  0193                     	;# 
  1104  0194                     	;# 
  1105  0195                     	;# 
  1106  0196                     	;# 
  1107  0197                     	;# 
  1108  0199                     	;# 
  1109  0199                     	;# 
  1110  0199                     	;# 
  1111  019A                     	;# 
  1112  019A                     	;# 
  1113  019A                     	;# 
  1114  019B                     	;# 
  1115  019B                     	;# 
  1116  019B                     	;# 
  1117  019B                     	;# 
  1118  019B                     	;# 
  1119  019C                     	;# 
  1120  019C                     	;# 
  1121  019C                     	;# 
  1122  019D                     	;# 
  1123  019D                     	;# 
  1124  019D                     	;# 
  1125  019E                     	;# 
  1126  019E                     	;# 
  1127  019E                     	;# 
  1128  019F                     	;# 
  1129  019F                     	;# 
  1130  019F                     	;# 
  1131  019F                     	;# 
  1132  019F                     	;# 
  1133  020C                     	;# 
  1134  020D                     	;# 
  1135  020E                     	;# 
  1136  020F                     	;# 
  1137  0210                     	;# 
  1138  0211                     	;# 
  1139  0211                     	;# 
  1140  0212                     	;# 
  1141  0212                     	;# 
  1142  0213                     	;# 
  1143  0213                     	;# 
  1144  0214                     	;# 
  1145  0214                     	;# 
  1146  0215                     	;# 
  1147  0215                     	;# 
  1148  0215                     	;# 
  1149  0215                     	;# 
  1150  0216                     	;# 
  1151  0216                     	;# 
  1152  0217                     	;# 
  1153  0217                     	;# 
  1154  028C                     	;# 
  1155  028D                     	;# 
  1156  028E                     	;# 
  1157  028F                     	;# 
  1158  0290                     	;# 
  1159  0291                     	;# 
  1160  0291                     	;# 
  1161  0292                     	;# 
  1162  0293                     	;# 
  1163  0293                     	;# 
  1164  0298                     	;# 
  1165  0298                     	;# 
  1166  0299                     	;# 
  1167  029A                     	;# 
  1168  029A                     	;# 
  1169  029E                     	;# 
  1170  030C                     	;# 
  1171  030D                     	;# 
  1172  030E                     	;# 
  1173  030F                     	;# 
  1174  0310                     	;# 
  1175  038C                     	;# 
  1176  038D                     	;# 
  1177  038E                     	;# 
  1178  038F                     	;# 
  1179  0390                     	;# 
  1180  0391                     	;# 
  1181  0392                     	;# 
  1182  0393                     	;# 
  1183  0394                     	;# 
  1184  0395                     	;# 
  1185  0396                     	;# 
  1186  0397                     	;# 
  1187  0398                     	;# 
  1188  0399                     	;# 
  1189  039D                     	;# 
  1190  039E                     	;# 
  1191  039F                     	;# 
  1192  0415                     	;# 
  1193  0416                     	;# 
  1194  0417                     	;# 
  1195  041C                     	;# 
  1196  041D                     	;# 
  1197  041E                     	;# 
  1198  0498                     	;# 
  1199  0498                     	;# 
  1200  0499                     	;# 
  1201  049A                     	;# 
  1202  049B                     	;# 
  1203  049B                     	;# 
  1204  049C                     	;# 
  1205  049D                     	;# 
  1206  049E                     	;# 
  1207  049F                     	;# 
  1208  0511                     	;# 
  1209  0515                     	;# 
  1210  0617                     	;# 
  1211  0618                     	;# 
  1212  0619                     	;# 
  1213  0619                     	;# 
  1214  061A                     	;# 
  1215  061B                     	;# 
  1216  061C                     	;# 
  1217  061C                     	;# 
  1218  0691                     	;# 
  1219  0692                     	;# 
  1220  0693                     	;# 
  1221  0694                     	;# 
  1222  0695                     	;# 
  1223  0696                     	;# 
  1224  0697                     	;# 
  1225  0698                     	;# 
  1226  0699                     	;# 
  1227  069A                     	;# 
  1228  069B                     	;# 
  1229  069C                     	;# 
  1230  069D                     	;# 
  1231  069E                     	;# 
  1232  069F                     	;# 
  1233  0E0F                     	;# 
  1234  0E10                     	;# 
  1235  0E11                     	;# 
  1236  0E12                     	;# 
  1237  0E13                     	;# 
  1238  0E14                     	;# 
  1239  0E15                     	;# 
  1240  0E17                     	;# 
  1241  0E20                     	;# 
  1242  0E21                     	;# 
  1243  0E22                     	;# 
  1244  0E24                     	;# 
  1245  0E25                     	;# 
  1246  0E28                     	;# 
  1247  0E29                     	;# 
  1248  0E2A                     	;# 
  1249  0E2B                     	;# 
  1250  0E90                     	;# 
  1251  0E91                     	;# 
  1252  0E92                     	;# 
  1253  0E93                     	;# 
  1254  0E94                     	;# 
  1255  0E95                     	;# 
  1256  0E96                     	;# 
  1257  0E97                     	;# 
  1258  0E98                     	;# 
  1259  0E99                     	;# 
  1260  0E9A                     	;# 
  1261  0E9B                     	;# 
  1262  0E9C                     	;# 
  1263  0E9D                     	;# 
  1264  0E9E                     	;# 
  1265  0E9F                     	;# 
  1266  0EA0                     	;# 
  1267  0EA1                     	;# 
  1268  0EA2                     	;# 
  1269  0EA3                     	;# 
  1270  0EA4                     	;# 
  1271  0EA5                     	;# 
  1272  0EA6                     	;# 
  1273  0EA7                     	;# 
  1274  0EA8                     	;# 
  1275  0EA9                     	;# 
  1276  0EAA                     	;# 
  1277  0EAB                     	;# 
  1278  0EAC                     	;# 
  1279  0EAD                     	;# 
  1280  0EAE                     	;# 
  1281  0EAF                     	;# 
  1282  0EB0                     	;# 
  1283  0EB1                     	;# 
  1284  0EB2                     	;# 
  1285  0F0F                     	;# 
  1286  0F10                     	;# 
  1287  0F11                     	;# 
  1288  0F12                     	;# 
  1289  0F13                     	;# 
  1290  0F14                     	;# 
  1291  0F15                     	;# 
  1292  0F16                     	;# 
  1293  0F17                     	;# 
  1294  0F18                     	;# 
  1295  0F19                     	;# 
  1296  0F1A                     	;# 
  1297  0F1B                     	;# 
  1298  0F1C                     	;# 
  1299  0F1D                     	;# 
  1300  0F1E                     	;# 
  1301  0F1F                     	;# 
  1302  0F20                     	;# 
  1303  0F21                     	;# 
  1304  0F22                     	;# 
  1305  0F23                     	;# 
  1306  0F24                     	;# 
  1307  0F25                     	;# 
  1308  0F26                     	;# 
  1309  0F27                     	;# 
  1310  0F28                     	;# 
  1311  0F29                     	;# 
  1312  0F2A                     	;# 
  1313  0F2B                     	;# 
  1314  0F2C                     	;# 
  1315  0F2D                     	;# 
  1316  0F2E                     	;# 
  1317  0F2F                     	;# 
  1318  0F30                     	;# 
  1319  0F31                     	;# 
  1320  0F32                     	;# 
  1321  0F33                     	;# 
  1322  0F34                     	;# 
  1323  0F35                     	;# 
  1324  0F36                     	;# 
  1325  0F37                     	;# 
  1326  0FE4                     	;# 
  1327  0FE5                     	;# 
  1328  0FE6                     	;# 
  1329  0FE7                     	;# 
  1330  0FE8                     	;# 
  1331  0FE9                     	;# 
  1332  0FEA                     	;# 
  1333  0FEB                     	;# 
  1334  0FED                     	;# 
  1335  0FEE                     	;# 
  1336  0FEF                     	;# 
  1337  0000                     	;# 
  1338  0001                     	;# 
  1339  0002                     	;# 
  1340  0003                     	;# 
  1341  0004                     	;# 
  1342  0005                     	;# 
  1343  0006                     	;# 
  1344  0007                     	;# 
  1345  0008                     	;# 
  1346  0009                     	;# 
  1347  000A                     	;# 
  1348  000B                     	;# 
  1349  000C                     	;# 
  1350  000D                     	;# 
  1351  000E                     	;# 
  1352  000F                     	;# 
  1353  0010                     	;# 
  1354  0011                     	;# 
  1355  0012                     	;# 
  1356  0013                     	;# 
  1357  0015                     	;# 
  1358  0016                     	;# 
  1359  0016                     	;# 
  1360  0017                     	;# 
  1361  0018                     	;# 
  1362  0019                     	;# 
  1363  001A                     	;# 
  1364  001B                     	;# 
  1365  001C                     	;# 
  1366  008C                     	;# 
  1367  008D                     	;# 
  1368  008E                     	;# 
  1369  008F                     	;# 
  1370  0090                     	;# 
  1371  0091                     	;# 
  1372  0092                     	;# 
  1373  0093                     	;# 
  1374  0095                     	;# 
  1375  0096                     	;# 
  1376  0097                     	;# 
  1377  0098                     	;# 
  1378  0099                     	;# 
  1379  009A                     	;# 
  1380  009B                     	;# 
  1381  009B                     	;# 
  1382  009C                     	;# 
  1383  009D                     	;# 
  1384  009E                     	;# 
  1385  009F                     	;# 
  1386  010C                     	;# 
  1387  010D                     	;# 
  1388  010E                     	;# 
  1389  010F                     	;# 
  1390  0110                     	;# 
  1391  0111                     	;# 
  1392  0112                     	;# 
  1393  0113                     	;# 
  1394  0114                     	;# 
  1395  0115                     	;# 
  1396  0116                     	;# 
  1397  0117                     	;# 
  1398  0118                     	;# 
  1399  0119                     	;# 
  1400  011A                     	;# 
  1401  011B                     	;# 
  1402  011B                     	;# 
  1403  011C                     	;# 
  1404  018C                     	;# 
  1405  018D                     	;# 
  1406  018E                     	;# 
  1407  018F                     	;# 
  1408  0190                     	;# 
  1409  0191                     	;# 
  1410  0191                     	;# 
  1411  0192                     	;# 
  1412  0193                     	;# 
  1413  0193                     	;# 
  1414  0194                     	;# 
  1415  0195                     	;# 
  1416  0196                     	;# 
  1417  0197                     	;# 
  1418  0199                     	;# 
  1419  0199                     	;# 
  1420  0199                     	;# 
  1421  019A                     	;# 
  1422  019A                     	;# 
  1423  019A                     	;# 
  1424  019B                     	;# 
  1425  019B                     	;# 
  1426  019B                     	;# 
  1427  019B                     	;# 
  1428  019B                     	;# 
  1429  019C                     	;# 
  1430  019C                     	;# 
  1431  019C                     	;# 
  1432  019D                     	;# 
  1433  019D                     	;# 
  1434  019D                     	;# 
  1435  019E                     	;# 
  1436  019E                     	;# 
  1437  019E                     	;# 
  1438  019F                     	;# 
  1439  019F                     	;# 
  1440  019F                     	;# 
  1441  019F                     	;# 
  1442  019F                     	;# 
  1443  020C                     	;# 
  1444  020D                     	;# 
  1445  020E                     	;# 
  1446  020F                     	;# 
  1447  0210                     	;# 
  1448  0211                     	;# 
  1449  0211                     	;# 
  1450  0212                     	;# 
  1451  0212                     	;# 
  1452  0213                     	;# 
  1453  0213                     	;# 
  1454  0214                     	;# 
  1455  0214                     	;# 
  1456  0215                     	;# 
  1457  0215                     	;# 
  1458  0215                     	;# 
  1459  0215                     	;# 
  1460  0216                     	;# 
  1461  0216                     	;# 
  1462  0217                     	;# 
  1463  0217                     	;# 
  1464  028C                     	;# 
  1465  028D                     	;# 
  1466  028E                     	;# 
  1467  028F                     	;# 
  1468  0290                     	;# 
  1469  0291                     	;# 
  1470  0291                     	;# 
  1471  0292                     	;# 
  1472  0293                     	;# 
  1473  0293                     	;# 
  1474  0298                     	;# 
  1475  0298                     	;# 
  1476  0299                     	;# 
  1477  029A                     	;# 
  1478  029A                     	;# 
  1479  029E                     	;# 
  1480  030C                     	;# 
  1481  030D                     	;# 
  1482  030E                     	;# 
  1483  030F                     	;# 
  1484  0310                     	;# 
  1485  038C                     	;# 
  1486  038D                     	;# 
  1487  038E                     	;# 
  1488  038F                     	;# 
  1489  0390                     	;# 
  1490  0391                     	;# 
  1491  0392                     	;# 
  1492  0393                     	;# 
  1493  0394                     	;# 
  1494  0395                     	;# 
  1495  0396                     	;# 
  1496  0397                     	;# 
  1497  0398                     	;# 
  1498  0399                     	;# 
  1499  039D                     	;# 
  1500  039E                     	;# 
  1501  039F                     	;# 
  1502  0415                     	;# 
  1503  0416                     	;# 
  1504  0417                     	;# 
  1505  041C                     	;# 
  1506  041D                     	;# 
  1507  041E                     	;# 
  1508  0498                     	;# 
  1509  0498                     	;# 
  1510  0499                     	;# 
  1511  049A                     	;# 
  1512  049B                     	;# 
  1513  049B                     	;# 
  1514  049C                     	;# 
  1515  049D                     	;# 
  1516  049E                     	;# 
  1517  049F                     	;# 
  1518  0511                     	;# 
  1519  0515                     	;# 
  1520  0617                     	;# 
  1521  0618                     	;# 
  1522  0619                     	;# 
  1523  0619                     	;# 
  1524  061A                     	;# 
  1525  061B                     	;# 
  1526  061C                     	;# 
  1527  061C                     	;# 
  1528  0691                     	;# 
  1529  0692                     	;# 
  1530  0693                     	;# 
  1531  0694                     	;# 
  1532  0695                     	;# 
  1533  0696                     	;# 
  1534  0697                     	;# 
  1535  0698                     	;# 
  1536  0699                     	;# 
  1537  069A                     	;# 
  1538  069B                     	;# 
  1539  069C                     	;# 
  1540  069D                     	;# 
  1541  069E                     	;# 
  1542  069F                     	;# 
  1543  0E0F                     	;# 
  1544  0E10                     	;# 
  1545  0E11                     	;# 
  1546  0E12                     	;# 
  1547  0E13                     	;# 
  1548  0E14                     	;# 
  1549  0E15                     	;# 
  1550  0E17                     	;# 
  1551  0E20                     	;# 
  1552  0E21                     	;# 
  1553  0E22                     	;# 
  1554  0E24                     	;# 
  1555  0E25                     	;# 
  1556  0E28                     	;# 
  1557  0E29                     	;# 
  1558  0E2A                     	;# 
  1559  0E2B                     	;# 
  1560  0E90                     	;# 
  1561  0E91                     	;# 
  1562  0E92                     	;# 
  1563  0E93                     	;# 
  1564  0E94                     	;# 
  1565  0E95                     	;# 
  1566  0E96                     	;# 
  1567  0E97                     	;# 
  1568  0E98                     	;# 
  1569  0E99                     	;# 
  1570  0E9A                     	;# 
  1571  0E9B                     	;# 
  1572  0E9C                     	;# 
  1573  0E9D                     	;# 
  1574  0E9E                     	;# 
  1575  0E9F                     	;# 
  1576  0EA0                     	;# 
  1577  0EA1                     	;# 
  1578  0EA2                     	;# 
  1579  0EA3                     	;# 
  1580  0EA4                     	;# 
  1581  0EA5                     	;# 
  1582  0EA6                     	;# 
  1583  0EA7                     	;# 
  1584  0EA8                     	;# 
  1585  0EA9                     	;# 
  1586  0EAA                     	;# 
  1587  0EAB                     	;# 
  1588  0EAC                     	;# 
  1589  0EAD                     	;# 
  1590  0EAE                     	;# 
  1591  0EAF                     	;# 
  1592  0EB0                     	;# 
  1593  0EB1                     	;# 
  1594  0EB2                     	;# 
  1595  0F0F                     	;# 
  1596  0F10                     	;# 
  1597  0F11                     	;# 
  1598  0F12                     	;# 
  1599  0F13                     	;# 
  1600  0F14                     	;# 
  1601  0F15                     	;# 
  1602  0F16                     	;# 
  1603  0F17                     	;# 
  1604  0F18                     	;# 
  1605  0F19                     	;# 
  1606  0F1A                     	;# 
  1607  0F1B                     	;# 
  1608  0F1C                     	;# 
  1609  0F1D                     	;# 
  1610  0F1E                     	;# 
  1611  0F1F                     	;# 
  1612  0F20                     	;# 
  1613  0F21                     	;# 
  1614  0F22                     	;# 
  1615  0F23                     	;# 
  1616  0F24                     	;# 
  1617  0F25                     	;# 
  1618  0F26                     	;# 
  1619  0F27                     	;# 
  1620  0F28                     	;# 
  1621  0F29                     	;# 
  1622  0F2A                     	;# 
  1623  0F2B                     	;# 
  1624  0F2C                     	;# 
  1625  0F2D                     	;# 
  1626  0F2E                     	;# 
  1627  0F2F                     	;# 
  1628  0F30                     	;# 
  1629  0F31                     	;# 
  1630  0F32                     	;# 
  1631  0F33                     	;# 
  1632  0F34                     	;# 
  1633  0F35                     	;# 
  1634  0F36                     	;# 
  1635  0F37                     	;# 
  1636  0FE4                     	;# 
  1637  0FE5                     	;# 
  1638  0FE6                     	;# 
  1639  0FE7                     	;# 
  1640  0FE8                     	;# 
  1641  0FE9                     	;# 
  1642  0FEA                     	;# 
  1643  0FEB                     	;# 
  1644  0FED                     	;# 
  1645  0FEE                     	;# 
  1646  0FEF                     	;# 
  1647                           
  1648                           	psect	stringtext
  1649  002B                     __pstringtext:	
  1650  002B                     _dpowers:	
  1651  002B  3401               	retlw	1
  1652  002C  3400               	retlw	0
  1653  002D  3400               	retlw	0
  1654  002E  3400               	retlw	0
  1655  002F  340A               	retlw	10
  1656  0030  3400               	retlw	0
  1657  0031  3400               	retlw	0
  1658  0032  3400               	retlw	0
  1659  0033  3464               	retlw	100
  1660  0034  3400               	retlw	0
  1661  0035  3400               	retlw	0
  1662  0036  3400               	retlw	0
  1663  0037  34E8               	retlw	232
  1664  0038  3403               	retlw	3
  1665  0039  3400               	retlw	0
  1666  003A  3400               	retlw	0
  1667  003B  3410               	retlw	16
  1668  003C  3427               	retlw	39
  1669  003D  3400               	retlw	0
  1670  003E  3400               	retlw	0
  1671  003F  34A0               	retlw	160
  1672  0040  3486               	retlw	134
  1673  0041  3401               	retlw	1
  1674  0042  3400               	retlw	0
  1675  0043  3440               	retlw	64
  1676  0044  3442               	retlw	66
  1677  0045  340F               	retlw	15
  1678  0046  3400               	retlw	0
  1679  0047  3480               	retlw	128
  1680  0048  3496               	retlw	150
  1681  0049  3498               	retlw	152
  1682  004A  3400               	retlw	0
  1683  004B  3400               	retlw	0
  1684  004C  34E1               	retlw	225
  1685  004D  34F5               	retlw	245
  1686  004E  3405               	retlw	5
  1687  004F  3400               	retlw	0
  1688  0050  34CA               	retlw	202
  1689  0051  349A               	retlw	154
  1690  0052  343B               	retlw	59
  1691  0053                     __end_of_dpowers:	
  1692  0053                     _OledFont:	
  1693  0053  3400               	retlw	0
  1694  0054  3400               	retlw	0
  1695  0055  3400               	retlw	0
  1696  0056  3400               	retlw	0
  1697  0057  3400               	retlw	0
  1698  0058  3400               	retlw	0
  1699  0059  3400               	retlw	0
  1700  005A  3400               	retlw	0
  1701  005B  3400               	retlw	0
  1702  005C  3400               	retlw	0
  1703  005D  345F               	retlw	95
  1704  005E  3400               	retlw	0
  1705  005F  3400               	retlw	0
  1706  0060  3400               	retlw	0
  1707  0061  3400               	retlw	0
  1708  0062  3400               	retlw	0
  1709  0063  3400               	retlw	0
  1710  0064  3400               	retlw	0
  1711  0065  3407               	retlw	7
  1712  0066  3400               	retlw	0
  1713  0067  3407               	retlw	7
  1714  0068  3400               	retlw	0
  1715  0069  3400               	retlw	0
  1716  006A  3400               	retlw	0
  1717  006B  3400               	retlw	0
  1718  006C  3414               	retlw	20
  1719  006D  347F               	retlw	127
  1720  006E  3414               	retlw	20
  1721  006F  347F               	retlw	127
  1722  0070  3414               	retlw	20
  1723  0071  3400               	retlw	0
  1724  0072  3400               	retlw	0
  1725  0073  3400               	retlw	0
  1726  0074  3424               	retlw	36
  1727  0075  342A               	retlw	42
  1728  0076  347F               	retlw	127
  1729  0077  342A               	retlw	42
  1730  0078  3412               	retlw	18
  1731  0079  3400               	retlw	0
  1732  007A  3400               	retlw	0
  1733  007B  3400               	retlw	0
  1734  007C  3423               	retlw	35
  1735  007D  3413               	retlw	19
  1736  007E  3408               	retlw	8
  1737  007F  3464               	retlw	100
  1738  0080  3462               	retlw	98
  1739  0081  3400               	retlw	0
  1740  0082  3400               	retlw	0
  1741  0083  3400               	retlw	0
  1742  0084  3436               	retlw	54
  1743  0085  3449               	retlw	73
  1744  0086  3455               	retlw	85
  1745  0087  3422               	retlw	34
  1746  0088  3450               	retlw	80
  1747  0089  3400               	retlw	0
  1748  008A  3400               	retlw	0
  1749  008B  3400               	retlw	0
  1750  008C  3400               	retlw	0
  1751  008D  3405               	retlw	5
  1752  008E  3403               	retlw	3
  1753  008F  3400               	retlw	0
  1754  0090  3400               	retlw	0
  1755  0091  3400               	retlw	0
  1756  0092  3400               	retlw	0
  1757  0093  3400               	retlw	0
  1758  0094  341C               	retlw	28
  1759  0095  3422               	retlw	34
  1760  0096  3441               	retlw	65
  1761  0097  3400               	retlw	0
  1762  0098  3400               	retlw	0
  1763  0099  3400               	retlw	0
  1764  009A  3400               	retlw	0
  1765  009B  3400               	retlw	0
  1766  009C  3441               	retlw	65
  1767  009D  3422               	retlw	34
  1768  009E  341C               	retlw	28
  1769  009F  3400               	retlw	0
  1770  00A0  3400               	retlw	0
  1771  00A1  3400               	retlw	0
  1772  00A2  3400               	retlw	0
  1773  00A3  3400               	retlw	0
  1774  00A4  3408               	retlw	8
  1775  00A5  342A               	retlw	42
  1776  00A6  341C               	retlw	28
  1777  00A7  342A               	retlw	42
  1778  00A8  3408               	retlw	8
  1779  00A9  3400               	retlw	0
  1780  00AA  3400               	retlw	0
  1781  00AB  3400               	retlw	0
  1782  00AC  3408               	retlw	8
  1783  00AD  3408               	retlw	8
  1784  00AE  343E               	retlw	62
  1785  00AF  3408               	retlw	8
  1786  00B0  3408               	retlw	8
  1787  00B1  3400               	retlw	0
  1788  00B2  3400               	retlw	0
  1789  00B3  3400               	retlw	0
  1790  00B4  34A0               	retlw	160
  1791  00B5  3460               	retlw	96
  1792  00B6  3400               	retlw	0
  1793  00B7  3400               	retlw	0
  1794  00B8  3400               	retlw	0
  1795  00B9  3400               	retlw	0
  1796  00BA  3400               	retlw	0
  1797  00BB  3400               	retlw	0
  1798  00BC  3408               	retlw	8
  1799  00BD  3408               	retlw	8
  1800  00BE  3408               	retlw	8
  1801  00BF  3408               	retlw	8
  1802  00C0  3408               	retlw	8
  1803  00C1  3400               	retlw	0
  1804  00C2  3400               	retlw	0
  1805  00C3  3400               	retlw	0
  1806  00C4  3460               	retlw	96
  1807  00C5  3460               	retlw	96
  1808  00C6  3400               	retlw	0
  1809  00C7  3400               	retlw	0
  1810  00C8  3400               	retlw	0
  1811  00C9  3400               	retlw	0
  1812  00CA  3400               	retlw	0
  1813  00CB  3400               	retlw	0
  1814  00CC  3420               	retlw	32
  1815  00CD  3410               	retlw	16
  1816  00CE  3408               	retlw	8
  1817  00CF  3404               	retlw	4
  1818  00D0  3402               	retlw	2
  1819  00D1  3400               	retlw	0
  1820  00D2  3400               	retlw	0
  1821  00D3  3400               	retlw	0
  1822  00D4  343E               	retlw	62
  1823  00D5  3451               	retlw	81
  1824  00D6  3449               	retlw	73
  1825  00D7  3445               	retlw	69
  1826  00D8  343E               	retlw	62
  1827  00D9  3400               	retlw	0
  1828  00DA  3400               	retlw	0
  1829  00DB  3400               	retlw	0
  1830  00DC  3400               	retlw	0
  1831  00DD  3442               	retlw	66
  1832  00DE  347F               	retlw	127
  1833  00DF  3440               	retlw	64
  1834  00E0  3400               	retlw	0
  1835  00E1  3400               	retlw	0
  1836  00E2  3400               	retlw	0
  1837  00E3  3400               	retlw	0
  1838  00E4  3462               	retlw	98
  1839  00E5  3451               	retlw	81
  1840  00E6  3449               	retlw	73
  1841  00E7  3449               	retlw	73
  1842  00E8  3446               	retlw	70
  1843  00E9  3400               	retlw	0
  1844  00EA  3400               	retlw	0
  1845  00EB  3400               	retlw	0
  1846  00EC  3422               	retlw	34
  1847  00ED  3441               	retlw	65
  1848  00EE  3449               	retlw	73
  1849  00EF  3449               	retlw	73
  1850  00F0  3436               	retlw	54
  1851  00F1  3400               	retlw	0
  1852  00F2  3400               	retlw	0
  1853  00F3  3400               	retlw	0
  1854  00F4  3418               	retlw	24
  1855  00F5  3414               	retlw	20
  1856  00F6  3412               	retlw	18
  1857  00F7  347F               	retlw	127
  1858  00F8  3410               	retlw	16
  1859  00F9  3400               	retlw	0
  1860  00FA  3400               	retlw	0
  1861  00FB  3400               	retlw	0
  1862  00FC  3427               	retlw	39
  1863  00FD  3445               	retlw	69
  1864  00FE  3445               	retlw	69
  1865  00FF  3445               	retlw	69
  1866  0100  3439               	retlw	57
  1867  0101  3400               	retlw	0
  1868  0102  3400               	retlw	0
  1869  0103  3400               	retlw	0
  1870  0104  343C               	retlw	60
  1871  0105  344A               	retlw	74
  1872  0106  3449               	retlw	73
  1873  0107  3449               	retlw	73
  1874  0108  3430               	retlw	48
  1875  0109  3400               	retlw	0
  1876  010A  3400               	retlw	0
  1877  010B  3400               	retlw	0
  1878  010C  3401               	retlw	1
  1879  010D  3471               	retlw	113
  1880  010E  3409               	retlw	9
  1881  010F  3405               	retlw	5
  1882  0110  3403               	retlw	3
  1883  0111  3400               	retlw	0
  1884  0112  3400               	retlw	0
  1885  0113  3400               	retlw	0
  1886  0114  3436               	retlw	54
  1887  0115  3449               	retlw	73
  1888  0116  3449               	retlw	73
  1889  0117  3449               	retlw	73
  1890  0118  3436               	retlw	54
  1891  0119  3400               	retlw	0
  1892  011A  3400               	retlw	0
  1893  011B  3400               	retlw	0
  1894  011C  3406               	retlw	6
  1895  011D  3449               	retlw	73
  1896  011E  3449               	retlw	73
  1897  011F  3429               	retlw	41
  1898  0120  341E               	retlw	30
  1899  0121  3400               	retlw	0
  1900  0122  3400               	retlw	0
  1901  0123  3400               	retlw	0
  1902  0124  3400               	retlw	0
  1903  0125  3436               	retlw	54
  1904  0126  3436               	retlw	54
  1905  0127  3400               	retlw	0
  1906  0128  3400               	retlw	0
  1907  0129  3400               	retlw	0
  1908  012A  3400               	retlw	0
  1909  012B  3400               	retlw	0
  1910  012C  3400               	retlw	0
  1911  012D  34AC               	retlw	172
  1912  012E  346C               	retlw	108
  1913  012F  3400               	retlw	0
  1914  0130  3400               	retlw	0
  1915  0131  3400               	retlw	0
  1916  0132  3400               	retlw	0
  1917  0133  3400               	retlw	0
  1918  0134  3408               	retlw	8
  1919  0135  3414               	retlw	20
  1920  0136  3422               	retlw	34
  1921  0137  3441               	retlw	65
  1922  0138  3400               	retlw	0
  1923  0139  3400               	retlw	0
  1924  013A  3400               	retlw	0
  1925  013B  3400               	retlw	0
  1926  013C  3414               	retlw	20
  1927  013D  3414               	retlw	20
  1928  013E  3414               	retlw	20
  1929  013F  3414               	retlw	20
  1930  0140  3414               	retlw	20
  1931  0141  3400               	retlw	0
  1932  0142  3400               	retlw	0
  1933  0143  3400               	retlw	0
  1934  0144  3441               	retlw	65
  1935  0145  3422               	retlw	34
  1936  0146  3414               	retlw	20
  1937  0147  3408               	retlw	8
  1938  0148  3400               	retlw	0
  1939  0149  3400               	retlw	0
  1940  014A  3400               	retlw	0
  1941  014B  3400               	retlw	0
  1942  014C  3402               	retlw	2
  1943  014D  3401               	retlw	1
  1944  014E  3451               	retlw	81
  1945  014F  3409               	retlw	9
  1946  0150  3406               	retlw	6
  1947  0151  3400               	retlw	0
  1948  0152  3400               	retlw	0
  1949  0153  3400               	retlw	0
  1950  0154  3432               	retlw	50
  1951  0155  3449               	retlw	73
  1952  0156  3479               	retlw	121
  1953  0157  3441               	retlw	65
  1954  0158  343E               	retlw	62
  1955  0159  3400               	retlw	0
  1956  015A  3400               	retlw	0
  1957  015B  3400               	retlw	0
  1958  015C  347E               	retlw	126
  1959  015D  3409               	retlw	9
  1960  015E  3409               	retlw	9
  1961  015F  3409               	retlw	9
  1962  0160  347E               	retlw	126
  1963  0161  3400               	retlw	0
  1964  0162  3400               	retlw	0
  1965  0163  3400               	retlw	0
  1966  0164  347F               	retlw	127
  1967  0165  3449               	retlw	73
  1968  0166  3449               	retlw	73
  1969  0167  3449               	retlw	73
  1970  0168  3436               	retlw	54
  1971  0169  3400               	retlw	0
  1972  016A  3400               	retlw	0
  1973  016B  3400               	retlw	0
  1974  016C  343E               	retlw	62
  1975  016D  3441               	retlw	65
  1976  016E  3441               	retlw	65
  1977  016F  3441               	retlw	65
  1978  0170  3422               	retlw	34
  1979  0171  3400               	retlw	0
  1980  0172  3400               	retlw	0
  1981  0173  3400               	retlw	0
  1982  0174  347F               	retlw	127
  1983  0175  3441               	retlw	65
  1984  0176  3441               	retlw	65
  1985  0177  3422               	retlw	34
  1986  0178  341C               	retlw	28
  1987  0179  3400               	retlw	0
  1988  017A  3400               	retlw	0
  1989  017B  3400               	retlw	0
  1990  017C  347F               	retlw	127
  1991  017D  3449               	retlw	73
  1992  017E  3449               	retlw	73
  1993  017F  3449               	retlw	73
  1994  0180  3441               	retlw	65
  1995  0181  3400               	retlw	0
  1996  0182  3400               	retlw	0
  1997  0183  3400               	retlw	0
  1998  0184  347F               	retlw	127
  1999  0185  3409               	retlw	9
  2000  0186  3409               	retlw	9
  2001  0187  3409               	retlw	9
  2002  0188  3401               	retlw	1
  2003  0189  3400               	retlw	0
  2004  018A  3400               	retlw	0
  2005  018B  3400               	retlw	0
  2006  018C  343E               	retlw	62
  2007  018D  3441               	retlw	65
  2008  018E  3441               	retlw	65
  2009  018F  3451               	retlw	81
  2010  0190  3472               	retlw	114
  2011  0191  3400               	retlw	0
  2012  0192  3400               	retlw	0
  2013  0193  3400               	retlw	0
  2014  0194  347F               	retlw	127
  2015  0195  3408               	retlw	8
  2016  0196  3408               	retlw	8
  2017  0197  3408               	retlw	8
  2018  0198  347F               	retlw	127
  2019  0199  3400               	retlw	0
  2020  019A  3400               	retlw	0
  2021  019B  3400               	retlw	0
  2022  019C  3441               	retlw	65
  2023  019D  347F               	retlw	127
  2024  019E  3441               	retlw	65
  2025  019F  3400               	retlw	0
  2026  01A0  3400               	retlw	0
  2027  01A1  3400               	retlw	0
  2028  01A2  3400               	retlw	0
  2029  01A3  3400               	retlw	0
  2030  01A4  3420               	retlw	32
  2031  01A5  3440               	retlw	64
  2032  01A6  3441               	retlw	65
  2033  01A7  343F               	retlw	63
  2034  01A8  3401               	retlw	1
  2035  01A9  3400               	retlw	0
  2036  01AA  3400               	retlw	0
  2037  01AB  3400               	retlw	0
  2038  01AC  347F               	retlw	127
  2039  01AD  3408               	retlw	8
  2040  01AE  3414               	retlw	20
  2041  01AF  3422               	retlw	34
  2042  01B0  3441               	retlw	65
  2043  01B1  3400               	retlw	0
  2044  01B2  3400               	retlw	0
  2045  01B3  3400               	retlw	0
  2046  01B4  347F               	retlw	127
  2047  01B5  3440               	retlw	64
  2048  01B6  3440               	retlw	64
  2049  01B7  3440               	retlw	64
  2050  01B8  3440               	retlw	64
  2051  01B9  3400               	retlw	0
  2052  01BA  3400               	retlw	0
  2053  01BB  3400               	retlw	0
  2054  01BC  347F               	retlw	127
  2055  01BD  3402               	retlw	2
  2056  01BE  340C               	retlw	12
  2057  01BF  3402               	retlw	2
  2058  01C0  347F               	retlw	127
  2059  01C1  3400               	retlw	0
  2060  01C2  3400               	retlw	0
  2061  01C3  3400               	retlw	0
  2062  01C4  347F               	retlw	127
  2063  01C5  3404               	retlw	4
  2064  01C6  3408               	retlw	8
  2065  01C7  3410               	retlw	16
  2066  01C8  347F               	retlw	127
  2067  01C9  3400               	retlw	0
  2068  01CA  3400               	retlw	0
  2069  01CB  3400               	retlw	0
  2070  01CC  343E               	retlw	62
  2071  01CD  3441               	retlw	65
  2072  01CE  3441               	retlw	65
  2073  01CF  3441               	retlw	65
  2074  01D0  343E               	retlw	62
  2075  01D1  3400               	retlw	0
  2076  01D2  3400               	retlw	0
  2077  01D3  3400               	retlw	0
  2078  01D4  347F               	retlw	127
  2079  01D5  3409               	retlw	9
  2080  01D6  3409               	retlw	9
  2081  01D7  3409               	retlw	9
  2082  01D8  3406               	retlw	6
  2083  01D9  3400               	retlw	0
  2084  01DA  3400               	retlw	0
  2085  01DB  3400               	retlw	0
  2086  01DC  343E               	retlw	62
  2087  01DD  3441               	retlw	65
  2088  01DE  3451               	retlw	81
  2089  01DF  3421               	retlw	33
  2090  01E0  345E               	retlw	94
  2091  01E1  3400               	retlw	0
  2092  01E2  3400               	retlw	0
  2093  01E3  3400               	retlw	0
  2094  01E4  347F               	retlw	127
  2095  01E5  3409               	retlw	9
  2096  01E6  3419               	retlw	25
  2097  01E7  3429               	retlw	41
  2098  01E8  3446               	retlw	70
  2099  01E9  3400               	retlw	0
  2100  01EA  3400               	retlw	0
  2101  01EB  3400               	retlw	0
  2102  01EC  3426               	retlw	38
  2103  01ED  3449               	retlw	73
  2104  01EE  3449               	retlw	73
  2105  01EF  3449               	retlw	73
  2106  01F0  3432               	retlw	50
  2107  01F1  3400               	retlw	0
  2108  01F2  3400               	retlw	0
  2109  01F3  3400               	retlw	0
  2110  01F4  3401               	retlw	1
  2111  01F5  3401               	retlw	1
  2112  01F6  347F               	retlw	127
  2113  01F7  3401               	retlw	1
  2114  01F8  3401               	retlw	1
  2115  01F9  3400               	retlw	0
  2116  01FA  3400               	retlw	0
  2117  01FB  3400               	retlw	0
  2118  01FC  343F               	retlw	63
  2119  01FD  3440               	retlw	64
  2120  01FE  3440               	retlw	64
  2121  01FF  3440               	retlw	64
  2122  0200  343F               	retlw	63
  2123  0201  3400               	retlw	0
  2124  0202  3400               	retlw	0
  2125  0203  3400               	retlw	0
  2126  0204  341F               	retlw	31
  2127  0205  3420               	retlw	32
  2128  0206  3440               	retlw	64
  2129  0207  3420               	retlw	32
  2130  0208  341F               	retlw	31
  2131  0209  3400               	retlw	0
  2132  020A  3400               	retlw	0
  2133  020B  3400               	retlw	0
  2134  020C  343F               	retlw	63
  2135  020D  3440               	retlw	64
  2136  020E  3438               	retlw	56
  2137  020F  3440               	retlw	64
  2138  0210  343F               	retlw	63
  2139  0211  3400               	retlw	0
  2140  0212  3400               	retlw	0
  2141  0213  3400               	retlw	0
  2142  0214  3463               	retlw	99
  2143  0215  3414               	retlw	20
  2144  0216  3408               	retlw	8
  2145  0217  3414               	retlw	20
  2146  0218  3463               	retlw	99
  2147  0219  3400               	retlw	0
  2148  021A  3400               	retlw	0
  2149  021B  3400               	retlw	0
  2150  021C  3403               	retlw	3
  2151  021D  3404               	retlw	4
  2152  021E  3478               	retlw	120
  2153  021F  3404               	retlw	4
  2154  0220  3403               	retlw	3
  2155  0221  3400               	retlw	0
  2156  0222  3400               	retlw	0
  2157  0223  3400               	retlw	0
  2158  0224  3461               	retlw	97
  2159  0225  3451               	retlw	81
  2160  0226  3449               	retlw	73
  2161  0227  3445               	retlw	69
  2162  0228  3443               	retlw	67
  2163  0229  3400               	retlw	0
  2164  022A  3400               	retlw	0
  2165  022B  3400               	retlw	0
  2166  022C  347F               	retlw	127
  2167  022D  3441               	retlw	65
  2168  022E  3441               	retlw	65
  2169  022F  3400               	retlw	0
  2170  0230  3400               	retlw	0
  2171  0231  3400               	retlw	0
  2172  0232  3400               	retlw	0
  2173  0233  3400               	retlw	0
  2174  0234  3402               	retlw	2
  2175  0235  3404               	retlw	4
  2176  0236  3408               	retlw	8
  2177  0237  3410               	retlw	16
  2178  0238  3420               	retlw	32
  2179  0239  3400               	retlw	0
  2180  023A  3400               	retlw	0
  2181  023B  3400               	retlw	0
  2182  023C  3441               	retlw	65
  2183  023D  3441               	retlw	65
  2184  023E  347F               	retlw	127
  2185  023F  3400               	retlw	0
  2186  0240  3400               	retlw	0
  2187  0241  3400               	retlw	0
  2188  0242  3400               	retlw	0
  2189  0243  3400               	retlw	0
  2190  0244  3404               	retlw	4
  2191  0245  3402               	retlw	2
  2192  0246  3401               	retlw	1
  2193  0247  3402               	retlw	2
  2194  0248  3404               	retlw	4
  2195  0249  3400               	retlw	0
  2196  024A  3400               	retlw	0
  2197  024B  3400               	retlw	0
  2198  024C  3480               	retlw	128
  2199  024D  3480               	retlw	128
  2200  024E  3480               	retlw	128
  2201  024F  3480               	retlw	128
  2202  0250  3480               	retlw	128
  2203  0251  3400               	retlw	0
  2204  0252  3400               	retlw	0
  2205  0253  3400               	retlw	0
  2206  0254  3401               	retlw	1
  2207  0255  3402               	retlw	2
  2208  0256  3404               	retlw	4
  2209  0257  3400               	retlw	0
  2210  0258  3400               	retlw	0
  2211  0259  3400               	retlw	0
  2212  025A  3400               	retlw	0
  2213  025B  3400               	retlw	0
  2214  025C  3420               	retlw	32
  2215  025D  3454               	retlw	84
  2216  025E  3454               	retlw	84
  2217  025F  3454               	retlw	84
  2218  0260  3478               	retlw	120
  2219  0261  3400               	retlw	0
  2220  0262  3400               	retlw	0
  2221  0263  3400               	retlw	0
  2222  0264  347F               	retlw	127
  2223  0265  3448               	retlw	72
  2224  0266  3444               	retlw	68
  2225  0267  3444               	retlw	68
  2226  0268  3438               	retlw	56
  2227  0269  3400               	retlw	0
  2228  026A  3400               	retlw	0
  2229  026B  3400               	retlw	0
  2230  026C  3438               	retlw	56
  2231  026D  3444               	retlw	68
  2232  026E  3444               	retlw	68
  2233  026F  3428               	retlw	40
  2234  0270  3400               	retlw	0
  2235  0271  3400               	retlw	0
  2236  0272  3400               	retlw	0
  2237  0273  3400               	retlw	0
  2238  0274  3438               	retlw	56
  2239  0275  3444               	retlw	68
  2240  0276  3444               	retlw	68
  2241  0277  3448               	retlw	72
  2242  0278  347F               	retlw	127
  2243  0279  3400               	retlw	0
  2244  027A  3400               	retlw	0
  2245  027B  3400               	retlw	0
  2246  027C  3438               	retlw	56
  2247  027D  3454               	retlw	84
  2248  027E  3454               	retlw	84
  2249  027F  3454               	retlw	84
  2250  0280  3418               	retlw	24
  2251  0281  3400               	retlw	0
  2252  0282  3400               	retlw	0
  2253  0283  3400               	retlw	0
  2254  0284  3408               	retlw	8
  2255  0285  347E               	retlw	126
  2256  0286  3409               	retlw	9
  2257  0287  3402               	retlw	2
  2258  0288  3400               	retlw	0
  2259  0289  3400               	retlw	0
  2260  028A  3400               	retlw	0
  2261  028B  3400               	retlw	0
  2262  028C  3418               	retlw	24
  2263  028D  34A4               	retlw	164
  2264  028E  34A4               	retlw	164
  2265  028F  34A4               	retlw	164
  2266  0290  347C               	retlw	124
  2267  0291  3400               	retlw	0
  2268  0292  3400               	retlw	0
  2269  0293  3400               	retlw	0
  2270  0294  347F               	retlw	127
  2271  0295  3408               	retlw	8
  2272  0296  3404               	retlw	4
  2273  0297  3404               	retlw	4
  2274  0298  3478               	retlw	120
  2275  0299  3400               	retlw	0
  2276  029A  3400               	retlw	0
  2277  029B  3400               	retlw	0
  2278  029C  3400               	retlw	0
  2279  029D  347D               	retlw	125
  2280  029E  3400               	retlw	0
  2281  029F  3400               	retlw	0
  2282  02A0  3400               	retlw	0
  2283  02A1  3400               	retlw	0
  2284  02A2  3400               	retlw	0
  2285  02A3  3400               	retlw	0
  2286  02A4  3480               	retlw	128
  2287  02A5  3484               	retlw	132
  2288  02A6  347D               	retlw	125
  2289  02A7  3400               	retlw	0
  2290  02A8  3400               	retlw	0
  2291  02A9  3400               	retlw	0
  2292  02AA  3400               	retlw	0
  2293  02AB  3400               	retlw	0
  2294  02AC  347F               	retlw	127
  2295  02AD  3410               	retlw	16
  2296  02AE  3428               	retlw	40
  2297  02AF  3444               	retlw	68
  2298  02B0  3400               	retlw	0
  2299  02B1  3400               	retlw	0
  2300  02B2  3400               	retlw	0
  2301  02B3  3400               	retlw	0
  2302  02B4  3441               	retlw	65
  2303  02B5  347F               	retlw	127
  2304  02B6  3440               	retlw	64
  2305  02B7  3400               	retlw	0
  2306  02B8  3400               	retlw	0
  2307  02B9  3400               	retlw	0
  2308  02BA  3400               	retlw	0
  2309  02BB  3400               	retlw	0
  2310  02BC  347C               	retlw	124
  2311  02BD  3404               	retlw	4
  2312  02BE  3418               	retlw	24
  2313  02BF  3404               	retlw	4
  2314  02C0  3478               	retlw	120
  2315  02C1  3400               	retlw	0
  2316  02C2  3400               	retlw	0
  2317  02C3  3400               	retlw	0
  2318  02C4  347C               	retlw	124
  2319  02C5  3408               	retlw	8
  2320  02C6  3404               	retlw	4
  2321  02C7  347C               	retlw	124
  2322  02C8  3400               	retlw	0
  2323  02C9  3400               	retlw	0
  2324  02CA  3400               	retlw	0
  2325  02CB  3400               	retlw	0
  2326  02CC  3438               	retlw	56
  2327  02CD  3444               	retlw	68
  2328  02CE  3444               	retlw	68
  2329  02CF  3438               	retlw	56
  2330  02D0  3400               	retlw	0
  2331  02D1  3400               	retlw	0
  2332  02D2  3400               	retlw	0
  2333  02D3  3400               	retlw	0
  2334  02D4  34FC               	retlw	252
  2335  02D5  3424               	retlw	36
  2336  02D6  3424               	retlw	36
  2337  02D7  3418               	retlw	24
  2338  02D8  3400               	retlw	0
  2339  02D9  3400               	retlw	0
  2340  02DA  3400               	retlw	0
  2341  02DB  3400               	retlw	0
  2342  02DC  3418               	retlw	24
  2343  02DD  3424               	retlw	36
  2344  02DE  3424               	retlw	36
  2345  02DF  34FC               	retlw	252
  2346  02E0  3400               	retlw	0
  2347  02E1  3400               	retlw	0
  2348  02E2  3400               	retlw	0
  2349  02E3  3400               	retlw	0
  2350  02E4  3400               	retlw	0
  2351  02E5  347C               	retlw	124
  2352  02E6  3408               	retlw	8
  2353  02E7  3404               	retlw	4
  2354  02E8  3400               	retlw	0
  2355  02E9  3400               	retlw	0
  2356  02EA  3400               	retlw	0
  2357  02EB  3400               	retlw	0
  2358  02EC  3448               	retlw	72
  2359  02ED  3454               	retlw	84
  2360  02EE  3454               	retlw	84
  2361  02EF  3424               	retlw	36
  2362  02F0  3400               	retlw	0
  2363  02F1  3400               	retlw	0
  2364  02F2  3400               	retlw	0
  2365  02F3  3400               	retlw	0
  2366  02F4  3404               	retlw	4
  2367  02F5  347F               	retlw	127
  2368  02F6  3444               	retlw	68
  2369  02F7  3400               	retlw	0
  2370  02F8  3400               	retlw	0
  2371  02F9  3400               	retlw	0
  2372  02FA  3400               	retlw	0
  2373  02FB  3400               	retlw	0
  2374  02FC  343C               	retlw	60
  2375  02FD  3440               	retlw	64
  2376  02FE  3440               	retlw	64
  2377  02FF  347C               	retlw	124
  2378  0300  3400               	retlw	0
  2379  0301  3400               	retlw	0
  2380  0302  3400               	retlw	0
  2381  0303  3400               	retlw	0
  2382  0304  341C               	retlw	28
  2383  0305  3420               	retlw	32
  2384  0306  3440               	retlw	64
  2385  0307  3420               	retlw	32
  2386  0308  341C               	retlw	28
  2387  0309  3400               	retlw	0
  2388  030A  3400               	retlw	0
  2389  030B  3400               	retlw	0
  2390  030C  343C               	retlw	60
  2391  030D  3440               	retlw	64
  2392  030E  3430               	retlw	48
  2393  030F  3440               	retlw	64
  2394  0310  343C               	retlw	60
  2395  0311  3400               	retlw	0
  2396  0312  3400               	retlw	0
  2397  0313  3400               	retlw	0
  2398  0314  3444               	retlw	68
  2399  0315  3428               	retlw	40
  2400  0316  3410               	retlw	16
  2401  0317  3428               	retlw	40
  2402  0318  3444               	retlw	68
  2403  0319  3400               	retlw	0
  2404  031A  3400               	retlw	0
  2405  031B  3400               	retlw	0
  2406  031C  341C               	retlw	28
  2407  031D  34A0               	retlw	160
  2408  031E  34A0               	retlw	160
  2409  031F  347C               	retlw	124
  2410  0320  3400               	retlw	0
  2411  0321  3400               	retlw	0
  2412  0322  3400               	retlw	0
  2413  0323  3400               	retlw	0
  2414  0324  3444               	retlw	68
  2415  0325  3464               	retlw	100
  2416  0326  3454               	retlw	84
  2417  0327  344C               	retlw	76
  2418  0328  3444               	retlw	68
  2419  0329  3400               	retlw	0
  2420  032A  3400               	retlw	0
  2421  032B  3400               	retlw	0
  2422  032C  3408               	retlw	8
  2423  032D  3436               	retlw	54
  2424  032E  3441               	retlw	65
  2425  032F  3400               	retlw	0
  2426  0330  3400               	retlw	0
  2427  0331  3400               	retlw	0
  2428  0332  3400               	retlw	0
  2429  0333  3400               	retlw	0
  2430  0334  3400               	retlw	0
  2431  0335  347F               	retlw	127
  2432  0336  3400               	retlw	0
  2433  0337  3400               	retlw	0
  2434  0338  3400               	retlw	0
  2435  0339  3400               	retlw	0
  2436  033A  3400               	retlw	0
  2437  033B  3400               	retlw	0
  2438  033C  3441               	retlw	65
  2439  033D  3436               	retlw	54
  2440  033E  3408               	retlw	8
  2441  033F  3400               	retlw	0
  2442  0340  3400               	retlw	0
  2443  0341  3400               	retlw	0
  2444  0342  3400               	retlw	0
  2445  0343  3400               	retlw	0
  2446  0344  3402               	retlw	2
  2447  0345  3401               	retlw	1
  2448  0346  3401               	retlw	1
  2449  0347  3402               	retlw	2
  2450  0348  3401               	retlw	1
  2451  0349  3400               	retlw	0
  2452  034A  3400               	retlw	0
  2453  034B  3400               	retlw	0
  2454  034C  3402               	retlw	2
  2455  034D  3405               	retlw	5
  2456  034E  3405               	retlw	5
  2457  034F  3402               	retlw	2
  2458  0350  3400               	retlw	0
  2459  0351  3400               	retlw	0
  2460  0352  3400               	retlw	0
  2461  0353                     __end_of_OledFont:	
  2462  000B                     _INTCONbits	set	11
  2463  0011                     _PIR1bits	set	17
  2464  005F                     _GIE	set	95
  2465  0095                     _OPTION_REGbits	set	149
  2466  008F                     _TRISDbits	set	143
  2467  0097                     _WDTCONbits	set	151
  2468  008D                     _TRISBbits	set	141
  2469  009C                     _ADRESH	set	156
  2470  009B                     _ADRESL	set	155
  2471  009D                     _ADCON0bits	set	157
  2472  009E                     _ADCON1bits	set	158
  2473  008E                     _TRISCbits	set	142
  2474  0476                     _TRISC6	set	1142
  2475  0477                     _TRISC7	set	1143
  2476  04CF                     _SPLLEN	set	1231
  2477  04CE                     _IRCF3	set	1230
  2478  04CD                     _IRCF2	set	1229
  2479  04CC                     _IRCF1	set	1228
  2480  04CB                     _IRCF0	set	1227
  2481  04C9                     _SCS1	set	1225
  2482  04C8                     _SCS0	set	1224
  2483  018F                     _ANSELDbits	set	399
  2484  018D                     _ANSELBbits	set	397
  2485  0190                     _ANSELEbits	set	400
  2486  018E                     _ANSELCbits	set	398
  2487  019A                     _TX1REG	set	410
  2488  0199                     _RC1REG	set	409
  2489  019D                     _RC1STAbits	set	413
  2490  019B                     _SPBRG	set	411
  2491  0CF5                     _TXEN	set	3317
  2492  0CEC                     _CREN	set	3308
  2493  0CEF                     _SPEN	set	3311
  2494  0CF4                     _SYNC	set	3316
  2495  0CF2                     _BRGH	set	3314
  2496  0216                     _SSPCON2bits	set	534
  2497  0211                     _SSPBUF	set	529
  2498  0212                     _SSPADD	set	530
  2499  0215                     _SSPCONbits	set	533
  2500  0E10                     _INTPPSbits	set	3600
  2501  0E24                     _RXPPSbits	set	3620
  2502  0E20                     _SSPCLKPPSbits	set	3616
  2503  0E21                     _SSPDATPPSbits	set	3617
  2504  0E0F                     _PPSLOCKbits	set	3599
  2505  0E0F                     _PPSLOCK	set	3599
  2506  0E9A                     _RB2PPSbits	set	3738
  2507  0EA5                     _RC5PPSbits	set	3749
  2508  0EA4                     _RC4PPSbits	set	3748
  2509  0353                     STR_12:	
  2510  0353  3441               	retlw	65	;'A'
  2511  0354  3454               	retlw	84	;'T'
  2512  0355  342B               	retlw	43	;'+'
  2513  0356  3443               	retlw	67	;'C'
  2514  0357  3449               	retlw	73	;'I'
  2515  0358  3450               	retlw	80	;'P'
  2516  0359  3453               	retlw	83	;'S'
  2517  035A  3445               	retlw	69	;'E'
  2518  035B  3452               	retlw	82	;'R'
  2519  035C  3456               	retlw	86	;'V'
  2520  035D  3445               	retlw	69	;'E'
  2521  035E  3452               	retlw	82	;'R'
  2522  035F  343D               	retlw	61	;'='
  2523  0360  3431               	retlw	49	;'1'
  2524  0361  342C               	retlw	44	;','
  2525  0362  3438               	retlw	56	;'8'
  2526  0363  3430               	retlw	48	;'0'
  2527  0364  340D               	retlw	13
  2528  0365  340A               	retlw	10
  2529  0366  3400               	retlw	0
  2530  0367                     STR_11:	
  2531  0367  3453               	retlw	83	;'S'
  2532  0368  3465               	retlw	101	;'e'
  2533  0369  346E               	retlw	110	;'n'
  2534  036A  3464               	retlw	100	;'d'
  2535  036B  3469               	retlw	105	;'i'
  2536  036C  346E               	retlw	110	;'n'
  2537  036D  3467               	retlw	103	;'g'
  2538  036E  3420               	retlw	32	;' '
  2539  036F  3443               	retlw	67	;'C'
  2540  0370  3449               	retlw	73	;'I'
  2541  0371  3450               	retlw	80	;'P'
  2542  0372  3453               	retlw	83	;'S'
  2543  0373  3445               	retlw	69	;'E'
  2544  0374  3452               	retlw	82	;'R'
  2545  0375  3456               	retlw	86	;'V'
  2546  0376  3445               	retlw	69	;'E'
  2547  0377  3452               	retlw	82	;'R'
  2548  0378  3400               	retlw	0
  2549  0379                     STR_5:	
  2550  0379  3441               	retlw	65	;'A'
  2551  037A  3454               	retlw	84	;'T'
  2552  037B  342B               	retlw	43	;'+'
  2553  037C  3443               	retlw	67	;'C'
  2554  037D  3449               	retlw	73	;'I'
  2555  037E  3450               	retlw	80	;'P'
  2556  037F  3453               	retlw	83	;'S'
  2557  0380  3445               	retlw	69	;'E'
  2558  0381  344E               	retlw	78	;'N'
  2559  0382  3444               	retlw	68	;'D'
  2560  0383  343D               	retlw	61	;'='
  2561  0384  3430               	retlw	48	;'0'
  2562  0385  342C               	retlw	44	;','
  2563  0386  3432               	retlw	50	;'2'
  2564  0387  340D               	retlw	13
  2565  0388  340A               	retlw	10
  2566  0389  3400               	retlw	0
  2567  038A                     STR_6:	
  2568  038A  3441               	retlw	65	;'A'
  2569  038B  3454               	retlw	84	;'T'
  2570  038C  342B               	retlw	43	;'+'
  2571  038D  3443               	retlw	67	;'C'
  2572  038E  3449               	retlw	73	;'I'
  2573  038F  3450               	retlw	80	;'P'
  2574  0390  3443               	retlw	67	;'C'
  2575  0391  344C               	retlw	76	;'L'
  2576  0392  344F               	retlw	79	;'O'
  2577  0393  3453               	retlw	83	;'S'
  2578  0394  3445               	retlw	69	;'E'
  2579  0395  343D               	retlw	61	;'='
  2580  0396  3430               	retlw	48	;'0'
  2581  0397  340D               	retlw	13
  2582  0398  340A               	retlw	10
  2583  0399  3400               	retlw	0
  2584  039A                     STR_9:	
  2585  039A  3453               	retlw	83	;'S'
  2586  039B  3465               	retlw	101	;'e'
  2587  039C  346E               	retlw	110	;'n'
  2588  039D  3464               	retlw	100	;'d'
  2589  039E  3469               	retlw	105	;'i'
  2590  039F  346E               	retlw	110	;'n'
  2591  03A0  3467               	retlw	103	;'g'
  2592  03A1  3420               	retlw	32	;' '
  2593  03A2  3443               	retlw	67	;'C'
  2594  03A3  3449               	retlw	73	;'I'
  2595  03A4  3450               	retlw	80	;'P'
  2596  03A5  344D               	retlw	77	;'M'
  2597  03A6  3455               	retlw	85	;'U'
  2598  03A7  3458               	retlw	88	;'X'
  2599  03A8  3400               	retlw	0
  2600  03A9                     STR_10:	
  2601  03A9  3441               	retlw	65	;'A'
  2602  03AA  3454               	retlw	84	;'T'
  2603  03AB  342B               	retlw	43	;'+'
  2604  03AC  3443               	retlw	67	;'C'
  2605  03AD  3449               	retlw	73	;'I'
  2606  03AE  3450               	retlw	80	;'P'
  2607  03AF  344D               	retlw	77	;'M'
  2608  03B0  3455               	retlw	85	;'U'
  2609  03B1  3458               	retlw	88	;'X'
  2610  03B2  343D               	retlw	61	;'='
  2611  03B3  3430               	retlw	48	;'0'
  2612  03B4  340D               	retlw	13
  2613  03B5  340A               	retlw	10
  2614  03B6  3400               	retlw	0
  2615  03B7                     STR_2:	
  2616  03B7  3454               	retlw	84	;'T'
  2617  03B8  3465               	retlw	101	;'e'
  2618  03B9  346D               	retlw	109	;'m'
  2619  03BA  3470               	retlw	112	;'p'
  2620  03BB  3465               	retlw	101	;'e'
  2621  03BC  3472               	retlw	114	;'r'
  2622  03BD  3461               	retlw	97	;'a'
  2623  03BE  3474               	retlw	116	;'t'
  2624  03BF  3475               	retlw	117	;'u'
  2625  03C0  3472               	retlw	114	;'r'
  2626  03C1  3465               	retlw	101	;'e'
  2627  03C2  343A               	retlw	58	;':'
  2628  03C3  3400               	retlw	0
  2629  03C4                     STR_1:	
  2630  03C4  3453               	retlw	83	;'S'
  2631  03C5  3454               	retlw	84	;'T'
  2632  03C6  3441               	retlw	65	;'A'
  2633  03C7  3452               	retlw	82	;'R'
  2634  03C8  3454               	retlw	84	;'T'
  2635  03C9  3420               	retlw	32	;' '
  2636  03CA  3453               	retlw	83	;'S'
  2637  03CB  3445               	retlw	69	;'E'
  2638  03CC  3452               	retlw	82	;'R'
  2639  03CD  3456               	retlw	86	;'V'
  2640  03CE  3445               	retlw	69	;'E'
  2641  03CF  3452               	retlw	82	;'R'
  2642  03D0  3400               	retlw	0
  2643  03D1                     STR_4:	
  2644  03D1  3453               	retlw	83	;'S'
  2645  03D2  3465               	retlw	101	;'e'
  2646  03D3  346E               	retlw	110	;'n'
  2647  03D4  3464               	retlw	100	;'d'
  2648  03D5  3469               	retlw	105	;'i'
  2649  03D6  346E               	retlw	110	;'n'
  2650  03D7  3467               	retlw	103	;'g'
  2651  03D8  3420               	retlw	32	;' '
  2652  03D9  3444               	retlw	68	;'D'
  2653  03DA  3461               	retlw	97	;'a'
  2654  03DB  3474               	retlw	116	;'t'
  2655  03DC  3461               	retlw	97	;'a'
  2656  03DD  3400               	retlw	0
  2657  03DE                     STR_15:	
  2658  03DE  3425               	retlw	37	;'%'
  2659  03DF  346C               	retlw	108	;'l'
  2660  03E0  3475               	retlw	117	;'u'
  2661  03E1  342E               	retlw	46	;'.'
  2662  03E2  3425               	retlw	37	;'%'
  2663  03E3  3436               	retlw	54	;'6'
  2664  03E4  342E               	retlw	46	;'.'
  2665  03E5  3436               	retlw	54	;'6'
  2666  03E6  346C               	retlw	108	;'l'
  2667  03E7  3475               	retlw	117	;'u'
  2668  03E8  3400               	retlw	0
  2669  03E9                     STR_7:	
  2670  03E9  3453               	retlw	83	;'S'
  2671  03EA  3465               	retlw	101	;'e'
  2672  03EB  346E               	retlw	110	;'n'
  2673  03EC  3464               	retlw	100	;'d'
  2674  03ED  3469               	retlw	105	;'i'
  2675  03EE  346E               	retlw	110	;'n'
  2676  03EF  3467               	retlw	103	;'g'
  2677  03F0  3420               	retlw	32	;' '
  2678  03F1  3441               	retlw	65	;'A'
  2679  03F2  3454               	retlw	84	;'T'
  2680  03F3  3400               	retlw	0
  2681  03F4                     STR_13:	
  2682  03F4  3420               	retlw	32	;' '
  2683  03F5  3420               	retlw	32	;' '
  2684  03F6  3420               	retlw	32	;' '
  2685  03F7  3420               	retlw	32	;' '
  2686  03F8  3420               	retlw	32	;' '
  2687  03F9  3400               	retlw	0
  2688  03FA                     STR_8:	
  2689  03FA  3441               	retlw	65	;'A'
  2690  03FB  3454               	retlw	84	;'T'
  2691  03FC  340D               	retlw	13
  2692  03FD  340A               	retlw	10
  2693  03FE  3400               	retlw	0
  2694  0364                     
  2695                           ; #config settings
  2696  0000                     
  2697                           	psect	cinit
  2698  0018                     start_initialization:	
  2699  0018                     __initialization:	
  2700                           
  2701                           ; Clear objects allocated to BANK0
  2702  0018  3044               	movlw	low __pbssBANK0
  2703  0019  0084               	movwf	4
  2704  001A  3000               	movlw	high __pbssBANK0
  2705  001B  0085               	movwf	5
  2706  001C  3011               	movlw	17
  2707  001D  3187  27FA  3180   	fcall	clear_ram0
  2708                           
  2709                           ; Clear objects allocated to BANK2
  2710  0020  3020               	movlw	low __pbssBANK2
  2711  0021  0084               	movwf	4
  2712  0022  3001               	movlw	high __pbssBANK2
  2713  0023  0085               	movwf	5
  2714  0024  3032               	movlw	50
  2715  0025  3187  27FA         	fcall	clear_ram0
  2716  0027                     end_of_initialization:	
  2717                           ;End of C runtime variable initialization code
  2718                           
  2719  0027                     __end_of__initialization:	
  2720  0027  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2721  0028  0020               	movlb	0
  2722  0029  3183  2BFF         	ljmp	_main	;jump to C main() function
  2723                           
  2724                           	psect	bssBANK0
  2725  0044                     __pbssBANK0:	
  2726  0044                     ftoa@buf:	
  2727  0044                     	ds	17
  2728                           
  2729                           	psect	bssBANK2
  2730  0120                     __pbssBANK2:	
  2731  0120                     _buf:	
  2732  0120                     	ds	50
  2733                           
  2734                           	psect	clrtext
  2735  07FA                     clear_ram0:	
  2736                           ;	Called with FSR0 containing the base address, and
  2737                           ;	WREG with the size to clear
  2738                           
  2739  07FA  0064               	clrwdt	;clear the watchdog before getting into this loop
  2740  07FB                     clrloop0:	
  2741  07FB  0180               	clrf	0	;clear RAM location pointed to by FSR
  2742  07FC  3101               	addfsr 0,1
  2743  07FD  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2744  07FE  2FFB               	goto	clrloop0	;have we reached the end yet?
  2745  07FF  3400               	retlw	0	;all done for this memory range, return
  2746                           
  2747                           	psect	cstackBANK1
  2748  00A0                     __pcstackBANK1:	
  2749  00A0                     ?_utoa:	
  2750  00A0                     ?___awtoft:	
  2751                           ; 1 bytes @ 0x0
  2752                           
  2753  00A0                     ?___ftadd:	
  2754                           ; 3 bytes @ 0x0
  2755                           
  2756  00A0                     OLED_YX@Row:	
  2757                           ; 3 bytes @ 0x0
  2758                           
  2759  00A0                     ___aldiv@counter:	
  2760                           ; 1 bytes @ 0x0
  2761                           
  2762  00A0                     ___fttol@sign1:	
  2763                           ; 1 bytes @ 0x0
  2764                           
  2765  00A0                     memmove@d1:	
  2766                           ; 1 bytes @ 0x0
  2767                           
  2768  00A0                     ___awtoft@c:	
  2769                           ; 1 bytes @ 0x0
  2770                           
  2771  00A0                     utoa@val:	
  2772                           ; 2 bytes @ 0x0
  2773                           
  2774  00A0                     ___ftadd@f1:	
  2775                           ; 2 bytes @ 0x0
  2776                           
  2777                           
  2778                           ; 3 bytes @ 0x0
  2779  00A0                     	ds	1
  2780  00A1                     ___aldiv@sign:	
  2781  00A1                     memmove@s:	
  2782                           ; 1 bytes @ 0x1
  2783                           
  2784  00A1                     ___fttol@lval:	
  2785                           ; 2 bytes @ 0x1
  2786                           
  2787                           
  2788                           ; 4 bytes @ 0x1
  2789  00A1                     	ds	1
  2790  00A2                     utoa@base:	
  2791  00A2                     ___aldiv@quotient:	
  2792                           ; 2 bytes @ 0x2
  2793                           
  2794                           
  2795                           ; 4 bytes @ 0x2
  2796  00A2                     	ds	1
  2797  00A3                     ??___awtoft:	
  2798  00A3                     memmove@d:	
  2799                           ; 1 bytes @ 0x3
  2800                           
  2801  00A3                     ___ftadd@f2:	
  2802                           ; 1 bytes @ 0x3
  2803                           
  2804                           
  2805                           ; 3 bytes @ 0x3
  2806  00A3                     	ds	1
  2807  00A4                     ??_OLED_PutChar:	
  2808  00A4                     utoa@v:	
  2809                           ; 1 bytes @ 0x4
  2810                           
  2811                           
  2812                           ; 2 bytes @ 0x4
  2813  00A4                     	ds	1
  2814  00A5                     ___fttol@exp1:	
  2815                           
  2816                           ; 1 bytes @ 0x5
  2817  00A5                     	ds	1
  2818  00A6                     ?_EUSART_Initialize:	
  2819  00A6                     ??___ftadd:	
  2820                           ; 1 bytes @ 0x6
  2821                           
  2822  00A6                     utoa@c:	
  2823                           ; 1 bytes @ 0x6
  2824                           
  2825  00A6                     EUSART_Initialize@baudrate:	
  2826                           ; 1 bytes @ 0x6
  2827                           
  2828                           
  2829                           ; 4 bytes @ 0x6
  2830  00A6                     	ds	1
  2831  00A7                     utoa@buf:	
  2832                           
  2833                           ; 1 bytes @ 0x7
  2834  00A7                     	ds	1
  2835  00A8                     ?_itoa:	
  2836  00A8                     itoa@val:	
  2837                           ; 1 bytes @ 0x8
  2838                           
  2839                           
  2840                           ; 2 bytes @ 0x8
  2841  00A8                     	ds	2
  2842  00AA                     ??_EUSART_Initialize:	
  2843  00AA                     ___ftadd@sign:	
  2844                           ; 1 bytes @ 0xA
  2845                           
  2846  00AA                     itoa@base:	
  2847                           ; 1 bytes @ 0xA
  2848                           
  2849  00AA                     OLED_PutChar@bytes:	
  2850                           ; 2 bytes @ 0xA
  2851                           
  2852                           
  2853                           ; 9 bytes @ 0xA
  2854  00AA                     	ds	1
  2855  00AB                     ___ftadd@exp2:	
  2856                           
  2857                           ; 1 bytes @ 0xB
  2858  00AB                     	ds	1
  2859  00AC                     ??_itoa:	
  2860  00AC                     ___ftadd@exp1:	
  2861                           ; 1 bytes @ 0xC
  2862                           
  2863                           
  2864                           ; 1 bytes @ 0xC
  2865  00AC                     	ds	1
  2866  00AD                     ?___ftmul:	
  2867  00AD                     itoa@cp:	
  2868                           ; 3 bytes @ 0xD
  2869                           
  2870  00AD                     ___ftmul@f1:	
  2871                           ; 1 bytes @ 0xD
  2872                           
  2873                           
  2874                           ; 3 bytes @ 0xD
  2875  00AD                     	ds	1
  2876  00AE                     itoa@buf:	
  2877                           
  2878                           ; 1 bytes @ 0xE
  2879  00AE                     	ds	2
  2880  00B0                     ___ftmul@f2:	
  2881                           
  2882                           ; 3 bytes @ 0x10
  2883  00B0                     	ds	2
  2884  00B2                     EUSART_Initialize@x:	
  2885                           
  2886                           ; 2 bytes @ 0x12
  2887  00B2                     	ds	1
  2888  00B3                     ??___ftmul:	
  2889  00B3                     OLED_PutChar@base:	
  2890                           ; 1 bytes @ 0x13
  2891                           
  2892                           
  2893                           ; 2 bytes @ 0x13
  2894  00B3                     	ds	2
  2895  00B5                     OLED_PutChar@ch:	
  2896                           
  2897                           ; 1 bytes @ 0x15
  2898  00B5                     	ds	1
  2899  00B6                     OLED_PutChar@i:	
  2900                           
  2901                           ; 2 bytes @ 0x16
  2902  00B6                     	ds	1
  2903  00B7                     ___ftmul@exp:	
  2904                           
  2905                           ; 1 bytes @ 0x17
  2906  00B7                     	ds	1
  2907  00B8                     ??_OLED_Clear:	
  2908  00B8                     ?_OLED_Write_String:	
  2909                           ; 1 bytes @ 0x18
  2910                           
  2911  00B8                     OLED_Write_String@s:	
  2912                           ; 1 bytes @ 0x18
  2913                           
  2914  00B8                     ___ftmul@f3_as_product:	
  2915                           ; 2 bytes @ 0x18
  2916                           
  2917                           
  2918                           ; 3 bytes @ 0x18
  2919  00B8                     	ds	1
  2920  00B9                     OLED_Clear@row:	
  2921                           
  2922                           ; 2 bytes @ 0x19
  2923  00B9                     	ds	1
  2924  00BA                     ??_OLED_Write_Integer:	
  2925                           
  2926                           ; 1 bytes @ 0x1A
  2927  00BA                     	ds	1
  2928  00BB                     ___ftmul@cntr:	
  2929  00BB                     OLED_Clear@col:	
  2930                           ; 1 bytes @ 0x1B
  2931                           
  2932                           
  2933                           ; 2 bytes @ 0x1B
  2934  00BB                     	ds	1
  2935  00BC                     ___ftmul@sign:	
  2936                           
  2937                           ; 1 bytes @ 0x1C
  2938  00BC                     	ds	1
  2939  00BD                     ??_server_Initialize:	
  2940  00BD                     ?___ftdiv:	
  2941                           ; 1 bytes @ 0x1D
  2942                           
  2943  00BD                     OLED_Write_Integer@i:	
  2944                           ; 3 bytes @ 0x1D
  2945                           
  2946  00BD                     ___ftdiv@f2:	
  2947                           ; 1 bytes @ 0x1D
  2948                           
  2949                           
  2950                           ; 3 bytes @ 0x1D
  2951  00BD                     	ds	1
  2952  00BE                     OLED_Write_Integer@buff11:	
  2953                           
  2954                           ; 1 bytes @ 0x1E
  2955  00BE                     	ds	1
  2956  00BF                     OLED_Write_Integer@status:	
  2957                           
  2958                           ; 2 bytes @ 0x1F
  2959  00BF                     	ds	1
  2960  00C0                     ___ftdiv@f1:	
  2961                           
  2962                           ; 3 bytes @ 0x20
  2963  00C0                     	ds	3
  2964  00C3                     ??___ftdiv:	
  2965                           
  2966                           ; 1 bytes @ 0x23
  2967  00C3                     	ds	4
  2968  00C7                     ___ftdiv@cntr:	
  2969                           
  2970                           ; 1 bytes @ 0x27
  2971  00C7                     	ds	1
  2972  00C8                     ___ftdiv@f3:	
  2973                           
  2974                           ; 3 bytes @ 0x28
  2975  00C8                     	ds	3
  2976  00CB                     ___ftdiv@exp:	
  2977                           
  2978                           ; 1 bytes @ 0x2B
  2979  00CB                     	ds	1
  2980  00CC                     ___ftdiv@sign:	
  2981                           
  2982                           ; 1 bytes @ 0x2C
  2983  00CC                     	ds	1
  2984  00CD                     ?_Read_Temperature:	
  2985                           
  2986                           ; 3 bytes @ 0x2D
  2987  00CD                     	ds	3
  2988  00D0                     ??_Read_Temperature:	
  2989                           
  2990                           ; 1 bytes @ 0x30
  2991  00D0                     	ds	5
  2992  00D5                     Read_Temperature@conversion10:	
  2993                           
  2994                           ; 3 bytes @ 0x35
  2995  00D5                     	ds	3
  2996  00D8                     Read_Temperature@farenheit:	
  2997                           
  2998                           ; 3 bytes @ 0x38
  2999  00D8                     	ds	3
  3000  00DB                     Read_Temperature@celsius:	
  3001                           
  3002                           ; 3 bytes @ 0x3B
  3003  00DB                     	ds	3
  3004  00DE                     Read_Temperature@result:	
  3005                           
  3006                           ; 3 bytes @ 0x3E
  3007  00DE                     	ds	3
  3008  00E1                     ??_main:	
  3009                           
  3010                           ; 1 bytes @ 0x41
  3011  00E1                     	ds	2
  3012  00E3                     main@temp:	
  3013                           
  3014                           ; 3 bytes @ 0x43
  3015  00E3                     	ds	3
  3016  00E6                     main@buff11:	
  3017                           
  3018                           ; 1 bytes @ 0x46
  3019  00E6                     	ds	1
  3020  00E7                     main@status:	
  3021                           
  3022                           ; 2 bytes @ 0x47
  3023  00E7                     	ds	2
  3024                           
  3025                           	psect	cstackCOMMON
  3026  0070                     __pcstackCOMMON:	
  3027  0070                     ?_OLED_Init:	
  3028  0070                     ?_OLED_Clear:	
  3029                           ; 1 bytes @ 0x0
  3030                           
  3031  0070                     ?_server_Initialize:	
  3032                           ; 1 bytes @ 0x0
  3033                           
  3034  0070                     ?_OLED_Write_Integer:	
  3035                           ; 1 bytes @ 0x0
  3036                           
  3037  0070                     ?_internal_16:	
  3038                           ; 1 bytes @ 0x0
  3039                           
  3040  0070                     ?_EUSART_Read:	
  3041                           ; 1 bytes @ 0x0
  3042                           
  3043  0070                     ?_EUSART_Write:	
  3044                           ; 1 bytes @ 0x0
  3045                           
  3046  0070                     ?_I2C_Init:	
  3047                           ; 1 bytes @ 0x0
  3048                           
  3049  0070                     ?_Send_I2C_StartBit:	
  3050                           ; 1 bytes @ 0x0
  3051                           
  3052  0070                     ?_Send_I2C_StopBit:	
  3053                           ; 1 bytes @ 0x0
  3054                           
  3055  0070                     ?_initMain:	
  3056                           ; 1 bytes @ 0x0
  3057                           
  3058  0070                     ?_main:	
  3059                           ; 1 bytes @ 0x0
  3060                           
  3061  0070                     ?_isr:	
  3062                           ; 1 bytes @ 0x0
  3063                           
  3064  0070                     ?_OLED_Command:	
  3065                           ; 1 bytes @ 0x0
  3066                           
  3067  0070                     ?_OLED_PutChar:	
  3068                           ; 1 bytes @ 0x0
  3069                           
  3070  0070                     ?i1_EUSART_Read:	
  3071                           ; 1 bytes @ 0x0
  3072                           
  3073  0070                     ??i1_EUSART_Read:	
  3074                           ; 1 bytes @ 0x0
  3075                           
  3076  0070                     ?i1_EUSART_Write:	
  3077                           ; 1 bytes @ 0x0
  3078                           
  3079  0070                     ??i1_EUSART_Write:	
  3080                           ; 1 bytes @ 0x0
  3081                           
  3082  0070                     ?i1_EUSART_Read_Text:	
  3083                           ; 1 bytes @ 0x0
  3084                           
  3085  0070                     ?i1_Send_I2C_Data:	
  3086                           ; 1 bytes @ 0x0
  3087                           
  3088  0070                     ?i1_Send_I2C_StartBit:	
  3089                           ; 1 bytes @ 0x0
  3090                           
  3091  0070                     ??i1_Send_I2C_StartBit:	
  3092                           ; 1 bytes @ 0x0
  3093                           
  3094  0070                     ?i1_Send_I2C_StopBit:	
  3095                           ; 1 bytes @ 0x0
  3096                           
  3097  0070                     ??i1_Send_I2C_StopBit:	
  3098                           ; 1 bytes @ 0x0
  3099                           
  3100  0070                     ?i1_server_Initialize:	
  3101                           ; 1 bytes @ 0x0
  3102                           
  3103  0070                     ?i1_OLED_Command:	
  3104                           ; 1 bytes @ 0x0
  3105                           
  3106  0070                     ?i1_OLED_PutChar:	
  3107                           ; 1 bytes @ 0x0
  3108                           
  3109  0070                     ?i1_OLED_Clear:	
  3110                           ; 1 bytes @ 0x0
  3111                           
  3112  0070                     ?i1_memmove:	
  3113                           ; 1 bytes @ 0x0
  3114                           
  3115  0070                     i1EUSART_Write@txData:	
  3116                           ; 1 bytes @ 0x0
  3117                           
  3118  0070                     i1EUSART_Read_Text@length:	
  3119                           ; 1 bytes @ 0x0
  3120                           
  3121  0070                     i1Send_I2C_Data@databyte:	
  3122                           ; 2 bytes @ 0x0
  3123                           
  3124  0070                     i1memmove@s1:	
  3125                           ; 2 bytes @ 0x0
  3126                           
  3127                           
  3128                           ; 2 bytes @ 0x0
  3129  0070                     	ds	1
  3130  0071                     ?i1_EUSART_Write_Text:	
  3131  0071                     i1EUSART_Write_Text@text:	
  3132                           ; 1 bytes @ 0x1
  3133                           
  3134                           
  3135                           ; 2 bytes @ 0x1
  3136  0071                     	ds	1
  3137  0072                     ??i1_EUSART_Read_Text:	
  3138  0072                     ??i1_Send_I2C_Data:	
  3139                           ; 1 bytes @ 0x2
  3140                           
  3141  0072                     ??i1_OLED_Command:	
  3142                           ; 1 bytes @ 0x2
  3143                           
  3144  0072                     i1memmove@n:	
  3145                           ; 1 bytes @ 0x2
  3146                           
  3147                           
  3148                           ; 2 bytes @ 0x2
  3149  0072                     	ds	1
  3150  0073                     ??i1_EUSART_Write_Text:	
  3151                           
  3152                           ; 1 bytes @ 0x3
  3153  0073                     	ds	1
  3154  0074                     ??i1_memmove:	
  3155  0074                     i1EUSART_Read_Text@Output:	
  3156                           ; 1 bytes @ 0x4
  3157                           
  3158  0074                     i1OLED_Command@temp:	
  3159                           ; 1 bytes @ 0x4
  3160                           
  3161  0074                     i1EUSART_Write_Text@i:	
  3162                           ; 1 bytes @ 0x4
  3163                           
  3164                           
  3165                           ; 2 bytes @ 0x4
  3166  0074                     	ds	1
  3167  0075                     ?i1_OLED_YX:	
  3168  0075                     i1OLED_YX@Column:	
  3169                           ; 1 bytes @ 0x5
  3170                           
  3171  0075                     i1EUSART_Read_Text@i_111:	
  3172                           ; 1 bytes @ 0x5
  3173                           
  3174                           
  3175                           ; 2 bytes @ 0x5
  3176  0075                     	ds	1
  3177  0076                     ??i1_OLED_YX:	
  3178                           
  3179                           ; 1 bytes @ 0x6
  3180  0076                     	ds	2
  3181  0078                     i1memmove@d1:	
  3182                           
  3183                           ; 1 bytes @ 0x8
  3184  0078                     	ds	1
  3185  0079                     i1OLED_YX@Row:	
  3186  0079                     i1memmove@s:	
  3187                           ; 1 bytes @ 0x9
  3188                           
  3189                           
  3190                           ; 2 bytes @ 0x9
  3191  0079                     	ds	2
  3192  007B                     i1memmove@d:	
  3193                           
  3194                           ; 1 bytes @ 0xB
  3195  007B                     	ds	1
  3196  007C                     ??i1_OLED_Clear:	
  3197  007C                     ?i1_OLED_Write_String:	
  3198                           ; 1 bytes @ 0xC
  3199                           
  3200  007C                     i1OLED_Write_String@s:	
  3201                           ; 1 bytes @ 0xC
  3202                           
  3203                           
  3204                           ; 2 bytes @ 0xC
  3205  007C                     	ds	2
  3206                           
  3207                           	psect	cstackBANK0
  3208  0020                     __pcstackBANK0:	
  3209  0020                     ??i1_OLED_PutChar:	
  3210                           
  3211                           ; 1 bytes @ 0x0
  3212  0020                     	ds	6
  3213  0026                     i1OLED_PutChar@bytes:	
  3214                           
  3215                           ; 9 bytes @ 0x6
  3216  0026                     	ds	9
  3217  002F                     i1OLED_PutChar@base:	
  3218                           
  3219                           ; 2 bytes @ 0xF
  3220  002F                     	ds	2
  3221  0031                     i1OLED_PutChar@i:	
  3222                           
  3223                           ; 2 bytes @ 0x11
  3224  0031                     	ds	2
  3225  0033                     i1OLED_PutChar@ch:	
  3226                           
  3227                           ; 1 bytes @ 0x13
  3228  0033                     	ds	1
  3229  0034                     ??i1_OLED_Write_String:	
  3230  0034                     i1OLED_Clear@row:	
  3231                           ; 1 bytes @ 0x14
  3232                           
  3233                           
  3234                           ; 2 bytes @ 0x14
  3235  0034                     	ds	2
  3236  0036                     i1OLED_Clear@col:	
  3237                           
  3238                           ; 2 bytes @ 0x16
  3239  0036                     	ds	2
  3240  0038                     ??i1_server_Initialize:	
  3241                           
  3242                           ; 1 bytes @ 0x18
  3243  0038                     	ds	2
  3244  003A                     ??_isr:	
  3245                           
  3246                           ; 1 bytes @ 0x1A
  3247  003A                     	ds	1
  3248  003B                     ?_strcat:	
  3249  003B                     ?_memmove:	
  3250                           ; 1 bytes @ 0x1B
  3251                           
  3252  003B                     ??_internal_16:	
  3253                           ; 1 bytes @ 0x1B
  3254                           
  3255  003B                     ??_EUSART_Read:	
  3256                           ; 1 bytes @ 0x1B
  3257                           
  3258  003B                     ??_EUSART_Write:	
  3259                           ; 1 bytes @ 0x1B
  3260                           
  3261  003B                     ?_EUSART_Read_Text:	
  3262                           ; 1 bytes @ 0x1B
  3263                           
  3264  003B                     ??_I2C_Init:	
  3265                           ; 1 bytes @ 0x1B
  3266                           
  3267  003B                     ?_Send_I2C_Data:	
  3268                           ; 1 bytes @ 0x1B
  3269                           
  3270  003B                     ??_Send_I2C_StartBit:	
  3271                           ; 1 bytes @ 0x1B
  3272                           
  3273  003B                     ??_Send_I2C_StopBit:	
  3274                           ; 1 bytes @ 0x1B
  3275                           
  3276  003B                     ??_initMain:	
  3277                           ; 1 bytes @ 0x1B
  3278                           
  3279  003B                     ?___lwdiv:	
  3280                           ; 1 bytes @ 0x1B
  3281                           
  3282  003B                     ?___lwmod:	
  3283                           ; 2 bytes @ 0x1B
  3284                           
  3285  003B                     ?___ftpack:	
  3286                           ; 2 bytes @ 0x1B
  3287                           
  3288  003B                     ?___aldiv:	
  3289                           ; 3 bytes @ 0x1B
  3290                           
  3291  003B                     ?___fttol:	
  3292                           ; 4 bytes @ 0x1B
  3293                           
  3294  003B                     EUSART_Write@txData:	
  3295                           ; 4 bytes @ 0x1B
  3296                           
  3297  003B                     EUSART_Read_Text@length:	
  3298                           ; 1 bytes @ 0x1B
  3299                           
  3300  003B                     Send_I2C_Data@databyte:	
  3301                           ; 2 bytes @ 0x1B
  3302                           
  3303  003B                     ___lwdiv@divisor:	
  3304                           ; 2 bytes @ 0x1B
  3305                           
  3306  003B                     ___lwmod@divisor:	
  3307                           ; 2 bytes @ 0x1B
  3308                           
  3309  003B                     memmove@s1:	
  3310                           ; 2 bytes @ 0x1B
  3311                           
  3312  003B                     strcat@from:	
  3313                           ; 2 bytes @ 0x1B
  3314                           
  3315  003B                     ___ftpack@arg:	
  3316                           ; 2 bytes @ 0x1B
  3317                           
  3318  003B                     ___fttol@f1:	
  3319                           ; 3 bytes @ 0x1B
  3320                           
  3321  003B                     ___aldiv@divisor:	
  3322                           ; 3 bytes @ 0x1B
  3323                           
  3324                           
  3325                           ; 4 bytes @ 0x1B
  3326  003B                     	ds	1
  3327  003C                     ?_EUSART_Write_Text:	
  3328  003C                     EUSART_Write_Text@text:	
  3329                           ; 1 bytes @ 0x1C
  3330                           
  3331                           
  3332                           ; 2 bytes @ 0x1C
  3333  003C                     	ds	1
  3334  003D                     ??_strcat:	
  3335  003D                     ??_EUSART_Read_Text:	
  3336                           ; 1 bytes @ 0x1D
  3337                           
  3338  003D                     ??_Send_I2C_Data:	
  3339                           ; 1 bytes @ 0x1D
  3340                           
  3341  003D                     ??_OLED_Command:	
  3342                           ; 1 bytes @ 0x1D
  3343                           
  3344  003D                     ___lwdiv@dividend:	
  3345                           ; 1 bytes @ 0x1D
  3346                           
  3347  003D                     ___lwmod@dividend:	
  3348                           ; 2 bytes @ 0x1D
  3349                           
  3350  003D                     memmove@n:	
  3351                           ; 2 bytes @ 0x1D
  3352                           
  3353                           
  3354                           ; 2 bytes @ 0x1D
  3355  003D                     	ds	1
  3356  003E                     ??_EUSART_Write_Text:	
  3357  003E                     ___ftpack@exp:	
  3358                           ; 1 bytes @ 0x1E
  3359                           
  3360  003E                     strcat@to:	
  3361                           ; 1 bytes @ 0x1E
  3362                           
  3363                           
  3364                           ; 1 bytes @ 0x1E
  3365  003E                     	ds	1
  3366  003F                     ??_memmove:	
  3367  003F                     ??___fttol:	
  3368                           ; 1 bytes @ 0x1F
  3369                           
  3370  003F                     ??___lwdiv:	
  3371                           ; 1 bytes @ 0x1F
  3372                           
  3373  003F                     ??___lwmod:	
  3374                           ; 1 bytes @ 0x1F
  3375                           
  3376  003F                     OLED_Command@temp:	
  3377                           ; 1 bytes @ 0x1F
  3378                           
  3379  003F                     ___ftpack@sign:	
  3380                           ; 1 bytes @ 0x1F
  3381                           
  3382  003F                     strcat@cp:	
  3383                           ; 1 bytes @ 0x1F
  3384                           
  3385  003F                     EUSART_Read_Text@i_111:	
  3386                           ; 1 bytes @ 0x1F
  3387                           
  3388  003F                     EUSART_Write_Text@i:	
  3389                           ; 2 bytes @ 0x1F
  3390                           
  3391  003F                     ___aldiv@dividend:	
  3392                           ; 2 bytes @ 0x1F
  3393                           
  3394                           
  3395                           ; 4 bytes @ 0x1F
  3396  003F                     	ds	1
  3397  0040                     ??_OLED_Init:	
  3398  0040                     ?_OLED_YX:	
  3399                           ; 1 bytes @ 0x20
  3400                           
  3401  0040                     ??___ftpack:	
  3402                           ; 1 bytes @ 0x20
  3403                           
  3404  0040                     OLED_YX@Column:	
  3405                           ; 1 bytes @ 0x20
  3406                           
  3407  0040                     ___lwdiv@counter:	
  3408                           ; 1 bytes @ 0x20
  3409                           
  3410  0040                     ___lwmod@counter:	
  3411                           ; 1 bytes @ 0x20
  3412                           
  3413                           
  3414                           ; 1 bytes @ 0x20
  3415  0040                     	ds	1
  3416  0041                     ??_OLED_YX:	
  3417  0041                     EUSART_Read_Text@Output:	
  3418                           ; 1 bytes @ 0x21
  3419                           
  3420  0041                     ___lwdiv@quotient:	
  3421                           ; 1 bytes @ 0x21
  3422                           
  3423                           
  3424                           ; 2 bytes @ 0x21
  3425  0041                     	ds	2
  3426  0043                     ??_OLED_Write_String:	
  3427  0043                     ??_utoa:	
  3428                           ; 1 bytes @ 0x23
  3429                           
  3430  0043                     ??___aldiv:	
  3431                           ; 1 bytes @ 0x23
  3432                           
  3433  0043                     ___awtoft@sign:	
  3434                           ; 1 bytes @ 0x23
  3435                           
  3436                           
  3437                           ; 1 bytes @ 0x23
  3438  0043                     	ds	1
  3439                           
  3440                           	psect	maintext
  3441  03FF                     __pmaintext:	
  3442 ;;
  3443 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3444 ;;
  3445 ;; *************** function _main *****************
  3446 ;; Defined at:
  3447 ;;		line 193 in file "Main.c"
  3448 ;; Parameters:    Size  Location     Type
  3449 ;;		None
  3450 ;; Auto vars:     Size  Location     Type
  3451 ;;  status          2   71[BANK1 ] int 
  3452 ;;  buff11          1   70[BANK1 ] PTR unsigned char 
  3453 ;;		 -> OLED_Write_Integer@status(2), main@status(2), 
  3454 ;;  temp            3   67[BANK1 ] float 
  3455 ;; Return value:  Size  Location     Type
  3456 ;;                  1    wreg      void 
  3457 ;; Registers used:
  3458 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3459 ;; Tracked objects:
  3460 ;;		On entry : B1F/0
  3461 ;;		On exit  : 0/0
  3462 ;;		Unchanged: 0/0
  3463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3465 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  3466 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3467 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  3468 ;;Total ram usage:        8 bytes
  3469 ;; Hardware stack levels required when called:   11
  3470 ;; This function calls:
  3471 ;;		_EUSART_Initialize
  3472 ;;		_EUSART_Read_Text
  3473 ;;		_EUSART_Write_Text
  3474 ;;		_I2C_Init
  3475 ;;		_OLED_Clear
  3476 ;;		_OLED_Init
  3477 ;;		_OLED_Write_Integer
  3478 ;;		_OLED_Write_String
  3479 ;;		_OLED_YX
  3480 ;;		_Read_Temperature
  3481 ;;		___fttol
  3482 ;;		_initMain
  3483 ;;		_itoa
  3484 ;;		_server_Initialize
  3485 ;;		_strcat
  3486 ;; This function is called by:
  3487 ;;		Startup code after reset
  3488 ;; This function uses a non-reentrant model
  3489 ;;
  3490                           
  3491                           
  3492                           ;psect for function _main
  3493  03FF                     _main:	
  3494                           
  3495                           ;Main.c: 194: initMain();
  3496                           
  3497                           ;incstack = 0
  3498                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3499  03FF  3189  217A  3183   	fcall	_initMain
  3500                           
  3501                           ;Main.c: 197: I2C_Init();
  3502  0402  3195  25A5  3183   	fcall	_I2C_Init
  3503                           
  3504                           ;Main.c: 198: _delay((unsigned long)((500)*(16000000/4000.0)));
  3505  0405  300B               	movlw	11
  3506  0406  0021               	movlb	1	; select bank1
  3507  0407  00E2               	movwf	(??_main^(0+128)+1)
  3508  0408  3026               	movlw	38
  3509  0409  00E1               	movwf	??_main^(0+128)
  3510  040A  305D               	movlw	93
  3511  040B                     u4247:	
  3512  040B  0B89               	decfsz	9,f
  3513  040C  2C0B               	goto	u4247
  3514  040D  0BE1               	decfsz	??_main^(0+128),f
  3515  040E  2C0B               	goto	u4247
  3516  040F  0BE2               	decfsz	(??_main^(0+128)+1),f
  3517  0410  2C0B               	goto	u4247
  3518  0411  3200               	nop2
  3519                           
  3520                           ;Main.c: 201: OLED_Init();
  3521  0412  3188  204C  3183   	fcall	_OLED_Init
  3522                           
  3523                           ;Main.c: 204: OLED_Clear();
  3524  0415  3197  27CE  3183   	fcall	_OLED_Clear
  3525                           
  3526                           ;Main.c: 206: _delay((unsigned long)((1000)*(16000000/4000.0)));
  3527  0418  3015               	movlw	21
  3528  0419  0021               	movlb	1	; select bank1
  3529  041A  00E2               	movwf	(??_main^(0+128)+1)
  3530  041B  304B               	movlw	75
  3531  041C  00E1               	movwf	??_main^(0+128)
  3532  041D  30BE               	movlw	190
  3533  041E                     u4257:	
  3534  041E  0B89               	decfsz	9,f
  3535  041F  2C1E               	goto	u4257
  3536  0420  0BE1               	decfsz	??_main^(0+128),f
  3537  0421  2C1E               	goto	u4257
  3538  0422  0BE2               	decfsz	(??_main^(0+128)+1),f
  3539  0423  2C1E               	goto	u4257
  3540  0424  0000               	nop
  3541  0425  0064               	clrwdt	;# 
  3542                           
  3543                           ;Main.c: 211: EUSART_Initialize(9600);
  3544  0426  3000               	movlw	0
  3545  0427  0021               	movlb	1	; select bank1
  3546  0428  00A9               	movwf	(EUSART_Initialize@baudrate+3)^(0+128)
  3547  0429  3000               	movlw	0
  3548  042A  00A8               	movwf	(EUSART_Initialize@baudrate+2)^(0+128)
  3549  042B  3025               	movlw	37
  3550  042C  00A7               	movwf	(EUSART_Initialize@baudrate+1)^(0+128)
  3551  042D  3080               	movlw	128
  3552  042E  00A6               	movwf	EUSART_Initialize@baudrate^(0+128)
  3553  042F  3186  2680  3183   	fcall	_EUSART_Initialize
  3554                           
  3555                           ;Main.c: 214: OLED_YX(0, 0);
  3556  0432  0020               	movlb	0	; select bank0
  3557  0433  01C0               	clrf	OLED_YX@Column
  3558  0434  3000               	movlw	0
  3559  0435  3197  2715  3183   	fcall	_OLED_YX
  3560                           
  3561                           ;Main.c: 215: OLED_Write_String("START SERVER");
  3562  0438  30C4               	movlw	low (STR_1| (0+32768))
  3563  0439  0021               	movlb	1	; select bank1
  3564  043A  00B8               	movwf	OLED_Write_String@s^(0+128)
  3565  043B  3083               	movlw	high (STR_1| (0+32768))
  3566  043C  00B9               	movwf	(OLED_Write_String@s^(0+128)+1)
  3567  043D  3188  2000  3183   	fcall	_OLED_Write_String
  3568                           
  3569                           ;Main.c: 216: _delay((unsigned long)((2000)*(16000000/4000.0)));
  3570  0440  3029               	movlw	41
  3571  0441  0021               	movlb	1	; select bank1
  3572  0442  00E2               	movwf	(??_main^(0+128)+1)
  3573  0443  3096               	movlw	150
  3574  0444  00E1               	movwf	??_main^(0+128)
  3575  0445  307F               	movlw	127
  3576  0446                     u4267:	
  3577  0446  0B89               	decfsz	9,f
  3578  0447  2C46               	goto	u4267
  3579  0448  0BE1               	decfsz	??_main^(0+128),f
  3580  0449  2C46               	goto	u4267
  3581  044A  0BE2               	decfsz	(??_main^(0+128)+1),f
  3582  044B  2C46               	goto	u4267
  3583  044C  0064               	clrwdt	;# 
  3584                           
  3585                           ;Main.c: 221: server_Initialize();
  3586  044D  318E  267E  3183   	fcall	_server_Initialize
  3587  0450                     l3413:	
  3588                           ;Main.c: 224: float temp;
  3589                           ;Main.c: 226: while(1){
  3590                           
  3591                           
  3592                           ;Main.c: 229: OLED_Clear();
  3593  0450  3197  27CE  3183   	fcall	_OLED_Clear
  3594                           
  3595                           ;Main.c: 234: temp = Read_Temperature();
  3596  0453  318C  248D  3183   	fcall	_Read_Temperature
  3597  0456  0021               	movlb	1	; select bank1
  3598  0457  084D               	movf	?_Read_Temperature^(0+128),w
  3599  0458  00E3               	movwf	main@temp^(0+128)
  3600  0459  084E               	movf	(?_Read_Temperature+1)^(0+128),w
  3601  045A  00E4               	movwf	(main@temp+1)^(0+128)
  3602  045B  084F               	movf	(?_Read_Temperature+2)^(0+128),w
  3603  045C  00E5               	movwf	(main@temp+2)^(0+128)
  3604                           
  3605                           ;Main.c: 236: OLED_YX(0, 0);
  3606  045D  0020               	movlb	0	; select bank0
  3607  045E  01C0               	clrf	OLED_YX@Column
  3608  045F  3000               	movlw	0
  3609  0460  3197  2715  3183   	fcall	_OLED_YX
  3610                           
  3611                           ;Main.c: 237: OLED_Write_String("Temperature:");
  3612  0463  30B7               	movlw	low (STR_2| (0+32768))
  3613  0464  0021               	movlb	1	; select bank1
  3614  0465  00B8               	movwf	OLED_Write_String@s^(0+128)
  3615  0466  3083               	movlw	high (STR_2| (0+32768))
  3616  0467  00B9               	movwf	(OLED_Write_String@s^(0+128)+1)
  3617  0468  3188  2000  3183   	fcall	_OLED_Write_String
  3618                           
  3619                           ;Main.c: 238: OLED_YX(1, 0);
  3620  046B  0020               	movlb	0	; select bank0
  3621  046C  01C0               	clrf	OLED_YX@Column
  3622  046D  3001               	movlw	1
  3623  046E  3197  2715  3183   	fcall	_OLED_YX
  3624                           
  3625                           ;Main.c: 239: OLED_Write_Integer(temp);
  3626  0471  0021               	movlb	1	; select bank1
  3627  0472  0863               	movf	main@temp^(0+128),w
  3628  0473  0020               	movlb	0	; select bank0
  3629  0474  00BB               	movwf	___fttol@f1
  3630  0475  0021               	movlb	1	; select bank1
  3631  0476  0864               	movf	(main@temp+1)^(0+128),w
  3632  0477  0020               	movlb	0	; select bank0
  3633  0478  00BC               	movwf	___fttol@f1+1
  3634  0479  0021               	movlb	1	; select bank1
  3635  047A  0865               	movf	(main@temp+2)^(0+128),w
  3636  047B  0020               	movlb	0	; select bank0
  3637  047C  00BD               	movwf	___fttol@f1+2
  3638  047D  318D  2528  3183   	fcall	___fttol
  3639  0480  0020               	movlb	0	; select bank0
  3640  0481  083B               	movf	?___fttol,w
  3641  0482  3196  267D  3183   	fcall	_OLED_Write_Integer
  3642                           
  3643                           ;Main.c: 240: _delay((unsigned long)((1000)*(16000000/4000.0)));
  3644  0485  3015               	movlw	21
  3645  0486  0021               	movlb	1	; select bank1
  3646  0487  00E2               	movwf	(??_main^(0+128)+1)
  3647  0488  304B               	movlw	75
  3648  0489  00E1               	movwf	??_main^(0+128)
  3649  048A  30BE               	movlw	190
  3650  048B                     u4277:	
  3651  048B  0B89               	decfsz	9,f
  3652  048C  2C8B               	goto	u4277
  3653  048D  0BE1               	decfsz	??_main^(0+128),f
  3654  048E  2C8B               	goto	u4277
  3655  048F  0BE2               	decfsz	(??_main^(0+128)+1),f
  3656  0490  2C8B               	goto	u4277
  3657  0491  0000               	nop
  3658                           
  3659                           ;Main.c: 241: OLED_Clear();
  3660  0492  3197  27CE  3183   	fcall	_OLED_Clear
  3661                           
  3662                           ;Main.c: 246: char* buff11;
  3663                           ;Main.c: 247: int status;
  3664                           ;Main.c: 249: buff11 = itoa(&status, temp, 10);
  3665  0495  0021               	movlb	1	; select bank1
  3666  0496  0863               	movf	main@temp^(0+128),w
  3667  0497  0020               	movlb	0	; select bank0
  3668  0498  00BB               	movwf	___fttol@f1
  3669  0499  0021               	movlb	1	; select bank1
  3670  049A  0864               	movf	(main@temp+1)^(0+128),w
  3671  049B  0020               	movlb	0	; select bank0
  3672  049C  00BC               	movwf	___fttol@f1+1
  3673  049D  0021               	movlb	1	; select bank1
  3674  049E  0865               	movf	(main@temp+2)^(0+128),w
  3675  049F  0020               	movlb	0	; select bank0
  3676  04A0  00BD               	movwf	___fttol@f1+2
  3677  04A1  318D  2528  3183   	fcall	___fttol
  3678  04A4  0020               	movlb	0	; select bank0
  3679  04A5  083C               	movf	?___fttol+1,w
  3680  04A6  0021               	movlb	1	; select bank1
  3681  04A7  00A9               	movwf	(itoa@val+1)^(0+128)
  3682  04A8  0020               	movlb	0	; select bank0
  3683  04A9  083B               	movf	?___fttol,w
  3684  04AA  0021               	movlb	1	; select bank1
  3685  04AB  00A8               	movwf	itoa@val^(0+128)
  3686  04AC  300A               	movlw	10
  3687  04AD  00AA               	movwf	itoa@base^(0+128)
  3688  04AE  3000               	movlw	0
  3689  04AF  00AB               	movwf	(itoa@base^(0+128)+1)
  3690  04B0  30E7               	movlw	(low (main@status| 0))& (0+255)
  3691  04B1  3196  26A1  3183   	fcall	_itoa
  3692  04B4  0021               	movlb	1	; select bank1
  3693  04B5  00E1               	movwf	??_main^(0+128)
  3694  04B6  0861               	movf	??_main^(0+128),w
  3695  04B7  00E6               	movwf	main@buff11^(0+128)
  3696                           
  3697                           ;Main.c: 250: strcat(buff11, "\r\n");
  3698  04B8  3064               	movlw	low ((STR_12+17)| (0+32768))
  3699  04B9  0020               	movlb	0	; select bank0
  3700  04BA  00BB               	movwf	strcat@from
  3701  04BB  3083               	movlw	high ((STR_12+17)| (0+32768))
  3702  04BC  00BC               	movwf	strcat@from+1
  3703  04BD  0021               	movlb	1	; select bank1
  3704  04BE  0866               	movf	main@buff11^(0+128),w
  3705  04BF  3196  26C7  3183   	fcall	_strcat
  3706                           
  3707                           ;Main.c: 255: EUSART_Read_Text(buf, 20);
  3708  04C2  3014               	movlw	20
  3709  04C3  0020               	movlb	0	; select bank0
  3710  04C4  00BB               	movwf	EUSART_Read_Text@length
  3711  04C5  3000               	movlw	0
  3712  04C6  00BC               	movwf	EUSART_Read_Text@length+1
  3713  04C7  3020               	movlw	(low (_buf| (0+256)))& (0+255)
  3714  04C8  3196  263C  3183   	fcall	_EUSART_Read_Text
  3715                           
  3716                           ;Main.c: 260: OLED_YX(1, 0);
  3717  04CB  0020               	movlb	0	; select bank0
  3718  04CC  01C0               	clrf	OLED_YX@Column
  3719  04CD  3001               	movlw	1
  3720  04CE  3197  2715  3183   	fcall	_OLED_YX
  3721                           
  3722                           ;Main.c: 261: OLED_Write_String(buf);
  3723  04D1  3020               	movlw	low _buf
  3724  04D2  0021               	movlb	1	; select bank1
  3725  04D3  00B8               	movwf	OLED_Write_String@s^(0+128)
  3726  04D4  3001               	movlw	high _buf
  3727  04D5  00B9               	movwf	(OLED_Write_String@s+1)^(0+128)
  3728  04D6  3188  2000  3183   	fcall	_OLED_Write_String
  3729                           
  3730                           ;Main.c: 262: _delay((unsigned long)((3000)*(16000000/4000.0)));
  3731  04D9  303D               	movlw	61
  3732  04DA  0021               	movlb	1	; select bank1
  3733  04DB  00E2               	movwf	(??_main^(0+128)+1)
  3734  04DC  30E1               	movlw	225
  3735  04DD  00E1               	movwf	??_main^(0+128)
  3736  04DE  303F               	movlw	63
  3737  04DF                     u4287:	
  3738  04DF  0B89               	decfsz	9,f
  3739  04E0  2CDF               	goto	u4287
  3740  04E1  0BE1               	decfsz	??_main^(0+128),f
  3741  04E2  2CDF               	goto	u4287
  3742  04E3  0BE2               	decfsz	(??_main^(0+128)+1),f
  3743  04E4  2CDF               	goto	u4287
  3744  04E5  3200               	nop2
  3745                           
  3746                           ;Main.c: 263: OLED_Clear();
  3747  04E6  3197  27CE  3183   	fcall	_OLED_Clear
  3748                           
  3749                           ;Main.c: 268: OLED_YX(0, 0);
  3750  04E9  0020               	movlb	0	; select bank0
  3751  04EA  01C0               	clrf	OLED_YX@Column
  3752  04EB  3000               	movlw	0
  3753  04EC  3197  2715  3183   	fcall	_OLED_YX
  3754                           
  3755                           ;Main.c: 269: OLED_Write_String("Sending Data");
  3756  04EF  30D1               	movlw	low (STR_4| (0+32768))
  3757  04F0  0021               	movlb	1	; select bank1
  3758  04F1  00B8               	movwf	OLED_Write_String@s^(0+128)
  3759  04F2  3083               	movlw	high (STR_4| (0+32768))
  3760  04F3  00B9               	movwf	(OLED_Write_String@s^(0+128)+1)
  3761  04F4  3188  2000  3183   	fcall	_OLED_Write_String
  3762                           
  3763                           ;Main.c: 270: EUSART_Write_Text("AT+CIPSEND=0,2\r\n");
  3764  04F7  3079               	movlw	low (STR_5| (0+32768))
  3765  04F8  0020               	movlb	0	; select bank0
  3766  04F9  00BC               	movwf	EUSART_Write_Text@text
  3767  04FA  3083               	movlw	high (STR_5| (0+32768))
  3768  04FB  00BD               	movwf	EUSART_Write_Text@text+1
  3769  04FC  3195  25E5  3183   	fcall	_EUSART_Write_Text
  3770                           
  3771                           ;Main.c: 271: _delay((unsigned long)((5000)*(16000000/4000.0)));
  3772  04FF  3066               	movlw	102
  3773  0500  0021               	movlb	1	; select bank1
  3774  0501  00E2               	movwf	(??_main^(0+128)+1)
  3775  0502  3076               	movlw	118
  3776  0503  00E1               	movwf	??_main^(0+128)
  3777  0504  30C1               	movlw	193
  3778  0505                     u4297:	
  3779  0505  0B89               	decfsz	9,f
  3780  0506  2D05               	goto	u4297
  3781  0507  0BE1               	decfsz	??_main^(0+128),f
  3782  0508  2D05               	goto	u4297
  3783  0509  0BE2               	decfsz	(??_main^(0+128)+1),f
  3784  050A  2D05               	goto	u4297
  3785                           
  3786                           ;Main.c: 273: EUSART_Write_Text(buff11);
  3787  050B  0021               	movlb	1	; select bank1
  3788  050C  0866               	movf	main@buff11^(0+128),w
  3789  050D  0020               	movlb	0	; select bank0
  3790  050E  00BC               	movwf	EUSART_Write_Text@text
  3791  050F  3000               	movlw	0
  3792  0510  00BD               	movwf	EUSART_Write_Text@text+1
  3793  0511  3195  25E5  3183   	fcall	_EUSART_Write_Text
  3794                           
  3795                           ;Main.c: 275: EUSART_Read_Text(buf, 10);
  3796  0514  300A               	movlw	10
  3797  0515  0020               	movlb	0	; select bank0
  3798  0516  00BB               	movwf	EUSART_Read_Text@length
  3799  0517  3000               	movlw	0
  3800  0518  00BC               	movwf	EUSART_Read_Text@length+1
  3801  0519  3020               	movlw	(low (_buf| (0+256)))& (0+255)
  3802  051A  3196  263C  3183   	fcall	_EUSART_Read_Text
  3803                           
  3804                           ;Main.c: 276: OLED_YX(1, 0);
  3805  051D  0020               	movlb	0	; select bank0
  3806  051E  01C0               	clrf	OLED_YX@Column
  3807  051F  3001               	movlw	1
  3808  0520  3197  2715  3183   	fcall	_OLED_YX
  3809                           
  3810                           ;Main.c: 277: OLED_Write_String(buf);
  3811  0523  3020               	movlw	low _buf
  3812  0524  0021               	movlb	1	; select bank1
  3813  0525  00B8               	movwf	OLED_Write_String@s^(0+128)
  3814  0526  3001               	movlw	high _buf
  3815  0527  00B9               	movwf	(OLED_Write_String@s+1)^(0+128)
  3816  0528  3188  2000  3183   	fcall	_OLED_Write_String
  3817                           
  3818                           ;Main.c: 278: _delay((unsigned long)((3000)*(16000000/4000.0)));
  3819  052B  303D               	movlw	61
  3820  052C  0021               	movlb	1	; select bank1
  3821  052D  00E2               	movwf	(??_main^(0+128)+1)
  3822  052E  30E1               	movlw	225
  3823  052F  00E1               	movwf	??_main^(0+128)
  3824  0530  303F               	movlw	63
  3825  0531                     u4307:	
  3826  0531  0B89               	decfsz	9,f
  3827  0532  2D31               	goto	u4307
  3828  0533  0BE1               	decfsz	??_main^(0+128),f
  3829  0534  2D31               	goto	u4307
  3830  0535  0BE2               	decfsz	(??_main^(0+128)+1),f
  3831  0536  2D31               	goto	u4307
  3832  0537  3200               	nop2
  3833                           
  3834                           ;Main.c: 279: OLED_Clear();
  3835  0538  3197  27CE  3183   	fcall	_OLED_Clear
  3836                           
  3837                           ;Main.c: 285: EUSART_Write_Text("AT+CIPCLOSE=0\r\n");
  3838  053B  308A               	movlw	low (STR_6| (0+32768))
  3839  053C  0020               	movlb	0	; select bank0
  3840  053D  00BC               	movwf	EUSART_Write_Text@text
  3841  053E  3083               	movlw	high (STR_6| (0+32768))
  3842  053F  00BD               	movwf	EUSART_Write_Text@text+1
  3843  0540  3195  25E5  3183   	fcall	_EUSART_Write_Text
  3844                           
  3845                           ;Main.c: 286: _delay((unsigned long)((1000)*(16000000/4000.0)));
  3846  0543  3015               	movlw	21
  3847  0544  0021               	movlb	1	; select bank1
  3848  0545  00E2               	movwf	(??_main^(0+128)+1)
  3849  0546  304B               	movlw	75
  3850  0547  00E1               	movwf	??_main^(0+128)
  3851  0548  30BE               	movlw	190
  3852  0549                     u4317:	
  3853  0549  0B89               	decfsz	9,f
  3854  054A  2D49               	goto	u4317
  3855  054B  0BE1               	decfsz	??_main^(0+128),f
  3856  054C  2D49               	goto	u4317
  3857  054D  0BE2               	decfsz	(??_main^(0+128)+1),f
  3858  054E  2D49               	goto	u4317
  3859  054F  0000               	nop
  3860                           
  3861                           ;Main.c: 288: EUSART_Read_Text(buf, 10);
  3862  0550  300A               	movlw	10
  3863  0551  0020               	movlb	0	; select bank0
  3864  0552  00BB               	movwf	EUSART_Read_Text@length
  3865  0553  3000               	movlw	0
  3866  0554  00BC               	movwf	EUSART_Read_Text@length+1
  3867  0555  3020               	movlw	(low (_buf| (0+256)))& (0+255)
  3868  0556  3196  263C  3183   	fcall	_EUSART_Read_Text
  3869                           
  3870                           ;Main.c: 289: OLED_YX(1, 0);
  3871  0559  0020               	movlb	0	; select bank0
  3872  055A  01C0               	clrf	OLED_YX@Column
  3873  055B  3001               	movlw	1
  3874  055C  3197  2715  3183   	fcall	_OLED_YX
  3875                           
  3876                           ;Main.c: 290: OLED_Write_String(buf);
  3877  055F  3020               	movlw	low _buf
  3878  0560  0021               	movlb	1	; select bank1
  3879  0561  00B8               	movwf	OLED_Write_String@s^(0+128)
  3880  0562  3001               	movlw	high _buf
  3881  0563  00B9               	movwf	(OLED_Write_String@s+1)^(0+128)
  3882  0564  3188  2000  3183   	fcall	_OLED_Write_String
  3883                           
  3884                           ;Main.c: 291: _delay((unsigned long)((3000)*(16000000/4000.0)));
  3885  0567  303D               	movlw	61
  3886  0568  0021               	movlb	1	; select bank1
  3887  0569  00E2               	movwf	(??_main^(0+128)+1)
  3888  056A  30E1               	movlw	225
  3889  056B  00E1               	movwf	??_main^(0+128)
  3890  056C  303F               	movlw	63
  3891  056D                     u4327:	
  3892  056D  0B89               	decfsz	9,f
  3893  056E  2D6D               	goto	u4327
  3894  056F  0BE1               	decfsz	??_main^(0+128),f
  3895  0570  2D6D               	goto	u4327
  3896  0571  0BE2               	decfsz	(??_main^(0+128)+1),f
  3897  0572  2D6D               	goto	u4327
  3898  0573  3200               	nop2
  3899                           
  3900                           ;Main.c: 292: OLED_Clear();
  3901  0574  3197  27CE  3183   	fcall	_OLED_Clear
  3902                           
  3903                           ;Main.c: 295: RC1STAbits.SPEN = 0;
  3904  0577  0023               	movlb	3	; select bank3
  3905  0578  139D               	bcf	29,7	;volatile
  3906                           
  3907                           ;Main.c: 296: RC1STAbits.SPEN = 1;
  3908  0579  179D               	bsf	29,7	;volatile
  3909  057A  0064               	clrwdt	;# 
  3910  057B  2C50               	goto	l3413
  3911  057C                     __end_of_main:	
  3912                           ;Main.c: 300: }
  3913                           ;Main.c: 302: return;
  3914                           
  3915                           
  3916                           	psect	text1
  3917  16C7                     __ptext1:	
  3918 ;; *************** function _strcat *****************
  3919 ;; Defined at:
  3920 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\strcat.c"
  3921 ;; Parameters:    Size  Location     Type
  3922 ;;  to              1    wreg     PTR unsigned char 
  3923 ;;		 -> OLED_Write_Integer@status(2), main@status(2), 
  3924 ;;  from            2   27[BANK0 ] PTR const unsigned char 
  3925 ;;		 -> STR_3(3), 
  3926 ;; Auto vars:     Size  Location     Type
  3927 ;;  to              1   30[BANK0 ] PTR unsigned char 
  3928 ;;		 -> OLED_Write_Integer@status(2), main@status(2), 
  3929 ;;  cp              1   31[BANK0 ] PTR unsigned char 
  3930 ;;		 -> OLED_Write_Integer@status(2), main@status(2), 
  3931 ;; Return value:  Size  Location     Type
  3932 ;;                  1    wreg      PTR unsigned char 
  3933 ;; Registers used:
  3934 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  3935 ;; Tracked objects:
  3936 ;;		On entry : 0/0
  3937 ;;		On exit  : 0/0
  3938 ;;		Unchanged: 0/0
  3939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3940 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3941 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3942 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3943 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3944 ;;Total ram usage:        5 bytes
  3945 ;; Hardware stack levels used:    1
  3946 ;; Hardware stack levels required when called:    6
  3947 ;; This function calls:
  3948 ;;		Nothing
  3949 ;; This function is called by:
  3950 ;;		_main
  3951 ;; This function uses a non-reentrant model
  3952 ;;
  3953                           
  3954                           
  3955                           ;psect for function _strcat
  3956  16C7                     _strcat:	
  3957                           
  3958                           ;incstack = 0
  3959                           ; Regs used in _strcat: [wreg-fsr1h+status,2+status,0+pclath]
  3960                           ;strcat@to stored from wreg
  3961  16C7  0020               	movlb	0	; select bank0
  3962  16C8  00BE               	movwf	strcat@to
  3963  16C9  083E               	movf	strcat@to,w
  3964  16CA  00BD               	movwf	??_strcat
  3965  16CB  083D               	movf	??_strcat,w
  3966  16CC  00BF               	movwf	strcat@cp
  3967  16CD                     l2611:	
  3968  16CD  083F               	movf	strcat@cp,w
  3969  16CE  0086               	movwf	6
  3970  16CF  0187               	clrf	7
  3971  16D0  0801               	movf	1,w
  3972  16D1  1903               	btfsc	3,2
  3973  16D2  2EE0               	goto	l2617
  3974  16D3  3001               	movlw	1
  3975  16D4  00BD               	movwf	??_strcat
  3976  16D5  083D               	movf	??_strcat,w
  3977  16D6  07BF               	addwf	strcat@cp,f
  3978  16D7  2ECD               	goto	l2611
  3979  16D8                     l2613:	
  3980  16D8  3001               	movlw	1
  3981  16D9  00BD               	movwf	??_strcat
  3982  16DA  083D               	movf	??_strcat,w
  3983  16DB  07BF               	addwf	strcat@cp,f
  3984  16DC  3001               	movlw	1
  3985  16DD  07BB               	addwf	strcat@from,f
  3986  16DE  3000               	movlw	0
  3987  16DF  3DBC               	addwfc	strcat@from+1,f
  3988  16E0                     l2617:	
  3989  16E0  083F               	movf	strcat@cp,w
  3990  16E1  0086               	movwf	6
  3991  16E2  0187               	clrf	7
  3992  16E3  083B               	movf	strcat@from,w
  3993  16E4  0084               	movwf	4
  3994  16E5  083C               	movf	strcat@from+1,w
  3995  16E6  0085               	movwf	5
  3996  16E7  0800               	movf	0,w	;code access
  3997  16E8  3FC0               	movwi [0]fsr1
  3998  16E9  0889               	movf	9,f
  3999  16EA  1903               	btfsc	3,2
  4000  16EB  0008               	return
  4001  16EC  2ED8               	goto	l2613
  4002  16ED                     __end_of_strcat:	
  4003                           ;	Return value of _strcat is never used
  4004                           
  4005                           
  4006                           	psect	text2
  4007  0E7E                     __ptext2:	
  4008 ;; *************** function _server_Initialize *****************
  4009 ;; Defined at:
  4010 ;;		line 371 in file "Main.c"
  4011 ;; Parameters:    Size  Location     Type
  4012 ;;		None
  4013 ;; Auto vars:     Size  Location     Type
  4014 ;;		None
  4015 ;; Return value:  Size  Location     Type
  4016 ;;                  1    wreg      void 
  4017 ;; Registers used:
  4018 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4019 ;; Tracked objects:
  4020 ;;		On entry : 0/0
  4021 ;;		On exit  : 0/0
  4022 ;;		Unchanged: 0/0
  4023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4026 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4027 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4028 ;;Total ram usage:        2 bytes
  4029 ;; Hardware stack levels used:    1
  4030 ;; Hardware stack levels required when called:   10
  4031 ;; This function calls:
  4032 ;;		_EUSART_Read_Text
  4033 ;;		_EUSART_Write_Text
  4034 ;;		_OLED_Clear
  4035 ;;		_OLED_Write_String
  4036 ;;		_OLED_YX
  4037 ;; This function is called by:
  4038 ;;		_main
  4039 ;; This function uses a non-reentrant model
  4040 ;;
  4041                           
  4042                           
  4043                           ;psect for function _server_Initialize
  4044  0E7E                     _server_Initialize:	
  4045                           
  4046                           ;incstack = 0
  4047                           ; Regs used in _server_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4048  0E7E  0064               	clrwdt	;# 
  4049                           
  4050                           ;Main.c: 378: OLED_YX(0, 0);
  4051  0E7F  0020               	movlb	0	; select bank0
  4052  0E80  01C0               	clrf	OLED_YX@Column
  4053  0E81  3000               	movlw	0
  4054  0E82  3197  2715  318E   	fcall	_OLED_YX
  4055                           
  4056                           ;Main.c: 379: OLED_Write_String("Sending AT");
  4057  0E85  30E9               	movlw	low (STR_7| (0+32768))
  4058  0E86  0021               	movlb	1	; select bank1
  4059  0E87  00B8               	movwf	OLED_Write_String@s^(0+128)
  4060  0E88  3083               	movlw	high (STR_7| (0+32768))
  4061  0E89  00B9               	movwf	(OLED_Write_String@s^(0+128)+1)
  4062  0E8A  3188  2000  318E   	fcall	_OLED_Write_String
  4063                           
  4064                           ;Main.c: 380: EUSART_Write_Text("AT\r\n");
  4065  0E8D  30FA               	movlw	low (STR_8| (0+32768))
  4066  0E8E  0020               	movlb	0	; select bank0
  4067  0E8F  00BC               	movwf	EUSART_Write_Text@text
  4068  0E90  3083               	movlw	high (STR_8| (0+32768))
  4069  0E91  00BD               	movwf	EUSART_Write_Text@text+1
  4070  0E92  3195  25E5  318E   	fcall	_EUSART_Write_Text
  4071                           
  4072                           ;Main.c: 381: EUSART_Read_Text(buf, 11);
  4073  0E95  300B               	movlw	11
  4074  0E96  0020               	movlb	0	; select bank0
  4075  0E97  00BB               	movwf	EUSART_Read_Text@length
  4076  0E98  3000               	movlw	0
  4077  0E99  00BC               	movwf	EUSART_Read_Text@length+1
  4078  0E9A  3020               	movlw	(low (_buf| (0+256)))& (0+255)
  4079  0E9B  3196  263C  318E   	fcall	_EUSART_Read_Text
  4080                           
  4081                           ;Main.c: 383: OLED_YX(1, 0);
  4082  0E9E  0020               	movlb	0	; select bank0
  4083  0E9F  01C0               	clrf	OLED_YX@Column
  4084  0EA0  3001               	movlw	1
  4085  0EA1  3197  2715  318E   	fcall	_OLED_YX
  4086                           
  4087                           ;Main.c: 384: OLED_Write_String(buf);
  4088  0EA4  3020               	movlw	low _buf
  4089  0EA5  0021               	movlb	1	; select bank1
  4090  0EA6  00B8               	movwf	OLED_Write_String@s^(0+128)
  4091  0EA7  3001               	movlw	high _buf
  4092  0EA8  00B9               	movwf	(OLED_Write_String@s+1)^(0+128)
  4093  0EA9  3188  2000  318E   	fcall	_OLED_Write_String
  4094                           
  4095                           ;Main.c: 385: _delay((unsigned long)((3000)*(16000000/4000.0)));
  4096  0EAC  303D               	movlw	61
  4097  0EAD  0021               	movlb	1	; select bank1
  4098  0EAE  00BE               	movwf	(??_server_Initialize^(0+128)+1)
  4099  0EAF  30E1               	movlw	225
  4100  0EB0  00BD               	movwf	??_server_Initialize^(0+128)
  4101  0EB1  303F               	movlw	63
  4102  0EB2                     u4337:	
  4103  0EB2  0B89               	decfsz	9,f
  4104  0EB3  2EB2               	goto	u4337
  4105  0EB4  0BBD               	decfsz	??_server_Initialize^(0+128),f
  4106  0EB5  2EB2               	goto	u4337
  4107  0EB6  0BBE               	decfsz	(??_server_Initialize^(0+128)+1),f
  4108  0EB7  2EB2               	goto	u4337
  4109  0EB8  3200               	nop2
  4110                           
  4111                           ;Main.c: 386: OLED_Clear();
  4112  0EB9  3197  27CE  318E   	fcall	_OLED_Clear
  4113  0EBC  0064               	clrwdt	;# 
  4114                           
  4115                           ;Main.c: 393: OLED_YX(0, 0);
  4116  0EBD  0020               	movlb	0	; select bank0
  4117  0EBE  01C0               	clrf	OLED_YX@Column
  4118  0EBF  3000               	movlw	0
  4119  0EC0  3197  2715  318E   	fcall	_OLED_YX
  4120                           
  4121                           ;Main.c: 394: OLED_Write_String("Sending CIPMUX");
  4122  0EC3  309A               	movlw	low (STR_9| (0+32768))
  4123  0EC4  0021               	movlb	1	; select bank1
  4124  0EC5  00B8               	movwf	OLED_Write_String@s^(0+128)
  4125  0EC6  3083               	movlw	high (STR_9| (0+32768))
  4126  0EC7  00B9               	movwf	(OLED_Write_String@s^(0+128)+1)
  4127  0EC8  3188  2000  318E   	fcall	_OLED_Write_String
  4128                           
  4129                           ;Main.c: 395: EUSART_Write_Text("AT+CIPMUX=0\r\n");
  4130  0ECB  30A9               	movlw	low (STR_10| (0+32768))
  4131  0ECC  0020               	movlb	0	; select bank0
  4132  0ECD  00BC               	movwf	EUSART_Write_Text@text
  4133  0ECE  3083               	movlw	high (STR_10| (0+32768))
  4134  0ECF  00BD               	movwf	EUSART_Write_Text@text+1
  4135  0ED0  3195  25E5  318E   	fcall	_EUSART_Write_Text
  4136                           
  4137                           ;Main.c: 396: EUSART_Read_Text(buf, 15);
  4138  0ED3  300F               	movlw	15
  4139  0ED4  0020               	movlb	0	; select bank0
  4140  0ED5  00BB               	movwf	EUSART_Read_Text@length
  4141  0ED6  3000               	movlw	0
  4142  0ED7  00BC               	movwf	EUSART_Read_Text@length+1
  4143  0ED8  3020               	movlw	(low (_buf| (0+256)))& (0+255)
  4144  0ED9  3196  263C  318E   	fcall	_EUSART_Read_Text
  4145                           
  4146                           ;Main.c: 398: OLED_YX(1, 0);
  4147  0EDC  0020               	movlb	0	; select bank0
  4148  0EDD  01C0               	clrf	OLED_YX@Column
  4149  0EDE  3001               	movlw	1
  4150  0EDF  3197  2715  318E   	fcall	_OLED_YX
  4151                           
  4152                           ;Main.c: 399: OLED_Write_String(buf);
  4153  0EE2  3020               	movlw	low _buf
  4154  0EE3  0021               	movlb	1	; select bank1
  4155  0EE4  00B8               	movwf	OLED_Write_String@s^(0+128)
  4156  0EE5  3001               	movlw	high _buf
  4157  0EE6  00B9               	movwf	(OLED_Write_String@s+1)^(0+128)
  4158  0EE7  3188  2000  318E   	fcall	_OLED_Write_String
  4159                           
  4160                           ;Main.c: 400: _delay((unsigned long)((3000)*(16000000/4000.0)));
  4161  0EEA  303D               	movlw	61
  4162  0EEB  0021               	movlb	1	; select bank1
  4163  0EEC  00BE               	movwf	(??_server_Initialize^(0+128)+1)
  4164  0EED  30E1               	movlw	225
  4165  0EEE  00BD               	movwf	??_server_Initialize^(0+128)
  4166  0EEF  303F               	movlw	63
  4167  0EF0                     u4347:	
  4168  0EF0  0B89               	decfsz	9,f
  4169  0EF1  2EF0               	goto	u4347
  4170  0EF2  0BBD               	decfsz	??_server_Initialize^(0+128),f
  4171  0EF3  2EF0               	goto	u4347
  4172  0EF4  0BBE               	decfsz	(??_server_Initialize^(0+128)+1),f
  4173  0EF5  2EF0               	goto	u4347
  4174  0EF6  3200               	nop2
  4175                           
  4176                           ;Main.c: 401: OLED_Clear();
  4177  0EF7  3197  27CE  318E   	fcall	_OLED_Clear
  4178  0EFA  0064               	clrwdt	;# 
  4179                           
  4180                           ;Main.c: 408: OLED_YX(0, 0);
  4181  0EFB  0020               	movlb	0	; select bank0
  4182  0EFC  01C0               	clrf	OLED_YX@Column
  4183  0EFD  3000               	movlw	0
  4184  0EFE  3197  2715  318E   	fcall	_OLED_YX
  4185                           
  4186                           ;Main.c: 409: OLED_Write_String("Sending CIPSERVER");
  4187  0F01  3067               	movlw	low (STR_11| (0+32768))
  4188  0F02  0021               	movlb	1	; select bank1
  4189  0F03  00B8               	movwf	OLED_Write_String@s^(0+128)
  4190  0F04  3083               	movlw	high (STR_11| (0+32768))
  4191  0F05  00B9               	movwf	(OLED_Write_String@s^(0+128)+1)
  4192  0F06  3188  2000  318E   	fcall	_OLED_Write_String
  4193                           
  4194                           ;Main.c: 410: EUSART_Write_Text("AT+CIPSERVER=1,80\r\n");
  4195  0F09  3053               	movlw	low (STR_12| (0+32768))
  4196  0F0A  0020               	movlb	0	; select bank0
  4197  0F0B  00BC               	movwf	EUSART_Write_Text@text
  4198  0F0C  3083               	movlw	high (STR_12| (0+32768))
  4199  0F0D  00BD               	movwf	EUSART_Write_Text@text+1
  4200  0F0E  3195  25E5  318E   	fcall	_EUSART_Write_Text
  4201                           
  4202                           ;Main.c: 412: EUSART_Read_Text(buf, 15);
  4203  0F11  300F               	movlw	15
  4204  0F12  0020               	movlb	0	; select bank0
  4205  0F13  00BB               	movwf	EUSART_Read_Text@length
  4206  0F14  3000               	movlw	0
  4207  0F15  00BC               	movwf	EUSART_Read_Text@length+1
  4208  0F16  3020               	movlw	(low (_buf| (0+256)))& (0+255)
  4209  0F17  3196  263C  318E   	fcall	_EUSART_Read_Text
  4210                           
  4211                           ;Main.c: 414: OLED_YX(1, 0);
  4212  0F1A  0020               	movlb	0	; select bank0
  4213  0F1B  01C0               	clrf	OLED_YX@Column
  4214  0F1C  3001               	movlw	1
  4215  0F1D  3197  2715  318E   	fcall	_OLED_YX
  4216                           
  4217                           ;Main.c: 415: OLED_Write_String(buf);
  4218  0F20  3020               	movlw	low _buf
  4219  0F21  0021               	movlb	1	; select bank1
  4220  0F22  00B8               	movwf	OLED_Write_String@s^(0+128)
  4221  0F23  3001               	movlw	high _buf
  4222  0F24  00B9               	movwf	(OLED_Write_String@s+1)^(0+128)
  4223  0F25  3188  2000  318E   	fcall	_OLED_Write_String
  4224                           
  4225                           ;Main.c: 417: _delay((unsigned long)((3000)*(16000000/4000.0)));
  4226  0F28  303D               	movlw	61
  4227  0F29  0021               	movlb	1	; select bank1
  4228  0F2A  00BE               	movwf	(??_server_Initialize^(0+128)+1)
  4229  0F2B  30E1               	movlw	225
  4230  0F2C  00BD               	movwf	??_server_Initialize^(0+128)
  4231  0F2D  303F               	movlw	63
  4232  0F2E                     u4357:	
  4233  0F2E  0B89               	decfsz	9,f
  4234  0F2F  2F2E               	goto	u4357
  4235  0F30  0BBD               	decfsz	??_server_Initialize^(0+128),f
  4236  0F31  2F2E               	goto	u4357
  4237  0F32  0BBE               	decfsz	(??_server_Initialize^(0+128)+1),f
  4238  0F33  2F2E               	goto	u4357
  4239  0F34  3200               	nop2
  4240                           
  4241                           ;Main.c: 418: OLED_Clear();
  4242  0F35  3197  27CE         	fcall	_OLED_Clear
  4243  0F37  0064               	clrwdt	;# 
  4244                           
  4245                           ;Main.c: 423: WDTCONbits.WDTPS = 0b10001;
  4246  0F38  0021               	movlb	1	; select bank1
  4247  0F39  0817               	movf	23,w	;volatile
  4248  0F3A  39C1               	andlw	-63
  4249  0F3B  3822               	iorlw	34
  4250  0F3C  0097               	movwf	23	;volatile
  4251  0F3D  0008               	return
  4252  0F3E                     __end_of_server_Initialize:	
  4253                           
  4254                           	psect	text3
  4255  17CE                     __ptext3:	
  4256 ;; *************** function _OLED_Clear *****************
  4257 ;; Defined at:
  4258 ;;		line 264 in file "oled.c"
  4259 ;; Parameters:    Size  Location     Type
  4260 ;;		None
  4261 ;; Auto vars:     Size  Location     Type
  4262 ;;  col             2   27[BANK1 ] unsigned int 
  4263 ;;  row             2   25[BANK1 ] unsigned int 
  4264 ;; Return value:  Size  Location     Type
  4265 ;;                  1    wreg      void 
  4266 ;; Registers used:
  4267 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4268 ;; Tracked objects:
  4269 ;;		On entry : 0/0
  4270 ;;		On exit  : 0/0
  4271 ;;		Unchanged: 0/0
  4272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4274 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4275 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4276 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  4277 ;;Total ram usage:        5 bytes
  4278 ;; Hardware stack levels used:    1
  4279 ;; Hardware stack levels required when called:    9
  4280 ;; This function calls:
  4281 ;;		_OLED_PutChar
  4282 ;;		_OLED_YX
  4283 ;; This function is called by:
  4284 ;;		_main
  4285 ;;		_server_Initialize
  4286 ;; This function uses a non-reentrant model
  4287 ;;
  4288                           
  4289                           
  4290                           ;psect for function _OLED_Clear
  4291  17CE                     _OLED_Clear:	
  4292                           
  4293                           ;oled.c: 266: for ( uint16_t row = 0; row < 8; row++ ) {
  4294                           
  4295                           ;incstack = 0
  4296                           ; Regs used in _OLED_Clear: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4297  17CE  0021               	movlb	1	; select bank1
  4298  17CF  01B9               	clrf	OLED_Clear@row^(0+128)
  4299  17D0  01BA               	clrf	(OLED_Clear@row+1)^(0+128)
  4300  17D1                     L1:	
  4301  17D1  3000               	movlw	0
  4302  17D2  023A               	subwf	(OLED_Clear@row+1)^(0+128),w
  4303  17D3  3008               	movlw	8
  4304  17D4  1903               	skipnz
  4305  17D5  0239               	subwf	OLED_Clear@row^(0+128),w
  4306  17D6  1803               	btfsc	3,0
  4307  17D7  0008               	return
  4308                           
  4309                           ;oled.c: 267: for ( uint16_t col = 0; col < 16; col++ ) {
  4310  17D8  01BB               	clrf	OLED_Clear@col^(0+128)
  4311  17D9  01BC               	clrf	(OLED_Clear@col+1)^(0+128)
  4312  17DA  3000               	movlw	0
  4313  17DB  023C               	subwf	(OLED_Clear@col+1)^(0+128),w
  4314  17DC  3010               	movlw	16
  4315  17DD  1903               	skipnz
  4316  17DE  023B               	subwf	OLED_Clear@col^(0+128),w
  4317  17DF  1803               	btfsc	3,0
  4318  17E0  2FFB               	goto	l3021
  4319  17E1                     l3013:	
  4320                           
  4321                           ;oled.c: 268: OLED_YX( row, col );
  4322  17E1  083B               	movf	OLED_Clear@col^(0+128),w
  4323  17E2  00B8               	movwf	??_OLED_Clear^(0+128)
  4324  17E3  0838               	movf	??_OLED_Clear^(0+128),w
  4325  17E4  0020               	movlb	0	; select bank0
  4326  17E5  00C0               	movwf	OLED_YX@Column
  4327  17E6  0021               	movlb	1	; select bank1
  4328  17E7  0839               	movf	OLED_Clear@row^(0+128),w
  4329  17E8  3197  2715  3197   	fcall	_OLED_YX
  4330                           
  4331                           ;oled.c: 269: OLED_PutChar(' ');
  4332  17EB  3020               	movlw	32
  4333  17EC  318A  225F  3197   	fcall	_OLED_PutChar
  4334  17EF  3001               	movlw	1
  4335  17F0  0021               	movlb	1	; select bank1
  4336  17F1  07BB               	addwf	OLED_Clear@col^(0+128),f
  4337  17F2  3000               	movlw	0
  4338  17F3  3DBC               	addwfc	(OLED_Clear@col+1)^(0+128),f
  4339  17F4  3000               	movlw	0
  4340  17F5  023C               	subwf	(OLED_Clear@col+1)^(0+128),w
  4341  17F6  3010               	movlw	16
  4342  17F7  1903               	skipnz
  4343  17F8  023B               	subwf	OLED_Clear@col^(0+128),w
  4344  17F9  1C03               	skipc
  4345  17FA  2FE1               	goto	l3013
  4346  17FB                     l3021:	
  4347  17FB  3001               	movlw	1
  4348  17FC  07B9               	addwf	OLED_Clear@row^(0+128),f
  4349  17FD  3000               	movlw	0
  4350  17FE  3DBA               	addwfc	(OLED_Clear@row+1)^(0+128),f
  4351  17FF  2FD1               	goto	L1
  4352  1800                     __end_of_OLED_Clear:	
  4353                           
  4354                           	psect	text4
  4355  1715                     __ptext4:	
  4356 ;; *************** function _OLED_YX *****************
  4357 ;; Defined at:
  4358 ;;		line 213 in file "oled.c"
  4359 ;; Parameters:    Size  Location     Type
  4360 ;;  Row             1    wreg     unsigned char 
  4361 ;;  Column          1   32[BANK0 ] unsigned char 
  4362 ;; Auto vars:     Size  Location     Type
  4363 ;;  Row             1    0[BANK1 ] unsigned char 
  4364 ;; Return value:  Size  Location     Type
  4365 ;;                  1    wreg      void 
  4366 ;; Registers used:
  4367 ;;		wreg, status,2, status,0, pclath, cstack
  4368 ;; Tracked objects:
  4369 ;;		On entry : 0/0
  4370 ;;		On exit  : 0/0
  4371 ;;		Unchanged: 0/0
  4372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4373 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4374 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4375 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4376 ;;      Totals:         0       4       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4377 ;;Total ram usage:        5 bytes
  4378 ;; Hardware stack levels used:    1
  4379 ;; Hardware stack levels required when called:    8
  4380 ;; This function calls:
  4381 ;;		_OLED_Command
  4382 ;; This function is called by:
  4383 ;;		_main
  4384 ;;		_server_Initialize
  4385 ;;		_OLED_Clear
  4386 ;; This function uses a non-reentrant model
  4387 ;;
  4388                           
  4389                           
  4390                           ;psect for function _OLED_YX
  4391  1715                     _OLED_YX:	
  4392                           
  4393                           ;incstack = 0
  4394                           ; Regs used in _OLED_YX: [wreg+status,2+status,0+pclath+cstack]
  4395                           ;OLED_YX@Row stored from wreg
  4396  1715  0021               	movlb	1	; select bank1
  4397  1716  00A0               	movwf	OLED_YX@Row^(0+128)
  4398                           
  4399                           ;oled.c: 215: OLED_Command( 0xB0 + Row);
  4400  1717  0820               	movf	OLED_YX@Row^(0+128),w
  4401  1718  3EB0               	addlw	176
  4402  1719  3196  265B  3197   	fcall	_OLED_Command
  4403                           
  4404                           ;oled.c: 216: OLED_Command( 0x00 + (8*Column & 0x0F) );
  4405  171C  0020               	movlb	0	; select bank0
  4406  171D  0840               	movf	OLED_YX@Column,w
  4407  171E  00C1               	movwf	??_OLED_YX
  4408  171F  3002               	movlw	2
  4409  1720                     u3265:	
  4410  1720  35C1               	lslf	??_OLED_YX,f
  4411  1721  3EFF               	addlw	-1
  4412  1722  1D03               	skipz
  4413  1723  2F20               	goto	u3265
  4414  1724  3541               	lslf	??_OLED_YX,w
  4415  1725  390F               	andlw	15
  4416  1726  3196  265B  3197   	fcall	_OLED_Command
  4417                           
  4418                           ;oled.c: 217: OLED_Command( 0x10 + ((8*Column>>4)&0x0F) );
  4419  1729  0020               	movlb	0	; select bank0
  4420  172A  0840               	movf	OLED_YX@Column,w
  4421  172B  00C1               	movwf	??_OLED_YX
  4422  172C  01C2               	clrf	??_OLED_YX+1
  4423  172D  35C1               	lslf	??_OLED_YX,f
  4424  172E  0DC2               	rlf	??_OLED_YX+1,f
  4425  172F  35C1               	lslf	??_OLED_YX,f
  4426  1730  0DC2               	rlf	??_OLED_YX+1,f
  4427  1731  35C1               	lslf	??_OLED_YX,f
  4428  1732  0DC2               	rlf	??_OLED_YX+1,f
  4429  1733  3004               	movlw	4
  4430  1734  00C3               	movwf	??_OLED_YX+2
  4431  1735                     u3275:	
  4432  1735  0D42               	rlf	??_OLED_YX+1,w
  4433  1736  0CC2               	rrf	??_OLED_YX+1,f
  4434  1737  0CC1               	rrf	??_OLED_YX,f
  4435  1738  0BC3               	decfsz	??_OLED_YX+2,f
  4436  1739  2F35               	goto	u3275
  4437  173A  0841               	movf	??_OLED_YX,w
  4438  173B  390F               	andlw	15
  4439  173C  3E10               	addlw	16
  4440  173D  3196  265B         	fcall	_OLED_Command
  4441  173F  0008               	return
  4442  1740                     __end_of_OLED_YX:	
  4443                           
  4444                           	psect	text5
  4445  15E5                     __ptext5:	
  4446 ;; *************** function _EUSART_Write_Text *****************
  4447 ;; Defined at:
  4448 ;;		line 131 in file "EUSART.c"
  4449 ;; Parameters:    Size  Location     Type
  4450 ;;  text            2   28[BANK0 ] PTR unsigned char 
  4451 ;;		 -> OLED_Write_Integer@status(2), STR_12(20), STR_10(14), STR_8(5), 
  4452 ;;		 -> STR_6(16), STR_5(17), main@status(2), 
  4453 ;; Auto vars:     Size  Location     Type
  4454 ;;  i               2   31[BANK0 ] int 
  4455 ;; Return value:  Size  Location     Type
  4456 ;;                  1    wreg      void 
  4457 ;; Registers used:
  4458 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4459 ;; Tracked objects:
  4460 ;;		On entry : 0/0
  4461 ;;		On exit  : 0/0
  4462 ;;		Unchanged: 0/0
  4463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4464 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4465 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4466 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4467 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4468 ;;Total ram usage:        5 bytes
  4469 ;; Hardware stack levels used:    1
  4470 ;; Hardware stack levels required when called:    7
  4471 ;; This function calls:
  4472 ;;		_EUSART_Write
  4473 ;; This function is called by:
  4474 ;;		_main
  4475 ;;		_server_Initialize
  4476 ;; This function uses a non-reentrant model
  4477 ;;
  4478                           
  4479                           
  4480                           ;psect for function _EUSART_Write_Text
  4481  15E5                     _EUSART_Write_Text:	
  4482                           
  4483                           ;EUSART.c: 133: int i;
  4484                           ;EUSART.c: 134: for(i=0;text[i]!='\0';i++)
  4485                           
  4486                           ;incstack = 0
  4487                           ; Regs used in _EUSART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4488  15E5  0020               	movlb	0	; select bank0
  4489  15E6  01BF               	clrf	EUSART_Write_Text@i
  4490  15E7  01C0               	clrf	EUSART_Write_Text@i+1
  4491  15E8                     l2109:	
  4492  15E8  083C               	movf	EUSART_Write_Text@text,w
  4493  15E9  073F               	addwf	EUSART_Write_Text@i,w
  4494  15EA  0084               	movwf	4
  4495  15EB  083D               	movf	EUSART_Write_Text@text+1,w
  4496  15EC  3D40               	addwfc	EUSART_Write_Text@i+1,w
  4497  15ED  0085               	movwf	5
  4498  15EE  0012               	moviw fsr0++
  4499  15EF  1903               	btfsc	3,2
  4500  15F0  0008               	return
  4501                           
  4502                           ;EUSART.c: 135: EUSART_Write(text[i]);
  4503  15F1  083C               	movf	EUSART_Write_Text@text,w
  4504  15F2  073F               	addwf	EUSART_Write_Text@i,w
  4505  15F3  0084               	movwf	4
  4506  15F4  083D               	movf	EUSART_Write_Text@text+1,w
  4507  15F5  3D40               	addwfc	EUSART_Write_Text@i+1,w
  4508  15F6  0085               	movwf	5
  4509  15F7  0800               	movf	0,w	;code access
  4510  15F8  3195  256A  3195   	fcall	_EUSART_Write
  4511  15FB  3001               	movlw	1
  4512  15FC  0020               	movlb	0	; select bank0
  4513  15FD  07BF               	addwf	EUSART_Write_Text@i,f
  4514  15FE  3000               	movlw	0
  4515  15FF  3DC0               	addwfc	EUSART_Write_Text@i+1,f
  4516  1600  2DE8               	goto	l2109
  4517  1601                     __end_of_EUSART_Write_Text:	
  4518                           
  4519                           	psect	text6
  4520  156A                     __ptext6:	
  4521 ;; *************** function _EUSART_Write *****************
  4522 ;; Defined at:
  4523 ;;		line 98 in file "EUSART.c"
  4524 ;; Parameters:    Size  Location     Type
  4525 ;;  txData          1    wreg     unsigned char 
  4526 ;; Auto vars:     Size  Location     Type
  4527 ;;  txData          1   27[BANK0 ] unsigned char 
  4528 ;; Return value:  Size  Location     Type
  4529 ;;                  1    wreg      void 
  4530 ;; Registers used:
  4531 ;;		wreg
  4532 ;; Tracked objects:
  4533 ;;		On entry : 0/0
  4534 ;;		On exit  : 0/0
  4535 ;;		Unchanged: 0/0
  4536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4538 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4540 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4541 ;;Total ram usage:        1 bytes
  4542 ;; Hardware stack levels used:    1
  4543 ;; Hardware stack levels required when called:    6
  4544 ;; This function calls:
  4545 ;;		Nothing
  4546 ;; This function is called by:
  4547 ;;		_EUSART_Write_Text
  4548 ;; This function uses a non-reentrant model
  4549 ;;
  4550                           
  4551                           
  4552                           ;psect for function _EUSART_Write
  4553  156A                     _EUSART_Write:	
  4554                           
  4555                           ;incstack = 0
  4556                           ; Regs used in _EUSART_Write: [wreg]
  4557                           ;EUSART_Write@txData stored from wreg
  4558  156A  0020               	movlb	0	; select bank0
  4559  156B  00BB               	movwf	EUSART_Write@txData
  4560  156C                     l74:	
  4561                           ;EUSART.c: 101: {
  4562                           
  4563                           ;EUSART.c: 100: while(0 == PIR1bits.TXIF)
  4564                           
  4565  156C  1E11               	btfss	17,4	;volatile
  4566  156D  2D6C               	goto	l74
  4567                           
  4568                           ;EUSART.c: 102: }
  4569                           ;EUSART.c: 104: TX1REG = txData;
  4570  156E  083B               	movf	EUSART_Write@txData,w
  4571  156F  0023               	movlb	3	; select bank3
  4572  1570  009A               	movwf	26	;volatile
  4573  1571  0008               	return
  4574  1572                     __end_of_EUSART_Write:	
  4575                           
  4576                           	psect	text7
  4577  163C                     __ptext7:	
  4578 ;; *************** function _EUSART_Read_Text *****************
  4579 ;; Defined at:
  4580 ;;		line 107 in file "EUSART.c"
  4581 ;; Parameters:    Size  Location     Type
  4582 ;;  Output          1    wreg     PTR unsigned char 
  4583 ;;		 -> buf(50), 
  4584 ;;  length          2   27[BANK0 ] unsigned int 
  4585 ;; Auto vars:     Size  Location     Type
  4586 ;;  Output          1   33[BANK0 ] PTR unsigned char 
  4587 ;;		 -> buf(50), 
  4588 ;;  i               2   31[BANK0 ] int 
  4589 ;;  i               2    0        int 
  4590 ;; Return value:  Size  Location     Type
  4591 ;;                  1    wreg      void 
  4592 ;; Registers used:
  4593 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4594 ;; Tracked objects:
  4595 ;;		On entry : 0/0
  4596 ;;		On exit  : 0/0
  4597 ;;		Unchanged: 0/0
  4598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4599 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4600 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4601 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4602 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4603 ;;Total ram usage:        7 bytes
  4604 ;; Hardware stack levels used:    1
  4605 ;; Hardware stack levels required when called:    7
  4606 ;; This function calls:
  4607 ;;		_EUSART_Read
  4608 ;; This function is called by:
  4609 ;;		_main
  4610 ;;		_server_Initialize
  4611 ;; This function uses a non-reentrant model
  4612 ;;
  4613                           
  4614                           
  4615                           ;psect for function _EUSART_Read_Text
  4616  163C                     _EUSART_Read_Text:	
  4617                           
  4618                           ;incstack = 0
  4619                           ; Regs used in _EUSART_Read_Text: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4620                           ;EUSART_Read_Text@Output stored from wreg
  4621  163C  0020               	movlb	0	; select bank0
  4622  163D  00C1               	movwf	EUSART_Read_Text@Output
  4623                           
  4624                           ;EUSART.c: 109: int i;
  4625                           ;EUSART.c: 110: for(int i=0;i<length;i++)
  4626  163E  01BF               	clrf	EUSART_Read_Text@i_111
  4627  163F  01C0               	clrf	EUSART_Read_Text@i_111+1
  4628  1640                     l2101:	
  4629  1640  083C               	movf	EUSART_Read_Text@length+1,w
  4630  1641  0240               	subwf	EUSART_Read_Text@i_111+1,w
  4631  1642  1D03               	skipz
  4632  1643  2E46               	goto	u2175
  4633  1644  083B               	movf	EUSART_Read_Text@length,w
  4634  1645  023F               	subwf	EUSART_Read_Text@i_111,w
  4635  1646                     u2175:	
  4636  1646  1803               	btfsc	3,0
  4637  1647  0008               	return
  4638                           
  4639                           ;EUSART.c: 111: Output[i] = EUSART_Read();
  4640  1648  3195  2599  3196   	fcall	_EUSART_Read
  4641  164B  0020               	movlb	0	; select bank0
  4642  164C  00BD               	movwf	??_EUSART_Read_Text
  4643  164D  083F               	movf	EUSART_Read_Text@i_111,w
  4644  164E  0741               	addwf	EUSART_Read_Text@Output,w
  4645  164F  00BE               	movwf	??_EUSART_Read_Text+1
  4646  1650  083E               	movf	??_EUSART_Read_Text+1,w
  4647  1651  0086               	movwf	6
  4648  1652  3001               	movlw	1	; select bank2/3
  4649  1653  0087               	movwf	7
  4650  1654  083D               	movf	??_EUSART_Read_Text,w
  4651  1655  0081               	movwf	1
  4652  1656  3001               	movlw	1
  4653  1657  07BF               	addwf	EUSART_Read_Text@i_111,f
  4654  1658  3000               	movlw	0
  4655  1659  3DC0               	addwfc	EUSART_Read_Text@i_111+1,f
  4656  165A  2E40               	goto	l2101
  4657  165B                     __end_of_EUSART_Read_Text:	
  4658                           
  4659                           	psect	text8
  4660  1599                     __ptext8:	
  4661 ;; *************** function _EUSART_Read *****************
  4662 ;; Defined at:
  4663 ;;		line 68 in file "EUSART.c"
  4664 ;; Parameters:    Size  Location     Type
  4665 ;;		None
  4666 ;; Auto vars:     Size  Location     Type
  4667 ;;		None
  4668 ;; Return value:  Size  Location     Type
  4669 ;;                  1    wreg      unsigned char 
  4670 ;; Registers used:
  4671 ;;		wreg
  4672 ;; Tracked objects:
  4673 ;;		On entry : 0/0
  4674 ;;		On exit  : 0/0
  4675 ;;		Unchanged: 0/0
  4676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4681 ;;Total ram usage:        0 bytes
  4682 ;; Hardware stack levels used:    1
  4683 ;; Hardware stack levels required when called:    6
  4684 ;; This function calls:
  4685 ;;		Nothing
  4686 ;; This function is called by:
  4687 ;;		_EUSART_Read_Text
  4688 ;;		_EUSART_Read_Char
  4689 ;; This function uses a non-reentrant model
  4690 ;;
  4691                           
  4692                           
  4693                           ;psect for function _EUSART_Read
  4694  1599                     _EUSART_Read:	
  4695                           
  4696                           ;EUSART.c: 71: RC1STAbits.SREN = 1;
  4697                           
  4698                           ;incstack = 0
  4699                           ; Regs used in _EUSART_Read: [wreg]
  4700  1599  0023               	movlb	3	; select bank3
  4701  159A  169D               	bsf	29,5	;volatile
  4702  159B                     l67:	
  4703                           ;EUSART.c: 73: {
  4704                           
  4705                           ;EUSART.c: 72: while(!PIR1bits.RCIF)
  4706                           
  4707  159B  0020               	movlb	0	; select bank0
  4708  159C  1E91               	btfss	17,5	;volatile
  4709  159D  2D9B               	goto	l67
  4710                           
  4711                           ;EUSART.c: 74: }
  4712                           ;EUSART.c: 77: if(1 == RC1STAbits.OERR)
  4713  159E  0023               	movlb	3	; select bank3
  4714  159F  1C9D               	btfss	29,1	;volatile
  4715  15A0  2DA3               	goto	l1943
  4716                           
  4717                           ;EUSART.c: 78: {
  4718                           ;EUSART.c: 81: RC1STAbits.SPEN = 0;
  4719  15A1  139D               	bcf	29,7	;volatile
  4720                           
  4721                           ;EUSART.c: 82: RC1STAbits.SPEN = 1;
  4722  15A2  179D               	bsf	29,7	;volatile
  4723  15A3                     l1943:	
  4724                           
  4725                           ;EUSART.c: 83: }
  4726                           ;EUSART.c: 85: return RC1REG;
  4727  15A3  0819               	movf	25,w	;volatile
  4728  15A4  0008               	return
  4729  15A5                     __end_of_EUSART_Read:	
  4730                           
  4731                           	psect	text9
  4732  097A                     __ptext9:	
  4733 ;; *************** function _initMain *****************
  4734 ;; Defined at:
  4735 ;;		line 65 in file "Main.c"
  4736 ;; Parameters:    Size  Location     Type
  4737 ;;		None
  4738 ;; Auto vars:     Size  Location     Type
  4739 ;;		None
  4740 ;; Return value:  Size  Location     Type
  4741 ;;                  1    wreg      void 
  4742 ;; Registers used:
  4743 ;;		wreg, status,2, status,0, pclath, cstack
  4744 ;; Tracked objects:
  4745 ;;		On entry : 0/0
  4746 ;;		On exit  : 0/0
  4747 ;;		Unchanged: 0/0
  4748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4753 ;;Total ram usage:        0 bytes
  4754 ;; Hardware stack levels used:    1
  4755 ;; Hardware stack levels required when called:    7
  4756 ;; This function calls:
  4757 ;;		_internal_16
  4758 ;; This function is called by:
  4759 ;;		_main
  4760 ;; This function uses a non-reentrant model
  4761 ;;
  4762                           
  4763                           
  4764                           ;psect for function _initMain
  4765  097A                     _initMain:	
  4766                           
  4767                           ;Main.c: 67: internal_16();
  4768                           
  4769                           ;incstack = 0
  4770                           ; Regs used in _initMain: [wreg+status,2+status,0+pclath+cstack]
  4771  097A  3195  2584  3189   	fcall	_internal_16
  4772                           
  4773                           ;Main.c: 74: ANSELCbits.ANSC4 = 0;
  4774  097D  0023               	movlb	3	; select bank3
  4775  097E  120E               	bcf	14,4	;volatile
  4776                           
  4777                           ;Main.c: 75: ANSELCbits.ANSC5 = 0;
  4778  097F  128E               	bcf	14,5	;volatile
  4779                           
  4780                           ;Main.c: 77: TRISCbits.TRISC4 = 1;
  4781  0980  0021               	movlb	1	; select bank1
  4782  0981  160E               	bsf	14,4	;volatile
  4783                           
  4784                           ;Main.c: 78: TRISCbits.TRISC5 = 1;
  4785  0982  168E               	bsf	14,5	;volatile
  4786                           
  4787                           ;Main.c: 80: PPSLOCK = 0x55;
  4788  0983  3055               	movlw	85
  4789  0984  003C               	movlb	28	; select bank28
  4790  0985  008F               	movwf	15	;volatile
  4791                           
  4792                           ;Main.c: 81: PPSLOCK = 0xAA;
  4793  0986  30AA               	movlw	170
  4794  0987  008F               	movwf	15	;volatile
  4795                           
  4796                           ;Main.c: 82: PPSLOCKbits.PPSLOCKED = 0x00;
  4797  0988  100F               	bcf	15,0	;volatile
  4798                           
  4799                           ;Main.c: 84: RC4PPSbits.RC4PPS = 0x0011;
  4800  0989  003D               	movlb	29	; select bank29
  4801  098A  0824               	movf	36,w	;volatile
  4802  098B  39E0               	andlw	-32
  4803  098C  3811               	iorlw	17
  4804  098D  00A4               	movwf	36	;volatile
  4805                           
  4806                           ;Main.c: 85: SSPDATPPSbits.SSPDATPPS = 0x0014;
  4807  098E  003C               	movlb	28	; select bank28
  4808  098F  0821               	movf	33,w	;volatile
  4809  0990  39E0               	andlw	-32
  4810  0991  3814               	iorlw	20
  4811  0992  00A1               	movwf	33	;volatile
  4812                           
  4813                           ;Main.c: 86: SSPCLKPPSbits.SSPCLKPPS = 0x0015;
  4814  0993  0820               	movf	32,w	;volatile
  4815  0994  39E0               	andlw	-32
  4816  0995  3815               	iorlw	21
  4817  0996  00A0               	movwf	32	;volatile
  4818                           
  4819                           ;Main.c: 87: RC5PPSbits.RC5PPS = 0x0010;
  4820  0997  003D               	movlb	29	; select bank29
  4821  0998  0825               	movf	37,w	;volatile
  4822  0999  39E0               	andlw	-32
  4823  099A  3810               	iorlw	16
  4824  099B  00A5               	movwf	37	;volatile
  4825                           
  4826                           ;Main.c: 90: RB2PPSbits.RB2PPS = 0x14;
  4827  099C  081A               	movf	26,w	;volatile
  4828  099D  39E0               	andlw	-32
  4829  099E  3814               	iorlw	20
  4830  099F  009A               	movwf	26	;volatile
  4831                           
  4832                           ;Main.c: 91: RXPPSbits.RXPPS = 0x0B;
  4833  09A0  003C               	movlb	28	; select bank28
  4834  09A1  0824               	movf	36,w	;volatile
  4835  09A2  39E0               	andlw	-32
  4836  09A3  380B               	iorlw	11
  4837  09A4  00A4               	movwf	36	;volatile
  4838                           
  4839                           ;Main.c: 93: PPSLOCK = 0x55;
  4840  09A5  3055               	movlw	85
  4841  09A6  008F               	movwf	15	;volatile
  4842                           
  4843                           ;Main.c: 94: PPSLOCK = 0xAA;
  4844  09A7  30AA               	movlw	170
  4845  09A8  008F               	movwf	15	;volatile
  4846                           
  4847                           ;Main.c: 95: PPSLOCKbits.PPSLOCKED = 0x01;
  4848  09A9  140F               	bsf	15,0	;volatile
  4849                           
  4850                           ;Main.c: 102: ADCON1bits.ADCS = 0b010;
  4851  09AA  0021               	movlb	1	; select bank1
  4852  09AB  081E               	movf	30,w	;volatile
  4853  09AC  398F               	andlw	-113
  4854  09AD  3820               	iorlw	32
  4855  09AE  009E               	movwf	30	;volatile
  4856                           
  4857                           ;Main.c: 105: ADCON1bits.ADFM = 1;
  4858  09AF  179E               	bsf	30,7	;volatile
  4859                           
  4860                           ;Main.c: 108: ADCON1bits.ADNREF = 0;
  4861  09B0  111E               	bcf	30,2	;volatile
  4862                           
  4863                           ;Main.c: 111: ADCON1bits.ADPREF = 0b00;
  4864  09B1  30FC               	movlw	-4
  4865  09B2  059E               	andwf	30,f	;volatile
  4866                           
  4867                           ;Main.c: 114: ADCON0bits.CHS = 0x05;
  4868  09B3  081D               	movf	29,w	;volatile
  4869  09B4  3983               	andlw	-125
  4870  09B5  3814               	iorlw	20
  4871  09B6  009D               	movwf	29	;volatile
  4872                           
  4873                           ;Main.c: 117: ADRESL = 0;
  4874  09B7  019B               	clrf	27	;volatile
  4875                           
  4876                           ;Main.c: 118: ADRESH = 0;
  4877  09B8  019C               	clrf	28	;volatile
  4878                           
  4879                           ;Main.c: 121: ANSELEbits.ANSE0 = 1;
  4880  09B9  0023               	movlb	3	; select bank3
  4881  09BA  1410               	bsf	16,0	;volatile
  4882                           
  4883                           ;Main.c: 129: TRISBbits.TRISB3 = 1;
  4884  09BB  0021               	movlb	1	; select bank1
  4885  09BC  158D               	bsf	13,3	;volatile
  4886                           
  4887                           ;Main.c: 130: ANSELBbits.ANSB3 = 0;
  4888  09BD  0023               	movlb	3	; select bank3
  4889  09BE  118D               	bcf	13,3	;volatile
  4890                           
  4891                           ;Main.c: 132: TRISBbits.TRISB2 = 0;
  4892  09BF  0021               	movlb	1	; select bank1
  4893  09C0  110D               	bcf	13,2	;volatile
  4894                           
  4895                           ;Main.c: 133: ANSELBbits.ANSB2 = 0;
  4896  09C1  0023               	movlb	3	; select bank3
  4897  09C2  110D               	bcf	13,2	;volatile
  4898                           
  4899                           ;Main.c: 140: WDTCONbits.WDTPS = 0b01100;
  4900  09C3  0021               	movlb	1	; select bank1
  4901  09C4  0817               	movf	23,w	;volatile
  4902  09C5  39C1               	andlw	-63
  4903  09C6  3818               	iorlw	24
  4904  09C7  0097               	movwf	23	;volatile
  4905                           
  4906                           ;Main.c: 142: TRISDbits.TRISD1 = 1;
  4907  09C8  148F               	bsf	15,1	;volatile
  4908                           
  4909                           ;Main.c: 143: ANSELDbits.ANSD1 = 1;
  4910  09C9  0023               	movlb	3	; select bank3
  4911  09CA  148F               	bsf	15,1	;volatile
  4912                           
  4913                           ;Main.c: 147: TRISBbits.TRISB0 = 1;
  4914  09CB  0021               	movlb	1	; select bank1
  4915  09CC  140D               	bsf	13,0	;volatile
  4916                           
  4917                           ;Main.c: 150: ANSELBbits.ANSB0 = 0;
  4918  09CD  0023               	movlb	3	; select bank3
  4919  09CE  100D               	bcf	13,0	;volatile
  4920                           
  4921                           ;Main.c: 158: PPSLOCK = 0x55;
  4922  09CF  3055               	movlw	85
  4923  09D0  003C               	movlb	28	; select bank28
  4924  09D1  008F               	movwf	15	;volatile
  4925                           
  4926                           ;Main.c: 159: PPSLOCK = 0xAA;
  4927  09D2  30AA               	movlw	170
  4928  09D3  008F               	movwf	15	;volatile
  4929                           
  4930                           ;Main.c: 160: PPSLOCK = 0x00;
  4931  09D4  018F               	clrf	15	;volatile
  4932                           
  4933                           ;Main.c: 163: INTPPSbits.INTPPS = 0b01000;
  4934  09D5  0810               	movf	16,w	;volatile
  4935  09D6  39E0               	andlw	-32
  4936  09D7  3808               	iorlw	8
  4937  09D8  0090               	movwf	16	;volatile
  4938                           
  4939                           ;Main.c: 166: PPSLOCK = 0x55;
  4940  09D9  3055               	movlw	85
  4941  09DA  008F               	movwf	15	;volatile
  4942                           
  4943                           ;Main.c: 167: PPSLOCK = 0xAA;
  4944  09DB  30AA               	movlw	170
  4945  09DC  008F               	movwf	15	;volatile
  4946                           
  4947                           ;Main.c: 168: PPSLOCK = 0x01;
  4948  09DD  3001               	movlw	1
  4949  09DE  008F               	movwf	15	;volatile
  4950                           
  4951                           ;Main.c: 171: OPTION_REGbits.INTEDG = 0;
  4952  09DF  0021               	movlb	1	; select bank1
  4953  09E0  1315               	bcf	21,6	;volatile
  4954                           
  4955                           ;Main.c: 174: INTCONbits.INTF = 0;
  4956  09E1  108B               	bcf	11,1	;volatile
  4957                           
  4958                           ;Main.c: 177: INTCONbits.INTE = 1;
  4959  09E2  160B               	bsf	11,4	;volatile
  4960                           
  4961                           ;Main.c: 180: (GIE = 1);
  4962  09E3  178B               	bsf	11,7	;volatile
  4963  09E4  0008               	return
  4964  09E5                     __end_of_initMain:	
  4965                           
  4966                           	psect	text10
  4967  1584                     __ptext10:	
  4968 ;; *************** function _internal_16 *****************
  4969 ;; Defined at:
  4970 ;;		line 56 in file "16F1717_Internal.c"
  4971 ;; Parameters:    Size  Location     Type
  4972 ;;		None
  4973 ;; Auto vars:     Size  Location     Type
  4974 ;;		None
  4975 ;; Return value:  Size  Location     Type
  4976 ;;                  1    wreg      void 
  4977 ;; Registers used:
  4978 ;;		None
  4979 ;; Tracked objects:
  4980 ;;		On entry : 0/0
  4981 ;;		On exit  : 0/0
  4982 ;;		Unchanged: 0/0
  4983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4988 ;;Total ram usage:        0 bytes
  4989 ;; Hardware stack levels used:    1
  4990 ;; Hardware stack levels required when called:    6
  4991 ;; This function calls:
  4992 ;;		Nothing
  4993 ;; This function is called by:
  4994 ;;		_initMain
  4995 ;; This function uses a non-reentrant model
  4996 ;;
  4997                           
  4998                           
  4999                           ;psect for function _internal_16
  5000  1584                     _internal_16:	
  5001                           
  5002                           ;16F1717_Internal.c: 58: SCS0 = 0;
  5003                           
  5004                           ;incstack = 0
  5005                           ; Regs used in _internal_16: []
  5006  1584  0021               	movlb	1	; select bank1
  5007  1585  1019               	bcf	25,0	;volatile
  5008                           
  5009                           ;16F1717_Internal.c: 59: SCS1 = 0;
  5010  1586  1099               	bcf	25,1	;volatile
  5011                           
  5012                           ;16F1717_Internal.c: 62: IRCF0 = 1;
  5013  1587  1599               	bsf	25,3	;volatile
  5014                           
  5015                           ;16F1717_Internal.c: 63: IRCF1 = 1;
  5016  1588  1619               	bsf	25,4	;volatile
  5017                           
  5018                           ;16F1717_Internal.c: 64: IRCF2 = 1;
  5019  1589  1699               	bsf	25,5	;volatile
  5020                           
  5021                           ;16F1717_Internal.c: 65: IRCF3 = 1;
  5022  158A  1719               	bsf	25,6	;volatile
  5023                           
  5024                           ;16F1717_Internal.c: 68: SPLLEN = 0;
  5025  158B  1399               	bcf	25,7	;volatile
  5026  158C  0008               	return
  5027  158D                     __end_of_internal_16:	
  5028                           
  5029                           	psect	text11
  5030  0D28                     __ptext11:	
  5031 ;; *************** function ___fttol *****************
  5032 ;; Defined at:
  5033 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\fttol.c"
  5034 ;; Parameters:    Size  Location     Type
  5035 ;;  f1              3   27[BANK0 ] float 
  5036 ;; Auto vars:     Size  Location     Type
  5037 ;;  lval            4    1[BANK1 ] unsigned long 
  5038 ;;  exp1            1    5[BANK1 ] unsigned char 
  5039 ;;  sign1           1    0[BANK1 ] unsigned char 
  5040 ;; Return value:  Size  Location     Type
  5041 ;;                  4   27[BANK0 ] long 
  5042 ;; Registers used:
  5043 ;;		wreg, status,2, status,0
  5044 ;; Tracked objects:
  5045 ;;		On entry : 0/0
  5046 ;;		On exit  : 0/0
  5047 ;;		Unchanged: 0/0
  5048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5049 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5050 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  5051 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5052 ;;      Totals:         0       8       6       0       0       0       0       0       0       0       0       0       
      +0       0
  5053 ;;Total ram usage:       14 bytes
  5054 ;; Hardware stack levels used:    1
  5055 ;; Hardware stack levels required when called:    6
  5056 ;; This function calls:
  5057 ;;		Nothing
  5058 ;; This function is called by:
  5059 ;;		_main
  5060 ;; This function uses a non-reentrant model
  5061 ;;
  5062                           
  5063                           
  5064                           ;psect for function ___fttol
  5065  0D28                     ___fttol:	
  5066                           
  5067                           ;incstack = 0
  5068                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  5069  0D28  0020               	movlb	0	; select bank0
  5070  0D29  083B               	movf	___fttol@f1,w
  5071  0D2A  00BF               	movwf	??___fttol
  5072  0D2B  083C               	movf	___fttol@f1+1,w
  5073  0D2C  00C0               	movwf	??___fttol+1
  5074  0D2D  083D               	movf	___fttol@f1+2,w
  5075  0D2E  00C1               	movwf	??___fttol+2
  5076  0D2F  1003               	clrc
  5077  0D30  0D40               	rlf	??___fttol+1,w
  5078  0D31  0D41               	rlf	??___fttol+2,w
  5079  0D32  00C2               	movwf	??___fttol+3
  5080  0D33  0842               	movf	??___fttol+3,w
  5081  0D34  0021               	movlb	1	; select bank1
  5082  0D35  00A5               	movwf	___fttol@exp1^(0+128)
  5083  0D36  0825               	movf	___fttol@exp1^(0+128),w
  5084  0D37  1D03               	btfss	3,2
  5085  0D38  2D43               	goto	l3359
  5086  0D39  3000               	movlw	0
  5087  0D3A  0020               	movlb	0	; select bank0
  5088  0D3B  00BE               	movwf	?___fttol+3
  5089  0D3C  3000               	movlw	0
  5090  0D3D  00BD               	movwf	?___fttol+2
  5091  0D3E  3000               	movlw	0
  5092  0D3F  00BC               	movwf	?___fttol+1
  5093  0D40  3000               	movlw	0
  5094  0D41  00BB               	movwf	?___fttol
  5095  0D42  0008               	return
  5096  0D43                     l3359:	
  5097  0D43  0020               	movlb	0	; select bank0
  5098  0D44  083B               	movf	___fttol@f1,w
  5099  0D45  00BF               	movwf	??___fttol
  5100  0D46  083C               	movf	___fttol@f1+1,w
  5101  0D47  00C0               	movwf	??___fttol+1
  5102  0D48  083D               	movf	___fttol@f1+2,w
  5103  0D49  00C1               	movwf	??___fttol+2
  5104  0D4A  3017               	movlw	23
  5105  0D4B                     u4155:	
  5106  0D4B  36C1               	lsrf	??___fttol+2,f
  5107  0D4C  0CC0               	rrf	??___fttol+1,f
  5108  0D4D  0CBF               	rrf	??___fttol,f
  5109  0D4E  0B89               	decfsz	9,f
  5110  0D4F  2D4B               	goto	u4155
  5111  0D50  083F               	movf	??___fttol,w
  5112  0D51  00C2               	movwf	??___fttol+3
  5113  0D52  0842               	movf	??___fttol+3,w
  5114  0D53  0021               	movlb	1	; select bank1
  5115  0D54  00A0               	movwf	___fttol@sign1^(0+128)
  5116  0D55  0020               	movlb	0	; select bank0
  5117  0D56  17BC               	bsf	___fttol@f1+1,7
  5118  0D57  30FF               	movlw	255
  5119  0D58  05BB               	andwf	___fttol@f1,f
  5120  0D59  30FF               	movlw	255
  5121  0D5A  05BC               	andwf	___fttol@f1+1,f
  5122  0D5B  3000               	movlw	0
  5123  0D5C  05BD               	andwf	___fttol@f1+2,f
  5124  0D5D  083B               	movf	___fttol@f1,w
  5125  0D5E  0021               	movlb	1	; select bank1
  5126  0D5F  00A1               	movwf	___fttol@lval^(0+128)
  5127  0D60  0020               	movlb	0	; select bank0
  5128  0D61  083C               	movf	___fttol@f1+1,w
  5129  0D62  0021               	movlb	1	; select bank1
  5130  0D63  00A2               	movwf	(___fttol@lval^(0+128)+1)
  5131  0D64  0020               	movlb	0	; select bank0
  5132  0D65  083D               	movf	___fttol@f1+2,w
  5133  0D66  0021               	movlb	1	; select bank1
  5134  0D67  00A3               	movwf	(___fttol@lval^(0+128)+2)
  5135  0D68  01A4               	clrf	(___fttol@lval^(0+128)+3)
  5136  0D69  308E               	movlw	142
  5137  0D6A  02A5               	subwf	___fttol@exp1^(0+128),f
  5138  0D6B  1FA5               	btfss	___fttol@exp1^(0+128),7
  5139  0D6C  2D8D               	goto	l3379
  5140  0D6D  0825               	movf	___fttol@exp1^(0+128),w
  5141  0D6E  3A80               	xorlw	128
  5142  0D6F  3E8F               	addlw	143
  5143  0D70  1803               	skipnc
  5144  0D71  2D7C               	goto	l3377
  5145  0D72  3000               	movlw	0
  5146  0D73  0020               	movlb	0	; select bank0
  5147  0D74  00BE               	movwf	?___fttol+3
  5148  0D75  3000               	movlw	0
  5149  0D76  00BD               	movwf	?___fttol+2
  5150  0D77  3000               	movlw	0
  5151  0D78  00BC               	movwf	?___fttol+1
  5152  0D79  3000               	movlw	0
  5153  0D7A  00BB               	movwf	?___fttol
  5154  0D7B  0008               	return
  5155  0D7C                     l3377:	
  5156  0D7C  3001               	movlw	1
  5157  0D7D                     u4185:	
  5158  0D7D  0021               	movlb	1	; select bank1
  5159  0D7E  36A4               	lsrf	(___fttol@lval+3)^(0+128),f
  5160  0D7F  0CA3               	rrf	(___fttol@lval+2)^(0+128),f
  5161  0D80  0CA2               	rrf	(___fttol@lval+1)^(0+128),f
  5162  0D81  0CA1               	rrf	___fttol@lval^(0+128),f
  5163  0D82  0B89               	decfsz	9,f
  5164  0D83  2D7D               	goto	u4185
  5165  0D84  3001               	movlw	1
  5166  0D85  0020               	movlb	0	; select bank0
  5167  0D86  00BF               	movwf	??___fttol
  5168  0D87  083F               	movf	??___fttol,w
  5169  0D88  0021               	movlb	1	; select bank1
  5170  0D89  07A5               	addwf	___fttol@exp1^(0+128),f
  5171  0D8A  1903               	btfsc	3,2
  5172  0D8B  2DA9               	goto	l3387
  5173  0D8C  2D7C               	goto	l3377
  5174  0D8D                     l3379:	
  5175  0D8D  3018               	movlw	24
  5176  0D8E  0225               	subwf	___fttol@exp1^(0+128),w
  5177  0D8F  1C03               	skipc
  5178  0D90  2DA5               	goto	l617
  5179  0D91  3000               	movlw	0
  5180  0D92  0020               	movlb	0	; select bank0
  5181  0D93  00BE               	movwf	?___fttol+3
  5182  0D94  3000               	movlw	0
  5183  0D95  00BD               	movwf	?___fttol+2
  5184  0D96  3000               	movlw	0
  5185  0D97  00BC               	movwf	?___fttol+1
  5186  0D98  3000               	movlw	0
  5187  0D99  00BB               	movwf	?___fttol
  5188  0D9A  0008               	return
  5189  0D9B                     l3385:	
  5190  0D9B  3001               	movlw	1
  5191  0D9C                     u4215:	
  5192  0D9C  0021               	movlb	1	; select bank1
  5193  0D9D  35A1               	lslf	___fttol@lval^(0+128),f
  5194  0D9E  0DA2               	rlf	(___fttol@lval+1)^(0+128),f
  5195  0D9F  0DA3               	rlf	(___fttol@lval+2)^(0+128),f
  5196  0DA0  0DA4               	rlf	(___fttol@lval+3)^(0+128),f
  5197  0DA1  0B89               	decfsz	9,f
  5198  0DA2  2D9C               	goto	u4215
  5199  0DA3  3001               	movlw	1
  5200  0DA4  02A5               	subwf	___fttol@exp1^(0+128),f
  5201  0DA5                     l617:	
  5202  0DA5  0021               	movlb	1	; select bank1
  5203  0DA6  0825               	movf	___fttol@exp1^(0+128),w
  5204  0DA7  1D03               	btfss	3,2
  5205  0DA8  2D9B               	goto	l3385
  5206  0DA9                     l3387:	
  5207  0DA9  0820               	movf	___fttol@sign1^(0+128),w
  5208  0DAA  1903               	btfsc	3,2
  5209  0DAB  2DB7               	goto	l3391
  5210  0DAC  09A1               	comf	___fttol@lval^(0+128),f
  5211  0DAD  09A2               	comf	(___fttol@lval+1)^(0+128),f
  5212  0DAE  09A3               	comf	(___fttol@lval+2)^(0+128),f
  5213  0DAF  09A4               	comf	(___fttol@lval+3)^(0+128),f
  5214  0DB0  0AA1               	incf	___fttol@lval^(0+128),f
  5215  0DB1  1903               	skipnz
  5216  0DB2  0AA2               	incf	(___fttol@lval+1)^(0+128),f
  5217  0DB3  1903               	skipnz
  5218  0DB4  0AA3               	incf	(___fttol@lval+2)^(0+128),f
  5219  0DB5  1903               	skipnz
  5220  0DB6  0AA4               	incf	(___fttol@lval+3)^(0+128),f
  5221  0DB7                     l3391:	
  5222  0DB7  0824               	movf	(___fttol@lval+3)^(0+128),w
  5223  0DB8  0020               	movlb	0	; select bank0
  5224  0DB9  00BE               	movwf	?___fttol+3
  5225  0DBA  0021               	movlb	1	; select bank1
  5226  0DBB  0823               	movf	(___fttol@lval+2)^(0+128),w
  5227  0DBC  0020               	movlb	0	; select bank0
  5228  0DBD  00BD               	movwf	?___fttol+2
  5229  0DBE  0021               	movlb	1	; select bank1
  5230  0DBF  0822               	movf	(___fttol@lval+1)^(0+128),w
  5231  0DC0  0020               	movlb	0	; select bank0
  5232  0DC1  00BC               	movwf	?___fttol+1
  5233  0DC2  0021               	movlb	1	; select bank1
  5234  0DC3  0821               	movf	___fttol@lval^(0+128),w
  5235  0DC4  0020               	movlb	0	; select bank0
  5236  0DC5  00BB               	movwf	?___fttol
  5237  0DC6  0008               	return
  5238  0DC7                     __end_of___fttol:	
  5239                           
  5240                           	psect	text12
  5241  0C8D                     __ptext12:	
  5242 ;; *************** function _Read_Temperature *****************
  5243 ;; Defined at:
  5244 ;;		line 332 in file "Main.c"
  5245 ;; Parameters:    Size  Location     Type
  5246 ;;		None
  5247 ;; Auto vars:     Size  Location     Type
  5248 ;;  result          3   62[BANK1 ] float 
  5249 ;;  celsius         3   59[BANK1 ] float 
  5250 ;;  farenheit       3   56[BANK1 ] float 
  5251 ;;  conversion10    3   53[BANK1 ] float 
  5252 ;; Return value:  Size  Location     Type
  5253 ;;                  3   45[BANK1 ] float 
  5254 ;; Registers used:
  5255 ;;		wreg, status,2, status,0, pclath, cstack
  5256 ;; Tracked objects:
  5257 ;;		On entry : 0/0
  5258 ;;		On exit  : 0/0
  5259 ;;		Unchanged: 0/0
  5260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5261 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5262 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  5263 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  5264 ;;      Totals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0
  5265 ;;Total ram usage:       20 bytes
  5266 ;; Hardware stack levels used:    1
  5267 ;; Hardware stack levels required when called:    8
  5268 ;; This function calls:
  5269 ;;		___awtoft
  5270 ;;		___ftadd
  5271 ;;		___ftdiv
  5272 ;;		___ftmul
  5273 ;; This function is called by:
  5274 ;;		_main
  5275 ;; This function uses a non-reentrant model
  5276 ;;
  5277                           
  5278                           
  5279                           ;psect for function _Read_Temperature
  5280  0C8D                     _Read_Temperature:	
  5281                           
  5282                           ;Main.c: 334: float conversion10;
  5283                           ;Main.c: 335: float farenheit;
  5284                           ;Main.c: 336: float celsius;
  5285                           ;Main.c: 337: float result;
  5286                           ;Main.c: 340: ADCON0bits.ADON = 1;
  5287                           
  5288                           ;incstack = 0
  5289                           ; Regs used in _Read_Temperature: [wreg+status,2+status,0+pclath+cstack]
  5290  0C8D  0021               	movlb	1	; select bank1
  5291  0C8E  141D               	bsf	29,0	;volatile
  5292                           
  5293                           ;Main.c: 343: _delay((unsigned long)((10)*(16000000/4000000.0)));
  5294  0C8F  300D               	movlw	13
  5295  0C90                     u4367:	
  5296  0C90  0B89               	decfsz	9,f
  5297  0C91  2C90               	goto	u4367
  5298  0C92  0000               	nop
  5299                           
  5300                           ;Main.c: 344: ADCON0bits.GO = 1;
  5301  0C93  0021               	movlb	1	; select bank1
  5302  0C94  149D               	bsf	29,1	;volatile
  5303  0C95                     l246:	
  5304                           ;Main.c: 345: while (ADCON0bits.GO_nDONE);
  5305                           
  5306  0C95  189D               	btfsc	29,1	;volatile
  5307  0C96  2C95               	goto	l246
  5308                           
  5309                           ;Main.c: 348: result = ((ADRESH<<8)+ADRESL);
  5310  0C97  081B               	movf	27,w	;volatile
  5311  0C98  00D0               	movwf	??_Read_Temperature^(0+128)
  5312  0C99  01D1               	clrf	(??_Read_Temperature^(0+128)+1)
  5313  0C9A  081C               	movf	28,w	;volatile
  5314  0C9B  00D2               	movwf	(??_Read_Temperature+2)^(0+128)
  5315  0C9C  01D3               	clrf	((??_Read_Temperature+2)^(0+128)+1)
  5316  0C9D  0852               	movf	(??_Read_Temperature+2)^(0+128),w
  5317  0C9E  00D3               	movwf	((??_Read_Temperature+2)^(0+128)+1)
  5318  0C9F  01D2               	clrf	(??_Read_Temperature+2)^(0+128)
  5319  0CA0  0850               	movf	??_Read_Temperature^(0+128),w
  5320  0CA1  0752               	addwf	(??_Read_Temperature+2)^(0+128),w
  5321  0CA2  00A0               	movwf	___awtoft@c^(0+128)
  5322  0CA3  0851               	movf	(??_Read_Temperature+1)^(0+128),w
  5323  0CA4  3D53               	addwfc	(??_Read_Temperature+3)^(0+128),w
  5324  0CA5  00A1               	movwf	(___awtoft@c+1)^(0+128)
  5325  0CA6  3197  279D  318C   	fcall	___awtoft
  5326  0CA9  0021               	movlb	1	; select bank1
  5327  0CAA  0820               	movf	?___awtoft^(0+128),w
  5328  0CAB  00DE               	movwf	Read_Temperature@result^(0+128)
  5329  0CAC  0821               	movf	(?___awtoft+1)^(0+128),w
  5330  0CAD  00DF               	movwf	(Read_Temperature@result+1)^(0+128)
  5331  0CAE  0822               	movf	(?___awtoft+2)^(0+128),w
  5332  0CAF  00E0               	movwf	(Read_Temperature@result+2)^(0+128)
  5333                           
  5334                           ;Main.c: 351: conversion10 = (result * 5000)/1024 ;
  5335  0CB0  3000               	movlw	0
  5336  0CB1  00BD               	movwf	___ftdiv@f2^(0+128)
  5337  0CB2  3080               	movlw	128
  5338  0CB3  00BE               	movwf	(___ftdiv@f2+1)^(0+128)
  5339  0CB4  3044               	movlw	68
  5340  0CB5  00BF               	movwf	(___ftdiv@f2+2)^(0+128)
  5341  0CB6  3040               	movlw	64
  5342  0CB7  00AD               	movwf	___ftmul@f1^(0+128)
  5343  0CB8  309C               	movlw	156
  5344  0CB9  00AE               	movwf	(___ftmul@f1+1)^(0+128)
  5345  0CBA  3045               	movlw	69
  5346  0CBB  00AF               	movwf	(___ftmul@f1+2)^(0+128)
  5347  0CBC  085E               	movf	Read_Temperature@result^(0+128),w
  5348  0CBD  00B0               	movwf	___ftmul@f2^(0+128)
  5349  0CBE  085F               	movf	(Read_Temperature@result+1)^(0+128),w
  5350  0CBF  00B1               	movwf	(___ftmul@f2+1)^(0+128)
  5351  0CC0  0860               	movf	(Read_Temperature@result+2)^(0+128),w
  5352  0CC1  00B2               	movwf	(___ftmul@f2+2)^(0+128)
  5353  0CC2  318F  273E  318C   	fcall	___ftmul
  5354  0CC5  0021               	movlb	1	; select bank1
  5355  0CC6  082D               	movf	?___ftmul^(0+128),w
  5356  0CC7  00C0               	movwf	___ftdiv@f1^(0+128)
  5357  0CC8  082E               	movf	(?___ftmul+1)^(0+128),w
  5358  0CC9  00C1               	movwf	(___ftdiv@f1+1)^(0+128)
  5359  0CCA  082F               	movf	(?___ftmul+2)^(0+128),w
  5360  0CCB  00C2               	movwf	(___ftdiv@f1+2)^(0+128)
  5361  0CCC  318D  25C7  318C   	fcall	___ftdiv
  5362  0CCF  0021               	movlb	1	; select bank1
  5363  0CD0  083D               	movf	?___ftdiv^(0+128),w
  5364  0CD1  00D5               	movwf	Read_Temperature@conversion10^(0+128)
  5365  0CD2  083E               	movf	(?___ftdiv+1)^(0+128),w
  5366  0CD3  00D6               	movwf	(Read_Temperature@conversion10+1)^(0+128)
  5367  0CD4  083F               	movf	(?___ftdiv+2)^(0+128),w
  5368  0CD5  00D7               	movwf	(Read_Temperature@conversion10+2)^(0+128)
  5369                           
  5370                           ;Main.c: 354: farenheit = conversion10 / 10;
  5371  0CD6  3000               	movlw	0
  5372  0CD7  00BD               	movwf	___ftdiv@f2^(0+128)
  5373  0CD8  3020               	movlw	32
  5374  0CD9  00BE               	movwf	(___ftdiv@f2+1)^(0+128)
  5375  0CDA  3041               	movlw	65
  5376  0CDB  00BF               	movwf	(___ftdiv@f2+2)^(0+128)
  5377  0CDC  0855               	movf	Read_Temperature@conversion10^(0+128),w
  5378  0CDD  00C0               	movwf	___ftdiv@f1^(0+128)
  5379  0CDE  0856               	movf	(Read_Temperature@conversion10+1)^(0+128),w
  5380  0CDF  00C1               	movwf	(___ftdiv@f1+1)^(0+128)
  5381  0CE0  0857               	movf	(Read_Temperature@conversion10+2)^(0+128),w
  5382  0CE1  00C2               	movwf	(___ftdiv@f1+2)^(0+128)
  5383  0CE2  318D  25C7  318C   	fcall	___ftdiv
  5384  0CE5  0021               	movlb	1	; select bank1
  5385  0CE6  083D               	movf	?___ftdiv^(0+128),w
  5386  0CE7  00D8               	movwf	Read_Temperature@farenheit^(0+128)
  5387  0CE8  083E               	movf	(?___ftdiv+1)^(0+128),w
  5388  0CE9  00D9               	movwf	(Read_Temperature@farenheit+1)^(0+128)
  5389  0CEA  083F               	movf	(?___ftdiv+2)^(0+128),w
  5390  0CEB  00DA               	movwf	(Read_Temperature@farenheit+2)^(0+128)
  5391                           
  5392                           ;Main.c: 357: celsius = (farenheit - 32) * 5/9;
  5393  0CEC  3000               	movlw	0
  5394  0CED  00BD               	movwf	___ftdiv@f2^(0+128)
  5395  0CEE  3010               	movlw	16
  5396  0CEF  00BE               	movwf	(___ftdiv@f2+1)^(0+128)
  5397  0CF0  3041               	movlw	65
  5398  0CF1  00BF               	movwf	(___ftdiv@f2+2)^(0+128)
  5399  0CF2  3000               	movlw	0
  5400  0CF3  00AD               	movwf	___ftmul@f1^(0+128)
  5401  0CF4  30A0               	movlw	160
  5402  0CF5  00AE               	movwf	(___ftmul@f1+1)^(0+128)
  5403  0CF6  3040               	movlw	64
  5404  0CF7  00AF               	movwf	(___ftmul@f1+2)^(0+128)
  5405  0CF8  3000               	movlw	0
  5406  0CF9  00A0               	movwf	___ftadd@f1^(0+128)
  5407  0CFA  3000               	movlw	0
  5408  0CFB  00A1               	movwf	(___ftadd@f1+1)^(0+128)
  5409  0CFC  30C2               	movlw	194
  5410  0CFD  00A2               	movwf	(___ftadd@f1+2)^(0+128)
  5411  0CFE  0858               	movf	Read_Temperature@farenheit^(0+128),w
  5412  0CFF  00A3               	movwf	___ftadd@f2^(0+128)
  5413  0D00  0859               	movf	(Read_Temperature@farenheit+1)^(0+128),w
  5414  0D01  00A4               	movwf	(___ftadd@f2+1)^(0+128)
  5415  0D02  085A               	movf	(Read_Temperature@farenheit+2)^(0+128),w
  5416  0D03  00A5               	movwf	(___ftadd@f2+2)^(0+128)
  5417  0D04  3185  257C  318C   	fcall	___ftadd
  5418  0D07  0021               	movlb	1	; select bank1
  5419  0D08  0820               	movf	?___ftadd^(0+128),w
  5420  0D09  00B0               	movwf	___ftmul@f2^(0+128)
  5421  0D0A  0821               	movf	(?___ftadd+1)^(0+128),w
  5422  0D0B  00B1               	movwf	(___ftmul@f2+1)^(0+128)
  5423  0D0C  0822               	movf	(?___ftadd+2)^(0+128),w
  5424  0D0D  00B2               	movwf	(___ftmul@f2+2)^(0+128)
  5425  0D0E  318F  273E  318C   	fcall	___ftmul
  5426  0D11  0021               	movlb	1	; select bank1
  5427  0D12  082D               	movf	?___ftmul^(0+128),w
  5428  0D13  00C0               	movwf	___ftdiv@f1^(0+128)
  5429  0D14  082E               	movf	(?___ftmul+1)^(0+128),w
  5430  0D15  00C1               	movwf	(___ftdiv@f1+1)^(0+128)
  5431  0D16  082F               	movf	(?___ftmul+2)^(0+128),w
  5432  0D17  00C2               	movwf	(___ftdiv@f1+2)^(0+128)
  5433  0D18  318D  25C7         	fcall	___ftdiv
  5434  0D1A  0021               	movlb	1	; select bank1
  5435  0D1B  083D               	movf	?___ftdiv^(0+128),w
  5436  0D1C  00DB               	movwf	Read_Temperature@celsius^(0+128)
  5437  0D1D  083E               	movf	(?___ftdiv+1)^(0+128),w
  5438  0D1E  00DC               	movwf	(Read_Temperature@celsius+1)^(0+128)
  5439  0D1F  083F               	movf	(?___ftdiv+2)^(0+128),w
  5440  0D20  00DD               	movwf	(Read_Temperature@celsius+2)^(0+128)
  5441                           
  5442                           ;Main.c: 359: return celsius;
  5443  0D21  085B               	movf	Read_Temperature@celsius^(0+128),w
  5444  0D22  00CD               	movwf	?_Read_Temperature^(0+128)
  5445  0D23  085C               	movf	(Read_Temperature@celsius+1)^(0+128),w
  5446  0D24  00CE               	movwf	(?_Read_Temperature+1)^(0+128)
  5447  0D25  085D               	movf	(Read_Temperature@celsius+2)^(0+128),w
  5448  0D26  00CF               	movwf	(?_Read_Temperature+2)^(0+128)
  5449  0D27  0008               	return
  5450  0D28                     __end_of_Read_Temperature:	
  5451                           
  5452                           	psect	text13
  5453  0F3E                     __ptext13:	
  5454 ;; *************** function ___ftmul *****************
  5455 ;; Defined at:
  5456 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftmul.c"
  5457 ;; Parameters:    Size  Location     Type
  5458 ;;  f1              3   13[BANK1 ] float 
  5459 ;;  f2              3   16[BANK1 ] float 
  5460 ;; Auto vars:     Size  Location     Type
  5461 ;;  f3_as_produc    3   24[BANK1 ] unsigned um
  5462 ;;  sign            1   28[BANK1 ] unsigned char 
  5463 ;;  cntr            1   27[BANK1 ] unsigned char 
  5464 ;;  exp             1   23[BANK1 ] unsigned char 
  5465 ;; Return value:  Size  Location     Type
  5466 ;;                  3   13[BANK1 ] float 
  5467 ;; Registers used:
  5468 ;;		wreg, status,2, status,0, pclath, cstack
  5469 ;; Tracked objects:
  5470 ;;		On entry : 0/0
  5471 ;;		On exit  : 0/0
  5472 ;;		Unchanged: 0/0
  5473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5474 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  5475 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  5476 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5477 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  5478 ;;Total ram usage:       16 bytes
  5479 ;; Hardware stack levels used:    1
  5480 ;; Hardware stack levels required when called:    7
  5481 ;; This function calls:
  5482 ;;		___ftpack
  5483 ;; This function is called by:
  5484 ;;		_Read_Temperature
  5485 ;; This function uses a non-reentrant model
  5486 ;;
  5487                           
  5488                           
  5489                           ;psect for function ___ftmul
  5490  0F3E                     ___ftmul:	
  5491                           
  5492                           ;incstack = 0
  5493                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  5494  0F3E  0021               	movlb	1	; select bank1
  5495  0F3F  082D               	movf	___ftmul@f1^(0+128),w
  5496  0F40  00B3               	movwf	??___ftmul^(0+128)
  5497  0F41  082E               	movf	(___ftmul@f1+1)^(0+128),w
  5498  0F42  00B4               	movwf	(??___ftmul^(0+128)+1)
  5499  0F43  082F               	movf	(___ftmul@f1+2)^(0+128),w
  5500  0F44  00B5               	movwf	(??___ftmul^(0+128)+2)
  5501  0F45  1003               	clrc
  5502  0F46  0D34               	rlf	(??___ftmul^(0+128)+1),w
  5503  0F47  0D35               	rlf	(??___ftmul^(0+128)+2),w
  5504  0F48  00B6               	movwf	(??___ftmul+3)^(0+128)
  5505  0F49  0836               	movf	(??___ftmul+3)^(0+128),w
  5506  0F4A  00B7               	movwf	___ftmul@exp^(0+128)
  5507  0F4B  0837               	movf	___ftmul@exp^(0+128),w
  5508  0F4C  1D03               	btfss	3,2
  5509  0F4D  2F55               	goto	l3217
  5510  0F4E  3000               	movlw	0
  5511  0F4F  00AD               	movwf	?___ftmul^(0+128)
  5512  0F50  3000               	movlw	0
  5513  0F51  00AE               	movwf	(?___ftmul+1)^(0+128)
  5514  0F52  3000               	movlw	0
  5515  0F53  00AF               	movwf	(?___ftmul+2)^(0+128)
  5516  0F54  0008               	return
  5517  0F55                     l3217:	
  5518  0F55  0830               	movf	___ftmul@f2^(0+128),w
  5519  0F56  00B3               	movwf	??___ftmul^(0+128)
  5520  0F57  0831               	movf	(___ftmul@f2+1)^(0+128),w
  5521  0F58  00B4               	movwf	(??___ftmul^(0+128)+1)
  5522  0F59  0832               	movf	(___ftmul@f2+2)^(0+128),w
  5523  0F5A  00B5               	movwf	(??___ftmul^(0+128)+2)
  5524  0F5B  1003               	clrc
  5525  0F5C  0D34               	rlf	(??___ftmul^(0+128)+1),w
  5526  0F5D  0D35               	rlf	(??___ftmul^(0+128)+2),w
  5527  0F5E  00B6               	movwf	(??___ftmul+3)^(0+128)
  5528  0F5F  0836               	movf	(??___ftmul+3)^(0+128),w
  5529  0F60  00BC               	movwf	___ftmul@sign^(0+128)
  5530  0F61  083C               	movf	___ftmul@sign^(0+128),w
  5531  0F62  1D03               	btfss	3,2
  5532  0F63  2F6B               	goto	l3223
  5533  0F64  3000               	movlw	0
  5534  0F65  00AD               	movwf	?___ftmul^(0+128)
  5535  0F66  3000               	movlw	0
  5536  0F67  00AE               	movwf	(?___ftmul+1)^(0+128)
  5537  0F68  3000               	movlw	0
  5538  0F69  00AF               	movwf	(?___ftmul+2)^(0+128)
  5539  0F6A  0008               	return
  5540  0F6B                     l3223:	
  5541  0F6B  083C               	movf	___ftmul@sign^(0+128),w
  5542  0F6C  3E7B               	addlw	123
  5543  0F6D  00B3               	movwf	??___ftmul^(0+128)
  5544  0F6E  0833               	movf	??___ftmul^(0+128),w
  5545  0F6F  07B7               	addwf	___ftmul@exp^(0+128),f
  5546  0F70  082D               	movf	___ftmul@f1^(0+128),w
  5547  0F71  00B3               	movwf	??___ftmul^(0+128)
  5548  0F72  082E               	movf	(___ftmul@f1+1)^(0+128),w
  5549  0F73  00B4               	movwf	(??___ftmul^(0+128)+1)
  5550  0F74  082F               	movf	(___ftmul@f1+2)^(0+128),w
  5551  0F75  00B5               	movwf	(??___ftmul^(0+128)+2)
  5552  0F76  3010               	movlw	16
  5553  0F77                     u3975:	
  5554  0F77  36B5               	lsrf	(??___ftmul^(0+128)+2),f
  5555  0F78  0CB4               	rrf	(??___ftmul^(0+128)+1),f
  5556  0F79  0CB3               	rrf	??___ftmul^(0+128),f
  5557  0F7A  0B89               	decfsz	9,f
  5558  0F7B  2F77               	goto	u3975
  5559  0F7C  0833               	movf	??___ftmul^(0+128),w
  5560  0F7D  00B6               	movwf	(??___ftmul+3)^(0+128)
  5561  0F7E  0836               	movf	(??___ftmul+3)^(0+128),w
  5562  0F7F  00BC               	movwf	___ftmul@sign^(0+128)
  5563  0F80  0830               	movf	___ftmul@f2^(0+128),w
  5564  0F81  00B3               	movwf	??___ftmul^(0+128)
  5565  0F82  0831               	movf	(___ftmul@f2+1)^(0+128),w
  5566  0F83  00B4               	movwf	(??___ftmul^(0+128)+1)
  5567  0F84  0832               	movf	(___ftmul@f2+2)^(0+128),w
  5568  0F85  00B5               	movwf	(??___ftmul^(0+128)+2)
  5569  0F86  3010               	movlw	16
  5570  0F87                     u3985:	
  5571  0F87  36B5               	lsrf	(??___ftmul^(0+128)+2),f
  5572  0F88  0CB4               	rrf	(??___ftmul^(0+128)+1),f
  5573  0F89  0CB3               	rrf	??___ftmul^(0+128),f
  5574  0F8A  0B89               	decfsz	9,f
  5575  0F8B  2F87               	goto	u3985
  5576  0F8C  0833               	movf	??___ftmul^(0+128),w
  5577  0F8D  00B6               	movwf	(??___ftmul+3)^(0+128)
  5578  0F8E  0836               	movf	(??___ftmul+3)^(0+128),w
  5579  0F8F  06BC               	xorwf	___ftmul@sign^(0+128),f
  5580  0F90  3080               	movlw	128
  5581  0F91  00B3               	movwf	??___ftmul^(0+128)
  5582  0F92  0833               	movf	??___ftmul^(0+128),w
  5583  0F93  05BC               	andwf	___ftmul@sign^(0+128),f
  5584  0F94  17AE               	bsf	(___ftmul@f1^(0+128)+1),7
  5585  0F95  17B1               	bsf	(___ftmul@f2^(0+128)+1),7
  5586  0F96  30FF               	movlw	255
  5587  0F97  05B0               	andwf	___ftmul@f2^(0+128),f
  5588  0F98  30FF               	movlw	255
  5589  0F99  05B1               	andwf	(___ftmul@f2+1)^(0+128),f
  5590  0F9A  3000               	movlw	0
  5591  0F9B  05B2               	andwf	(___ftmul@f2+2)^(0+128),f
  5592  0F9C  3000               	movlw	0
  5593  0F9D  00B8               	movwf	___ftmul@f3_as_product^(0+128)
  5594  0F9E  3000               	movlw	0
  5595  0F9F  00B9               	movwf	(___ftmul@f3_as_product+1)^(0+128)
  5596  0FA0  3000               	movlw	0
  5597  0FA1  00BA               	movwf	(___ftmul@f3_as_product+2)^(0+128)
  5598  0FA2  3007               	movlw	7
  5599  0FA3  00B3               	movwf	??___ftmul^(0+128)
  5600  0FA4  0833               	movf	??___ftmul^(0+128),w
  5601  0FA5  00BB               	movwf	___ftmul@cntr^(0+128)
  5602  0FA6                     l3235:	
  5603  0FA6  1C2D               	btfss	___ftmul@f1^(0+128),0
  5604  0FA7  2FAE               	goto	l3239
  5605  0FA8  0830               	movf	___ftmul@f2^(0+128),w
  5606  0FA9  07B8               	addwf	___ftmul@f3_as_product^(0+128),f
  5607  0FAA  0831               	movf	(___ftmul@f2+1)^(0+128),w
  5608  0FAB  3DB9               	addwfc	(___ftmul@f3_as_product+1)^(0+128),f
  5609  0FAC  0832               	movf	(___ftmul@f2+2)^(0+128),w
  5610  0FAD  3DBA               	addwfc	(___ftmul@f3_as_product+2)^(0+128),f
  5611  0FAE                     l3239:	
  5612  0FAE  3001               	movlw	1
  5613  0FAF                     u4005:	
  5614  0FAF  36AF               	lsrf	(___ftmul@f1+2)^(0+128),f
  5615  0FB0  0CAE               	rrf	(___ftmul@f1+1)^(0+128),f
  5616  0FB1  0CAD               	rrf	___ftmul@f1^(0+128),f
  5617  0FB2  0B89               	decfsz	9,f
  5618  0FB3  2FAF               	goto	u4005
  5619  0FB4  3001               	movlw	1
  5620  0FB5                     u4015:	
  5621  0FB5  35B0               	lslf	___ftmul@f2^(0+128),f
  5622  0FB6  0DB1               	rlf	(___ftmul@f2+1)^(0+128),f
  5623  0FB7  0DB2               	rlf	(___ftmul@f2+2)^(0+128),f
  5624  0FB8  0B89               	decfsz	9,f
  5625  0FB9  2FB5               	goto	u4015
  5626  0FBA  3001               	movlw	1
  5627  0FBB  02BB               	subwf	___ftmul@cntr^(0+128),f
  5628  0FBC  1D03               	btfss	3,2
  5629  0FBD  2FA6               	goto	l3235
  5630  0FBE  3009               	movlw	9
  5631  0FBF  00B3               	movwf	??___ftmul^(0+128)
  5632  0FC0  0833               	movf	??___ftmul^(0+128),w
  5633  0FC1  00BB               	movwf	___ftmul@cntr^(0+128)
  5634  0FC2                     l3247:	
  5635  0FC2  1C2D               	btfss	___ftmul@f1^(0+128),0
  5636  0FC3  2FCA               	goto	l3251
  5637  0FC4  0830               	movf	___ftmul@f2^(0+128),w
  5638  0FC5  07B8               	addwf	___ftmul@f3_as_product^(0+128),f
  5639  0FC6  0831               	movf	(___ftmul@f2+1)^(0+128),w
  5640  0FC7  3DB9               	addwfc	(___ftmul@f3_as_product+1)^(0+128),f
  5641  0FC8  0832               	movf	(___ftmul@f2+2)^(0+128),w
  5642  0FC9  3DBA               	addwfc	(___ftmul@f3_as_product+2)^(0+128),f
  5643  0FCA                     l3251:	
  5644  0FCA  3001               	movlw	1
  5645  0FCB                     u4045:	
  5646  0FCB  36AF               	lsrf	(___ftmul@f1+2)^(0+128),f
  5647  0FCC  0CAE               	rrf	(___ftmul@f1+1)^(0+128),f
  5648  0FCD  0CAD               	rrf	___ftmul@f1^(0+128),f
  5649  0FCE  0B89               	decfsz	9,f
  5650  0FCF  2FCB               	goto	u4045
  5651  0FD0  3001               	movlw	1
  5652  0FD1                     u4055:	
  5653  0FD1  36BA               	lsrf	(___ftmul@f3_as_product+2)^(0+128),f
  5654  0FD2  0CB9               	rrf	(___ftmul@f3_as_product+1)^(0+128),f
  5655  0FD3  0CB8               	rrf	___ftmul@f3_as_product^(0+128),f
  5656  0FD4  0B89               	decfsz	9,f
  5657  0FD5  2FD1               	goto	u4055
  5658  0FD6  3001               	movlw	1
  5659  0FD7  02BB               	subwf	___ftmul@cntr^(0+128),f
  5660  0FD8  1D03               	btfss	3,2
  5661  0FD9  2FC2               	goto	l3247
  5662  0FDA  0838               	movf	___ftmul@f3_as_product^(0+128),w
  5663  0FDB  0020               	movlb	0	; select bank0
  5664  0FDC  00BB               	movwf	___ftpack@arg
  5665  0FDD  0021               	movlb	1	; select bank1
  5666  0FDE  0839               	movf	(___ftmul@f3_as_product+1)^(0+128),w
  5667  0FDF  0020               	movlb	0	; select bank0
  5668  0FE0  00BC               	movwf	___ftpack@arg+1
  5669  0FE1  0021               	movlb	1	; select bank1
  5670  0FE2  083A               	movf	(___ftmul@f3_as_product+2)^(0+128),w
  5671  0FE3  0020               	movlb	0	; select bank0
  5672  0FE4  00BD               	movwf	___ftpack@arg+2
  5673  0FE5  0021               	movlb	1	; select bank1
  5674  0FE6  0837               	movf	___ftmul@exp^(0+128),w
  5675  0FE7  00B3               	movwf	??___ftmul^(0+128)
  5676  0FE8  0833               	movf	??___ftmul^(0+128),w
  5677  0FE9  0020               	movlb	0	; select bank0
  5678  0FEA  00BE               	movwf	___ftpack@exp
  5679  0FEB  0021               	movlb	1	; select bank1
  5680  0FEC  083C               	movf	___ftmul@sign^(0+128),w
  5681  0FED  00B4               	movwf	(??___ftmul+1)^(0+128)
  5682  0FEE  0834               	movf	(??___ftmul+1)^(0+128),w
  5683  0FEF  0020               	movlb	0	; select bank0
  5684  0FF0  00BF               	movwf	___ftpack@sign
  5685  0FF1  3189  2115         	fcall	___ftpack
  5686  0FF3  0020               	movlb	0	; select bank0
  5687  0FF4  083B               	movf	?___ftpack,w
  5688  0FF5  0021               	movlb	1	; select bank1
  5689  0FF6  00AD               	movwf	?___ftmul^(0+128)
  5690  0FF7  0020               	movlb	0	; select bank0
  5691  0FF8  083C               	movf	?___ftpack+1,w
  5692  0FF9  0021               	movlb	1	; select bank1
  5693  0FFA  00AE               	movwf	(?___ftmul+1)^(0+128)
  5694  0FFB  0020               	movlb	0	; select bank0
  5695  0FFC  083D               	movf	?___ftpack+2,w
  5696  0FFD  0021               	movlb	1	; select bank1
  5697  0FFE  00AF               	movwf	(?___ftmul+2)^(0+128)
  5698  0FFF  0008               	return
  5699  1000                     __end_of___ftmul:	
  5700                           
  5701                           	psect	text14
  5702  0DC7                     __ptext14:	
  5703 ;; *************** function ___ftdiv *****************
  5704 ;; Defined at:
  5705 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftdiv.c"
  5706 ;; Parameters:    Size  Location     Type
  5707 ;;  f2              3   29[BANK1 ] float 
  5708 ;;  f1              3   32[BANK1 ] float 
  5709 ;; Auto vars:     Size  Location     Type
  5710 ;;  f3              3   40[BANK1 ] float 
  5711 ;;  sign            1   44[BANK1 ] unsigned char 
  5712 ;;  exp             1   43[BANK1 ] unsigned char 
  5713 ;;  cntr            1   39[BANK1 ] unsigned char 
  5714 ;; Return value:  Size  Location     Type
  5715 ;;                  3   29[BANK1 ] float 
  5716 ;; Registers used:
  5717 ;;		wreg, status,2, status,0, pclath, cstack
  5718 ;; Tracked objects:
  5719 ;;		On entry : 0/0
  5720 ;;		On exit  : 0/0
  5721 ;;		Unchanged: 0/0
  5722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5723 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  5724 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  5725 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5726 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  5727 ;;Total ram usage:       16 bytes
  5728 ;; Hardware stack levels used:    1
  5729 ;; Hardware stack levels required when called:    7
  5730 ;; This function calls:
  5731 ;;		___ftpack
  5732 ;; This function is called by:
  5733 ;;		_Read_Temperature
  5734 ;; This function uses a non-reentrant model
  5735 ;;
  5736                           
  5737                           
  5738                           ;psect for function ___ftdiv
  5739  0DC7                     ___ftdiv:	
  5740                           
  5741                           ;incstack = 0
  5742                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  5743  0DC7  0021               	movlb	1	; select bank1
  5744  0DC8  0840               	movf	___ftdiv@f1^(0+128),w
  5745  0DC9  00C3               	movwf	??___ftdiv^(0+128)
  5746  0DCA  0841               	movf	(___ftdiv@f1+1)^(0+128),w
  5747  0DCB  00C4               	movwf	(??___ftdiv^(0+128)+1)
  5748  0DCC  0842               	movf	(___ftdiv@f1+2)^(0+128),w
  5749  0DCD  00C5               	movwf	(??___ftdiv^(0+128)+2)
  5750  0DCE  1003               	clrc
  5751  0DCF  0D44               	rlf	(??___ftdiv^(0+128)+1),w
  5752  0DD0  0D45               	rlf	(??___ftdiv^(0+128)+2),w
  5753  0DD1  00C6               	movwf	(??___ftdiv+3)^(0+128)
  5754  0DD2  0846               	movf	(??___ftdiv+3)^(0+128),w
  5755  0DD3  00CB               	movwf	___ftdiv@exp^(0+128)
  5756  0DD4  084B               	movf	___ftdiv@exp^(0+128),w
  5757  0DD5  1D03               	btfss	3,2
  5758  0DD6  2DDE               	goto	l3175
  5759  0DD7  3000               	movlw	0
  5760  0DD8  00BD               	movwf	?___ftdiv^(0+128)
  5761  0DD9  3000               	movlw	0
  5762  0DDA  00BE               	movwf	(?___ftdiv+1)^(0+128)
  5763  0DDB  3000               	movlw	0
  5764  0DDC  00BF               	movwf	(?___ftdiv+2)^(0+128)
  5765  0DDD  0008               	return
  5766  0DDE                     l3175:	
  5767  0DDE  083D               	movf	___ftdiv@f2^(0+128),w
  5768  0DDF  00C3               	movwf	??___ftdiv^(0+128)
  5769  0DE0  083E               	movf	(___ftdiv@f2+1)^(0+128),w
  5770  0DE1  00C4               	movwf	(??___ftdiv^(0+128)+1)
  5771  0DE2  083F               	movf	(___ftdiv@f2+2)^(0+128),w
  5772  0DE3  00C5               	movwf	(??___ftdiv^(0+128)+2)
  5773  0DE4  1003               	clrc
  5774  0DE5  0D44               	rlf	(??___ftdiv^(0+128)+1),w
  5775  0DE6  0D45               	rlf	(??___ftdiv^(0+128)+2),w
  5776  0DE7  00C6               	movwf	(??___ftdiv+3)^(0+128)
  5777  0DE8  0846               	movf	(??___ftdiv+3)^(0+128),w
  5778  0DE9  00CC               	movwf	___ftdiv@sign^(0+128)
  5779  0DEA  084C               	movf	___ftdiv@sign^(0+128),w
  5780  0DEB  1D03               	btfss	3,2
  5781  0DEC  2DF4               	goto	l3181
  5782  0DED  3000               	movlw	0
  5783  0DEE  00BD               	movwf	?___ftdiv^(0+128)
  5784  0DEF  3000               	movlw	0
  5785  0DF0  00BE               	movwf	(?___ftdiv+1)^(0+128)
  5786  0DF1  3000               	movlw	0
  5787  0DF2  00BF               	movwf	(?___ftdiv+2)^(0+128)
  5788  0DF3  0008               	return
  5789  0DF4                     l3181:	
  5790  0DF4  3000               	movlw	0
  5791  0DF5  00C8               	movwf	___ftdiv@f3^(0+128)
  5792  0DF6  3000               	movlw	0
  5793  0DF7  00C9               	movwf	(___ftdiv@f3+1)^(0+128)
  5794  0DF8  3000               	movlw	0
  5795  0DF9  00CA               	movwf	(___ftdiv@f3+2)^(0+128)
  5796  0DFA  3089               	movlw	137
  5797  0DFB  074C               	addwf	___ftdiv@sign^(0+128),w
  5798  0DFC  00C3               	movwf	??___ftdiv^(0+128)
  5799  0DFD  0843               	movf	??___ftdiv^(0+128),w
  5800  0DFE  02CB               	subwf	___ftdiv@exp^(0+128),f
  5801  0DFF  0840               	movf	___ftdiv@f1^(0+128),w
  5802  0E00  00C3               	movwf	??___ftdiv^(0+128)
  5803  0E01  0841               	movf	(___ftdiv@f1+1)^(0+128),w
  5804  0E02  00C4               	movwf	(??___ftdiv^(0+128)+1)
  5805  0E03  0842               	movf	(___ftdiv@f1+2)^(0+128),w
  5806  0E04  00C5               	movwf	(??___ftdiv^(0+128)+2)
  5807  0E05  3010               	movlw	16
  5808  0E06                     u3895:	
  5809  0E06  36C5               	lsrf	(??___ftdiv^(0+128)+2),f
  5810  0E07  0CC4               	rrf	(??___ftdiv^(0+128)+1),f
  5811  0E08  0CC3               	rrf	??___ftdiv^(0+128),f
  5812  0E09  0B89               	decfsz	9,f
  5813  0E0A  2E06               	goto	u3895
  5814  0E0B  0843               	movf	??___ftdiv^(0+128),w
  5815  0E0C  00C6               	movwf	(??___ftdiv+3)^(0+128)
  5816  0E0D  0846               	movf	(??___ftdiv+3)^(0+128),w
  5817  0E0E  00CC               	movwf	___ftdiv@sign^(0+128)
  5818  0E0F  083D               	movf	___ftdiv@f2^(0+128),w
  5819  0E10  00C3               	movwf	??___ftdiv^(0+128)
  5820  0E11  083E               	movf	(___ftdiv@f2+1)^(0+128),w
  5821  0E12  00C4               	movwf	(??___ftdiv^(0+128)+1)
  5822  0E13  083F               	movf	(___ftdiv@f2+2)^(0+128),w
  5823  0E14  00C5               	movwf	(??___ftdiv^(0+128)+2)
  5824  0E15  3010               	movlw	16
  5825  0E16                     u3905:	
  5826  0E16  36C5               	lsrf	(??___ftdiv^(0+128)+2),f
  5827  0E17  0CC4               	rrf	(??___ftdiv^(0+128)+1),f
  5828  0E18  0CC3               	rrf	??___ftdiv^(0+128),f
  5829  0E19  0B89               	decfsz	9,f
  5830  0E1A  2E16               	goto	u3905
  5831  0E1B  0843               	movf	??___ftdiv^(0+128),w
  5832  0E1C  00C6               	movwf	(??___ftdiv+3)^(0+128)
  5833  0E1D  0846               	movf	(??___ftdiv+3)^(0+128),w
  5834  0E1E  06CC               	xorwf	___ftdiv@sign^(0+128),f
  5835  0E1F  3080               	movlw	128
  5836  0E20  00C3               	movwf	??___ftdiv^(0+128)
  5837  0E21  0843               	movf	??___ftdiv^(0+128),w
  5838  0E22  05CC               	andwf	___ftdiv@sign^(0+128),f
  5839  0E23  17C1               	bsf	(___ftdiv@f1^(0+128)+1),7
  5840  0E24  30FF               	movlw	255
  5841  0E25  05C0               	andwf	___ftdiv@f1^(0+128),f
  5842  0E26  30FF               	movlw	255
  5843  0E27  05C1               	andwf	(___ftdiv@f1+1)^(0+128),f
  5844  0E28  3000               	movlw	0
  5845  0E29  05C2               	andwf	(___ftdiv@f1+2)^(0+128),f
  5846  0E2A  17BE               	bsf	(___ftdiv@f2^(0+128)+1),7
  5847  0E2B  30FF               	movlw	255
  5848  0E2C  05BD               	andwf	___ftdiv@f2^(0+128),f
  5849  0E2D  30FF               	movlw	255
  5850  0E2E  05BE               	andwf	(___ftdiv@f2+1)^(0+128),f
  5851  0E2F  3000               	movlw	0
  5852  0E30  05BF               	andwf	(___ftdiv@f2+2)^(0+128),f
  5853  0E31  3018               	movlw	24
  5854  0E32  00C3               	movwf	??___ftdiv^(0+128)
  5855  0E33  0843               	movf	??___ftdiv^(0+128),w
  5856  0E34  00C7               	movwf	___ftdiv@cntr^(0+128)
  5857  0E35                     l3195:	
  5858  0E35  3001               	movlw	1
  5859  0E36                     u3915:	
  5860  0E36  35C8               	lslf	___ftdiv@f3^(0+128),f
  5861  0E37  0DC9               	rlf	(___ftdiv@f3+1)^(0+128),f
  5862  0E38  0DCA               	rlf	(___ftdiv@f3+2)^(0+128),f
  5863  0E39  0B89               	decfsz	9,f
  5864  0E3A  2E36               	goto	u3915
  5865  0E3B  083F               	movf	(___ftdiv@f2+2)^(0+128),w
  5866  0E3C  0242               	subwf	(___ftdiv@f1+2)^(0+128),w
  5867  0E3D  1D03               	skipz
  5868  0E3E  2E45               	goto	u3925
  5869  0E3F  083E               	movf	(___ftdiv@f2+1)^(0+128),w
  5870  0E40  0241               	subwf	(___ftdiv@f1+1)^(0+128),w
  5871  0E41  1D03               	skipz
  5872  0E42  2E45               	goto	u3925
  5873  0E43  083D               	movf	___ftdiv@f2^(0+128),w
  5874  0E44  0240               	subwf	___ftdiv@f1^(0+128),w
  5875  0E45                     u3925:	
  5876  0E45  1C03               	skipc
  5877  0E46  2E4E               	goto	l3203
  5878  0E47  083D               	movf	___ftdiv@f2^(0+128),w
  5879  0E48  02C0               	subwf	___ftdiv@f1^(0+128),f
  5880  0E49  083E               	movf	(___ftdiv@f2+1)^(0+128),w
  5881  0E4A  3BC1               	subwfb	(___ftdiv@f1+1)^(0+128),f
  5882  0E4B  083F               	movf	(___ftdiv@f2+2)^(0+128),w
  5883  0E4C  3BC2               	subwfb	(___ftdiv@f1+2)^(0+128),f
  5884  0E4D  1448               	bsf	___ftdiv@f3^(0+128),0
  5885  0E4E                     l3203:	
  5886  0E4E  3001               	movlw	1
  5887  0E4F                     u3935:	
  5888  0E4F  35C0               	lslf	___ftdiv@f1^(0+128),f
  5889  0E50  0DC1               	rlf	(___ftdiv@f1+1)^(0+128),f
  5890  0E51  0DC2               	rlf	(___ftdiv@f1+2)^(0+128),f
  5891  0E52  0B89               	decfsz	9,f
  5892  0E53  2E4F               	goto	u3935
  5893  0E54  3001               	movlw	1
  5894  0E55  02C7               	subwf	___ftdiv@cntr^(0+128),f
  5895  0E56  1D03               	btfss	3,2
  5896  0E57  2E35               	goto	l3195
  5897  0E58  0848               	movf	___ftdiv@f3^(0+128),w
  5898  0E59  0020               	movlb	0	; select bank0
  5899  0E5A  00BB               	movwf	___ftpack@arg
  5900  0E5B  0021               	movlb	1	; select bank1
  5901  0E5C  0849               	movf	(___ftdiv@f3+1)^(0+128),w
  5902  0E5D  0020               	movlb	0	; select bank0
  5903  0E5E  00BC               	movwf	___ftpack@arg+1
  5904  0E5F  0021               	movlb	1	; select bank1
  5905  0E60  084A               	movf	(___ftdiv@f3+2)^(0+128),w
  5906  0E61  0020               	movlb	0	; select bank0
  5907  0E62  00BD               	movwf	___ftpack@arg+2
  5908  0E63  0021               	movlb	1	; select bank1
  5909  0E64  084B               	movf	___ftdiv@exp^(0+128),w
  5910  0E65  00C3               	movwf	??___ftdiv^(0+128)
  5911  0E66  0843               	movf	??___ftdiv^(0+128),w
  5912  0E67  0020               	movlb	0	; select bank0
  5913  0E68  00BE               	movwf	___ftpack@exp
  5914  0E69  0021               	movlb	1	; select bank1
  5915  0E6A  084C               	movf	___ftdiv@sign^(0+128),w
  5916  0E6B  00C4               	movwf	(??___ftdiv+1)^(0+128)
  5917  0E6C  0844               	movf	(??___ftdiv+1)^(0+128),w
  5918  0E6D  0020               	movlb	0	; select bank0
  5919  0E6E  00BF               	movwf	___ftpack@sign
  5920  0E6F  3189  2115         	fcall	___ftpack
  5921  0E71  0020               	movlb	0	; select bank0
  5922  0E72  083B               	movf	?___ftpack,w
  5923  0E73  0021               	movlb	1	; select bank1
  5924  0E74  00BD               	movwf	?___ftdiv^(0+128)
  5925  0E75  0020               	movlb	0	; select bank0
  5926  0E76  083C               	movf	?___ftpack+1,w
  5927  0E77  0021               	movlb	1	; select bank1
  5928  0E78  00BE               	movwf	(?___ftdiv+1)^(0+128)
  5929  0E79  0020               	movlb	0	; select bank0
  5930  0E7A  083D               	movf	?___ftpack+2,w
  5931  0E7B  0021               	movlb	1	; select bank1
  5932  0E7C  00BF               	movwf	(?___ftdiv+2)^(0+128)
  5933  0E7D  0008               	return
  5934  0E7E                     __end_of___ftdiv:	
  5935                           
  5936                           	psect	text15
  5937  057C                     __ptext15:	
  5938 ;; *************** function ___ftadd *****************
  5939 ;; Defined at:
  5940 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftadd.c"
  5941 ;; Parameters:    Size  Location     Type
  5942 ;;  f1              3    0[BANK1 ] float 
  5943 ;;  f2              3    3[BANK1 ] float 
  5944 ;; Auto vars:     Size  Location     Type
  5945 ;;  exp1            1   12[BANK1 ] unsigned char 
  5946 ;;  exp2            1   11[BANK1 ] unsigned char 
  5947 ;;  sign            1   10[BANK1 ] unsigned char 
  5948 ;; Return value:  Size  Location     Type
  5949 ;;                  3    0[BANK1 ] float 
  5950 ;; Registers used:
  5951 ;;		wreg, status,2, status,0, pclath, cstack
  5952 ;; Tracked objects:
  5953 ;;		On entry : 0/0
  5954 ;;		On exit  : 0/0
  5955 ;;		Unchanged: 0/0
  5956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5957 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  5958 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5959 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5960 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  5961 ;;Total ram usage:       13 bytes
  5962 ;; Hardware stack levels used:    1
  5963 ;; Hardware stack levels required when called:    7
  5964 ;; This function calls:
  5965 ;;		___ftpack
  5966 ;; This function is called by:
  5967 ;;		_Read_Temperature
  5968 ;; This function uses a non-reentrant model
  5969 ;;
  5970                           
  5971                           
  5972                           ;psect for function ___ftadd
  5973  057C                     ___ftadd:	
  5974                           
  5975                           ;incstack = 0
  5976                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  5977  057C  0021               	movlb	1	; select bank1
  5978  057D  0820               	movf	___ftadd@f1^(0+128),w
  5979  057E  00A6               	movwf	??___ftadd^(0+128)
  5980  057F  0821               	movf	(___ftadd@f1+1)^(0+128),w
  5981  0580  00A7               	movwf	(??___ftadd^(0+128)+1)
  5982  0581  0822               	movf	(___ftadd@f1+2)^(0+128),w
  5983  0582  00A8               	movwf	(??___ftadd^(0+128)+2)
  5984  0583  1003               	clrc
  5985  0584  0D27               	rlf	(??___ftadd^(0+128)+1),w
  5986  0585  0D28               	rlf	(??___ftadd^(0+128)+2),w
  5987  0586  00A9               	movwf	(??___ftadd+3)^(0+128)
  5988  0587  0829               	movf	(??___ftadd+3)^(0+128),w
  5989  0588  00AC               	movwf	___ftadd@exp1^(0+128)
  5990  0589  0823               	movf	___ftadd@f2^(0+128),w
  5991  058A  00A6               	movwf	??___ftadd^(0+128)
  5992  058B  0824               	movf	(___ftadd@f2+1)^(0+128),w
  5993  058C  00A7               	movwf	(??___ftadd^(0+128)+1)
  5994  058D  0825               	movf	(___ftadd@f2+2)^(0+128),w
  5995  058E  00A8               	movwf	(??___ftadd^(0+128)+2)
  5996  058F  1003               	clrc
  5997  0590  0D27               	rlf	(??___ftadd^(0+128)+1),w
  5998  0591  0D28               	rlf	(??___ftadd^(0+128)+2),w
  5999  0592  00A9               	movwf	(??___ftadd+3)^(0+128)
  6000  0593  0829               	movf	(??___ftadd+3)^(0+128),w
  6001  0594  00AB               	movwf	___ftadd@exp2^(0+128)
  6002  0595  082C               	movf	___ftadd@exp1^(0+128),w
  6003  0596  1903               	btfsc	3,2
  6004  0597  2DA4               	goto	l3105
  6005  0598  082B               	movf	___ftadd@exp2^(0+128),w
  6006  0599  022C               	subwf	___ftadd@exp1^(0+128),w
  6007  059A  1803               	skipnc
  6008  059B  2DAB               	goto	l3109
  6009  059C  032C               	decf	___ftadd@exp1^(0+128),w
  6010  059D  3AFF               	xorlw	255
  6011  059E  072B               	addwf	___ftadd@exp2^(0+128),w
  6012  059F  00A6               	movwf	??___ftadd^(0+128)
  6013  05A0  3019               	movlw	25
  6014  05A1  0226               	subwf	??___ftadd^(0+128),w
  6015  05A2  1C03               	skipc
  6016  05A3  2DAB               	goto	l3109
  6017  05A4                     l3105:	
  6018  05A4  0823               	movf	___ftadd@f2^(0+128),w
  6019  05A5  00A0               	movwf	?___ftadd^(0+128)
  6020  05A6  0824               	movf	(___ftadd@f2+1)^(0+128),w
  6021  05A7  00A1               	movwf	(?___ftadd+1)^(0+128)
  6022  05A8  0825               	movf	(___ftadd@f2+2)^(0+128),w
  6023  05A9  00A2               	movwf	(?___ftadd+2)^(0+128)
  6024  05AA  0008               	return
  6025  05AB                     l3109:	
  6026  05AB  082B               	movf	___ftadd@exp2^(0+128),w
  6027  05AC  1903               	btfsc	3,2
  6028  05AD  0008               	return
  6029  05AE  082C               	movf	___ftadd@exp1^(0+128),w
  6030  05AF  022B               	subwf	___ftadd@exp2^(0+128),w
  6031  05B0  1803               	skipnc
  6032  05B1  2DBA               	goto	l3115
  6033  05B2  032B               	decf	___ftadd@exp2^(0+128),w
  6034  05B3  3AFF               	xorlw	255
  6035  05B4  072C               	addwf	___ftadd@exp1^(0+128),w
  6036  05B5  00A6               	movwf	??___ftadd^(0+128)
  6037  05B6  3019               	movlw	25
  6038  05B7  0226               	subwf	??___ftadd^(0+128),w
  6039  05B8  1803               	btfsc	3,0
  6040  05B9  0008               	return
  6041  05BA                     l3115:	
  6042  05BA  3006               	movlw	6
  6043  05BB  00A6               	movwf	??___ftadd^(0+128)
  6044  05BC  0826               	movf	??___ftadd^(0+128),w
  6045  05BD  00AA               	movwf	___ftadd@sign^(0+128)
  6046  05BE  1BA2               	btfsc	(___ftadd@f1+2)^(0+128),7
  6047  05BF  17AA               	bsf	___ftadd@sign^(0+128),7
  6048  05C0  1BA5               	btfsc	(___ftadd@f2+2)^(0+128),7
  6049  05C1  172A               	bsf	___ftadd@sign^(0+128),6
  6050  05C2  17A1               	bsf	(___ftadd@f1^(0+128)+1),7
  6051  05C3  30FF               	movlw	255
  6052  05C4  05A0               	andwf	___ftadd@f1^(0+128),f
  6053  05C5  30FF               	movlw	255
  6054  05C6  05A1               	andwf	(___ftadd@f1+1)^(0+128),f
  6055  05C7  3000               	movlw	0
  6056  05C8  05A2               	andwf	(___ftadd@f1+2)^(0+128),f
  6057  05C9  17A4               	bsf	(___ftadd@f2^(0+128)+1),7
  6058  05CA  30FF               	movlw	255
  6059  05CB  05A3               	andwf	___ftadd@f2^(0+128),f
  6060  05CC  30FF               	movlw	255
  6061  05CD  05A4               	andwf	(___ftadd@f2+1)^(0+128),f
  6062  05CE  3000               	movlw	0
  6063  05CF  05A5               	andwf	(___ftadd@f2+2)^(0+128),f
  6064  05D0  082B               	movf	___ftadd@exp2^(0+128),w
  6065  05D1  022C               	subwf	___ftadd@exp1^(0+128),w
  6066  05D2  1803               	skipnc
  6067  05D3  2DF6               	goto	l3137
  6068  05D4                     l3127:	
  6069  05D4  3001               	movlw	1
  6070  05D5                     u3735:	
  6071  05D5  35A3               	lslf	___ftadd@f2^(0+128),f
  6072  05D6  0DA4               	rlf	(___ftadd@f2+1)^(0+128),f
  6073  05D7  0DA5               	rlf	(___ftadd@f2+2)^(0+128),f
  6074  05D8  0B89               	decfsz	9,f
  6075  05D9  2DD5               	goto	u3735
  6076  05DA  3001               	movlw	1
  6077  05DB  02AB               	subwf	___ftadd@exp2^(0+128),f
  6078  05DC  082B               	movf	___ftadd@exp2^(0+128),w
  6079  05DD  062C               	xorwf	___ftadd@exp1^(0+128),w
  6080  05DE  1903               	skipnz
  6081  05DF  2DF1               	goto	l3135
  6082  05E0  3001               	movlw	1
  6083  05E1  02AA               	subwf	___ftadd@sign^(0+128),f
  6084  05E2  082A               	movf	___ftadd@sign^(0+128),w
  6085  05E3  3907               	andlw	7
  6086  05E4  1903               	btfsc	3,2
  6087  05E5  2DF1               	goto	l3135
  6088  05E6  2DD4               	goto	l3127
  6089  05E7                     l3133:	
  6090  05E7  3001               	movlw	1
  6091  05E8                     u3765:	
  6092  05E8  36A2               	lsrf	(___ftadd@f1+2)^(0+128),f
  6093  05E9  0CA1               	rrf	(___ftadd@f1+1)^(0+128),f
  6094  05EA  0CA0               	rrf	___ftadd@f1^(0+128),f
  6095  05EB  0B89               	decfsz	9,f
  6096  05EC  2DE8               	goto	u3765
  6097  05ED  3001               	movlw	1
  6098  05EE  00A6               	movwf	??___ftadd^(0+128)
  6099  05EF  0826               	movf	??___ftadd^(0+128),w
  6100  05F0  07AC               	addwf	___ftadd@exp1^(0+128),f
  6101  05F1                     l3135:	
  6102  05F1  082C               	movf	___ftadd@exp1^(0+128),w
  6103  05F2  062B               	xorwf	___ftadd@exp2^(0+128),w
  6104  05F3  1903               	btfsc	3,2
  6105  05F4  2E1B               	goto	l549
  6106  05F5  2DE7               	goto	l3133
  6107  05F6                     l3137:	
  6108  05F6  082C               	movf	___ftadd@exp1^(0+128),w
  6109  05F7  022B               	subwf	___ftadd@exp2^(0+128),w
  6110  05F8  1803               	skipnc
  6111  05F9  2E1B               	goto	l549
  6112  05FA                     l3139:	
  6113  05FA  3001               	movlw	1
  6114  05FB                     u3795:	
  6115  05FB  35A0               	lslf	___ftadd@f1^(0+128),f
  6116  05FC  0DA1               	rlf	(___ftadd@f1+1)^(0+128),f
  6117  05FD  0DA2               	rlf	(___ftadd@f1+2)^(0+128),f
  6118  05FE  0B89               	decfsz	9,f
  6119  05FF  2DFB               	goto	u3795
  6120  0600  3001               	movlw	1
  6121  0601  02AC               	subwf	___ftadd@exp1^(0+128),f
  6122  0602  082B               	movf	___ftadd@exp2^(0+128),w
  6123  0603  062C               	xorwf	___ftadd@exp1^(0+128),w
  6124  0604  1903               	skipnz
  6125  0605  2E17               	goto	l3147
  6126  0606  3001               	movlw	1
  6127  0607  02AA               	subwf	___ftadd@sign^(0+128),f
  6128  0608  082A               	movf	___ftadd@sign^(0+128),w
  6129  0609  3907               	andlw	7
  6130  060A  1903               	btfsc	3,2
  6131  060B  2E17               	goto	l3147
  6132  060C  2DFA               	goto	l3139
  6133  060D                     l3145:	
  6134  060D  3001               	movlw	1
  6135  060E                     u3825:	
  6136  060E  36A5               	lsrf	(___ftadd@f2+2)^(0+128),f
  6137  060F  0CA4               	rrf	(___ftadd@f2+1)^(0+128),f
  6138  0610  0CA3               	rrf	___ftadd@f2^(0+128),f
  6139  0611  0B89               	decfsz	9,f
  6140  0612  2E0E               	goto	u3825
  6141  0613  3001               	movlw	1
  6142  0614  00A6               	movwf	??___ftadd^(0+128)
  6143  0615  0826               	movf	??___ftadd^(0+128),w
  6144  0616  07AB               	addwf	___ftadd@exp2^(0+128),f
  6145  0617                     l3147:	
  6146  0617  082C               	movf	___ftadd@exp1^(0+128),w
  6147  0618  062B               	xorwf	___ftadd@exp2^(0+128),w
  6148  0619  1D03               	skipz
  6149  061A  2E0D               	goto	l3145
  6150  061B                     l549:	
  6151  061B  1FAA               	btfss	___ftadd@sign^(0+128),7
  6152  061C  2E2D               	goto	l3151
  6153  061D  30FF               	movlw	255
  6154  061E  06A0               	xorwf	___ftadd@f1^(0+128),f
  6155  061F  30FF               	movlw	255
  6156  0620  06A1               	xorwf	(___ftadd@f1+1)^(0+128),f
  6157  0621  30FF               	movlw	255
  6158  0622  06A2               	xorwf	(___ftadd@f1+2)^(0+128),f
  6159  0623  3001               	movlw	1
  6160  0624  07A0               	addwf	___ftadd@f1^(0+128),f
  6161  0625  3000               	movlw	0
  6162  0626  1803               	skipnc
  6163  0627  3001               	movlw	1
  6164  0628  07A1               	addwf	(___ftadd@f1+1)^(0+128),f
  6165  0629  3000               	movlw	0
  6166  062A  1803               	skipnc
  6167  062B  3001               	movlw	1
  6168  062C  07A2               	addwf	(___ftadd@f1+2)^(0+128),f
  6169  062D                     l3151:	
  6170  062D  1F2A               	btfss	___ftadd@sign^(0+128),6
  6171  062E  2E3F               	goto	l3155
  6172  062F  30FF               	movlw	255
  6173  0630  06A3               	xorwf	___ftadd@f2^(0+128),f
  6174  0631  30FF               	movlw	255
  6175  0632  06A4               	xorwf	(___ftadd@f2+1)^(0+128),f
  6176  0633  30FF               	movlw	255
  6177  0634  06A5               	xorwf	(___ftadd@f2+2)^(0+128),f
  6178  0635  3001               	movlw	1
  6179  0636  07A3               	addwf	___ftadd@f2^(0+128),f
  6180  0637  3000               	movlw	0
  6181  0638  1803               	skipnc
  6182  0639  3001               	movlw	1
  6183  063A  07A4               	addwf	(___ftadd@f2+1)^(0+128),f
  6184  063B  3000               	movlw	0
  6185  063C  1803               	skipnc
  6186  063D  3001               	movlw	1
  6187  063E  07A5               	addwf	(___ftadd@f2+2)^(0+128),f
  6188  063F                     l3155:	
  6189  063F  01AA               	clrf	___ftadd@sign^(0+128)
  6190  0640  0820               	movf	___ftadd@f1^(0+128),w
  6191  0641  07A3               	addwf	___ftadd@f2^(0+128),f
  6192  0642  0821               	movf	(___ftadd@f1+1)^(0+128),w
  6193  0643  3DA4               	addwfc	(___ftadd@f2+1)^(0+128),f
  6194  0644  0822               	movf	(___ftadd@f1+2)^(0+128),w
  6195  0645  3DA5               	addwfc	(___ftadd@f2+2)^(0+128),f
  6196  0646  1FA5               	btfss	(___ftadd@f2+2)^(0+128),7
  6197  0647  2E5A               	goto	l3165
  6198  0648  30FF               	movlw	255
  6199  0649  06A3               	xorwf	___ftadd@f2^(0+128),f
  6200  064A  30FF               	movlw	255
  6201  064B  06A4               	xorwf	(___ftadd@f2+1)^(0+128),f
  6202  064C  30FF               	movlw	255
  6203  064D  06A5               	xorwf	(___ftadd@f2+2)^(0+128),f
  6204  064E  3001               	movlw	1
  6205  064F  07A3               	addwf	___ftadd@f2^(0+128),f
  6206  0650  3000               	movlw	0
  6207  0651  1803               	skipnc
  6208  0652  3001               	movlw	1
  6209  0653  07A4               	addwf	(___ftadd@f2+1)^(0+128),f
  6210  0654  3000               	movlw	0
  6211  0655  1803               	skipnc
  6212  0656  3001               	movlw	1
  6213  0657  07A5               	addwf	(___ftadd@f2+2)^(0+128),f
  6214  0658  01AA               	clrf	___ftadd@sign^(0+128)
  6215  0659  0AAA               	incf	___ftadd@sign^(0+128),f
  6216  065A                     l3165:	
  6217  065A  0823               	movf	___ftadd@f2^(0+128),w
  6218  065B  0020               	movlb	0	; select bank0
  6219  065C  00BB               	movwf	___ftpack@arg
  6220  065D  0021               	movlb	1	; select bank1
  6221  065E  0824               	movf	(___ftadd@f2+1)^(0+128),w
  6222  065F  0020               	movlb	0	; select bank0
  6223  0660  00BC               	movwf	___ftpack@arg+1
  6224  0661  0021               	movlb	1	; select bank1
  6225  0662  0825               	movf	(___ftadd@f2+2)^(0+128),w
  6226  0663  0020               	movlb	0	; select bank0
  6227  0664  00BD               	movwf	___ftpack@arg+2
  6228  0665  0021               	movlb	1	; select bank1
  6229  0666  082C               	movf	___ftadd@exp1^(0+128),w
  6230  0667  00A6               	movwf	??___ftadd^(0+128)
  6231  0668  0826               	movf	??___ftadd^(0+128),w
  6232  0669  0020               	movlb	0	; select bank0
  6233  066A  00BE               	movwf	___ftpack@exp
  6234  066B  0021               	movlb	1	; select bank1
  6235  066C  082A               	movf	___ftadd@sign^(0+128),w
  6236  066D  00A7               	movwf	(??___ftadd+1)^(0+128)
  6237  066E  0827               	movf	(??___ftadd+1)^(0+128),w
  6238  066F  0020               	movlb	0	; select bank0
  6239  0670  00BF               	movwf	___ftpack@sign
  6240  0671  3189  2115         	fcall	___ftpack
  6241  0673  0020               	movlb	0	; select bank0
  6242  0674  083B               	movf	?___ftpack,w
  6243  0675  0021               	movlb	1	; select bank1
  6244  0676  00A0               	movwf	?___ftadd^(0+128)
  6245  0677  0020               	movlb	0	; select bank0
  6246  0678  083C               	movf	?___ftpack+1,w
  6247  0679  0021               	movlb	1	; select bank1
  6248  067A  00A1               	movwf	(?___ftadd+1)^(0+128)
  6249  067B  0020               	movlb	0	; select bank0
  6250  067C  083D               	movf	?___ftpack+2,w
  6251  067D  0021               	movlb	1	; select bank1
  6252  067E  00A2               	movwf	(?___ftadd+2)^(0+128)
  6253  067F  0008               	return
  6254  0680                     __end_of___ftadd:	
  6255                           
  6256                           	psect	text16
  6257  179D                     __ptext16:	
  6258 ;; *************** function ___awtoft *****************
  6259 ;; Defined at:
  6260 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awtoft.c"
  6261 ;; Parameters:    Size  Location     Type
  6262 ;;  c               2    0[BANK1 ] int 
  6263 ;; Auto vars:     Size  Location     Type
  6264 ;;  sign            1   35[BANK0 ] unsigned char 
  6265 ;; Return value:  Size  Location     Type
  6266 ;;                  3    0[BANK1 ] float 
  6267 ;; Registers used:
  6268 ;;		wreg, status,2, status,0, pclath, cstack
  6269 ;; Tracked objects:
  6270 ;;		On entry : 0/0
  6271 ;;		On exit  : 0/0
  6272 ;;		Unchanged: 0/0
  6273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6274 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6275 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6276 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6277 ;;      Totals:         0       1       5       0       0       0       0       0       0       0       0       0       
      +0       0
  6278 ;;Total ram usage:        6 bytes
  6279 ;; Hardware stack levels used:    1
  6280 ;; Hardware stack levels required when called:    7
  6281 ;; This function calls:
  6282 ;;		___ftpack
  6283 ;; This function is called by:
  6284 ;;		_Read_Temperature
  6285 ;; This function uses a non-reentrant model
  6286 ;;
  6287                           
  6288                           
  6289                           ;psect for function ___awtoft
  6290  179D                     ___awtoft:	
  6291                           
  6292                           ;incstack = 0
  6293                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  6294  179D  0020               	movlb	0	; select bank0
  6295  179E  01C3               	clrf	___awtoft@sign
  6296  179F  0021               	movlb	1	; select bank1
  6297  17A0  1FA1               	btfss	(___awtoft@c+1)^(0+128),7
  6298  17A1  2FAA               	goto	l3095
  6299  17A2  09A0               	comf	___awtoft@c^(0+128),f
  6300  17A3  09A1               	comf	(___awtoft@c+1)^(0+128),f
  6301  17A4  0AA0               	incf	___awtoft@c^(0+128),f
  6302  17A5  1903               	skipnz
  6303  17A6  0AA1               	incf	(___awtoft@c+1)^(0+128),f
  6304  17A7  0020               	movlb	0	; select bank0
  6305  17A8  01C3               	clrf	___awtoft@sign
  6306  17A9  0AC3               	incf	___awtoft@sign,f
  6307  17AA                     l3095:	
  6308  17AA  0021               	movlb	1	; select bank1
  6309  17AB  0820               	movf	___awtoft@c^(0+128),w
  6310  17AC  0020               	movlb	0	; select bank0
  6311  17AD  00BB               	movwf	___ftpack@arg
  6312  17AE  0021               	movlb	1	; select bank1
  6313  17AF  0821               	movf	(___awtoft@c+1)^(0+128),w
  6314  17B0  0020               	movlb	0	; select bank0
  6315  17B1  00BC               	movwf	___ftpack@arg+1
  6316  17B2  01BD               	clrf	___ftpack@arg+2
  6317  17B3  308E               	movlw	142
  6318  17B4  0021               	movlb	1	; select bank1
  6319  17B5  00A3               	movwf	??___awtoft^(0+128)
  6320  17B6  0823               	movf	??___awtoft^(0+128),w
  6321  17B7  0020               	movlb	0	; select bank0
  6322  17B8  00BE               	movwf	___ftpack@exp
  6323  17B9  0843               	movf	___awtoft@sign,w
  6324  17BA  0021               	movlb	1	; select bank1
  6325  17BB  00A4               	movwf	(??___awtoft+1)^(0+128)
  6326  17BC  0824               	movf	(??___awtoft+1)^(0+128),w
  6327  17BD  0020               	movlb	0	; select bank0
  6328  17BE  00BF               	movwf	___ftpack@sign
  6329  17BF  3189  2115         	fcall	___ftpack
  6330  17C1  0020               	movlb	0	; select bank0
  6331  17C2  083B               	movf	?___ftpack,w
  6332  17C3  0021               	movlb	1	; select bank1
  6333  17C4  00A0               	movwf	?___awtoft^(0+128)
  6334  17C5  0020               	movlb	0	; select bank0
  6335  17C6  083C               	movf	?___ftpack+1,w
  6336  17C7  0021               	movlb	1	; select bank1
  6337  17C8  00A1               	movwf	(?___awtoft+1)^(0+128)
  6338  17C9  0020               	movlb	0	; select bank0
  6339  17CA  083D               	movf	?___ftpack+2,w
  6340  17CB  0021               	movlb	1	; select bank1
  6341  17CC  00A2               	movwf	(?___awtoft+2)^(0+128)
  6342  17CD  0008               	return
  6343  17CE                     __end_of___awtoft:	
  6344                           
  6345                           	psect	text17
  6346  0915                     __ptext17:	
  6347 ;; *************** function ___ftpack *****************
  6348 ;; Defined at:
  6349 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\float.c"
  6350 ;; Parameters:    Size  Location     Type
  6351 ;;  arg             3   27[BANK0 ] unsigned um
  6352 ;;  exp             1   30[BANK0 ] unsigned char 
  6353 ;;  sign            1   31[BANK0 ] unsigned char 
  6354 ;; Auto vars:     Size  Location     Type
  6355 ;;		None
  6356 ;; Return value:  Size  Location     Type
  6357 ;;                  3   27[BANK0 ] float 
  6358 ;; Registers used:
  6359 ;;		wreg, status,2, status,0
  6360 ;; Tracked objects:
  6361 ;;		On entry : 0/0
  6362 ;;		On exit  : 0/0
  6363 ;;		Unchanged: 0/0
  6364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6365 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6367 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6368 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6369 ;;Total ram usage:        8 bytes
  6370 ;; Hardware stack levels used:    1
  6371 ;; Hardware stack levels required when called:    6
  6372 ;; This function calls:
  6373 ;;		Nothing
  6374 ;; This function is called by:
  6375 ;;		___awtoft
  6376 ;;		___ftadd
  6377 ;;		___ftdiv
  6378 ;;		___ftmul
  6379 ;; This function uses a non-reentrant model
  6380 ;;
  6381                           
  6382                           
  6383                           ;psect for function ___ftpack
  6384  0915                     ___ftpack:	
  6385                           
  6386                           ;incstack = 0
  6387                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  6388  0915  0020               	movlb	0	; select bank0
  6389  0916  083E               	movf	___ftpack@exp,w
  6390  0917  1903               	btfsc	3,2
  6391  0918  291E               	goto	l2943
  6392  0919  083D               	movf	___ftpack@arg+2,w
  6393  091A  043C               	iorwf	___ftpack@arg+1,w
  6394  091B  043B               	iorwf	___ftpack@arg,w
  6395  091C  1D03               	skipz
  6396  091D  292F               	goto	l2949
  6397  091E                     l2943:	
  6398  091E  3000               	movlw	0
  6399  091F  00BB               	movwf	?___ftpack
  6400  0920  3000               	movlw	0
  6401  0921  00BC               	movwf	?___ftpack+1
  6402  0922  3000               	movlw	0
  6403  0923  00BD               	movwf	?___ftpack+2
  6404  0924  0008               	return
  6405  0925                     l2947:	
  6406  0925  3001               	movlw	1
  6407  0926  00C0               	movwf	??___ftpack
  6408  0927  0840               	movf	??___ftpack,w
  6409  0928  07BE               	addwf	___ftpack@exp,f
  6410  0929  3001               	movlw	1
  6411  092A                     u3345:	
  6412  092A  36BD               	lsrf	___ftpack@arg+2,f
  6413  092B  0CBC               	rrf	___ftpack@arg+1,f
  6414  092C  0CBB               	rrf	___ftpack@arg,f
  6415  092D  0B89               	decfsz	9,f
  6416  092E  292A               	goto	u3345
  6417  092F                     l2949:	
  6418  092F  30FE               	movlw	254
  6419  0930  053D               	andwf	___ftpack@arg+2,w
  6420  0931  1903               	btfsc	3,2
  6421  0932  2948               	goto	l518
  6422  0933  2925               	goto	l2947
  6423  0934                     l2951:	
  6424  0934  3001               	movlw	1
  6425  0935  00C0               	movwf	??___ftpack
  6426  0936  0840               	movf	??___ftpack,w
  6427  0937  07BE               	addwf	___ftpack@exp,f
  6428  0938  3001               	movlw	1
  6429  0939  07BB               	addwf	___ftpack@arg,f
  6430  093A  3000               	movlw	0
  6431  093B  1803               	skipnc
  6432  093C  3001               	movlw	1
  6433  093D  07BC               	addwf	___ftpack@arg+1,f
  6434  093E  3000               	movlw	0
  6435  093F  1803               	skipnc
  6436  0940  3001               	movlw	1
  6437  0941  07BD               	addwf	___ftpack@arg+2,f
  6438  0942  3001               	movlw	1
  6439  0943                     u3365:	
  6440  0943  36BD               	lsrf	___ftpack@arg+2,f
  6441  0944  0CBC               	rrf	___ftpack@arg+1,f
  6442  0945  0CBB               	rrf	___ftpack@arg,f
  6443  0946  0B89               	decfsz	9,f
  6444  0947  2943               	goto	u3365
  6445  0948                     l518:	
  6446  0948  30FF               	movlw	255
  6447  0949  053D               	andwf	___ftpack@arg+2,w
  6448  094A  1903               	btfsc	3,2
  6449  094B  2955               	goto	l2959
  6450  094C  2934               	goto	l2951
  6451  094D                     l2957:	
  6452  094D  3001               	movlw	1
  6453  094E  02BE               	subwf	___ftpack@exp,f
  6454  094F  3001               	movlw	1
  6455  0950                     u3385:	
  6456  0950  35BB               	lslf	___ftpack@arg,f
  6457  0951  0DBC               	rlf	___ftpack@arg+1,f
  6458  0952  0DBD               	rlf	___ftpack@arg+2,f
  6459  0953  0B89               	decfsz	9,f
  6460  0954  2950               	goto	u3385
  6461  0955                     l2959:	
  6462  0955  1BBC               	btfsc	___ftpack@arg+1,7
  6463  0956  295B               	goto	l525
  6464  0957  3002               	movlw	2
  6465  0958  023E               	subwf	___ftpack@exp,w
  6466  0959  1803               	skipnc
  6467  095A  294D               	goto	l2957
  6468  095B                     l525:	
  6469  095B  183E               	btfsc	___ftpack@exp,0
  6470  095C  2963               	goto	l526
  6471  095D  30FF               	movlw	255
  6472  095E  05BB               	andwf	___ftpack@arg,f
  6473  095F  307F               	movlw	127
  6474  0960  05BC               	andwf	___ftpack@arg+1,f
  6475  0961  30FF               	movlw	255
  6476  0962  05BD               	andwf	___ftpack@arg+2,f
  6477  0963                     l526:	
  6478  0963  1003               	clrc
  6479  0964  0CBE               	rrf	___ftpack@exp,f
  6480  0965  083E               	movf	___ftpack@exp,w
  6481  0966  00C0               	movwf	??___ftpack
  6482  0967  01C1               	clrf	??___ftpack+1
  6483  0968  01C2               	clrf	??___ftpack+2
  6484  0969  3010               	movlw	16
  6485  096A                     u3425:	
  6486  096A  35C0               	lslf	??___ftpack,f
  6487  096B  0DC1               	rlf	??___ftpack+1,f
  6488  096C  0DC2               	rlf	??___ftpack+2,f
  6489  096D  0B89               	decfsz	9,f
  6490  096E  296A               	goto	u3425
  6491  096F  0840               	movf	??___ftpack,w
  6492  0970  04BB               	iorwf	___ftpack@arg,f
  6493  0971  0841               	movf	??___ftpack+1,w
  6494  0972  04BC               	iorwf	___ftpack@arg+1,f
  6495  0973  0842               	movf	??___ftpack+2,w
  6496  0974  04BD               	iorwf	___ftpack@arg+2,f
  6497  0975  083F               	movf	___ftpack@sign,w
  6498  0976  1903               	btfsc	3,2
  6499  0977  0008               	return
  6500  0978  17BD               	bsf	___ftpack@arg+2,7
  6501  0979  0008               	return
  6502  097A                     __end_of___ftpack:	
  6503                           
  6504                           	psect	text18
  6505  167D                     __ptext18:	
  6506 ;; *************** function _OLED_Write_Integer *****************
  6507 ;; Defined at:
  6508 ;;		line 299 in file "oled.c"
  6509 ;; Parameters:    Size  Location     Type
  6510 ;;  i               1    wreg     unsigned char 
  6511 ;; Auto vars:     Size  Location     Type
  6512 ;;  i               1   29[BANK1 ] unsigned char 
  6513 ;;  status          2   31[BANK1 ] int 
  6514 ;;  buff11          1   30[BANK1 ] PTR unsigned char 
  6515 ;;		 -> OLED_Write_Integer@status(2), main@status(2), 
  6516 ;; Return value:  Size  Location     Type
  6517 ;;                  1    wreg      void 
  6518 ;; Registers used:
  6519 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6520 ;; Tracked objects:
  6521 ;;		On entry : 0/0
  6522 ;;		On exit  : 0/0
  6523 ;;		Unchanged: 0/0
  6524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6526 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6527 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6528 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  6529 ;;Total ram usage:        7 bytes
  6530 ;; Hardware stack levels used:    1
  6531 ;; Hardware stack levels required when called:    9
  6532 ;; This function calls:
  6533 ;;		_OLED_Write_String
  6534 ;;		_itoa
  6535 ;; This function is called by:
  6536 ;;		_main
  6537 ;; This function uses a non-reentrant model
  6538 ;;
  6539                           
  6540                           
  6541                           ;psect for function _OLED_Write_Integer
  6542  167D                     _OLED_Write_Integer:	
  6543                           
  6544                           ;incstack = 0
  6545                           ; Regs used in _OLED_Write_Integer: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6546                           ;OLED_Write_Integer@i stored from wreg
  6547  167D  0021               	movlb	1	; select bank1
  6548  167E  00BD               	movwf	OLED_Write_Integer@i^(0+128)
  6549                           
  6550                           ;oled.c: 301: char* buff11;
  6551                           ;oled.c: 302: int status;
  6552                           ;oled.c: 304: buff11 = itoa(&status, i, 10);
  6553  167F  083D               	movf	OLED_Write_Integer@i^(0+128),w
  6554  1680  00BA               	movwf	??_OLED_Write_Integer^(0+128)
  6555  1681  01BB               	clrf	(??_OLED_Write_Integer^(0+128)+1)
  6556  1682  083A               	movf	??_OLED_Write_Integer^(0+128),w
  6557  1683  00A8               	movwf	itoa@val^(0+128)
  6558  1684  083B               	movf	(??_OLED_Write_Integer+1)^(0+128),w
  6559  1685  00A9               	movwf	(itoa@val+1)^(0+128)
  6560  1686  300A               	movlw	10
  6561  1687  00AA               	movwf	itoa@base^(0+128)
  6562  1688  3000               	movlw	0
  6563  1689  00AB               	movwf	(itoa@base^(0+128)+1)
  6564  168A  30BF               	movlw	(low (OLED_Write_Integer@status| 0))& (0+255)
  6565  168B  3196  26A1  3196   	fcall	_itoa
  6566  168E  0021               	movlb	1	; select bank1
  6567  168F  00BC               	movwf	(??_OLED_Write_Integer+2)^(0+128)
  6568  1690  083C               	movf	(??_OLED_Write_Integer+2)^(0+128),w
  6569  1691  00BE               	movwf	OLED_Write_Integer@buff11^(0+128)
  6570                           
  6571                           ;oled.c: 307: OLED_Write_String(buff11);
  6572  1692  083E               	movf	OLED_Write_Integer@buff11^(0+128),w
  6573  1693  00B8               	movwf	OLED_Write_String@s^(0+128)
  6574  1694  3000               	movlw	0
  6575  1695  00B9               	movwf	(OLED_Write_String@s+1)^(0+128)
  6576  1696  3188  2000  3196   	fcall	_OLED_Write_String
  6577                           
  6578                           ;oled.c: 308: OLED_Write_String( "     " );
  6579  1699  30F4               	movlw	low (STR_13| (0+32768))
  6580  169A  0021               	movlb	1	; select bank1
  6581  169B  00B8               	movwf	OLED_Write_String@s^(0+128)
  6582  169C  3083               	movlw	high (STR_13| (0+32768))
  6583  169D  00B9               	movwf	(OLED_Write_String@s^(0+128)+1)
  6584  169E  3188  2000         	fcall	_OLED_Write_String
  6585  16A0  0008               	return
  6586  16A1                     __end_of_OLED_Write_Integer:	
  6587                           
  6588                           	psect	text19
  6589  16A1                     __ptext19:	
  6590 ;; *************** function _itoa *****************
  6591 ;; Defined at:
  6592 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\itoa.c"
  6593 ;; Parameters:    Size  Location     Type
  6594 ;;  buf             1    wreg     PTR unsigned char 
  6595 ;;		 -> OLED_Write_Integer@status(2), main@status(2), 
  6596 ;;  val             2    8[BANK1 ] int 
  6597 ;;  base            2   10[BANK1 ] int 
  6598 ;; Auto vars:     Size  Location     Type
  6599 ;;  buf             1   14[BANK1 ] PTR unsigned char 
  6600 ;;		 -> OLED_Write_Integer@status(2), main@status(2), 
  6601 ;;  cp              1   13[BANK1 ] PTR unsigned char 
  6602 ;;		 -> OLED_Write_Integer@status(2), main@status(2), 
  6603 ;; Return value:  Size  Location     Type
  6604 ;;                  1    wreg      PTR unsigned char 
  6605 ;; Registers used:
  6606 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6607 ;; Tracked objects:
  6608 ;;		On entry : 0/0
  6609 ;;		On exit  : 0/0
  6610 ;;		Unchanged: 0/0
  6611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6612 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6613 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6614 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6615 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  6616 ;;Total ram usage:        7 bytes
  6617 ;; Hardware stack levels used:    1
  6618 ;; Hardware stack levels required when called:    8
  6619 ;; This function calls:
  6620 ;;		_utoa
  6621 ;; This function is called by:
  6622 ;;		_main
  6623 ;;		_OLED_Write_Integer
  6624 ;; This function uses a non-reentrant model
  6625 ;;
  6626                           
  6627                           
  6628                           ;psect for function _itoa
  6629  16A1                     _itoa:	
  6630                           
  6631                           ;incstack = 0
  6632                           ; Regs used in _itoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6633                           ;itoa@buf stored from wreg
  6634  16A1  0021               	movlb	1	; select bank1
  6635  16A2  00AE               	movwf	itoa@buf^(0+128)
  6636  16A3  082E               	movf	itoa@buf^(0+128),w
  6637  16A4  00AC               	movwf	??_itoa^(0+128)
  6638  16A5  082C               	movf	??_itoa^(0+128),w
  6639  16A6  00AD               	movwf	itoa@cp^(0+128)
  6640  16A7  1FA9               	btfss	(itoa@val+1)^(0+128),7
  6641  16A8  2EB9               	goto	l3041
  6642  16A9  302D               	movlw	45
  6643  16AA  00AC               	movwf	??_itoa^(0+128)
  6644  16AB  082E               	movf	itoa@buf^(0+128),w
  6645  16AC  0086               	movwf	6
  6646  16AD  0187               	clrf	7
  6647  16AE  082C               	movf	??_itoa^(0+128),w
  6648  16AF  0081               	movwf	1
  6649  16B0  3001               	movlw	1
  6650  16B1  00AC               	movwf	??_itoa^(0+128)
  6651  16B2  082C               	movf	??_itoa^(0+128),w
  6652  16B3  07AE               	addwf	itoa@buf^(0+128),f
  6653  16B4  09A8               	comf	itoa@val^(0+128),f
  6654  16B5  09A9               	comf	(itoa@val+1)^(0+128),f
  6655  16B6  0AA8               	incf	itoa@val^(0+128),f
  6656  16B7  1903               	skipnz
  6657  16B8  0AA9               	incf	(itoa@val+1)^(0+128),f
  6658  16B9                     l3041:	
  6659  16B9  0829               	movf	(itoa@val+1)^(0+128),w
  6660  16BA  00A1               	movwf	(utoa@val+1)^(0+128)
  6661  16BB  0828               	movf	itoa@val^(0+128),w
  6662  16BC  00A0               	movwf	utoa@val^(0+128)
  6663  16BD  082B               	movf	(itoa@base+1)^(0+128),w
  6664  16BE  00A3               	movwf	(utoa@base+1)^(0+128)
  6665  16BF  082A               	movf	itoa@base^(0+128),w
  6666  16C0  00A2               	movwf	utoa@base^(0+128)
  6667  16C1  082E               	movf	itoa@buf^(0+128),w
  6668  16C2  318B  236A         	fcall	_utoa
  6669  16C4  0021               	movlb	1	; select bank1
  6670  16C5  082D               	movf	itoa@cp^(0+128),w
  6671  16C6  0008               	return
  6672  16C7                     __end_of_itoa:	
  6673                           
  6674                           	psect	text20
  6675  0B6A                     __ptext20:	
  6676 ;; *************** function _utoa *****************
  6677 ;; Defined at:
  6678 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\itoa.c"
  6679 ;; Parameters:    Size  Location     Type
  6680 ;;  buf             1    wreg     PTR unsigned char 
  6681 ;;		 -> OLED_Write_Integer@status(2), main@status(2), 
  6682 ;;  val             2    0[BANK1 ] unsigned int 
  6683 ;;  base            2    2[BANK1 ] int 
  6684 ;; Auto vars:     Size  Location     Type
  6685 ;;  buf             1    7[BANK1 ] PTR unsigned char 
  6686 ;;		 -> OLED_Write_Integer@status(2), main@status(2), 
  6687 ;;  v               2    4[BANK1 ] unsigned int 
  6688 ;;  c               1    6[BANK1 ] unsigned char 
  6689 ;; Return value:  Size  Location     Type
  6690 ;;                  1    wreg      PTR unsigned char 
  6691 ;; Registers used:
  6692 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6693 ;; Tracked objects:
  6694 ;;		On entry : 0/0
  6695 ;;		On exit  : 0/0
  6696 ;;		Unchanged: 0/0
  6697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6698 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6699 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6700 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6701 ;;      Totals:         0       1       8       0       0       0       0       0       0       0       0       0       
      +0       0
  6702 ;;Total ram usage:        9 bytes
  6703 ;; Hardware stack levels used:    1
  6704 ;; Hardware stack levels required when called:    7
  6705 ;; This function calls:
  6706 ;;		___lwdiv
  6707 ;;		___lwmod
  6708 ;; This function is called by:
  6709 ;;		_itoa
  6710 ;; This function uses a non-reentrant model
  6711 ;;
  6712                           
  6713                           
  6714                           ;psect for function _utoa
  6715  0B6A                     _utoa:	
  6716                           
  6717                           ;incstack = 0
  6718                           ; Regs used in _utoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6719                           ;utoa@buf stored from wreg
  6720  0B6A  0021               	movlb	1	; select bank1
  6721  0B6B  00A7               	movwf	utoa@buf^(0+128)
  6722  0B6C  0821               	movf	(utoa@val+1)^(0+128),w
  6723  0B6D  00A5               	movwf	(utoa@v+1)^(0+128)
  6724  0B6E  0820               	movf	utoa@val^(0+128),w
  6725  0B6F  00A4               	movwf	utoa@v^(0+128)
  6726  0B70                     l2973:	
  6727  0B70  0823               	movf	(utoa@base+1)^(0+128),w
  6728  0B71  0020               	movlb	0	; select bank0
  6729  0B72  00BC               	movwf	___lwdiv@divisor+1
  6730  0B73  0021               	movlb	1	; select bank1
  6731  0B74  0822               	movf	utoa@base^(0+128),w
  6732  0B75  0020               	movlb	0	; select bank0
  6733  0B76  00BB               	movwf	___lwdiv@divisor
  6734  0B77  0021               	movlb	1	; select bank1
  6735  0B78  0825               	movf	(utoa@v+1)^(0+128),w
  6736  0B79  0020               	movlb	0	; select bank0
  6737  0B7A  00BE               	movwf	___lwdiv@dividend+1
  6738  0B7B  0021               	movlb	1	; select bank1
  6739  0B7C  0824               	movf	utoa@v^(0+128),w
  6740  0B7D  0020               	movlb	0	; select bank0
  6741  0B7E  00BD               	movwf	___lwdiv@dividend
  6742  0B7F  3188  2017  318B   	fcall	___lwdiv
  6743  0B82  0020               	movlb	0	; select bank0
  6744  0B83  083C               	movf	?___lwdiv+1,w
  6745  0B84  0021               	movlb	1	; select bank1
  6746  0B85  00A5               	movwf	(utoa@v+1)^(0+128)
  6747  0B86  0020               	movlb	0	; select bank0
  6748  0B87  083B               	movf	?___lwdiv,w
  6749  0B88  0021               	movlb	1	; select bank1
  6750  0B89  00A4               	movwf	utoa@v^(0+128)
  6751  0B8A  3001               	movlw	1
  6752  0B8B  0020               	movlb	0	; select bank0
  6753  0B8C  00C3               	movwf	??_utoa
  6754  0B8D  0843               	movf	??_utoa,w
  6755  0B8E  0021               	movlb	1	; select bank1
  6756  0B8F  07A7               	addwf	utoa@buf^(0+128),f
  6757  0B90  0824               	movf	utoa@v^(0+128),w
  6758  0B91  0425               	iorwf	(utoa@v+1)^(0+128),w
  6759  0B92  1D03               	btfss	3,2
  6760  0B93  2B70               	goto	l2973
  6761  0B94  0827               	movf	utoa@buf^(0+128),w
  6762  0B95  0086               	movwf	6
  6763  0B96  0187               	clrf	7
  6764  0B97  0181               	clrf	1
  6765  0B98  3001               	movlw	1
  6766  0B99  02A7               	subwf	utoa@buf^(0+128),f
  6767  0B9A                     l2983:	
  6768  0B9A  0823               	movf	(utoa@base+1)^(0+128),w
  6769  0B9B  0020               	movlb	0	; select bank0
  6770  0B9C  00BC               	movwf	___lwmod@divisor+1
  6771  0B9D  0021               	movlb	1	; select bank1
  6772  0B9E  0822               	movf	utoa@base^(0+128),w
  6773  0B9F  0020               	movlb	0	; select bank0
  6774  0BA0  00BB               	movwf	___lwmod@divisor
  6775  0BA1  0021               	movlb	1	; select bank1
  6776  0BA2  0821               	movf	(utoa@val+1)^(0+128),w
  6777  0BA3  0020               	movlb	0	; select bank0
  6778  0BA4  00BE               	movwf	___lwmod@dividend+1
  6779  0BA5  0021               	movlb	1	; select bank1
  6780  0BA6  0820               	movf	utoa@val^(0+128),w
  6781  0BA7  0020               	movlb	0	; select bank0
  6782  0BA8  00BD               	movwf	___lwmod@dividend
  6783  0BA9  3197  2740  318B   	fcall	___lwmod
  6784  0BAC  0020               	movlb	0	; select bank0
  6785  0BAD  083B               	movf	?___lwmod,w
  6786  0BAE  00C3               	movwf	??_utoa
  6787  0BAF  0843               	movf	??_utoa,w
  6788  0BB0  0021               	movlb	1	; select bank1
  6789  0BB1  00A6               	movwf	utoa@c^(0+128)
  6790  0BB2  0823               	movf	(utoa@base+1)^(0+128),w
  6791  0BB3  0020               	movlb	0	; select bank0
  6792  0BB4  00BC               	movwf	___lwdiv@divisor+1
  6793  0BB5  0021               	movlb	1	; select bank1
  6794  0BB6  0822               	movf	utoa@base^(0+128),w
  6795  0BB7  0020               	movlb	0	; select bank0
  6796  0BB8  00BB               	movwf	___lwdiv@divisor
  6797  0BB9  0021               	movlb	1	; select bank1
  6798  0BBA  0821               	movf	(utoa@val+1)^(0+128),w
  6799  0BBB  0020               	movlb	0	; select bank0
  6800  0BBC  00BE               	movwf	___lwdiv@dividend+1
  6801  0BBD  0021               	movlb	1	; select bank1
  6802  0BBE  0820               	movf	utoa@val^(0+128),w
  6803  0BBF  0020               	movlb	0	; select bank0
  6804  0BC0  00BD               	movwf	___lwdiv@dividend
  6805  0BC1  3188  2017  318B   	fcall	___lwdiv
  6806  0BC4  0020               	movlb	0	; select bank0
  6807  0BC5  083C               	movf	?___lwdiv+1,w
  6808  0BC6  0021               	movlb	1	; select bank1
  6809  0BC7  00A1               	movwf	(utoa@val+1)^(0+128)
  6810  0BC8  0020               	movlb	0	; select bank0
  6811  0BC9  083B               	movf	?___lwdiv,w
  6812  0BCA  0021               	movlb	1	; select bank1
  6813  0BCB  00A0               	movwf	utoa@val^(0+128)
  6814  0BCC  300A               	movlw	10
  6815  0BCD  0226               	subwf	utoa@c^(0+128),w
  6816  0BCE  1C03               	skipc
  6817  0BCF  2BD6               	goto	l637
  6818  0BD0  3007               	movlw	7
  6819  0BD1  0020               	movlb	0	; select bank0
  6820  0BD2  00C3               	movwf	??_utoa
  6821  0BD3  0843               	movf	??_utoa,w
  6822  0BD4  0021               	movlb	1	; select bank1
  6823  0BD5  07A6               	addwf	utoa@c^(0+128),f
  6824  0BD6                     l637:	
  6825  0BD6  3030               	movlw	48
  6826  0BD7  0020               	movlb	0	; select bank0
  6827  0BD8  00C3               	movwf	??_utoa
  6828  0BD9  0843               	movf	??_utoa,w
  6829  0BDA  0021               	movlb	1	; select bank1
  6830  0BDB  07A6               	addwf	utoa@c^(0+128),f
  6831  0BDC  0826               	movf	utoa@c^(0+128),w
  6832  0BDD  0020               	movlb	0	; select bank0
  6833  0BDE  00C3               	movwf	??_utoa
  6834  0BDF  0021               	movlb	1	; select bank1
  6835  0BE0  0827               	movf	utoa@buf^(0+128),w
  6836  0BE1  0086               	movwf	6
  6837  0BE2  0187               	clrf	7
  6838  0BE3  0020               	movlb	0	; select bank0
  6839  0BE4  0843               	movf	??_utoa,w
  6840  0BE5  0081               	movwf	1
  6841  0BE6  3001               	movlw	1
  6842  0BE7  0021               	movlb	1	; select bank1
  6843  0BE8  02A7               	subwf	utoa@buf^(0+128),f
  6844  0BE9  0820               	movf	utoa@val^(0+128),w
  6845  0BEA  0421               	iorwf	(utoa@val+1)^(0+128),w
  6846  0BEB  1D03               	btfss	3,2
  6847  0BEC  2B9A               	goto	l2983
  6848                           
  6849                           ;	Return value of _utoa is never used
  6850  0BED  3001               	movlw	1
  6851  0BEE  0020               	movlb	0	; select bank0
  6852  0BEF  00C3               	movwf	??_utoa
  6853  0BF0  0843               	movf	??_utoa,w
  6854  0BF1  0021               	movlb	1	; select bank1
  6855  0BF2  07A7               	addwf	utoa@buf^(0+128),f
  6856  0BF3  0008               	return
  6857  0BF4                     __end_of_utoa:	
  6858                           
  6859                           	psect	text21
  6860  1740                     __ptext21:	
  6861 ;; *************** function ___lwmod *****************
  6862 ;; Defined at:
  6863 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
  6864 ;; Parameters:    Size  Location     Type
  6865 ;;  divisor         2   27[BANK0 ] unsigned int 
  6866 ;;  dividend        2   29[BANK0 ] unsigned int 
  6867 ;; Auto vars:     Size  Location     Type
  6868 ;;  counter         1   32[BANK0 ] unsigned char 
  6869 ;; Return value:  Size  Location     Type
  6870 ;;                  2   27[BANK0 ] unsigned int 
  6871 ;; Registers used:
  6872 ;;		wreg, status,2, status,0
  6873 ;; Tracked objects:
  6874 ;;		On entry : 0/0
  6875 ;;		On exit  : 0/0
  6876 ;;		Unchanged: 0/0
  6877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6878 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6879 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6880 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6881 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6882 ;;Total ram usage:        6 bytes
  6883 ;; Hardware stack levels used:    1
  6884 ;; Hardware stack levels required when called:    6
  6885 ;; This function calls:
  6886 ;;		Nothing
  6887 ;; This function is called by:
  6888 ;;		_utoa
  6889 ;; This function uses a non-reentrant model
  6890 ;;
  6891                           
  6892                           
  6893                           ;psect for function ___lwmod
  6894  1740                     ___lwmod:	
  6895                           
  6896                           ;incstack = 0
  6897                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6898  1740  0020               	movlb	0	; select bank0
  6899  1741  083B               	movf	___lwmod@divisor,w
  6900  1742  043C               	iorwf	___lwmod@divisor+1,w
  6901  1743  1903               	btfsc	3,2
  6902  1744  2F68               	goto	l2901
  6903  1745  01C0               	clrf	___lwmod@counter
  6904  1746  0AC0               	incf	___lwmod@counter,f
  6905  1747                     l2891:	
  6906  1747  1BBC               	btfsc	___lwmod@divisor+1,7
  6907  1748  2F53               	goto	l2893
  6908  1749  3001               	movlw	1
  6909  174A                     u3215:	
  6910  174A  35BB               	lslf	___lwmod@divisor,f
  6911  174B  0DBC               	rlf	___lwmod@divisor+1,f
  6912  174C  0B89               	decfsz	9,f
  6913  174D  2F4A               	goto	u3215
  6914  174E  3001               	movlw	1
  6915  174F  00BF               	movwf	??___lwmod
  6916  1750  083F               	movf	??___lwmod,w
  6917  1751  07C0               	addwf	___lwmod@counter,f
  6918  1752  2F47               	goto	l2891
  6919  1753                     l2893:	
  6920  1753  083C               	movf	___lwmod@divisor+1,w
  6921  1754  023E               	subwf	___lwmod@dividend+1,w
  6922  1755  1D03               	skipz
  6923  1756  2F59               	goto	u3235
  6924  1757  083B               	movf	___lwmod@divisor,w
  6925  1758  023D               	subwf	___lwmod@dividend,w
  6926  1759                     u3235:	
  6927  1759  1C03               	skipc
  6928  175A  2F5F               	goto	l2897
  6929  175B  083B               	movf	___lwmod@divisor,w
  6930  175C  02BD               	subwf	___lwmod@dividend,f
  6931  175D  083C               	movf	___lwmod@divisor+1,w
  6932  175E  3BBE               	subwfb	___lwmod@dividend+1,f
  6933  175F                     l2897:	
  6934  175F  3001               	movlw	1
  6935  1760                     u3245:	
  6936  1760  36BC               	lsrf	___lwmod@divisor+1,f
  6937  1761  0CBB               	rrf	___lwmod@divisor,f
  6938  1762  0B89               	decfsz	9,f
  6939  1763  2F60               	goto	u3245
  6940  1764  3001               	movlw	1
  6941  1765  02C0               	subwf	___lwmod@counter,f
  6942  1766  1D03               	btfss	3,2
  6943  1767  2F53               	goto	l2893
  6944  1768                     l2901:	
  6945  1768  083E               	movf	___lwmod@dividend+1,w
  6946  1769  00BC               	movwf	?___lwmod+1
  6947  176A  083D               	movf	___lwmod@dividend,w
  6948  176B  00BB               	movwf	?___lwmod
  6949  176C  0008               	return
  6950  176D                     __end_of___lwmod:	
  6951                           
  6952                           	psect	text22
  6953  0817                     __ptext22:	
  6954 ;; *************** function ___lwdiv *****************
  6955 ;; Defined at:
  6956 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  6957 ;; Parameters:    Size  Location     Type
  6958 ;;  divisor         2   27[BANK0 ] unsigned int 
  6959 ;;  dividend        2   29[BANK0 ] unsigned int 
  6960 ;; Auto vars:     Size  Location     Type
  6961 ;;  quotient        2   33[BANK0 ] unsigned int 
  6962 ;;  counter         1   32[BANK0 ] unsigned char 
  6963 ;; Return value:  Size  Location     Type
  6964 ;;                  2   27[BANK0 ] unsigned int 
  6965 ;; Registers used:
  6966 ;;		wreg, status,2, status,0
  6967 ;; Tracked objects:
  6968 ;;		On entry : 0/0
  6969 ;;		On exit  : 0/0
  6970 ;;		Unchanged: 0/0
  6971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6972 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6973 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6974 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6975 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6976 ;;Total ram usage:        8 bytes
  6977 ;; Hardware stack levels used:    1
  6978 ;; Hardware stack levels required when called:    6
  6979 ;; This function calls:
  6980 ;;		Nothing
  6981 ;; This function is called by:
  6982 ;;		_utoa
  6983 ;; This function uses a non-reentrant model
  6984 ;;
  6985                           
  6986                           
  6987                           ;psect for function ___lwdiv
  6988  0817                     ___lwdiv:	
  6989                           
  6990                           ;incstack = 0
  6991                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6992  0817  0020               	movlb	0	; select bank0
  6993  0818  01C1               	clrf	___lwdiv@quotient
  6994  0819  01C2               	clrf	___lwdiv@quotient+1
  6995  081A  083B               	movf	___lwdiv@divisor,w
  6996  081B  043C               	iorwf	___lwdiv@divisor+1,w
  6997  081C  1903               	btfsc	3,2
  6998  081D  2847               	goto	l2879
  6999  081E  01C0               	clrf	___lwdiv@counter
  7000  081F  0AC0               	incf	___lwdiv@counter,f
  7001  0820                     l2867:	
  7002  0820  1BBC               	btfsc	___lwdiv@divisor+1,7
  7003  0821  282C               	goto	l2869
  7004  0822  3001               	movlw	1
  7005  0823                     u3145:	
  7006  0823  35BB               	lslf	___lwdiv@divisor,f
  7007  0824  0DBC               	rlf	___lwdiv@divisor+1,f
  7008  0825  0B89               	decfsz	9,f
  7009  0826  2823               	goto	u3145
  7010  0827  3001               	movlw	1
  7011  0828  00BF               	movwf	??___lwdiv
  7012  0829  083F               	movf	??___lwdiv,w
  7013  082A  07C0               	addwf	___lwdiv@counter,f
  7014  082B  2820               	goto	l2867
  7015  082C                     l2869:	
  7016  082C  3001               	movlw	1
  7017  082D                     u3165:	
  7018  082D  35C1               	lslf	___lwdiv@quotient,f
  7019  082E  0DC2               	rlf	___lwdiv@quotient+1,f
  7020  082F  0B89               	decfsz	9,f
  7021  0830  282D               	goto	u3165
  7022  0831  083C               	movf	___lwdiv@divisor+1,w
  7023  0832  023E               	subwf	___lwdiv@dividend+1,w
  7024  0833  1D03               	skipz
  7025  0834  2837               	goto	u3175
  7026  0835  083B               	movf	___lwdiv@divisor,w
  7027  0836  023D               	subwf	___lwdiv@dividend,w
  7028  0837                     u3175:	
  7029  0837  1C03               	skipc
  7030  0838  283E               	goto	l2875
  7031  0839  083B               	movf	___lwdiv@divisor,w
  7032  083A  02BD               	subwf	___lwdiv@dividend,f
  7033  083B  083C               	movf	___lwdiv@divisor+1,w
  7034  083C  3BBE               	subwfb	___lwdiv@dividend+1,f
  7035  083D  1441               	bsf	___lwdiv@quotient,0
  7036  083E                     l2875:	
  7037  083E  3001               	movlw	1
  7038  083F                     u3185:	
  7039  083F  36BC               	lsrf	___lwdiv@divisor+1,f
  7040  0840  0CBB               	rrf	___lwdiv@divisor,f
  7041  0841  0B89               	decfsz	9,f
  7042  0842  283F               	goto	u3185
  7043  0843  3001               	movlw	1
  7044  0844  02C0               	subwf	___lwdiv@counter,f
  7045  0845  1D03               	btfss	3,2
  7046  0846  282C               	goto	l2869
  7047  0847                     l2879:	
  7048  0847  0842               	movf	___lwdiv@quotient+1,w
  7049  0848  00BC               	movwf	?___lwdiv+1
  7050  0849  0841               	movf	___lwdiv@quotient,w
  7051  084A  00BB               	movwf	?___lwdiv
  7052  084B  0008               	return
  7053  084C                     __end_of___lwdiv:	
  7054                           
  7055                           	psect	text23
  7056  0800                     __ptext23:	
  7057 ;; *************** function _OLED_Write_String *****************
  7058 ;; Defined at:
  7059 ;;		line 284 in file "oled.c"
  7060 ;; Parameters:    Size  Location     Type
  7061 ;;  s               2   24[BANK1 ] PTR unsigned char 
  7062 ;;		 -> ftoa@buf(17), STR_14(6), STR_13(6), OLED_Write_Integer@status(2), 
  7063 ;;		 -> STR_11(18), STR_9(15), STR_7(11), STR_4(13), 
  7064 ;;		 -> buf(50), main@status(2), STR_2(13), STR_1(13), 
  7065 ;; Auto vars:     Size  Location     Type
  7066 ;;		None
  7067 ;; Return value:  Size  Location     Type
  7068 ;;                  1    wreg      void 
  7069 ;; Registers used:
  7070 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7071 ;; Tracked objects:
  7072 ;;		On entry : 0/0
  7073 ;;		On exit  : 0/0
  7074 ;;		Unchanged: 0/0
  7075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7076 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7078 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7079 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7080 ;;Total ram usage:        3 bytes
  7081 ;; Hardware stack levels used:    1
  7082 ;; Hardware stack levels required when called:    8
  7083 ;; This function calls:
  7084 ;;		_OLED_PutChar
  7085 ;; This function is called by:
  7086 ;;		_main
  7087 ;;		_server_Initialize
  7088 ;;		_OLED_Write_Integer
  7089 ;;		_OLED_Write_Float
  7090 ;; This function uses a non-reentrant model
  7091 ;;
  7092                           
  7093                           
  7094                           ;psect for function _OLED_Write_String
  7095  0800                     _OLED_Write_String:	
  7096  0800                     l3029:	
  7097                           ;oled.c: 286: while (*s) OLED_PutChar( *s++);
  7098                           
  7099                           ;incstack = 0
  7100                           ; Regs used in _OLED_Write_String: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7101                           
  7102  0800  0021               	movlb	1	; select bank1
  7103  0801  0838               	movf	OLED_Write_String@s^(0+128),w
  7104  0802  0084               	movwf	4
  7105  0803  0839               	movf	(OLED_Write_String@s+1)^(0+128),w
  7106  0804  0085               	movwf	5
  7107  0805  0012               	moviw fsr0++
  7108  0806  1903               	btfsc	3,2
  7109  0807  0008               	return
  7110  0808  0021               	movlb	1	; select bank1
  7111  0809  0838               	movf	OLED_Write_String@s^(0+128),w
  7112  080A  0084               	movwf	4
  7113  080B  0839               	movf	(OLED_Write_String@s+1)^(0+128),w
  7114  080C  0085               	movwf	5
  7115  080D  0800               	movf	0,w	;code access
  7116  080E  318A  225F  3188   	fcall	_OLED_PutChar
  7117  0811  3001               	movlw	1
  7118  0812  0021               	movlb	1	; select bank1
  7119  0813  07B8               	addwf	OLED_Write_String@s^(0+128),f
  7120  0814  3000               	movlw	0
  7121  0815  3DB9               	addwfc	(OLED_Write_String@s+1)^(0+128),f
  7122  0816  2800               	goto	l3029
  7123  0817                     __end_of_OLED_Write_String:	
  7124                           
  7125                           	psect	text24
  7126  0A5F                     __ptext24:	
  7127 ;; *************** function _OLED_PutChar *****************
  7128 ;; Defined at:
  7129 ;;		line 229 in file "oled.c"
  7130 ;; Parameters:    Size  Location     Type
  7131 ;;  ch              1    wreg     unsigned char 
  7132 ;; Auto vars:     Size  Location     Type
  7133 ;;  ch              1   21[BANK1 ] unsigned char 
  7134 ;;  bytes           9   10[BANK1 ] unsigned char [9]
  7135 ;;  i               2   22[BANK1 ] int 
  7136 ;;  base            2   19[BANK1 ] PTR const unsigned char 
  7137 ;;		 -> OledFont(768), 
  7138 ;; Return value:  Size  Location     Type
  7139 ;;                  1    wreg      void 
  7140 ;; Registers used:
  7141 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7142 ;; Tracked objects:
  7143 ;;		On entry : 0/0
  7144 ;;		On exit  : 0/0
  7145 ;;		Unchanged: 0/0
  7146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7148 ;;      Locals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
  7149 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  7150 ;;      Totals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0
  7151 ;;Total ram usage:       20 bytes
  7152 ;; Hardware stack levels used:    1
  7153 ;; Hardware stack levels required when called:    7
  7154 ;; This function calls:
  7155 ;;		_Send_I2C_Data
  7156 ;;		_Send_I2C_StartBit
  7157 ;;		_Send_I2C_StopBit
  7158 ;;		_memmove
  7159 ;; This function is called by:
  7160 ;;		_OLED_Clear
  7161 ;;		_OLED_Write_String
  7162 ;; This function uses a non-reentrant model
  7163 ;;
  7164                           
  7165                           
  7166                           ;psect for function _OLED_PutChar
  7167  0A5F                     _OLED_PutChar:	
  7168                           
  7169                           ;incstack = 0
  7170                           ; Regs used in _OLED_PutChar: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7171                           ;OLED_PutChar@ch stored from wreg
  7172  0A5F  0021               	movlb	1	; select bank1
  7173  0A60  00B5               	movwf	OLED_PutChar@ch^(0+128)
  7174                           
  7175                           ;oled.c: 231: if ( ( ch < 32 ) || ( ch > 127 ) ){
  7176  0A61  3020               	movlw	32
  7177  0A62  0235               	subwf	OLED_PutChar@ch^(0+128),w
  7178  0A63  1C03               	skipc
  7179  0A64  2A69               	goto	l2911
  7180  0A65  3080               	movlw	128
  7181  0A66  0235               	subwf	OLED_PutChar@ch^(0+128),w
  7182  0A67  1C03               	skipc
  7183  0A68  2A6D               	goto	l2913
  7184  0A69                     l2911:	
  7185                           
  7186                           ;oled.c: 232: ch = ' ';
  7187  0A69  3020               	movlw	32
  7188  0A6A  00A4               	movwf	??_OLED_PutChar^(0+128)
  7189  0A6B  0824               	movf	??_OLED_PutChar^(0+128),w
  7190  0A6C  00B5               	movwf	OLED_PutChar@ch^(0+128)
  7191  0A6D                     l2913:	
  7192                           
  7193                           ;oled.c: 233: }
  7194                           ;oled.c: 235: const uint8_t *base = &OledFont[ch - 32][0];
  7195  0A6D  0835               	movf	OLED_PutChar@ch^(0+128),w
  7196  0A6E  00A4               	movwf	??_OLED_PutChar^(0+128)
  7197  0A6F  01A5               	clrf	(??_OLED_PutChar^(0+128)+1)
  7198  0A70  35A4               	lslf	??_OLED_PutChar^(0+128),f
  7199  0A71  0DA5               	rlf	(??_OLED_PutChar^(0+128)+1),f
  7200  0A72  35A4               	lslf	??_OLED_PutChar^(0+128),f
  7201  0A73  0DA5               	rlf	(??_OLED_PutChar^(0+128)+1),f
  7202  0A74  35A4               	lslf	??_OLED_PutChar^(0+128),f
  7203  0A75  0DA5               	rlf	(??_OLED_PutChar^(0+128)+1),f
  7204  0A76  0824               	movf	??_OLED_PutChar^(0+128),w
  7205  0A77  3E00               	addlw	0
  7206  0A78  00A6               	movwf	(??_OLED_PutChar+2)^(0+128)
  7207  0A79  30FF               	movlw	255
  7208  0A7A  3D25               	addwfc	(??_OLED_PutChar+1)^(0+128),w
  7209  0A7B  00A7               	movwf	(??_OLED_PutChar+3)^(0+128)
  7210  0A7C  3053               	movlw	low (_OledFont| (0+32768))
  7211  0A7D  00A8               	movwf	(??_OLED_PutChar+4)^(0+128)
  7212  0A7E  3080               	movlw	high (_OledFont| (0+32768))
  7213  0A7F  00A9               	movwf	((??_OLED_PutChar+4)^(0+128)+1)
  7214  0A80  0826               	movf	(??_OLED_PutChar+2)^(0+128),w
  7215  0A81  0728               	addwf	(??_OLED_PutChar+4)^(0+128),w
  7216  0A82  00B3               	movwf	OLED_PutChar@base^(0+128)
  7217  0A83  0827               	movf	(??_OLED_PutChar+3)^(0+128),w
  7218  0A84  3D29               	addwfc	(??_OLED_PutChar+5)^(0+128),w
  7219  0A85  00B4               	movwf	(OLED_PutChar@base+1)^(0+128)
  7220                           
  7221                           ;oled.c: 237: uint8_t bytes[9];
  7222                           ;oled.c: 238: bytes[0] = 0x40;
  7223  0A86  3040               	movlw	64
  7224  0A87  00A4               	movwf	??_OLED_PutChar^(0+128)
  7225  0A88  0824               	movf	??_OLED_PutChar^(0+128),w
  7226  0A89  00AA               	movwf	OLED_PutChar@bytes^(0+128)
  7227                           
  7228                           ;oled.c: 239: memmove( bytes + 1, base, 8 );
  7229  0A8A  0834               	movf	(OLED_PutChar@base+1)^(0+128),w
  7230  0A8B  0020               	movlb	0	; select bank0
  7231  0A8C  00BC               	movwf	memmove@s1+1
  7232  0A8D  0021               	movlb	1	; select bank1
  7233  0A8E  0833               	movf	OLED_PutChar@base^(0+128),w
  7234  0A8F  0020               	movlb	0	; select bank0
  7235  0A90  00BB               	movwf	memmove@s1
  7236  0A91  3008               	movlw	8
  7237  0A92  00BD               	movwf	memmove@n
  7238  0A93  3000               	movlw	0
  7239  0A94  00BE               	movwf	memmove@n+1
  7240  0A95  30AB               	movlw	(low ((OLED_PutChar@bytes| 0+1)))& (0+255)
  7241  0A96  318A  22E1  318A   	fcall	_memmove
  7242                           
  7243                           ;oled.c: 241: Send_I2C_StartBit();
  7244  0A99  3195  255A  318A   	fcall	_Send_I2C_StartBit
  7245                           
  7246                           ;oled.c: 242: Send_I2C_Data(0x3C << 1);
  7247  0A9C  3078               	movlw	120
  7248  0A9D  0020               	movlb	0	; select bank0
  7249  0A9E  00BB               	movwf	Send_I2C_Data@databyte
  7250  0A9F  3000               	movlw	0
  7251  0AA0  00BC               	movwf	Send_I2C_Data@databyte+1
  7252  0AA1  3195  257B  318A   	fcall	_Send_I2C_Data
  7253                           
  7254                           ;oled.c: 243: Send_I2C_Data(0x40);
  7255  0AA4  3040               	movlw	64
  7256  0AA5  0020               	movlb	0	; select bank0
  7257  0AA6  00BB               	movwf	Send_I2C_Data@databyte
  7258  0AA7  3000               	movlw	0
  7259  0AA8  00BC               	movwf	Send_I2C_Data@databyte+1
  7260  0AA9  3195  257B  318A   	fcall	_Send_I2C_Data
  7261                           
  7262                           ;oled.c: 245: int i;
  7263                           ;oled.c: 247: for (i = 1; i <= 8; i++){
  7264  0AAC  3001               	movlw	1
  7265  0AAD  0021               	movlb	1	; select bank1
  7266  0AAE  00B6               	movwf	OLED_PutChar@i^(0+128)
  7267  0AAF  3000               	movlw	0
  7268  0AB0  00B7               	movwf	(OLED_PutChar@i^(0+128)+1)
  7269  0AB1  0837               	movf	(OLED_PutChar@i+1)^(0+128),w
  7270  0AB2  3A80               	xorlw	128
  7271  0AB3  00A4               	movwf	??_OLED_PutChar^(0+128)
  7272  0AB4  3080               	movlw	128
  7273  0AB5  0224               	subwf	??_OLED_PutChar^(0+128),w
  7274  0AB6  1D03               	skipz
  7275  0AB7  2ABA               	goto	u3305
  7276  0AB8  3009               	movlw	9
  7277  0AB9  0236               	subwf	OLED_PutChar@i^(0+128),w
  7278  0ABA                     u3305:	
  7279  0ABA  1803               	btfsc	3,0
  7280  0ABB  2ADE               	goto	l2937
  7281  0ABC                     l2931:	
  7282                           
  7283                           ;oled.c: 248: Send_I2C_Data(bytes[i]);
  7284  0ABC  0021               	movlb	1	; select bank1
  7285  0ABD  0836               	movf	OLED_PutChar@i^(0+128),w
  7286  0ABE  3EAA               	addlw	(low (OLED_PutChar@bytes| 0))& (0+255)
  7287  0ABF  0086               	movwf	6
  7288  0AC0  0187               	clrf	7
  7289  0AC1  0801               	movf	1,w
  7290  0AC2  00A4               	movwf	??_OLED_PutChar^(0+128)
  7291  0AC3  01A5               	clrf	(??_OLED_PutChar^(0+128)+1)
  7292  0AC4  0824               	movf	??_OLED_PutChar^(0+128),w
  7293  0AC5  0020               	movlb	0	; select bank0
  7294  0AC6  00BB               	movwf	Send_I2C_Data@databyte
  7295  0AC7  0021               	movlb	1	; select bank1
  7296  0AC8  0825               	movf	(??_OLED_PutChar+1)^(0+128),w
  7297  0AC9  0020               	movlb	0	; select bank0
  7298  0ACA  00BC               	movwf	Send_I2C_Data@databyte+1
  7299  0ACB  3195  257B  318A   	fcall	_Send_I2C_Data
  7300  0ACE  3001               	movlw	1
  7301  0ACF  0021               	movlb	1	; select bank1
  7302  0AD0  07B6               	addwf	OLED_PutChar@i^(0+128),f
  7303  0AD1  3000               	movlw	0
  7304  0AD2  3DB7               	addwfc	(OLED_PutChar@i+1)^(0+128),f
  7305  0AD3  0837               	movf	(OLED_PutChar@i+1)^(0+128),w
  7306  0AD4  3A80               	xorlw	128
  7307  0AD5  00A4               	movwf	??_OLED_PutChar^(0+128)
  7308  0AD6  3080               	movlw	128
  7309  0AD7  0224               	subwf	??_OLED_PutChar^(0+128),w
  7310  0AD8  1D03               	skipz
  7311  0AD9  2ADC               	goto	u3315
  7312  0ADA  3009               	movlw	9
  7313  0ADB  0236               	subwf	OLED_PutChar@i^(0+128),w
  7314  0ADC                     u3315:	
  7315  0ADC  1C03               	skipc
  7316  0ADD  2ABC               	goto	l2931
  7317  0ADE                     l2937:	
  7318                           
  7319                           ;oled.c: 249: }
  7320                           ;oled.c: 251: Send_I2C_StopBit();
  7321  0ADE  3195  2562         	fcall	_Send_I2C_StopBit
  7322  0AE0  0008               	return
  7323  0AE1                     __end_of_OLED_PutChar:	
  7324                           
  7325                           	psect	text25
  7326  0AE1                     __ptext25:	
  7327 ;; *************** function _memmove *****************
  7328 ;; Defined at:
  7329 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\memmove.c"
  7330 ;; Parameters:    Size  Location     Type
  7331 ;;  d1              1    wreg     PTR void 
  7332 ;;		 -> OLED_PutChar@bytes(9), 
  7333 ;;  s1              2   27[BANK0 ] PTR const void 
  7334 ;;		 -> OledFont(768), 
  7335 ;;  n               2   29[BANK0 ] unsigned int 
  7336 ;; Auto vars:     Size  Location     Type
  7337 ;;  d1              1    0[BANK1 ] PTR void 
  7338 ;;		 -> OLED_PutChar@bytes(9), 
  7339 ;;  s               2    1[BANK1 ] PTR const unsigned char 
  7340 ;;		 -> OledFont(768), 
  7341 ;;  d               1    3[BANK1 ] PTR unsigned char 
  7342 ;;		 -> OLED_PutChar@bytes(9), 
  7343 ;; Return value:  Size  Location     Type
  7344 ;;                  1    wreg      PTR void 
  7345 ;; Registers used:
  7346 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  7347 ;; Tracked objects:
  7348 ;;		On entry : 0/0
  7349 ;;		On exit  : 0/0
  7350 ;;		Unchanged: 0/0
  7351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7352 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7353 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7354 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7355 ;;      Totals:         0       8       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7356 ;;Total ram usage:       12 bytes
  7357 ;; Hardware stack levels used:    1
  7358 ;; Hardware stack levels required when called:    6
  7359 ;; This function calls:
  7360 ;;		Nothing
  7361 ;; This function is called by:
  7362 ;;		_OLED_PutChar
  7363 ;; This function uses a non-reentrant model
  7364 ;;
  7365                           
  7366                           
  7367                           ;psect for function _memmove
  7368  0AE1                     _memmove:	
  7369                           
  7370                           ;incstack = 0
  7371                           ; Regs used in _memmove: [wreg-fsr1h+status,2+status,0+pclath]
  7372                           ;memmove@d1 stored from wreg
  7373  0AE1  0021               	movlb	1	; select bank1
  7374  0AE2  00A0               	movwf	memmove@d1^(0+128)
  7375  0AE3  0020               	movlb	0	; select bank0
  7376  0AE4  083C               	movf	memmove@s1+1,w
  7377  0AE5  0021               	movlb	1	; select bank1
  7378  0AE6  00A2               	movwf	(memmove@s+1)^(0+128)
  7379  0AE7  0020               	movlb	0	; select bank0
  7380  0AE8  083B               	movf	memmove@s1,w
  7381  0AE9  0021               	movlb	1	; select bank1
  7382  0AEA  00A1               	movwf	memmove@s^(0+128)
  7383  0AEB  0820               	movf	memmove@d1^(0+128),w
  7384  0AEC  0020               	movlb	0	; select bank0
  7385  0AED  00BF               	movwf	??_memmove
  7386  0AEE  083F               	movf	??_memmove,w
  7387  0AEF  0021               	movlb	1	; select bank1
  7388  0AF0  00A3               	movwf	memmove@d^(0+128)
  7389  0AF1  0823               	movf	memmove@d^(0+128),w
  7390  0AF2  0020               	movlb	0	; select bank0
  7391  0AF3  00BF               	movwf	??_memmove
  7392  0AF4  3000               	movlw	0
  7393  0AF5  00C0               	movwf	??_memmove+1
  7394  0AF6  0840               	movf	??_memmove+1,w
  7395  0AF7  0021               	movlb	1	; select bank1
  7396  0AF8  0222               	subwf	(memmove@s+1)^(0+128),w
  7397  0AF9  1D03               	skipz
  7398  0AFA  2AFF               	goto	u3085
  7399  0AFB  0020               	movlb	0	; select bank0
  7400  0AFC  083F               	movf	??_memmove,w
  7401  0AFD  0021               	movlb	1	; select bank1
  7402  0AFE  0221               	subwf	memmove@s^(0+128),w
  7403  0AFF                     u3085:	
  7404  0AFF  1803               	skipnc
  7405  0B00  2B45               	goto	l2847
  7406  0B01  0020               	movlb	0	; select bank0
  7407  0B02  083D               	movf	memmove@n,w
  7408  0B03  0021               	movlb	1	; select bank1
  7409  0B04  0721               	addwf	memmove@s^(0+128),w
  7410  0B05  0020               	movlb	0	; select bank0
  7411  0B06  00BF               	movwf	??_memmove
  7412  0B07  083E               	movf	memmove@n+1,w
  7413  0B08  0021               	movlb	1	; select bank1
  7414  0B09  3D22               	addwfc	(memmove@s+1)^(0+128),w
  7415  0B0A  0020               	movlb	0	; select bank0
  7416  0B0B  00C0               	movwf	??_memmove+1
  7417  0B0C  0021               	movlb	1	; select bank1
  7418  0B0D  0823               	movf	memmove@d^(0+128),w
  7419  0B0E  0020               	movlb	0	; select bank0
  7420  0B0F  00C1               	movwf	??_memmove+2
  7421  0B10  3000               	movlw	0
  7422  0B11  00C2               	movwf	??_memmove+3
  7423  0B12  0840               	movf	??_memmove+1,w
  7424  0B13  0242               	subwf	??_memmove+3,w
  7425  0B14  1D03               	skipz
  7426  0B15  2B18               	goto	u3095
  7427  0B16  083F               	movf	??_memmove,w
  7428  0B17  0241               	subwf	??_memmove+2,w
  7429  0B18                     u3095:	
  7430  0B18  1803               	skipnc
  7431  0B19  2B45               	goto	l2847
  7432  0B1A  083D               	movf	memmove@n,w
  7433  0B1B  0021               	movlb	1	; select bank1
  7434  0B1C  07A1               	addwf	memmove@s^(0+128),f
  7435  0B1D  0020               	movlb	0	; select bank0
  7436  0B1E  083E               	movf	memmove@n+1,w
  7437  0B1F  0021               	movlb	1	; select bank1
  7438  0B20  3DA2               	addwfc	(memmove@s+1)^(0+128),f
  7439  0B21  0020               	movlb	0	; select bank0
  7440  0B22  083D               	movf	memmove@n,w
  7441  0B23  00BF               	movwf	??_memmove
  7442  0B24  083F               	movf	??_memmove,w
  7443  0B25  0021               	movlb	1	; select bank1
  7444  0B26  07A3               	addwf	memmove@d^(0+128),f
  7445  0B27                     l2843:	
  7446  0B27  3001               	movlw	1
  7447  0B28  0021               	movlb	1	; select bank1
  7448  0B29  02A1               	subwf	memmove@s^(0+128),f
  7449  0B2A  3000               	movlw	0
  7450  0B2B  3BA2               	subwfb	(memmove@s+1)^(0+128),f
  7451  0B2C  0821               	movf	memmove@s^(0+128),w
  7452  0B2D  0084               	movwf	4
  7453  0B2E  0822               	movf	(memmove@s+1)^(0+128),w
  7454  0B2F  0085               	movwf	5
  7455  0B30  0800               	movf	0,w	;code access
  7456  0B31  0020               	movlb	0	; select bank0
  7457  0B32  00BF               	movwf	??_memmove
  7458  0B33  3001               	movlw	1
  7459  0B34  0021               	movlb	1	; select bank1
  7460  0B35  02A3               	subwf	memmove@d^(0+128),f
  7461  0B36  0823               	movf	memmove@d^(0+128),w
  7462  0B37  0086               	movwf	6
  7463  0B38  0187               	clrf	7
  7464  0B39  0020               	movlb	0	; select bank0
  7465  0B3A  083F               	movf	??_memmove,w
  7466  0B3B  0081               	movwf	1
  7467  0B3C  3001               	movlw	1
  7468  0B3D  02BD               	subwf	memmove@n,f
  7469  0B3E  3000               	movlw	0
  7470  0B3F  3BBE               	subwfb	memmove@n+1,f
  7471  0B40  083D               	movf	memmove@n,w
  7472  0B41  043E               	iorwf	memmove@n+1,w
  7473  0B42  1903               	btfsc	3,2
  7474  0B43  0008               	return
  7475  0B44  2B27               	goto	l2843
  7476  0B45                     l2847:	
  7477  0B45  0020               	movlb	0	; select bank0
  7478  0B46                     L2:	
  7479  0B46  083D               	movf	memmove@n,w
  7480  0B47  043E               	iorwf	memmove@n+1,w
  7481  0B48  1903               	btfsc	3,2
  7482  0B49  0008               	return
  7483  0B4A  0021               	movlb	1	; select bank1
  7484  0B4B  0821               	movf	memmove@s^(0+128),w
  7485  0B4C  0084               	movwf	4
  7486  0B4D  0822               	movf	(memmove@s+1)^(0+128),w
  7487  0B4E  0085               	movwf	5
  7488  0B4F  0800               	movf	0,w	;code access
  7489  0B50  0020               	movlb	0	; select bank0
  7490  0B51  00BF               	movwf	??_memmove
  7491  0B52  0021               	movlb	1	; select bank1
  7492  0B53  0823               	movf	memmove@d^(0+128),w
  7493  0B54  0086               	movwf	6
  7494  0B55  0187               	clrf	7
  7495  0B56  0020               	movlb	0	; select bank0
  7496  0B57  083F               	movf	??_memmove,w
  7497  0B58  0081               	movwf	1
  7498  0B59  3001               	movlw	1
  7499  0B5A  0021               	movlb	1	; select bank1
  7500  0B5B  07A1               	addwf	memmove@s^(0+128),f
  7501  0B5C  3000               	movlw	0
  7502  0B5D  3DA2               	addwfc	(memmove@s+1)^(0+128),f
  7503  0B5E  3001               	movlw	1
  7504  0B5F  0020               	movlb	0	; select bank0
  7505  0B60  00BF               	movwf	??_memmove
  7506  0B61  083F               	movf	??_memmove,w
  7507  0B62  0021               	movlb	1	; select bank1
  7508  0B63  07A3               	addwf	memmove@d^(0+128),f
  7509  0B64  3001               	movlw	1
  7510  0B65  0020               	movlb	0	; select bank0
  7511  0B66  02BD               	subwf	memmove@n,f
  7512  0B67  3000               	movlw	0
  7513  0B68  3BBE               	subwfb	memmove@n+1,f
  7514  0B69  2B46               	goto	L2
  7515  0B6A                     __end_of_memmove:	
  7516                           ;	Return value of _memmove is never used
  7517                           
  7518                           
  7519                           	psect	text26
  7520  084C                     __ptext26:	
  7521 ;; *************** function _OLED_Init *****************
  7522 ;; Defined at:
  7523 ;;		line 174 in file "oled.c"
  7524 ;; Parameters:    Size  Location     Type
  7525 ;;		None
  7526 ;; Auto vars:     Size  Location     Type
  7527 ;;		None
  7528 ;; Return value:  Size  Location     Type
  7529 ;;                  1    wreg      void 
  7530 ;; Registers used:
  7531 ;;		wreg, status,2, status,0, pclath, cstack
  7532 ;; Tracked objects:
  7533 ;;		On entry : 0/0
  7534 ;;		On exit  : 0/0
  7535 ;;		Unchanged: 0/0
  7536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7541 ;;Total ram usage:        0 bytes
  7542 ;; Hardware stack levels used:    1
  7543 ;; Hardware stack levels required when called:    8
  7544 ;; This function calls:
  7545 ;;		_OLED_Command
  7546 ;; This function is called by:
  7547 ;;		_main
  7548 ;; This function uses a non-reentrant model
  7549 ;;
  7550                           
  7551                           
  7552                           ;psect for function _OLED_Init
  7553  084C                     _OLED_Init:	
  7554                           
  7555                           ;oled.c: 176: OLED_Command(0xAE);
  7556                           
  7557                           ;incstack = 0
  7558                           ; Regs used in _OLED_Init: [wreg+status,2+status,0+pclath+cstack]
  7559  084C  30AE               	movlw	174
  7560  084D  3196  265B  3188   	fcall	_OLED_Command
  7561                           
  7562                           ;oled.c: 177: OLED_Command(0xD5);
  7563  0850  30D5               	movlw	213
  7564  0851  3196  265B  3188   	fcall	_OLED_Command
  7565                           
  7566                           ;oled.c: 178: OLED_Command(0x80);
  7567  0854  3080               	movlw	128
  7568  0855  3196  265B  3188   	fcall	_OLED_Command
  7569                           
  7570                           ;oled.c: 179: OLED_Command(0xA8);
  7571  0858  30A8               	movlw	168
  7572  0859  3196  265B  3188   	fcall	_OLED_Command
  7573                           
  7574                           ;oled.c: 180: OLED_Command(0x1F);
  7575  085C  301F               	movlw	31
  7576  085D  3196  265B  3188   	fcall	_OLED_Command
  7577                           
  7578                           ;oled.c: 181: OLED_Command(0xD3);
  7579  0860  30D3               	movlw	211
  7580  0861  3196  265B  3188   	fcall	_OLED_Command
  7581                           
  7582                           ;oled.c: 182: OLED_Command(0x0);
  7583  0864  3000               	movlw	0
  7584  0865  3196  265B  3188   	fcall	_OLED_Command
  7585                           
  7586                           ;oled.c: 183: OLED_Command(0x40 | 0x0);
  7587  0868  3040               	movlw	64
  7588  0869  3196  265B  3188   	fcall	_OLED_Command
  7589                           
  7590                           ;oled.c: 184: OLED_Command(0x8D);
  7591  086C  308D               	movlw	141
  7592  086D  3196  265B  3188   	fcall	_OLED_Command
  7593                           
  7594                           ;oled.c: 185: OLED_Command(0xAF);
  7595  0870  30AF               	movlw	175
  7596  0871  3196  265B  3188   	fcall	_OLED_Command
  7597                           
  7598                           ;oled.c: 186: OLED_Command(0x20);
  7599  0874  3020               	movlw	32
  7600  0875  3196  265B  3188   	fcall	_OLED_Command
  7601                           
  7602                           ;oled.c: 187: OLED_Command(0x00);
  7603  0878  3000               	movlw	0
  7604  0879  3196  265B  3188   	fcall	_OLED_Command
  7605                           
  7606                           ;oled.c: 188: OLED_Command(0xA0 | 0x1);
  7607  087C  30A1               	movlw	161
  7608  087D  3196  265B  3188   	fcall	_OLED_Command
  7609                           
  7610                           ;oled.c: 189: OLED_Command(0xC8);
  7611  0880  30C8               	movlw	200
  7612  0881  3196  265B  3188   	fcall	_OLED_Command
  7613                           
  7614                           ;oled.c: 190: OLED_Command(0xDA);
  7615  0884  30DA               	movlw	218
  7616  0885  3196  265B  3188   	fcall	_OLED_Command
  7617                           
  7618                           ;oled.c: 191: OLED_Command(0x02);
  7619  0888  3002               	movlw	2
  7620  0889  3196  265B  3188   	fcall	_OLED_Command
  7621                           
  7622                           ;oled.c: 192: OLED_Command(0x81);
  7623  088C  3081               	movlw	129
  7624  088D  3196  265B  3188   	fcall	_OLED_Command
  7625                           
  7626                           ;oled.c: 193: OLED_Command(0x8F);
  7627  0890  308F               	movlw	143
  7628  0891  3196  265B  3188   	fcall	_OLED_Command
  7629                           
  7630                           ;oled.c: 194: OLED_Command(0xD9);
  7631  0894  30D9               	movlw	217
  7632  0895  3196  265B  3188   	fcall	_OLED_Command
  7633                           
  7634                           ;oled.c: 195: OLED_Command(0xF1);
  7635  0898  30F1               	movlw	241
  7636  0899  3196  265B  3188   	fcall	_OLED_Command
  7637                           
  7638                           ;oled.c: 196: OLED_Command(0xDB);
  7639  089C  30DB               	movlw	219
  7640  089D  3196  265B  3188   	fcall	_OLED_Command
  7641                           
  7642                           ;oled.c: 197: OLED_Command(0x40);
  7643  08A0  3040               	movlw	64
  7644  08A1  3196  265B  3188   	fcall	_OLED_Command
  7645                           
  7646                           ;oled.c: 198: OLED_Command(0xA4);
  7647  08A4  30A4               	movlw	164
  7648  08A5  3196  265B  3188   	fcall	_OLED_Command
  7649                           
  7650                           ;oled.c: 199: OLED_Command(0xA6);
  7651  08A8  30A6               	movlw	166
  7652  08A9  3196  265B  3188   	fcall	_OLED_Command
  7653                           
  7654                           ;oled.c: 200: OLED_Command(0xAF);
  7655  08AC  30AF               	movlw	175
  7656  08AD  3196  265B         	fcall	_OLED_Command
  7657  08AF  0008               	return
  7658  08B0                     __end_of_OLED_Init:	
  7659                           
  7660                           	psect	text27
  7661  165B                     __ptext27:	
  7662 ;; *************** function _OLED_Command *****************
  7663 ;; Defined at:
  7664 ;;		line 138 in file "oled.c"
  7665 ;; Parameters:    Size  Location     Type
  7666 ;;  temp            1    wreg     unsigned char 
  7667 ;; Auto vars:     Size  Location     Type
  7668 ;;  temp            1   31[BANK0 ] unsigned char 
  7669 ;; Return value:  Size  Location     Type
  7670 ;;                  1    wreg      void 
  7671 ;; Registers used:
  7672 ;;		wreg, status,2, status,0, pclath, cstack
  7673 ;; Tracked objects:
  7674 ;;		On entry : 0/0
  7675 ;;		On exit  : 0/0
  7676 ;;		Unchanged: 0/0
  7677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7679 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7680 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7681 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7682 ;;Total ram usage:        3 bytes
  7683 ;; Hardware stack levels used:    1
  7684 ;; Hardware stack levels required when called:    7
  7685 ;; This function calls:
  7686 ;;		_Send_I2C_Data
  7687 ;;		_Send_I2C_StartBit
  7688 ;;		_Send_I2C_StopBit
  7689 ;; This function is called by:
  7690 ;;		_OLED_Init
  7691 ;;		_OLED_YX
  7692 ;; This function uses a non-reentrant model
  7693 ;;
  7694                           
  7695                           
  7696                           ;psect for function _OLED_Command
  7697  165B                     _OLED_Command:	
  7698                           
  7699                           ;incstack = 0
  7700                           ; Regs used in _OLED_Command: [wreg+status,2+status,0+pclath+cstack]
  7701                           ;OLED_Command@temp stored from wreg
  7702  165B  0020               	movlb	0	; select bank0
  7703  165C  00BF               	movwf	OLED_Command@temp
  7704                           
  7705                           ;oled.c: 140: Send_I2C_StartBit();
  7706  165D  3195  255A  3196   	fcall	_Send_I2C_StartBit
  7707                           
  7708                           ;oled.c: 141: Send_I2C_Data(0x3C << 1);
  7709  1660  3078               	movlw	120
  7710  1661  0020               	movlb	0	; select bank0
  7711  1662  00BB               	movwf	Send_I2C_Data@databyte
  7712  1663  3000               	movlw	0
  7713  1664  00BC               	movwf	Send_I2C_Data@databyte+1
  7714  1665  3195  257B  3196   	fcall	_Send_I2C_Data
  7715                           
  7716                           ;oled.c: 142: Send_I2C_Data(0x00);
  7717  1668  3000               	movlw	0
  7718  1669  0020               	movlb	0	; select bank0
  7719  166A  00BB               	movwf	Send_I2C_Data@databyte
  7720  166B  00BC               	movwf	Send_I2C_Data@databyte+1
  7721  166C  3195  257B  3196   	fcall	_Send_I2C_Data
  7722                           
  7723                           ;oled.c: 143: Send_I2C_Data(temp);
  7724  166F  0020               	movlb	0	; select bank0
  7725  1670  083F               	movf	OLED_Command@temp,w
  7726  1671  00BD               	movwf	??_OLED_Command
  7727  1672  01BE               	clrf	??_OLED_Command+1
  7728  1673  083D               	movf	??_OLED_Command,w
  7729  1674  00BB               	movwf	Send_I2C_Data@databyte
  7730  1675  083E               	movf	??_OLED_Command+1,w
  7731  1676  00BC               	movwf	Send_I2C_Data@databyte+1
  7732  1677  3195  257B  3196   	fcall	_Send_I2C_Data
  7733                           
  7734                           ;oled.c: 144: Send_I2C_StopBit();
  7735  167A  3195  2562         	fcall	_Send_I2C_StopBit
  7736  167C  0008               	return
  7737  167D                     __end_of_OLED_Command:	
  7738                           
  7739                           	psect	text28
  7740  1562                     __ptext28:	
  7741 ;; *************** function _Send_I2C_StopBit *****************
  7742 ;; Defined at:
  7743 ;;		line 106 in file "I2C.c"
  7744 ;; Parameters:    Size  Location     Type
  7745 ;;		None
  7746 ;; Auto vars:     Size  Location     Type
  7747 ;;		None
  7748 ;; Return value:  Size  Location     Type
  7749 ;;                  1    wreg      void 
  7750 ;; Registers used:
  7751 ;;		None
  7752 ;; Tracked objects:
  7753 ;;		On entry : 0/0
  7754 ;;		On exit  : 0/0
  7755 ;;		Unchanged: 0/0
  7756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7761 ;;Total ram usage:        0 bytes
  7762 ;; Hardware stack levels used:    1
  7763 ;; Hardware stack levels required when called:    6
  7764 ;; This function calls:
  7765 ;;		Nothing
  7766 ;; This function is called by:
  7767 ;;		_OLED_Command
  7768 ;;		_OLED_PutChar
  7769 ;;		_OLED_Data
  7770 ;; This function uses a non-reentrant model
  7771 ;;
  7772                           
  7773                           
  7774                           ;psect for function _Send_I2C_StopBit
  7775  1562                     _Send_I2C_StopBit:	
  7776                           
  7777                           ;I2C.c: 108: PIR1bits.SSP1IF=0;
  7778                           
  7779                           ;incstack = 0
  7780                           ; Regs used in _Send_I2C_StopBit: []
  7781  1562  0020               	movlb	0	; select bank0
  7782  1563  1191               	bcf	17,3	;volatile
  7783                           
  7784                           ;I2C.c: 109: SSPCON2bits.PEN=1;
  7785  1564  0024               	movlb	4	; select bank4
  7786  1565  1516               	bsf	22,2	;volatile
  7787  1566                     l134:	
  7788                           ;I2C.c: 110: while(!PIR1bits.SSP1IF);
  7789                           
  7790  1566  0020               	movlb	0	; select bank0
  7791  1567  1991               	btfsc	17,3	;volatile
  7792  1568  0008               	return
  7793  1569  2D66               	goto	l134
  7794  156A                     __end_of_Send_I2C_StopBit:	
  7795                           
  7796                           	psect	text29
  7797  155A                     __ptext29:	
  7798 ;; *************** function _Send_I2C_StartBit *****************
  7799 ;; Defined at:
  7800 ;;		line 96 in file "I2C.c"
  7801 ;; Parameters:    Size  Location     Type
  7802 ;;		None
  7803 ;; Auto vars:     Size  Location     Type
  7804 ;;		None
  7805 ;; Return value:  Size  Location     Type
  7806 ;;                  1    wreg      void 
  7807 ;; Registers used:
  7808 ;;		None
  7809 ;; Tracked objects:
  7810 ;;		On entry : 0/0
  7811 ;;		On exit  : 0/0
  7812 ;;		Unchanged: 0/0
  7813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7818 ;;Total ram usage:        0 bytes
  7819 ;; Hardware stack levels used:    1
  7820 ;; Hardware stack levels required when called:    6
  7821 ;; This function calls:
  7822 ;;		Nothing
  7823 ;; This function is called by:
  7824 ;;		_OLED_Command
  7825 ;;		_OLED_PutChar
  7826 ;;		_OLED_Data
  7827 ;; This function uses a non-reentrant model
  7828 ;;
  7829                           
  7830                           
  7831                           ;psect for function _Send_I2C_StartBit
  7832  155A                     _Send_I2C_StartBit:	
  7833                           
  7834                           ;I2C.c: 98: PIR1bits.SSP1IF=0;
  7835                           
  7836                           ;incstack = 0
  7837                           ; Regs used in _Send_I2C_StartBit: []
  7838  155A  0020               	movlb	0	; select bank0
  7839  155B  1191               	bcf	17,3	;volatile
  7840                           
  7841                           ;I2C.c: 99: SSPCON2bits.SEN=1;
  7842  155C  0024               	movlb	4	; select bank4
  7843  155D  1416               	bsf	22,0	;volatile
  7844  155E                     l128:	
  7845                           ;I2C.c: 100: while(!PIR1bits.SSP1IF);
  7846                           
  7847  155E  0020               	movlb	0	; select bank0
  7848  155F  1991               	btfsc	17,3	;volatile
  7849  1560  0008               	return
  7850  1561  2D5E               	goto	l128
  7851  1562                     __end_of_Send_I2C_StartBit:	
  7852                           
  7853                           	psect	text30
  7854  157B                     __ptext30:	
  7855 ;; *************** function _Send_I2C_Data *****************
  7856 ;; Defined at:
  7857 ;;		line 48 in file "I2C.c"
  7858 ;; Parameters:    Size  Location     Type
  7859 ;;  databyte        2   27[BANK0 ] unsigned int 
  7860 ;; Auto vars:     Size  Location     Type
  7861 ;;		None
  7862 ;; Return value:  Size  Location     Type
  7863 ;;                  1    wreg      void 
  7864 ;; Registers used:
  7865 ;;		wreg
  7866 ;; Tracked objects:
  7867 ;;		On entry : 0/0
  7868 ;;		On exit  : 0/0
  7869 ;;		Unchanged: 0/0
  7870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7871 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7874 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7875 ;;Total ram usage:        2 bytes
  7876 ;; Hardware stack levels used:    1
  7877 ;; Hardware stack levels required when called:    6
  7878 ;; This function calls:
  7879 ;;		Nothing
  7880 ;; This function is called by:
  7881 ;;		_OLED_Command
  7882 ;;		_OLED_PutChar
  7883 ;;		_OLED_Data
  7884 ;; This function uses a non-reentrant model
  7885 ;;
  7886                           
  7887                           
  7888                           ;psect for function _Send_I2C_Data
  7889  157B                     _Send_I2C_Data:	
  7890                           
  7891                           ;I2C.c: 50: PIR1bits.SSP1IF=0;
  7892                           
  7893                           ;incstack = 0
  7894                           ; Regs used in _Send_I2C_Data: [wreg]
  7895  157B  0020               	movlb	0	; select bank0
  7896  157C  1191               	bcf	17,3	;volatile
  7897                           
  7898                           ;I2C.c: 51: SSPBUF = databyte;
  7899  157D  083B               	movf	Send_I2C_Data@databyte,w
  7900  157E  0024               	movlb	4	; select bank4
  7901  157F  0091               	movwf	17	;volatile
  7902  1580                     l110:	
  7903                           ;I2C.c: 52: while(!PIR1bits.SSP1IF);
  7904                           
  7905  1580  0020               	movlb	0	; select bank0
  7906  1581  1991               	btfsc	17,3	;volatile
  7907  1582  0008               	return
  7908  1583  2D80               	goto	l110
  7909  1584                     __end_of_Send_I2C_Data:	
  7910                           
  7911                           	psect	text31
  7912  15A5                     __ptext31:	
  7913 ;; *************** function _I2C_Init *****************
  7914 ;; Defined at:
  7915 ;;		line 19 in file "I2C.c"
  7916 ;; Parameters:    Size  Location     Type
  7917 ;;		None
  7918 ;; Auto vars:     Size  Location     Type
  7919 ;;		None
  7920 ;; Return value:  Size  Location     Type
  7921 ;;                  1    wreg      void 
  7922 ;; Registers used:
  7923 ;;		wreg, status,2, status,0
  7924 ;; Tracked objects:
  7925 ;;		On entry : 0/0
  7926 ;;		On exit  : 0/0
  7927 ;;		Unchanged: 0/0
  7928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7931 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7932 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7933 ;;Total ram usage:        1 bytes
  7934 ;; Hardware stack levels used:    1
  7935 ;; Hardware stack levels required when called:    6
  7936 ;; This function calls:
  7937 ;;		Nothing
  7938 ;; This function is called by:
  7939 ;;		_main
  7940 ;; This function uses a non-reentrant model
  7941 ;;
  7942                           
  7943                           
  7944                           ;psect for function _I2C_Init
  7945  15A5                     _I2C_Init:	
  7946                           
  7947                           ;I2C.c: 25: SSPCONbits.SSPM=0x08;
  7948                           
  7949                           ;incstack = 0
  7950                           ; Regs used in _I2C_Init: [wreg+status,2+status,0]
  7951  15A5  0024               	movlb	4	; select bank4
  7952  15A6  0815               	movf	21,w	;volatile
  7953  15A7  39F0               	andlw	-16
  7954  15A8  3808               	iorlw	8
  7955  15A9  0095               	movwf	21	;volatile
  7956                           
  7957                           ;I2C.c: 26: SSPCONbits.SSPEN=1;
  7958  15AA  1695               	bsf	21,5	;volatile
  7959                           
  7960                           ;I2C.c: 38: SSPADD = 39;
  7961  15AB  3027               	movlw	39
  7962  15AC  0092               	movwf	18	;volatile
  7963                           
  7964                           ;I2C.c: 42: _delay((unsigned long)((10)*(16000000/4000.0)));
  7965  15AD  3034               	movlw	52
  7966  15AE  0020               	movlb	0	; select bank0
  7967  15AF  00BB               	movwf	??_I2C_Init
  7968  15B0  30F1               	movlw	241
  7969  15B1                     u4377:	
  7970  15B1  0B89               	decfsz	9,f
  7971  15B2  2DB1               	goto	u4377
  7972  15B3  0BBB               	decfsz	??_I2C_Init,f
  7973  15B4  2DB1               	goto	u4377
  7974  15B5  3200               	nop2
  7975  15B6  0008               	return
  7976  15B7                     __end_of_I2C_Init:	
  7977                           
  7978                           	psect	text32
  7979  0680                     __ptext32:	
  7980 ;; *************** function _EUSART_Initialize *****************
  7981 ;; Defined at:
  7982 ;;		line 34 in file "EUSART.c"
  7983 ;; Parameters:    Size  Location     Type
  7984 ;;  baudrate        4    6[BANK1 ] const long 
  7985 ;; Auto vars:     Size  Location     Type
  7986 ;;  x               2   18[BANK1 ] unsigned int 
  7987 ;; Return value:  Size  Location     Type
  7988 ;;                  1    wreg      unsigned char 
  7989 ;; Registers used:
  7990 ;;		wreg, status,2, status,0, pclath, cstack
  7991 ;; Tracked objects:
  7992 ;;		On entry : 0/0
  7993 ;;		On exit  : 0/0
  7994 ;;		Unchanged: 0/0
  7995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7996 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7997 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7998 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  7999 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
  8000 ;;Total ram usage:       14 bytes
  8001 ;; Hardware stack levels used:    1
  8002 ;; Hardware stack levels required when called:    7
  8003 ;; This function calls:
  8004 ;;		___aldiv
  8005 ;; This function is called by:
  8006 ;;		_main
  8007 ;; This function uses a non-reentrant model
  8008 ;;
  8009                           
  8010                           
  8011                           ;psect for function _EUSART_Initialize
  8012  0680                     _EUSART_Initialize:	
  8013                           
  8014                           ;EUSART.c: 36: unsigned int x;
  8015                           ;EUSART.c: 37: x = (16000000 - baudrate*64)/(baudrate*64);
  8016                           
  8017                           ;incstack = 0
  8018                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8019  0680  0021               	movlb	1	; select bank1
  8020  0681  0826               	movf	EUSART_Initialize@baudrate^(0+128),w
  8021  0682  00AA               	movwf	??_EUSART_Initialize^(0+128)
  8022  0683  0827               	movf	(EUSART_Initialize@baudrate+1)^(0+128),w
  8023  0684  00AB               	movwf	(??_EUSART_Initialize^(0+128)+1)
  8024  0685  0828               	movf	(EUSART_Initialize@baudrate+2)^(0+128),w
  8025  0686  00AC               	movwf	(??_EUSART_Initialize^(0+128)+2)
  8026  0687  0829               	movf	(EUSART_Initialize@baudrate+3)^(0+128),w
  8027  0688  00AD               	movwf	(??_EUSART_Initialize^(0+128)+3)
  8028  0689  3006               	movlw	6
  8029  068A                     u4075:	
  8030  068A  35AA               	lslf	??_EUSART_Initialize^(0+128),f
  8031  068B  0DAB               	rlf	(??_EUSART_Initialize^(0+128)+1),f
  8032  068C  0DAC               	rlf	(??_EUSART_Initialize^(0+128)+2),f
  8033  068D  0DAD               	rlf	(??_EUSART_Initialize^(0+128)+3),f
  8034  068E  0B89               	decfsz	9,f
  8035  068F  2E8A               	goto	u4075
  8036  0690  082D               	movf	(??_EUSART_Initialize+3)^(0+128),w
  8037  0691  0020               	movlb	0	; select bank0
  8038  0692  00BE               	movwf	___aldiv@divisor+3
  8039  0693  0021               	movlb	1	; select bank1
  8040  0694  082C               	movf	(??_EUSART_Initialize+2)^(0+128),w
  8041  0695  0020               	movlb	0	; select bank0
  8042  0696  00BD               	movwf	___aldiv@divisor+2
  8043  0697  0021               	movlb	1	; select bank1
  8044  0698  082B               	movf	(??_EUSART_Initialize+1)^(0+128),w
  8045  0699  0020               	movlb	0	; select bank0
  8046  069A  00BC               	movwf	___aldiv@divisor+1
  8047  069B  0021               	movlb	1	; select bank1
  8048  069C  082A               	movf	??_EUSART_Initialize^(0+128),w
  8049  069D  0020               	movlb	0	; select bank0
  8050  069E  00BB               	movwf	___aldiv@divisor
  8051  069F  0021               	movlb	1	; select bank1
  8052  06A0  0826               	movf	EUSART_Initialize@baudrate^(0+128),w
  8053  06A1  00AE               	movwf	(??_EUSART_Initialize+4)^(0+128)
  8054  06A2  0827               	movf	(EUSART_Initialize@baudrate+1)^(0+128),w
  8055  06A3  00AF               	movwf	((??_EUSART_Initialize+4)^(0+128)+1)
  8056  06A4  0828               	movf	(EUSART_Initialize@baudrate+2)^(0+128),w
  8057  06A5  00B0               	movwf	((??_EUSART_Initialize+4)^(0+128)+2)
  8058  06A6  0829               	movf	(EUSART_Initialize@baudrate+3)^(0+128),w
  8059  06A7  00B1               	movwf	((??_EUSART_Initialize+4)^(0+128)+3)
  8060  06A8  3006               	movlw	6
  8061  06A9                     u4085:	
  8062  06A9  35AE               	lslf	(??_EUSART_Initialize+4)^(0+128),f
  8063  06AA  0DAF               	rlf	((??_EUSART_Initialize+4)^(0+128)+1),f
  8064  06AB  0DB0               	rlf	((??_EUSART_Initialize+4)^(0+128)+2),f
  8065  06AC  0DB1               	rlf	((??_EUSART_Initialize+4)^(0+128)+3),f
  8066  06AD  0B89               	decfsz	9,f
  8067  06AE  2EA9               	goto	u4085
  8068  06AF  09AE               	comf	(??_EUSART_Initialize+4)^(0+128),f
  8069  06B0  09AF               	comf	((??_EUSART_Initialize+4)^(0+128)+1),f
  8070  06B1  09B0               	comf	((??_EUSART_Initialize+4)^(0+128)+2),f
  8071  06B2  09B1               	comf	((??_EUSART_Initialize+4)^(0+128)+3),f
  8072  06B3  0AAE               	incf	(??_EUSART_Initialize+4)^(0+128),f
  8073  06B4  1903               	skipnz
  8074  06B5  0AAF               	incf	((??_EUSART_Initialize+4)^(0+128)+1),f
  8075  06B6  1903               	skipnz
  8076  06B7  0AB0               	incf	((??_EUSART_Initialize+4)^(0+128)+2),f
  8077  06B8  1903               	skipnz
  8078  06B9  0AB1               	incf	((??_EUSART_Initialize+4)^(0+128)+3),f
  8079  06BA  3000               	movlw	0
  8080  06BB  072E               	addwf	(??_EUSART_Initialize+4)^(0+128),w
  8081  06BC  0020               	movlb	0	; select bank0
  8082  06BD  00BF               	movwf	___aldiv@dividend
  8083  06BE  3024               	movlw	36
  8084  06BF  0021               	movlb	1	; select bank1
  8085  06C0  3D2F               	addwfc	(??_EUSART_Initialize+5)^(0+128),w
  8086  06C1  0020               	movlb	0	; select bank0
  8087  06C2  00C0               	movwf	___aldiv@dividend+1
  8088  06C3  30F4               	movlw	244
  8089  06C4  0021               	movlb	1	; select bank1
  8090  06C5  3D30               	addwfc	(??_EUSART_Initialize+6)^(0+128),w
  8091  06C6  0020               	movlb	0	; select bank0
  8092  06C7  00C1               	movwf	___aldiv@dividend+2
  8093  06C8  3000               	movlw	0
  8094  06C9  0021               	movlb	1	; select bank1
  8095  06CA  3D31               	addwfc	(??_EUSART_Initialize+7)^(0+128),w
  8096  06CB  0020               	movlb	0	; select bank0
  8097  06CC  00C2               	movwf	___aldiv@dividend+3
  8098  06CD  318B  23F4  3186   	fcall	___aldiv
  8099  06D0  0020               	movlb	0	; select bank0
  8100  06D1  083C               	movf	?___aldiv+1,w
  8101  06D2  0021               	movlb	1	; select bank1
  8102  06D3  00B3               	movwf	(EUSART_Initialize@x+1)^(0+128)
  8103  06D4  0020               	movlb	0	; select bank0
  8104  06D5  083B               	movf	?___aldiv,w
  8105  06D6  0021               	movlb	1	; select bank1
  8106  06D7  00B2               	movwf	EUSART_Initialize@x^(0+128)
  8107                           
  8108                           ;EUSART.c: 38: if(x>255)
  8109  06D8  3001               	movlw	1
  8110  06D9  0233               	subwf	(EUSART_Initialize@x+1)^(0+128),w
  8111  06DA  3000               	movlw	0
  8112  06DB  1903               	skipnz
  8113  06DC  0232               	subwf	EUSART_Initialize@x^(0+128),w
  8114  06DD  1C03               	skipc
  8115  06DE  2F38               	goto	l3269
  8116                           
  8117                           ;EUSART.c: 39: {
  8118                           ;EUSART.c: 40: x = (16000000 - baudrate*16)/(baudrate*16);
  8119  06DF  0826               	movf	EUSART_Initialize@baudrate^(0+128),w
  8120  06E0  00AA               	movwf	??_EUSART_Initialize^(0+128)
  8121  06E1  0827               	movf	(EUSART_Initialize@baudrate+1)^(0+128),w
  8122  06E2  00AB               	movwf	(??_EUSART_Initialize^(0+128)+1)
  8123  06E3  0828               	movf	(EUSART_Initialize@baudrate+2)^(0+128),w
  8124  06E4  00AC               	movwf	(??_EUSART_Initialize^(0+128)+2)
  8125  06E5  0829               	movf	(EUSART_Initialize@baudrate+3)^(0+128),w
  8126  06E6  00AD               	movwf	(??_EUSART_Initialize^(0+128)+3)
  8127  06E7  3004               	movlw	4
  8128  06E8                     u4105:	
  8129  06E8  35AA               	lslf	??_EUSART_Initialize^(0+128),f
  8130  06E9  0DAB               	rlf	(??_EUSART_Initialize^(0+128)+1),f
  8131  06EA  0DAC               	rlf	(??_EUSART_Initialize^(0+128)+2),f
  8132  06EB  0DAD               	rlf	(??_EUSART_Initialize^(0+128)+3),f
  8133  06EC  0B89               	decfsz	9,f
  8134  06ED  2EE8               	goto	u4105
  8135  06EE  082D               	movf	(??_EUSART_Initialize+3)^(0+128),w
  8136  06EF  0020               	movlb	0	; select bank0
  8137  06F0  00BE               	movwf	___aldiv@divisor+3
  8138  06F1  0021               	movlb	1	; select bank1
  8139  06F2  082C               	movf	(??_EUSART_Initialize+2)^(0+128),w
  8140  06F3  0020               	movlb	0	; select bank0
  8141  06F4  00BD               	movwf	___aldiv@divisor+2
  8142  06F5  0021               	movlb	1	; select bank1
  8143  06F6  082B               	movf	(??_EUSART_Initialize+1)^(0+128),w
  8144  06F7  0020               	movlb	0	; select bank0
  8145  06F8  00BC               	movwf	___aldiv@divisor+1
  8146  06F9  0021               	movlb	1	; select bank1
  8147  06FA  082A               	movf	??_EUSART_Initialize^(0+128),w
  8148  06FB  0020               	movlb	0	; select bank0
  8149  06FC  00BB               	movwf	___aldiv@divisor
  8150  06FD  0021               	movlb	1	; select bank1
  8151  06FE  0826               	movf	EUSART_Initialize@baudrate^(0+128),w
  8152  06FF  00AE               	movwf	(??_EUSART_Initialize+4)^(0+128)
  8153  0700  0827               	movf	(EUSART_Initialize@baudrate+1)^(0+128),w
  8154  0701  00AF               	movwf	((??_EUSART_Initialize+4)^(0+128)+1)
  8155  0702  0828               	movf	(EUSART_Initialize@baudrate+2)^(0+128),w
  8156  0703  00B0               	movwf	((??_EUSART_Initialize+4)^(0+128)+2)
  8157  0704  0829               	movf	(EUSART_Initialize@baudrate+3)^(0+128),w
  8158  0705  00B1               	movwf	((??_EUSART_Initialize+4)^(0+128)+3)
  8159  0706  3004               	movlw	4
  8160  0707                     u4115:	
  8161  0707  35AE               	lslf	(??_EUSART_Initialize+4)^(0+128),f
  8162  0708  0DAF               	rlf	((??_EUSART_Initialize+4)^(0+128)+1),f
  8163  0709  0DB0               	rlf	((??_EUSART_Initialize+4)^(0+128)+2),f
  8164  070A  0DB1               	rlf	((??_EUSART_Initialize+4)^(0+128)+3),f
  8165  070B  0B89               	decfsz	9,f
  8166  070C  2F07               	goto	u4115
  8167  070D  09AE               	comf	(??_EUSART_Initialize+4)^(0+128),f
  8168  070E  09AF               	comf	((??_EUSART_Initialize+4)^(0+128)+1),f
  8169  070F  09B0               	comf	((??_EUSART_Initialize+4)^(0+128)+2),f
  8170  0710  09B1               	comf	((??_EUSART_Initialize+4)^(0+128)+3),f
  8171  0711  0AAE               	incf	(??_EUSART_Initialize+4)^(0+128),f
  8172  0712  1903               	skipnz
  8173  0713  0AAF               	incf	((??_EUSART_Initialize+4)^(0+128)+1),f
  8174  0714  1903               	skipnz
  8175  0715  0AB0               	incf	((??_EUSART_Initialize+4)^(0+128)+2),f
  8176  0716  1903               	skipnz
  8177  0717  0AB1               	incf	((??_EUSART_Initialize+4)^(0+128)+3),f
  8178  0718  3000               	movlw	0
  8179  0719  072E               	addwf	(??_EUSART_Initialize+4)^(0+128),w
  8180  071A  0020               	movlb	0	; select bank0
  8181  071B  00BF               	movwf	___aldiv@dividend
  8182  071C  3024               	movlw	36
  8183  071D  0021               	movlb	1	; select bank1
  8184  071E  3D2F               	addwfc	(??_EUSART_Initialize+5)^(0+128),w
  8185  071F  0020               	movlb	0	; select bank0
  8186  0720  00C0               	movwf	___aldiv@dividend+1
  8187  0721  30F4               	movlw	244
  8188  0722  0021               	movlb	1	; select bank1
  8189  0723  3D30               	addwfc	(??_EUSART_Initialize+6)^(0+128),w
  8190  0724  0020               	movlb	0	; select bank0
  8191  0725  00C1               	movwf	___aldiv@dividend+2
  8192  0726  3000               	movlw	0
  8193  0727  0021               	movlb	1	; select bank1
  8194  0728  3D31               	addwfc	(??_EUSART_Initialize+7)^(0+128),w
  8195  0729  0020               	movlb	0	; select bank0
  8196  072A  00C2               	movwf	___aldiv@dividend+3
  8197  072B  318B  23F4  3186   	fcall	___aldiv
  8198  072E  0020               	movlb	0	; select bank0
  8199  072F  083C               	movf	?___aldiv+1,w
  8200  0730  0021               	movlb	1	; select bank1
  8201  0731  00B3               	movwf	(EUSART_Initialize@x+1)^(0+128)
  8202  0732  0020               	movlb	0	; select bank0
  8203  0733  083B               	movf	?___aldiv,w
  8204  0734  0021               	movlb	1	; select bank1
  8205  0735  00B2               	movwf	EUSART_Initialize@x^(0+128)
  8206                           
  8207                           ;EUSART.c: 41: BRGH = 1;
  8208  0736  0023               	movlb	3	; select bank3
  8209  0737  151E               	bsf	30,2	;volatile
  8210  0738                     l3269:	
  8211                           
  8212                           ;EUSART.c: 42: }
  8213                           ;EUSART.c: 43: if(x<256)
  8214  0738  3001               	movlw	1
  8215  0739  0021               	movlb	1	; select bank1
  8216  073A  0233               	subwf	(EUSART_Initialize@x+1)^(0+128),w
  8217  073B  3000               	movlw	0
  8218  073C  1903               	skipnz
  8219  073D  0232               	subwf	EUSART_Initialize@x^(0+128),w
  8220  073E  1803               	skipnc
  8221  073F  0008               	return
  8222                           
  8223                           ;EUSART.c: 44: {
  8224                           ;EUSART.c: 45: SPBRG = x;
  8225  0740  0832               	movf	EUSART_Initialize@x^(0+128),w
  8226  0741  0023               	movlb	3	; select bank3
  8227  0742  009B               	movwf	27	;volatile
  8228                           
  8229                           ;EUSART.c: 46: SYNC = 0;
  8230  0743  121E               	bcf	30,4	;volatile
  8231                           
  8232                           ;EUSART.c: 47: SPEN = 1;
  8233  0744  179D               	bsf	29,7	;volatile
  8234                           
  8235                           ;EUSART.c: 48: TRISC7 = 1;
  8236  0745  0021               	movlb	1	; select bank1
  8237  0746  178E               	bsf	14,7	;volatile
  8238                           
  8239                           ;EUSART.c: 49: TRISC6 = 1;
  8240  0747  170E               	bsf	14,6	;volatile
  8241                           
  8242                           ;EUSART.c: 50: CREN = 1;
  8243  0748  0023               	movlb	3	; select bank3
  8244  0749  161D               	bsf	29,4	;volatile
  8245                           
  8246                           ;EUSART.c: 51: TXEN = 1;
  8247  074A  169E               	bsf	30,5	;volatile
  8248                           
  8249                           ;EUSART.c: 52: return 1;
  8250                           ;	Return value of _EUSART_Initialize is never used
  8251  074B  0008               	return
  8252  074C                     __end_of_EUSART_Initialize:	
  8253                           ;EUSART.c: 53: }
  8254                           ;EUSART.c: 54: return 0;
  8255                           ;	Return value of _EUSART_Initialize is never used
  8256                           
  8257                           
  8258                           	psect	text33
  8259  0BF4                     __ptext33:	
  8260 ;; *************** function ___aldiv *****************
  8261 ;; Defined at:
  8262 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\aldiv.c"
  8263 ;; Parameters:    Size  Location     Type
  8264 ;;  divisor         4   27[BANK0 ] long 
  8265 ;;  dividend        4   31[BANK0 ] long 
  8266 ;; Auto vars:     Size  Location     Type
  8267 ;;  quotient        4    2[BANK1 ] long 
  8268 ;;  sign            1    1[BANK1 ] unsigned char 
  8269 ;;  counter         1    0[BANK1 ] unsigned char 
  8270 ;; Return value:  Size  Location     Type
  8271 ;;                  4   27[BANK0 ] long 
  8272 ;; Registers used:
  8273 ;;		wreg, status,2, status,0
  8274 ;; Tracked objects:
  8275 ;;		On entry : 0/0
  8276 ;;		On exit  : 0/0
  8277 ;;		Unchanged: 0/0
  8278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8279 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8280 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8281 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8282 ;;      Totals:         0       9       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8283 ;;Total ram usage:       15 bytes
  8284 ;; Hardware stack levels used:    1
  8285 ;; Hardware stack levels required when called:    6
  8286 ;; This function calls:
  8287 ;;		Nothing
  8288 ;; This function is called by:
  8289 ;;		_EUSART_Initialize
  8290 ;; This function uses a non-reentrant model
  8291 ;;
  8292                           
  8293                           
  8294                           ;psect for function ___aldiv
  8295  0BF4                     ___aldiv:	
  8296                           
  8297                           ;incstack = 0
  8298                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  8299  0BF4  0021               	movlb	1	; select bank1
  8300  0BF5  01A1               	clrf	___aldiv@sign^(0+128)
  8301  0BF6  0020               	movlb	0	; select bank0
  8302  0BF7  1FBE               	btfss	___aldiv@divisor+3,7
  8303  0BF8  2C07               	goto	l412
  8304  0BF9  09BB               	comf	___aldiv@divisor,f
  8305  0BFA  09BC               	comf	___aldiv@divisor+1,f
  8306  0BFB  09BD               	comf	___aldiv@divisor+2,f
  8307  0BFC  09BE               	comf	___aldiv@divisor+3,f
  8308  0BFD  0ABB               	incf	___aldiv@divisor,f
  8309  0BFE  1903               	skipnz
  8310  0BFF  0ABC               	incf	___aldiv@divisor+1,f
  8311  0C00  1903               	skipnz
  8312  0C01  0ABD               	incf	___aldiv@divisor+2,f
  8313  0C02  1903               	skipnz
  8314  0C03  0ABE               	incf	___aldiv@divisor+3,f
  8315  0C04  0021               	movlb	1	; select bank1
  8316  0C05  01A1               	clrf	___aldiv@sign^(0+128)
  8317  0C06  0AA1               	incf	___aldiv@sign^(0+128),f
  8318  0C07                     l412:	
  8319  0C07  0020               	movlb	0	; select bank0
  8320  0C08  1FC2               	btfss	___aldiv@dividend+3,7
  8321  0C09  2C1A               	goto	l3057
  8322  0C0A  09BF               	comf	___aldiv@dividend,f
  8323  0C0B  09C0               	comf	___aldiv@dividend+1,f
  8324  0C0C  09C1               	comf	___aldiv@dividend+2,f
  8325  0C0D  09C2               	comf	___aldiv@dividend+3,f
  8326  0C0E  0ABF               	incf	___aldiv@dividend,f
  8327  0C0F  1903               	skipnz
  8328  0C10  0AC0               	incf	___aldiv@dividend+1,f
  8329  0C11  1903               	skipnz
  8330  0C12  0AC1               	incf	___aldiv@dividend+2,f
  8331  0C13  1903               	skipnz
  8332  0C14  0AC2               	incf	___aldiv@dividend+3,f
  8333  0C15  3001               	movlw	1
  8334  0C16  00C3               	movwf	??___aldiv
  8335  0C17  0843               	movf	??___aldiv,w
  8336  0C18  0021               	movlb	1	; select bank1
  8337  0C19  06A1               	xorwf	___aldiv@sign^(0+128),f
  8338  0C1A                     l3057:	
  8339  0C1A  3000               	movlw	0
  8340  0C1B  0021               	movlb	1	; select bank1
  8341  0C1C  00A5               	movwf	(___aldiv@quotient+3)^(0+128)
  8342  0C1D  3000               	movlw	0
  8343  0C1E  00A4               	movwf	(___aldiv@quotient+2)^(0+128)
  8344  0C1F  3000               	movlw	0
  8345  0C20  00A3               	movwf	(___aldiv@quotient+1)^(0+128)
  8346  0C21  3000               	movlw	0
  8347  0C22  00A2               	movwf	___aldiv@quotient^(0+128)
  8348  0C23  0020               	movlb	0	; select bank0
  8349  0C24  083E               	movf	___aldiv@divisor+3,w
  8350  0C25  043D               	iorwf	___aldiv@divisor+2,w
  8351  0C26  043C               	iorwf	___aldiv@divisor+1,w
  8352  0C27  043B               	iorwf	___aldiv@divisor,w
  8353  0C28  1903               	skipnz
  8354  0C29  2C6E               	goto	l3079
  8355  0C2A  0021               	movlb	1	; select bank1
  8356  0C2B  01A0               	clrf	___aldiv@counter^(0+128)
  8357  0C2C  0AA0               	incf	___aldiv@counter^(0+128),f
  8358  0C2D                     l3065:	
  8359  0C2D  0020               	movlb	0	; select bank0
  8360  0C2E  1BBE               	btfsc	___aldiv@divisor+3,7
  8361  0C2F  2C3E               	goto	l3067
  8362  0C30  3001               	movlw	1
  8363  0C31                     u3565:	
  8364  0C31  0020               	movlb	0	; select bank0
  8365  0C32  35BB               	lslf	___aldiv@divisor,f
  8366  0C33  0DBC               	rlf	___aldiv@divisor+1,f
  8367  0C34  0DBD               	rlf	___aldiv@divisor+2,f
  8368  0C35  0DBE               	rlf	___aldiv@divisor+3,f
  8369  0C36  0B89               	decfsz	9,f
  8370  0C37  2C31               	goto	u3565
  8371  0C38  3001               	movlw	1
  8372  0C39  00C3               	movwf	??___aldiv
  8373  0C3A  0843               	movf	??___aldiv,w
  8374  0C3B  0021               	movlb	1	; select bank1
  8375  0C3C  07A0               	addwf	___aldiv@counter^(0+128),f
  8376  0C3D  2C2D               	goto	l3065
  8377  0C3E                     l3067:	
  8378  0C3E  3001               	movlw	1
  8379  0C3F                     u3585:	
  8380  0C3F  0021               	movlb	1	; select bank1
  8381  0C40  35A2               	lslf	___aldiv@quotient^(0+128),f
  8382  0C41  0DA3               	rlf	(___aldiv@quotient+1)^(0+128),f
  8383  0C42  0DA4               	rlf	(___aldiv@quotient+2)^(0+128),f
  8384  0C43  0DA5               	rlf	(___aldiv@quotient+3)^(0+128),f
  8385  0C44  0B89               	decfsz	9,f
  8386  0C45  2C3F               	goto	u3585
  8387  0C46  0020               	movlb	0	; select bank0
  8388  0C47  083E               	movf	___aldiv@divisor+3,w
  8389  0C48  0242               	subwf	___aldiv@dividend+3,w
  8390  0C49  1D03               	skipz
  8391  0C4A  2C55               	goto	u3595
  8392  0C4B  083D               	movf	___aldiv@divisor+2,w
  8393  0C4C  0241               	subwf	___aldiv@dividend+2,w
  8394  0C4D  1D03               	skipz
  8395  0C4E  2C55               	goto	u3595
  8396  0C4F  083C               	movf	___aldiv@divisor+1,w
  8397  0C50  0240               	subwf	___aldiv@dividend+1,w
  8398  0C51  1D03               	skipz
  8399  0C52  2C55               	goto	u3595
  8400  0C53  083B               	movf	___aldiv@divisor,w
  8401  0C54  023F               	subwf	___aldiv@dividend,w
  8402  0C55                     u3595:	
  8403  0C55  1C03               	skipc
  8404  0C56  2C61               	goto	l3075
  8405  0C57  083B               	movf	___aldiv@divisor,w
  8406  0C58  02BF               	subwf	___aldiv@dividend,f
  8407  0C59  083C               	movf	___aldiv@divisor+1,w
  8408  0C5A  3BC0               	subwfb	___aldiv@dividend+1,f
  8409  0C5B  083D               	movf	___aldiv@divisor+2,w
  8410  0C5C  3BC1               	subwfb	___aldiv@dividend+2,f
  8411  0C5D  083E               	movf	___aldiv@divisor+3,w
  8412  0C5E  3BC2               	subwfb	___aldiv@dividend+3,f
  8413  0C5F  0021               	movlb	1	; select bank1
  8414  0C60  1422               	bsf	___aldiv@quotient^(0+128),0
  8415  0C61                     l3075:	
  8416  0C61  3001               	movlw	1
  8417  0C62                     u3605:	
  8418  0C62  0020               	movlb	0	; select bank0
  8419  0C63  36BE               	lsrf	___aldiv@divisor+3,f
  8420  0C64  0CBD               	rrf	___aldiv@divisor+2,f
  8421  0C65  0CBC               	rrf	___aldiv@divisor+1,f
  8422  0C66  0CBB               	rrf	___aldiv@divisor,f
  8423  0C67  0B89               	decfsz	9,f
  8424  0C68  2C62               	goto	u3605
  8425  0C69  3001               	movlw	1
  8426  0C6A  0021               	movlb	1	; select bank1
  8427  0C6B  02A0               	subwf	___aldiv@counter^(0+128),f
  8428  0C6C  1D03               	btfss	3,2
  8429  0C6D  2C3E               	goto	l3067
  8430  0C6E                     l3079:	
  8431  0C6E  0021               	movlb	1	; select bank1
  8432  0C6F  0821               	movf	___aldiv@sign^(0+128),w
  8433  0C70  1903               	btfsc	3,2
  8434  0C71  2C7D               	goto	l3083
  8435  0C72  09A2               	comf	___aldiv@quotient^(0+128),f
  8436  0C73  09A3               	comf	(___aldiv@quotient+1)^(0+128),f
  8437  0C74  09A4               	comf	(___aldiv@quotient+2)^(0+128),f
  8438  0C75  09A5               	comf	(___aldiv@quotient+3)^(0+128),f
  8439  0C76  0AA2               	incf	___aldiv@quotient^(0+128),f
  8440  0C77  1903               	skipnz
  8441  0C78  0AA3               	incf	(___aldiv@quotient+1)^(0+128),f
  8442  0C79  1903               	skipnz
  8443  0C7A  0AA4               	incf	(___aldiv@quotient+2)^(0+128),f
  8444  0C7B  1903               	skipnz
  8445  0C7C  0AA5               	incf	(___aldiv@quotient+3)^(0+128),f
  8446  0C7D                     l3083:	
  8447  0C7D  0825               	movf	(___aldiv@quotient+3)^(0+128),w
  8448  0C7E  0020               	movlb	0	; select bank0
  8449  0C7F  00BE               	movwf	?___aldiv+3
  8450  0C80  0021               	movlb	1	; select bank1
  8451  0C81  0824               	movf	(___aldiv@quotient+2)^(0+128),w
  8452  0C82  0020               	movlb	0	; select bank0
  8453  0C83  00BD               	movwf	?___aldiv+2
  8454  0C84  0021               	movlb	1	; select bank1
  8455  0C85  0823               	movf	(___aldiv@quotient+1)^(0+128),w
  8456  0C86  0020               	movlb	0	; select bank0
  8457  0C87  00BC               	movwf	?___aldiv+1
  8458  0C88  0021               	movlb	1	; select bank1
  8459  0C89  0822               	movf	___aldiv@quotient^(0+128),w
  8460  0C8A  0020               	movlb	0	; select bank0
  8461  0C8B  00BB               	movwf	?___aldiv
  8462  0C8C  0008               	return
  8463  0C8D                     __end_of___aldiv:	
  8464                           
  8465                           	psect	intentry
  8466  0004                     __pintentry:	
  8467 ;; *************** function _isr *****************
  8468 ;; Defined at:
  8469 ;;		line 314 in file "Main.c"
  8470 ;; Parameters:    Size  Location     Type
  8471 ;;		None
  8472 ;; Auto vars:     Size  Location     Type
  8473 ;;		None
  8474 ;; Return value:  Size  Location     Type
  8475 ;;                  1    wreg      void 
  8476 ;; Registers used:
  8477 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8478 ;; Tracked objects:
  8479 ;;		On entry : 0/0
  8480 ;;		On exit  : 0/0
  8481 ;;		Unchanged: 0/0
  8482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8485 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8486 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8487 ;;Total ram usage:        1 bytes
  8488 ;; Hardware stack levels used:    1
  8489 ;; Hardware stack levels required when called:    5
  8490 ;; This function calls:
  8491 ;;		i1_server_Initialize
  8492 ;; This function is called by:
  8493 ;;		Interrupt level 1
  8494 ;; This function uses a non-reentrant model
  8495 ;;
  8496                           
  8497  0004                     _isr:	
  8498                           
  8499                           ;incstack = 0
  8500  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  8501                           
  8502                           ; Regs used in _isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8503  0005  3180               	pagesel	$
  8504  0006  0020               	movlb	0	; select bank0
  8505  0007  087F               	movf	127,w
  8506  0008  00BA               	movwf	??_isr
  8507                           
  8508                           ;Main.c: 316: INTCONbits.INTF = 0;
  8509  0009  108B               	bcf	11,1	;volatile
  8510                           
  8511                           ;Main.c: 319: WDTCONbits.WDTPS = 0b01100;
  8512  000A  0021               	movlb	1	; select bank1
  8513  000B  0817               	movf	23,w	;volatile
  8514  000C  39C1               	andlw	-63
  8515  000D  3818               	iorlw	24
  8516  000E  0097               	movwf	23	;volatile
  8517                           
  8518                           ;Main.c: 322: server_Initialize();
  8519  000F  3187  274C         	fcall	i1_server_Initialize
  8520  0011  0020               	movlb	0	; select bank0
  8521  0012  083A               	movf	??_isr,w
  8522  0013  00FF               	movwf	127
  8523  0014  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  8524  0015  0009               	retfie
  8525  0016                     __end_of_isr:	
  8526                           
  8527                           	psect	text35
  8528  074C                     __ptext35:	
  8529 ;; *************** function i1_server_Initialize *****************
  8530 ;; Defined at:
  8531 ;;		line 371 in file "Main.c"
  8532 ;; Parameters:    Size  Location     Type
  8533 ;;		None
  8534 ;; Auto vars:     Size  Location     Type
  8535 ;;		None
  8536 ;; Return value:  Size  Location     Type
  8537 ;;                  1    wreg      void 
  8538 ;; Registers used:
  8539 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8540 ;; Tracked objects:
  8541 ;;		On entry : 0/0
  8542 ;;		On exit  : 0/0
  8543 ;;		Unchanged: 0/0
  8544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8547 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8548 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8549 ;;Total ram usage:        2 bytes
  8550 ;; Hardware stack levels used:    1
  8551 ;; Hardware stack levels required when called:    4
  8552 ;; This function calls:
  8553 ;;		i1_EUSART_Read_Text
  8554 ;;		i1_EUSART_Write_Text
  8555 ;;		i1_OLED_Clear
  8556 ;;		i1_OLED_Write_String
  8557 ;;		i1_OLED_YX
  8558 ;; This function is called by:
  8559 ;;		_isr
  8560 ;; This function uses a non-reentrant model
  8561 ;;
  8562                           
  8563                           
  8564                           ;psect for function i1_server_Initialize
  8565  074C                     i1_server_Initialize:	
  8566                           
  8567                           ;incstack = 0
  8568                           ; Regs used in i1_server_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8569  074C  0064               	clrwdt	;# 
  8570                           
  8571                           ;Main.c: 378: OLED_YX(0, 0);
  8572  074D  01F5               	clrf	i1OLED_YX@Column
  8573  074E  3000               	movlw	0
  8574  074F  3196  26ED  3187   	fcall	i1_OLED_YX
  8575                           
  8576                           ;Main.c: 379: OLED_Write_String("Sending AT");
  8577  0752  30E9               	movlw	low (STR_7| (0+32768))
  8578  0753  00FC               	movwf	i1OLED_Write_String@s
  8579  0754  3083               	movlw	high (STR_7| (0+32768))
  8580  0755  00FD               	movwf	i1OLED_Write_String@s+1
  8581  0756  3195  25B7  3187   	fcall	i1_OLED_Write_String
  8582                           
  8583                           ;Main.c: 380: EUSART_Write_Text("AT\r\n");
  8584  0759  30FA               	movlw	low (STR_8| (0+32768))
  8585  075A  00F1               	movwf	i1EUSART_Write_Text@text
  8586  075B  3083               	movlw	high (STR_8| (0+32768))
  8587  075C  00F2               	movwf	i1EUSART_Write_Text@text+1
  8588  075D  3195  25CB  3187   	fcall	i1_EUSART_Write_Text
  8589                           
  8590                           ;Main.c: 381: EUSART_Read_Text(buf, 11);
  8591  0760  300B               	movlw	11
  8592  0761  00F0               	movwf	i1EUSART_Read_Text@length
  8593  0762  3000               	movlw	0
  8594  0763  00F1               	movwf	i1EUSART_Read_Text@length+1
  8595  0764  3020               	movlw	(low (_buf| (0+256)))& (0+255)
  8596  0765  3196  2601  3187   	fcall	i1_EUSART_Read_Text
  8597                           
  8598                           ;Main.c: 383: OLED_YX(1, 0);
  8599  0768  01F5               	clrf	i1OLED_YX@Column
  8600  0769  3001               	movlw	1
  8601  076A  3196  26ED  3187   	fcall	i1_OLED_YX
  8602                           
  8603                           ;Main.c: 384: OLED_Write_String(buf);
  8604  076D  3020               	movlw	low _buf
  8605  076E  00FC               	movwf	i1OLED_Write_String@s
  8606  076F  3001               	movlw	high _buf
  8607  0770  00FD               	movwf	i1OLED_Write_String@s+1
  8608  0771  3195  25B7  3187   	fcall	i1_OLED_Write_String
  8609                           
  8610                           ;Main.c: 385: _delay((unsigned long)((3000)*(16000000/4000.0)));
  8611  0774  303D               	movlw	61
  8612  0775  0020               	movlb	0	; select bank0
  8613  0776  00B9               	movwf	??i1_server_Initialize+1
  8614  0777  30E1               	movlw	225
  8615  0778  00B8               	movwf	??i1_server_Initialize
  8616  0779  303F               	movlw	63
  8617  077A                     u438_27:	
  8618  077A  0B89               	decfsz	9,f
  8619  077B  2F7A               	goto	u438_27
  8620  077C  0BB8               	decfsz	??i1_server_Initialize,f
  8621  077D  2F7A               	goto	u438_27
  8622  077E  0BB9               	decfsz	??i1_server_Initialize+1,f
  8623  077F  2F7A               	goto	u438_27
  8624  0780  3200               	nop2
  8625                           
  8626                           ;Main.c: 386: OLED_Clear();
  8627  0781  3197  276D  3187   	fcall	i1_OLED_Clear
  8628  0784  0064               	clrwdt	;# 
  8629                           
  8630                           ;Main.c: 393: OLED_YX(0, 0);
  8631  0785  01F5               	clrf	i1OLED_YX@Column
  8632  0786  3000               	movlw	0
  8633  0787  3196  26ED  3187   	fcall	i1_OLED_YX
  8634                           
  8635                           ;Main.c: 394: OLED_Write_String("Sending CIPMUX");
  8636  078A  309A               	movlw	low (STR_9| (0+32768))
  8637  078B  00FC               	movwf	i1OLED_Write_String@s
  8638  078C  3083               	movlw	high (STR_9| (0+32768))
  8639  078D  00FD               	movwf	i1OLED_Write_String@s+1
  8640  078E  3195  25B7  3187   	fcall	i1_OLED_Write_String
  8641                           
  8642                           ;Main.c: 395: EUSART_Write_Text("AT+CIPMUX=0\r\n");
  8643  0791  30A9               	movlw	low (STR_10| (0+32768))
  8644  0792  00F1               	movwf	i1EUSART_Write_Text@text
  8645  0793  3083               	movlw	high (STR_10| (0+32768))
  8646  0794  00F2               	movwf	i1EUSART_Write_Text@text+1
  8647  0795  3195  25CB  3187   	fcall	i1_EUSART_Write_Text
  8648                           
  8649                           ;Main.c: 396: EUSART_Read_Text(buf, 15);
  8650  0798  300F               	movlw	15
  8651  0799  00F0               	movwf	i1EUSART_Read_Text@length
  8652  079A  3000               	movlw	0
  8653  079B  00F1               	movwf	i1EUSART_Read_Text@length+1
  8654  079C  3020               	movlw	(low (_buf| (0+256)))& (0+255)
  8655  079D  3196  2601  3187   	fcall	i1_EUSART_Read_Text
  8656                           
  8657                           ;Main.c: 398: OLED_YX(1, 0);
  8658  07A0  01F5               	clrf	i1OLED_YX@Column
  8659  07A1  3001               	movlw	1
  8660  07A2  3196  26ED  3187   	fcall	i1_OLED_YX
  8661                           
  8662                           ;Main.c: 399: OLED_Write_String(buf);
  8663  07A5  3020               	movlw	low _buf
  8664  07A6  00FC               	movwf	i1OLED_Write_String@s
  8665  07A7  3001               	movlw	high _buf
  8666  07A8  00FD               	movwf	i1OLED_Write_String@s+1
  8667  07A9  3195  25B7  3187   	fcall	i1_OLED_Write_String
  8668                           
  8669                           ;Main.c: 400: _delay((unsigned long)((3000)*(16000000/4000.0)));
  8670  07AC  303D               	movlw	61
  8671  07AD  0020               	movlb	0	; select bank0
  8672  07AE  00B9               	movwf	??i1_server_Initialize+1
  8673  07AF  30E1               	movlw	225
  8674  07B0  00B8               	movwf	??i1_server_Initialize
  8675  07B1  303F               	movlw	63
  8676  07B2                     u439_27:	
  8677  07B2  0B89               	decfsz	9,f
  8678  07B3  2FB2               	goto	u439_27
  8679  07B4  0BB8               	decfsz	??i1_server_Initialize,f
  8680  07B5  2FB2               	goto	u439_27
  8681  07B6  0BB9               	decfsz	??i1_server_Initialize+1,f
  8682  07B7  2FB2               	goto	u439_27
  8683  07B8  3200               	nop2
  8684                           
  8685                           ;Main.c: 401: OLED_Clear();
  8686  07B9  3197  276D  3187   	fcall	i1_OLED_Clear
  8687  07BC  0064               	clrwdt	;# 
  8688                           
  8689                           ;Main.c: 408: OLED_YX(0, 0);
  8690  07BD  01F5               	clrf	i1OLED_YX@Column
  8691  07BE  3000               	movlw	0
  8692  07BF  3196  26ED  3187   	fcall	i1_OLED_YX
  8693                           
  8694                           ;Main.c: 409: OLED_Write_String("Sending CIPSERVER");
  8695  07C2  3067               	movlw	low (STR_11| (0+32768))
  8696  07C3  00FC               	movwf	i1OLED_Write_String@s
  8697  07C4  3083               	movlw	high (STR_11| (0+32768))
  8698  07C5  00FD               	movwf	i1OLED_Write_String@s+1
  8699  07C6  3195  25B7  3187   	fcall	i1_OLED_Write_String
  8700                           
  8701                           ;Main.c: 410: EUSART_Write_Text("AT+CIPSERVER=1,80\r\n");
  8702  07C9  3053               	movlw	low (STR_12| (0+32768))
  8703  07CA  00F1               	movwf	i1EUSART_Write_Text@text
  8704  07CB  3083               	movlw	high (STR_12| (0+32768))
  8705  07CC  00F2               	movwf	i1EUSART_Write_Text@text+1
  8706  07CD  3195  25CB  3187   	fcall	i1_EUSART_Write_Text
  8707                           
  8708                           ;Main.c: 412: EUSART_Read_Text(buf, 15);
  8709  07D0  300F               	movlw	15
  8710  07D1  00F0               	movwf	i1EUSART_Read_Text@length
  8711  07D2  3000               	movlw	0
  8712  07D3  00F1               	movwf	i1EUSART_Read_Text@length+1
  8713  07D4  3020               	movlw	(low (_buf| (0+256)))& (0+255)
  8714  07D5  3196  2601  3187   	fcall	i1_EUSART_Read_Text
  8715                           
  8716                           ;Main.c: 414: OLED_YX(1, 0);
  8717  07D8  01F5               	clrf	i1OLED_YX@Column
  8718  07D9  3001               	movlw	1
  8719  07DA  3196  26ED  3187   	fcall	i1_OLED_YX
  8720                           
  8721                           ;Main.c: 415: OLED_Write_String(buf);
  8722  07DD  3020               	movlw	low _buf
  8723  07DE  00FC               	movwf	i1OLED_Write_String@s
  8724  07DF  3001               	movlw	high _buf
  8725  07E0  00FD               	movwf	i1OLED_Write_String@s+1
  8726  07E1  3195  25B7  3187   	fcall	i1_OLED_Write_String
  8727                           
  8728                           ;Main.c: 417: _delay((unsigned long)((3000)*(16000000/4000.0)));
  8729  07E4  303D               	movlw	61
  8730  07E5  0020               	movlb	0	; select bank0
  8731  07E6  00B9               	movwf	??i1_server_Initialize+1
  8732  07E7  30E1               	movlw	225
  8733  07E8  00B8               	movwf	??i1_server_Initialize
  8734  07E9  303F               	movlw	63
  8735  07EA                     u440_27:	
  8736  07EA  0B89               	decfsz	9,f
  8737  07EB  2FEA               	goto	u440_27
  8738  07EC  0BB8               	decfsz	??i1_server_Initialize,f
  8739  07ED  2FEA               	goto	u440_27
  8740  07EE  0BB9               	decfsz	??i1_server_Initialize+1,f
  8741  07EF  2FEA               	goto	u440_27
  8742  07F0  3200               	nop2
  8743                           
  8744                           ;Main.c: 418: OLED_Clear();
  8745  07F1  3197  276D         	fcall	i1_OLED_Clear
  8746  07F3  0064               	clrwdt	;# 
  8747                           
  8748                           ;Main.c: 423: WDTCONbits.WDTPS = 0b10001;
  8749  07F4  0021               	movlb	1	; select bank1
  8750  07F5  0817               	movf	23,w	;volatile
  8751  07F6  39C1               	andlw	-63
  8752  07F7  3822               	iorlw	34
  8753  07F8  0097               	movwf	23	;volatile
  8754  07F9  0008               	return
  8755  07FA                     __end_ofi1_server_Initialize:	
  8756                           
  8757                           	psect	text36
  8758  15B7                     __ptext36:	
  8759 ;; *************** function i1_OLED_Write_String *****************
  8760 ;; Defined at:
  8761 ;;		line 284 in file "oled.c"
  8762 ;; Parameters:    Size  Location     Type
  8763 ;;  s               2   12[COMMON] PTR unsigned char 
  8764 ;;		 -> ftoa@buf(17), STR_14(6), STR_13(6), OLED_Write_Integer@status(2), 
  8765 ;;		 -> STR_11(18), STR_9(15), STR_7(11), STR_4(13), 
  8766 ;;		 -> buf(50), main@status(2), STR_2(13), STR_1(13), 
  8767 ;; Auto vars:     Size  Location     Type
  8768 ;;		None
  8769 ;; Return value:  Size  Location     Type
  8770 ;;                  1    wreg      void 
  8771 ;; Registers used:
  8772 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8773 ;; Tracked objects:
  8774 ;;		On entry : 0/0
  8775 ;;		On exit  : 0/0
  8776 ;;		Unchanged: 0/0
  8777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8778 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8780 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8781 ;;      Totals:         2       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8782 ;;Total ram usage:        3 bytes
  8783 ;; Hardware stack levels used:    1
  8784 ;; Hardware stack levels required when called:    2
  8785 ;; This function calls:
  8786 ;;		i1_OLED_PutChar
  8787 ;; This function is called by:
  8788 ;;		i1_server_Initialize
  8789 ;; This function uses a non-reentrant model
  8790 ;;
  8791                           
  8792                           
  8793                           ;psect for function i1_OLED_Write_String
  8794  15B7                     i1_OLED_Write_String:	
  8795  15B7                     i1l2415:	
  8796                           ;oled.c: 286: while (*s) OLED_PutChar( *s++);
  8797                           
  8798                           ;incstack = 0
  8799                           ; Regs used in i1_OLED_Write_String: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8800                           
  8801  15B7  087C               	movf	i1OLED_Write_String@s,w
  8802  15B8  0084               	movwf	4
  8803  15B9  087D               	movf	i1OLED_Write_String@s+1,w
  8804  15BA  0085               	movwf	5
  8805  15BB  0012               	moviw fsr0++
  8806  15BC  1903               	btfsc	3,2
  8807  15BD  0008               	return
  8808  15BE  087C               	movf	i1OLED_Write_String@s,w
  8809  15BF  0084               	movwf	4
  8810  15C0  087D               	movf	i1OLED_Write_String@s+1,w
  8811  15C1  0085               	movwf	5
  8812  15C2  0800               	movf	0,w	;code access
  8813  15C3  3189  21E5  3195   	fcall	i1_OLED_PutChar
  8814  15C6  3001               	movlw	1
  8815  15C7  07FC               	addwf	i1OLED_Write_String@s,f
  8816  15C8  3000               	movlw	0
  8817  15C9  3DFD               	addwfc	i1OLED_Write_String@s+1,f
  8818  15CA  2DB7               	goto	i1l2415
  8819  15CB                     __end_ofi1_OLED_Write_String:	
  8820                           
  8821                           	psect	text37
  8822  176D                     __ptext37:	
  8823 ;; *************** function i1_OLED_Clear *****************
  8824 ;; Defined at:
  8825 ;;		line 264 in file "oled.c"
  8826 ;; Parameters:    Size  Location     Type
  8827 ;;		None
  8828 ;; Auto vars:     Size  Location     Type
  8829 ;;  OLED_Clear      2   22[BANK0 ] unsigned int 
  8830 ;;  OLED_Clear      2   20[BANK0 ] unsigned int 
  8831 ;; Return value:  Size  Location     Type
  8832 ;;                  1    wreg      void 
  8833 ;; Registers used:
  8834 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8835 ;; Tracked objects:
  8836 ;;		On entry : 0/0
  8837 ;;		On exit  : 0/0
  8838 ;;		Unchanged: 0/0
  8839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8841 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8842 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8843 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8844 ;;Total ram usage:        5 bytes
  8845 ;; Hardware stack levels used:    1
  8846 ;; Hardware stack levels required when called:    3
  8847 ;; This function calls:
  8848 ;;		i1_OLED_PutChar
  8849 ;;		i1_OLED_YX
  8850 ;; This function is called by:
  8851 ;;		i1_server_Initialize
  8852 ;; This function uses a non-reentrant model
  8853 ;;
  8854                           
  8855                           
  8856                           ;psect for function i1_OLED_Clear
  8857  176D                     i1_OLED_Clear:	
  8858                           
  8859                           ;oled.c: 266: for ( uint16_t row = 0; row < 8; row++ ) {
  8860                           
  8861                           ;incstack = 0
  8862                           ; Regs used in i1_OLED_Clear: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8863  176D  0020               	movlb	0	; select bank0
  8864  176E  01B4               	clrf	i1OLED_Clear@row
  8865  176F  01B5               	clrf	i1OLED_Clear@row+1
  8866  1770                     L3:	
  8867  1770  3000               	movlw	0
  8868  1771  0235               	subwf	i1OLED_Clear@row+1,w
  8869  1772  3008               	movlw	8
  8870  1773  1903               	skipnz
  8871  1774  0234               	subwf	i1OLED_Clear@row,w
  8872  1775  1803               	btfsc	3,0
  8873  1776  0008               	return
  8874                           
  8875                           ;oled.c: 267: for ( uint16_t col = 0; col < 16; col++ ) {
  8876  1777  01B6               	clrf	i1OLED_Clear@col
  8877  1778  01B7               	clrf	i1OLED_Clear@col+1
  8878  1779  3000               	movlw	0
  8879  177A  0237               	subwf	i1OLED_Clear@col+1,w
  8880  177B  3010               	movlw	16
  8881  177C  1903               	skipnz
  8882  177D  0236               	subwf	i1OLED_Clear@col,w
  8883  177E  1803               	btfsc	3,0
  8884  177F  2F98               	goto	i1l2407
  8885  1780                     i1l2399:	
  8886                           
  8887                           ;oled.c: 268: OLED_YX( row, col );
  8888  1780  0836               	movf	i1OLED_Clear@col,w
  8889  1781  00FC               	movwf	??i1_OLED_Clear
  8890  1782  087C               	movf	??i1_OLED_Clear,w
  8891  1783  00F5               	movwf	i1OLED_YX@Column
  8892  1784  0834               	movf	i1OLED_Clear@row,w
  8893  1785  3196  26ED  3197   	fcall	i1_OLED_YX
  8894                           
  8895                           ;oled.c: 269: OLED_PutChar(' ');
  8896  1788  3020               	movlw	32
  8897  1789  3189  21E5  3197   	fcall	i1_OLED_PutChar
  8898  178C  3001               	movlw	1
  8899  178D  0020               	movlb	0	; select bank0
  8900  178E  07B6               	addwf	i1OLED_Clear@col,f
  8901  178F  3000               	movlw	0
  8902  1790  3DB7               	addwfc	i1OLED_Clear@col+1,f
  8903  1791  3000               	movlw	0
  8904  1792  0237               	subwf	i1OLED_Clear@col+1,w
  8905  1793  3010               	movlw	16
  8906  1794  1903               	skipnz
  8907  1795  0236               	subwf	i1OLED_Clear@col,w
  8908  1796  1C03               	skipc
  8909  1797  2F80               	goto	i1l2399
  8910  1798                     i1l2407:	
  8911  1798  3001               	movlw	1
  8912  1799  07B4               	addwf	i1OLED_Clear@row,f
  8913  179A  3000               	movlw	0
  8914  179B  3DB5               	addwfc	i1OLED_Clear@row+1,f
  8915  179C  2F70               	goto	L3
  8916  179D                     __end_ofi1_OLED_Clear:	
  8917                           
  8918                           	psect	text38
  8919  16ED                     __ptext38:	
  8920 ;; *************** function i1_OLED_YX *****************
  8921 ;; Defined at:
  8922 ;;		line 213 in file "oled.c"
  8923 ;; Parameters:    Size  Location     Type
  8924 ;;  Row             1    wreg     unsigned char 
  8925 ;;  Column          1    5[COMMON] unsigned char 
  8926 ;; Auto vars:     Size  Location     Type
  8927 ;;  Row             1    9[COMMON] unsigned char 
  8928 ;; Return value:  Size  Location     Type
  8929 ;;                  1    wreg      void 
  8930 ;; Registers used:
  8931 ;;		wreg, status,2, status,0, pclath, cstack
  8932 ;; Tracked objects:
  8933 ;;		On entry : 0/0
  8934 ;;		On exit  : 0/0
  8935 ;;		Unchanged: 0/0
  8936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8937 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8938 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8939 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8940 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8941 ;;Total ram usage:        5 bytes
  8942 ;; Hardware stack levels used:    1
  8943 ;; Hardware stack levels required when called:    2
  8944 ;; This function calls:
  8945 ;;		i1_OLED_Command
  8946 ;; This function is called by:
  8947 ;;		i1_server_Initialize
  8948 ;;		i1_OLED_Clear
  8949 ;; This function uses a non-reentrant model
  8950 ;;
  8951                           
  8952                           
  8953                           ;psect for function i1_OLED_YX
  8954  16ED                     i1_OLED_YX:	
  8955                           
  8956                           ;incstack = 0
  8957                           ; Regs used in i1_OLED_YX: [wreg+status,2+status,0+pclath+cstack]
  8958                           ;i1OLED_YX@Row stored from wreg
  8959  16ED  00F9               	movwf	i1OLED_YX@Row
  8960                           
  8961                           ;oled.c: 215: OLED_Command( 0xB0 + Row);
  8962  16EE  0879               	movf	i1OLED_YX@Row,w
  8963  16EF  3EB0               	addlw	176
  8964  16F0  3196  261E  3196   	fcall	i1_OLED_Command
  8965                           
  8966                           ;oled.c: 216: OLED_Command( 0x00 + (8*Column & 0x0F) );
  8967  16F3  0875               	movf	i1OLED_YX@Column,w
  8968  16F4  00F6               	movwf	??i1_OLED_YX
  8969  16F5  3002               	movlw	2
  8970  16F6                     u211_25:	
  8971  16F6  35F6               	lslf	??i1_OLED_YX,f
  8972  16F7  3EFF               	addlw	-1
  8973  16F8  1D03               	skipz
  8974  16F9  2EF6               	goto	u211_25
  8975  16FA  3576               	lslf	??i1_OLED_YX,w
  8976  16FB  390F               	andlw	15
  8977  16FC  3196  261E  3196   	fcall	i1_OLED_Command
  8978                           
  8979                           ;oled.c: 217: OLED_Command( 0x10 + ((8*Column>>4)&0x0F) );
  8980  16FF  0875               	movf	i1OLED_YX@Column,w
  8981  1700  00F6               	movwf	??i1_OLED_YX
  8982  1701  01F7               	clrf	??i1_OLED_YX+1
  8983  1702  35F6               	lslf	??i1_OLED_YX,f
  8984  1703  0DF7               	rlf	??i1_OLED_YX+1,f
  8985  1704  35F6               	lslf	??i1_OLED_YX,f
  8986  1705  0DF7               	rlf	??i1_OLED_YX+1,f
  8987  1706  35F6               	lslf	??i1_OLED_YX,f
  8988  1707  0DF7               	rlf	??i1_OLED_YX+1,f
  8989  1708  3004               	movlw	4
  8990  1709  00F8               	movwf	??i1_OLED_YX+2
  8991  170A                     u212_25:	
  8992  170A  0D77               	rlf	??i1_OLED_YX+1,w
  8993  170B  0CF7               	rrf	??i1_OLED_YX+1,f
  8994  170C  0CF6               	rrf	??i1_OLED_YX,f
  8995  170D  0BF8               	decfsz	??i1_OLED_YX+2,f
  8996  170E  2F0A               	goto	u212_25
  8997  170F  0876               	movf	??i1_OLED_YX,w
  8998  1710  390F               	andlw	15
  8999  1711  3E10               	addlw	16
  9000  1712  3196  261E         	fcall	i1_OLED_Command
  9001  1714  0008               	return
  9002  1715                     __end_ofi1_OLED_YX:	
  9003                           
  9004                           	psect	text39
  9005  161E                     __ptext39:	
  9006 ;; *************** function i1_OLED_Command *****************
  9007 ;; Defined at:
  9008 ;;		line 138 in file "oled.c"
  9009 ;; Parameters:    Size  Location     Type
  9010 ;;  temp            1    wreg     unsigned char 
  9011 ;; Auto vars:     Size  Location     Type
  9012 ;;  temp            1    4[COMMON] unsigned char 
  9013 ;; Return value:  Size  Location     Type
  9014 ;;                  1    wreg      void 
  9015 ;; Registers used:
  9016 ;;		wreg, status,2, status,0, pclath, cstack
  9017 ;; Tracked objects:
  9018 ;;		On entry : 0/0
  9019 ;;		On exit  : 0/0
  9020 ;;		Unchanged: 0/0
  9021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9023 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9024 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9025 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9026 ;;Total ram usage:        3 bytes
  9027 ;; Hardware stack levels used:    1
  9028 ;; Hardware stack levels required when called:    1
  9029 ;; This function calls:
  9030 ;;		i1_Send_I2C_Data
  9031 ;;		i1_Send_I2C_StartBit
  9032 ;;		i1_Send_I2C_StopBit
  9033 ;; This function is called by:
  9034 ;;		i1_OLED_YX
  9035 ;; This function uses a non-reentrant model
  9036 ;;
  9037                           
  9038                           
  9039                           ;psect for function i1_OLED_Command
  9040  161E                     i1_OLED_Command:	
  9041                           
  9042                           ;incstack = 0
  9043                           ; Regs used in i1_OLED_Command: [wreg+status,2+status,0+pclath+cstack]
  9044                           ;i1OLED_Command@temp stored from wreg
  9045  161E  00F4               	movwf	i1OLED_Command@temp
  9046                           
  9047                           ;oled.c: 140: Send_I2C_StartBit();
  9048  161F  3195  254A  3196   	fcall	i1_Send_I2C_StartBit
  9049                           
  9050                           ;oled.c: 141: Send_I2C_Data(0x3C << 1);
  9051  1622  3078               	movlw	120
  9052  1623  00F0               	movwf	i1Send_I2C_Data@databyte
  9053  1624  3000               	movlw	0
  9054  1625  00F1               	movwf	i1Send_I2C_Data@databyte+1
  9055  1626  3195  2572  3196   	fcall	i1_Send_I2C_Data
  9056                           
  9057                           ;oled.c: 142: Send_I2C_Data(0x00);
  9058  1629  3000               	movlw	0
  9059  162A  00F0               	movwf	i1Send_I2C_Data@databyte
  9060  162B  00F1               	movwf	i1Send_I2C_Data@databyte+1
  9061  162C  3195  2572  3196   	fcall	i1_Send_I2C_Data
  9062                           
  9063                           ;oled.c: 143: Send_I2C_Data(temp);
  9064  162F  0874               	movf	i1OLED_Command@temp,w
  9065  1630  00F2               	movwf	??i1_OLED_Command
  9066  1631  01F3               	clrf	??i1_OLED_Command+1
  9067  1632  0872               	movf	??i1_OLED_Command,w
  9068  1633  00F0               	movwf	i1Send_I2C_Data@databyte
  9069  1634  0873               	movf	??i1_OLED_Command+1,w
  9070  1635  00F1               	movwf	i1Send_I2C_Data@databyte+1
  9071  1636  3195  2572  3196   	fcall	i1_Send_I2C_Data
  9072                           
  9073                           ;oled.c: 144: Send_I2C_StopBit();
  9074  1639  3195  2552         	fcall	i1_Send_I2C_StopBit
  9075  163B  0008               	return
  9076  163C                     __end_ofi1_OLED_Command:	
  9077                           
  9078                           	psect	text40
  9079  09E5                     __ptext40:	
  9080 ;; *************** function i1_OLED_PutChar *****************
  9081 ;; Defined at:
  9082 ;;		line 229 in file "oled.c"
  9083 ;; Parameters:    Size  Location     Type
  9084 ;;  ch              1    wreg     unsigned char 
  9085 ;; Auto vars:     Size  Location     Type
  9086 ;;  ch              1   19[BANK0 ] unsigned char 
  9087 ;;  OLED_PutChar    9    6[BANK0 ] unsigned char [9]
  9088 ;;  OLED_PutChar    2   17[BANK0 ] int 
  9089 ;;  OLED_PutChar    2   15[BANK0 ] PTR const unsigned char 
  9090 ;;		 -> OledFont(768), 
  9091 ;; Return value:  Size  Location     Type
  9092 ;;                  1    wreg      void 
  9093 ;; Registers used:
  9094 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9095 ;; Tracked objects:
  9096 ;;		On entry : 0/0
  9097 ;;		On exit  : 0/0
  9098 ;;		Unchanged: 0/0
  9099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9101 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9102 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9103 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9104 ;;Total ram usage:       20 bytes
  9105 ;; Hardware stack levels used:    1
  9106 ;; Hardware stack levels required when called:    1
  9107 ;; This function calls:
  9108 ;;		i1_Send_I2C_Data
  9109 ;;		i1_Send_I2C_StartBit
  9110 ;;		i1_Send_I2C_StopBit
  9111 ;;		i1_memmove
  9112 ;; This function is called by:
  9113 ;;		i1_OLED_Clear
  9114 ;;		i1_OLED_Write_String
  9115 ;; This function uses a non-reentrant model
  9116 ;;
  9117                           
  9118                           
  9119                           ;psect for function i1_OLED_PutChar
  9120  09E5                     i1_OLED_PutChar:	
  9121                           
  9122                           ;incstack = 0
  9123                           ; Regs used in i1_OLED_PutChar: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9124                           ;i1OLED_PutChar@ch stored from wreg
  9125  09E5  0020               	movlb	0	; select bank0
  9126  09E6  00B3               	movwf	i1OLED_PutChar@ch
  9127                           
  9128                           ;oled.c: 231: if ( ( ch < 32 ) || ( ch > 127 ) ){
  9129  09E7  3020               	movlw	32
  9130  09E8  0233               	subwf	i1OLED_PutChar@ch,w
  9131  09E9  1C03               	skipc
  9132  09EA  29EF               	goto	i1l2065
  9133  09EB  3080               	movlw	128
  9134  09EC  0233               	subwf	i1OLED_PutChar@ch,w
  9135  09ED  1C03               	skipc
  9136  09EE  29F3               	goto	i1l2067
  9137  09EF                     i1l2065:	
  9138                           
  9139                           ;oled.c: 232: ch = ' ';
  9140  09EF  3020               	movlw	32
  9141  09F0  00A0               	movwf	??i1_OLED_PutChar
  9142  09F1  0820               	movf	??i1_OLED_PutChar,w
  9143  09F2  00B3               	movwf	i1OLED_PutChar@ch
  9144  09F3                     i1l2067:	
  9145                           
  9146                           ;oled.c: 233: }
  9147                           ;oled.c: 235: const uint8_t *base = &OledFont[ch - 32][0];
  9148  09F3  0833               	movf	i1OLED_PutChar@ch,w
  9149  09F4  00A0               	movwf	??i1_OLED_PutChar
  9150  09F5  01A1               	clrf	??i1_OLED_PutChar+1
  9151  09F6  35A0               	lslf	??i1_OLED_PutChar,f
  9152  09F7  0DA1               	rlf	??i1_OLED_PutChar+1,f
  9153  09F8  35A0               	lslf	??i1_OLED_PutChar,f
  9154  09F9  0DA1               	rlf	??i1_OLED_PutChar+1,f
  9155  09FA  35A0               	lslf	??i1_OLED_PutChar,f
  9156  09FB  0DA1               	rlf	??i1_OLED_PutChar+1,f
  9157  09FC  0820               	movf	??i1_OLED_PutChar,w
  9158  09FD  3E00               	addlw	0
  9159  09FE  00A2               	movwf	??i1_OLED_PutChar+2
  9160  09FF  30FF               	movlw	255
  9161  0A00  3D21               	addwfc	??i1_OLED_PutChar+1,w
  9162  0A01  00A3               	movwf	??i1_OLED_PutChar+3
  9163  0A02  3053               	movlw	low (_OledFont| (0+32768))
  9164  0A03  00A4               	movwf	??i1_OLED_PutChar+4
  9165  0A04  3080               	movlw	high (_OledFont| (0+32768))
  9166  0A05  00A5               	movwf	??i1_OLED_PutChar+5
  9167  0A06  0822               	movf	??i1_OLED_PutChar+2,w
  9168  0A07  0724               	addwf	??i1_OLED_PutChar+4,w
  9169  0A08  00AF               	movwf	i1OLED_PutChar@base
  9170  0A09  0823               	movf	??i1_OLED_PutChar+3,w
  9171  0A0A  3D25               	addwfc	??i1_OLED_PutChar+5,w
  9172  0A0B  00B0               	movwf	i1OLED_PutChar@base+1
  9173                           
  9174                           ;oled.c: 237: uint8_t bytes[9];
  9175                           ;oled.c: 238: bytes[0] = 0x40;
  9176  0A0C  3040               	movlw	64
  9177  0A0D  00A0               	movwf	??i1_OLED_PutChar
  9178  0A0E  0820               	movf	??i1_OLED_PutChar,w
  9179  0A0F  00A6               	movwf	i1OLED_PutChar@bytes
  9180                           
  9181                           ;oled.c: 239: memmove( bytes + 1, base, 8 );
  9182  0A10  0830               	movf	i1OLED_PutChar@base+1,w
  9183  0A11  00F1               	movwf	i1memmove@s1+1
  9184  0A12  082F               	movf	i1OLED_PutChar@base,w
  9185  0A13  00F0               	movwf	i1memmove@s1
  9186  0A14  3008               	movlw	8
  9187  0A15  00F2               	movwf	i1memmove@n
  9188  0A16  3000               	movlw	0
  9189  0A17  00F3               	movwf	i1memmove@n+1
  9190  0A18  3027               	movlw	(low ((i1OLED_PutChar@bytes| 0+1)))& (0+255)
  9191  0A19  3188  20B0  3189   	fcall	i1_memmove
  9192                           
  9193                           ;oled.c: 241: Send_I2C_StartBit();
  9194  0A1C  3195  254A  3189   	fcall	i1_Send_I2C_StartBit
  9195                           
  9196                           ;oled.c: 242: Send_I2C_Data(0x3C << 1);
  9197  0A1F  3078               	movlw	120
  9198  0A20  00F0               	movwf	i1Send_I2C_Data@databyte
  9199  0A21  3000               	movlw	0
  9200  0A22  00F1               	movwf	i1Send_I2C_Data@databyte+1
  9201  0A23  3195  2572  3189   	fcall	i1_Send_I2C_Data
  9202                           
  9203                           ;oled.c: 243: Send_I2C_Data(0x40);
  9204  0A26  3040               	movlw	64
  9205  0A27  00F0               	movwf	i1Send_I2C_Data@databyte
  9206  0A28  3000               	movlw	0
  9207  0A29  00F1               	movwf	i1Send_I2C_Data@databyte+1
  9208  0A2A  3195  2572  3189   	fcall	i1_Send_I2C_Data
  9209                           
  9210                           ;oled.c: 245: int i;
  9211                           ;oled.c: 247: for (i = 1; i <= 8; i++){
  9212  0A2D  3001               	movlw	1
  9213  0A2E  0020               	movlb	0	; select bank0
  9214  0A2F  00B1               	movwf	i1OLED_PutChar@i
  9215  0A30  3000               	movlw	0
  9216  0A31  00B2               	movwf	i1OLED_PutChar@i+1
  9217  0A32  0832               	movf	i1OLED_PutChar@i+1,w
  9218  0A33  3A80               	xorlw	128
  9219  0A34  00A0               	movwf	??i1_OLED_PutChar
  9220  0A35  3080               	movlw	128
  9221  0A36  0220               	subwf	??i1_OLED_PutChar,w
  9222  0A37  1D03               	skipz
  9223  0A38  2A3B               	goto	u215_25
  9224  0A39  3009               	movlw	9
  9225  0A3A  0231               	subwf	i1OLED_PutChar@i,w
  9226  0A3B                     u215_25:	
  9227  0A3B  1803               	btfsc	3,0
  9228  0A3C  2A5C               	goto	i1l2091
  9229  0A3D                     i1l2085:	
  9230                           
  9231                           ;oled.c: 248: Send_I2C_Data(bytes[i]);
  9232  0A3D  0020               	movlb	0	; select bank0
  9233  0A3E  0831               	movf	i1OLED_PutChar@i,w
  9234  0A3F  3E26               	addlw	(low (i1OLED_PutChar@bytes| 0))& (0+255)
  9235  0A40  0086               	movwf	6
  9236  0A41  0187               	clrf	7
  9237  0A42  0801               	movf	1,w
  9238  0A43  00A0               	movwf	??i1_OLED_PutChar
  9239  0A44  01A1               	clrf	??i1_OLED_PutChar+1
  9240  0A45  0820               	movf	??i1_OLED_PutChar,w
  9241  0A46  00F0               	movwf	i1Send_I2C_Data@databyte
  9242  0A47  0821               	movf	??i1_OLED_PutChar+1,w
  9243  0A48  00F1               	movwf	i1Send_I2C_Data@databyte+1
  9244  0A49  3195  2572  3189   	fcall	i1_Send_I2C_Data
  9245  0A4C  3001               	movlw	1
  9246  0A4D  0020               	movlb	0	; select bank0
  9247  0A4E  07B1               	addwf	i1OLED_PutChar@i,f
  9248  0A4F  3000               	movlw	0
  9249  0A50  3DB2               	addwfc	i1OLED_PutChar@i+1,f
  9250  0A51  0832               	movf	i1OLED_PutChar@i+1,w
  9251  0A52  3A80               	xorlw	128
  9252  0A53  00A0               	movwf	??i1_OLED_PutChar
  9253  0A54  3080               	movlw	128
  9254  0A55  0220               	subwf	??i1_OLED_PutChar,w
  9255  0A56  1D03               	skipz
  9256  0A57  2A5A               	goto	u216_25
  9257  0A58  3009               	movlw	9
  9258  0A59  0231               	subwf	i1OLED_PutChar@i,w
  9259  0A5A                     u216_25:	
  9260  0A5A  1C03               	skipc
  9261  0A5B  2A3D               	goto	i1l2085
  9262  0A5C                     i1l2091:	
  9263                           
  9264                           ;oled.c: 249: }
  9265                           ;oled.c: 251: Send_I2C_StopBit();
  9266  0A5C  3195  2552         	fcall	i1_Send_I2C_StopBit
  9267  0A5E  0008               	return
  9268  0A5F                     __end_ofi1_OLED_PutChar:	
  9269                           
  9270                           	psect	text41
  9271  08B0                     __ptext41:	
  9272 ;; *************** function i1_memmove *****************
  9273 ;; Defined at:
  9274 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\memmove.c"
  9275 ;; Parameters:    Size  Location     Type
  9276 ;;  d1              1    wreg     PTR void 
  9277 ;;		 -> OLED_PutChar@bytes(9), 
  9278 ;;  s1              2    0[COMMON] PTR const void 
  9279 ;;		 -> OledFont(768), 
  9280 ;;  n               2    2[COMMON] unsigned int 
  9281 ;; Auto vars:     Size  Location     Type
  9282 ;;  d1              1    8[COMMON] PTR void 
  9283 ;;		 -> OLED_PutChar@bytes(9), 
  9284 ;;  memmove         2    9[COMMON] PTR const unsigned char 
  9285 ;;		 -> OledFont(768), 
  9286 ;;  memmove         1   11[COMMON] PTR unsigned char 
  9287 ;;		 -> OLED_PutChar@bytes(9), 
  9288 ;; Return value:  Size  Location     Type
  9289 ;;                  1    wreg      PTR void 
  9290 ;; Registers used:
  9291 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  9292 ;; Tracked objects:
  9293 ;;		On entry : 0/0
  9294 ;;		On exit  : 0/0
  9295 ;;		Unchanged: 0/0
  9296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9297 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9298 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9299 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9300 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9301 ;;Total ram usage:       12 bytes
  9302 ;; Hardware stack levels used:    1
  9303 ;; This function calls:
  9304 ;;		Nothing
  9305 ;; This function is called by:
  9306 ;;		i1_OLED_PutChar
  9307 ;; This function uses a non-reentrant model
  9308 ;;
  9309                           
  9310                           
  9311                           ;psect for function i1_memmove
  9312  08B0                     i1_memmove:	
  9313                           
  9314                           ;incstack = 0
  9315                           ; Regs used in i1_memmove: [wreg-fsr1h+status,2+status,0+pclath]
  9316                           ;i1memmove@d1 stored from wreg
  9317  08B0  00F8               	movwf	i1memmove@d1
  9318  08B1  0871               	movf	i1memmove@s1+1,w
  9319  08B2  00FA               	movwf	i1memmove@s+1
  9320  08B3  0870               	movf	i1memmove@s1,w
  9321  08B4  00F9               	movwf	i1memmove@s
  9322  08B5  0878               	movf	i1memmove@d1,w
  9323  08B6  00F4               	movwf	??i1_memmove
  9324  08B7  0874               	movf	??i1_memmove,w
  9325  08B8  00FB               	movwf	i1memmove@d
  9326  08B9  087B               	movf	i1memmove@d,w
  9327  08BA  00F4               	movwf	??i1_memmove
  9328  08BB  3000               	movlw	0
  9329  08BC  00F5               	movwf	??i1_memmove+1
  9330  08BD  0875               	movf	??i1_memmove+1,w
  9331  08BE  027A               	subwf	i1memmove@s+1,w
  9332  08BF  1D03               	skipz
  9333  08C0  28C3               	goto	u179_25
  9334  08C1  0874               	movf	??i1_memmove,w
  9335  08C2  0279               	subwf	i1memmove@s,w
  9336  08C3                     u179_25:	
  9337  08C3  1803               	skipnc
  9338  08C4  28F9               	goto	i1l1929
  9339  08C5  0872               	movf	i1memmove@n,w
  9340  08C6  0779               	addwf	i1memmove@s,w
  9341  08C7  00F4               	movwf	??i1_memmove
  9342  08C8  0873               	movf	i1memmove@n+1,w
  9343  08C9  3D7A               	addwfc	i1memmove@s+1,w
  9344  08CA  00F5               	movwf	??i1_memmove+1
  9345  08CB  087B               	movf	i1memmove@d,w
  9346  08CC  00F6               	movwf	??i1_memmove+2
  9347  08CD  3000               	movlw	0
  9348  08CE  00F7               	movwf	??i1_memmove+3
  9349  08CF  0875               	movf	??i1_memmove+1,w
  9350  08D0  0277               	subwf	??i1_memmove+3,w
  9351  08D1  1D03               	skipz
  9352  08D2  28D5               	goto	u180_25
  9353  08D3  0874               	movf	??i1_memmove,w
  9354  08D4  0276               	subwf	??i1_memmove+2,w
  9355  08D5                     u180_25:	
  9356  08D5  1803               	skipnc
  9357  08D6  28F9               	goto	i1l1929
  9358  08D7  0872               	movf	i1memmove@n,w
  9359  08D8  07F9               	addwf	i1memmove@s,f
  9360  08D9  0873               	movf	i1memmove@n+1,w
  9361  08DA  3DFA               	addwfc	i1memmove@s+1,f
  9362  08DB  0872               	movf	i1memmove@n,w
  9363  08DC  00F4               	movwf	??i1_memmove
  9364  08DD  0874               	movf	??i1_memmove,w
  9365  08DE  07FB               	addwf	i1memmove@d,f
  9366  08DF                     i1l1925:	
  9367  08DF  3001               	movlw	1
  9368  08E0  02F9               	subwf	i1memmove@s,f
  9369  08E1  3000               	movlw	0
  9370  08E2  3BFA               	subwfb	i1memmove@s+1,f
  9371  08E3  0879               	movf	i1memmove@s,w
  9372  08E4  0084               	movwf	4
  9373  08E5  087A               	movf	i1memmove@s+1,w
  9374  08E6  0085               	movwf	5
  9375  08E7  0800               	movf	0,w	;code access
  9376  08E8  00F4               	movwf	??i1_memmove
  9377  08E9  3001               	movlw	1
  9378  08EA  02FB               	subwf	i1memmove@d,f
  9379  08EB  087B               	movf	i1memmove@d,w
  9380  08EC  0086               	movwf	6
  9381  08ED  0187               	clrf	7
  9382  08EE  0874               	movf	??i1_memmove,w
  9383  08EF  0081               	movwf	1
  9384  08F0  3001               	movlw	1
  9385  08F1  02F2               	subwf	i1memmove@n,f
  9386  08F2  3000               	movlw	0
  9387  08F3  3BF3               	subwfb	i1memmove@n+1,f
  9388  08F4  0872               	movf	i1memmove@n,w
  9389  08F5  0473               	iorwf	i1memmove@n+1,w
  9390  08F6  1903               	btfsc	3,2
  9391  08F7  0008               	return
  9392  08F8  28DF               	goto	i1l1925
  9393  08F9                     i1l1929:	
  9394  08F9  0872               	movf	i1memmove@n,w
  9395  08FA  0473               	iorwf	i1memmove@n+1,w
  9396  08FB  1903               	btfsc	3,2
  9397  08FC  0008               	return
  9398  08FD  0879               	movf	i1memmove@s,w
  9399  08FE  0084               	movwf	4
  9400  08FF  087A               	movf	i1memmove@s+1,w
  9401  0900  0085               	movwf	5
  9402  0901  0800               	movf	0,w	;code access
  9403  0902  00F4               	movwf	??i1_memmove
  9404  0903  087B               	movf	i1memmove@d,w
  9405  0904  0086               	movwf	6
  9406  0905  0187               	clrf	7
  9407  0906  0874               	movf	??i1_memmove,w
  9408  0907  0081               	movwf	1
  9409  0908  3001               	movlw	1
  9410  0909  07F9               	addwf	i1memmove@s,f
  9411  090A  3000               	movlw	0
  9412  090B  3DFA               	addwfc	i1memmove@s+1,f
  9413  090C  3001               	movlw	1
  9414  090D  00F4               	movwf	??i1_memmove
  9415  090E  0874               	movf	??i1_memmove,w
  9416  090F  07FB               	addwf	i1memmove@d,f
  9417  0910  3001               	movlw	1
  9418  0911  02F2               	subwf	i1memmove@n,f
  9419  0912  3000               	movlw	0
  9420  0913  3BF3               	subwfb	i1memmove@n+1,f
  9421  0914  28F9               	goto	i1l1929
  9422  0915                     __end_ofi1_memmove:	
  9423                           ;	Return value of i1_memmove is never used
  9424                           
  9425                           
  9426                           	psect	text42
  9427  1552                     __ptext42:	
  9428 ;; *************** function i1_Send_I2C_StopBit *****************
  9429 ;; Defined at:
  9430 ;;		line 106 in file "I2C.c"
  9431 ;; Parameters:    Size  Location     Type
  9432 ;;		None
  9433 ;; Auto vars:     Size  Location     Type
  9434 ;;		None
  9435 ;; Return value:  Size  Location     Type
  9436 ;;                  1    wreg      void 
  9437 ;; Registers used:
  9438 ;;		None
  9439 ;; Tracked objects:
  9440 ;;		On entry : 0/0
  9441 ;;		On exit  : 0/0
  9442 ;;		Unchanged: 0/0
  9443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9448 ;;Total ram usage:        0 bytes
  9449 ;; Hardware stack levels used:    1
  9450 ;; This function calls:
  9451 ;;		Nothing
  9452 ;; This function is called by:
  9453 ;;		i1_OLED_Command
  9454 ;;		i1_OLED_PutChar
  9455 ;; This function uses a non-reentrant model
  9456 ;;
  9457                           
  9458                           
  9459                           ;psect for function i1_Send_I2C_StopBit
  9460  1552                     i1_Send_I2C_StopBit:	
  9461                           
  9462                           ;I2C.c: 108: PIR1bits.SSP1IF=0;
  9463                           
  9464                           ;incstack = 0
  9465                           ; Regs used in i1_Send_I2C_StopBit: []
  9466  1552  0020               	movlb	0	; select bank0
  9467  1553  1191               	bcf	17,3	;volatile
  9468                           
  9469                           ;I2C.c: 109: SSPCON2bits.PEN=1;
  9470  1554  0024               	movlb	4	; select bank4
  9471  1555  1516               	bsf	22,2	;volatile
  9472  1556                     i1l134:	
  9473                           ;I2C.c: 110: while(!PIR1bits.SSP1IF);
  9474                           
  9475  1556  0020               	movlb	0	; select bank0
  9476  1557  1991               	btfsc	17,3	;volatile
  9477  1558  0008               	return
  9478  1559  2D56               	goto	i1l134
  9479  155A                     __end_ofi1_Send_I2C_StopBit:	
  9480                           
  9481                           	psect	text43
  9482  154A                     __ptext43:	
  9483 ;; *************** function i1_Send_I2C_StartBit *****************
  9484 ;; Defined at:
  9485 ;;		line 96 in file "I2C.c"
  9486 ;; Parameters:    Size  Location     Type
  9487 ;;		None
  9488 ;; Auto vars:     Size  Location     Type
  9489 ;;		None
  9490 ;; Return value:  Size  Location     Type
  9491 ;;                  1    wreg      void 
  9492 ;; Registers used:
  9493 ;;		None
  9494 ;; Tracked objects:
  9495 ;;		On entry : 0/0
  9496 ;;		On exit  : 0/0
  9497 ;;		Unchanged: 0/0
  9498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9503 ;;Total ram usage:        0 bytes
  9504 ;; Hardware stack levels used:    1
  9505 ;; This function calls:
  9506 ;;		Nothing
  9507 ;; This function is called by:
  9508 ;;		i1_OLED_Command
  9509 ;;		i1_OLED_PutChar
  9510 ;; This function uses a non-reentrant model
  9511 ;;
  9512                           
  9513                           
  9514                           ;psect for function i1_Send_I2C_StartBit
  9515  154A                     i1_Send_I2C_StartBit:	
  9516                           
  9517                           ;I2C.c: 98: PIR1bits.SSP1IF=0;
  9518                           
  9519                           ;incstack = 0
  9520                           ; Regs used in i1_Send_I2C_StartBit: []
  9521  154A  0020               	movlb	0	; select bank0
  9522  154B  1191               	bcf	17,3	;volatile
  9523                           
  9524                           ;I2C.c: 99: SSPCON2bits.SEN=1;
  9525  154C  0024               	movlb	4	; select bank4
  9526  154D  1416               	bsf	22,0	;volatile
  9527  154E                     i1l128:	
  9528                           ;I2C.c: 100: while(!PIR1bits.SSP1IF);
  9529                           
  9530  154E  0020               	movlb	0	; select bank0
  9531  154F  1991               	btfsc	17,3	;volatile
  9532  1550  0008               	return
  9533  1551  2D4E               	goto	i1l128
  9534  1552                     __end_ofi1_Send_I2C_StartBit:	
  9535                           
  9536                           	psect	text44
  9537  1572                     __ptext44:	
  9538 ;; *************** function i1_Send_I2C_Data *****************
  9539 ;; Defined at:
  9540 ;;		line 48 in file "I2C.c"
  9541 ;; Parameters:    Size  Location     Type
  9542 ;;  databyte        2    0[COMMON] unsigned int 
  9543 ;; Auto vars:     Size  Location     Type
  9544 ;;		None
  9545 ;; Return value:  Size  Location     Type
  9546 ;;                  1    wreg      void 
  9547 ;; Registers used:
  9548 ;;		wreg
  9549 ;; Tracked objects:
  9550 ;;		On entry : 0/0
  9551 ;;		On exit  : 0/0
  9552 ;;		Unchanged: 0/0
  9553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9554 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9557 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9558 ;;Total ram usage:        2 bytes
  9559 ;; Hardware stack levels used:    1
  9560 ;; This function calls:
  9561 ;;		Nothing
  9562 ;; This function is called by:
  9563 ;;		i1_OLED_Command
  9564 ;;		i1_OLED_PutChar
  9565 ;; This function uses a non-reentrant model
  9566 ;;
  9567                           
  9568                           
  9569                           ;psect for function i1_Send_I2C_Data
  9570  1572                     i1_Send_I2C_Data:	
  9571                           
  9572                           ;I2C.c: 50: PIR1bits.SSP1IF=0;
  9573                           
  9574                           ;incstack = 0
  9575                           ; Regs used in i1_Send_I2C_Data: [wreg]
  9576  1572  0020               	movlb	0	; select bank0
  9577  1573  1191               	bcf	17,3	;volatile
  9578                           
  9579                           ;I2C.c: 51: SSPBUF = databyte;
  9580  1574  0870               	movf	i1Send_I2C_Data@databyte,w
  9581  1575  0024               	movlb	4	; select bank4
  9582  1576  0091               	movwf	17	;volatile
  9583  1577                     i1l110:	
  9584                           ;I2C.c: 52: while(!PIR1bits.SSP1IF);
  9585                           
  9586  1577  0020               	movlb	0	; select bank0
  9587  1578  1991               	btfsc	17,3	;volatile
  9588  1579  0008               	return
  9589  157A  2D77               	goto	i1l110
  9590  157B                     __end_ofi1_Send_I2C_Data:	
  9591                           
  9592                           	psect	text45
  9593  15CB                     __ptext45:	
  9594 ;; *************** function i1_EUSART_Write_Text *****************
  9595 ;; Defined at:
  9596 ;;		line 131 in file "EUSART.c"
  9597 ;; Parameters:    Size  Location     Type
  9598 ;;  text            2    1[COMMON] PTR unsigned char 
  9599 ;;		 -> OLED_Write_Integer@status(2), STR_12(20), STR_10(14), STR_8(5), 
  9600 ;;		 -> STR_6(16), STR_5(17), main@status(2), 
  9601 ;; Auto vars:     Size  Location     Type
  9602 ;;  EUSART_Write    2    4[COMMON] int 
  9603 ;; Return value:  Size  Location     Type
  9604 ;;                  1    wreg      void 
  9605 ;; Registers used:
  9606 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9607 ;; Tracked objects:
  9608 ;;		On entry : 0/0
  9609 ;;		On exit  : 0/0
  9610 ;;		Unchanged: 0/0
  9611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9612 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9613 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9614 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9615 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9616 ;;Total ram usage:        5 bytes
  9617 ;; Hardware stack levels used:    1
  9618 ;; Hardware stack levels required when called:    1
  9619 ;; This function calls:
  9620 ;;		i1_EUSART_Write
  9621 ;; This function is called by:
  9622 ;;		i1_server_Initialize
  9623 ;; This function uses a non-reentrant model
  9624 ;;
  9625                           
  9626                           
  9627                           ;psect for function i1_EUSART_Write_Text
  9628  15CB                     i1_EUSART_Write_Text:	
  9629                           
  9630                           ;EUSART.c: 133: int i;
  9631                           ;EUSART.c: 134: for(i=0;text[i]!='\0';i++)
  9632                           
  9633                           ;incstack = 0
  9634                           ; Regs used in i1_EUSART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9635  15CB  01F4               	clrf	i1EUSART_Write_Text@i
  9636  15CC  01F5               	clrf	i1EUSART_Write_Text@i+1
  9637  15CD                     i1l2385:	
  9638  15CD  0871               	movf	i1EUSART_Write_Text@text,w
  9639  15CE  0774               	addwf	i1EUSART_Write_Text@i,w
  9640  15CF  0084               	movwf	4
  9641  15D0  0872               	movf	i1EUSART_Write_Text@text+1,w
  9642  15D1  3D75               	addwfc	i1EUSART_Write_Text@i+1,w
  9643  15D2  0085               	movwf	5
  9644  15D3  0012               	moviw fsr0++
  9645  15D4  1903               	btfsc	3,2
  9646  15D5  0008               	return
  9647                           
  9648                           ;EUSART.c: 135: EUSART_Write(text[i]);
  9649  15D6  0871               	movf	i1EUSART_Write_Text@text,w
  9650  15D7  0774               	addwf	i1EUSART_Write_Text@i,w
  9651  15D8  0084               	movwf	4
  9652  15D9  0872               	movf	i1EUSART_Write_Text@text+1,w
  9653  15DA  3D75               	addwfc	i1EUSART_Write_Text@i+1,w
  9654  15DB  0085               	movwf	5
  9655  15DC  0800               	movf	0,w	;code access
  9656  15DD  3195  2542  3195   	fcall	i1_EUSART_Write
  9657  15E0  3001               	movlw	1
  9658  15E1  07F4               	addwf	i1EUSART_Write_Text@i,f
  9659  15E2  3000               	movlw	0
  9660  15E3  3DF5               	addwfc	i1EUSART_Write_Text@i+1,f
  9661  15E4  2DCD               	goto	i1l2385
  9662  15E5                     __end_ofi1_EUSART_Write_Text:	
  9663                           
  9664                           	psect	text46
  9665  1542                     __ptext46:	
  9666 ;; *************** function i1_EUSART_Write *****************
  9667 ;; Defined at:
  9668 ;;		line 98 in file "EUSART.c"
  9669 ;; Parameters:    Size  Location     Type
  9670 ;;  txData          1    wreg     unsigned char 
  9671 ;; Auto vars:     Size  Location     Type
  9672 ;;  txData          1    0[COMMON] unsigned char 
  9673 ;; Return value:  Size  Location     Type
  9674 ;;                  1    wreg      void 
  9675 ;; Registers used:
  9676 ;;		wreg
  9677 ;; Tracked objects:
  9678 ;;		On entry : 0/0
  9679 ;;		On exit  : 0/0
  9680 ;;		Unchanged: 0/0
  9681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9683 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9685 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9686 ;;Total ram usage:        1 bytes
  9687 ;; Hardware stack levels used:    1
  9688 ;; This function calls:
  9689 ;;		Nothing
  9690 ;; This function is called by:
  9691 ;;		i1_EUSART_Write_Text
  9692 ;; This function uses a non-reentrant model
  9693 ;;
  9694                           
  9695                           
  9696                           ;psect for function i1_EUSART_Write
  9697  1542                     i1_EUSART_Write:	
  9698                           
  9699                           ;incstack = 0
  9700                           ; Regs used in i1_EUSART_Write: [wreg]
  9701                           ;i1EUSART_Write@txData stored from wreg
  9702  1542  00F0               	movwf	i1EUSART_Write@txData
  9703  1543                     i1l74:	
  9704                           ;EUSART.c: 101: {
  9705                           
  9706                           ;EUSART.c: 100: while(0 == PIR1bits.TXIF)
  9707                           
  9708  1543  0020               	movlb	0	; select bank0
  9709  1544  1E11               	btfss	17,4	;volatile
  9710  1545  2D43               	goto	i1l74
  9711                           
  9712                           ;EUSART.c: 102: }
  9713                           ;EUSART.c: 104: TX1REG = txData;
  9714  1546  0870               	movf	i1EUSART_Write@txData,w
  9715  1547  0023               	movlb	3	; select bank3
  9716  1548  009A               	movwf	26	;volatile
  9717  1549  0008               	return
  9718  154A                     __end_ofi1_EUSART_Write:	
  9719                           
  9720                           	psect	text47
  9721  1601                     __ptext47:	
  9722 ;; *************** function i1_EUSART_Read_Text *****************
  9723 ;; Defined at:
  9724 ;;		line 107 in file "EUSART.c"
  9725 ;; Parameters:    Size  Location     Type
  9726 ;;  Output          1    wreg     PTR unsigned char 
  9727 ;;		 -> buf(50), 
  9728 ;;  length          2    0[COMMON] unsigned int 
  9729 ;; Auto vars:     Size  Location     Type
  9730 ;;  Output          1    4[COMMON] PTR unsigned char 
  9731 ;;		 -> buf(50), 
  9732 ;;  EUSART_Read_    2    5[COMMON] int 
  9733 ;;  EUSART_Read_    2    0        int 
  9734 ;; Return value:  Size  Location     Type
  9735 ;;                  1    wreg      void 
  9736 ;; Registers used:
  9737 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9738 ;; Tracked objects:
  9739 ;;		On entry : 0/0
  9740 ;;		On exit  : 0/0
  9741 ;;		Unchanged: 0/0
  9742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9743 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9744 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9745 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9746 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9747 ;;Total ram usage:        7 bytes
  9748 ;; Hardware stack levels used:    1
  9749 ;; Hardware stack levels required when called:    1
  9750 ;; This function calls:
  9751 ;;		i1_EUSART_Read
  9752 ;; This function is called by:
  9753 ;;		i1_server_Initialize
  9754 ;; This function uses a non-reentrant model
  9755 ;;
  9756                           
  9757                           
  9758                           ;psect for function i1_EUSART_Read_Text
  9759  1601                     i1_EUSART_Read_Text:	
  9760                           
  9761                           ;incstack = 0
  9762                           ; Regs used in i1_EUSART_Read_Text: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9763                           ;i1EUSART_Read_Text@Output stored from wreg
  9764  1601  00F4               	movwf	i1EUSART_Read_Text@Output
  9765                           
  9766                           ;EUSART.c: 109: int i;
  9767                           ;EUSART.c: 110: for(int i=0;i<length;i++)
  9768  1602  01F5               	clrf	i1EUSART_Read_Text@i_111
  9769  1603  01F6               	clrf	i1EUSART_Read_Text@i_111+1
  9770  1604                     i1l2377:	
  9771  1604  0871               	movf	i1EUSART_Read_Text@length+1,w
  9772  1605  0276               	subwf	i1EUSART_Read_Text@i_111+1,w
  9773  1606  1D03               	skipz
  9774  1607  2E0A               	goto	u279_25
  9775  1608  0870               	movf	i1EUSART_Read_Text@length,w
  9776  1609  0275               	subwf	i1EUSART_Read_Text@i_111,w
  9777  160A                     u279_25:	
  9778  160A  1803               	btfsc	3,0
  9779  160B  0008               	return
  9780                           
  9781                           ;EUSART.c: 111: Output[i] = EUSART_Read();
  9782  160C  3195  258D  3196   	fcall	i1_EUSART_Read
  9783  160F  00F2               	movwf	??i1_EUSART_Read_Text
  9784  1610  0875               	movf	i1EUSART_Read_Text@i_111,w
  9785  1611  0774               	addwf	i1EUSART_Read_Text@Output,w
  9786  1612  00F3               	movwf	??i1_EUSART_Read_Text+1
  9787  1613  0873               	movf	??i1_EUSART_Read_Text+1,w
  9788  1614  0086               	movwf	6
  9789  1615  3001               	movlw	1	; select bank2/3
  9790  1616  0087               	movwf	7
  9791  1617  0872               	movf	??i1_EUSART_Read_Text,w
  9792  1618  0081               	movwf	1
  9793  1619  3001               	movlw	1
  9794  161A  07F5               	addwf	i1EUSART_Read_Text@i_111,f
  9795  161B  3000               	movlw	0
  9796  161C  3DF6               	addwfc	i1EUSART_Read_Text@i_111+1,f
  9797  161D  2E04               	goto	i1l2377
  9798  161E                     __end_ofi1_EUSART_Read_Text:	
  9799                           
  9800                           	psect	text48
  9801  158D                     __ptext48:	
  9802 ;; *************** function i1_EUSART_Read *****************
  9803 ;; Defined at:
  9804 ;;		line 68 in file "EUSART.c"
  9805 ;; Parameters:    Size  Location     Type
  9806 ;;		None
  9807 ;; Auto vars:     Size  Location     Type
  9808 ;;		None
  9809 ;; Return value:  Size  Location     Type
  9810 ;;                  1    wreg      unsigned char 
  9811 ;; Registers used:
  9812 ;;		wreg
  9813 ;; Tracked objects:
  9814 ;;		On entry : 0/0
  9815 ;;		On exit  : 0/0
  9816 ;;		Unchanged: 0/0
  9817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9822 ;;Total ram usage:        0 bytes
  9823 ;; Hardware stack levels used:    1
  9824 ;; This function calls:
  9825 ;;		Nothing
  9826 ;; This function is called by:
  9827 ;;		i1_EUSART_Read_Text
  9828 ;; This function uses a non-reentrant model
  9829 ;;
  9830                           
  9831                           
  9832                           ;psect for function i1_EUSART_Read
  9833  158D                     i1_EUSART_Read:	
  9834                           
  9835                           ;EUSART.c: 71: RC1STAbits.SREN = 1;
  9836                           
  9837                           ;incstack = 0
  9838                           ; Regs used in i1_EUSART_Read: [wreg]
  9839  158D  0023               	movlb	3	; select bank3
  9840  158E  169D               	bsf	29,5	;volatile
  9841  158F                     i1l67:	
  9842                           ;EUSART.c: 73: {
  9843                           
  9844                           ;EUSART.c: 72: while(!PIR1bits.RCIF)
  9845                           
  9846  158F  0020               	movlb	0	; select bank0
  9847  1590  1E91               	btfss	17,5	;volatile
  9848  1591  2D8F               	goto	i1l67
  9849                           
  9850                           ;EUSART.c: 74: }
  9851                           ;EUSART.c: 77: if(1 == RC1STAbits.OERR)
  9852  1592  0023               	movlb	3	; select bank3
  9853  1593  1C9D               	btfss	29,1	;volatile
  9854  1594  2D97               	goto	i1l2051
  9855                           
  9856                           ;EUSART.c: 78: {
  9857                           ;EUSART.c: 81: RC1STAbits.SPEN = 0;
  9858  1595  139D               	bcf	29,7	;volatile
  9859                           
  9860                           ;EUSART.c: 82: RC1STAbits.SPEN = 1;
  9861  1596  179D               	bsf	29,7	;volatile
  9862  1597                     i1l2051:	
  9863                           
  9864                           ;EUSART.c: 83: }
  9865                           ;EUSART.c: 85: return RC1REG;
  9866  1597  0819               	movf	25,w	;volatile
  9867  1598  0008               	return
  9868  1599                     __end_ofi1_EUSART_Read:	
  9869  007E                     btemp	set	126	;btemp
  9870  007E                     int$flags	set	126
  9871  007E                     wtemp0	set	126


Data Sizes:
    Strings     172
    Constant    808
    Data        0
    BSS         67
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     36      53
    BANK1            80     73      73
    BANK2            80      0      50
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strcat@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 2
		 -> OLED_Write_Integer@status(BANK1[2]), main@status(BANK1[2]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 2
		 -> OLED_Write_Integer@status(BANK1[2]), main@status(BANK1[2]), 

    memmove@d1	PTR void  size(1) Largest target is 9
		 -> OLED_PutChar@bytes(BANK1[9]), 

    memmove@d	PTR unsigned char  size(1) Largest target is 9
		 -> OLED_PutChar@bytes(BANK1[9]), 

    memmove@s1	PTR const void  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    memmove@s	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 2
		 -> OLED_Write_Integer@status(BANK1[2]), main@status(BANK1[2]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 2
		 -> OLED_Write_Integer@status(BANK1[2]), main@status(BANK1[2]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 2
		 -> OLED_Write_Integer@status(BANK1[2]), main@status(BANK1[2]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 2
		 -> OLED_Write_Integer@status(BANK1[2]), main@status(BANK1[2]), 

    sp__ftoa	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK0[17]), 

    OLED_Write_Integer@buff11	PTR unsigned char  size(1) Largest target is 2
		 -> OLED_Write_Integer@status(BANK1[2]), main@status(BANK1[2]), 

    OLED_Write_String@s	PTR unsigned char  size(2) Largest target is 50
		 -> ftoa@buf(BANK0[17]), STR_14(CODE[6]), STR_13(CODE[6]), OLED_Write_Integer@status(BANK1[2]), 
		 -> STR_11(CODE[18]), STR_9(CODE[15]), STR_7(CODE[11]), STR_4(CODE[13]), 
		 -> buf(BANK2[50]), main@status(BANK1[2]), STR_2(CODE[13]), STR_1(CODE[13]), 

    sp__memmove	PTR void  size(1) Largest target is 9
		 -> OLED_PutChar@bytes(BANK1[9]), 

    OLED_PutChar@base	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 2
		 -> OLED_Write_Integer@status(BANK1[2]), main@status(BANK1[2]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 2
		 -> OLED_Write_Integer@status(BANK1[2]), main@status(BANK1[2]), 

    main@buff11	PTR unsigned char  size(1) Largest target is 2
		 -> OLED_Write_Integer@status(BANK1[2]), main@status(BANK1[2]), 

    EUSART_Write_Text@text	PTR unsigned char  size(2) Largest target is 20
		 -> OLED_Write_Integer@status(BANK1[2]), STR_12(CODE[20]), STR_10(CODE[14]), STR_8(CODE[5]), 
		 -> STR_6(CODE[16]), STR_5(CODE[17]), main@status(BANK1[2]), 

    EUSART_Read_Text@Output	PTR unsigned char  size(1) Largest target is 50
		 -> buf(BANK2[50]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    i1_server_Initialize->i1_OLED_Write_String
    i1_OLED_YX->i1_OLED_Command
    i1_OLED_Command->i1_Send_I2C_Data
    i1_OLED_PutChar->i1_memmove
    i1_EUSART_Write_Text->i1_EUSART_Write

Critical Paths under _main in BANK0

    _main->_OLED_Write_String
    _main->_OLED_YX
    _server_Initialize->_OLED_Write_String
    _server_Initialize->_OLED_YX
    _OLED_Clear->_OLED_YX
    _OLED_YX->_OLED_Command
    _EUSART_Write_Text->_EUSART_Write
    _Read_Temperature->___awtoft
    ___ftmul->___ftpack
    ___ftdiv->___ftpack
    ___ftadd->___ftpack
    ___awtoft->___ftpack
    _OLED_Write_Integer->_OLED_Write_String
    _itoa->_utoa
    _utoa->___lwdiv
    _OLED_PutChar->_memmove
    _OLED_Init->_OLED_Command
    _OLED_Command->_Send_I2C_Data
    _EUSART_Initialize->___aldiv

Critical Paths under _isr in BANK0

    _isr->i1_server_Initialize
    i1_server_Initialize->i1_OLED_Clear
    i1_OLED_Write_String->i1_OLED_PutChar
    i1_OLED_Clear->i1_OLED_PutChar

Critical Paths under _main in BANK1

    _main->_Read_Temperature
    _server_Initialize->_OLED_Clear
    _OLED_Clear->_OLED_PutChar
    _Read_Temperature->___ftdiv
    ___ftmul->___ftadd
    ___ftdiv->___ftmul
    _OLED_Write_Integer->_OLED_Write_String
    _itoa->_utoa
    _OLED_Write_String->_OLED_PutChar
    _OLED_PutChar->_memmove
    _EUSART_Initialize->___aldiv

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   38963
                                             65 BANK1      8     8      0
                  _EUSART_Initialize
                   _EUSART_Read_Text
                  _EUSART_Write_Text
                           _I2C_Init
                         _OLED_Clear
                          _OLED_Init
                 _OLED_Write_Integer
                  _OLED_Write_String
                            _OLED_YX
                   _Read_Temperature
                            ___fttol
                           _initMain
                               _itoa
                  _server_Initialize
                             _strcat
 ---------------------------------------------------------------------------------
 (1) _strcat                                               5     3      2     178
                                             27 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _server_Initialize                                    2     2      0    8845
                                             29 BANK1      2     2      0
                   _EUSART_Read_Text
                  _EUSART_Write_Text
                         _OLED_Clear
                  _OLED_Write_String
                            _OLED_YX
 ---------------------------------------------------------------------------------
 (2) _OLED_Clear                                           5     5      0    3469
                                             24 BANK1      5     5      0
                       _OLED_PutChar
                            _OLED_YX
 ---------------------------------------------------------------------------------
 (2) _OLED_YX                                              5     4      1    1650
                                             32 BANK0      4     3      1
                                              0 BANK1      1     1      0
                       _OLED_Command
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write_Text                                    5     3      2     430
                                             28 BANK0      5     3      2
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         1     1      0      22
                                             27 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Read_Text                                     9     7      2     570
                                             27 BANK0      7     5      2
                        _EUSART_Read
 ---------------------------------------------------------------------------------
 (3) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initMain                                             0     0      0       0
                        _internal_16
 ---------------------------------------------------------------------------------
 (2) _internal_16                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     591
                                             27 BANK0      8     4      4
                                              0 BANK1      6     6      0
 ---------------------------------------------------------------------------------
 (1) _Read_Temperature                                    20    17      3   11699
                                             45 BANK1     20    17      3
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    2906
                                             13 BANK1     16    10      6
                            ___ftadd (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2878
                                             29 BANK1     16    10      6
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             13     7      6    3513
                                              0 BANK1     13     7      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    2266
                                             35 BANK0      1     1      0
                                              0 BANK1      5     2      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2068
                                             27 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _OLED_Write_Integer                                   7     7      0    4913
                                             26 BANK1      7     7      0
                  _OLED_Write_String
                               _itoa
 ---------------------------------------------------------------------------------
 (1) _itoa                                                 7     3      4    2040
                                              8 BANK1      7     3      4
                            ___fttol (ARG)
                               _utoa
 ---------------------------------------------------------------------------------
 (2) _utoa                                                 9     5      4    1463
                                             35 BANK0      1     1      0
                                              0 BANK1      8     4      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     362
                                             27 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     501
                                             27 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _OLED_Write_String                                    3     1      2    2726
                                             35 BANK0      1     1      0
                                             24 BANK1      2     0      2
                       _OLED_PutChar
 ---------------------------------------------------------------------------------
 (3) _OLED_PutChar                                        20    20      0    1621
                                              4 BANK1     20    20      0
                      _Send_I2C_Data
                  _Send_I2C_StartBit
                   _Send_I2C_StopBit
                            _memmove
 ---------------------------------------------------------------------------------
 (4) _memmove                                             12     8      4     681
                                             27 BANK0      8     4      4
                                              0 BANK1      4     4      0
 ---------------------------------------------------------------------------------
 (1) _OLED_Init                                            0     0      0     647
                       _OLED_Command
 ---------------------------------------------------------------------------------
 (3) _OLED_Command                                         3     3      0     647
                                             29 BANK0      3     3      0
                      _Send_I2C_Data
                  _Send_I2C_StartBit
                   _Send_I2C_StopBit
 ---------------------------------------------------------------------------------
 (4) _Send_I2C_StopBit                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Send_I2C_StartBit                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Send_I2C_Data                                        2     0      2     616
                                             27 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             1     1      0       0
                                             27 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Initialize                                   14    10      4     993
                                              6 BANK1     14    10      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     705
                                             27 BANK0      9     1      8
                                              0 BANK1      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  1     1      0    3185
                                             26 BANK0      1     1      0
                i1_server_Initialize
 ---------------------------------------------------------------------------------
 (7) i1_server_Initialize                                  2     2      0    3185
                                             24 BANK0      2     2      0
                 i1_EUSART_Read_Text
                i1_EUSART_Write_Text
                       i1_OLED_Clear
                i1_OLED_Write_String
                          i1_OLED_YX
 ---------------------------------------------------------------------------------
 (8) i1_OLED_Write_String                                  3     1      2     998
                                             12 COMMON     2     0      2
                                             20 BANK0      1     1      0
                     i1_OLED_PutChar
 ---------------------------------------------------------------------------------
 (8) i1_OLED_Clear                                         5     5      0    1381
                                             12 COMMON     1     1      0
                                             20 BANK0      4     4      0
                     i1_OLED_PutChar
                          i1_OLED_YX
 ---------------------------------------------------------------------------------
 (8) i1_OLED_YX                                            5     4      1     448
                                              5 COMMON     5     4      1
                     i1_OLED_Command
 ---------------------------------------------------------------------------------
 (9) i1_OLED_Command                                       3     3      0     200
                                              2 COMMON     3     3      0
                    i1_Send_I2C_Data
                i1_Send_I2C_StartBit
                 i1_Send_I2C_StopBit
 ---------------------------------------------------------------------------------
 (9) i1_OLED_PutChar                                      20    20      0     797
                                              0 BANK0     20    20      0
                    i1_Send_I2C_Data
                i1_Send_I2C_StartBit
                 i1_Send_I2C_StopBit
                          i1_memmove
 ---------------------------------------------------------------------------------
 (10) i1_memmove                                          12     8      4     416
                                              0 COMMON    12     8      4
 ---------------------------------------------------------------------------------
 (10) i1_Send_I2C_StopBit                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) i1_Send_I2C_StartBit                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (10) i1_Send_I2C_Data                                     2     0      2     178
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (8) i1_EUSART_Write_Text                                  5     3      2     190
                                              1 COMMON     5     3      2
                     i1_EUSART_Write
 ---------------------------------------------------------------------------------
 (9) i1_EUSART_Write                                       1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) i1_EUSART_Read_Text                                   9     7      2     168
                                              0 COMMON     7     5      2
                      i1_EUSART_Read
 ---------------------------------------------------------------------------------
 (9) i1_EUSART_Read                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Initialize
     ___aldiv
   _EUSART_Read_Text
     _EUSART_Read
   _EUSART_Write_Text
     _EUSART_Write
   _I2C_Init
   _OLED_Clear
     _OLED_PutChar
       _Send_I2C_Data
       _Send_I2C_StartBit
       _Send_I2C_StopBit
       _memmove
     _OLED_YX
       _OLED_Command
         _Send_I2C_Data
         _Send_I2C_StartBit
         _Send_I2C_StopBit
   _OLED_Init
     _OLED_Command
       _Send_I2C_Data
       _Send_I2C_StartBit
       _Send_I2C_StopBit
   _OLED_Write_Integer
     _OLED_Write_String
       _OLED_PutChar
         _Send_I2C_Data
         _Send_I2C_StartBit
         _Send_I2C_StopBit
         _memmove
     _itoa
       ___fttol (ARG)
       _utoa (ARG)
         ___lwdiv
         ___lwmod
   _OLED_Write_String
     _OLED_PutChar
       _Send_I2C_Data
       _Send_I2C_StartBit
       _Send_I2C_StopBit
       _memmove
   _OLED_YX
     _OLED_Command
       _Send_I2C_Data
       _Send_I2C_StartBit
       _Send_I2C_StopBit
   _Read_Temperature
     ___awtoft
       ___ftpack
     ___ftadd
       ___ftpack
     ___ftdiv
       ___ftadd (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___ftadd (ARG)
         ___ftpack
       ___ftpack (ARG)
   ___fttol
   _initMain
     _internal_16
   _itoa
     ___fttol (ARG)
     _utoa (ARG)
       ___lwdiv
       ___lwmod
   _server_Initialize
     _EUSART_Read_Text
       _EUSART_Read
     _EUSART_Write_Text
       _EUSART_Write
     _OLED_Clear
       _OLED_PutChar
         _Send_I2C_Data
         _Send_I2C_StartBit
         _Send_I2C_StopBit
         _memmove
       _OLED_YX
         _OLED_Command
           _Send_I2C_Data
           _Send_I2C_StartBit
           _Send_I2C_StopBit
     _OLED_Write_String
       _OLED_PutChar
         _Send_I2C_Data
         _Send_I2C_StartBit
         _Send_I2C_StopBit
         _memmove
     _OLED_YX
       _OLED_Command
         _Send_I2C_Data
         _Send_I2C_StartBit
         _Send_I2C_StopBit
   _strcat

 _isr (ROOT)
   i1_server_Initialize
     i1_EUSART_Read_Text
       i1_EUSART_Read
     i1_EUSART_Write_Text
       i1_EUSART_Write
     i1_OLED_Clear
       i1_OLED_PutChar
         i1_Send_I2C_Data
         i1_Send_I2C_StartBit
         i1_Send_I2C_StopBit
         i1_memmove
       i1_OLED_YX
         i1_OLED_Command
           i1_Send_I2C_Data
           i1_Send_I2C_StartBit
           i1_Send_I2C_StopBit
     i1_OLED_Write_String
       i1_OLED_PutChar
         i1_Send_I2C_Data
         i1_Send_I2C_StartBit
         i1_Send_I2C_StopBit
         i1_memmove
     i1_OLED_YX
       i1_OLED_Command
         i1_Send_I2C_Data
         i1_Send_I2C_StartBit
         i1_Send_I2C_StopBit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     24      35       5       66.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     49      49       7       91.3%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      32       9       62.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      BE      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      BE      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Tue Apr 18 11:34:44 2017

            ??i1_EUSART_Write 0070               i1OLED_Clear@col 0036        Read_Temperature@result 00DE  
             i1OLED_Clear@row 0034               i1OLED_YX@Column 0075                   __CFG_CP$OFF 0000  
                          l74 156C                            l67 159B              _Read_Temperature 0C8D  
                ___ftadd@exp1 00AC                  ___ftadd@exp2 00AB            OLED_Write_String@s 00B8  
                ___ftadd@sign 00AA                           l110 1580                           l134 1566  
                         l128 155E                           l412 0C07                           l246 0C95  
                         l525 095B                           l526 0963                           l518 0948  
                         l617 0DA5                           l637 0BD6                           l549 061B  
                         _GIE 005F                           _buf 0120                           _isr 0004  
  __size_of_server_Initialize 00C0                  __CFG_BORV$LO 0000                           wreg 0009  
                __CFG_IESO$ON 0000   __size_ofi1_Send_I2C_StopBit 0008      i1EUSART_Read_Text@Output 0074  
            OLED_Command@temp 003F                  ?_EUSART_Read 0070                  __CFG_LVP$OFF 0000  
                ___ftdiv@cntr 00C7                  ___ftdiv@sign 00CC                          l2101 1640  
                        l2109 15E8                          l3021 17FB                          l3013 17E1  
                        l3041 16B9                          l3105 05A4                          l3115 05BA  
                        l3203 0E4E                          l3029 0800                          l3133 05E7  
                        l3109 05AB                          l3151 062D                          l3135 05F1  
                        l3127 05D4                          l3223 0F6B                          l3065 0C2D  
                        l3057 0C1A                          l3145 060D                          l3137 05F6  
                        l3217 0F55                          l3083 0C7D                          l3075 0C61  
                        l3067 0C3E                          l3155 063F                          l3147 0617  
                        l3139 05FA                          l3251 0FCA                          l3235 0FA6  
                        l2611 16CD                          l3165 065A                          l3181 0DF4  
                        l2613 16D8                          l3413 0450                          l3079 0C6E  
                        l3095 17AA                          l3175 0DDE                          l3247 0FC2  
                        l3239 0FAE                          l2617 16E0                          l3195 0E35  
                        l3269 0738                          l2901 1768                          l2911 0A69  
                        l3391 0DB7                          l3359 0D43                          l1943 15A3  
                        l2913 0A6D                          l3385 0D9B                          l3377 0D7C  
                        l2843 0B27                          l2931 0ABC                          l3387 0DA9  
                        l3379 0D8D                          l2847 0B45                          l2951 0934  
                        l2943 091E                          l2937 0ADE                          l2875 083E  
                        l2867 0820                          l2891 1747                          l2947 0925  
                        l2869 082C                          l2893 1753                          l2973 0B70  
                        l2957 094D                          l2949 092F      i1EUSART_Read_Text@length 0070  
                        l2879 0847                          l2983 0B9A                          l2959 0955  
                        l2897 175F                          ?_isr 0070                          STR_1 03C4  
                __CFG_WDTE$ON 0000                          STR_2 03B7                          STR_3 0364  
                        STR_4 03D1                          STR_5 0379                          STR_6 038A  
                        STR_7 03E9                          STR_8 03FA                          STR_9 039A  
                        _BRGH 0CF2               __end_of_OLED_YX 1740                          _CREN 0CEC  
                 ?_OLED_Clear 0070                          u4005 0FAF                          u3215 174A  
                        u4015 0FB5                          u2175 1646                          u4105 06E8  
                        u3305 0ABA                          u3145 0823                          u4115 0707  
                        u3315 0ADC                          u3235 1759                          u3085 0AFF  
                        u3165 082D                          u3245 1760                          u4045 0FCB  
                        u3095 0B18                          u3175 0837                          u4055 0FD1  
                        u4215 0D9C                          u3185 083F                          u3425 096A  
                        u3345 092A                          u3265 1720                          u4075 068A  
                        u4155 0D4B                          u3275 1735                          u4307 0531  
                        u3605 0C62                          u4085 06A9                          u3365 0943  
                        u4317 0549                          u4327 056D                          u4247 040B  
                        u3385 0950                          u4185 0D7D                          u4337 0EB2  
                        u4257 041E                          u4347 0EF0                          u4267 0446  
                        u3565 0C31                          u4357 0F2E                          u4277 048B  
                        u3735 05D5                          u4367 0C90                          u4287 04DF  
                        u3585 0C3F                          u4377 15B1                          u3825 060E  
                        u3905 0E16                          u4297 0505                          u3595 0C55  
                        u3915 0E36                          u3765 05E8                          u3925 0E45  
                        u3935 0E4F                          i1l74 1543                          _SCS0 04C8  
                        i1l67 158F                          u3795 05FB                          _SCS1 04C9  
                        u3895 0E06                          u3975 0F77                          u3985 0F87  
                        _SPEN 0CEF                          _TXEN 0CF5                          _SYNC 0CF4  
                __CFG_WRT$OFF 0000         ??i1_EUSART_Write_Text 0073                          _main 03FF  
                ___ftpack@arg 003B                          _itoa 16A1                  ___ftpack@exp 003E  
            __end_of_I2C_Init 15B7                          fsr0h 0005                          fsr1h 0007  
                        indf0 0000                          fsr0l 0004                          indf1 0001  
                        fsr1l 0006                          btemp 007E                          _utoa 0B6A  
       ??i1_OLED_Write_String 0034      __size_ofi1_Send_I2C_Data 0009                          start 0016  
__size_ofi1_Send_I2C_StartBit 0008                  ___ftmul@cntr 00BB                  ___ftmul@sign 00BC  
                ___fttol@exp1 00A5            __size_of_OLED_Init 0064                  ___fttol@lval 00A1  
                       ??_isr 003A            __size_ofi1_OLED_YX 0028               i1OLED_PutChar@i 0031  
               ?_EUSART_Write 0070               __end_of___aldiv 0C8D                         ?_main 0070  
                       ?_itoa 00A8               __end_of___ftadd 0680                         STR_10 03A9  
                       STR_11 0367                         STR_12 0353                         STR_13 03F4  
                       STR_15 03DE               __end_of___ftdiv 0E7E                         ?_utoa 00A0  
             __end_of___ftmul 1000               __end_of___fttol 0DC7                         _IRCF0 04CB  
                       _IRCF1 04CC                         _IRCF2 04CD                         _IRCF3 04CE  
             __end_of___lwdiv 084C                         i1l110 1577                         i1l134 1556  
                       i1l128 154E               __end_of___lwmod 176D                         _SPBRG 019B  
     i1Send_I2C_Data@databyte 0070                    i1memmove@d 007B                    i1memmove@n 0072  
                  i1memmove@s 0079                __CFG_FCMEN$OFF 0000                 ___awtoft@sign 0043  
            ??i1_OLED_Command 0072               __end_of_dpowers 0053               __end_of_memmove 0B6A  
               ___ftpack@sign 003F                __CFG_BOREN$OFF 0000              ??i1_OLED_PutChar 0020  
                       utoa@c 00A6                         utoa@v 00A4                         status 0003  
                       wtemp0 007E    __size_of_Send_I2C_StartBit 0008                  ?_internal_16 0070  
              __CFG_MCLRE$OFF 0000               __initialization 0018                  __end_of_main 057C  
                __end_of_itoa 16C7                  __end_of_utoa 0BF4            __size_ofi1_memmove 0065  
              ??_EUSART_Write 003B                __CFG_LPBOR$OFF 0000              __end_of_OledFont 0353  
         __size_of_OLED_Clear 0032                        ??_main 00E1                 ___fttol@sign1 00A0  
                      ??_itoa 00AC                        ??_utoa 0043                __CFG_PLLEN$OFF 0000  
            i1OLED_PutChar@ch 0033                     ??_OLED_YX 0041                        _ADRESH 009C  
                      _ADRESL 009B            _OLED_Write_Integer 167D                __CFG_ZCDDIS$ON 0000  
            __end_of___awtoft 17CE              __end_of___ftpack 097A             __end_of_OLED_Init 08B0  
                      _RC1REG 0199                        i1l2051 1597                        i1l2065 09EF  
                      i1l2091 0A5C                        i1l2067 09F3                        i1l2085 0A3D  
                      i1l2407 1798                        i1l2415 15B7                        i1l2377 1604  
                      i1l2385 15CD                        i1l1925 08DF                        i1l2399 1780  
                      i1l1929 08F9                        u211_25 16F6                        u212_25 170A  
                      u215_25 0A3B                        u216_25 0A5A             __end_ofi1_OLED_YX 1715  
                      u180_25 08D5                        u440_27 07EA                        u179_25 08C3  
                      u438_27 077A                        u279_25 160A                        u439_27 07B2  
               ?_OLED_Command 0070                        _TX1REG 019A                        _SPLLEN 04CF  
                      _SSPADD 0212                        _TRISC6 0476                        _TRISC7 0477  
                      _SSPBUF 0211           ?_OLED_Write_Integer 0070                   i1memmove@d1 0078  
                 i1memmove@s1 0070                __CFG_PWRTE$OFF 0000                 ?_OLED_PutChar 0070  
         i1_server_Initialize 074C                     ??___aldiv 0043        __size_of_Send_I2C_Data 0009  
                   ??___ftadd 00A6                __CFG_STVREN$ON 0000                     ??___ftdiv 00C3  
                   ??___ftmul 00B3                     ??___fttol 003F             ??i1_Send_I2C_Data 0072  
                   ??___lwdiv 003F                     ??___lwmod 003F              __end_of_initMain 09E5  
      __size_ofi1_EUSART_Read 000C                 ?i1_OLED_Clear 0070            i1OLED_Command@temp 0074  
                      _strcat 16C7         ___ftmul@f3_as_product 00B8          ??_OLED_Write_Integer 00BA  
                      itoa@cp 00AD                     ?_I2C_Init 0070                     ??_memmove 003F  
           ?_EUSART_Read_Text 003B          ?i1_server_Initialize 0070         Send_I2C_Data@databyte 003B  
          ??_EUSART_Read_Text 003D             __end_ofi1_memmove 0915                ??_OLED_Command 003D  
    __end_of_Read_Temperature 0D28          __size_of_EUSART_Read 000C       __end_of__initialization 0027  
                  ___ftadd@f1 00A0                    ___ftadd@f2 00A3                    ___ftdiv@f1 00C0  
                  ___ftdiv@f2 00BD                    ___ftdiv@f3 00C8                ??_OLED_PutChar 00A4  
                  ___awtoft@c 00A0                    ___ftmul@f1 00AD                    ___ftmul@f2 00B0  
   __size_of_Send_I2C_StopBit 0008                    ___fttol@f1 003B                __pcstackCOMMON 0070  
              ??i1_OLED_Clear 007C   __size_ofi1_EUSART_Read_Text 001D                    ??_I2C_Init 003B  
              _OPTION_REGbits 0095           i1_Send_I2C_StartBit 154A           i1OLED_PutChar@bytes 0026  
       ??i1_server_Initialize 0038                 _Send_I2C_Data 157B                 i1_EUSART_Read 158D  
                ??_OLED_Clear 00B8                    __pbssBANK0 0044                    __pbssBANK2 0120  
        __end_of_EUSART_Write 1572        EUSART_Read_Text@Output 0041        EUSART_Read_Text@length 003B  
        ?i1_Send_I2C_StartBit 0070                    __pmaintext 03FF          __size_of_internal_16 0009  
             __CFG_PPS1WAY$ON 0000                    __pintentry 0004                     ?___awtoft 00A0  
                   ?___ftpack 003B            __end_of_OLED_Clear 1800                       ?_strcat 003B  
  __end_ofi1_Send_I2C_StopBit 155A                       _OLED_YX 1715                ?_Send_I2C_Data 003B  
 __end_ofi1_EUSART_Write_Text 15E5                       _PPSLOCK 0E0F                ?i1_EUSART_Read 0070  
 __end_ofi1_OLED_Write_String 15CB                  i1OLED_YX@Row 0079                     ?_initMain 0070  
       ??i1_Send_I2C_StartBit 0070                       ___aldiv 0BF4                       ___ftadd 057C  
                     ___ftdiv 0DC7                       ___ftmul 0F3E                       ___fttol 0D28  
                     ___lwdiv 0817                       ___lwmod 1740                    ??___awtoft 00A3  
                  ??___ftpack 0040          __end_of_OLED_Command 167D                       __ptext1 16C7  
                     __ptext2 0E7E                       __ptext3 17CE                       __ptext4 1715  
                     __ptext5 15E5                       __ptext6 156A                       __ptext7 163C  
                     __ptext8 1599                       __ptext9 097A               __size_of_strcat 0026  
                     _dpowers 002B       __size_ofi1_EUSART_Write 0008                  __size_of_isr 0012  
                     _memmove 0AE1              ___aldiv@dividend 003F          __end_of_OLED_PutChar 0AE1  
                     clrloop0 07FB          end_of_initialization 0027                       ftoa@buf 0044  
        __end_ofi1_OLED_Clear 179D                    ??_initMain 003B                       itoa@buf 00AE  
                     itoa@val 00A8               i1_Send_I2C_Data 1572                     _OLED_Init 084C  
           _EUSART_Initialize 0680                     i1_OLED_YX 16ED              OLED_PutChar@base 00B3  
            _Send_I2C_StopBit 1562            ?_EUSART_Initialize 00A6              ___aldiv@quotient 00A2  
                __pstringtext 002B                       utoa@buf 00A7            EUSART_Initialize@x 00B2  
                     utoa@val 00A0           ??_EUSART_Initialize 00AA               ??_Send_I2C_Data 003D  
            __CFG_FOSC$INTOSC 0000               ??i1_EUSART_Read 0070                     _TRISBbits 008D  
                   _TRISCbits 008E                     _TRISDbits 008F         __size_of_EUSART_Write 0008  
           __size_of_I2C_Init 0012       i1EUSART_Read_Text@i_111 0075                     _RXPPSbits 0E24  
   __end_of_EUSART_Initialize 074C             ?_Read_Temperature 00CD                    main@buff11 00E6  
                 ___ftdiv@exp 00CB                     i1_memmove 08B0                    ?_OLED_Init 0070  
          ??_Read_Temperature 00D0                    ?i1_OLED_YX 0075     __size_of_EUSART_Read_Text 001F  
     __size_ofi1_OLED_Command 001E                    main@status 00E7  Read_Temperature@conversion10 00D5  
                 ___ftmul@exp 00B7       __size_ofi1_OLED_PutChar 007A      OLED_Write_Integer@buff11 00BE  
                _EUSART_Write 156A      OLED_Write_Integer@status 00BF   __size_of_OLED_Write_Integer 0024  
              __end_of_strcat 16ED           start_initialization 0018                   __end_of_isr 0016  
               ??_EUSART_Read 003B       __end_ofi1_Send_I2C_Data 157B     Read_Temperature@farenheit 00D8  
           _EUSART_Write_Text 15E5                    ?i1_memmove 0070             _OLED_Write_String 0800  
          ?_EUSART_Write_Text 003C            ?_OLED_Write_String 00B8         __size_of_OLED_Command 0022  
                  OLED_YX@Row 00A0           ??_EUSART_Write_Text 003E         __size_of_OLED_PutChar 0082  
 __end_ofi1_server_Initialize 07FA    __end_ofi1_EUSART_Read_Text 161E           ??_OLED_Write_String 0043  
                    ??_strcat 003D                i1_EUSART_Write 1542             __size_of___awtoft 0031  
           __size_of___ftpack 0065                     ___latbits 0002                      ?_OLED_YX 0040  
       __size_ofi1_OLED_Clear 0030                 __pcstackBANK0 0020                 __pcstackBANK1 00A0  
          i1OLED_PutChar@base 002F     __end_of_EUSART_Write_Text 1601            i1_Send_I2C_StopBit 1552  
  __size_of_EUSART_Initialize 00CC                  _OLED_Command 165B     __end_of_OLED_Write_String 0817  
       EUSART_Read_Text@i_111 003F           __end_of_EUSART_Read 15A5                 ??_internal_16 003B  
                 ??_OLED_Init 0040                   ??i1_OLED_YX 0076             __size_of_initMain 006B  
            ___lwdiv@dividend 003D           ?i1_Send_I2C_StopBit 0070                  _OLED_PutChar 0A5F  
                    ?___aldiv 003B                      ?___ftadd 00A0                      ?___ftdiv 00BD  
                    ?___ftmul 00AD                      ?___fttol 003B                      ?___lwdiv 003B  
                    ?___lwmod 003B                  i1_OLED_Clear 176D     EUSART_Initialize@baudrate 00A6  
      __end_ofi1_EUSART_Write 154A                      _I2C_Init 15A5                      ?_memmove 003B  
        ??i1_Send_I2C_StopBit 0070      __end_of_Send_I2C_StopBit 156A              ___lwdiv@quotient 0041  
            ?i1_Send_I2C_Data 0070   __end_ofi1_Send_I2C_StartBit 1552          i1EUSART_Write@txData 0070  
             ___aldiv@divisor 003B               ___aldiv@counter 00A0  __size_ofi1_EUSART_Write_Text 001A  
                 ??i1_memmove 0074                     clear_ram0 07FA                i1_OLED_Command 161E  
            _EUSART_Read_Text 163C  __size_ofi1_OLED_Write_String 0014          i1EUSART_Write_Text@i 0074  
                    _PIR1bits 0011                i1_OLED_PutChar 09E5           __end_of_internal_16 158D  
             ?i1_EUSART_Write 0070                    _ADCON0bits 009D                    _ADCON1bits 009E  
        i1OLED_Write_String@s 007C              __size_of_OLED_YX 002B                   _EUSART_Read 1599  
  __size_of_EUSART_Write_Text 001C        __end_ofi1_OLED_Command 163C    __size_of_OLED_Write_String 0017  
                    _OledFont 0053        __end_ofi1_OLED_PutChar 0A5F                     memmove@d1 00A0  
                   memmove@s1 003B              __size_of___aldiv 0099              __size_of___ftadd 0104  
            __size_of___ftdiv 00B7              __size_of___ftmul 00C2              __size_of___fttol 009F  
   __size_of_Read_Temperature 009B              __size_of___lwdiv 0035              __size_of___lwmod 002D  
                    ___awtoft 179D                      ___ftpack 0915                    _ANSELBbits 018D  
                  _ANSELCbits 018E                    _ANSELDbits 018F                    _ANSELEbits 0190  
     i1EUSART_Write_Text@text 0071                    strcat@from 003B              __size_of_memmove 0089  
             ___lwdiv@divisor 003B         __end_of_Send_I2C_Data 1584               ___lwdiv@counter 0040  
           _server_Initialize 0E7E                      __ptext10 1584                      __ptext11 0D28  
                    __ptext20 0B6A                      __ptext12 0C8D                      __ptext21 1740  
                    __ptext13 0F3E                      __ptext30 157B                      __ptext22 0817  
                    __ptext14 0DC7                      __ptext31 15A5                      __ptext23 0800  
                    __ptext15 057C                      __ptext40 09E5                      __ptext32 0680  
                    __ptext24 0A5F                      __ptext16 179D                      __ptext41 08B0  
                    __ptext33 0BF4                      __ptext25 0AE1                      __ptext17 0915  
                    __ptext42 1552                      __ptext26 084C                      __ptext18 167D  
                    __ptext43 154A                      __ptext35 074C                      __ptext27 165B  
                    __ptext19 16A1                      __ptext44 1572                      __ptext36 15B7  
                    __ptext28 1562                      __ptext45 15CB                      __ptext37 176D  
                    __ptext29 155A                      __ptext46 1542                      __ptext38 16ED  
                    __ptext47 1601                      __ptext39 161E                      __ptext48 158D  
       __end_ofi1_EUSART_Read 1599            ?_server_Initialize 0070                      _initMain 097A  
             ?i1_OLED_Command 0070                 __size_of_main 017D                 _SSPDATPPSbits 0E21  
               __size_of_itoa 0026                 __size_of_utoa 008A                 OLED_Clear@col 00BB  
                 _internal_16 1584                 OLED_Clear@row 00B9                 OLED_YX@Column 0040  
         ??_server_Initialize 00BD                    _RB2PPSbits 0E9A                OLED_PutChar@ch 00B5  
             ?i1_OLED_PutChar 0070                    _RC1STAbits 019D                    _RC4PPSbits 0EA4  
               _SSPCLKPPSbits 0E20                      int$flags 007E                    _RC5PPSbits 0EA5  
                    main@temp 00E3    __end_of_OLED_Write_Integer 16A1                    _INTCONbits 000B  
   __end_of_server_Initialize 0F3E                      itoa@base 00AA                      memmove@d 00A3  
                    memmove@n 003D                      memmove@s 00A1                    _INTPPSbits 0E10  
          i1_EUSART_Read_Text 1601                      intlevel1 0000                    _OLED_Clear 17CE  
            ___lwmod@dividend 003D             __CFG_CLKOUTEN$OFF 0000                   _PPSLOCKbits 0E0F  
         ?i1_EUSART_Read_Text 0070             _Send_I2C_StartBit 155A             OLED_PutChar@bytes 00AA  
               OLED_PutChar@i 00B6            ?_Send_I2C_StartBit 0070                      utoa@base 00A2  
         ??_Send_I2C_StartBit 003B           i1_EUSART_Write_Text 15CB                      strcat@cp 003F  
                    strcat@to 003E          ??i1_EUSART_Read_Text 0072               ___lwmod@divisor 003B  
         i1_OLED_Write_String 15B7      __end_of_EUSART_Read_Text 165B               ___lwmod@counter 0040  
       EUSART_Write_Text@text 003C                  ___aldiv@sign 00A1  __size_ofi1_server_Initialize 00AE  
                 _SSPCON2bits 0216             ?_Send_I2C_StopBit 0070                    _WDTCONbits 0097  
          EUSART_Write@txData 003B            ??_Send_I2C_StopBit 003B           OLED_Write_Integer@i 00BD  
        ?i1_EUSART_Write_Text 0071     __end_of_Send_I2C_StartBit 1562                    _SSPCONbits 0215  
        ?i1_OLED_Write_String 007C       Read_Temperature@celsius 00DB            EUSART_Write_Text@i 003F  
