

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Mon Apr 22 14:05:49 2019

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F1717
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	swtext1,local,class=CONST,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	dabs	1,0x7E,2
    41  0000                     	;# 
    42  0001                     	;# 
    43  0002                     	;# 
    44  0003                     	;# 
    45  0004                     	;# 
    46  0005                     	;# 
    47  0006                     	;# 
    48  0007                     	;# 
    49  0008                     	;# 
    50  0009                     	;# 
    51  000A                     	;# 
    52  000B                     	;# 
    53  000C                     	;# 
    54  000D                     	;# 
    55  000E                     	;# 
    56  000F                     	;# 
    57  0010                     	;# 
    58  0011                     	;# 
    59  0012                     	;# 
    60  0013                     	;# 
    61  0015                     	;# 
    62  0016                     	;# 
    63  0016                     	;# 
    64  0017                     	;# 
    65  0018                     	;# 
    66  0019                     	;# 
    67  001A                     	;# 
    68  001B                     	;# 
    69  001C                     	;# 
    70  008C                     	;# 
    71  008D                     	;# 
    72  008E                     	;# 
    73  008F                     	;# 
    74  0090                     	;# 
    75  0091                     	;# 
    76  0092                     	;# 
    77  0093                     	;# 
    78  0095                     	;# 
    79  0096                     	;# 
    80  0097                     	;# 
    81  0098                     	;# 
    82  0099                     	;# 
    83  009A                     	;# 
    84  009B                     	;# 
    85  009B                     	;# 
    86  009C                     	;# 
    87  009D                     	;# 
    88  009E                     	;# 
    89  009F                     	;# 
    90  010C                     	;# 
    91  010D                     	;# 
    92  010E                     	;# 
    93  010F                     	;# 
    94  0110                     	;# 
    95  0111                     	;# 
    96  0112                     	;# 
    97  0113                     	;# 
    98  0114                     	;# 
    99  0115                     	;# 
   100  0116                     	;# 
   101  0117                     	;# 
   102  0118                     	;# 
   103  0119                     	;# 
   104  011A                     	;# 
   105  011B                     	;# 
   106  011B                     	;# 
   107  011C                     	;# 
   108  018C                     	;# 
   109  018D                     	;# 
   110  018E                     	;# 
   111  018F                     	;# 
   112  0190                     	;# 
   113  0191                     	;# 
   114  0191                     	;# 
   115  0192                     	;# 
   116  0193                     	;# 
   117  0193                     	;# 
   118  0194                     	;# 
   119  0195                     	;# 
   120  0196                     	;# 
   121  0197                     	;# 
   122  0199                     	;# 
   123  0199                     	;# 
   124  0199                     	;# 
   125  019A                     	;# 
   126  019A                     	;# 
   127  019A                     	;# 
   128  019B                     	;# 
   129  019B                     	;# 
   130  019B                     	;# 
   131  019B                     	;# 
   132  019B                     	;# 
   133  019C                     	;# 
   134  019C                     	;# 
   135  019C                     	;# 
   136  019D                     	;# 
   137  019D                     	;# 
   138  019D                     	;# 
   139  019E                     	;# 
   140  019E                     	;# 
   141  019E                     	;# 
   142  019F                     	;# 
   143  019F                     	;# 
   144  019F                     	;# 
   145  019F                     	;# 
   146  019F                     	;# 
   147  020C                     	;# 
   148  020D                     	;# 
   149  020E                     	;# 
   150  020F                     	;# 
   151  0210                     	;# 
   152  0211                     	;# 
   153  0211                     	;# 
   154  0212                     	;# 
   155  0212                     	;# 
   156  0213                     	;# 
   157  0213                     	;# 
   158  0214                     	;# 
   159  0214                     	;# 
   160  0215                     	;# 
   161  0215                     	;# 
   162  0215                     	;# 
   163  0215                     	;# 
   164  0216                     	;# 
   165  0216                     	;# 
   166  0217                     	;# 
   167  0217                     	;# 
   168  028C                     	;# 
   169  028D                     	;# 
   170  028E                     	;# 
   171  028F                     	;# 
   172  0290                     	;# 
   173  0291                     	;# 
   174  0291                     	;# 
   175  0292                     	;# 
   176  0293                     	;# 
   177  0293                     	;# 
   178  0298                     	;# 
   179  0298                     	;# 
   180  0299                     	;# 
   181  029A                     	;# 
   182  029A                     	;# 
   183  029E                     	;# 
   184  030C                     	;# 
   185  030D                     	;# 
   186  030E                     	;# 
   187  030F                     	;# 
   188  0310                     	;# 
   189  038C                     	;# 
   190  038D                     	;# 
   191  038E                     	;# 
   192  038F                     	;# 
   193  0390                     	;# 
   194  0391                     	;# 
   195  0392                     	;# 
   196  0393                     	;# 
   197  0394                     	;# 
   198  0395                     	;# 
   199  0396                     	;# 
   200  0397                     	;# 
   201  0398                     	;# 
   202  0399                     	;# 
   203  039D                     	;# 
   204  039E                     	;# 
   205  039F                     	;# 
   206  0415                     	;# 
   207  0416                     	;# 
   208  0417                     	;# 
   209  041C                     	;# 
   210  041D                     	;# 
   211  041E                     	;# 
   212  0498                     	;# 
   213  0498                     	;# 
   214  0499                     	;# 
   215  049A                     	;# 
   216  049B                     	;# 
   217  049B                     	;# 
   218  049C                     	;# 
   219  049D                     	;# 
   220  049E                     	;# 
   221  049F                     	;# 
   222  0511                     	;# 
   223  0515                     	;# 
   224  0617                     	;# 
   225  0618                     	;# 
   226  0619                     	;# 
   227  0619                     	;# 
   228  061A                     	;# 
   229  061B                     	;# 
   230  061C                     	;# 
   231  061C                     	;# 
   232  0691                     	;# 
   233  0692                     	;# 
   234  0693                     	;# 
   235  0694                     	;# 
   236  0695                     	;# 
   237  0696                     	;# 
   238  0697                     	;# 
   239  0698                     	;# 
   240  0699                     	;# 
   241  069A                     	;# 
   242  069B                     	;# 
   243  069C                     	;# 
   244  069D                     	;# 
   245  069E                     	;# 
   246  069F                     	;# 
   247  0E0F                     	;# 
   248  0E10                     	;# 
   249  0E11                     	;# 
   250  0E12                     	;# 
   251  0E13                     	;# 
   252  0E14                     	;# 
   253  0E15                     	;# 
   254  0E17                     	;# 
   255  0E20                     	;# 
   256  0E21                     	;# 
   257  0E22                     	;# 
   258  0E24                     	;# 
   259  0E25                     	;# 
   260  0E28                     	;# 
   261  0E29                     	;# 
   262  0E2A                     	;# 
   263  0E2B                     	;# 
   264  0E90                     	;# 
   265  0E91                     	;# 
   266  0E92                     	;# 
   267  0E93                     	;# 
   268  0E94                     	;# 
   269  0E95                     	;# 
   270  0E96                     	;# 
   271  0E97                     	;# 
   272  0E98                     	;# 
   273  0E99                     	;# 
   274  0E9A                     	;# 
   275  0E9B                     	;# 
   276  0E9C                     	;# 
   277  0E9D                     	;# 
   278  0E9E                     	;# 
   279  0E9F                     	;# 
   280  0EA0                     	;# 
   281  0EA1                     	;# 
   282  0EA2                     	;# 
   283  0EA3                     	;# 
   284  0EA4                     	;# 
   285  0EA5                     	;# 
   286  0EA6                     	;# 
   287  0EA7                     	;# 
   288  0EA8                     	;# 
   289  0EA9                     	;# 
   290  0EAA                     	;# 
   291  0EAB                     	;# 
   292  0EAC                     	;# 
   293  0EAD                     	;# 
   294  0EAE                     	;# 
   295  0EAF                     	;# 
   296  0EB0                     	;# 
   297  0EB1                     	;# 
   298  0EB2                     	;# 
   299  0F0F                     	;# 
   300  0F10                     	;# 
   301  0F11                     	;# 
   302  0F12                     	;# 
   303  0F13                     	;# 
   304  0F14                     	;# 
   305  0F15                     	;# 
   306  0F16                     	;# 
   307  0F17                     	;# 
   308  0F18                     	;# 
   309  0F19                     	;# 
   310  0F1A                     	;# 
   311  0F1B                     	;# 
   312  0F1C                     	;# 
   313  0F1D                     	;# 
   314  0F1E                     	;# 
   315  0F1F                     	;# 
   316  0F20                     	;# 
   317  0F21                     	;# 
   318  0F22                     	;# 
   319  0F23                     	;# 
   320  0F24                     	;# 
   321  0F25                     	;# 
   322  0F26                     	;# 
   323  0F27                     	;# 
   324  0F28                     	;# 
   325  0F29                     	;# 
   326  0F2A                     	;# 
   327  0F2B                     	;# 
   328  0F2C                     	;# 
   329  0F2D                     	;# 
   330  0F2E                     	;# 
   331  0F2F                     	;# 
   332  0F30                     	;# 
   333  0F31                     	;# 
   334  0F32                     	;# 
   335  0F33                     	;# 
   336  0F34                     	;# 
   337  0F35                     	;# 
   338  0F36                     	;# 
   339  0F37                     	;# 
   340  0FE4                     	;# 
   341  0FE5                     	;# 
   342  0FE6                     	;# 
   343  0FE7                     	;# 
   344  0FE8                     	;# 
   345  0FE9                     	;# 
   346  0FEA                     	;# 
   347  0FEB                     	;# 
   348  0FED                     	;# 
   349  0FEE                     	;# 
   350  0FEF                     	;# 
   351  0000                     	;# 
   352  0001                     	;# 
   353  0002                     	;# 
   354  0003                     	;# 
   355  0004                     	;# 
   356  0005                     	;# 
   357  0006                     	;# 
   358  0007                     	;# 
   359  0008                     	;# 
   360  0009                     	;# 
   361  000A                     	;# 
   362  000B                     	;# 
   363  000C                     	;# 
   364  000D                     	;# 
   365  000E                     	;# 
   366  000F                     	;# 
   367  0010                     	;# 
   368  0011                     	;# 
   369  0012                     	;# 
   370  0013                     	;# 
   371  0015                     	;# 
   372  0016                     	;# 
   373  0016                     	;# 
   374  0017                     	;# 
   375  0018                     	;# 
   376  0019                     	;# 
   377  001A                     	;# 
   378  001B                     	;# 
   379  001C                     	;# 
   380  008C                     	;# 
   381  008D                     	;# 
   382  008E                     	;# 
   383  008F                     	;# 
   384  0090                     	;# 
   385  0091                     	;# 
   386  0092                     	;# 
   387  0093                     	;# 
   388  0095                     	;# 
   389  0096                     	;# 
   390  0097                     	;# 
   391  0098                     	;# 
   392  0099                     	;# 
   393  009A                     	;# 
   394  009B                     	;# 
   395  009B                     	;# 
   396  009C                     	;# 
   397  009D                     	;# 
   398  009E                     	;# 
   399  009F                     	;# 
   400  010C                     	;# 
   401  010D                     	;# 
   402  010E                     	;# 
   403  010F                     	;# 
   404  0110                     	;# 
   405  0111                     	;# 
   406  0112                     	;# 
   407  0113                     	;# 
   408  0114                     	;# 
   409  0115                     	;# 
   410  0116                     	;# 
   411  0117                     	;# 
   412  0118                     	;# 
   413  0119                     	;# 
   414  011A                     	;# 
   415  011B                     	;# 
   416  011B                     	;# 
   417  011C                     	;# 
   418  018C                     	;# 
   419  018D                     	;# 
   420  018E                     	;# 
   421  018F                     	;# 
   422  0190                     	;# 
   423  0191                     	;# 
   424  0191                     	;# 
   425  0192                     	;# 
   426  0193                     	;# 
   427  0193                     	;# 
   428  0194                     	;# 
   429  0195                     	;# 
   430  0196                     	;# 
   431  0197                     	;# 
   432  0199                     	;# 
   433  0199                     	;# 
   434  0199                     	;# 
   435  019A                     	;# 
   436  019A                     	;# 
   437  019A                     	;# 
   438  019B                     	;# 
   439  019B                     	;# 
   440  019B                     	;# 
   441  019B                     	;# 
   442  019B                     	;# 
   443  019C                     	;# 
   444  019C                     	;# 
   445  019C                     	;# 
   446  019D                     	;# 
   447  019D                     	;# 
   448  019D                     	;# 
   449  019E                     	;# 
   450  019E                     	;# 
   451  019E                     	;# 
   452  019F                     	;# 
   453  019F                     	;# 
   454  019F                     	;# 
   455  019F                     	;# 
   456  019F                     	;# 
   457  020C                     	;# 
   458  020D                     	;# 
   459  020E                     	;# 
   460  020F                     	;# 
   461  0210                     	;# 
   462  0211                     	;# 
   463  0211                     	;# 
   464  0212                     	;# 
   465  0212                     	;# 
   466  0213                     	;# 
   467  0213                     	;# 
   468  0214                     	;# 
   469  0214                     	;# 
   470  0215                     	;# 
   471  0215                     	;# 
   472  0215                     	;# 
   473  0215                     	;# 
   474  0216                     	;# 
   475  0216                     	;# 
   476  0217                     	;# 
   477  0217                     	;# 
   478  028C                     	;# 
   479  028D                     	;# 
   480  028E                     	;# 
   481  028F                     	;# 
   482  0290                     	;# 
   483  0291                     	;# 
   484  0291                     	;# 
   485  0292                     	;# 
   486  0293                     	;# 
   487  0293                     	;# 
   488  0298                     	;# 
   489  0298                     	;# 
   490  0299                     	;# 
   491  029A                     	;# 
   492  029A                     	;# 
   493  029E                     	;# 
   494  030C                     	;# 
   495  030D                     	;# 
   496  030E                     	;# 
   497  030F                     	;# 
   498  0310                     	;# 
   499  038C                     	;# 
   500  038D                     	;# 
   501  038E                     	;# 
   502  038F                     	;# 
   503  0390                     	;# 
   504  0391                     	;# 
   505  0392                     	;# 
   506  0393                     	;# 
   507  0394                     	;# 
   508  0395                     	;# 
   509  0396                     	;# 
   510  0397                     	;# 
   511  0398                     	;# 
   512  0399                     	;# 
   513  039D                     	;# 
   514  039E                     	;# 
   515  039F                     	;# 
   516  0415                     	;# 
   517  0416                     	;# 
   518  0417                     	;# 
   519  041C                     	;# 
   520  041D                     	;# 
   521  041E                     	;# 
   522  0498                     	;# 
   523  0498                     	;# 
   524  0499                     	;# 
   525  049A                     	;# 
   526  049B                     	;# 
   527  049B                     	;# 
   528  049C                     	;# 
   529  049D                     	;# 
   530  049E                     	;# 
   531  049F                     	;# 
   532  0511                     	;# 
   533  0515                     	;# 
   534  0617                     	;# 
   535  0618                     	;# 
   536  0619                     	;# 
   537  0619                     	;# 
   538  061A                     	;# 
   539  061B                     	;# 
   540  061C                     	;# 
   541  061C                     	;# 
   542  0691                     	;# 
   543  0692                     	;# 
   544  0693                     	;# 
   545  0694                     	;# 
   546  0695                     	;# 
   547  0696                     	;# 
   548  0697                     	;# 
   549  0698                     	;# 
   550  0699                     	;# 
   551  069A                     	;# 
   552  069B                     	;# 
   553  069C                     	;# 
   554  069D                     	;# 
   555  069E                     	;# 
   556  069F                     	;# 
   557  0E0F                     	;# 
   558  0E10                     	;# 
   559  0E11                     	;# 
   560  0E12                     	;# 
   561  0E13                     	;# 
   562  0E14                     	;# 
   563  0E15                     	;# 
   564  0E17                     	;# 
   565  0E20                     	;# 
   566  0E21                     	;# 
   567  0E22                     	;# 
   568  0E24                     	;# 
   569  0E25                     	;# 
   570  0E28                     	;# 
   571  0E29                     	;# 
   572  0E2A                     	;# 
   573  0E2B                     	;# 
   574  0E90                     	;# 
   575  0E91                     	;# 
   576  0E92                     	;# 
   577  0E93                     	;# 
   578  0E94                     	;# 
   579  0E95                     	;# 
   580  0E96                     	;# 
   581  0E97                     	;# 
   582  0E98                     	;# 
   583  0E99                     	;# 
   584  0E9A                     	;# 
   585  0E9B                     	;# 
   586  0E9C                     	;# 
   587  0E9D                     	;# 
   588  0E9E                     	;# 
   589  0E9F                     	;# 
   590  0EA0                     	;# 
   591  0EA1                     	;# 
   592  0EA2                     	;# 
   593  0EA3                     	;# 
   594  0EA4                     	;# 
   595  0EA5                     	;# 
   596  0EA6                     	;# 
   597  0EA7                     	;# 
   598  0EA8                     	;# 
   599  0EA9                     	;# 
   600  0EAA                     	;# 
   601  0EAB                     	;# 
   602  0EAC                     	;# 
   603  0EAD                     	;# 
   604  0EAE                     	;# 
   605  0EAF                     	;# 
   606  0EB0                     	;# 
   607  0EB1                     	;# 
   608  0EB2                     	;# 
   609  0F0F                     	;# 
   610  0F10                     	;# 
   611  0F11                     	;# 
   612  0F12                     	;# 
   613  0F13                     	;# 
   614  0F14                     	;# 
   615  0F15                     	;# 
   616  0F16                     	;# 
   617  0F17                     	;# 
   618  0F18                     	;# 
   619  0F19                     	;# 
   620  0F1A                     	;# 
   621  0F1B                     	;# 
   622  0F1C                     	;# 
   623  0F1D                     	;# 
   624  0F1E                     	;# 
   625  0F1F                     	;# 
   626  0F20                     	;# 
   627  0F21                     	;# 
   628  0F22                     	;# 
   629  0F23                     	;# 
   630  0F24                     	;# 
   631  0F25                     	;# 
   632  0F26                     	;# 
   633  0F27                     	;# 
   634  0F28                     	;# 
   635  0F29                     	;# 
   636  0F2A                     	;# 
   637  0F2B                     	;# 
   638  0F2C                     	;# 
   639  0F2D                     	;# 
   640  0F2E                     	;# 
   641  0F2F                     	;# 
   642  0F30                     	;# 
   643  0F31                     	;# 
   644  0F32                     	;# 
   645  0F33                     	;# 
   646  0F34                     	;# 
   647  0F35                     	;# 
   648  0F36                     	;# 
   649  0F37                     	;# 
   650  0FE4                     	;# 
   651  0FE5                     	;# 
   652  0FE6                     	;# 
   653  0FE7                     	;# 
   654  0FE8                     	;# 
   655  0FE9                     	;# 
   656  0FEA                     	;# 
   657  0FEB                     	;# 
   658  0FED                     	;# 
   659  0FEE                     	;# 
   660  0FEF                     	;# 
   661  0000                     	;# 
   662  0001                     	;# 
   663  0002                     	;# 
   664  0003                     	;# 
   665  0004                     	;# 
   666  0005                     	;# 
   667  0006                     	;# 
   668  0007                     	;# 
   669  0008                     	;# 
   670  0009                     	;# 
   671  000A                     	;# 
   672  000B                     	;# 
   673  000C                     	;# 
   674  000D                     	;# 
   675  000E                     	;# 
   676  000F                     	;# 
   677  0010                     	;# 
   678  0011                     	;# 
   679  0012                     	;# 
   680  0013                     	;# 
   681  0015                     	;# 
   682  0016                     	;# 
   683  0016                     	;# 
   684  0017                     	;# 
   685  0018                     	;# 
   686  0019                     	;# 
   687  001A                     	;# 
   688  001B                     	;# 
   689  001C                     	;# 
   690  008C                     	;# 
   691  008D                     	;# 
   692  008E                     	;# 
   693  008F                     	;# 
   694  0090                     	;# 
   695  0091                     	;# 
   696  0092                     	;# 
   697  0093                     	;# 
   698  0095                     	;# 
   699  0096                     	;# 
   700  0097                     	;# 
   701  0098                     	;# 
   702  0099                     	;# 
   703  009A                     	;# 
   704  009B                     	;# 
   705  009B                     	;# 
   706  009C                     	;# 
   707  009D                     	;# 
   708  009E                     	;# 
   709  009F                     	;# 
   710  010C                     	;# 
   711  010D                     	;# 
   712  010E                     	;# 
   713  010F                     	;# 
   714  0110                     	;# 
   715  0111                     	;# 
   716  0112                     	;# 
   717  0113                     	;# 
   718  0114                     	;# 
   719  0115                     	;# 
   720  0116                     	;# 
   721  0117                     	;# 
   722  0118                     	;# 
   723  0119                     	;# 
   724  011A                     	;# 
   725  011B                     	;# 
   726  011B                     	;# 
   727  011C                     	;# 
   728  018C                     	;# 
   729  018D                     	;# 
   730  018E                     	;# 
   731  018F                     	;# 
   732  0190                     	;# 
   733  0191                     	;# 
   734  0191                     	;# 
   735  0192                     	;# 
   736  0193                     	;# 
   737  0193                     	;# 
   738  0194                     	;# 
   739  0195                     	;# 
   740  0196                     	;# 
   741  0197                     	;# 
   742  0199                     	;# 
   743  0199                     	;# 
   744  0199                     	;# 
   745  019A                     	;# 
   746  019A                     	;# 
   747  019A                     	;# 
   748  019B                     	;# 
   749  019B                     	;# 
   750  019B                     	;# 
   751  019B                     	;# 
   752  019B                     	;# 
   753  019C                     	;# 
   754  019C                     	;# 
   755  019C                     	;# 
   756  019D                     	;# 
   757  019D                     	;# 
   758  019D                     	;# 
   759  019E                     	;# 
   760  019E                     	;# 
   761  019E                     	;# 
   762  019F                     	;# 
   763  019F                     	;# 
   764  019F                     	;# 
   765  019F                     	;# 
   766  019F                     	;# 
   767  020C                     	;# 
   768  020D                     	;# 
   769  020E                     	;# 
   770  020F                     	;# 
   771  0210                     	;# 
   772  0211                     	;# 
   773  0211                     	;# 
   774  0212                     	;# 
   775  0212                     	;# 
   776  0213                     	;# 
   777  0213                     	;# 
   778  0214                     	;# 
   779  0214                     	;# 
   780  0215                     	;# 
   781  0215                     	;# 
   782  0215                     	;# 
   783  0215                     	;# 
   784  0216                     	;# 
   785  0216                     	;# 
   786  0217                     	;# 
   787  0217                     	;# 
   788  028C                     	;# 
   789  028D                     	;# 
   790  028E                     	;# 
   791  028F                     	;# 
   792  0290                     	;# 
   793  0291                     	;# 
   794  0291                     	;# 
   795  0292                     	;# 
   796  0293                     	;# 
   797  0293                     	;# 
   798  0298                     	;# 
   799  0298                     	;# 
   800  0299                     	;# 
   801  029A                     	;# 
   802  029A                     	;# 
   803  029E                     	;# 
   804  030C                     	;# 
   805  030D                     	;# 
   806  030E                     	;# 
   807  030F                     	;# 
   808  0310                     	;# 
   809  038C                     	;# 
   810  038D                     	;# 
   811  038E                     	;# 
   812  038F                     	;# 
   813  0390                     	;# 
   814  0391                     	;# 
   815  0392                     	;# 
   816  0393                     	;# 
   817  0394                     	;# 
   818  0395                     	;# 
   819  0396                     	;# 
   820  0397                     	;# 
   821  0398                     	;# 
   822  0399                     	;# 
   823  039D                     	;# 
   824  039E                     	;# 
   825  039F                     	;# 
   826  0415                     	;# 
   827  0416                     	;# 
   828  0417                     	;# 
   829  041C                     	;# 
   830  041D                     	;# 
   831  041E                     	;# 
   832  0498                     	;# 
   833  0498                     	;# 
   834  0499                     	;# 
   835  049A                     	;# 
   836  049B                     	;# 
   837  049B                     	;# 
   838  049C                     	;# 
   839  049D                     	;# 
   840  049E                     	;# 
   841  049F                     	;# 
   842  0511                     	;# 
   843  0515                     	;# 
   844  0617                     	;# 
   845  0618                     	;# 
   846  0619                     	;# 
   847  0619                     	;# 
   848  061A                     	;# 
   849  061B                     	;# 
   850  061C                     	;# 
   851  061C                     	;# 
   852  0691                     	;# 
   853  0692                     	;# 
   854  0693                     	;# 
   855  0694                     	;# 
   856  0695                     	;# 
   857  0696                     	;# 
   858  0697                     	;# 
   859  0698                     	;# 
   860  0699                     	;# 
   861  069A                     	;# 
   862  069B                     	;# 
   863  069C                     	;# 
   864  069D                     	;# 
   865  069E                     	;# 
   866  069F                     	;# 
   867  0E0F                     	;# 
   868  0E10                     	;# 
   869  0E11                     	;# 
   870  0E12                     	;# 
   871  0E13                     	;# 
   872  0E14                     	;# 
   873  0E15                     	;# 
   874  0E17                     	;# 
   875  0E20                     	;# 
   876  0E21                     	;# 
   877  0E22                     	;# 
   878  0E24                     	;# 
   879  0E25                     	;# 
   880  0E28                     	;# 
   881  0E29                     	;# 
   882  0E2A                     	;# 
   883  0E2B                     	;# 
   884  0E90                     	;# 
   885  0E91                     	;# 
   886  0E92                     	;# 
   887  0E93                     	;# 
   888  0E94                     	;# 
   889  0E95                     	;# 
   890  0E96                     	;# 
   891  0E97                     	;# 
   892  0E98                     	;# 
   893  0E99                     	;# 
   894  0E9A                     	;# 
   895  0E9B                     	;# 
   896  0E9C                     	;# 
   897  0E9D                     	;# 
   898  0E9E                     	;# 
   899  0E9F                     	;# 
   900  0EA0                     	;# 
   901  0EA1                     	;# 
   902  0EA2                     	;# 
   903  0EA3                     	;# 
   904  0EA4                     	;# 
   905  0EA5                     	;# 
   906  0EA6                     	;# 
   907  0EA7                     	;# 
   908  0EA8                     	;# 
   909  0EA9                     	;# 
   910  0EAA                     	;# 
   911  0EAB                     	;# 
   912  0EAC                     	;# 
   913  0EAD                     	;# 
   914  0EAE                     	;# 
   915  0EAF                     	;# 
   916  0EB0                     	;# 
   917  0EB1                     	;# 
   918  0EB2                     	;# 
   919  0F0F                     	;# 
   920  0F10                     	;# 
   921  0F11                     	;# 
   922  0F12                     	;# 
   923  0F13                     	;# 
   924  0F14                     	;# 
   925  0F15                     	;# 
   926  0F16                     	;# 
   927  0F17                     	;# 
   928  0F18                     	;# 
   929  0F19                     	;# 
   930  0F1A                     	;# 
   931  0F1B                     	;# 
   932  0F1C                     	;# 
   933  0F1D                     	;# 
   934  0F1E                     	;# 
   935  0F1F                     	;# 
   936  0F20                     	;# 
   937  0F21                     	;# 
   938  0F22                     	;# 
   939  0F23                     	;# 
   940  0F24                     	;# 
   941  0F25                     	;# 
   942  0F26                     	;# 
   943  0F27                     	;# 
   944  0F28                     	;# 
   945  0F29                     	;# 
   946  0F2A                     	;# 
   947  0F2B                     	;# 
   948  0F2C                     	;# 
   949  0F2D                     	;# 
   950  0F2E                     	;# 
   951  0F2F                     	;# 
   952  0F30                     	;# 
   953  0F31                     	;# 
   954  0F32                     	;# 
   955  0F33                     	;# 
   956  0F34                     	;# 
   957  0F35                     	;# 
   958  0F36                     	;# 
   959  0F37                     	;# 
   960  0FE4                     	;# 
   961  0FE5                     	;# 
   962  0FE6                     	;# 
   963  0FE7                     	;# 
   964  0FE8                     	;# 
   965  0FE9                     	;# 
   966  0FEA                     	;# 
   967  0FEB                     	;# 
   968  0FED                     	;# 
   969  0FEE                     	;# 
   970  0FEF                     	;# 
   971  0000                     	;# 
   972  0001                     	;# 
   973  0002                     	;# 
   974  0003                     	;# 
   975  0004                     	;# 
   976  0005                     	;# 
   977  0006                     	;# 
   978  0007                     	;# 
   979  0008                     	;# 
   980  0009                     	;# 
   981  000A                     	;# 
   982  000B                     	;# 
   983  000C                     	;# 
   984  000D                     	;# 
   985  000E                     	;# 
   986  000F                     	;# 
   987  0010                     	;# 
   988  0011                     	;# 
   989  0012                     	;# 
   990  0013                     	;# 
   991  0015                     	;# 
   992  0016                     	;# 
   993  0016                     	;# 
   994  0017                     	;# 
   995  0018                     	;# 
   996  0019                     	;# 
   997  001A                     	;# 
   998  001B                     	;# 
   999  001C                     	;# 
  1000  008C                     	;# 
  1001  008D                     	;# 
  1002  008E                     	;# 
  1003  008F                     	;# 
  1004  0090                     	;# 
  1005  0091                     	;# 
  1006  0092                     	;# 
  1007  0093                     	;# 
  1008  0095                     	;# 
  1009  0096                     	;# 
  1010  0097                     	;# 
  1011  0098                     	;# 
  1012  0099                     	;# 
  1013  009A                     	;# 
  1014  009B                     	;# 
  1015  009B                     	;# 
  1016  009C                     	;# 
  1017  009D                     	;# 
  1018  009E                     	;# 
  1019  009F                     	;# 
  1020  010C                     	;# 
  1021  010D                     	;# 
  1022  010E                     	;# 
  1023  010F                     	;# 
  1024  0110                     	;# 
  1025  0111                     	;# 
  1026  0112                     	;# 
  1027  0113                     	;# 
  1028  0114                     	;# 
  1029  0115                     	;# 
  1030  0116                     	;# 
  1031  0117                     	;# 
  1032  0118                     	;# 
  1033  0119                     	;# 
  1034  011A                     	;# 
  1035  011B                     	;# 
  1036  011B                     	;# 
  1037  011C                     	;# 
  1038  018C                     	;# 
  1039  018D                     	;# 
  1040  018E                     	;# 
  1041  018F                     	;# 
  1042  0190                     	;# 
  1043  0191                     	;# 
  1044  0191                     	;# 
  1045  0192                     	;# 
  1046  0193                     	;# 
  1047  0193                     	;# 
  1048  0194                     	;# 
  1049  0195                     	;# 
  1050  0196                     	;# 
  1051  0197                     	;# 
  1052  0199                     	;# 
  1053  0199                     	;# 
  1054  0199                     	;# 
  1055  019A                     	;# 
  1056  019A                     	;# 
  1057  019A                     	;# 
  1058  019B                     	;# 
  1059  019B                     	;# 
  1060  019B                     	;# 
  1061  019B                     	;# 
  1062  019B                     	;# 
  1063  019C                     	;# 
  1064  019C                     	;# 
  1065  019C                     	;# 
  1066  019D                     	;# 
  1067  019D                     	;# 
  1068  019D                     	;# 
  1069  019E                     	;# 
  1070  019E                     	;# 
  1071  019E                     	;# 
  1072  019F                     	;# 
  1073  019F                     	;# 
  1074  019F                     	;# 
  1075  019F                     	;# 
  1076  019F                     	;# 
  1077  020C                     	;# 
  1078  020D                     	;# 
  1079  020E                     	;# 
  1080  020F                     	;# 
  1081  0210                     	;# 
  1082  0211                     	;# 
  1083  0211                     	;# 
  1084  0212                     	;# 
  1085  0212                     	;# 
  1086  0213                     	;# 
  1087  0213                     	;# 
  1088  0214                     	;# 
  1089  0214                     	;# 
  1090  0215                     	;# 
  1091  0215                     	;# 
  1092  0215                     	;# 
  1093  0215                     	;# 
  1094  0216                     	;# 
  1095  0216                     	;# 
  1096  0217                     	;# 
  1097  0217                     	;# 
  1098  028C                     	;# 
  1099  028D                     	;# 
  1100  028E                     	;# 
  1101  028F                     	;# 
  1102  0290                     	;# 
  1103  0291                     	;# 
  1104  0291                     	;# 
  1105  0292                     	;# 
  1106  0293                     	;# 
  1107  0293                     	;# 
  1108  0298                     	;# 
  1109  0298                     	;# 
  1110  0299                     	;# 
  1111  029A                     	;# 
  1112  029A                     	;# 
  1113  029E                     	;# 
  1114  030C                     	;# 
  1115  030D                     	;# 
  1116  030E                     	;# 
  1117  030F                     	;# 
  1118  0310                     	;# 
  1119  038C                     	;# 
  1120  038D                     	;# 
  1121  038E                     	;# 
  1122  038F                     	;# 
  1123  0390                     	;# 
  1124  0391                     	;# 
  1125  0392                     	;# 
  1126  0393                     	;# 
  1127  0394                     	;# 
  1128  0395                     	;# 
  1129  0396                     	;# 
  1130  0397                     	;# 
  1131  0398                     	;# 
  1132  0399                     	;# 
  1133  039D                     	;# 
  1134  039E                     	;# 
  1135  039F                     	;# 
  1136  0415                     	;# 
  1137  0416                     	;# 
  1138  0417                     	;# 
  1139  041C                     	;# 
  1140  041D                     	;# 
  1141  041E                     	;# 
  1142  0498                     	;# 
  1143  0498                     	;# 
  1144  0499                     	;# 
  1145  049A                     	;# 
  1146  049B                     	;# 
  1147  049B                     	;# 
  1148  049C                     	;# 
  1149  049D                     	;# 
  1150  049E                     	;# 
  1151  049F                     	;# 
  1152  0511                     	;# 
  1153  0515                     	;# 
  1154  0617                     	;# 
  1155  0618                     	;# 
  1156  0619                     	;# 
  1157  0619                     	;# 
  1158  061A                     	;# 
  1159  061B                     	;# 
  1160  061C                     	;# 
  1161  061C                     	;# 
  1162  0691                     	;# 
  1163  0692                     	;# 
  1164  0693                     	;# 
  1165  0694                     	;# 
  1166  0695                     	;# 
  1167  0696                     	;# 
  1168  0697                     	;# 
  1169  0698                     	;# 
  1170  0699                     	;# 
  1171  069A                     	;# 
  1172  069B                     	;# 
  1173  069C                     	;# 
  1174  069D                     	;# 
  1175  069E                     	;# 
  1176  069F                     	;# 
  1177  0E0F                     	;# 
  1178  0E10                     	;# 
  1179  0E11                     	;# 
  1180  0E12                     	;# 
  1181  0E13                     	;# 
  1182  0E14                     	;# 
  1183  0E15                     	;# 
  1184  0E17                     	;# 
  1185  0E20                     	;# 
  1186  0E21                     	;# 
  1187  0E22                     	;# 
  1188  0E24                     	;# 
  1189  0E25                     	;# 
  1190  0E28                     	;# 
  1191  0E29                     	;# 
  1192  0E2A                     	;# 
  1193  0E2B                     	;# 
  1194  0E90                     	;# 
  1195  0E91                     	;# 
  1196  0E92                     	;# 
  1197  0E93                     	;# 
  1198  0E94                     	;# 
  1199  0E95                     	;# 
  1200  0E96                     	;# 
  1201  0E97                     	;# 
  1202  0E98                     	;# 
  1203  0E99                     	;# 
  1204  0E9A                     	;# 
  1205  0E9B                     	;# 
  1206  0E9C                     	;# 
  1207  0E9D                     	;# 
  1208  0E9E                     	;# 
  1209  0E9F                     	;# 
  1210  0EA0                     	;# 
  1211  0EA1                     	;# 
  1212  0EA2                     	;# 
  1213  0EA3                     	;# 
  1214  0EA4                     	;# 
  1215  0EA5                     	;# 
  1216  0EA6                     	;# 
  1217  0EA7                     	;# 
  1218  0EA8                     	;# 
  1219  0EA9                     	;# 
  1220  0EAA                     	;# 
  1221  0EAB                     	;# 
  1222  0EAC                     	;# 
  1223  0EAD                     	;# 
  1224  0EAE                     	;# 
  1225  0EAF                     	;# 
  1226  0EB0                     	;# 
  1227  0EB1                     	;# 
  1228  0EB2                     	;# 
  1229  0F0F                     	;# 
  1230  0F10                     	;# 
  1231  0F11                     	;# 
  1232  0F12                     	;# 
  1233  0F13                     	;# 
  1234  0F14                     	;# 
  1235  0F15                     	;# 
  1236  0F16                     	;# 
  1237  0F17                     	;# 
  1238  0F18                     	;# 
  1239  0F19                     	;# 
  1240  0F1A                     	;# 
  1241  0F1B                     	;# 
  1242  0F1C                     	;# 
  1243  0F1D                     	;# 
  1244  0F1E                     	;# 
  1245  0F1F                     	;# 
  1246  0F20                     	;# 
  1247  0F21                     	;# 
  1248  0F22                     	;# 
  1249  0F23                     	;# 
  1250  0F24                     	;# 
  1251  0F25                     	;# 
  1252  0F26                     	;# 
  1253  0F27                     	;# 
  1254  0F28                     	;# 
  1255  0F29                     	;# 
  1256  0F2A                     	;# 
  1257  0F2B                     	;# 
  1258  0F2C                     	;# 
  1259  0F2D                     	;# 
  1260  0F2E                     	;# 
  1261  0F2F                     	;# 
  1262  0F30                     	;# 
  1263  0F31                     	;# 
  1264  0F32                     	;# 
  1265  0F33                     	;# 
  1266  0F34                     	;# 
  1267  0F35                     	;# 
  1268  0F36                     	;# 
  1269  0F37                     	;# 
  1270  0FE4                     	;# 
  1271  0FE5                     	;# 
  1272  0FE6                     	;# 
  1273  0FE7                     	;# 
  1274  0FE8                     	;# 
  1275  0FE9                     	;# 
  1276  0FEA                     	;# 
  1277  0FEB                     	;# 
  1278  0FED                     	;# 
  1279  0FEE                     	;# 
  1280  0FEF                     	;# 
  1281                           
  1282                           	psect	stringtext
  1283  0237                     __pstringtext:	
  1284  0237                     _dpowers:	
  1285  0237  3401               	retlw	1
  1286  0238  3400               	retlw	0
  1287  0239  3400               	retlw	0
  1288  023A  3400               	retlw	0
  1289  023B  340A               	retlw	10
  1290  023C  3400               	retlw	0
  1291  023D  3400               	retlw	0
  1292  023E  3400               	retlw	0
  1293  023F  3464               	retlw	100
  1294  0240  3400               	retlw	0
  1295  0241  3400               	retlw	0
  1296  0242  3400               	retlw	0
  1297  0243  34E8               	retlw	232
  1298  0244  3403               	retlw	3
  1299  0245  3400               	retlw	0
  1300  0246  3400               	retlw	0
  1301  0247  3410               	retlw	16
  1302  0248  3427               	retlw	39
  1303  0249  3400               	retlw	0
  1304  024A  3400               	retlw	0
  1305  024B  34A0               	retlw	160
  1306  024C  3486               	retlw	134
  1307  024D  3401               	retlw	1
  1308  024E  3400               	retlw	0
  1309  024F  3440               	retlw	64
  1310  0250  3442               	retlw	66
  1311  0251  340F               	retlw	15
  1312  0252  3400               	retlw	0
  1313  0253  3480               	retlw	128
  1314  0254  3496               	retlw	150
  1315  0255  3498               	retlw	152
  1316  0256  3400               	retlw	0
  1317  0257  3400               	retlw	0
  1318  0258  34E1               	retlw	225
  1319  0259  34F5               	retlw	245
  1320  025A  3405               	retlw	5
  1321  025B  3400               	retlw	0
  1322  025C  34CA               	retlw	202
  1323  025D  349A               	retlw	154
  1324  025E  343B               	retlw	59
  1325  025F                     __end_of_dpowers:	
  1326  000B                     _INTCONbits	set	11
  1327  0011                     _PIR1bits	set	17
  1328  0012                     _PIR2bits	set	18
  1329  005F                     _GIE	set	95
  1330  007A                     _RD2	set	122
  1331  007B                     _RD3	set	123
  1332  007C                     _RD4	set	124
  1333  007D                     _RD5	set	125
  1334  007E                     _RD6	set	126
  1335  007F                     _RD7	set	127
  1336  0095                     _OPTION_REGbits	set	149
  1337  0091                     _PIE1bits	set	145
  1338  0092                     _PIE2bits	set	146
  1339  008C                     _TRISA	set	140
  1340  008D                     _TRISB	set	141
  1341  008E                     _TRISC	set	142
  1342  008F                     _TRISD	set	143
  1343  0090                     _TRISE	set	144
  1344  04CB                     _IRCF0	set	1227
  1345  04CC                     _IRCF1	set	1228
  1346  04CD                     _IRCF2	set	1229
  1347  04CE                     _IRCF3	set	1230
  1348  04C8                     _SCS0	set	1224
  1349  04C9                     _SCS1	set	1225
  1350  04CF                     _SPLLEN	set	1231
  1351  010C                     _LATA	set	268
  1352  010D                     _LATB	set	269
  1353  010E                     _LATC	set	270
  1354  018C                     _ANSELA	set	396
  1355  018D                     _ANSELB	set	397
  1356  018E                     _ANSELC	set	398
  1357  018F                     _ANSELD	set	399
  1358  0212                     _SSP1ADD	set	530
  1359  0211                     _SSP1BUF	set	529
  1360  0215                     _SSP1CON1	set	533
  1361  0215                     _SSP1CON1bits	set	533
  1362  0216                     _SSP1CON2bits	set	534
  1363  0217                     _SSP1CON3	set	535
  1364  0214                     _SSP1STAT	set	532
  1365  020C                     _WPUA	set	524
  1366  020D                     _WPUB	set	525
  1367  020E                     _WPUC	set	526
  1368  0210                     _WPUE	set	528
  1369  0E0F                     _PPSLOCK	set	3599
  1370  0E0F                     _PPSLOCKbits	set	3599
  1371  0E20                     _SSPCLKPPSbits	set	3616
  1372  0E21                     _SSPDATPPSbits	set	3617
  1373  0EA4                     _RC4PPSbits	set	3748
  1374  0EA5                     _RC5PPSbits	set	3749
  1375  0EA6                     _RC6PPSbits	set	3750
  1376  025F                     STR_2:	
  1377  025F  3441               	retlw	65	;'A'
  1378  0260  3463               	retlw	99	;'c'
  1379  0261  346B               	retlw	107	;'k'
  1380  0262  3465               	retlw	101	;'e'
  1381  0263  3464               	retlw	100	;'d'
  1382  0264  3420               	retlw	32	;' '
  1383  0265  3461               	retlw	97	;'a'
  1384  0266  346E               	retlw	110	;'n'
  1385  0267  3464               	retlw	100	;'d'
  1386  0268  3420               	retlw	32	;' '
  1387  0269  3472               	retlw	114	;'r'
  1388  026A  3465               	retlw	101	;'e'
  1389  026B  3461               	retlw	97	;'a'
  1390  026C  3464               	retlw	100	;'d'
  1391  026D  343A               	retlw	58	;':'
  1392  026E  3420               	retlw	32	;' '
  1393  026F  3400               	retlw	0
  1394  0270                     STR_6:	
  1395  0270  3425               	retlw	37	;'%'
  1396  0271  346C               	retlw	108	;'l'
  1397  0272  3475               	retlw	117	;'u'
  1398  0273  342E               	retlw	46	;'.'
  1399  0274  3425               	retlw	37	;'%'
  1400  0275  3436               	retlw	54	;'6'
  1401  0276  342E               	retlw	46	;'.'
  1402  0277  3436               	retlw	54	;'6'
  1403  0278  346C               	retlw	108	;'l'
  1404  0279  3475               	retlw	117	;'u'
  1405  027A  3400               	retlw	0
  1406  027B                     STR_5:	
  1407  027B  344E               	retlw	78	;'N'
  1408  027C  3461               	retlw	97	;'a'
  1409  027D  3463               	retlw	99	;'c'
  1410  027E  346B               	retlw	107	;'k'
  1411  027F  3420               	retlw	32	;' '
  1412  0280  3457               	retlw	87	;'W'
  1413  0281  3472               	retlw	114	;'r'
  1414  0282  3469               	retlw	105	;'i'
  1415  0283  3474               	retlw	116	;'t'
  1416  0284  3465               	retlw	101	;'e'
  1417  0285  3400               	retlw	0
  1418  0286                     STR_3:	
  1419  0286  344E               	retlw	78	;'N'
  1420  0287  3461               	retlw	97	;'a'
  1421  0288  3463               	retlw	99	;'c'
  1422  0289  346B               	retlw	107	;'k'
  1423  028A  3465               	retlw	101	;'e'
  1424  028B  3464               	retlw	100	;'d'
  1425  028C  3400               	retlw	0
  1426  028D                     STR_4:	
  1427  028D  3457               	retlw	87	;'W'
  1428  028E  3472               	retlw	114	;'r'
  1429  028F  346F               	retlw	111	;'o'
  1430  0290  3474               	retlw	116	;'t'
  1431  0291  3465               	retlw	101	;'e'
  1432  0292  3400               	retlw	0
  1433  0293                     STR_1:	
  1434  0293  3452               	retlw	82	;'R'
  1435  0294  3465               	retlw	101	;'e'
  1436  0295  3461               	retlw	97	;'a'
  1437  0296  3464               	retlw	100	;'d'
  1438  0297  3479               	retlw	121	;'y'
  1439  0298  3400               	retlw	0
  1440                           
  1441                           ; #config settings
  1442  0000                     
  1443                           	psect	cinit
  1444  0022                     start_initialization:	
  1445  0022                     __initialization:	
  1446                           
  1447                           ; Clear objects allocated to COMMON
  1448  0022  01F0               	clrf	__pbssCOMMON& (0+127)
  1449  0023  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  1450  0024  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1451  0025  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1452  0026  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  1453  0027  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  1454  0028  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
  1455                           
  1456                           ; Clear objects allocated to BANK0
  1457  0029  304B               	movlw	low __pbssBANK0
  1458  002A  0084               	movwf	4
  1459  002B  3000               	movlw	high __pbssBANK0
  1460  002C  0085               	movwf	5
  1461  002D  3022               	movlw	34
  1462  002E  3186  2698  3180   	fcall	clear_ram0
  1463                           
  1464                           ; Clear objects allocated to BANK1
  1465  0031  30A0               	movlw	low __pbssBANK1
  1466  0032  0084               	movwf	4
  1467  0033  3000               	movlw	high __pbssBANK1
  1468  0034  0085               	movwf	5
  1469  0035  3011               	movlw	17
  1470  0036  3186  2698         	fcall	clear_ram0
  1471  0038                     end_of_initialization:	
  1472                           ;End of C runtime variable initialization code
  1473                           
  1474  0038                     __end_of__initialization:	
  1475  0038  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1476  0039  0020               	movlb	0
  1477  003A  3181  2977         	ljmp	_main	;jump to C main() function
  1478                           
  1479                           	psect	bssCOMMON
  1480  0070                     __pbssCOMMON:	
  1481  0070                     I2C_ISR@i2c_bytes_left:	
  1482  0070                     	ds	1
  1483  0071                     I2C_ISR@pi2c_buf_ptr:	
  1484  0071                     	ds	1
  1485  0072                     _i2c_trb_count:	
  1486  0072                     	ds	1
  1487  0073                     _p_i2c_current:	
  1488  0073                     	ds	1
  1489  0074                     _p_i2c_trb_current:	
  1490  0074                     	ds	1
  1491  0075                     I2C_ISR@i2c_address:	
  1492  0075                     	ds	2
  1493                           
  1494                           	psect	bssBANK0
  1495  004B                     __pbssBANK0:	
  1496  004B                     _i2c_object:	
  1497  004B                     	ds	5
  1498  0050                     I2C_ISR@i2c_10bit_address_restart:	
  1499  0050                     	ds	1
  1500  0051                     _i2c_state:	
  1501  0051                     	ds	1
  1502  0052                     LC164_Read@trb:	
  1503  0052                     	ds	8
  1504  005A                     LC164_Write@trb:	
  1505  005A                     	ds	8
  1506  0062                     I2C_MasterRead@trBlock:	
  1507  0062                     	ds	4
  1508  0066                     I2C_MasterWrite@trBlock:	
  1509  0066                     	ds	4
  1510  006A                     _i2c_tr_queue:	
  1511  006A                     	ds	3
  1512                           
  1513                           	psect	bssBANK1
  1514  00A0                     __pbssBANK1:	
  1515  00A0                     ftoa@buf:	
  1516  00A0                     	ds	17
  1517                           
  1518                           	psect	clrtext
  1519  0698                     clear_ram0:	
  1520                           ;	Called with FSR0 containing the base address, and
  1521                           ;	WREG with the size to clear
  1522                           
  1523  0698  0064               	clrwdt	;clear the watchdog before getting into this loop
  1524  0699                     clrloop0:	
  1525  0699  0180               	clrf	0	;clear RAM location pointed to by FSR
  1526  069A  3101               	addfsr 0,1
  1527  069B  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1528  069C  2E99               	goto	clrloop0	;have we reached the end yet?
  1529  069D  3400               	retlw	0	;all done for this memory range, return
  1530                           
  1531                           	psect	cstackCOMMON
  1532  0077                     __pcstackCOMMON:	
  1533  0077                     ?_I2C_Initialize:	
  1534  0077                     ?_I2C_BusCollisionISR:	
  1535                           ; 1 bytes @ 0x0
  1536                           
  1537  0077                     ??_I2C_BusCollisionISR:	
  1538                           ; 1 bytes @ 0x0
  1539                           
  1540  0077                     ?_I2C_ISR:	
  1541                           ; 1 bytes @ 0x0
  1542                           
  1543  0077                     ?_I2C_Stop:	
  1544                           ; 1 bytes @ 0x0
  1545                           
  1546  0077                     ??_I2C_Stop:	
  1547                           ; 1 bytes @ 0x0
  1548                           
  1549  0077                     ?_I2C_FunctionComplete:	
  1550                           ; 1 bytes @ 0x0
  1551                           
  1552  0077                     ??_I2C_FunctionComplete:	
  1553                           ; 1 bytes @ 0x0
  1554                           
  1555  0077                     ?_internal_16:	
  1556                           ; 1 bytes @ 0x0
  1557                           
  1558  0077                     ?_Lcd_Port:	
  1559                           ; 1 bytes @ 0x0
  1560                           
  1561  0077                     ?_Lcd_Cmd:	
  1562                           ; 1 bytes @ 0x0
  1563                           
  1564  0077                     ?_Lcd_Clear:	
  1565                           ; 1 bytes @ 0x0
  1566                           
  1567  0077                     ?_Lcd_Init:	
  1568                           ; 1 bytes @ 0x0
  1569                           
  1570  0077                     ?_Lcd_Write_Char:	
  1571                           ; 1 bytes @ 0x0
  1572                           
  1573  0077                     ?_I2C_PIN_Initialize:	
  1574                           ; 1 bytes @ 0x0
  1575                           
  1576  0077                     ?_initmain:	
  1577                           ; 1 bytes @ 0x0
  1578                           
  1579  0077                     ?_main:	
  1580                           ; 1 bytes @ 0x0
  1581                           
  1582  0077                     ?_INTERRUPT_InterruptManager:	
  1583                           ; 1 bytes @ 0x0
  1584                           
  1585                           
  1586                           ; 1 bytes @ 0x0
  1587  0077                     	ds	1
  1588  0078                     I2C_Stop@completion_code:	
  1589                           
  1590                           ; 1 bytes @ 0x1
  1591  0078                     	ds	1
  1592  0079                     ??_I2C_ISR:	
  1593                           
  1594                           ; 1 bytes @ 0x2
  1595  0079                     	ds	4
  1596  007D                     ??_INTERRUPT_InterruptManager:	
  1597                           
  1598                           ; 1 bytes @ 0x6
  1599  007D                     	ds	1
  1600                           
  1601                           	psect	cstackBANK0
  1602  0020                     __pcstackBANK0:	
  1603  0020                     ?_I2C_MasterWriteTRBBuild:	
  1604  0020                     ?_I2C_MasterReadTRBBuild:	
  1605                           ; 1 bytes @ 0x0
  1606                           
  1607  0020                     ?_I2C_MasterTRBInsert:	
  1608                           ; 1 bytes @ 0x0
  1609                           
  1610  0020                     ??_I2C_Initialize:	
  1611                           ; 1 bytes @ 0x0
  1612                           
  1613  0020                     ??_internal_16:	
  1614                           ; 1 bytes @ 0x0
  1615                           
  1616  0020                     ??_Lcd_Port:	
  1617                           ; 1 bytes @ 0x0
  1618                           
  1619  0020                     ??_I2C_PIN_Initialize:	
  1620                           ; 1 bytes @ 0x0
  1621                           
  1622  0020                     ?___lwdiv:	
  1623                           ; 1 bytes @ 0x0
  1624                           
  1625  0020                     ?___lwmod:	
  1626                           ; 2 bytes @ 0x0
  1627                           
  1628  0020                     Lcd_Port@a:	
  1629                           ; 2 bytes @ 0x0
  1630                           
  1631  0020                     I2C_PIN_Initialize@state:	
  1632                           ; 1 bytes @ 0x0
  1633                           
  1634  0020                     I2C_MasterTRBInsert@ptrb_list:	
  1635                           ; 1 bytes @ 0x0
  1636                           
  1637  0020                     I2C_MasterReadTRBBuild@pdata:	
  1638                           ; 1 bytes @ 0x0
  1639                           
  1640  0020                     I2C_MasterWriteTRBBuild@pdata:	
  1641                           ; 1 bytes @ 0x0
  1642                           
  1643  0020                     ___lwdiv@divisor:	
  1644                           ; 1 bytes @ 0x0
  1645                           
  1646  0020                     ___lwmod@divisor:	
  1647                           ; 2 bytes @ 0x0
  1648                           
  1649                           
  1650                           ; 2 bytes @ 0x0
  1651  0020                     	ds	1
  1652  0021                     ??_Lcd_Cmd:	
  1653  0021                     ??_Lcd_Write_Char:	
  1654                           ; 1 bytes @ 0x1
  1655                           
  1656  0021                     I2C_MasterTRBInsert@pflag:	
  1657                           ; 1 bytes @ 0x1
  1658                           
  1659  0021                     I2C_MasterReadTRBBuild@length:	
  1660                           ; 1 bytes @ 0x1
  1661                           
  1662  0021                     I2C_MasterWriteTRBBuild@length:	
  1663                           ; 1 bytes @ 0x1
  1664                           
  1665                           
  1666                           ; 1 bytes @ 0x1
  1667  0021                     	ds	1
  1668  0022                     ??_I2C_MasterTRBInsert:	
  1669  0022                     Lcd_Write_Char@temp:	
  1670                           ; 1 bytes @ 0x2
  1671                           
  1672  0022                     I2C_MasterReadTRBBuild@address:	
  1673                           ; 1 bytes @ 0x2
  1674                           
  1675  0022                     I2C_MasterWriteTRBBuild@address:	
  1676                           ; 2 bytes @ 0x2
  1677                           
  1678  0022                     ___lwdiv@dividend:	
  1679                           ; 2 bytes @ 0x2
  1680                           
  1681  0022                     ___lwmod@dividend:	
  1682                           ; 2 bytes @ 0x2
  1683                           
  1684                           
  1685                           ; 2 bytes @ 0x2
  1686  0022                     	ds	1
  1687  0023                     Lcd_Cmd@a:	
  1688  0023                     Lcd_Write_Char@y:	
  1689                           ; 1 bytes @ 0x3
  1690                           
  1691  0023                     I2C_MasterTRBInsert@count:	
  1692                           ; 1 bytes @ 0x3
  1693                           
  1694                           
  1695                           ; 1 bytes @ 0x3
  1696  0023                     	ds	1
  1697  0024                     ??_I2C_MasterWriteTRBBuild:	
  1698  0024                     ??_I2C_MasterReadTRBBuild:	
  1699                           ; 1 bytes @ 0x4
  1700                           
  1701  0024                     ??_Lcd_Clear:	
  1702                           ; 1 bytes @ 0x4
  1703                           
  1704  0024                     ?_Lcd_Set_Cursor:	
  1705                           ; 1 bytes @ 0x4
  1706                           
  1707  0024                     ??_Lcd_Init:	
  1708                           ; 1 bytes @ 0x4
  1709                           
  1710  0024                     ??___lwdiv:	
  1711                           ; 1 bytes @ 0x4
  1712                           
  1713  0024                     ??___lwmod:	
  1714                           ; 1 bytes @ 0x4
  1715                           
  1716  0024                     Lcd_Set_Cursor@b:	
  1717                           ; 1 bytes @ 0x4
  1718                           
  1719  0024                     Lcd_Write_Char@a:	
  1720                           ; 1 bytes @ 0x4
  1721                           
  1722                           
  1723                           ; 1 bytes @ 0x4
  1724  0024                     	ds	1
  1725  0025                     ??_Lcd_Set_Cursor:	
  1726  0025                     ___lwmod@counter:	
  1727                           ; 1 bytes @ 0x5
  1728                           
  1729  0025                     ___lwdiv@quotient:	
  1730                           ; 1 bytes @ 0x5
  1731                           
  1732                           
  1733                           ; 2 bytes @ 0x5
  1734  0025                     	ds	1
  1735  0026                     I2C_MasterReadTRBBuild@ptrb:	
  1736  0026                     I2C_MasterWriteTRBBuild@ptrb:	
  1737                           ; 1 bytes @ 0x6
  1738                           
  1739                           
  1740                           ; 1 bytes @ 0x6
  1741  0026                     	ds	1
  1742  0027                     ?_LC164_Read:	
  1743  0027                     ?_LC164_Write:	
  1744                           ; 1 bytes @ 0x7
  1745                           
  1746  0027                     Lcd_Set_Cursor@a:	
  1747                           ; 1 bytes @ 0x7
  1748                           
  1749  0027                     LC164_Read@pData:	
  1750                           ; 1 bytes @ 0x7
  1751                           
  1752  0027                     LC164_Write@data:	
  1753                           ; 1 bytes @ 0x7
  1754                           
  1755  0027                     ___lwdiv@counter:	
  1756                           ; 1 bytes @ 0x7
  1757                           
  1758                           
  1759                           ; 1 bytes @ 0x7
  1760  0027                     	ds	1
  1761  0028                     ?_utoa:	
  1762  0028                     ??_LC164_Read:	
  1763                           ; 1 bytes @ 0x8
  1764                           
  1765  0028                     ??_LC164_Write:	
  1766                           ; 1 bytes @ 0x8
  1767                           
  1768  0028                     Lcd_Set_Cursor@z:	
  1769                           ; 1 bytes @ 0x8
  1770                           
  1771  0028                     utoa@val:	
  1772                           ; 1 bytes @ 0x8
  1773                           
  1774                           
  1775                           ; 2 bytes @ 0x8
  1776  0028                     	ds	1
  1777  0029                     Lcd_Set_Cursor@y:	
  1778                           
  1779                           ; 1 bytes @ 0x9
  1780  0029                     	ds	1
  1781  002A                     Lcd_Set_Cursor@temp:	
  1782  002A                     LC164_Read@addrlo:	
  1783                           ; 1 bytes @ 0xA
  1784                           
  1785  002A                     LC164_Write@addrlo:	
  1786                           ; 1 bytes @ 0xA
  1787                           
  1788  002A                     utoa@base:	
  1789                           ; 1 bytes @ 0xA
  1790                           
  1791                           
  1792                           ; 2 bytes @ 0xA
  1793  002A                     	ds	1
  1794  002B                     LC164_Read@status:	
  1795  002B                     LC164_Write@pack:	
  1796                           ; 1 bytes @ 0xB
  1797                           
  1798                           
  1799                           ; 2 bytes @ 0xB
  1800  002B                     	ds	1
  1801  002C                     ??_utoa:	
  1802                           
  1803                           ; 1 bytes @ 0xC
  1804  002C                     	ds	1
  1805  002D                     LC164_Write@status:	
  1806  002D                     utoa@v:	
  1807                           ; 1 bytes @ 0xD
  1808                           
  1809                           
  1810                           ; 2 bytes @ 0xD
  1811  002D                     	ds	2
  1812  002F                     utoa@c:	
  1813                           
  1814                           ; 1 bytes @ 0xF
  1815  002F                     	ds	1
  1816  0030                     utoa@buf:	
  1817                           
  1818                           ; 1 bytes @ 0x10
  1819  0030                     	ds	1
  1820  0031                     ?_itoa:	
  1821  0031                     itoa@val:	
  1822                           ; 1 bytes @ 0x11
  1823                           
  1824                           
  1825                           ; 2 bytes @ 0x11
  1826  0031                     	ds	2
  1827  0033                     itoa@base:	
  1828                           
  1829                           ; 2 bytes @ 0x13
  1830  0033                     	ds	2
  1831  0035                     ??_itoa:	
  1832                           
  1833                           ; 1 bytes @ 0x15
  1834  0035                     	ds	1
  1835  0036                     itoa@cp:	
  1836                           
  1837                           ; 1 bytes @ 0x16
  1838  0036                     	ds	1
  1839  0037                     itoa@buf:	
  1840                           
  1841                           ; 1 bytes @ 0x17
  1842  0037                     	ds	1
  1843  0038                     ?_Lcd_Write_String:	
  1844  0038                     Lcd_Write_String@a:	
  1845                           ; 1 bytes @ 0x18
  1846                           
  1847                           
  1848                           ; 2 bytes @ 0x18
  1849  0038                     	ds	2
  1850  003A                     ??_Lcd_Write_String:	
  1851                           
  1852                           ; 1 bytes @ 0x1A
  1853  003A                     	ds	1
  1854  003B                     Lcd_Write_String@i:	
  1855                           
  1856                           ; 2 bytes @ 0x1B
  1857  003B                     	ds	2
  1858  003D                     ?_Lcd_Write_Integer:	
  1859  003D                     ??_initmain:	
  1860                           ; 1 bytes @ 0x1D
  1861                           
  1862  003D                     Lcd_Write_Integer@v:	
  1863                           ; 1 bytes @ 0x1D
  1864                           
  1865                           
  1866                           ; 2 bytes @ 0x1D
  1867  003D                     	ds	2
  1868  003F                     ??_Lcd_Write_Integer:	
  1869  003F                     Lcd_Write_Integer@buf:	
  1870                           ; 1 bytes @ 0x1F
  1871                           
  1872                           
  1873                           ; 8 bytes @ 0x1F
  1874  003F                     	ds	8
  1875  0047                     ??_main:	
  1876                           
  1877                           ; 1 bytes @ 0x27
  1878  0047                     	ds	3
  1879  004A                     main@temp:	
  1880                           
  1881                           ; 1 bytes @ 0x2A
  1882  004A                     	ds	1
  1883                           
  1884                           	psect	maintext
  1885  0177                     __pmaintext:	
  1886 ;;
  1887 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1888 ;;
  1889 ;; *************** function _main *****************
  1890 ;; Defined at:
  1891 ;;		line 135 in file "Main.c"
  1892 ;; Parameters:    Size  Location     Type
  1893 ;;		None
  1894 ;; Auto vars:     Size  Location     Type
  1895 ;;  temp            1   42[BANK0 ] unsigned char 
  1896 ;; Return value:  Size  Location     Type
  1897 ;;                  1    wreg      void 
  1898 ;; Registers used:
  1899 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1900 ;; Tracked objects:
  1901 ;;		On entry : B1F/0
  1902 ;;		On exit  : 0/0
  1903 ;;		Unchanged: 0/0
  1904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1906 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1907 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1908 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1909 ;;Total ram usage:        4 bytes
  1910 ;; Hardware stack levels required when called:    7
  1911 ;; This function calls:
  1912 ;;		_LC164_Read
  1913 ;;		_LC164_Write
  1914 ;;		_Lcd_Clear
  1915 ;;		_Lcd_Set_Cursor
  1916 ;;		_Lcd_Write_Integer
  1917 ;;		_Lcd_Write_String
  1918 ;;		_initmain
  1919 ;; This function is called by:
  1920 ;;		Startup code after reset
  1921 ;; This function uses a non-reentrant model
  1922 ;;
  1923                           
  1924                           
  1925                           ;psect for function _main
  1926  0177                     _main:	
  1927                           
  1928                           ;Main.c: 137: initmain();
  1929                           
  1930                           ;incstack = 0
  1931                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1932  0177  3184  241F  3181   	fcall	_initmain
  1933  017A                     l2151:	
  1934                           ;Main.c: 138: uint8_t temp;
  1935                           ;Main.c: 140: while (1)
  1936                           
  1937                           
  1938                           ;Main.c: 141: {
  1939                           ;Main.c: 142: if ( LC164_Read(0, &temp)){
  1940  017A  304A               	movlw	(low (main@temp| 0))& (0+255)
  1941  017B  0020               	movlb	0	; select bank0
  1942  017C  00C7               	movwf	??_main
  1943  017D  0847               	movf	??_main,w
  1944  017E  00A7               	movwf	LC164_Read@pData
  1945  017F  3000               	movlw	0
  1946  0180  3184  2462  3181   	fcall	_LC164_Read
  1947  0183  3A00               	xorlw	0
  1948  0184  1903               	skipnz
  1949  0185  29B6               	goto	l2165
  1950                           
  1951                           ;Main.c: 143: Lcd_Set_Cursor(1,1);
  1952  0186  0020               	movlb	0	; select bank0
  1953  0187  01A4               	clrf	Lcd_Set_Cursor@b
  1954  0188  0AA4               	incf	Lcd_Set_Cursor@b,f
  1955  0189  3001               	movlw	1
  1956  018A  3183  23DB  3181   	fcall	_Lcd_Set_Cursor
  1957                           
  1958                           ;Main.c: 144: Lcd_Write_String("Acked and read: ");
  1959  018D  305F               	movlw	low (STR_2| (0+32768))
  1960  018E  0020               	movlb	0	; select bank0
  1961  018F  00B8               	movwf	Lcd_Write_String@a
  1962  0190  3082               	movlw	high (STR_2| (0+32768))
  1963  0191  00B9               	movwf	Lcd_Write_String@a+1
  1964  0192  3185  25D1  3181   	fcall	_Lcd_Write_String
  1965                           
  1966                           ;Main.c: 145: Lcd_Set_Cursor(2,1);
  1967  0195  0020               	movlb	0	; select bank0
  1968  0196  01A4               	clrf	Lcd_Set_Cursor@b
  1969  0197  0AA4               	incf	Lcd_Set_Cursor@b,f
  1970  0198  3002               	movlw	2
  1971  0199  3183  23DB  3181   	fcall	_Lcd_Set_Cursor
  1972                           
  1973                           ;Main.c: 146: Lcd_Write_Integer(temp);
  1974  019C  0020               	movlb	0	; select bank0
  1975  019D  084A               	movf	main@temp,w
  1976  019E  00C7               	movwf	??_main
  1977  019F  01C8               	clrf	??_main+1
  1978  01A0  0847               	movf	??_main,w
  1979  01A1  00BD               	movwf	Lcd_Write_Integer@v
  1980  01A2  0848               	movf	??_main+1,w
  1981  01A3  00BE               	movwf	Lcd_Write_Integer@v+1
  1982  01A4  3186  2661  3181   	fcall	_Lcd_Write_Integer
  1983                           
  1984                           ;Main.c: 147: _delay((unsigned long)((5000)*(16000000/4000.0)));
  1985  01A7  3066               	movlw	102
  1986  01A8  0020               	movlb	0	; select bank0
  1987  01A9  00C9               	movwf	??_main+2
  1988  01AA  3077               	movlw	119
  1989  01AB  00C8               	movwf	??_main+1
  1990  01AC  3024               	movlw	36
  1991  01AD  00C7               	movwf	??_main
  1992  01AE                     u1477:	
  1993  01AE  0BC7               	decfsz	??_main,f
  1994  01AF  29AE               	goto	u1477
  1995  01B0  0BC8               	decfsz	??_main+1,f
  1996  01B1  29AE               	goto	u1477
  1997  01B2  0BC9               	decfsz	??_main+2,f
  1998  01B3  29AE               	goto	u1477
  1999  01B4  0000               	nop
  2000  01B5  29D3               	goto	L1
  2001  01B6                     l2165:	
  2002                           ;Main.c: 149: }
  2003                           
  2004                           ;Main.c: 148: Lcd_Clear();
  2005                           
  2006                           
  2007                           ;Main.c: 151: else{
  2008                           ;Main.c: 152: Lcd_Set_Cursor(1,1);
  2009  01B6  0020               	movlb	0	; select bank0
  2010  01B7  01A4               	clrf	Lcd_Set_Cursor@b
  2011  01B8  0AA4               	incf	Lcd_Set_Cursor@b,f
  2012  01B9  3001               	movlw	1
  2013  01BA  3183  23DB  3181   	fcall	_Lcd_Set_Cursor
  2014                           
  2015                           ;Main.c: 153: Lcd_Write_String("Nacked");
  2016  01BD  3086               	movlw	low (STR_3| (0+32768))
  2017  01BE  0020               	movlb	0	; select bank0
  2018  01BF  00B8               	movwf	Lcd_Write_String@a
  2019  01C0  3082               	movlw	high (STR_3| (0+32768))
  2020  01C1  00B9               	movwf	Lcd_Write_String@a+1
  2021  01C2  3185  25D1  3181   	fcall	_Lcd_Write_String
  2022                           
  2023                           ;Main.c: 154: _delay((unsigned long)((5000)*(16000000/4000.0)));
  2024  01C5  3066               	movlw	102
  2025  01C6  0020               	movlb	0	; select bank0
  2026  01C7  00C9               	movwf	??_main+2
  2027  01C8  3077               	movlw	119
  2028  01C9  00C8               	movwf	??_main+1
  2029  01CA  3024               	movlw	36
  2030  01CB  00C7               	movwf	??_main
  2031  01CC                     u1487:	
  2032  01CC  0BC7               	decfsz	??_main,f
  2033  01CD  29CC               	goto	u1487
  2034  01CE  0BC8               	decfsz	??_main+1,f
  2035  01CF  29CC               	goto	u1487
  2036  01D0  0BC9               	decfsz	??_main+2,f
  2037  01D1  29CC               	goto	u1487
  2038  01D2  0000               	nop
  2039  01D3                     L1:	
  2040                           
  2041                           ;Main.c: 155: Lcd_Clear();
  2042  01D3  3186  2690  3181   	fcall	_Lcd_Clear
  2043                           
  2044                           ;Main.c: 156: }
  2045                           ;Main.c: 158: if ( LC164_Write(0, temp + 1)){
  2046  01D6  0020               	movlb	0	; select bank0
  2047  01D7  084A               	movf	main@temp,w
  2048  01D8  3E01               	addlw	1
  2049  01D9  00C7               	movwf	??_main
  2050  01DA  0847               	movf	??_main,w
  2051  01DB  00A7               	movwf	LC164_Write@data
  2052  01DC  3000               	movlw	0
  2053  01DD  3184  249E  3181   	fcall	_LC164_Write
  2054  01E0  3A00               	xorlw	0
  2055  01E1  1903               	skipnz
  2056  01E2  2A16               	goto	l2187
  2057                           
  2058                           ;Main.c: 159: Lcd_Set_Cursor(1,1);
  2059  01E3  0020               	movlb	0	; select bank0
  2060  01E4  01A4               	clrf	Lcd_Set_Cursor@b
  2061  01E5  0AA4               	incf	Lcd_Set_Cursor@b,f
  2062  01E6  3001               	movlw	1
  2063  01E7  3183  23DB  3181   	fcall	_Lcd_Set_Cursor
  2064                           
  2065                           ;Main.c: 160: Lcd_Write_String("Wrote");
  2066  01EA  308D               	movlw	low (STR_4| (0+32768))
  2067  01EB  0020               	movlb	0	; select bank0
  2068  01EC  00B8               	movwf	Lcd_Write_String@a
  2069  01ED  3082               	movlw	high (STR_4| (0+32768))
  2070  01EE  00B9               	movwf	Lcd_Write_String@a+1
  2071  01EF  3185  25D1  3181   	fcall	_Lcd_Write_String
  2072                           
  2073                           ;Main.c: 161: Lcd_Set_Cursor(2,1);
  2074  01F2  0020               	movlb	0	; select bank0
  2075  01F3  01A4               	clrf	Lcd_Set_Cursor@b
  2076  01F4  0AA4               	incf	Lcd_Set_Cursor@b,f
  2077  01F5  3002               	movlw	2
  2078  01F6  3183  23DB  3181   	fcall	_Lcd_Set_Cursor
  2079                           
  2080                           ;Main.c: 162: Lcd_Write_Integer(temp+1);
  2081  01F9  0020               	movlb	0	; select bank0
  2082  01FA  084A               	movf	main@temp,w
  2083  01FB  3E01               	addlw	1
  2084  01FC  00BD               	movwf	Lcd_Write_Integer@v
  2085  01FD  3000               	movlw	0
  2086  01FE  1803               	skipnc
  2087  01FF  3001               	movlw	1
  2088  0200  00BE               	movwf	Lcd_Write_Integer@v+1
  2089  0201  3186  2661  3181   	fcall	_Lcd_Write_Integer
  2090                           
  2091                           ;Main.c: 163: _delay((unsigned long)((5000)*(16000000/4000.0)));
  2092  0204  3066               	movlw	102
  2093  0205  0020               	movlb	0	; select bank0
  2094  0206  00C9               	movwf	??_main+2
  2095  0207  3077               	movlw	119
  2096  0208  00C8               	movwf	??_main+1
  2097  0209  3024               	movlw	36
  2098  020A  00C7               	movwf	??_main
  2099  020B                     u1497:	
  2100  020B  0BC7               	decfsz	??_main,f
  2101  020C  2A0B               	goto	u1497
  2102  020D  0BC8               	decfsz	??_main+1,f
  2103  020E  2A0B               	goto	u1497
  2104  020F  0BC9               	decfsz	??_main+2,f
  2105  0210  2A0B               	goto	u1497
  2106  0211  0000               	nop
  2107                           
  2108                           ;Main.c: 164: Lcd_Clear();
  2109  0212  3186  2690  3181   	fcall	_Lcd_Clear
  2110                           
  2111                           ;Main.c: 165: }
  2112  0215  297A               	goto	l2151
  2113  0216                     l2187:	
  2114                           
  2115                           ;Main.c: 166: else{
  2116                           ;Main.c: 167: Lcd_Set_Cursor(1,1);
  2117  0216  0020               	movlb	0	; select bank0
  2118  0217  01A4               	clrf	Lcd_Set_Cursor@b
  2119  0218  0AA4               	incf	Lcd_Set_Cursor@b,f
  2120  0219  3001               	movlw	1
  2121  021A  3183  23DB  3181   	fcall	_Lcd_Set_Cursor
  2122                           
  2123                           ;Main.c: 168: Lcd_Write_String("Nack Write");
  2124  021D  307B               	movlw	low (STR_5| (0+32768))
  2125  021E  0020               	movlb	0	; select bank0
  2126  021F  00B8               	movwf	Lcd_Write_String@a
  2127  0220  3082               	movlw	high (STR_5| (0+32768))
  2128  0221  00B9               	movwf	Lcd_Write_String@a+1
  2129  0222  3185  25D1  3181   	fcall	_Lcd_Write_String
  2130                           
  2131                           ;Main.c: 169: _delay((unsigned long)((5000)*(16000000/4000.0)));
  2132  0225  3066               	movlw	102
  2133  0226  0020               	movlb	0	; select bank0
  2134  0227  00C9               	movwf	??_main+2
  2135  0228  3077               	movlw	119
  2136  0229  00C8               	movwf	??_main+1
  2137  022A  3024               	movlw	36
  2138  022B  00C7               	movwf	??_main
  2139  022C                     u1507:	
  2140  022C  0BC7               	decfsz	??_main,f
  2141  022D  2A2C               	goto	u1507
  2142  022E  0BC8               	decfsz	??_main+1,f
  2143  022F  2A2C               	goto	u1507
  2144  0230  0BC9               	decfsz	??_main+2,f
  2145  0231  2A2C               	goto	u1507
  2146  0232  0000               	nop
  2147                           
  2148                           ;Main.c: 170: Lcd_Clear();
  2149  0233  3186  2690  3181   	fcall	_Lcd_Clear
  2150  0236  297A               	goto	l2151
  2151  0237                     __end_of_main:	
  2152                           
  2153                           	psect	text1
  2154  041F                     __ptext1:	
  2155 ;; *************** function _initmain *****************
  2156 ;; Defined at:
  2157 ;;		line 108 in file "Main.c"
  2158 ;; Parameters:    Size  Location     Type
  2159 ;;		None
  2160 ;; Auto vars:     Size  Location     Type
  2161 ;;		None
  2162 ;; Return value:  Size  Location     Type
  2163 ;;                  1    wreg      void 
  2164 ;; Registers used:
  2165 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2166 ;; Tracked objects:
  2167 ;;		On entry : 0/0
  2168 ;;		On exit  : 0/0
  2169 ;;		Unchanged: 0/0
  2170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2173 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2174 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2175 ;;Total ram usage:        3 bytes
  2176 ;; Hardware stack levels used:    1
  2177 ;; Hardware stack levels required when called:    6
  2178 ;; This function calls:
  2179 ;;		_I2C_Initialize
  2180 ;;		_I2C_PIN_Initialize
  2181 ;;		_Lcd_Clear
  2182 ;;		_Lcd_Init
  2183 ;;		_Lcd_Set_Cursor
  2184 ;;		_Lcd_Write_String
  2185 ;;		_internal_16
  2186 ;; This function is called by:
  2187 ;;		_main
  2188 ;; This function uses a non-reentrant model
  2189 ;;
  2190                           
  2191                           
  2192                           ;psect for function _initmain
  2193  041F                     _initmain:	
  2194                           
  2195                           ;Main.c: 109: internal_16();
  2196                           
  2197                           ;incstack = 0
  2198                           ; Regs used in _initmain: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2199  041F  3186  2687  3184   	fcall	_internal_16
  2200                           
  2201                           ;Main.c: 112: I2C_PIN_Initialize();
  2202  0422  3182  22FB  3184   	fcall	_I2C_PIN_Initialize
  2203                           
  2204                           ;Main.c: 113: I2C_Initialize();
  2205  0425  3185  25ED  3184   	fcall	_I2C_Initialize
  2206                           
  2207                           ;Main.c: 114: (INTCONbits.GIE = 1);
  2208  0428  178B               	bsf	11,7	;volatile
  2209                           
  2210                           ;Main.c: 115: (INTCONbits.PEIE = 1);
  2211  0429  170B               	bsf	11,6	;volatile
  2212                           
  2213                           ;Main.c: 118: TRISD = 0;
  2214  042A  0021               	movlb	1	; select bank1
  2215  042B  018F               	clrf	15	;volatile
  2216                           
  2217                           ;Main.c: 119: ANSELD = 0;
  2218  042C  0023               	movlb	3	; select bank3
  2219  042D  018F               	clrf	15	;volatile
  2220                           
  2221                           ;Main.c: 122: Lcd_Init();
  2222  042E  3183  234D  3184   	fcall	_Lcd_Init
  2223                           
  2224                           ;Main.c: 123: _delay((unsigned long)((1000)*(16000000/4000.0)));
  2225  0431  3015               	movlw	21
  2226  0432  0020               	movlb	0	; select bank0
  2227  0433  00BF               	movwf	??_initmain+2
  2228  0434  304B               	movlw	75
  2229  0435  00BE               	movwf	??_initmain+1
  2230  0436  30D1               	movlw	209
  2231  0437  00BD               	movwf	??_initmain
  2232  0438                     u1517:	
  2233  0438  0BBD               	decfsz	??_initmain,f
  2234  0439  2C38               	goto	u1517
  2235  043A  0BBE               	decfsz	??_initmain+1,f
  2236  043B  2C38               	goto	u1517
  2237  043C  0BBF               	decfsz	??_initmain+2,f
  2238  043D  2C38               	goto	u1517
  2239  043E  0000               	nop
  2240                           
  2241                           ;Main.c: 124: Lcd_Clear();
  2242  043F  3186  2690  3184   	fcall	_Lcd_Clear
  2243                           
  2244                           ;Main.c: 126: Lcd_Set_Cursor(1,1);
  2245  0442  0020               	movlb	0	; select bank0
  2246  0443  01A4               	clrf	Lcd_Set_Cursor@b
  2247  0444  0AA4               	incf	Lcd_Set_Cursor@b,f
  2248  0445  3001               	movlw	1
  2249  0446  3183  23DB  3184   	fcall	_Lcd_Set_Cursor
  2250                           
  2251                           ;Main.c: 128: Lcd_Write_String("Ready");
  2252  0449  3093               	movlw	low (STR_1| (0+32768))
  2253  044A  0020               	movlb	0	; select bank0
  2254  044B  00B8               	movwf	Lcd_Write_String@a
  2255  044C  3082               	movlw	high (STR_1| (0+32768))
  2256  044D  00B9               	movwf	Lcd_Write_String@a+1
  2257  044E  3185  25D1  3184   	fcall	_Lcd_Write_String
  2258                           
  2259                           ;Main.c: 129: _delay((unsigned long)((1000)*(16000000/4000.0)));
  2260  0451  3015               	movlw	21
  2261  0452  0020               	movlb	0	; select bank0
  2262  0453  00BF               	movwf	??_initmain+2
  2263  0454  304B               	movlw	75
  2264  0455  00BE               	movwf	??_initmain+1
  2265  0456  30D1               	movlw	209
  2266  0457  00BD               	movwf	??_initmain
  2267  0458                     u1527:	
  2268  0458  0BBD               	decfsz	??_initmain,f
  2269  0459  2C58               	goto	u1527
  2270  045A  0BBE               	decfsz	??_initmain+1,f
  2271  045B  2C58               	goto	u1527
  2272  045C  0BBF               	decfsz	??_initmain+2,f
  2273  045D  2C58               	goto	u1527
  2274  045E  0000               	nop
  2275                           
  2276                           ;Main.c: 131: Lcd_Clear();
  2277  045F  3186  2690         	fcall	_Lcd_Clear
  2278  0461  0008               	return
  2279  0462                     __end_of_initmain:	
  2280                           
  2281                           	psect	text2
  2282  0687                     __ptext2:	
  2283 ;; *************** function _internal_16 *****************
  2284 ;; Defined at:
  2285 ;;		line 56 in file "16F1717_Internal.c"
  2286 ;; Parameters:    Size  Location     Type
  2287 ;;		None
  2288 ;; Auto vars:     Size  Location     Type
  2289 ;;		None
  2290 ;; Return value:  Size  Location     Type
  2291 ;;                  1    wreg      void 
  2292 ;; Registers used:
  2293 ;;		None
  2294 ;; Tracked objects:
  2295 ;;		On entry : 0/0
  2296 ;;		On exit  : 0/0
  2297 ;;		Unchanged: 0/0
  2298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2303 ;;Total ram usage:        0 bytes
  2304 ;; Hardware stack levels used:    1
  2305 ;; Hardware stack levels required when called:    3
  2306 ;; This function calls:
  2307 ;;		Nothing
  2308 ;; This function is called by:
  2309 ;;		_initmain
  2310 ;; This function uses a non-reentrant model
  2311 ;;
  2312                           
  2313                           
  2314                           ;psect for function _internal_16
  2315  0687                     _internal_16:	
  2316                           
  2317                           ;16F1717_Internal.c: 58: SCS0 = 0;
  2318                           
  2319                           ;incstack = 0
  2320                           ; Regs used in _internal_16: []
  2321  0687  0021               	movlb	1	; select bank1
  2322  0688  1019               	bcf	25,0	;volatile
  2323                           
  2324                           ;16F1717_Internal.c: 59: SCS1 = 0;
  2325  0689  1099               	bcf	25,1	;volatile
  2326                           
  2327                           ;16F1717_Internal.c: 62: IRCF0 = 1;
  2328  068A  1599               	bsf	25,3	;volatile
  2329                           
  2330                           ;16F1717_Internal.c: 63: IRCF1 = 1;
  2331  068B  1619               	bsf	25,4	;volatile
  2332                           
  2333                           ;16F1717_Internal.c: 64: IRCF2 = 1;
  2334  068C  1699               	bsf	25,5	;volatile
  2335                           
  2336                           ;16F1717_Internal.c: 65: IRCF3 = 1;
  2337  068D  1719               	bsf	25,6	;volatile
  2338                           
  2339                           ;16F1717_Internal.c: 68: SPLLEN = 0;
  2340  068E  1399               	bcf	25,7	;volatile
  2341  068F  0008               	return
  2342  0690                     __end_of_internal_16:	
  2343                           
  2344                           	psect	text3
  2345  03DB                     __ptext3:	
  2346 ;; *************** function _Lcd_Set_Cursor *****************
  2347 ;; Defined at:
  2348 ;;		line 93 in file "LCD.c"
  2349 ;; Parameters:    Size  Location     Type
  2350 ;;  a               1    wreg     unsigned char 
  2351 ;;  b               1    4[BANK0 ] unsigned char 
  2352 ;; Auto vars:     Size  Location     Type
  2353 ;;  a               1    7[BANK0 ] unsigned char 
  2354 ;;  temp            1   10[BANK0 ] unsigned char 
  2355 ;;  y               1    9[BANK0 ] unsigned char 
  2356 ;;  z               1    8[BANK0 ] unsigned char 
  2357 ;; Return value:  Size  Location     Type
  2358 ;;                  1    wreg      void 
  2359 ;; Registers used:
  2360 ;;		wreg, status,2, status,0, pclath, cstack
  2361 ;; Tracked objects:
  2362 ;;		On entry : 0/0
  2363 ;;		On exit  : 0/0
  2364 ;;		Unchanged: 0/0
  2365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2366 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2367 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2368 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2369 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2370 ;;Total ram usage:        7 bytes
  2371 ;; Hardware stack levels used:    1
  2372 ;; Hardware stack levels required when called:    5
  2373 ;; This function calls:
  2374 ;;		_Lcd_Cmd
  2375 ;; This function is called by:
  2376 ;;		_initmain
  2377 ;;		_main
  2378 ;; This function uses a non-reentrant model
  2379 ;;
  2380                           
  2381                           
  2382                           ;psect for function _Lcd_Set_Cursor
  2383  03DB                     _Lcd_Set_Cursor:	
  2384                           
  2385                           ;incstack = 0
  2386                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2387                           ;Lcd_Set_Cursor@a stored from wreg
  2388  03DB  0020               	movlb	0	; select bank0
  2389  03DC  00A7               	movwf	Lcd_Set_Cursor@a
  2390                           
  2391                           ;LCD.c: 95: char temp,z,y;
  2392                           ;LCD.c: 96: if(a == 1)
  2393  03DD  0327               	decf	Lcd_Set_Cursor@a,w
  2394  03DE  1D03               	btfss	3,2
  2395  03DF  2BFD               	goto	l2047
  2396                           
  2397                           ;LCD.c: 97: {
  2398                           ;LCD.c: 98: temp = 0x80 + b - 1;
  2399  03E0  0824               	movf	Lcd_Set_Cursor@b,w
  2400  03E1  3E7F               	addlw	127
  2401  03E2  00A5               	movwf	??_Lcd_Set_Cursor
  2402  03E3  0825               	movf	??_Lcd_Set_Cursor,w
  2403  03E4  00AA               	movwf	Lcd_Set_Cursor@temp
  2404                           
  2405                           ;LCD.c: 99: z = temp>>4;
  2406  03E5  082A               	movf	Lcd_Set_Cursor@temp,w
  2407  03E6  00A5               	movwf	??_Lcd_Set_Cursor
  2408  03E7  3004               	movlw	4
  2409  03E8                     u1395:	
  2410  03E8  36A5               	lsrf	??_Lcd_Set_Cursor,f
  2411  03E9  0B89               	decfsz	9,f
  2412  03EA  2BE8               	goto	u1395
  2413  03EB  0825               	movf	??_Lcd_Set_Cursor,w
  2414  03EC  00A6               	movwf	??_Lcd_Set_Cursor+1
  2415  03ED  0826               	movf	??_Lcd_Set_Cursor+1,w
  2416  03EE  00A8               	movwf	Lcd_Set_Cursor@z
  2417                           
  2418                           ;LCD.c: 100: y = temp & 0x0F;
  2419  03EF  082A               	movf	Lcd_Set_Cursor@temp,w
  2420  03F0  390F               	andlw	15
  2421  03F1  00A5               	movwf	??_Lcd_Set_Cursor
  2422  03F2  0825               	movf	??_Lcd_Set_Cursor,w
  2423  03F3  00A9               	movwf	Lcd_Set_Cursor@y
  2424                           
  2425                           ;LCD.c: 101: Lcd_Cmd(z);
  2426  03F4  0828               	movf	Lcd_Set_Cursor@z,w
  2427  03F5  3186  264C  3183   	fcall	_Lcd_Cmd
  2428                           
  2429                           ;LCD.c: 102: Lcd_Cmd(y);
  2430  03F8  0020               	movlb	0	; select bank0
  2431  03F9  0829               	movf	Lcd_Set_Cursor@y,w
  2432  03FA  3186  264C         	fcall	_Lcd_Cmd
  2433                           
  2434                           ;LCD.c: 103: }
  2435  03FC  0008               	return
  2436  03FD                     l2047:	
  2437                           
  2438                           ;LCD.c: 104: else if(a == 2)
  2439  03FD  3002               	movlw	2
  2440  03FE  0020               	movlb	0	; select bank0
  2441  03FF  0627               	xorwf	Lcd_Set_Cursor@a,w
  2442  0400  1D03               	btfss	3,2
  2443  0401  0008               	return
  2444                           
  2445                           ;LCD.c: 105: {
  2446                           ;LCD.c: 106: temp = 0xC0 + b - 1;
  2447  0402  0824               	movf	Lcd_Set_Cursor@b,w
  2448  0403  3EBF               	addlw	191
  2449  0404  00A5               	movwf	??_Lcd_Set_Cursor
  2450  0405  0825               	movf	??_Lcd_Set_Cursor,w
  2451  0406  00AA               	movwf	Lcd_Set_Cursor@temp
  2452                           
  2453                           ;LCD.c: 107: z = temp>>4;
  2454  0407  082A               	movf	Lcd_Set_Cursor@temp,w
  2455  0408  00A5               	movwf	??_Lcd_Set_Cursor
  2456  0409  3004               	movlw	4
  2457  040A                     u1415:	
  2458  040A  36A5               	lsrf	??_Lcd_Set_Cursor,f
  2459  040B  0B89               	decfsz	9,f
  2460  040C  2C0A               	goto	u1415
  2461  040D  0825               	movf	??_Lcd_Set_Cursor,w
  2462  040E  00A6               	movwf	??_Lcd_Set_Cursor+1
  2463  040F  0826               	movf	??_Lcd_Set_Cursor+1,w
  2464  0410  00A8               	movwf	Lcd_Set_Cursor@z
  2465                           
  2466                           ;LCD.c: 108: y = temp & 0x0F;
  2467  0411  082A               	movf	Lcd_Set_Cursor@temp,w
  2468  0412  390F               	andlw	15
  2469  0413  00A5               	movwf	??_Lcd_Set_Cursor
  2470  0414  0825               	movf	??_Lcd_Set_Cursor,w
  2471  0415  00A9               	movwf	Lcd_Set_Cursor@y
  2472                           
  2473                           ;LCD.c: 109: Lcd_Cmd(z);
  2474  0416  0828               	movf	Lcd_Set_Cursor@z,w
  2475  0417  3186  264C  3183   	fcall	_Lcd_Cmd
  2476                           
  2477                           ;LCD.c: 110: Lcd_Cmd(y);
  2478  041A  0020               	movlb	0	; select bank0
  2479  041B  0829               	movf	Lcd_Set_Cursor@y,w
  2480  041C  3186  264C         	fcall	_Lcd_Cmd
  2481  041E  0008               	return
  2482  041F                     __end_of_Lcd_Set_Cursor:	
  2483                           
  2484                           	psect	text4
  2485  034D                     __ptext4:	
  2486 ;; *************** function _Lcd_Init *****************
  2487 ;; Defined at:
  2488 ;;		line 122 in file "LCD.c"
  2489 ;; Parameters:    Size  Location     Type
  2490 ;;		None
  2491 ;; Auto vars:     Size  Location     Type
  2492 ;;		None
  2493 ;; Return value:  Size  Location     Type
  2494 ;;                  1    wreg      void 
  2495 ;; Registers used:
  2496 ;;		wreg, status,2, status,0, pclath, cstack
  2497 ;; Tracked objects:
  2498 ;;		On entry : 0/0
  2499 ;;		On exit  : 0/0
  2500 ;;		Unchanged: 0/0
  2501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2504 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2505 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2506 ;;Total ram usage:        2 bytes
  2507 ;; Hardware stack levels used:    1
  2508 ;; Hardware stack levels required when called:    5
  2509 ;; This function calls:
  2510 ;;		_Lcd_Cmd
  2511 ;;		_Lcd_Port
  2512 ;; This function is called by:
  2513 ;;		_initmain
  2514 ;; This function uses a non-reentrant model
  2515 ;;
  2516                           
  2517                           
  2518                           ;psect for function _Lcd_Init
  2519  034D                     _Lcd_Init:	
  2520                           
  2521                           ;LCD.c: 124: Lcd_Port(0x00);
  2522                           
  2523                           ;incstack = 0
  2524                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2525  034D  3000               	movlw	0
  2526  034E  3186  2635  3183   	fcall	_Lcd_Port
  2527                           
  2528                           ;LCD.c: 125: _delay((unsigned long)((20)*(16000000/4000.0)));
  2529  0351  3068               	movlw	104
  2530  0352  0020               	movlb	0	; select bank0
  2531  0353  00A5               	movwf	??_Lcd_Init+1
  2532  0354  30E4               	movlw	228
  2533  0355  00A4               	movwf	??_Lcd_Init
  2534  0356                     u1537:	
  2535  0356  0BA4               	decfsz	??_Lcd_Init,f
  2536  0357  2B56               	goto	u1537
  2537  0358  0BA5               	decfsz	??_Lcd_Init+1,f
  2538  0359  2B56               	goto	u1537
  2539  035A  0000               	nop
  2540                           
  2541                           ;LCD.c: 126: Lcd_Cmd(0x03);
  2542  035B  3003               	movlw	3
  2543  035C  3186  264C  3183   	fcall	_Lcd_Cmd
  2544                           
  2545                           ;LCD.c: 127: _delay((unsigned long)((5)*(16000000/4000.0)));
  2546  035F  301A               	movlw	26
  2547  0360  0020               	movlb	0	; select bank0
  2548  0361  00A5               	movwf	??_Lcd_Init+1
  2549  0362  30F8               	movlw	248
  2550  0363  00A4               	movwf	??_Lcd_Init
  2551  0364                     u1547:	
  2552  0364  0BA4               	decfsz	??_Lcd_Init,f
  2553  0365  2B64               	goto	u1547
  2554  0366  0BA5               	decfsz	??_Lcd_Init+1,f
  2555  0367  2B64               	goto	u1547
  2556  0368  0000               	nop
  2557                           
  2558                           ;LCD.c: 128: Lcd_Cmd(0x03);
  2559  0369  3003               	movlw	3
  2560  036A  3186  264C  3183   	fcall	_Lcd_Cmd
  2561                           
  2562                           ;LCD.c: 129: _delay((unsigned long)((11)*(16000000/4000.0)));
  2563  036D  303A               	movlw	58
  2564  036E  0020               	movlb	0	; select bank0
  2565  036F  00A5               	movwf	??_Lcd_Init+1
  2566  0370  3023               	movlw	35
  2567  0371  00A4               	movwf	??_Lcd_Init
  2568  0372                     u1557:	
  2569  0372  0BA4               	decfsz	??_Lcd_Init,f
  2570  0373  2B72               	goto	u1557
  2571  0374  0BA5               	decfsz	??_Lcd_Init+1,f
  2572  0375  2B72               	goto	u1557
  2573                           
  2574                           ;LCD.c: 130: Lcd_Cmd(0x03);
  2575  0376  3003               	movlw	3
  2576  0377  3186  264C  3183   	fcall	_Lcd_Cmd
  2577                           
  2578                           ;LCD.c: 132: Lcd_Cmd(0x02);
  2579  037A  3002               	movlw	2
  2580  037B  3186  264C  3183   	fcall	_Lcd_Cmd
  2581                           
  2582                           ;LCD.c: 133: Lcd_Cmd(0x02);
  2583  037E  3002               	movlw	2
  2584  037F  3186  264C  3183   	fcall	_Lcd_Cmd
  2585                           
  2586                           ;LCD.c: 134: Lcd_Cmd(0x08);
  2587  0382  3008               	movlw	8
  2588  0383  3186  264C  3183   	fcall	_Lcd_Cmd
  2589                           
  2590                           ;LCD.c: 135: Lcd_Cmd(0x00);
  2591  0386  3000               	movlw	0
  2592  0387  3186  264C  3183   	fcall	_Lcd_Cmd
  2593                           
  2594                           ;LCD.c: 136: Lcd_Cmd(0x0C);
  2595  038A  300C               	movlw	12
  2596  038B  3186  264C  3183   	fcall	_Lcd_Cmd
  2597                           
  2598                           ;LCD.c: 137: Lcd_Cmd(0x00);
  2599  038E  3000               	movlw	0
  2600  038F  3186  264C  3183   	fcall	_Lcd_Cmd
  2601                           
  2602                           ;LCD.c: 138: Lcd_Cmd(0x06);
  2603  0392  3006               	movlw	6
  2604  0393  3186  264C         	fcall	_Lcd_Cmd
  2605  0395  0008               	return
  2606  0396                     __end_of_Lcd_Init:	
  2607                           
  2608                           	psect	text5
  2609  0690                     __ptext5:	
  2610 ;; *************** function _Lcd_Clear *****************
  2611 ;; Defined at:
  2612 ;;		line 79 in file "LCD.c"
  2613 ;; Parameters:    Size  Location     Type
  2614 ;;		None
  2615 ;; Auto vars:     Size  Location     Type
  2616 ;;		None
  2617 ;; Return value:  Size  Location     Type
  2618 ;;                  1    wreg      void 
  2619 ;; Registers used:
  2620 ;;		wreg, status,2, status,0, pclath, cstack
  2621 ;; Tracked objects:
  2622 ;;		On entry : 0/0
  2623 ;;		On exit  : 0/0
  2624 ;;		Unchanged: 0/0
  2625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2630 ;;Total ram usage:        0 bytes
  2631 ;; Hardware stack levels used:    1
  2632 ;; Hardware stack levels required when called:    5
  2633 ;; This function calls:
  2634 ;;		_Lcd_Cmd
  2635 ;; This function is called by:
  2636 ;;		_initmain
  2637 ;;		_main
  2638 ;; This function uses a non-reentrant model
  2639 ;;
  2640                           
  2641                           
  2642                           ;psect for function _Lcd_Clear
  2643  0690                     _Lcd_Clear:	
  2644                           
  2645                           ;LCD.c: 81: Lcd_Cmd(0);
  2646                           
  2647                           ;incstack = 0
  2648                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2649  0690  3000               	movlw	0
  2650  0691  3186  264C  3186   	fcall	_Lcd_Cmd
  2651                           
  2652                           ;LCD.c: 82: Lcd_Cmd(1);
  2653  0694  3001               	movlw	1
  2654  0695  3186  264C         	fcall	_Lcd_Cmd
  2655  0697  0008               	return
  2656  0698                     __end_of_Lcd_Clear:	
  2657                           
  2658                           	psect	text6
  2659  064C                     __ptext6:	
  2660 ;; *************** function _Lcd_Cmd *****************
  2661 ;; Defined at:
  2662 ;;		line 62 in file "LCD.c"
  2663 ;; Parameters:    Size  Location     Type
  2664 ;;  a               1    wreg     unsigned char 
  2665 ;; Auto vars:     Size  Location     Type
  2666 ;;  a               1    3[BANK0 ] unsigned char 
  2667 ;; Return value:  Size  Location     Type
  2668 ;;                  1    wreg      void 
  2669 ;; Registers used:
  2670 ;;		wreg, status,2, status,0, pclath, cstack
  2671 ;; Tracked objects:
  2672 ;;		On entry : 0/0
  2673 ;;		On exit  : 0/0
  2674 ;;		Unchanged: 0/0
  2675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2677 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2678 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2679 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2680 ;;Total ram usage:        3 bytes
  2681 ;; Hardware stack levels used:    1
  2682 ;; Hardware stack levels required when called:    4
  2683 ;; This function calls:
  2684 ;;		_Lcd_Port
  2685 ;; This function is called by:
  2686 ;;		_Lcd_Clear
  2687 ;;		_Lcd_Set_Cursor
  2688 ;;		_Lcd_Init
  2689 ;;		_Lcd_Shift_Right
  2690 ;;		_Lcd_Shift_Left
  2691 ;; This function uses a non-reentrant model
  2692 ;;
  2693                           
  2694                           
  2695                           ;psect for function _Lcd_Cmd
  2696  064C                     _Lcd_Cmd:	
  2697                           
  2698                           ;incstack = 0
  2699                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2700                           ;Lcd_Cmd@a stored from wreg
  2701  064C  0020               	movlb	0	; select bank0
  2702  064D  00A3               	movwf	Lcd_Cmd@a
  2703                           
  2704                           ;LCD.c: 64: RD2 = 0;
  2705  064E  110F               	bcf	15,2	;volatile
  2706                           
  2707                           ;LCD.c: 65: Lcd_Port(a);
  2708  064F  0823               	movf	Lcd_Cmd@a,w
  2709  0650  3186  2635  3186   	fcall	_Lcd_Port
  2710                           
  2711                           ;LCD.c: 66: RD3 = 1;
  2712  0653  0020               	movlb	0	; select bank0
  2713  0654  158F               	bsf	15,3	;volatile
  2714                           
  2715                           ;LCD.c: 67: _delay((unsigned long)((4)*(16000000/4000.0)));
  2716  0655  3015               	movlw	21
  2717  0656  00A2               	movwf	??_Lcd_Cmd+1
  2718  0657  30C6               	movlw	198
  2719  0658  00A1               	movwf	??_Lcd_Cmd
  2720  0659                     u1567:	
  2721  0659  0BA1               	decfsz	??_Lcd_Cmd,f
  2722  065A  2E59               	goto	u1567
  2723  065B  0BA2               	decfsz	??_Lcd_Cmd+1,f
  2724  065C  2E59               	goto	u1567
  2725  065D  0000               	nop
  2726                           
  2727                           ;LCD.c: 68: RD3 = 0;
  2728  065E  0020               	movlb	0	; select bank0
  2729  065F  118F               	bcf	15,3	;volatile
  2730  0660  0008               	return
  2731  0661                     __end_of_Lcd_Cmd:	
  2732                           
  2733                           	psect	text7
  2734  02FB                     __ptext7:	
  2735 ;; *************** function _I2C_PIN_Initialize *****************
  2736 ;; Defined at:
  2737 ;;		line 70 in file "Main.c"
  2738 ;; Parameters:    Size  Location     Type
  2739 ;;		None
  2740 ;; Auto vars:     Size  Location     Type
  2741 ;;  state           1    0[BANK0 ] unsigned char 
  2742 ;; Return value:  Size  Location     Type
  2743 ;;                  1    wreg      void 
  2744 ;; Registers used:
  2745 ;;		wreg, status,2, status,0
  2746 ;; Tracked objects:
  2747 ;;		On entry : 0/0
  2748 ;;		On exit  : 0/0
  2749 ;;		Unchanged: 0/0
  2750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2752 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2754 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2755 ;;Total ram usage:        1 bytes
  2756 ;; Hardware stack levels used:    1
  2757 ;; Hardware stack levels required when called:    3
  2758 ;; This function calls:
  2759 ;;		Nothing
  2760 ;; This function is called by:
  2761 ;;		_initmain
  2762 ;; This function uses a non-reentrant model
  2763 ;;
  2764                           
  2765                           
  2766                           ;psect for function _I2C_PIN_Initialize
  2767  02FB                     _I2C_PIN_Initialize:	
  2768                           
  2769                           ;Main.c: 72: LATB = 0x0;
  2770                           
  2771                           ;incstack = 0
  2772                           ; Regs used in _I2C_PIN_Initialize: [wreg+status,2+status,0]
  2773  02FB  0022               	movlb	2	; select bank2
  2774  02FC  018D               	clrf	13	;volatile
  2775                           
  2776                           ;Main.c: 73: WPUE = 0x8;
  2777  02FD  3008               	movlw	8
  2778  02FE  0024               	movlb	4	; select bank4
  2779  02FF  0090               	movwf	16	;volatile
  2780                           
  2781                           ;Main.c: 74: LATA = 0x0;
  2782  0300  0022               	movlb	2	; select bank2
  2783  0301  018C               	clrf	12	;volatile
  2784                           
  2785                           ;Main.c: 75: LATC = 0x40;
  2786  0302  3040               	movlw	64
  2787  0303  008E               	movwf	14	;volatile
  2788                           
  2789                           ;Main.c: 76: WPUA = 0xFF;
  2790  0304  30FF               	movlw	255
  2791  0305  0024               	movlb	4	; select bank4
  2792  0306  008C               	movwf	12	;volatile
  2793                           
  2794                           ;Main.c: 77: WPUB = 0xFF;
  2795  0307  30FF               	movlw	255
  2796  0308  008D               	movwf	13	;volatile
  2797                           
  2798                           ;Main.c: 78: WPUC = 0x8F;
  2799  0309  308F               	movlw	143
  2800  030A  008E               	movwf	14	;volatile
  2801                           
  2802                           ;Main.c: 79: ANSELA = 0x3F;
  2803  030B  303F               	movlw	63
  2804  030C  0023               	movlb	3	; select bank3
  2805  030D  008C               	movwf	12	;volatile
  2806                           
  2807                           ;Main.c: 80: ANSELB = 0x3F;
  2808  030E  303F               	movlw	63
  2809  030F  008D               	movwf	13	;volatile
  2810                           
  2811                           ;Main.c: 81: ANSELC = 0x84;
  2812  0310  3084               	movlw	132
  2813  0311  008E               	movwf	14	;volatile
  2814                           
  2815                           ;Main.c: 82: TRISE = 0x8;
  2816  0312  3008               	movlw	8
  2817  0313  0021               	movlb	1	; select bank1
  2818  0314  0090               	movwf	16	;volatile
  2819                           
  2820                           ;Main.c: 83: TRISB = 0xFF;
  2821  0315  30FF               	movlw	255
  2822  0316  008D               	movwf	13	;volatile
  2823                           
  2824                           ;Main.c: 84: TRISC = 0xB7;
  2825  0317  30B7               	movlw	183
  2826  0318  008E               	movwf	14	;volatile
  2827                           
  2828                           ;Main.c: 85: TRISA = 0xFF;
  2829  0319  30FF               	movlw	255
  2830  031A  008C               	movwf	12	;volatile
  2831                           
  2832                           ;Main.c: 87: OPTION_REGbits.nWPUEN = 0x1;
  2833  031B  1795               	bsf	21,7	;volatile
  2834                           
  2835                           ;Main.c: 90: INTCONbits.IOCIE = 0;
  2836  031C  118B               	bcf	11,3	;volatile
  2837                           
  2838                           ;Main.c: 91: bool state = GIE;
  2839  031D  3000               	movlw	0
  2840  031E  1B8B               	btfsc	11,7	;volatile
  2841  031F  3001               	movlw	1
  2842  0320  0020               	movlb	0	; select bank0
  2843  0321  00A0               	movwf	I2C_PIN_Initialize@state
  2844                           
  2845                           ;Main.c: 92: GIE = 0;
  2846  0322  138B               	bcf	11,7	;volatile
  2847                           
  2848                           ;Main.c: 93: PPSLOCK = 0x55;
  2849  0323  3055               	movlw	85
  2850  0324  003C               	movlb	28	; select bank28
  2851  0325  008F               	movwf	15	;volatile
  2852                           
  2853                           ;Main.c: 94: PPSLOCK = 0xAA;
  2854  0326  30AA               	movlw	170
  2855  0327  008F               	movwf	15	;volatile
  2856                           
  2857                           ;Main.c: 95: PPSLOCKbits.PPSLOCKED = 0x00;
  2858  0328  100F               	bcf	15,0	;volatile
  2859                           
  2860                           ;Main.c: 97: RC4PPSbits.RC4PPS = 0x0011;
  2861  0329  003D               	movlb	29	; select bank29
  2862  032A  0824               	movf	36,w	;volatile
  2863  032B  39E0               	andlw	-32
  2864  032C  3811               	iorlw	17
  2865  032D  00A4               	movwf	36	;volatile
  2866                           
  2867                           ;Main.c: 98: RC6PPSbits.RC6PPS = 0x0014;
  2868  032E  0826               	movf	38,w	;volatile
  2869  032F  39E0               	andlw	-32
  2870  0330  3814               	iorlw	20
  2871  0331  00A6               	movwf	38	;volatile
  2872                           
  2873                           ;Main.c: 99: SSPDATPPSbits.SSPDATPPS = 0x0014;
  2874  0332  003C               	movlb	28	; select bank28
  2875  0333  0821               	movf	33,w	;volatile
  2876  0334  39E0               	andlw	-32
  2877  0335  3814               	iorlw	20
  2878  0336  00A1               	movwf	33	;volatile
  2879                           
  2880                           ;Main.c: 100: SSPCLKPPSbits.SSPCLKPPS = 0x0015;
  2881  0337  0820               	movf	32,w	;volatile
  2882  0338  39E0               	andlw	-32
  2883  0339  3815               	iorlw	21
  2884  033A  00A0               	movwf	32	;volatile
  2885                           
  2886                           ;Main.c: 101: RC5PPSbits.RC5PPS = 0x0010;
  2887  033B  003D               	movlb	29	; select bank29
  2888  033C  0825               	movf	37,w	;volatile
  2889  033D  39E0               	andlw	-32
  2890  033E  3810               	iorlw	16
  2891  033F  00A5               	movwf	37	;volatile
  2892                           
  2893                           ;Main.c: 103: PPSLOCK = 0x55;
  2894  0340  3055               	movlw	85
  2895  0341  003C               	movlb	28	; select bank28
  2896  0342  008F               	movwf	15	;volatile
  2897                           
  2898                           ;Main.c: 104: PPSLOCK = 0xAA;
  2899  0343  30AA               	movlw	170
  2900  0344  008F               	movwf	15	;volatile
  2901                           
  2902                           ;Main.c: 105: PPSLOCKbits.PPSLOCKED = 0x01;
  2903  0345  140F               	bsf	15,0	;volatile
  2904                           
  2905                           ;Main.c: 106: GIE = state;
  2906  0346  0020               	movlb	0	; select bank0
  2907  0347  1C20               	btfss	I2C_PIN_Initialize@state,0
  2908  0348  2B4B               	goto	u1430
  2909  0349  178B               	bsf	11,7	;volatile
  2910  034A  0008               	return
  2911  034B                     u1430:	
  2912  034B  138B               	bcf	11,7	;volatile
  2913  034C  0008               	return
  2914  034D                     __end_of_I2C_PIN_Initialize:	
  2915                           
  2916                           	psect	text8
  2917  05ED                     __ptext8:	
  2918 ;; *************** function _I2C_Initialize *****************
  2919 ;; Defined at:
  2920 ;;		line 167 in file "I2C.c"
  2921 ;; Parameters:    Size  Location     Type
  2922 ;;		None
  2923 ;; Auto vars:     Size  Location     Type
  2924 ;;		None
  2925 ;; Return value:  Size  Location     Type
  2926 ;;                  1    wreg      void 
  2927 ;; Registers used:
  2928 ;;		wreg, status,2
  2929 ;; Tracked objects:
  2930 ;;		On entry : 0/0
  2931 ;;		On exit  : 0/0
  2932 ;;		Unchanged: 0/0
  2933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2936 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2937 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2938 ;;Total ram usage:        1 bytes
  2939 ;; Hardware stack levels used:    1
  2940 ;; Hardware stack levels required when called:    3
  2941 ;; This function calls:
  2942 ;;		Nothing
  2943 ;; This function is called by:
  2944 ;;		_initmain
  2945 ;; This function uses a non-reentrant model
  2946 ;;
  2947                           
  2948                           
  2949                           ;psect for function _I2C_Initialize
  2950  05ED                     _I2C_Initialize:	
  2951                           
  2952                           ;I2C.c: 169: i2c_object.pTrHead = i2c_tr_queue;
  2953                           
  2954                           ;incstack = 0
  2955                           ; Regs used in _I2C_Initialize: [wreg+status,2]
  2956  05ED  306A               	movlw	(low (_i2c_tr_queue| 0))& (0+255)
  2957  05EE  0020               	movlb	0	; select bank0
  2958  05EF  00A0               	movwf	??_I2C_Initialize
  2959  05F0  0820               	movf	??_I2C_Initialize,w
  2960  05F1  00CC               	movwf	low ((_i2c_object| 0+1))
  2961                           
  2962                           ;I2C.c: 170: i2c_object.pTrTail = i2c_tr_queue;
  2963  05F2  306A               	movlw	(low (_i2c_tr_queue| 0))& (0+255)
  2964  05F3  00A0               	movwf	??_I2C_Initialize
  2965  05F4  0820               	movf	??_I2C_Initialize,w
  2966  05F5  00CB               	movwf	_i2c_object
  2967                           
  2968                           ;I2C.c: 171: i2c_object.trStatus.s.empty = 1;
  2969  05F6  14CD               	bsf	_i2c_object+2,1
  2970                           
  2971                           ;I2C.c: 172: i2c_object.trStatus.s.full = 0;
  2972  05F7  104D               	bcf	_i2c_object+2,0
  2973                           
  2974                           ;I2C.c: 174: i2c_object.i2cErrors = 0;
  2975  05F8  01CF               	clrf	_i2c_object+4
  2976                           
  2977                           ;I2C.c: 177: SSP1STAT = 0x00;
  2978  05F9  0024               	movlb	4	; select bank4
  2979  05FA  0194               	clrf	20	;volatile
  2980                           
  2981                           ;I2C.c: 179: SSP1CON1 = 0x28;
  2982  05FB  3028               	movlw	40
  2983  05FC  0095               	movwf	21	;volatile
  2984                           
  2985                           ;I2C.c: 181: SSP1CON3 = 0x00;
  2986  05FD  0197               	clrf	23	;volatile
  2987                           
  2988                           ;I2C.c: 183: SSP1ADD = 0x12;
  2989  05FE  3012               	movlw	18
  2990  05FF  0092               	movwf	18	;volatile
  2991                           
  2992                           ;I2C.c: 187: PIR1bits.SSP1IF = 0;
  2993  0600  0020               	movlb	0	; select bank0
  2994  0601  1191               	bcf	17,3	;volatile
  2995                           
  2996                           ;I2C.c: 189: PIE1bits.SSP1IE = 1;
  2997  0602  0021               	movlb	1	; select bank1
  2998  0603  1591               	bsf	17,3	;volatile
  2999  0604  0008               	return
  3000  0605                     __end_of_I2C_Initialize:	
  3001                           
  3002                           	psect	text9
  3003  0661                     __ptext9:	
  3004 ;; *************** function _Lcd_Write_Integer *****************
  3005 ;; Defined at:
  3006 ;;		line 216 in file "LCD.c"
  3007 ;; Parameters:    Size  Location     Type
  3008 ;;  v               2   29[BANK0 ] int 
  3009 ;; Auto vars:     Size  Location     Type
  3010 ;;  buf             8   31[BANK0 ] unsigned char [8]
  3011 ;; Return value:  Size  Location     Type
  3012 ;;                  1    wreg      void 
  3013 ;; Registers used:
  3014 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3015 ;; Tracked objects:
  3016 ;;		On entry : 0/0
  3017 ;;		On exit  : 0/0
  3018 ;;		Unchanged: 0/0
  3019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3020 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3021 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3023 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3024 ;;Total ram usage:       10 bytes
  3025 ;; Hardware stack levels used:    1
  3026 ;; Hardware stack levels required when called:    6
  3027 ;; This function calls:
  3028 ;;		_Lcd_Write_String
  3029 ;;		_itoa
  3030 ;; This function is called by:
  3031 ;;		_main
  3032 ;; This function uses a non-reentrant model
  3033 ;;
  3034                           
  3035                           
  3036                           ;psect for function _Lcd_Write_Integer
  3037  0661                     _Lcd_Write_Integer:	
  3038                           
  3039                           ;LCD.c: 218: unsigned char buf[8];
  3040                           ;LCD.c: 220: Lcd_Write_String(itoa(buf, v, 10));
  3041                           
  3042                           ;incstack = 0
  3043                           ; Regs used in _Lcd_Write_Integer: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3044  0661  0020               	movlb	0	; select bank0
  3045  0662  083E               	movf	Lcd_Write_Integer@v+1,w
  3046  0663  00B2               	movwf	itoa@val+1
  3047  0664  083D               	movf	Lcd_Write_Integer@v,w
  3048  0665  00B1               	movwf	itoa@val
  3049  0666  300A               	movlw	10
  3050  0667  00B3               	movwf	itoa@base
  3051  0668  3000               	movlw	0
  3052  0669  00B4               	movwf	itoa@base+1
  3053  066A  303F               	movlw	(low (Lcd_Write_Integer@buf| 0))& (0+255)
  3054  066B  3185  258B  3186   	fcall	_itoa
  3055  066E  0020               	movlb	0	; select bank0
  3056  066F  00B8               	movwf	Lcd_Write_String@a
  3057  0670  3000               	movlw	0
  3058  0671  00B9               	movwf	Lcd_Write_String@a+1
  3059  0672  3185  25D1         	fcall	_Lcd_Write_String
  3060  0674  0008               	return
  3061  0675                     __end_of_Lcd_Write_Integer:	
  3062                           
  3063                           	psect	text10
  3064  058B                     __ptext10:	
  3065 ;; *************** function _itoa *****************
  3066 ;; Defined at:
  3067 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\itoa.c"
  3068 ;; Parameters:    Size  Location     Type
  3069 ;;  buf             1    wreg     PTR unsigned char 
  3070 ;;		 -> Lcd_Write_Integer@buf(8), 
  3071 ;;  val             2   17[BANK0 ] int 
  3072 ;;  base            2   19[BANK0 ] int 
  3073 ;; Auto vars:     Size  Location     Type
  3074 ;;  buf             1   23[BANK0 ] PTR unsigned char 
  3075 ;;		 -> Lcd_Write_Integer@buf(8), 
  3076 ;;  cp              1   22[BANK0 ] PTR unsigned char 
  3077 ;;		 -> Lcd_Write_Integer@buf(8), 
  3078 ;; Return value:  Size  Location     Type
  3079 ;;                  1    wreg      PTR unsigned char 
  3080 ;; Registers used:
  3081 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3082 ;; Tracked objects:
  3083 ;;		On entry : 0/0
  3084 ;;		On exit  : 0/0
  3085 ;;		Unchanged: 0/0
  3086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3087 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3088 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3089 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3090 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3091 ;;Total ram usage:        7 bytes
  3092 ;; Hardware stack levels used:    1
  3093 ;; Hardware stack levels required when called:    5
  3094 ;; This function calls:
  3095 ;;		_utoa
  3096 ;; This function is called by:
  3097 ;;		_Lcd_Write_Integer
  3098 ;; This function uses a non-reentrant model
  3099 ;;
  3100                           
  3101                           
  3102                           ;psect for function _itoa
  3103  058B                     _itoa:	
  3104                           
  3105                           ;incstack = 0
  3106                           ; Regs used in _itoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3107                           ;itoa@buf stored from wreg
  3108  058B  0020               	movlb	0	; select bank0
  3109  058C  00B7               	movwf	itoa@buf
  3110  058D  0837               	movf	itoa@buf,w
  3111  058E  00B5               	movwf	??_itoa
  3112  058F  0835               	movf	??_itoa,w
  3113  0590  00B6               	movwf	itoa@cp
  3114  0591  1FB2               	btfss	itoa@val+1,7
  3115  0592  2DA3               	goto	l1595
  3116  0593  302D               	movlw	45
  3117  0594  00B5               	movwf	??_itoa
  3118  0595  0837               	movf	itoa@buf,w
  3119  0596  0086               	movwf	6
  3120  0597  0187               	clrf	7
  3121  0598  0835               	movf	??_itoa,w
  3122  0599  0081               	movwf	1
  3123  059A  3001               	movlw	1
  3124  059B  00B5               	movwf	??_itoa
  3125  059C  0835               	movf	??_itoa,w
  3126  059D  07B7               	addwf	itoa@buf,f
  3127  059E  09B1               	comf	itoa@val,f
  3128  059F  09B2               	comf	itoa@val+1,f
  3129  05A0  0AB1               	incf	itoa@val,f
  3130  05A1  1903               	skipnz
  3131  05A2  0AB2               	incf	itoa@val+1,f
  3132  05A3                     l1595:	
  3133  05A3  0832               	movf	itoa@val+1,w
  3134  05A4  00A9               	movwf	utoa@val+1
  3135  05A5  0831               	movf	itoa@val,w
  3136  05A6  00A8               	movwf	utoa@val
  3137  05A7  0834               	movf	itoa@base+1,w
  3138  05A8  00AB               	movwf	utoa@base+1
  3139  05A9  0833               	movf	itoa@base,w
  3140  05AA  00AA               	movwf	utoa@base
  3141  05AB  0837               	movf	itoa@buf,w
  3142  05AC  3182  2299         	fcall	_utoa
  3143  05AE  0020               	movlb	0	; select bank0
  3144  05AF  0836               	movf	itoa@cp,w
  3145  05B0  0008               	return
  3146  05B1                     __end_of_itoa:	
  3147                           
  3148                           	psect	text11
  3149  0299                     __ptext11:	
  3150 ;; *************** function _utoa *****************
  3151 ;; Defined at:
  3152 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\itoa.c"
  3153 ;; Parameters:    Size  Location     Type
  3154 ;;  buf             1    wreg     PTR unsigned char 
  3155 ;;		 -> Lcd_Write_Integer@buf(8), 
  3156 ;;  val             2    8[BANK0 ] unsigned int 
  3157 ;;  base            2   10[BANK0 ] int 
  3158 ;; Auto vars:     Size  Location     Type
  3159 ;;  buf             1   16[BANK0 ] PTR unsigned char 
  3160 ;;		 -> Lcd_Write_Integer@buf(8), 
  3161 ;;  v               2   13[BANK0 ] unsigned int 
  3162 ;;  c               1   15[BANK0 ] unsigned char 
  3163 ;; Return value:  Size  Location     Type
  3164 ;;                  1    wreg      PTR unsigned char 
  3165 ;; Registers used:
  3166 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3167 ;; Tracked objects:
  3168 ;;		On entry : 0/0
  3169 ;;		On exit  : 0/0
  3170 ;;		Unchanged: 0/0
  3171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3172 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3173 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3174 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3175 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3176 ;;Total ram usage:        9 bytes
  3177 ;; Hardware stack levels used:    1
  3178 ;; Hardware stack levels required when called:    4
  3179 ;; This function calls:
  3180 ;;		___lwdiv
  3181 ;;		___lwmod
  3182 ;; This function is called by:
  3183 ;;		_itoa
  3184 ;; This function uses a non-reentrant model
  3185 ;;
  3186                           
  3187                           
  3188                           ;psect for function _utoa
  3189  0299                     _utoa:	
  3190                           
  3191                           ;incstack = 0
  3192                           ; Regs used in _utoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3193                           ;utoa@buf stored from wreg
  3194  0299  0020               	movlb	0	; select bank0
  3195  029A  00B0               	movwf	utoa@buf
  3196  029B  0829               	movf	utoa@val+1,w
  3197  029C  00AE               	movwf	utoa@v+1
  3198  029D  0828               	movf	utoa@val,w
  3199  029E  00AD               	movwf	utoa@v
  3200  029F                     l1515:	
  3201  029F  082B               	movf	utoa@base+1,w
  3202  02A0  00A1               	movwf	___lwdiv@divisor+1
  3203  02A1  082A               	movf	utoa@base,w
  3204  02A2  00A0               	movwf	___lwdiv@divisor
  3205  02A3  082E               	movf	utoa@v+1,w
  3206  02A4  00A3               	movwf	___lwdiv@dividend+1
  3207  02A5  082D               	movf	utoa@v,w
  3208  02A6  00A2               	movwf	___lwdiv@dividend
  3209  02A7  3184  24D5  3182   	fcall	___lwdiv
  3210  02AA  0020               	movlb	0	; select bank0
  3211  02AB  0821               	movf	?___lwdiv+1,w
  3212  02AC  00AE               	movwf	utoa@v+1
  3213  02AD  0820               	movf	?___lwdiv,w
  3214  02AE  00AD               	movwf	utoa@v
  3215  02AF  3001               	movlw	1
  3216  02B0  00AC               	movwf	??_utoa
  3217  02B1  082C               	movf	??_utoa,w
  3218  02B2  07B0               	addwf	utoa@buf,f
  3219  02B3  082D               	movf	utoa@v,w
  3220  02B4  042E               	iorwf	utoa@v+1,w
  3221  02B5  1D03               	btfss	3,2
  3222  02B6  2A9F               	goto	l1515
  3223  02B7  0830               	movf	utoa@buf,w
  3224  02B8  0086               	movwf	6
  3225  02B9  0187               	clrf	7
  3226  02BA  0181               	clrf	1
  3227  02BB  3001               	movlw	1
  3228  02BC  02B0               	subwf	utoa@buf,f
  3229  02BD                     l1525:	
  3230  02BD  082B               	movf	utoa@base+1,w
  3231  02BE  00A1               	movwf	___lwmod@divisor+1
  3232  02BF  082A               	movf	utoa@base,w
  3233  02C0  00A0               	movwf	___lwmod@divisor
  3234  02C1  0829               	movf	utoa@val+1,w
  3235  02C2  00A3               	movwf	___lwmod@dividend+1
  3236  02C3  0828               	movf	utoa@val,w
  3237  02C4  00A2               	movwf	___lwmod@dividend
  3238  02C5  3185  250A  3182   	fcall	___lwmod
  3239  02C8  0020               	movlb	0	; select bank0
  3240  02C9  0820               	movf	?___lwmod,w
  3241  02CA  00AC               	movwf	??_utoa
  3242  02CB  082C               	movf	??_utoa,w
  3243  02CC  00AF               	movwf	utoa@c
  3244  02CD  082B               	movf	utoa@base+1,w
  3245  02CE  00A1               	movwf	___lwdiv@divisor+1
  3246  02CF  082A               	movf	utoa@base,w
  3247  02D0  00A0               	movwf	___lwdiv@divisor
  3248  02D1  0829               	movf	utoa@val+1,w
  3249  02D2  00A3               	movwf	___lwdiv@dividend+1
  3250  02D3  0828               	movf	utoa@val,w
  3251  02D4  00A2               	movwf	___lwdiv@dividend
  3252  02D5  3184  24D5  3182   	fcall	___lwdiv
  3253  02D8  0020               	movlb	0	; select bank0
  3254  02D9  0821               	movf	?___lwdiv+1,w
  3255  02DA  00A9               	movwf	utoa@val+1
  3256  02DB  0820               	movf	?___lwdiv,w
  3257  02DC  00A8               	movwf	utoa@val
  3258  02DD  300A               	movlw	10
  3259  02DE  022F               	subwf	utoa@c,w
  3260  02DF  1C03               	skipc
  3261  02E0  2AE5               	goto	l700
  3262  02E1  3007               	movlw	7
  3263  02E2  00AC               	movwf	??_utoa
  3264  02E3  082C               	movf	??_utoa,w
  3265  02E4  07AF               	addwf	utoa@c,f
  3266  02E5                     l700:	
  3267  02E5  3030               	movlw	48
  3268  02E6  00AC               	movwf	??_utoa
  3269  02E7  082C               	movf	??_utoa,w
  3270  02E8  07AF               	addwf	utoa@c,f
  3271  02E9  082F               	movf	utoa@c,w
  3272  02EA  00AC               	movwf	??_utoa
  3273  02EB  0830               	movf	utoa@buf,w
  3274  02EC  0086               	movwf	6
  3275  02ED  0187               	clrf	7
  3276  02EE  082C               	movf	??_utoa,w
  3277  02EF  0081               	movwf	1
  3278  02F0  3001               	movlw	1
  3279  02F1  02B0               	subwf	utoa@buf,f
  3280  02F2  0828               	movf	utoa@val,w
  3281  02F3  0429               	iorwf	utoa@val+1,w
  3282  02F4  1D03               	btfss	3,2
  3283  02F5  2ABD               	goto	l1525
  3284                           
  3285                           ;	Return value of _utoa is never used
  3286  02F6  3001               	movlw	1
  3287  02F7  00AC               	movwf	??_utoa
  3288  02F8  082C               	movf	??_utoa,w
  3289  02F9  07B0               	addwf	utoa@buf,f
  3290  02FA  0008               	return
  3291  02FB                     __end_of_utoa:	
  3292                           
  3293                           	psect	text12
  3294  050A                     __ptext12:	
  3295 ;; *************** function ___lwmod *****************
  3296 ;; Defined at:
  3297 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwmod.c"
  3298 ;; Parameters:    Size  Location     Type
  3299 ;;  divisor         2    0[BANK0 ] unsigned int 
  3300 ;;  dividend        2    2[BANK0 ] unsigned int 
  3301 ;; Auto vars:     Size  Location     Type
  3302 ;;  counter         1    5[BANK0 ] unsigned char 
  3303 ;; Return value:  Size  Location     Type
  3304 ;;                  2    0[BANK0 ] unsigned int 
  3305 ;; Registers used:
  3306 ;;		wreg, status,2, status,0
  3307 ;; Tracked objects:
  3308 ;;		On entry : 0/0
  3309 ;;		On exit  : 0/0
  3310 ;;		Unchanged: 0/0
  3311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3312 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3313 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3314 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3315 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3316 ;;Total ram usage:        6 bytes
  3317 ;; Hardware stack levels used:    1
  3318 ;; Hardware stack levels required when called:    3
  3319 ;; This function calls:
  3320 ;;		Nothing
  3321 ;; This function is called by:
  3322 ;;		_utoa
  3323 ;; This function uses a non-reentrant model
  3324 ;;
  3325                           
  3326                           
  3327                           ;psect for function ___lwmod
  3328  050A                     ___lwmod:	
  3329                           
  3330                           ;incstack = 0
  3331                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3332  050A  0020               	movlb	0	; select bank0
  3333  050B  0820               	movf	___lwmod@divisor,w
  3334  050C  0421               	iorwf	___lwmod@divisor+1,w
  3335  050D  1903               	btfsc	3,2
  3336  050E  2D32               	goto	l1479
  3337  050F  01A5               	clrf	___lwmod@counter
  3338  0510  0AA5               	incf	___lwmod@counter,f
  3339  0511                     l1469:	
  3340  0511  1BA1               	btfsc	___lwmod@divisor+1,7
  3341  0512  2D1D               	goto	l1471
  3342  0513  3001               	movlw	1
  3343  0514                     u795:	
  3344  0514  35A0               	lslf	___lwmod@divisor,f
  3345  0515  0DA1               	rlf	___lwmod@divisor+1,f
  3346  0516  0B89               	decfsz	9,f
  3347  0517  2D14               	goto	u795
  3348  0518  3001               	movlw	1
  3349  0519  00A4               	movwf	??___lwmod
  3350  051A  0824               	movf	??___lwmod,w
  3351  051B  07A5               	addwf	___lwmod@counter,f
  3352  051C  2D11               	goto	l1469
  3353  051D                     l1471:	
  3354  051D  0821               	movf	___lwmod@divisor+1,w
  3355  051E  0223               	subwf	___lwmod@dividend+1,w
  3356  051F  1D03               	skipz
  3357  0520  2D23               	goto	u815
  3358  0521  0820               	movf	___lwmod@divisor,w
  3359  0522  0222               	subwf	___lwmod@dividend,w
  3360  0523                     u815:	
  3361  0523  1C03               	skipc
  3362  0524  2D29               	goto	l1475
  3363  0525  0820               	movf	___lwmod@divisor,w
  3364  0526  02A2               	subwf	___lwmod@dividend,f
  3365  0527  0821               	movf	___lwmod@divisor+1,w
  3366  0528  3BA3               	subwfb	___lwmod@dividend+1,f
  3367  0529                     l1475:	
  3368  0529  3001               	movlw	1
  3369  052A                     u825:	
  3370  052A  36A1               	lsrf	___lwmod@divisor+1,f
  3371  052B  0CA0               	rrf	___lwmod@divisor,f
  3372  052C  0B89               	decfsz	9,f
  3373  052D  2D2A               	goto	u825
  3374  052E  3001               	movlw	1
  3375  052F  02A5               	subwf	___lwmod@counter,f
  3376  0530  1D03               	btfss	3,2
  3377  0531  2D1D               	goto	l1471
  3378  0532                     l1479:	
  3379  0532  0823               	movf	___lwmod@dividend+1,w
  3380  0533  00A1               	movwf	?___lwmod+1
  3381  0534  0822               	movf	___lwmod@dividend,w
  3382  0535  00A0               	movwf	?___lwmod
  3383  0536  0008               	return
  3384  0537                     __end_of___lwmod:	
  3385                           
  3386                           	psect	text13
  3387  04D5                     __ptext13:	
  3388 ;; *************** function ___lwdiv *****************
  3389 ;; Defined at:
  3390 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c"
  3391 ;; Parameters:    Size  Location     Type
  3392 ;;  divisor         2    0[BANK0 ] unsigned int 
  3393 ;;  dividend        2    2[BANK0 ] unsigned int 
  3394 ;; Auto vars:     Size  Location     Type
  3395 ;;  quotient        2    5[BANK0 ] unsigned int 
  3396 ;;  counter         1    7[BANK0 ] unsigned char 
  3397 ;; Return value:  Size  Location     Type
  3398 ;;                  2    0[BANK0 ] unsigned int 
  3399 ;; Registers used:
  3400 ;;		wreg, status,2, status,0
  3401 ;; Tracked objects:
  3402 ;;		On entry : 0/0
  3403 ;;		On exit  : 0/0
  3404 ;;		Unchanged: 0/0
  3405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3406 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3407 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3408 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3409 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3410 ;;Total ram usage:        8 bytes
  3411 ;; Hardware stack levels used:    1
  3412 ;; Hardware stack levels required when called:    3
  3413 ;; This function calls:
  3414 ;;		Nothing
  3415 ;; This function is called by:
  3416 ;;		_utoa
  3417 ;; This function uses a non-reentrant model
  3418 ;;
  3419                           
  3420                           
  3421                           ;psect for function ___lwdiv
  3422  04D5                     ___lwdiv:	
  3423                           
  3424                           ;incstack = 0
  3425                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3426  04D5  0020               	movlb	0	; select bank0
  3427  04D6  01A5               	clrf	___lwdiv@quotient
  3428  04D7  01A6               	clrf	___lwdiv@quotient+1
  3429  04D8  0820               	movf	___lwdiv@divisor,w
  3430  04D9  0421               	iorwf	___lwdiv@divisor+1,w
  3431  04DA  1903               	btfsc	3,2
  3432  04DB  2D05               	goto	l1457
  3433  04DC  01A7               	clrf	___lwdiv@counter
  3434  04DD  0AA7               	incf	___lwdiv@counter,f
  3435  04DE                     l1445:	
  3436  04DE  1BA1               	btfsc	___lwdiv@divisor+1,7
  3437  04DF  2CEA               	goto	l1447
  3438  04E0  3001               	movlw	1
  3439  04E1                     u725:	
  3440  04E1  35A0               	lslf	___lwdiv@divisor,f
  3441  04E2  0DA1               	rlf	___lwdiv@divisor+1,f
  3442  04E3  0B89               	decfsz	9,f
  3443  04E4  2CE1               	goto	u725
  3444  04E5  3001               	movlw	1
  3445  04E6  00A4               	movwf	??___lwdiv
  3446  04E7  0824               	movf	??___lwdiv,w
  3447  04E8  07A7               	addwf	___lwdiv@counter,f
  3448  04E9  2CDE               	goto	l1445
  3449  04EA                     l1447:	
  3450  04EA  3001               	movlw	1
  3451  04EB                     u745:	
  3452  04EB  35A5               	lslf	___lwdiv@quotient,f
  3453  04EC  0DA6               	rlf	___lwdiv@quotient+1,f
  3454  04ED  0B89               	decfsz	9,f
  3455  04EE  2CEB               	goto	u745
  3456  04EF  0821               	movf	___lwdiv@divisor+1,w
  3457  04F0  0223               	subwf	___lwdiv@dividend+1,w
  3458  04F1  1D03               	skipz
  3459  04F2  2CF5               	goto	u755
  3460  04F3  0820               	movf	___lwdiv@divisor,w
  3461  04F4  0222               	subwf	___lwdiv@dividend,w
  3462  04F5                     u755:	
  3463  04F5  1C03               	skipc
  3464  04F6  2CFC               	goto	l1453
  3465  04F7  0820               	movf	___lwdiv@divisor,w
  3466  04F8  02A2               	subwf	___lwdiv@dividend,f
  3467  04F9  0821               	movf	___lwdiv@divisor+1,w
  3468  04FA  3BA3               	subwfb	___lwdiv@dividend+1,f
  3469  04FB  1425               	bsf	___lwdiv@quotient,0
  3470  04FC                     l1453:	
  3471  04FC  3001               	movlw	1
  3472  04FD                     u765:	
  3473  04FD  36A1               	lsrf	___lwdiv@divisor+1,f
  3474  04FE  0CA0               	rrf	___lwdiv@divisor,f
  3475  04FF  0B89               	decfsz	9,f
  3476  0500  2CFD               	goto	u765
  3477  0501  3001               	movlw	1
  3478  0502  02A7               	subwf	___lwdiv@counter,f
  3479  0503  1D03               	btfss	3,2
  3480  0504  2CEA               	goto	l1447
  3481  0505                     l1457:	
  3482  0505  0826               	movf	___lwdiv@quotient+1,w
  3483  0506  00A1               	movwf	?___lwdiv+1
  3484  0507  0825               	movf	___lwdiv@quotient,w
  3485  0508  00A0               	movwf	?___lwdiv
  3486  0509  0008               	return
  3487  050A                     __end_of___lwdiv:	
  3488                           
  3489                           	psect	text14
  3490  05D1                     __ptext14:	
  3491 ;; *************** function _Lcd_Write_String *****************
  3492 ;; Defined at:
  3493 ;;		line 173 in file "LCD.c"
  3494 ;; Parameters:    Size  Location     Type
  3495 ;;  a               2   24[BANK0 ] PTR const unsigned char 
  3496 ;;		 -> ftoa@buf(17), STR_5(11), STR_4(6), STR_3(7), 
  3497 ;;		 -> STR_2(17), STR_1(6), Lcd_Write_Integer@buf(8), 
  3498 ;; Auto vars:     Size  Location     Type
  3499 ;;  i               2   27[BANK0 ] int 
  3500 ;; Return value:  Size  Location     Type
  3501 ;;                  1    wreg      void 
  3502 ;; Registers used:
  3503 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3504 ;; Tracked objects:
  3505 ;;		On entry : 0/0
  3506 ;;		On exit  : 0/0
  3507 ;;		Unchanged: 0/0
  3508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3509 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3510 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3511 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3512 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3513 ;;Total ram usage:        5 bytes
  3514 ;; Hardware stack levels used:    1
  3515 ;; Hardware stack levels required when called:    5
  3516 ;; This function calls:
  3517 ;;		_Lcd_Write_Char
  3518 ;; This function is called by:
  3519 ;;		_Lcd_Write_Integer
  3520 ;;		_initmain
  3521 ;;		_main
  3522 ;;		_Lcd_Write_Float
  3523 ;; This function uses a non-reentrant model
  3524 ;;
  3525                           
  3526                           
  3527                           ;psect for function _Lcd_Write_String
  3528  05D1                     _Lcd_Write_String:	
  3529                           
  3530                           ;LCD.c: 175: int i;
  3531                           ;LCD.c: 176: for(i=0;a[i]!='\0';i++)
  3532                           
  3533                           ;incstack = 0
  3534                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3535  05D1  0020               	movlb	0	; select bank0
  3536  05D2  01BB               	clrf	Lcd_Write_String@i
  3537  05D3  01BC               	clrf	Lcd_Write_String@i+1
  3538  05D4                     l2073:	
  3539  05D4  0838               	movf	Lcd_Write_String@a,w
  3540  05D5  073B               	addwf	Lcd_Write_String@i,w
  3541  05D6  0084               	movwf	4
  3542  05D7  0839               	movf	Lcd_Write_String@a+1,w
  3543  05D8  3D3C               	addwfc	Lcd_Write_String@i+1,w
  3544  05D9  0085               	movwf	5
  3545  05DA  0012               	moviw fsr0++
  3546  05DB  1903               	btfsc	3,2
  3547  05DC  0008               	return
  3548                           
  3549                           ;LCD.c: 177: Lcd_Write_Char(a[i]);
  3550  05DD  0838               	movf	Lcd_Write_String@a,w
  3551  05DE  073B               	addwf	Lcd_Write_String@i,w
  3552  05DF  0084               	movwf	4
  3553  05E0  0839               	movf	Lcd_Write_String@a+1,w
  3554  05E1  3D3C               	addwfc	Lcd_Write_String@i+1,w
  3555  05E2  0085               	movwf	5
  3556  05E3  0800               	movf	0,w	;code access
  3557  05E4  3185  2537  3185   	fcall	_Lcd_Write_Char
  3558  05E7  3001               	movlw	1
  3559  05E8  0020               	movlb	0	; select bank0
  3560  05E9  07BB               	addwf	Lcd_Write_String@i,f
  3561  05EA  3000               	movlw	0
  3562  05EB  3DBC               	addwfc	Lcd_Write_String@i+1,f
  3563  05EC  2DD4               	goto	l2073
  3564  05ED                     __end_of_Lcd_Write_String:	
  3565                           
  3566                           	psect	text15
  3567  0537                     __ptext15:	
  3568 ;; *************** function _Lcd_Write_Char *****************
  3569 ;; Defined at:
  3570 ;;		line 149 in file "LCD.c"
  3571 ;; Parameters:    Size  Location     Type
  3572 ;;  a               1    wreg     unsigned char 
  3573 ;; Auto vars:     Size  Location     Type
  3574 ;;  a               1    4[BANK0 ] unsigned char 
  3575 ;;  y               1    3[BANK0 ] unsigned char 
  3576 ;;  temp            1    2[BANK0 ] unsigned char 
  3577 ;; Return value:  Size  Location     Type
  3578 ;;                  1    wreg      void 
  3579 ;; Registers used:
  3580 ;;		wreg, status,2, status,0, pclath, cstack
  3581 ;; Tracked objects:
  3582 ;;		On entry : 0/0
  3583 ;;		On exit  : 0/0
  3584 ;;		Unchanged: 0/0
  3585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3587 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3588 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3589 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3590 ;;Total ram usage:        4 bytes
  3591 ;; Hardware stack levels used:    1
  3592 ;; Hardware stack levels required when called:    4
  3593 ;; This function calls:
  3594 ;;		_Lcd_Port
  3595 ;; This function is called by:
  3596 ;;		_Lcd_Write_String
  3597 ;; This function uses a non-reentrant model
  3598 ;;
  3599                           
  3600                           
  3601                           ;psect for function _Lcd_Write_Char
  3602  0537                     _Lcd_Write_Char:	
  3603                           
  3604                           ;incstack = 0
  3605                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3606                           ;Lcd_Write_Char@a stored from wreg
  3607  0537  0020               	movlb	0	; select bank0
  3608  0538  00A4               	movwf	Lcd_Write_Char@a
  3609                           
  3610                           ;LCD.c: 151: char temp,y;
  3611                           ;LCD.c: 152: temp = a&0x0F;
  3612  0539  0824               	movf	Lcd_Write_Char@a,w
  3613  053A  390F               	andlw	15
  3614  053B  00A1               	movwf	??_Lcd_Write_Char
  3615  053C  0821               	movf	??_Lcd_Write_Char,w
  3616  053D  00A2               	movwf	Lcd_Write_Char@temp
  3617                           
  3618                           ;LCD.c: 153: y = a&0xF0;
  3619  053E  0824               	movf	Lcd_Write_Char@a,w
  3620  053F  39F0               	andlw	240
  3621  0540  00A1               	movwf	??_Lcd_Write_Char
  3622  0541  0821               	movf	??_Lcd_Write_Char,w
  3623  0542  00A3               	movwf	Lcd_Write_Char@y
  3624                           
  3625                           ;LCD.c: 154: RD2 = 1;
  3626  0543  150F               	bsf	15,2	;volatile
  3627                           
  3628                           ;LCD.c: 155: Lcd_Port(y>>4);
  3629  0544  0823               	movf	Lcd_Write_Char@y,w
  3630  0545  00A1               	movwf	??_Lcd_Write_Char
  3631  0546  3004               	movlw	4
  3632  0547                     u1375:	
  3633  0547  36A1               	lsrf	??_Lcd_Write_Char,f
  3634  0548  0B89               	decfsz	9,f
  3635  0549  2D47               	goto	u1375
  3636  054A  0821               	movf	??_Lcd_Write_Char,w
  3637  054B  3186  2635  3185   	fcall	_Lcd_Port
  3638                           
  3639                           ;LCD.c: 156: RD3 = 1;
  3640  054E  0020               	movlb	0	; select bank0
  3641  054F  158F               	bsf	15,3	;volatile
  3642                           
  3643                           ;LCD.c: 157: _delay((unsigned long)((40)*(16000000/4000000.0)));
  3644  0550  3035               	movlw	53
  3645  0551  00A1               	movwf	??_Lcd_Write_Char
  3646  0552                     u1577:	
  3647  0552  0BA1               	decfsz	??_Lcd_Write_Char,f
  3648  0553  2D52               	goto	u1577
  3649                           
  3650                           ;LCD.c: 158: RD3 = 0;
  3651  0554  0020               	movlb	0	; select bank0
  3652  0555  118F               	bcf	15,3	;volatile
  3653                           
  3654                           ;LCD.c: 159: Lcd_Port(temp);
  3655  0556  0822               	movf	Lcd_Write_Char@temp,w
  3656  0557  3186  2635  3185   	fcall	_Lcd_Port
  3657                           
  3658                           ;LCD.c: 160: RD3 = 1;
  3659  055A  0020               	movlb	0	; select bank0
  3660  055B  158F               	bsf	15,3	;volatile
  3661                           
  3662                           ;LCD.c: 161: _delay((unsigned long)((40)*(16000000/4000000.0)));
  3663  055C  3035               	movlw	53
  3664  055D  00A1               	movwf	??_Lcd_Write_Char
  3665  055E                     u1587:	
  3666  055E  0BA1               	decfsz	??_Lcd_Write_Char,f
  3667  055F  2D5E               	goto	u1587
  3668                           
  3669                           ;LCD.c: 162: RD3 = 0;
  3670  0560  0020               	movlb	0	; select bank0
  3671  0561  118F               	bcf	15,3	;volatile
  3672  0562  0008               	return
  3673  0563                     __end_of_Lcd_Write_Char:	
  3674                           
  3675                           	psect	text16
  3676  0635                     __ptext16:	
  3677 ;; *************** function _Lcd_Port *****************
  3678 ;; Defined at:
  3679 ;;		line 31 in file "LCD.c"
  3680 ;; Parameters:    Size  Location     Type
  3681 ;;  a               1    wreg     unsigned char 
  3682 ;; Auto vars:     Size  Location     Type
  3683 ;;  a               1    0[BANK0 ] unsigned char 
  3684 ;; Return value:  Size  Location     Type
  3685 ;;                  1    wreg      void 
  3686 ;; Registers used:
  3687 ;;		wreg
  3688 ;; Tracked objects:
  3689 ;;		On entry : 0/0
  3690 ;;		On exit  : 0/0
  3691 ;;		Unchanged: 0/0
  3692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3694 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3696 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3697 ;;Total ram usage:        1 bytes
  3698 ;; Hardware stack levels used:    1
  3699 ;; Hardware stack levels required when called:    3
  3700 ;; This function calls:
  3701 ;;		Nothing
  3702 ;; This function is called by:
  3703 ;;		_Lcd_Cmd
  3704 ;;		_Lcd_Init
  3705 ;;		_Lcd_Write_Char
  3706 ;; This function uses a non-reentrant model
  3707 ;;
  3708                           
  3709                           
  3710                           ;psect for function _Lcd_Port
  3711  0635                     _Lcd_Port:	
  3712                           
  3713                           ;incstack = 0
  3714                           ; Regs used in _Lcd_Port: [wreg]
  3715                           ;Lcd_Port@a stored from wreg
  3716  0635  0020               	movlb	0	; select bank0
  3717  0636  00A0               	movwf	Lcd_Port@a
  3718                           
  3719                           ;LCD.c: 33: if(a & 1)
  3720  0637  1C20               	btfss	Lcd_Port@a,0
  3721  0638  2E3B               	goto	l56
  3722                           
  3723                           ;LCD.c: 34: RD4 = 1;
  3724  0639  160F               	bsf	15,4	;volatile
  3725  063A  2E3C               	goto	l1991
  3726  063B                     l56:	
  3727                           
  3728                           ;LCD.c: 35: else
  3729                           ;LCD.c: 36: RD4 = 0;
  3730  063B  120F               	bcf	15,4	;volatile
  3731  063C                     l1991:	
  3732                           
  3733                           ;LCD.c: 38: if(a & 2)
  3734  063C  1CA0               	btfss	Lcd_Port@a,1
  3735  063D  2E40               	goto	l58
  3736                           
  3737                           ;LCD.c: 39: RD5 = 1;
  3738  063E  168F               	bsf	15,5	;volatile
  3739  063F  2E41               	goto	l1995
  3740  0640                     l58:	
  3741                           
  3742                           ;LCD.c: 40: else
  3743                           ;LCD.c: 41: RD5 = 0;
  3744  0640  128F               	bcf	15,5	;volatile
  3745  0641                     l1995:	
  3746                           
  3747                           ;LCD.c: 43: if(a & 4)
  3748  0641  1D20               	btfss	Lcd_Port@a,2
  3749  0642  2E45               	goto	l60
  3750                           
  3751                           ;LCD.c: 44: RD6 = 1;
  3752  0643  170F               	bsf	15,6	;volatile
  3753  0644  2E46               	goto	l1999
  3754  0645                     l60:	
  3755                           
  3756                           ;LCD.c: 45: else
  3757                           ;LCD.c: 46: RD6 = 0;
  3758  0645  130F               	bcf	15,6	;volatile
  3759  0646                     l1999:	
  3760                           
  3761                           ;LCD.c: 48: if(a & 8)
  3762  0646  1DA0               	btfss	Lcd_Port@a,3
  3763  0647  2E4A               	goto	l62
  3764                           
  3765                           ;LCD.c: 49: RD7 = 1;
  3766  0648  178F               	bsf	15,7	;volatile
  3767  0649  0008               	return
  3768  064A                     l62:	
  3769                           
  3770                           ;LCD.c: 50: else
  3771                           ;LCD.c: 51: RD7 = 0;
  3772  064A  138F               	bcf	15,7	;volatile
  3773  064B  0008               	return
  3774  064C                     __end_of_Lcd_Port:	
  3775                           
  3776                           	psect	text17
  3777  049E                     __ptext17:	
  3778 ;; *************** function _LC164_Write *****************
  3779 ;; Defined at:
  3780 ;;		line 55 in file "Main.c"
  3781 ;; Parameters:    Size  Location     Type
  3782 ;;  addrlo          1    wreg     unsigned char 
  3783 ;;  data            1    7[BANK0 ] unsigned char 
  3784 ;; Auto vars:     Size  Location     Type
  3785 ;;  addrlo          1   10[BANK0 ] unsigned char 
  3786 ;;  pack            2   11[BANK0 ] unsigned char [2]
  3787 ;;  status          1   13[BANK0 ] enum E6887
  3788 ;; Return value:  Size  Location     Type
  3789 ;;                  1    wreg      unsigned char 
  3790 ;; Registers used:
  3791 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3792 ;; Tracked objects:
  3793 ;;		On entry : 0/0
  3794 ;;		On exit  : 0/0
  3795 ;;		Unchanged: 0/0
  3796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3797 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3798 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3799 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3800 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3801 ;;Total ram usage:        7 bytes
  3802 ;; Hardware stack levels used:    1
  3803 ;; Hardware stack levels required when called:    4
  3804 ;; This function calls:
  3805 ;;		_I2C_MasterTRBInsert
  3806 ;;		_I2C_MasterWriteTRBBuild
  3807 ;; This function is called by:
  3808 ;;		_main
  3809 ;; This function uses a non-reentrant model
  3810 ;;
  3811                           
  3812                           
  3813                           ;psect for function _LC164_Write
  3814  049E                     _LC164_Write:	
  3815                           
  3816                           ;incstack = 0
  3817                           ; Regs used in _LC164_Write: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3818                           ;LC164_Write@addrlo stored from wreg
  3819  049E  0020               	movlb	0	; select bank0
  3820  049F  00AA               	movwf	LC164_Write@addrlo
  3821                           
  3822                           ;Main.c: 57: I2C_MESSAGE_STATUS status = I2C_MESSAGE_PENDING;
  3823  04A0  3002               	movlw	2
  3824  04A1  00A8               	movwf	??_LC164_Write
  3825  04A2  0828               	movf	??_LC164_Write,w
  3826  04A3  00AD               	movwf	LC164_Write@status
  3827                           
  3828                           ;Main.c: 58: static I2C_TRANSACTION_REQUEST_BLOCK trb[2];
  3829                           ;Main.c: 59: uint8_t pack[2];
  3830                           ;Main.c: 60: pack[0] = addrlo;
  3831  04A4  082A               	movf	LC164_Write@addrlo,w
  3832  04A5  00A8               	movwf	??_LC164_Write
  3833  04A6  0828               	movf	??_LC164_Write,w
  3834  04A7  00AB               	movwf	LC164_Write@pack
  3835                           
  3836                           ;Main.c: 61: pack[1] = data;
  3837  04A8  0827               	movf	LC164_Write@data,w
  3838  04A9  00A8               	movwf	??_LC164_Write
  3839  04AA  0828               	movf	??_LC164_Write,w
  3840  04AB  00AC               	movwf	LC164_Write@pack+1
  3841                           
  3842                           ;Main.c: 62: I2C_MasterWriteTRBBuild(&trb[0], pack, 2, 0x50);
  3843  04AC  302B               	movlw	(low (LC164_Write@pack| 0))& (0+255)
  3844  04AD  00A8               	movwf	??_LC164_Write
  3845  04AE  0828               	movf	??_LC164_Write,w
  3846  04AF  00A0               	movwf	I2C_MasterWriteTRBBuild@pdata
  3847  04B0  3002               	movlw	2
  3848  04B1  00A9               	movwf	??_LC164_Write+1
  3849  04B2  0829               	movf	??_LC164_Write+1,w
  3850  04B3  00A1               	movwf	I2C_MasterWriteTRBBuild@length
  3851  04B4  3050               	movlw	80
  3852  04B5  00A2               	movwf	I2C_MasterWriteTRBBuild@address
  3853  04B6  3000               	movlw	0
  3854  04B7  00A3               	movwf	I2C_MasterWriteTRBBuild@address+1
  3855  04B8  305A               	movlw	(low (LC164_Write@trb| 0))& (0+255)
  3856  04B9  3185  25B1  3184   	fcall	_I2C_MasterWriteTRBBuild
  3857                           
  3858                           ;Main.c: 63: I2C_MasterTRBInsert(1, &trb[0], &status);
  3859  04BC  305A               	movlw	(low (LC164_Write@trb| 0))& (0+255)
  3860  04BD  0020               	movlb	0	; select bank0
  3861  04BE  00A8               	movwf	??_LC164_Write
  3862  04BF  0828               	movf	??_LC164_Write,w
  3863  04C0  00A0               	movwf	I2C_MasterTRBInsert@ptrb_list
  3864  04C1  302D               	movlw	(low (LC164_Write@status| 0))& (0+255)
  3865  04C2  00A9               	movwf	??_LC164_Write+1
  3866  04C3  0829               	movf	??_LC164_Write+1,w
  3867  04C4  00A1               	movwf	I2C_MasterTRBInsert@pflag
  3868  04C5  3001               	movlw	1
  3869  04C6  3183  2396  3184   	fcall	_I2C_MasterTRBInsert
  3870  04C9                     l1717:	
  3871                           ;Main.c: 65: while(status == I2C_MESSAGE_PENDING);
  3872                           
  3873  04C9  3002               	movlw	2
  3874  04CA  0020               	movlb	0	; select bank0
  3875  04CB  062D               	xorwf	LC164_Write@status,w
  3876  04CC  1903               	btfsc	3,2
  3877  04CD  2CC9               	goto	l1717
  3878                           
  3879                           ;Main.c: 67: return (status == I2C_MESSAGE_COMPLETE);
  3880  04CE  082D               	movf	LC164_Write@status,w
  3881  04CF  1D03               	btfss	3,2
  3882  04D0  2CD3               	goto	u1070
  3883  04D1  3001               	movlw	1
  3884  04D2  0008               	return
  3885  04D3                     u1070:	
  3886  04D3  3000               	movlw	0
  3887  04D4  0008               	return
  3888  04D5                     __end_of_LC164_Write:	
  3889                           
  3890                           	psect	text18
  3891  0462                     __ptext18:	
  3892 ;; *************** function _LC164_Read *****************
  3893 ;; Defined at:
  3894 ;;		line 41 in file "Main.c"
  3895 ;; Parameters:    Size  Location     Type
  3896 ;;  addrlo          1    wreg     unsigned char 
  3897 ;;  pData           1    7[BANK0 ] PTR unsigned char 
  3898 ;;		 -> main@temp(1), 
  3899 ;; Auto vars:     Size  Location     Type
  3900 ;;  addrlo          1   10[BANK0 ] unsigned char 
  3901 ;;  status          1   11[BANK0 ] enum E6887
  3902 ;; Return value:  Size  Location     Type
  3903 ;;                  1    wreg      unsigned char 
  3904 ;; Registers used:
  3905 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3906 ;; Tracked objects:
  3907 ;;		On entry : 0/0
  3908 ;;		On exit  : 0/0
  3909 ;;		Unchanged: 0/0
  3910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3911 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3912 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3913 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3914 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3915 ;;Total ram usage:        5 bytes
  3916 ;; Hardware stack levels used:    1
  3917 ;; Hardware stack levels required when called:    4
  3918 ;; This function calls:
  3919 ;;		_I2C_MasterReadTRBBuild
  3920 ;;		_I2C_MasterTRBInsert
  3921 ;;		_I2C_MasterWriteTRBBuild
  3922 ;; This function is called by:
  3923 ;;		_main
  3924 ;; This function uses a non-reentrant model
  3925 ;;
  3926                           
  3927                           
  3928                           ;psect for function _LC164_Read
  3929  0462                     _LC164_Read:	
  3930                           
  3931                           ;incstack = 0
  3932                           ; Regs used in _LC164_Read: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3933                           ;LC164_Read@addrlo stored from wreg
  3934  0462  0020               	movlb	0	; select bank0
  3935  0463  00AA               	movwf	LC164_Read@addrlo
  3936                           
  3937                           ;Main.c: 43: I2C_MESSAGE_STATUS status = I2C_MESSAGE_PENDING;
  3938  0464  3002               	movlw	2
  3939  0465  00A8               	movwf	??_LC164_Read
  3940  0466  0828               	movf	??_LC164_Read,w
  3941  0467  00AB               	movwf	LC164_Read@status
  3942                           
  3943                           ;Main.c: 44: static I2C_TRANSACTION_REQUEST_BLOCK trb[2];
  3944                           ;Main.c: 46: I2C_MasterWriteTRBBuild(&trb[0], &addrlo, 1, 0x50);
  3945  0468  302A               	movlw	(low (LC164_Read@addrlo| 0))& (0+255)
  3946  0469  00A8               	movwf	??_LC164_Read
  3947  046A  0828               	movf	??_LC164_Read,w
  3948  046B  00A0               	movwf	I2C_MasterWriteTRBBuild@pdata
  3949  046C  01A1               	clrf	I2C_MasterWriteTRBBuild@length
  3950  046D  0AA1               	incf	I2C_MasterWriteTRBBuild@length,f
  3951  046E  3050               	movlw	80
  3952  046F  00A2               	movwf	I2C_MasterWriteTRBBuild@address
  3953  0470  3000               	movlw	0
  3954  0471  00A3               	movwf	I2C_MasterWriteTRBBuild@address+1
  3955  0472  3052               	movlw	(low (LC164_Read@trb| 0))& (0+255)
  3956  0473  3185  25B1  3184   	fcall	_I2C_MasterWriteTRBBuild
  3957                           
  3958                           ;Main.c: 47: I2C_MasterReadTRBBuild(&trb[1], pData, 1, 0x50);
  3959  0476  0020               	movlb	0	; select bank0
  3960  0477  0827               	movf	LC164_Read@pData,w
  3961  0478  00A8               	movwf	??_LC164_Read
  3962  0479  0828               	movf	??_LC164_Read,w
  3963  047A  00A0               	movwf	I2C_MasterReadTRBBuild@pdata
  3964  047B  01A1               	clrf	I2C_MasterReadTRBBuild@length
  3965  047C  0AA1               	incf	I2C_MasterReadTRBBuild@length,f
  3966  047D  3050               	movlw	80
  3967  047E  00A2               	movwf	I2C_MasterReadTRBBuild@address
  3968  047F  3000               	movlw	0
  3969  0480  00A3               	movwf	I2C_MasterReadTRBBuild@address+1
  3970  0481  3056               	movlw	(low ((LC164_Read@trb| 0+4)))& (0+255)
  3971  0482  3185  2563  3184   	fcall	_I2C_MasterReadTRBBuild
  3972                           
  3973                           ;Main.c: 48: I2C_MasterTRBInsert(2, &trb[0], &status);
  3974  0485  3052               	movlw	(low (LC164_Read@trb| 0))& (0+255)
  3975  0486  0020               	movlb	0	; select bank0
  3976  0487  00A8               	movwf	??_LC164_Read
  3977  0488  0828               	movf	??_LC164_Read,w
  3978  0489  00A0               	movwf	I2C_MasterTRBInsert@ptrb_list
  3979  048A  302B               	movlw	(low (LC164_Read@status| 0))& (0+255)
  3980  048B  00A9               	movwf	??_LC164_Read+1
  3981  048C  0829               	movf	??_LC164_Read+1,w
  3982  048D  00A1               	movwf	I2C_MasterTRBInsert@pflag
  3983  048E  3002               	movlw	2
  3984  048F  3183  2396  3184   	fcall	_I2C_MasterTRBInsert
  3985  0492                     l1705:	
  3986                           ;Main.c: 50: while(status == I2C_MESSAGE_PENDING);
  3987                           
  3988  0492  3002               	movlw	2
  3989  0493  0020               	movlb	0	; select bank0
  3990  0494  062B               	xorwf	LC164_Read@status,w
  3991  0495  1903               	btfsc	3,2
  3992  0496  2C92               	goto	l1705
  3993                           
  3994                           ;Main.c: 52: return (status == I2C_MESSAGE_COMPLETE);
  3995  0497  082B               	movf	LC164_Read@status,w
  3996  0498  1D03               	btfss	3,2
  3997  0499  2C9C               	goto	u1040
  3998  049A  3001               	movlw	1
  3999  049B  0008               	return
  4000  049C                     u1040:	
  4001  049C  3000               	movlw	0
  4002  049D  0008               	return
  4003  049E                     __end_of_LC164_Read:	
  4004                           
  4005                           	psect	text19
  4006  05B1                     __ptext19:	
  4007 ;; *************** function _I2C_MasterWriteTRBBuild *****************
  4008 ;; Defined at:
  4009 ;;		line 676 in file "I2C.c"
  4010 ;; Parameters:    Size  Location     Type
  4011 ;;  ptrb            1    wreg     PTR struct .
  4012 ;;		 -> I2C_MasterWrite@trBlock(4), LC164_Write@trb(8), LC164_Read@trb(8), 
  4013 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
  4014 ;;		 -> LC164_Write@pack(2), LC164_Read@addrlo(1), 
  4015 ;;  length          1    1[BANK0 ] unsigned char 
  4016 ;;  address         2    2[BANK0 ] unsigned int 
  4017 ;; Auto vars:     Size  Location     Type
  4018 ;;  ptrb            1    6[BANK0 ] PTR struct .
  4019 ;;		 -> I2C_MasterWrite@trBlock(4), LC164_Write@trb(8), LC164_Read@trb(8), 
  4020 ;; Return value:  Size  Location     Type
  4021 ;;                  1    wreg      void 
  4022 ;; Registers used:
  4023 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4024 ;; Tracked objects:
  4025 ;;		On entry : 0/0
  4026 ;;		On exit  : 0/0
  4027 ;;		Unchanged: 0/0
  4028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4029 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4030 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4031 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4032 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4033 ;;Total ram usage:        7 bytes
  4034 ;; Hardware stack levels used:    1
  4035 ;; Hardware stack levels required when called:    3
  4036 ;; This function calls:
  4037 ;;		Nothing
  4038 ;; This function is called by:
  4039 ;;		_LC164_Read
  4040 ;;		_LC164_Write
  4041 ;;		_I2C_MasterWrite
  4042 ;; This function uses a non-reentrant model
  4043 ;;
  4044                           
  4045                           
  4046                           ;psect for function _I2C_MasterWriteTRBBuild
  4047  05B1                     _I2C_MasterWriteTRBBuild:	
  4048                           
  4049                           ;incstack = 0
  4050                           ; Regs used in _I2C_MasterWriteTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
  4051                           ;I2C_MasterWriteTRBBuild@ptrb stored from wreg
  4052  05B1  0020               	movlb	0	; select bank0
  4053  05B2  00A6               	movwf	I2C_MasterWriteTRBBuild@ptrb
  4054                           
  4055                           ;I2C.c: 682: ptrb->address = address << 1;
  4056  05B3  0823               	movf	I2C_MasterWriteTRBBuild@address+1,w
  4057  05B4  00A5               	movwf	??_I2C_MasterWriteTRBBuild+1
  4058  05B5  0822               	movf	I2C_MasterWriteTRBBuild@address,w
  4059  05B6  00A4               	movwf	??_I2C_MasterWriteTRBBuild
  4060  05B7  35A4               	lslf	??_I2C_MasterWriteTRBBuild,f
  4061  05B8  0DA5               	rlf	??_I2C_MasterWriteTRBBuild+1,f
  4062  05B9  0826               	movf	I2C_MasterWriteTRBBuild@ptrb,w
  4063  05BA  0086               	movwf	6
  4064  05BB  0187               	clrf	7
  4065  05BC  0824               	movf	??_I2C_MasterWriteTRBBuild,w
  4066  05BD  3FC0               	movwi [0]fsr1
  4067  05BE  0825               	movf	??_I2C_MasterWriteTRBBuild+1,w
  4068  05BF  3FC1               	movwi [1]fsr1
  4069                           
  4070                           ;I2C.c: 683: ptrb->length = length;
  4071  05C0  0821               	movf	I2C_MasterWriteTRBBuild@length,w
  4072  05C1  00A4               	movwf	??_I2C_MasterWriteTRBBuild
  4073  05C2  0826               	movf	I2C_MasterWriteTRBBuild@ptrb,w
  4074  05C3  3E02               	addlw	2
  4075  05C4  0086               	movwf	6
  4076  05C5  0187               	clrf	7
  4077  05C6  0824               	movf	??_I2C_MasterWriteTRBBuild,w
  4078  05C7  0081               	movwf	1
  4079                           
  4080                           ;I2C.c: 684: ptrb->pbuffer = pdata;
  4081  05C8  0820               	movf	I2C_MasterWriteTRBBuild@pdata,w
  4082  05C9  00A4               	movwf	??_I2C_MasterWriteTRBBuild
  4083  05CA  0826               	movf	I2C_MasterWriteTRBBuild@ptrb,w
  4084  05CB  3E03               	addlw	3
  4085  05CC  0086               	movwf	6
  4086  05CD  0187               	clrf	7
  4087  05CE  0824               	movf	??_I2C_MasterWriteTRBBuild,w
  4088  05CF  0081               	movwf	1
  4089  05D0  0008               	return
  4090  05D1                     __end_of_I2C_MasterWriteTRBBuild:	
  4091                           
  4092                           	psect	text20
  4093  0396                     __ptext20:	
  4094 ;; *************** function _I2C_MasterTRBInsert *****************
  4095 ;; Defined at:
  4096 ;;		line 610 in file "I2C.c"
  4097 ;; Parameters:    Size  Location     Type
  4098 ;;  count           1    wreg     unsigned char 
  4099 ;;  ptrb_list       1    0[BANK0 ] PTR struct .
  4100 ;;		 -> I2C_MasterRead@trBlock(4), I2C_MasterWrite@trBlock(4), LC164_Write@trb(8), LC164_Read@trb(8), 
  4101 ;;  pflag           1    1[BANK0 ] PTR enum E6868
  4102 ;;		 -> LC164_Write@status(1), LC164_Read@status(1), 
  4103 ;; Auto vars:     Size  Location     Type
  4104 ;;  count           1    3[BANK0 ] unsigned char 
  4105 ;; Return value:  Size  Location     Type
  4106 ;;                  1    wreg      void 
  4107 ;; Registers used:
  4108 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4109 ;; Tracked objects:
  4110 ;;		On entry : 0/0
  4111 ;;		On exit  : 0/0
  4112 ;;		Unchanged: 0/0
  4113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4114 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4115 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4116 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4117 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4118 ;;Total ram usage:        4 bytes
  4119 ;; Hardware stack levels used:    1
  4120 ;; Hardware stack levels required when called:    3
  4121 ;; This function calls:
  4122 ;;		Nothing
  4123 ;; This function is called by:
  4124 ;;		_LC164_Read
  4125 ;;		_LC164_Write
  4126 ;;		_I2C_MasterWrite
  4127 ;;		_I2C_MasterRead
  4128 ;; This function uses a non-reentrant model
  4129 ;;
  4130                           
  4131                           
  4132                           ;psect for function _I2C_MasterTRBInsert
  4133  0396                     _I2C_MasterTRBInsert:	
  4134                           
  4135                           ;incstack = 0
  4136                           ; Regs used in _I2C_MasterTRBInsert: [wreg+fsr1l+fsr1h+status,2+status,0]
  4137                           ;I2C_MasterTRBInsert@count stored from wreg
  4138  0396  0020               	movlb	0	; select bank0
  4139  0397  00A3               	movwf	I2C_MasterTRBInsert@count
  4140                           
  4141                           ;I2C.c: 617: if (i2c_object.trStatus.s.full != 1)
  4142  0398  184D               	btfsc	_i2c_object+2,0
  4143  0399  2BCA               	goto	l1619
  4144                           
  4145                           ;I2C.c: 618: {
  4146                           ;I2C.c: 619: *pflag = I2C_MESSAGE_PENDING;
  4147  039A  3002               	movlw	2
  4148  039B  00A2               	movwf	??_I2C_MasterTRBInsert
  4149  039C  0821               	movf	I2C_MasterTRBInsert@pflag,w
  4150  039D  0086               	movwf	6
  4151  039E  0187               	clrf	7
  4152  039F  0822               	movf	??_I2C_MasterTRBInsert,w
  4153  03A0  0081               	movwf	1
  4154                           
  4155                           ;I2C.c: 621: i2c_object.pTrTail->ptrb_list = ptrb_list;
  4156  03A1  0820               	movf	I2C_MasterTRBInsert@ptrb_list,w
  4157  03A2  00A2               	movwf	??_I2C_MasterTRBInsert
  4158  03A3  0A4B               	incf	_i2c_object,w
  4159  03A4  0086               	movwf	6
  4160  03A5  0187               	clrf	7
  4161  03A6  0822               	movf	??_I2C_MasterTRBInsert,w
  4162  03A7  0081               	movwf	1
  4163                           
  4164                           ;I2C.c: 622: i2c_object.pTrTail->count = count;
  4165  03A8  0823               	movf	I2C_MasterTRBInsert@count,w
  4166  03A9  00A2               	movwf	??_I2C_MasterTRBInsert
  4167  03AA  084B               	movf	_i2c_object,w
  4168  03AB  0086               	movwf	6
  4169  03AC  0187               	clrf	7
  4170  03AD  0822               	movf	??_I2C_MasterTRBInsert,w
  4171  03AE  0081               	movwf	1
  4172                           
  4173                           ;I2C.c: 623: i2c_object.pTrTail->pTrFlag = pflag;
  4174  03AF  0821               	movf	I2C_MasterTRBInsert@pflag,w
  4175  03B0  00A2               	movwf	??_I2C_MasterTRBInsert
  4176  03B1  084B               	movf	_i2c_object,w
  4177  03B2  3E02               	addlw	2
  4178  03B3  0086               	movwf	6
  4179  03B4  0187               	clrf	7
  4180  03B5  0822               	movf	??_I2C_MasterTRBInsert,w
  4181  03B6  0081               	movwf	1
  4182                           
  4183                           ;I2C.c: 624: i2c_object.pTrTail++;
  4184  03B7  3003               	movlw	3
  4185  03B8  00A2               	movwf	??_I2C_MasterTRBInsert
  4186  03B9  0822               	movf	??_I2C_MasterTRBInsert,w
  4187  03BA  07CB               	addwf	_i2c_object,f
  4188                           
  4189                           ;I2C.c: 627: if (i2c_object.pTrTail == (i2c_tr_queue + 1))
  4190  03BB  084B               	movf	_i2c_object,w
  4191  03BC  3A6D               	xorlw	(low ((_i2c_tr_queue| 0+3)))& (0+255)
  4192  03BD  1D03               	skipz
  4193  03BE  2BC3               	goto	l1615
  4194                           
  4195                           ;I2C.c: 628: {
  4196                           ;I2C.c: 630: i2c_object.pTrTail = i2c_tr_queue;
  4197  03BF  306A               	movlw	(low (_i2c_tr_queue| 0))& (0+255)
  4198  03C0  00A2               	movwf	??_I2C_MasterTRBInsert
  4199  03C1  0822               	movf	??_I2C_MasterTRBInsert,w
  4200  03C2  00CB               	movwf	_i2c_object
  4201  03C3                     l1615:	
  4202                           
  4203                           ;I2C.c: 631: }
  4204                           ;I2C.c: 635: i2c_object.trStatus.s.empty = 0;
  4205  03C3  10CD               	bcf	_i2c_object+2,1
  4206                           
  4207                           ;I2C.c: 638: if (i2c_object.pTrHead == i2c_object.pTrTail)
  4208  03C4  084C               	movf	low ((_i2c_object| 0+1)),w
  4209  03C5  064B               	xorwf	_i2c_object,w
  4210  03C6  1D03               	skipz
  4211  03C7  2BCF               	goto	l1621
  4212                           
  4213                           ;I2C.c: 639: {
  4214                           ;I2C.c: 641: i2c_object.trStatus.s.full = 1;
  4215  03C8  144D               	bsf	_i2c_object+2,0
  4216                           
  4217                           ;I2C.c: 642: }
  4218                           ;I2C.c: 644: }
  4219  03C9  2BCF               	goto	l1621
  4220  03CA                     l1619:	
  4221                           
  4222                           ;I2C.c: 645: else
  4223                           ;I2C.c: 646: {
  4224                           ;I2C.c: 647: *pflag = I2C_MESSAGE_FAIL;
  4225  03CA  0821               	movf	I2C_MasterTRBInsert@pflag,w
  4226  03CB  0086               	movwf	6
  4227  03CC  0187               	clrf	7
  4228  03CD  0181               	clrf	1
  4229  03CE  0A81               	incf	1,f
  4230  03CF                     l1621:	
  4231                           
  4232                           ;I2C.c: 648: }
  4233                           ;I2C.c: 651: if (*pflag == I2C_MESSAGE_PENDING)
  4234  03CF  0821               	movf	I2C_MasterTRBInsert@pflag,w
  4235  03D0  0086               	movwf	6
  4236  03D1  0187               	clrf	7
  4237  03D2  3002               	movlw	2
  4238  03D3  0601               	xorwf	1,w
  4239  03D4  1D03               	btfss	3,2
  4240  03D5  0008               	return
  4241  03D6                     l1625:	
  4242                           ;I2C.c: 652: {
  4243                           ;I2C.c: 653: while(i2c_state != S_MASTER_IDLE);
  4244                           
  4245  03D6  0851               	movf	_i2c_state,w
  4246  03D7  1D03               	btfss	3,2
  4247  03D8  2BD6               	goto	l1625
  4248                           
  4249                           ;I2C.c: 654: {
  4250                           ;I2C.c: 657: PIR1bits.SSP1IF = 1;
  4251  03D9  1591               	bsf	17,3	;volatile
  4252  03DA  0008               	return
  4253  03DB                     __end_of_I2C_MasterTRBInsert:	
  4254                           
  4255                           	psect	text21
  4256  0563                     __ptext21:	
  4257 ;; *************** function _I2C_MasterReadTRBBuild *****************
  4258 ;; Defined at:
  4259 ;;		line 663 in file "I2C.c"
  4260 ;; Parameters:    Size  Location     Type
  4261 ;;  ptrb            1    wreg     PTR struct .
  4262 ;;		 -> I2C_MasterRead@trBlock(4), LC164_Read@trb(8), 
  4263 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
  4264 ;;		 -> main@temp(1), 
  4265 ;;  length          1    1[BANK0 ] unsigned char 
  4266 ;;  address         2    2[BANK0 ] unsigned int 
  4267 ;; Auto vars:     Size  Location     Type
  4268 ;;  ptrb            1    6[BANK0 ] PTR struct .
  4269 ;;		 -> I2C_MasterRead@trBlock(4), LC164_Read@trb(8), 
  4270 ;; Return value:  Size  Location     Type
  4271 ;;                  1    wreg      void 
  4272 ;; Registers used:
  4273 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4274 ;; Tracked objects:
  4275 ;;		On entry : 0/0
  4276 ;;		On exit  : 0/0
  4277 ;;		Unchanged: 0/0
  4278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4279 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4280 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4281 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4282 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4283 ;;Total ram usage:        7 bytes
  4284 ;; Hardware stack levels used:    1
  4285 ;; Hardware stack levels required when called:    3
  4286 ;; This function calls:
  4287 ;;		Nothing
  4288 ;; This function is called by:
  4289 ;;		_LC164_Read
  4290 ;;		_I2C_MasterRead
  4291 ;; This function uses a non-reentrant model
  4292 ;;
  4293                           
  4294                           
  4295                           ;psect for function _I2C_MasterReadTRBBuild
  4296  0563                     _I2C_MasterReadTRBBuild:	
  4297                           
  4298                           ;incstack = 0
  4299                           ; Regs used in _I2C_MasterReadTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
  4300                           ;I2C_MasterReadTRBBuild@ptrb stored from wreg
  4301  0563  0020               	movlb	0	; select bank0
  4302  0564  00A6               	movwf	I2C_MasterReadTRBBuild@ptrb
  4303                           
  4304                           ;I2C.c: 669: ptrb->address = address << 1;
  4305  0565  0823               	movf	I2C_MasterReadTRBBuild@address+1,w
  4306  0566  00A5               	movwf	??_I2C_MasterReadTRBBuild+1
  4307  0567  0822               	movf	I2C_MasterReadTRBBuild@address,w
  4308  0568  00A4               	movwf	??_I2C_MasterReadTRBBuild
  4309  0569  35A4               	lslf	??_I2C_MasterReadTRBBuild,f
  4310  056A  0DA5               	rlf	??_I2C_MasterReadTRBBuild+1,f
  4311  056B  0826               	movf	I2C_MasterReadTRBBuild@ptrb,w
  4312  056C  0086               	movwf	6
  4313  056D  0187               	clrf	7
  4314  056E  0824               	movf	??_I2C_MasterReadTRBBuild,w
  4315  056F  3FC0               	movwi [0]fsr1
  4316  0570  0825               	movf	??_I2C_MasterReadTRBBuild+1,w
  4317  0571  3FC1               	movwi [1]fsr1
  4318                           
  4319                           ;I2C.c: 671: ptrb->address |= 0x01;
  4320  0572  0826               	movf	I2C_MasterReadTRBBuild@ptrb,w
  4321  0573  0086               	movwf	6
  4322  0574  0187               	clrf	7
  4323  0575  3001               	movlw	1
  4324  0576  0481               	iorwf	1,f
  4325  0577  3141               	addfsr 1,1
  4326  0578  3000               	movlw	0
  4327  0579  0481               	iorwf	1,f
  4328                           
  4329                           ;I2C.c: 672: ptrb->length = length;
  4330  057A  0821               	movf	I2C_MasterReadTRBBuild@length,w
  4331  057B  00A4               	movwf	??_I2C_MasterReadTRBBuild
  4332  057C  0826               	movf	I2C_MasterReadTRBBuild@ptrb,w
  4333  057D  3E02               	addlw	2
  4334  057E  0086               	movwf	6
  4335  057F  0187               	clrf	7
  4336  0580  0824               	movf	??_I2C_MasterReadTRBBuild,w
  4337  0581  0081               	movwf	1
  4338                           
  4339                           ;I2C.c: 673: ptrb->pbuffer = pdata;
  4340  0582  0820               	movf	I2C_MasterReadTRBBuild@pdata,w
  4341  0583  00A4               	movwf	??_I2C_MasterReadTRBBuild
  4342  0584  0826               	movf	I2C_MasterReadTRBBuild@ptrb,w
  4343  0585  3E03               	addlw	3
  4344  0586  0086               	movwf	6
  4345  0587  0187               	clrf	7
  4346  0588  0824               	movf	??_I2C_MasterReadTRBBuild,w
  4347  0589  0081               	movwf	1
  4348  058A  0008               	return
  4349  058B                     __end_of_I2C_MasterReadTRBBuild:	
  4350                           
  4351                           	psect	intentry
  4352  0004                     __pintentry:	
  4353 ;; *************** function _INTERRUPT_InterruptManager *****************
  4354 ;; Defined at:
  4355 ;;		line 4 in file "I2C.c"
  4356 ;; Parameters:    Size  Location     Type
  4357 ;;		None
  4358 ;; Auto vars:     Size  Location     Type
  4359 ;;		None
  4360 ;; Return value:  Size  Location     Type
  4361 ;;                  1    wreg      void 
  4362 ;; Registers used:
  4363 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4364 ;; Tracked objects:
  4365 ;;		On entry : 0/0
  4366 ;;		On exit  : 0/0
  4367 ;;		Unchanged: 0/0
  4368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4371 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4372 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4373 ;;Total ram usage:        1 bytes
  4374 ;; Hardware stack levels used:    1
  4375 ;; Hardware stack levels required when called:    2
  4376 ;; This function calls:
  4377 ;;		_I2C_BusCollisionISR
  4378 ;;		_I2C_ISR
  4379 ;; This function is called by:
  4380 ;;		Interrupt level 1
  4381 ;; This function uses a non-reentrant model
  4382 ;;
  4383                           
  4384  0004                     _INTERRUPT_InterruptManager:	
  4385                           
  4386                           ;incstack = 0
  4387  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  4388                           
  4389                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4390  0005  3180               	pagesel	$
  4391  0006  0020               	movlb	0	; select bank0
  4392  0007  087F               	movf	127,w
  4393  0008  00FD               	movwf	??_INTERRUPT_InterruptManager
  4394                           
  4395                           ;I2C.c: 7: if(PIE2bits.BCL1IE == 1 && PIR2bits.BCL1IF == 1)
  4396  0009  0021               	movlb	1	; select bank1
  4397  000A  1D92               	btfss	18,3	;volatile
  4398  000B  2813               	goto	i1l245
  4399  000C  0020               	movlb	0	; select bank0
  4400  000D  1D92               	btfss	18,3	;volatile
  4401  000E  2813               	goto	i1l245
  4402                           
  4403                           ;I2C.c: 8: {
  4404                           ;I2C.c: 9: I2C_BusCollisionISR();
  4405  000F  3186  269E  3180   	fcall	_I2C_BusCollisionISR
  4406                           
  4407                           ;I2C.c: 10: }
  4408  0012  281B               	goto	i1l249
  4409  0013                     i1l245:	
  4410                           
  4411                           ;I2C.c: 11: else if(PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1)
  4412  0013  0021               	movlb	1	; select bank1
  4413  0014  1D91               	btfss	17,3	;volatile
  4414  0015  281B               	goto	i1l249
  4415  0016  0020               	movlb	0	; select bank0
  4416  0017  1D91               	btfss	17,3	;volatile
  4417  0018  281B               	goto	i1l249
  4418                           
  4419                           ;I2C.c: 12: {
  4420                           ;I2C.c: 13: I2C_ISR();
  4421  0019  3180  203C         	fcall	_I2C_ISR
  4422  001B                     i1l249:	
  4423                           ;I2C.c: 15: else
  4424                           ;I2C.c: 16: {
  4425                           
  4426                           ;I2C.c: 14: }
  4427                           
  4428  001B  087D               	movf	??_INTERRUPT_InterruptManager,w
  4429  001C  0020               	movlb	0	; select bank0
  4430  001D  00FF               	movwf	127
  4431  001E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  4432  001F  0009               	retfie
  4433  0020                     __end_of_INTERRUPT_InterruptManager:	
  4434                           
  4435                           	psect	text23
  4436  003C                     __ptext23:	
  4437 ;; *************** function _I2C_ISR *****************
  4438 ;; Defined at:
  4439 ;;		line 202 in file "I2C.c"
  4440 ;; Parameters:    Size  Location     Type
  4441 ;;		None
  4442 ;; Auto vars:     Size  Location     Type
  4443 ;;		None
  4444 ;; Return value:  Size  Location     Type
  4445 ;;                  1    wreg      void 
  4446 ;; Registers used:
  4447 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4448 ;; Tracked objects:
  4449 ;;		On entry : 0/0
  4450 ;;		On exit  : 0/0
  4451 ;;		Unchanged: 0/0
  4452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4455 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4456 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4457 ;;Total ram usage:        4 bytes
  4458 ;; Hardware stack levels used:    1
  4459 ;; Hardware stack levels required when called:    1
  4460 ;; This function calls:
  4461 ;;		_I2C_FunctionComplete
  4462 ;;		_I2C_Stop
  4463 ;; This function is called by:
  4464 ;;		_INTERRUPT_InterruptManager
  4465 ;; This function uses a non-reentrant model
  4466 ;;
  4467                           
  4468                           
  4469                           ;psect for function _I2C_ISR
  4470  003C                     _I2C_ISR:	
  4471                           
  4472                           ;I2C.c: 205: static uint8_t *pi2c_buf_ptr;
  4473                           ;I2C.c: 206: static uint16_t i2c_address = 0;
  4474                           ;I2C.c: 207: static uint8_t i2c_bytes_left = 0;
  4475                           ;I2C.c: 208: static uint8_t i2c_10bit_address_restart = 0;
  4476                           ;I2C.c: 210: PIR1bits.SSP1IF = 0;
  4477                           
  4478                           ;incstack = 0
  4479                           ; Regs used in _I2C_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4480  003C  0020               	movlb	0	; select bank0
  4481  003D  1191               	bcf	17,3	;volatile
  4482                           
  4483                           ;I2C.c: 214: if(SSP1CON1bits.WCOL)
  4484  003E  0024               	movlb	4	; select bank4
  4485  003F  1F95               	btfss	21,7	;volatile
  4486  0040  296B               	goto	i1l1885
  4487                           
  4488                           ;I2C.c: 215: {
  4489                           ;I2C.c: 217: SSP1CON1bits.WCOL = 0;
  4490  0041  1395               	bcf	21,7	;volatile
  4491                           
  4492                           ;I2C.c: 218: i2c_state = S_MASTER_IDLE;
  4493  0042  0020               	movlb	0	; select bank0
  4494  0043  01D1               	clrf	_i2c_state
  4495                           
  4496                           ;I2C.c: 219: *(p_i2c_current->pTrFlag) = I2C_MESSAGE_FAIL;
  4497  0044  0873               	movf	_p_i2c_current,w
  4498  0045  3E02               	addlw	2
  4499  0046  0086               	movwf	6
  4500  0047  0187               	clrf	7
  4501  0048  0801               	movf	1,w
  4502  0049  0086               	movwf	6
  4503  004A  0187               	clrf	7
  4504  004B  0181               	clrf	1
  4505  004C  0A81               	incf	1,f
  4506                           
  4507                           ;I2C.c: 222: p_i2c_current = (0);
  4508  004D  01F3               	clrf	_p_i2c_current
  4509                           
  4510                           ;I2C.c: 224: return;
  4511  004E  0008               	return
  4512  004F                     i1l281:	
  4513                           ;I2C.c: 229: {
  4514                           ;I2C.c: 230: case S_MASTER_IDLE:
  4515                           
  4516                           ;I2C.c: 225: }
  4517                           ;I2C.c: 228: switch(i2c_state)
  4518                           
  4519                           
  4520                           ;I2C.c: 232: if(i2c_object.trStatus.s.empty != 1)
  4521  004F  18CD               	btfsc	_i2c_object+2,1
  4522  0050  0008               	return
  4523                           
  4524                           ;I2C.c: 233: {
  4525                           ;I2C.c: 235: p_i2c_current = i2c_object.pTrHead;
  4526  0051  084C               	movf	low ((_i2c_object| 0+1)),w
  4527  0052  00F9               	movwf	??_I2C_ISR
  4528  0053  0879               	movf	??_I2C_ISR,w
  4529  0054  00F3               	movwf	_p_i2c_current
  4530                           
  4531                           ;I2C.c: 236: i2c_trb_count = i2c_object.pTrHead->count;
  4532  0055  084C               	movf	low ((_i2c_object| 0+1)),w
  4533  0056  0086               	movwf	6
  4534  0057  0187               	clrf	7
  4535  0058  0801               	movf	1,w
  4536  0059  00F9               	movwf	??_I2C_ISR
  4537  005A  0879               	movf	??_I2C_ISR,w
  4538  005B  00F2               	movwf	_i2c_trb_count
  4539                           
  4540                           ;I2C.c: 237: p_i2c_trb_current = i2c_object.pTrHead->ptrb_list;
  4541  005C  084C               	movf	low ((_i2c_object| 0+1)),w
  4542  005D  0086               	movwf	6
  4543  005E  0187               	clrf	7
  4544  005F  3F41               	moviw [1]fsr1
  4545  0060  00F4               	movwf	_p_i2c_trb_current
  4546                           
  4547                           ;I2C.c: 239: i2c_object.pTrHead++;
  4548  0061  3003               	movlw	3
  4549  0062  00F9               	movwf	??_I2C_ISR
  4550  0063  0879               	movf	??_I2C_ISR,w
  4551  0064  07CC               	addwf	low ((_i2c_object| 0+1)),f
  4552                           
  4553                           ;I2C.c: 242: if(i2c_object.pTrHead == (i2c_tr_queue + 1))
  4554  0065  084C               	movf	low ((_i2c_object| 0+1)),w
  4555  0066  3A6D               	xorlw	(low ((_i2c_tr_queue| 0+3)))& (0+255)
  4556  0067  1D03               	skipz
  4557  0068  286D               	goto	i1l1773
  4558                           
  4559                           ;I2C.c: 243: {
  4560                           ;I2C.c: 245: i2c_object.pTrHead = i2c_tr_queue;
  4561  0069  306A               	movlw	(low (_i2c_tr_queue| 0))& (0+255)
  4562  006A  00F9               	movwf	??_I2C_ISR
  4563  006B  0879               	movf	??_I2C_ISR,w
  4564  006C  00CC               	movwf	low ((_i2c_object| 0+1))
  4565  006D                     i1l1773:	
  4566                           
  4567                           ;I2C.c: 246: }
  4568                           ;I2C.c: 250: i2c_object.trStatus.s.full = 0;
  4569  006D  104D               	bcf	_i2c_object+2,0
  4570                           
  4571                           ;I2C.c: 253: if(i2c_object.pTrHead == i2c_object.pTrTail)
  4572  006E  084C               	movf	low ((_i2c_object| 0+1)),w
  4573  006F  064B               	xorwf	_i2c_object,w
  4574  0070  1903               	btfsc	3,2
  4575                           
  4576                           ;I2C.c: 254: {
  4577                           ;I2C.c: 256: i2c_object.trStatus.s.empty = 1;
  4578  0071  14CD               	bsf	_i2c_object+2,1
  4579                           
  4580                           ;I2C.c: 257: }
  4581                           ;I2C.c: 260: SSP1CON2bits.SEN = 1;
  4582  0072  0024               	movlb	4	; select bank4
  4583  0073  1416               	bsf	22,0	;volatile
  4584                           
  4585                           ;I2C.c: 263: i2c_state = S_MASTER_SEND_ADDR;
  4586  0074  3002               	movlw	2
  4587  0075  00F9               	movwf	??_I2C_ISR
  4588  0076  0879               	movf	??_I2C_ISR,w
  4589  0077  0020               	movlb	0	; select bank0
  4590  0078  00D1               	movwf	_i2c_state
  4591                           
  4592                           ;I2C.c: 264: }
  4593                           ;I2C.c: 266: break;
  4594  0079  0008               	return
  4595  007A                     i1l286:	
  4596                           ;I2C.c: 268: case S_MASTER_RESTART:
  4597                           
  4598                           
  4599                           ;I2C.c: 273: SSP1CON2bits.RSEN = 1;
  4600  007A  0024               	movlb	4	; select bank4
  4601  007B  1496               	bsf	22,1	;volatile
  4602                           
  4603                           ;I2C.c: 276: i2c_state = S_MASTER_SEND_ADDR;
  4604  007C  3002               	movlw	2
  4605  007D  00F9               	movwf	??_I2C_ISR
  4606  007E  0879               	movf	??_I2C_ISR,w
  4607  007F  0020               	movlb	0	; select bank0
  4608  0080  00D1               	movwf	_i2c_state
  4609                           
  4610                           ;I2C.c: 278: break;
  4611  0081  0008               	return
  4612  0082                     i1l287:	
  4613                           ;I2C.c: 280: case S_MASTER_SEND_ADDR_10BIT_LSB:
  4614                           
  4615                           
  4616                           ;I2C.c: 282: if(SSP1CON2bits.ACKSTAT)
  4617  0082  0024               	movlb	4	; select bank4
  4618  0083  1F16               	btfss	22,6	;volatile
  4619  0084  288E               	goto	i1l1785
  4620                           
  4621                           ;I2C.c: 283: {
  4622                           ;I2C.c: 284: i2c_object.i2cErrors++;
  4623  0085  3001               	movlw	1
  4624  0086  00F9               	movwf	??_I2C_ISR
  4625  0087  0879               	movf	??_I2C_ISR,w
  4626  0088  0020               	movlb	0	; select bank0
  4627  0089  07CF               	addwf	_i2c_object+4,f
  4628                           
  4629                           ;I2C.c: 285: I2C_Stop(I2C_MESSAGE_ADDRESS_NO_ACK);
  4630  008A  3004               	movlw	4
  4631  008B  3186  261D         	fcall	_I2C_Stop
  4632                           
  4633                           ;I2C.c: 286: }
  4634  008D  0008               	return
  4635  008E                     i1l1785:	
  4636                           
  4637                           ;I2C.c: 287: else
  4638                           ;I2C.c: 288: {
  4639                           ;I2C.c: 290: SSP1BUF = (i2c_address >> 1) & 0x00FF;
  4640  008E  0876               	movf	I2C_ISR@i2c_address+1,w
  4641  008F  00FA               	movwf	??_I2C_ISR+1
  4642  0090  0875               	movf	I2C_ISR@i2c_address,w
  4643  0091  00F9               	movwf	??_I2C_ISR
  4644  0092  36FA               	lsrf	??_I2C_ISR+1,f
  4645  0093  0CF9               	rrf	??_I2C_ISR,f
  4646  0094  0879               	movf	??_I2C_ISR,w
  4647  0095  0024               	movlb	4	; select bank4
  4648  0096  0091               	movwf	17	;volatile
  4649                           
  4650                           ;I2C.c: 293: if(i2c_address & 0x01)
  4651  0097  1C75               	btfss	I2C_ISR@i2c_address,0
  4652  0098  289F               	goto	i1l1791
  4653                           
  4654                           ;I2C.c: 294: {
  4655                           ;I2C.c: 297: i2c_state = S_MASTER_10BIT_RESTART;
  4656  0099  300B               	movlw	11
  4657  009A  00F9               	movwf	??_I2C_ISR
  4658  009B  0879               	movf	??_I2C_ISR,w
  4659  009C  0020               	movlb	0	; select bank0
  4660  009D  00D1               	movwf	_i2c_state
  4661                           
  4662                           ;I2C.c: 298: }
  4663  009E  0008               	return
  4664  009F                     i1l1791:	
  4665                           
  4666                           ;I2C.c: 299: else
  4667                           ;I2C.c: 300: {
  4668                           ;I2C.c: 302: i2c_state = S_MASTER_SEND_DATA;
  4669  009F  3003               	movlw	3
  4670  00A0  00F9               	movwf	??_I2C_ISR
  4671  00A1  0879               	movf	??_I2C_ISR,w
  4672  00A2  0020               	movlb	0	; select bank0
  4673  00A3  00D1               	movwf	_i2c_state
  4674                           
  4675                           ;I2C.c: 303: }
  4676                           ;I2C.c: 304: }
  4677                           ;I2C.c: 306: break;
  4678  00A4  0008               	return
  4679  00A5                     i1l292:	
  4680                           ;I2C.c: 308: case S_MASTER_10BIT_RESTART:
  4681                           
  4682                           
  4683                           ;I2C.c: 310: if(SSP1CON2bits.ACKSTAT)
  4684  00A5  0024               	movlb	4	; select bank4
  4685  00A6  1F16               	btfss	22,6	;volatile
  4686  00A7  28B1               	goto	i1l293
  4687                           
  4688                           ;I2C.c: 311: {
  4689                           ;I2C.c: 312: i2c_object.i2cErrors++;
  4690  00A8  3001               	movlw	1
  4691  00A9  00F9               	movwf	??_I2C_ISR
  4692  00AA  0879               	movf	??_I2C_ISR,w
  4693  00AB  0020               	movlb	0	; select bank0
  4694  00AC  07CF               	addwf	_i2c_object+4,f
  4695                           
  4696                           ;I2C.c: 313: I2C_Stop(I2C_MESSAGE_ADDRESS_NO_ACK);
  4697  00AD  3004               	movlw	4
  4698  00AE  3186  261D         	fcall	_I2C_Stop
  4699                           
  4700                           ;I2C.c: 314: }
  4701  00B0  0008               	return
  4702  00B1                     i1l293:	
  4703                           
  4704                           ;I2C.c: 315: else
  4705                           ;I2C.c: 316: {
  4706                           ;I2C.c: 319: SSP1CON2bits.RSEN = 1;
  4707  00B1  1496               	bsf	22,1	;volatile
  4708                           
  4709                           ;I2C.c: 323: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
  4710  00B2  0876               	movf	I2C_ISR@i2c_address+1,w
  4711  00B3  00FA               	movwf	??_I2C_ISR+1
  4712  00B4  0875               	movf	I2C_ISR@i2c_address,w
  4713  00B5  00F9               	movwf	??_I2C_ISR
  4714  00B6  087A               	movf	??_I2C_ISR+1,w
  4715  00B7  00F9               	movwf	??_I2C_ISR
  4716  00B8  01FA               	clrf	??_I2C_ISR+1
  4717  00B9  3006               	movlw	6
  4718  00BA  0579               	andwf	??_I2C_ISR,w
  4719  00BB  00FB               	movwf	??_I2C_ISR+2
  4720  00BC  3000               	movlw	0
  4721  00BD  057A               	andwf	??_I2C_ISR+1,w
  4722  00BE  00FC               	movwf	??_I2C_ISR+3
  4723  00BF  30F0               	movlw	240
  4724  00C0  047B               	iorwf	??_I2C_ISR+2,w
  4725  00C1  00F5               	movwf	I2C_ISR@i2c_address
  4726  00C2  3000               	movlw	0
  4727  00C3  047C               	iorwf	??_I2C_ISR+3,w
  4728  00C4  00F6               	movwf	I2C_ISR@i2c_address+1
  4729                           
  4730                           ;I2C.c: 326: i2c_address |= 0x0001;
  4731  00C5  1475               	bsf	I2C_ISR@i2c_address,0
  4732                           
  4733                           ;I2C.c: 329: i2c_10bit_address_restart = 1;
  4734  00C6  0020               	movlb	0	; select bank0
  4735  00C7  01D0               	clrf	I2C_ISR@i2c_10bit_address_restart
  4736  00C8  0AD0               	incf	I2C_ISR@i2c_10bit_address_restart,f
  4737                           
  4738                           ;I2C.c: 332: i2c_state = S_MASTER_SEND_ADDR;
  4739  00C9  3002               	movlw	2
  4740  00CA  00F9               	movwf	??_I2C_ISR
  4741  00CB  0879               	movf	??_I2C_ISR,w
  4742  00CC  00D1               	movwf	_i2c_state
  4743                           
  4744                           ;I2C.c: 333: }
  4745                           ;I2C.c: 335: break;
  4746  00CD  0008               	return
  4747  00CE                     i1l1805:	
  4748                           ;I2C.c: 337: case S_MASTER_SEND_ADDR:
  4749                           
  4750                           
  4751                           ;I2C.c: 350: if(i2c_10bit_address_restart != 1)
  4752  00CE  0350               	decf	I2C_ISR@i2c_10bit_address_restart,w
  4753  00CF  1903               	btfsc	3,2
  4754  00D0  28E2               	goto	i1l1825
  4755                           
  4756                           ;I2C.c: 351: {
  4757                           ;I2C.c: 353: i2c_address = p_i2c_trb_current->address;
  4758  00D1  0874               	movf	_p_i2c_trb_current,w
  4759  00D2  0086               	movwf	6
  4760  00D3  0187               	clrf	7
  4761  00D4  3F40               	moviw [0]fsr1
  4762  00D5  00F5               	movwf	I2C_ISR@i2c_address
  4763  00D6  3F41               	moviw [1]fsr1
  4764  00D7  00F6               	movwf	I2C_ISR@i2c_address+1
  4765                           
  4766                           ;I2C.c: 354: pi2c_buf_ptr = p_i2c_trb_current->pbuffer;
  4767  00D8  0874               	movf	_p_i2c_trb_current,w
  4768  00D9  0086               	movwf	6
  4769  00DA  0187               	clrf	7
  4770  00DB  3F43               	moviw [3]fsr1
  4771  00DC  00F1               	movwf	I2C_ISR@pi2c_buf_ptr
  4772                           
  4773                           ;I2C.c: 355: i2c_bytes_left = p_i2c_trb_current->length;
  4774  00DD  0874               	movf	_p_i2c_trb_current,w
  4775  00DE  0086               	movwf	6
  4776  00DF  0187               	clrf	7
  4777  00E0  3F42               	moviw [2]fsr1
  4778  00E1  00F0               	movwf	I2C_ISR@i2c_bytes_left
  4779  00E2                     i1l1825:	
  4780                           ;I2C.c: 376: }
  4781                           ;I2C.c: 377: }
  4782                           
  4783                           ;I2C.c: 375: i2c_10bit_address_restart = 0;
  4784                           
  4785                           ;I2C.c: 373: i2c_state = S_MASTER_ACK_ADDR;
  4786                           
  4787                           ;I2C.c: 369: else
  4788                           ;I2C.c: 370: {
  4789                           ;I2C.c: 372: SSP1BUF = i2c_address;
  4790                           
  4791                           ;I2C.c: 368: }
  4792                           
  4793                           ;I2C.c: 367: i2c_state = S_MASTER_SEND_ADDR_10BIT_LSB;
  4794                           
  4795                           ;I2C.c: 362: {
  4796                           ;I2C.c: 366: SSP1BUF = 0xF0 | ((i2c_address >> 8) & 0x0006);
  4797                           
  4798                           ;I2C.c: 360: {
  4799                           ;I2C.c: 361: if (0 == i2c_10bit_address_restart)
  4800                           
  4801                           ;I2C.c: 356: }
  4802                           ;I2C.c: 359: if(!1 && (0x0 != i2c_address))
  4803                           
  4804                           
  4805                           ;I2C.c: 378: else
  4806                           ;I2C.c: 379: {
  4807                           ;I2C.c: 381: SSP1BUF = i2c_address;
  4808  00E2  0875               	movf	I2C_ISR@i2c_address,w
  4809  00E3  0024               	movlb	4	; select bank4
  4810  00E4  0091               	movwf	17	;volatile
  4811                           
  4812                           ;I2C.c: 382: if(i2c_address & 0x01)
  4813  00E5  1C75               	btfss	I2C_ISR@i2c_address,0
  4814  00E6  28ED               	goto	i1l1831
  4815                           
  4816                           ;I2C.c: 383: {
  4817                           ;I2C.c: 385: i2c_state = S_MASTER_ACK_ADDR;
  4818  00E7  3005               	movlw	5
  4819  00E8  00F9               	movwf	??_I2C_ISR
  4820  00E9  0879               	movf	??_I2C_ISR,w
  4821  00EA  0020               	movlb	0	; select bank0
  4822  00EB  00D1               	movwf	_i2c_state
  4823                           
  4824                           ;I2C.c: 386: }
  4825  00EC  0008               	return
  4826  00ED                     i1l1831:	
  4827                           
  4828                           ;I2C.c: 387: else
  4829                           ;I2C.c: 388: {
  4830                           ;I2C.c: 390: i2c_state = S_MASTER_SEND_DATA;
  4831  00ED  3003               	movlw	3
  4832  00EE  00F9               	movwf	??_I2C_ISR
  4833  00EF  0879               	movf	??_I2C_ISR,w
  4834  00F0  0020               	movlb	0	; select bank0
  4835  00F1  00D1               	movwf	_i2c_state
  4836                           
  4837                           ;I2C.c: 391: }
  4838                           ;I2C.c: 392: }
  4839                           ;I2C.c: 393: break;
  4840  00F2  0008               	return
  4841  00F3                     i1l303:	
  4842                           ;I2C.c: 395: case S_MASTER_SEND_DATA:
  4843                           
  4844                           
  4845                           ;I2C.c: 398: if(SSP1CON2bits.ACKSTAT)
  4846  00F3  0024               	movlb	4	; select bank4
  4847  00F4  1F16               	btfss	22,6	;volatile
  4848  00F5  2901               	goto	i1l1839
  4849                           
  4850                           ;I2C.c: 399: {
  4851                           ;I2C.c: 401: i2c_object.i2cErrors++;
  4852  00F6  3001               	movlw	1
  4853  00F7  00F9               	movwf	??_I2C_ISR
  4854  00F8  0879               	movf	??_I2C_ISR,w
  4855  00F9  0020               	movlb	0	; select bank0
  4856  00FA  07CF               	addwf	_i2c_object+4,f
  4857                           
  4858                           ;I2C.c: 404: SSP1CON2bits.ACKSTAT = 0;
  4859  00FB  0024               	movlb	4	; select bank4
  4860  00FC  1316               	bcf	22,6	;volatile
  4861                           
  4862                           ;I2C.c: 407: I2C_Stop(I2C_DATA_NO_ACK);
  4863  00FD  3005               	movlw	5
  4864  00FE  3186  261D         	fcall	_I2C_Stop
  4865                           
  4866                           ;I2C.c: 409: }
  4867  0100  0008               	return
  4868  0101                     i1l1839:	
  4869                           
  4870                           ;I2C.c: 410: else
  4871                           ;I2C.c: 411: {
  4872                           ;I2C.c: 413: if(i2c_bytes_left-- == 0U)
  4873  0101  3001               	movlw	1
  4874  0102  02F0               	subwf	I2C_ISR@i2c_bytes_left,f
  4875  0103  0A70               	incf	I2C_ISR@i2c_bytes_left,w
  4876  0104  1D03               	btfss	3,2
  4877  0105  291A               	goto	i1l1847
  4878                           
  4879                           ;I2C.c: 414: {
  4880                           ;I2C.c: 418: p_i2c_trb_current++;
  4881  0106  3004               	movlw	4
  4882  0107  00F9               	movwf	??_I2C_ISR
  4883  0108  0879               	movf	??_I2C_ISR,w
  4884  0109  07F4               	addwf	_p_i2c_trb_current,f
  4885                           
  4886                           ;I2C.c: 421: if(--i2c_trb_count == 0)
  4887  010A  3001               	movlw	1
  4888  010B  02F2               	subwf	_i2c_trb_count,f
  4889  010C  1D03               	btfss	3,2
  4890  010D  2912               	goto	i1l307
  4891                           
  4892                           ;I2C.c: 422: {
  4893                           ;I2C.c: 423: I2C_Stop(I2C_MESSAGE_COMPLETE);
  4894  010E  3000               	movlw	0
  4895  010F  3186  261D         	fcall	_I2C_Stop
  4896                           
  4897                           ;I2C.c: 424: }
  4898  0111  0008               	return
  4899  0112                     i1l307:	
  4900                           
  4901                           ;I2C.c: 425: else
  4902                           ;I2C.c: 426: {
  4903                           ;I2C.c: 433: SSP1CON2bits.RSEN = 1;
  4904  0112  0024               	movlb	4	; select bank4
  4905  0113  1496               	bsf	22,1	;volatile
  4906                           
  4907                           ;I2C.c: 436: i2c_state = S_MASTER_SEND_ADDR;
  4908  0114  3002               	movlw	2
  4909  0115  00F9               	movwf	??_I2C_ISR
  4910  0116  0879               	movf	??_I2C_ISR,w
  4911  0117  0020               	movlb	0	; select bank0
  4912  0118  00D1               	movwf	_i2c_state
  4913                           
  4914                           ;I2C.c: 438: }
  4915                           ;I2C.c: 439: }
  4916  0119  0008               	return
  4917  011A                     i1l1847:	
  4918                           
  4919                           ;I2C.c: 440: else
  4920                           ;I2C.c: 441: {
  4921                           ;I2C.c: 443: SSP1BUF = *pi2c_buf_ptr++;
  4922  011A  0871               	movf	I2C_ISR@pi2c_buf_ptr,w
  4923  011B  0086               	movwf	6
  4924  011C  0187               	clrf	7
  4925  011D  0801               	movf	1,w
  4926  011E  0024               	movlb	4	; select bank4
  4927  011F  0091               	movwf	17	;volatile
  4928  0120  3001               	movlw	1
  4929  0121  00F9               	movwf	??_I2C_ISR
  4930  0122  0879               	movf	??_I2C_ISR,w
  4931  0123  07F1               	addwf	I2C_ISR@pi2c_buf_ptr,f
  4932                           
  4933                           ;I2C.c: 444: }
  4934                           ;I2C.c: 445: }
  4935                           ;I2C.c: 446: break;
  4936  0124  0008               	return
  4937  0125                     i1l310:	
  4938                           ;I2C.c: 448: case S_MASTER_ACK_ADDR:
  4939                           
  4940                           
  4941                           ;I2C.c: 451: if(SSP1CON2bits.ACKSTAT)
  4942  0125  0024               	movlb	4	; select bank4
  4943  0126  1F16               	btfss	22,6	;volatile
  4944  0127  2933               	goto	i1l311
  4945                           
  4946                           ;I2C.c: 452: {
  4947                           ;I2C.c: 455: i2c_object.i2cErrors++;
  4948  0128  3001               	movlw	1
  4949  0129  00F9               	movwf	??_I2C_ISR
  4950  012A  0879               	movf	??_I2C_ISR,w
  4951  012B  0020               	movlb	0	; select bank0
  4952  012C  07CF               	addwf	_i2c_object+4,f
  4953                           
  4954                           ;I2C.c: 458: I2C_Stop(I2C_MESSAGE_ADDRESS_NO_ACK);
  4955  012D  3004               	movlw	4
  4956  012E  3186  261D         	fcall	_I2C_Stop
  4957                           
  4958                           ;I2C.c: 461: SSP1CON2bits.ACKSTAT = 0;
  4959  0130  0024               	movlb	4	; select bank4
  4960  0131  1316               	bcf	22,6	;volatile
  4961                           
  4962                           ;I2C.c: 462: }
  4963  0132  0008               	return
  4964  0133                     i1l311:	
  4965                           
  4966                           ;I2C.c: 463: else
  4967                           ;I2C.c: 464: {
  4968                           ;I2C.c: 465: SSP1CON2bits.RCEN = 1;
  4969  0133  1596               	bsf	22,3	;volatile
  4970                           
  4971                           ;I2C.c: 466: i2c_state = S_MASTER_ACK_RCV_DATA;
  4972  0134  3008               	movlw	8
  4973  0135  00F9               	movwf	??_I2C_ISR
  4974  0136  0879               	movf	??_I2C_ISR,w
  4975  0137  0020               	movlb	0	; select bank0
  4976  0138  00D1               	movwf	_i2c_state
  4977                           
  4978                           ;I2C.c: 467: }
  4979                           ;I2C.c: 468: break;
  4980  0139  0008               	return
  4981  013A                     i1l1859:	
  4982                           ;I2C.c: 470: case S_MASTER_RCV_DATA:
  4983                           
  4984                           
  4985                           ;I2C.c: 475: i2c_state = S_MASTER_ACK_RCV_DATA;
  4986  013A  3008               	movlw	8
  4987  013B  00F9               	movwf	??_I2C_ISR
  4988  013C  0879               	movf	??_I2C_ISR,w
  4989  013D  00D1               	movwf	_i2c_state
  4990                           
  4991                           ;I2C.c: 478: SSP1CON2bits.RCEN = 1;
  4992  013E  0024               	movlb	4	; select bank4
  4993  013F  1596               	bsf	22,3	;volatile
  4994                           
  4995                           ;I2C.c: 480: break;
  4996  0140  0008               	return
  4997  0141                     i1l1863:	
  4998                           ;I2C.c: 482: case S_MASTER_ACK_RCV_DATA:
  4999                           
  5000                           
  5001                           ;I2C.c: 485: *pi2c_buf_ptr++ = SSP1BUF;
  5002  0141  0024               	movlb	4	; select bank4
  5003  0142  0811               	movf	17,w	;volatile
  5004  0143  00F9               	movwf	??_I2C_ISR
  5005  0144  0871               	movf	I2C_ISR@pi2c_buf_ptr,w
  5006  0145  0086               	movwf	6
  5007  0146  0187               	clrf	7
  5008  0147  0879               	movf	??_I2C_ISR,w
  5009  0148  0081               	movwf	1
  5010  0149  3001               	movlw	1
  5011  014A  00F9               	movwf	??_I2C_ISR
  5012  014B  0879               	movf	??_I2C_ISR,w
  5013  014C  07F1               	addwf	I2C_ISR@pi2c_buf_ptr,f
  5014                           
  5015                           ;I2C.c: 488: if(--i2c_bytes_left)
  5016  014D  3001               	movlw	1
  5017  014E  02F0               	subwf	I2C_ISR@i2c_bytes_left,f
  5018  014F  1903               	btfsc	3,2
  5019  0150  2958               	goto	i1l315
  5020                           
  5021                           ;I2C.c: 489: {
  5022                           ;I2C.c: 495: SSP1CON2bits.ACKDT = 0;
  5023  0151  1296               	bcf	22,5	;volatile
  5024                           
  5025                           ;I2C.c: 498: i2c_state = S_MASTER_RCV_DATA;
  5026  0152  3006               	movlw	6
  5027  0153  00F9               	movwf	??_I2C_ISR
  5028  0154  0879               	movf	??_I2C_ISR,w
  5029  0155  0020               	movlb	0	; select bank0
  5030  0156  00D1               	movwf	_i2c_state
  5031                           
  5032                           ;I2C.c: 499: }
  5033  0157  295B               	goto	i1l1875
  5034  0158                     i1l315:	
  5035                           
  5036                           ;I2C.c: 500: else
  5037                           ;I2C.c: 501: {
  5038                           ;I2C.c: 505: SSP1CON2bits.ACKDT = 1;
  5039  0158  1696               	bsf	22,5	;volatile
  5040                           
  5041                           ;I2C.c: 507: I2C_FunctionComplete();
  5042  0159  3186  2675         	fcall	_I2C_FunctionComplete
  5043  015B                     i1l1875:	
  5044                           
  5045                           ;I2C.c: 508: }
  5046                           ;I2C.c: 511: SSP1CON2bits.ACKEN = 1;
  5047  015B  0024               	movlb	4	; select bank4
  5048  015C  1616               	bsf	22,4	;volatile
  5049                           
  5050                           ;I2C.c: 512: break;
  5051  015D  0008               	return
  5052  015E                     i1l1877:	
  5053                           ;I2C.c: 514: case S_MASTER_RCV_STOP:
  5054                           
  5055                           
  5056                           ;I2C.c: 515: case S_MASTER_SEND_STOP:
  5057                           ;I2C.c: 518: I2C_Stop(I2C_MESSAGE_COMPLETE);
  5058  015E  3000               	movlw	0
  5059  015F  3186  261D         	fcall	_I2C_Stop
  5060                           
  5061                           ;I2C.c: 519: break;
  5062  0161  0008               	return
  5063  0162                     i1l1879:	
  5064                           ;I2C.c: 521: default:
  5065                           
  5066                           
  5067                           ;I2C.c: 525: i2c_object.i2cErrors++;
  5068  0162  3001               	movlw	1
  5069  0163  00F9               	movwf	??_I2C_ISR
  5070  0164  0879               	movf	??_I2C_ISR,w
  5071  0165  0020               	movlb	0	; select bank0
  5072  0166  07CF               	addwf	_i2c_object+4,f
  5073                           
  5074                           ;I2C.c: 526: I2C_Stop(I2C_LOST_STATE);
  5075  0167  3006               	movlw	6
  5076  0168  3186  261D         	fcall	_I2C_Stop
  5077                           
  5078                           ;I2C.c: 529: }
  5079                           
  5080                           ;I2C.c: 527: break;
  5081  016A  0008               	return
  5082  016B                     i1l1885:	
  5083  016B  0020               	movlb	0	; select bank0
  5084  016C  0851               	movf	_i2c_state,w
  5085                           
  5086                           ; Switch size 1, requested type "space"
  5087                           ; Number of cases is 11, Range of values is 0 to 11
  5088                           ; switch strategies available:
  5089                           ; Name         Instructions Cycles
  5090                           ; direct_byte           30     6 (fixed)
  5091                           ; simple_byte           34    18 (average)
  5092                           ; jumptable            260     6 (fixed)
  5093                           ;	Chosen strategy is direct_byte
  5094  016D  0084               	movwf	4
  5095  016E  300C               	movlw	12
  5096  016F  0204               	subwf	4,w
  5097  0170  1803               	skipnc
  5098  0171  2962               	goto	i1l1879
  5099  0172  3186               	movlp	high i1S2215
  5100  0173  3504               	lslf	4,w
  5101  0174  3E05               	addlw	low i1S2215
  5102  0175  0082               	movwf	2
  5103  0176  0008               	return
  5104  0177                     __end_of_I2C_ISR:	
  5105                           
  5106                           	psect	swtext1
  5107  0605                     __pswtext1:	
  5108  0605                     i1S2215:	
  5109  0605  3180  284F         	ljmp	i1l281
  5110  0607  3180  287A         	ljmp	i1l286
  5111  0609  3180  28CE         	ljmp	i1l1805
  5112  060B  3180  28F3         	ljmp	i1l303
  5113  060D  3181  295E         	ljmp	i1l1877
  5114  060F  3181  2925         	ljmp	i1l310
  5115  0611  3181  293A         	ljmp	i1l1859
  5116  0613  3181  295E         	ljmp	i1l1877
  5117  0615  3181  2941         	ljmp	i1l1863
  5118  0617  3181  2962         	ljmp	i1l1879
  5119  0619  3180  2882         	ljmp	i1l287
  5120  061B  3180  28A5         	ljmp	i1l292
  5121                           
  5122                           	psect	text24
  5123  061D                     __ptext24:	
  5124 ;; *************** function _I2C_Stop *****************
  5125 ;; Defined at:
  5126 ;;		line 550 in file "I2C.c"
  5127 ;; Parameters:    Size  Location     Type
  5128 ;;  completion_c    1    wreg     enum E6868
  5129 ;; Auto vars:     Size  Location     Type
  5130 ;;  completion_c    1    1[COMMON] enum E6868
  5131 ;; Return value:  Size  Location     Type
  5132 ;;                  1    wreg      void 
  5133 ;; Registers used:
  5134 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5135 ;; Tracked objects:
  5136 ;;		On entry : 0/0
  5137 ;;		On exit  : 0/0
  5138 ;;		Unchanged: 0/0
  5139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5141 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5142 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5143 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5144 ;;Total ram usage:        2 bytes
  5145 ;; Hardware stack levels used:    1
  5146 ;; This function calls:
  5147 ;;		Nothing
  5148 ;; This function is called by:
  5149 ;;		_I2C_ISR
  5150 ;; This function uses a non-reentrant model
  5151 ;;
  5152                           
  5153                           
  5154                           ;psect for function _I2C_Stop
  5155  061D                     _I2C_Stop:	
  5156                           
  5157                           ;incstack = 0
  5158                           ; Regs used in _I2C_Stop: [wreg+fsr1l+fsr1h+status,2+status,0]
  5159                           ;I2C_Stop@completion_code stored from wreg
  5160  061D  00F8               	movwf	I2C_Stop@completion_code
  5161                           
  5162                           ;I2C.c: 553: SSP1CON2bits.PEN = 1;
  5163  061E  0024               	movlb	4	; select bank4
  5164  061F  1516               	bsf	22,2	;volatile
  5165                           
  5166                           ;I2C.c: 556: if (p_i2c_current->pTrFlag != (0))
  5167  0620  0873               	movf	_p_i2c_current,w
  5168  0621  3E02               	addlw	2
  5169  0622  0086               	movwf	6
  5170  0623  0187               	clrf	7
  5171  0624  0801               	movf	1,w
  5172  0625  1903               	btfsc	3,2
  5173  0626  2E32               	goto	i1l1689
  5174                           
  5175                           ;I2C.c: 557: {
  5176                           ;I2C.c: 559: *(p_i2c_current->pTrFlag) = completion_code;
  5177  0627  0878               	movf	I2C_Stop@completion_code,w
  5178  0628  00F7               	movwf	??_I2C_Stop
  5179  0629  0873               	movf	_p_i2c_current,w
  5180  062A  3E02               	addlw	2
  5181  062B  0086               	movwf	6
  5182  062C  0187               	clrf	7
  5183  062D  0801               	movf	1,w
  5184  062E  0086               	movwf	6
  5185  062F  0187               	clrf	7
  5186  0630  0877               	movf	??_I2C_Stop,w
  5187  0631  0081               	movwf	1
  5188  0632                     i1l1689:	
  5189                           
  5190                           ;I2C.c: 560: }
  5191                           ;I2C.c: 563: i2c_state = S_MASTER_IDLE;
  5192  0632  0020               	movlb	0	; select bank0
  5193  0633  01D1               	clrf	_i2c_state
  5194  0634  0008               	return
  5195  0635                     __end_of_I2C_Stop:	
  5196                           
  5197                           	psect	text25
  5198  0675                     __ptext25:	
  5199 ;; *************** function _I2C_FunctionComplete *****************
  5200 ;; Defined at:
  5201 ;;		line 532 in file "I2C.c"
  5202 ;; Parameters:    Size  Location     Type
  5203 ;;		None
  5204 ;; Auto vars:     Size  Location     Type
  5205 ;;		None
  5206 ;; Return value:  Size  Location     Type
  5207 ;;                  1    wreg      void 
  5208 ;; Registers used:
  5209 ;;		wreg, status,2, status,0
  5210 ;; Tracked objects:
  5211 ;;		On entry : 0/0
  5212 ;;		On exit  : 0/0
  5213 ;;		Unchanged: 0/0
  5214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5217 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5218 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5219 ;;Total ram usage:        1 bytes
  5220 ;; Hardware stack levels used:    1
  5221 ;; This function calls:
  5222 ;;		Nothing
  5223 ;; This function is called by:
  5224 ;;		_I2C_ISR
  5225 ;; This function uses a non-reentrant model
  5226 ;;
  5227                           
  5228                           
  5229                           ;psect for function _I2C_FunctionComplete
  5230  0675                     _I2C_FunctionComplete:	
  5231                           
  5232                           ;I2C.c: 536: p_i2c_trb_current++;
  5233                           
  5234                           ;incstack = 0
  5235                           ; Regs used in _I2C_FunctionComplete: [wreg+status,2+status,0]
  5236  0675  3004               	movlw	4
  5237  0676  00F7               	movwf	??_I2C_FunctionComplete
  5238  0677  0877               	movf	??_I2C_FunctionComplete,w
  5239  0678  07F4               	addwf	_p_i2c_trb_current,f
  5240                           
  5241                           ;I2C.c: 539: if(--i2c_trb_count == 0)
  5242  0679  3001               	movlw	1
  5243  067A  02F2               	subwf	_i2c_trb_count,f
  5244  067B  1D03               	btfss	3,2
  5245  067C  2E83               	goto	i1l322
  5246                           
  5247                           ;I2C.c: 540: {
  5248                           ;I2C.c: 541: i2c_state = S_MASTER_SEND_STOP;
  5249  067D  3004               	movlw	4
  5250  067E  00F7               	movwf	??_I2C_FunctionComplete
  5251  067F  0877               	movf	??_I2C_FunctionComplete,w
  5252  0680  0020               	movlb	0	; select bank0
  5253  0681  00D1               	movwf	_i2c_state
  5254                           
  5255                           ;I2C.c: 542: }
  5256  0682  0008               	return
  5257  0683                     i1l322:	
  5258                           
  5259                           ;I2C.c: 543: else
  5260                           ;I2C.c: 544: {
  5261                           ;I2C.c: 545: i2c_state = S_MASTER_RESTART;
  5262  0683  0020               	movlb	0	; select bank0
  5263  0684  01D1               	clrf	_i2c_state
  5264  0685  0AD1               	incf	_i2c_state,f
  5265  0686  0008               	return
  5266  0687                     __end_of_I2C_FunctionComplete:	
  5267                           
  5268                           	psect	text26
  5269  069E                     __ptext26:	
  5270 ;; *************** function _I2C_BusCollisionISR *****************
  5271 ;; Defined at:
  5272 ;;		line 697 in file "I2C.c"
  5273 ;; Parameters:    Size  Location     Type
  5274 ;;		None
  5275 ;; Auto vars:     Size  Location     Type
  5276 ;;		None
  5277 ;; Return value:  Size  Location     Type
  5278 ;;                  1    wreg      void 
  5279 ;; Registers used:
  5280 ;;		None
  5281 ;; Tracked objects:
  5282 ;;		On entry : 0/0
  5283 ;;		On exit  : 0/0
  5284 ;;		Unchanged: 0/0
  5285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5290 ;;Total ram usage:        0 bytes
  5291 ;; Hardware stack levels used:    1
  5292 ;; This function calls:
  5293 ;;		Nothing
  5294 ;; This function is called by:
  5295 ;;		_INTERRUPT_InterruptManager
  5296 ;; This function uses a non-reentrant model
  5297 ;;
  5298                           
  5299                           
  5300                           ;psect for function _I2C_BusCollisionISR
  5301  069E                     _I2C_BusCollisionISR:	
  5302                           
  5303                           ;incstack = 0
  5304                           ; Regs used in _I2C_BusCollisionISR: []
  5305  069E  0008               	return
  5306  069F                     __end_of_I2C_BusCollisionISR:	
  5307  007E                     btemp	set	126	;btemp
  5308  007E                     int$flags	set	126
  5309  007E                     wtemp	set	126
  5310  007E                     wtemp0	set	126
  5311  0080                     wtemp1	set	128
  5312  0082                     wtemp2	set	130
  5313  0084                     wtemp3	set	132
  5314  0086                     wtemp4	set	134
  5315  0088                     wtemp5	set	136
  5316  007F                     wtemp6	set	127
  5317  007E                     ttemp	set	126
  5318  007E                     ttemp0	set	126
  5319  0081                     ttemp1	set	129
  5320  0084                     ttemp2	set	132
  5321  0087                     ttemp3	set	135
  5322  007F                     ttemp4	set	127
  5323  007E                     ltemp	set	126
  5324  007E                     ltemp0	set	126
  5325  0082                     ltemp1	set	130
  5326  0086                     ltemp2	set	134
  5327  0080                     ltemp3	set	128


Data Sizes:
    Strings     58
    Constant    40
    Data        0
    BSS         58
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     43      77
    BANK1            80      0      17
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    i2c_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 2
		 -> main@temp(BANK0[1]), LC164_Write@pack(BANK0[2]), LC164_Read@addrlo(BANK0[1]), 

    LC164_Read@trb.pbuffer	PTR unsigned char  size(1) Largest target is 2
		 -> main@temp(BANK0[1]), LC164_Write@pack(BANK0[2]), LC164_Read@addrlo(BANK0[1]), 

    LC164_Write@trb.pbuffer	PTR unsigned char  size(1) Largest target is 2
		 -> main@temp(BANK0[1]), LC164_Write@pack(BANK0[2]), LC164_Read@addrlo(BANK0[1]), 

    i2c_tr_queue.pTrFlag	PTR enum E6868 size(1) Largest target is 1
		 -> LC164_Write@status(BANK0[1]), LC164_Read@status(BANK0[1]), 

    i2c_tr_queue.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> I2C_MasterRead@trBlock(BANK0[4]), I2C_MasterWrite@trBlock(BANK0[4]), LC164_Write@trb(BANK0[8]), LC164_Read@trb(BANK0[8]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 8
		 -> Lcd_Write_Integer@buf(BANK0[8]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 8
		 -> Lcd_Write_Integer@buf(BANK0[8]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 8
		 -> Lcd_Write_Integer@buf(BANK0[8]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 8
		 -> Lcd_Write_Integer@buf(BANK0[8]), 

    I2C_MasterWriteTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 2
		 -> LC164_Write@pack(BANK0[2]), LC164_Read@addrlo(BANK0[1]), 

    I2C_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 2
		 -> main@temp(BANK0[1]), LC164_Write@pack(BANK0[2]), LC164_Read@addrlo(BANK0[1]), 

    I2C_MasterWriteTRBBuild@ptrb	PTR struct . size(1) Largest target is 10
		 -> I2C_MasterWrite@trBlock(BANK0[4]), LC164_Write@trb(BANK0[8]), LC164_Read@trb(BANK0[8]), 

    I2C_MasterReadTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> main@temp(BANK0[1]), 

    I2C_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 2
		 -> main@temp(BANK0[1]), LC164_Write@pack(BANK0[2]), LC164_Read@addrlo(BANK0[1]), 

    I2C_MasterReadTRBBuild@ptrb	PTR struct . size(1) Largest target is 10
		 -> I2C_MasterRead@trBlock(BANK0[4]), LC164_Read@trb(BANK0[8]), 

    i2c_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 2
		 -> main@temp(BANK0[1]), LC164_Write@pack(BANK0[2]), LC164_Read@addrlo(BANK0[1]), 

    i2c_object.pTrTail.pTrFlag	PTR enum E6868 size(1) Largest target is 1
		 -> LC164_Write@status(BANK0[1]), LC164_Read@status(BANK0[1]), 

    i2c_object.pTrTail.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> I2C_MasterRead@trBlock(BANK0[4]), I2C_MasterWrite@trBlock(BANK0[4]), LC164_Write@trb(BANK0[8]), LC164_Read@trb(BANK0[8]), 

    I2C_MasterTRBInsert@ptrb_list	PTR struct . size(1) Largest target is 10
		 -> I2C_MasterRead@trBlock(BANK0[4]), I2C_MasterWrite@trBlock(BANK0[4]), LC164_Write@trb(BANK0[8]), LC164_Read@trb(BANK0[8]), 

    I2C_MasterTRBInsert@pflag	PTR enum E6868 size(1) Largest target is 1
		 -> LC164_Write@status(BANK0[1]), LC164_Read@status(BANK0[1]), 

    F6982.pbuffer	PTR unsigned char  size(1) Largest target is 2
		 -> main@temp(BANK0[1]), LC164_Write@pack(BANK0[2]), LC164_Read@addrlo(BANK0[1]), 

    F6977.pbuffer	PTR unsigned char  size(1) Largest target is 2
		 -> main@temp(BANK0[1]), LC164_Write@pack(BANK0[2]), LC164_Read@addrlo(BANK0[1]), 

    I2C_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 2
		 -> I2C_ISR@i2c_address(COMMON[2]), NULL(NULL[0]), main@temp(BANK0[1]), LC164_Write@pack(BANK0[2]), 
		 -> LC164_Read@addrlo(BANK0[1]), 

    S98$pbuffer	PTR unsigned char  size(1) Largest target is 2
		 -> main@temp(BANK0[1]), LC164_Write@pack(BANK0[2]), LC164_Read@addrlo(BANK0[1]), 

    p_i2c_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 2
		 -> main@temp(BANK0[1]), LC164_Write@pack(BANK0[2]), LC164_Read@addrlo(BANK0[1]), 

    p_i2c_trb_current	PTR struct . size(1) Largest target is 10
		 -> I2C_MasterRead@trBlock(BANK0[4]), I2C_MasterWrite@trBlock(BANK0[4]), NULL(NULL[0]), LC164_Write@trb(BANK0[8]), 
		 -> LC164_Read@trb(BANK0[8]), 

    i2c_object.pTrHead.pTrFlag	PTR enum E6868 size(1) Largest target is 1
		 -> LC164_Write@status(BANK0[1]), LC164_Read@status(BANK0[1]), 

    i2c_object.pTrHead.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> I2C_MasterRead@trBlock(BANK0[4]), I2C_MasterWrite@trBlock(BANK0[4]), LC164_Write@trb(BANK0[8]), LC164_Read@trb(BANK0[8]), 

    S415$pTrFlag	PTR enum E6868 size(1) Largest target is 1
		 -> LC164_Write@status(BANK0[1]), LC164_Read@status(BANK0[1]), 

    p_i2c_current.pTrFlag	PTR enum E6868 size(1) Largest target is 1
		 -> LC164_Write@status(BANK0[1]), LC164_Read@status(BANK0[1]), 

    S415$ptrb_list	PTR struct . size(1) Largest target is 10
		 -> I2C_MasterRead@trBlock(BANK0[4]), I2C_MasterWrite@trBlock(BANK0[4]), LC164_Write@trb(BANK0[8]), LC164_Read@trb(BANK0[8]), 

    p_i2c_current.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> I2C_MasterRead@trBlock(BANK0[4]), I2C_MasterWrite@trBlock(BANK0[4]), LC164_Write@trb(BANK0[8]), LC164_Read@trb(BANK0[8]), 

    p_i2c_current	PTR struct . size(1) Largest target is 5
		 -> i2c_tr_queue(BANK0[3]), NULL(NULL[0]), 

    S426$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c_tr_queue(BANK0[3]), 

    i2c_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c_tr_queue(BANK0[3]), 

    S426$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c_tr_queue(BANK0[3]), 

    i2c_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c_tr_queue(BANK0[3]), 

    LC164_Read@pData	PTR unsigned char  size(1) Largest target is 1
		 -> main@temp(BANK0[1]), 

    sp__ftoa	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 8
		 -> Lcd_Write_Integer@buf(BANK0[8]), 

    Lcd_Write_String@a	PTR const unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK1[17]), STR_5(CODE[11]), STR_4(CODE[6]), STR_3(CODE[7]), 
		 -> STR_2(CODE[17]), STR_1(CODE[6]), Lcd_Write_Integer@buf(BANK0[8]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_I2C_ISR
    _I2C_ISR->_I2C_Stop

Critical Paths under _main in BANK0

    _main->_Lcd_Write_Integer
    _initmain->_Lcd_Write_String
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _Lcd_Write_Integer->_Lcd_Write_String
    _itoa->_utoa
    _utoa->___lwdiv
    _Lcd_Write_String->_itoa
    _Lcd_Write_Char->_Lcd_Port
    _LC164_Write->_I2C_MasterWriteTRBBuild
    _LC164_Read->_I2C_MasterReadTRBBuild
    _LC164_Read->_I2C_MasterWriteTRBBuild

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   10292
                                             39 BANK0      4     4      0
                         _LC164_Read
                        _LC164_Write
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                  _Lcd_Write_Integer
                   _Lcd_Write_String
                           _initmain
 ---------------------------------------------------------------------------------
 (1) _initmain                                             3     3      0    2307
                                             29 BANK0      3     3      0
                     _I2C_Initialize
                 _I2C_PIN_Initialize
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                        _internal_16
 ---------------------------------------------------------------------------------
 (2) _internal_16                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       7     6      1    1000
                                              4 BANK0      7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0     279
                                              4 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     155
                                              1 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _I2C_PIN_Initialize                                   1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_Integer                                   10     8      2    2441
                                             29 BANK0     10     8      2
                   _Lcd_Write_String
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 7     3      4    1386
                                             17 BANK0      7     3      4
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     5      4    1074
                                              8 BANK0      9     5      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     265
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     374
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     5     3      2     839
                                             24 BANK0      5     3      2
                     _Lcd_Write_Char
                               _itoa (ARG)
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       4     4      0     254
                                              1 BANK0      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0     124
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _LC164_Write                                          7     6      1    1469
                                              7 BANK0      7     6      1
                _I2C_MasterTRBInsert
            _I2C_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (1) _LC164_Read                                           5     4      1    1948
                                              7 BANK0      5     4      1
             _I2C_MasterReadTRBBuild
                _I2C_MasterTRBInsert
            _I2C_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (2) _I2C_MasterWriteTRBBuild                              7     3      4     690
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _I2C_MasterTRBInsert                                  4     2      2     556
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _I2C_MasterReadTRBBuild                               7     3      4     526
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           1     1      0      22
                                              6 COMMON     1     1      0
                _I2C_BusCollisionISR
                            _I2C_ISR
 ---------------------------------------------------------------------------------
 (6) _I2C_ISR                                              4     4      0      22
                                              2 COMMON     4     4      0
               _I2C_FunctionComplete
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (7) _I2C_Stop                                             2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (7) _I2C_FunctionComplete                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _I2C_BusCollisionISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LC164_Read
     _I2C_MasterReadTRBBuild
     _I2C_MasterTRBInsert
     _I2C_MasterWriteTRBBuild
   _LC164_Write
     _I2C_MasterTRBInsert
     _I2C_MasterWriteTRBBuild
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Integer
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
       _itoa (ARG)
         _utoa
           ___lwdiv
           ___lwmod
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
     _itoa (ARG)
       _utoa
         ___lwdiv
         ___lwmod
   _initmain
     _I2C_Initialize
     _I2C_PIN_Initialize
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Init
       _Lcd_Cmd
         _Lcd_Port
       _Lcd_Port
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
       _itoa (ARG)
         _utoa
           ___lwdiv
           ___lwmod
     _internal_16

 _INTERRUPT_InterruptManager (ROOT)
   _I2C_BusCollisionISR
   _I2C_ISR
     _I2C_FunctionComplete
     _I2C_Stop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2B      4D       5       96.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      11       7       21.3%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      6C      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      6C      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Mon Apr 22 14:05:49 2019

                   LC164_Read@status 002B                                    pc 0002  
              I2C_ISR@i2c_bytes_left 0070                  __size_of_LC164_Read 003C  
                        __CFG_CP$OFF 0000                                   l60 0645  
                                 l62 064A                                   l56 063B  
                                 l58 0640              ?_I2C_MasterReadTRBBuild 0020  
                                l700 02E5                                  _GIE 005F  
                                _RD2 007A                                  _RD3 007B  
                                _RD4 007C                                  _RD5 007D  
                                _RD6 007E                                  _RD7 007F  
                                u725 04E1                                  u815 0523  
                                u745 04EB                                  u825 052A  
                                u755 04F5                                  u765 04FD  
                                u795 0514                 __size_of_LC164_Write 0037  
                    __end_of_I2C_ISR 0177                         __CFG_BORV$LO 0000  
                                wreg 0009                         __CFG_IESO$ON 0000  
                       __CFG_LVP$OFF 0000                                 l2047 03FD  
                               l2151 017A                                 l2073 05D4  
                               l1515 029F                                 l1621 03CF  
                               l1453 04FC                                 l1445 04DE  
                               l1525 02BD                                 l2165 01B6  
                               l1615 03C3                                 l1447 04EA  
                               l1471 051D                                 l1625 03D6  
                               l1705 0492                                 l1457 0505  
                               l1619 03CA                                 l1475 0529  
                               l2187 0216                                 l1717 04C9  
                               l1469 0511                                 l1479 0532  
                               l1595 05A3                                 l1991 063C  
                               l1995 0641                                 l1999 0646  
                               STR_1 0293                                 STR_2 025F  
                               STR_3 0286                                 STR_4 028D  
                               STR_5 027B                                 STR_6 0270  
                               u1040 049C                                 u1070 04D3  
                               _LATA 010C                                 u1430 034B  
                               _LATB 010D                                 u1415 040A  
                               _LATC 010E                                 u1507 022C  
                               u1517 0438                                 u1375 0547  
                               u1527 0458                                 u1537 0356  
             ??_I2C_FunctionComplete 0077                                 u1547 0364  
                               u1395 03E8                                 u1557 0372  
                               u1477 01AE                                 u1567 0659  
                               u1487 01CC                                 u1577 0552  
                               u1497 020B                                 u1587 055E  
                               _SCS0 04C8                                 _SCS1 04C9  
                               _WPUA 020C                                 _WPUB 020D  
                               _WPUC 020E                                 _WPUE 0210  
                       __CFG_WRT$OFF 0000                    ?_Lcd_Write_String 0038  
                               _main 0177                                 _itoa 058B  
                               fsr0h 0005                                 fsr1h 0007  
                               fsr0l 0004                                 indf0 0000  
                               indf1 0001                                 fsr1l 0006  
                               btemp 007E                                 _utoa 0299  
                   __end_of_I2C_Stop 0635                                 ltemp 007E  
                               start 0020                                 ttemp 007E  
                 ??_Lcd_Write_String 003A                                 wtemp 007E  
                    __end_of_Lcd_Cmd 0661       __end_of_I2C_MasterReadTRBBuild 058B  
         I2C_MasterReadTRBBuild@ptrb 0026                    _Lcd_Write_Integer 0661  
                              ?_main 0077                                ?_itoa 0031  
                      __CFG_WDTE$OFF 0000                                ?_utoa 0028  
                      _i2c_trb_count 0072                                _IRCF0 04CB  
                              _IRCF1 04CC                                _IRCF2 04CD  
                              _IRCF3 04CE                   ?_Lcd_Write_Integer 003D  
                    __end_of___lwdiv 050A                                i1l310 0125  
                              i1l311 0133                                i1l303 00F3  
                              i1l322 0683                                i1l315 0158  
                              i1l307 0112                                i1l245 0013  
                              i1l281 004F                                i1l249 001B  
                    __end_of___lwmod 0537                                i1l292 00A5  
                              i1l293 00B1                                i1l286 007A  
                              i1l287 0082              __size_of_Lcd_Set_Cursor 0044  
                              _TRISA 008C                                _TRISB 008D  
                              _TRISC 008E                                _TRISD 008F  
                              _TRISE 0090                       __CFG_FCMEN$OFF 0000  
                    __end_of_dpowers 025F                  ??_Lcd_Write_Integer 003F  
                     __CFG_BOREN$OFF 0000                                ltemp0 007E  
                              ltemp1 0082                                ltemp2 0086  
                              ltemp3 0080                                ttemp0 007E  
                              ttemp1 0081                                ttemp2 0084  
                              ttemp3 0087                                ttemp4 007F  
                              utoa@c 002F                                utoa@v 002D  
                              status 0003                                wtemp0 007E  
                              wtemp1 0080                                wtemp2 0082  
                              wtemp3 0084                                wtemp4 0086  
                              wtemp5 0088                                wtemp6 007F  
                       ?_internal_16 0077             I2C_MasterTRBInsert@count 0023  
                   __end_of_Lcd_Init 0396             I2C_MasterTRBInsert@pflag 0021  
                         _i2c_object 004B                     __end_of_Lcd_Port 064C  
                     __CFG_MCLRE$OFF 0000                      __initialization 0022  
                       __end_of_main 0237                         __end_of_itoa 05B1  
                       __end_of_utoa 02FB            __end_of_Lcd_Write_Integer 0675  
                          ??_I2C_ISR 0079                       __CFG_LPBOR$OFF 0000  
        ?_INTERRUPT_InterruptManager 0077                               ??_main 0047  
                             ??_itoa 0035                               ??_utoa 002C  
                 __size_of_Lcd_Clear 0008                  _I2C_MasterTRBInsert 0396  
                     __CFG_PLLEN$OFF 0000          I2C_MasterReadTRBBuild@pdata 0020  
           ?_I2C_MasterWriteTRBBuild 0020                         ??_LC164_Read 0028  
                             i1S2215 0605                       __CFG_ZCDDIS$ON 0000  
                             _ANSELA 018C                               _ANSELB 018D  
                             _ANSELC 018E                               _ANSELD 018F  
                             i1l1805 00CE                               i1l1831 00ED  
                             i1l1825 00E2                               i1l1773 006D  
                             i1l1863 0141                               i1l1847 011A  
                             i1l1839 0101                               i1l1791 009F  
                             i1l1689 0632                               i1l1785 008E  
                             i1l1875 015B                               i1l1859 013A  
                             i1l1877 015E                               i1l1885 016B  
                             i1l1879 0162                            ??_Lcd_Cmd 0021  
                             _SPLLEN 04CF              __size_of_Lcd_Write_Char 002C  
               ?_I2C_MasterTRBInsert 0020                       __CFG_PWRTE$OFF 0000  
                     __CFG_STVREN$ON 0000                            ??___lwdiv 0024  
                          ??___lwmod 0024        I2C_MasterReadTRBBuild@address 0022  
                 __end_of_LC164_Read 049E                     __end_of_initmain 0462  
            __size_of_I2C_Initialize 0018              I2C_PIN_Initialize@state 0020  
                             itoa@cp 0036                            ?_I2C_Stop 0077  
                    Lcd_Set_Cursor@a 0027                      Lcd_Set_Cursor@b 0024  
                    Lcd_Set_Cursor@y 0029                      Lcd_Set_Cursor@z 0028  
            __end_of__initialization 0038                ??_I2C_MasterTRBInsert 0022  
                  __end_of_Lcd_Clear 0698                       __pcstackCOMMON 0077  
         __size_of_Lcd_Write_Integer 0014      __end_of_I2C_MasterWriteTRBBuild 05D1  
                     _Lcd_Set_Cursor 03DB                       _OPTION_REGbits 0095  
                         ??_I2C_Stop 0077                            ?_Lcd_Init 0077  
                          ?_Lcd_Port 0077           __end_of_I2C_PIN_Initialize 034D  
                         __pbssBANK0 004B                           __pbssBANK1 00A0  
       I2C_MasterReadTRBBuild@length 0021                       LC164_Write@trb 005A  
       __size_of_I2C_BusCollisionISR 0001                           __pmaintext 0177  
               __size_of_internal_16 0009                      __CFG_PPS1WAY$ON 0000  
                         __pintentry 0004                              _I2C_ISR 003C  
                      ??_LC164_Write 0028            __size_of_Lcd_Write_String 001C  
             __end_of_Lcd_Set_Cursor 041F          I2C_MasterWriteTRBBuild@ptrb 0026  
            I2C_Stop@completion_code 0078                           ??_Lcd_Init 0024  
                            _SSP1ADD 0212                              _PPSLOCK 0E0F  
                            _SSP1BUF 0211                           ??_Lcd_Port 0020  
                     _Lcd_Write_Char 0537                              _Lcd_Cmd 064C  
      __size_of_I2C_FunctionComplete 0012                            ?_initmain 0077  
                            ___lwdiv 04D5                              ___lwmod 050A  
                     _I2C_Initialize 05ED                      ?_Lcd_Set_Cursor 0024  
                            __ptext1 041F                              __ptext2 0687  
                            __ptext3 03DB                              __ptext4 034D  
                            __ptext5 0690                              __ptext6 064C  
                            __ptext7 02FB                              __ptext8 05ED  
                            __ptext9 0661                              _dpowers 0237  
                __end_of_LC164_Write 04D5                              clrloop0 0699  
             __end_of_Lcd_Write_Char 0563                 end_of_initialization 0038  
                            ftoa@buf 00A0                              itoa@buf 0037  
                            itoa@val 0031                           ??_initmain 003D  
   __size_of_I2C_MasterWriteTRBBuild 0020                            Lcd_Port@a 0020  
             __end_of_I2C_Initialize 0605                         __pstringtext 0237  
                            utoa@buf 0030                              utoa@val 0028  
                 I2C_ISR@i2c_address 0075                      LC164_Read@pData 0027  
                   __CFG_FOSC$INTOSC 0000                    __size_of_I2C_Stop 0018  
                    ?_Lcd_Write_Char 0077     I2C_ISR@i2c_10bit_address_restart 0050  
                  Lcd_Write_String@a 0038                    Lcd_Write_String@i 003B  
           ??_I2C_MasterReadTRBBuild 0024                    _p_i2c_trb_current 0074  
                          _Lcd_Clear 0690                    LC164_Write@addrlo 002A  
                    ?_I2C_Initialize 0077                     _Lcd_Write_String 05D1  
                        _LC164_Write 049E                         _i2c_tr_queue 006A  
                  LC164_Write@status 002D                  _I2C_BusCollisionISR 069E  
                start_initialization 0022                            _i2c_state 0051  
        __end_of_I2C_MasterTRBInsert 03DB                    __size_of_Lcd_Init 0049  
                  __size_of_Lcd_Port 0017                 ?_I2C_BusCollisionISR 0077  
                         ?_Lcd_Clear 0077                   _I2C_PIN_Initialize 02FB  
                           ?_I2C_ISR 0077                      Lcd_Write_Char@a 0024  
                    Lcd_Write_Char@y 0023                  ?_I2C_PIN_Initialize 0077  
                      LC164_Read@trb 0052                          __pbssCOMMON 0070  
                          ___latbits 0002                        __pcstackBANK0 0020  
                    LC164_Write@data 0027                      LC164_Write@pack 002B  
                           ?_Lcd_Cmd 0077                 ??_I2C_PIN_Initialize 0020  
                      ??_internal_16 0020              _I2C_MasterWriteTRBBuild 05B1  
              ??_I2C_BusCollisionISR 0077                    __size_of_initmain 0043  
                   ___lwdiv@dividend 0022      __size_of_I2C_MasterReadTRBBuild 0028  
                   ??_Lcd_Set_Cursor 0025                             ?___lwdiv 0020  
                           ?___lwmod 0020         __end_of_I2C_FunctionComplete 0687  
       ??_INTERRUPT_InterruptManager 007D                            __pswtext1 0605  
                           _I2C_Stop 061D         I2C_MasterWriteTRBBuild@pdata 0020  
                   ___lwdiv@quotient 0025                        _p_i2c_current 0073  
                          clear_ram0 0698                             _PIE1bits 0091  
                           _PIE2bits 0092  __size_of_INTERRUPT_InterruptManager 001C  
                           Lcd_Cmd@a 0023                             _PIR1bits 0011  
                           _PIR2bits 0012                          ??_Lcd_Clear 0024  
                           _SSP1CON1 0215                             _SSP1CON3 0217  
                __end_of_internal_16 0690                  I2C_ISR@pi2c_buf_ptr 0071  
                           _SSP1STAT 0214                     __size_of_I2C_ISR 013B  
                   ??_Lcd_Write_Char 0021               _I2C_MasterReadTRBBuild 0563  
                           _Lcd_Init 034D                             _Lcd_Port 0635  
                         _LC164_Read 0462            ??_I2C_MasterWriteTRBBuild 0024  
           __end_of_Lcd_Write_String 05ED                     __size_of_Lcd_Cmd 0015  
                   ??_I2C_Initialize 0020                     __size_of___lwdiv 0035  
                       ?_LC164_Write 0027                     __size_of___lwmod 002D  
                    ___lwdiv@divisor 0020                      ___lwdiv@counter 0027  
                           __ptext10 058B                             __ptext11 0299  
                           __ptext20 0396                             __ptext12 050A  
                           __ptext21 0563                             __ptext13 04D5  
                           __ptext14 05D1                             __ptext23 003C  
                           __ptext15 0537                             __ptext24 061D  
                           __ptext16 0635                             __ptext25 0675  
                           __ptext17 049E                             __ptext26 069E  
                           __ptext18 0462                             __ptext19 05B1  
                       _SSP1CON1bits 0215                         _SSP1CON2bits 0216  
       I2C_MasterTRBInsert@ptrb_list 0020                        __size_of_main 00C0  
               _I2C_FunctionComplete 0675                        _SSPDATPPSbits 0E21  
                      __size_of_itoa 0026                             _initmain 041F  
                      __size_of_utoa 0062                          _internal_16 0687  
                         _RC4PPSbits 0EA4                        _SSPCLKPPSbits 0E20  
                           int$flags 007E                           _RC5PPSbits 0EA5  
               Lcd_Write_Integer@buf 003F                           _RC6PPSbits 0EA6  
 __end_of_INTERRUPT_InterruptManager 0020           _INTERRUPT_InterruptManager 0004  
                           main@temp 004A                           _INTCONbits 000B  
                           itoa@base 0033                          ?_LC164_Read 0027  
                 Lcd_Write_Char@temp 0022                             intlevel1 0000  
              ?_I2C_FunctionComplete 0077                     ___lwmod@dividend 0022  
              I2C_MasterRead@trBlock 0062                    __CFG_CLKOUTEN$OFF 0000  
       __size_of_I2C_MasterTRBInsert 0045                          _PPSLOCKbits 0E0F  
                 Lcd_Set_Cursor@temp 002A                             utoa@base 002A  
             I2C_MasterWrite@trBlock 0066                      ___lwmod@divisor 0020  
                    ___lwmod@counter 0025                   Lcd_Write_Integer@v 003D  
        __end_of_I2C_BusCollisionISR 069F       I2C_MasterWriteTRBBuild@address 0022  
        __size_of_I2C_PIN_Initialize 0052                     LC164_Read@addrlo 002A  
      I2C_MasterWriteTRBBuild@length 0021  
