

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Jul 14 11:28:47 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1719
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	stringtext3,global,class=STRCODE,delta=2
     9                           	psect	stringtext4,global,class=STRCODE,delta=2
    10                           	psect	stringtext5,global,class=STRCODE,delta=2
    11                           	psect	stringtext6,global,class=STRCODE,delta=2
    12                           	psect	stringtext7,global,class=STRCODE,delta=2
    13                           	psect	stringtext8,global,class=STRCODE,delta=2
    14                           	psect	stringtext9,global,class=STRCODE,delta=2
    15                           	psect	stringtext10,global,class=STRCODE,delta=2
    16                           	psect	stringtext11,global,class=STRCODE,delta=2
    17                           	psect	cinit,global,class=CODE,merge=1,delta=2
    18                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    20                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    21                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    22                           	psect	inittext,global,class=CODE,delta=2
    23                           	psect	clrtext,global,class=CODE,delta=2
    24                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    25                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    26                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    27                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    28                           	psect	text1,local,class=CODE,merge=1,delta=2
    29                           	psect	text2,local,class=CODE,merge=1,delta=2
    30                           	psect	text3,local,class=CODE,merge=1,delta=2
    31                           	psect	text4,local,class=CODE,merge=1,delta=2
    32                           	psect	text5,local,class=CODE,merge=1,delta=2
    33                           	psect	text6,local,class=CODE,merge=1,delta=2
    34                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text8,local,class=CODE,merge=1,delta=2
    36                           	psect	text9,local,class=CODE,merge=1,delta=2
    37                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text11,local,class=CODE,merge=1,delta=2
    39                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text18,local,class=CODE,merge=1,delta=2
    46                           	psect	text19,local,class=CODE,merge=1,delta=2
    47                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    49                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    50                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    51                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    52                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    53                           	psect	text26,local,class=CODE,merge=1,delta=2
    54                           	psect	text27,local,class=CODE,merge=1,delta=2
    55                           	psect	text28,local,class=CODE,merge=1,delta=2
    56                           	psect	text29,local,class=CODE,merge=1,delta=2
    57                           	psect	text30,local,class=CODE,merge=1,delta=2
    58                           	psect	text31,local,class=CODE,merge=1,delta=2
    59                           	psect	text32,local,class=CODE,merge=1,delta=2
    60                           	psect	text33,local,class=CODE,merge=1,delta=2
    61                           	psect	text34,local,class=CODE,merge=1,delta=2
    62                           	psect	text35,local,class=CODE,merge=1,delta=2
    63                           	psect	text36,local,class=CODE,merge=1,delta=2
    64                           	psect	text37,local,class=CODE,merge=1,delta=2
    65                           	psect	text38,local,class=CODE,merge=1,delta=2,group=2
    66                           	psect	text39,local,class=CODE,merge=1,delta=2
    67                           	psect	text40,local,class=CODE,merge=1,delta=2
    68                           	psect	text41,local,class=CODE,merge=1,delta=2
    69                           	psect	text42,local,class=CODE,merge=1,delta=2
    70                           	dabs	1,0x7E,2
    71  0000                     
    72                           ; Version 2.05
    73                           ; Generated 20/12/2018 GMT
    74                           ; 
    75                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    76                           ; All rights reserved.
    77                           ; 
    78                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    79                           ; 
    80                           ; Redistribution and use in source and binary forms, with or without modification, are
    81                           ; permitted provided that the following conditions are met:
    82                           ; 
    83                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    84                           ;        conditions and the following disclaimer.
    85                           ; 
    86                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    87                           ;        of conditions and the following disclaimer in the documentation and/or other
    88                           ;        materials provided with the distribution.
    89                           ; 
    90                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    91                           ;        software without specific prior written permission.
    92                           ; 
    93                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    94                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    95                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    96                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    97                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    98                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    99                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   100                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   101                           ; 
   102                           ; 
   103                           ; Code-generator required, PIC16F1719 Definitions
   104                           ; 
   105                           ; SFR Addresses
   106  0000                     	;# 
   107  0001                     	;# 
   108  0002                     	;# 
   109  0003                     	;# 
   110  0004                     	;# 
   111  0005                     	;# 
   112  0006                     	;# 
   113  0007                     	;# 
   114  0008                     	;# 
   115  0009                     	;# 
   116  000A                     	;# 
   117  000B                     	;# 
   118  000C                     	;# 
   119  000D                     	;# 
   120  000E                     	;# 
   121  000F                     	;# 
   122  0010                     	;# 
   123  0011                     	;# 
   124  0012                     	;# 
   125  0013                     	;# 
   126  0015                     	;# 
   127  0016                     	;# 
   128  0016                     	;# 
   129  0017                     	;# 
   130  0018                     	;# 
   131  0019                     	;# 
   132  001A                     	;# 
   133  001B                     	;# 
   134  001C                     	;# 
   135  008C                     	;# 
   136  008D                     	;# 
   137  008E                     	;# 
   138  008F                     	;# 
   139  0090                     	;# 
   140  0091                     	;# 
   141  0092                     	;# 
   142  0093                     	;# 
   143  0095                     	;# 
   144  0096                     	;# 
   145  0097                     	;# 
   146  0098                     	;# 
   147  0099                     	;# 
   148  009A                     	;# 
   149  009B                     	;# 
   150  009B                     	;# 
   151  009C                     	;# 
   152  009D                     	;# 
   153  009E                     	;# 
   154  009F                     	;# 
   155  010C                     	;# 
   156  010D                     	;# 
   157  010E                     	;# 
   158  010F                     	;# 
   159  0110                     	;# 
   160  0111                     	;# 
   161  0112                     	;# 
   162  0113                     	;# 
   163  0114                     	;# 
   164  0115                     	;# 
   165  0116                     	;# 
   166  0117                     	;# 
   167  0118                     	;# 
   168  0119                     	;# 
   169  011A                     	;# 
   170  011B                     	;# 
   171  011B                     	;# 
   172  011C                     	;# 
   173  018C                     	;# 
   174  018D                     	;# 
   175  018E                     	;# 
   176  018F                     	;# 
   177  0190                     	;# 
   178  0191                     	;# 
   179  0191                     	;# 
   180  0192                     	;# 
   181  0193                     	;# 
   182  0193                     	;# 
   183  0194                     	;# 
   184  0195                     	;# 
   185  0196                     	;# 
   186  0197                     	;# 
   187  0199                     	;# 
   188  0199                     	;# 
   189  0199                     	;# 
   190  019A                     	;# 
   191  019A                     	;# 
   192  019A                     	;# 
   193  019B                     	;# 
   194  019B                     	;# 
   195  019B                     	;# 
   196  019B                     	;# 
   197  019B                     	;# 
   198  019C                     	;# 
   199  019C                     	;# 
   200  019C                     	;# 
   201  019D                     	;# 
   202  019D                     	;# 
   203  019D                     	;# 
   204  019E                     	;# 
   205  019E                     	;# 
   206  019E                     	;# 
   207  019F                     	;# 
   208  019F                     	;# 
   209  019F                     	;# 
   210  019F                     	;# 
   211  019F                     	;# 
   212  020C                     	;# 
   213  020D                     	;# 
   214  020E                     	;# 
   215  020F                     	;# 
   216  0210                     	;# 
   217  0211                     	;# 
   218  0211                     	;# 
   219  0212                     	;# 
   220  0212                     	;# 
   221  0213                     	;# 
   222  0213                     	;# 
   223  0214                     	;# 
   224  0214                     	;# 
   225  0215                     	;# 
   226  0215                     	;# 
   227  0215                     	;# 
   228  0215                     	;# 
   229  0216                     	;# 
   230  0216                     	;# 
   231  0217                     	;# 
   232  0217                     	;# 
   233  028C                     	;# 
   234  028D                     	;# 
   235  028E                     	;# 
   236  028F                     	;# 
   237  0290                     	;# 
   238  0291                     	;# 
   239  0291                     	;# 
   240  0292                     	;# 
   241  0293                     	;# 
   242  0293                     	;# 
   243  0298                     	;# 
   244  0298                     	;# 
   245  0299                     	;# 
   246  029A                     	;# 
   247  029A                     	;# 
   248  029E                     	;# 
   249  030C                     	;# 
   250  030D                     	;# 
   251  030E                     	;# 
   252  030F                     	;# 
   253  0310                     	;# 
   254  038C                     	;# 
   255  038D                     	;# 
   256  038E                     	;# 
   257  038F                     	;# 
   258  0390                     	;# 
   259  0391                     	;# 
   260  0392                     	;# 
   261  0393                     	;# 
   262  0394                     	;# 
   263  0395                     	;# 
   264  0396                     	;# 
   265  0397                     	;# 
   266  0398                     	;# 
   267  0399                     	;# 
   268  039D                     	;# 
   269  039E                     	;# 
   270  039F                     	;# 
   271  0415                     	;# 
   272  0416                     	;# 
   273  0417                     	;# 
   274  041C                     	;# 
   275  041D                     	;# 
   276  041E                     	;# 
   277  0498                     	;# 
   278  0498                     	;# 
   279  0499                     	;# 
   280  049A                     	;# 
   281  049B                     	;# 
   282  049B                     	;# 
   283  049C                     	;# 
   284  049D                     	;# 
   285  049E                     	;# 
   286  049F                     	;# 
   287  0511                     	;# 
   288  0515                     	;# 
   289  0617                     	;# 
   290  0618                     	;# 
   291  0619                     	;# 
   292  0619                     	;# 
   293  061A                     	;# 
   294  061B                     	;# 
   295  061C                     	;# 
   296  061C                     	;# 
   297  0691                     	;# 
   298  0692                     	;# 
   299  0693                     	;# 
   300  0694                     	;# 
   301  0695                     	;# 
   302  0696                     	;# 
   303  0697                     	;# 
   304  0698                     	;# 
   305  0699                     	;# 
   306  069A                     	;# 
   307  069B                     	;# 
   308  069C                     	;# 
   309  069D                     	;# 
   310  069E                     	;# 
   311  069F                     	;# 
   312  0E0F                     	;# 
   313  0E10                     	;# 
   314  0E11                     	;# 
   315  0E12                     	;# 
   316  0E13                     	;# 
   317  0E14                     	;# 
   318  0E15                     	;# 
   319  0E17                     	;# 
   320  0E20                     	;# 
   321  0E21                     	;# 
   322  0E22                     	;# 
   323  0E24                     	;# 
   324  0E25                     	;# 
   325  0E28                     	;# 
   326  0E29                     	;# 
   327  0E2A                     	;# 
   328  0E2B                     	;# 
   329  0E90                     	;# 
   330  0E91                     	;# 
   331  0E92                     	;# 
   332  0E93                     	;# 
   333  0E94                     	;# 
   334  0E95                     	;# 
   335  0E96                     	;# 
   336  0E97                     	;# 
   337  0E98                     	;# 
   338  0E99                     	;# 
   339  0E9A                     	;# 
   340  0E9B                     	;# 
   341  0E9C                     	;# 
   342  0E9D                     	;# 
   343  0E9E                     	;# 
   344  0E9F                     	;# 
   345  0EA0                     	;# 
   346  0EA1                     	;# 
   347  0EA2                     	;# 
   348  0EA3                     	;# 
   349  0EA4                     	;# 
   350  0EA5                     	;# 
   351  0EA6                     	;# 
   352  0EA7                     	;# 
   353  0EA8                     	;# 
   354  0EA9                     	;# 
   355  0EAA                     	;# 
   356  0EAB                     	;# 
   357  0EAC                     	;# 
   358  0EAD                     	;# 
   359  0EAE                     	;# 
   360  0EAF                     	;# 
   361  0EB0                     	;# 
   362  0EB1                     	;# 
   363  0EB2                     	;# 
   364  0F0F                     	;# 
   365  0F10                     	;# 
   366  0F11                     	;# 
   367  0F12                     	;# 
   368  0F13                     	;# 
   369  0F14                     	;# 
   370  0F15                     	;# 
   371  0F16                     	;# 
   372  0F17                     	;# 
   373  0F18                     	;# 
   374  0F19                     	;# 
   375  0F1A                     	;# 
   376  0F1B                     	;# 
   377  0F1C                     	;# 
   378  0F1D                     	;# 
   379  0F1E                     	;# 
   380  0F1F                     	;# 
   381  0F20                     	;# 
   382  0F21                     	;# 
   383  0F22                     	;# 
   384  0F23                     	;# 
   385  0F24                     	;# 
   386  0F25                     	;# 
   387  0F26                     	;# 
   388  0F27                     	;# 
   389  0F28                     	;# 
   390  0F29                     	;# 
   391  0F2A                     	;# 
   392  0F2B                     	;# 
   393  0F2C                     	;# 
   394  0F2D                     	;# 
   395  0F2E                     	;# 
   396  0F2F                     	;# 
   397  0F30                     	;# 
   398  0F31                     	;# 
   399  0F32                     	;# 
   400  0F33                     	;# 
   401  0F34                     	;# 
   402  0F35                     	;# 
   403  0F36                     	;# 
   404  0F37                     	;# 
   405  0FE4                     	;# 
   406  0FE5                     	;# 
   407  0FE6                     	;# 
   408  0FE7                     	;# 
   409  0FE8                     	;# 
   410  0FE9                     	;# 
   411  0FEA                     	;# 
   412  0FEB                     	;# 
   413  0FED                     	;# 
   414  0FEE                     	;# 
   415  0FEF                     	;# 
   416  0000                     	;# 
   417  0001                     	;# 
   418  0002                     	;# 
   419  0003                     	;# 
   420  0004                     	;# 
   421  0005                     	;# 
   422  0006                     	;# 
   423  0007                     	;# 
   424  0008                     	;# 
   425  0009                     	;# 
   426  000A                     	;# 
   427  000B                     	;# 
   428  000C                     	;# 
   429  000D                     	;# 
   430  000E                     	;# 
   431  000F                     	;# 
   432  0010                     	;# 
   433  0011                     	;# 
   434  0012                     	;# 
   435  0013                     	;# 
   436  0015                     	;# 
   437  0016                     	;# 
   438  0016                     	;# 
   439  0017                     	;# 
   440  0018                     	;# 
   441  0019                     	;# 
   442  001A                     	;# 
   443  001B                     	;# 
   444  001C                     	;# 
   445  008C                     	;# 
   446  008D                     	;# 
   447  008E                     	;# 
   448  008F                     	;# 
   449  0090                     	;# 
   450  0091                     	;# 
   451  0092                     	;# 
   452  0093                     	;# 
   453  0095                     	;# 
   454  0096                     	;# 
   455  0097                     	;# 
   456  0098                     	;# 
   457  0099                     	;# 
   458  009A                     	;# 
   459  009B                     	;# 
   460  009B                     	;# 
   461  009C                     	;# 
   462  009D                     	;# 
   463  009E                     	;# 
   464  009F                     	;# 
   465  010C                     	;# 
   466  010D                     	;# 
   467  010E                     	;# 
   468  010F                     	;# 
   469  0110                     	;# 
   470  0111                     	;# 
   471  0112                     	;# 
   472  0113                     	;# 
   473  0114                     	;# 
   474  0115                     	;# 
   475  0116                     	;# 
   476  0117                     	;# 
   477  0118                     	;# 
   478  0119                     	;# 
   479  011A                     	;# 
   480  011B                     	;# 
   481  011B                     	;# 
   482  011C                     	;# 
   483  018C                     	;# 
   484  018D                     	;# 
   485  018E                     	;# 
   486  018F                     	;# 
   487  0190                     	;# 
   488  0191                     	;# 
   489  0191                     	;# 
   490  0192                     	;# 
   491  0193                     	;# 
   492  0193                     	;# 
   493  0194                     	;# 
   494  0195                     	;# 
   495  0196                     	;# 
   496  0197                     	;# 
   497  0199                     	;# 
   498  0199                     	;# 
   499  0199                     	;# 
   500  019A                     	;# 
   501  019A                     	;# 
   502  019A                     	;# 
   503  019B                     	;# 
   504  019B                     	;# 
   505  019B                     	;# 
   506  019B                     	;# 
   507  019B                     	;# 
   508  019C                     	;# 
   509  019C                     	;# 
   510  019C                     	;# 
   511  019D                     	;# 
   512  019D                     	;# 
   513  019D                     	;# 
   514  019E                     	;# 
   515  019E                     	;# 
   516  019E                     	;# 
   517  019F                     	;# 
   518  019F                     	;# 
   519  019F                     	;# 
   520  019F                     	;# 
   521  019F                     	;# 
   522  020C                     	;# 
   523  020D                     	;# 
   524  020E                     	;# 
   525  020F                     	;# 
   526  0210                     	;# 
   527  0211                     	;# 
   528  0211                     	;# 
   529  0212                     	;# 
   530  0212                     	;# 
   531  0213                     	;# 
   532  0213                     	;# 
   533  0214                     	;# 
   534  0214                     	;# 
   535  0215                     	;# 
   536  0215                     	;# 
   537  0215                     	;# 
   538  0215                     	;# 
   539  0216                     	;# 
   540  0216                     	;# 
   541  0217                     	;# 
   542  0217                     	;# 
   543  028C                     	;# 
   544  028D                     	;# 
   545  028E                     	;# 
   546  028F                     	;# 
   547  0290                     	;# 
   548  0291                     	;# 
   549  0291                     	;# 
   550  0292                     	;# 
   551  0293                     	;# 
   552  0293                     	;# 
   553  0298                     	;# 
   554  0298                     	;# 
   555  0299                     	;# 
   556  029A                     	;# 
   557  029A                     	;# 
   558  029E                     	;# 
   559  030C                     	;# 
   560  030D                     	;# 
   561  030E                     	;# 
   562  030F                     	;# 
   563  0310                     	;# 
   564  038C                     	;# 
   565  038D                     	;# 
   566  038E                     	;# 
   567  038F                     	;# 
   568  0390                     	;# 
   569  0391                     	;# 
   570  0392                     	;# 
   571  0393                     	;# 
   572  0394                     	;# 
   573  0395                     	;# 
   574  0396                     	;# 
   575  0397                     	;# 
   576  0398                     	;# 
   577  0399                     	;# 
   578  039D                     	;# 
   579  039E                     	;# 
   580  039F                     	;# 
   581  0415                     	;# 
   582  0416                     	;# 
   583  0417                     	;# 
   584  041C                     	;# 
   585  041D                     	;# 
   586  041E                     	;# 
   587  0498                     	;# 
   588  0498                     	;# 
   589  0499                     	;# 
   590  049A                     	;# 
   591  049B                     	;# 
   592  049B                     	;# 
   593  049C                     	;# 
   594  049D                     	;# 
   595  049E                     	;# 
   596  049F                     	;# 
   597  0511                     	;# 
   598  0515                     	;# 
   599  0617                     	;# 
   600  0618                     	;# 
   601  0619                     	;# 
   602  0619                     	;# 
   603  061A                     	;# 
   604  061B                     	;# 
   605  061C                     	;# 
   606  061C                     	;# 
   607  0691                     	;# 
   608  0692                     	;# 
   609  0693                     	;# 
   610  0694                     	;# 
   611  0695                     	;# 
   612  0696                     	;# 
   613  0697                     	;# 
   614  0698                     	;# 
   615  0699                     	;# 
   616  069A                     	;# 
   617  069B                     	;# 
   618  069C                     	;# 
   619  069D                     	;# 
   620  069E                     	;# 
   621  069F                     	;# 
   622  0E0F                     	;# 
   623  0E10                     	;# 
   624  0E11                     	;# 
   625  0E12                     	;# 
   626  0E13                     	;# 
   627  0E14                     	;# 
   628  0E15                     	;# 
   629  0E17                     	;# 
   630  0E20                     	;# 
   631  0E21                     	;# 
   632  0E22                     	;# 
   633  0E24                     	;# 
   634  0E25                     	;# 
   635  0E28                     	;# 
   636  0E29                     	;# 
   637  0E2A                     	;# 
   638  0E2B                     	;# 
   639  0E90                     	;# 
   640  0E91                     	;# 
   641  0E92                     	;# 
   642  0E93                     	;# 
   643  0E94                     	;# 
   644  0E95                     	;# 
   645  0E96                     	;# 
   646  0E97                     	;# 
   647  0E98                     	;# 
   648  0E99                     	;# 
   649  0E9A                     	;# 
   650  0E9B                     	;# 
   651  0E9C                     	;# 
   652  0E9D                     	;# 
   653  0E9E                     	;# 
   654  0E9F                     	;# 
   655  0EA0                     	;# 
   656  0EA1                     	;# 
   657  0EA2                     	;# 
   658  0EA3                     	;# 
   659  0EA4                     	;# 
   660  0EA5                     	;# 
   661  0EA6                     	;# 
   662  0EA7                     	;# 
   663  0EA8                     	;# 
   664  0EA9                     	;# 
   665  0EAA                     	;# 
   666  0EAB                     	;# 
   667  0EAC                     	;# 
   668  0EAD                     	;# 
   669  0EAE                     	;# 
   670  0EAF                     	;# 
   671  0EB0                     	;# 
   672  0EB1                     	;# 
   673  0EB2                     	;# 
   674  0F0F                     	;# 
   675  0F10                     	;# 
   676  0F11                     	;# 
   677  0F12                     	;# 
   678  0F13                     	;# 
   679  0F14                     	;# 
   680  0F15                     	;# 
   681  0F16                     	;# 
   682  0F17                     	;# 
   683  0F18                     	;# 
   684  0F19                     	;# 
   685  0F1A                     	;# 
   686  0F1B                     	;# 
   687  0F1C                     	;# 
   688  0F1D                     	;# 
   689  0F1E                     	;# 
   690  0F1F                     	;# 
   691  0F20                     	;# 
   692  0F21                     	;# 
   693  0F22                     	;# 
   694  0F23                     	;# 
   695  0F24                     	;# 
   696  0F25                     	;# 
   697  0F26                     	;# 
   698  0F27                     	;# 
   699  0F28                     	;# 
   700  0F29                     	;# 
   701  0F2A                     	;# 
   702  0F2B                     	;# 
   703  0F2C                     	;# 
   704  0F2D                     	;# 
   705  0F2E                     	;# 
   706  0F2F                     	;# 
   707  0F30                     	;# 
   708  0F31                     	;# 
   709  0F32                     	;# 
   710  0F33                     	;# 
   711  0F34                     	;# 
   712  0F35                     	;# 
   713  0F36                     	;# 
   714  0F37                     	;# 
   715  0FE4                     	;# 
   716  0FE5                     	;# 
   717  0FE6                     	;# 
   718  0FE7                     	;# 
   719  0FE8                     	;# 
   720  0FE9                     	;# 
   721  0FEA                     	;# 
   722  0FEB                     	;# 
   723  0FED                     	;# 
   724  0FEE                     	;# 
   725  0FEF                     	;# 
   726  0000                     	;# 
   727  0001                     	;# 
   728  0002                     	;# 
   729  0003                     	;# 
   730  0004                     	;# 
   731  0005                     	;# 
   732  0006                     	;# 
   733  0007                     	;# 
   734  0008                     	;# 
   735  0009                     	;# 
   736  000A                     	;# 
   737  000B                     	;# 
   738  000C                     	;# 
   739  000D                     	;# 
   740  000E                     	;# 
   741  000F                     	;# 
   742  0010                     	;# 
   743  0011                     	;# 
   744  0012                     	;# 
   745  0013                     	;# 
   746  0015                     	;# 
   747  0016                     	;# 
   748  0016                     	;# 
   749  0017                     	;# 
   750  0018                     	;# 
   751  0019                     	;# 
   752  001A                     	;# 
   753  001B                     	;# 
   754  001C                     	;# 
   755  008C                     	;# 
   756  008D                     	;# 
   757  008E                     	;# 
   758  008F                     	;# 
   759  0090                     	;# 
   760  0091                     	;# 
   761  0092                     	;# 
   762  0093                     	;# 
   763  0095                     	;# 
   764  0096                     	;# 
   765  0097                     	;# 
   766  0098                     	;# 
   767  0099                     	;# 
   768  009A                     	;# 
   769  009B                     	;# 
   770  009B                     	;# 
   771  009C                     	;# 
   772  009D                     	;# 
   773  009E                     	;# 
   774  009F                     	;# 
   775  010C                     	;# 
   776  010D                     	;# 
   777  010E                     	;# 
   778  010F                     	;# 
   779  0110                     	;# 
   780  0111                     	;# 
   781  0112                     	;# 
   782  0113                     	;# 
   783  0114                     	;# 
   784  0115                     	;# 
   785  0116                     	;# 
   786  0117                     	;# 
   787  0118                     	;# 
   788  0119                     	;# 
   789  011A                     	;# 
   790  011B                     	;# 
   791  011B                     	;# 
   792  011C                     	;# 
   793  018C                     	;# 
   794  018D                     	;# 
   795  018E                     	;# 
   796  018F                     	;# 
   797  0190                     	;# 
   798  0191                     	;# 
   799  0191                     	;# 
   800  0192                     	;# 
   801  0193                     	;# 
   802  0193                     	;# 
   803  0194                     	;# 
   804  0195                     	;# 
   805  0196                     	;# 
   806  0197                     	;# 
   807  0199                     	;# 
   808  0199                     	;# 
   809  0199                     	;# 
   810  019A                     	;# 
   811  019A                     	;# 
   812  019A                     	;# 
   813  019B                     	;# 
   814  019B                     	;# 
   815  019B                     	;# 
   816  019B                     	;# 
   817  019B                     	;# 
   818  019C                     	;# 
   819  019C                     	;# 
   820  019C                     	;# 
   821  019D                     	;# 
   822  019D                     	;# 
   823  019D                     	;# 
   824  019E                     	;# 
   825  019E                     	;# 
   826  019E                     	;# 
   827  019F                     	;# 
   828  019F                     	;# 
   829  019F                     	;# 
   830  019F                     	;# 
   831  019F                     	;# 
   832  020C                     	;# 
   833  020D                     	;# 
   834  020E                     	;# 
   835  020F                     	;# 
   836  0210                     	;# 
   837  0211                     	;# 
   838  0211                     	;# 
   839  0212                     	;# 
   840  0212                     	;# 
   841  0213                     	;# 
   842  0213                     	;# 
   843  0214                     	;# 
   844  0214                     	;# 
   845  0215                     	;# 
   846  0215                     	;# 
   847  0215                     	;# 
   848  0215                     	;# 
   849  0216                     	;# 
   850  0216                     	;# 
   851  0217                     	;# 
   852  0217                     	;# 
   853  028C                     	;# 
   854  028D                     	;# 
   855  028E                     	;# 
   856  028F                     	;# 
   857  0290                     	;# 
   858  0291                     	;# 
   859  0291                     	;# 
   860  0292                     	;# 
   861  0293                     	;# 
   862  0293                     	;# 
   863  0298                     	;# 
   864  0298                     	;# 
   865  0299                     	;# 
   866  029A                     	;# 
   867  029A                     	;# 
   868  029E                     	;# 
   869  030C                     	;# 
   870  030D                     	;# 
   871  030E                     	;# 
   872  030F                     	;# 
   873  0310                     	;# 
   874  038C                     	;# 
   875  038D                     	;# 
   876  038E                     	;# 
   877  038F                     	;# 
   878  0390                     	;# 
   879  0391                     	;# 
   880  0392                     	;# 
   881  0393                     	;# 
   882  0394                     	;# 
   883  0395                     	;# 
   884  0396                     	;# 
   885  0397                     	;# 
   886  0398                     	;# 
   887  0399                     	;# 
   888  039D                     	;# 
   889  039E                     	;# 
   890  039F                     	;# 
   891  0415                     	;# 
   892  0416                     	;# 
   893  0417                     	;# 
   894  041C                     	;# 
   895  041D                     	;# 
   896  041E                     	;# 
   897  0498                     	;# 
   898  0498                     	;# 
   899  0499                     	;# 
   900  049A                     	;# 
   901  049B                     	;# 
   902  049B                     	;# 
   903  049C                     	;# 
   904  049D                     	;# 
   905  049E                     	;# 
   906  049F                     	;# 
   907  0511                     	;# 
   908  0515                     	;# 
   909  0617                     	;# 
   910  0618                     	;# 
   911  0619                     	;# 
   912  0619                     	;# 
   913  061A                     	;# 
   914  061B                     	;# 
   915  061C                     	;# 
   916  061C                     	;# 
   917  0691                     	;# 
   918  0692                     	;# 
   919  0693                     	;# 
   920  0694                     	;# 
   921  0695                     	;# 
   922  0696                     	;# 
   923  0697                     	;# 
   924  0698                     	;# 
   925  0699                     	;# 
   926  069A                     	;# 
   927  069B                     	;# 
   928  069C                     	;# 
   929  069D                     	;# 
   930  069E                     	;# 
   931  069F                     	;# 
   932  0E0F                     	;# 
   933  0E10                     	;# 
   934  0E11                     	;# 
   935  0E12                     	;# 
   936  0E13                     	;# 
   937  0E14                     	;# 
   938  0E15                     	;# 
   939  0E17                     	;# 
   940  0E20                     	;# 
   941  0E21                     	;# 
   942  0E22                     	;# 
   943  0E24                     	;# 
   944  0E25                     	;# 
   945  0E28                     	;# 
   946  0E29                     	;# 
   947  0E2A                     	;# 
   948  0E2B                     	;# 
   949  0E90                     	;# 
   950  0E91                     	;# 
   951  0E92                     	;# 
   952  0E93                     	;# 
   953  0E94                     	;# 
   954  0E95                     	;# 
   955  0E96                     	;# 
   956  0E97                     	;# 
   957  0E98                     	;# 
   958  0E99                     	;# 
   959  0E9A                     	;# 
   960  0E9B                     	;# 
   961  0E9C                     	;# 
   962  0E9D                     	;# 
   963  0E9E                     	;# 
   964  0E9F                     	;# 
   965  0EA0                     	;# 
   966  0EA1                     	;# 
   967  0EA2                     	;# 
   968  0EA3                     	;# 
   969  0EA4                     	;# 
   970  0EA5                     	;# 
   971  0EA6                     	;# 
   972  0EA7                     	;# 
   973  0EA8                     	;# 
   974  0EA9                     	;# 
   975  0EAA                     	;# 
   976  0EAB                     	;# 
   977  0EAC                     	;# 
   978  0EAD                     	;# 
   979  0EAE                     	;# 
   980  0EAF                     	;# 
   981  0EB0                     	;# 
   982  0EB1                     	;# 
   983  0EB2                     	;# 
   984  0F0F                     	;# 
   985  0F10                     	;# 
   986  0F11                     	;# 
   987  0F12                     	;# 
   988  0F13                     	;# 
   989  0F14                     	;# 
   990  0F15                     	;# 
   991  0F16                     	;# 
   992  0F17                     	;# 
   993  0F18                     	;# 
   994  0F19                     	;# 
   995  0F1A                     	;# 
   996  0F1B                     	;# 
   997  0F1C                     	;# 
   998  0F1D                     	;# 
   999  0F1E                     	;# 
  1000  0F1F                     	;# 
  1001  0F20                     	;# 
  1002  0F21                     	;# 
  1003  0F22                     	;# 
  1004  0F23                     	;# 
  1005  0F24                     	;# 
  1006  0F25                     	;# 
  1007  0F26                     	;# 
  1008  0F27                     	;# 
  1009  0F28                     	;# 
  1010  0F29                     	;# 
  1011  0F2A                     	;# 
  1012  0F2B                     	;# 
  1013  0F2C                     	;# 
  1014  0F2D                     	;# 
  1015  0F2E                     	;# 
  1016  0F2F                     	;# 
  1017  0F30                     	;# 
  1018  0F31                     	;# 
  1019  0F32                     	;# 
  1020  0F33                     	;# 
  1021  0F34                     	;# 
  1022  0F35                     	;# 
  1023  0F36                     	;# 
  1024  0F37                     	;# 
  1025  0FE4                     	;# 
  1026  0FE5                     	;# 
  1027  0FE6                     	;# 
  1028  0FE7                     	;# 
  1029  0FE8                     	;# 
  1030  0FE9                     	;# 
  1031  0FEA                     	;# 
  1032  0FEB                     	;# 
  1033  0FED                     	;# 
  1034  0FEE                     	;# 
  1035  0FEF                     	;# 
  1036  0000                     	;# 
  1037  0001                     	;# 
  1038  0002                     	;# 
  1039  0003                     	;# 
  1040  0004                     	;# 
  1041  0005                     	;# 
  1042  0006                     	;# 
  1043  0007                     	;# 
  1044  0008                     	;# 
  1045  0009                     	;# 
  1046  000A                     	;# 
  1047  000B                     	;# 
  1048  000C                     	;# 
  1049  000D                     	;# 
  1050  000E                     	;# 
  1051  000F                     	;# 
  1052  0010                     	;# 
  1053  0011                     	;# 
  1054  0012                     	;# 
  1055  0013                     	;# 
  1056  0015                     	;# 
  1057  0016                     	;# 
  1058  0016                     	;# 
  1059  0017                     	;# 
  1060  0018                     	;# 
  1061  0019                     	;# 
  1062  001A                     	;# 
  1063  001B                     	;# 
  1064  001C                     	;# 
  1065  008C                     	;# 
  1066  008D                     	;# 
  1067  008E                     	;# 
  1068  008F                     	;# 
  1069  0090                     	;# 
  1070  0091                     	;# 
  1071  0092                     	;# 
  1072  0093                     	;# 
  1073  0095                     	;# 
  1074  0096                     	;# 
  1075  0097                     	;# 
  1076  0098                     	;# 
  1077  0099                     	;# 
  1078  009A                     	;# 
  1079  009B                     	;# 
  1080  009B                     	;# 
  1081  009C                     	;# 
  1082  009D                     	;# 
  1083  009E                     	;# 
  1084  009F                     	;# 
  1085  010C                     	;# 
  1086  010D                     	;# 
  1087  010E                     	;# 
  1088  010F                     	;# 
  1089  0110                     	;# 
  1090  0111                     	;# 
  1091  0112                     	;# 
  1092  0113                     	;# 
  1093  0114                     	;# 
  1094  0115                     	;# 
  1095  0116                     	;# 
  1096  0117                     	;# 
  1097  0118                     	;# 
  1098  0119                     	;# 
  1099  011A                     	;# 
  1100  011B                     	;# 
  1101  011B                     	;# 
  1102  011C                     	;# 
  1103  018C                     	;# 
  1104  018D                     	;# 
  1105  018E                     	;# 
  1106  018F                     	;# 
  1107  0190                     	;# 
  1108  0191                     	;# 
  1109  0191                     	;# 
  1110  0192                     	;# 
  1111  0193                     	;# 
  1112  0193                     	;# 
  1113  0194                     	;# 
  1114  0195                     	;# 
  1115  0196                     	;# 
  1116  0197                     	;# 
  1117  0199                     	;# 
  1118  0199                     	;# 
  1119  0199                     	;# 
  1120  019A                     	;# 
  1121  019A                     	;# 
  1122  019A                     	;# 
  1123  019B                     	;# 
  1124  019B                     	;# 
  1125  019B                     	;# 
  1126  019B                     	;# 
  1127  019B                     	;# 
  1128  019C                     	;# 
  1129  019C                     	;# 
  1130  019C                     	;# 
  1131  019D                     	;# 
  1132  019D                     	;# 
  1133  019D                     	;# 
  1134  019E                     	;# 
  1135  019E                     	;# 
  1136  019E                     	;# 
  1137  019F                     	;# 
  1138  019F                     	;# 
  1139  019F                     	;# 
  1140  019F                     	;# 
  1141  019F                     	;# 
  1142  020C                     	;# 
  1143  020D                     	;# 
  1144  020E                     	;# 
  1145  020F                     	;# 
  1146  0210                     	;# 
  1147  0211                     	;# 
  1148  0211                     	;# 
  1149  0212                     	;# 
  1150  0212                     	;# 
  1151  0213                     	;# 
  1152  0213                     	;# 
  1153  0214                     	;# 
  1154  0214                     	;# 
  1155  0215                     	;# 
  1156  0215                     	;# 
  1157  0215                     	;# 
  1158  0215                     	;# 
  1159  0216                     	;# 
  1160  0216                     	;# 
  1161  0217                     	;# 
  1162  0217                     	;# 
  1163  028C                     	;# 
  1164  028D                     	;# 
  1165  028E                     	;# 
  1166  028F                     	;# 
  1167  0290                     	;# 
  1168  0291                     	;# 
  1169  0291                     	;# 
  1170  0292                     	;# 
  1171  0293                     	;# 
  1172  0293                     	;# 
  1173  0298                     	;# 
  1174  0298                     	;# 
  1175  0299                     	;# 
  1176  029A                     	;# 
  1177  029A                     	;# 
  1178  029E                     	;# 
  1179  030C                     	;# 
  1180  030D                     	;# 
  1181  030E                     	;# 
  1182  030F                     	;# 
  1183  0310                     	;# 
  1184  038C                     	;# 
  1185  038D                     	;# 
  1186  038E                     	;# 
  1187  038F                     	;# 
  1188  0390                     	;# 
  1189  0391                     	;# 
  1190  0392                     	;# 
  1191  0393                     	;# 
  1192  0394                     	;# 
  1193  0395                     	;# 
  1194  0396                     	;# 
  1195  0397                     	;# 
  1196  0398                     	;# 
  1197  0399                     	;# 
  1198  039D                     	;# 
  1199  039E                     	;# 
  1200  039F                     	;# 
  1201  0415                     	;# 
  1202  0416                     	;# 
  1203  0417                     	;# 
  1204  041C                     	;# 
  1205  041D                     	;# 
  1206  041E                     	;# 
  1207  0498                     	;# 
  1208  0498                     	;# 
  1209  0499                     	;# 
  1210  049A                     	;# 
  1211  049B                     	;# 
  1212  049B                     	;# 
  1213  049C                     	;# 
  1214  049D                     	;# 
  1215  049E                     	;# 
  1216  049F                     	;# 
  1217  0511                     	;# 
  1218  0515                     	;# 
  1219  0617                     	;# 
  1220  0618                     	;# 
  1221  0619                     	;# 
  1222  0619                     	;# 
  1223  061A                     	;# 
  1224  061B                     	;# 
  1225  061C                     	;# 
  1226  061C                     	;# 
  1227  0691                     	;# 
  1228  0692                     	;# 
  1229  0693                     	;# 
  1230  0694                     	;# 
  1231  0695                     	;# 
  1232  0696                     	;# 
  1233  0697                     	;# 
  1234  0698                     	;# 
  1235  0699                     	;# 
  1236  069A                     	;# 
  1237  069B                     	;# 
  1238  069C                     	;# 
  1239  069D                     	;# 
  1240  069E                     	;# 
  1241  069F                     	;# 
  1242  0E0F                     	;# 
  1243  0E10                     	;# 
  1244  0E11                     	;# 
  1245  0E12                     	;# 
  1246  0E13                     	;# 
  1247  0E14                     	;# 
  1248  0E15                     	;# 
  1249  0E17                     	;# 
  1250  0E20                     	;# 
  1251  0E21                     	;# 
  1252  0E22                     	;# 
  1253  0E24                     	;# 
  1254  0E25                     	;# 
  1255  0E28                     	;# 
  1256  0E29                     	;# 
  1257  0E2A                     	;# 
  1258  0E2B                     	;# 
  1259  0E90                     	;# 
  1260  0E91                     	;# 
  1261  0E92                     	;# 
  1262  0E93                     	;# 
  1263  0E94                     	;# 
  1264  0E95                     	;# 
  1265  0E96                     	;# 
  1266  0E97                     	;# 
  1267  0E98                     	;# 
  1268  0E99                     	;# 
  1269  0E9A                     	;# 
  1270  0E9B                     	;# 
  1271  0E9C                     	;# 
  1272  0E9D                     	;# 
  1273  0E9E                     	;# 
  1274  0E9F                     	;# 
  1275  0EA0                     	;# 
  1276  0EA1                     	;# 
  1277  0EA2                     	;# 
  1278  0EA3                     	;# 
  1279  0EA4                     	;# 
  1280  0EA5                     	;# 
  1281  0EA6                     	;# 
  1282  0EA7                     	;# 
  1283  0EA8                     	;# 
  1284  0EA9                     	;# 
  1285  0EAA                     	;# 
  1286  0EAB                     	;# 
  1287  0EAC                     	;# 
  1288  0EAD                     	;# 
  1289  0EAE                     	;# 
  1290  0EAF                     	;# 
  1291  0EB0                     	;# 
  1292  0EB1                     	;# 
  1293  0EB2                     	;# 
  1294  0F0F                     	;# 
  1295  0F10                     	;# 
  1296  0F11                     	;# 
  1297  0F12                     	;# 
  1298  0F13                     	;# 
  1299  0F14                     	;# 
  1300  0F15                     	;# 
  1301  0F16                     	;# 
  1302  0F17                     	;# 
  1303  0F18                     	;# 
  1304  0F19                     	;# 
  1305  0F1A                     	;# 
  1306  0F1B                     	;# 
  1307  0F1C                     	;# 
  1308  0F1D                     	;# 
  1309  0F1E                     	;# 
  1310  0F1F                     	;# 
  1311  0F20                     	;# 
  1312  0F21                     	;# 
  1313  0F22                     	;# 
  1314  0F23                     	;# 
  1315  0F24                     	;# 
  1316  0F25                     	;# 
  1317  0F26                     	;# 
  1318  0F27                     	;# 
  1319  0F28                     	;# 
  1320  0F29                     	;# 
  1321  0F2A                     	;# 
  1322  0F2B                     	;# 
  1323  0F2C                     	;# 
  1324  0F2D                     	;# 
  1325  0F2E                     	;# 
  1326  0F2F                     	;# 
  1327  0F30                     	;# 
  1328  0F31                     	;# 
  1329  0F32                     	;# 
  1330  0F33                     	;# 
  1331  0F34                     	;# 
  1332  0F35                     	;# 
  1333  0F36                     	;# 
  1334  0F37                     	;# 
  1335  0FE4                     	;# 
  1336  0FE5                     	;# 
  1337  0FE6                     	;# 
  1338  0FE7                     	;# 
  1339  0FE8                     	;# 
  1340  0FE9                     	;# 
  1341  0FEA                     	;# 
  1342  0FEB                     	;# 
  1343  0FED                     	;# 
  1344  0FEE                     	;# 
  1345  0FEF                     	;# 
  1346  0000                     	;# 
  1347  0001                     	;# 
  1348  0002                     	;# 
  1349  0003                     	;# 
  1350  0004                     	;# 
  1351  0005                     	;# 
  1352  0006                     	;# 
  1353  0007                     	;# 
  1354  0008                     	;# 
  1355  0009                     	;# 
  1356  000A                     	;# 
  1357  000B                     	;# 
  1358  000C                     	;# 
  1359  000D                     	;# 
  1360  000E                     	;# 
  1361  000F                     	;# 
  1362  0010                     	;# 
  1363  0011                     	;# 
  1364  0012                     	;# 
  1365  0013                     	;# 
  1366  0015                     	;# 
  1367  0016                     	;# 
  1368  0016                     	;# 
  1369  0017                     	;# 
  1370  0018                     	;# 
  1371  0019                     	;# 
  1372  001A                     	;# 
  1373  001B                     	;# 
  1374  001C                     	;# 
  1375  008C                     	;# 
  1376  008D                     	;# 
  1377  008E                     	;# 
  1378  008F                     	;# 
  1379  0090                     	;# 
  1380  0091                     	;# 
  1381  0092                     	;# 
  1382  0093                     	;# 
  1383  0095                     	;# 
  1384  0096                     	;# 
  1385  0097                     	;# 
  1386  0098                     	;# 
  1387  0099                     	;# 
  1388  009A                     	;# 
  1389  009B                     	;# 
  1390  009B                     	;# 
  1391  009C                     	;# 
  1392  009D                     	;# 
  1393  009E                     	;# 
  1394  009F                     	;# 
  1395  010C                     	;# 
  1396  010D                     	;# 
  1397  010E                     	;# 
  1398  010F                     	;# 
  1399  0110                     	;# 
  1400  0111                     	;# 
  1401  0112                     	;# 
  1402  0113                     	;# 
  1403  0114                     	;# 
  1404  0115                     	;# 
  1405  0116                     	;# 
  1406  0117                     	;# 
  1407  0118                     	;# 
  1408  0119                     	;# 
  1409  011A                     	;# 
  1410  011B                     	;# 
  1411  011B                     	;# 
  1412  011C                     	;# 
  1413  018C                     	;# 
  1414  018D                     	;# 
  1415  018E                     	;# 
  1416  018F                     	;# 
  1417  0190                     	;# 
  1418  0191                     	;# 
  1419  0191                     	;# 
  1420  0192                     	;# 
  1421  0193                     	;# 
  1422  0193                     	;# 
  1423  0194                     	;# 
  1424  0195                     	;# 
  1425  0196                     	;# 
  1426  0197                     	;# 
  1427  0199                     	;# 
  1428  0199                     	;# 
  1429  0199                     	;# 
  1430  019A                     	;# 
  1431  019A                     	;# 
  1432  019A                     	;# 
  1433  019B                     	;# 
  1434  019B                     	;# 
  1435  019B                     	;# 
  1436  019B                     	;# 
  1437  019B                     	;# 
  1438  019C                     	;# 
  1439  019C                     	;# 
  1440  019C                     	;# 
  1441  019D                     	;# 
  1442  019D                     	;# 
  1443  019D                     	;# 
  1444  019E                     	;# 
  1445  019E                     	;# 
  1446  019E                     	;# 
  1447  019F                     	;# 
  1448  019F                     	;# 
  1449  019F                     	;# 
  1450  019F                     	;# 
  1451  019F                     	;# 
  1452  020C                     	;# 
  1453  020D                     	;# 
  1454  020E                     	;# 
  1455  020F                     	;# 
  1456  0210                     	;# 
  1457  0211                     	;# 
  1458  0211                     	;# 
  1459  0212                     	;# 
  1460  0212                     	;# 
  1461  0213                     	;# 
  1462  0213                     	;# 
  1463  0214                     	;# 
  1464  0214                     	;# 
  1465  0215                     	;# 
  1466  0215                     	;# 
  1467  0215                     	;# 
  1468  0215                     	;# 
  1469  0216                     	;# 
  1470  0216                     	;# 
  1471  0217                     	;# 
  1472  0217                     	;# 
  1473  028C                     	;# 
  1474  028D                     	;# 
  1475  028E                     	;# 
  1476  028F                     	;# 
  1477  0290                     	;# 
  1478  0291                     	;# 
  1479  0291                     	;# 
  1480  0292                     	;# 
  1481  0293                     	;# 
  1482  0293                     	;# 
  1483  0298                     	;# 
  1484  0298                     	;# 
  1485  0299                     	;# 
  1486  029A                     	;# 
  1487  029A                     	;# 
  1488  029E                     	;# 
  1489  030C                     	;# 
  1490  030D                     	;# 
  1491  030E                     	;# 
  1492  030F                     	;# 
  1493  0310                     	;# 
  1494  038C                     	;# 
  1495  038D                     	;# 
  1496  038E                     	;# 
  1497  038F                     	;# 
  1498  0390                     	;# 
  1499  0391                     	;# 
  1500  0392                     	;# 
  1501  0393                     	;# 
  1502  0394                     	;# 
  1503  0395                     	;# 
  1504  0396                     	;# 
  1505  0397                     	;# 
  1506  0398                     	;# 
  1507  0399                     	;# 
  1508  039D                     	;# 
  1509  039E                     	;# 
  1510  039F                     	;# 
  1511  0415                     	;# 
  1512  0416                     	;# 
  1513  0417                     	;# 
  1514  041C                     	;# 
  1515  041D                     	;# 
  1516  041E                     	;# 
  1517  0498                     	;# 
  1518  0498                     	;# 
  1519  0499                     	;# 
  1520  049A                     	;# 
  1521  049B                     	;# 
  1522  049B                     	;# 
  1523  049C                     	;# 
  1524  049D                     	;# 
  1525  049E                     	;# 
  1526  049F                     	;# 
  1527  0511                     	;# 
  1528  0515                     	;# 
  1529  0617                     	;# 
  1530  0618                     	;# 
  1531  0619                     	;# 
  1532  0619                     	;# 
  1533  061A                     	;# 
  1534  061B                     	;# 
  1535  061C                     	;# 
  1536  061C                     	;# 
  1537  0691                     	;# 
  1538  0692                     	;# 
  1539  0693                     	;# 
  1540  0694                     	;# 
  1541  0695                     	;# 
  1542  0696                     	;# 
  1543  0697                     	;# 
  1544  0698                     	;# 
  1545  0699                     	;# 
  1546  069A                     	;# 
  1547  069B                     	;# 
  1548  069C                     	;# 
  1549  069D                     	;# 
  1550  069E                     	;# 
  1551  069F                     	;# 
  1552  0E0F                     	;# 
  1553  0E10                     	;# 
  1554  0E11                     	;# 
  1555  0E12                     	;# 
  1556  0E13                     	;# 
  1557  0E14                     	;# 
  1558  0E15                     	;# 
  1559  0E17                     	;# 
  1560  0E20                     	;# 
  1561  0E21                     	;# 
  1562  0E22                     	;# 
  1563  0E24                     	;# 
  1564  0E25                     	;# 
  1565  0E28                     	;# 
  1566  0E29                     	;# 
  1567  0E2A                     	;# 
  1568  0E2B                     	;# 
  1569  0E90                     	;# 
  1570  0E91                     	;# 
  1571  0E92                     	;# 
  1572  0E93                     	;# 
  1573  0E94                     	;# 
  1574  0E95                     	;# 
  1575  0E96                     	;# 
  1576  0E97                     	;# 
  1577  0E98                     	;# 
  1578  0E99                     	;# 
  1579  0E9A                     	;# 
  1580  0E9B                     	;# 
  1581  0E9C                     	;# 
  1582  0E9D                     	;# 
  1583  0E9E                     	;# 
  1584  0E9F                     	;# 
  1585  0EA0                     	;# 
  1586  0EA1                     	;# 
  1587  0EA2                     	;# 
  1588  0EA3                     	;# 
  1589  0EA4                     	;# 
  1590  0EA5                     	;# 
  1591  0EA6                     	;# 
  1592  0EA7                     	;# 
  1593  0EA8                     	;# 
  1594  0EA9                     	;# 
  1595  0EAA                     	;# 
  1596  0EAB                     	;# 
  1597  0EAC                     	;# 
  1598  0EAD                     	;# 
  1599  0EAE                     	;# 
  1600  0EAF                     	;# 
  1601  0EB0                     	;# 
  1602  0EB1                     	;# 
  1603  0EB2                     	;# 
  1604  0F0F                     	;# 
  1605  0F10                     	;# 
  1606  0F11                     	;# 
  1607  0F12                     	;# 
  1608  0F13                     	;# 
  1609  0F14                     	;# 
  1610  0F15                     	;# 
  1611  0F16                     	;# 
  1612  0F17                     	;# 
  1613  0F18                     	;# 
  1614  0F19                     	;# 
  1615  0F1A                     	;# 
  1616  0F1B                     	;# 
  1617  0F1C                     	;# 
  1618  0F1D                     	;# 
  1619  0F1E                     	;# 
  1620  0F1F                     	;# 
  1621  0F20                     	;# 
  1622  0F21                     	;# 
  1623  0F22                     	;# 
  1624  0F23                     	;# 
  1625  0F24                     	;# 
  1626  0F25                     	;# 
  1627  0F26                     	;# 
  1628  0F27                     	;# 
  1629  0F28                     	;# 
  1630  0F29                     	;# 
  1631  0F2A                     	;# 
  1632  0F2B                     	;# 
  1633  0F2C                     	;# 
  1634  0F2D                     	;# 
  1635  0F2E                     	;# 
  1636  0F2F                     	;# 
  1637  0F30                     	;# 
  1638  0F31                     	;# 
  1639  0F32                     	;# 
  1640  0F33                     	;# 
  1641  0F34                     	;# 
  1642  0F35                     	;# 
  1643  0F36                     	;# 
  1644  0F37                     	;# 
  1645  0FE4                     	;# 
  1646  0FE5                     	;# 
  1647  0FE6                     	;# 
  1648  0FE7                     	;# 
  1649  0FE8                     	;# 
  1650  0FE9                     	;# 
  1651  0FEA                     	;# 
  1652  0FEB                     	;# 
  1653  0FED                     	;# 
  1654  0FEE                     	;# 
  1655  0FEF                     	;# 
  1656  0000                     	;# 
  1657  0001                     	;# 
  1658  0002                     	;# 
  1659  0003                     	;# 
  1660  0004                     	;# 
  1661  0005                     	;# 
  1662  0006                     	;# 
  1663  0007                     	;# 
  1664  0008                     	;# 
  1665  0009                     	;# 
  1666  000A                     	;# 
  1667  000B                     	;# 
  1668  000C                     	;# 
  1669  000D                     	;# 
  1670  000E                     	;# 
  1671  000F                     	;# 
  1672  0010                     	;# 
  1673  0011                     	;# 
  1674  0012                     	;# 
  1675  0013                     	;# 
  1676  0015                     	;# 
  1677  0016                     	;# 
  1678  0016                     	;# 
  1679  0017                     	;# 
  1680  0018                     	;# 
  1681  0019                     	;# 
  1682  001A                     	;# 
  1683  001B                     	;# 
  1684  001C                     	;# 
  1685  008C                     	;# 
  1686  008D                     	;# 
  1687  008E                     	;# 
  1688  008F                     	;# 
  1689  0090                     	;# 
  1690  0091                     	;# 
  1691  0092                     	;# 
  1692  0093                     	;# 
  1693  0095                     	;# 
  1694  0096                     	;# 
  1695  0097                     	;# 
  1696  0098                     	;# 
  1697  0099                     	;# 
  1698  009A                     	;# 
  1699  009B                     	;# 
  1700  009B                     	;# 
  1701  009C                     	;# 
  1702  009D                     	;# 
  1703  009E                     	;# 
  1704  009F                     	;# 
  1705  010C                     	;# 
  1706  010D                     	;# 
  1707  010E                     	;# 
  1708  010F                     	;# 
  1709  0110                     	;# 
  1710  0111                     	;# 
  1711  0112                     	;# 
  1712  0113                     	;# 
  1713  0114                     	;# 
  1714  0115                     	;# 
  1715  0116                     	;# 
  1716  0117                     	;# 
  1717  0118                     	;# 
  1718  0119                     	;# 
  1719  011A                     	;# 
  1720  011B                     	;# 
  1721  011B                     	;# 
  1722  011C                     	;# 
  1723  018C                     	;# 
  1724  018D                     	;# 
  1725  018E                     	;# 
  1726  018F                     	;# 
  1727  0190                     	;# 
  1728  0191                     	;# 
  1729  0191                     	;# 
  1730  0192                     	;# 
  1731  0193                     	;# 
  1732  0193                     	;# 
  1733  0194                     	;# 
  1734  0195                     	;# 
  1735  0196                     	;# 
  1736  0197                     	;# 
  1737  0199                     	;# 
  1738  0199                     	;# 
  1739  0199                     	;# 
  1740  019A                     	;# 
  1741  019A                     	;# 
  1742  019A                     	;# 
  1743  019B                     	;# 
  1744  019B                     	;# 
  1745  019B                     	;# 
  1746  019B                     	;# 
  1747  019B                     	;# 
  1748  019C                     	;# 
  1749  019C                     	;# 
  1750  019C                     	;# 
  1751  019D                     	;# 
  1752  019D                     	;# 
  1753  019D                     	;# 
  1754  019E                     	;# 
  1755  019E                     	;# 
  1756  019E                     	;# 
  1757  019F                     	;# 
  1758  019F                     	;# 
  1759  019F                     	;# 
  1760  019F                     	;# 
  1761  019F                     	;# 
  1762  020C                     	;# 
  1763  020D                     	;# 
  1764  020E                     	;# 
  1765  020F                     	;# 
  1766  0210                     	;# 
  1767  0211                     	;# 
  1768  0211                     	;# 
  1769  0212                     	;# 
  1770  0212                     	;# 
  1771  0213                     	;# 
  1772  0213                     	;# 
  1773  0214                     	;# 
  1774  0214                     	;# 
  1775  0215                     	;# 
  1776  0215                     	;# 
  1777  0215                     	;# 
  1778  0215                     	;# 
  1779  0216                     	;# 
  1780  0216                     	;# 
  1781  0217                     	;# 
  1782  0217                     	;# 
  1783  028C                     	;# 
  1784  028D                     	;# 
  1785  028E                     	;# 
  1786  028F                     	;# 
  1787  0290                     	;# 
  1788  0291                     	;# 
  1789  0291                     	;# 
  1790  0292                     	;# 
  1791  0293                     	;# 
  1792  0293                     	;# 
  1793  0298                     	;# 
  1794  0298                     	;# 
  1795  0299                     	;# 
  1796  029A                     	;# 
  1797  029A                     	;# 
  1798  029E                     	;# 
  1799  030C                     	;# 
  1800  030D                     	;# 
  1801  030E                     	;# 
  1802  030F                     	;# 
  1803  0310                     	;# 
  1804  038C                     	;# 
  1805  038D                     	;# 
  1806  038E                     	;# 
  1807  038F                     	;# 
  1808  0390                     	;# 
  1809  0391                     	;# 
  1810  0392                     	;# 
  1811  0393                     	;# 
  1812  0394                     	;# 
  1813  0395                     	;# 
  1814  0396                     	;# 
  1815  0397                     	;# 
  1816  0398                     	;# 
  1817  0399                     	;# 
  1818  039D                     	;# 
  1819  039E                     	;# 
  1820  039F                     	;# 
  1821  0415                     	;# 
  1822  0416                     	;# 
  1823  0417                     	;# 
  1824  041C                     	;# 
  1825  041D                     	;# 
  1826  041E                     	;# 
  1827  0498                     	;# 
  1828  0498                     	;# 
  1829  0499                     	;# 
  1830  049A                     	;# 
  1831  049B                     	;# 
  1832  049B                     	;# 
  1833  049C                     	;# 
  1834  049D                     	;# 
  1835  049E                     	;# 
  1836  049F                     	;# 
  1837  0511                     	;# 
  1838  0515                     	;# 
  1839  0617                     	;# 
  1840  0618                     	;# 
  1841  0619                     	;# 
  1842  0619                     	;# 
  1843  061A                     	;# 
  1844  061B                     	;# 
  1845  061C                     	;# 
  1846  061C                     	;# 
  1847  0691                     	;# 
  1848  0692                     	;# 
  1849  0693                     	;# 
  1850  0694                     	;# 
  1851  0695                     	;# 
  1852  0696                     	;# 
  1853  0697                     	;# 
  1854  0698                     	;# 
  1855  0699                     	;# 
  1856  069A                     	;# 
  1857  069B                     	;# 
  1858  069C                     	;# 
  1859  069D                     	;# 
  1860  069E                     	;# 
  1861  069F                     	;# 
  1862  0E0F                     	;# 
  1863  0E10                     	;# 
  1864  0E11                     	;# 
  1865  0E12                     	;# 
  1866  0E13                     	;# 
  1867  0E14                     	;# 
  1868  0E15                     	;# 
  1869  0E17                     	;# 
  1870  0E20                     	;# 
  1871  0E21                     	;# 
  1872  0E22                     	;# 
  1873  0E24                     	;# 
  1874  0E25                     	;# 
  1875  0E28                     	;# 
  1876  0E29                     	;# 
  1877  0E2A                     	;# 
  1878  0E2B                     	;# 
  1879  0E90                     	;# 
  1880  0E91                     	;# 
  1881  0E92                     	;# 
  1882  0E93                     	;# 
  1883  0E94                     	;# 
  1884  0E95                     	;# 
  1885  0E96                     	;# 
  1886  0E97                     	;# 
  1887  0E98                     	;# 
  1888  0E99                     	;# 
  1889  0E9A                     	;# 
  1890  0E9B                     	;# 
  1891  0E9C                     	;# 
  1892  0E9D                     	;# 
  1893  0E9E                     	;# 
  1894  0E9F                     	;# 
  1895  0EA0                     	;# 
  1896  0EA1                     	;# 
  1897  0EA2                     	;# 
  1898  0EA3                     	;# 
  1899  0EA4                     	;# 
  1900  0EA5                     	;# 
  1901  0EA6                     	;# 
  1902  0EA7                     	;# 
  1903  0EA8                     	;# 
  1904  0EA9                     	;# 
  1905  0EAA                     	;# 
  1906  0EAB                     	;# 
  1907  0EAC                     	;# 
  1908  0EAD                     	;# 
  1909  0EAE                     	;# 
  1910  0EAF                     	;# 
  1911  0EB0                     	;# 
  1912  0EB1                     	;# 
  1913  0EB2                     	;# 
  1914  0F0F                     	;# 
  1915  0F10                     	;# 
  1916  0F11                     	;# 
  1917  0F12                     	;# 
  1918  0F13                     	;# 
  1919  0F14                     	;# 
  1920  0F15                     	;# 
  1921  0F16                     	;# 
  1922  0F17                     	;# 
  1923  0F18                     	;# 
  1924  0F19                     	;# 
  1925  0F1A                     	;# 
  1926  0F1B                     	;# 
  1927  0F1C                     	;# 
  1928  0F1D                     	;# 
  1929  0F1E                     	;# 
  1930  0F1F                     	;# 
  1931  0F20                     	;# 
  1932  0F21                     	;# 
  1933  0F22                     	;# 
  1934  0F23                     	;# 
  1935  0F24                     	;# 
  1936  0F25                     	;# 
  1937  0F26                     	;# 
  1938  0F27                     	;# 
  1939  0F28                     	;# 
  1940  0F29                     	;# 
  1941  0F2A                     	;# 
  1942  0F2B                     	;# 
  1943  0F2C                     	;# 
  1944  0F2D                     	;# 
  1945  0F2E                     	;# 
  1946  0F2F                     	;# 
  1947  0F30                     	;# 
  1948  0F31                     	;# 
  1949  0F32                     	;# 
  1950  0F33                     	;# 
  1951  0F34                     	;# 
  1952  0F35                     	;# 
  1953  0F36                     	;# 
  1954  0F37                     	;# 
  1955  0FE4                     	;# 
  1956  0FE5                     	;# 
  1957  0FE6                     	;# 
  1958  0FE7                     	;# 
  1959  0FE8                     	;# 
  1960  0FE9                     	;# 
  1961  0FEA                     	;# 
  1962  0FEB                     	;# 
  1963  0FED                     	;# 
  1964  0FEE                     	;# 
  1965  0FEF                     	;# 
  1966  0000                     	;# 
  1967  0001                     	;# 
  1968  0002                     	;# 
  1969  0003                     	;# 
  1970  0004                     	;# 
  1971  0005                     	;# 
  1972  0006                     	;# 
  1973  0007                     	;# 
  1974  0008                     	;# 
  1975  0009                     	;# 
  1976  000A                     	;# 
  1977  000B                     	;# 
  1978  000C                     	;# 
  1979  000D                     	;# 
  1980  000E                     	;# 
  1981  000F                     	;# 
  1982  0010                     	;# 
  1983  0011                     	;# 
  1984  0012                     	;# 
  1985  0013                     	;# 
  1986  0015                     	;# 
  1987  0016                     	;# 
  1988  0016                     	;# 
  1989  0017                     	;# 
  1990  0018                     	;# 
  1991  0019                     	;# 
  1992  001A                     	;# 
  1993  001B                     	;# 
  1994  001C                     	;# 
  1995  008C                     	;# 
  1996  008D                     	;# 
  1997  008E                     	;# 
  1998  008F                     	;# 
  1999  0090                     	;# 
  2000  0091                     	;# 
  2001  0092                     	;# 
  2002  0093                     	;# 
  2003  0095                     	;# 
  2004  0096                     	;# 
  2005  0097                     	;# 
  2006  0098                     	;# 
  2007  0099                     	;# 
  2008  009A                     	;# 
  2009  009B                     	;# 
  2010  009B                     	;# 
  2011  009C                     	;# 
  2012  009D                     	;# 
  2013  009E                     	;# 
  2014  009F                     	;# 
  2015  010C                     	;# 
  2016  010D                     	;# 
  2017  010E                     	;# 
  2018  010F                     	;# 
  2019  0110                     	;# 
  2020  0111                     	;# 
  2021  0112                     	;# 
  2022  0113                     	;# 
  2023  0114                     	;# 
  2024  0115                     	;# 
  2025  0116                     	;# 
  2026  0117                     	;# 
  2027  0118                     	;# 
  2028  0119                     	;# 
  2029  011A                     	;# 
  2030  011B                     	;# 
  2031  011B                     	;# 
  2032  011C                     	;# 
  2033  018C                     	;# 
  2034  018D                     	;# 
  2035  018E                     	;# 
  2036  018F                     	;# 
  2037  0190                     	;# 
  2038  0191                     	;# 
  2039  0191                     	;# 
  2040  0192                     	;# 
  2041  0193                     	;# 
  2042  0193                     	;# 
  2043  0194                     	;# 
  2044  0195                     	;# 
  2045  0196                     	;# 
  2046  0197                     	;# 
  2047  0199                     	;# 
  2048  0199                     	;# 
  2049  0199                     	;# 
  2050  019A                     	;# 
  2051  019A                     	;# 
  2052  019A                     	;# 
  2053  019B                     	;# 
  2054  019B                     	;# 
  2055  019B                     	;# 
  2056  019B                     	;# 
  2057  019B                     	;# 
  2058  019C                     	;# 
  2059  019C                     	;# 
  2060  019C                     	;# 
  2061  019D                     	;# 
  2062  019D                     	;# 
  2063  019D                     	;# 
  2064  019E                     	;# 
  2065  019E                     	;# 
  2066  019E                     	;# 
  2067  019F                     	;# 
  2068  019F                     	;# 
  2069  019F                     	;# 
  2070  019F                     	;# 
  2071  019F                     	;# 
  2072  020C                     	;# 
  2073  020D                     	;# 
  2074  020E                     	;# 
  2075  020F                     	;# 
  2076  0210                     	;# 
  2077  0211                     	;# 
  2078  0211                     	;# 
  2079  0212                     	;# 
  2080  0212                     	;# 
  2081  0213                     	;# 
  2082  0213                     	;# 
  2083  0214                     	;# 
  2084  0214                     	;# 
  2085  0215                     	;# 
  2086  0215                     	;# 
  2087  0215                     	;# 
  2088  0215                     	;# 
  2089  0216                     	;# 
  2090  0216                     	;# 
  2091  0217                     	;# 
  2092  0217                     	;# 
  2093  028C                     	;# 
  2094  028D                     	;# 
  2095  028E                     	;# 
  2096  028F                     	;# 
  2097  0290                     	;# 
  2098  0291                     	;# 
  2099  0291                     	;# 
  2100  0292                     	;# 
  2101  0293                     	;# 
  2102  0293                     	;# 
  2103  0298                     	;# 
  2104  0298                     	;# 
  2105  0299                     	;# 
  2106  029A                     	;# 
  2107  029A                     	;# 
  2108  029E                     	;# 
  2109  030C                     	;# 
  2110  030D                     	;# 
  2111  030E                     	;# 
  2112  030F                     	;# 
  2113  0310                     	;# 
  2114  038C                     	;# 
  2115  038D                     	;# 
  2116  038E                     	;# 
  2117  038F                     	;# 
  2118  0390                     	;# 
  2119  0391                     	;# 
  2120  0392                     	;# 
  2121  0393                     	;# 
  2122  0394                     	;# 
  2123  0395                     	;# 
  2124  0396                     	;# 
  2125  0397                     	;# 
  2126  0398                     	;# 
  2127  0399                     	;# 
  2128  039D                     	;# 
  2129  039E                     	;# 
  2130  039F                     	;# 
  2131  0415                     	;# 
  2132  0416                     	;# 
  2133  0417                     	;# 
  2134  041C                     	;# 
  2135  041D                     	;# 
  2136  041E                     	;# 
  2137  0498                     	;# 
  2138  0498                     	;# 
  2139  0499                     	;# 
  2140  049A                     	;# 
  2141  049B                     	;# 
  2142  049B                     	;# 
  2143  049C                     	;# 
  2144  049D                     	;# 
  2145  049E                     	;# 
  2146  049F                     	;# 
  2147  0511                     	;# 
  2148  0515                     	;# 
  2149  0617                     	;# 
  2150  0618                     	;# 
  2151  0619                     	;# 
  2152  0619                     	;# 
  2153  061A                     	;# 
  2154  061B                     	;# 
  2155  061C                     	;# 
  2156  061C                     	;# 
  2157  0691                     	;# 
  2158  0692                     	;# 
  2159  0693                     	;# 
  2160  0694                     	;# 
  2161  0695                     	;# 
  2162  0696                     	;# 
  2163  0697                     	;# 
  2164  0698                     	;# 
  2165  0699                     	;# 
  2166  069A                     	;# 
  2167  069B                     	;# 
  2168  069C                     	;# 
  2169  069D                     	;# 
  2170  069E                     	;# 
  2171  069F                     	;# 
  2172  0E0F                     	;# 
  2173  0E10                     	;# 
  2174  0E11                     	;# 
  2175  0E12                     	;# 
  2176  0E13                     	;# 
  2177  0E14                     	;# 
  2178  0E15                     	;# 
  2179  0E17                     	;# 
  2180  0E20                     	;# 
  2181  0E21                     	;# 
  2182  0E22                     	;# 
  2183  0E24                     	;# 
  2184  0E25                     	;# 
  2185  0E28                     	;# 
  2186  0E29                     	;# 
  2187  0E2A                     	;# 
  2188  0E2B                     	;# 
  2189  0E90                     	;# 
  2190  0E91                     	;# 
  2191  0E92                     	;# 
  2192  0E93                     	;# 
  2193  0E94                     	;# 
  2194  0E95                     	;# 
  2195  0E96                     	;# 
  2196  0E97                     	;# 
  2197  0E98                     	;# 
  2198  0E99                     	;# 
  2199  0E9A                     	;# 
  2200  0E9B                     	;# 
  2201  0E9C                     	;# 
  2202  0E9D                     	;# 
  2203  0E9E                     	;# 
  2204  0E9F                     	;# 
  2205  0EA0                     	;# 
  2206  0EA1                     	;# 
  2207  0EA2                     	;# 
  2208  0EA3                     	;# 
  2209  0EA4                     	;# 
  2210  0EA5                     	;# 
  2211  0EA6                     	;# 
  2212  0EA7                     	;# 
  2213  0EA8                     	;# 
  2214  0EA9                     	;# 
  2215  0EAA                     	;# 
  2216  0EAB                     	;# 
  2217  0EAC                     	;# 
  2218  0EAD                     	;# 
  2219  0EAE                     	;# 
  2220  0EAF                     	;# 
  2221  0EB0                     	;# 
  2222  0EB1                     	;# 
  2223  0EB2                     	;# 
  2224  0F0F                     	;# 
  2225  0F10                     	;# 
  2226  0F11                     	;# 
  2227  0F12                     	;# 
  2228  0F13                     	;# 
  2229  0F14                     	;# 
  2230  0F15                     	;# 
  2231  0F16                     	;# 
  2232  0F17                     	;# 
  2233  0F18                     	;# 
  2234  0F19                     	;# 
  2235  0F1A                     	;# 
  2236  0F1B                     	;# 
  2237  0F1C                     	;# 
  2238  0F1D                     	;# 
  2239  0F1E                     	;# 
  2240  0F1F                     	;# 
  2241  0F20                     	;# 
  2242  0F21                     	;# 
  2243  0F22                     	;# 
  2244  0F23                     	;# 
  2245  0F24                     	;# 
  2246  0F25                     	;# 
  2247  0F26                     	;# 
  2248  0F27                     	;# 
  2249  0F28                     	;# 
  2250  0F29                     	;# 
  2251  0F2A                     	;# 
  2252  0F2B                     	;# 
  2253  0F2C                     	;# 
  2254  0F2D                     	;# 
  2255  0F2E                     	;# 
  2256  0F2F                     	;# 
  2257  0F30                     	;# 
  2258  0F31                     	;# 
  2259  0F32                     	;# 
  2260  0F33                     	;# 
  2261  0F34                     	;# 
  2262  0F35                     	;# 
  2263  0F36                     	;# 
  2264  0F37                     	;# 
  2265  0FE4                     	;# 
  2266  0FE5                     	;# 
  2267  0FE6                     	;# 
  2268  0FE7                     	;# 
  2269  0FE8                     	;# 
  2270  0FE9                     	;# 
  2271  0FEA                     	;# 
  2272  0FEB                     	;# 
  2273  0FED                     	;# 
  2274  0FEE                     	;# 
  2275  0FEF                     	;# 
  2276                           
  2277                           	psect	idataBANK1
  2278  101C                     __pidataBANK1:	
  2279                           
  2280                           ;initializer for _duty
  2281  101C  3400               	retlw	0
  2282  101D  3400               	retlw	0
  2283  101E  3416               	retlw	22
  2284  101F  3443               	retlw	67
  2285                           
  2286                           ;initializer for _system_volt
  2287  1020  34C8               	retlw	low (_system_v| 0)
  2288                           
  2289                           ;initializer for _panel_volt
  2290  1021  34C0               	retlw	low (_panel_v| 0)
  2291                           
  2292                           ;initializer for _bat_volt
  2293  1022  34C4               	retlw	low (_bat_v| 0)
  2294                           
  2295                           	psect	idataBANK2
  2296  1045                     __pidataBANK2:	
  2297                           
  2298                           ;initializer for _Ki
  2299  1045  3400               	retlw	0
  2300  1046  3400               	retlw	0
  2301  1047  3400               	retlw	0
  2302  1048  3440               	retlw	64
  2303                           
  2304                           ;initializer for _dt
  2305  1049  3400               	retlw	0
  2306  104A  3400               	retlw	0
  2307  104B  34A0               	retlw	160
  2308  104C  3440               	retlw	64
  2309                           
  2310                           ;initializer for _Kp
  2311  104D  3400               	retlw	0
  2312  104E  3400               	retlw	0
  2313  104F  3420               	retlw	32
  2314  1050  3441               	retlw	65
  2315                           
  2316                           	psect	stringtext1
  2317  1800                     __pstringtext1:	
  2318  1800                     _dpowers:	
  2319  1800  3401               	retlw	1
  2320  1801  3400               	retlw	0
  2321  1802  3400               	retlw	0
  2322  1803  3400               	retlw	0
  2323  1804  340A               	retlw	10
  2324  1805  3400               	retlw	0
  2325  1806  3400               	retlw	0
  2326  1807  3400               	retlw	0
  2327  1808  3464               	retlw	100
  2328  1809  3400               	retlw	0
  2329  180A  3400               	retlw	0
  2330  180B  3400               	retlw	0
  2331  180C  34E8               	retlw	232
  2332  180D  3403               	retlw	3
  2333  180E  3400               	retlw	0
  2334  180F  3400               	retlw	0
  2335  1810  3410               	retlw	16
  2336  1811  3427               	retlw	39
  2337  1812  3400               	retlw	0
  2338  1813  3400               	retlw	0
  2339  1814  34A0               	retlw	160
  2340  1815  3486               	retlw	134
  2341  1816  3401               	retlw	1
  2342  1817  3400               	retlw	0
  2343  1818  3440               	retlw	64
  2344  1819  3442               	retlw	66
  2345  181A  340F               	retlw	15
  2346  181B  3400               	retlw	0
  2347  181C  3480               	retlw	128
  2348  181D  3496               	retlw	150
  2349  181E  3498               	retlw	152
  2350  181F  3400               	retlw	0
  2351  1820  3400               	retlw	0
  2352  1821  34E1               	retlw	225
  2353  1822  34F5               	retlw	245
  2354  1823  3405               	retlw	5
  2355  1824  3400               	retlw	0
  2356  1825  34CA               	retlw	202
  2357  1826  349A               	retlw	154
  2358  1827  343B               	retlw	59
  2359  1828                     __end_of_dpowers:	
  2360                           
  2361                           	psect	stringtext2
  2362  0800                     __pstringtext2:	
  2363  0800                     _OledFont:	
  2364  0800  3400               	retlw	0
  2365  0801  3400               	retlw	0
  2366  0802  3400               	retlw	0
  2367  0803  3400               	retlw	0
  2368  0804  3400               	retlw	0
  2369  0805  3400               	retlw	0
  2370  0806  3400               	retlw	0
  2371  0807  3400               	retlw	0
  2372  0808  3400               	retlw	0
  2373  0809  3400               	retlw	0
  2374  080A  345F               	retlw	95
  2375  080B  3400               	retlw	0
  2376  080C  3400               	retlw	0
  2377  080D  3400               	retlw	0
  2378  080E  3400               	retlw	0
  2379  080F  3400               	retlw	0
  2380  0810  3400               	retlw	0
  2381  0811  3400               	retlw	0
  2382  0812  3407               	retlw	7
  2383  0813  3400               	retlw	0
  2384  0814  3407               	retlw	7
  2385  0815  3400               	retlw	0
  2386  0816  3400               	retlw	0
  2387  0817  3400               	retlw	0
  2388  0818  3400               	retlw	0
  2389  0819  3414               	retlw	20
  2390  081A  347F               	retlw	127
  2391  081B  3414               	retlw	20
  2392  081C  347F               	retlw	127
  2393  081D  3414               	retlw	20
  2394  081E  3400               	retlw	0
  2395  081F  3400               	retlw	0
  2396  0820  3400               	retlw	0
  2397  0821  3424               	retlw	36
  2398  0822  342A               	retlw	42
  2399  0823  347F               	retlw	127
  2400  0824  342A               	retlw	42
  2401  0825  3412               	retlw	18
  2402  0826  3400               	retlw	0
  2403  0827  3400               	retlw	0
  2404  0828  3400               	retlw	0
  2405  0829  3423               	retlw	35
  2406  082A  3413               	retlw	19
  2407  082B  3408               	retlw	8
  2408  082C  3464               	retlw	100
  2409  082D  3462               	retlw	98
  2410  082E  3400               	retlw	0
  2411  082F  3400               	retlw	0
  2412  0830  3400               	retlw	0
  2413  0831  3436               	retlw	54
  2414  0832  3449               	retlw	73
  2415  0833  3455               	retlw	85
  2416  0834  3422               	retlw	34
  2417  0835  3450               	retlw	80
  2418  0836  3400               	retlw	0
  2419  0837  3400               	retlw	0
  2420  0838  3400               	retlw	0
  2421  0839  3400               	retlw	0
  2422  083A  3405               	retlw	5
  2423  083B  3403               	retlw	3
  2424  083C  3400               	retlw	0
  2425  083D  3400               	retlw	0
  2426  083E  3400               	retlw	0
  2427  083F  3400               	retlw	0
  2428  0840  3400               	retlw	0
  2429  0841  341C               	retlw	28
  2430  0842  3422               	retlw	34
  2431  0843  3441               	retlw	65
  2432  0844  3400               	retlw	0
  2433  0845  3400               	retlw	0
  2434  0846  3400               	retlw	0
  2435  0847  3400               	retlw	0
  2436  0848  3400               	retlw	0
  2437  0849  3441               	retlw	65
  2438  084A  3422               	retlw	34
  2439  084B  341C               	retlw	28
  2440  084C  3400               	retlw	0
  2441  084D  3400               	retlw	0
  2442  084E  3400               	retlw	0
  2443  084F  3400               	retlw	0
  2444  0850  3400               	retlw	0
  2445  0851  3408               	retlw	8
  2446  0852  342A               	retlw	42
  2447  0853  341C               	retlw	28
  2448  0854  342A               	retlw	42
  2449  0855  3408               	retlw	8
  2450  0856  3400               	retlw	0
  2451  0857  3400               	retlw	0
  2452  0858  3400               	retlw	0
  2453  0859  3408               	retlw	8
  2454  085A  3408               	retlw	8
  2455  085B  343E               	retlw	62
  2456  085C  3408               	retlw	8
  2457  085D  3408               	retlw	8
  2458  085E  3400               	retlw	0
  2459  085F  3400               	retlw	0
  2460  0860  3400               	retlw	0
  2461  0861  34A0               	retlw	160
  2462  0862  3460               	retlw	96
  2463  0863  3400               	retlw	0
  2464  0864  3400               	retlw	0
  2465  0865  3400               	retlw	0
  2466  0866  3400               	retlw	0
  2467  0867  3400               	retlw	0
  2468  0868  3400               	retlw	0
  2469  0869  3408               	retlw	8
  2470  086A  3408               	retlw	8
  2471  086B  3408               	retlw	8
  2472  086C  3408               	retlw	8
  2473  086D  3408               	retlw	8
  2474  086E  3400               	retlw	0
  2475  086F  3400               	retlw	0
  2476  0870  3400               	retlw	0
  2477  0871  3460               	retlw	96
  2478  0872  3460               	retlw	96
  2479  0873  3400               	retlw	0
  2480  0874  3400               	retlw	0
  2481  0875  3400               	retlw	0
  2482  0876  3400               	retlw	0
  2483  0877  3400               	retlw	0
  2484  0878  3400               	retlw	0
  2485  0879  3420               	retlw	32
  2486  087A  3410               	retlw	16
  2487  087B  3408               	retlw	8
  2488  087C  3404               	retlw	4
  2489  087D  3402               	retlw	2
  2490  087E  3400               	retlw	0
  2491  087F  3400               	retlw	0
  2492  0880  3400               	retlw	0
  2493  0881  343E               	retlw	62
  2494  0882  3451               	retlw	81
  2495  0883  3449               	retlw	73
  2496  0884  3445               	retlw	69
  2497  0885  343E               	retlw	62
  2498  0886  3400               	retlw	0
  2499  0887  3400               	retlw	0
  2500  0888  3400               	retlw	0
  2501  0889  3400               	retlw	0
  2502  088A  3442               	retlw	66
  2503  088B  347F               	retlw	127
  2504  088C  3440               	retlw	64
  2505  088D  3400               	retlw	0
  2506  088E  3400               	retlw	0
  2507  088F  3400               	retlw	0
  2508  0890  3400               	retlw	0
  2509  0891  3462               	retlw	98
  2510  0892  3451               	retlw	81
  2511  0893  3449               	retlw	73
  2512  0894  3449               	retlw	73
  2513  0895  3446               	retlw	70
  2514  0896  3400               	retlw	0
  2515  0897  3400               	retlw	0
  2516  0898  3400               	retlw	0
  2517  0899  3422               	retlw	34
  2518  089A  3441               	retlw	65
  2519  089B  3449               	retlw	73
  2520  089C  3449               	retlw	73
  2521  089D  3436               	retlw	54
  2522  089E  3400               	retlw	0
  2523  089F  3400               	retlw	0
  2524  08A0  3400               	retlw	0
  2525  08A1  3418               	retlw	24
  2526  08A2  3414               	retlw	20
  2527  08A3  3412               	retlw	18
  2528  08A4  347F               	retlw	127
  2529  08A5  3410               	retlw	16
  2530  08A6  3400               	retlw	0
  2531  08A7  3400               	retlw	0
  2532  08A8  3400               	retlw	0
  2533  08A9  3427               	retlw	39
  2534  08AA  3445               	retlw	69
  2535  08AB  3445               	retlw	69
  2536  08AC  3445               	retlw	69
  2537  08AD  3439               	retlw	57
  2538  08AE  3400               	retlw	0
  2539  08AF  3400               	retlw	0
  2540  08B0  3400               	retlw	0
  2541  08B1  343C               	retlw	60
  2542  08B2  344A               	retlw	74
  2543  08B3  3449               	retlw	73
  2544  08B4  3449               	retlw	73
  2545  08B5  3430               	retlw	48
  2546  08B6  3400               	retlw	0
  2547  08B7  3400               	retlw	0
  2548  08B8  3400               	retlw	0
  2549  08B9  3401               	retlw	1
  2550  08BA  3471               	retlw	113
  2551  08BB  3409               	retlw	9
  2552  08BC  3405               	retlw	5
  2553  08BD  3403               	retlw	3
  2554  08BE  3400               	retlw	0
  2555  08BF  3400               	retlw	0
  2556  08C0  3400               	retlw	0
  2557  08C1  3436               	retlw	54
  2558  08C2  3449               	retlw	73
  2559  08C3  3449               	retlw	73
  2560  08C4  3449               	retlw	73
  2561  08C5  3436               	retlw	54
  2562  08C6  3400               	retlw	0
  2563  08C7  3400               	retlw	0
  2564  08C8  3400               	retlw	0
  2565  08C9  3406               	retlw	6
  2566  08CA  3449               	retlw	73
  2567  08CB  3449               	retlw	73
  2568  08CC  3429               	retlw	41
  2569  08CD  341E               	retlw	30
  2570  08CE  3400               	retlw	0
  2571  08CF  3400               	retlw	0
  2572  08D0  3400               	retlw	0
  2573  08D1  3400               	retlw	0
  2574  08D2  3436               	retlw	54
  2575  08D3  3436               	retlw	54
  2576  08D4  3400               	retlw	0
  2577  08D5  3400               	retlw	0
  2578  08D6  3400               	retlw	0
  2579  08D7  3400               	retlw	0
  2580  08D8  3400               	retlw	0
  2581  08D9  3400               	retlw	0
  2582  08DA  34AC               	retlw	172
  2583  08DB  346C               	retlw	108
  2584  08DC  3400               	retlw	0
  2585  08DD  3400               	retlw	0
  2586  08DE  3400               	retlw	0
  2587  08DF  3400               	retlw	0
  2588  08E0  3400               	retlw	0
  2589  08E1  3408               	retlw	8
  2590  08E2  3414               	retlw	20
  2591  08E3  3422               	retlw	34
  2592  08E4  3441               	retlw	65
  2593  08E5  3400               	retlw	0
  2594  08E6  3400               	retlw	0
  2595  08E7  3400               	retlw	0
  2596  08E8  3400               	retlw	0
  2597  08E9  3414               	retlw	20
  2598  08EA  3414               	retlw	20
  2599  08EB  3414               	retlw	20
  2600  08EC  3414               	retlw	20
  2601  08ED  3414               	retlw	20
  2602  08EE  3400               	retlw	0
  2603  08EF  3400               	retlw	0
  2604  08F0  3400               	retlw	0
  2605  08F1  3441               	retlw	65
  2606  08F2  3422               	retlw	34
  2607  08F3  3414               	retlw	20
  2608  08F4  3408               	retlw	8
  2609  08F5  3400               	retlw	0
  2610  08F6  3400               	retlw	0
  2611  08F7  3400               	retlw	0
  2612  08F8  3400               	retlw	0
  2613  08F9  3402               	retlw	2
  2614  08FA  3401               	retlw	1
  2615  08FB  3451               	retlw	81
  2616  08FC  3409               	retlw	9
  2617  08FD  3406               	retlw	6
  2618  08FE  3400               	retlw	0
  2619  08FF  3400               	retlw	0
  2620  0900  3400               	retlw	0
  2621  0901  3432               	retlw	50
  2622  0902  3449               	retlw	73
  2623  0903  3479               	retlw	121
  2624  0904  3441               	retlw	65
  2625  0905  343E               	retlw	62
  2626  0906  3400               	retlw	0
  2627  0907  3400               	retlw	0
  2628  0908  3400               	retlw	0
  2629  0909  347E               	retlw	126
  2630  090A  3409               	retlw	9
  2631  090B  3409               	retlw	9
  2632  090C  3409               	retlw	9
  2633  090D  347E               	retlw	126
  2634  090E  3400               	retlw	0
  2635  090F  3400               	retlw	0
  2636  0910  3400               	retlw	0
  2637  0911  347F               	retlw	127
  2638  0912  3449               	retlw	73
  2639  0913  3449               	retlw	73
  2640  0914  3449               	retlw	73
  2641  0915  3436               	retlw	54
  2642  0916  3400               	retlw	0
  2643  0917  3400               	retlw	0
  2644  0918  3400               	retlw	0
  2645  0919  343E               	retlw	62
  2646  091A  3441               	retlw	65
  2647  091B  3441               	retlw	65
  2648  091C  3441               	retlw	65
  2649  091D  3422               	retlw	34
  2650  091E  3400               	retlw	0
  2651  091F  3400               	retlw	0
  2652  0920  3400               	retlw	0
  2653  0921  347F               	retlw	127
  2654  0922  3441               	retlw	65
  2655  0923  3441               	retlw	65
  2656  0924  3422               	retlw	34
  2657  0925  341C               	retlw	28
  2658  0926  3400               	retlw	0
  2659  0927  3400               	retlw	0
  2660  0928  3400               	retlw	0
  2661  0929  347F               	retlw	127
  2662  092A  3449               	retlw	73
  2663  092B  3449               	retlw	73
  2664  092C  3449               	retlw	73
  2665  092D  3441               	retlw	65
  2666  092E  3400               	retlw	0
  2667  092F  3400               	retlw	0
  2668  0930  3400               	retlw	0
  2669  0931  347F               	retlw	127
  2670  0932  3409               	retlw	9
  2671  0933  3409               	retlw	9
  2672  0934  3409               	retlw	9
  2673  0935  3401               	retlw	1
  2674  0936  3400               	retlw	0
  2675  0937  3400               	retlw	0
  2676  0938  3400               	retlw	0
  2677  0939  343E               	retlw	62
  2678  093A  3441               	retlw	65
  2679  093B  3441               	retlw	65
  2680  093C  3451               	retlw	81
  2681  093D  3472               	retlw	114
  2682  093E  3400               	retlw	0
  2683  093F  3400               	retlw	0
  2684  0940  3400               	retlw	0
  2685  0941  347F               	retlw	127
  2686  0942  3408               	retlw	8
  2687  0943  3408               	retlw	8
  2688  0944  3408               	retlw	8
  2689  0945  347F               	retlw	127
  2690  0946  3400               	retlw	0
  2691  0947  3400               	retlw	0
  2692  0948  3400               	retlw	0
  2693  0949  3441               	retlw	65
  2694  094A  347F               	retlw	127
  2695  094B  3441               	retlw	65
  2696  094C  3400               	retlw	0
  2697  094D  3400               	retlw	0
  2698  094E  3400               	retlw	0
  2699  094F  3400               	retlw	0
  2700  0950  3400               	retlw	0
  2701  0951  3420               	retlw	32
  2702  0952  3440               	retlw	64
  2703  0953  3441               	retlw	65
  2704  0954  343F               	retlw	63
  2705  0955  3401               	retlw	1
  2706  0956  3400               	retlw	0
  2707  0957  3400               	retlw	0
  2708  0958  3400               	retlw	0
  2709  0959  347F               	retlw	127
  2710  095A  3408               	retlw	8
  2711  095B  3414               	retlw	20
  2712  095C  3422               	retlw	34
  2713  095D  3441               	retlw	65
  2714  095E  3400               	retlw	0
  2715  095F  3400               	retlw	0
  2716  0960  3400               	retlw	0
  2717  0961  347F               	retlw	127
  2718  0962  3440               	retlw	64
  2719  0963  3440               	retlw	64
  2720  0964  3440               	retlw	64
  2721  0965  3440               	retlw	64
  2722  0966  3400               	retlw	0
  2723  0967  3400               	retlw	0
  2724  0968  3400               	retlw	0
  2725  0969  347F               	retlw	127
  2726  096A  3402               	retlw	2
  2727  096B  340C               	retlw	12
  2728  096C  3402               	retlw	2
  2729  096D  347F               	retlw	127
  2730  096E  3400               	retlw	0
  2731  096F  3400               	retlw	0
  2732  0970  3400               	retlw	0
  2733  0971  347F               	retlw	127
  2734  0972  3404               	retlw	4
  2735  0973  3408               	retlw	8
  2736  0974  3410               	retlw	16
  2737  0975  347F               	retlw	127
  2738  0976  3400               	retlw	0
  2739  0977  3400               	retlw	0
  2740  0978  3400               	retlw	0
  2741  0979  343E               	retlw	62
  2742  097A  3441               	retlw	65
  2743  097B  3441               	retlw	65
  2744  097C  3441               	retlw	65
  2745  097D  343E               	retlw	62
  2746  097E  3400               	retlw	0
  2747  097F  3400               	retlw	0
  2748  0980  3400               	retlw	0
  2749  0981  347F               	retlw	127
  2750  0982  3409               	retlw	9
  2751  0983  3409               	retlw	9
  2752  0984  3409               	retlw	9
  2753  0985  3406               	retlw	6
  2754  0986  3400               	retlw	0
  2755  0987  3400               	retlw	0
  2756  0988  3400               	retlw	0
  2757  0989  343E               	retlw	62
  2758  098A  3441               	retlw	65
  2759  098B  3451               	retlw	81
  2760  098C  3421               	retlw	33
  2761  098D  345E               	retlw	94
  2762  098E  3400               	retlw	0
  2763  098F  3400               	retlw	0
  2764  0990  3400               	retlw	0
  2765  0991  347F               	retlw	127
  2766  0992  3409               	retlw	9
  2767  0993  3419               	retlw	25
  2768  0994  3429               	retlw	41
  2769  0995  3446               	retlw	70
  2770  0996  3400               	retlw	0
  2771  0997  3400               	retlw	0
  2772  0998  3400               	retlw	0
  2773  0999  3426               	retlw	38
  2774  099A  3449               	retlw	73
  2775  099B  3449               	retlw	73
  2776  099C  3449               	retlw	73
  2777  099D  3432               	retlw	50
  2778  099E  3400               	retlw	0
  2779  099F  3400               	retlw	0
  2780  09A0  3400               	retlw	0
  2781  09A1  3401               	retlw	1
  2782  09A2  3401               	retlw	1
  2783  09A3  347F               	retlw	127
  2784  09A4  3401               	retlw	1
  2785  09A5  3401               	retlw	1
  2786  09A6  3400               	retlw	0
  2787  09A7  3400               	retlw	0
  2788  09A8  3400               	retlw	0
  2789  09A9  343F               	retlw	63
  2790  09AA  3440               	retlw	64
  2791  09AB  3440               	retlw	64
  2792  09AC  3440               	retlw	64
  2793  09AD  343F               	retlw	63
  2794  09AE  3400               	retlw	0
  2795  09AF  3400               	retlw	0
  2796  09B0  3400               	retlw	0
  2797  09B1  341F               	retlw	31
  2798  09B2  3420               	retlw	32
  2799  09B3  3440               	retlw	64
  2800  09B4  3420               	retlw	32
  2801  09B5  341F               	retlw	31
  2802  09B6  3400               	retlw	0
  2803  09B7  3400               	retlw	0
  2804  09B8  3400               	retlw	0
  2805  09B9  343F               	retlw	63
  2806  09BA  3440               	retlw	64
  2807  09BB  3438               	retlw	56
  2808  09BC  3440               	retlw	64
  2809  09BD  343F               	retlw	63
  2810  09BE  3400               	retlw	0
  2811  09BF  3400               	retlw	0
  2812  09C0  3400               	retlw	0
  2813  09C1  3463               	retlw	99
  2814  09C2  3414               	retlw	20
  2815  09C3  3408               	retlw	8
  2816  09C4  3414               	retlw	20
  2817  09C5  3463               	retlw	99
  2818  09C6  3400               	retlw	0
  2819  09C7  3400               	retlw	0
  2820  09C8  3400               	retlw	0
  2821  09C9  3403               	retlw	3
  2822  09CA  3404               	retlw	4
  2823  09CB  3478               	retlw	120
  2824  09CC  3404               	retlw	4
  2825  09CD  3403               	retlw	3
  2826  09CE  3400               	retlw	0
  2827  09CF  3400               	retlw	0
  2828  09D0  3400               	retlw	0
  2829  09D1  3461               	retlw	97
  2830  09D2  3451               	retlw	81
  2831  09D3  3449               	retlw	73
  2832  09D4  3445               	retlw	69
  2833  09D5  3443               	retlw	67
  2834  09D6  3400               	retlw	0
  2835  09D7  3400               	retlw	0
  2836  09D8  3400               	retlw	0
  2837  09D9  347F               	retlw	127
  2838  09DA  3441               	retlw	65
  2839  09DB  3441               	retlw	65
  2840  09DC  3400               	retlw	0
  2841  09DD  3400               	retlw	0
  2842  09DE  3400               	retlw	0
  2843  09DF  3400               	retlw	0
  2844  09E0  3400               	retlw	0
  2845  09E1  3402               	retlw	2
  2846  09E2  3404               	retlw	4
  2847  09E3  3408               	retlw	8
  2848  09E4  3410               	retlw	16
  2849  09E5  3420               	retlw	32
  2850  09E6  3400               	retlw	0
  2851  09E7  3400               	retlw	0
  2852  09E8  3400               	retlw	0
  2853  09E9  3441               	retlw	65
  2854  09EA  3441               	retlw	65
  2855  09EB  347F               	retlw	127
  2856  09EC  3400               	retlw	0
  2857  09ED  3400               	retlw	0
  2858  09EE  3400               	retlw	0
  2859  09EF  3400               	retlw	0
  2860  09F0  3400               	retlw	0
  2861  09F1  3404               	retlw	4
  2862  09F2  3402               	retlw	2
  2863  09F3  3401               	retlw	1
  2864  09F4  3402               	retlw	2
  2865  09F5  3404               	retlw	4
  2866  09F6  3400               	retlw	0
  2867  09F7  3400               	retlw	0
  2868  09F8  3400               	retlw	0
  2869  09F9  3480               	retlw	128
  2870  09FA  3480               	retlw	128
  2871  09FB  3480               	retlw	128
  2872  09FC  3480               	retlw	128
  2873  09FD  3480               	retlw	128
  2874  09FE  3400               	retlw	0
  2875  09FF  3400               	retlw	0
  2876  0A00  3400               	retlw	0
  2877  0A01  3401               	retlw	1
  2878  0A02  3402               	retlw	2
  2879  0A03  3404               	retlw	4
  2880  0A04  3400               	retlw	0
  2881  0A05  3400               	retlw	0
  2882  0A06  3400               	retlw	0
  2883  0A07  3400               	retlw	0
  2884  0A08  3400               	retlw	0
  2885  0A09  3420               	retlw	32
  2886  0A0A  3454               	retlw	84
  2887  0A0B  3454               	retlw	84
  2888  0A0C  3454               	retlw	84
  2889  0A0D  3478               	retlw	120
  2890  0A0E  3400               	retlw	0
  2891  0A0F  3400               	retlw	0
  2892  0A10  3400               	retlw	0
  2893  0A11  347F               	retlw	127
  2894  0A12  3448               	retlw	72
  2895  0A13  3444               	retlw	68
  2896  0A14  3444               	retlw	68
  2897  0A15  3438               	retlw	56
  2898  0A16  3400               	retlw	0
  2899  0A17  3400               	retlw	0
  2900  0A18  3400               	retlw	0
  2901  0A19  3438               	retlw	56
  2902  0A1A  3444               	retlw	68
  2903  0A1B  3444               	retlw	68
  2904  0A1C  3428               	retlw	40
  2905  0A1D  3400               	retlw	0
  2906  0A1E  3400               	retlw	0
  2907  0A1F  3400               	retlw	0
  2908  0A20  3400               	retlw	0
  2909  0A21  3438               	retlw	56
  2910  0A22  3444               	retlw	68
  2911  0A23  3444               	retlw	68
  2912  0A24  3448               	retlw	72
  2913  0A25  347F               	retlw	127
  2914  0A26  3400               	retlw	0
  2915  0A27  3400               	retlw	0
  2916  0A28  3400               	retlw	0
  2917  0A29  3438               	retlw	56
  2918  0A2A  3454               	retlw	84
  2919  0A2B  3454               	retlw	84
  2920  0A2C  3454               	retlw	84
  2921  0A2D  3418               	retlw	24
  2922  0A2E  3400               	retlw	0
  2923  0A2F  3400               	retlw	0
  2924  0A30  3400               	retlw	0
  2925  0A31  3408               	retlw	8
  2926  0A32  347E               	retlw	126
  2927  0A33  3409               	retlw	9
  2928  0A34  3402               	retlw	2
  2929  0A35  3400               	retlw	0
  2930  0A36  3400               	retlw	0
  2931  0A37  3400               	retlw	0
  2932  0A38  3400               	retlw	0
  2933  0A39  3418               	retlw	24
  2934  0A3A  34A4               	retlw	164
  2935  0A3B  34A4               	retlw	164
  2936  0A3C  34A4               	retlw	164
  2937  0A3D  347C               	retlw	124
  2938  0A3E  3400               	retlw	0
  2939  0A3F  3400               	retlw	0
  2940  0A40  3400               	retlw	0
  2941  0A41  347F               	retlw	127
  2942  0A42  3408               	retlw	8
  2943  0A43  3404               	retlw	4
  2944  0A44  3404               	retlw	4
  2945  0A45  3478               	retlw	120
  2946  0A46  3400               	retlw	0
  2947  0A47  3400               	retlw	0
  2948  0A48  3400               	retlw	0
  2949  0A49  3400               	retlw	0
  2950  0A4A  347D               	retlw	125
  2951  0A4B  3400               	retlw	0
  2952  0A4C  3400               	retlw	0
  2953  0A4D  3400               	retlw	0
  2954  0A4E  3400               	retlw	0
  2955  0A4F  3400               	retlw	0
  2956  0A50  3400               	retlw	0
  2957  0A51  3480               	retlw	128
  2958  0A52  3484               	retlw	132
  2959  0A53  347D               	retlw	125
  2960  0A54  3400               	retlw	0
  2961  0A55  3400               	retlw	0
  2962  0A56  3400               	retlw	0
  2963  0A57  3400               	retlw	0
  2964  0A58  3400               	retlw	0
  2965  0A59  347F               	retlw	127
  2966  0A5A  3410               	retlw	16
  2967  0A5B  3428               	retlw	40
  2968  0A5C  3444               	retlw	68
  2969  0A5D  3400               	retlw	0
  2970  0A5E  3400               	retlw	0
  2971  0A5F  3400               	retlw	0
  2972  0A60  3400               	retlw	0
  2973  0A61  3441               	retlw	65
  2974  0A62  347F               	retlw	127
  2975  0A63  3440               	retlw	64
  2976  0A64  3400               	retlw	0
  2977  0A65  3400               	retlw	0
  2978  0A66  3400               	retlw	0
  2979  0A67  3400               	retlw	0
  2980  0A68  3400               	retlw	0
  2981  0A69  347C               	retlw	124
  2982  0A6A  3404               	retlw	4
  2983  0A6B  3418               	retlw	24
  2984  0A6C  3404               	retlw	4
  2985  0A6D  3478               	retlw	120
  2986  0A6E  3400               	retlw	0
  2987  0A6F  3400               	retlw	0
  2988  0A70  3400               	retlw	0
  2989  0A71  347C               	retlw	124
  2990  0A72  3408               	retlw	8
  2991  0A73  3404               	retlw	4
  2992  0A74  347C               	retlw	124
  2993  0A75  3400               	retlw	0
  2994  0A76  3400               	retlw	0
  2995  0A77  3400               	retlw	0
  2996  0A78  3400               	retlw	0
  2997  0A79  3438               	retlw	56
  2998  0A7A  3444               	retlw	68
  2999  0A7B  3444               	retlw	68
  3000  0A7C  3438               	retlw	56
  3001  0A7D  3400               	retlw	0
  3002  0A7E  3400               	retlw	0
  3003  0A7F  3400               	retlw	0
  3004  0A80  3400               	retlw	0
  3005  0A81  34FC               	retlw	252
  3006  0A82  3424               	retlw	36
  3007  0A83  3424               	retlw	36
  3008  0A84  3418               	retlw	24
  3009  0A85  3400               	retlw	0
  3010  0A86  3400               	retlw	0
  3011  0A87  3400               	retlw	0
  3012  0A88  3400               	retlw	0
  3013  0A89  3418               	retlw	24
  3014  0A8A  3424               	retlw	36
  3015  0A8B  3424               	retlw	36
  3016  0A8C  34FC               	retlw	252
  3017  0A8D  3400               	retlw	0
  3018  0A8E  3400               	retlw	0
  3019  0A8F  3400               	retlw	0
  3020  0A90  3400               	retlw	0
  3021  0A91  3400               	retlw	0
  3022  0A92  347C               	retlw	124
  3023  0A93  3408               	retlw	8
  3024  0A94  3404               	retlw	4
  3025  0A95  3400               	retlw	0
  3026  0A96  3400               	retlw	0
  3027  0A97  3400               	retlw	0
  3028  0A98  3400               	retlw	0
  3029  0A99  3448               	retlw	72
  3030  0A9A  3454               	retlw	84
  3031  0A9B  3454               	retlw	84
  3032  0A9C  3424               	retlw	36
  3033  0A9D  3400               	retlw	0
  3034  0A9E  3400               	retlw	0
  3035  0A9F  3400               	retlw	0
  3036  0AA0  3400               	retlw	0
  3037  0AA1  3404               	retlw	4
  3038  0AA2  347F               	retlw	127
  3039  0AA3  3444               	retlw	68
  3040  0AA4  3400               	retlw	0
  3041  0AA5  3400               	retlw	0
  3042  0AA6  3400               	retlw	0
  3043  0AA7  3400               	retlw	0
  3044  0AA8  3400               	retlw	0
  3045  0AA9  343C               	retlw	60
  3046  0AAA  3440               	retlw	64
  3047  0AAB  3440               	retlw	64
  3048  0AAC  347C               	retlw	124
  3049  0AAD  3400               	retlw	0
  3050  0AAE  3400               	retlw	0
  3051  0AAF  3400               	retlw	0
  3052  0AB0  3400               	retlw	0
  3053  0AB1  341C               	retlw	28
  3054  0AB2  3420               	retlw	32
  3055  0AB3  3440               	retlw	64
  3056  0AB4  3420               	retlw	32
  3057  0AB5  341C               	retlw	28
  3058  0AB6  3400               	retlw	0
  3059  0AB7  3400               	retlw	0
  3060  0AB8  3400               	retlw	0
  3061  0AB9  343C               	retlw	60
  3062  0ABA  3440               	retlw	64
  3063  0ABB  3430               	retlw	48
  3064  0ABC  3440               	retlw	64
  3065  0ABD  343C               	retlw	60
  3066  0ABE  3400               	retlw	0
  3067  0ABF  3400               	retlw	0
  3068  0AC0  3400               	retlw	0
  3069  0AC1  3444               	retlw	68
  3070  0AC2  3428               	retlw	40
  3071  0AC3  3410               	retlw	16
  3072  0AC4  3428               	retlw	40
  3073  0AC5  3444               	retlw	68
  3074  0AC6  3400               	retlw	0
  3075  0AC7  3400               	retlw	0
  3076  0AC8  3400               	retlw	0
  3077  0AC9  341C               	retlw	28
  3078  0ACA  34A0               	retlw	160
  3079  0ACB  34A0               	retlw	160
  3080  0ACC  347C               	retlw	124
  3081  0ACD  3400               	retlw	0
  3082  0ACE  3400               	retlw	0
  3083  0ACF  3400               	retlw	0
  3084  0AD0  3400               	retlw	0
  3085  0AD1  3444               	retlw	68
  3086  0AD2  3464               	retlw	100
  3087  0AD3  3454               	retlw	84
  3088  0AD4  344C               	retlw	76
  3089  0AD5  3444               	retlw	68
  3090  0AD6  3400               	retlw	0
  3091  0AD7  3400               	retlw	0
  3092  0AD8  3400               	retlw	0
  3093  0AD9  3408               	retlw	8
  3094  0ADA  3436               	retlw	54
  3095  0ADB  3441               	retlw	65
  3096  0ADC  3400               	retlw	0
  3097  0ADD  3400               	retlw	0
  3098  0ADE  3400               	retlw	0
  3099  0ADF  3400               	retlw	0
  3100  0AE0  3400               	retlw	0
  3101  0AE1  3400               	retlw	0
  3102  0AE2  347F               	retlw	127
  3103  0AE3  3400               	retlw	0
  3104  0AE4  3400               	retlw	0
  3105  0AE5  3400               	retlw	0
  3106  0AE6  3400               	retlw	0
  3107  0AE7  3400               	retlw	0
  3108  0AE8  3400               	retlw	0
  3109  0AE9  3441               	retlw	65
  3110  0AEA  3436               	retlw	54
  3111  0AEB  3408               	retlw	8
  3112  0AEC  3400               	retlw	0
  3113  0AED  3400               	retlw	0
  3114  0AEE  3400               	retlw	0
  3115  0AEF  3400               	retlw	0
  3116  0AF0  3400               	retlw	0
  3117  0AF1  3402               	retlw	2
  3118  0AF2  3401               	retlw	1
  3119  0AF3  3401               	retlw	1
  3120  0AF4  3402               	retlw	2
  3121  0AF5  3401               	retlw	1
  3122  0AF6  3400               	retlw	0
  3123  0AF7  3400               	retlw	0
  3124  0AF8  3400               	retlw	0
  3125  0AF9  3402               	retlw	2
  3126  0AFA  3405               	retlw	5
  3127  0AFB  3405               	retlw	5
  3128  0AFC  3402               	retlw	2
  3129  0AFD  3400               	retlw	0
  3130  0AFE  3400               	retlw	0
  3131  0AFF  3400               	retlw	0
  3132  0B00                     __end_of_OledFont:	
  3133  0011                     _PIR1bits	set	17
  3134  0012                     _PIR2bits	set	18
  3135  009C                     _ADRESH	set	156
  3136  009B                     _ADRESL	set	155
  3137  009D                     _ADCON0bits	set	157
  3138  009E                     _ADCON1bits	set	158
  3139  008C                     _TRISAbits	set	140
  3140  008E                     _TRISCbits	set	142
  3141  0095                     _OPTION_REGbits	set	149
  3142  008F                     _TRISD	set	143
  3143  008E                     _TRISC	set	142
  3144  008D                     _TRISB	set	141
  3145  008C                     _TRISA	set	140
  3146  0090                     _TRISE	set	144
  3147  0097                     _WDTCON	set	151
  3148  0098                     _OSCTUNE	set	152
  3149  0099                     _OSCCON	set	153
  3150  010E                     _LATC	set	270
  3151  010D                     _LATB	set	269
  3152  010C                     _LATA	set	268
  3153  010F                     _LATD	set	271
  3154  0110                     _LATE	set	272
  3155  0116                     _BORCON	set	278
  3156  018C                     _ANSELAbits	set	396
  3157  018E                     _ANSELCbits	set	398
  3158  018C                     _ANSELA	set	396
  3159  0190                     _ANSELE	set	400
  3160  018D                     _ANSELB	set	397
  3161  018E                     _ANSELC	set	398
  3162  018F                     _ANSELD	set	399
  3163  0216                     _SSPCON2bits	set	534
  3164  0211                     _SSPBUF	set	529
  3165  0212                     _SSPADD	set	530
  3166  0215                     _SSPCONbits	set	533
  3167  020E                     _WPUC	set	526
  3168  020C                     _WPUA	set	524
  3169  020D                     _WPUB	set	525
  3170  0210                     _WPUE	set	528
  3171  020F                     _WPUD	set	527
  3172  028F                     _ODCOND	set	655
  3173  028E                     _ODCONC	set	654
  3174  028D                     _ODCONB	set	653
  3175  028C                     _ODCONA	set	652
  3176  0290                     _ODCONE	set	656
  3177  029E                     _CCPTMRSbits	set	670
  3178  0310                     _SLRCONE	set	784
  3179  030F                     _SLRCOND	set	783
  3180  030E                     _SLRCONC	set	782
  3181  030D                     _SLRCONB	set	781
  3182  030C                     _SLRCONA	set	780
  3183  041E                     _T6CONbits	set	1054
  3184  041E                     _T6CON	set	1054
  3185  041C                     _TMR6	set	1052
  3186  041D                     _PR6	set	1053
  3187  0617                     _PWM3DCL	set	1559
  3188  0618                     _PWM3DCH	set	1560
  3189  0619                     _PWM3CON	set	1561
  3190  0E20                     _SSPCLKPPSbits	set	3616
  3191  0E21                     _SSPDATPPSbits	set	3617
  3192  0E0F                     _PPSLOCKbits	set	3599
  3193  0E0F                     _PPSLOCK	set	3599
  3194  0EA5                     _RC5PPSbits	set	3749
  3195  0EA4                     _RC4PPSbits	set	3748
  3196  0E98                     _RB0PPS	set	3736
  3197  0B00                     STR_10:	
  3198  0B00  3425               	retlw	37	;'%'
  3199  0B01  346C               	retlw	108	;'l'
  3200  0B02  3475               	retlw	117	;'u'
  3201  0B03  342E               	retlw	46	;'.'
  3202  0B04  3425               	retlw	37	;'%'
  3203  0B05  3436               	retlw	54	;'6'
  3204  0B06  342E               	retlw	46	;'.'
  3205  0B07  3436               	retlw	54	;'6'
  3206  0B08  346C               	retlw	108	;'l'
  3207  0B09  3475               	retlw	117	;'u'
  3208  0B0A  3400               	retlw	0
  3209                           
  3210                           	psect	stringtext3
  3211  1828                     __pstringtext3:	
  3212  1828                     STR_8:	
  3213  1828  3420               	retlw	32	;' '
  3214  1829  3420               	retlw	32	;' '
  3215  182A  3420               	retlw	32	;' '
  3216  182B  3420               	retlw	32	;' '
  3217  182C  3420               	retlw	32	;' '
  3218  182D  3400               	retlw	0
  3219                           
  3220                           	psect	stringtext4
  3221  182E                     __pstringtext4:	
  3222  182E                     STR_4:	
  3223  182E  3453               	retlw	83	;'S'
  3224  182F  3474               	retlw	116	;'t'
  3225  1830  3461               	retlw	97	;'a'
  3226  1831  343A               	retlw	58	;':'
  3227  1832  3400               	retlw	0
  3228                           
  3229                           	psect	stringtext5
  3230  1833                     __pstringtext5:	
  3231  1833                     STR_1:	
  3232  1833  3453               	retlw	83	;'S'
  3233  1834  346F               	retlw	111	;'o'
  3234  1835  346C               	retlw	108	;'l'
  3235  1836  343A               	retlw	58	;':'
  3236  1837  3400               	retlw	0
  3237                           
  3238                           	psect	stringtext6
  3239  1838                     __pstringtext6:	
  3240  1838                     STR_3:	
  3241  1838  3443               	retlw	67	;'C'
  3242  1839  3475               	retlw	117	;'u'
  3243  183A  3472               	retlw	114	;'r'
  3244  183B  343A               	retlw	58	;':'
  3245  183C  3400               	retlw	0
  3246                           
  3247                           	psect	stringtext7
  3248  183D                     __pstringtext7:	
  3249  183D                     STR_2:	
  3250  183D  3442               	retlw	66	;'B'
  3251  183E  3461               	retlw	97	;'a'
  3252  183F  3474               	retlw	116	;'t'
  3253  1840  343A               	retlw	58	;':'
  3254  1841  3400               	retlw	0
  3255                           
  3256                           	psect	stringtext8
  3257  1842                     __pstringtext8:	
  3258  1842                     STR_5:	
  3259  1842  344F               	retlw	79	;'O'
  3260  1843  3466               	retlw	102	;'f'
  3261  1844  3466               	retlw	102	;'f'
  3262  1845  3400               	retlw	0
  3263                           
  3264                           	psect	stringtext9
  3265  1846                     __pstringtext9:	
  3266  1846                     STR_6:	
  3267  1846  3442               	retlw	66	;'B'
  3268  1847  3475               	retlw	117	;'u'
  3269  1848  346C               	retlw	108	;'l'
  3270  1849  3400               	retlw	0
  3271                           
  3272                           	psect	stringtext10
  3273  184A                     __pstringtext10:	
  3274  184A                     STR_7:	
  3275  184A  3446               	retlw	70	;'F'
  3276  184B  346C               	retlw	108	;'l'
  3277  184C  346F               	retlw	111	;'o'
  3278  184D  3400               	retlw	0
  3279                           
  3280                           	psect	stringtext11
  3281  0000                     __pstringtext11:	
  3282  1828                     
  3283                           ; #config settings
  3284  0000                     
  3285                           	psect	cinit
  3286  07D6                     start_initialization:	
  3287  07D6                     __initialization:	
  3288                           
  3289                           ; Initialize objects allocated to BANK1
  3290  07D6  301C               	movlw	low __pidataBANK1
  3291  07D7  0084               	movwf	4
  3292  07D8  3090               	movlw	(high __pidataBANK1)| (0+128)
  3293  07D9  0085               	movwf	5
  3294  07DA  30E9               	movlw	low __pdataBANK1
  3295  07DB  0086               	movwf	6
  3296  07DC  3000               	movlw	high __pdataBANK1
  3297  07DD  0087               	movwf	7
  3298  07DE  3007               	movlw	7
  3299  07DF  3190  200F  3187   	fcall	init_ram
  3300                           
  3301                           ; Initialize objects allocated to BANK2
  3302  07E2  3045               	movlw	low __pidataBANK2
  3303  07E3  0084               	movwf	4
  3304  07E4  3090               	movlw	(high __pidataBANK2)| (0+128)
  3305  07E5  0085               	movwf	5
  3306  07E6  304D               	movlw	low __pdataBANK2
  3307  07E7  0086               	movwf	6
  3308  07E8  3001               	movlw	high __pdataBANK2
  3309  07E9  0087               	movwf	7
  3310  07EA  300C               	movlw	12
  3311  07EB  3190  200F  3187   	fcall	init_ram
  3312                           
  3313                           ; Clear objects allocated to BANK1
  3314  07EE  30A0               	movlw	low __pbssBANK1
  3315  07EF  0084               	movwf	4
  3316  07F0  3000               	movlw	high __pbssBANK1
  3317  07F1  0085               	movwf	5
  3318  07F2  302A               	movlw	42
  3319  07F3  3190  2009  3187   	fcall	clear_ram0
  3320                           
  3321                           ; Clear objects allocated to BANK2
  3322  07F6  3020               	movlw	low __pbssBANK2
  3323  07F7  0084               	movwf	4
  3324  07F8  3001               	movlw	high __pbssBANK2
  3325  07F9  0085               	movwf	5
  3326  07FA  302D               	movlw	45
  3327  07FB  3190  2009         	fcall	clear_ram0
  3328  07FD                     end_of_initialization:	
  3329                           ;End of C runtime variable initialization code
  3330                           
  3331  07FD                     __end_of__initialization:	
  3332  07FD  0020               	movlb	0
  3333  07FE  3195  2D6B         	ljmp	_main	;jump to C main() function
  3334                           
  3335                           	psect	bssBANK1
  3336  00A0                     __pbssBANK1:	
  3337  00A0                     _integral:	
  3338  00A0                     	ds	4
  3339  00A4                     _output:	
  3340  00A4                     	ds	4
  3341  00A8                     _error:	
  3342  00A8                     	ds	4
  3343  00AC                     _measured_value:	
  3344  00AC                     	ds	4
  3345  00B0                     _setpoint:	
  3346  00B0                     	ds	4
  3347  00B4                     _intervolt:	
  3348  00B4                     	ds	4
  3349  00B8                     _Current:	
  3350  00B8                     	ds	4
  3351  00BC                     _read:	
  3352  00BC                     	ds	2
  3353  00BE                     _charge_status:	
  3354  00BE                     	ds	2
  3355  00C0                     _panel_v:	
  3356  00C0                     	ds	4
  3357  00C4                     _bat_v:	
  3358  00C4                     	ds	4
  3359  00C8                     _system_v:	
  3360  00C8                     	ds	2
  3361                           
  3362                           	psect	dataBANK1
  3363  00E9                     __pdataBANK1:	
  3364  00E9                     _duty:	
  3365  00E9                     	ds	4
  3366  00ED                     _system_volt:	
  3367  00ED                     	ds	1
  3368  00EE                     _panel_volt:	
  3369  00EE                     	ds	1
  3370  00EF                     _bat_volt:	
  3371  00EF                     	ds	1
  3372                           
  3373                           	psect	bssBANK2
  3374  0120                     __pbssBANK2:	
  3375  0120                     _finalVolt:	
  3376  0120                     	ds	4
  3377  0124                     _outVolt:	
  3378  0124                     	ds	4
  3379  0128                     _previous_error:	
  3380  0128                     	ds	4
  3381  012C                     _solar_volt:	
  3382  012C                     	ds	4
  3383  0130                     _lvd:	
  3384  0130                     	ds	4
  3385  0134                     _float_charge_sp:	
  3386  0134                     	ds	4
  3387  0138                     _bulk_charge_sp:	
  3388  0138                     	ds	4
  3389  013C                     ftoa@buf:	
  3390  013C                     	ds	17
  3391                           
  3392                           	psect	dataBANK2
  3393  014D                     __pdataBANK2:	
  3394  014D                     _Ki:	
  3395  014D                     	ds	4
  3396  0151                     _dt:	
  3397  0151                     	ds	4
  3398  0155                     _Kp:	
  3399  0155                     	ds	4
  3400                           
  3401                           	psect	inittext
  3402  100F                     init_ram:	
  3403  100F  00FE               	movwf	126
  3404  1010                     initloop:	
  3405  1010  0012               	moviw fsr0++
  3406  1011  001E               	movwi fsr1++
  3407  1012  0BFE               	decfsz	126,f
  3408  1013  2810               	goto	initloop
  3409  1014  3400               	retlw	0
  3410                           
  3411                           	psect	clrtext
  3412  1009                     clear_ram0:	
  3413                           ;	Called with FSR0 containing the base address, and
  3414                           ;	WREG with the size to clear
  3415                           
  3416  1009  0064               	clrwdt	;clear the watchdog before getting into this loop
  3417  100A                     clrloop0:	
  3418  100A  0180               	clrf	0	;clear RAM location pointed to by FSR
  3419  100B  3101               	addfsr 0,1
  3420  100C  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3421  100D  280A               	goto	clrloop0	;have we reached the end yet?
  3422  100E  3400               	retlw	0	;all done for this memory range, return
  3423                           
  3424                           	psect	cstackBANK1
  3425  00CA                     __pcstackBANK1:	
  3426  00CA                     ___fldiv@rem:	
  3427  00CA                     ftoa@rem:	
  3428                           ; 4 bytes @ 0x0
  3429                           
  3430                           
  3431                           ; 4 bytes @ 0x0
  3432  00CA                     	ds	4
  3433  00CE                     ___fldiv@sign:	
  3434  00CE                     ftoa@l:	
  3435                           ; 1 bytes @ 0x4
  3436                           
  3437                           
  3438                           ; 4 bytes @ 0x4
  3439  00CE                     	ds	1
  3440  00CF                     ___fldiv@new_exp:	
  3441                           
  3442                           ; 2 bytes @ 0x5
  3443  00CF                     	ds	2
  3444  00D1                     ___fldiv@grs:	
  3445                           
  3446                           ; 4 bytes @ 0x7
  3447  00D1                     	ds	1
  3448  00D2                     ftoa@cp:	
  3449                           
  3450                           ; 1 bytes @ 0x8
  3451  00D2                     	ds	1
  3452  00D3                     OLED_Write_Float@status:	
  3453                           
  3454                           ; 2 bytes @ 0x9
  3455  00D3                     	ds	2
  3456  00D5                     OLED_Write_Float@buf11:	
  3457  00D5                     ___fldiv@bexp:	
  3458                           ; 1 bytes @ 0xB
  3459                           
  3460                           
  3461                           ; 1 bytes @ 0xB
  3462  00D5                     	ds	1
  3463  00D6                     ___fldiv@aexp:	
  3464                           
  3465                           ; 1 bytes @ 0xC
  3466  00D6                     	ds	1
  3467  00D7                     read_current@convertedValue:	
  3468  00D7                     read_voltage@vin:	
  3469                           ; 2 bytes @ 0xD
  3470                           
  3471  00D7                     read_panel@vin:	
  3472                           ; 4 bytes @ 0xD
  3473                           
  3474                           
  3475                           ; 4 bytes @ 0xD
  3476  00D7                     	ds	2
  3477  00D9                     read_current@i:	
  3478                           
  3479                           ; 2 bytes @ 0xF
  3480  00D9                     	ds	2
  3481  00DB                     read_voltage@result:	
  3482  00DB                     read_panel@result:	
  3483                           ; 2 bytes @ 0x11
  3484                           
  3485  00DB                     read_current@Voltage:	
  3486                           ; 2 bytes @ 0x11
  3487                           
  3488                           
  3489                           ; 4 bytes @ 0x11
  3490  00DB                     	ds	2
  3491  00DD                     read_voltage@avg:	
  3492  00DD                     read_panel@avg:	
  3493                           ; 4 bytes @ 0x13
  3494                           
  3495                           
  3496                           ; 4 bytes @ 0x13
  3497  00DD                     	ds	4
  3498  00E1                     read_voltage@sum:	
  3499  00E1                     read_panel@sum:	
  3500                           ; 4 bytes @ 0x17
  3501                           
  3502                           
  3503                           ; 4 bytes @ 0x17
  3504  00E1                     	ds	4
  3505  00E5                     read_voltage@i:	
  3506  00E5                     read_panel@i:	
  3507                           ; 2 bytes @ 0x1B
  3508                           
  3509                           
  3510                           ; 2 bytes @ 0x1B
  3511  00E5                     	ds	2
  3512  00E7                     ??_main:	
  3513                           
  3514                           ; 1 bytes @ 0x1D
  3515  00E7                     	ds	2
  3516                           
  3517                           	psect	cstackCOMMON
  3518  0070                     __pcstackCOMMON:	
  3519  0070                     ?_isdigit:	
  3520  0070                     ?___flge:	
  3521                           ; 1 bit 
  3522                           
  3523  0070                     ?_PIN_MANAGER_Initialize:	
  3524                           ; 1 bit 
  3525                           
  3526  0070                     ??_PIN_MANAGER_Initialize:	
  3527                           ; 1 bytes @ 0x0
  3528                           
  3529  0070                     ?_OSCILLATOR_Initialize:	
  3530                           ; 1 bytes @ 0x0
  3531                           
  3532  0070                     ??_OSCILLATOR_Initialize:	
  3533                           ; 1 bytes @ 0x0
  3534                           
  3535  0070                     ?_WDT_Initialize:	
  3536                           ; 1 bytes @ 0x0
  3537                           
  3538  0070                     ??_WDT_Initialize:	
  3539                           ; 1 bytes @ 0x0
  3540                           
  3541  0070                     ?_I2C_Init:	
  3542                           ; 1 bytes @ 0x0
  3543                           
  3544  0070                     ??_I2C_Init:	
  3545                           ; 1 bytes @ 0x0
  3546                           
  3547  0070                     ?_OLED_Init:	
  3548                           ; 1 bytes @ 0x0
  3549                           
  3550  0070                     ?_OLED_Clear:	
  3551                           ; 1 bytes @ 0x0
  3552                           
  3553  0070                     ?_read_panel:	
  3554                           ; 1 bytes @ 0x0
  3555                           
  3556  0070                     ?_read_voltage:	
  3557                           ; 1 bytes @ 0x0
  3558                           
  3559  0070                     ?_read_current:	
  3560                           ; 1 bytes @ 0x0
  3561                           
  3562  0070                     ?_system_voltage:	
  3563                           ; 1 bytes @ 0x0
  3564                           
  3565  0070                     ?_set_point:	
  3566                           ; 1 bytes @ 0x0
  3567                           
  3568  0070                     ??_set_point:	
  3569                           ; 1 bytes @ 0x0
  3570                           
  3571  0070                     ?_pid_control:	
  3572                           ; 1 bytes @ 0x0
  3573                           
  3574  0070                     ?_print_data:	
  3575                           ; 1 bytes @ 0x0
  3576                           
  3577  0070                     ?_memmove:	
  3578                           ; 1 bytes @ 0x0
  3579                           
  3580  0070                     ??_isdigit:	
  3581                           ; 1 bytes @ 0x0
  3582                           
  3583  0070                     ?_PWM3_Initialize:	
  3584                           ; 1 bytes @ 0x0
  3585                           
  3586  0070                     ??_PWM3_Initialize:	
  3587                           ; 1 bytes @ 0x0
  3588                           
  3589  0070                     ?_TMR6_Initialize:	
  3590                           ; 1 bytes @ 0x0
  3591                           
  3592  0070                     ??_TMR6_Initialize:	
  3593                           ; 1 bytes @ 0x0
  3594                           
  3595  0070                     ?_SYSTEM_Initialize:	
  3596                           ; 1 bytes @ 0x0
  3597                           
  3598  0070                     ??_SYSTEM_Initialize:	
  3599                           ; 1 bytes @ 0x0
  3600                           
  3601  0070                     ?_main:	
  3602                           ; 1 bytes @ 0x0
  3603                           
  3604  0070                     ?_Send_I2C_Data:	
  3605                           ; 1 bytes @ 0x0
  3606                           
  3607  0070                     ?_Send_I2C_StartBit:	
  3608                           ; 1 bytes @ 0x0
  3609                           
  3610  0070                     ??_Send_I2C_StartBit:	
  3611                           ; 1 bytes @ 0x0
  3612                           
  3613  0070                     ?_Send_I2C_StopBit:	
  3614                           ; 1 bytes @ 0x0
  3615                           
  3616  0070                     ??_Send_I2C_StopBit:	
  3617                           ; 1 bytes @ 0x0
  3618                           
  3619  0070                     ?_OLED_Command:	
  3620                           ; 1 bytes @ 0x0
  3621                           
  3622  0070                     ?_OLED_PutChar:	
  3623                           ; 1 bytes @ 0x0
  3624                           
  3625  0070                     ?__Umul8_16:	
  3626                           ; 1 bytes @ 0x0
  3627                           
  3628  0070                     ?___wmul:	
  3629                           ; 2 bytes @ 0x0
  3630                           
  3631  0070                     ?___lldiv:	
  3632                           ; 2 bytes @ 0x0
  3633                           
  3634  0070                     ?___flneg:	
  3635                           ; 4 bytes @ 0x0
  3636                           
  3637  0070                     _isdigit$1091:	
  3638                           ; 4 bytes @ 0x0
  3639                           
  3640  0070                     __Umul8_16@multiplicand:	
  3641                           ; 1 bytes @ 0x0
  3642                           
  3643  0070                     Send_I2C_Data@databyte:	
  3644                           ; 1 bytes @ 0x0
  3645                           
  3646  0070                     ___wmul@multiplier:	
  3647                           ; 2 bytes @ 0x0
  3648                           
  3649  0070                     memmove@s1:	
  3650                           ; 2 bytes @ 0x0
  3651                           
  3652  0070                     ___lldiv@divisor:	
  3653                           ; 2 bytes @ 0x0
  3654                           
  3655  0070                     ___flge@ff1:	
  3656                           ; 4 bytes @ 0x0
  3657                           
  3658  0070                     ___flneg@f1:	
  3659                           ; 4 bytes @ 0x0
  3660                           
  3661                           
  3662                           ; 4 bytes @ 0x0
  3663  0070                     	ds	1
  3664  0071                     isdigit@c:	
  3665                           
  3666                           ; 1 bytes @ 0x1
  3667  0071                     	ds	1
  3668  0072                     ??__Umul8_16:	
  3669  0072                     ??_Send_I2C_Data:	
  3670                           ; 1 bytes @ 0x2
  3671                           
  3672  0072                     ??_OLED_Command:	
  3673                           ; 1 bytes @ 0x2
  3674                           
  3675  0072                     ___wmul@multiplicand:	
  3676                           ; 1 bytes @ 0x2
  3677                           
  3678  0072                     memmove@n:	
  3679                           ; 2 bytes @ 0x2
  3680                           
  3681                           
  3682                           ; 2 bytes @ 0x2
  3683  0072                     	ds	2
  3684  0074                     ??_memmove:	
  3685  0074                     ??___wmul:	
  3686                           ; 1 bytes @ 0x4
  3687                           
  3688  0074                     ??___flneg:	
  3689                           ; 1 bytes @ 0x4
  3690                           
  3691  0074                     OLED_Command@temp:	
  3692                           ; 1 bytes @ 0x4
  3693                           
  3694  0074                     ___wmul@product:	
  3695                           ; 1 bytes @ 0x4
  3696                           
  3697  0074                     __Umul8_16@product:	
  3698                           ; 2 bytes @ 0x4
  3699                           
  3700  0074                     ___lldiv@dividend:	
  3701                           ; 2 bytes @ 0x4
  3702                           
  3703  0074                     ___flge@ff2:	
  3704                           ; 4 bytes @ 0x4
  3705                           
  3706                           
  3707                           ; 4 bytes @ 0x4
  3708  0074                     	ds	1
  3709  0075                     ??_OLED_Init:	
  3710  0075                     ?_OLED_YX:	
  3711                           ; 1 bytes @ 0x5
  3712                           
  3713  0075                     OLED_YX@Column:	
  3714                           ; 1 bytes @ 0x5
  3715                           
  3716                           
  3717                           ; 1 bytes @ 0x5
  3718  0075                     	ds	1
  3719  0076                     ??_OLED_YX:	
  3720  0076                     __Umul8_16@word_mpld:	
  3721                           ; 1 bytes @ 0x6
  3722                           
  3723                           
  3724                           ; 2 bytes @ 0x6
  3725  0076                     	ds	2
  3726  0078                     ??___lldiv:	
  3727  0078                     ??___flge:	
  3728                           ; 1 bytes @ 0x8
  3729                           
  3730  0078                     memmove@d1:	
  3731                           ; 1 bytes @ 0x8
  3732                           
  3733  0078                     __Umul8_16@multiplier:	
  3734                           ; 1 bytes @ 0x8
  3735                           
  3736                           
  3737                           ; 1 bytes @ 0x8
  3738  0078                     	ds	1
  3739  0079                     ?___xxtofl:	
  3740  0079                     OLED_YX@Row:	
  3741                           ; 4 bytes @ 0x9
  3742                           
  3743  0079                     memmove@s:	
  3744                           ; 1 bytes @ 0x9
  3745                           
  3746  0079                     ___lldiv@quotient:	
  3747                           ; 2 bytes @ 0x9
  3748                           
  3749  0079                     ___xxtofl@val:	
  3750                           ; 4 bytes @ 0x9
  3751                           
  3752                           
  3753                           ; 4 bytes @ 0x9
  3754  0079                     	ds	2
  3755  007B                     memmove@d:	
  3756                           
  3757                           ; 1 bytes @ 0xB
  3758  007B                     	ds	1
  3759  007C                     ??_OLED_Clear:	
  3760  007C                     ??_system_voltage:	
  3761                           ; 1 bytes @ 0xC
  3762                           
  3763  007C                     ?_OLED_Write_String:	
  3764                           ; 1 bytes @ 0xC
  3765                           
  3766  007C                     OLED_Write_String@s:	
  3767                           ; 1 bytes @ 0xC
  3768                           
  3769                           
  3770                           ; 2 bytes @ 0xC
  3771  007C                     	ds	1
  3772  007D                     ??_read_panel:	
  3773  007D                     ??_read_voltage:	
  3774                           ; 1 bytes @ 0xD
  3775                           
  3776  007D                     ??_read_current:	
  3777                           ; 1 bytes @ 0xD
  3778                           
  3779  007D                     ??_pid_control:	
  3780                           ; 1 bytes @ 0xD
  3781                           
  3782  007D                     ??_roundedVal:	
  3783                           ; 1 bytes @ 0xD
  3784                           
  3785  007D                     ??___flsub:	
  3786                           ; 1 bytes @ 0xD
  3787                           
  3788  007D                     ___lldiv@counter:	
  3789                           ; 1 bytes @ 0xD
  3790                           
  3791                           
  3792                           ; 1 bytes @ 0xD
  3793  007D                     	ds	1
  3794                           
  3795                           	psect	cstackBANK0
  3796  0020                     __pcstackBANK0:	
  3797  0020                     ??_OLED_PutChar:	
  3798  0020                     ??___xxtofl:	
  3799                           ; 1 bytes @ 0x0
  3800                           
  3801  0020                     ?___llmod:	
  3802                           ; 1 bytes @ 0x0
  3803                           
  3804  0020                     ___llmod@divisor:	
  3805                           ; 4 bytes @ 0x0
  3806                           
  3807                           
  3808                           ; 4 bytes @ 0x0
  3809  0020                     	ds	4
  3810  0024                     ___xxtofl@sign:	
  3811  0024                     ___llmod@dividend:	
  3812                           ; 1 bytes @ 0x4
  3813                           
  3814  0024                     OLED_PutChar@bytes:	
  3815                           ; 4 bytes @ 0x4
  3816                           
  3817                           
  3818                           ; 9 bytes @ 0x4
  3819  0024                     	ds	1
  3820  0025                     ___xxtofl@exp:	
  3821                           
  3822                           ; 1 bytes @ 0x5
  3823  0025                     	ds	1
  3824  0026                     ___xxtofl@arg:	
  3825                           
  3826                           ; 4 bytes @ 0x6
  3827  0026                     	ds	2
  3828  0028                     ??___llmod:	
  3829                           
  3830                           ; 1 bytes @ 0x8
  3831  0028                     	ds	1
  3832  0029                     ___llmod@counter:	
  3833                           
  3834                           ; 1 bytes @ 0x9
  3835  0029                     	ds	1
  3836  002A                     ?_sprintf:	
  3837  002A                     ?___flmul:	
  3838                           ; 2 bytes @ 0xA
  3839                           
  3840  002A                     sprintf@f:	
  3841                           ; 4 bytes @ 0xA
  3842                           
  3843  002A                     ___flmul@b:	
  3844                           ; 2 bytes @ 0xA
  3845                           
  3846                           
  3847                           ; 4 bytes @ 0xA
  3848  002A                     	ds	3
  3849  002D                     OLED_PutChar@base:	
  3850                           
  3851                           ; 2 bytes @ 0xD
  3852  002D                     	ds	1
  3853  002E                     ___flmul@a:	
  3854                           
  3855                           ; 4 bytes @ 0xE
  3856  002E                     	ds	1
  3857  002F                     OLED_PutChar@i:	
  3858                           
  3859                           ; 2 bytes @ 0xF
  3860  002F                     	ds	2
  3861  0031                     OLED_PutChar@ch:	
  3862                           
  3863                           ; 1 bytes @ 0x11
  3864  0031                     	ds	1
  3865  0032                     ??_OLED_Write_String:	
  3866  0032                     ??___flmul:	
  3867                           ; 1 bytes @ 0x12
  3868                           
  3869  0032                     OLED_Clear@row:	
  3870                           ; 1 bytes @ 0x12
  3871                           
  3872                           
  3873                           ; 2 bytes @ 0x12
  3874  0032                     	ds	2
  3875  0034                     ??_sprintf:	
  3876  0034                     OLED_Clear@col:	
  3877                           ; 1 bytes @ 0x14
  3878                           
  3879                           
  3880                           ; 2 bytes @ 0x14
  3881  0034                     	ds	3
  3882  0037                     ___flmul@sign:	
  3883                           
  3884                           ; 1 bytes @ 0x17
  3885  0037                     	ds	1
  3886  0038                     ___flmul@grs:	
  3887                           
  3888                           ; 4 bytes @ 0x18
  3889  0038                     	ds	2
  3890  003A                     sprintf@flag:	
  3891                           
  3892                           ; 1 bytes @ 0x1A
  3893  003A                     	ds	1
  3894  003B                     sprintf@ap:	
  3895                           
  3896                           ; 1 bytes @ 0x1B
  3897  003B                     	ds	1
  3898  003C                     ___flmul@aexp:	
  3899  003C                     sprintf@val:	
  3900                           ; 1 bytes @ 0x1C
  3901                           
  3902                           
  3903                           ; 4 bytes @ 0x1C
  3904  003C                     	ds	1
  3905  003D                     ___flmul@bexp:	
  3906                           
  3907                           ; 1 bytes @ 0x1D
  3908  003D                     	ds	1
  3909  003E                     ___flmul@prod:	
  3910                           
  3911                           ; 4 bytes @ 0x1E
  3912  003E                     	ds	2
  3913  0040                     sprintf@sp:	
  3914                           
  3915                           ; 1 bytes @ 0x20
  3916  0040                     	ds	1
  3917  0041                     sprintf@width:	
  3918                           
  3919                           ; 2 bytes @ 0x21
  3920  0041                     	ds	1
  3921  0042                     ___flmul@temp:	
  3922                           
  3923                           ; 2 bytes @ 0x22
  3924  0042                     	ds	1
  3925  0043                     sprintf@prec:	
  3926                           
  3927                           ; 2 bytes @ 0x23
  3928  0043                     	ds	1
  3929  0044                     ?___fladd:	
  3930  0044                     ___fladd@b:	
  3931                           ; 4 bytes @ 0x24
  3932                           
  3933                           
  3934                           ; 4 bytes @ 0x24
  3935  0044                     	ds	1
  3936  0045                     sprintf@c:	
  3937                           
  3938                           ; 1 bytes @ 0x25
  3939  0045                     	ds	3
  3940  0048                     ___fladd@a:	
  3941                           
  3942                           ; 4 bytes @ 0x28
  3943  0048                     	ds	4
  3944  004C                     ??___fladd:	
  3945                           
  3946                           ; 1 bytes @ 0x2C
  3947  004C                     	ds	8
  3948  0054                     ___fladd@signs:	
  3949                           
  3950                           ; 1 bytes @ 0x34
  3951  0054                     	ds	1
  3952  0055                     ___fladd@aexp:	
  3953                           
  3954                           ; 1 bytes @ 0x35
  3955  0055                     	ds	1
  3956  0056                     ___fladd@bexp:	
  3957                           
  3958                           ; 1 bytes @ 0x36
  3959  0056                     	ds	1
  3960  0057                     ___fladd@grs:	
  3961                           
  3962                           ; 1 bytes @ 0x37
  3963  0057                     	ds	1
  3964  0058                     ?___fltol:	
  3965  0058                     ?___flsub:	
  3966                           ; 4 bytes @ 0x38
  3967                           
  3968  0058                     ?___fldiv:	
  3969                           ; 4 bytes @ 0x38
  3970                           
  3971  0058                     ___fltol@f1:	
  3972                           ; 4 bytes @ 0x38
  3973                           
  3974  0058                     ___flsub@a:	
  3975                           ; 4 bytes @ 0x38
  3976                           
  3977  0058                     ___fldiv@a:	
  3978                           ; 4 bytes @ 0x38
  3979                           
  3980                           
  3981                           ; 4 bytes @ 0x38
  3982  0058                     	ds	4
  3983  005C                     ??___fltol:	
  3984  005C                     ___flsub@b:	
  3985                           ; 1 bytes @ 0x3C
  3986                           
  3987  005C                     ___fldiv@b:	
  3988                           ; 4 bytes @ 0x3C
  3989                           
  3990                           
  3991                           ; 4 bytes @ 0x3C
  3992  005C                     	ds	4
  3993  0060                     ??___fldiv:	
  3994                           
  3995                           ; 1 bytes @ 0x40
  3996  0060                     	ds	1
  3997  0061                     ___fltol@sign1:	
  3998                           
  3999                           ; 1 bytes @ 0x41
  4000  0061                     	ds	1
  4001  0062                     ___fltol@exp1:	
  4002                           
  4003                           ; 1 bytes @ 0x42
  4004  0062                     	ds	1
  4005  0063                     ?_ftoa:	
  4006  0063                     ?_PWM3_LoadDutyValue:	
  4007                           ; 1 bytes @ 0x43
  4008                           
  4009  0063                     PWM3_LoadDutyValue@dutyValue:	
  4010                           ; 1 bytes @ 0x43
  4011                           
  4012  0063                     ftoa@f:	
  4013                           ; 2 bytes @ 0x43
  4014                           
  4015                           
  4016                           ; 4 bytes @ 0x43
  4017  0063                     	ds	2
  4018  0065                     ??_PWM3_LoadDutyValue:	
  4019  0065                     ?_roundedVal:	
  4020                           ; 1 bytes @ 0x45
  4021                           
  4022  0065                     roundedVal@x:	
  4023                           ; 4 bytes @ 0x45
  4024                           
  4025                           
  4026                           ; 4 bytes @ 0x45
  4027  0065                     	ds	2
  4028  0067                     ftoa@status:	
  4029                           
  4030                           ; 1 bytes @ 0x47
  4031  0067                     	ds	1
  4032  0068                     ??_ftoa:	
  4033                           
  4034                           ; 1 bytes @ 0x48
  4035  0068                     	ds	1
  4036  0069                     ?_OLED_Write_Float:	
  4037  0069                     roundedVal@value:	
  4038                           ; 1 bytes @ 0x49
  4039                           
  4040  0069                     OLED_Write_Float@f:	
  4041                           ; 4 bytes @ 0x49
  4042                           
  4043                           
  4044                           ; 4 bytes @ 0x49
  4045  0069                     	ds	4
  4046  006D                     ??_OLED_Write_Float:	
  4047                           
  4048                           ; 1 bytes @ 0x4D
  4049  006D                     	ds	2
  4050  006F                     ??_print_data:	
  4051                           
  4052                           ; 1 bytes @ 0x4F
  4053  006F                     	ds	1
  4054                           
  4055                           	psect	maintext
  4056  156B                     __pmaintext:	
  4057 ;;
  4058 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  4059 ;;
  4060 ;; *************** function _main *****************
  4061 ;; Defined at:
  4062 ;;		line 112 in file "main.c"
  4063 ;; Parameters:    Size  Location     Type
  4064 ;;		None
  4065 ;; Auto vars:     Size  Location     Type
  4066 ;;		None
  4067 ;; Return value:  Size  Location     Type
  4068 ;;                  1    wreg      void 
  4069 ;; Registers used:
  4070 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4071 ;; Tracked objects:
  4072 ;;		On entry : B1F/0
  4073 ;;		On exit  : 0/0
  4074 ;;		Unchanged: 0/0
  4075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4078 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4079 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4080 ;;Total ram usage:        2 bytes
  4081 ;; Hardware stack levels required when called:    5
  4082 ;; This function calls:
  4083 ;;		_I2C_Init
  4084 ;;		_OLED_Clear
  4085 ;;		_OLED_Init
  4086 ;;		_PWM3_LoadDutyValue
  4087 ;;		_SYSTEM_Initialize
  4088 ;;		_pid_control
  4089 ;;		_print_data
  4090 ;;		_read_current
  4091 ;;		_read_panel
  4092 ;;		_read_voltage
  4093 ;;		_set_point
  4094 ;;		_system_voltage
  4095 ;; This function is called by:
  4096 ;;		Startup code after reset
  4097 ;; This function uses a non-reentrant model
  4098 ;;
  4099                           
  4100                           
  4101                           ;psect for function _main
  4102  156B                     _main:	
  4103                           
  4104                           ;main.c: 115: SYSTEM_Initialize();
  4105                           
  4106                           ;incstack = 0
  4107                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4108  156B  3190  206C  3195   	fcall	_SYSTEM_Initialize
  4109                           
  4110                           ;main.c: 118: ANSELCbits.ANSC4 = 0;
  4111  156E  0023               	movlb	3	; select bank3
  4112  156F  120E               	bcf	14,4	;volatile
  4113                           
  4114                           ;main.c: 119: ANSELCbits.ANSC5 = 0;
  4115  1570  128E               	bcf	14,5	;volatile
  4116                           
  4117                           ;main.c: 121: TRISCbits.TRISC4 = 1;
  4118  1571  0021               	movlb	1	; select bank1
  4119  1572  160E               	bsf	14,4	;volatile
  4120                           
  4121                           ;main.c: 122: TRISCbits.TRISC5 = 1;
  4122  1573  168E               	bsf	14,5	;volatile
  4123                           
  4124                           ;main.c: 124: PPSLOCK = 0x55;
  4125  1574  3055               	movlw	85
  4126  1575  003C               	movlb	28	; select bank28
  4127  1576  008F               	movwf	15	;volsfr
  4128                           
  4129                           ;main.c: 125: PPSLOCK = 0xAA;
  4130  1577  30AA               	movlw	170
  4131  1578  008F               	movwf	15	;volsfr
  4132                           
  4133                           ;main.c: 126: PPSLOCKbits.PPSLOCKED = 0x00;
  4134  1579  100F               	bcf	15,0	;volsfr
  4135                           
  4136                           ;main.c: 128: RC4PPSbits.RC4PPS = 0x0011;
  4137  157A  003D               	movlb	29	; select bank29
  4138  157B  0824               	movf	36,w	;volatile
  4139  157C  39E0               	andlw	-32
  4140  157D  3811               	iorlw	17
  4141  157E  00A4               	movwf	36	;volatile
  4142                           
  4143                           ;main.c: 129: SSPDATPPSbits.SSPDATPPS = 0x0014;
  4144  157F  003C               	movlb	28	; select bank28
  4145  1580  0821               	movf	33,w	;volatile
  4146  1581  39E0               	andlw	-32
  4147  1582  3814               	iorlw	20
  4148  1583  00A1               	movwf	33	;volatile
  4149                           
  4150                           ;main.c: 130: SSPCLKPPSbits.SSPCLKPPS = 0x0015;
  4151  1584  0820               	movf	32,w	;volatile
  4152  1585  39E0               	andlw	-32
  4153  1586  3815               	iorlw	21
  4154  1587  00A0               	movwf	32	;volatile
  4155                           
  4156                           ;main.c: 131: RC5PPSbits.RC5PPS = 0x0010;
  4157  1588  003D               	movlb	29	; select bank29
  4158  1589  0825               	movf	37,w	;volatile
  4159  158A  39E0               	andlw	-32
  4160  158B  3810               	iorlw	16
  4161  158C  00A5               	movwf	37	;volatile
  4162                           
  4163                           ;main.c: 133: PPSLOCK = 0x55;
  4164  158D  3055               	movlw	85
  4165  158E  003C               	movlb	28	; select bank28
  4166  158F  008F               	movwf	15	;volsfr
  4167                           
  4168                           ;main.c: 134: PPSLOCK = 0xAA;
  4169  1590  30AA               	movlw	170
  4170  1591  008F               	movwf	15	;volsfr
  4171                           
  4172                           ;main.c: 135: PPSLOCKbits.PPSLOCKED = 0x01;
  4173  1592  140F               	bsf	15,0	;volsfr
  4174                           
  4175                           ;main.c: 139: I2C_Init();
  4176  1593  3190  207B  3195   	fcall	_I2C_Init
  4177                           
  4178                           ;main.c: 140: _delay((unsigned long)((500)*(16000000/4000.0)));
  4179  1596  300B               	movlw	11
  4180  1597  0021               	movlb	1	; select bank1
  4181  1598  00E8               	movwf	(??_main^(0+128)+1)
  4182  1599  3026               	movlw	38
  4183  159A  00E7               	movwf	??_main^(0+128)
  4184  159B  305D               	movlw	93
  4185  159C                     u4087:	
  4186  159C  0B89               	decfsz	9,f
  4187  159D  2D9C               	goto	u4087
  4188  159E  0BE7               	decfsz	??_main^(0+128),f
  4189  159F  2D9C               	goto	u4087
  4190  15A0  0BE8               	decfsz	(??_main^(0+128)+1),f
  4191  15A1  2D9C               	goto	u4087
  4192  15A2  3200               	nop2
  4193                           
  4194                           ;main.c: 143: OLED_Init();
  4195  15A3  3192  228D  3195   	fcall	_OLED_Init
  4196                           
  4197                           ;main.c: 144: _delay((unsigned long)((500)*(16000000/4000.0)));
  4198  15A6  300B               	movlw	11
  4199  15A7  0021               	movlb	1	; select bank1
  4200  15A8  00E8               	movwf	(??_main^(0+128)+1)
  4201  15A9  3026               	movlw	38
  4202  15AA  00E7               	movwf	??_main^(0+128)
  4203  15AB  305D               	movlw	93
  4204  15AC                     u4097:	
  4205  15AC  0B89               	decfsz	9,f
  4206  15AD  2DAC               	goto	u4097
  4207  15AE  0BE7               	decfsz	??_main^(0+128),f
  4208  15AF  2DAC               	goto	u4097
  4209  15B0  0BE8               	decfsz	(??_main^(0+128)+1),f
  4210  15B1  2DAC               	goto	u4097
  4211  15B2  3200               	nop2
  4212                           
  4213                           ;main.c: 147: OLED_Clear();
  4214  15B3  3191  2157  3195   	fcall	_OLED_Clear
  4215                           
  4216                           ;main.c: 148: _delay((unsigned long)((100)*(16000000/4000.0)));
  4217  15B6  3003               	movlw	3
  4218  15B7  0021               	movlb	1	; select bank1
  4219  15B8  00E8               	movwf	(??_main^(0+128)+1)
  4220  15B9  3008               	movlw	8
  4221  15BA  00E7               	movwf	??_main^(0+128)
  4222  15BB  3077               	movlw	119
  4223  15BC                     u4107:	
  4224  15BC  0B89               	decfsz	9,f
  4225  15BD  2DBC               	goto	u4107
  4226  15BE  0BE7               	decfsz	??_main^(0+128),f
  4227  15BF  2DBC               	goto	u4107
  4228  15C0  0BE8               	decfsz	(??_main^(0+128)+1),f
  4229  15C1  2DBC               	goto	u4107
  4230                           
  4231                           ;main.c: 152: TRISAbits.TRISA0 = 1;
  4232  15C2  0021               	movlb	1	; select bank1
  4233  15C3  140C               	bsf	12,0	;volatile
  4234                           
  4235                           ;main.c: 153: TRISAbits.TRISA1 = 1;
  4236  15C4  148C               	bsf	12,1	;volatile
  4237                           
  4238                           ;main.c: 154: TRISAbits.TRISA2 = 1;
  4239  15C5  150C               	bsf	12,2	;volatile
  4240                           
  4241                           ;main.c: 157: ANSELAbits.ANSA0 = 1;
  4242  15C6  0023               	movlb	3	; select bank3
  4243  15C7  140C               	bsf	12,0	;volatile
  4244                           
  4245                           ;main.c: 158: ANSELAbits.ANSA1 = 1;
  4246  15C8  148C               	bsf	12,1	;volatile
  4247                           
  4248                           ;main.c: 159: ANSELAbits.ANSA2 = 1;
  4249  15C9  150C               	bsf	12,2	;volatile
  4250                           
  4251                           ;main.c: 167: ADCON1bits.ADCS = 0b010;
  4252  15CA  0021               	movlb	1	; select bank1
  4253  15CB  081E               	movf	30,w	;volatile
  4254  15CC  398F               	andlw	-113
  4255  15CD  3820               	iorlw	32
  4256  15CE  009E               	movwf	30	;volatile
  4257                           
  4258                           ;main.c: 170: ADCON1bits.ADFM = 1;
  4259  15CF  179E               	bsf	30,7	;volatile
  4260                           
  4261                           ;main.c: 173: ADCON1bits.ADNREF = 0;
  4262  15D0  111E               	bcf	30,2	;volatile
  4263                           
  4264                           ;main.c: 176: ADCON1bits.ADPREF = 0b00;
  4265  15D1  30FC               	movlw	-4
  4266  15D2  059E               	andwf	30,f	;volatile
  4267                           
  4268                           ;main.c: 179: ADCON0bits.CHS = 0b00000;
  4269  15D3  3083               	movlw	-125
  4270  15D4  059D               	andwf	29,f	;volatile
  4271                           
  4272                           ;main.c: 182: ADRESL = 0;
  4273  15D5  019B               	clrf	27	;volatile
  4274                           
  4275                           ;main.c: 183: ADRESH = 0;
  4276  15D6  019C               	clrf	28	;volatile
  4277                           
  4278                           ;main.c: 186: ADCON0bits.ADON = 1;
  4279  15D7  141D               	bsf	29,0	;volatile
  4280                           
  4281                           ;main.c: 189: PWM3_LoadDutyValue(90);
  4282  15D8  305A               	movlw	90
  4283  15D9  0020               	movlb	0	; select bank0
  4284  15DA  00E3               	movwf	PWM3_LoadDutyValue@dutyValue
  4285  15DB  3000               	movlw	0
  4286  15DC  00E4               	movwf	PWM3_LoadDutyValue@dutyValue+1
  4287  15DD  3190  209F  3195   	fcall	_PWM3_LoadDutyValue
  4288  15E0                     l3506:	
  4289                           
  4290                           ;main.c: 192: {;main.c: 193: read_panel();
  4291  15E0  318C  2421  3195   	fcall	_read_panel
  4292                           
  4293                           ;main.c: 194: read_voltage();
  4294  15E3  318D  2563  3195   	fcall	_read_voltage
  4295                           
  4296                           ;main.c: 195: read_current();
  4297  15E6  318B  2316  3195   	fcall	_read_current
  4298                           
  4299                           ;main.c: 197: system_voltage();
  4300  15E9  3192  22F1  3195   	fcall	_system_voltage
  4301                           
  4302                           ;main.c: 198: set_point();
  4303  15EC  3191  21B9  3195   	fcall	_set_point
  4304                           
  4305                           ;main.c: 200: pid_control();
  4306  15EF  318E  26AB  3195   	fcall	_pid_control
  4307                           
  4308                           ;main.c: 201: print_data();
  4309  15F2  3195  25F6  3195   	fcall	_print_data
  4310  15F5  2DE0               	goto	l3506
  4311  15F6                     __end_of_main:	
  4312                           
  4313                           	psect	text1
  4314  12F1                     __ptext1:	
  4315 ;; *************** function _system_voltage *****************
  4316 ;; Defined at:
  4317 ;;		line 367 in file "main.c"
  4318 ;; Parameters:    Size  Location     Type
  4319 ;;		None
  4320 ;; Auto vars:     Size  Location     Type
  4321 ;;		None
  4322 ;; Return value:  Size  Location     Type
  4323 ;;                  1    wreg      void 
  4324 ;; Registers used:
  4325 ;;		wreg, status,2, status,0, pclath, cstack
  4326 ;; Tracked objects:
  4327 ;;		On entry : 0/0
  4328 ;;		On exit  : 0/0
  4329 ;;		Unchanged: 0/0
  4330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4335 ;;Total ram usage:        0 bytes
  4336 ;; Hardware stack levels used:    1
  4337 ;; Hardware stack levels required when called:    1
  4338 ;; This function calls:
  4339 ;;		___flge
  4340 ;; This function is called by:
  4341 ;;		_main
  4342 ;; This function uses a non-reentrant model
  4343 ;;
  4344                           
  4345                           
  4346                           ;psect for function _system_voltage
  4347  12F1                     _system_voltage:	
  4348                           
  4349                           ;main.c: 369: if ((*bat_volt > 11.5) && (*bat_volt < 15.5))
  4350                           
  4351                           ;incstack = 0
  4352                           ; Regs used in _system_voltage: [wreg+status,2+status,0+pclath+cstack]
  4353  12F1  3041               	movlw	65
  4354  12F2  00F3               	movwf	___flge@ff1+3
  4355  12F3  3038               	movlw	56
  4356  12F4  00F2               	movwf	___flge@ff1+2
  4357  12F5  3000               	movlw	0
  4358  12F6  00F1               	movwf	___flge@ff1+1
  4359  12F7  3000               	movlw	0
  4360  12F8  00F0               	movwf	___flge@ff1
  4361  12F9  0021               	movlb	1	; select bank1
  4362  12FA  0847               	movf	(_bat_v+3)^(0+128),w
  4363  12FB  00F7               	movwf	___flge@ff2+3
  4364  12FC  0846               	movf	(_bat_v+2)^(0+128),w
  4365  12FD  00F6               	movwf	___flge@ff2+2
  4366  12FE  0845               	movf	(_bat_v+1)^(0+128),w
  4367  12FF  00F5               	movwf	___flge@ff2+1
  4368  1300  0844               	movf	_bat_v^(0+128),w
  4369  1301  00F4               	movwf	___flge@ff2
  4370  1302  3194  24F0  3192   	fcall	___flge
  4371  1305  1803               	btfsc	3,0
  4372  1306  2B23               	goto	l3376
  4373  1307  0021               	movlb	1	; select bank1
  4374  1308  0847               	movf	(_bat_v+3)^(0+128),w
  4375  1309  00F3               	movwf	___flge@ff1+3
  4376  130A  0846               	movf	(_bat_v+2)^(0+128),w
  4377  130B  00F2               	movwf	___flge@ff1+2
  4378  130C  0845               	movf	(_bat_v+1)^(0+128),w
  4379  130D  00F1               	movwf	___flge@ff1+1
  4380  130E  0844               	movf	_bat_v^(0+128),w
  4381  130F  00F0               	movwf	___flge@ff1
  4382  1310  3041               	movlw	65
  4383  1311  00F7               	movwf	___flge@ff2+3
  4384  1312  3078               	movlw	120
  4385  1313  00F6               	movwf	___flge@ff2+2
  4386  1314  3000               	movlw	0
  4387  1315  00F5               	movwf	___flge@ff2+1
  4388  1316  3000               	movlw	0
  4389  1317  00F4               	movwf	___flge@ff2
  4390  1318  3194  24F0  3192   	fcall	___flge
  4391  131B  1803               	btfsc	3,0
  4392  131C  2B23               	goto	l3376
  4393                           
  4394                           ;main.c: 370: {;main.c: 371: *system_volt = 12;
  4395  131D  300C               	movlw	12
  4396  131E  0021               	movlb	1	; select bank1
  4397  131F  00C8               	movwf	_system_v^(0+128)
  4398  1320  3000               	movlw	0
  4399  1321  00C9               	movwf	(_system_v^(0+128)+1)
  4400                           
  4401                           ;main.c: 372: }
  4402  1322  0008               	return
  4403  1323                     l3376:	
  4404                           
  4405                           ;main.c: 374: else if ((*bat_volt > 11.5/2 ) && (*bat_volt < 15.5/2))
  4406  1323  3040               	movlw	64
  4407  1324  00F3               	movwf	___flge@ff1+3
  4408  1325  30B8               	movlw	184
  4409  1326  00F2               	movwf	___flge@ff1+2
  4410  1327  3000               	movlw	0
  4411  1328  00F1               	movwf	___flge@ff1+1
  4412  1329  3000               	movlw	0
  4413  132A  00F0               	movwf	___flge@ff1
  4414  132B  0021               	movlb	1	; select bank1
  4415  132C  0847               	movf	(_bat_v+3)^(0+128),w
  4416  132D  00F7               	movwf	___flge@ff2+3
  4417  132E  0846               	movf	(_bat_v+2)^(0+128),w
  4418  132F  00F6               	movwf	___flge@ff2+2
  4419  1330  0845               	movf	(_bat_v+1)^(0+128),w
  4420  1331  00F5               	movwf	___flge@ff2+1
  4421  1332  0844               	movf	_bat_v^(0+128),w
  4422  1333  00F4               	movwf	___flge@ff2
  4423  1334  3194  24F0  3192   	fcall	___flge
  4424  1337  1803               	btfsc	3,0
  4425  1338  0008               	return
  4426  1339  0021               	movlb	1	; select bank1
  4427  133A  0847               	movf	(_bat_v+3)^(0+128),w
  4428  133B  00F3               	movwf	___flge@ff1+3
  4429  133C  0846               	movf	(_bat_v+2)^(0+128),w
  4430  133D  00F2               	movwf	___flge@ff1+2
  4431  133E  0845               	movf	(_bat_v+1)^(0+128),w
  4432  133F  00F1               	movwf	___flge@ff1+1
  4433  1340  0844               	movf	_bat_v^(0+128),w
  4434  1341  00F0               	movwf	___flge@ff1
  4435  1342  3040               	movlw	64
  4436  1343  00F7               	movwf	___flge@ff2+3
  4437  1344  30F8               	movlw	248
  4438  1345  00F6               	movwf	___flge@ff2+2
  4439  1346  3000               	movlw	0
  4440  1347  00F5               	movwf	___flge@ff2+1
  4441  1348  3000               	movlw	0
  4442  1349  00F4               	movwf	___flge@ff2
  4443  134A  3194  24F0  3192   	fcall	___flge
  4444  134D  1803               	btfsc	3,0
  4445  134E  0008               	return
  4446                           
  4447                           ;main.c: 375: {;main.c: 376: *system_volt= 6;
  4448  134F  3006               	movlw	6
  4449  1350  0021               	movlb	1	; select bank1
  4450  1351  00C8               	movwf	_system_v^(0+128)
  4451  1352  3000               	movlw	0
  4452  1353  00C9               	movwf	(_system_v^(0+128)+1)
  4453  1354  0008               	return
  4454  1355                     __end_of_system_voltage:	
  4455                           
  4456                           	psect	text2
  4457  11B9                     __ptext2:	
  4458 ;; *************** function _set_point *****************
  4459 ;; Defined at:
  4460 ;;		line 384 in file "main.c"
  4461 ;; Parameters:    Size  Location     Type
  4462 ;;		None
  4463 ;; Auto vars:     Size  Location     Type
  4464 ;;		None
  4465 ;; Return value:  Size  Location     Type
  4466 ;;                  1    wreg      void 
  4467 ;; Registers used:
  4468 ;;		wreg, status,2, status,0
  4469 ;; Tracked objects:
  4470 ;;		On entry : 0/0
  4471 ;;		On exit  : 0/0
  4472 ;;		Unchanged: 0/0
  4473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4478 ;;Total ram usage:        0 bytes
  4479 ;; Hardware stack levels used:    1
  4480 ;; This function calls:
  4481 ;;		Nothing
  4482 ;; This function is called by:
  4483 ;;		_main
  4484 ;; This function uses a non-reentrant model
  4485 ;;
  4486                           
  4487                           
  4488                           ;psect for function _set_point
  4489  11B9                     _set_point:	
  4490                           
  4491                           ;main.c: 386: if (*system_volt == 12)
  4492                           
  4493                           ;incstack = 0
  4494                           ; Regs used in _set_point: [wreg+status,2+status,0]
  4495  11B9  300C               	movlw	12
  4496  11BA  0021               	movlb	1	; select bank1
  4497  11BB  0648               	xorwf	_system_v^(0+128),w
  4498  11BC  0449               	iorwf	(_system_v+1)^(0+128),w
  4499  11BD  1D03               	btfss	3,2
  4500  11BE  29D9               	goto	l3386
  4501                           
  4502                           ;main.c: 387: {;main.c: 388: bulk_charge_sp = 14.2;
  4503  11BF  3041               	movlw	65
  4504  11C0  0022               	movlb	2	; select bank2
  4505  11C1  00BB               	movwf	(_bulk_charge_sp+3)^(0+256)
  4506  11C2  3063               	movlw	99
  4507  11C3  00BA               	movwf	(_bulk_charge_sp+2)^(0+256)
  4508  11C4  3033               	movlw	51
  4509  11C5  00B9               	movwf	(_bulk_charge_sp+1)^(0+256)
  4510  11C6  3033               	movlw	51
  4511  11C7  00B8               	movwf	_bulk_charge_sp^(0+256)
  4512                           
  4513                           ;main.c: 389: float_charge_sp = 13.8;
  4514  11C8  3041               	movlw	65
  4515  11C9  00B7               	movwf	(_float_charge_sp+3)^(0+256)
  4516  11CA  305C               	movlw	92
  4517  11CB  00B6               	movwf	(_float_charge_sp+2)^(0+256)
  4518  11CC  30CC               	movlw	204
  4519  11CD  00B5               	movwf	(_float_charge_sp+1)^(0+256)
  4520  11CE  30CD               	movlw	205
  4521  11CF  00B4               	movwf	_float_charge_sp^(0+256)
  4522                           
  4523                           ;main.c: 390: lvd = 11.5;
  4524  11D0  3041               	movlw	65
  4525  11D1  00B3               	movwf	(_lvd+3)^(0+256)
  4526  11D2  3038               	movlw	56
  4527  11D3  00B2               	movwf	(_lvd+2)^(0+256)
  4528  11D4  3000               	movlw	0
  4529  11D5  00B1               	movwf	(_lvd+1)^(0+256)
  4530  11D6  3000               	movlw	0
  4531  11D7  00B0               	movwf	_lvd^(0+256)
  4532                           
  4533                           ;main.c: 391: }
  4534  11D8  0008               	return
  4535  11D9                     l3386:	
  4536                           
  4537                           ;main.c: 393: else if(*system_volt == 6)
  4538  11D9  3006               	movlw	6
  4539  11DA  0648               	xorwf	_system_v^(0+128),w
  4540  11DB  0449               	iorwf	(_system_v+1)^(0+128),w
  4541  11DC  1D03               	btfss	3,2
  4542  11DD  0008               	return
  4543                           
  4544                           ;main.c: 394: {;main.c: 395: bulk_charge_sp = (14.2/2);
  4545  11DE  3040               	movlw	64
  4546  11DF  0022               	movlb	2	; select bank2
  4547  11E0  00BB               	movwf	(_bulk_charge_sp+3)^(0+256)
  4548  11E1  30E3               	movlw	227
  4549  11E2  00BA               	movwf	(_bulk_charge_sp+2)^(0+256)
  4550  11E3  3033               	movlw	51
  4551  11E4  00B9               	movwf	(_bulk_charge_sp+1)^(0+256)
  4552  11E5  3033               	movlw	51
  4553  11E6  00B8               	movwf	_bulk_charge_sp^(0+256)
  4554                           
  4555                           ;main.c: 396: float_charge_sp= (13.8/2);
  4556  11E7  3040               	movlw	64
  4557  11E8  00B7               	movwf	(_float_charge_sp+3)^(0+256)
  4558  11E9  30DC               	movlw	220
  4559  11EA  00B6               	movwf	(_float_charge_sp+2)^(0+256)
  4560  11EB  30CC               	movlw	204
  4561  11EC  00B5               	movwf	(_float_charge_sp+1)^(0+256)
  4562  11ED  30CD               	movlw	205
  4563  11EE  00B4               	movwf	_float_charge_sp^(0+256)
  4564                           
  4565                           ;main.c: 397: lvd = 11.5/2;
  4566  11EF  3040               	movlw	64
  4567  11F0  00B3               	movwf	(_lvd+3)^(0+256)
  4568  11F1  30B8               	movlw	184
  4569  11F2  00B2               	movwf	(_lvd+2)^(0+256)
  4570  11F3  3000               	movlw	0
  4571  11F4  00B1               	movwf	(_lvd+1)^(0+256)
  4572  11F5  3000               	movlw	0
  4573  11F6  00B0               	movwf	_lvd^(0+256)
  4574  11F7  0008               	return
  4575  11F8                     __end_of_set_point:	
  4576                           
  4577                           	psect	text3
  4578  0D63                     __ptext3:	
  4579 ;; *************** function _read_voltage *****************
  4580 ;; Defined at:
  4581 ;;		line 273 in file "main.c"
  4582 ;; Parameters:    Size  Location     Type
  4583 ;;		None
  4584 ;; Auto vars:     Size  Location     Type
  4585 ;;  i               2   27[BANK1 ] int 
  4586 ;;  sum             4   23[BANK1 ] float 
  4587 ;;  avg             4   19[BANK1 ] float 
  4588 ;;  vin             4   13[BANK1 ] float 
  4589 ;;  result          2   17[BANK1 ] unsigned int 
  4590 ;; Return value:  Size  Location     Type
  4591 ;;                  1    wreg      void 
  4592 ;; Registers used:
  4593 ;;		wreg, status,2, status,0, pclath, cstack
  4594 ;; Tracked objects:
  4595 ;;		On entry : 0/0
  4596 ;;		On exit  : 0/0
  4597 ;;		Unchanged: 0/0
  4598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4600 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4601 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4602 ;;      Totals:         1       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4603 ;;Total ram usage:       17 bytes
  4604 ;; Hardware stack levels used:    1
  4605 ;; Hardware stack levels required when called:    3
  4606 ;; This function calls:
  4607 ;;		___fladd
  4608 ;;		___fldiv
  4609 ;;		___flge
  4610 ;;		___flmul
  4611 ;;		___xxtofl
  4612 ;;		_roundedVal
  4613 ;; This function is called by:
  4614 ;;		_main
  4615 ;; This function uses a non-reentrant model
  4616 ;;
  4617                           
  4618                           
  4619                           ;psect for function _read_voltage
  4620  0D63                     _read_voltage:	
  4621                           
  4622                           ;main.c: 275: float sum = 0;
  4623                           
  4624                           ;incstack = 0
  4625                           ; Regs used in _read_voltage: [wreg+status,2+status,0+pclath+cstack]
  4626  0D63  3000               	movlw	0
  4627  0D64  0021               	movlb	1	; select bank1
  4628  0D65  00E4               	movwf	(read_voltage@sum+3)^(0+128)
  4629  0D66  3000               	movlw	0
  4630  0D67  00E3               	movwf	(read_voltage@sum+2)^(0+128)
  4631  0D68  3000               	movlw	0
  4632  0D69  00E2               	movwf	(read_voltage@sum+1)^(0+128)
  4633  0D6A  3000               	movlw	0
  4634  0D6B  00E1               	movwf	read_voltage@sum^(0+128)
  4635                           
  4636                           ;main.c: 278: uint16_t result;;main.c: 281: ADCON0bits.CHS = 0b00000;
  4637  0D6C  3083               	movlw	-125
  4638  0D6D  059D               	andwf	29,f	;volatile
  4639                           
  4640                           ;main.c: 283: for(int i = 0; i<= 200; i++)
  4641  0D6E  01E5               	clrf	read_voltage@i^(0+128)
  4642  0D6F  01E6               	clrf	(read_voltage@i+1)^(0+128)
  4643  0D70                     l3318:	
  4644                           
  4645                           ;main.c: 284: {;main.c: 286: _delay((unsigned long)((10)*(16000000/4000000.0)));
  4646  0D70  300D               	movlw	13
  4647  0D71                     u4117:	
  4648  0D71  0B89               	decfsz	9,f
  4649  0D72  2D71               	goto	u4117
  4650  0D73  0000               	nop
  4651                           
  4652                           ;main.c: 287: ADCON0bits.GO = 1;
  4653  0D74  0021               	movlb	1	; select bank1
  4654  0D75  149D               	bsf	29,1	;volatile
  4655  0D76                     l284:	
  4656                           ;main.c: 288: while (ADCON0bits.GO_nDONE);
  4657                           
  4658  0D76  189D               	btfsc	29,1	;volatile
  4659  0D77  2D76               	goto	l284
  4660                           
  4661                           ;main.c: 291: result = ((ADRESH<<8)+ADRESL);
  4662  0D78  081C               	movf	28,w	;volatile
  4663  0D79  00DC               	movwf	(read_voltage@result+1)^(0+128)
  4664  0D7A  081B               	movf	27,w	;volatile
  4665  0D7B  00DB               	movwf	read_voltage@result^(0+128)
  4666                           
  4667                           ;main.c: 293: sum = sum + result;
  4668  0D7C  0864               	movf	(read_voltage@sum+3)^(0+128),w
  4669  0D7D  0020               	movlb	0	; select bank0
  4670  0D7E  00C7               	movwf	___fladd@b+3
  4671  0D7F  0021               	movlb	1	; select bank1
  4672  0D80  0863               	movf	(read_voltage@sum+2)^(0+128),w
  4673  0D81  0020               	movlb	0	; select bank0
  4674  0D82  00C6               	movwf	___fladd@b+2
  4675  0D83  0021               	movlb	1	; select bank1
  4676  0D84  0862               	movf	(read_voltage@sum+1)^(0+128),w
  4677  0D85  0020               	movlb	0	; select bank0
  4678  0D86  00C5               	movwf	___fladd@b+1
  4679  0D87  0021               	movlb	1	; select bank1
  4680  0D88  0861               	movf	read_voltage@sum^(0+128),w
  4681  0D89  0020               	movlb	0	; select bank0
  4682  0D8A  00C4               	movwf	___fladd@b
  4683  0D8B  0021               	movlb	1	; select bank1
  4684  0D8C  085B               	movf	read_voltage@result^(0+128),w
  4685  0D8D  00F9               	movwf	___xxtofl@val
  4686  0D8E  085C               	movf	(read_voltage@result+1)^(0+128),w
  4687  0D8F  00FA               	movwf	___xxtofl@val+1
  4688  0D90  01FB               	clrf	___xxtofl@val+2
  4689  0D91  01FC               	clrf	___xxtofl@val+3
  4690  0D92  3000               	movlw	0
  4691  0D93  3196  268A  318D   	fcall	___xxtofl
  4692  0D96  087C               	movf	?___xxtofl+3,w
  4693  0D97  0020               	movlb	0	; select bank0
  4694  0D98  00CB               	movwf	___fladd@a+3
  4695  0D99  087B               	movf	?___xxtofl+2,w
  4696  0D9A  00CA               	movwf	___fladd@a+2
  4697  0D9B  087A               	movf	?___xxtofl+1,w
  4698  0D9C  00C9               	movwf	___fladd@a+1
  4699  0D9D  0879               	movf	?___xxtofl,w
  4700  0D9E  00C8               	movwf	___fladd@a
  4701  0D9F  3183  23C8  318D   	fcall	___fladd
  4702  0DA2  0020               	movlb	0	; select bank0
  4703  0DA3  0847               	movf	?___fladd+3,w
  4704  0DA4  0021               	movlb	1	; select bank1
  4705  0DA5  00E4               	movwf	(read_voltage@sum+3)^(0+128)
  4706  0DA6  0020               	movlb	0	; select bank0
  4707  0DA7  0846               	movf	?___fladd+2,w
  4708  0DA8  0021               	movlb	1	; select bank1
  4709  0DA9  00E3               	movwf	(read_voltage@sum+2)^(0+128)
  4710  0DAA  0020               	movlb	0	; select bank0
  4711  0DAB  0845               	movf	?___fladd+1,w
  4712  0DAC  0021               	movlb	1	; select bank1
  4713  0DAD  00E2               	movwf	(read_voltage@sum+1)^(0+128)
  4714  0DAE  0020               	movlb	0	; select bank0
  4715  0DAF  0844               	movf	?___fladd,w
  4716  0DB0  0021               	movlb	1	; select bank1
  4717  0DB1  00E1               	movwf	read_voltage@sum^(0+128)
  4718                           
  4719                           ;main.c: 295: _delay((unsigned long)((2)*(16000000/4000.0)));
  4720  0DB2  300B               	movlw	11
  4721  0DB3  00FD               	movwf	??_read_voltage
  4722  0DB4  3062               	movlw	98
  4723  0DB5                     u4127:	
  4724  0DB5  0B89               	decfsz	9,f
  4725  0DB6  2DB5               	goto	u4127
  4726  0DB7  0BFD               	decfsz	??_read_voltage,f
  4727  0DB8  2DB5               	goto	u4127
  4728  0DB9  3200               	nop2
  4729  0DBA  3001               	movlw	1
  4730  0DBB  0021               	movlb	1	; select bank1
  4731  0DBC  07E5               	addwf	read_voltage@i^(0+128),f
  4732  0DBD  3000               	movlw	0
  4733  0DBE  3DE6               	addwfc	(read_voltage@i+1)^(0+128),f
  4734  0DBF  0866               	movf	(read_voltage@i+1)^(0+128),w
  4735  0DC0  3A80               	xorlw	128
  4736  0DC1  00FD               	movwf	??_read_voltage
  4737  0DC2  3080               	movlw	128
  4738  0DC3  027D               	subwf	??_read_voltage,w
  4739  0DC4  1D03               	skipz
  4740  0DC5  2DC8               	goto	u3965
  4741  0DC6  30C9               	movlw	201
  4742  0DC7  0265               	subwf	read_voltage@i^(0+128),w
  4743  0DC8                     u3965:	
  4744  0DC8  1C03               	skipc
  4745  0DC9  2D70               	goto	l3318
  4746                           
  4747                           ;main.c: 296: };main.c: 298: avg = sum / 200;
  4748  0DCA  3043               	movlw	67
  4749  0DCB  0020               	movlb	0	; select bank0
  4750  0DCC  00DB               	movwf	___fldiv@a+3
  4751  0DCD  3048               	movlw	72
  4752  0DCE  00DA               	movwf	___fldiv@a+2
  4753  0DCF  3000               	movlw	0
  4754  0DD0  00D9               	movwf	___fldiv@a+1
  4755  0DD1  3000               	movlw	0
  4756  0DD2  00D8               	movwf	___fldiv@a
  4757  0DD3  0021               	movlb	1	; select bank1
  4758  0DD4  0864               	movf	(read_voltage@sum+3)^(0+128),w
  4759  0DD5  0020               	movlb	0	; select bank0
  4760  0DD6  00DF               	movwf	___fldiv@b+3
  4761  0DD7  0021               	movlb	1	; select bank1
  4762  0DD8  0863               	movf	(read_voltage@sum+2)^(0+128),w
  4763  0DD9  0020               	movlb	0	; select bank0
  4764  0DDA  00DE               	movwf	___fldiv@b+2
  4765  0DDB  0021               	movlb	1	; select bank1
  4766  0DDC  0862               	movf	(read_voltage@sum+1)^(0+128),w
  4767  0DDD  0020               	movlb	0	; select bank0
  4768  0DDE  00DD               	movwf	___fldiv@b+1
  4769  0DDF  0021               	movlb	1	; select bank1
  4770  0DE0  0861               	movf	read_voltage@sum^(0+128),w
  4771  0DE1  0020               	movlb	0	; select bank0
  4772  0DE2  00DC               	movwf	___fldiv@b
  4773  0DE3  3181  21F0  318D   	fcall	___fldiv
  4774  0DE6  0020               	movlb	0	; select bank0
  4775  0DE7  085B               	movf	?___fldiv+3,w
  4776  0DE8  0021               	movlb	1	; select bank1
  4777  0DE9  00E0               	movwf	(read_voltage@avg+3)^(0+128)
  4778  0DEA  0020               	movlb	0	; select bank0
  4779  0DEB  085A               	movf	?___fldiv+2,w
  4780  0DEC  0021               	movlb	1	; select bank1
  4781  0DED  00DF               	movwf	(read_voltage@avg+2)^(0+128)
  4782  0DEE  0020               	movlb	0	; select bank0
  4783  0DEF  0859               	movf	?___fldiv+1,w
  4784  0DF0  0021               	movlb	1	; select bank1
  4785  0DF1  00DE               	movwf	(read_voltage@avg+1)^(0+128)
  4786  0DF2  0020               	movlb	0	; select bank0
  4787  0DF3  0858               	movf	?___fldiv,w
  4788  0DF4  0021               	movlb	1	; select bank1
  4789  0DF5  00DD               	movwf	read_voltage@avg^(0+128)
  4790                           
  4791                           ;main.c: 300: float vin;;main.c: 302: vin = (avg * 5.0) / 1024.0;
  4792  0DF6  3044               	movlw	68
  4793  0DF7  0020               	movlb	0	; select bank0
  4794  0DF8  00DB               	movwf	___fldiv@a+3
  4795  0DF9  3080               	movlw	128
  4796  0DFA  00DA               	movwf	___fldiv@a+2
  4797  0DFB  3000               	movlw	0
  4798  0DFC  00D9               	movwf	___fldiv@a+1
  4799  0DFD  3000               	movlw	0
  4800  0DFE  00D8               	movwf	___fldiv@a
  4801  0DFF  3040               	movlw	64
  4802  0E00  00AD               	movwf	___flmul@b+3
  4803  0E01  30A0               	movlw	160
  4804  0E02  00AC               	movwf	___flmul@b+2
  4805  0E03  3000               	movlw	0
  4806  0E04  00AB               	movwf	___flmul@b+1
  4807  0E05  3000               	movlw	0
  4808  0E06  00AA               	movwf	___flmul@b
  4809  0E07  0021               	movlb	1	; select bank1
  4810  0E08  0860               	movf	(read_voltage@avg+3)^(0+128),w
  4811  0E09  0020               	movlb	0	; select bank0
  4812  0E0A  00B1               	movwf	___flmul@a+3
  4813  0E0B  0021               	movlb	1	; select bank1
  4814  0E0C  085F               	movf	(read_voltage@avg+2)^(0+128),w
  4815  0E0D  0020               	movlb	0	; select bank0
  4816  0E0E  00B0               	movwf	___flmul@a+2
  4817  0E0F  0021               	movlb	1	; select bank1
  4818  0E10  085E               	movf	(read_voltage@avg+1)^(0+128),w
  4819  0E11  0020               	movlb	0	; select bank0
  4820  0E12  00AF               	movwf	___flmul@a+1
  4821  0E13  0021               	movlb	1	; select bank1
  4822  0E14  085D               	movf	read_voltage@avg^(0+128),w
  4823  0E15  0020               	movlb	0	; select bank0
  4824  0E16  00AE               	movwf	___flmul@a
  4825  0E17  3185  25AA  318D   	fcall	___flmul
  4826  0E1A  0020               	movlb	0	; select bank0
  4827  0E1B  082D               	movf	?___flmul+3,w
  4828  0E1C  00DF               	movwf	___fldiv@b+3
  4829  0E1D  082C               	movf	?___flmul+2,w
  4830  0E1E  00DE               	movwf	___fldiv@b+2
  4831  0E1F  082B               	movf	?___flmul+1,w
  4832  0E20  00DD               	movwf	___fldiv@b+1
  4833  0E21  082A               	movf	?___flmul,w
  4834  0E22  00DC               	movwf	___fldiv@b
  4835  0E23  3181  21F0  318D   	fcall	___fldiv
  4836  0E26  0020               	movlb	0	; select bank0
  4837  0E27  085B               	movf	?___fldiv+3,w
  4838  0E28  0021               	movlb	1	; select bank1
  4839  0E29  00DA               	movwf	(read_voltage@vin+3)^(0+128)
  4840  0E2A  0020               	movlb	0	; select bank0
  4841  0E2B  085A               	movf	?___fldiv+2,w
  4842  0E2C  0021               	movlb	1	; select bank1
  4843  0E2D  00D9               	movwf	(read_voltage@vin+2)^(0+128)
  4844  0E2E  0020               	movlb	0	; select bank0
  4845  0E2F  0859               	movf	?___fldiv+1,w
  4846  0E30  0021               	movlb	1	; select bank1
  4847  0E31  00D8               	movwf	(read_voltage@vin+1)^(0+128)
  4848  0E32  0020               	movlb	0	; select bank0
  4849  0E33  0858               	movf	?___fldiv,w
  4850  0E34  0021               	movlb	1	; select bank1
  4851  0E35  00D7               	movwf	read_voltage@vin^(0+128)
  4852                           
  4853                           ;main.c: 303: intervolt = vin;
  4854  0E36  085A               	movf	(read_voltage@vin+3)^(0+128),w
  4855  0E37  00B7               	movwf	(_intervolt+3)^(0+128)
  4856  0E38  0859               	movf	(read_voltage@vin+2)^(0+128),w
  4857  0E39  00B6               	movwf	(_intervolt+2)^(0+128)
  4858  0E3A  0858               	movf	(read_voltage@vin+1)^(0+128),w
  4859  0E3B  00B5               	movwf	(_intervolt+1)^(0+128)
  4860  0E3C  0857               	movf	read_voltage@vin^(0+128),w
  4861  0E3D  00B4               	movwf	_intervolt^(0+128)
  4862                           
  4863                           ;main.c: 306: *bat_volt = intervolt * 6.0;
  4864  0E3E  3040               	movlw	64
  4865  0E3F  0020               	movlb	0	; select bank0
  4866  0E40  00AD               	movwf	___flmul@b+3
  4867  0E41  30C0               	movlw	192
  4868  0E42  00AC               	movwf	___flmul@b+2
  4869  0E43  3000               	movlw	0
  4870  0E44  00AB               	movwf	___flmul@b+1
  4871  0E45  3000               	movlw	0
  4872  0E46  00AA               	movwf	___flmul@b
  4873  0E47  0021               	movlb	1	; select bank1
  4874  0E48  0837               	movf	(_intervolt+3)^(0+128),w
  4875  0E49  0020               	movlb	0	; select bank0
  4876  0E4A  00B1               	movwf	___flmul@a+3
  4877  0E4B  0021               	movlb	1	; select bank1
  4878  0E4C  0836               	movf	(_intervolt+2)^(0+128),w
  4879  0E4D  0020               	movlb	0	; select bank0
  4880  0E4E  00B0               	movwf	___flmul@a+2
  4881  0E4F  0021               	movlb	1	; select bank1
  4882  0E50  0835               	movf	(_intervolt+1)^(0+128),w
  4883  0E51  0020               	movlb	0	; select bank0
  4884  0E52  00AF               	movwf	___flmul@a+1
  4885  0E53  0021               	movlb	1	; select bank1
  4886  0E54  0834               	movf	_intervolt^(0+128),w
  4887  0E55  0020               	movlb	0	; select bank0
  4888  0E56  00AE               	movwf	___flmul@a
  4889  0E57  3185  25AA  318D   	fcall	___flmul
  4890  0E5A  0020               	movlb	0	; select bank0
  4891  0E5B  082D               	movf	?___flmul+3,w
  4892  0E5C  0021               	movlb	1	; select bank1
  4893  0E5D  00C7               	movwf	(_bat_v+3)^(0+128)
  4894  0E5E  0020               	movlb	0	; select bank0
  4895  0E5F  082C               	movf	?___flmul+2,w
  4896  0E60  0021               	movlb	1	; select bank1
  4897  0E61  00C6               	movwf	(_bat_v+2)^(0+128)
  4898  0E62  0020               	movlb	0	; select bank0
  4899  0E63  082B               	movf	?___flmul+1,w
  4900  0E64  0021               	movlb	1	; select bank1
  4901  0E65  00C5               	movwf	(_bat_v+1)^(0+128)
  4902  0E66  0020               	movlb	0	; select bank0
  4903  0E67  082A               	movf	?___flmul,w
  4904  0E68  0021               	movlb	1	; select bank1
  4905  0E69  00C4               	movwf	_bat_v^(0+128)
  4906                           
  4907                           ;main.c: 309: if (*bat_volt < 0)
  4908  0E6A  0847               	movf	(_bat_v+3)^(0+128),w
  4909  0E6B  00F3               	movwf	___flge@ff1+3
  4910  0E6C  0846               	movf	(_bat_v+2)^(0+128),w
  4911  0E6D  00F2               	movwf	___flge@ff1+2
  4912  0E6E  0845               	movf	(_bat_v+1)^(0+128),w
  4913  0E6F  00F1               	movwf	___flge@ff1+1
  4914  0E70  0844               	movf	_bat_v^(0+128),w
  4915  0E71  00F0               	movwf	___flge@ff1
  4916  0E72  3000               	movlw	0
  4917  0E73  00F7               	movwf	___flge@ff2+3
  4918  0E74  3000               	movlw	0
  4919  0E75  00F6               	movwf	___flge@ff2+2
  4920  0E76  3000               	movlw	0
  4921  0E77  00F5               	movwf	___flge@ff2+1
  4922  0E78  3000               	movlw	0
  4923  0E79  00F4               	movwf	___flge@ff2
  4924  0E7A  3194  24F0  318D   	fcall	___flge
  4925  0E7D  1803               	btfsc	3,0
  4926  0E7E  2E88               	goto	l3342
  4927                           
  4928                           ;main.c: 310: {;main.c: 311: *bat_volt = 0;
  4929  0E7F  3000               	movlw	0
  4930  0E80  0021               	movlb	1	; select bank1
  4931  0E81  00C7               	movwf	(_bat_v+3)^(0+128)
  4932  0E82  3000               	movlw	0
  4933  0E83  00C6               	movwf	(_bat_v+2)^(0+128)
  4934  0E84  3000               	movlw	0
  4935  0E85  00C5               	movwf	(_bat_v+1)^(0+128)
  4936  0E86  3000               	movlw	0
  4937  0E87  00C4               	movwf	_bat_v^(0+128)
  4938  0E88                     l3342:	
  4939                           
  4940                           ;main.c: 312: };main.c: 314: *bat_volt = roundedVal(*bat_volt);
  4941  0E88  0021               	movlb	1	; select bank1
  4942  0E89  0847               	movf	(_bat_v+3)^(0+128),w
  4943  0E8A  0020               	movlb	0	; select bank0
  4944  0E8B  00E8               	movwf	roundedVal@x+3
  4945  0E8C  0021               	movlb	1	; select bank1
  4946  0E8D  0846               	movf	(_bat_v+2)^(0+128),w
  4947  0E8E  0020               	movlb	0	; select bank0
  4948  0E8F  00E7               	movwf	roundedVal@x+2
  4949  0E90  0021               	movlb	1	; select bank1
  4950  0E91  0845               	movf	(_bat_v+1)^(0+128),w
  4951  0E92  0020               	movlb	0	; select bank0
  4952  0E93  00E6               	movwf	roundedVal@x+1
  4953  0E94  0021               	movlb	1	; select bank1
  4954  0E95  0844               	movf	_bat_v^(0+128),w
  4955  0E96  0020               	movlb	0	; select bank0
  4956  0E97  00E5               	movwf	roundedVal@x
  4957  0E98  3194  2420         	fcall	_roundedVal
  4958  0E9A  0020               	movlb	0	; select bank0
  4959  0E9B  0868               	movf	?_roundedVal+3,w
  4960  0E9C  0021               	movlb	1	; select bank1
  4961  0E9D  00C7               	movwf	(_bat_v+3)^(0+128)
  4962  0E9E  0020               	movlb	0	; select bank0
  4963  0E9F  0867               	movf	?_roundedVal+2,w
  4964  0EA0  0021               	movlb	1	; select bank1
  4965  0EA1  00C6               	movwf	(_bat_v+2)^(0+128)
  4966  0EA2  0020               	movlb	0	; select bank0
  4967  0EA3  0866               	movf	?_roundedVal+1,w
  4968  0EA4  0021               	movlb	1	; select bank1
  4969  0EA5  00C5               	movwf	(_bat_v+1)^(0+128)
  4970  0EA6  0020               	movlb	0	; select bank0
  4971  0EA7  0865               	movf	?_roundedVal,w
  4972  0EA8  0021               	movlb	1	; select bank1
  4973  0EA9  00C4               	movwf	_bat_v^(0+128)
  4974  0EAA  0008               	return
  4975  0EAB                     __end_of_read_voltage:	
  4976                           
  4977                           	psect	text4
  4978  0C21                     __ptext4:	
  4979 ;; *************** function _read_panel *****************
  4980 ;; Defined at:
  4981 ;;		line 320 in file "main.c"
  4982 ;; Parameters:    Size  Location     Type
  4983 ;;		None
  4984 ;; Auto vars:     Size  Location     Type
  4985 ;;  i               2   27[BANK1 ] int 
  4986 ;;  sum             4   23[BANK1 ] float 
  4987 ;;  avg             4   19[BANK1 ] float 
  4988 ;;  vin             4   13[BANK1 ] float 
  4989 ;;  result          2   17[BANK1 ] unsigned int 
  4990 ;; Return value:  Size  Location     Type
  4991 ;;                  1    wreg      void 
  4992 ;; Registers used:
  4993 ;;		wreg, status,2, status,0, pclath, cstack
  4994 ;; Tracked objects:
  4995 ;;		On entry : 0/0
  4996 ;;		On exit  : 0/0
  4997 ;;		Unchanged: 0/0
  4998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5000 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5001 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5002 ;;      Totals:         1       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5003 ;;Total ram usage:       17 bytes
  5004 ;; Hardware stack levels used:    1
  5005 ;; Hardware stack levels required when called:    3
  5006 ;; This function calls:
  5007 ;;		___fladd
  5008 ;;		___fldiv
  5009 ;;		___flge
  5010 ;;		___flmul
  5011 ;;		___xxtofl
  5012 ;;		_roundedVal
  5013 ;; This function is called by:
  5014 ;;		_main
  5015 ;; This function uses a non-reentrant model
  5016 ;;
  5017                           
  5018                           
  5019                           ;psect for function _read_panel
  5020  0C21                     _read_panel:	
  5021                           
  5022                           ;main.c: 322: float sum = 0;
  5023                           
  5024                           ;incstack = 0
  5025                           ; Regs used in _read_panel: [wreg+status,2+status,0+pclath+cstack]
  5026  0C21  3000               	movlw	0
  5027  0C22  0021               	movlb	1	; select bank1
  5028  0C23  00E4               	movwf	(read_panel@sum+3)^(0+128)
  5029  0C24  3000               	movlw	0
  5030  0C25  00E3               	movwf	(read_panel@sum+2)^(0+128)
  5031  0C26  3000               	movlw	0
  5032  0C27  00E2               	movwf	(read_panel@sum+1)^(0+128)
  5033  0C28  3000               	movlw	0
  5034  0C29  00E1               	movwf	read_panel@sum^(0+128)
  5035                           
  5036                           ;main.c: 325: uint16_t result;;main.c: 328: ADCON0bits.CHS = 0b00010;
  5037  0C2A  081D               	movf	29,w	;volatile
  5038  0C2B  3983               	andlw	-125
  5039  0C2C  3808               	iorlw	8
  5040  0C2D  009D               	movwf	29	;volatile
  5041                           
  5042                           ;main.c: 330: for(int i = 0; i<= 200; i++)
  5043  0C2E  01E5               	clrf	read_panel@i^(0+128)
  5044  0C2F  01E6               	clrf	(read_panel@i+1)^(0+128)
  5045  0C30                     l3288:	
  5046                           
  5047                           ;main.c: 331: {;main.c: 333: _delay((unsigned long)((10)*(16000000/4000000.0)));
  5048  0C30  300D               	movlw	13
  5049  0C31                     u4137:	
  5050  0C31  0B89               	decfsz	9,f
  5051  0C32  2C31               	goto	u4137
  5052  0C33  0000               	nop
  5053                           
  5054                           ;main.c: 334: ADCON0bits.GO = 1;
  5055  0C34  0021               	movlb	1	; select bank1
  5056  0C35  149D               	bsf	29,1	;volatile
  5057  0C36                     l293:	
  5058                           ;main.c: 335: while (ADCON0bits.GO_nDONE);
  5059                           
  5060  0C36  189D               	btfsc	29,1	;volatile
  5061  0C37  2C36               	goto	l293
  5062                           
  5063                           ;main.c: 338: result = ((ADRESH<<8)+ADRESL);
  5064  0C38  081C               	movf	28,w	;volatile
  5065  0C39  00DC               	movwf	(read_panel@result+1)^(0+128)
  5066  0C3A  081B               	movf	27,w	;volatile
  5067  0C3B  00DB               	movwf	read_panel@result^(0+128)
  5068                           
  5069                           ;main.c: 340: sum = sum + result;
  5070  0C3C  0864               	movf	(read_panel@sum+3)^(0+128),w
  5071  0C3D  0020               	movlb	0	; select bank0
  5072  0C3E  00C7               	movwf	___fladd@b+3
  5073  0C3F  0021               	movlb	1	; select bank1
  5074  0C40  0863               	movf	(read_panel@sum+2)^(0+128),w
  5075  0C41  0020               	movlb	0	; select bank0
  5076  0C42  00C6               	movwf	___fladd@b+2
  5077  0C43  0021               	movlb	1	; select bank1
  5078  0C44  0862               	movf	(read_panel@sum+1)^(0+128),w
  5079  0C45  0020               	movlb	0	; select bank0
  5080  0C46  00C5               	movwf	___fladd@b+1
  5081  0C47  0021               	movlb	1	; select bank1
  5082  0C48  0861               	movf	read_panel@sum^(0+128),w
  5083  0C49  0020               	movlb	0	; select bank0
  5084  0C4A  00C4               	movwf	___fladd@b
  5085  0C4B  0021               	movlb	1	; select bank1
  5086  0C4C  085B               	movf	read_panel@result^(0+128),w
  5087  0C4D  00F9               	movwf	___xxtofl@val
  5088  0C4E  085C               	movf	(read_panel@result+1)^(0+128),w
  5089  0C4F  00FA               	movwf	___xxtofl@val+1
  5090  0C50  01FB               	clrf	___xxtofl@val+2
  5091  0C51  01FC               	clrf	___xxtofl@val+3
  5092  0C52  3000               	movlw	0
  5093  0C53  3196  268A  318C   	fcall	___xxtofl
  5094  0C56  087C               	movf	?___xxtofl+3,w
  5095  0C57  0020               	movlb	0	; select bank0
  5096  0C58  00CB               	movwf	___fladd@a+3
  5097  0C59  087B               	movf	?___xxtofl+2,w
  5098  0C5A  00CA               	movwf	___fladd@a+2
  5099  0C5B  087A               	movf	?___xxtofl+1,w
  5100  0C5C  00C9               	movwf	___fladd@a+1
  5101  0C5D  0879               	movf	?___xxtofl,w
  5102  0C5E  00C8               	movwf	___fladd@a
  5103  0C5F  3183  23C8  318C   	fcall	___fladd
  5104  0C62  0020               	movlb	0	; select bank0
  5105  0C63  0847               	movf	?___fladd+3,w
  5106  0C64  0021               	movlb	1	; select bank1
  5107  0C65  00E4               	movwf	(read_panel@sum+3)^(0+128)
  5108  0C66  0020               	movlb	0	; select bank0
  5109  0C67  0846               	movf	?___fladd+2,w
  5110  0C68  0021               	movlb	1	; select bank1
  5111  0C69  00E3               	movwf	(read_panel@sum+2)^(0+128)
  5112  0C6A  0020               	movlb	0	; select bank0
  5113  0C6B  0845               	movf	?___fladd+1,w
  5114  0C6C  0021               	movlb	1	; select bank1
  5115  0C6D  00E2               	movwf	(read_panel@sum+1)^(0+128)
  5116  0C6E  0020               	movlb	0	; select bank0
  5117  0C6F  0844               	movf	?___fladd,w
  5118  0C70  0021               	movlb	1	; select bank1
  5119  0C71  00E1               	movwf	read_panel@sum^(0+128)
  5120                           
  5121                           ;main.c: 342: _delay((unsigned long)((2)*(16000000/4000.0)));
  5122  0C72  300B               	movlw	11
  5123  0C73  00FD               	movwf	??_read_panel
  5124  0C74  3062               	movlw	98
  5125  0C75                     u4147:	
  5126  0C75  0B89               	decfsz	9,f
  5127  0C76  2C75               	goto	u4147
  5128  0C77  0BFD               	decfsz	??_read_panel,f
  5129  0C78  2C75               	goto	u4147
  5130  0C79  3200               	nop2
  5131  0C7A  3001               	movlw	1
  5132  0C7B  0021               	movlb	1	; select bank1
  5133  0C7C  07E5               	addwf	read_panel@i^(0+128),f
  5134  0C7D  3000               	movlw	0
  5135  0C7E  3DE6               	addwfc	(read_panel@i+1)^(0+128),f
  5136  0C7F  0866               	movf	(read_panel@i+1)^(0+128),w
  5137  0C80  3A80               	xorlw	128
  5138  0C81  00FD               	movwf	??_read_panel
  5139  0C82  3080               	movlw	128
  5140  0C83  027D               	subwf	??_read_panel,w
  5141  0C84  1D03               	skipz
  5142  0C85  2C88               	goto	u3935
  5143  0C86  30C9               	movlw	201
  5144  0C87  0265               	subwf	read_panel@i^(0+128),w
  5145  0C88                     u3935:	
  5146  0C88  1C03               	skipc
  5147  0C89  2C30               	goto	l3288
  5148                           
  5149                           ;main.c: 343: };main.c: 345: avg = sum / 200;
  5150  0C8A  3043               	movlw	67
  5151  0C8B  0020               	movlb	0	; select bank0
  5152  0C8C  00DB               	movwf	___fldiv@a+3
  5153  0C8D  3048               	movlw	72
  5154  0C8E  00DA               	movwf	___fldiv@a+2
  5155  0C8F  3000               	movlw	0
  5156  0C90  00D9               	movwf	___fldiv@a+1
  5157  0C91  3000               	movlw	0
  5158  0C92  00D8               	movwf	___fldiv@a
  5159  0C93  0021               	movlb	1	; select bank1
  5160  0C94  0864               	movf	(read_panel@sum+3)^(0+128),w
  5161  0C95  0020               	movlb	0	; select bank0
  5162  0C96  00DF               	movwf	___fldiv@b+3
  5163  0C97  0021               	movlb	1	; select bank1
  5164  0C98  0863               	movf	(read_panel@sum+2)^(0+128),w
  5165  0C99  0020               	movlb	0	; select bank0
  5166  0C9A  00DE               	movwf	___fldiv@b+2
  5167  0C9B  0021               	movlb	1	; select bank1
  5168  0C9C  0862               	movf	(read_panel@sum+1)^(0+128),w
  5169  0C9D  0020               	movlb	0	; select bank0
  5170  0C9E  00DD               	movwf	___fldiv@b+1
  5171  0C9F  0021               	movlb	1	; select bank1
  5172  0CA0  0861               	movf	read_panel@sum^(0+128),w
  5173  0CA1  0020               	movlb	0	; select bank0
  5174  0CA2  00DC               	movwf	___fldiv@b
  5175  0CA3  3181  21F0  318C   	fcall	___fldiv
  5176  0CA6  0020               	movlb	0	; select bank0
  5177  0CA7  085B               	movf	?___fldiv+3,w
  5178  0CA8  0021               	movlb	1	; select bank1
  5179  0CA9  00E0               	movwf	(read_panel@avg+3)^(0+128)
  5180  0CAA  0020               	movlb	0	; select bank0
  5181  0CAB  085A               	movf	?___fldiv+2,w
  5182  0CAC  0021               	movlb	1	; select bank1
  5183  0CAD  00DF               	movwf	(read_panel@avg+2)^(0+128)
  5184  0CAE  0020               	movlb	0	; select bank0
  5185  0CAF  0859               	movf	?___fldiv+1,w
  5186  0CB0  0021               	movlb	1	; select bank1
  5187  0CB1  00DE               	movwf	(read_panel@avg+1)^(0+128)
  5188  0CB2  0020               	movlb	0	; select bank0
  5189  0CB3  0858               	movf	?___fldiv,w
  5190  0CB4  0021               	movlb	1	; select bank1
  5191  0CB5  00DD               	movwf	read_panel@avg^(0+128)
  5192                           
  5193                           ;main.c: 348: float vin;;main.c: 350: vin = (avg * 5.0) / 1024.0;
  5194  0CB6  3044               	movlw	68
  5195  0CB7  0020               	movlb	0	; select bank0
  5196  0CB8  00DB               	movwf	___fldiv@a+3
  5197  0CB9  3080               	movlw	128
  5198  0CBA  00DA               	movwf	___fldiv@a+2
  5199  0CBB  3000               	movlw	0
  5200  0CBC  00D9               	movwf	___fldiv@a+1
  5201  0CBD  3000               	movlw	0
  5202  0CBE  00D8               	movwf	___fldiv@a
  5203  0CBF  3040               	movlw	64
  5204  0CC0  00AD               	movwf	___flmul@b+3
  5205  0CC1  30A0               	movlw	160
  5206  0CC2  00AC               	movwf	___flmul@b+2
  5207  0CC3  3000               	movlw	0
  5208  0CC4  00AB               	movwf	___flmul@b+1
  5209  0CC5  3000               	movlw	0
  5210  0CC6  00AA               	movwf	___flmul@b
  5211  0CC7  0021               	movlb	1	; select bank1
  5212  0CC8  0860               	movf	(read_panel@avg+3)^(0+128),w
  5213  0CC9  0020               	movlb	0	; select bank0
  5214  0CCA  00B1               	movwf	___flmul@a+3
  5215  0CCB  0021               	movlb	1	; select bank1
  5216  0CCC  085F               	movf	(read_panel@avg+2)^(0+128),w
  5217  0CCD  0020               	movlb	0	; select bank0
  5218  0CCE  00B0               	movwf	___flmul@a+2
  5219  0CCF  0021               	movlb	1	; select bank1
  5220  0CD0  085E               	movf	(read_panel@avg+1)^(0+128),w
  5221  0CD1  0020               	movlb	0	; select bank0
  5222  0CD2  00AF               	movwf	___flmul@a+1
  5223  0CD3  0021               	movlb	1	; select bank1
  5224  0CD4  085D               	movf	read_panel@avg^(0+128),w
  5225  0CD5  0020               	movlb	0	; select bank0
  5226  0CD6  00AE               	movwf	___flmul@a
  5227  0CD7  3185  25AA  318C   	fcall	___flmul
  5228  0CDA  0020               	movlb	0	; select bank0
  5229  0CDB  082D               	movf	?___flmul+3,w
  5230  0CDC  00DF               	movwf	___fldiv@b+3
  5231  0CDD  082C               	movf	?___flmul+2,w
  5232  0CDE  00DE               	movwf	___fldiv@b+2
  5233  0CDF  082B               	movf	?___flmul+1,w
  5234  0CE0  00DD               	movwf	___fldiv@b+1
  5235  0CE1  082A               	movf	?___flmul,w
  5236  0CE2  00DC               	movwf	___fldiv@b
  5237  0CE3  3181  21F0  318C   	fcall	___fldiv
  5238  0CE6  0020               	movlb	0	; select bank0
  5239  0CE7  085B               	movf	?___fldiv+3,w
  5240  0CE8  0021               	movlb	1	; select bank1
  5241  0CE9  00DA               	movwf	(read_panel@vin+3)^(0+128)
  5242  0CEA  0020               	movlb	0	; select bank0
  5243  0CEB  085A               	movf	?___fldiv+2,w
  5244  0CEC  0021               	movlb	1	; select bank1
  5245  0CED  00D9               	movwf	(read_panel@vin+2)^(0+128)
  5246  0CEE  0020               	movlb	0	; select bank0
  5247  0CEF  0859               	movf	?___fldiv+1,w
  5248  0CF0  0021               	movlb	1	; select bank1
  5249  0CF1  00D8               	movwf	(read_panel@vin+1)^(0+128)
  5250  0CF2  0020               	movlb	0	; select bank0
  5251  0CF3  0858               	movf	?___fldiv,w
  5252  0CF4  0021               	movlb	1	; select bank1
  5253  0CF5  00D7               	movwf	read_panel@vin^(0+128)
  5254                           
  5255                           ;main.c: 353: *panel_volt = vin * 5.96;
  5256  0CF6  3040               	movlw	64
  5257  0CF7  0020               	movlb	0	; select bank0
  5258  0CF8  00AD               	movwf	___flmul@b+3
  5259  0CF9  30BE               	movlw	190
  5260  0CFA  00AC               	movwf	___flmul@b+2
  5261  0CFB  30B8               	movlw	184
  5262  0CFC  00AB               	movwf	___flmul@b+1
  5263  0CFD  3052               	movlw	82
  5264  0CFE  00AA               	movwf	___flmul@b
  5265  0CFF  0021               	movlb	1	; select bank1
  5266  0D00  085A               	movf	(read_panel@vin+3)^(0+128),w
  5267  0D01  0020               	movlb	0	; select bank0
  5268  0D02  00B1               	movwf	___flmul@a+3
  5269  0D03  0021               	movlb	1	; select bank1
  5270  0D04  0859               	movf	(read_panel@vin+2)^(0+128),w
  5271  0D05  0020               	movlb	0	; select bank0
  5272  0D06  00B0               	movwf	___flmul@a+2
  5273  0D07  0021               	movlb	1	; select bank1
  5274  0D08  0858               	movf	(read_panel@vin+1)^(0+128),w
  5275  0D09  0020               	movlb	0	; select bank0
  5276  0D0A  00AF               	movwf	___flmul@a+1
  5277  0D0B  0021               	movlb	1	; select bank1
  5278  0D0C  0857               	movf	read_panel@vin^(0+128),w
  5279  0D0D  0020               	movlb	0	; select bank0
  5280  0D0E  00AE               	movwf	___flmul@a
  5281  0D0F  3185  25AA  318C   	fcall	___flmul
  5282  0D12  0020               	movlb	0	; select bank0
  5283  0D13  082D               	movf	?___flmul+3,w
  5284  0D14  0021               	movlb	1	; select bank1
  5285  0D15  00C3               	movwf	(_panel_v+3)^(0+128)
  5286  0D16  0020               	movlb	0	; select bank0
  5287  0D17  082C               	movf	?___flmul+2,w
  5288  0D18  0021               	movlb	1	; select bank1
  5289  0D19  00C2               	movwf	(_panel_v+2)^(0+128)
  5290  0D1A  0020               	movlb	0	; select bank0
  5291  0D1B  082B               	movf	?___flmul+1,w
  5292  0D1C  0021               	movlb	1	; select bank1
  5293  0D1D  00C1               	movwf	(_panel_v+1)^(0+128)
  5294  0D1E  0020               	movlb	0	; select bank0
  5295  0D1F  082A               	movf	?___flmul,w
  5296  0D20  0021               	movlb	1	; select bank1
  5297  0D21  00C0               	movwf	_panel_v^(0+128)
  5298                           
  5299                           ;main.c: 356: if (*panel_volt < 0)
  5300  0D22  0843               	movf	(_panel_v+3)^(0+128),w
  5301  0D23  00F3               	movwf	___flge@ff1+3
  5302  0D24  0842               	movf	(_panel_v+2)^(0+128),w
  5303  0D25  00F2               	movwf	___flge@ff1+2
  5304  0D26  0841               	movf	(_panel_v+1)^(0+128),w
  5305  0D27  00F1               	movwf	___flge@ff1+1
  5306  0D28  0840               	movf	_panel_v^(0+128),w
  5307  0D29  00F0               	movwf	___flge@ff1
  5308  0D2A  3000               	movlw	0
  5309  0D2B  00F7               	movwf	___flge@ff2+3
  5310  0D2C  3000               	movlw	0
  5311  0D2D  00F6               	movwf	___flge@ff2+2
  5312  0D2E  3000               	movlw	0
  5313  0D2F  00F5               	movwf	___flge@ff2+1
  5314  0D30  3000               	movlw	0
  5315  0D31  00F4               	movwf	___flge@ff2
  5316  0D32  3194  24F0  318C   	fcall	___flge
  5317  0D35  1803               	btfsc	3,0
  5318  0D36  2D40               	goto	l3306
  5319                           
  5320                           ;main.c: 357: {;main.c: 358: *panel_volt = 0;
  5321  0D37  3000               	movlw	0
  5322  0D38  0021               	movlb	1	; select bank1
  5323  0D39  00C3               	movwf	(_panel_v+3)^(0+128)
  5324  0D3A  3000               	movlw	0
  5325  0D3B  00C2               	movwf	(_panel_v+2)^(0+128)
  5326  0D3C  3000               	movlw	0
  5327  0D3D  00C1               	movwf	(_panel_v+1)^(0+128)
  5328  0D3E  3000               	movlw	0
  5329  0D3F  00C0               	movwf	_panel_v^(0+128)
  5330  0D40                     l3306:	
  5331                           
  5332                           ;main.c: 359: };main.c: 361: *panel_volt = roundedVal(*panel_volt);
  5333  0D40  0021               	movlb	1	; select bank1
  5334  0D41  0843               	movf	(_panel_v+3)^(0+128),w
  5335  0D42  0020               	movlb	0	; select bank0
  5336  0D43  00E8               	movwf	roundedVal@x+3
  5337  0D44  0021               	movlb	1	; select bank1
  5338  0D45  0842               	movf	(_panel_v+2)^(0+128),w
  5339  0D46  0020               	movlb	0	; select bank0
  5340  0D47  00E7               	movwf	roundedVal@x+2
  5341  0D48  0021               	movlb	1	; select bank1
  5342  0D49  0841               	movf	(_panel_v+1)^(0+128),w
  5343  0D4A  0020               	movlb	0	; select bank0
  5344  0D4B  00E6               	movwf	roundedVal@x+1
  5345  0D4C  0021               	movlb	1	; select bank1
  5346  0D4D  0840               	movf	_panel_v^(0+128),w
  5347  0D4E  0020               	movlb	0	; select bank0
  5348  0D4F  00E5               	movwf	roundedVal@x
  5349  0D50  3194  2420         	fcall	_roundedVal
  5350  0D52  0020               	movlb	0	; select bank0
  5351  0D53  0868               	movf	?_roundedVal+3,w
  5352  0D54  0021               	movlb	1	; select bank1
  5353  0D55  00C3               	movwf	(_panel_v+3)^(0+128)
  5354  0D56  0020               	movlb	0	; select bank0
  5355  0D57  0867               	movf	?_roundedVal+2,w
  5356  0D58  0021               	movlb	1	; select bank1
  5357  0D59  00C2               	movwf	(_panel_v+2)^(0+128)
  5358  0D5A  0020               	movlb	0	; select bank0
  5359  0D5B  0866               	movf	?_roundedVal+1,w
  5360  0D5C  0021               	movlb	1	; select bank1
  5361  0D5D  00C1               	movwf	(_panel_v+1)^(0+128)
  5362  0D5E  0020               	movlb	0	; select bank0
  5363  0D5F  0865               	movf	?_roundedVal,w
  5364  0D60  0021               	movlb	1	; select bank1
  5365  0D61  00C0               	movwf	_panel_v^(0+128)
  5366  0D62  0008               	return
  5367  0D63                     __end_of_read_panel:	
  5368                           
  5369                           	psect	text5
  5370  0B16                     __ptext5:	
  5371 ;; *************** function _read_current *****************
  5372 ;; Defined at:
  5373 ;;		line 241 in file "main.c"
  5374 ;; Parameters:    Size  Location     Type
  5375 ;;		None
  5376 ;; Auto vars:     Size  Location     Type
  5377 ;;  i               2   15[BANK1 ] int 
  5378 ;;  Voltage         4   17[BANK1 ] float 
  5379 ;;  convertedVal    2   13[BANK1 ] unsigned int 
  5380 ;; Return value:  Size  Location     Type
  5381 ;;                  1    wreg      void 
  5382 ;; Registers used:
  5383 ;;		wreg, status,2, status,0, pclath, cstack
  5384 ;; Tracked objects:
  5385 ;;		On entry : 0/0
  5386 ;;		On exit  : 0/0
  5387 ;;		Unchanged: 0/0
  5388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5390 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5391 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5392 ;;      Totals:         1       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5393 ;;Total ram usage:        9 bytes
  5394 ;; Hardware stack levels used:    1
  5395 ;; Hardware stack levels required when called:    3
  5396 ;; This function calls:
  5397 ;;		___fladd
  5398 ;;		___fldiv
  5399 ;;		___flmul
  5400 ;;		___xxtofl
  5401 ;;		_roundedVal
  5402 ;; This function is called by:
  5403 ;;		_main
  5404 ;; This function uses a non-reentrant model
  5405 ;;
  5406                           
  5407                           
  5408                           ;psect for function _read_current
  5409  0B16                     _read_current:	
  5410                           
  5411                           ;main.c: 243: uint16_t convertedValue;;main.c: 244: float Voltage = 0;
  5412                           
  5413                           ;incstack = 0
  5414                           ; Regs used in _read_current: [wreg+status,2+status,0+pclath+cstack]
  5415  0B16  3000               	movlw	0
  5416  0B17  0021               	movlb	1	; select bank1
  5417  0B18  00DE               	movwf	(read_current@Voltage+3)^(0+128)
  5418  0B19  3000               	movlw	0
  5419  0B1A  00DD               	movwf	(read_current@Voltage+2)^(0+128)
  5420  0B1B  3000               	movlw	0
  5421  0B1C  00DC               	movwf	(read_current@Voltage+1)^(0+128)
  5422  0B1D  3000               	movlw	0
  5423  0B1E  00DB               	movwf	read_current@Voltage^(0+128)
  5424                           
  5425                           ;main.c: 247: ADCON0bits.CHS = 0b00001;
  5426  0B1F  081D               	movf	29,w	;volatile
  5427  0B20  3983               	andlw	-125
  5428  0B21  3804               	iorlw	4
  5429  0B22  009D               	movwf	29	;volatile
  5430                           
  5431                           ;main.c: 250: for(int i = 0; i < 200; i++) {
  5432  0B23  01D9               	clrf	read_current@i^(0+128)
  5433  0B24  01DA               	clrf	(read_current@i+1)^(0+128)
  5434  0B25                     l3354:	
  5435                           
  5436                           ;main.c: 252: _delay((unsigned long)((10)*(16000000/4000000.0)));
  5437  0B25  300D               	movlw	13
  5438  0B26                     u4157:	
  5439  0B26  0B89               	decfsz	9,f
  5440  0B27  2B26               	goto	u4157
  5441  0B28  0000               	nop
  5442                           
  5443                           ;main.c: 253: ADCON0bits.GO = 1;
  5444  0B29  0021               	movlb	1	; select bank1
  5445  0B2A  149D               	bsf	29,1	;volatile
  5446  0B2B                     l276:	
  5447                           ;main.c: 254: while (ADCON0bits.GO_nDONE);
  5448                           
  5449  0B2B  189D               	btfsc	29,1	;volatile
  5450  0B2C  2B2B               	goto	l276
  5451                           
  5452                           ;main.c: 257: convertedValue = ((ADRESH<<8)+ADRESL);
  5453  0B2D  081C               	movf	28,w	;volatile
  5454  0B2E  00D8               	movwf	(read_current@convertedValue+1)^(0+128)
  5455  0B2F  081B               	movf	27,w	;volatile
  5456  0B30  00D7               	movwf	read_current@convertedValue^(0+128)
  5457                           
  5458                           ;main.c: 259: Voltage = (Voltage + (.0049 * convertedValue));
  5459  0B31  085E               	movf	(read_current@Voltage+3)^(0+128),w
  5460  0B32  0020               	movlb	0	; select bank0
  5461  0B33  00C7               	movwf	___fladd@b+3
  5462  0B34  0021               	movlb	1	; select bank1
  5463  0B35  085D               	movf	(read_current@Voltage+2)^(0+128),w
  5464  0B36  0020               	movlb	0	; select bank0
  5465  0B37  00C6               	movwf	___fladd@b+2
  5466  0B38  0021               	movlb	1	; select bank1
  5467  0B39  085C               	movf	(read_current@Voltage+1)^(0+128),w
  5468  0B3A  0020               	movlb	0	; select bank0
  5469  0B3B  00C5               	movwf	___fladd@b+1
  5470  0B3C  0021               	movlb	1	; select bank1
  5471  0B3D  085B               	movf	read_current@Voltage^(0+128),w
  5472  0B3E  0020               	movlb	0	; select bank0
  5473  0B3F  00C4               	movwf	___fladd@b
  5474  0B40  303B               	movlw	59
  5475  0B41  00AD               	movwf	___flmul@b+3
  5476  0B42  30A0               	movlw	160
  5477  0B43  00AC               	movwf	___flmul@b+2
  5478  0B44  3090               	movlw	144
  5479  0B45  00AB               	movwf	___flmul@b+1
  5480  0B46  302E               	movlw	46
  5481  0B47  00AA               	movwf	___flmul@b
  5482  0B48  0021               	movlb	1	; select bank1
  5483  0B49  0857               	movf	read_current@convertedValue^(0+128),w
  5484  0B4A  00F9               	movwf	___xxtofl@val
  5485  0B4B  0858               	movf	(read_current@convertedValue+1)^(0+128),w
  5486  0B4C  00FA               	movwf	___xxtofl@val+1
  5487  0B4D  01FB               	clrf	___xxtofl@val+2
  5488  0B4E  01FC               	clrf	___xxtofl@val+3
  5489  0B4F  3000               	movlw	0
  5490  0B50  3196  268A  318B   	fcall	___xxtofl
  5491  0B53  087C               	movf	?___xxtofl+3,w
  5492  0B54  0020               	movlb	0	; select bank0
  5493  0B55  00B1               	movwf	___flmul@a+3
  5494  0B56  087B               	movf	?___xxtofl+2,w
  5495  0B57  00B0               	movwf	___flmul@a+2
  5496  0B58  087A               	movf	?___xxtofl+1,w
  5497  0B59  00AF               	movwf	___flmul@a+1
  5498  0B5A  0879               	movf	?___xxtofl,w
  5499  0B5B  00AE               	movwf	___flmul@a
  5500  0B5C  3185  25AA  318B   	fcall	___flmul
  5501  0B5F  0020               	movlb	0	; select bank0
  5502  0B60  082D               	movf	?___flmul+3,w
  5503  0B61  00CB               	movwf	___fladd@a+3
  5504  0B62  082C               	movf	?___flmul+2,w
  5505  0B63  00CA               	movwf	___fladd@a+2
  5506  0B64  082B               	movf	?___flmul+1,w
  5507  0B65  00C9               	movwf	___fladd@a+1
  5508  0B66  082A               	movf	?___flmul,w
  5509  0B67  00C8               	movwf	___fladd@a
  5510  0B68  3183  23C8  318B   	fcall	___fladd
  5511  0B6B  0020               	movlb	0	; select bank0
  5512  0B6C  0847               	movf	?___fladd+3,w
  5513  0B6D  0021               	movlb	1	; select bank1
  5514  0B6E  00DE               	movwf	(read_current@Voltage+3)^(0+128)
  5515  0B6F  0020               	movlb	0	; select bank0
  5516  0B70  0846               	movf	?___fladd+2,w
  5517  0B71  0021               	movlb	1	; select bank1
  5518  0B72  00DD               	movwf	(read_current@Voltage+2)^(0+128)
  5519  0B73  0020               	movlb	0	; select bank0
  5520  0B74  0845               	movf	?___fladd+1,w
  5521  0B75  0021               	movlb	1	; select bank1
  5522  0B76  00DC               	movwf	(read_current@Voltage+1)^(0+128)
  5523  0B77  0020               	movlb	0	; select bank0
  5524  0B78  0844               	movf	?___fladd,w
  5525  0B79  0021               	movlb	1	; select bank1
  5526  0B7A  00DB               	movwf	read_current@Voltage^(0+128)
  5527                           
  5528                           ;main.c: 260: _delay((unsigned long)((1)*(16000000/4000.0)));
  5529  0B7B  3006               	movlw	6
  5530  0B7C  00FD               	movwf	??_read_current
  5531  0B7D  3030               	movlw	48
  5532  0B7E                     u4167:	
  5533  0B7E  0B89               	decfsz	9,f
  5534  0B7F  2B7E               	goto	u4167
  5535  0B80  0BFD               	decfsz	??_read_current,f
  5536  0B81  2B7E               	goto	u4167
  5537  0B82  3200               	nop2
  5538  0B83  3001               	movlw	1
  5539  0B84  0021               	movlb	1	; select bank1
  5540  0B85  07D9               	addwf	read_current@i^(0+128),f
  5541  0B86  3000               	movlw	0
  5542  0B87  3DDA               	addwfc	(read_current@i+1)^(0+128),f
  5543  0B88  085A               	movf	(read_current@i+1)^(0+128),w
  5544  0B89  3A80               	xorlw	128
  5545  0B8A  00FD               	movwf	??_read_current
  5546  0B8B  3080               	movlw	128
  5547  0B8C  027D               	subwf	??_read_current,w
  5548  0B8D  1D03               	skipz
  5549  0B8E  2B91               	goto	u3995
  5550  0B8F  30C8               	movlw	200
  5551  0B90  0259               	subwf	read_current@i^(0+128),w
  5552  0B91                     u3995:	
  5553  0B91  1C03               	skipc
  5554  0B92  2B25               	goto	l3354
  5555                           
  5556                           ;main.c: 261: };main.c: 263: Voltage = Voltage/200;
  5557  0B93  3043               	movlw	67
  5558  0B94  0020               	movlb	0	; select bank0
  5559  0B95  00DB               	movwf	___fldiv@a+3
  5560  0B96  3048               	movlw	72
  5561  0B97  00DA               	movwf	___fldiv@a+2
  5562  0B98  3000               	movlw	0
  5563  0B99  00D9               	movwf	___fldiv@a+1
  5564  0B9A  3000               	movlw	0
  5565  0B9B  00D8               	movwf	___fldiv@a
  5566  0B9C  0021               	movlb	1	; select bank1
  5567  0B9D  085E               	movf	(read_current@Voltage+3)^(0+128),w
  5568  0B9E  0020               	movlb	0	; select bank0
  5569  0B9F  00DF               	movwf	___fldiv@b+3
  5570  0BA0  0021               	movlb	1	; select bank1
  5571  0BA1  085D               	movf	(read_current@Voltage+2)^(0+128),w
  5572  0BA2  0020               	movlb	0	; select bank0
  5573  0BA3  00DE               	movwf	___fldiv@b+2
  5574  0BA4  0021               	movlb	1	; select bank1
  5575  0BA5  085C               	movf	(read_current@Voltage+1)^(0+128),w
  5576  0BA6  0020               	movlb	0	; select bank0
  5577  0BA7  00DD               	movwf	___fldiv@b+1
  5578  0BA8  0021               	movlb	1	; select bank1
  5579  0BA9  085B               	movf	read_current@Voltage^(0+128),w
  5580  0BAA  0020               	movlb	0	; select bank0
  5581  0BAB  00DC               	movwf	___fldiv@b
  5582  0BAC  3181  21F0  318B   	fcall	___fldiv
  5583  0BAF  0020               	movlb	0	; select bank0
  5584  0BB0  085B               	movf	?___fldiv+3,w
  5585  0BB1  0021               	movlb	1	; select bank1
  5586  0BB2  00DE               	movwf	(read_current@Voltage+3)^(0+128)
  5587  0BB3  0020               	movlb	0	; select bank0
  5588  0BB4  085A               	movf	?___fldiv+2,w
  5589  0BB5  0021               	movlb	1	; select bank1
  5590  0BB6  00DD               	movwf	(read_current@Voltage+2)^(0+128)
  5591  0BB7  0020               	movlb	0	; select bank0
  5592  0BB8  0859               	movf	?___fldiv+1,w
  5593  0BB9  0021               	movlb	1	; select bank1
  5594  0BBA  00DC               	movwf	(read_current@Voltage+1)^(0+128)
  5595  0BBB  0020               	movlb	0	; select bank0
  5596  0BBC  0858               	movf	?___fldiv,w
  5597  0BBD  0021               	movlb	1	; select bank1
  5598  0BBE  00DB               	movwf	read_current@Voltage^(0+128)
  5599                           
  5600                           ;main.c: 265: Current = (Voltage - 2.5)/ 0.100;
  5601  0BBF  303D               	movlw	61
  5602  0BC0  0020               	movlb	0	; select bank0
  5603  0BC1  00DB               	movwf	___fldiv@a+3
  5604  0BC2  30CC               	movlw	204
  5605  0BC3  00DA               	movwf	___fldiv@a+2
  5606  0BC4  30CC               	movlw	204
  5607  0BC5  00D9               	movwf	___fldiv@a+1
  5608  0BC6  30CD               	movlw	205
  5609  0BC7  00D8               	movwf	___fldiv@a
  5610  0BC8  30C0               	movlw	192
  5611  0BC9  00C7               	movwf	___fladd@b+3
  5612  0BCA  3020               	movlw	32
  5613  0BCB  00C6               	movwf	___fladd@b+2
  5614  0BCC  3000               	movlw	0
  5615  0BCD  00C5               	movwf	___fladd@b+1
  5616  0BCE  3000               	movlw	0
  5617  0BCF  00C4               	movwf	___fladd@b
  5618  0BD0  0021               	movlb	1	; select bank1
  5619  0BD1  085E               	movf	(read_current@Voltage+3)^(0+128),w
  5620  0BD2  0020               	movlb	0	; select bank0
  5621  0BD3  00CB               	movwf	___fladd@a+3
  5622  0BD4  0021               	movlb	1	; select bank1
  5623  0BD5  085D               	movf	(read_current@Voltage+2)^(0+128),w
  5624  0BD6  0020               	movlb	0	; select bank0
  5625  0BD7  00CA               	movwf	___fladd@a+2
  5626  0BD8  0021               	movlb	1	; select bank1
  5627  0BD9  085C               	movf	(read_current@Voltage+1)^(0+128),w
  5628  0BDA  0020               	movlb	0	; select bank0
  5629  0BDB  00C9               	movwf	___fladd@a+1
  5630  0BDC  0021               	movlb	1	; select bank1
  5631  0BDD  085B               	movf	read_current@Voltage^(0+128),w
  5632  0BDE  0020               	movlb	0	; select bank0
  5633  0BDF  00C8               	movwf	___fladd@a
  5634  0BE0  3183  23C8  318B   	fcall	___fladd
  5635  0BE3  0020               	movlb	0	; select bank0
  5636  0BE4  0847               	movf	?___fladd+3,w
  5637  0BE5  00DF               	movwf	___fldiv@b+3
  5638  0BE6  0846               	movf	?___fladd+2,w
  5639  0BE7  00DE               	movwf	___fldiv@b+2
  5640  0BE8  0845               	movf	?___fladd+1,w
  5641  0BE9  00DD               	movwf	___fldiv@b+1
  5642  0BEA  0844               	movf	?___fladd,w
  5643  0BEB  00DC               	movwf	___fldiv@b
  5644  0BEC  3181  21F0  318B   	fcall	___fldiv
  5645  0BEF  0020               	movlb	0	; select bank0
  5646  0BF0  085B               	movf	?___fldiv+3,w
  5647  0BF1  0021               	movlb	1	; select bank1
  5648  0BF2  00BB               	movwf	(_Current+3)^(0+128)
  5649  0BF3  0020               	movlb	0	; select bank0
  5650  0BF4  085A               	movf	?___fldiv+2,w
  5651  0BF5  0021               	movlb	1	; select bank1
  5652  0BF6  00BA               	movwf	(_Current+2)^(0+128)
  5653  0BF7  0020               	movlb	0	; select bank0
  5654  0BF8  0859               	movf	?___fldiv+1,w
  5655  0BF9  0021               	movlb	1	; select bank1
  5656  0BFA  00B9               	movwf	(_Current+1)^(0+128)
  5657  0BFB  0020               	movlb	0	; select bank0
  5658  0BFC  0858               	movf	?___fldiv,w
  5659  0BFD  0021               	movlb	1	; select bank1
  5660  0BFE  00B8               	movwf	_Current^(0+128)
  5661                           
  5662                           ;main.c: 266: Current = roundedVal(Current);
  5663  0BFF  083B               	movf	(_Current+3)^(0+128),w
  5664  0C00  0020               	movlb	0	; select bank0
  5665  0C01  00E8               	movwf	roundedVal@x+3
  5666  0C02  0021               	movlb	1	; select bank1
  5667  0C03  083A               	movf	(_Current+2)^(0+128),w
  5668  0C04  0020               	movlb	0	; select bank0
  5669  0C05  00E7               	movwf	roundedVal@x+2
  5670  0C06  0021               	movlb	1	; select bank1
  5671  0C07  0839               	movf	(_Current+1)^(0+128),w
  5672  0C08  0020               	movlb	0	; select bank0
  5673  0C09  00E6               	movwf	roundedVal@x+1
  5674  0C0A  0021               	movlb	1	; select bank1
  5675  0C0B  0838               	movf	_Current^(0+128),w
  5676  0C0C  0020               	movlb	0	; select bank0
  5677  0C0D  00E5               	movwf	roundedVal@x
  5678  0C0E  3194  2420         	fcall	_roundedVal
  5679  0C10  0020               	movlb	0	; select bank0
  5680  0C11  0868               	movf	?_roundedVal+3,w
  5681  0C12  0021               	movlb	1	; select bank1
  5682  0C13  00BB               	movwf	(_Current+3)^(0+128)
  5683  0C14  0020               	movlb	0	; select bank0
  5684  0C15  0867               	movf	?_roundedVal+2,w
  5685  0C16  0021               	movlb	1	; select bank1
  5686  0C17  00BA               	movwf	(_Current+2)^(0+128)
  5687  0C18  0020               	movlb	0	; select bank0
  5688  0C19  0866               	movf	?_roundedVal+1,w
  5689  0C1A  0021               	movlb	1	; select bank1
  5690  0C1B  00B9               	movwf	(_Current+1)^(0+128)
  5691  0C1C  0020               	movlb	0	; select bank0
  5692  0C1D  0865               	movf	?_roundedVal,w
  5693  0C1E  0021               	movlb	1	; select bank1
  5694  0C1F  00B8               	movwf	_Current^(0+128)
  5695  0C20  0008               	return
  5696  0C21                     __end_of_read_current:	
  5697                           
  5698                           	psect	text6
  5699  1420                     __ptext6:	
  5700 ;; *************** function _roundedVal *****************
  5701 ;; Defined at:
  5702 ;;		line 52 in file "main.c"
  5703 ;; Parameters:    Size  Location     Type
  5704 ;;  x               4   69[BANK0 ] float 
  5705 ;; Auto vars:     Size  Location     Type
  5706 ;;  value           4   73[BANK0 ] float 
  5707 ;; Return value:  Size  Location     Type
  5708 ;;                  4   69[BANK0 ] float 
  5709 ;; Registers used:
  5710 ;;		wreg, status,2, status,0, pclath, cstack
  5711 ;; Tracked objects:
  5712 ;;		On entry : 0/0
  5713 ;;		On exit  : 0/0
  5714 ;;		Unchanged: 0/0
  5715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5716 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5717 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5719 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5720 ;;Total ram usage:        8 bytes
  5721 ;; Hardware stack levels used:    1
  5722 ;; Hardware stack levels required when called:    2
  5723 ;; This function calls:
  5724 ;;		___fladd
  5725 ;;		___fldiv
  5726 ;;		___flmul
  5727 ;;		___fltol
  5728 ;;		___xxtofl
  5729 ;; This function is called by:
  5730 ;;		_read_current
  5731 ;;		_read_voltage
  5732 ;;		_read_panel
  5733 ;; This function uses a non-reentrant model
  5734 ;;
  5735                           
  5736                           
  5737                           ;psect for function _roundedVal
  5738  1420                     _roundedVal:	
  5739                           
  5740                           ;main.c: 54: float value = (int)(x * 100 + .5);
  5741                           
  5742                           ;incstack = 0
  5743                           ; Regs used in _roundedVal: [wreg+status,2+status,0+pclath+cstack]
  5744  1420  0020               	movlb	0	; select bank0
  5745  1421  0868               	movf	roundedVal@x+3,w
  5746  1422  00B1               	movwf	___flmul@a+3
  5747  1423  0867               	movf	roundedVal@x+2,w
  5748  1424  00B0               	movwf	___flmul@a+2
  5749  1425  0866               	movf	roundedVal@x+1,w
  5750  1426  00AF               	movwf	___flmul@a+1
  5751  1427  0865               	movf	roundedVal@x,w
  5752  1428  00AE               	movwf	___flmul@a
  5753  1429  3042               	movlw	66
  5754  142A  00AD               	movwf	___flmul@b+3
  5755  142B  30C8               	movlw	200
  5756  142C  00AC               	movwf	___flmul@b+2
  5757  142D  3000               	movlw	0
  5758  142E  00AB               	movwf	___flmul@b+1
  5759  142F  3000               	movlw	0
  5760  1430  00AA               	movwf	___flmul@b
  5761  1431  3185  25AA  3194   	fcall	___flmul
  5762  1434  0020               	movlb	0	; select bank0
  5763  1435  082D               	movf	?___flmul+3,w
  5764  1436  00CB               	movwf	___fladd@a+3
  5765  1437  082C               	movf	?___flmul+2,w
  5766  1438  00CA               	movwf	___fladd@a+2
  5767  1439  082B               	movf	?___flmul+1,w
  5768  143A  00C9               	movwf	___fladd@a+1
  5769  143B  082A               	movf	?___flmul,w
  5770  143C  00C8               	movwf	___fladd@a
  5771  143D  303F               	movlw	63
  5772  143E  00C7               	movwf	___fladd@b+3
  5773  143F  3000               	movlw	0
  5774  1440  00C6               	movwf	___fladd@b+2
  5775  1441  3000               	movlw	0
  5776  1442  00C5               	movwf	___fladd@b+1
  5777  1443  3000               	movlw	0
  5778  1444  00C4               	movwf	___fladd@b
  5779  1445  3183  23C8  3194   	fcall	___fladd
  5780  1448  0020               	movlb	0	; select bank0
  5781  1449  0847               	movf	?___fladd+3,w
  5782  144A  00DB               	movwf	___fltol@f1+3
  5783  144B  0846               	movf	?___fladd+2,w
  5784  144C  00DA               	movwf	___fltol@f1+2
  5785  144D  0845               	movf	?___fladd+1,w
  5786  144E  00D9               	movwf	___fltol@f1+1
  5787  144F  0844               	movf	?___fladd,w
  5788  1450  00D8               	movwf	___fltol@f1
  5789  1451  3193  23BA  3194   	fcall	___fltol
  5790  1454  0020               	movlb	0	; select bank0
  5791  1455  0858               	movf	?___fltol,w
  5792  1456  00F9               	movwf	___xxtofl@val
  5793  1457  0859               	movf	?___fltol+1,w
  5794  1458  00FA               	movwf	___xxtofl@val+1
  5795  1459  0D89               	rlf	9,f
  5796  145A  3B89               	subwfb	9,f
  5797  145B  0989               	comf	9,f
  5798  145C  00FB               	movwf	___xxtofl@val+2
  5799  145D  00FC               	movwf	___xxtofl@val+3
  5800  145E  3001               	movlw	1
  5801  145F  3196  268A  3194   	fcall	___xxtofl
  5802  1462  087C               	movf	?___xxtofl+3,w
  5803  1463  0020               	movlb	0	; select bank0
  5804  1464  00EC               	movwf	roundedVal@value+3
  5805  1465  087B               	movf	?___xxtofl+2,w
  5806  1466  00EB               	movwf	roundedVal@value+2
  5807  1467  087A               	movf	?___xxtofl+1,w
  5808  1468  00EA               	movwf	roundedVal@value+1
  5809  1469  0879               	movf	?___xxtofl,w
  5810  146A  00E9               	movwf	roundedVal@value
  5811                           
  5812                           ;main.c: 55: return (float)value / 100;
  5813  146B  3042               	movlw	66
  5814  146C  00DB               	movwf	___fldiv@a+3
  5815  146D  30C8               	movlw	200
  5816  146E  00DA               	movwf	___fldiv@a+2
  5817  146F  3000               	movlw	0
  5818  1470  00D9               	movwf	___fldiv@a+1
  5819  1471  3000               	movlw	0
  5820  1472  00D8               	movwf	___fldiv@a
  5821  1473  086C               	movf	roundedVal@value+3,w
  5822  1474  00DF               	movwf	___fldiv@b+3
  5823  1475  086B               	movf	roundedVal@value+2,w
  5824  1476  00DE               	movwf	___fldiv@b+2
  5825  1477  086A               	movf	roundedVal@value+1,w
  5826  1478  00DD               	movwf	___fldiv@b+1
  5827  1479  0869               	movf	roundedVal@value,w
  5828  147A  00DC               	movwf	___fldiv@b
  5829  147B  3181  21F0         	fcall	___fldiv
  5830  147D  0020               	movlb	0	; select bank0
  5831  147E  085B               	movf	?___fldiv+3,w
  5832  147F  00E8               	movwf	?_roundedVal+3
  5833  1480  085A               	movf	?___fldiv+2,w
  5834  1481  00E7               	movwf	?_roundedVal+2
  5835  1482  0859               	movf	?___fldiv+1,w
  5836  1483  00E6               	movwf	?_roundedVal+1
  5837  1484  0858               	movf	?___fldiv,w
  5838  1485  00E5               	movwf	?_roundedVal
  5839  1486  0008               	return
  5840  1487                     __end_of_roundedVal:	
  5841                           
  5842                           	psect	text7
  5843  01F0                     __ptext7:	
  5844 ;; *************** function ___fldiv *****************
  5845 ;; Defined at:
  5846 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcdiv.c"
  5847 ;; Parameters:    Size  Location     Type
  5848 ;;  a               4   56[BANK0 ] float 
  5849 ;;  b               4   60[BANK0 ] float 
  5850 ;; Auto vars:     Size  Location     Type
  5851 ;;  grs             4    7[BANK1 ] unsigned long 
  5852 ;;  rem             4    0[BANK1 ] unsigned long 
  5853 ;;  new_exp         2    5[BANK1 ] int 
  5854 ;;  aexp            1   12[BANK1 ] unsigned char 
  5855 ;;  bexp            1   11[BANK1 ] unsigned char 
  5856 ;;  sign            1    4[BANK1 ] unsigned char 
  5857 ;; Return value:  Size  Location     Type
  5858 ;;                  4   56[BANK0 ] unsigned char 
  5859 ;; Registers used:
  5860 ;;		wreg, status,2, status,0
  5861 ;; Tracked objects:
  5862 ;;		On entry : 0/0
  5863 ;;		On exit  : 0/0
  5864 ;;		Unchanged: 0/0
  5865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5866 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5867 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5868 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5869 ;;      Totals:         0      13      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5870 ;;Total ram usage:       26 bytes
  5871 ;; Hardware stack levels used:    1
  5872 ;; This function calls:
  5873 ;;		Nothing
  5874 ;; This function is called by:
  5875 ;;		_roundedVal
  5876 ;;		_read_current
  5877 ;;		_read_voltage
  5878 ;;		_read_panel
  5879 ;; This function uses a non-reentrant model
  5880 ;;
  5881                           
  5882                           
  5883                           ;psect for function ___fldiv
  5884  01F0                     ___fldiv:	
  5885                           
  5886                           ;incstack = 0
  5887                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  5888  01F0  0020               	movlb	0	; select bank0
  5889  01F1  085F               	movf	___fldiv@b+3,w
  5890  01F2  3980               	andlw	128
  5891  01F3  00E0               	movwf	??___fldiv
  5892  01F4  0860               	movf	??___fldiv,w
  5893  01F5  0021               	movlb	1	; select bank1
  5894  01F6  00CE               	movwf	___fldiv@sign^(0+128)
  5895  01F7  0020               	movlb	0	; select bank0
  5896  01F8  355F               	lslf	___fldiv@b+3,w
  5897  01F9  00E0               	movwf	??___fldiv
  5898  01FA  0860               	movf	??___fldiv,w
  5899  01FB  0021               	movlb	1	; select bank1
  5900  01FC  00D5               	movwf	___fldiv@bexp^(0+128)
  5901  01FD  0020               	movlb	0	; select bank0
  5902  01FE  1FDE               	btfss	___fldiv@b+2,7
  5903  01FF  2A02               	goto	l3112
  5904  0200  0021               	movlb	1	; select bank1
  5905  0201  1455               	bsf	___fldiv@bexp^(0+128),0
  5906  0202                     l3112:	
  5907  0202  0021               	movlb	1	; select bank1
  5908  0203  0855               	movf	___fldiv@bexp^(0+128),w
  5909  0204  1903               	btfsc	3,2
  5910  0205  2A16               	goto	l3122
  5911  0206  0A55               	incf	___fldiv@bexp^(0+128),w
  5912  0207  1D03               	btfss	3,2
  5913  0208  2A12               	goto	l3118
  5914  0209  3000               	movlw	0
  5915  020A  0020               	movlb	0	; select bank0
  5916  020B  00DF               	movwf	___fldiv@b+3
  5917  020C  3000               	movlw	0
  5918  020D  00DE               	movwf	___fldiv@b+2
  5919  020E  3000               	movlw	0
  5920  020F  00DD               	movwf	___fldiv@b+1
  5921  0210  3000               	movlw	0
  5922  0211  00DC               	movwf	___fldiv@b
  5923  0212                     l3118:	
  5924  0212  0020               	movlb	0	; select bank0
  5925  0213  17DE               	bsf	___fldiv@b+2,7
  5926  0214  01DF               	clrf	___fldiv@b+3
  5927  0215  2A1F               	goto	l3124
  5928  0216                     l3122:	
  5929  0216  3000               	movlw	0
  5930  0217  0020               	movlb	0	; select bank0
  5931  0218  00DF               	movwf	___fldiv@b+3
  5932  0219  3000               	movlw	0
  5933  021A  00DE               	movwf	___fldiv@b+2
  5934  021B  3000               	movlw	0
  5935  021C  00DD               	movwf	___fldiv@b+1
  5936  021D  3000               	movlw	0
  5937  021E  00DC               	movwf	___fldiv@b
  5938  021F                     l3124:	
  5939  021F  085B               	movf	___fldiv@a+3,w
  5940  0220  3980               	andlw	128
  5941  0221  00E0               	movwf	??___fldiv
  5942  0222  0860               	movf	??___fldiv,w
  5943  0223  0021               	movlb	1	; select bank1
  5944  0224  06CE               	xorwf	___fldiv@sign^(0+128),f
  5945  0225  0020               	movlb	0	; select bank0
  5946  0226  355B               	lslf	___fldiv@a+3,w
  5947  0227  00E0               	movwf	??___fldiv
  5948  0228  0860               	movf	??___fldiv,w
  5949  0229  0021               	movlb	1	; select bank1
  5950  022A  00D6               	movwf	___fldiv@aexp^(0+128)
  5951  022B  0020               	movlb	0	; select bank0
  5952  022C  1FDA               	btfss	___fldiv@a+2,7
  5953  022D  2A30               	goto	l3132
  5954  022E  0021               	movlb	1	; select bank1
  5955  022F  1456               	bsf	___fldiv@aexp^(0+128),0
  5956  0230                     l3132:	
  5957  0230  0021               	movlb	1	; select bank1
  5958  0231  0856               	movf	___fldiv@aexp^(0+128),w
  5959  0232  1903               	btfsc	3,2
  5960  0233  2A44               	goto	l3142
  5961  0234  0A56               	incf	___fldiv@aexp^(0+128),w
  5962  0235  1D03               	btfss	3,2
  5963  0236  2A40               	goto	l3138
  5964  0237  3000               	movlw	0
  5965  0238  0020               	movlb	0	; select bank0
  5966  0239  00DB               	movwf	___fldiv@a+3
  5967  023A  3000               	movlw	0
  5968  023B  00DA               	movwf	___fldiv@a+2
  5969  023C  3000               	movlw	0
  5970  023D  00D9               	movwf	___fldiv@a+1
  5971  023E  3000               	movlw	0
  5972  023F  00D8               	movwf	___fldiv@a
  5973  0240                     l3138:	
  5974  0240  0020               	movlb	0	; select bank0
  5975  0241  17DA               	bsf	___fldiv@a+2,7
  5976  0242  01DB               	clrf	___fldiv@a+3
  5977  0243  2A4D               	goto	l892
  5978  0244                     l3142:	
  5979  0244  3000               	movlw	0
  5980  0245  0020               	movlb	0	; select bank0
  5981  0246  00DB               	movwf	___fldiv@a+3
  5982  0247  3000               	movlw	0
  5983  0248  00DA               	movwf	___fldiv@a+2
  5984  0249  3000               	movlw	0
  5985  024A  00D9               	movwf	___fldiv@a+1
  5986  024B  3000               	movlw	0
  5987  024C  00D8               	movwf	___fldiv@a
  5988  024D                     l892:	
  5989  024D  085B               	movf	___fldiv@a+3,w
  5990  024E  045A               	iorwf	___fldiv@a+2,w
  5991  024F  0459               	iorwf	___fldiv@a+1,w
  5992  0250  0458               	iorwf	___fldiv@a,w
  5993  0251  1D03               	skipz
  5994  0252  2A6E               	goto	l3152
  5995  0253  3000               	movlw	0
  5996  0254  00DF               	movwf	___fldiv@b+3
  5997  0255  3000               	movlw	0
  5998  0256  00DE               	movwf	___fldiv@b+2
  5999  0257  3000               	movlw	0
  6000  0258  00DD               	movwf	___fldiv@b+1
  6001  0259  3000               	movlw	0
  6002  025A  00DC               	movwf	___fldiv@b
  6003  025B  3080               	movlw	128
  6004  025C  04DE               	iorwf	___fldiv@b+2,f
  6005  025D  307F               	movlw	127
  6006  025E  04DF               	iorwf	___fldiv@b+3,f
  6007  025F                     L1:	
  6008  025F  0021               	movlb	1	; select bank1
  6009  0260  084E               	movf	___fldiv@sign^(0+128),w
  6010  0261  0020               	movlb	0	; select bank0
  6011  0262  00E0               	movwf	??___fldiv
  6012  0263  0860               	movf	??___fldiv,w
  6013  0264  04DF               	iorwf	___fldiv@b+3,f
  6014  0265  085F               	movf	___fldiv@b+3,w
  6015  0266  00DB               	movwf	?___fldiv+3
  6016  0267  085E               	movf	___fldiv@b+2,w
  6017  0268  00DA               	movwf	?___fldiv+2
  6018  0269  085D               	movf	___fldiv@b+1,w
  6019  026A  00D9               	movwf	?___fldiv+1
  6020  026B  085C               	movf	___fldiv@b,w
  6021  026C  00D8               	movwf	?___fldiv
  6022  026D  0008               	return
  6023  026E                     l3152:	
  6024  026E  0021               	movlb	1	; select bank1
  6025  026F  0855               	movf	___fldiv@bexp^(0+128),w
  6026  0270  1D03               	btfss	3,2
  6027  0271  2A7C               	goto	l3158
  6028  0272  3000               	movlw	0
  6029  0273  0020               	movlb	0	; select bank0
  6030  0274  00DB               	movwf	?___fldiv+3
  6031  0275  3000               	movlw	0
  6032  0276  00DA               	movwf	?___fldiv+2
  6033  0277  3000               	movlw	0
  6034  0278  00D9               	movwf	?___fldiv+1
  6035  0279  3000               	movlw	0
  6036  027A  00D8               	movwf	?___fldiv
  6037  027B  0008               	return
  6038  027C                     l3158:	
  6039  027C  0855               	movf	___fldiv@bexp^(0+128),w
  6040  027D  0020               	movlb	0	; select bank0
  6041  027E  00E0               	movwf	??___fldiv
  6042  027F  01E1               	clrf	??___fldiv+1
  6043  0280  0861               	movf	??___fldiv+1,w
  6044  0281  00E3               	movwf	??___fldiv+3
  6045  0282  0021               	movlb	1	; select bank1
  6046  0283  0856               	movf	___fldiv@aexp^(0+128),w
  6047  0284  0020               	movlb	0	; select bank0
  6048  0285  0260               	subwf	??___fldiv,w
  6049  0286  00E2               	movwf	??___fldiv+2
  6050  0287  1C03               	skipc
  6051  0288  03E3               	decf	??___fldiv+3,f
  6052  0289  0862               	movf	??___fldiv+2,w
  6053  028A  3E7F               	addlw	127
  6054  028B  0021               	movlb	1	; select bank1
  6055  028C  00CF               	movwf	___fldiv@new_exp^(0+128)
  6056  028D  3000               	movlw	0
  6057  028E  0020               	movlb	0	; select bank0
  6058  028F  3D63               	addwfc	??___fldiv+3,w
  6059  0290  0021               	movlb	1	; select bank1
  6060  0291  00D0               	movwf	(___fldiv@new_exp+1)^(0+128)
  6061  0292  0020               	movlb	0	; select bank0
  6062  0293  085F               	movf	___fldiv@b+3,w
  6063  0294  0021               	movlb	1	; select bank1
  6064  0295  00CD               	movwf	(___fldiv@rem+3)^(0+128)
  6065  0296  0020               	movlb	0	; select bank0
  6066  0297  085E               	movf	___fldiv@b+2,w
  6067  0298  0021               	movlb	1	; select bank1
  6068  0299  00CC               	movwf	(___fldiv@rem+2)^(0+128)
  6069  029A  0020               	movlb	0	; select bank0
  6070  029B  085D               	movf	___fldiv@b+1,w
  6071  029C  0021               	movlb	1	; select bank1
  6072  029D  00CB               	movwf	(___fldiv@rem+1)^(0+128)
  6073  029E  0020               	movlb	0	; select bank0
  6074  029F  085C               	movf	___fldiv@b,w
  6075  02A0  0021               	movlb	1	; select bank1
  6076  02A1  00CA               	movwf	___fldiv@rem^(0+128)
  6077  02A2  3000               	movlw	0
  6078  02A3  0020               	movlb	0	; select bank0
  6079  02A4  00DF               	movwf	___fldiv@b+3
  6080  02A5  3000               	movlw	0
  6081  02A6  00DE               	movwf	___fldiv@b+2
  6082  02A7  3000               	movlw	0
  6083  02A8  00DD               	movwf	___fldiv@b+1
  6084  02A9  3000               	movlw	0
  6085  02AA  00DC               	movwf	___fldiv@b
  6086  02AB  3000               	movlw	0
  6087  02AC  0021               	movlb	1	; select bank1
  6088  02AD  00D4               	movwf	(___fldiv@grs+3)^(0+128)
  6089  02AE  3000               	movlw	0
  6090  02AF  00D3               	movwf	(___fldiv@grs+2)^(0+128)
  6091  02B0  3000               	movlw	0
  6092  02B1  00D2               	movwf	(___fldiv@grs+1)^(0+128)
  6093  02B2  3000               	movlw	0
  6094  02B3  00D1               	movwf	___fldiv@grs^(0+128)
  6095  02B4  01D6               	clrf	___fldiv@aexp^(0+128)
  6096  02B5                     l3186:	
  6097  02B5  301A               	movlw	26
  6098  02B6  0256               	subwf	___fldiv@aexp^(0+128),w
  6099  02B7  1803               	btfsc	3,0
  6100  02B8  2B08               	goto	l3188
  6101  02B9  0856               	movf	___fldiv@aexp^(0+128),w
  6102  02BA  1903               	btfsc	3,2
  6103  02BB  2AD8               	goto	l3178
  6104  02BC  3001               	movlw	1
  6105  02BD                     u3675:	
  6106  02BD  35CA               	lslf	___fldiv@rem^(0+128),f
  6107  02BE  0DCB               	rlf	(___fldiv@rem+1)^(0+128),f
  6108  02BF  0DCC               	rlf	(___fldiv@rem+2)^(0+128),f
  6109  02C0  0DCD               	rlf	(___fldiv@rem+3)^(0+128),f
  6110  02C1  0B89               	decfsz	9,f
  6111  02C2  2ABD               	goto	u3675
  6112  02C3  3001               	movlw	1
  6113  02C4                     u3685:	
  6114  02C4  0020               	movlb	0	; select bank0
  6115  02C5  35DC               	lslf	___fldiv@b,f
  6116  02C6  0DDD               	rlf	___fldiv@b+1,f
  6117  02C7  0DDE               	rlf	___fldiv@b+2,f
  6118  02C8  0DDF               	rlf	___fldiv@b+3,f
  6119  02C9  0B89               	decfsz	9,f
  6120  02CA  2AC4               	goto	u3685
  6121  02CB  0021               	movlb	1	; select bank1
  6122  02CC  1FD4               	btfss	(___fldiv@grs+3)^(0+128),7
  6123  02CD  2AD0               	goto	l3176
  6124  02CE  0020               	movlb	0	; select bank0
  6125  02CF  145C               	bsf	___fldiv@b,0
  6126  02D0                     l3176:	
  6127  02D0  3001               	movlw	1
  6128  02D1                     u3705:	
  6129  02D1  0021               	movlb	1	; select bank1
  6130  02D2  35D1               	lslf	___fldiv@grs^(0+128),f
  6131  02D3  0DD2               	rlf	(___fldiv@grs+1)^(0+128),f
  6132  02D4  0DD3               	rlf	(___fldiv@grs+2)^(0+128),f
  6133  02D5  0DD4               	rlf	(___fldiv@grs+3)^(0+128),f
  6134  02D6  0B89               	decfsz	9,f
  6135  02D7  2AD1               	goto	u3705
  6136  02D8                     l3178:	
  6137  02D8  0020               	movlb	0	; select bank0
  6138  02D9  085B               	movf	___fldiv@a+3,w
  6139  02DA  0021               	movlb	1	; select bank1
  6140  02DB  024D               	subwf	(___fldiv@rem+3)^(0+128),w
  6141  02DC  1D03               	skipz
  6142  02DD  2AEE               	goto	u3715
  6143  02DE  0020               	movlb	0	; select bank0
  6144  02DF  085A               	movf	___fldiv@a+2,w
  6145  02E0  0021               	movlb	1	; select bank1
  6146  02E1  024C               	subwf	(___fldiv@rem+2)^(0+128),w
  6147  02E2  1D03               	skipz
  6148  02E3  2AEE               	goto	u3715
  6149  02E4  0020               	movlb	0	; select bank0
  6150  02E5  0859               	movf	___fldiv@a+1,w
  6151  02E6  0021               	movlb	1	; select bank1
  6152  02E7  024B               	subwf	(___fldiv@rem+1)^(0+128),w
  6153  02E8  1D03               	skipz
  6154  02E9  2AEE               	goto	u3715
  6155  02EA  0020               	movlb	0	; select bank0
  6156  02EB  0858               	movf	___fldiv@a,w
  6157  02EC  0021               	movlb	1	; select bank1
  6158  02ED  024A               	subwf	___fldiv@rem^(0+128),w
  6159  02EE                     u3715:	
  6160  02EE  1C03               	skipc
  6161  02EF  2B01               	goto	l3184
  6162  02F0  1754               	bsf	(___fldiv@grs^(0+128)+3),6
  6163  02F1  0020               	movlb	0	; select bank0
  6164  02F2  0858               	movf	___fldiv@a,w
  6165  02F3  0021               	movlb	1	; select bank1
  6166  02F4  02CA               	subwf	___fldiv@rem^(0+128),f
  6167  02F5  0020               	movlb	0	; select bank0
  6168  02F6  0859               	movf	___fldiv@a+1,w
  6169  02F7  0021               	movlb	1	; select bank1
  6170  02F8  3BCB               	subwfb	(___fldiv@rem+1)^(0+128),f
  6171  02F9  0020               	movlb	0	; select bank0
  6172  02FA  085A               	movf	___fldiv@a+2,w
  6173  02FB  0021               	movlb	1	; select bank1
  6174  02FC  3BCC               	subwfb	(___fldiv@rem+2)^(0+128),f
  6175  02FD  0020               	movlb	0	; select bank0
  6176  02FE  085B               	movf	___fldiv@a+3,w
  6177  02FF  0021               	movlb	1	; select bank1
  6178  0300  3BCD               	subwfb	(___fldiv@rem+3)^(0+128),f
  6179  0301                     l3184:	
  6180  0301  3001               	movlw	1
  6181  0302  0020               	movlb	0	; select bank0
  6182  0303  00E0               	movwf	??___fldiv
  6183  0304  0860               	movf	??___fldiv,w
  6184  0305  0021               	movlb	1	; select bank1
  6185  0306  07D6               	addwf	___fldiv@aexp^(0+128),f
  6186  0307  2AB5               	goto	l3186
  6187  0308                     l3188:	
  6188  0308  084D               	movf	(___fldiv@rem+3)^(0+128),w
  6189  0309  044C               	iorwf	(___fldiv@rem+2)^(0+128),w
  6190  030A  044B               	iorwf	(___fldiv@rem+1)^(0+128),w
  6191  030B  044A               	iorwf	___fldiv@rem^(0+128),w
  6192  030C  1D03               	btfss	3,2
  6193  030D  1451               	bsf	___fldiv@grs^(0+128),0
  6194  030E                     l3202:	
  6195  030E  0020               	movlb	0	; select bank0
  6196  030F  1BDE               	btfsc	___fldiv@b+2,7
  6197  0310  2B2A               	goto	l3204
  6198  0311  3001               	movlw	1
  6199  0312                     u3745:	
  6200  0312  35DC               	lslf	___fldiv@b,f
  6201  0313  0DDD               	rlf	___fldiv@b+1,f
  6202  0314  0DDE               	rlf	___fldiv@b+2,f
  6203  0315  0DDF               	rlf	___fldiv@b+3,f
  6204  0316  0B89               	decfsz	9,f
  6205  0317  2B12               	goto	u3745
  6206  0318  0021               	movlb	1	; select bank1
  6207  0319  1FD4               	btfss	(___fldiv@grs+3)^(0+128),7
  6208  031A  2B1D               	goto	l3198
  6209  031B  0020               	movlb	0	; select bank0
  6210  031C  145C               	bsf	___fldiv@b,0
  6211  031D                     l3198:	
  6212  031D  3001               	movlw	1
  6213  031E                     u3765:	
  6214  031E  0021               	movlb	1	; select bank1
  6215  031F  35D1               	lslf	___fldiv@grs^(0+128),f
  6216  0320  0DD2               	rlf	(___fldiv@grs+1)^(0+128),f
  6217  0321  0DD3               	rlf	(___fldiv@grs+2)^(0+128),f
  6218  0322  0DD4               	rlf	(___fldiv@grs+3)^(0+128),f
  6219  0323  0B89               	decfsz	9,f
  6220  0324  2B1E               	goto	u3765
  6221  0325  30FF               	movlw	255
  6222  0326  07CF               	addwf	___fldiv@new_exp^(0+128),f
  6223  0327  30FF               	movlw	255
  6224  0328  3DD0               	addwfc	(___fldiv@new_exp+1)^(0+128),f
  6225  0329  2B0E               	goto	l3202
  6226  032A                     l3204:	
  6227  032A  0021               	movlb	1	; select bank1
  6228  032B  01D6               	clrf	___fldiv@aexp^(0+128)
  6229  032C  1FD4               	btfss	(___fldiv@grs+3)^(0+128),7
  6230  032D  2B4C               	goto	l3214
  6231  032E  30FF               	movlw	255
  6232  032F  0551               	andwf	___fldiv@grs^(0+128),w
  6233  0330  0020               	movlb	0	; select bank0
  6234  0331  00E0               	movwf	??___fldiv
  6235  0332  30FF               	movlw	255
  6236  0333  0021               	movlb	1	; select bank1
  6237  0334  0552               	andwf	(___fldiv@grs+1)^(0+128),w
  6238  0335  0020               	movlb	0	; select bank0
  6239  0336  00E1               	movwf	??___fldiv+1
  6240  0337  30FF               	movlw	255
  6241  0338  0021               	movlb	1	; select bank1
  6242  0339  0553               	andwf	(___fldiv@grs+2)^(0+128),w
  6243  033A  0020               	movlb	0	; select bank0
  6244  033B  00E2               	movwf	??___fldiv+2
  6245  033C  307F               	movlw	127
  6246  033D  0021               	movlb	1	; select bank1
  6247  033E  0554               	andwf	(___fldiv@grs+3)^(0+128),w
  6248  033F  0020               	movlb	0	; select bank0
  6249  0340  00E3               	movwf	??___fldiv+3
  6250  0341  0863               	movf	??___fldiv+3,w
  6251  0342  0462               	iorwf	??___fldiv+2,w
  6252  0343  0461               	iorwf	??___fldiv+1,w
  6253  0344  0460               	iorwf	??___fldiv,w
  6254  0345  1903               	skipnz
  6255  0346  185C               	btfsc	___fldiv@b,0
  6256  0347  2B49               	goto	l3210
  6257  0348  2B4C               	goto	l3214
  6258  0349                     l3210:	
  6259  0349  0021               	movlb	1	; select bank1
  6260  034A  01D6               	clrf	___fldiv@aexp^(0+128)
  6261  034B  0AD6               	incf	___fldiv@aexp^(0+128),f
  6262  034C                     l3214:	
  6263  034C  0021               	movlb	1	; select bank1
  6264  034D  0856               	movf	___fldiv@aexp^(0+128),w
  6265  034E  1903               	btfsc	3,2
  6266  034F  2B78               	goto	l3224
  6267  0350  3001               	movlw	1
  6268  0351  0020               	movlb	0	; select bank0
  6269  0352  07DC               	addwf	___fldiv@b,f
  6270  0353  3000               	movlw	0
  6271  0354  3DDD               	addwfc	___fldiv@b+1,f
  6272  0355  3000               	movlw	0
  6273  0356  3DDE               	addwfc	___fldiv@b+2,f
  6274  0357  3000               	movlw	0
  6275  0358  3DDF               	addwfc	___fldiv@b+3,f
  6276  0359  1C5F               	btfss	___fldiv@b+3,0
  6277  035A  2B78               	goto	l3224
  6278  035B  085C               	movf	___fldiv@b,w
  6279  035C  00E0               	movwf	??___fldiv
  6280  035D  085D               	movf	___fldiv@b+1,w
  6281  035E  00E1               	movwf	??___fldiv+1
  6282  035F  085E               	movf	___fldiv@b+2,w
  6283  0360  00E2               	movwf	??___fldiv+2
  6284  0361  085F               	movf	___fldiv@b+3,w
  6285  0362  00E3               	movwf	??___fldiv+3
  6286  0363  3001               	movlw	1
  6287  0364  00E4               	movwf	??___fldiv+4
  6288  0365                     u3835:	
  6289  0365  37E3               	asrf	??___fldiv+3,f
  6290  0366  0CE2               	rrf	??___fldiv+2,f
  6291  0367  0CE1               	rrf	??___fldiv+1,f
  6292  0368  0CE0               	rrf	??___fldiv,f
  6293  0369  0BE4               	decfsz	??___fldiv+4,f
  6294  036A  2B65               	goto	u3835
  6295  036B  0863               	movf	??___fldiv+3,w
  6296  036C  00DF               	movwf	___fldiv@b+3
  6297  036D  0862               	movf	??___fldiv+2,w
  6298  036E  00DE               	movwf	___fldiv@b+2
  6299  036F  0861               	movf	??___fldiv+1,w
  6300  0370  00DD               	movwf	___fldiv@b+1
  6301  0371  0860               	movf	??___fldiv,w
  6302  0372  00DC               	movwf	___fldiv@b
  6303  0373  3001               	movlw	1
  6304  0374  0021               	movlb	1	; select bank1
  6305  0375  07CF               	addwf	___fldiv@new_exp^(0+128),f
  6306  0376  3000               	movlw	0
  6307  0377  3DD0               	addwfc	(___fldiv@new_exp+1)^(0+128),f
  6308  0378                     l3224:	
  6309  0378  0021               	movlb	1	; select bank1
  6310  0379  0850               	movf	(___fldiv@new_exp+1)^(0+128),w
  6311  037A  3A80               	xorlw	128
  6312  037B  0020               	movlb	0	; select bank0
  6313  037C  00E0               	movwf	??___fldiv
  6314  037D  3080               	movlw	128
  6315  037E  0260               	subwf	??___fldiv,w
  6316  037F  1D03               	skipz
  6317  0380  2B84               	goto	u3845
  6318  0381  30FF               	movlw	255
  6319  0382  0021               	movlb	1	; select bank1
  6320  0383  024F               	subwf	___fldiv@new_exp^(0+128),w
  6321  0384                     u3845:	
  6322  0384  1C03               	skipc
  6323  0385  2B94               	goto	l913
  6324  0386  30FF               	movlw	255
  6325  0387  0021               	movlb	1	; select bank1
  6326  0388  00CF               	movwf	___fldiv@new_exp^(0+128)
  6327  0389  3000               	movlw	0
  6328  038A  00D0               	movwf	(___fldiv@new_exp^(0+128)+1)
  6329  038B  3000               	movlw	0
  6330  038C  0020               	movlb	0	; select bank0
  6331  038D  00DF               	movwf	___fldiv@b+3
  6332  038E  3000               	movlw	0
  6333  038F  00DE               	movwf	___fldiv@b+2
  6334  0390  3000               	movlw	0
  6335  0391  00DD               	movwf	___fldiv@b+1
  6336  0392  3000               	movlw	0
  6337  0393  00DC               	movwf	___fldiv@b
  6338  0394                     l913:	
  6339  0394  0021               	movlb	1	; select bank1
  6340  0395  0850               	movf	(___fldiv@new_exp+1)^(0+128),w
  6341  0396  3A80               	xorlw	128
  6342  0397  0020               	movlb	0	; select bank0
  6343  0398  00E0               	movwf	??___fldiv
  6344  0399  3080               	movlw	128
  6345  039A  0260               	subwf	??___fldiv,w
  6346  039B  1D03               	skipz
  6347  039C  2BA0               	goto	u3855
  6348  039D  3001               	movlw	1
  6349  039E  0021               	movlb	1	; select bank1
  6350  039F  024F               	subwf	___fldiv@new_exp^(0+128),w
  6351  03A0                     u3855:	
  6352  03A0  1803               	skipnc
  6353  03A1  2BB0               	goto	l914
  6354  03A2  0021               	movlb	1	; select bank1
  6355  03A3  01CF               	clrf	___fldiv@new_exp^(0+128)
  6356  03A4  01D0               	clrf	(___fldiv@new_exp+1)^(0+128)
  6357  03A5  3000               	movlw	0
  6358  03A6  0020               	movlb	0	; select bank0
  6359  03A7  00DF               	movwf	___fldiv@b+3
  6360  03A8  3000               	movlw	0
  6361  03A9  00DE               	movwf	___fldiv@b+2
  6362  03AA  3000               	movlw	0
  6363  03AB  00DD               	movwf	___fldiv@b+1
  6364  03AC  3000               	movlw	0
  6365  03AD  00DC               	movwf	___fldiv@b
  6366  03AE  0021               	movlb	1	; select bank1
  6367  03AF  01CE               	clrf	___fldiv@sign^(0+128)
  6368  03B0                     l914:	
  6369  03B0  0021               	movlb	1	; select bank1
  6370  03B1  084F               	movf	___fldiv@new_exp^(0+128),w
  6371  03B2  0020               	movlb	0	; select bank0
  6372  03B3  00E0               	movwf	??___fldiv
  6373  03B4  0860               	movf	??___fldiv,w
  6374  03B5  0021               	movlb	1	; select bank1
  6375  03B6  00D5               	movwf	___fldiv@bexp^(0+128)
  6376  03B7  1C55               	btfss	___fldiv@bexp^(0+128),0
  6377  03B8  2BBC               	goto	l3238
  6378  03B9  0020               	movlb	0	; select bank0
  6379  03BA  17DE               	bsf	___fldiv@b+2,7
  6380  03BB  2BC1               	goto	l916
  6381  03BC                     l3238:	
  6382  03BC  307F               	movlw	127
  6383  03BD  0020               	movlb	0	; select bank0
  6384  03BE  00E0               	movwf	??___fldiv
  6385  03BF  0860               	movf	??___fldiv,w
  6386  03C0  05DE               	andwf	___fldiv@b+2,f
  6387  03C1                     l916:	
  6388  03C1  0021               	movlb	1	; select bank1
  6389  03C2  3655               	lsrf	___fldiv@bexp^(0+128),w
  6390  03C3  0020               	movlb	0	; select bank0
  6391  03C4  00E0               	movwf	??___fldiv
  6392  03C5  0860               	movf	??___fldiv,w
  6393  03C6  00DF               	movwf	___fldiv@b+3
  6394  03C7  2A5F               	goto	L1
  6395  03C8                     __end_of___fldiv:	
  6396                           
  6397                           	psect	text8
  6398  15F6                     __ptext8:	
  6399 ;; *************** function _print_data *****************
  6400 ;; Defined at:
  6401 ;;		line 405 in file "main.c"
  6402 ;; Parameters:    Size  Location     Type
  6403 ;;		None
  6404 ;; Auto vars:     Size  Location     Type
  6405 ;;		None
  6406 ;; Return value:  Size  Location     Type
  6407 ;;                  1    wreg      void 
  6408 ;; Registers used:
  6409 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6410 ;; Tracked objects:
  6411 ;;		On entry : 0/0
  6412 ;;		On exit  : 0/0
  6413 ;;		Unchanged: 0/0
  6414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6417 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6418 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6419 ;;Total ram usage:        1 bytes
  6420 ;; Hardware stack levels used:    1
  6421 ;; Hardware stack levels required when called:    4
  6422 ;; This function calls:
  6423 ;;		_OLED_Write_Float
  6424 ;;		_OLED_Write_String
  6425 ;;		_OLED_YX
  6426 ;; This function is called by:
  6427 ;;		_main
  6428 ;; This function uses a non-reentrant model
  6429 ;;
  6430                           
  6431                           
  6432                           ;psect for function _print_data
  6433  15F6                     _print_data:	
  6434                           
  6435                           ;main.c: 408: OLED_YX(0, 0 );
  6436                           
  6437                           ;incstack = 0
  6438                           ; Regs used in _print_data: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6439  15F6  01F5               	clrf	OLED_YX@Column
  6440  15F7  3000               	movlw	0
  6441  15F8  3191  212F  3195   	fcall	_OLED_YX
  6442                           
  6443                           ;main.c: 409: OLED_Write_String( "Sol:" );
  6444  15FB  3033               	movlw	low (STR_1| (0+32768))
  6445  15FC  00FC               	movwf	OLED_Write_String@s
  6446  15FD  3098               	movlw	high (STR_1| (0+32768))
  6447  15FE  00FD               	movwf	OLED_Write_String@s+1
  6448  15FF  3190  208B  3195   	fcall	_OLED_Write_String
  6449                           
  6450                           ;main.c: 410: OLED_YX(0, 6);
  6451  1602  3006               	movlw	6
  6452  1603  0020               	movlb	0	; select bank0
  6453  1604  00EF               	movwf	??_print_data
  6454  1605  086F               	movf	??_print_data,w
  6455  1606  00F5               	movwf	OLED_YX@Column
  6456  1607  3000               	movlw	0
  6457  1608  3191  212F  3195   	fcall	_OLED_YX
  6458                           
  6459                           ;main.c: 411: OLED_Write_Float(*panel_volt);
  6460  160B  0021               	movlb	1	; select bank1
  6461  160C  0843               	movf	(_panel_v+3)^(0+128),w
  6462  160D  0020               	movlb	0	; select bank0
  6463  160E  00EC               	movwf	OLED_Write_Float@f+3
  6464  160F  0021               	movlb	1	; select bank1
  6465  1610  0842               	movf	(_panel_v+2)^(0+128),w
  6466  1611  0020               	movlb	0	; select bank0
  6467  1612  00EB               	movwf	OLED_Write_Float@f+2
  6468  1613  0021               	movlb	1	; select bank1
  6469  1614  0841               	movf	(_panel_v+1)^(0+128),w
  6470  1615  0020               	movlb	0	; select bank0
  6471  1616  00EA               	movwf	OLED_Write_Float@f+1
  6472  1617  0021               	movlb	1	; select bank1
  6473  1618  0840               	movf	_panel_v^(0+128),w
  6474  1619  0020               	movlb	0	; select bank0
  6475  161A  00E9               	movwf	OLED_Write_Float@f
  6476  161B  3180  2005  3195   	fcall	_OLED_Write_Float
  6477                           
  6478                           ;main.c: 414: OLED_YX(1, 0 );
  6479  161E  01F5               	clrf	OLED_YX@Column
  6480  161F  3001               	movlw	1
  6481  1620  3191  212F  3195   	fcall	_OLED_YX
  6482                           
  6483                           ;main.c: 415: OLED_Write_String( "Bat:" );
  6484  1623  303D               	movlw	low (STR_2| (0+32768))
  6485  1624  00FC               	movwf	OLED_Write_String@s
  6486  1625  3098               	movlw	high (STR_2| (0+32768))
  6487  1626  00FD               	movwf	OLED_Write_String@s+1
  6488  1627  3190  208B  3195   	fcall	_OLED_Write_String
  6489                           
  6490                           ;main.c: 416: OLED_YX(1, 6);
  6491  162A  3006               	movlw	6
  6492  162B  0020               	movlb	0	; select bank0
  6493  162C  00EF               	movwf	??_print_data
  6494  162D  086F               	movf	??_print_data,w
  6495  162E  00F5               	movwf	OLED_YX@Column
  6496  162F  3001               	movlw	1
  6497  1630  3191  212F  3195   	fcall	_OLED_YX
  6498                           
  6499                           ;main.c: 417: OLED_Write_Float(*bat_volt);
  6500  1633  0021               	movlb	1	; select bank1
  6501  1634  0847               	movf	(_bat_v+3)^(0+128),w
  6502  1635  0020               	movlb	0	; select bank0
  6503  1636  00EC               	movwf	OLED_Write_Float@f+3
  6504  1637  0021               	movlb	1	; select bank1
  6505  1638  0846               	movf	(_bat_v+2)^(0+128),w
  6506  1639  0020               	movlb	0	; select bank0
  6507  163A  00EB               	movwf	OLED_Write_Float@f+2
  6508  163B  0021               	movlb	1	; select bank1
  6509  163C  0845               	movf	(_bat_v+1)^(0+128),w
  6510  163D  0020               	movlb	0	; select bank0
  6511  163E  00EA               	movwf	OLED_Write_Float@f+1
  6512  163F  0021               	movlb	1	; select bank1
  6513  1640  0844               	movf	_bat_v^(0+128),w
  6514  1641  0020               	movlb	0	; select bank0
  6515  1642  00E9               	movwf	OLED_Write_Float@f
  6516  1643  3180  2005  3195   	fcall	_OLED_Write_Float
  6517                           
  6518                           ;main.c: 420: OLED_YX(2, 0 );
  6519  1646  01F5               	clrf	OLED_YX@Column
  6520  1647  3002               	movlw	2
  6521  1648  3191  212F  3195   	fcall	_OLED_YX
  6522                           
  6523                           ;main.c: 421: OLED_Write_String( "Cur:" );
  6524  164B  3038               	movlw	low (STR_3| (0+32768))
  6525  164C  00FC               	movwf	OLED_Write_String@s
  6526  164D  3098               	movlw	high (STR_3| (0+32768))
  6527  164E  00FD               	movwf	OLED_Write_String@s+1
  6528  164F  3190  208B  3195   	fcall	_OLED_Write_String
  6529                           
  6530                           ;main.c: 422: OLED_YX(2, 6);
  6531  1652  3006               	movlw	6
  6532  1653  0020               	movlb	0	; select bank0
  6533  1654  00EF               	movwf	??_print_data
  6534  1655  086F               	movf	??_print_data,w
  6535  1656  00F5               	movwf	OLED_YX@Column
  6536  1657  3002               	movlw	2
  6537  1658  3191  212F  3195   	fcall	_OLED_YX
  6538                           
  6539                           ;main.c: 423: OLED_Write_Float(Current);
  6540  165B  0021               	movlb	1	; select bank1
  6541  165C  083B               	movf	(_Current+3)^(0+128),w
  6542  165D  0020               	movlb	0	; select bank0
  6543  165E  00EC               	movwf	OLED_Write_Float@f+3
  6544  165F  0021               	movlb	1	; select bank1
  6545  1660  083A               	movf	(_Current+2)^(0+128),w
  6546  1661  0020               	movlb	0	; select bank0
  6547  1662  00EB               	movwf	OLED_Write_Float@f+2
  6548  1663  0021               	movlb	1	; select bank1
  6549  1664  0839               	movf	(_Current+1)^(0+128),w
  6550  1665  0020               	movlb	0	; select bank0
  6551  1666  00EA               	movwf	OLED_Write_Float@f+1
  6552  1667  0021               	movlb	1	; select bank1
  6553  1668  0838               	movf	_Current^(0+128),w
  6554  1669  0020               	movlb	0	; select bank0
  6555  166A  00E9               	movwf	OLED_Write_Float@f
  6556  166B  3180  2005  3195   	fcall	_OLED_Write_Float
  6557                           
  6558                           ;main.c: 426: OLED_YX(3, 0 );
  6559  166E  01F5               	clrf	OLED_YX@Column
  6560  166F  3003               	movlw	3
  6561  1670  3191  212F  3195   	fcall	_OLED_YX
  6562                           
  6563                           ;main.c: 427: OLED_Write_String( "Sta:" );
  6564  1673  302E               	movlw	low (STR_4| (0+32768))
  6565  1674  00FC               	movwf	OLED_Write_String@s
  6566  1675  3098               	movlw	high (STR_4| (0+32768))
  6567  1676  00FD               	movwf	OLED_Write_String@s+1
  6568  1677  3190  208B  3195   	fcall	_OLED_Write_String
  6569                           
  6570                           ;main.c: 430: if (charge_status == 0)
  6571  167A  3006               	movlw	6
  6572  167B  0020               	movlb	0	; select bank0
  6573  167C  00EF               	movwf	??_print_data
  6574  167D  086F               	movf	??_print_data,w
  6575  167E  00F5               	movwf	OLED_YX@Column
  6576  167F  3003               	movlw	3
  6577  1680  3191  212F  3195   	fcall	_OLED_YX
  6578                           
  6579                           ;main.c: 431: {;main.c: 432: OLED_Write_String("Off");
  6580  1683  3042               	movlw	low (STR_5| (0+32768))
  6581  1684  00FC               	movwf	OLED_Write_String@s
  6582  1685  3098               	movlw	high (STR_5| (0+32768))
  6583  1686  00FD               	movwf	OLED_Write_String@s+1
  6584  1687  3190  208B         	fcall	_OLED_Write_String
  6585                           
  6586                           ;main.c: 433: }
  6587  1689  0008               	return
  6588  168A                     __end_of_print_data:	
  6589                           
  6590                           	psect	text9
  6591  0005                     __ptext9:	
  6592 ;; *************** function _OLED_Write_Float *****************
  6593 ;; Defined at:
  6594 ;;		line 317 in file "oled.c"
  6595 ;; Parameters:    Size  Location     Type
  6596 ;;  f               4   73[BANK0 ] float 
  6597 ;; Auto vars:     Size  Location     Type
  6598 ;;  status          2    9[BANK1 ] int 
  6599 ;;  buf11           1   11[BANK1 ] PTR unsigned char 
  6600 ;;		 -> ftoa@buf(17), 
  6601 ;; Return value:  Size  Location     Type
  6602 ;;                  1    wreg      void 
  6603 ;; Registers used:
  6604 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6605 ;; Tracked objects:
  6606 ;;		On entry : 0/0
  6607 ;;		On exit  : 0/0
  6608 ;;		Unchanged: 0/0
  6609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6610 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6611 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6612 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6613 ;;      Totals:         0       6       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6614 ;;Total ram usage:        9 bytes
  6615 ;; Hardware stack levels used:    1
  6616 ;; Hardware stack levels required when called:    3
  6617 ;; This function calls:
  6618 ;;		_OLED_Write_String
  6619 ;;		_ftoa
  6620 ;; This function is called by:
  6621 ;;		_print_data
  6622 ;; This function uses a non-reentrant model
  6623 ;;
  6624                           
  6625                           
  6626                           ;psect for function _OLED_Write_Float
  6627  0005                     _OLED_Write_Float:	
  6628                           
  6629                           ;oled.c: 319: char* buf11;;oled.c: 320: int status;;oled.c: 322: buf11 = ftoa(f, &status
      +                          );
  6630                           
  6631                           ;incstack = 0
  6632                           ; Regs used in _OLED_Write_Float: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6633  0005  0020               	movlb	0	; select bank0
  6634  0006  086C               	movf	OLED_Write_Float@f+3,w
  6635  0007  00E6               	movwf	ftoa@f+3
  6636  0008  086B               	movf	OLED_Write_Float@f+2,w
  6637  0009  00E5               	movwf	ftoa@f+2
  6638  000A  086A               	movf	OLED_Write_Float@f+1,w
  6639  000B  00E4               	movwf	ftoa@f+1
  6640  000C  0869               	movf	OLED_Write_Float@f,w
  6641  000D  00E3               	movwf	ftoa@f
  6642  000E  30D3               	movlw	(low (OLED_Write_Float@status| 0))& (0+255)
  6643  000F  00ED               	movwf	??_OLED_Write_Float
  6644  0010  086D               	movf	??_OLED_Write_Float,w
  6645  0011  00E7               	movwf	ftoa@status
  6646  0012  3197  2720  3180   	fcall	_ftoa
  6647  0015  0020               	movlb	0	; select bank0
  6648  0016  00EE               	movwf	??_OLED_Write_Float+1
  6649  0017  086E               	movf	??_OLED_Write_Float+1,w
  6650  0018  0021               	movlb	1	; select bank1
  6651  0019  00D5               	movwf	OLED_Write_Float@buf11^(0+128)
  6652                           
  6653                           ;oled.c: 324: OLED_Write_String(buf11);
  6654  001A  0855               	movf	OLED_Write_Float@buf11^(0+128),w
  6655  001B  00FC               	movwf	OLED_Write_String@s
  6656  001C  3001               	movlw	1
  6657  001D  00FD               	movwf	OLED_Write_String@s+1
  6658  001E  3190  208B  3180   	fcall	_OLED_Write_String
  6659                           
  6660                           ;oled.c: 325: OLED_Write_String( "     " );
  6661  0021  3028               	movlw	low (STR_8| (0+32768))
  6662  0022  00FC               	movwf	OLED_Write_String@s
  6663  0023  3098               	movlw	high (STR_8| (0+32768))
  6664  0024  00FD               	movwf	OLED_Write_String@s+1
  6665  0025  3190  208B         	fcall	_OLED_Write_String
  6666  0027  0008               	return
  6667  0028                     __end_of_OLED_Write_Float:	
  6668                           
  6669                           	psect	text10
  6670  1720                     __ptext10:	
  6671 ;; *************** function _ftoa *****************
  6672 ;; Defined at:
  6673 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\ftoa.c"
  6674 ;; Parameters:    Size  Location     Type
  6675 ;;  f               4   67[BANK0 ] float 
  6676 ;;  status          1   71[BANK0 ] PTR int 
  6677 ;;		 -> OLED_Write_Float@status(2), 
  6678 ;; Auto vars:     Size  Location     Type
  6679 ;;  l               4    4[BANK1 ] unsigned long 
  6680 ;;  rem             4    0[BANK1 ] unsigned long 
  6681 ;;  cp              1    8[BANK1 ] PTR unsigned char 
  6682 ;;		 -> ftoa@buf(17), 
  6683 ;; Return value:  Size  Location     Type
  6684 ;;                  1    wreg      PTR unsigned char 
  6685 ;; Registers used:
  6686 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6687 ;; Tracked objects:
  6688 ;;		On entry : 0/0
  6689 ;;		On exit  : 0/0
  6690 ;;		Unchanged: 0/0
  6691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6692 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6693 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6694 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6695 ;;      Totals:         0       6       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6696 ;;Total ram usage:       15 bytes
  6697 ;; Hardware stack levels used:    1
  6698 ;; Hardware stack levels required when called:    2
  6699 ;; This function calls:
  6700 ;;		___flge
  6701 ;;		___flmul
  6702 ;;		___flneg
  6703 ;;		___flsub
  6704 ;;		___fltol
  6705 ;;		___xxtofl
  6706 ;;		_sprintf
  6707 ;; This function is called by:
  6708 ;;		_OLED_Write_Float
  6709 ;; This function uses a non-reentrant model
  6710 ;;
  6711                           
  6712                           
  6713                           ;psect for function _ftoa
  6714  1720                     _ftoa:	
  6715                           
  6716                           ;incstack = 0
  6717                           ; Regs used in _ftoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6718  1720  303C               	movlw	(low (ftoa@buf| (0+256)))& (0+255)
  6719  1721  0020               	movlb	0	; select bank0
  6720  1722  00E8               	movwf	??_ftoa
  6721  1723  0868               	movf	??_ftoa,w
  6722  1724  0021               	movlb	1	; select bank1
  6723  1725  00D2               	movwf	ftoa@cp^(0+128)
  6724  1726  0020               	movlb	0	; select bank0
  6725  1727  0866               	movf	ftoa@f+3,w
  6726  1728  00F3               	movwf	___flge@ff1+3
  6727  1729  0865               	movf	ftoa@f+2,w
  6728  172A  00F2               	movwf	___flge@ff1+2
  6729  172B  0864               	movf	ftoa@f+1,w
  6730  172C  00F1               	movwf	___flge@ff1+1
  6731  172D  0863               	movf	ftoa@f,w
  6732  172E  00F0               	movwf	___flge@ff1
  6733  172F  3000               	movlw	0
  6734  1730  00F7               	movwf	___flge@ff2+3
  6735  1731  3000               	movlw	0
  6736  1732  00F6               	movwf	___flge@ff2+2
  6737  1733  3000               	movlw	0
  6738  1734  00F5               	movwf	___flge@ff2+1
  6739  1735  3000               	movlw	0
  6740  1736  00F4               	movwf	___flge@ff2
  6741  1737  3194  24F0  3197   	fcall	___flge
  6742  173A  1803               	btfsc	3,0
  6743  173B  2F61               	goto	l3092
  6744  173C  302D               	movlw	45
  6745  173D  0020               	movlb	0	; select bank0
  6746  173E  00E8               	movwf	??_ftoa
  6747  173F  0021               	movlb	1	; select bank1
  6748  1740  0852               	movf	ftoa@cp^(0+128),w
  6749  1741  0086               	movwf	6
  6750  1742  3001               	movlw	1	; select bank2/3
  6751  1743  0087               	movwf	7
  6752  1744  0020               	movlb	0	; select bank0
  6753  1745  0868               	movf	??_ftoa,w
  6754  1746  0081               	movwf	1
  6755  1747  3001               	movlw	1
  6756  1748  00E8               	movwf	??_ftoa
  6757  1749  0868               	movf	??_ftoa,w
  6758  174A  0021               	movlb	1	; select bank1
  6759  174B  07D2               	addwf	ftoa@cp^(0+128),f
  6760  174C  0020               	movlb	0	; select bank0
  6761  174D  0866               	movf	ftoa@f+3,w
  6762  174E  00F3               	movwf	___flneg@f1+3
  6763  174F  0865               	movf	ftoa@f+2,w
  6764  1750  00F2               	movwf	___flneg@f1+2
  6765  1751  0864               	movf	ftoa@f+1,w
  6766  1752  00F1               	movwf	___flneg@f1+1
  6767  1753  0863               	movf	ftoa@f,w
  6768  1754  00F0               	movwf	___flneg@f1
  6769  1755  3190  203C  3197   	fcall	___flneg
  6770  1758  0873               	movf	?___flneg+3,w
  6771  1759  0020               	movlb	0	; select bank0
  6772  175A  00E6               	movwf	ftoa@f+3
  6773  175B  0872               	movf	?___flneg+2,w
  6774  175C  00E5               	movwf	ftoa@f+2
  6775  175D  0871               	movf	?___flneg+1,w
  6776  175E  00E4               	movwf	ftoa@f+1
  6777  175F  0870               	movf	?___flneg,w
  6778  1760  00E3               	movwf	ftoa@f
  6779  1761                     l3092:	
  6780  1761  0020               	movlb	0	; select bank0
  6781  1762  0866               	movf	ftoa@f+3,w
  6782  1763  00DB               	movwf	___fltol@f1+3
  6783  1764  0865               	movf	ftoa@f+2,w
  6784  1765  00DA               	movwf	___fltol@f1+2
  6785  1766  0864               	movf	ftoa@f+1,w
  6786  1767  00D9               	movwf	___fltol@f1+1
  6787  1768  0863               	movf	ftoa@f,w
  6788  1769  00D8               	movwf	___fltol@f1
  6789  176A  3193  23BA  3197   	fcall	___fltol
  6790  176D  0020               	movlb	0	; select bank0
  6791  176E  085B               	movf	?___fltol+3,w
  6792  176F  0021               	movlb	1	; select bank1
  6793  1770  00D1               	movwf	(ftoa@l+3)^(0+128)
  6794  1771  0020               	movlb	0	; select bank0
  6795  1772  085A               	movf	?___fltol+2,w
  6796  1773  0021               	movlb	1	; select bank1
  6797  1774  00D0               	movwf	(ftoa@l+2)^(0+128)
  6798  1775  0020               	movlb	0	; select bank0
  6799  1776  0859               	movf	?___fltol+1,w
  6800  1777  0021               	movlb	1	; select bank1
  6801  1778  00CF               	movwf	(ftoa@l+1)^(0+128)
  6802  1779  0020               	movlb	0	; select bank0
  6803  177A  0858               	movf	?___fltol,w
  6804  177B  0021               	movlb	1	; select bank1
  6805  177C  00CE               	movwf	ftoa@l^(0+128)
  6806  177D  0851               	movf	(ftoa@l+3)^(0+128),w
  6807  177E  00FC               	movwf	___xxtofl@val+3
  6808  177F  0850               	movf	(ftoa@l+2)^(0+128),w
  6809  1780  00FB               	movwf	___xxtofl@val+2
  6810  1781  084F               	movf	(ftoa@l+1)^(0+128),w
  6811  1782  00FA               	movwf	___xxtofl@val+1
  6812  1783  084E               	movf	ftoa@l^(0+128),w
  6813  1784  00F9               	movwf	___xxtofl@val
  6814  1785  3000               	movlw	0
  6815  1786  3196  268A  3197   	fcall	___xxtofl
  6816  1789  087C               	movf	?___xxtofl+3,w
  6817  178A  0020               	movlb	0	; select bank0
  6818  178B  00DB               	movwf	___flsub@a+3
  6819  178C  087B               	movf	?___xxtofl+2,w
  6820  178D  00DA               	movwf	___flsub@a+2
  6821  178E  087A               	movf	?___xxtofl+1,w
  6822  178F  00D9               	movwf	___flsub@a+1
  6823  1790  0879               	movf	?___xxtofl,w
  6824  1791  00D8               	movwf	___flsub@a
  6825  1792  0866               	movf	ftoa@f+3,w
  6826  1793  00DF               	movwf	___flsub@b+3
  6827  1794  0865               	movf	ftoa@f+2,w
  6828  1795  00DE               	movwf	___flsub@b+2
  6829  1796  0864               	movf	ftoa@f+1,w
  6830  1797  00DD               	movwf	___flsub@b+1
  6831  1798  0863               	movf	ftoa@f,w
  6832  1799  00DC               	movwf	___flsub@b
  6833  179A  3191  2110  3197   	fcall	___flsub
  6834  179D  0020               	movlb	0	; select bank0
  6835  179E  085B               	movf	?___flsub+3,w
  6836  179F  00E6               	movwf	ftoa@f+3
  6837  17A0  085A               	movf	?___flsub+2,w
  6838  17A1  00E5               	movwf	ftoa@f+2
  6839  17A2  0859               	movf	?___flsub+1,w
  6840  17A3  00E4               	movwf	ftoa@f+1
  6841  17A4  0858               	movf	?___flsub,w
  6842  17A5  00E3               	movwf	ftoa@f
  6843  17A6  0866               	movf	ftoa@f+3,w
  6844  17A7  00B1               	movwf	___flmul@a+3
  6845  17A8  0865               	movf	ftoa@f+2,w
  6846  17A9  00B0               	movwf	___flmul@a+2
  6847  17AA  0864               	movf	ftoa@f+1,w
  6848  17AB  00AF               	movwf	___flmul@a+1
  6849  17AC  0863               	movf	ftoa@f,w
  6850  17AD  00AE               	movwf	___flmul@a
  6851  17AE  3049               	movlw	73
  6852  17AF  00AD               	movwf	___flmul@b+3
  6853  17B0  3074               	movlw	116
  6854  17B1  00AC               	movwf	___flmul@b+2
  6855  17B2  3024               	movlw	36
  6856  17B3  00AB               	movwf	___flmul@b+1
  6857  17B4  3000               	movlw	0
  6858  17B5  00AA               	movwf	___flmul@b
  6859  17B6  3185  25AA  3197   	fcall	___flmul
  6860  17B9  0020               	movlb	0	; select bank0
  6861  17BA  082D               	movf	?___flmul+3,w
  6862  17BB  00DB               	movwf	___fltol@f1+3
  6863  17BC  082C               	movf	?___flmul+2,w
  6864  17BD  00DA               	movwf	___fltol@f1+2
  6865  17BE  082B               	movf	?___flmul+1,w
  6866  17BF  00D9               	movwf	___fltol@f1+1
  6867  17C0  082A               	movf	?___flmul,w
  6868  17C1  00D8               	movwf	___fltol@f1
  6869  17C2  3193  23BA  3197   	fcall	___fltol
  6870  17C5  0020               	movlb	0	; select bank0
  6871  17C6  085B               	movf	?___fltol+3,w
  6872  17C7  0021               	movlb	1	; select bank1
  6873  17C8  00CD               	movwf	(ftoa@rem+3)^(0+128)
  6874  17C9  0020               	movlb	0	; select bank0
  6875  17CA  085A               	movf	?___fltol+2,w
  6876  17CB  0021               	movlb	1	; select bank1
  6877  17CC  00CC               	movwf	(ftoa@rem+2)^(0+128)
  6878  17CD  0020               	movlb	0	; select bank0
  6879  17CE  0859               	movf	?___fltol+1,w
  6880  17CF  0021               	movlb	1	; select bank1
  6881  17D0  00CB               	movwf	(ftoa@rem+1)^(0+128)
  6882  17D1  0020               	movlb	0	; select bank0
  6883  17D2  0858               	movf	?___fltol,w
  6884  17D3  0021               	movlb	1	; select bank1
  6885  17D4  00CA               	movwf	ftoa@rem^(0+128)
  6886  17D5  3000               	movlw	low (STR_10| (0+32768))
  6887  17D6  0020               	movlb	0	; select bank0
  6888  17D7  00AA               	movwf	sprintf@f
  6889  17D8  308B               	movlw	high (STR_10| (0+32768))
  6890  17D9  00AB               	movwf	sprintf@f+1
  6891  17DA  0021               	movlb	1	; select bank1
  6892  17DB  0851               	movf	(ftoa@l+3)^(0+128),w
  6893  17DC  0020               	movlb	0	; select bank0
  6894  17DD  00AF               	movwf	?_sprintf+5
  6895  17DE  0021               	movlb	1	; select bank1
  6896  17DF  0850               	movf	(ftoa@l+2)^(0+128),w
  6897  17E0  0020               	movlb	0	; select bank0
  6898  17E1  00AE               	movwf	?_sprintf+4
  6899  17E2  0021               	movlb	1	; select bank1
  6900  17E3  084F               	movf	(ftoa@l+1)^(0+128),w
  6901  17E4  0020               	movlb	0	; select bank0
  6902  17E5  00AD               	movwf	?_sprintf+3
  6903  17E6  0021               	movlb	1	; select bank1
  6904  17E7  084E               	movf	ftoa@l^(0+128),w
  6905  17E8  0020               	movlb	0	; select bank0
  6906  17E9  00AC               	movwf	?_sprintf+2
  6907  17EA  0021               	movlb	1	; select bank1
  6908  17EB  084D               	movf	(ftoa@rem+3)^(0+128),w
  6909  17EC  0020               	movlb	0	; select bank0
  6910  17ED  00B3               	movwf	?_sprintf+9
  6911  17EE  0021               	movlb	1	; select bank1
  6912  17EF  084C               	movf	(ftoa@rem+2)^(0+128),w
  6913  17F0  0020               	movlb	0	; select bank0
  6914  17F1  00B2               	movwf	?_sprintf+8
  6915  17F2  0021               	movlb	1	; select bank1
  6916  17F3  084B               	movf	(ftoa@rem+1)^(0+128),w
  6917  17F4  0020               	movlb	0	; select bank0
  6918  17F5  00B1               	movwf	?_sprintf+7
  6919  17F6  0021               	movlb	1	; select bank1
  6920  17F7  084A               	movf	ftoa@rem^(0+128),w
  6921  17F8  0020               	movlb	0	; select bank0
  6922  17F9  00B0               	movwf	?_sprintf+6
  6923  17FA  0021               	movlb	1	; select bank1
  6924  17FB  0852               	movf	ftoa@cp^(0+128),w
  6925  17FC  3180  2028         	fcall	_sprintf
  6926  17FE  303C               	movlw	(low (ftoa@buf| (0+256)))& (0+255)
  6927  17FF  0008               	return
  6928  1800                     __end_of_ftoa:	
  6929                           
  6930                           	psect	text11
  6931  0028                     __ptext11:	
  6932 ;; *************** function _sprintf *****************
  6933 ;; Defined at:
  6934 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  6935 ;; Parameters:    Size  Location     Type
  6936 ;;  sp              1    wreg     PTR unsigned char 
  6937 ;;		 -> ftoa@buf(17), 
  6938 ;;  f               2   10[BANK0 ] PTR const unsigned char 
  6939 ;;		 -> STR_10(11), 
  6940 ;; Auto vars:     Size  Location     Type
  6941 ;;  sp              1   32[BANK0 ] PTR unsigned char 
  6942 ;;		 -> ftoa@buf(17), 
  6943 ;;  val             4   28[BANK0 ] unsigned long 
  6944 ;;  tmpval          4    0        struct .
  6945 ;;  prec            2   35[BANK0 ] int 
  6946 ;;  width           2   33[BANK0 ] int 
  6947 ;;  cp              2    0        PTR const unsigned char 
  6948 ;;  len             2    0        unsigned int 
  6949 ;;  c               1   37[BANK0 ] unsigned char 
  6950 ;;  ap              1   27[BANK0 ] PTR void [1]
  6951 ;;		 -> ?_sprintf(2), 
  6952 ;;  flag            1   26[BANK0 ] unsigned char 
  6953 ;; Return value:  Size  Location     Type
  6954 ;;                  2   10[BANK0 ] int 
  6955 ;; Registers used:
  6956 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6957 ;; Tracked objects:
  6958 ;;		On entry : 0/0
  6959 ;;		On exit  : 0/0
  6960 ;;		Unchanged: 0/0
  6961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6962 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6963 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6964 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6965 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6966 ;;Total ram usage:       28 bytes
  6967 ;; Hardware stack levels used:    1
  6968 ;; Hardware stack levels required when called:    1
  6969 ;; This function calls:
  6970 ;;		___lldiv
  6971 ;;		___llmod
  6972 ;;		___wmul
  6973 ;;		_isdigit
  6974 ;; This function is called by:
  6975 ;;		_ftoa
  6976 ;; This function uses a non-reentrant model
  6977 ;;
  6978                           
  6979                           
  6980                           ;psect for function _sprintf
  6981  0028                     _sprintf:	
  6982                           
  6983                           ;incstack = 0
  6984                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6985                           ;sprintf@sp stored from wreg
  6986  0028  0020               	movlb	0	; select bank0
  6987  0029  00C0               	movwf	sprintf@sp
  6988                           
  6989                           ;doprnt.c: 502: va_list ap;;doprnt.c: 507: char c;;doprnt.c: 509: int width;;doprnt.c: 5
      +                          12: int prec;;doprnt.c: 520: unsigned char flag;;doprnt.c: 535: union {;doprnt.c: 536: u
      +                          nsigned long vd;;doprnt.c: 537: double integ;;doprnt.c: 538: } tmpval;;doprnt.c: 540: un
      +                          signed long val;;doprnt.c: 541: unsigned len;;doprnt.c: 542: const char * cp;;doprnt.c: 
      +                          545: *ap = __va_start();
  6990  002A  302C               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  6991  002B  00B4               	movwf	??_sprintf
  6992  002C  0834               	movf	??_sprintf,w
  6993  002D  00BB               	movwf	sprintf@ap
  6994  002E                     l2804:	
  6995                           ;doprnt.c: 548: while((c = *f++)) {
  6996                           
  6997  002E  082B               	movf	sprintf@f+1,w
  6998  002F  00B5               	movwf	??_sprintf+1
  6999  0030  082A               	movf	sprintf@f,w
  7000  0031  00B4               	movwf	??_sprintf
  7001  0032  0AAA               	incf	sprintf@f,f
  7002  0033  1903               	skipnz
  7003  0034  0AAB               	incf	sprintf@f+1,f
  7004  0035  0834               	movf	??_sprintf,w
  7005  0036  0084               	movwf	4
  7006  0037  0835               	movf	??_sprintf+1,w
  7007  0038  0085               	movwf	5
  7008  0039  0800               	movf	0,w	;code access
  7009  003A  00B6               	movwf	??_sprintf+2
  7010  003B  0836               	movf	??_sprintf+2,w
  7011  003C  00C5               	movwf	sprintf@c
  7012  003D  0845               	movf	sprintf@c,w
  7013  003E  1903               	btfsc	3,2
  7014  003F  29EA               	goto	l2806
  7015                           
  7016                           ;doprnt.c: 550: if(c != '%')
  7017  0040  3025               	movlw	37
  7018  0041  0645               	xorwf	sprintf@c,w
  7019  0042  1903               	btfsc	3,2
  7020  0043  2851               	goto	l2716
  7021                           
  7022                           ;doprnt.c: 552: {;doprnt.c: 553: ((*sp++ = (c)));
  7023  0044  0845               	movf	sprintf@c,w
  7024  0045  00B4               	movwf	??_sprintf
  7025  0046  0840               	movf	sprintf@sp,w
  7026  0047  0086               	movwf	6
  7027  0048  3001               	movlw	1	; select bank2/3
  7028  0049  0087               	movwf	7
  7029  004A  0834               	movf	??_sprintf,w
  7030  004B  0081               	movwf	1
  7031  004C  3001               	movlw	1
  7032  004D  00B4               	movwf	??_sprintf
  7033  004E  0834               	movf	??_sprintf,w
  7034  004F  07C0               	addwf	sprintf@sp,f
  7035                           
  7036                           ;doprnt.c: 554: continue;
  7037  0050  282E               	goto	l2804
  7038  0051                     l2716:	
  7039                           
  7040                           ;doprnt.c: 555: };doprnt.c: 558: width = 0;
  7041  0051  01C1               	clrf	sprintf@width
  7042  0052  01C2               	clrf	sprintf@width+1
  7043                           
  7044                           ;doprnt.c: 560: flag = 0;
  7045  0053  01BA               	clrf	sprintf@flag
  7046                           
  7047                           ;doprnt.c: 609: if(isdigit((unsigned)*f)) {
  7048  0054  082A               	movf	sprintf@f,w
  7049  0055  0084               	movwf	4
  7050  0056  082B               	movf	sprintf@f+1,w
  7051  0057  0085               	movwf	5
  7052  0058  0800               	movf	0,w	;code access
  7053  0059  3190  205E  3180   	fcall	_isdigit
  7054  005C  1C03               	btfss	3,0
  7055  005D  288F               	goto	l2730
  7056                           
  7057                           ;doprnt.c: 610: width = 0;
  7058  005E  0020               	movlb	0	; select bank0
  7059  005F  01C1               	clrf	sprintf@width
  7060  0060  01C2               	clrf	sprintf@width+1
  7061  0061                     l2722:	
  7062                           
  7063                           ;doprnt.c: 612: width *= 10;
  7064  0061  300A               	movlw	10
  7065  0062  00F0               	movwf	___wmul@multiplier
  7066  0063  3000               	movlw	0
  7067  0064  00F1               	movwf	___wmul@multiplier+1
  7068  0065  0020               	movlb	0	; select bank0
  7069  0066  0842               	movf	sprintf@width+1,w
  7070  0067  00F3               	movwf	___wmul@multiplicand+1
  7071  0068  0841               	movf	sprintf@width,w
  7072  0069  00F2               	movwf	___wmul@multiplicand
  7073  006A  3190  20B8  3180   	fcall	___wmul
  7074  006D  0871               	movf	?___wmul+1,w
  7075  006E  0020               	movlb	0	; select bank0
  7076  006F  00C2               	movwf	sprintf@width+1
  7077  0070  0870               	movf	?___wmul,w
  7078  0071  00C1               	movwf	sprintf@width
  7079                           
  7080                           ;doprnt.c: 613: width += *f++ - '0';
  7081  0072  082A               	movf	sprintf@f,w
  7082  0073  0084               	movwf	4
  7083  0074  082B               	movf	sprintf@f+1,w
  7084  0075  0085               	movwf	5
  7085  0076  0800               	movf	0,w	;code access
  7086  0077  3ED0               	addlw	208
  7087  0078  00B4               	movwf	??_sprintf
  7088  0079  30FF               	movlw	255
  7089  007A  1803               	skipnc
  7090  007B  3000               	movlw	0
  7091  007C  00B5               	movwf	??_sprintf+1
  7092  007D  0834               	movf	??_sprintf,w
  7093  007E  07C1               	addwf	sprintf@width,f
  7094  007F  0835               	movf	??_sprintf+1,w
  7095  0080  3DC2               	addwfc	sprintf@width+1,f
  7096  0081  3001               	movlw	1
  7097  0082  07AA               	addwf	sprintf@f,f
  7098  0083  3000               	movlw	0
  7099  0084  3DAB               	addwfc	sprintf@f+1,f
  7100                           
  7101                           ;doprnt.c: 614: } while(isdigit((unsigned)*f));
  7102  0085  082A               	movf	sprintf@f,w
  7103  0086  0084               	movwf	4
  7104  0087  082B               	movf	sprintf@f+1,w
  7105  0088  0085               	movwf	5
  7106  0089  0800               	movf	0,w	;code access
  7107  008A  3190  205E  3180   	fcall	_isdigit
  7108  008D  1803               	btfsc	3,0
  7109  008E  2861               	goto	l2722
  7110  008F                     l2730:	
  7111                           
  7112                           ;doprnt.c: 620: };doprnt.c: 623: if(*f == '.') {
  7113  008F  0020               	movlb	0	; select bank0
  7114  0090  082A               	movf	sprintf@f,w
  7115  0091  0084               	movwf	4
  7116  0092  082B               	movf	sprintf@f+1,w
  7117  0093  0085               	movwf	5
  7118  0094  0012               	moviw fsr0++
  7119  0095  3A2E               	xorlw	46
  7120  0096  1D03               	btfss	3,2
  7121  0097  28CD               	goto	l2742
  7122                           
  7123                           ;doprnt.c: 625: f++;
  7124  0098  3001               	movlw	1
  7125  0099  07AA               	addwf	sprintf@f,f
  7126  009A  3000               	movlw	0
  7127  009B  3DAB               	addwfc	sprintf@f+1,f
  7128                           
  7129                           ;doprnt.c: 639: {;doprnt.c: 640: prec = 0;
  7130  009C  01C3               	clrf	sprintf@prec
  7131  009D  01C4               	clrf	sprintf@prec+1
  7132  009E                     l2740:	
  7133                           ;doprnt.c: 641: while(isdigit((unsigned)*f))
  7134                           
  7135  009E  082A               	movf	sprintf@f,w
  7136  009F  0084               	movwf	4
  7137  00A0  082B               	movf	sprintf@f+1,w
  7138  00A1  0085               	movwf	5
  7139  00A2  0800               	movf	0,w	;code access
  7140  00A3  3190  205E  3180   	fcall	_isdigit
  7141  00A6  1C03               	btfss	3,0
  7142  00A7  28D7               	goto	l2748
  7143                           
  7144                           ;doprnt.c: 642: prec = prec*10 + *f++ - '0';
  7145  00A8  0020               	movlb	0	; select bank0
  7146  00A9  082A               	movf	sprintf@f,w
  7147  00AA  0084               	movwf	4
  7148  00AB  082B               	movf	sprintf@f+1,w
  7149  00AC  0085               	movwf	5
  7150  00AD  0800               	movf	0,w	;code access
  7151  00AE  00B4               	movwf	??_sprintf
  7152  00AF  01B5               	clrf	??_sprintf+1
  7153  00B0  0844               	movf	sprintf@prec+1,w
  7154  00B1  00F1               	movwf	___wmul@multiplier+1
  7155  00B2  0843               	movf	sprintf@prec,w
  7156  00B3  00F0               	movwf	___wmul@multiplier
  7157  00B4  300A               	movlw	10
  7158  00B5  00F2               	movwf	___wmul@multiplicand
  7159  00B6  3000               	movlw	0
  7160  00B7  00F3               	movwf	___wmul@multiplicand+1
  7161  00B8  3190  20B8  3180   	fcall	___wmul
  7162  00BB  0020               	movlb	0	; select bank0
  7163  00BC  0834               	movf	??_sprintf,w
  7164  00BD  0770               	addwf	?___wmul,w
  7165  00BE  00B6               	movwf	??_sprintf+2
  7166  00BF  0835               	movf	??_sprintf+1,w
  7167  00C0  3D71               	addwfc	?___wmul+1,w
  7168  00C1  00B7               	movwf	??_sprintf+3
  7169  00C2  0836               	movf	??_sprintf+2,w
  7170  00C3  3ED0               	addlw	208
  7171  00C4  00C3               	movwf	sprintf@prec
  7172  00C5  30FF               	movlw	255
  7173  00C6  3D37               	addwfc	??_sprintf+3,w
  7174  00C7  00C4               	movwf	sprintf@prec+1
  7175  00C8  3001               	movlw	1
  7176  00C9  07AA               	addwf	sprintf@f,f
  7177  00CA  3000               	movlw	0
  7178  00CB  3DAB               	addwfc	sprintf@f+1,f
  7179  00CC  289E               	goto	l2740
  7180  00CD                     l2742:	
  7181                           
  7182                           ;doprnt.c: 645: prec = 0;
  7183  00CD  01C3               	clrf	sprintf@prec
  7184  00CE  01C4               	clrf	sprintf@prec+1
  7185  00CF  28D7               	goto	l2748
  7186  00D0                     l517:	
  7187                           ;doprnt.c: 660: case 'l':
  7188                           
  7189                           
  7190                           ;doprnt.c: 662: flag |= 0x10;
  7191  00D0  163A               	bsf	sprintf@flag,4
  7192                           
  7193                           ;doprnt.c: 663: goto loop;
  7194  00D1  28D7               	goto	l2748
  7195  00D2                     l2744:	
  7196                           
  7197                           ;doprnt.c: 837: flag |= 0xC0;
  7198  00D2  30C0               	movlw	192
  7199  00D3  00B4               	movwf	??_sprintf
  7200  00D4  0834               	movf	??_sprintf,w
  7201  00D5  04BA               	iorwf	sprintf@flag,f
  7202                           
  7203                           ;doprnt.c: 838: break;
  7204  00D6  28EF               	goto	l520
  7205  00D7                     l2748:	
  7206  00D7  0020               	movlb	0	; select bank0
  7207  00D8  082B               	movf	sprintf@f+1,w
  7208  00D9  00B5               	movwf	??_sprintf+1
  7209  00DA  082A               	movf	sprintf@f,w
  7210  00DB  00B4               	movwf	??_sprintf
  7211  00DC  0AAA               	incf	sprintf@f,f
  7212  00DD  1903               	skipnz
  7213  00DE  0AAB               	incf	sprintf@f+1,f
  7214  00DF  0834               	movf	??_sprintf,w
  7215  00E0  0084               	movwf	4
  7216  00E1  0835               	movf	??_sprintf+1,w
  7217  00E2  0085               	movwf	5
  7218  00E3  0800               	movf	0,w	;code access
  7219  00E4  00C5               	movwf	sprintf@c
  7220                           
  7221                           ; Switch size 1, requested type "simple"
  7222                           ; Number of cases is 3, Range of values is 0 to 117
  7223                           ; switch strategies available:
  7224                           ; Name         Instructions Cycles
  7225                           ; simple_byte           10     6 (average)
  7226                           ; direct_byte          242     6 (fixed)
  7227                           ; jumptable            260     6 (fixed)
  7228                           ;	Chosen strategy is simple_byte
  7229  00E5  3A00               	xorlw	0	; case 0
  7230  00E6  1903               	skipnz
  7231  00E7  29EA               	goto	l2806
  7232  00E8  3A6C               	xorlw	108	; case 108
  7233  00E9  1903               	skipnz
  7234  00EA  28D0               	goto	l517
  7235  00EB  3A19               	xorlw	25	; case 117
  7236  00EC  1903               	skipnz
  7237  00ED  28D2               	goto	l2744
  7238  00EE  282E               	goto	l2804
  7239  00EF                     l520:	
  7240                           
  7241                           ;doprnt.c: 1292: {;doprnt.c: 1300: if(flag & 0x10)
  7242  00EF  1E3A               	btfss	sprintf@flag,4
  7243  00F0  28FE               	goto	l2754
  7244                           
  7245                           ;doprnt.c: 1301: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  7246  00F1  083B               	movf	sprintf@ap,w
  7247  00F2  0086               	movwf	6
  7248  00F3  0187               	clrf	7
  7249  00F4  3F40               	moviw [0]fsr1
  7250  00F5  00BC               	movwf	sprintf@val
  7251  00F6  3F41               	moviw [1]fsr1
  7252  00F7  00BD               	movwf	sprintf@val+1
  7253  00F8  3F42               	moviw [2]fsr1
  7254  00F9  00BE               	movwf	sprintf@val+2
  7255  00FA  3F43               	moviw [3]fsr1
  7256  00FB  00BF               	movwf	sprintf@val+3
  7257  00FC  3004               	movlw	4
  7258  00FD  290C               	goto	L2
  7259  00FE                     l2754:	
  7260                           
  7261                           ;doprnt.c: 1302: else;doprnt.c: 1305: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (
      +                          unsigned)0));
  7262  00FE  083B               	movf	sprintf@ap,w
  7263  00FF  0086               	movwf	6
  7264  0100  0187               	clrf	7
  7265  0101  3F40               	moviw [0]fsr1
  7266  0102  00B4               	movwf	??_sprintf
  7267  0103  3F41               	moviw [1]fsr1
  7268  0104  00B5               	movwf	??_sprintf+1
  7269  0105  0834               	movf	??_sprintf,w
  7270  0106  00BC               	movwf	sprintf@val
  7271  0107  0835               	movf	??_sprintf+1,w
  7272  0108  00BD               	movwf	sprintf@val+1
  7273  0109  01BE               	clrf	sprintf@val+2
  7274  010A  01BF               	clrf	sprintf@val+3
  7275  010B  3002               	movlw	2
  7276  010C                     L2:	
  7277  010C  00B4               	movwf	??_sprintf
  7278  010D  0834               	movf	??_sprintf,w
  7279  010E  07BB               	addwf	sprintf@ap,f
  7280                           
  7281                           ;doprnt.c: 1306: };doprnt.c: 1309: if(prec == 0 && val == 0)
  7282  010F  0843               	movf	sprintf@prec,w
  7283  0110  0444               	iorwf	sprintf@prec+1,w
  7284  0111  1D03               	btfss	3,2
  7285  0112  291D               	goto	l2764
  7286  0113  083F               	movf	sprintf@val+3,w
  7287  0114  043E               	iorwf	sprintf@val+2,w
  7288  0115  043D               	iorwf	sprintf@val+1,w
  7289  0116  043C               	iorwf	sprintf@val,w
  7290  0117  1D03               	skipz
  7291  0118  291D               	goto	l2764
  7292                           
  7293                           ;doprnt.c: 1310: prec++;
  7294  0119  3001               	movlw	1
  7295  011A  07C3               	addwf	sprintf@prec,f
  7296  011B  3000               	movlw	0
  7297  011C  3DC4               	addwfc	sprintf@prec+1,f
  7298  011D                     l2764:	
  7299                           
  7300                           ;doprnt.c: 1324: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  7301  011D  01C5               	clrf	sprintf@c
  7302  011E  0AC5               	incf	sprintf@c,f
  7303  011F                     l2770:	
  7304                           
  7305                           ;doprnt.c: 1325: if(val < dpowers[c])
  7306  011F  0845               	movf	sprintf@c,w
  7307  0120  00B4               	movwf	??_sprintf
  7308  0121  01B5               	clrf	??_sprintf+1
  7309  0122  35B4               	lslf	??_sprintf,f
  7310  0123  0DB5               	rlf	??_sprintf+1,f
  7311  0124  35B4               	lslf	??_sprintf,f
  7312  0125  0DB5               	rlf	??_sprintf+1,f
  7313  0126  3000               	movlw	low (_dpowers| (0+32768))
  7314  0127  0734               	addwf	??_sprintf,w
  7315  0128  0084               	movwf	4
  7316  0129  3098               	movlw	high (_dpowers| (0+32768))
  7317  012A  3D35               	addwfc	??_sprintf+1,w
  7318  012B  0085               	movwf	5
  7319  012C  3F00               	moviw [0]fsr0
  7320  012D  00B6               	movwf	??_sprintf+2
  7321  012E  3F01               	moviw [1]fsr0
  7322  012F  00B7               	movwf	??_sprintf+3
  7323  0130  3F02               	moviw [2]fsr0
  7324  0131  00B8               	movwf	??_sprintf+4
  7325  0132  3F03               	moviw [3]fsr0
  7326  0133  00B9               	movwf	??_sprintf+5
  7327  0134  0839               	movf	??_sprintf+5,w
  7328  0135  023F               	subwf	sprintf@val+3,w
  7329  0136  1D03               	skipz
  7330  0137  2942               	goto	u2915
  7331  0138  0838               	movf	??_sprintf+4,w
  7332  0139  023E               	subwf	sprintf@val+2,w
  7333  013A  1D03               	skipz
  7334  013B  2942               	goto	u2915
  7335  013C  0837               	movf	??_sprintf+3,w
  7336  013D  023D               	subwf	sprintf@val+1,w
  7337  013E  1D03               	skipz
  7338  013F  2942               	goto	u2915
  7339  0140  0836               	movf	??_sprintf+2,w
  7340  0141  023C               	subwf	sprintf@val,w
  7341  0142                     u2915:	
  7342  0142  1C03               	btfss	3,0
  7343  0143  294C               	goto	l2776
  7344  0144  3001               	movlw	1
  7345  0145  00B4               	movwf	??_sprintf
  7346  0146  0834               	movf	??_sprintf,w
  7347  0147  07C5               	addwf	sprintf@c,f
  7348  0148  300A               	movlw	10
  7349  0149  0645               	xorwf	sprintf@c,w
  7350  014A  1D03               	btfss	3,2
  7351  014B  291F               	goto	l2770
  7352  014C                     l2776:	
  7353                           
  7354                           ;doprnt.c: 1358: if(c < prec)
  7355  014C  0844               	movf	sprintf@prec+1,w
  7356  014D  3A80               	xorlw	128
  7357  014E  3C80               	sublw	128
  7358  014F  1D03               	skipz
  7359  0150  2953               	goto	u2935
  7360  0151  0843               	movf	sprintf@prec,w
  7361  0152  0245               	subwf	sprintf@c,w
  7362  0153                     u2935:	
  7363  0153  1803               	skipnc
  7364  0154  295B               	goto	l2780
  7365                           
  7366                           ;doprnt.c: 1359: c = prec;
  7367  0155  0020               	movlb	0	; select bank0
  7368  0156  0843               	movf	sprintf@prec,w
  7369  0157  00B4               	movwf	??_sprintf
  7370  0158  0834               	movf	??_sprintf,w
  7371  0159  00C5               	movwf	sprintf@c
  7372  015A  296F               	goto	l528
  7373  015B                     l2780:	
  7374                           
  7375                           ;doprnt.c: 1360: else if(prec < c)
  7376  015B  0020               	movlb	0	; select bank0
  7377  015C  0844               	movf	sprintf@prec+1,w
  7378  015D  3A80               	xorlw	128
  7379  015E  00B4               	movwf	??_sprintf
  7380  015F  3080               	movlw	128
  7381  0160  0234               	subwf	??_sprintf,w
  7382  0161  1D03               	skipz
  7383  0162  2965               	goto	u2945
  7384  0163  0845               	movf	sprintf@c,w
  7385  0164  0243               	subwf	sprintf@prec,w
  7386  0165                     u2945:	
  7387  0165  1803               	skipnc
  7388  0166  296F               	goto	l528
  7389                           
  7390                           ;doprnt.c: 1361: prec = c;
  7391  0167  0020               	movlb	0	; select bank0
  7392  0168  0845               	movf	sprintf@c,w
  7393  0169  00B4               	movwf	??_sprintf
  7394  016A  01B5               	clrf	??_sprintf+1
  7395  016B  0834               	movf	??_sprintf,w
  7396  016C  00C3               	movwf	sprintf@prec
  7397  016D  0835               	movf	??_sprintf+1,w
  7398  016E  00C4               	movwf	sprintf@prec+1
  7399  016F                     l528:	
  7400                           
  7401                           ;doprnt.c: 1400: if(width > c)
  7402  016F  0020               	movlb	0	; select bank0
  7403  0170  0842               	movf	sprintf@width+1,w
  7404  0171  3A80               	xorlw	128
  7405  0172  3C80               	sublw	128
  7406  0173  1D03               	skipz
  7407  0174  2977               	goto	u2955
  7408  0175  0841               	movf	sprintf@width,w
  7409  0176  0245               	subwf	sprintf@c,w
  7410  0177                     u2955:	
  7411  0177  1803               	skipnc
  7412  0178  2982               	goto	l2786
  7413                           
  7414                           ;doprnt.c: 1401: width -= c;
  7415  0179  0020               	movlb	0	; select bank0
  7416  017A  0845               	movf	sprintf@c,w
  7417  017B  00B4               	movwf	??_sprintf
  7418  017C  01B5               	clrf	??_sprintf+1
  7419  017D  0834               	movf	??_sprintf,w
  7420  017E  02C1               	subwf	sprintf@width,f
  7421  017F  0835               	movf	??_sprintf+1,w
  7422  0180  3BC2               	subwfb	sprintf@width+1,f
  7423  0181  2985               	goto	l2788
  7424  0182                     l2786:	
  7425                           
  7426                           ;doprnt.c: 1402: else;doprnt.c: 1403: width = 0;
  7427  0182  0020               	movlb	0	; select bank0
  7428  0183  01C1               	clrf	sprintf@width
  7429  0184  01C2               	clrf	sprintf@width+1
  7430  0185                     l2788:	
  7431                           
  7432                           ;doprnt.c: 1441: {;doprnt.c: 1443: if(width;doprnt.c: 1447: )
  7433  0185  0841               	movf	sprintf@width,w
  7434  0186  0442               	iorwf	sprintf@width+1,w
  7435  0187  1903               	btfsc	3,2
  7436  0188  29DF               	goto	l2802
  7437                           
  7438                           ;doprnt.c: 1449: ((*sp++ = (' ')));
  7439  0189  3020               	movlw	32
  7440  018A  00B4               	movwf	??_sprintf
  7441  018B  0840               	movf	sprintf@sp,w
  7442  018C  0086               	movwf	6
  7443  018D  3001               	movlw	1	; select bank2/3
  7444  018E  0087               	movwf	7
  7445  018F  0834               	movf	??_sprintf,w
  7446  0190  0081               	movwf	1
  7447  0191  3001               	movlw	1
  7448  0192  00B4               	movwf	??_sprintf
  7449  0193  0834               	movf	??_sprintf,w
  7450  0194  07C0               	addwf	sprintf@sp,f
  7451                           
  7452                           ;doprnt.c: 1450: while(--width);
  7453  0195  30FF               	movlw	255
  7454  0196  07C1               	addwf	sprintf@width,f
  7455  0197  30FF               	movlw	255
  7456  0198  3DC2               	addwfc	sprintf@width+1,f
  7457  0199  2985               	goto	l2788
  7458  019A                     l2796:	
  7459                           
  7460                           ;doprnt.c: 1497: {;doprnt.c: 1508: c = (val / dpowers[prec]) % 10 + '0';
  7461  019A  3000               	movlw	0
  7462  019B  00A3               	movwf	___llmod@divisor+3
  7463  019C  3000               	movlw	0
  7464  019D  00A2               	movwf	___llmod@divisor+2
  7465  019E  3000               	movlw	0
  7466  019F  00A1               	movwf	___llmod@divisor+1
  7467  01A0  300A               	movlw	10
  7468  01A1  00A0               	movwf	___llmod@divisor
  7469  01A2  0844               	movf	sprintf@prec+1,w
  7470  01A3  0085               	movwf	5
  7471  01A4  0843               	movf	sprintf@prec,w
  7472  01A5  0084               	movwf	4
  7473  01A6  3584               	lslf	4,f
  7474  01A7  0D85               	rlf	5,f
  7475  01A8  3584               	lslf	4,f
  7476  01A9  0D85               	rlf	5,f
  7477  01AA  3000               	movlw	low (_dpowers| (0+32768))
  7478  01AB  0784               	addwf	4,f
  7479  01AC  3098               	movlw	high (_dpowers| (0+32768))
  7480  01AD  3D85               	addwfc	5,f
  7481  01AE  3F00               	moviw [0]fsr0
  7482  01AF  00F0               	movwf	___lldiv@divisor
  7483  01B0  3F01               	moviw [1]fsr0
  7484  01B1  00F1               	movwf	___lldiv@divisor+1
  7485  01B2  3F02               	moviw [2]fsr0
  7486  01B3  00F2               	movwf	___lldiv@divisor+2
  7487  01B4  3F03               	moviw [3]fsr0
  7488  01B5  00F3               	movwf	___lldiv@divisor+3
  7489  01B6  083F               	movf	sprintf@val+3,w
  7490  01B7  00F7               	movwf	___lldiv@dividend+3
  7491  01B8  083E               	movf	sprintf@val+2,w
  7492  01B9  00F6               	movwf	___lldiv@dividend+2
  7493  01BA  083D               	movf	sprintf@val+1,w
  7494  01BB  00F5               	movwf	___lldiv@dividend+1
  7495  01BC  083C               	movf	sprintf@val,w
  7496  01BD  00F4               	movwf	___lldiv@dividend
  7497  01BE  3192  223B  3180   	fcall	___lldiv
  7498  01C1  0873               	movf	?___lldiv+3,w
  7499  01C2  0020               	movlb	0	; select bank0
  7500  01C3  00A7               	movwf	___llmod@dividend+3
  7501  01C4  0872               	movf	?___lldiv+2,w
  7502  01C5  00A6               	movwf	___llmod@dividend+2
  7503  01C6  0871               	movf	?___lldiv+1,w
  7504  01C7  00A5               	movwf	___llmod@dividend+1
  7505  01C8  0870               	movf	?___lldiv,w
  7506  01C9  00A4               	movwf	___llmod@dividend
  7507  01CA  3191  21F8  3180   	fcall	___llmod
  7508  01CD  0020               	movlb	0	; select bank0
  7509  01CE  0820               	movf	?___llmod,w
  7510  01CF  3E30               	addlw	48
  7511  01D0  00B4               	movwf	??_sprintf
  7512  01D1  0834               	movf	??_sprintf,w
  7513  01D2  00C5               	movwf	sprintf@c
  7514                           
  7515                           ;doprnt.c: 1542: };doprnt.c: 1543: ((*sp++ = (c)));
  7516  01D3  0845               	movf	sprintf@c,w
  7517  01D4  00B4               	movwf	??_sprintf
  7518  01D5  0840               	movf	sprintf@sp,w
  7519  01D6  0086               	movwf	6
  7520  01D7  3001               	movlw	1	; select bank2/3
  7521  01D8  0087               	movwf	7
  7522  01D9  0834               	movf	??_sprintf,w
  7523  01DA  0081               	movwf	1
  7524  01DB  3001               	movlw	1
  7525  01DC  00B4               	movwf	??_sprintf
  7526  01DD  0834               	movf	??_sprintf,w
  7527  01DE  07C0               	addwf	sprintf@sp,f
  7528  01DF                     l2802:	
  7529  01DF  30FF               	movlw	255
  7530  01E0  07C3               	addwf	sprintf@prec,f
  7531  01E1  30FF               	movlw	255
  7532  01E2  3DC4               	addwfc	sprintf@prec+1,f
  7533  01E3  0A43               	incf	sprintf@prec,w
  7534  01E4  1D03               	skipz
  7535  01E5  299A               	goto	l2796
  7536  01E6  0A44               	incf	sprintf@prec+1,w
  7537  01E7  1903               	btfsc	3,2
  7538  01E8  282E               	goto	l2804
  7539  01E9  299A               	goto	l2796
  7540  01EA                     l2806:	
  7541                           
  7542                           ;doprnt.c: 1557: *sp = 0;
  7543  01EA  0840               	movf	sprintf@sp,w
  7544  01EB  0086               	movwf	6
  7545  01EC  3001               	movlw	1	; select bank2/3
  7546  01ED  0087               	movwf	7
  7547  01EE  0181               	clrf	1
  7548  01EF  0008               	return
  7549  01F0                     __end_of_sprintf:	
  7550                           
  7551                           	psect	text12
  7552  105E                     __ptext12:	
  7553 ;; *************** function _isdigit *****************
  7554 ;; Defined at:
  7555 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\isdigit.c"
  7556 ;; Parameters:    Size  Location     Type
  7557 ;;  c               1    wreg     unsigned char 
  7558 ;; Auto vars:     Size  Location     Type
  7559 ;;  c               1    1[COMMON] unsigned char 
  7560 ;; Return value:  Size  Location     Type
  7561 ;;		None               void
  7562 ;; Registers used:
  7563 ;;		wreg, status,2, status,0
  7564 ;; Tracked objects:
  7565 ;;		On entry : 0/0
  7566 ;;		On exit  : 0/0
  7567 ;;		Unchanged: 0/0
  7568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7570 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7572 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7573 ;;Total ram usage:        2 bytes
  7574 ;; Hardware stack levels used:    1
  7575 ;; This function calls:
  7576 ;;		Nothing
  7577 ;; This function is called by:
  7578 ;;		_sprintf
  7579 ;; This function uses a non-reentrant model
  7580 ;;
  7581                           
  7582                           
  7583                           ;psect for function _isdigit
  7584  105E                     _isdigit:	
  7585                           
  7586                           ;incstack = 0
  7587                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  7588                           ;isdigit@c stored from wreg
  7589  105E  00F1               	movwf	isdigit@c
  7590  105F  01F0               	clrf	_isdigit$1091
  7591  1060  303A               	movlw	58
  7592  1061  0271               	subwf	isdigit@c,w
  7593  1062  1803               	skipnc
  7594  1063  286A               	goto	l2406
  7595  1064  3030               	movlw	48
  7596  1065  0271               	subwf	isdigit@c,w
  7597  1066  1C03               	skipc
  7598  1067  286A               	goto	l2406
  7599  1068  01F0               	clrf	_isdigit$1091
  7600  1069  0AF0               	incf	_isdigit$1091,f
  7601  106A                     l2406:	
  7602  106A  0C70               	rrf	_isdigit$1091,w
  7603  106B  0008               	return
  7604  106C                     __end_of_isdigit:	
  7605                           
  7606                           	psect	text13
  7607  10B8                     __ptext13:	
  7608 ;; *************** function ___wmul *****************
  7609 ;; Defined at:
  7610 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
  7611 ;; Parameters:    Size  Location     Type
  7612 ;;  multiplier      2    0[COMMON] unsigned int 
  7613 ;;  multiplicand    2    2[COMMON] unsigned int 
  7614 ;; Auto vars:     Size  Location     Type
  7615 ;;  product         2    4[COMMON] unsigned int 
  7616 ;; Return value:  Size  Location     Type
  7617 ;;                  2    0[COMMON] unsigned int 
  7618 ;; Registers used:
  7619 ;;		wreg, status,2, status,0
  7620 ;; Tracked objects:
  7621 ;;		On entry : 0/0
  7622 ;;		On exit  : 0/0
  7623 ;;		Unchanged: 0/0
  7624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7625 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7626 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7628 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7629 ;;Total ram usage:        6 bytes
  7630 ;; Hardware stack levels used:    1
  7631 ;; This function calls:
  7632 ;;		Nothing
  7633 ;; This function is called by:
  7634 ;;		_sprintf
  7635 ;; This function uses a non-reentrant model
  7636 ;;
  7637                           
  7638                           
  7639                           ;psect for function ___wmul
  7640  10B8                     ___wmul:	
  7641                           
  7642                           ;incstack = 0
  7643                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7644  10B8  01F4               	clrf	___wmul@product
  7645  10B9  01F5               	clrf	___wmul@product+1
  7646  10BA                     l2412:	
  7647  10BA  1C70               	btfss	___wmul@multiplier,0
  7648  10BB  28C0               	goto	l543
  7649  10BC  0872               	movf	___wmul@multiplicand,w
  7650  10BD  07F4               	addwf	___wmul@product,f
  7651  10BE  0873               	movf	___wmul@multiplicand+1,w
  7652  10BF  3DF5               	addwfc	___wmul@product+1,f
  7653  10C0                     l543:	
  7654  10C0  3001               	movlw	1
  7655  10C1                     u2185:	
  7656  10C1  35F2               	lslf	___wmul@multiplicand,f
  7657  10C2  0DF3               	rlf	___wmul@multiplicand+1,f
  7658  10C3  0B89               	decfsz	9,f
  7659  10C4  28C1               	goto	u2185
  7660  10C5  3001               	movlw	1
  7661  10C6                     u2195:	
  7662  10C6  36F1               	lsrf	___wmul@multiplier+1,f
  7663  10C7  0CF0               	rrf	___wmul@multiplier,f
  7664  10C8  0B89               	decfsz	9,f
  7665  10C9  28C6               	goto	u2195
  7666  10CA  0870               	movf	___wmul@multiplier,w
  7667  10CB  0471               	iorwf	___wmul@multiplier+1,w
  7668  10CC  1D03               	btfss	3,2
  7669  10CD  28BA               	goto	l2412
  7670  10CE  0875               	movf	___wmul@product+1,w
  7671  10CF  00F1               	movwf	?___wmul+1
  7672  10D0  0874               	movf	___wmul@product,w
  7673  10D1  00F0               	movwf	?___wmul
  7674  10D2  0008               	return
  7675  10D3                     __end_of___wmul:	
  7676                           
  7677                           	psect	text14
  7678  11F8                     __ptext14:	
  7679 ;; *************** function ___llmod *****************
  7680 ;; Defined at:
  7681 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\llmod.c"
  7682 ;; Parameters:    Size  Location     Type
  7683 ;;  divisor         4    0[BANK0 ] unsigned long 
  7684 ;;  dividend        4    4[BANK0 ] unsigned long 
  7685 ;; Auto vars:     Size  Location     Type
  7686 ;;  counter         1    9[BANK0 ] unsigned char 
  7687 ;; Return value:  Size  Location     Type
  7688 ;;                  4    0[BANK0 ] unsigned long 
  7689 ;; Registers used:
  7690 ;;		wreg, status,2, status,0
  7691 ;; Tracked objects:
  7692 ;;		On entry : 0/0
  7693 ;;		On exit  : 0/0
  7694 ;;		Unchanged: 0/0
  7695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7696 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7697 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7698 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7699 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7700 ;;Total ram usage:       10 bytes
  7701 ;; Hardware stack levels used:    1
  7702 ;; This function calls:
  7703 ;;		Nothing
  7704 ;; This function is called by:
  7705 ;;		_sprintf
  7706 ;; This function uses a non-reentrant model
  7707 ;;
  7708                           
  7709                           
  7710                           ;psect for function ___llmod
  7711  11F8                     ___llmod:	
  7712                           
  7713                           ;incstack = 0
  7714                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  7715  11F8  0020               	movlb	0	; select bank0
  7716  11F9  0823               	movf	___llmod@divisor+3,w
  7717  11FA  0422               	iorwf	___llmod@divisor+2,w
  7718  11FB  0421               	iorwf	___llmod@divisor+1,w
  7719  11FC  0420               	iorwf	___llmod@divisor,w
  7720  11FD  1903               	skipnz
  7721  11FE  2A32               	goto	l2464
  7722  11FF  01A9               	clrf	___llmod@counter
  7723  1200  0AA9               	incf	___llmod@counter,f
  7724  1201                     l2454:	
  7725  1201  1BA3               	btfsc	___llmod@divisor+3,7
  7726  1202  2A0F               	goto	l2456
  7727  1203  3001               	movlw	1
  7728  1204                     u2295:	
  7729  1204  35A0               	lslf	___llmod@divisor,f
  7730  1205  0DA1               	rlf	___llmod@divisor+1,f
  7731  1206  0DA2               	rlf	___llmod@divisor+2,f
  7732  1207  0DA3               	rlf	___llmod@divisor+3,f
  7733  1208  0B89               	decfsz	9,f
  7734  1209  2A04               	goto	u2295
  7735  120A  3001               	movlw	1
  7736  120B  00A8               	movwf	??___llmod
  7737  120C  0828               	movf	??___llmod,w
  7738  120D  07A9               	addwf	___llmod@counter,f
  7739  120E  2A01               	goto	l2454
  7740  120F                     l2456:	
  7741  120F  0823               	movf	___llmod@divisor+3,w
  7742  1210  0227               	subwf	___llmod@dividend+3,w
  7743  1211  1D03               	skipz
  7744  1212  2A1D               	goto	u2315
  7745  1213  0822               	movf	___llmod@divisor+2,w
  7746  1214  0226               	subwf	___llmod@dividend+2,w
  7747  1215  1D03               	skipz
  7748  1216  2A1D               	goto	u2315
  7749  1217  0821               	movf	___llmod@divisor+1,w
  7750  1218  0225               	subwf	___llmod@dividend+1,w
  7751  1219  1D03               	skipz
  7752  121A  2A1D               	goto	u2315
  7753  121B  0820               	movf	___llmod@divisor,w
  7754  121C  0224               	subwf	___llmod@dividend,w
  7755  121D                     u2315:	
  7756  121D  1C03               	skipc
  7757  121E  2A27               	goto	l2460
  7758  121F  0820               	movf	___llmod@divisor,w
  7759  1220  02A4               	subwf	___llmod@dividend,f
  7760  1221  0821               	movf	___llmod@divisor+1,w
  7761  1222  3BA5               	subwfb	___llmod@dividend+1,f
  7762  1223  0822               	movf	___llmod@divisor+2,w
  7763  1224  3BA6               	subwfb	___llmod@dividend+2,f
  7764  1225  0823               	movf	___llmod@divisor+3,w
  7765  1226  3BA7               	subwfb	___llmod@dividend+3,f
  7766  1227                     l2460:	
  7767  1227  3001               	movlw	1
  7768  1228                     u2325:	
  7769  1228  36A3               	lsrf	___llmod@divisor+3,f
  7770  1229  0CA2               	rrf	___llmod@divisor+2,f
  7771  122A  0CA1               	rrf	___llmod@divisor+1,f
  7772  122B  0CA0               	rrf	___llmod@divisor,f
  7773  122C  0B89               	decfsz	9,f
  7774  122D  2A28               	goto	u2325
  7775  122E  3001               	movlw	1
  7776  122F  02A9               	subwf	___llmod@counter,f
  7777  1230  1D03               	btfss	3,2
  7778  1231  2A0F               	goto	l2456
  7779  1232                     l2464:	
  7780  1232  0827               	movf	___llmod@dividend+3,w
  7781  1233  00A3               	movwf	?___llmod+3
  7782  1234  0826               	movf	___llmod@dividend+2,w
  7783  1235  00A2               	movwf	?___llmod+2
  7784  1236  0825               	movf	___llmod@dividend+1,w
  7785  1237  00A1               	movwf	?___llmod+1
  7786  1238  0824               	movf	___llmod@dividend,w
  7787  1239  00A0               	movwf	?___llmod
  7788  123A  0008               	return
  7789  123B                     __end_of___llmod:	
  7790                           
  7791                           	psect	text15
  7792  123B                     __ptext15:	
  7793 ;; *************** function ___lldiv *****************
  7794 ;; Defined at:
  7795 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
  7796 ;; Parameters:    Size  Location     Type
  7797 ;;  divisor         4    0[COMMON] unsigned long 
  7798 ;;  dividend        4    4[COMMON] unsigned long 
  7799 ;; Auto vars:     Size  Location     Type
  7800 ;;  quotient        4    9[COMMON] unsigned long 
  7801 ;;  counter         1   13[COMMON] unsigned char 
  7802 ;; Return value:  Size  Location     Type
  7803 ;;                  4    0[COMMON] unsigned long 
  7804 ;; Registers used:
  7805 ;;		wreg, status,2, status,0
  7806 ;; Tracked objects:
  7807 ;;		On entry : 0/0
  7808 ;;		On exit  : 0/0
  7809 ;;		Unchanged: 0/0
  7810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7811 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7812 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7813 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7814 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7815 ;;Total ram usage:       14 bytes
  7816 ;; Hardware stack levels used:    1
  7817 ;; This function calls:
  7818 ;;		Nothing
  7819 ;; This function is called by:
  7820 ;;		_sprintf
  7821 ;; This function uses a non-reentrant model
  7822 ;;
  7823                           
  7824                           
  7825                           ;psect for function ___lldiv
  7826  123B                     ___lldiv:	
  7827                           
  7828                           ;incstack = 0
  7829                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7830  123B  3000               	movlw	0
  7831  123C  00FC               	movwf	___lldiv@quotient+3
  7832  123D  3000               	movlw	0
  7833  123E  00FB               	movwf	___lldiv@quotient+2
  7834  123F  3000               	movlw	0
  7835  1240  00FA               	movwf	___lldiv@quotient+1
  7836  1241  3000               	movlw	0
  7837  1242  00F9               	movwf	___lldiv@quotient
  7838  1243  0873               	movf	___lldiv@divisor+3,w
  7839  1244  0472               	iorwf	___lldiv@divisor+2,w
  7840  1245  0471               	iorwf	___lldiv@divisor+1,w
  7841  1246  0470               	iorwf	___lldiv@divisor,w
  7842  1247  1903               	skipnz
  7843  1248  2A84               	goto	l2444
  7844  1249  01FD               	clrf	___lldiv@counter
  7845  124A  0AFD               	incf	___lldiv@counter,f
  7846  124B                     l2430:	
  7847  124B  1BF3               	btfsc	___lldiv@divisor+3,7
  7848  124C  2A59               	goto	l2432
  7849  124D  3001               	movlw	1
  7850  124E                     u2225:	
  7851  124E  35F0               	lslf	___lldiv@divisor,f
  7852  124F  0DF1               	rlf	___lldiv@divisor+1,f
  7853  1250  0DF2               	rlf	___lldiv@divisor+2,f
  7854  1251  0DF3               	rlf	___lldiv@divisor+3,f
  7855  1252  0B89               	decfsz	9,f
  7856  1253  2A4E               	goto	u2225
  7857  1254  3001               	movlw	1
  7858  1255  00F8               	movwf	??___lldiv
  7859  1256  0878               	movf	??___lldiv,w
  7860  1257  07FD               	addwf	___lldiv@counter,f
  7861  1258  2A4B               	goto	l2430
  7862  1259                     l2432:	
  7863  1259  3001               	movlw	1
  7864  125A                     u2245:	
  7865  125A  35F9               	lslf	___lldiv@quotient,f
  7866  125B  0DFA               	rlf	___lldiv@quotient+1,f
  7867  125C  0DFB               	rlf	___lldiv@quotient+2,f
  7868  125D  0DFC               	rlf	___lldiv@quotient+3,f
  7869  125E  0B89               	decfsz	9,f
  7870  125F  2A5A               	goto	u2245
  7871  1260  0873               	movf	___lldiv@divisor+3,w
  7872  1261  0277               	subwf	___lldiv@dividend+3,w
  7873  1262  1D03               	skipz
  7874  1263  2A6E               	goto	u2255
  7875  1264  0872               	movf	___lldiv@divisor+2,w
  7876  1265  0276               	subwf	___lldiv@dividend+2,w
  7877  1266  1D03               	skipz
  7878  1267  2A6E               	goto	u2255
  7879  1268  0871               	movf	___lldiv@divisor+1,w
  7880  1269  0275               	subwf	___lldiv@dividend+1,w
  7881  126A  1D03               	skipz
  7882  126B  2A6E               	goto	u2255
  7883  126C  0870               	movf	___lldiv@divisor,w
  7884  126D  0274               	subwf	___lldiv@dividend,w
  7885  126E                     u2255:	
  7886  126E  1C03               	skipc
  7887  126F  2A79               	goto	l2440
  7888  1270  0870               	movf	___lldiv@divisor,w
  7889  1271  02F4               	subwf	___lldiv@dividend,f
  7890  1272  0871               	movf	___lldiv@divisor+1,w
  7891  1273  3BF5               	subwfb	___lldiv@dividend+1,f
  7892  1274  0872               	movf	___lldiv@divisor+2,w
  7893  1275  3BF6               	subwfb	___lldiv@dividend+2,f
  7894  1276  0873               	movf	___lldiv@divisor+3,w
  7895  1277  3BF7               	subwfb	___lldiv@dividend+3,f
  7896  1278  1479               	bsf	___lldiv@quotient,0
  7897  1279                     l2440:	
  7898  1279  3001               	movlw	1
  7899  127A                     u2265:	
  7900  127A  36F3               	lsrf	___lldiv@divisor+3,f
  7901  127B  0CF2               	rrf	___lldiv@divisor+2,f
  7902  127C  0CF1               	rrf	___lldiv@divisor+1,f
  7903  127D  0CF0               	rrf	___lldiv@divisor,f
  7904  127E  0B89               	decfsz	9,f
  7905  127F  2A7A               	goto	u2265
  7906  1280  3001               	movlw	1
  7907  1281  02FD               	subwf	___lldiv@counter,f
  7908  1282  1D03               	btfss	3,2
  7909  1283  2A59               	goto	l2432
  7910  1284                     l2444:	
  7911  1284  087C               	movf	___lldiv@quotient+3,w
  7912  1285  00F3               	movwf	?___lldiv+3
  7913  1286  087B               	movf	___lldiv@quotient+2,w
  7914  1287  00F2               	movwf	?___lldiv+2
  7915  1288  087A               	movf	___lldiv@quotient+1,w
  7916  1289  00F1               	movwf	?___lldiv+1
  7917  128A  0879               	movf	___lldiv@quotient,w
  7918  128B  00F0               	movwf	?___lldiv
  7919  128C  0008               	return
  7920  128D                     __end_of___lldiv:	
  7921                           
  7922                           	psect	text16
  7923  168A                     __ptext16:	
  7924 ;; *************** function ___xxtofl *****************
  7925 ;; Defined at:
  7926 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
  7927 ;; Parameters:    Size  Location     Type
  7928 ;;  sign            1    wreg     unsigned char 
  7929 ;;  val             4    9[COMMON] long 
  7930 ;; Auto vars:     Size  Location     Type
  7931 ;;  sign            1    4[BANK0 ] unsigned char 
  7932 ;;  arg             4    6[BANK0 ] unsigned long 
  7933 ;;  exp             1    5[BANK0 ] unsigned char 
  7934 ;; Return value:  Size  Location     Type
  7935 ;;                  4    9[COMMON] unsigned char 
  7936 ;; Registers used:
  7937 ;;		wreg, status,2, status,0
  7938 ;; Tracked objects:
  7939 ;;		On entry : 0/0
  7940 ;;		On exit  : 0/0
  7941 ;;		Unchanged: 0/0
  7942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7943 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7944 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7945 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7946 ;;      Totals:         4      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7947 ;;Total ram usage:       14 bytes
  7948 ;; Hardware stack levels used:    1
  7949 ;; This function calls:
  7950 ;;		Nothing
  7951 ;; This function is called by:
  7952 ;;		_roundedVal
  7953 ;;		_read_current
  7954 ;;		_read_voltage
  7955 ;;		_read_panel
  7956 ;;		_ftoa
  7957 ;; This function uses a non-reentrant model
  7958 ;;
  7959                           
  7960                           
  7961                           ;psect for function ___xxtofl
  7962  168A                     ___xxtofl:	
  7963                           
  7964                           ;incstack = 0
  7965                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7966                           ;___xxtofl@sign stored from wreg
  7967  168A  0020               	movlb	0	; select bank0
  7968  168B  00A4               	movwf	___xxtofl@sign
  7969  168C  0824               	movf	___xxtofl@sign,w
  7970  168D  1D03               	btfss	3,2
  7971  168E  1FFC               	btfss	___xxtofl@val+3,7
  7972  168F  2EA0               	goto	l3026
  7973  1690  0979               	comf	___xxtofl@val,w
  7974  1691  00A6               	movwf	___xxtofl@arg
  7975  1692  097A               	comf	___xxtofl@val+1,w
  7976  1693  00A7               	movwf	___xxtofl@arg+1
  7977  1694  097B               	comf	___xxtofl@val+2,w
  7978  1695  00A8               	movwf	___xxtofl@arg+2
  7979  1696  097C               	comf	___xxtofl@val+3,w
  7980  1697  00A9               	movwf	___xxtofl@arg+3
  7981  1698  0AA6               	incf	___xxtofl@arg,f
  7982  1699  1903               	skipnz
  7983  169A  0AA7               	incf	___xxtofl@arg+1,f
  7984  169B  1903               	skipnz
  7985  169C  0AA8               	incf	___xxtofl@arg+2,f
  7986  169D  1903               	skipnz
  7987  169E  0AA9               	incf	___xxtofl@arg+3,f
  7988  169F  2EA8               	goto	l970
  7989  16A0                     l3026:	
  7990  16A0  087C               	movf	___xxtofl@val+3,w
  7991  16A1  00A9               	movwf	___xxtofl@arg+3
  7992  16A2  087B               	movf	___xxtofl@val+2,w
  7993  16A3  00A8               	movwf	___xxtofl@arg+2
  7994  16A4  087A               	movf	___xxtofl@val+1,w
  7995  16A5  00A7               	movwf	___xxtofl@arg+1
  7996  16A6  0879               	movf	___xxtofl@val,w
  7997  16A7  00A6               	movwf	___xxtofl@arg
  7998  16A8                     l970:	
  7999  16A8  087C               	movf	___xxtofl@val+3,w
  8000  16A9  047B               	iorwf	___xxtofl@val+2,w
  8001  16AA  047A               	iorwf	___xxtofl@val+1,w
  8002  16AB  0479               	iorwf	___xxtofl@val,w
  8003  16AC  1D03               	skipz
  8004  16AD  2EB7               	goto	l3032
  8005  16AE  3000               	movlw	0
  8006  16AF  00FC               	movwf	?___xxtofl+3
  8007  16B0  3000               	movlw	0
  8008  16B1  00FB               	movwf	?___xxtofl+2
  8009  16B2  3000               	movlw	0
  8010  16B3  00FA               	movwf	?___xxtofl+1
  8011  16B4  3000               	movlw	0
  8012  16B5  00F9               	movwf	?___xxtofl
  8013  16B6  0008               	return
  8014  16B7                     l3032:	
  8015  16B7  3096               	movlw	150
  8016  16B8  00A0               	movwf	??___xxtofl
  8017  16B9  0820               	movf	??___xxtofl,w
  8018  16BA  00A5               	movwf	___xxtofl@exp
  8019  16BB                     l3036:	
  8020  16BB  30FE               	movlw	254
  8021  16BC  0529               	andwf	___xxtofl@arg+3,w
  8022  16BD  1903               	btfsc	3,2
  8023  16BE  2EDE               	goto	l976
  8024  16BF  3001               	movlw	1
  8025  16C0  00A0               	movwf	??___xxtofl
  8026  16C1  0820               	movf	??___xxtofl,w
  8027  16C2  07A5               	addwf	___xxtofl@exp,f
  8028  16C3  3001               	movlw	1
  8029  16C4                     u3455:	
  8030  16C4  36A9               	lsrf	___xxtofl@arg+3,f
  8031  16C5  0CA8               	rrf	___xxtofl@arg+2,f
  8032  16C6  0CA7               	rrf	___xxtofl@arg+1,f
  8033  16C7  0CA6               	rrf	___xxtofl@arg,f
  8034  16C8  0B89               	decfsz	9,f
  8035  16C9  2EC4               	goto	u3455
  8036  16CA  2EBB               	goto	l3036
  8037  16CB                     l3038:	
  8038  16CB  3001               	movlw	1
  8039  16CC  00A0               	movwf	??___xxtofl
  8040  16CD  0820               	movf	??___xxtofl,w
  8041  16CE  07A5               	addwf	___xxtofl@exp,f
  8042  16CF  3001               	movlw	1
  8043  16D0  07A6               	addwf	___xxtofl@arg,f
  8044  16D1  3000               	movlw	0
  8045  16D2  3DA7               	addwfc	___xxtofl@arg+1,f
  8046  16D3  3000               	movlw	0
  8047  16D4  3DA8               	addwfc	___xxtofl@arg+2,f
  8048  16D5  3000               	movlw	0
  8049  16D6  3DA9               	addwfc	___xxtofl@arg+3,f
  8050  16D7  3001               	movlw	1
  8051  16D8                     u3475:	
  8052  16D8  36A9               	lsrf	___xxtofl@arg+3,f
  8053  16D9  0CA8               	rrf	___xxtofl@arg+2,f
  8054  16DA  0CA7               	rrf	___xxtofl@arg+1,f
  8055  16DB  0CA6               	rrf	___xxtofl@arg,f
  8056  16DC  0B89               	decfsz	9,f
  8057  16DD  2ED8               	goto	u3475
  8058  16DE                     l976:	
  8059  16DE  30FF               	movlw	255
  8060  16DF  0529               	andwf	___xxtofl@arg+3,w
  8061  16E0  1903               	btfsc	3,2
  8062  16E1  2EF0               	goto	l3046
  8063  16E2  2ECB               	goto	l3038
  8064  16E3                     l3048:	
  8065  16E3  3002               	movlw	2
  8066  16E4  0225               	subwf	___xxtofl@exp,w
  8067  16E5  1C03               	btfss	3,0
  8068  16E6  2EF2               	goto	l983
  8069  16E7  3001               	movlw	1
  8070  16E8  02A5               	subwf	___xxtofl@exp,f
  8071  16E9  3001               	movlw	1
  8072  16EA                     u3495:	
  8073  16EA  35A6               	lslf	___xxtofl@arg,f
  8074  16EB  0DA7               	rlf	___xxtofl@arg+1,f
  8075  16EC  0DA8               	rlf	___xxtofl@arg+2,f
  8076  16ED  0DA9               	rlf	___xxtofl@arg+3,f
  8077  16EE  0B89               	decfsz	9,f
  8078  16EF  2EEA               	goto	u3495
  8079  16F0                     l3046:	
  8080  16F0  1FA8               	btfss	___xxtofl@arg+2,7
  8081  16F1  2EE3               	goto	l3048
  8082  16F2                     l983:	
  8083  16F2  1825               	btfsc	___xxtofl@exp,0
  8084  16F3  2EFC               	goto	l984
  8085  16F4  30FF               	movlw	255
  8086  16F5  05A6               	andwf	___xxtofl@arg,f
  8087  16F6  30FF               	movlw	255
  8088  16F7  05A7               	andwf	___xxtofl@arg+1,f
  8089  16F8  307F               	movlw	127
  8090  16F9  05A8               	andwf	___xxtofl@arg+2,f
  8091  16FA  30FF               	movlw	255
  8092  16FB  05A9               	andwf	___xxtofl@arg+3,f
  8093  16FC                     l984:	
  8094  16FC  1003               	clrc
  8095  16FD  0CA5               	rrf	___xxtofl@exp,f
  8096  16FE  0825               	movf	___xxtofl@exp,w
  8097  16FF  00A0               	movwf	??___xxtofl
  8098  1700  01A1               	clrf	??___xxtofl+1
  8099  1701  01A2               	clrf	??___xxtofl+2
  8100  1702  01A3               	clrf	??___xxtofl+3
  8101  1703  3018               	movlw	24
  8102  1704                     u3535:	
  8103  1704  35A0               	lslf	??___xxtofl,f
  8104  1705  0DA1               	rlf	??___xxtofl+1,f
  8105  1706  0DA2               	rlf	??___xxtofl+2,f
  8106  1707  0DA3               	rlf	??___xxtofl+3,f
  8107  1708  0B89               	decfsz	9,f
  8108  1709  2F04               	goto	u3535
  8109  170A  0820               	movf	??___xxtofl,w
  8110  170B  04A6               	iorwf	___xxtofl@arg,f
  8111  170C  0821               	movf	??___xxtofl+1,w
  8112  170D  04A7               	iorwf	___xxtofl@arg+1,f
  8113  170E  0822               	movf	??___xxtofl+2,w
  8114  170F  04A8               	iorwf	___xxtofl@arg+2,f
  8115  1710  0823               	movf	??___xxtofl+3,w
  8116  1711  04A9               	iorwf	___xxtofl@arg+3,f
  8117  1712  0824               	movf	___xxtofl@sign,w
  8118  1713  1D03               	btfss	3,2
  8119  1714  1FFC               	btfss	___xxtofl@val+3,7
  8120  1715  2F17               	goto	l3060
  8121  1716  17A9               	bsf	___xxtofl@arg+3,7
  8122  1717                     l3060:	
  8123  1717  0829               	movf	___xxtofl@arg+3,w
  8124  1718  00FC               	movwf	?___xxtofl+3
  8125  1719  0828               	movf	___xxtofl@arg+2,w
  8126  171A  00FB               	movwf	?___xxtofl+2
  8127  171B  0827               	movf	___xxtofl@arg+1,w
  8128  171C  00FA               	movwf	?___xxtofl+1
  8129  171D  0826               	movf	___xxtofl@arg,w
  8130  171E  00F9               	movwf	?___xxtofl
  8131  171F  0008               	return
  8132  1720                     __end_of___xxtofl:	
  8133                           
  8134                           	psect	text17
  8135  103C                     __ptext17:	
  8136 ;; *************** function ___flneg *****************
  8137 ;; Defined at:
  8138 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flneg.c"
  8139 ;; Parameters:    Size  Location     Type
  8140 ;;  f1              4    0[COMMON] unsigned char 
  8141 ;; Auto vars:     Size  Location     Type
  8142 ;;		None
  8143 ;; Return value:  Size  Location     Type
  8144 ;;                  4    0[COMMON] unsigned char 
  8145 ;; Registers used:
  8146 ;;		wreg
  8147 ;; Tracked objects:
  8148 ;;		On entry : 0/0
  8149 ;;		On exit  : 0/0
  8150 ;;		Unchanged: 0/0
  8151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8152 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8155 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8156 ;;Total ram usage:        4 bytes
  8157 ;; Hardware stack levels used:    1
  8158 ;; This function calls:
  8159 ;;		Nothing
  8160 ;; This function is called by:
  8161 ;;		_ftoa
  8162 ;; This function uses a non-reentrant model
  8163 ;;
  8164                           
  8165                           
  8166                           ;psect for function ___flneg
  8167  103C                     ___flneg:	
  8168                           
  8169                           ;incstack = 0
  8170                           ; Regs used in ___flneg: [wreg]
  8171  103C  0873               	movf	___flneg@f1+3,w
  8172  103D  0472               	iorwf	___flneg@f1+2,w
  8173  103E  0471               	iorwf	___flneg@f1+1,w
  8174  103F  0470               	iorwf	___flneg@f1,w
  8175  1040  1903               	skipnz
  8176  1041  0008               	return
  8177  1042  3080               	movlw	128
  8178  1043  06F3               	xorwf	___flneg@f1+3,f
  8179  1044  0008               	return
  8180  1045                     __end_of___flneg:	
  8181                           
  8182                           	psect	text18
  8183  108B                     __ptext18:	
  8184 ;; *************** function _OLED_Write_String *****************
  8185 ;; Defined at:
  8186 ;;		line 285 in file "oled.c"
  8187 ;; Parameters:    Size  Location     Type
  8188 ;;  s               2   12[COMMON] PTR unsigned char 
  8189 ;;		 -> ftoa@buf(17), STR_9(6), STR_8(6), OLED_Write_Integer@s(20), 
  8190 ;;		 -> STR_7(4), STR_6(4), STR_5(4), STR_4(5), 
  8191 ;;		 -> STR_3(5), STR_2(5), STR_1(5), 
  8192 ;; Auto vars:     Size  Location     Type
  8193 ;;		None
  8194 ;; Return value:  Size  Location     Type
  8195 ;;                  1    wreg      void 
  8196 ;; Registers used:
  8197 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8198 ;; Tracked objects:
  8199 ;;		On entry : 0/0
  8200 ;;		On exit  : 0/0
  8201 ;;		Unchanged: 0/0
  8202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8203 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8205 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8206 ;;      Totals:         2       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8207 ;;Total ram usage:        3 bytes
  8208 ;; Hardware stack levels used:    1
  8209 ;; Hardware stack levels required when called:    2
  8210 ;; This function calls:
  8211 ;;		_OLED_PutChar
  8212 ;; This function is called by:
  8213 ;;		_print_data
  8214 ;;		_OLED_Write_Float
  8215 ;;		_OLED_Write_Integer
  8216 ;; This function uses a non-reentrant model
  8217 ;;
  8218                           
  8219                           
  8220                           ;psect for function _OLED_Write_String
  8221  108B                     _OLED_Write_String:	
  8222  108B                     l3070:	
  8223                           ;oled.c: 287: while (*s) OLED_PutChar( *s++);
  8224                           
  8225                           ;incstack = 0
  8226                           ; Regs used in _OLED_Write_String: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8227                           
  8228  108B  087C               	movf	OLED_Write_String@s,w
  8229  108C  0084               	movwf	4
  8230  108D  087D               	movf	OLED_Write_String@s+1,w
  8231  108E  0085               	movwf	5
  8232  108F  0012               	moviw fsr0++
  8233  1090  1903               	btfsc	3,2
  8234  1091  0008               	return
  8235  1092  087C               	movf	OLED_Write_String@s,w
  8236  1093  0084               	movwf	4
  8237  1094  087D               	movf	OLED_Write_String@s+1,w
  8238  1095  0085               	movwf	5
  8239  1096  0800               	movf	0,w	;code access
  8240  1097  3194  2487  3190   	fcall	_OLED_PutChar
  8241  109A  3001               	movlw	1
  8242  109B  07FC               	addwf	OLED_Write_String@s,f
  8243  109C  3000               	movlw	0
  8244  109D  3DFD               	addwfc	OLED_Write_String@s+1,f
  8245  109E  288B               	goto	l3070
  8246  109F                     __end_of_OLED_Write_String:	
  8247                           
  8248                           	psect	text19
  8249  0EAB                     __ptext19:	
  8250 ;; *************** function _pid_control *****************
  8251 ;; Defined at:
  8252 ;;		line 213 in file "main.c"
  8253 ;; Parameters:    Size  Location     Type
  8254 ;;		None
  8255 ;; Auto vars:     Size  Location     Type
  8256 ;;		None
  8257 ;; Return value:  Size  Location     Type
  8258 ;;                  1    wreg      void 
  8259 ;; Registers used:
  8260 ;;		wreg, status,2, status,0, pclath, cstack
  8261 ;; Tracked objects:
  8262 ;;		On entry : 0/0
  8263 ;;		On exit  : 0/0
  8264 ;;		Unchanged: 0/0
  8265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8270 ;;Total ram usage:        0 bytes
  8271 ;; Hardware stack levels used:    1
  8272 ;; Hardware stack levels required when called:    2
  8273 ;; This function calls:
  8274 ;;		_PWM3_LoadDutyValue
  8275 ;;		___fladd
  8276 ;;		___flge
  8277 ;;		___flmul
  8278 ;;		___flsub
  8279 ;;		___fltol
  8280 ;; This function is called by:
  8281 ;;		_main
  8282 ;; This function uses a non-reentrant model
  8283 ;;
  8284                           
  8285                           
  8286                           ;psect for function _pid_control
  8287  0EAB                     _pid_control:	
  8288                           
  8289                           ;main.c: 215: setpoint = 13.8;
  8290                           
  8291                           ;incstack = 0
  8292                           ; Regs used in _pid_control: [wreg+status,2+status,0+pclath+cstack]
  8293  0EAB  3041               	movlw	65
  8294  0EAC  0021               	movlb	1	; select bank1
  8295  0EAD  00B3               	movwf	(_setpoint+3)^(0+128)
  8296  0EAE  305C               	movlw	92
  8297  0EAF  00B2               	movwf	(_setpoint+2)^(0+128)
  8298  0EB0  30CC               	movlw	204
  8299  0EB1  00B1               	movwf	(_setpoint+1)^(0+128)
  8300  0EB2  30CD               	movlw	205
  8301  0EB3  00B0               	movwf	_setpoint^(0+128)
  8302                           
  8303                           ;main.c: 216: measured_value = *bat_volt;
  8304  0EB4  0847               	movf	(_bat_v+3)^(0+128),w
  8305  0EB5  00AF               	movwf	(_measured_value+3)^(0+128)
  8306  0EB6  0846               	movf	(_bat_v+2)^(0+128),w
  8307  0EB7  00AE               	movwf	(_measured_value+2)^(0+128)
  8308  0EB8  0845               	movf	(_bat_v+1)^(0+128),w
  8309  0EB9  00AD               	movwf	(_measured_value+1)^(0+128)
  8310  0EBA  0844               	movf	_bat_v^(0+128),w
  8311  0EBB  00AC               	movwf	_measured_value^(0+128)
  8312                           
  8313                           ;main.c: 218: error = setpoint - measured_value;
  8314  0EBC  082F               	movf	(_measured_value+3)^(0+128),w
  8315  0EBD  0020               	movlb	0	; select bank0
  8316  0EBE  00DB               	movwf	___flsub@a+3
  8317  0EBF  0021               	movlb	1	; select bank1
  8318  0EC0  082E               	movf	(_measured_value+2)^(0+128),w
  8319  0EC1  0020               	movlb	0	; select bank0
  8320  0EC2  00DA               	movwf	___flsub@a+2
  8321  0EC3  0021               	movlb	1	; select bank1
  8322  0EC4  082D               	movf	(_measured_value+1)^(0+128),w
  8323  0EC5  0020               	movlb	0	; select bank0
  8324  0EC6  00D9               	movwf	___flsub@a+1
  8325  0EC7  0021               	movlb	1	; select bank1
  8326  0EC8  082C               	movf	_measured_value^(0+128),w
  8327  0EC9  0020               	movlb	0	; select bank0
  8328  0ECA  00D8               	movwf	___flsub@a
  8329  0ECB  0021               	movlb	1	; select bank1
  8330  0ECC  0833               	movf	(_setpoint+3)^(0+128),w
  8331  0ECD  0020               	movlb	0	; select bank0
  8332  0ECE  00DF               	movwf	___flsub@b+3
  8333  0ECF  0021               	movlb	1	; select bank1
  8334  0ED0  0832               	movf	(_setpoint+2)^(0+128),w
  8335  0ED1  0020               	movlb	0	; select bank0
  8336  0ED2  00DE               	movwf	___flsub@b+2
  8337  0ED3  0021               	movlb	1	; select bank1
  8338  0ED4  0831               	movf	(_setpoint+1)^(0+128),w
  8339  0ED5  0020               	movlb	0	; select bank0
  8340  0ED6  00DD               	movwf	___flsub@b+1
  8341  0ED7  0021               	movlb	1	; select bank1
  8342  0ED8  0830               	movf	_setpoint^(0+128),w
  8343  0ED9  0020               	movlb	0	; select bank0
  8344  0EDA  00DC               	movwf	___flsub@b
  8345  0EDB  3191  2110  318E   	fcall	___flsub
  8346  0EDE  0020               	movlb	0	; select bank0
  8347  0EDF  085B               	movf	?___flsub+3,w
  8348  0EE0  0021               	movlb	1	; select bank1
  8349  0EE1  00AB               	movwf	(_error+3)^(0+128)
  8350  0EE2  0020               	movlb	0	; select bank0
  8351  0EE3  085A               	movf	?___flsub+2,w
  8352  0EE4  0021               	movlb	1	; select bank1
  8353  0EE5  00AA               	movwf	(_error+2)^(0+128)
  8354  0EE6  0020               	movlb	0	; select bank0
  8355  0EE7  0859               	movf	?___flsub+1,w
  8356  0EE8  0021               	movlb	1	; select bank1
  8357  0EE9  00A9               	movwf	(_error+1)^(0+128)
  8358  0EEA  0020               	movlb	0	; select bank0
  8359  0EEB  0858               	movf	?___flsub,w
  8360  0EEC  0021               	movlb	1	; select bank1
  8361  0EED  00A8               	movwf	_error^(0+128)
  8362                           
  8363                           ;main.c: 219: integral = integral + error*dt;
  8364  0EEE  0823               	movf	(_integral+3)^(0+128),w
  8365  0EEF  0020               	movlb	0	; select bank0
  8366  0EF0  00C7               	movwf	___fladd@b+3
  8367  0EF1  0021               	movlb	1	; select bank1
  8368  0EF2  0822               	movf	(_integral+2)^(0+128),w
  8369  0EF3  0020               	movlb	0	; select bank0
  8370  0EF4  00C6               	movwf	___fladd@b+2
  8371  0EF5  0021               	movlb	1	; select bank1
  8372  0EF6  0821               	movf	(_integral+1)^(0+128),w
  8373  0EF7  0020               	movlb	0	; select bank0
  8374  0EF8  00C5               	movwf	___fladd@b+1
  8375  0EF9  0021               	movlb	1	; select bank1
  8376  0EFA  0820               	movf	_integral^(0+128),w
  8377  0EFB  0020               	movlb	0	; select bank0
  8378  0EFC  00C4               	movwf	___fladd@b
  8379  0EFD  3040               	movlw	64
  8380  0EFE  00AD               	movwf	___flmul@b+3
  8381  0EFF  30A0               	movlw	160
  8382  0F00  00AC               	movwf	___flmul@b+2
  8383  0F01  3000               	movlw	0
  8384  0F02  00AB               	movwf	___flmul@b+1
  8385  0F03  3000               	movlw	0
  8386  0F04  00AA               	movwf	___flmul@b
  8387  0F05  0021               	movlb	1	; select bank1
  8388  0F06  082B               	movf	(_error+3)^(0+128),w
  8389  0F07  0020               	movlb	0	; select bank0
  8390  0F08  00B1               	movwf	___flmul@a+3
  8391  0F09  0021               	movlb	1	; select bank1
  8392  0F0A  082A               	movf	(_error+2)^(0+128),w
  8393  0F0B  0020               	movlb	0	; select bank0
  8394  0F0C  00B0               	movwf	___flmul@a+2
  8395  0F0D  0021               	movlb	1	; select bank1
  8396  0F0E  0829               	movf	(_error+1)^(0+128),w
  8397  0F0F  0020               	movlb	0	; select bank0
  8398  0F10  00AF               	movwf	___flmul@a+1
  8399  0F11  0021               	movlb	1	; select bank1
  8400  0F12  0828               	movf	_error^(0+128),w
  8401  0F13  0020               	movlb	0	; select bank0
  8402  0F14  00AE               	movwf	___flmul@a
  8403  0F15  3185  25AA  318E   	fcall	___flmul
  8404  0F18  0020               	movlb	0	; select bank0
  8405  0F19  082D               	movf	?___flmul+3,w
  8406  0F1A  00CB               	movwf	___fladd@a+3
  8407  0F1B  082C               	movf	?___flmul+2,w
  8408  0F1C  00CA               	movwf	___fladd@a+2
  8409  0F1D  082B               	movf	?___flmul+1,w
  8410  0F1E  00C9               	movwf	___fladd@a+1
  8411  0F1F  082A               	movf	?___flmul,w
  8412  0F20  00C8               	movwf	___fladd@a
  8413  0F21  3183  23C8  318E   	fcall	___fladd
  8414  0F24  0020               	movlb	0	; select bank0
  8415  0F25  0847               	movf	?___fladd+3,w
  8416  0F26  0021               	movlb	1	; select bank1
  8417  0F27  00A3               	movwf	(_integral+3)^(0+128)
  8418  0F28  0020               	movlb	0	; select bank0
  8419  0F29  0846               	movf	?___fladd+2,w
  8420  0F2A  0021               	movlb	1	; select bank1
  8421  0F2B  00A2               	movwf	(_integral+2)^(0+128)
  8422  0F2C  0020               	movlb	0	; select bank0
  8423  0F2D  0845               	movf	?___fladd+1,w
  8424  0F2E  0021               	movlb	1	; select bank1
  8425  0F2F  00A1               	movwf	(_integral+1)^(0+128)
  8426  0F30  0020               	movlb	0	; select bank0
  8427  0F31  0844               	movf	?___fladd,w
  8428  0F32  0021               	movlb	1	; select bank1
  8429  0F33  00A0               	movwf	_integral^(0+128)
  8430                           
  8431                           ;main.c: 220: output = Kp*error + Ki*integral;
  8432  0F34  3040               	movlw	64
  8433  0F35  0020               	movlb	0	; select bank0
  8434  0F36  00AD               	movwf	___flmul@b+3
  8435  0F37  3000               	movlw	0
  8436  0F38  00AC               	movwf	___flmul@b+2
  8437  0F39  3000               	movlw	0
  8438  0F3A  00AB               	movwf	___flmul@b+1
  8439  0F3B  3000               	movlw	0
  8440  0F3C  00AA               	movwf	___flmul@b
  8441  0F3D  0021               	movlb	1	; select bank1
  8442  0F3E  0823               	movf	(_integral+3)^(0+128),w
  8443  0F3F  0020               	movlb	0	; select bank0
  8444  0F40  00B1               	movwf	___flmul@a+3
  8445  0F41  0021               	movlb	1	; select bank1
  8446  0F42  0822               	movf	(_integral+2)^(0+128),w
  8447  0F43  0020               	movlb	0	; select bank0
  8448  0F44  00B0               	movwf	___flmul@a+2
  8449  0F45  0021               	movlb	1	; select bank1
  8450  0F46  0821               	movf	(_integral+1)^(0+128),w
  8451  0F47  0020               	movlb	0	; select bank0
  8452  0F48  00AF               	movwf	___flmul@a+1
  8453  0F49  0021               	movlb	1	; select bank1
  8454  0F4A  0820               	movf	_integral^(0+128),w
  8455  0F4B  0020               	movlb	0	; select bank0
  8456  0F4C  00AE               	movwf	___flmul@a
  8457  0F4D  3185  25AA  318E   	fcall	___flmul
  8458  0F50  0020               	movlb	0	; select bank0
  8459  0F51  082D               	movf	?___flmul+3,w
  8460  0F52  00C7               	movwf	___fladd@b+3
  8461  0F53  082C               	movf	?___flmul+2,w
  8462  0F54  00C6               	movwf	___fladd@b+2
  8463  0F55  082B               	movf	?___flmul+1,w
  8464  0F56  00C5               	movwf	___fladd@b+1
  8465  0F57  082A               	movf	?___flmul,w
  8466  0F58  00C4               	movwf	___fladd@b
  8467  0F59  3041               	movlw	65
  8468  0F5A  00AD               	movwf	___flmul@b+3
  8469  0F5B  3020               	movlw	32
  8470  0F5C  00AC               	movwf	___flmul@b+2
  8471  0F5D  3000               	movlw	0
  8472  0F5E  00AB               	movwf	___flmul@b+1
  8473  0F5F  3000               	movlw	0
  8474  0F60  00AA               	movwf	___flmul@b
  8475  0F61  0021               	movlb	1	; select bank1
  8476  0F62  082B               	movf	(_error+3)^(0+128),w
  8477  0F63  0020               	movlb	0	; select bank0
  8478  0F64  00B1               	movwf	___flmul@a+3
  8479  0F65  0021               	movlb	1	; select bank1
  8480  0F66  082A               	movf	(_error+2)^(0+128),w
  8481  0F67  0020               	movlb	0	; select bank0
  8482  0F68  00B0               	movwf	___flmul@a+2
  8483  0F69  0021               	movlb	1	; select bank1
  8484  0F6A  0829               	movf	(_error+1)^(0+128),w
  8485  0F6B  0020               	movlb	0	; select bank0
  8486  0F6C  00AF               	movwf	___flmul@a+1
  8487  0F6D  0021               	movlb	1	; select bank1
  8488  0F6E  0828               	movf	_error^(0+128),w
  8489  0F6F  0020               	movlb	0	; select bank0
  8490  0F70  00AE               	movwf	___flmul@a
  8491  0F71  3185  25AA  318E   	fcall	___flmul
  8492  0F74  0020               	movlb	0	; select bank0
  8493  0F75  082D               	movf	?___flmul+3,w
  8494  0F76  00CB               	movwf	___fladd@a+3
  8495  0F77  082C               	movf	?___flmul+2,w
  8496  0F78  00CA               	movwf	___fladd@a+2
  8497  0F79  082B               	movf	?___flmul+1,w
  8498  0F7A  00C9               	movwf	___fladd@a+1
  8499  0F7B  082A               	movf	?___flmul,w
  8500  0F7C  00C8               	movwf	___fladd@a
  8501  0F7D  3183  23C8  318E   	fcall	___fladd
  8502  0F80  0020               	movlb	0	; select bank0
  8503  0F81  0847               	movf	?___fladd+3,w
  8504  0F82  0021               	movlb	1	; select bank1
  8505  0F83  00A7               	movwf	(_output+3)^(0+128)
  8506  0F84  0020               	movlb	0	; select bank0
  8507  0F85  0846               	movf	?___fladd+2,w
  8508  0F86  0021               	movlb	1	; select bank1
  8509  0F87  00A6               	movwf	(_output+2)^(0+128)
  8510  0F88  0020               	movlb	0	; select bank0
  8511  0F89  0845               	movf	?___fladd+1,w
  8512  0F8A  0021               	movlb	1	; select bank1
  8513  0F8B  00A5               	movwf	(_output+1)^(0+128)
  8514  0F8C  0020               	movlb	0	; select bank0
  8515  0F8D  0844               	movf	?___fladd,w
  8516  0F8E  0021               	movlb	1	; select bank1
  8517  0F8F  00A4               	movwf	_output^(0+128)
  8518                           
  8519                           ;main.c: 221: previous_error = error;
  8520  0F90  082B               	movf	(_error+3)^(0+128),w
  8521  0F91  0022               	movlb	2	; select bank2
  8522  0F92  00AB               	movwf	(_previous_error+3)^(0+256)
  8523  0F93  0021               	movlb	1	; select bank1
  8524  0F94  082A               	movf	(_error+2)^(0+128),w
  8525  0F95  0022               	movlb	2	; select bank2
  8526  0F96  00AA               	movwf	(_previous_error+2)^(0+256)
  8527  0F97  0021               	movlb	1	; select bank1
  8528  0F98  0829               	movf	(_error+1)^(0+128),w
  8529  0F99  0022               	movlb	2	; select bank2
  8530  0F9A  00A9               	movwf	(_previous_error+1)^(0+256)
  8531  0F9B  0021               	movlb	1	; select bank1
  8532  0F9C  0828               	movf	_error^(0+128),w
  8533  0F9D  0022               	movlb	2	; select bank2
  8534  0F9E  00A8               	movwf	_previous_error^(0+256)
  8535                           
  8536                           ;main.c: 223: duty = output;
  8537  0F9F  0021               	movlb	1	; select bank1
  8538  0FA0  0827               	movf	(_output+3)^(0+128),w
  8539  0FA1  00EC               	movwf	(_duty+3)^(0+128)
  8540  0FA2  0826               	movf	(_output+2)^(0+128),w
  8541  0FA3  00EB               	movwf	(_duty+2)^(0+128)
  8542  0FA4  0825               	movf	(_output+1)^(0+128),w
  8543  0FA5  00EA               	movwf	(_duty+1)^(0+128)
  8544  0FA6  0824               	movf	_output^(0+128),w
  8545  0FA7  00E9               	movwf	_duty^(0+128)
  8546                           
  8547                           ;main.c: 225: if (duty > 396)
  8548  0FA8  3043               	movlw	67
  8549  0FA9  00F3               	movwf	___flge@ff1+3
  8550  0FAA  30C6               	movlw	198
  8551  0FAB  00F2               	movwf	___flge@ff1+2
  8552  0FAC  3000               	movlw	0
  8553  0FAD  00F1               	movwf	___flge@ff1+1
  8554  0FAE  3000               	movlw	0
  8555  0FAF  00F0               	movwf	___flge@ff1
  8556  0FB0  086C               	movf	(_duty+3)^(0+128),w
  8557  0FB1  00F7               	movwf	___flge@ff2+3
  8558  0FB2  086B               	movf	(_duty+2)^(0+128),w
  8559  0FB3  00F6               	movwf	___flge@ff2+2
  8560  0FB4  086A               	movf	(_duty+1)^(0+128),w
  8561  0FB5  00F5               	movwf	___flge@ff2+1
  8562  0FB6  0869               	movf	_duty^(0+128),w
  8563  0FB7  00F4               	movwf	___flge@ff2
  8564  0FB8  3194  24F0  318E   	fcall	___flge
  8565  0FBB  1803               	btfsc	3,0
  8566  0FBC  2FC6               	goto	l3406
  8567                           
  8568                           ;main.c: 226: {;main.c: 227: duty = 396;
  8569  0FBD  3043               	movlw	67
  8570  0FBE  0021               	movlb	1	; select bank1
  8571  0FBF  00EC               	movwf	(_duty+3)^(0+128)
  8572  0FC0  30C6               	movlw	198
  8573  0FC1  00EB               	movwf	(_duty+2)^(0+128)
  8574  0FC2  3000               	movlw	0
  8575  0FC3  00EA               	movwf	(_duty+1)^(0+128)
  8576  0FC4  3000               	movlw	0
  8577  0FC5  00E9               	movwf	_duty^(0+128)
  8578  0FC6                     l3406:	
  8579                           
  8580                           ;main.c: 228: };main.c: 230: if (duty < 40)
  8581  0FC6  0021               	movlb	1	; select bank1
  8582  0FC7  086C               	movf	(_duty+3)^(0+128),w
  8583  0FC8  00F3               	movwf	___flge@ff1+3
  8584  0FC9  086B               	movf	(_duty+2)^(0+128),w
  8585  0FCA  00F2               	movwf	___flge@ff1+2
  8586  0FCB  086A               	movf	(_duty+1)^(0+128),w
  8587  0FCC  00F1               	movwf	___flge@ff1+1
  8588  0FCD  0869               	movf	_duty^(0+128),w
  8589  0FCE  00F0               	movwf	___flge@ff1
  8590  0FCF  3042               	movlw	66
  8591  0FD0  00F7               	movwf	___flge@ff2+3
  8592  0FD1  3020               	movlw	32
  8593  0FD2  00F6               	movwf	___flge@ff2+2
  8594  0FD3  3000               	movlw	0
  8595  0FD4  00F5               	movwf	___flge@ff2+1
  8596  0FD5  3000               	movlw	0
  8597  0FD6  00F4               	movwf	___flge@ff2
  8598  0FD7  3194  24F0  318E   	fcall	___flge
  8599  0FDA  1803               	btfsc	3,0
  8600  0FDB  2FE5               	goto	l3410
  8601                           
  8602                           ;main.c: 231: {;main.c: 232: duty = 40;
  8603  0FDC  3042               	movlw	66
  8604  0FDD  0021               	movlb	1	; select bank1
  8605  0FDE  00EC               	movwf	(_duty+3)^(0+128)
  8606  0FDF  3020               	movlw	32
  8607  0FE0  00EB               	movwf	(_duty+2)^(0+128)
  8608  0FE1  3000               	movlw	0
  8609  0FE2  00EA               	movwf	(_duty+1)^(0+128)
  8610  0FE3  3000               	movlw	0
  8611  0FE4  00E9               	movwf	_duty^(0+128)
  8612  0FE5                     l3410:	
  8613                           
  8614                           ;main.c: 233: };main.c: 235: PWM3_LoadDutyValue(duty);
  8615  0FE5  0021               	movlb	1	; select bank1
  8616  0FE6  086C               	movf	(_duty+3)^(0+128),w
  8617  0FE7  0020               	movlb	0	; select bank0
  8618  0FE8  00DB               	movwf	___fltol@f1+3
  8619  0FE9  0021               	movlb	1	; select bank1
  8620  0FEA  086B               	movf	(_duty+2)^(0+128),w
  8621  0FEB  0020               	movlb	0	; select bank0
  8622  0FEC  00DA               	movwf	___fltol@f1+2
  8623  0FED  0021               	movlb	1	; select bank1
  8624  0FEE  086A               	movf	(_duty+1)^(0+128),w
  8625  0FEF  0020               	movlb	0	; select bank0
  8626  0FF0  00D9               	movwf	___fltol@f1+1
  8627  0FF1  0021               	movlb	1	; select bank1
  8628  0FF2  0869               	movf	_duty^(0+128),w
  8629  0FF3  0020               	movlb	0	; select bank0
  8630  0FF4  00D8               	movwf	___fltol@f1
  8631  0FF5  3193  23BA  318E   	fcall	___fltol
  8632  0FF8  0020               	movlb	0	; select bank0
  8633  0FF9  0859               	movf	?___fltol+1,w
  8634  0FFA  00E4               	movwf	PWM3_LoadDutyValue@dutyValue+1
  8635  0FFB  0858               	movf	?___fltol,w
  8636  0FFC  00E3               	movwf	PWM3_LoadDutyValue@dutyValue
  8637  0FFD  3190  209F         	fcall	_PWM3_LoadDutyValue
  8638  0FFF  0008               	return
  8639  1000                     __end_of_pid_control:	
  8640                           
  8641                           	psect	text20
  8642  13BA                     __ptext20:	
  8643 ;; *************** function ___fltol *****************
  8644 ;; Defined at:
  8645 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fltol.c"
  8646 ;; Parameters:    Size  Location     Type
  8647 ;;  f1              4   56[BANK0 ] void 
  8648 ;; Auto vars:     Size  Location     Type
  8649 ;;  exp1            1   66[BANK0 ] unsigned char 
  8650 ;;  sign1           1   65[BANK0 ] unsigned char 
  8651 ;; Return value:  Size  Location     Type
  8652 ;;                  4   56[BANK0 ] long 
  8653 ;; Registers used:
  8654 ;;		wreg, status,2, status,0
  8655 ;; Tracked objects:
  8656 ;;		On entry : 0/0
  8657 ;;		On exit  : 0/0
  8658 ;;		Unchanged: 0/0
  8659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8660 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8661 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8662 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8663 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8664 ;;Total ram usage:       11 bytes
  8665 ;; Hardware stack levels used:    1
  8666 ;; This function calls:
  8667 ;;		Nothing
  8668 ;; This function is called by:
  8669 ;;		_roundedVal
  8670 ;;		_pid_control
  8671 ;;		_ftoa
  8672 ;; This function uses a non-reentrant model
  8673 ;;
  8674                           
  8675                           
  8676                           ;psect for function ___fltol
  8677  13BA                     ___fltol:	
  8678                           
  8679                           ;incstack = 0
  8680                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8681  13BA  1003               	clrc
  8682  13BB  0020               	movlb	0	; select bank0
  8683  13BC  0D5A               	rlf	___fltol@f1+2,w
  8684  13BD  0D5B               	rlf	___fltol@f1+3,w
  8685  13BE  00DC               	movwf	??___fltol
  8686  13BF  085C               	movf	??___fltol,w
  8687  13C0  00E2               	movwf	___fltol@exp1
  8688  13C1  0862               	movf	___fltol@exp1,w
  8689  13C2  1D03               	btfss	3,2
  8690  13C3  2BCD               	goto	l2844
  8691  13C4                     l2840:	
  8692  13C4  3000               	movlw	0
  8693  13C5  00DB               	movwf	?___fltol+3
  8694  13C6  3000               	movlw	0
  8695  13C7  00DA               	movwf	?___fltol+2
  8696  13C8  3000               	movlw	0
  8697  13C9  00D9               	movwf	?___fltol+1
  8698  13CA  3000               	movlw	0
  8699  13CB  00D8               	movwf	?___fltol
  8700  13CC  0008               	return
  8701  13CD                     l2844:	
  8702  13CD  0858               	movf	___fltol@f1,w
  8703  13CE  00DC               	movwf	??___fltol
  8704  13CF  0859               	movf	___fltol@f1+1,w
  8705  13D0  00DD               	movwf	??___fltol+1
  8706  13D1  085A               	movf	___fltol@f1+2,w
  8707  13D2  00DE               	movwf	??___fltol+2
  8708  13D3  085B               	movf	___fltol@f1+3,w
  8709  13D4  00DF               	movwf	??___fltol+3
  8710  13D5  301F               	movlw	31
  8711  13D6                     u3075:	
  8712  13D6  36DF               	lsrf	??___fltol+3,f
  8713  13D7  0CDE               	rrf	??___fltol+2,f
  8714  13D8  0CDD               	rrf	??___fltol+1,f
  8715  13D9  0CDC               	rrf	??___fltol,f
  8716  13DA  0B89               	decfsz	9,f
  8717  13DB  2BD6               	goto	u3075
  8718  13DC  085C               	movf	??___fltol,w
  8719  13DD  00E0               	movwf	??___fltol+4
  8720  13DE  0860               	movf	??___fltol+4,w
  8721  13DF  00E1               	movwf	___fltol@sign1
  8722  13E0  17DA               	bsf	___fltol@f1+2,7
  8723  13E1  30FF               	movlw	255
  8724  13E2  05D8               	andwf	___fltol@f1,f
  8725  13E3  30FF               	movlw	255
  8726  13E4  05D9               	andwf	___fltol@f1+1,f
  8727  13E5  30FF               	movlw	255
  8728  13E6  05DA               	andwf	___fltol@f1+2,f
  8729  13E7  3000               	movlw	0
  8730  13E8  05DB               	andwf	___fltol@f1+3,f
  8731  13E9  3096               	movlw	150
  8732  13EA  02E2               	subwf	___fltol@exp1,f
  8733  13EB  1FE2               	btfss	___fltol@exp1,7
  8734  13EC  2C00               	goto	l2862
  8735  13ED  0862               	movf	___fltol@exp1,w
  8736  13EE  3A80               	xorlw	128
  8737  13EF  3E97               	addlw	151
  8738  13F0  1C03               	btfss	3,0
  8739  13F1  2BC4               	goto	l2840
  8740  13F2                     l2860:	
  8741  13F2  3001               	movlw	1
  8742  13F3                     u3105:	
  8743  13F3  36DB               	lsrf	___fltol@f1+3,f
  8744  13F4  0CDA               	rrf	___fltol@f1+2,f
  8745  13F5  0CD9               	rrf	___fltol@f1+1,f
  8746  13F6  0CD8               	rrf	___fltol@f1,f
  8747  13F7  0B89               	decfsz	9,f
  8748  13F8  2BF3               	goto	u3105
  8749  13F9  3001               	movlw	1
  8750  13FA  00DC               	movwf	??___fltol
  8751  13FB  085C               	movf	??___fltol,w
  8752  13FC  07E2               	addwf	___fltol@exp1,f
  8753  13FD  1903               	btfsc	3,2
  8754  13FE  2C11               	goto	l2870
  8755  13FF  2BF2               	goto	l2860
  8756  1400                     l2862:	
  8757  1400  3020               	movlw	32
  8758  1401  0262               	subwf	___fltol@exp1,w
  8759  1402  1803               	btfsc	3,0
  8760  1403  2BC4               	goto	l2840
  8761  1404                     l736:	
  8762  1404  0862               	movf	___fltol@exp1,w
  8763  1405  1903               	btfsc	3,2
  8764  1406  2C11               	goto	l2870
  8765  1407  3001               	movlw	1
  8766  1408                     u3135:	
  8767  1408  35D8               	lslf	___fltol@f1,f
  8768  1409  0DD9               	rlf	___fltol@f1+1,f
  8769  140A  0DDA               	rlf	___fltol@f1+2,f
  8770  140B  0DDB               	rlf	___fltol@f1+3,f
  8771  140C  0B89               	decfsz	9,f
  8772  140D  2C08               	goto	u3135
  8773  140E  3001               	movlw	1
  8774  140F  02E2               	subwf	___fltol@exp1,f
  8775  1410  2C04               	goto	l736
  8776  1411                     l2870:	
  8777  1411  0861               	movf	___fltol@sign1,w
  8778  1412  1903               	btfsc	3,2
  8779  1413  0008               	return
  8780  1414  09D8               	comf	___fltol@f1,f
  8781  1415  09D9               	comf	___fltol@f1+1,f
  8782  1416  09DA               	comf	___fltol@f1+2,f
  8783  1417  09DB               	comf	___fltol@f1+3,f
  8784  1418  0AD8               	incf	___fltol@f1,f
  8785  1419  1903               	skipnz
  8786  141A  0AD9               	incf	___fltol@f1+1,f
  8787  141B  1903               	skipnz
  8788  141C  0ADA               	incf	___fltol@f1+2,f
  8789  141D  1903               	skipnz
  8790  141E  0ADB               	incf	___fltol@f1+3,f
  8791  141F  0008               	return
  8792  1420                     __end_of___fltol:	
  8793                           
  8794                           	psect	text21
  8795  1110                     __ptext21:	
  8796 ;; *************** function ___flsub *****************
  8797 ;; Defined at:
  8798 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  8799 ;; Parameters:    Size  Location     Type
  8800 ;;  a               4   56[BANK0 ] long 
  8801 ;;  b               4   60[BANK0 ] long 
  8802 ;; Auto vars:     Size  Location     Type
  8803 ;;		None
  8804 ;; Return value:  Size  Location     Type
  8805 ;;                  4   56[BANK0 ] long 
  8806 ;; Registers used:
  8807 ;;		wreg, status,2, status,0, pclath, cstack
  8808 ;; Tracked objects:
  8809 ;;		On entry : 0/0
  8810 ;;		On exit  : 0/0
  8811 ;;		Unchanged: 0/0
  8812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8813 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8816 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8817 ;;Total ram usage:        8 bytes
  8818 ;; Hardware stack levels used:    1
  8819 ;; Hardware stack levels required when called:    1
  8820 ;; This function calls:
  8821 ;;		___fladd
  8822 ;; This function is called by:
  8823 ;;		_pid_control
  8824 ;;		_ftoa
  8825 ;; This function uses a non-reentrant model
  8826 ;;
  8827                           
  8828                           
  8829                           ;psect for function ___flsub
  8830  1110                     ___flsub:	
  8831                           
  8832                           ;incstack = 0
  8833                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
  8834  1110  3080               	movlw	128
  8835  1111  0020               	movlb	0	; select bank0
  8836  1112  06DB               	xorwf	___flsub@a+3,f
  8837  1113  085F               	movf	___flsub@b+3,w
  8838  1114  00C7               	movwf	___fladd@b+3
  8839  1115  085E               	movf	___flsub@b+2,w
  8840  1116  00C6               	movwf	___fladd@b+2
  8841  1117  085D               	movf	___flsub@b+1,w
  8842  1118  00C5               	movwf	___fladd@b+1
  8843  1119  085C               	movf	___flsub@b,w
  8844  111A  00C4               	movwf	___fladd@b
  8845  111B  085B               	movf	___flsub@a+3,w
  8846  111C  00CB               	movwf	___fladd@a+3
  8847  111D  085A               	movf	___flsub@a+2,w
  8848  111E  00CA               	movwf	___fladd@a+2
  8849  111F  0859               	movf	___flsub@a+1,w
  8850  1120  00C9               	movwf	___fladd@a+1
  8851  1121  0858               	movf	___flsub@a,w
  8852  1122  00C8               	movwf	___fladd@a
  8853  1123  3183  23C8         	fcall	___fladd
  8854  1125  0020               	movlb	0	; select bank0
  8855  1126  0847               	movf	?___fladd+3,w
  8856  1127  00DB               	movwf	?___flsub+3
  8857  1128  0846               	movf	?___fladd+2,w
  8858  1129  00DA               	movwf	?___flsub+2
  8859  112A  0845               	movf	?___fladd+1,w
  8860  112B  00D9               	movwf	?___flsub+1
  8861  112C  0844               	movf	?___fladd,w
  8862  112D  00D8               	movwf	?___flsub
  8863  112E  0008               	return
  8864  112F                     __end_of___flsub:	
  8865                           
  8866                           	psect	text22
  8867  03C8                     __ptext22:	
  8868 ;; *************** function ___fladd *****************
  8869 ;; Defined at:
  8870 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  8871 ;; Parameters:    Size  Location     Type
  8872 ;;  b               4   36[BANK0 ] long 
  8873 ;;  a               4   40[BANK0 ] long 
  8874 ;; Auto vars:     Size  Location     Type
  8875 ;;  grs             1   55[BANK0 ] unsigned char 
  8876 ;;  bexp            1   54[BANK0 ] unsigned char 
  8877 ;;  aexp            1   53[BANK0 ] unsigned char 
  8878 ;;  signs           1   52[BANK0 ] unsigned char 
  8879 ;; Return value:  Size  Location     Type
  8880 ;;                  4   36[BANK0 ] unsigned char 
  8881 ;; Registers used:
  8882 ;;		wreg, status,2, status,0
  8883 ;; Tracked objects:
  8884 ;;		On entry : 0/0
  8885 ;;		On exit  : 0/0
  8886 ;;		Unchanged: 0/0
  8887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8888 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8889 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8890 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8891 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8892 ;;Total ram usage:       20 bytes
  8893 ;; Hardware stack levels used:    1
  8894 ;; This function calls:
  8895 ;;		Nothing
  8896 ;; This function is called by:
  8897 ;;		_roundedVal
  8898 ;;		_pid_control
  8899 ;;		_read_current
  8900 ;;		_read_voltage
  8901 ;;		_read_panel
  8902 ;;		___flsub
  8903 ;; This function uses a non-reentrant model
  8904 ;;
  8905                           
  8906                           
  8907                           ;psect for function ___fladd
  8908  03C8                     ___fladd:	
  8909                           
  8910                           ;incstack = 0
  8911                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  8912  03C8  0020               	movlb	0	; select bank0
  8913  03C9  0847               	movf	___fladd@b+3,w
  8914  03CA  3980               	andlw	128
  8915  03CB  00CC               	movwf	??___fladd
  8916  03CC  084C               	movf	??___fladd,w
  8917  03CD  00D4               	movwf	___fladd@signs
  8918  03CE  3547               	lslf	___fladd@b+3,w
  8919  03CF  00CC               	movwf	??___fladd
  8920  03D0  084C               	movf	??___fladd,w
  8921  03D1  00D6               	movwf	___fladd@bexp
  8922  03D2  1BC6               	btfsc	___fladd@b+2,7
  8923  03D3  1456               	bsf	___fladd@bexp,0
  8924  03D4  0856               	movf	___fladd@bexp,w
  8925  03D5  1903               	btfsc	3,2
  8926  03D6  2BE5               	goto	l2486
  8927  03D7  0A56               	incf	___fladd@bexp,w
  8928  03D8  1D03               	btfss	3,2
  8929  03D9  2BE2               	goto	l2482
  8930  03DA  3000               	movlw	0
  8931  03DB  00C7               	movwf	___fladd@b+3
  8932  03DC  3000               	movlw	0
  8933  03DD  00C6               	movwf	___fladd@b+2
  8934  03DE  3000               	movlw	0
  8935  03DF  00C5               	movwf	___fladd@b+1
  8936  03E0  3000               	movlw	0
  8937  03E1  00C4               	movwf	___fladd@b
  8938  03E2                     l2482:	
  8939  03E2  17C6               	bsf	___fladd@b+2,7
  8940  03E3  01C7               	clrf	___fladd@b+3
  8941  03E4  2BED               	goto	l2488
  8942  03E5                     l2486:	
  8943  03E5  3000               	movlw	0
  8944  03E6  00C7               	movwf	___fladd@b+3
  8945  03E7  3000               	movlw	0
  8946  03E8  00C6               	movwf	___fladd@b+2
  8947  03E9  3000               	movlw	0
  8948  03EA  00C5               	movwf	___fladd@b+1
  8949  03EB  3000               	movlw	0
  8950  03EC  00C4               	movwf	___fladd@b
  8951  03ED                     l2488:	
  8952  03ED  084B               	movf	___fladd@a+3,w
  8953  03EE  3980               	andlw	128
  8954  03EF  00CC               	movwf	??___fladd
  8955  03F0  084C               	movf	??___fladd,w
  8956  03F1  00D5               	movwf	___fladd@aexp
  8957  03F2  0855               	movf	___fladd@aexp,w
  8958  03F3  0654               	xorwf	___fladd@signs,w
  8959  03F4  1D03               	btfss	3,2
  8960  03F5  1754               	bsf	___fladd@signs,6
  8961  03F6  354B               	lslf	___fladd@a+3,w
  8962  03F7  00CC               	movwf	??___fladd
  8963  03F8  084C               	movf	??___fladd,w
  8964  03F9  00D5               	movwf	___fladd@aexp
  8965  03FA  1BCA               	btfsc	___fladd@a+2,7
  8966  03FB  1455               	bsf	___fladd@aexp,0
  8967  03FC  0855               	movf	___fladd@aexp,w
  8968  03FD  1903               	btfsc	3,2
  8969  03FE  2C0D               	goto	l2510
  8970  03FF  0A55               	incf	___fladd@aexp,w
  8971  0400  1D03               	btfss	3,2
  8972  0401  2C0A               	goto	l2506
  8973  0402  3000               	movlw	0
  8974  0403  00CB               	movwf	___fladd@a+3
  8975  0404  3000               	movlw	0
  8976  0405  00CA               	movwf	___fladd@a+2
  8977  0406  3000               	movlw	0
  8978  0407  00C9               	movwf	___fladd@a+1
  8979  0408  3000               	movlw	0
  8980  0409  00C8               	movwf	___fladd@a
  8981  040A                     l2506:	
  8982  040A  17CA               	bsf	___fladd@a+2,7
  8983  040B  01CB               	clrf	___fladd@a+3
  8984  040C  2C15               	goto	l836
  8985  040D                     l2510:	
  8986  040D  3000               	movlw	0
  8987  040E  00CB               	movwf	___fladd@a+3
  8988  040F  3000               	movlw	0
  8989  0410  00CA               	movwf	___fladd@a+2
  8990  0411  3000               	movlw	0
  8991  0412  00C9               	movwf	___fladd@a+1
  8992  0413  3000               	movlw	0
  8993  0414  00C8               	movwf	___fladd@a
  8994  0415                     l836:	
  8995  0415  0856               	movf	___fladd@bexp,w
  8996  0416  0255               	subwf	___fladd@aexp,w
  8997  0417  1803               	skipnc
  8998  0418  2C5B               	goto	l2546
  8999  0419  1F54               	btfss	___fladd@signs,6
  9000  041A  2C1F               	goto	l2516
  9001  041B  3080               	movlw	128
  9002  041C  00CC               	movwf	??___fladd
  9003  041D  084C               	movf	??___fladd,w
  9004  041E  06D4               	xorwf	___fladd@signs,f
  9005  041F                     l2516:	
  9006  041F  0856               	movf	___fladd@bexp,w
  9007  0420  00CC               	movwf	??___fladd
  9008  0421  084C               	movf	??___fladd,w
  9009  0422  00D7               	movwf	___fladd@grs
  9010  0423  0855               	movf	___fladd@aexp,w
  9011  0424  00CC               	movwf	??___fladd
  9012  0425  084C               	movf	??___fladd,w
  9013  0426  00D6               	movwf	___fladd@bexp
  9014  0427  0857               	movf	___fladd@grs,w
  9015  0428  00CC               	movwf	??___fladd
  9016  0429  084C               	movf	??___fladd,w
  9017  042A  00D5               	movwf	___fladd@aexp
  9018  042B  0844               	movf	___fladd@b,w
  9019  042C  00CC               	movwf	??___fladd
  9020  042D  084C               	movf	??___fladd,w
  9021  042E  00D7               	movwf	___fladd@grs
  9022  042F  0848               	movf	___fladd@a,w
  9023  0430  00CC               	movwf	??___fladd
  9024  0431  084C               	movf	??___fladd,w
  9025  0432  00C4               	movwf	___fladd@b
  9026  0433  0857               	movf	___fladd@grs,w
  9027  0434  00CC               	movwf	??___fladd
  9028  0435  084C               	movf	??___fladd,w
  9029  0436  00C8               	movwf	___fladd@a
  9030  0437  0845               	movf	___fladd@b+1,w
  9031  0438  00CC               	movwf	??___fladd
  9032  0439  084C               	movf	??___fladd,w
  9033  043A  00D7               	movwf	___fladd@grs
  9034  043B  0849               	movf	___fladd@a+1,w
  9035  043C  00CC               	movwf	??___fladd
  9036  043D  084C               	movf	??___fladd,w
  9037  043E  00C5               	movwf	___fladd@b+1
  9038  043F  0857               	movf	___fladd@grs,w
  9039  0440  00CC               	movwf	??___fladd
  9040  0441  084C               	movf	??___fladd,w
  9041  0442  00C9               	movwf	___fladd@a+1
  9042  0443  0846               	movf	___fladd@b+2,w
  9043  0444  00CC               	movwf	??___fladd
  9044  0445  084C               	movf	??___fladd,w
  9045  0446  00D7               	movwf	___fladd@grs
  9046  0447  084A               	movf	___fladd@a+2,w
  9047  0448  00CC               	movwf	??___fladd
  9048  0449  084C               	movf	??___fladd,w
  9049  044A  00C6               	movwf	___fladd@b+2
  9050  044B  0857               	movf	___fladd@grs,w
  9051  044C  00CC               	movwf	??___fladd
  9052  044D  084C               	movf	??___fladd,w
  9053  044E  00CA               	movwf	___fladd@a+2
  9054  044F  0847               	movf	___fladd@b+3,w
  9055  0450  00CC               	movwf	??___fladd
  9056  0451  084C               	movf	??___fladd,w
  9057  0452  00D7               	movwf	___fladd@grs
  9058  0453  084B               	movf	___fladd@a+3,w
  9059  0454  00CC               	movwf	??___fladd
  9060  0455  084C               	movf	??___fladd,w
  9061  0456  00C7               	movwf	___fladd@b+3
  9062  0457  0857               	movf	___fladd@grs,w
  9063  0458  00CC               	movwf	??___fladd
  9064  0459  084C               	movf	??___fladd,w
  9065  045A  00CB               	movwf	___fladd@a+3
  9066  045B                     l2546:	
  9067  045B  01D7               	clrf	___fladd@grs
  9068  045C  0855               	movf	___fladd@aexp,w
  9069  045D  00CC               	movwf	??___fladd
  9070  045E  01CD               	clrf	??___fladd+1
  9071  045F  084D               	movf	??___fladd+1,w
  9072  0460  00CF               	movwf	??___fladd+3
  9073  0461  0856               	movf	___fladd@bexp,w
  9074  0462  024C               	subwf	??___fladd,w
  9075  0463  00CE               	movwf	??___fladd+2
  9076  0464  1C03               	skipc
  9077  0465  03CF               	decf	??___fladd+3,f
  9078  0466  084F               	movf	??___fladd+3,w
  9079  0467  3A80               	xorlw	128
  9080  0468  00D0               	movwf	??___fladd+4
  9081  0469  3080               	movlw	128
  9082  046A  0250               	subwf	??___fladd+4,w
  9083  046B  1D03               	skipz
  9084  046C  2C6F               	goto	u2435
  9085  046D  301A               	movlw	26
  9086  046E  024E               	subwf	??___fladd+2,w
  9087  046F                     u2435:	
  9088  046F  1C03               	skipc
  9089  0470  2CA3               	goto	l2564
  9090  0471  0020               	movlb	0	; select bank0
  9091  0472  0847               	movf	___fladd@b+3,w
  9092  0473  0446               	iorwf	___fladd@b+2,w
  9093  0474  0445               	iorwf	___fladd@b+1,w
  9094  0475  0444               	iorwf	___fladd@b,w
  9095  0476  1903               	btfsc	3,2
  9096  0477  2C7A               	goto	u2440
  9097  0478  3001               	movlw	1
  9098  0479  2C7B               	goto	u2450
  9099  047A                     u2440:	
  9100  047A  3000               	movlw	0
  9101  047B                     u2450:	
  9102  047B  00CC               	movwf	??___fladd
  9103  047C  084C               	movf	??___fladd,w
  9104  047D  00D7               	movwf	___fladd@grs
  9105  047E  3000               	movlw	0
  9106  047F  00C7               	movwf	___fladd@b+3
  9107  0480  3000               	movlw	0
  9108  0481  00C6               	movwf	___fladd@b+2
  9109  0482  3000               	movlw	0
  9110  0483  00C5               	movwf	___fladd@b+1
  9111  0484  3000               	movlw	0
  9112  0485  00C4               	movwf	___fladd@b
  9113  0486  0855               	movf	___fladd@aexp,w
  9114  0487  00CC               	movwf	??___fladd
  9115  0488  084C               	movf	??___fladd,w
  9116  0489  00D6               	movwf	___fladd@bexp
  9117  048A  2CA8               	goto	l840
  9118  048B                     l842:	
  9119  048B  1C57               	btfss	___fladd@grs,0
  9120  048C  2C93               	goto	l2554
  9121  048D  3657               	lsrf	___fladd@grs,w
  9122  048E  3801               	iorlw	1
  9123  048F  00CC               	movwf	??___fladd
  9124  0490  084C               	movf	??___fladd,w
  9125  0491  00D7               	movwf	___fladd@grs
  9126  0492  2C95               	goto	l2556
  9127  0493                     l2554:	
  9128  0493  1003               	clrc
  9129  0494  0CD7               	rrf	___fladd@grs,f
  9130  0495                     l2556:	
  9131  0495  1844               	btfsc	___fladd@b,0
  9132  0496  17D7               	bsf	___fladd@grs,7
  9133  0497  3001               	movlw	1
  9134  0498  00CC               	movwf	??___fladd
  9135  0499                     u2485:	
  9136  0499  37C7               	asrf	___fladd@b+3,f
  9137  049A  0CC6               	rrf	___fladd@b+2,f
  9138  049B  0CC5               	rrf	___fladd@b+1,f
  9139  049C  0CC4               	rrf	___fladd@b,f
  9140  049D  0BCC               	decfsz	??___fladd& (0+127),f
  9141  049E  2C99               	goto	u2485
  9142  049F  3001               	movlw	1
  9143  04A0  00CC               	movwf	??___fladd
  9144  04A1  084C               	movf	??___fladd,w
  9145  04A2  07D6               	addwf	___fladd@bexp,f
  9146  04A3                     l2564:	
  9147  04A3  0020               	movlb	0	; select bank0
  9148  04A4  0855               	movf	___fladd@aexp,w
  9149  04A5  0256               	subwf	___fladd@bexp,w
  9150  04A6  1C03               	skipc
  9151  04A7  2C8B               	goto	l842
  9152  04A8                     l840:	
  9153  04A8  1B54               	btfsc	___fladd@signs,6
  9154  04A9  2CD9               	goto	l2590
  9155  04AA  0856               	movf	___fladd@bexp,w
  9156  04AB  1D03               	btfss	3,2
  9157  04AC  2CB6               	goto	l2572
  9158  04AD  3000               	movlw	0
  9159  04AE  00C7               	movwf	?___fladd+3
  9160  04AF  3000               	movlw	0
  9161  04B0  00C6               	movwf	?___fladd+2
  9162  04B1  3000               	movlw	0
  9163  04B2  00C5               	movwf	?___fladd+1
  9164  04B3  3000               	movlw	0
  9165  04B4  00C4               	movwf	?___fladd
  9166  04B5  0008               	return
  9167  04B6                     l2572:	
  9168  04B6  0848               	movf	___fladd@a,w
  9169  04B7  07C4               	addwf	___fladd@b,f
  9170  04B8  0849               	movf	___fladd@a+1,w
  9171  04B9  3DC5               	addwfc	___fladd@b+1,f
  9172  04BA  084A               	movf	___fladd@a+2,w
  9173  04BB  3DC6               	addwfc	___fladd@b+2,f
  9174  04BC  084B               	movf	___fladd@a+3,w
  9175  04BD  3DC7               	addwfc	___fladd@b+3,f
  9176  04BE  1C47               	btfss	___fladd@b+3,0
  9177  04BF  2D53               	goto	l2624
  9178  04C0  1C57               	btfss	___fladd@grs,0
  9179  04C1  2CC8               	goto	l2580
  9180  04C2  3657               	lsrf	___fladd@grs,w
  9181  04C3  3801               	iorlw	1
  9182  04C4  00CC               	movwf	??___fladd
  9183  04C5  084C               	movf	??___fladd,w
  9184  04C6  00D7               	movwf	___fladd@grs
  9185  04C7  2CCA               	goto	l2582
  9186  04C8                     l2580:	
  9187  04C8  1003               	clrc
  9188  04C9  0CD7               	rrf	___fladd@grs,f
  9189  04CA                     l2582:	
  9190  04CA  1844               	btfsc	___fladd@b,0
  9191  04CB  17D7               	bsf	___fladd@grs,7
  9192  04CC  3001               	movlw	1
  9193  04CD  00CC               	movwf	??___fladd
  9194  04CE                     u2555:	
  9195  04CE  37C7               	asrf	___fladd@b+3,f
  9196  04CF  0CC6               	rrf	___fladd@b+2,f
  9197  04D0  0CC5               	rrf	___fladd@b+1,f
  9198  04D1  0CC4               	rrf	___fladd@b,f
  9199  04D2  0BCC               	decfsz	??___fladd& (0+127),f
  9200  04D3  2CCE               	goto	u2555
  9201  04D4  3001               	movlw	1
  9202  04D5  00CC               	movwf	??___fladd
  9203  04D6  084C               	movf	??___fladd,w
  9204  04D7  07D6               	addwf	___fladd@bexp,f
  9205  04D8  2D53               	goto	l2624
  9206  04D9                     l2590:	
  9207  04D9  0847               	movf	___fladd@b+3,w
  9208  04DA  3A80               	xorlw	128
  9209  04DB  00CC               	movwf	??___fladd
  9210  04DC  084B               	movf	___fladd@a+3,w
  9211  04DD  3A80               	xorlw	128
  9212  04DE  024C               	subwf	??___fladd,w
  9213  04DF  1D03               	skipz
  9214  04E0  2CEB               	goto	u2563
  9215  04E1  084A               	movf	___fladd@a+2,w
  9216  04E2  0246               	subwf	___fladd@b+2,w
  9217  04E3  1D03               	skipz
  9218  04E4  2CEB               	goto	u2563
  9219  04E5  0849               	movf	___fladd@a+1,w
  9220  04E6  0245               	subwf	___fladd@b+1,w
  9221  04E7  1D03               	skipz
  9222  04E8  2CEB               	goto	u2563
  9223  04E9  0848               	movf	___fladd@a,w
  9224  04EA  0244               	subwf	___fladd@b,w
  9225  04EB                     u2563:	
  9226  04EB  1803               	skipnc
  9227  04EC  2D23               	goto	l2600
  9228  04ED  30FF               	movlw	255
  9229  04EE  00CC               	movwf	??___fladd
  9230  04EF  30FF               	movlw	255
  9231  04F0  00CD               	movwf	??___fladd+1
  9232  04F1  30FF               	movlw	255
  9233  04F2  00CE               	movwf	??___fladd+2
  9234  04F3  30FF               	movlw	255
  9235  04F4  00CF               	movwf	??___fladd+3
  9236  04F5  0844               	movf	___fladd@b,w
  9237  04F6  0248               	subwf	___fladd@a,w
  9238  04F7  00D0               	movwf	??___fladd+4
  9239  04F8  0845               	movf	___fladd@b+1,w
  9240  04F9  3B49               	subwfb	___fladd@a+1,w
  9241  04FA  00D1               	movwf	??___fladd+5
  9242  04FB  0846               	movf	___fladd@b+2,w
  9243  04FC  3B4A               	subwfb	___fladd@a+2,w
  9244  04FD  00D2               	movwf	??___fladd+6
  9245  04FE  0847               	movf	___fladd@b+3,w
  9246  04FF  3B4B               	subwfb	___fladd@a+3,w
  9247  0500  00D3               	movwf	??___fladd+7
  9248  0501  0850               	movf	??___fladd+4,w
  9249  0502  07CC               	addwf	??___fladd,f
  9250  0503  0851               	movf	??___fladd+5,w
  9251  0504  3DCD               	addwfc	??___fladd+1,f
  9252  0505  0852               	movf	??___fladd+6,w
  9253  0506  3DCE               	addwfc	??___fladd+2,f
  9254  0507  0853               	movf	??___fladd+7,w
  9255  0508  3DCF               	addwfc	??___fladd+3,f
  9256  0509  084F               	movf	??___fladd+3,w
  9257  050A  00C7               	movwf	___fladd@b+3
  9258  050B  084E               	movf	??___fladd+2,w
  9259  050C  00C6               	movwf	___fladd@b+2
  9260  050D  084D               	movf	??___fladd+1,w
  9261  050E  00C5               	movwf	___fladd@b+1
  9262  050F  084C               	movf	??___fladd,w
  9263  0510  00C4               	movwf	___fladd@b
  9264  0511  3080               	movlw	128
  9265  0512  00CC               	movwf	??___fladd
  9266  0513  084C               	movf	??___fladd,w
  9267  0514  06D4               	xorwf	___fladd@signs,f
  9268  0515  09D7               	comf	___fladd@grs,f
  9269  0516  0AD7               	incf	___fladd@grs,f
  9270  0517  0857               	movf	___fladd@grs,w
  9271  0518  1D03               	btfss	3,2
  9272  0519  2D2B               	goto	l857
  9273  051A  3001               	movlw	1
  9274  051B  07C4               	addwf	___fladd@b,f
  9275  051C  3000               	movlw	0
  9276  051D  3DC5               	addwfc	___fladd@b+1,f
  9277  051E  3000               	movlw	0
  9278  051F  3DC6               	addwfc	___fladd@b+2,f
  9279  0520  3000               	movlw	0
  9280  0521  3DC7               	addwfc	___fladd@b+3,f
  9281  0522  2D2B               	goto	l857
  9282  0523                     l2600:	
  9283  0523  0848               	movf	___fladd@a,w
  9284  0524  02C4               	subwf	___fladd@b,f
  9285  0525  0849               	movf	___fladd@a+1,w
  9286  0526  3BC5               	subwfb	___fladd@b+1,f
  9287  0527  084A               	movf	___fladd@a+2,w
  9288  0528  3BC6               	subwfb	___fladd@b+2,f
  9289  0529  084B               	movf	___fladd@a+3,w
  9290  052A  3BC7               	subwfb	___fladd@b+3,f
  9291  052B                     l857:	
  9292  052B  0847               	movf	___fladd@b+3,w
  9293  052C  0446               	iorwf	___fladd@b+2,w
  9294  052D  0445               	iorwf	___fladd@b+1,w
  9295  052E  0444               	iorwf	___fladd@b,w
  9296  052F  1D03               	skipz
  9297  0530  2D51               	goto	l2622
  9298  0531  0857               	movf	___fladd@grs,w
  9299  0532  1D03               	btfss	3,2
  9300  0533  2D51               	goto	l2622
  9301  0534  3000               	movlw	0
  9302  0535  00C7               	movwf	?___fladd+3
  9303  0536  3000               	movlw	0
  9304  0537  00C6               	movwf	?___fladd+2
  9305  0538  3000               	movlw	0
  9306  0539  00C5               	movwf	?___fladd+1
  9307  053A  3000               	movlw	0
  9308  053B  00C4               	movwf	?___fladd
  9309  053C  0008               	return
  9310  053D                     l2608:	
  9311  053D  3001               	movlw	1
  9312  053E                     u2605:	
  9313  053E  35C4               	lslf	___fladd@b,f
  9314  053F  0DC5               	rlf	___fladd@b+1,f
  9315  0540  0DC6               	rlf	___fladd@b+2,f
  9316  0541  0DC7               	rlf	___fladd@b+3,f
  9317  0542  0B89               	decfsz	9,f
  9318  0543  2D3E               	goto	u2605
  9319  0544  1BD7               	btfsc	___fladd@grs,7
  9320  0545  1444               	bsf	___fladd@b,0
  9321  0546  1C57               	btfss	___fladd@grs,0
  9322  0547  2D4A               	goto	l2616
  9323  0548  1403               	setc
  9324  0549  2D4B               	goto	L3
  9325  054A                     l2616:	
  9326  054A  1003               	clrc
  9327  054B                     L3:	
  9328  054B  0DD7               	rlf	___fladd@grs,f
  9329  054C  0856               	movf	___fladd@bexp,w
  9330  054D  1903               	btfsc	3,2
  9331  054E  2D51               	goto	l2622
  9332  054F  3001               	movlw	1
  9333  0550  02D6               	subwf	___fladd@bexp,f
  9334  0551                     l2622:	
  9335  0551  1FC6               	btfss	___fladd@b+2,7
  9336  0552  2D3D               	goto	l2608
  9337  0553                     l2624:	
  9338  0553  01D5               	clrf	___fladd@aexp
  9339  0554  1FD7               	btfss	___fladd@grs,7
  9340  0555  2D5E               	goto	l2634
  9341  0556  0857               	movf	___fladd@grs,w
  9342  0557  397F               	andlw	127
  9343  0558  1903               	btfsc	3,2
  9344  0559  1844               	btfsc	___fladd@b,0
  9345  055A  2D5C               	goto	l2630
  9346  055B  2D5E               	goto	l2634
  9347  055C                     l2630:	
  9348  055C  01D5               	clrf	___fladd@aexp
  9349  055D  0AD5               	incf	___fladd@aexp,f
  9350  055E                     l2634:	
  9351  055E  0855               	movf	___fladd@aexp,w
  9352  055F  1903               	btfsc	3,2
  9353  0560  2D8A               	goto	l870
  9354  0561  3001               	movlw	1
  9355  0562  07C4               	addwf	___fladd@b,f
  9356  0563  3000               	movlw	0
  9357  0564  3DC5               	addwfc	___fladd@b+1,f
  9358  0565  3000               	movlw	0
  9359  0566  3DC6               	addwfc	___fladd@b+2,f
  9360  0567  3000               	movlw	0
  9361  0568  3DC7               	addwfc	___fladd@b+3,f
  9362  0569  1C47               	btfss	___fladd@b+3,0
  9363  056A  2D8A               	goto	l870
  9364  056B  0844               	movf	___fladd@b,w
  9365  056C  00CC               	movwf	??___fladd
  9366  056D  0845               	movf	___fladd@b+1,w
  9367  056E  00CD               	movwf	??___fladd+1
  9368  056F  0846               	movf	___fladd@b+2,w
  9369  0570  00CE               	movwf	??___fladd+2
  9370  0571  0847               	movf	___fladd@b+3,w
  9371  0572  00CF               	movwf	??___fladd+3
  9372  0573  3001               	movlw	1
  9373  0574  00D0               	movwf	??___fladd+4
  9374  0575                     u2705:	
  9375  0575  37CF               	asrf	??___fladd+3,f
  9376  0576  0CCE               	rrf	??___fladd+2,f
  9377  0577  0CCD               	rrf	??___fladd+1,f
  9378  0578  0CCC               	rrf	??___fladd,f
  9379  0579  0BD0               	decfsz	??___fladd+4,f
  9380  057A  2D75               	goto	u2705
  9381  057B  084F               	movf	??___fladd+3,w
  9382  057C  00C7               	movwf	___fladd@b+3
  9383  057D  084E               	movf	??___fladd+2,w
  9384  057E  00C6               	movwf	___fladd@b+2
  9385  057F  084D               	movf	??___fladd+1,w
  9386  0580  00C5               	movwf	___fladd@b+1
  9387  0581  084C               	movf	??___fladd,w
  9388  0582  00C4               	movwf	___fladd@b
  9389  0583  0A56               	incf	___fladd@bexp,w
  9390  0584  1903               	btfsc	3,2
  9391  0585  2D8A               	goto	l870
  9392  0586  3001               	movlw	1
  9393  0587  00CC               	movwf	??___fladd
  9394  0588  084C               	movf	??___fladd,w
  9395  0589  07D6               	addwf	___fladd@bexp,f
  9396  058A                     l870:	
  9397  058A  0A56               	incf	___fladd@bexp,w
  9398  058B  1D03               	btfss	3,2
  9399  058C  0856               	movf	___fladd@bexp,w
  9400  058D  1D03               	btfss	3,2
  9401  058E  2D9A               	goto	l2652
  9402  058F  3000               	movlw	0
  9403  0590  00C7               	movwf	___fladd@b+3
  9404  0591  3000               	movlw	0
  9405  0592  00C6               	movwf	___fladd@b+2
  9406  0593  3000               	movlw	0
  9407  0594  00C5               	movwf	___fladd@b+1
  9408  0595  3000               	movlw	0
  9409  0596  00C4               	movwf	___fladd@b
  9410  0597  0856               	movf	___fladd@bexp,w
  9411  0598  1903               	btfsc	3,2
  9412  0599  01D4               	clrf	___fladd@signs
  9413  059A                     l2652:	
  9414  059A  1C56               	btfss	___fladd@bexp,0
  9415  059B  2D9E               	goto	l2656
  9416  059C  17C6               	bsf	___fladd@b+2,7
  9417  059D  2DA2               	goto	l878
  9418  059E                     l2656:	
  9419  059E  307F               	movlw	127
  9420  059F  00CC               	movwf	??___fladd
  9421  05A0  084C               	movf	??___fladd,w
  9422  05A1  05C6               	andwf	___fladd@b+2,f
  9423  05A2                     l878:	
  9424  05A2  3656               	lsrf	___fladd@bexp,w
  9425  05A3  00CC               	movwf	??___fladd
  9426  05A4  084C               	movf	??___fladd,w
  9427  05A5  00C7               	movwf	___fladd@b+3
  9428  05A6  1FD4               	btfss	___fladd@signs,7
  9429  05A7  0008               	return
  9430  05A8  17C7               	bsf	___fladd@b+3,7
  9431  05A9  0008               	return
  9432  05AA                     __end_of___fladd:	
  9433                           
  9434                           	psect	text23
  9435  05AA                     __ptext23:	
  9436 ;; *************** function ___flmul *****************
  9437 ;; Defined at:
  9438 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcmul.c"
  9439 ;; Parameters:    Size  Location     Type
  9440 ;;  b               4   10[BANK0 ] unsigned char 
  9441 ;;  a               4   14[BANK0 ] unsigned char 
  9442 ;; Auto vars:     Size  Location     Type
  9443 ;;  prod            4   30[BANK0 ] struct .
  9444 ;;  grs             4   24[BANK0 ] unsigned long 
  9445 ;;  temp            2   34[BANK0 ] struct .
  9446 ;;  bexp            1   29[BANK0 ] unsigned char 
  9447 ;;  aexp            1   28[BANK0 ] unsigned char 
  9448 ;;  sign            1   23[BANK0 ] unsigned char 
  9449 ;; Return value:  Size  Location     Type
  9450 ;;                  4   10[BANK0 ] unsigned char 
  9451 ;; Registers used:
  9452 ;;		wreg, status,2, status,0, pclath, cstack
  9453 ;; Tracked objects:
  9454 ;;		On entry : 0/0
  9455 ;;		On exit  : 0/0
  9456 ;;		Unchanged: 0/0
  9457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9458 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9459 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9460 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9461 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9462 ;;Total ram usage:       26 bytes
  9463 ;; Hardware stack levels used:    1
  9464 ;; Hardware stack levels required when called:    1
  9465 ;; This function calls:
  9466 ;;		__Umul8_16
  9467 ;; This function is called by:
  9468 ;;		_roundedVal
  9469 ;;		_pid_control
  9470 ;;		_read_current
  9471 ;;		_read_voltage
  9472 ;;		_read_panel
  9473 ;;		_ftoa
  9474 ;; This function uses a non-reentrant model
  9475 ;;
  9476                           
  9477                           
  9478                           ;psect for function ___flmul
  9479  05AA                     ___flmul:	
  9480                           
  9481                           ;incstack = 0
  9482                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  9483  05AA  0020               	movlb	0	; select bank0
  9484  05AB  082D               	movf	___flmul@b+3,w
  9485  05AC  3980               	andlw	128
  9486  05AD  00B2               	movwf	??___flmul
  9487  05AE  0832               	movf	??___flmul,w
  9488  05AF  00B7               	movwf	___flmul@sign
  9489  05B0  352D               	lslf	___flmul@b+3,w
  9490  05B1  00B2               	movwf	??___flmul
  9491  05B2  0832               	movf	??___flmul,w
  9492  05B3  00BD               	movwf	___flmul@bexp
  9493  05B4  1BAC               	btfsc	___flmul@b+2,7
  9494  05B5  143D               	bsf	___flmul@bexp,0
  9495  05B6  083D               	movf	___flmul@bexp,w
  9496  05B7  1903               	btfsc	3,2
  9497  05B8  2DC6               	goto	l2896
  9498  05B9  0A3D               	incf	___flmul@bexp,w
  9499  05BA  1D03               	btfss	3,2
  9500  05BB  2DC4               	goto	l2894
  9501  05BC  3000               	movlw	0
  9502  05BD  00AD               	movwf	___flmul@b+3
  9503  05BE  3000               	movlw	0
  9504  05BF  00AC               	movwf	___flmul@b+2
  9505  05C0  3000               	movlw	0
  9506  05C1  00AB               	movwf	___flmul@b+1
  9507  05C2  3000               	movlw	0
  9508  05C3  00AA               	movwf	___flmul@b
  9509  05C4                     l2894:	
  9510  05C4  17AC               	bsf	___flmul@b+2,7
  9511  05C5  2DCE               	goto	l2898
  9512  05C6                     l2896:	
  9513  05C6  3000               	movlw	0
  9514  05C7  00AD               	movwf	___flmul@b+3
  9515  05C8  3000               	movlw	0
  9516  05C9  00AC               	movwf	___flmul@b+2
  9517  05CA  3000               	movlw	0
  9518  05CB  00AB               	movwf	___flmul@b+1
  9519  05CC  3000               	movlw	0
  9520  05CD  00AA               	movwf	___flmul@b
  9521  05CE                     l2898:	
  9522  05CE  0831               	movf	___flmul@a+3,w
  9523  05CF  3980               	andlw	128
  9524  05D0  00B2               	movwf	??___flmul
  9525  05D1  0832               	movf	??___flmul,w
  9526  05D2  06B7               	xorwf	___flmul@sign,f
  9527  05D3  3531               	lslf	___flmul@a+3,w
  9528  05D4  00B2               	movwf	??___flmul
  9529  05D5  0832               	movf	??___flmul,w
  9530  05D6  00BC               	movwf	___flmul@aexp
  9531  05D7  1BB0               	btfsc	___flmul@a+2,7
  9532  05D8  143C               	bsf	___flmul@aexp,0
  9533  05D9  083C               	movf	___flmul@aexp,w
  9534  05DA  1903               	btfsc	3,2
  9535  05DB  2DE9               	goto	l2914
  9536  05DC  0A3C               	incf	___flmul@aexp,w
  9537  05DD  1D03               	btfss	3,2
  9538  05DE  2DE7               	goto	l2912
  9539  05DF  3000               	movlw	0
  9540  05E0  00B1               	movwf	___flmul@a+3
  9541  05E1  3000               	movlw	0
  9542  05E2  00B0               	movwf	___flmul@a+2
  9543  05E3  3000               	movlw	0
  9544  05E4  00AF               	movwf	___flmul@a+1
  9545  05E5  3000               	movlw	0
  9546  05E6  00AE               	movwf	___flmul@a
  9547  05E7                     l2912:	
  9548  05E7  17B0               	bsf	___flmul@a+2,7
  9549  05E8  2DF1               	goto	l2916
  9550  05E9                     l2914:	
  9551  05E9  3000               	movlw	0
  9552  05EA  00B1               	movwf	___flmul@a+3
  9553  05EB  3000               	movlw	0
  9554  05EC  00B0               	movwf	___flmul@a+2
  9555  05ED  3000               	movlw	0
  9556  05EE  00AF               	movwf	___flmul@a+1
  9557  05EF  3000               	movlw	0
  9558  05F0  00AE               	movwf	___flmul@a
  9559  05F1                     l2916:	
  9560  05F1  083C               	movf	___flmul@aexp,w
  9561  05F2  1D03               	btfss	3,2
  9562  05F3  083D               	movf	___flmul@bexp,w
  9563  05F4  1D03               	btfss	3,2
  9564  05F5  2DFF               	goto	l2924
  9565  05F6  3000               	movlw	0
  9566  05F7  00AD               	movwf	?___flmul+3
  9567  05F8  3000               	movlw	0
  9568  05F9  00AC               	movwf	?___flmul+2
  9569  05FA  3000               	movlw	0
  9570  05FB  00AB               	movwf	?___flmul+1
  9571  05FC  3000               	movlw	0
  9572  05FD  00AA               	movwf	?___flmul
  9573  05FE  0008               	return
  9574  05FF                     l2924:	
  9575  05FF  082A               	movf	___flmul@b,w
  9576  0600  00B2               	movwf	??___flmul
  9577  0601  0832               	movf	??___flmul,w
  9578  0602  00F0               	movwf	__Umul8_16@multiplicand
  9579  0603  0830               	movf	___flmul@a+2,w
  9580  0604  3190  20F1  3185   	fcall	__Umul8_16
  9581  0607  0871               	movf	?__Umul8_16+1,w
  9582  0608  0020               	movlb	0	; select bank0
  9583  0609  00C3               	movwf	___flmul@temp+1
  9584  060A  0870               	movf	?__Umul8_16,w
  9585  060B  00C2               	movwf	___flmul@temp
  9586  060C  0842               	movf	___flmul@temp,w
  9587  060D  00B2               	movwf	??___flmul
  9588  060E  01B3               	clrf	??___flmul+1
  9589  060F  01B4               	clrf	??___flmul+2
  9590  0610  01B5               	clrf	??___flmul+3
  9591  0611  0835               	movf	??___flmul+3,w
  9592  0612  00BB               	movwf	___flmul@grs+3
  9593  0613  0834               	movf	??___flmul+2,w
  9594  0614  00BA               	movwf	___flmul@grs+2
  9595  0615  0833               	movf	??___flmul+1,w
  9596  0616  00B9               	movwf	___flmul@grs+1
  9597  0617  0832               	movf	??___flmul,w
  9598  0618  00B8               	movwf	___flmul@grs
  9599  0619  0843               	movf	___flmul@temp+1,w
  9600  061A  00B2               	movwf	??___flmul
  9601  061B  01B3               	clrf	??___flmul+1
  9602  061C  01B4               	clrf	??___flmul+2
  9603  061D  01B5               	clrf	??___flmul+3
  9604  061E  0835               	movf	??___flmul+3,w
  9605  061F  00C1               	movwf	___flmul@prod+3
  9606  0620  0834               	movf	??___flmul+2,w
  9607  0621  00C0               	movwf	___flmul@prod+2
  9608  0622  0833               	movf	??___flmul+1,w
  9609  0623  00BF               	movwf	___flmul@prod+1
  9610  0624  0832               	movf	??___flmul,w
  9611  0625  00BE               	movwf	___flmul@prod
  9612  0626  082B               	movf	___flmul@b+1,w
  9613  0627  00B2               	movwf	??___flmul
  9614  0628  0832               	movf	??___flmul,w
  9615  0629  00F0               	movwf	__Umul8_16@multiplicand
  9616  062A  082F               	movf	___flmul@a+1,w
  9617  062B  3190  20F1  3185   	fcall	__Umul8_16
  9618  062E  0871               	movf	?__Umul8_16+1,w
  9619  062F  0020               	movlb	0	; select bank0
  9620  0630  00C3               	movwf	___flmul@temp+1
  9621  0631  0870               	movf	?__Umul8_16,w
  9622  0632  00C2               	movwf	___flmul@temp
  9623  0633  0842               	movf	___flmul@temp,w
  9624  0634  00B2               	movwf	??___flmul
  9625  0635  01B3               	clrf	??___flmul+1
  9626  0636  01B4               	clrf	??___flmul+2
  9627  0637  01B5               	clrf	??___flmul+3
  9628  0638  0832               	movf	??___flmul,w
  9629  0639  07B8               	addwf	___flmul@grs,f
  9630  063A  0833               	movf	??___flmul+1,w
  9631  063B  3DB9               	addwfc	___flmul@grs+1,f
  9632  063C  0834               	movf	??___flmul+2,w
  9633  063D  3DBA               	addwfc	___flmul@grs+2,f
  9634  063E  0835               	movf	??___flmul+3,w
  9635  063F  3DBB               	addwfc	___flmul@grs+3,f
  9636  0640  0843               	movf	___flmul@temp+1,w
  9637  0641  00B2               	movwf	??___flmul
  9638  0642  01B3               	clrf	??___flmul+1
  9639  0643  01B4               	clrf	??___flmul+2
  9640  0644  01B5               	clrf	??___flmul+3
  9641  0645  0832               	movf	??___flmul,w
  9642  0646  07BE               	addwf	___flmul@prod,f
  9643  0647  0833               	movf	??___flmul+1,w
  9644  0648  3DBF               	addwfc	___flmul@prod+1,f
  9645  0649  0834               	movf	??___flmul+2,w
  9646  064A  3DC0               	addwfc	___flmul@prod+2,f
  9647  064B  0835               	movf	??___flmul+3,w
  9648  064C  3DC1               	addwfc	___flmul@prod+3,f
  9649  064D  082C               	movf	___flmul@b+2,w
  9650  064E  00B2               	movwf	??___flmul
  9651  064F  0832               	movf	??___flmul,w
  9652  0650  00F0               	movwf	__Umul8_16@multiplicand
  9653  0651  082E               	movf	___flmul@a,w
  9654  0652  3190  20F1  3185   	fcall	__Umul8_16
  9655  0655  0871               	movf	?__Umul8_16+1,w
  9656  0656  0020               	movlb	0	; select bank0
  9657  0657  00C3               	movwf	___flmul@temp+1
  9658  0658  0870               	movf	?__Umul8_16,w
  9659  0659  00C2               	movwf	___flmul@temp
  9660  065A  0842               	movf	___flmul@temp,w
  9661  065B  00B2               	movwf	??___flmul
  9662  065C  01B3               	clrf	??___flmul+1
  9663  065D  01B4               	clrf	??___flmul+2
  9664  065E  01B5               	clrf	??___flmul+3
  9665  065F  0832               	movf	??___flmul,w
  9666  0660  07B8               	addwf	___flmul@grs,f
  9667  0661  0833               	movf	??___flmul+1,w
  9668  0662  3DB9               	addwfc	___flmul@grs+1,f
  9669  0663  0834               	movf	??___flmul+2,w
  9670  0664  3DBA               	addwfc	___flmul@grs+2,f
  9671  0665  0835               	movf	??___flmul+3,w
  9672  0666  3DBB               	addwfc	___flmul@grs+3,f
  9673  0667  0843               	movf	___flmul@temp+1,w
  9674  0668  00B2               	movwf	??___flmul
  9675  0669  01B3               	clrf	??___flmul+1
  9676  066A  01B4               	clrf	??___flmul+2
  9677  066B  01B5               	clrf	??___flmul+3
  9678  066C  0832               	movf	??___flmul,w
  9679  066D  07BE               	addwf	___flmul@prod,f
  9680  066E  0833               	movf	??___flmul+1,w
  9681  066F  3DBF               	addwfc	___flmul@prod+1,f
  9682  0670  0834               	movf	??___flmul+2,w
  9683  0671  3DC0               	addwfc	___flmul@prod+2,f
  9684  0672  0835               	movf	??___flmul+3,w
  9685  0673  3DC1               	addwfc	___flmul@prod+3,f
  9686  0674  3008               	movlw	8
  9687  0675                     u3245:	
  9688  0675  35B8               	lslf	___flmul@grs,f
  9689  0676  0DB9               	rlf	___flmul@grs+1,f
  9690  0677  0DBA               	rlf	___flmul@grs+2,f
  9691  0678  0DBB               	rlf	___flmul@grs+3,f
  9692  0679  0B89               	decfsz	9,f
  9693  067A  2E75               	goto	u3245
  9694  067B  082B               	movf	___flmul@b+1,w
  9695  067C  00B2               	movwf	??___flmul
  9696  067D  0832               	movf	??___flmul,w
  9697  067E  00F0               	movwf	__Umul8_16@multiplicand
  9698  067F  082E               	movf	___flmul@a,w
  9699  0680  3190  20F1  3185   	fcall	__Umul8_16
  9700  0683  0871               	movf	?__Umul8_16+1,w
  9701  0684  0020               	movlb	0	; select bank0
  9702  0685  00C3               	movwf	___flmul@temp+1
  9703  0686  0870               	movf	?__Umul8_16,w
  9704  0687  00C2               	movwf	___flmul@temp
  9705  0688  0842               	movf	___flmul@temp,w
  9706  0689  07B8               	addwf	___flmul@grs,f
  9707  068A  0843               	movf	___flmul@temp+1,w
  9708  068B  3DB9               	addwfc	___flmul@grs+1,f
  9709  068C  3000               	movlw	0
  9710  068D  3DBA               	addwfc	___flmul@grs+2,f
  9711  068E  3DBB               	addwfc	___flmul@grs+3,f
  9712  068F  082A               	movf	___flmul@b,w
  9713  0690  00B2               	movwf	??___flmul
  9714  0691  0832               	movf	??___flmul,w
  9715  0692  00F0               	movwf	__Umul8_16@multiplicand
  9716  0693  082F               	movf	___flmul@a+1,w
  9717  0694  3190  20F1  3185   	fcall	__Umul8_16
  9718  0697  0871               	movf	?__Umul8_16+1,w
  9719  0698  0020               	movlb	0	; select bank0
  9720  0699  00C3               	movwf	___flmul@temp+1
  9721  069A  0870               	movf	?__Umul8_16,w
  9722  069B  00C2               	movwf	___flmul@temp
  9723  069C  0842               	movf	___flmul@temp,w
  9724  069D  07B8               	addwf	___flmul@grs,f
  9725  069E  0843               	movf	___flmul@temp+1,w
  9726  069F  3DB9               	addwfc	___flmul@grs+1,f
  9727  06A0  3000               	movlw	0
  9728  06A1  3DBA               	addwfc	___flmul@grs+2,f
  9729  06A2  3DBB               	addwfc	___flmul@grs+3,f
  9730  06A3  3008               	movlw	8
  9731  06A4                     u3255:	
  9732  06A4  35B8               	lslf	___flmul@grs,f
  9733  06A5  0DB9               	rlf	___flmul@grs+1,f
  9734  06A6  0DBA               	rlf	___flmul@grs+2,f
  9735  06A7  0DBB               	rlf	___flmul@grs+3,f
  9736  06A8  0B89               	decfsz	9,f
  9737  06A9  2EA4               	goto	u3255
  9738  06AA  082A               	movf	___flmul@b,w
  9739  06AB  00B2               	movwf	??___flmul
  9740  06AC  0832               	movf	??___flmul,w
  9741  06AD  00F0               	movwf	__Umul8_16@multiplicand
  9742  06AE  082E               	movf	___flmul@a,w
  9743  06AF  3190  20F1  3185   	fcall	__Umul8_16
  9744  06B2  0871               	movf	?__Umul8_16+1,w
  9745  06B3  0020               	movlb	0	; select bank0
  9746  06B4  00C3               	movwf	___flmul@temp+1
  9747  06B5  0870               	movf	?__Umul8_16,w
  9748  06B6  00C2               	movwf	___flmul@temp
  9749  06B7  0842               	movf	___flmul@temp,w
  9750  06B8  07B8               	addwf	___flmul@grs,f
  9751  06B9  0843               	movf	___flmul@temp+1,w
  9752  06BA  3DB9               	addwfc	___flmul@grs+1,f
  9753  06BB  3000               	movlw	0
  9754  06BC  3DBA               	addwfc	___flmul@grs+2,f
  9755  06BD  3DBB               	addwfc	___flmul@grs+3,f
  9756  06BE  082B               	movf	___flmul@b+1,w
  9757  06BF  00B2               	movwf	??___flmul
  9758  06C0  0832               	movf	??___flmul,w
  9759  06C1  00F0               	movwf	__Umul8_16@multiplicand
  9760  06C2  0830               	movf	___flmul@a+2,w
  9761  06C3  3190  20F1  3185   	fcall	__Umul8_16
  9762  06C6  0871               	movf	?__Umul8_16+1,w
  9763  06C7  0020               	movlb	0	; select bank0
  9764  06C8  00C3               	movwf	___flmul@temp+1
  9765  06C9  0870               	movf	?__Umul8_16,w
  9766  06CA  00C2               	movwf	___flmul@temp
  9767  06CB  0842               	movf	___flmul@temp,w
  9768  06CC  07BE               	addwf	___flmul@prod,f
  9769  06CD  0843               	movf	___flmul@temp+1,w
  9770  06CE  3DBF               	addwfc	___flmul@prod+1,f
  9771  06CF  3000               	movlw	0
  9772  06D0  3DC0               	addwfc	___flmul@prod+2,f
  9773  06D1  3DC1               	addwfc	___flmul@prod+3,f
  9774  06D2  082C               	movf	___flmul@b+2,w
  9775  06D3  00B2               	movwf	??___flmul
  9776  06D4  0832               	movf	??___flmul,w
  9777  06D5  00F0               	movwf	__Umul8_16@multiplicand
  9778  06D6  082F               	movf	___flmul@a+1,w
  9779  06D7  3190  20F1  3185   	fcall	__Umul8_16
  9780  06DA  0871               	movf	?__Umul8_16+1,w
  9781  06DB  0020               	movlb	0	; select bank0
  9782  06DC  00C3               	movwf	___flmul@temp+1
  9783  06DD  0870               	movf	?__Umul8_16,w
  9784  06DE  00C2               	movwf	___flmul@temp
  9785  06DF  0842               	movf	___flmul@temp,w
  9786  06E0  07BE               	addwf	___flmul@prod,f
  9787  06E1  0843               	movf	___flmul@temp+1,w
  9788  06E2  3DBF               	addwfc	___flmul@prod+1,f
  9789  06E3  3000               	movlw	0
  9790  06E4  3DC0               	addwfc	___flmul@prod+2,f
  9791  06E5  3DC1               	addwfc	___flmul@prod+3,f
  9792  06E6  082C               	movf	___flmul@b+2,w
  9793  06E7  00B2               	movwf	??___flmul
  9794  06E8  0832               	movf	??___flmul,w
  9795  06E9  00F0               	movwf	__Umul8_16@multiplicand
  9796  06EA  0830               	movf	___flmul@a+2,w
  9797  06EB  3190  20F1  3185   	fcall	__Umul8_16
  9798  06EE  0871               	movf	?__Umul8_16+1,w
  9799  06EF  0020               	movlb	0	; select bank0
  9800  06F0  00C3               	movwf	___flmul@temp+1
  9801  06F1  0870               	movf	?__Umul8_16,w
  9802  06F2  00C2               	movwf	___flmul@temp
  9803  06F3  0842               	movf	___flmul@temp,w
  9804  06F4  00B2               	movwf	??___flmul
  9805  06F5  0843               	movf	___flmul@temp+1,w
  9806  06F6  00B3               	movwf	??___flmul+1
  9807  06F7  01B4               	clrf	??___flmul+2
  9808  06F8  01B5               	clrf	??___flmul+3
  9809  06F9  3008               	movlw	8
  9810  06FA                     u3265:	
  9811  06FA  35B2               	lslf	??___flmul,f
  9812  06FB  0DB3               	rlf	??___flmul+1,f
  9813  06FC  0DB4               	rlf	??___flmul+2,f
  9814  06FD  0DB5               	rlf	??___flmul+3,f
  9815  06FE  0B89               	decfsz	9,f
  9816  06FF  2EFA               	goto	u3265
  9817  0700  0832               	movf	??___flmul,w
  9818  0701  07BE               	addwf	___flmul@prod,f
  9819  0702  0833               	movf	??___flmul+1,w
  9820  0703  3DBF               	addwfc	___flmul@prod+1,f
  9821  0704  0834               	movf	??___flmul+2,w
  9822  0705  3DC0               	addwfc	___flmul@prod+2,f
  9823  0706  0835               	movf	??___flmul+3,w
  9824  0707  3DC1               	addwfc	___flmul@prod+3,f
  9825  0708  0838               	movf	___flmul@grs,w
  9826  0709  00B2               	movwf	??___flmul
  9827  070A  0839               	movf	___flmul@grs+1,w
  9828  070B  00B3               	movwf	??___flmul+1
  9829  070C  083A               	movf	___flmul@grs+2,w
  9830  070D  00B4               	movwf	??___flmul+2
  9831  070E  083B               	movf	___flmul@grs+3,w
  9832  070F  00B5               	movwf	??___flmul+3
  9833  0710  3018               	movlw	24
  9834  0711                     u3275:	
  9835  0711  36B5               	lsrf	??___flmul+3,f
  9836  0712  0CB4               	rrf	??___flmul+2,f
  9837  0713  0CB3               	rrf	??___flmul+1,f
  9838  0714  0CB2               	rrf	??___flmul,f
  9839  0715  0B89               	decfsz	9,f
  9840  0716  2F11               	goto	u3275
  9841  0717  0832               	movf	??___flmul,w
  9842  0718  07BE               	addwf	___flmul@prod,f
  9843  0719  0833               	movf	??___flmul+1,w
  9844  071A  3DBF               	addwfc	___flmul@prod+1,f
  9845  071B  0834               	movf	??___flmul+2,w
  9846  071C  3DC0               	addwfc	___flmul@prod+2,f
  9847  071D  0835               	movf	??___flmul+3,w
  9848  071E  3DC1               	addwfc	___flmul@prod+3,f
  9849  071F  3008               	movlw	8
  9850  0720                     u3285:	
  9851  0720  35B8               	lslf	___flmul@grs,f
  9852  0721  0DB9               	rlf	___flmul@grs+1,f
  9853  0722  0DBA               	rlf	___flmul@grs+2,f
  9854  0723  0DBB               	rlf	___flmul@grs+3,f
  9855  0724  0B89               	decfsz	9,f
  9856  0725  2F20               	goto	u3285
  9857  0726  083D               	movf	___flmul@bexp,w
  9858  0727  073C               	addwf	___flmul@aexp,w
  9859  0728  00B2               	movwf	??___flmul
  9860  0729  01B3               	clrf	??___flmul+1
  9861  072A  0DB3               	rlf	??___flmul+1,f
  9862  072B  0832               	movf	??___flmul,w
  9863  072C  3E82               	addlw	130
  9864  072D  00C2               	movwf	___flmul@temp
  9865  072E  30FF               	movlw	255
  9866  072F  3D33               	addwfc	??___flmul+1,w
  9867  0730  00C3               	movwf	___flmul@temp+1
  9868  0731                     l2976:	
  9869  0731  1BC0               	btfsc	___flmul@prod+2,7
  9870  0732  2F48               	goto	l2978
  9871  0733  3001               	movlw	1
  9872  0734                     u3295:	
  9873  0734  35BE               	lslf	___flmul@prod,f
  9874  0735  0DBF               	rlf	___flmul@prod+1,f
  9875  0736  0DC0               	rlf	___flmul@prod+2,f
  9876  0737  0DC1               	rlf	___flmul@prod+3,f
  9877  0738  0B89               	decfsz	9,f
  9878  0739  2F34               	goto	u3295
  9879  073A  1BBB               	btfsc	___flmul@grs+3,7
  9880  073B  143E               	bsf	___flmul@prod,0
  9881  073C  3001               	movlw	1
  9882  073D                     u3315:	
  9883  073D  35B8               	lslf	___flmul@grs,f
  9884  073E  0DB9               	rlf	___flmul@grs+1,f
  9885  073F  0DBA               	rlf	___flmul@grs+2,f
  9886  0740  0DBB               	rlf	___flmul@grs+3,f
  9887  0741  0B89               	decfsz	9,f
  9888  0742  2F3D               	goto	u3315
  9889  0743  30FF               	movlw	255
  9890  0744  07C2               	addwf	___flmul@temp,f
  9891  0745  30FF               	movlw	255
  9892  0746  3DC3               	addwfc	___flmul@temp+1,f
  9893  0747  2F31               	goto	l2976
  9894  0748                     l2978:	
  9895  0748  01BC               	clrf	___flmul@aexp
  9896  0749  1FBB               	btfss	___flmul@grs+3,7
  9897  074A  2F61               	goto	l2988
  9898  074B  30FF               	movlw	255
  9899  074C  0538               	andwf	___flmul@grs,w
  9900  074D  00B2               	movwf	??___flmul
  9901  074E  30FF               	movlw	255
  9902  074F  0539               	andwf	___flmul@grs+1,w
  9903  0750  00B3               	movwf	??___flmul+1
  9904  0751  30FF               	movlw	255
  9905  0752  053A               	andwf	___flmul@grs+2,w
  9906  0753  00B4               	movwf	??___flmul+2
  9907  0754  307F               	movlw	127
  9908  0755  053B               	andwf	___flmul@grs+3,w
  9909  0756  00B5               	movwf	??___flmul+3
  9910  0757  0835               	movf	??___flmul+3,w
  9911  0758  0434               	iorwf	??___flmul+2,w
  9912  0759  0433               	iorwf	??___flmul+1,w
  9913  075A  0432               	iorwf	??___flmul,w
  9914  075B  1903               	skipnz
  9915  075C  183E               	btfsc	___flmul@prod,0
  9916  075D  2F5F               	goto	l2984
  9917  075E  2F61               	goto	l2988
  9918  075F                     l2984:	
  9919  075F  01BC               	clrf	___flmul@aexp
  9920  0760  0ABC               	incf	___flmul@aexp,f
  9921  0761                     l2988:	
  9922  0761  083C               	movf	___flmul@aexp,w
  9923  0762  1903               	btfsc	3,2
  9924  0763  2F8A               	goto	l2998
  9925  0764  3001               	movlw	1
  9926  0765  07BE               	addwf	___flmul@prod,f
  9927  0766  3000               	movlw	0
  9928  0767  3DBF               	addwfc	___flmul@prod+1,f
  9929  0768  3000               	movlw	0
  9930  0769  3DC0               	addwfc	___flmul@prod+2,f
  9931  076A  3000               	movlw	0
  9932  076B  3DC1               	addwfc	___flmul@prod+3,f
  9933  076C  1C41               	btfss	___flmul@prod+3,0
  9934  076D  2F8A               	goto	l2998
  9935  076E  083E               	movf	___flmul@prod,w
  9936  076F  00B2               	movwf	??___flmul
  9937  0770  083F               	movf	___flmul@prod+1,w
  9938  0771  00B3               	movwf	??___flmul+1
  9939  0772  0840               	movf	___flmul@prod+2,w
  9940  0773  00B4               	movwf	??___flmul+2
  9941  0774  0841               	movf	___flmul@prod+3,w
  9942  0775  00B5               	movwf	??___flmul+3
  9943  0776  3001               	movlw	1
  9944  0777  00B6               	movwf	??___flmul+4
  9945  0778                     u3385:	
  9946  0778  37B5               	asrf	??___flmul+3,f
  9947  0779  0CB4               	rrf	??___flmul+2,f
  9948  077A  0CB3               	rrf	??___flmul+1,f
  9949  077B  0CB2               	rrf	??___flmul,f
  9950  077C  0BB6               	decfsz	??___flmul+4,f
  9951  077D  2F78               	goto	u3385
  9952  077E  0835               	movf	??___flmul+3,w
  9953  077F  00C1               	movwf	___flmul@prod+3
  9954  0780  0834               	movf	??___flmul+2,w
  9955  0781  00C0               	movwf	___flmul@prod+2
  9956  0782  0833               	movf	??___flmul+1,w
  9957  0783  00BF               	movwf	___flmul@prod+1
  9958  0784  0832               	movf	??___flmul,w
  9959  0785  00BE               	movwf	___flmul@prod
  9960  0786  3001               	movlw	1
  9961  0787  07C2               	addwf	___flmul@temp,f
  9962  0788  3000               	movlw	0
  9963  0789  3DC3               	addwfc	___flmul@temp+1,f
  9964  078A                     l2998:	
  9965  078A  0843               	movf	___flmul@temp+1,w
  9966  078B  3A80               	xorlw	128
  9967  078C  00B2               	movwf	??___flmul
  9968  078D  3080               	movlw	128
  9969  078E  0232               	subwf	??___flmul,w
  9970  078F  1D03               	skipz
  9971  0790  2F93               	goto	u3395
  9972  0791  30FF               	movlw	255
  9973  0792  0242               	subwf	___flmul@temp,w
  9974  0793                     u3395:	
  9975  0793  1C03               	skipc
  9976  0794  2F9F               	goto	l3002
  9977  0795  307F               	movlw	127
  9978  0796  0020               	movlb	0	; select bank0
  9979  0797  00C1               	movwf	___flmul@prod+3
  9980  0798  3080               	movlw	128
  9981  0799  00C0               	movwf	___flmul@prod+2
  9982  079A  3000               	movlw	0
  9983  079B  00BF               	movwf	___flmul@prod+1
  9984  079C  3000               	movlw	0
  9985  079D  00BE               	movwf	___flmul@prod
  9986  079E  2FC9               	goto	l944
  9987  079F                     l3002:	
  9988  079F  0020               	movlb	0	; select bank0
  9989  07A0  0843               	movf	___flmul@temp+1,w
  9990  07A1  3A80               	xorlw	128
  9991  07A2  00B2               	movwf	??___flmul
  9992  07A3  3080               	movlw	128
  9993  07A4  0232               	subwf	??___flmul,w
  9994  07A5  1D03               	skipz
  9995  07A6  2FA9               	goto	u3405
  9996  07A7  3001               	movlw	1
  9997  07A8  0242               	subwf	___flmul@temp,w
  9998  07A9                     u3405:	
  9999  07A9  1803               	skipnc
 10000  07AA  2FB6               	goto	l3008
 10001  07AB  3000               	movlw	0
 10002  07AC  0020               	movlb	0	; select bank0
 10003  07AD  00C1               	movwf	___flmul@prod+3
 10004  07AE  3000               	movlw	0
 10005  07AF  00C0               	movwf	___flmul@prod+2
 10006  07B0  3000               	movlw	0
 10007  07B1  00BF               	movwf	___flmul@prod+1
 10008  07B2  3000               	movlw	0
 10009  07B3  00BE               	movwf	___flmul@prod
 10010  07B4  01B7               	clrf	___flmul@sign
 10011  07B5  2FC9               	goto	l944
 10012  07B6                     l3008:	
 10013  07B6  0020               	movlb	0	; select bank0
 10014  07B7  0842               	movf	___flmul@temp,w
 10015  07B8  00B2               	movwf	??___flmul
 10016  07B9  0832               	movf	??___flmul,w
 10017  07BA  00BD               	movwf	___flmul@bexp
 10018  07BB  30FF               	movlw	255
 10019  07BC  05BE               	andwf	___flmul@prod,f
 10020  07BD  30FF               	movlw	255
 10021  07BE  05BF               	andwf	___flmul@prod+1,f
 10022  07BF  307F               	movlw	127
 10023  07C0  05C0               	andwf	___flmul@prod+2,f
 10024  07C1  3000               	movlw	0
 10025  07C2  05C1               	andwf	___flmul@prod+3,f
 10026  07C3  183D               	btfsc	___flmul@bexp,0
 10027  07C4  17C0               	bsf	___flmul@prod+2,7
 10028  07C5  363D               	lsrf	___flmul@bexp,w
 10029  07C6  00B2               	movwf	??___flmul
 10030  07C7  0832               	movf	??___flmul,w
 10031  07C8  00C1               	movwf	___flmul@prod+3
 10032  07C9                     l944:	
 10033  07C9  0837               	movf	___flmul@sign,w
 10034  07CA  00B2               	movwf	??___flmul
 10035  07CB  0832               	movf	??___flmul,w
 10036  07CC  04C1               	iorwf	___flmul@prod+3,f
 10037  07CD  0841               	movf	___flmul@prod+3,w
 10038  07CE  00AD               	movwf	?___flmul+3
 10039  07CF  0840               	movf	___flmul@prod+2,w
 10040  07D0  00AC               	movwf	?___flmul+2
 10041  07D1  083F               	movf	___flmul@prod+1,w
 10042  07D2  00AB               	movwf	?___flmul+1
 10043  07D3  083E               	movf	___flmul@prod,w
 10044  07D4  00AA               	movwf	?___flmul
 10045  07D5  0008               	return
 10046  07D6                     __end_of___flmul:	
 10047                           
 10048                           	psect	text24
 10049  10F1                     __ptext24:	
 10050 ;; *************** function __Umul8_16 *****************
 10051 ;; Defined at:
 10052 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8_16.c"
 10053 ;; Parameters:    Size  Location     Type
 10054 ;;  multiplier      1    wreg     unsigned char 
 10055 ;;  multiplicand    1    0[COMMON] unsigned char 
 10056 ;; Auto vars:     Size  Location     Type
 10057 ;;  multiplier      1    8[COMMON] unsigned char 
 10058 ;;  word_mpld       2    6[COMMON] unsigned int 
 10059 ;;  product         2    4[COMMON] unsigned int 
 10060 ;; Return value:  Size  Location     Type
 10061 ;;                  2    0[COMMON] unsigned int 
 10062 ;; Registers used:
 10063 ;;		wreg, status,2, status,0
 10064 ;; Tracked objects:
 10065 ;;		On entry : 0/0
 10066 ;;		On exit  : 0/0
 10067 ;;		Unchanged: 0/0
 10068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10069 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10070 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10071 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10072 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10073 ;;Total ram usage:        9 bytes
 10074 ;; Hardware stack levels used:    1
 10075 ;; This function calls:
 10076 ;;		Nothing
 10077 ;; This function is called by:
 10078 ;;		___flmul
 10079 ;; This function uses a non-reentrant model
 10080 ;;
 10081                           
 10082                           
 10083                           ;psect for function __Umul8_16
 10084  10F1                     __Umul8_16:	
 10085                           
 10086                           ;incstack = 0
 10087                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 10088                           ;__Umul8_16@multiplier stored from wreg
 10089  10F1  00F8               	movwf	__Umul8_16@multiplier
 10090  10F2  01F4               	clrf	__Umul8_16@product
 10091  10F3  01F5               	clrf	__Umul8_16@product+1
 10092  10F4  0870               	movf	__Umul8_16@multiplicand,w
 10093  10F5  00F2               	movwf	??__Umul8_16
 10094  10F6  01F3               	clrf	??__Umul8_16+1
 10095  10F7  0872               	movf	??__Umul8_16,w
 10096  10F8  00F6               	movwf	__Umul8_16@word_mpld
 10097  10F9  0873               	movf	??__Umul8_16+1,w
 10098  10FA  00F7               	movwf	__Umul8_16@word_mpld+1
 10099  10FB                     l2666:	
 10100  10FB  1C78               	btfss	__Umul8_16@multiplier,0
 10101  10FC  2901               	goto	l1026
 10102  10FD  0876               	movf	__Umul8_16@word_mpld,w
 10103  10FE  07F4               	addwf	__Umul8_16@product,f
 10104  10FF  0877               	movf	__Umul8_16@word_mpld+1,w
 10105  1100  3DF5               	addwfc	__Umul8_16@product+1,f
 10106  1101                     l1026:	
 10107  1101  3001               	movlw	1
 10108  1102                     u2785:	
 10109  1102  35F6               	lslf	__Umul8_16@word_mpld,f
 10110  1103  0DF7               	rlf	__Umul8_16@word_mpld+1,f
 10111  1104  0B89               	decfsz	9,f
 10112  1105  2902               	goto	u2785
 10113  1106  1003               	clrc
 10114  1107  0CF8               	rrf	__Umul8_16@multiplier,f
 10115  1108  0878               	movf	__Umul8_16@multiplier,w
 10116  1109  1D03               	btfss	3,2
 10117  110A  28FB               	goto	l2666
 10118  110B  0875               	movf	__Umul8_16@product+1,w
 10119  110C  00F1               	movwf	?__Umul8_16+1
 10120  110D  0874               	movf	__Umul8_16@product,w
 10121  110E  00F0               	movwf	?__Umul8_16
 10122  110F  0008               	return
 10123  1110                     __end_of__Umul8_16:	
 10124                           
 10125                           	psect	text25
 10126  14F0                     __ptext25:	
 10127 ;; *************** function ___flge *****************
 10128 ;; Defined at:
 10129 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flge.c"
 10130 ;; Parameters:    Size  Location     Type
 10131 ;;  ff1             4    0[COMMON] unsigned int 
 10132 ;;  ff2             4    4[COMMON] unsigned int 
 10133 ;; Auto vars:     Size  Location     Type
 10134 ;;		None
 10135 ;; Return value:  Size  Location     Type
 10136 ;;		None               void
 10137 ;; Registers used:
 10138 ;;		wreg, status,2, status,0
 10139 ;; Tracked objects:
 10140 ;;		On entry : 0/0
 10141 ;;		On exit  : 0/0
 10142 ;;		Unchanged: 0/0
 10143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10144 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10146 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10147 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10148 ;;Total ram usage:       12 bytes
 10149 ;; Hardware stack levels used:    1
 10150 ;; This function calls:
 10151 ;;		Nothing
 10152 ;; This function is called by:
 10153 ;;		_pid_control
 10154 ;;		_read_voltage
 10155 ;;		_read_panel
 10156 ;;		_system_voltage
 10157 ;;		_ftoa
 10158 ;; This function uses a non-reentrant model
 10159 ;;
 10160                           
 10161                           
 10162                           ;psect for function ___flge
 10163  14F0                     ___flge:	
 10164                           
 10165                           ;incstack = 0
 10166                           ; Regs used in ___flge: [wreg+status,2+status,0]
 10167  14F0  3000               	movlw	0
 10168  14F1  0570               	andwf	___flge@ff1,w
 10169  14F2  00F8               	movwf	??___flge
 10170  14F3  3000               	movlw	0
 10171  14F4  0571               	andwf	___flge@ff1+1,w
 10172  14F5  00F9               	movwf	??___flge+1
 10173  14F6  3080               	movlw	128
 10174  14F7  0572               	andwf	___flge@ff1+2,w
 10175  14F8  00FA               	movwf	??___flge+2
 10176  14F9  307F               	movlw	127
 10177  14FA  0573               	andwf	___flge@ff1+3,w
 10178  14FB  00FB               	movwf	??___flge+3
 10179  14FC  087B               	movf	??___flge+3,w
 10180  14FD  047A               	iorwf	??___flge+2,w
 10181  14FE  0479               	iorwf	??___flge+1,w
 10182  14FF  0478               	iorwf	??___flge,w
 10183  1500  1D03               	skipz
 10184  1501  2D0A               	goto	l717
 10185  1502  3000               	movlw	0
 10186  1503  00F3               	movwf	___flge@ff1+3
 10187  1504  3000               	movlw	0
 10188  1505  00F2               	movwf	___flge@ff1+2
 10189  1506  3000               	movlw	0
 10190  1507  00F1               	movwf	___flge@ff1+1
 10191  1508  3000               	movlw	0
 10192  1509  00F0               	movwf	___flge@ff1
 10193  150A                     l717:	
 10194  150A  3000               	movlw	0
 10195  150B  0574               	andwf	___flge@ff2,w
 10196  150C  00F8               	movwf	??___flge
 10197  150D  3000               	movlw	0
 10198  150E  0575               	andwf	___flge@ff2+1,w
 10199  150F  00F9               	movwf	??___flge+1
 10200  1510  3080               	movlw	128
 10201  1511  0576               	andwf	___flge@ff2+2,w
 10202  1512  00FA               	movwf	??___flge+2
 10203  1513  307F               	movlw	127
 10204  1514  0577               	andwf	___flge@ff2+3,w
 10205  1515  00FB               	movwf	??___flge+3
 10206  1516  087B               	movf	??___flge+3,w
 10207  1517  047A               	iorwf	??___flge+2,w
 10208  1518  0479               	iorwf	??___flge+1,w
 10209  1519  0478               	iorwf	??___flge,w
 10210  151A  1D03               	skipz
 10211  151B  2D24               	goto	l2816
 10212  151C  3000               	movlw	0
 10213  151D  00F7               	movwf	___flge@ff2+3
 10214  151E  3000               	movlw	0
 10215  151F  00F6               	movwf	___flge@ff2+2
 10216  1520  3000               	movlw	0
 10217  1521  00F5               	movwf	___flge@ff2+1
 10218  1522  3000               	movlw	0
 10219  1523  00F4               	movwf	___flge@ff2
 10220  1524                     l2816:	
 10221  1524  1FF3               	btfss	___flge@ff1+3,7
 10222  1525  2D3E               	goto	l2820
 10223  1526  3000               	movlw	0
 10224  1527  00F8               	movwf	??___flge
 10225  1528  3000               	movlw	0
 10226  1529  00F9               	movwf	??___flge+1
 10227  152A  3000               	movlw	0
 10228  152B  00FA               	movwf	??___flge+2
 10229  152C  3080               	movlw	128
 10230  152D  00FB               	movwf	??___flge+3
 10231  152E  0870               	movf	___flge@ff1,w
 10232  152F  02F8               	subwf	??___flge,f
 10233  1530  0871               	movf	___flge@ff1+1,w
 10234  1531  3BF9               	subwfb	??___flge+1,f
 10235  1532  0872               	movf	___flge@ff1+2,w
 10236  1533  3BFA               	subwfb	??___flge+2,f
 10237  1534  0873               	movf	___flge@ff1+3,w
 10238  1535  3BFB               	subwfb	??___flge+3,f
 10239  1536  087B               	movf	??___flge+3,w
 10240  1537  00F3               	movwf	___flge@ff1+3
 10241  1538  087A               	movf	??___flge+2,w
 10242  1539  00F2               	movwf	___flge@ff1+2
 10243  153A  0879               	movf	??___flge+1,w
 10244  153B  00F1               	movwf	___flge@ff1+1
 10245  153C  0878               	movf	??___flge,w
 10246  153D  00F0               	movwf	___flge@ff1
 10247  153E                     l2820:	
 10248  153E  1FF7               	btfss	___flge@ff2+3,7
 10249  153F  2D58               	goto	l720
 10250  1540  3000               	movlw	0
 10251  1541  00F8               	movwf	??___flge
 10252  1542  3000               	movlw	0
 10253  1543  00F9               	movwf	??___flge+1
 10254  1544  3000               	movlw	0
 10255  1545  00FA               	movwf	??___flge+2
 10256  1546  3080               	movlw	128
 10257  1547  00FB               	movwf	??___flge+3
 10258  1548  0874               	movf	___flge@ff2,w
 10259  1549  02F8               	subwf	??___flge,f
 10260  154A  0875               	movf	___flge@ff2+1,w
 10261  154B  3BF9               	subwfb	??___flge+1,f
 10262  154C  0876               	movf	___flge@ff2+2,w
 10263  154D  3BFA               	subwfb	??___flge+2,f
 10264  154E  0877               	movf	___flge@ff2+3,w
 10265  154F  3BFB               	subwfb	??___flge+3,f
 10266  1550  087B               	movf	??___flge+3,w
 10267  1551  00F7               	movwf	___flge@ff2+3
 10268  1552  087A               	movf	??___flge+2,w
 10269  1553  00F6               	movwf	___flge@ff2+2
 10270  1554  0879               	movf	??___flge+1,w
 10271  1555  00F5               	movwf	___flge@ff2+1
 10272  1556  0878               	movf	??___flge,w
 10273  1557  00F4               	movwf	___flge@ff2
 10274  1558                     l720:	
 10275  1558  3080               	movlw	128
 10276  1559  06F3               	xorwf	___flge@ff1+3,f
 10277  155A  3080               	movlw	128
 10278  155B  06F7               	xorwf	___flge@ff2+3,f
 10279  155C  0877               	movf	___flge@ff2+3,w
 10280  155D  0273               	subwf	___flge@ff1+3,w
 10281  155E  1D03               	skipz
 10282  155F  0008               	return
 10283  1560  0876               	movf	___flge@ff2+2,w
 10284  1561  0272               	subwf	___flge@ff1+2,w
 10285  1562  1D03               	skipz
 10286  1563  0008               	return
 10287  1564  0875               	movf	___flge@ff2+1,w
 10288  1565  0271               	subwf	___flge@ff1+1,w
 10289  1566  1D03               	skipz
 10290  1567  0008               	return
 10291  1568  0874               	movf	___flge@ff2,w
 10292  1569  0270               	subwf	___flge@ff1,w
 10293  156A  0008               	return
 10294  156B                     __end_of___flge:	
 10295                           
 10296                           	psect	text26
 10297  109F                     __ptext26:	
 10298 ;; *************** function _PWM3_LoadDutyValue *****************
 10299 ;; Defined at:
 10300 ;;		line 74 in file "mcc_generated_files/pwm3.c"
 10301 ;; Parameters:    Size  Location     Type
 10302 ;;  dutyValue       2   67[BANK0 ] unsigned int 
 10303 ;; Auto vars:     Size  Location     Type
 10304 ;;		None
 10305 ;; Return value:  Size  Location     Type
 10306 ;;                  1    wreg      void 
 10307 ;; Registers used:
 10308 ;;		wreg, status,2, status,0
 10309 ;; Tracked objects:
 10310 ;;		On entry : 0/0
 10311 ;;		On exit  : 0/0
 10312 ;;		Unchanged: 0/0
 10313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10314 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10316 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10317 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10318 ;;Total ram usage:        4 bytes
 10319 ;; Hardware stack levels used:    1
 10320 ;; This function calls:
 10321 ;;		Nothing
 10322 ;; This function is called by:
 10323 ;;		_main
 10324 ;;		_pid_control
 10325 ;; This function uses a non-reentrant model
 10326 ;;
 10327                           
 10328                           
 10329                           ;psect for function _PWM3_LoadDutyValue
 10330  109F                     _PWM3_LoadDutyValue:	
 10331                           
 10332                           ;pwm3.c: 77: PWM3DCH = (dutyValue & 0x03FC)>>2;
 10333                           
 10334                           ;incstack = 0
 10335                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2+status,0]
 10336  109F  0020               	movlb	0	; select bank0
 10337  10A0  0864               	movf	PWM3_LoadDutyValue@dutyValue+1,w
 10338  10A1  00E6               	movwf	??_PWM3_LoadDutyValue+1
 10339  10A2  0863               	movf	PWM3_LoadDutyValue@dutyValue,w
 10340  10A3  00E5               	movwf	??_PWM3_LoadDutyValue
 10341  10A4  36E6               	lsrf	??_PWM3_LoadDutyValue+1,f
 10342  10A5  0CE5               	rrf	??_PWM3_LoadDutyValue,f
 10343  10A6  36E6               	lsrf	??_PWM3_LoadDutyValue+1,f
 10344  10A7  0CE5               	rrf	??_PWM3_LoadDutyValue,f
 10345  10A8  0865               	movf	??_PWM3_LoadDutyValue,w
 10346  10A9  002C               	movlb	12	; select bank12
 10347  10AA  0098               	movwf	24	;volatile
 10348                           
 10349                           ;pwm3.c: 80: PWM3DCL = (dutyValue & 0x0003)<<6;
 10350  10AB  0020               	movlb	0	; select bank0
 10351  10AC  0863               	movf	PWM3_LoadDutyValue@dutyValue,w
 10352  10AD  3903               	andlw	3
 10353  10AE  00E5               	movwf	??_PWM3_LoadDutyValue
 10354  10AF  3005               	movlw	5
 10355  10B0                     u3875:	
 10356  10B0  35E5               	lslf	??_PWM3_LoadDutyValue,f
 10357  10B1  3EFF               	addlw	-1
 10358  10B2  1D03               	skipz
 10359  10B3  28B0               	goto	u3875
 10360  10B4  3565               	lslf	??_PWM3_LoadDutyValue,w
 10361  10B5  002C               	movlb	12	; select bank12
 10362  10B6  0097               	movwf	23	;volatile
 10363  10B7  0008               	return
 10364  10B8                     __end_of_PWM3_LoadDutyValue:	
 10365                           
 10366                           	psect	text27
 10367  106C                     __ptext27:	
 10368 ;; *************** function _SYSTEM_Initialize *****************
 10369 ;; Defined at:
 10370 ;;		line 50 in file "mcc_generated_files/mcc.c"
 10371 ;; Parameters:    Size  Location     Type
 10372 ;;		None
 10373 ;; Auto vars:     Size  Location     Type
 10374 ;;		None
 10375 ;; Return value:  Size  Location     Type
 10376 ;;                  1    wreg      void 
 10377 ;; Registers used:
 10378 ;;		wreg, status,2, status,0, pclath, cstack
 10379 ;; Tracked objects:
 10380 ;;		On entry : 0/0
 10381 ;;		On exit  : 0/0
 10382 ;;		Unchanged: 0/0
 10383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10388 ;;Total ram usage:        0 bytes
 10389 ;; Hardware stack levels used:    1
 10390 ;; Hardware stack levels required when called:    1
 10391 ;; This function calls:
 10392 ;;		_OSCILLATOR_Initialize
 10393 ;;		_PIN_MANAGER_Initialize
 10394 ;;		_PWM3_Initialize
 10395 ;;		_TMR6_Initialize
 10396 ;;		_WDT_Initialize
 10397 ;; This function is called by:
 10398 ;;		_main
 10399 ;; This function uses a non-reentrant model
 10400 ;;
 10401                           
 10402                           
 10403                           ;psect for function _SYSTEM_Initialize
 10404  106C                     _SYSTEM_Initialize:	
 10405                           
 10406                           ;mcc.c: 53: PIN_MANAGER_Initialize();
 10407                           
 10408                           ;incstack = 0
 10409                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10410  106C  3191  2180  3190   	fcall	_PIN_MANAGER_Initialize
 10411                           
 10412                           ;mcc.c: 54: OSCILLATOR_Initialize();
 10413  106F  3190  2015  3190   	fcall	_OSCILLATOR_Initialize
 10414                           
 10415                           ;mcc.c: 55: WDT_Initialize();
 10416  1072  3190  2005  3190   	fcall	_WDT_Initialize
 10417                           
 10418                           ;mcc.c: 56: PWM3_Initialize();
 10419  1075  3190  2051  3190   	fcall	_PWM3_Initialize
 10420                           
 10421                           ;mcc.c: 57: TMR6_Initialize();
 10422  1078  318B  230C         	fcall	_TMR6_Initialize
 10423  107A  0008               	return
 10424  107B                     __end_of_SYSTEM_Initialize:	
 10425                           
 10426                           	psect	text28
 10427  1005                     __ptext28:	
 10428 ;; *************** function _WDT_Initialize *****************
 10429 ;; Defined at:
 10430 ;;		line 70 in file "mcc_generated_files/mcc.c"
 10431 ;; Parameters:    Size  Location     Type
 10432 ;;		None
 10433 ;; Auto vars:     Size  Location     Type
 10434 ;;		None
 10435 ;; Return value:  Size  Location     Type
 10436 ;;                  1    wreg      void 
 10437 ;; Registers used:
 10438 ;;		wreg
 10439 ;; Tracked objects:
 10440 ;;		On entry : 0/0
 10441 ;;		On exit  : 0/0
 10442 ;;		Unchanged: 0/0
 10443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10448 ;;Total ram usage:        0 bytes
 10449 ;; Hardware stack levels used:    1
 10450 ;; This function calls:
 10451 ;;		Nothing
 10452 ;; This function is called by:
 10453 ;;		_SYSTEM_Initialize
 10454 ;; This function uses a non-reentrant model
 10455 ;;
 10456                           
 10457                           
 10458                           ;psect for function _WDT_Initialize
 10459  1005                     _WDT_Initialize:	
 10460                           
 10461                           ;mcc.c: 73: WDTCON = 0x16;
 10462                           
 10463                           ;incstack = 0
 10464                           ; Regs used in _WDT_Initialize: [wreg]
 10465  1005  3016               	movlw	22
 10466  1006  0021               	movlb	1	; select bank1
 10467  1007  0097               	movwf	23	;volatile
 10468  1008  0008               	return
 10469  1009                     __end_of_WDT_Initialize:	
 10470                           
 10471                           	psect	text29
 10472  0B0C                     __ptext29:	
 10473 ;; *************** function _TMR6_Initialize *****************
 10474 ;; Defined at:
 10475 ;;		line 62 in file "mcc_generated_files/tmr6.c"
 10476 ;; Parameters:    Size  Location     Type
 10477 ;;		None
 10478 ;; Auto vars:     Size  Location     Type
 10479 ;;		None
 10480 ;; Return value:  Size  Location     Type
 10481 ;;                  1    wreg      void 
 10482 ;; Registers used:
 10483 ;;		wreg, status,2
 10484 ;; Tracked objects:
 10485 ;;		On entry : 0/0
 10486 ;;		On exit  : 0/0
 10487 ;;		Unchanged: 0/0
 10488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10493 ;;Total ram usage:        0 bytes
 10494 ;; Hardware stack levels used:    1
 10495 ;; This function calls:
 10496 ;;		Nothing
 10497 ;; This function is called by:
 10498 ;;		_SYSTEM_Initialize
 10499 ;; This function uses a non-reentrant model
 10500 ;;
 10501                           
 10502                           
 10503                           ;psect for function _TMR6_Initialize
 10504  0B0C                     _TMR6_Initialize:	
 10505                           
 10506                           ;tmr6.c: 67: PR6 = 0x63;
 10507                           
 10508                           ;incstack = 0
 10509                           ; Regs used in _TMR6_Initialize: [wreg+status,2]
 10510  0B0C  3063               	movlw	99
 10511  0B0D  0028               	movlb	8	; select bank8
 10512  0B0E  009D               	movwf	29	;volatile
 10513                           
 10514                           ;tmr6.c: 70: TMR6 = 0x00;
 10515  0B0F  019C               	clrf	28	;volatile
 10516                           
 10517                           ;tmr6.c: 73: PIR2bits.TMR6IF = 0;
 10518  0B10  0020               	movlb	0	; select bank0
 10519  0B11  1112               	bcf	18,2	;volatile
 10520                           
 10521                           ;tmr6.c: 76: T6CON = 0x0C;
 10522  0B12  300C               	movlw	12
 10523  0B13  0028               	movlb	8	; select bank8
 10524  0B14  009E               	movwf	30	;volatile
 10525  0B15  0008               	return
 10526  0B16                     __end_of_TMR6_Initialize:	
 10527                           
 10528                           	psect	text30
 10529  1051                     __ptext30:	
 10530 ;; *************** function _PWM3_Initialize *****************
 10531 ;; Defined at:
 10532 ;;		line 58 in file "mcc_generated_files/pwm3.c"
 10533 ;; Parameters:    Size  Location     Type
 10534 ;;		None
 10535 ;; Auto vars:     Size  Location     Type
 10536 ;;		None
 10537 ;; Return value:  Size  Location     Type
 10538 ;;                  1    wreg      void 
 10539 ;; Registers used:
 10540 ;;		wreg, status,2, status,0
 10541 ;; Tracked objects:
 10542 ;;		On entry : 0/0
 10543 ;;		On exit  : 0/0
 10544 ;;		Unchanged: 0/0
 10545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10550 ;;Total ram usage:        0 bytes
 10551 ;; Hardware stack levels used:    1
 10552 ;; This function calls:
 10553 ;;		Nothing
 10554 ;; This function is called by:
 10555 ;;		_SYSTEM_Initialize
 10556 ;; This function uses a non-reentrant model
 10557 ;;
 10558                           
 10559                           
 10560                           ;psect for function _PWM3_Initialize
 10561  1051                     _PWM3_Initialize:	
 10562                           
 10563                           ;pwm3.c: 62: PWM3CON = 0x80;
 10564                           
 10565                           ;incstack = 0
 10566                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
 10567  1051  3080               	movlw	128
 10568  1052  002C               	movlb	12	; select bank12
 10569  1053  0099               	movwf	25	;volatile
 10570                           
 10571                           ;pwm3.c: 65: PWM3DCH = 0x31;
 10572  1054  3031               	movlw	49
 10573  1055  0098               	movwf	24	;volatile
 10574                           
 10575                           ;pwm3.c: 68: PWM3DCL = 0xC0;
 10576  1056  30C0               	movlw	192
 10577  1057  0097               	movwf	23	;volatile
 10578                           
 10579                           ;pwm3.c: 71: CCPTMRSbits.P3TSEL = 2;
 10580  1058  0025               	movlb	5	; select bank5
 10581  1059  081E               	movf	30,w	;volatile
 10582  105A  39CF               	andlw	-49
 10583  105B  3820               	iorlw	32
 10584  105C  009E               	movwf	30	;volatile
 10585  105D  0008               	return
 10586  105E                     __end_of_PWM3_Initialize:	
 10587                           
 10588                           	psect	text31
 10589  1180                     __ptext31:	
 10590 ;; *************** function _PIN_MANAGER_Initialize *****************
 10591 ;; Defined at:
 10592 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 10593 ;; Parameters:    Size  Location     Type
 10594 ;;		None
 10595 ;; Auto vars:     Size  Location     Type
 10596 ;;		None
 10597 ;; Return value:  Size  Location     Type
 10598 ;;                  1    wreg      void 
 10599 ;; Registers used:
 10600 ;;		wreg, status,2
 10601 ;; Tracked objects:
 10602 ;;		On entry : 0/0
 10603 ;;		On exit  : 0/0
 10604 ;;		Unchanged: 0/0
 10605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10610 ;;Total ram usage:        0 bytes
 10611 ;; Hardware stack levels used:    1
 10612 ;; This function calls:
 10613 ;;		Nothing
 10614 ;; This function is called by:
 10615 ;;		_SYSTEM_Initialize
 10616 ;; This function uses a non-reentrant model
 10617 ;;
 10618                           
 10619                           
 10620                           ;psect for function _PIN_MANAGER_Initialize
 10621  1180                     _PIN_MANAGER_Initialize:	
 10622                           
 10623                           ;pin_manager.c: 60: LATE = 0x00;
 10624                           
 10625                           ;incstack = 0
 10626                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 10627  1180  0022               	movlb	2	; select bank2
 10628  1181  0190               	clrf	16	;volatile
 10629                           
 10630                           ;pin_manager.c: 61: LATD = 0x00;
 10631  1182  018F               	clrf	15	;volatile
 10632                           
 10633                           ;pin_manager.c: 62: LATA = 0x00;
 10634  1183  018C               	clrf	12	;volatile
 10635                           
 10636                           ;pin_manager.c: 63: LATB = 0x00;
 10637  1184  018D               	clrf	13	;volatile
 10638                           
 10639                           ;pin_manager.c: 64: LATC = 0x00;
 10640  1185  018E               	clrf	14	;volatile
 10641                           
 10642                           ;pin_manager.c: 69: TRISE = 0x0F;
 10643  1186  300F               	movlw	15
 10644  1187  0021               	movlb	1	; select bank1
 10645  1188  0090               	movwf	16	;volatile
 10646                           
 10647                           ;pin_manager.c: 70: TRISA = 0xFF;
 10648  1189  30FF               	movlw	255
 10649  118A  008C               	movwf	12	;volatile
 10650                           
 10651                           ;pin_manager.c: 71: TRISB = 0xFE;
 10652  118B  30FE               	movlw	254
 10653  118C  008D               	movwf	13	;volatile
 10654                           
 10655                           ;pin_manager.c: 72: TRISC = 0xFF;
 10656  118D  30FF               	movlw	255
 10657  118E  008E               	movwf	14	;volatile
 10658                           
 10659                           ;pin_manager.c: 73: TRISD = 0xFF;
 10660  118F  30FF               	movlw	255
 10661  1190  008F               	movwf	15	;volatile
 10662                           
 10663                           ;pin_manager.c: 78: ANSELD = 0xFF;
 10664  1191  30FF               	movlw	255
 10665  1192  0023               	movlb	3	; select bank3
 10666  1193  008F               	movwf	15	;volatile
 10667                           
 10668                           ;pin_manager.c: 79: ANSELC = 0xFC;
 10669  1194  30FC               	movlw	252
 10670  1195  008E               	movwf	14	;volatile
 10671                           
 10672                           ;pin_manager.c: 80: ANSELB = 0x3F;
 10673  1196  303F               	movlw	63
 10674  1197  008D               	movwf	13	;volatile
 10675                           
 10676                           ;pin_manager.c: 81: ANSELE = 0x07;
 10677  1198  3007               	movlw	7
 10678  1199  0090               	movwf	16	;volatile
 10679                           
 10680                           ;pin_manager.c: 82: ANSELA = 0x3F;
 10681  119A  303F               	movlw	63
 10682  119B  008C               	movwf	12	;volatile
 10683                           
 10684                           ;pin_manager.c: 87: WPUD = 0x00;
 10685  119C  0024               	movlb	4	; select bank4
 10686  119D  018F               	clrf	15	;volatile
 10687                           
 10688                           ;pin_manager.c: 88: WPUE = 0x00;
 10689  119E  0190               	clrf	16	;volatile
 10690                           
 10691                           ;pin_manager.c: 89: WPUB = 0x00;
 10692  119F  018D               	clrf	13	;volatile
 10693                           
 10694                           ;pin_manager.c: 90: WPUA = 0x00;
 10695  11A0  018C               	clrf	12	;volatile
 10696                           
 10697                           ;pin_manager.c: 91: WPUC = 0x00;
 10698  11A1  018E               	clrf	14	;volatile
 10699                           
 10700                           ;pin_manager.c: 92: OPTION_REGbits.nWPUEN = 1;
 10701  11A2  0021               	movlb	1	; select bank1
 10702  11A3  1795               	bsf	21,7	;volatile
 10703                           
 10704                           ;pin_manager.c: 97: ODCONE = 0x00;
 10705  11A4  0025               	movlb	5	; select bank5
 10706  11A5  0190               	clrf	16	;volatile
 10707                           
 10708                           ;pin_manager.c: 98: ODCONA = 0x00;
 10709  11A6  018C               	clrf	12	;volatile
 10710                           
 10711                           ;pin_manager.c: 99: ODCONB = 0x00;
 10712  11A7  018D               	clrf	13	;volatile
 10713                           
 10714                           ;pin_manager.c: 100: ODCONC = 0x00;
 10715  11A8  018E               	clrf	14	;volatile
 10716                           
 10717                           ;pin_manager.c: 101: ODCOND = 0x00;
 10718  11A9  018F               	clrf	15	;volatile
 10719                           
 10720                           ;pin_manager.c: 106: SLRCONA = 0xFF;
 10721  11AA  30FF               	movlw	255
 10722  11AB  0026               	movlb	6	; select bank6
 10723  11AC  008C               	movwf	12	;volatile
 10724                           
 10725                           ;pin_manager.c: 107: SLRCONB = 0xFF;
 10726  11AD  30FF               	movlw	255
 10727  11AE  008D               	movwf	13	;volatile
 10728                           
 10729                           ;pin_manager.c: 108: SLRCONC = 0xFF;
 10730  11AF  30FF               	movlw	255
 10731  11B0  008E               	movwf	14	;volatile
 10732                           
 10733                           ;pin_manager.c: 109: SLRCOND = 0xFF;
 10734  11B1  30FF               	movlw	255
 10735  11B2  008F               	movwf	15	;volatile
 10736                           
 10737                           ;pin_manager.c: 110: SLRCONE = 0x07;
 10738  11B3  3007               	movlw	7
 10739  11B4  0090               	movwf	16	;volatile
 10740                           
 10741                           ;pin_manager.c: 119: RB0PPS = 0x0E;
 10742  11B5  300E               	movlw	14
 10743  11B6  003D               	movlb	29	; select bank29
 10744  11B7  0098               	movwf	24	;volatile
 10745  11B8  0008               	return
 10746  11B9                     __end_of_PIN_MANAGER_Initialize:	
 10747                           
 10748                           	psect	text32
 10749  1015                     __ptext32:	
 10750 ;; *************** function _OSCILLATOR_Initialize *****************
 10751 ;; Defined at:
 10752 ;;		line 60 in file "mcc_generated_files/mcc.c"
 10753 ;; Parameters:    Size  Location     Type
 10754 ;;		None
 10755 ;; Auto vars:     Size  Location     Type
 10756 ;;		None
 10757 ;; Return value:  Size  Location     Type
 10758 ;;                  1    wreg      void 
 10759 ;; Registers used:
 10760 ;;		wreg, status,2
 10761 ;; Tracked objects:
 10762 ;;		On entry : 0/0
 10763 ;;		On exit  : 0/0
 10764 ;;		Unchanged: 0/0
 10765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10770 ;;Total ram usage:        0 bytes
 10771 ;; Hardware stack levels used:    1
 10772 ;; This function calls:
 10773 ;;		Nothing
 10774 ;; This function is called by:
 10775 ;;		_SYSTEM_Initialize
 10776 ;; This function uses a non-reentrant model
 10777 ;;
 10778                           
 10779                           
 10780                           ;psect for function _OSCILLATOR_Initialize
 10781  1015                     _OSCILLATOR_Initialize:	
 10782                           
 10783                           ;mcc.c: 63: OSCCON = 0x38;
 10784                           
 10785                           ;incstack = 0
 10786                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 10787  1015  3038               	movlw	56
 10788  1016  0021               	movlb	1	; select bank1
 10789  1017  0099               	movwf	25	;volatile
 10790                           
 10791                           ;mcc.c: 65: OSCTUNE = 0x00;
 10792  1018  0198               	clrf	24	;volatile
 10793                           
 10794                           ;mcc.c: 67: BORCON = 0x00;
 10795  1019  0022               	movlb	2	; select bank2
 10796  101A  0196               	clrf	22	;volatile
 10797  101B  0008               	return
 10798  101C                     __end_of_OSCILLATOR_Initialize:	
 10799                           
 10800                           	psect	text33
 10801  128D                     __ptext33:	
 10802 ;; *************** function _OLED_Init *****************
 10803 ;; Defined at:
 10804 ;;		line 175 in file "oled.c"
 10805 ;; Parameters:    Size  Location     Type
 10806 ;;		None
 10807 ;; Auto vars:     Size  Location     Type
 10808 ;;		None
 10809 ;; Return value:  Size  Location     Type
 10810 ;;                  1    wreg      void 
 10811 ;; Registers used:
 10812 ;;		wreg, status,2, status,0, pclath, cstack
 10813 ;; Tracked objects:
 10814 ;;		On entry : 0/0
 10815 ;;		On exit  : 0/0
 10816 ;;		Unchanged: 0/0
 10817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10822 ;;Total ram usage:        0 bytes
 10823 ;; Hardware stack levels used:    1
 10824 ;; Hardware stack levels required when called:    2
 10825 ;; This function calls:
 10826 ;;		_OLED_Command
 10827 ;; This function is called by:
 10828 ;;		_main
 10829 ;; This function uses a non-reentrant model
 10830 ;;
 10831                           
 10832                           
 10833                           ;psect for function _OLED_Init
 10834  128D                     _OLED_Init:	
 10835                           
 10836                           ;oled.c: 177: OLED_Command(0xAE);
 10837                           
 10838                           ;incstack = 0
 10839                           ; Regs used in _OLED_Init: [wreg+status,2+status,0+pclath+cstack]
 10840  128D  30AE               	movlw	174
 10841  128E  3190  20D3  3192   	fcall	_OLED_Command
 10842                           
 10843                           ;oled.c: 178: OLED_Command(0xD5);
 10844  1291  30D5               	movlw	213
 10845  1292  3190  20D3  3192   	fcall	_OLED_Command
 10846                           
 10847                           ;oled.c: 179: OLED_Command(0x80);
 10848  1295  3080               	movlw	128
 10849  1296  3190  20D3  3192   	fcall	_OLED_Command
 10850                           
 10851                           ;oled.c: 180: OLED_Command(0xA8);
 10852  1299  30A8               	movlw	168
 10853  129A  3190  20D3  3192   	fcall	_OLED_Command
 10854                           
 10855                           ;oled.c: 181: OLED_Command(0x1F);
 10856  129D  301F               	movlw	31
 10857  129E  3190  20D3  3192   	fcall	_OLED_Command
 10858                           
 10859                           ;oled.c: 182: OLED_Command(0xD3);
 10860  12A1  30D3               	movlw	211
 10861  12A2  3190  20D3  3192   	fcall	_OLED_Command
 10862                           
 10863                           ;oled.c: 183: OLED_Command(0x0);
 10864  12A5  3000               	movlw	0
 10865  12A6  3190  20D3  3192   	fcall	_OLED_Command
 10866                           
 10867                           ;oled.c: 184: OLED_Command(0x40 | 0x0);
 10868  12A9  3040               	movlw	64
 10869  12AA  3190  20D3  3192   	fcall	_OLED_Command
 10870                           
 10871                           ;oled.c: 185: OLED_Command(0x8D);
 10872  12AD  308D               	movlw	141
 10873  12AE  3190  20D3  3192   	fcall	_OLED_Command
 10874                           
 10875                           ;oled.c: 186: OLED_Command(0xAF);
 10876  12B1  30AF               	movlw	175
 10877  12B2  3190  20D3  3192   	fcall	_OLED_Command
 10878                           
 10879                           ;oled.c: 187: OLED_Command(0x20);
 10880  12B5  3020               	movlw	32
 10881  12B6  3190  20D3  3192   	fcall	_OLED_Command
 10882                           
 10883                           ;oled.c: 188: OLED_Command(0x00);
 10884  12B9  3000               	movlw	0
 10885  12BA  3190  20D3  3192   	fcall	_OLED_Command
 10886                           
 10887                           ;oled.c: 189: OLED_Command(0xA0 | 0x1);
 10888  12BD  30A1               	movlw	161
 10889  12BE  3190  20D3  3192   	fcall	_OLED_Command
 10890                           
 10891                           ;oled.c: 190: OLED_Command(0xC8);
 10892  12C1  30C8               	movlw	200
 10893  12C2  3190  20D3  3192   	fcall	_OLED_Command
 10894                           
 10895                           ;oled.c: 191: OLED_Command(0xDA);
 10896  12C5  30DA               	movlw	218
 10897  12C6  3190  20D3  3192   	fcall	_OLED_Command
 10898                           
 10899                           ;oled.c: 192: OLED_Command(0x02);
 10900  12C9  3002               	movlw	2
 10901  12CA  3190  20D3  3192   	fcall	_OLED_Command
 10902                           
 10903                           ;oled.c: 193: OLED_Command(0x81);
 10904  12CD  3081               	movlw	129
 10905  12CE  3190  20D3  3192   	fcall	_OLED_Command
 10906                           
 10907                           ;oled.c: 194: OLED_Command(0x8F);
 10908  12D1  308F               	movlw	143
 10909  12D2  3190  20D3  3192   	fcall	_OLED_Command
 10910                           
 10911                           ;oled.c: 195: OLED_Command(0xD9);
 10912  12D5  30D9               	movlw	217
 10913  12D6  3190  20D3  3192   	fcall	_OLED_Command
 10914                           
 10915                           ;oled.c: 196: OLED_Command(0xF1);
 10916  12D9  30F1               	movlw	241
 10917  12DA  3190  20D3  3192   	fcall	_OLED_Command
 10918                           
 10919                           ;oled.c: 197: OLED_Command(0xDB);
 10920  12DD  30DB               	movlw	219
 10921  12DE  3190  20D3  3192   	fcall	_OLED_Command
 10922                           
 10923                           ;oled.c: 198: OLED_Command(0x40);
 10924  12E1  3040               	movlw	64
 10925  12E2  3190  20D3  3192   	fcall	_OLED_Command
 10926                           
 10927                           ;oled.c: 199: OLED_Command(0xA4);
 10928  12E5  30A4               	movlw	164
 10929  12E6  3190  20D3  3192   	fcall	_OLED_Command
 10930                           
 10931                           ;oled.c: 200: OLED_Command(0xA6);
 10932  12E9  30A6               	movlw	166
 10933  12EA  3190  20D3  3192   	fcall	_OLED_Command
 10934                           
 10935                           ;oled.c: 201: OLED_Command(0xAF);
 10936  12ED  30AF               	movlw	175
 10937  12EE  3190  20D3         	fcall	_OLED_Command
 10938  12F0  0008               	return
 10939  12F1                     __end_of_OLED_Init:	
 10940                           
 10941                           	psect	text34
 10942  1157                     __ptext34:	
 10943 ;; *************** function _OLED_Clear *****************
 10944 ;; Defined at:
 10945 ;;		line 265 in file "oled.c"
 10946 ;; Parameters:    Size  Location     Type
 10947 ;;		None
 10948 ;; Auto vars:     Size  Location     Type
 10949 ;;  col             2   20[BANK0 ] unsigned int 
 10950 ;;  row             2   18[BANK0 ] unsigned int 
 10951 ;; Return value:  Size  Location     Type
 10952 ;;                  1    wreg      void 
 10953 ;; Registers used:
 10954 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10955 ;; Tracked objects:
 10956 ;;		On entry : 0/0
 10957 ;;		On exit  : 0/0
 10958 ;;		Unchanged: 0/0
 10959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10961 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10962 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10963 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10964 ;;Total ram usage:        5 bytes
 10965 ;; Hardware stack levels used:    1
 10966 ;; Hardware stack levels required when called:    3
 10967 ;; This function calls:
 10968 ;;		_OLED_PutChar
 10969 ;;		_OLED_YX
 10970 ;; This function is called by:
 10971 ;;		_main
 10972 ;; This function uses a non-reentrant model
 10973 ;;
 10974                           
 10975                           
 10976                           ;psect for function _OLED_Clear
 10977  1157                     _OLED_Clear:	
 10978                           
 10979                           ;oled.c: 267: for ( uint16_t row = 0; row < 8; row++ ) {
 10980                           
 10981                           ;incstack = 0
 10982                           ; Regs used in _OLED_Clear: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10983  1157  0020               	movlb	0	; select bank0
 10984  1158  01B2               	clrf	OLED_Clear@row
 10985  1159  01B3               	clrf	OLED_Clear@row+1
 10986  115A                     l3262:	
 10987                           
 10988                           ;oled.c: 268: for ( uint16_t col = 0; col < 16; col++ ) {
 10989  115A  01B4               	clrf	OLED_Clear@col
 10990  115B  01B5               	clrf	OLED_Clear@col+1
 10991  115C                     l3268:	
 10992                           
 10993                           ;oled.c: 269: OLED_YX( row, col );
 10994  115C  0834               	movf	OLED_Clear@col,w
 10995  115D  00FC               	movwf	??_OLED_Clear
 10996  115E  087C               	movf	??_OLED_Clear,w
 10997  115F  00F5               	movwf	OLED_YX@Column
 10998  1160  0832               	movf	OLED_Clear@row,w
 10999  1161  3191  212F  3191   	fcall	_OLED_YX
 11000                           
 11001                           ;oled.c: 270: OLED_PutChar(' ');
 11002  1164  3020               	movlw	32
 11003  1165  3194  2487  3191   	fcall	_OLED_PutChar
 11004  1168  3001               	movlw	1
 11005  1169  0020               	movlb	0	; select bank0
 11006  116A  07B4               	addwf	OLED_Clear@col,f
 11007  116B  3000               	movlw	0
 11008  116C  3DB5               	addwfc	OLED_Clear@col+1,f
 11009  116D  3000               	movlw	0
 11010  116E  0235               	subwf	OLED_Clear@col+1,w
 11011  116F  3010               	movlw	16
 11012  1170  1903               	skipnz
 11013  1171  0234               	subwf	OLED_Clear@col,w
 11014  1172  1C03               	skipc
 11015  1173  295C               	goto	l3268
 11016  1174  3001               	movlw	1
 11017  1175  07B2               	addwf	OLED_Clear@row,f
 11018  1176  3000               	movlw	0
 11019  1177  3DB3               	addwfc	OLED_Clear@row+1,f
 11020  1178  3000               	movlw	0
 11021  1179  0233               	subwf	OLED_Clear@row+1,w
 11022  117A  3008               	movlw	8
 11023  117B  1903               	skipnz
 11024  117C  0232               	subwf	OLED_Clear@row,w
 11025  117D  1803               	btfsc	3,0
 11026  117E  0008               	return
 11027  117F  295A               	goto	l3262
 11028  1180                     __end_of_OLED_Clear:	
 11029                           
 11030                           	psect	text35
 11031  112F                     __ptext35:	
 11032 ;; *************** function _OLED_YX *****************
 11033 ;; Defined at:
 11034 ;;		line 214 in file "oled.c"
 11035 ;; Parameters:    Size  Location     Type
 11036 ;;  Row             1    wreg     unsigned char 
 11037 ;;  Column          1    5[COMMON] unsigned char 
 11038 ;; Auto vars:     Size  Location     Type
 11039 ;;  Row             1    9[COMMON] unsigned char 
 11040 ;; Return value:  Size  Location     Type
 11041 ;;                  1    wreg      void 
 11042 ;; Registers used:
 11043 ;;		wreg, status,2, status,0, pclath, cstack
 11044 ;; Tracked objects:
 11045 ;;		On entry : 0/0
 11046 ;;		On exit  : 0/0
 11047 ;;		Unchanged: 0/0
 11048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11049 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11050 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11051 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11052 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11053 ;;Total ram usage:        5 bytes
 11054 ;; Hardware stack levels used:    1
 11055 ;; Hardware stack levels required when called:    2
 11056 ;; This function calls:
 11057 ;;		_OLED_Command
 11058 ;; This function is called by:
 11059 ;;		_print_data
 11060 ;;		_OLED_Clear
 11061 ;; This function uses a non-reentrant model
 11062 ;;
 11063                           
 11064                           
 11065                           ;psect for function _OLED_YX
 11066  112F                     _OLED_YX:	
 11067                           
 11068                           ;incstack = 0
 11069                           ; Regs used in _OLED_YX: [wreg+status,2+status,0+pclath+cstack]
 11070                           ;OLED_YX@Row stored from wreg
 11071  112F  00F9               	movwf	OLED_YX@Row
 11072                           
 11073                           ;oled.c: 216: OLED_Command( 0xB0 + Row);
 11074  1130  0879               	movf	OLED_YX@Row,w
 11075  1131  3EB0               	addlw	176
 11076  1132  3190  20D3  3191   	fcall	_OLED_Command
 11077                           
 11078                           ;oled.c: 217: OLED_Command( 0x00 + (8*Column & 0x0F) );
 11079  1135  0875               	movf	OLED_YX@Column,w
 11080  1136  00F6               	movwf	??_OLED_YX
 11081  1137  3002               	movlw	2
 11082  1138                     u3885:	
 11083  1138  35F6               	lslf	??_OLED_YX,f
 11084  1139  3EFF               	addlw	-1
 11085  113A  1D03               	skipz
 11086  113B  2938               	goto	u3885
 11087  113C  3576               	lslf	??_OLED_YX,w
 11088  113D  390F               	andlw	15
 11089  113E  3190  20D3  3191   	fcall	_OLED_Command
 11090                           
 11091                           ;oled.c: 218: OLED_Command( 0x10 + ((8*Column>>4)&0x0F) );
 11092  1141  0875               	movf	OLED_YX@Column,w
 11093  1142  00F6               	movwf	??_OLED_YX
 11094  1143  01F7               	clrf	??_OLED_YX+1
 11095  1144  35F6               	lslf	??_OLED_YX,f
 11096  1145  0DF7               	rlf	??_OLED_YX+1,f
 11097  1146  35F6               	lslf	??_OLED_YX,f
 11098  1147  0DF7               	rlf	??_OLED_YX+1,f
 11099  1148  35F6               	lslf	??_OLED_YX,f
 11100  1149  0DF7               	rlf	??_OLED_YX+1,f
 11101  114A  3004               	movlw	4
 11102  114B  00F8               	movwf	??_OLED_YX+2
 11103  114C                     u3895:	
 11104  114C  0D77               	rlf	??_OLED_YX+1,w
 11105  114D  0CF7               	rrf	??_OLED_YX+1,f
 11106  114E  0CF6               	rrf	??_OLED_YX,f
 11107  114F  0BF8               	decfsz	??_OLED_YX+2,f
 11108  1150  294C               	goto	u3895
 11109  1151  0876               	movf	??_OLED_YX,w
 11110  1152  390F               	andlw	15
 11111  1153  3E10               	addlw	16
 11112  1154  3190  20D3         	fcall	_OLED_Command
 11113  1156  0008               	return
 11114  1157                     __end_of_OLED_YX:	
 11115                           
 11116                           	psect	text36
 11117  10D3                     __ptext36:	
 11118 ;; *************** function _OLED_Command *****************
 11119 ;; Defined at:
 11120 ;;		line 139 in file "oled.c"
 11121 ;; Parameters:    Size  Location     Type
 11122 ;;  temp            1    wreg     unsigned char 
 11123 ;; Auto vars:     Size  Location     Type
 11124 ;;  temp            1    4[COMMON] unsigned char 
 11125 ;; Return value:  Size  Location     Type
 11126 ;;                  1    wreg      void 
 11127 ;; Registers used:
 11128 ;;		wreg, status,2, status,0, pclath, cstack
 11129 ;; Tracked objects:
 11130 ;;		On entry : 0/0
 11131 ;;		On exit  : 0/0
 11132 ;;		Unchanged: 0/0
 11133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11135 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11136 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11137 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11138 ;;Total ram usage:        3 bytes
 11139 ;; Hardware stack levels used:    1
 11140 ;; Hardware stack levels required when called:    1
 11141 ;; This function calls:
 11142 ;;		_Send_I2C_Data
 11143 ;;		_Send_I2C_StartBit
 11144 ;;		_Send_I2C_StopBit
 11145 ;; This function is called by:
 11146 ;;		_OLED_Init
 11147 ;;		_OLED_YX
 11148 ;; This function uses a non-reentrant model
 11149 ;;
 11150                           
 11151                           
 11152                           ;psect for function _OLED_Command
 11153  10D3                     _OLED_Command:	
 11154                           
 11155                           ;incstack = 0
 11156                           ; Regs used in _OLED_Command: [wreg+status,2+status,0+pclath+cstack]
 11157                           ;OLED_Command@temp stored from wreg
 11158  10D3  00F4               	movwf	OLED_Command@temp
 11159                           
 11160                           ;oled.c: 141: Send_I2C_StartBit();
 11161  10D4  3190  2023  3190   	fcall	_Send_I2C_StartBit
 11162                           
 11163                           ;oled.c: 142: Send_I2C_Data(0x3C << 1);
 11164  10D7  3078               	movlw	120
 11165  10D8  00F0               	movwf	Send_I2C_Data@databyte
 11166  10D9  3000               	movlw	0
 11167  10DA  00F1               	movwf	Send_I2C_Data@databyte+1
 11168  10DB  3190  2033  3190   	fcall	_Send_I2C_Data
 11169                           
 11170                           ;oled.c: 143: Send_I2C_Data(0x00);
 11171  10DE  3000               	movlw	0
 11172  10DF  00F0               	movwf	Send_I2C_Data@databyte
 11173  10E0  00F1               	movwf	Send_I2C_Data@databyte+1
 11174  10E1  3190  2033  3190   	fcall	_Send_I2C_Data
 11175                           
 11176                           ;oled.c: 144: Send_I2C_Data(temp);
 11177  10E4  0874               	movf	OLED_Command@temp,w
 11178  10E5  00F2               	movwf	??_OLED_Command
 11179  10E6  01F3               	clrf	??_OLED_Command+1
 11180  10E7  0872               	movf	??_OLED_Command,w
 11181  10E8  00F0               	movwf	Send_I2C_Data@databyte
 11182  10E9  0873               	movf	??_OLED_Command+1,w
 11183  10EA  00F1               	movwf	Send_I2C_Data@databyte+1
 11184  10EB  3190  2033  3190   	fcall	_Send_I2C_Data
 11185                           
 11186                           ;oled.c: 145: Send_I2C_StopBit();
 11187  10EE  3190  202B         	fcall	_Send_I2C_StopBit
 11188  10F0  0008               	return
 11189  10F1                     __end_of_OLED_Command:	
 11190                           
 11191                           	psect	text37
 11192  1487                     __ptext37:	
 11193 ;; *************** function _OLED_PutChar *****************
 11194 ;; Defined at:
 11195 ;;		line 230 in file "oled.c"
 11196 ;; Parameters:    Size  Location     Type
 11197 ;;  ch              1    wreg     unsigned char 
 11198 ;; Auto vars:     Size  Location     Type
 11199 ;;  ch              1   17[BANK0 ] unsigned char 
 11200 ;;  bytes           9    4[BANK0 ] unsigned char [9]
 11201 ;;  i               2   15[BANK0 ] int 
 11202 ;;  base            2   13[BANK0 ] PTR const unsigned char 
 11203 ;;		 -> OledFont(768), 
 11204 ;; Return value:  Size  Location     Type
 11205 ;;                  1    wreg      void 
 11206 ;; Registers used:
 11207 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11208 ;; Tracked objects:
 11209 ;;		On entry : 0/0
 11210 ;;		On exit  : 0/0
 11211 ;;		Unchanged: 0/0
 11212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11214 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11215 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11216 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11217 ;;Total ram usage:       18 bytes
 11218 ;; Hardware stack levels used:    1
 11219 ;; Hardware stack levels required when called:    1
 11220 ;; This function calls:
 11221 ;;		_Send_I2C_Data
 11222 ;;		_Send_I2C_StartBit
 11223 ;;		_Send_I2C_StopBit
 11224 ;;		_memmove
 11225 ;; This function is called by:
 11226 ;;		_OLED_Clear
 11227 ;;		_OLED_Write_String
 11228 ;; This function uses a non-reentrant model
 11229 ;;
 11230                           
 11231                           
 11232                           ;psect for function _OLED_PutChar
 11233  1487                     _OLED_PutChar:	
 11234                           
 11235                           ;incstack = 0
 11236                           ; Regs used in _OLED_PutChar: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11237                           ;OLED_PutChar@ch stored from wreg
 11238  1487  0020               	movlb	0	; select bank0
 11239  1488  00B1               	movwf	OLED_PutChar@ch
 11240                           
 11241                           ;oled.c: 232: if ( ( ch < 32 ) || ( ch > 127 ) ){
 11242  1489  3020               	movlw	32
 11243  148A  0231               	subwf	OLED_PutChar@ch,w
 11244  148B  1C03               	skipc
 11245  148C  2C91               	goto	l2680
 11246  148D  3080               	movlw	128
 11247  148E  0231               	subwf	OLED_PutChar@ch,w
 11248  148F  1C03               	skipc
 11249  1490  2C95               	goto	l2682
 11250  1491                     l2680:	
 11251                           
 11252                           ;oled.c: 233: ch = ' ';
 11253  1491  3020               	movlw	32
 11254  1492  00A0               	movwf	??_OLED_PutChar
 11255  1493  0820               	movf	??_OLED_PutChar,w
 11256  1494  00B1               	movwf	OLED_PutChar@ch
 11257  1495                     l2682:	
 11258                           
 11259                           ;oled.c: 234: };oled.c: 236: const uint8_t *base = &OledFont[ch - 32][0];
 11260  1495  0831               	movf	OLED_PutChar@ch,w
 11261  1496  00A0               	movwf	??_OLED_PutChar
 11262  1497  01A1               	clrf	??_OLED_PutChar+1
 11263  1498  35A0               	lslf	??_OLED_PutChar,f
 11264  1499  0DA1               	rlf	??_OLED_PutChar+1,f
 11265  149A  35A0               	lslf	??_OLED_PutChar,f
 11266  149B  0DA1               	rlf	??_OLED_PutChar+1,f
 11267  149C  35A0               	lslf	??_OLED_PutChar,f
 11268  149D  0DA1               	rlf	??_OLED_PutChar+1,f
 11269  149E  3000               	movlw	low ((_OledFont| (0+32768)+65280))
 11270  149F  00A2               	movwf	??_OLED_PutChar+2
 11271  14A0  3087               	movlw	high ((_OledFont| (0+32768)+65280))
 11272  14A1  00A3               	movwf	??_OLED_PutChar+3
 11273  14A2  0820               	movf	??_OLED_PutChar,w
 11274  14A3  0722               	addwf	??_OLED_PutChar+2,w
 11275  14A4  00AD               	movwf	OLED_PutChar@base
 11276  14A5  0821               	movf	??_OLED_PutChar+1,w
 11277  14A6  3D23               	addwfc	??_OLED_PutChar+3,w
 11278  14A7  00AE               	movwf	OLED_PutChar@base+1
 11279                           
 11280                           ;oled.c: 238: uint8_t bytes[9];;oled.c: 239: bytes[0] = 0x40;
 11281  14A8  3040               	movlw	64
 11282  14A9  00A0               	movwf	??_OLED_PutChar
 11283  14AA  0820               	movf	??_OLED_PutChar,w
 11284  14AB  00A4               	movwf	OLED_PutChar@bytes
 11285                           
 11286                           ;oled.c: 240: memmove( bytes + 1, base, 8 );
 11287  14AC  082E               	movf	OLED_PutChar@base+1,w
 11288  14AD  00F1               	movwf	memmove@s1+1
 11289  14AE  082D               	movf	OLED_PutChar@base,w
 11290  14AF  00F0               	movwf	memmove@s1
 11291  14B0  3008               	movlw	8
 11292  14B1  00F2               	movwf	memmove@n
 11293  14B2  3000               	movlw	0
 11294  14B3  00F3               	movwf	memmove@n+1
 11295  14B4  3025               	movlw	(low ((OLED_PutChar@bytes| 0+1)))& (0+255)
 11296  14B5  3193  2355  3194   	fcall	_memmove
 11297                           
 11298                           ;oled.c: 242: Send_I2C_StartBit();
 11299  14B8  3190  2023  3194   	fcall	_Send_I2C_StartBit
 11300                           
 11301                           ;oled.c: 243: Send_I2C_Data(0x3C << 1);
 11302  14BB  3078               	movlw	120
 11303  14BC  00F0               	movwf	Send_I2C_Data@databyte
 11304  14BD  3000               	movlw	0
 11305  14BE  00F1               	movwf	Send_I2C_Data@databyte+1
 11306  14BF  3190  2033  3194   	fcall	_Send_I2C_Data
 11307                           
 11308                           ;oled.c: 244: Send_I2C_Data(0x40);
 11309  14C2  3040               	movlw	64
 11310  14C3  00F0               	movwf	Send_I2C_Data@databyte
 11311  14C4  3000               	movlw	0
 11312  14C5  00F1               	movwf	Send_I2C_Data@databyte+1
 11313  14C6  3190  2033  3194   	fcall	_Send_I2C_Data
 11314                           
 11315                           ;oled.c: 246: int i;;oled.c: 248: for (i = 1; i <= 8; i++){
 11316  14C9  3001               	movlw	1
 11317  14CA  0020               	movlb	0	; select bank0
 11318  14CB  00AF               	movwf	OLED_PutChar@i
 11319  14CC  3000               	movlw	0
 11320  14CD  00B0               	movwf	OLED_PutChar@i+1
 11321  14CE                     l2700:	
 11322                           
 11323                           ;oled.c: 249: Send_I2C_Data(bytes[i]);
 11324  14CE  0020               	movlb	0	; select bank0
 11325  14CF  082F               	movf	OLED_PutChar@i,w
 11326  14D0  3E24               	addlw	(low (OLED_PutChar@bytes| 0))& (0+255)
 11327  14D1  0086               	movwf	6
 11328  14D2  0187               	clrf	7
 11329  14D3  0801               	movf	1,w
 11330  14D4  00A0               	movwf	??_OLED_PutChar
 11331  14D5  01A1               	clrf	??_OLED_PutChar+1
 11332  14D6  0820               	movf	??_OLED_PutChar,w
 11333  14D7  00F0               	movwf	Send_I2C_Data@databyte
 11334  14D8  0821               	movf	??_OLED_PutChar+1,w
 11335  14D9  00F1               	movwf	Send_I2C_Data@databyte+1
 11336  14DA  3190  2033  3194   	fcall	_Send_I2C_Data
 11337  14DD  3001               	movlw	1
 11338  14DE  0020               	movlb	0	; select bank0
 11339  14DF  07AF               	addwf	OLED_PutChar@i,f
 11340  14E0  3000               	movlw	0
 11341  14E1  3DB0               	addwfc	OLED_PutChar@i+1,f
 11342  14E2  0830               	movf	OLED_PutChar@i+1,w
 11343  14E3  3A80               	xorlw	128
 11344  14E4  00A0               	movwf	??_OLED_PutChar
 11345  14E5  3080               	movlw	128
 11346  14E6  0220               	subwf	??_OLED_PutChar,w
 11347  14E7  1D03               	skipz
 11348  14E8  2CEB               	goto	u2825
 11349  14E9  3009               	movlw	9
 11350  14EA  022F               	subwf	OLED_PutChar@i,w
 11351  14EB                     u2825:	
 11352  14EB  1C03               	skipc
 11353  14EC  2CCE               	goto	l2700
 11354                           
 11355                           ;oled.c: 250: };oled.c: 252: Send_I2C_StopBit();
 11356  14ED  3190  202B         	fcall	_Send_I2C_StopBit
 11357  14EF  0008               	return
 11358  14F0                     __end_of_OLED_PutChar:	
 11359                           
 11360                           	psect	text38
 11361  1355                     __ptext38:	
 11362 ;; *************** function _memmove *****************
 11363 ;; Defined at:
 11364 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\memmove.c"
 11365 ;; Parameters:    Size  Location     Type
 11366 ;;  d1              1    wreg     PTR void 
 11367 ;;		 -> OLED_PutChar@bytes(9), 
 11368 ;;  s1              2    0[COMMON] PTR const void 
 11369 ;;		 -> OledFont(768), 
 11370 ;;  n               2    2[COMMON] unsigned int 
 11371 ;; Auto vars:     Size  Location     Type
 11372 ;;  d1              1    8[COMMON] PTR void 
 11373 ;;		 -> OLED_PutChar@bytes(9), 
 11374 ;;  s               2    9[COMMON] PTR const unsigned char 
 11375 ;;		 -> OledFont(768), 
 11376 ;;  d               1   11[COMMON] PTR unsigned char 
 11377 ;;		 -> OLED_PutChar@bytes(9), 
 11378 ;; Return value:  Size  Location     Type
 11379 ;;                  1    wreg      PTR void 
 11380 ;; Registers used:
 11381 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 11382 ;; Tracked objects:
 11383 ;;		On entry : 0/0
 11384 ;;		On exit  : 0/0
 11385 ;;		Unchanged: 0/0
 11386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11387 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11388 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11389 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11390 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11391 ;;Total ram usage:       12 bytes
 11392 ;; Hardware stack levels used:    1
 11393 ;; This function calls:
 11394 ;;		Nothing
 11395 ;; This function is called by:
 11396 ;;		_OLED_PutChar
 11397 ;; This function uses a non-reentrant model
 11398 ;;
 11399                           
 11400                           
 11401                           ;psect for function _memmove
 11402  1355                     _memmove:	
 11403                           
 11404                           ;incstack = 0
 11405                           ; Regs used in _memmove: [wreg-fsr1h+status,2+status,0+pclath]
 11406                           ;memmove@d1 stored from wreg
 11407  1355  00F8               	movwf	memmove@d1
 11408  1356  0871               	movf	memmove@s1+1,w
 11409  1357  00FA               	movwf	memmove@s+1
 11410  1358  0870               	movf	memmove@s1,w
 11411  1359  00F9               	movwf	memmove@s
 11412  135A  0878               	movf	memmove@d1,w
 11413  135B  00F4               	movwf	??_memmove
 11414  135C  0874               	movf	??_memmove,w
 11415  135D  00FB               	movwf	memmove@d
 11416  135E  087B               	movf	memmove@d,w
 11417  135F  00F4               	movwf	??_memmove
 11418  1360  3000               	movlw	0
 11419  1361  00F5               	movwf	??_memmove+1
 11420  1362  0875               	movf	??_memmove+1,w
 11421  1363  027A               	subwf	memmove@s+1,w
 11422  1364  1D03               	skipz
 11423  1365  2B68               	goto	u2105
 11424  1366  0874               	movf	??_memmove,w
 11425  1367  0279               	subwf	memmove@s,w
 11426  1368                     u2105:	
 11427  1368  1803               	skipnc
 11428  1369  2B9E               	goto	l2388
 11429  136A  0872               	movf	memmove@n,w
 11430  136B  0779               	addwf	memmove@s,w
 11431  136C  00F4               	movwf	??_memmove
 11432  136D  0873               	movf	memmove@n+1,w
 11433  136E  3D7A               	addwfc	memmove@s+1,w
 11434  136F  00F5               	movwf	??_memmove+1
 11435  1370  087B               	movf	memmove@d,w
 11436  1371  00F6               	movwf	??_memmove+2
 11437  1372  3000               	movlw	0
 11438  1373  00F7               	movwf	??_memmove+3
 11439  1374  0875               	movf	??_memmove+1,w
 11440  1375  0277               	subwf	??_memmove+3,w
 11441  1376  1D03               	skipz
 11442  1377  2B7A               	goto	u2115
 11443  1378  0874               	movf	??_memmove,w
 11444  1379  0276               	subwf	??_memmove+2,w
 11445  137A                     u2115:	
 11446  137A  1803               	skipnc
 11447  137B  2B9E               	goto	l2388
 11448  137C  0872               	movf	memmove@n,w
 11449  137D  07F9               	addwf	memmove@s,f
 11450  137E  0873               	movf	memmove@n+1,w
 11451  137F  3DFA               	addwfc	memmove@s+1,f
 11452  1380  0872               	movf	memmove@n,w
 11453  1381  00F4               	movwf	??_memmove
 11454  1382  0874               	movf	??_memmove,w
 11455  1383  07FB               	addwf	memmove@d,f
 11456  1384                     l2384:	
 11457  1384  3001               	movlw	1
 11458  1385  02F9               	subwf	memmove@s,f
 11459  1386  3000               	movlw	0
 11460  1387  3BFA               	subwfb	memmove@s+1,f
 11461  1388  0879               	movf	memmove@s,w
 11462  1389  0084               	movwf	4
 11463  138A  087A               	movf	memmove@s+1,w
 11464  138B  0085               	movwf	5
 11465  138C  0800               	movf	0,w	;code access
 11466  138D  00F4               	movwf	??_memmove
 11467  138E  3001               	movlw	1
 11468  138F  02FB               	subwf	memmove@d,f
 11469  1390  087B               	movf	memmove@d,w
 11470  1391  0086               	movwf	6
 11471  1392  0187               	clrf	7
 11472  1393  0874               	movf	??_memmove,w
 11473  1394  0081               	movwf	1
 11474  1395  3001               	movlw	1
 11475  1396  02F2               	subwf	memmove@n,f
 11476  1397  3000               	movlw	0
 11477  1398  3BF3               	subwfb	memmove@n+1,f
 11478  1399  0872               	movf	memmove@n,w
 11479  139A  0473               	iorwf	memmove@n+1,w
 11480  139B  1903               	btfsc	3,2
 11481  139C  0008               	return
 11482  139D  2B84               	goto	l2384
 11483  139E                     l2388:	
 11484  139E  0872               	movf	memmove@n,w
 11485  139F  0473               	iorwf	memmove@n+1,w
 11486  13A0  1903               	btfsc	3,2
 11487  13A1  0008               	return
 11488  13A2  0879               	movf	memmove@s,w
 11489  13A3  0084               	movwf	4
 11490  13A4  087A               	movf	memmove@s+1,w
 11491  13A5  0085               	movwf	5
 11492  13A6  0800               	movf	0,w	;code access
 11493  13A7  00F4               	movwf	??_memmove
 11494  13A8  087B               	movf	memmove@d,w
 11495  13A9  0086               	movwf	6
 11496  13AA  0187               	clrf	7
 11497  13AB  0874               	movf	??_memmove,w
 11498  13AC  0081               	movwf	1
 11499  13AD  3001               	movlw	1
 11500  13AE  07F9               	addwf	memmove@s,f
 11501  13AF  3000               	movlw	0
 11502  13B0  3DFA               	addwfc	memmove@s+1,f
 11503  13B1  3001               	movlw	1
 11504  13B2  00F4               	movwf	??_memmove
 11505  13B3  0874               	movf	??_memmove,w
 11506  13B4  07FB               	addwf	memmove@d,f
 11507  13B5  3001               	movlw	1
 11508  13B6  02F2               	subwf	memmove@n,f
 11509  13B7  3000               	movlw	0
 11510  13B8  3BF3               	subwfb	memmove@n+1,f
 11511  13B9  2B9E               	goto	l2388
 11512  13BA                     __end_of_memmove:	
 11513                           
 11514                           	psect	text39
 11515  102B                     __ptext39:	
 11516 ;; *************** function _Send_I2C_StopBit *****************
 11517 ;; Defined at:
 11518 ;;		line 106 in file "I2C.c"
 11519 ;; Parameters:    Size  Location     Type
 11520 ;;		None
 11521 ;; Auto vars:     Size  Location     Type
 11522 ;;		None
 11523 ;; Return value:  Size  Location     Type
 11524 ;;                  1    wreg      void 
 11525 ;; Registers used:
 11526 ;;		None
 11527 ;; Tracked objects:
 11528 ;;		On entry : 0/0
 11529 ;;		On exit  : 0/0
 11530 ;;		Unchanged: 0/0
 11531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11536 ;;Total ram usage:        0 bytes
 11537 ;; Hardware stack levels used:    1
 11538 ;; This function calls:
 11539 ;;		Nothing
 11540 ;; This function is called by:
 11541 ;;		_OLED_Command
 11542 ;;		_OLED_PutChar
 11543 ;;		_OLED_Data
 11544 ;; This function uses a non-reentrant model
 11545 ;;
 11546                           
 11547                           
 11548                           ;psect for function _Send_I2C_StopBit
 11549  102B                     _Send_I2C_StopBit:	
 11550                           
 11551                           ;I2C.c: 108: PIR1bits.SSP1IF=0;
 11552                           
 11553                           ;incstack = 0
 11554                           ; Regs used in _Send_I2C_StopBit: []
 11555  102B  0020               	movlb	0	; select bank0
 11556  102C  1191               	bcf	17,3	;volatile
 11557                           
 11558                           ;I2C.c: 109: SSPCON2bits.PEN=1;
 11559  102D  0024               	movlb	4	; select bank4
 11560  102E  1516               	bsf	22,2	;volatile
 11561  102F                     l359:	
 11562                           ;I2C.c: 110: while(!PIR1bits.SSP1IF);
 11563                           
 11564  102F  0020               	movlb	0	; select bank0
 11565  1030  1991               	btfsc	17,3	;volatile
 11566  1031  0008               	return
 11567  1032  282F               	goto	l359
 11568  1033                     __end_of_Send_I2C_StopBit:	
 11569                           
 11570                           	psect	text40
 11571  1023                     __ptext40:	
 11572 ;; *************** function _Send_I2C_StartBit *****************
 11573 ;; Defined at:
 11574 ;;		line 96 in file "I2C.c"
 11575 ;; Parameters:    Size  Location     Type
 11576 ;;		None
 11577 ;; Auto vars:     Size  Location     Type
 11578 ;;		None
 11579 ;; Return value:  Size  Location     Type
 11580 ;;                  1    wreg      void 
 11581 ;; Registers used:
 11582 ;;		None
 11583 ;; Tracked objects:
 11584 ;;		On entry : 0/0
 11585 ;;		On exit  : 0/0
 11586 ;;		Unchanged: 0/0
 11587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11592 ;;Total ram usage:        0 bytes
 11593 ;; Hardware stack levels used:    1
 11594 ;; This function calls:
 11595 ;;		Nothing
 11596 ;; This function is called by:
 11597 ;;		_OLED_Command
 11598 ;;		_OLED_PutChar
 11599 ;;		_OLED_Data
 11600 ;; This function uses a non-reentrant model
 11601 ;;
 11602                           
 11603                           
 11604                           ;psect for function _Send_I2C_StartBit
 11605  1023                     _Send_I2C_StartBit:	
 11606                           
 11607                           ;I2C.c: 98: PIR1bits.SSP1IF=0;
 11608                           
 11609                           ;incstack = 0
 11610                           ; Regs used in _Send_I2C_StartBit: []
 11611  1023  0020               	movlb	0	; select bank0
 11612  1024  1191               	bcf	17,3	;volatile
 11613                           
 11614                           ;I2C.c: 99: SSPCON2bits.SEN=1;
 11615  1025  0024               	movlb	4	; select bank4
 11616  1026  1416               	bsf	22,0	;volatile
 11617  1027                     l353:	
 11618                           ;I2C.c: 100: while(!PIR1bits.SSP1IF);
 11619                           
 11620  1027  0020               	movlb	0	; select bank0
 11621  1028  1991               	btfsc	17,3	;volatile
 11622  1029  0008               	return
 11623  102A  2827               	goto	l353
 11624  102B                     __end_of_Send_I2C_StartBit:	
 11625                           
 11626                           	psect	text41
 11627  1033                     __ptext41:	
 11628 ;; *************** function _Send_I2C_Data *****************
 11629 ;; Defined at:
 11630 ;;		line 48 in file "I2C.c"
 11631 ;; Parameters:    Size  Location     Type
 11632 ;;  databyte        2    0[COMMON] unsigned int 
 11633 ;; Auto vars:     Size  Location     Type
 11634 ;;		None
 11635 ;; Return value:  Size  Location     Type
 11636 ;;                  1    wreg      void 
 11637 ;; Registers used:
 11638 ;;		wreg
 11639 ;; Tracked objects:
 11640 ;;		On entry : 0/0
 11641 ;;		On exit  : 0/0
 11642 ;;		Unchanged: 0/0
 11643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11644 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11647 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11648 ;;Total ram usage:        2 bytes
 11649 ;; Hardware stack levels used:    1
 11650 ;; This function calls:
 11651 ;;		Nothing
 11652 ;; This function is called by:
 11653 ;;		_OLED_Command
 11654 ;;		_OLED_PutChar
 11655 ;;		_OLED_Data
 11656 ;; This function uses a non-reentrant model
 11657 ;;
 11658                           
 11659                           
 11660                           ;psect for function _Send_I2C_Data
 11661  1033                     _Send_I2C_Data:	
 11662                           
 11663                           ;I2C.c: 50: PIR1bits.SSP1IF=0;
 11664                           
 11665                           ;incstack = 0
 11666                           ; Regs used in _Send_I2C_Data: [wreg]
 11667  1033  0020               	movlb	0	; select bank0
 11668  1034  1191               	bcf	17,3	;volatile
 11669                           
 11670                           ;I2C.c: 51: SSPBUF = databyte;
 11671  1035  0870               	movf	Send_I2C_Data@databyte,w
 11672  1036  0024               	movlb	4	; select bank4
 11673  1037  0091               	movwf	17	;volatile
 11674  1038                     l335:	
 11675                           ;I2C.c: 52: while(!PIR1bits.SSP1IF);
 11676                           
 11677  1038  0020               	movlb	0	; select bank0
 11678  1039  1991               	btfsc	17,3	;volatile
 11679  103A  0008               	return
 11680  103B  2838               	goto	l335
 11681  103C                     __end_of_Send_I2C_Data:	
 11682                           
 11683                           	psect	text42
 11684  107B                     __ptext42:	
 11685 ;; *************** function _I2C_Init *****************
 11686 ;; Defined at:
 11687 ;;		line 19 in file "I2C.c"
 11688 ;; Parameters:    Size  Location     Type
 11689 ;;		None
 11690 ;; Auto vars:     Size  Location     Type
 11691 ;;		None
 11692 ;; Return value:  Size  Location     Type
 11693 ;;                  1    wreg      void 
 11694 ;; Registers used:
 11695 ;;		wreg, status,2, status,0
 11696 ;; Tracked objects:
 11697 ;;		On entry : 0/0
 11698 ;;		On exit  : 0/0
 11699 ;;		Unchanged: 0/0
 11700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11703 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11704 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11705 ;;Total ram usage:        1 bytes
 11706 ;; Hardware stack levels used:    1
 11707 ;; This function calls:
 11708 ;;		Nothing
 11709 ;; This function is called by:
 11710 ;;		_main
 11711 ;; This function uses a non-reentrant model
 11712 ;;
 11713                           
 11714                           
 11715                           ;psect for function _I2C_Init
 11716  107B                     _I2C_Init:	
 11717                           
 11718                           ;I2C.c: 25: SSPCONbits.SSPM=0x08;
 11719                           
 11720                           ;incstack = 0
 11721                           ; Regs used in _I2C_Init: [wreg+status,2+status,0]
 11722  107B  0024               	movlb	4	; select bank4
 11723  107C  0815               	movf	21,w	;volatile
 11724  107D  39F0               	andlw	-16
 11725  107E  3808               	iorlw	8
 11726  107F  0095               	movwf	21	;volatile
 11727                           
 11728                           ;I2C.c: 26: SSPCONbits.SSPEN=1;
 11729  1080  1695               	bsf	21,5	;volatile
 11730                           
 11731                           ;I2C.c: 38: SSPADD = 39;
 11732  1081  3027               	movlw	39
 11733  1082  0092               	movwf	18	;volatile
 11734                           
 11735                           ;I2C.c: 42: _delay((unsigned long)((10)*(16000000/4000.0)));
 11736  1083  3034               	movlw	52
 11737  1084  00F0               	movwf	??_I2C_Init
 11738  1085  30F2               	movlw	242
 11739  1086                     u4177:	
 11740  1086  0B89               	decfsz	9,f
 11741  1087  2886               	goto	u4177
 11742  1088  0BF0               	decfsz	??_I2C_Init,f
 11743  1089  2886               	goto	u4177
 11744  108A  0008               	return
 11745  108B                     __end_of_I2C_Init:	
 11746  007E                     btemp	set	126	;btemp
 11747  007E                     wtemp0	set	126


Data Sizes:
    Strings     49
    Constant    808
    Data        19
    BSS         87
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     31      80
    BANK2            80      0      57
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    ftoa@status	PTR int  size(1) Largest target is 2
		 -> OLED_Write_Float@status(BANK1[2]), 

    memmove@d1	PTR void  size(1) Largest target is 9
		 -> OLED_PutChar@bytes(BANK0[9]), 

    memmove@d	PTR unsigned char  size(1) Largest target is 9
		 -> OLED_PutChar@bytes(BANK0[9]), 

    memmove@s1	PTR const void  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    memmove@s	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 20
		 -> OLED_Write_Integer@s(BANK0[20]), 

    ftoa@cp	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK2[17]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[11]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK2[17]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__ftoa	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK2[17]), 

    OLED_Write_Float@buf11	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK2[17]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 20
		 -> OLED_Write_Integer@s(BANK0[20]), 

    OLED_Write_String@s	PTR unsigned char  size(2) Largest target is 20
		 -> ftoa@buf(BANK2[17]), STR_9(CODE[6]), STR_8(CODE[6]), OLED_Write_Integer@s(BANK0[20]), 
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), STR_4(CODE[5]), 
		 -> STR_3(CODE[5]), STR_2(CODE[5]), STR_1(CODE[5]), 

    sp__memmove	PTR void  size(1) Largest target is 9
		 -> OLED_PutChar@bytes(BANK0[9]), 

    OLED_PutChar@base	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    system_volt	PTR int  size(1) Largest target is 2
		 -> system_v(BANK1[2]), 

    panel_volt	PTR float  size(1) Largest target is 4
		 -> panel_v(BANK1[4]), 

    bat_volt	PTR float  size(1) Largest target is 4
		 -> bat_v(BANK1[4]), 


Critical Paths under _main in COMMON

    _main->_read_current
    _main->_read_panel
    _main->_read_voltage
    _system_voltage->___flge
    _read_voltage->___xxtofl
    _read_panel->___xxtofl
    _read_current->___xxtofl
    _roundedVal->___xxtofl
    _print_data->_OLED_Write_String
    _OLED_Write_Float->_OLED_Write_String
    _sprintf->___lldiv
    ___llmod->___lldiv
    ___xxtofl->__Umul8_16
    ___fltol->___xxtofl
    ___flsub->___xxtofl
    ___fladd->___xxtofl
    ___flmul->___xxtofl
    _OLED_Init->_OLED_Command
    _OLED_YX->_OLED_Command
    _OLED_Command->_Send_I2C_Data
    _OLED_PutChar->_memmove

Critical Paths under _main in BANK0

    _main->_print_data
    _read_voltage->_roundedVal
    _read_panel->_roundedVal
    _read_current->_roundedVal
    _roundedVal->___fldiv
    ___fldiv->___fladd
    _print_data->_OLED_Write_Float
    _OLED_Write_Float->_ftoa
    _ftoa->___fltol
    _sprintf->___llmod
    _OLED_Write_String->_OLED_PutChar
    _pid_control->_PWM3_LoadDutyValue
    ___fltol->___fladd
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->___xxtofl
    _PWM3_LoadDutyValue->___fltol
    _OLED_Clear->_OLED_PutChar

Critical Paths under _main in BANK1

    _main->_read_panel
    _main->_read_voltage
    _read_voltage->___fldiv
    _read_panel->___fldiv
    _read_current->___fldiv
    _roundedVal->___fldiv
    _print_data->_OLED_Write_Float
    _OLED_Write_Float->_ftoa

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  102764
                                             29 BANK1      2     2      0
                           _I2C_Init
                         _OLED_Clear
                          _OLED_Init
                 _PWM3_LoadDutyValue
                  _SYSTEM_Initialize
                        _pid_control
                         _print_data
                       _read_current
                         _read_panel
                       _read_voltage
                          _set_point
                     _system_voltage
 ---------------------------------------------------------------------------------
 (1) _system_voltage                                       0     0      0    1550
                             ___flge
 ---------------------------------------------------------------------------------
 (1) _set_point                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_voltage                                        17    17      0   22262
                                             13 COMMON     1     1      0
                                             13 BANK1     16    16      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
                         _roundedVal
 ---------------------------------------------------------------------------------
 (1) _read_panel                                          17    17      0   22262
                                             13 COMMON     1     1      0
                                             13 BANK1     16    16      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
                         _roundedVal
 ---------------------------------------------------------------------------------
 (1) _read_current                                         9     9      0   20688
                                             13 COMMON     1     1      0
                                             13 BANK1      8     8      0
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
                         _roundedVal
 ---------------------------------------------------------------------------------
 (2) _roundedVal                                           8     4      4   10678
                                             69 BANK0      8     4      4
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             26    18      8    2185
                                             56 BANK0     13     5      8
                                              0 BANK1     13    13      0
                            ___fladd (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _print_data                                           1     1      0   19188
                                             79 BANK0      1     1      0
                   _OLED_Write_Float
                  _OLED_Write_String
                            _OLED_YX
 ---------------------------------------------------------------------------------
 (2) _OLED_Write_Float                                     9     5      4   15366
                                             73 BANK0      6     2      4
                                              9 BANK1      3     3      0
                  _OLED_Write_String
                               _ftoa
 ---------------------------------------------------------------------------------
 (3) _ftoa                                                15    10      5   12727
                                             67 BANK0      6     1      5
                                              0 BANK1      9     9      0
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             36    26     10    2109
                                             10 BANK0     28    18     10
                            ___lldiv
                            ___llmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___llmod                                             10     2      8     311
                                              0 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     702
                                              9 COMMON     4     0      4
                                              0 BANK0     10    10      0
                          __Umul8_16 (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) _OLED_Write_String                                    3     1      2    2344
                                             12 COMMON     2     0      2
                                             18 BANK0      1     1      0
                       _OLED_PutChar
 ---------------------------------------------------------------------------------
 (1) _pid_control                                          0     0      0   12813
                 _PWM3_LoadDutyValue
                            ___fladd
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             11     7      4     533
                                             56 BANK0     11     7      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    3549
                                             56 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    3200
                                             36 BANK0     20    12      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    3785
                                             10 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1550
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) _PWM3_LoadDutyValue                                   4     2      2     196
                                             67 BANK0      4     2      2
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM3_Initialize
                    _TMR6_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OLED_Init                                            0     0      0     728
                       _OLED_Command
 ---------------------------------------------------------------------------------
 (1) _OLED_Clear                                           5     5      0    3077
                                             12 COMMON     1     1      0
                                             18 BANK0      4     4      0
                       _OLED_PutChar
                            _OLED_YX
 ---------------------------------------------------------------------------------
 (2) _OLED_YX                                              5     4      1    1478
                                              5 COMMON     5     4      1
                       _OLED_Command
 ---------------------------------------------------------------------------------
 (3) _OLED_Command                                         3     3      0     728
                                              2 COMMON     3     3      0
                      _Send_I2C_Data
                  _Send_I2C_StartBit
                   _Send_I2C_StopBit
 ---------------------------------------------------------------------------------
 (3) _OLED_PutChar                                        18    18      0    1463
                                              0 BANK0     18    18      0
                      _Send_I2C_Data
                  _Send_I2C_StartBit
                   _Send_I2C_StopBit
                            _memmove
 ---------------------------------------------------------------------------------
 (4) _memmove                                             12     8      4     549
                                              0 COMMON    12     8      4
 ---------------------------------------------------------------------------------
 (4) _Send_I2C_StopBit                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Send_I2C_StartBit                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Send_I2C_Data                                        2     0      2     706
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Init
   _OLED_Clear
     _OLED_PutChar
       _Send_I2C_Data
       _Send_I2C_StartBit
       _Send_I2C_StopBit
       _memmove
     _OLED_YX
       _OLED_Command
         _Send_I2C_Data
         _Send_I2C_StartBit
         _Send_I2C_StopBit
   _OLED_Init
     _OLED_Command
       _Send_I2C_Data
       _Send_I2C_StartBit
       _Send_I2C_StopBit
   _PWM3_LoadDutyValue
     ___fltol (ARG)
       ___fladd (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
             __Umul8_16 (ARG)
         ___xxtofl (ARG)
           __Umul8_16 (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
           __Umul8_16 (ARG)
       ___xxtofl (ARG)
         __Umul8_16 (ARG)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM3_Initialize
     _TMR6_Initialize
     _WDT_Initialize
   _pid_control
     _PWM3_LoadDutyValue
       ___fltol (ARG)
         ___fladd (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
               __Umul8_16 (ARG)
           ___xxtofl (ARG)
             __Umul8_16 (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
             __Umul8_16 (ARG)
         ___xxtofl (ARG)
           __Umul8_16 (ARG)
     ___fladd
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
           __Umul8_16 (ARG)
       ___xxtofl (ARG)
         __Umul8_16 (ARG)
     ___flge
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
         __Umul8_16 (ARG)
     ___flsub
       ___fladd
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
             __Umul8_16 (ARG)
         ___xxtofl (ARG)
           __Umul8_16 (ARG)
       ___xxtofl (ARG)
         __Umul8_16 (ARG)
     ___fltol
       ___fladd (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
             __Umul8_16 (ARG)
         ___xxtofl (ARG)
           __Umul8_16 (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
           __Umul8_16 (ARG)
       ___xxtofl (ARG)
         __Umul8_16 (ARG)
   _print_data
     _OLED_Write_Float
       _OLED_Write_String
         _OLED_PutChar
           _Send_I2C_Data
           _Send_I2C_StartBit
           _Send_I2C_StopBit
           _memmove
       _ftoa
         ___flge
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
             __Umul8_16 (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
                 __Umul8_16 (ARG)
             ___xxtofl (ARG)
               __Umul8_16 (ARG)
           ___xxtofl (ARG)
             __Umul8_16 (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
                 __Umul8_16 (ARG)
             ___xxtofl (ARG)
               __Umul8_16 (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
               __Umul8_16 (ARG)
           ___xxtofl (ARG)
             __Umul8_16 (ARG)
         ___xxtofl
           __Umul8_16 (ARG)
         _sprintf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           ___wmul
           _isdigit
     _OLED_Write_String
       _OLED_PutChar
         _Send_I2C_Data
         _Send_I2C_StartBit
         _Send_I2C_StopBit
         _memmove
     _OLED_YX
       _OLED_Command
         _Send_I2C_Data
         _Send_I2C_StartBit
         _Send_I2C_StopBit
   _read_current
     ___fladd
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
           __Umul8_16 (ARG)
       ___xxtofl (ARG)
         __Umul8_16 (ARG)
     ___fldiv
       ___fladd (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
             __Umul8_16 (ARG)
         ___xxtofl (ARG)
           __Umul8_16 (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
           __Umul8_16 (ARG)
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
         __Umul8_16 (ARG)
     ___xxtofl
       __Umul8_16 (ARG)
     _roundedVal
       ___fladd
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
             __Umul8_16 (ARG)
         ___xxtofl (ARG)
           __Umul8_16 (ARG)
       ___fldiv
         ___fladd (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
               __Umul8_16 (ARG)
           ___xxtofl (ARG)
             __Umul8_16 (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
             __Umul8_16 (ARG)
       ___flmul
         __Umul8_16
         ___xxtofl (ARG)
           __Umul8_16 (ARG)
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
               __Umul8_16 (ARG)
           ___xxtofl (ARG)
             __Umul8_16 (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
             __Umul8_16 (ARG)
         ___xxtofl (ARG)
           __Umul8_16 (ARG)
       ___xxtofl
         __Umul8_16 (ARG)
   _read_panel
     ___fladd
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
           __Umul8_16 (ARG)
       ___xxtofl (ARG)
         __Umul8_16 (ARG)
     ___fldiv
       ___fladd (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
             __Umul8_16 (ARG)
         ___xxtofl (ARG)
           __Umul8_16 (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
           __Umul8_16 (ARG)
     ___flge
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
         __Umul8_16 (ARG)
     ___xxtofl
       __Umul8_16 (ARG)
     _roundedVal
       ___fladd
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
             __Umul8_16 (ARG)
         ___xxtofl (ARG)
           __Umul8_16 (ARG)
       ___fldiv
         ___fladd (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
               __Umul8_16 (ARG)
           ___xxtofl (ARG)
             __Umul8_16 (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
             __Umul8_16 (ARG)
       ___flmul
         __Umul8_16
         ___xxtofl (ARG)
           __Umul8_16 (ARG)
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
               __Umul8_16 (ARG)
           ___xxtofl (ARG)
             __Umul8_16 (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
             __Umul8_16 (ARG)
         ___xxtofl (ARG)
           __Umul8_16 (ARG)
       ___xxtofl
         __Umul8_16 (ARG)
   _read_voltage
     ___fladd
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
           __Umul8_16 (ARG)
       ___xxtofl (ARG)
         __Umul8_16 (ARG)
     ___fldiv
       ___fladd (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
             __Umul8_16 (ARG)
         ___xxtofl (ARG)
           __Umul8_16 (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
           __Umul8_16 (ARG)
     ___flge
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
         __Umul8_16 (ARG)
     ___xxtofl
       __Umul8_16 (ARG)
     _roundedVal
       ___fladd
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
             __Umul8_16 (ARG)
         ___xxtofl (ARG)
           __Umul8_16 (ARG)
       ___fldiv
         ___fladd (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
               __Umul8_16 (ARG)
           ___xxtofl (ARG)
             __Umul8_16 (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
             __Umul8_16 (ARG)
       ___flmul
         __Umul8_16
         ___xxtofl (ARG)
           __Umul8_16 (ARG)
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
               __Umul8_16 (ARG)
           ___xxtofl (ARG)
             __Umul8_16 (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
             __Umul8_16 (ARG)
         ___xxtofl (ARG)
           __Umul8_16 (ARG)
       ___xxtofl
         __Umul8_16 (ARG)
   _set_point
   _system_voltage
     ___flge

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     1F      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      39       9       71.3%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0      E7      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      E7      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              50      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24              50      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25              20      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Jul 14 11:28:47 2019

                   ___fldiv@aexp 00D6                     ___fldiv@bexp 00D5                     ___fldiv@sign 00CE  
                    __CFG_CP$OFF 0000                               _Ki 014D                               _Kp 0155  
                             _dt 0151              ___wmul@multiplicand 0072                    read_voltage@i 00E5  
            __Umul8_16@word_mpld 0076               OLED_Write_String@s 007C                              l335 1038  
                            l520 00EF                              l353 1027                              l276 0B2B  
                            l284 0D76                              l517 00D0                              l293 0C36  
                            l359 102F                              l543 10C0                              l720 1558  
                            l528 016F                              l717 150A                              l840 04A8  
                            l736 1404                              l913 0394                              l842 048B  
                            l914 03B0                              l836 0415                              l916 03C1  
                            l870 058A                              l944 07C9                              l857 052B  
                            l970 16A8                              l892 024D                              l878 05A2  
                            l983 16F2                              l984 16FC                              l976 16DE  
                            _PR6 041D         __end_of_OLED_Write_Float 0028                              _lvd 0130  
                   __CFG_BORV$LO 0000                              wreg 0009                     __CFG_IESO$ON 0000  
                   __CFG_FOSC$HS 0000                     ___flmul@aexp 003C                     ___flmul@bexp 003D  
               OLED_Command@temp 0074                     ___flmul@sign 0037                     ___flmul@temp 0042  
                   ___flmul@prod 003E                     __CFG_LVP$OFF 0000                     ___fltol@exp1 0062  
                           l1026 1101                             l3002 079F                             l3008 07B6  
                           l3032 16B7                             l3112 0202                             l3026 16A0  
                           l3210 0349                             l3202 030E                             l3122 0216  
                           l3060 1717                             l3036 16BB                             l2412 10BA  
                           l3204 032A                             l3132 0230                             l3124 021F  
                           l2510 040D                             l3070 108B                             l3046 16F0  
                           l3038 16CB                             l2430 124B                             l2406 106A  
                           l3214 034C                             l3142 0244                             l3118 0212  
                           l2600 0523                             l3048 16E3                             l2440 1279  
                           l2432 1259                             l3224 0378                             l3152 026E  
                           l2506 040A                             l3410 0FE5                             l3138 0240  
                           l3306 0D40                             l2700 14CE                             l2516 041F  
                           l2444 1284                             l2460 1227                             l3092 1761  
                           l3262 115A                             l2630 055C                             l2622 0551  
                           l3406 0FC6                             l2454 1201                             l3238 03BC  
                           l3158 027C                             l3342 0E88                             l3318 0D70  
                           l2384 1384                             l2616 054A                             l2608 053D  
                           l2624 0553                             l2456 120F                             l2464 1232  
                           l3184 0301                             l3176 02D0                             l2634 055E  
                           l2554 0493                             l2546 045B                             l2482 03E2  
                           l2802 01DF                             l2722 0061                             l2730 008F  
                           l3178 02D8                             l3186 02B5                             l3354 0B25  
                           l3506 15E0                             l2388 139E                             l3268 115C  
                           l2820 153E                             l2652 059A                             l2580 04C8  
                           l2572 04B6                             l2556 0495                             l2564 04A3  
                           l2740 009E                             l2716 0051                             l2804 002E  
                           l3188 0308                             l2582 04CA                             l2590 04D9  
                           l2486 03E5                             l2806 01EA                             l2742 00CD  
                           l3198 031D                             l2680 1491                             l2816 1524  
                           l2912 05E7                             l2656 059E                             l2488 03ED  
                           l2840 13C4                             l2744 00D2                             l3288 0C30  
                           l3376 1323                             l2682 1495                             l2666 10FB  
                           l2914 05E9                             l2770 011F                             l2754 00FE  
                           l3386 11D9                             l2924 05FF                             l2916 05F1  
                           l2860 13F2                             l2844 13CD                             l2780 015B  
                           l2764 011D                             l2748 00D7                             l2870 1411  
                           l2862 1400                             l2776 014C                             l2786 0182  
                           l2796 019A                             l2788 0185                             l2894 05C4  
                           l2984 075F                             l2976 0731                             l2896 05C6  
                           l2978 0748                             l2898 05CE                             l2988 0761  
                           l2998 078A                             STR_1 1833                             STR_2 183D  
                           STR_3 1838                             STR_4 182E                             STR_5 1842  
                           STR_6 1846                             STR_7 184A                             STR_8 1828  
                           STR_9 1828                  __end_of_OLED_YX 1157                      ?_OLED_Clear 0070  
                           u2105 1368                             u2115 137A                             _LATA 010C  
                           _LATB 010D                             _LATC 010E                             _LATD 010F  
                           u3105 13F3                             u2225 124E                             _LATE 0110  
                           u2315 121D                             u2245 125A                             u2325 1228  
                           u3135 1408                             u2255 126E                             u2440 047A  
                           u2265 127A                             u2185 10C1                             u2450 047B  
                           u3315 073D                             u2435 046F                             u3075 13D6  
                           u2195 10C6                             u4107 15BC                             u3405 07A9  
                           u3245 0675                             u2605 053E                             u4117 0D71  
                           u3255 06A4                             u2295 1204                             u4127 0DB5  
                           u3265 06FA                             u2705 0575                             u4137 0C31  
                           u3275 0711                             u2563 04EB                             u2555 04CE  
                           u4147 0C75                             u3285 0720                             u2485 0499  
                           u4157 0B26                             u3295 0734                             u3535 1704  
                           u3455 16C4                             u4167 0B7E                             u4087 159C  
                           u4177 1086                             u2825 14EB                             u3385 0778  
                           u3705 02D1                             u4097 15AC                             u3395 0793  
                           u3475 16D8                             u2915 0142                             u3715 02EE  
                           u3495 16EA                             u2935 0153                             u2785 1102  
                           u2945 0165                             u3745 0312                             u2955 0177  
                           u3835 0365                             u3675 02BD                             u3845 0384  
                           u3765 031E                             u3685 02C4                             u3855 03A0  
                           u3935 0C88                             u3875 10B0                             u3885 1138  
                           u3965 0DC8                             u3895 114C                             u3995 0B91  
                           _TMR6 041C                             _WPUA 020C                             _WPUB 020D  
                           _WPUC 020E                             _WPUD 020F                             _WPUE 0210  
                   __CFG_WRT$OFF 0000                    __CFG_FCMEN$ON 0000                   _bulk_charge_sp 0138  
                           _main 156B                             _ftoa 1720                             _read 00BC  
                           _duty 00E9                 __end_of_I2C_Init 108B                             fsr0h 0005  
                           fsr1h 0007                             indf0 0000                             fsr0l 0004  
                           indf1 0001                             fsr1l 0006                             btemp 007E  
                  __CFG_BOREN$ON 0000                             start 0002                  ___fldiv@new_exp 00CF  
                  __CFG_MCLRE$ON 0000                  read_voltage@avg 00DD               __size_of_OLED_Init 0064  
                read_voltage@vin 00D7                  read_voltage@sum 00E1   __size_of_OSCILLATOR_Initialize 0007  
  __end_of_OSCILLATOR_Initialize 101C                    ___fltol@sign1 0061                  __end_of___fladd 05AA  
                          ?_main 0070                            ?_ftoa 0063                  __end_of___fldiv 03C8  
                __end_of___flneg 1045                            STR_10 0B00                    __CFG_WDTE$OFF 0000  
                __end_of___flmul 07D6                  __end_of___flsub 112F                  __end_of___fltol 1420  
                __end_of___lldiv 128D                  __end_of___llmod 123B                            _T6CON 041E  
                          _TRISA 008C                            _TRISB 008D                            _TRISC 008E  
                          _TRISD 008F                            _TRISE 0090                            _bat_v 00C4  
                __end_of_dpowers 1828                   _WDT_Initialize 1005                            _error 00A8  
                __end_of_isdigit 106C                  __end_of_memmove 13BA                   _system_voltage 12F1  
                          ftoa@f 0063                            ftoa@l 00CE          __end_of_PWM3_Initialize 105E  
                   ?_pid_control 0070                            status 0003                            wtemp0 007E  
                __end_of_sprintf 01F0       __size_of_Send_I2C_StartBit 0008                  __initialization 07D6  
                _float_charge_sp 0134                     __end_of_main 15F6                     __end_of_ftoa 1800  
                    _system_volt 00ED                   __CFG_LPBOR$OFF 0000                 __end_of_OledFont 0B00  
            __size_of_OLED_Clear 0029                           ??_main 00E7                           ??_ftoa 0068  
                 __CFG_PLLEN$OFF 0000                        ??_OLED_YX 0076           __end_of_WDT_Initialize 1009  
                _TMR6_Initialize 0B0C           __end_of_system_voltage 1355                 ___llmod@dividend 0024  
                         _ADRESH 009C                           _ADRESL 009B                   __CFG_ZCDDIS$ON 0000  
                         _ANSELA 018C                           _ANSELB 018D                           _ANSELC 018E  
                         _ANSELD 018F                           _ANSELE 0190                           _BORCON 0116  
              __end_of_OLED_Init 12F1                           _RB0PPS 0E98                           _ODCONA 028C  
                         _ODCONB 028D                           _ODCONC 028E                           _ODCOND 028F  
                         _ODCONE 0290                           _OSCCON 0099                    ?_OLED_Command 0070  
                         _WDTCON 0097                           _SSPADD 0212                           _SSPBUF 0211  
               __end_of___xxtofl 1720                   __CFG_PWRTE$OFF 0000                    ?_OLED_PutChar 0070  
                         ___flge 14F0                    ?_read_current 0070      __size_of_PWM3_LoadDutyValue 0019  
                      ??___fladd 004C                           ___wmul 10B8           __size_of_Send_I2C_Data 0009  
                      ??___fldiv 0060                        ??___flneg 0074                   __CFG_STVREN$ON 0000  
                      ??___flmul 0032                        ??___flsub 007D                        ??___fltol 005C  
                      ??___lldiv 0078                        ??___llmod 0028                    ?_read_voltage 0070  
                         _output 00A4                           ftoa@cp 00D2                        ??_isdigit 0070  
                      ?_I2C_Init 0070                        ??_memmove 0074               __size_of__Umul8_16 001F  
                ?_WDT_Initialize 0070            Send_I2C_Data@databyte 0070                  ?_system_voltage 0070  
                    read_panel@i 00E5                        ??_sprintf 0034                       ___flge@ff1 0070  
                     ___flge@ff2 0074                   ??_OLED_Command 0072                 ?_PWM3_Initialize 0070  
                   ___xxtofl@arg 0026                     ___xxtofl@exp 0025                _SYSTEM_Initialize 106C  
                   ___xxtofl@val 0079          __end_of__initialization 07FD                       ___flneg@f1 0070  
             ?_SYSTEM_Initialize 0070                       ___fltol@f1 0058                   ??_OLED_PutChar 0020  
      __size_of_Send_I2C_StopBit 0008                   ??_read_current 007D                   __pcstackCOMMON 0070  
                   __pidataBANK1 101C                     __pidataBANK2 1045              ??_SYSTEM_Initialize 0070  
        __end_of_TMR6_Initialize 0B16                   ??_read_voltage 007D                       ??_I2C_Init 0070  
                 _OPTION_REGbits 0095                ?_OLED_Write_Float 0069               ??_OLED_Write_Float 006D  
                  _Send_I2C_Data 1033        __end_of_SYSTEM_Initialize 107B                     sprintf@width 0041  
                   ??_OLED_Clear 007C       read_current@convertedValue 00D7                       __pbssBANK1 00A0  
                     __pbssBANK2 0120             __size_of_pid_control 0155                __end_of__Umul8_16 1110  
                     __pmaintext 156B                          ?___flge 0070                          ?___wmul 0070  
             __end_of_OLED_Clear 1180               __size_of_set_point 003F                        ?___xxtofl 0079  
                        _OLED_YX 112F                   ?_Send_I2C_Data 0070                          _OSCTUNE 0098  
                        _PWM3DCH 0618                          _PWM3DCL 0617                          _PWM3CON 0619  
                        _SLRCONA 030C                          _SLRCONB 030D                          _SLRCONC 030E  
                        _SLRCOND 030F                          _SLRCONE 0310                          _PPSLOCK 0E0F  
            read_current@Voltage 00DB                          _Current 00B8                  __size_of___flge 007B  
                        ___fladd 03C8                          ___fldiv 01F0                          ___flneg 103C  
                        ___flmul 05AA                          ___flsub 1110                          ___fltol 13BA  
                        ___lldiv 123B                  __size_of___wmul 001B                          ___llmod 11F8  
               ?_TMR6_Initialize 0070             __end_of_OLED_Command 10F1                       _read_panel 0C21  
                     _panel_volt 00EE                          __ptext1 12F1                          __ptext2 11B9  
                        __ptext3 0D63                          __ptext4 0C21                          __ptext5 0B16  
                        __ptext6 1420                          __ptext7 01F0                          __ptext8 15F6  
                        __ptext9 0005                          _dpowers 1800            _OSCILLATOR_Initialize 1015  
                        _isdigit 105E                          _panel_v 00C0                          _memmove 1355  
                     ??___xxtofl 0020             __end_of_OLED_PutChar 14F0         ??_PIN_MANAGER_Initialize 0070  
                      _T6CONbits 041E                          _outVolt 0124             __end_of_read_current 0C21  
     __size_of_SYSTEM_Initialize 000F                          _sprintf 0028                          clrloop0 100A  
           end_of_initialization 07FD                          ftoa@buf 013C                          ftoa@rem 00CA  
                        init_ram 100F             __end_of_read_voltage 0EAB                          initloop 1010  
              __end_of_set_point 11F8                        _OLED_Init 128D                   _measured_value 00AC  
                ___lldiv@divisor 0070                 OLED_PutChar@base 002D                  ___lldiv@counter 007D  
               _Send_I2C_StopBit 102B                 ??_WDT_Initialize 0070                 ??_system_voltage 007C  
              OLED_Write_Float@f 0069                       _print_data 15F6                      ___fladd@grs 0057  
                ??_Send_I2C_Data 0072                    ___xxtofl@sign 0024                       _solar_volt 012C  
                      _TRISAbits 008C                        _TRISCbits 008E                __size_of_I2C_Init 0010  
                    ___fldiv@grs 00D1                      ___fldiv@rem 00CA                       _roundedVal 1420  
                    ___flmul@grs 0038                       ?_OLED_Init 0070       __end_of_PWM3_LoadDutyValue 10B8  
                 __end_of___flge 156B                   __end_of___wmul 10D3                      ?_read_panel 0070  
         ?_OSCILLATOR_Initialize 0070              start_initialization 07D6                    _charge_status 00BE  
__size_of_PIN_MANAGER_Initialize 0039                       ftoa@status 0067                  ___llmod@divisor 0020  
                ___llmod@counter 0029        __size_of_OLED_Write_Float 0023                _OLED_Write_String 108B  
       __size_of_PWM3_Initialize 000D               ?_OLED_Write_String 007C                         ??___flge 0078  
          __size_of_OLED_Command 001E                         ??___wmul 0074                      _CCPTMRSbits 029E  
                     OLED_YX@Row 0079                        __Umul8_16 10F1               read_voltage@result 00DB  
                    __pdataBANK1 00E9                      __pdataBANK2 014D                      roundedVal@x 0065  
          __size_of_OLED_PutChar 0069              ??_OLED_Write_String 0032                        ___fladd@a 0048  
                      ___fladd@b 0044                      ?_print_data 0070            __size_of_read_current 010B  
                      ___fldiv@a 0058                        ___fldiv@b 005C                        ___flmul@a 002E  
                      ___flmul@b 002A                        ___flsub@a 0058                        ___flsub@b 005C  
                      ___latbits 0003                         ?_OLED_YX 0075                    __pcstackBANK0 0020  
                  __pcstackBANK1 00CA                __size_of___xxtofl 0096            __size_of_read_voltage 0148  
                   _isdigit$1091 0070                      ?_roundedVal 0065                    ??_pid_control 007D  
                    sprintf@flag 003A                     _OLED_Command 10D3        __end_of_OLED_Write_String 109F  
                    sprintf@prec 0043              __size_of_read_panel 0142                      ??_OLED_Init 0075  
         _PIN_MANAGER_Initialize 1180                 read_panel@result 00DB                     _OLED_PutChar 1487  
                   _read_current 0B16                         ?___fladd 0044                         ?___fldiv 0058  
                       ?___flneg 0070                         ?___flmul 002A                         ?___flsub 0058  
                       ?___fltol 0058                         ?___lldiv 0070                         ?___llmod 0020  
                     ?__Umul8_16 0070                        _finalVolt 0120                 __CFG_PPS1WAY$OFF 0000  
                   _read_voltage 0D63                         ?_isdigit 0070                         _I2C_Init 107B  
                       ?_memmove 0070           OLED_Write_Float@status 00D3         __end_of_Send_I2C_StopBit 1033  
                       ?_sprintf 002A                        _intervolt 00B4                   ___wmul@product 0074  
                      clear_ram0 1009              __size_of_print_data 0094              __end_of_pid_control 1000  
                       _PIR1bits 0011                         _PIR2bits 0012                        _set_point 11B9  
            __size_of_roundedVal 0067                ??_PWM3_Initialize 0070                       _ADCON0bits 009D  
                     _ADCON1bits 009E                ___wmul@multiplier 0070                 __size_of_OLED_YX 0028  
       __size_of_TMR6_Initialize 000A       __size_of_OLED_Write_String 0014                         _OledFont 0800  
               _OLED_Write_Float 0005                       ?_set_point 0070          ??_OSCILLATOR_Initialize 0070  
                    ??__Umul8_16 0072                        memmove@d1 0078                        memmove@s1 0070  
               __size_of___fladd 01E2                 __size_of___fldiv 01D8                 __size_of___flneg 0009  
               __size_of___flmul 022C                 __size_of___flsub 001F                 __size_of___fltol 0066  
               __size_of___lldiv 0052                 __size_of___llmod 0043                     ??_read_panel 007D  
             _PWM3_LoadDutyValue 109F                       _ANSELAbits 018C                       _ANSELCbits 018E  
                roundedVal@value 0069                       sprintf@val 003C                         ___xxtofl 168A  
                       _bat_volt 00EF                 __size_of_isdigit 000E                 __size_of_memmove 0065  
          __end_of_Send_I2C_Data 103C                         __ptext10 1720                         __ptext11 0028  
                       __ptext20 13BA                         __ptext12 105E                         __ptext21 1110  
                       __ptext13 10B8                         __ptext30 1051                         __ptext22 03C8  
                       __ptext14 11F8                         __ptext31 1180                         __ptext23 05AA  
                       __ptext15 123B                         __ptext40 1023                         __ptext32 1015  
                       __ptext24 10F1                         __ptext16 168A                         __ptext41 1033  
                       __ptext33 128D                         __ptext25 14F0                         __ptext17 103C  
                       __ptext42 107B                         __ptext34 1157                         __ptext26 109F  
                       __ptext18 108B                         __ptext35 112F                         __ptext27 106C  
                       __ptext19 0EAB                         __ptext36 10D3                         __ptext28 1005  
                       __ptext37 1487                         __ptext29 0B0C                         __ptext38 1355  
                       __ptext39 102B              ?_PWM3_LoadDutyValue 0063            OLED_Write_Float@buf11 00D5  
               __size_of_sprintf 01C8                      _pid_control 0EAB                    __size_of_main 008B  
                  _SSPDATPPSbits 0E21                    __size_of_ftoa 00E0                         _integral 00A0  
                  OLED_Clear@col 0034                    OLED_Clear@row 0032               __end_of_read_panel 0D63  
                  OLED_YX@Column 0075                   OLED_PutChar@ch 0031                   _previous_error 0128  
           ??_PWM3_LoadDutyValue 0065                       _RC4PPSbits 0EA4                         _setpoint 00B0  
                  _SSPCLKPPSbits 0E20                       _RC5PPSbits 0EA5                     ??_print_data 006F  
                       _system_v 00C8                   __pstringtext10 184A                   __pstringtext11 0000  
                       isdigit@c 0071                         memmove@d 007B                         memmove@n 0072  
                       memmove@s 0079          __size_of_WDT_Initialize 0004                     ??_roundedVal 007D  
                     _OLED_Clear 1157                        sprintf@ap 003B                        sprintf@sp 0040  
        __size_of_system_voltage 0064                 ___lldiv@dividend 0074          ?_PIN_MANAGER_Initialize 0070  
              ??_TMR6_Initialize 0070                __CFG_CLKOUTEN$OFF 0000                      _PPSLOCKbits 0E0F  
              _Send_I2C_StartBit 1023                OLED_PutChar@bytes 0024               __end_of_print_data 168A  
                  OLED_PutChar@i 002F                      ??_set_point 0070               ?_Send_I2C_StartBit 0070  
    PWM3_LoadDutyValue@dutyValue 0063                    __pstringtext1 1800                    __pstringtext2 0800  
                  __pstringtext3 1828                    __pstringtext4 182E                    __pstringtext5 1833  
                  __pstringtext6 1838                    __pstringtext7 183D                    __pstringtext8 1842  
                  __pstringtext9 1846               __end_of_roundedVal 1487              ??_Send_I2C_StartBit 0070  
         __Umul8_16@multiplicand 0070                         sprintf@c 0045                         sprintf@f 002A  
                  read_panel@avg 00DD                    read_panel@vin 00D7                    read_panel@sum 00E1  
                  read_current@i 00D9                 ___lldiv@quotient 0079                      _SSPCON2bits 0216  
              ?_Send_I2C_StopBit 0070                    ___fladd@signs 0054               ??_Send_I2C_StopBit 0070  
 __end_of_PIN_MANAGER_Initialize 11B9                     ___fladd@aexp 0055                     ___fladd@bexp 0056  
      __end_of_Send_I2C_StartBit 102B             __Umul8_16@multiplier 0078                       _SSPCONbits 0215  
                _PWM3_Initialize 1051                __Umul8_16@product 0074  
