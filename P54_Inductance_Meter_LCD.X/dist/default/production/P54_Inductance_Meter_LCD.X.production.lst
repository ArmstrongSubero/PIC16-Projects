

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sun Dec 15 01:06:28 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F1719
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     7                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    20                           	psect	cinit,global,class=CODE,merge=1,delta=2
    21                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    22                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    23                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    24                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    25                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    26                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    27                           	psect	inittext,global,class=CODE,delta=2
    28                           	psect	clrtext,global,class=CODE,delta=2
    29                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    30                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    31                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    32                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    33                           	psect	text1,local,class=CODE,merge=1,delta=2
    34                           	psect	text2,local,class=CODE,merge=1,delta=2
    35                           	psect	text3,local,class=CODE,merge=1,delta=2
    36                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text5,local,class=CODE,merge=1,delta=2
    38                           	psect	text6,local,class=CODE,merge=1,delta=2
    39                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    40                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    46                           	psect	text14,local,class=CODE,merge=1,delta=2,group=3
    47                           	psect	text15,local,class=CODE,merge=1,delta=2,group=3
    48                           	psect	text16,local,class=CODE,merge=1,delta=2,group=3
    49                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text18,local,class=CODE,merge=1,delta=2
    51                           	psect	text19,local,class=CODE,merge=1,delta=2
    52                           	psect	text20,local,class=CODE,merge=1,delta=2
    53                           	psect	text21,local,class=CODE,merge=1,delta=2
    54                           	psect	text22,local,class=CODE,merge=1,delta=2
    55                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    56                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    57                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    58                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    59                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    60                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    61                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    62                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    63                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    64                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
    65                           	psect	text33,local,class=CODE,merge=1,delta=2
    66                           	psect	text34,local,class=CODE,merge=1,delta=2
    67                           	psect	text35,local,class=CODE,merge=1,delta=2
    68                           	psect	text36,local,class=CODE,merge=1,delta=2
    69                           	psect	text37,local,class=CODE,merge=1,delta=2
    70                           	psect	text38,local,class=CODE,merge=1,delta=2
    71                           	psect	text39,local,class=CODE,merge=1,delta=2
    72                           	psect	intentry,global,class=CODE,delta=2
    73                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    74                           	dabs	1,0x7E,2
    75     0000                     
    76                           ; Generated 07/09/2023 GMT
    77                           ; 
    78                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    79                           ; All rights reserved.
    80                           ; 
    81                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    82                           ; 
    83                           ; Redistribution and use in source and binary forms, with or without modification, are
    84                           ; permitted provided that the following conditions are met:
    85                           ; 
    86                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    87                           ;        conditions and the following disclaimer.
    88                           ; 
    89                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    90                           ;        of conditions and the following disclaimer in the documentation and/or other
    91                           ;        materials provided with the distribution. Publication is not required when
    92                           ;        this file is used in an embedded application.
    93                           ; 
    94                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    95                           ;        software without specific prior written permission.
    96                           ; 
    97                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    98                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    99                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   100                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   101                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   102                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   103                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   104                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   105                           ; 
   106                           ; 
   107                           ; Code-generator required, PIC16F1719 Definitions
   108                           ; 
   109                           ; SFR Addresses
   110     0000                     	;# 
   111     0001                     	;# 
   112     0002                     	;# 
   113     0003                     	;# 
   114     0004                     	;# 
   115     0005                     	;# 
   116     0006                     	;# 
   117     0007                     	;# 
   118     0008                     	;# 
   119     0009                     	;# 
   120     000A                     	;# 
   121     000B                     	;# 
   122     000C                     	;# 
   123     000D                     	;# 
   124     000E                     	;# 
   125     000F                     	;# 
   126     0010                     	;# 
   127     0011                     	;# 
   128     0012                     	;# 
   129     0013                     	;# 
   130     0015                     	;# 
   131     0016                     	;# 
   132     0016                     	;# 
   133     0017                     	;# 
   134     0018                     	;# 
   135     0019                     	;# 
   136     001A                     	;# 
   137     001B                     	;# 
   138     001C                     	;# 
   139     008C                     	;# 
   140     008D                     	;# 
   141     008E                     	;# 
   142     008F                     	;# 
   143     0090                     	;# 
   144     0091                     	;# 
   145     0092                     	;# 
   146     0093                     	;# 
   147     0095                     	;# 
   148     0096                     	;# 
   149     0097                     	;# 
   150     0098                     	;# 
   151     0099                     	;# 
   152     009A                     	;# 
   153     009B                     	;# 
   154     009B                     	;# 
   155     009C                     	;# 
   156     009D                     	;# 
   157     009E                     	;# 
   158     009F                     	;# 
   159     010C                     	;# 
   160     010D                     	;# 
   161     010E                     	;# 
   162     010F                     	;# 
   163     0110                     	;# 
   164     0111                     	;# 
   165     0112                     	;# 
   166     0113                     	;# 
   167     0114                     	;# 
   168     0115                     	;# 
   169     0116                     	;# 
   170     0117                     	;# 
   171     0118                     	;# 
   172     0119                     	;# 
   173     011A                     	;# 
   174     011B                     	;# 
   175     011B                     	;# 
   176     011C                     	;# 
   177     018C                     	;# 
   178     018D                     	;# 
   179     018E                     	;# 
   180     018F                     	;# 
   181     0190                     	;# 
   182     0191                     	;# 
   183     0191                     	;# 
   184     0192                     	;# 
   185     0193                     	;# 
   186     0193                     	;# 
   187     0194                     	;# 
   188     0195                     	;# 
   189     0196                     	;# 
   190     0197                     	;# 
   191     0199                     	;# 
   192     0199                     	;# 
   193     0199                     	;# 
   194     019A                     	;# 
   195     019A                     	;# 
   196     019A                     	;# 
   197     019B                     	;# 
   198     019B                     	;# 
   199     019B                     	;# 
   200     019B                     	;# 
   201     019B                     	;# 
   202     019C                     	;# 
   203     019C                     	;# 
   204     019C                     	;# 
   205     019D                     	;# 
   206     019D                     	;# 
   207     019D                     	;# 
   208     019E                     	;# 
   209     019E                     	;# 
   210     019E                     	;# 
   211     019F                     	;# 
   212     019F                     	;# 
   213     019F                     	;# 
   214     019F                     	;# 
   215     019F                     	;# 
   216     020C                     	;# 
   217     020D                     	;# 
   218     020E                     	;# 
   219     020F                     	;# 
   220     0210                     	;# 
   221     0211                     	;# 
   222     0211                     	;# 
   223     0212                     	;# 
   224     0212                     	;# 
   225     0213                     	;# 
   226     0213                     	;# 
   227     0214                     	;# 
   228     0214                     	;# 
   229     0215                     	;# 
   230     0215                     	;# 
   231     0215                     	;# 
   232     0215                     	;# 
   233     0216                     	;# 
   234     0216                     	;# 
   235     0217                     	;# 
   236     0217                     	;# 
   237     028C                     	;# 
   238     028D                     	;# 
   239     028E                     	;# 
   240     028F                     	;# 
   241     0290                     	;# 
   242     0291                     	;# 
   243     0291                     	;# 
   244     0292                     	;# 
   245     0293                     	;# 
   246     0293                     	;# 
   247     0298                     	;# 
   248     0298                     	;# 
   249     0299                     	;# 
   250     029A                     	;# 
   251     029A                     	;# 
   252     029E                     	;# 
   253     030C                     	;# 
   254     030D                     	;# 
   255     030E                     	;# 
   256     030F                     	;# 
   257     0310                     	;# 
   258     038C                     	;# 
   259     038D                     	;# 
   260     038E                     	;# 
   261     038F                     	;# 
   262     0390                     	;# 
   263     0391                     	;# 
   264     0392                     	;# 
   265     0393                     	;# 
   266     0394                     	;# 
   267     0395                     	;# 
   268     0396                     	;# 
   269     0397                     	;# 
   270     0398                     	;# 
   271     0399                     	;# 
   272     039D                     	;# 
   273     039E                     	;# 
   274     039F                     	;# 
   275     0415                     	;# 
   276     0416                     	;# 
   277     0417                     	;# 
   278     041C                     	;# 
   279     041D                     	;# 
   280     041E                     	;# 
   281     0498                     	;# 
   282     0498                     	;# 
   283     0499                     	;# 
   284     049A                     	;# 
   285     049B                     	;# 
   286     049B                     	;# 
   287     049C                     	;# 
   288     049D                     	;# 
   289     049E                     	;# 
   290     049F                     	;# 
   291     0511                     	;# 
   292     0515                     	;# 
   293     0617                     	;# 
   294     0618                     	;# 
   295     0619                     	;# 
   296     0619                     	;# 
   297     061A                     	;# 
   298     061B                     	;# 
   299     061C                     	;# 
   300     061C                     	;# 
   301     0691                     	;# 
   302     0692                     	;# 
   303     0693                     	;# 
   304     0694                     	;# 
   305     0695                     	;# 
   306     0696                     	;# 
   307     0697                     	;# 
   308     0698                     	;# 
   309     0699                     	;# 
   310     069A                     	;# 
   311     069B                     	;# 
   312     069C                     	;# 
   313     069D                     	;# 
   314     069E                     	;# 
   315     069F                     	;# 
   316     0E0F                     	;# 
   317     0E10                     	;# 
   318     0E11                     	;# 
   319     0E12                     	;# 
   320     0E13                     	;# 
   321     0E14                     	;# 
   322     0E15                     	;# 
   323     0E17                     	;# 
   324     0E20                     	;# 
   325     0E21                     	;# 
   326     0E22                     	;# 
   327     0E24                     	;# 
   328     0E25                     	;# 
   329     0E28                     	;# 
   330     0E29                     	;# 
   331     0E2A                     	;# 
   332     0E2B                     	;# 
   333     0E90                     	;# 
   334     0E91                     	;# 
   335     0E92                     	;# 
   336     0E93                     	;# 
   337     0E94                     	;# 
   338     0E95                     	;# 
   339     0E96                     	;# 
   340     0E97                     	;# 
   341     0E98                     	;# 
   342     0E99                     	;# 
   343     0E9A                     	;# 
   344     0E9B                     	;# 
   345     0E9C                     	;# 
   346     0E9D                     	;# 
   347     0E9E                     	;# 
   348     0E9F                     	;# 
   349     0EA0                     	;# 
   350     0EA1                     	;# 
   351     0EA2                     	;# 
   352     0EA3                     	;# 
   353     0EA4                     	;# 
   354     0EA5                     	;# 
   355     0EA6                     	;# 
   356     0EA7                     	;# 
   357     0EA8                     	;# 
   358     0EA9                     	;# 
   359     0EAA                     	;# 
   360     0EAB                     	;# 
   361     0EAC                     	;# 
   362     0EAD                     	;# 
   363     0EAE                     	;# 
   364     0EAF                     	;# 
   365     0EB0                     	;# 
   366     0EB1                     	;# 
   367     0EB2                     	;# 
   368     0F0F                     	;# 
   369     0F10                     	;# 
   370     0F11                     	;# 
   371     0F12                     	;# 
   372     0F13                     	;# 
   373     0F14                     	;# 
   374     0F15                     	;# 
   375     0F16                     	;# 
   376     0F17                     	;# 
   377     0F18                     	;# 
   378     0F19                     	;# 
   379     0F1A                     	;# 
   380     0F1B                     	;# 
   381     0F1C                     	;# 
   382     0F1D                     	;# 
   383     0F1E                     	;# 
   384     0F1F                     	;# 
   385     0F20                     	;# 
   386     0F21                     	;# 
   387     0F22                     	;# 
   388     0F23                     	;# 
   389     0F24                     	;# 
   390     0F25                     	;# 
   391     0F26                     	;# 
   392     0F27                     	;# 
   393     0F28                     	;# 
   394     0F29                     	;# 
   395     0F2A                     	;# 
   396     0F2B                     	;# 
   397     0F2C                     	;# 
   398     0F2D                     	;# 
   399     0F2E                     	;# 
   400     0F2F                     	;# 
   401     0F30                     	;# 
   402     0F31                     	;# 
   403     0F32                     	;# 
   404     0F33                     	;# 
   405     0F34                     	;# 
   406     0F35                     	;# 
   407     0F36                     	;# 
   408     0F37                     	;# 
   409     0FE4                     	;# 
   410     0FE5                     	;# 
   411     0FE6                     	;# 
   412     0FE7                     	;# 
   413     0FE8                     	;# 
   414     0FE9                     	;# 
   415     0FEA                     	;# 
   416     0FEB                     	;# 
   417     0FED                     	;# 
   418     0FEE                     	;# 
   419     0FEF                     	;# 
   420     0000                     	;# 
   421     0001                     	;# 
   422     0002                     	;# 
   423     0003                     	;# 
   424     0004                     	;# 
   425     0005                     	;# 
   426     0006                     	;# 
   427     0007                     	;# 
   428     0008                     	;# 
   429     0009                     	;# 
   430     000A                     	;# 
   431     000B                     	;# 
   432     000C                     	;# 
   433     000D                     	;# 
   434     000E                     	;# 
   435     000F                     	;# 
   436     0010                     	;# 
   437     0011                     	;# 
   438     0012                     	;# 
   439     0013                     	;# 
   440     0015                     	;# 
   441     0016                     	;# 
   442     0016                     	;# 
   443     0017                     	;# 
   444     0018                     	;# 
   445     0019                     	;# 
   446     001A                     	;# 
   447     001B                     	;# 
   448     001C                     	;# 
   449     008C                     	;# 
   450     008D                     	;# 
   451     008E                     	;# 
   452     008F                     	;# 
   453     0090                     	;# 
   454     0091                     	;# 
   455     0092                     	;# 
   456     0093                     	;# 
   457     0095                     	;# 
   458     0096                     	;# 
   459     0097                     	;# 
   460     0098                     	;# 
   461     0099                     	;# 
   462     009A                     	;# 
   463     009B                     	;# 
   464     009B                     	;# 
   465     009C                     	;# 
   466     009D                     	;# 
   467     009E                     	;# 
   468     009F                     	;# 
   469     010C                     	;# 
   470     010D                     	;# 
   471     010E                     	;# 
   472     010F                     	;# 
   473     0110                     	;# 
   474     0111                     	;# 
   475     0112                     	;# 
   476     0113                     	;# 
   477     0114                     	;# 
   478     0115                     	;# 
   479     0116                     	;# 
   480     0117                     	;# 
   481     0118                     	;# 
   482     0119                     	;# 
   483     011A                     	;# 
   484     011B                     	;# 
   485     011B                     	;# 
   486     011C                     	;# 
   487     018C                     	;# 
   488     018D                     	;# 
   489     018E                     	;# 
   490     018F                     	;# 
   491     0190                     	;# 
   492     0191                     	;# 
   493     0191                     	;# 
   494     0192                     	;# 
   495     0193                     	;# 
   496     0193                     	;# 
   497     0194                     	;# 
   498     0195                     	;# 
   499     0196                     	;# 
   500     0197                     	;# 
   501     0199                     	;# 
   502     0199                     	;# 
   503     0199                     	;# 
   504     019A                     	;# 
   505     019A                     	;# 
   506     019A                     	;# 
   507     019B                     	;# 
   508     019B                     	;# 
   509     019B                     	;# 
   510     019B                     	;# 
   511     019B                     	;# 
   512     019C                     	;# 
   513     019C                     	;# 
   514     019C                     	;# 
   515     019D                     	;# 
   516     019D                     	;# 
   517     019D                     	;# 
   518     019E                     	;# 
   519     019E                     	;# 
   520     019E                     	;# 
   521     019F                     	;# 
   522     019F                     	;# 
   523     019F                     	;# 
   524     019F                     	;# 
   525     019F                     	;# 
   526     020C                     	;# 
   527     020D                     	;# 
   528     020E                     	;# 
   529     020F                     	;# 
   530     0210                     	;# 
   531     0211                     	;# 
   532     0211                     	;# 
   533     0212                     	;# 
   534     0212                     	;# 
   535     0213                     	;# 
   536     0213                     	;# 
   537     0214                     	;# 
   538     0214                     	;# 
   539     0215                     	;# 
   540     0215                     	;# 
   541     0215                     	;# 
   542     0215                     	;# 
   543     0216                     	;# 
   544     0216                     	;# 
   545     0217                     	;# 
   546     0217                     	;# 
   547     028C                     	;# 
   548     028D                     	;# 
   549     028E                     	;# 
   550     028F                     	;# 
   551     0290                     	;# 
   552     0291                     	;# 
   553     0291                     	;# 
   554     0292                     	;# 
   555     0293                     	;# 
   556     0293                     	;# 
   557     0298                     	;# 
   558     0298                     	;# 
   559     0299                     	;# 
   560     029A                     	;# 
   561     029A                     	;# 
   562     029E                     	;# 
   563     030C                     	;# 
   564     030D                     	;# 
   565     030E                     	;# 
   566     030F                     	;# 
   567     0310                     	;# 
   568     038C                     	;# 
   569     038D                     	;# 
   570     038E                     	;# 
   571     038F                     	;# 
   572     0390                     	;# 
   573     0391                     	;# 
   574     0392                     	;# 
   575     0393                     	;# 
   576     0394                     	;# 
   577     0395                     	;# 
   578     0396                     	;# 
   579     0397                     	;# 
   580     0398                     	;# 
   581     0399                     	;# 
   582     039D                     	;# 
   583     039E                     	;# 
   584     039F                     	;# 
   585     0415                     	;# 
   586     0416                     	;# 
   587     0417                     	;# 
   588     041C                     	;# 
   589     041D                     	;# 
   590     041E                     	;# 
   591     0498                     	;# 
   592     0498                     	;# 
   593     0499                     	;# 
   594     049A                     	;# 
   595     049B                     	;# 
   596     049B                     	;# 
   597     049C                     	;# 
   598     049D                     	;# 
   599     049E                     	;# 
   600     049F                     	;# 
   601     0511                     	;# 
   602     0515                     	;# 
   603     0617                     	;# 
   604     0618                     	;# 
   605     0619                     	;# 
   606     0619                     	;# 
   607     061A                     	;# 
   608     061B                     	;# 
   609     061C                     	;# 
   610     061C                     	;# 
   611     0691                     	;# 
   612     0692                     	;# 
   613     0693                     	;# 
   614     0694                     	;# 
   615     0695                     	;# 
   616     0696                     	;# 
   617     0697                     	;# 
   618     0698                     	;# 
   619     0699                     	;# 
   620     069A                     	;# 
   621     069B                     	;# 
   622     069C                     	;# 
   623     069D                     	;# 
   624     069E                     	;# 
   625     069F                     	;# 
   626     0E0F                     	;# 
   627     0E10                     	;# 
   628     0E11                     	;# 
   629     0E12                     	;# 
   630     0E13                     	;# 
   631     0E14                     	;# 
   632     0E15                     	;# 
   633     0E17                     	;# 
   634     0E20                     	;# 
   635     0E21                     	;# 
   636     0E22                     	;# 
   637     0E24                     	;# 
   638     0E25                     	;# 
   639     0E28                     	;# 
   640     0E29                     	;# 
   641     0E2A                     	;# 
   642     0E2B                     	;# 
   643     0E90                     	;# 
   644     0E91                     	;# 
   645     0E92                     	;# 
   646     0E93                     	;# 
   647     0E94                     	;# 
   648     0E95                     	;# 
   649     0E96                     	;# 
   650     0E97                     	;# 
   651     0E98                     	;# 
   652     0E99                     	;# 
   653     0E9A                     	;# 
   654     0E9B                     	;# 
   655     0E9C                     	;# 
   656     0E9D                     	;# 
   657     0E9E                     	;# 
   658     0E9F                     	;# 
   659     0EA0                     	;# 
   660     0EA1                     	;# 
   661     0EA2                     	;# 
   662     0EA3                     	;# 
   663     0EA4                     	;# 
   664     0EA5                     	;# 
   665     0EA6                     	;# 
   666     0EA7                     	;# 
   667     0EA8                     	;# 
   668     0EA9                     	;# 
   669     0EAA                     	;# 
   670     0EAB                     	;# 
   671     0EAC                     	;# 
   672     0EAD                     	;# 
   673     0EAE                     	;# 
   674     0EAF                     	;# 
   675     0EB0                     	;# 
   676     0EB1                     	;# 
   677     0EB2                     	;# 
   678     0F0F                     	;# 
   679     0F10                     	;# 
   680     0F11                     	;# 
   681     0F12                     	;# 
   682     0F13                     	;# 
   683     0F14                     	;# 
   684     0F15                     	;# 
   685     0F16                     	;# 
   686     0F17                     	;# 
   687     0F18                     	;# 
   688     0F19                     	;# 
   689     0F1A                     	;# 
   690     0F1B                     	;# 
   691     0F1C                     	;# 
   692     0F1D                     	;# 
   693     0F1E                     	;# 
   694     0F1F                     	;# 
   695     0F20                     	;# 
   696     0F21                     	;# 
   697     0F22                     	;# 
   698     0F23                     	;# 
   699     0F24                     	;# 
   700     0F25                     	;# 
   701     0F26                     	;# 
   702     0F27                     	;# 
   703     0F28                     	;# 
   704     0F29                     	;# 
   705     0F2A                     	;# 
   706     0F2B                     	;# 
   707     0F2C                     	;# 
   708     0F2D                     	;# 
   709     0F2E                     	;# 
   710     0F2F                     	;# 
   711     0F30                     	;# 
   712     0F31                     	;# 
   713     0F32                     	;# 
   714     0F33                     	;# 
   715     0F34                     	;# 
   716     0F35                     	;# 
   717     0F36                     	;# 
   718     0F37                     	;# 
   719     0FE4                     	;# 
   720     0FE5                     	;# 
   721     0FE6                     	;# 
   722     0FE7                     	;# 
   723     0FE8                     	;# 
   724     0FE9                     	;# 
   725     0FEA                     	;# 
   726     0FEB                     	;# 
   727     0FED                     	;# 
   728     0FEE                     	;# 
   729     0FEF                     	;# 
   730     0000                     	;# 
   731     0001                     	;# 
   732     0002                     	;# 
   733     0003                     	;# 
   734     0004                     	;# 
   735     0005                     	;# 
   736     0006                     	;# 
   737     0007                     	;# 
   738     0008                     	;# 
   739     0009                     	;# 
   740     000A                     	;# 
   741     000B                     	;# 
   742     000C                     	;# 
   743     000D                     	;# 
   744     000E                     	;# 
   745     000F                     	;# 
   746     0010                     	;# 
   747     0011                     	;# 
   748     0012                     	;# 
   749     0013                     	;# 
   750     0015                     	;# 
   751     0016                     	;# 
   752     0016                     	;# 
   753     0017                     	;# 
   754     0018                     	;# 
   755     0019                     	;# 
   756     001A                     	;# 
   757     001B                     	;# 
   758     001C                     	;# 
   759     008C                     	;# 
   760     008D                     	;# 
   761     008E                     	;# 
   762     008F                     	;# 
   763     0090                     	;# 
   764     0091                     	;# 
   765     0092                     	;# 
   766     0093                     	;# 
   767     0095                     	;# 
   768     0096                     	;# 
   769     0097                     	;# 
   770     0098                     	;# 
   771     0099                     	;# 
   772     009A                     	;# 
   773     009B                     	;# 
   774     009B                     	;# 
   775     009C                     	;# 
   776     009D                     	;# 
   777     009E                     	;# 
   778     009F                     	;# 
   779     010C                     	;# 
   780     010D                     	;# 
   781     010E                     	;# 
   782     010F                     	;# 
   783     0110                     	;# 
   784     0111                     	;# 
   785     0112                     	;# 
   786     0113                     	;# 
   787     0114                     	;# 
   788     0115                     	;# 
   789     0116                     	;# 
   790     0117                     	;# 
   791     0118                     	;# 
   792     0119                     	;# 
   793     011A                     	;# 
   794     011B                     	;# 
   795     011B                     	;# 
   796     011C                     	;# 
   797     018C                     	;# 
   798     018D                     	;# 
   799     018E                     	;# 
   800     018F                     	;# 
   801     0190                     	;# 
   802     0191                     	;# 
   803     0191                     	;# 
   804     0192                     	;# 
   805     0193                     	;# 
   806     0193                     	;# 
   807     0194                     	;# 
   808     0195                     	;# 
   809     0196                     	;# 
   810     0197                     	;# 
   811     0199                     	;# 
   812     0199                     	;# 
   813     0199                     	;# 
   814     019A                     	;# 
   815     019A                     	;# 
   816     019A                     	;# 
   817     019B                     	;# 
   818     019B                     	;# 
   819     019B                     	;# 
   820     019B                     	;# 
   821     019B                     	;# 
   822     019C                     	;# 
   823     019C                     	;# 
   824     019C                     	;# 
   825     019D                     	;# 
   826     019D                     	;# 
   827     019D                     	;# 
   828     019E                     	;# 
   829     019E                     	;# 
   830     019E                     	;# 
   831     019F                     	;# 
   832     019F                     	;# 
   833     019F                     	;# 
   834     019F                     	;# 
   835     019F                     	;# 
   836     020C                     	;# 
   837     020D                     	;# 
   838     020E                     	;# 
   839     020F                     	;# 
   840     0210                     	;# 
   841     0211                     	;# 
   842     0211                     	;# 
   843     0212                     	;# 
   844     0212                     	;# 
   845     0213                     	;# 
   846     0213                     	;# 
   847     0214                     	;# 
   848     0214                     	;# 
   849     0215                     	;# 
   850     0215                     	;# 
   851     0215                     	;# 
   852     0215                     	;# 
   853     0216                     	;# 
   854     0216                     	;# 
   855     0217                     	;# 
   856     0217                     	;# 
   857     028C                     	;# 
   858     028D                     	;# 
   859     028E                     	;# 
   860     028F                     	;# 
   861     0290                     	;# 
   862     0291                     	;# 
   863     0291                     	;# 
   864     0292                     	;# 
   865     0293                     	;# 
   866     0293                     	;# 
   867     0298                     	;# 
   868     0298                     	;# 
   869     0299                     	;# 
   870     029A                     	;# 
   871     029A                     	;# 
   872     029E                     	;# 
   873     030C                     	;# 
   874     030D                     	;# 
   875     030E                     	;# 
   876     030F                     	;# 
   877     0310                     	;# 
   878     038C                     	;# 
   879     038D                     	;# 
   880     038E                     	;# 
   881     038F                     	;# 
   882     0390                     	;# 
   883     0391                     	;# 
   884     0392                     	;# 
   885     0393                     	;# 
   886     0394                     	;# 
   887     0395                     	;# 
   888     0396                     	;# 
   889     0397                     	;# 
   890     0398                     	;# 
   891     0399                     	;# 
   892     039D                     	;# 
   893     039E                     	;# 
   894     039F                     	;# 
   895     0415                     	;# 
   896     0416                     	;# 
   897     0417                     	;# 
   898     041C                     	;# 
   899     041D                     	;# 
   900     041E                     	;# 
   901     0498                     	;# 
   902     0498                     	;# 
   903     0499                     	;# 
   904     049A                     	;# 
   905     049B                     	;# 
   906     049B                     	;# 
   907     049C                     	;# 
   908     049D                     	;# 
   909     049E                     	;# 
   910     049F                     	;# 
   911     0511                     	;# 
   912     0515                     	;# 
   913     0617                     	;# 
   914     0618                     	;# 
   915     0619                     	;# 
   916     0619                     	;# 
   917     061A                     	;# 
   918     061B                     	;# 
   919     061C                     	;# 
   920     061C                     	;# 
   921     0691                     	;# 
   922     0692                     	;# 
   923     0693                     	;# 
   924     0694                     	;# 
   925     0695                     	;# 
   926     0696                     	;# 
   927     0697                     	;# 
   928     0698                     	;# 
   929     0699                     	;# 
   930     069A                     	;# 
   931     069B                     	;# 
   932     069C                     	;# 
   933     069D                     	;# 
   934     069E                     	;# 
   935     069F                     	;# 
   936     0E0F                     	;# 
   937     0E10                     	;# 
   938     0E11                     	;# 
   939     0E12                     	;# 
   940     0E13                     	;# 
   941     0E14                     	;# 
   942     0E15                     	;# 
   943     0E17                     	;# 
   944     0E20                     	;# 
   945     0E21                     	;# 
   946     0E22                     	;# 
   947     0E24                     	;# 
   948     0E25                     	;# 
   949     0E28                     	;# 
   950     0E29                     	;# 
   951     0E2A                     	;# 
   952     0E2B                     	;# 
   953     0E90                     	;# 
   954     0E91                     	;# 
   955     0E92                     	;# 
   956     0E93                     	;# 
   957     0E94                     	;# 
   958     0E95                     	;# 
   959     0E96                     	;# 
   960     0E97                     	;# 
   961     0E98                     	;# 
   962     0E99                     	;# 
   963     0E9A                     	;# 
   964     0E9B                     	;# 
   965     0E9C                     	;# 
   966     0E9D                     	;# 
   967     0E9E                     	;# 
   968     0E9F                     	;# 
   969     0EA0                     	;# 
   970     0EA1                     	;# 
   971     0EA2                     	;# 
   972     0EA3                     	;# 
   973     0EA4                     	;# 
   974     0EA5                     	;# 
   975     0EA6                     	;# 
   976     0EA7                     	;# 
   977     0EA8                     	;# 
   978     0EA9                     	;# 
   979     0EAA                     	;# 
   980     0EAB                     	;# 
   981     0EAC                     	;# 
   982     0EAD                     	;# 
   983     0EAE                     	;# 
   984     0EAF                     	;# 
   985     0EB0                     	;# 
   986     0EB1                     	;# 
   987     0EB2                     	;# 
   988     0F0F                     	;# 
   989     0F10                     	;# 
   990     0F11                     	;# 
   991     0F12                     	;# 
   992     0F13                     	;# 
   993     0F14                     	;# 
   994     0F15                     	;# 
   995     0F16                     	;# 
   996     0F17                     	;# 
   997     0F18                     	;# 
   998     0F19                     	;# 
   999     0F1A                     	;# 
  1000     0F1B                     	;# 
  1001     0F1C                     	;# 
  1002     0F1D                     	;# 
  1003     0F1E                     	;# 
  1004     0F1F                     	;# 
  1005     0F20                     	;# 
  1006     0F21                     	;# 
  1007     0F22                     	;# 
  1008     0F23                     	;# 
  1009     0F24                     	;# 
  1010     0F25                     	;# 
  1011     0F26                     	;# 
  1012     0F27                     	;# 
  1013     0F28                     	;# 
  1014     0F29                     	;# 
  1015     0F2A                     	;# 
  1016     0F2B                     	;# 
  1017     0F2C                     	;# 
  1018     0F2D                     	;# 
  1019     0F2E                     	;# 
  1020     0F2F                     	;# 
  1021     0F30                     	;# 
  1022     0F31                     	;# 
  1023     0F32                     	;# 
  1024     0F33                     	;# 
  1025     0F34                     	;# 
  1026     0F35                     	;# 
  1027     0F36                     	;# 
  1028     0F37                     	;# 
  1029     0FE4                     	;# 
  1030     0FE5                     	;# 
  1031     0FE6                     	;# 
  1032     0FE7                     	;# 
  1033     0FE8                     	;# 
  1034     0FE9                     	;# 
  1035     0FEA                     	;# 
  1036     0FEB                     	;# 
  1037     0FED                     	;# 
  1038     0FEE                     	;# 
  1039     0FEF                     	;# 
  1040                           
  1041                           	psect	idataBANK1
  1042     07FC                     __pidataBANK1:
  1043                           
  1044                           ;initializer for _calibration_value
  1045     07FC  3462               	retlw	98
  1046                           
  1047                           	psect	idataBANK2
  1048     169E                     __pidataBANK2:
  1049                           
  1050                           ;initializer for Lcd_Battery_Init@F6669
  1051     169E  340E               	retlw	14
  1052     169F  3411               	retlw	17
  1053     16A0  341F               	retlw	31
  1054     16A1  341F               	retlw	31
  1055     16A2  341F               	retlw	31
  1056     16A3  341F               	retlw	31
  1057     16A4  341F               	retlw	31
  1058     16A5  340E               	retlw	14
  1059                           
  1060                           ;initializer for Lcd_Battery_Init@F6667
  1061     16A6  340E               	retlw	14
  1062     16A7  3411               	retlw	17
  1063     16A8  3411               	retlw	17
  1064     16A9  341F               	retlw	31
  1065     16AA  341F               	retlw	31
  1066     16AB  341F               	retlw	31
  1067     16AC  341F               	retlw	31
  1068     16AD  340E               	retlw	14
  1069                           
  1070                           ;initializer for Lcd_Battery_Init@F6665
  1071     16AE  340E               	retlw	14
  1072     16AF  3411               	retlw	17
  1073     16B0  3411               	retlw	17
  1074     16B1  3411               	retlw	17
  1075     16B2  341F               	retlw	31
  1076     16B3  341F               	retlw	31
  1077     16B4  341F               	retlw	31
  1078     16B5  340E               	retlw	14
  1079                           
  1080                           ;initializer for Lcd_Battery_Init@F6663
  1081     16B6  340E               	retlw	14
  1082     16B7  3411               	retlw	17
  1083     16B8  3411               	retlw	17
  1084     16B9  3411               	retlw	17
  1085     16BA  3411               	retlw	17
  1086     16BB  341F               	retlw	31
  1087     16BC  341F               	retlw	31
  1088     16BD  340E               	retlw	14
  1089                           
  1090                           ;initializer for Lcd_Battery_Init@F6661
  1091     16BE  340E               	retlw	14
  1092     16BF  3411               	retlw	17
  1093     16C0  3411               	retlw	17
  1094     16C1  3411               	retlw	17
  1095     16C2  3411               	retlw	17
  1096     16C3  3411               	retlw	17
  1097     16C4  341F               	retlw	31
  1098     16C5  340E               	retlw	14
  1099                           
  1100                           ;initializer for Lcd_Battery_Init@F6659
  1101     16C6  340E               	retlw	14
  1102     16C7  3411               	retlw	17
  1103     16C8  3411               	retlw	17
  1104     16C9  3411               	retlw	17
  1105     16CA  3411               	retlw	17
  1106     16CB  3411               	retlw	17
  1107     16CC  3411               	retlw	17
  1108     16CD  340E               	retlw	14
  1109                           
  1110                           ;initializer for Lcd_Progress_Bar_Init@F6648
  1111     16CE  341F               	retlw	31
  1112     16CF  341F               	retlw	31
  1113     16D0  341F               	retlw	31
  1114     16D1  341F               	retlw	31
  1115     16D2  341F               	retlw	31
  1116     16D3  341F               	retlw	31
  1117     16D4  341F               	retlw	31
  1118     16D5  341F               	retlw	31
  1119                           
  1120                           ;initializer for Lcd_Progress_Bar_Init@F6646
  1121     16D6  3400               	retlw	0
  1122     16D7  341C               	retlw	28
  1123     16D8  341C               	retlw	28
  1124     16D9  341C               	retlw	28
  1125     16DA  341E               	retlw	30
  1126     16DB  341F               	retlw	31
  1127     16DC  341F               	retlw	31
  1128     16DD  341F               	retlw	31
  1129                           
  1130                           ;initializer for Lcd_Progress_Bar_Init@F6644
  1131     16DE  3400               	retlw	0
  1132     16DF  3418               	retlw	24
  1133     16E0  3418               	retlw	24
  1134     16E1  341C               	retlw	28
  1135     16E2  341E               	retlw	30
  1136     16E3  341F               	retlw	31
  1137     16E4  341F               	retlw	31
  1138     16E5  341F               	retlw	31
  1139                           
  1140                           ;initializer for Lcd_Progress_Bar_Init@F6642
  1141     16E6  3400               	retlw	0
  1142     16E7  3410               	retlw	16
  1143     16E8  3418               	retlw	24
  1144     16E9  341C               	retlw	28
  1145     16EA  341E               	retlw	30
  1146     16EB  341F               	retlw	31
  1147     16EC  341F               	retlw	31
  1148     16ED  341F               	retlw	31
  1149                           
  1150                           	psect	idataBANK3
  1151     14F9                     __pidataBANK3:
  1152                           
  1153                           ;initializer for Lcd_Signal_Init@F6682
  1154     14F9  3404               	retlw	4
  1155     14FA  340E               	retlw	14
  1156     14FB  341F               	retlw	31
  1157     14FC  340E               	retlw	14
  1158     14FD  340E               	retlw	14
  1159     14FE  341F               	retlw	31
  1160     14FF  3400               	retlw	0
  1161     1500  3400               	retlw	0
  1162                           
  1163                           ;initializer for Lcd_Signal_Init@F6680
  1164     1501  3400               	retlw	0
  1165     1502  3404               	retlw	4
  1166     1503  340E               	retlw	14
  1167     1504  3404               	retlw	4
  1168     1505  340E               	retlw	14
  1169     1506  341F               	retlw	31
  1170     1507  3400               	retlw	0
  1171     1508  3400               	retlw	0
  1172                           
  1173                           ;initializer for Lcd_Signal_Init@F6678
  1174     1509  3400               	retlw	0
  1175     150A  3400               	retlw	0
  1176     150B  3400               	retlw	0
  1177     150C  3404               	retlw	4
  1178     150D  340E               	retlw	14
  1179     150E  341F               	retlw	31
  1180     150F  3400               	retlw	0
  1181     1510  3400               	retlw	0
  1182                           
  1183                           ;initializer for Lcd_Battery_Init@F6671
  1184     1511  340E               	retlw	14
  1185     1512  341F               	retlw	31
  1186     1513  341F               	retlw	31
  1187     1514  341F               	retlw	31
  1188     1515  341F               	retlw	31
  1189     1516  341F               	retlw	31
  1190     1517  341F               	retlw	31
  1191     1518  340E               	retlw	14
  1192     0016                     _TMR1	set	22
  1193     000E                     _PORTCbits	set	14
  1194     0011                     _PIR1bits	set	17
  1195     000F                     _PORTD	set	15
  1196     0018                     _T1CON	set	24
  1197     000B                     _INTCONbits	set	11
  1198     0015                     _TMR0	set	21
  1199     007A                     _RD2	set	122
  1200     007B                     _RD3	set	123
  1201     007F                     _RD7	set	127
  1202     007E                     _RD6	set	126
  1203     007D                     _RD5	set	125
  1204     007C                     _RD4	set	124
  1205     008F                     _TRISD	set	143
  1206     0091                     _PIE1bits	set	145
  1207     0095                     _OPTION_REGbits	set	149
  1208     008D                     _TRISBbits	set	141
  1209     008E                     _TRISCbits	set	142
  1210     04CF                     _SPLLEN	set	1231
  1211     04CE                     _IRCF3	set	1230
  1212     04CD                     _IRCF2	set	1229
  1213     04CC                     _IRCF1	set	1228
  1214     04CB                     _IRCF0	set	1227
  1215     04C9                     _SCS1	set	1225
  1216     04C8                     _SCS0	set	1224
  1217     010F                     _LATDbits	set	271
  1218     010E                     _LATCbits	set	270
  1219     018F                     _ANSELD	set	399
  1220     018D                     _ANSELBbits	set	397
  1221     018E                     _ANSELCbits	set	398
  1222     0E11                     _T0CKIPPSbits	set	3601
  1223     0E0F                     _PPSLOCKbits	set	3599
  1224     0E0F                     _PPSLOCK	set	3599
  1225                           
  1226                           	psect	stringtext1
  1227     1800                     __pstringtext1:
  1228     1800                     STR_3:
  1229     1800  3445               	retlw	69	;'E'
  1230     1801  3472               	retlw	114	;'r'
  1231     1802  3472               	retlw	114	;'r'
  1232     1803  346F               	retlw	111	;'o'
  1233     1804  3472               	retlw	114	;'r'
  1234     1805  343A               	retlw	58	;':'
  1235     1806  3420               	retlw	32	;' '
  1236     1807  3455               	retlw	85	;'U'
  1237     1808  346E               	retlw	110	;'n'
  1238     1809  3461               	retlw	97	;'a'
  1239     180A  3462               	retlw	98	;'b'
  1240     180B  346C               	retlw	108	;'l'
  1241     180C  3465               	retlw	101	;'e'
  1242     180D  3420               	retlw	32	;' '
  1243     180E  3474               	retlw	116	;'t'
  1244     180F  346F               	retlw	111	;'o'
  1245     1810  3420               	retlw	32	;' '
  1246     1811  346D               	retlw	109	;'m'
  1247     1812  3465               	retlw	101	;'e'
  1248     1813  3461               	retlw	97	;'a'
  1249     1814  3473               	retlw	115	;'s'
  1250     1815  3475               	retlw	117	;'u'
  1251     1816  3472               	retlw	114	;'r'
  1252     1817  3465               	retlw	101	;'e'
  1253     1818  3420               	retlw	32	;' '
  1254     1819  3466               	retlw	102	;'f'
  1255     181A  3472               	retlw	114	;'r'
  1256     181B  3465               	retlw	101	;'e'
  1257     181C  3471               	retlw	113	;'q'
  1258     181D  3475               	retlw	117	;'u'
  1259     181E  3465               	retlw	101	;'e'
  1260     181F  346E               	retlw	110	;'n'
  1261     1820  3463               	retlw	99	;'c'
  1262     1821  3479               	retlw	121	;'y'
  1263     1822  3400               	retlw	0
  1264                           
  1265                           	psect	stringtext2
  1266     1823                     __pstringtext2:
  1267     1823                     STR_8:
  1268     1823  3430               	retlw	48	;'0'
  1269     1824  3431               	retlw	49	;'1'
  1270     1825  3432               	retlw	50	;'2'
  1271     1826  3433               	retlw	51	;'3'
  1272     1827  3434               	retlw	52	;'4'
  1273     1828  3435               	retlw	53	;'5'
  1274     1829  3436               	retlw	54	;'6'
  1275     182A  3437               	retlw	55	;'7'
  1276     182B  3438               	retlw	56	;'8'
  1277     182C  3439               	retlw	57	;'9'
  1278     182D  3441               	retlw	65	;'A'
  1279     182E  3442               	retlw	66	;'B'
  1280     182F  3443               	retlw	67	;'C'
  1281     1830  3444               	retlw	68	;'D'
  1282     1831  3445               	retlw	69	;'E'
  1283     1832  3446               	retlw	70	;'F'
  1284     1833  3400               	retlw	0
  1285                           
  1286                           	psect	stringtext3
  1287     1834                     __pstringtext3:
  1288     1834                     STR_1:
  1289     1834  3443               	retlw	67	;'C'
  1290     1835  3461               	retlw	97	;'a'
  1291     1836  346C               	retlw	108	;'l'
  1292     1837  3469               	retlw	105	;'i'
  1293     1838  3462               	retlw	98	;'b'
  1294     1839  3472               	retlw	114	;'r'
  1295     183A  3461               	retlw	97	;'a'
  1296     183B  3474               	retlw	116	;'t'
  1297     183C  3469               	retlw	105	;'i'
  1298     183D  346E               	retlw	110	;'n'
  1299     183E  3467               	retlw	103	;'g'
  1300     183F  342E               	retlw	46	;'.'
  1301     1840  342E               	retlw	46	;'.'
  1302     1841  342E               	retlw	46	;'.'
  1303     1842  3400               	retlw	0
  1304                           
  1305                           	psect	stringtext4
  1306     1843                     __pstringtext4:
  1307     1843                     STR_4:
  1308     1843  3445               	retlw	69	;'E'
  1309     1844  3472               	retlw	114	;'r'
  1310     1845  3472               	retlw	114	;'r'
  1311     1846  343A               	retlw	58	;':'
  1312     1847  3420               	retlw	32	;' '
  1313     1848  3454               	retlw	84	;'T'
  1314     1849  346F               	retlw	111	;'o'
  1315     184A  346F               	retlw	111	;'o'
  1316     184B  3420               	retlw	32	;' '
  1317     184C  344C               	retlw	76	;'L'
  1318     184D  3461               	retlw	97	;'a'
  1319     184E  3472               	retlw	114	;'r'
  1320     184F  3467               	retlw	103	;'g'
  1321     1850  3465               	retlw	101	;'e'
  1322     1851  3400               	retlw	0
  1323                           
  1324                           	psect	stringtext5
  1325     1852                     __pstringtext5:
  1326     1852                     STR_2:
  1327     1852  344F               	retlw	79	;'O'
  1328     1853  3466               	retlw	102	;'f'
  1329     1854  3466               	retlw	102	;'f'
  1330     1855  3473               	retlw	115	;'s'
  1331     1856  3465               	retlw	101	;'e'
  1332     1857  3474               	retlw	116	;'t'
  1333     1858  3420               	retlw	32	;' '
  1334     1859  3428               	retlw	40	;'('
  1335     185A  3475               	retlw	117	;'u'
  1336     185B  3448               	retlw	72	;'H'
  1337     185C  3429               	retlw	41	;')'
  1338     185D  343A               	retlw	58	;':'
  1339     185E  3420               	retlw	32	;' '
  1340     185F  3400               	retlw	0
  1341                           
  1342                           	psect	stringtext6
  1343     1860                     __pstringtext6:
  1344     1860                     STR_7:
  1345     1860  3445               	retlw	69	;'E'
  1346     1861  3472               	retlw	114	;'r'
  1347     1862  3472               	retlw	114	;'r'
  1348     1863  343A               	retlw	58	;':'
  1349     1864  3420               	retlw	32	;' '
  1350     1865  3452               	retlw	82	;'R'
  1351     1866  3461               	retlw	97	;'a'
  1352     1867  346E               	retlw	110	;'n'
  1353     1868  3467               	retlw	103	;'g'
  1354     1869  3465               	retlw	101	;'e'
  1355     186A  3400               	retlw	0
  1356                           
  1357                           	psect	stringtext7
  1358     186B                     __pstringtext7:
  1359     186B                     STR_10:
  1360     186B  3442               	retlw	66	;'B'
  1361     186C  3461               	retlw	97	;'a'
  1362     186D  3474               	retlw	116	;'t'
  1363     186E  3474               	retlw	116	;'t'
  1364     186F  3465               	retlw	101	;'e'
  1365     1870  3472               	retlw	114	;'r'
  1366     1871  3479               	retlw	121	;'y'
  1367     1872  343A               	retlw	58	;':'
  1368     1873  3400               	retlw	0
  1369                           
  1370                           	psect	stringtext8
  1371     1874                     __pstringtext8:
  1372     1874                     STR_5:
  1373     1874  3449               	retlw	73	;'I'
  1374     1875  3420               	retlw	32	;' '
  1375     1876  3428               	retlw	40	;'('
  1376     1877  346D               	retlw	109	;'m'
  1377     1878  3448               	retlw	72	;'H'
  1378     1879  3429               	retlw	41	;')'
  1379     187A  343A               	retlw	58	;':'
  1380     187B  3420               	retlw	32	;' '
  1381     187C  3400               	retlw	0
  1382                           
  1383                           	psect	stringtext9
  1384     187D                     __pstringtext9:
  1385     187D                     STR_6:
  1386     187D  3449               	retlw	73	;'I'
  1387     187E  3420               	retlw	32	;' '
  1388     187F  3428               	retlw	40	;'('
  1389     1880  3475               	retlw	117	;'u'
  1390     1881  3448               	retlw	72	;'H'
  1391     1882  3429               	retlw	41	;')'
  1392     1883  343A               	retlw	58	;':'
  1393     1884  3420               	retlw	32	;' '
  1394     1885  3400               	retlw	0
  1395                           
  1396                           	psect	stringtext10
  1397     1886                     __pstringtext10:
  1398     1886                     STR_12:
  1399     1886  3453               	retlw	83	;'S'
  1400     1887  3469               	retlw	105	;'i'
  1401     1888  3467               	retlw	103	;'g'
  1402     1889  346E               	retlw	110	;'n'
  1403     188A  3461               	retlw	97	;'a'
  1404     188B  346C               	retlw	108	;'l'
  1405     188C  343A               	retlw	58	;':'
  1406     188D  3400               	retlw	0
  1407                           
  1408                           	psect	stringtext11
  1409     188E                     __pstringtext11:
  1410     188E                     STR_11:
  1411     188E  3425               	retlw	37	;'%'
  1412     188F  3464               	retlw	100	;'d'
  1413     1890  3425               	retlw	37	;'%'
  1414     1891  3425               	retlw	37	;'%'
  1415     1892  3400               	retlw	0
  1416                           
  1417                           	psect	stringtext12
  1418     1893                     __pstringtext12:
  1419     1893                     STR_9:
  1420     1893  3425               	retlw	37	;'%'
  1421     1894  3430               	retlw	48	;'0'
  1422     1895  342A               	retlw	42	;'*'
  1423     1896  3464               	retlw	100	;'d'
  1424     1897  3400               	retlw	0
  1425                           
  1426                           	psect	stringtext13
  1427     0000                     __pstringtext13:
  1428                           
  1429                           	psect	cinit
  1430     001C                     start_initialization:	
  1431                           ; #config settings
  1432                           
  1433     001C                     __initialization:
  1434                           
  1435                           ; Initialize objects allocated to BANK1
  1436     001C  0021               	movlb	1	; select bank1
  1437     001D  3187  27FC  3180   	fcall	__pidataBANK1	;fetch initializer
  1438     0020  00EE               	movwf	__pdataBANK1& (0+127)
  1439                           
  1440                           ; Initialize objects allocated to BANK2
  1441     0021  309E               	movlw	low __pidataBANK2
  1442     0022  0084               	movwf	4
  1443     0023  3096               	movlw	(high __pidataBANK2)| (0+128)
  1444     0024  0085               	movwf	5
  1445     0025  3020               	movlw	low __pdataBANK2
  1446     0026  0086               	movwf	6
  1447     0027  3001               	movlw	high __pdataBANK2
  1448     0028  0087               	movwf	7
  1449     0029  3050               	movlw	80
  1450     002A  3193  2394  3180   	fcall	init_ram
  1451                           
  1452                           ; Initialize objects allocated to BANK3
  1453     002D  30F9               	movlw	low __pidataBANK3
  1454     002E  0084               	movwf	4
  1455     002F  3094               	movlw	(high __pidataBANK3)| (0+128)
  1456     0030  0085               	movwf	5
  1457     0031  30D0               	movlw	low __pdataBANK3
  1458     0032  0086               	movwf	6
  1459     0033  3001               	movlw	high __pdataBANK3
  1460     0034  0087               	movwf	7
  1461     0035  3020               	movlw	32
  1462     0036  3193  2394  3180   	fcall	init_ram
  1463                           
  1464                           ; Clear objects allocated to BANK0
  1465     0039  0020               	movlb	0	; select bank0
  1466     003A  01E9               	clrf	__pbssBANK0& (0+127)
  1467     003B  01EA               	clrf	(__pbssBANK0+1)& (0+127)
  1468     003C  01EB               	clrf	(__pbssBANK0+2)& (0+127)
  1469     003D  01EC               	clrf	(__pbssBANK0+3)& (0+127)
  1470     003E  01ED               	clrf	(__pbssBANK0+4)& (0+127)
  1471                           
  1472                           ; Clear objects allocated to BANK1
  1473     003F  0021               	movlb	1	; select bank1
  1474     0040  01EC               	clrf	__pbssBANK1& (0+127)
  1475     0041  01ED               	clrf	(__pbssBANK1+1)& (0+127)
  1476                           
  1477                           ; Clear objects allocated to BANK3
  1478     0042  30A0               	movlw	low __pbssBANK3
  1479     0043  0084               	movwf	4
  1480     0044  3001               	movlw	high __pbssBANK3
  1481     0045  0085               	movwf	5
  1482     0046  3030               	movlw	48
  1483     0047  3193  238E  3180   	fcall	clear_ram0
  1484     004A                     end_of_initialization:	
  1485                           ;End of C runtime variable initialization code
  1486                           
  1487     004A                     __end_of__initialization:
  1488     004A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1489     004B  0020               	movlb	0
  1490     004C  3180  284E         	ljmp	_main	;jump to C main() function
  1491                           
  1492                           	psect	bssBANK0
  1493     0069                     __pbssBANK0:
  1494     0069                     _width:
  1495     0069                     	ds	2
  1496     006B                     _prec:
  1497     006B                     	ds	2
  1498     006D                     _flags:
  1499     006D                     	ds	1
  1500                           
  1501                           	psect	bssBANK1
  1502     00EC                     __pbssBANK1:
  1503     00EC                     _tmr0_overflows:
  1504     00EC                     	ds	2
  1505                           
  1506                           	psect	dataBANK1
  1507     00EE                     __pdataBANK1:
  1508     00EE                     _calibration_value:
  1509     00EE                     	ds	1
  1510                           
  1511                           	psect	dataBANK2
  1512     0120                     __pdataBANK2:
  1513     0120                     Lcd_Battery_Init@F6669:
  1514     0120                     	ds	8
  1515     0128                     Lcd_Battery_Init@F6667:
  1516     0128                     	ds	8
  1517     0130                     Lcd_Battery_Init@F6665:
  1518     0130                     	ds	8
  1519     0138                     Lcd_Battery_Init@F6663:
  1520     0138                     	ds	8
  1521     0140                     Lcd_Battery_Init@F6661:
  1522     0140                     	ds	8
  1523     0148                     Lcd_Battery_Init@F6659:
  1524     0148                     	ds	8
  1525     0150                     Lcd_Progress_Bar_Init@F6648:
  1526     0150                     	ds	8
  1527     0158                     Lcd_Progress_Bar_Init@F6646:
  1528     0158                     	ds	8
  1529     0160                     Lcd_Progress_Bar_Init@F6644:
  1530     0160                     	ds	8
  1531     0168                     Lcd_Progress_Bar_Init@F6642:
  1532     0168                     	ds	8
  1533                           
  1534                           	psect	bssBANK3
  1535     01A0                     __pbssBANK3:
  1536     01A0                     _dbuf:
  1537     01A0                     	ds	32
  1538     01C0                     ftoa@buf:
  1539     01C0                     	ds	16
  1540                           
  1541                           	psect	dataBANK3
  1542     01D0                     __pdataBANK3:
  1543     01D0                     Lcd_Signal_Init@F6682:
  1544     01D0                     	ds	8
  1545     01D8                     Lcd_Signal_Init@F6680:
  1546     01D8                     	ds	8
  1547     01E0                     Lcd_Signal_Init@F6678:
  1548     01E0                     	ds	8
  1549     01E8                     Lcd_Battery_Init@F6671:
  1550     01E8                     	ds	8
  1551                           
  1552                           	psect	inittext
  1553     1394                     init_ram:
  1554     1394  00FE               	movwf	btemp
  1555     1395                     initloop:
  1556     1395  0012               	moviw fsr0++
  1557     1396  001E               	movwi fsr1++
  1558     1397  0BFE               	decfsz	btemp,f
  1559     1398  2B95               	goto	initloop
  1560     1399  3400               	retlw	0
  1561                           
  1562                           	psect	clrtext
  1563     138E                     clear_ram0:	
  1564                           ;	Called with FSR0 containing the base address, and
  1565                           ;	WREG with the size to clear
  1566                           
  1567     138E  0064               	clrwdt	;clear the watchdog before getting into this loop
  1568     138F                     clrloop0:
  1569     138F  0180               	clrf	0	;clear RAM location pointed to by FSR
  1570     1390  3101               	addfsr 0,1
  1571     1391  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1572     1392  2B8F               	goto	clrloop0	;have we reached the end yet?
  1573     1393  3400               	retlw	0	;all done for this memory range, return
  1574                           
  1575                           	psect	cstackBANK1
  1576     00A0                     __pcstackBANK1:
  1577     00A0                     Lcd_Write_Padded_Integer@buf:
  1578                           
  1579                           ; 16 bytes @ 0x0
  1580     00A0                     	ds	16
  1581     00B0                     calibrate@capacitance:
  1582                           
  1583                           ; 4 bytes @ 0x10
  1584     00B0                     	ds	4
  1585     00B4                     calibrate@precomputed_constant:
  1586                           
  1587                           ; 4 bytes @ 0x14
  1588     00B4                     	ds	4
  1589     00B8                     calibrate@inductance_h:
  1590                           
  1591                           ; 4 bytes @ 0x18
  1592     00B8                     	ds	4
  1593     00BC                     _calibrate$1327:
  1594                           
  1595                           ; 4 bytes @ 0x1C
  1596     00BC                     	ds	4
  1597     00C0                     calibrate@total_counts:
  1598                           
  1599                           ; 2 bytes @ 0x20
  1600     00C0                     	ds	2
  1601     00C2                     calibrate@frequency:
  1602                           
  1603                           ; 4 bytes @ 0x22
  1604     00C2                     	ds	4
  1605     00C6                     calibrate@count_start:
  1606                           
  1607                           ; 2 bytes @ 0x26
  1608     00C6                     	ds	2
  1609     00C8                     calibrate@count_end:
  1610                           
  1611                           ; 2 bytes @ 0x28
  1612     00C8                     	ds	2
  1613     00CA                     main@inductance_h:
  1614                           
  1615                           ; 4 bytes @ 0x2A
  1616     00CA                     	ds	4
  1617     00CE                     main@inductance_mh:
  1618                           
  1619                           ; 4 bytes @ 0x2E
  1620     00CE                     	ds	4
  1621     00D2                     main@capacitance:
  1622                           
  1623                           ; 4 bytes @ 0x32
  1624     00D2                     	ds	4
  1625     00D6                     main@precomputed_constant:
  1626                           
  1627                           ; 4 bytes @ 0x36
  1628     00D6                     	ds	4
  1629     00DA                     _main$1328:
  1630                           
  1631                           ; 4 bytes @ 0x3A
  1632     00DA                     	ds	4
  1633     00DE                     main@total_counts:
  1634                           
  1635                           ; 2 bytes @ 0x3E
  1636     00DE                     	ds	2
  1637     00E0                     main@count_start:
  1638                           
  1639                           ; 2 bytes @ 0x40
  1640     00E0                     	ds	2
  1641     00E2                     main@count_end:
  1642                           
  1643                           ; 2 bytes @ 0x42
  1644     00E2                     	ds	2
  1645     00E4                     main@frequency:
  1646                           
  1647                           ; 4 bytes @ 0x44
  1648     00E4                     	ds	4
  1649     00E8                     main@inductance_uh:
  1650                           
  1651                           ; 4 bytes @ 0x48
  1652     00E8                     	ds	4
  1653                           
  1654                           	psect	cstackCOMMON
  1655     0070                     __pcstackCOMMON:
  1656     0070                     ?___flge:
  1657     0070                     ?_internal_32:	
  1658                           ; 1 bit 
  1659                           
  1660     0070                     ??_internal_32:	
  1661                           ; 1 bytes @ 0x0
  1662                           
  1663     0070                     ?_Lcd_Clear:	
  1664                           ; 1 bytes @ 0x0
  1665                           
  1666     0070                     ?_Lcd_Init:	
  1667                           ; 1 bytes @ 0x0
  1668                           
  1669     0070                     ?_putch:	
  1670                           ; 1 bytes @ 0x0
  1671                           
  1672     0070                     ??_putch:	
  1673                           ; 1 bytes @ 0x0
  1674                           
  1675     0070                     ?_initMain:	
  1676                           ; 1 bytes @ 0x0
  1677                           
  1678     0070                     ??_initMain:	
  1679                           ; 1 bytes @ 0x0
  1680                           
  1681     0070                     ?_isr:	
  1682                           ; 1 bytes @ 0x0
  1683                           
  1684     0070                     ??_isr:	
  1685                           ; 1 bytes @ 0x0
  1686                           
  1687     0070                     ?_calibrate:	
  1688                           ; 1 bytes @ 0x0
  1689                           
  1690     0070                     ?_main:	
  1691                           ; 1 bytes @ 0x0
  1692                           
  1693     0070                     ?_Lcd_Port:	
  1694                           ; 1 bytes @ 0x0
  1695                           
  1696     0070                     ??_Lcd_Port:	
  1697                           ; 1 bytes @ 0x0
  1698                           
  1699     0070                     ?_Lcd_Enable_Pulse:	
  1700                           ; 1 bytes @ 0x0
  1701                           
  1702     0070                     ??_Lcd_Enable_Pulse:	
  1703                           ; 1 bytes @ 0x0
  1704                           
  1705     0070                     ?_Lcd_Cmd:	
  1706                           ; 1 bytes @ 0x0
  1707                           
  1708     0070                     ?_Lcd_Send_Command:	
  1709                           ; 1 bytes @ 0x0
  1710                           
  1711     0070                     ?_Lcd_Write_Char:	
  1712                           ; 1 bytes @ 0x0
  1713                           
  1714     0070                     ?__Umul8_16:	
  1715                           ; 1 bytes @ 0x0
  1716                           
  1717     0070                     ?_fputc:	
  1718                           ; 2 bytes @ 0x0
  1719                           
  1720     0070                     ?_ReadTimer0WithOverflows:	
  1721                           ; 2 bytes @ 0x0
  1722                           
  1723     0070                     ?___wmul:	
  1724                           ; 2 bytes @ 0x0
  1725                           
  1726     0070                     ?___awdiv:	
  1727                           ; 2 bytes @ 0x0
  1728                           
  1729     0070                     ?___awmod:	
  1730                           ; 2 bytes @ 0x0
  1731                           
  1732     0070                     ?___flneg:	
  1733                           ; 2 bytes @ 0x0
  1734                           
  1735     0070                     ?___fladd:	
  1736                           ; 4 bytes @ 0x0
  1737                           
  1738     0070                     ?___xxtofl:	
  1739                           ; 4 bytes @ 0x0
  1740                           
  1741     0070                     __Umul8_16@multiplicand:	
  1742                           ; 4 bytes @ 0x0
  1743                           
  1744     0070                     putch@c:	
  1745                           ; 1 bytes @ 0x0
  1746                           
  1747     0070                     ___wmul@multiplier:	
  1748                           ; 1 bytes @ 0x0
  1749                           
  1750     0070                     ___awdiv@divisor:	
  1751                           ; 2 bytes @ 0x0
  1752                           
  1753     0070                     ___awmod@divisor:	
  1754                           ; 2 bytes @ 0x0
  1755                           
  1756     0070                     fputc@c:	
  1757                           ; 2 bytes @ 0x0
  1758                           
  1759     0070                     ___flge@ff1:	
  1760                           ; 2 bytes @ 0x0
  1761                           
  1762     0070                     ___flneg@f1:	
  1763                           ; 4 bytes @ 0x0
  1764                           
  1765     0070                     ___fladd@b:	
  1766                           ; 4 bytes @ 0x0
  1767                           
  1768     0070                     ___xxtofl@val:	
  1769                           ; 4 bytes @ 0x0
  1770                           
  1771                           
  1772                           ; 4 bytes @ 0x0
  1773     0070                     	ds	1
  1774     0071                     Lcd_Port@a:
  1775                           
  1776                           ; 1 bytes @ 0x1
  1777     0071                     	ds	1
  1778     0072                     ??__Umul8_16:
  1779     0072                     ??_ReadTimer0WithOverflows:	
  1780                           ; 1 bytes @ 0x2
  1781                           
  1782     0072                     ??_Lcd_Cmd:	
  1783                           ; 1 bytes @ 0x2
  1784                           
  1785     0072                     ??_Lcd_Write_Char:	
  1786                           ; 1 bytes @ 0x2
  1787                           
  1788     0072                     Lcd_Cmd@a:	
  1789                           ; 1 bytes @ 0x2
  1790                           
  1791     0072                     fputc@fp:	
  1792                           ; 1 bytes @ 0x2
  1793                           
  1794     0072                     ___wmul@multiplicand:	
  1795                           ; 1 bytes @ 0x2
  1796                           
  1797     0072                     ___awdiv@dividend:	
  1798                           ; 2 bytes @ 0x2
  1799                           
  1800     0072                     ___awmod@dividend:	
  1801                           ; 2 bytes @ 0x2
  1802                           
  1803                           
  1804                           ; 2 bytes @ 0x2
  1805     0072                     	ds	1
  1806     0073                     ??_fputc:
  1807     0073                     ??_Lcd_Send_Command:	
  1808                           ; 1 bytes @ 0x3
  1809                           
  1810     0073                     Lcd_Write_Char@a:	
  1811                           ; 1 bytes @ 0x3
  1812                           
  1813                           
  1814                           ; 1 bytes @ 0x3
  1815     0073                     	ds	1
  1816     0074                     ?_Lcd_Write_String:
  1817     0074                     ??___wmul:	
  1818                           ; 1 bytes @ 0x4
  1819                           
  1820     0074                     ??___awdiv:	
  1821                           ; 1 bytes @ 0x4
  1822                           
  1823     0074                     ??___awmod:	
  1824                           ; 1 bytes @ 0x4
  1825                           
  1826     0074                     ??___flneg:	
  1827                           ; 1 bytes @ 0x4
  1828                           
  1829     0074                     ??___xxtofl:	
  1830                           ; 1 bytes @ 0x4
  1831                           
  1832     0074                     Lcd_Send_Command@cmd:	
  1833                           ; 1 bytes @ 0x4
  1834                           
  1835     0074                     Lcd_Write_String@str:	
  1836                           ; 1 bytes @ 0x4
  1837                           
  1838     0074                     ___wmul@product:	
  1839                           ; 2 bytes @ 0x4
  1840                           
  1841     0074                     __Umul8_16@product:	
  1842                           ; 2 bytes @ 0x4
  1843                           
  1844     0074                     ___flge@ff2:	
  1845                           ; 2 bytes @ 0x4
  1846                           
  1847     0074                     ___fladd@a:	
  1848                           ; 4 bytes @ 0x4
  1849                           
  1850                           
  1851                           ; 4 bytes @ 0x4
  1852     0074                     	ds	1
  1853     0075                     ??_Lcd_Clear:
  1854     0075                     ?_Lcd_Set_Cursor:	
  1855                           ; 1 bytes @ 0x5
  1856                           
  1857     0075                     ??_Lcd_Init:	
  1858                           ; 1 bytes @ 0x5
  1859                           
  1860     0075                     Lcd_Set_Cursor@col:	
  1861                           ; 1 bytes @ 0x5
  1862                           
  1863     0075                     ___awdiv@counter:	
  1864                           ; 1 bytes @ 0x5
  1865                           
  1866     0075                     ___awmod@counter:	
  1867                           ; 1 bytes @ 0x5
  1868                           
  1869                           
  1870                           ; 1 bytes @ 0x5
  1871     0075                     	ds	1
  1872     0076                     ??_Lcd_Set_Cursor:
  1873     0076                     ??_Lcd_Write_String:	
  1874                           ; 1 bytes @ 0x6
  1875                           
  1876     0076                     ?_read_prec_or_width:	
  1877                           ; 1 bytes @ 0x6
  1878                           
  1879     0076                     Lcd_Set_Cursor@row:	
  1880                           ; 2 bytes @ 0x6
  1881                           
  1882     0076                     ___awdiv@sign:	
  1883                           ; 1 bytes @ 0x6
  1884                           
  1885     0076                     ___awmod@sign:	
  1886                           ; 1 bytes @ 0x6
  1887                           
  1888     0076                     read_prec_or_width@ap:	
  1889                           ; 1 bytes @ 0x6
  1890                           
  1891     0076                     __Umul8_16@word_mpld:	
  1892                           ; 1 bytes @ 0x6
  1893                           
  1894                           
  1895                           ; 2 bytes @ 0x6
  1896     0076                     	ds	1
  1897     0077                     ?_abs:
  1898     0077                     _Lcd_Set_Cursor$490:	
  1899                           ; 2 bytes @ 0x7
  1900                           
  1901     0077                     ___awdiv@quotient:	
  1902                           ; 2 bytes @ 0x7
  1903                           
  1904     0077                     abs@a:	
  1905                           ; 2 bytes @ 0x7
  1906                           
  1907                           
  1908                           ; 2 bytes @ 0x7
  1909     0077                     	ds	1
  1910     0078                     ??___flge:
  1911     0078                     ??_read_prec_or_width:	
  1912                           ; 1 bytes @ 0x8
  1913                           
  1914     0078                     ?_fputs:	
  1915                           ; 1 bytes @ 0x8
  1916                           
  1917     0078                     ___fladd@signs:	
  1918                           ; 2 bytes @ 0x8
  1919                           
  1920     0078                     __Umul8_16@multiplier:	
  1921                           ; 1 bytes @ 0x8
  1922                           
  1923     0078                     ___xxtofl@sign:	
  1924                           ; 1 bytes @ 0x8
  1925                           
  1926     0078                     fputs@fp:	
  1927                           ; 1 bytes @ 0x8
  1928                           
  1929                           
  1930                           ; 1 bytes @ 0x8
  1931     0078                     	ds	1
  1932     0079                     ??_itoa:
  1933     0079                     ??_fputs:	
  1934                           ; 1 bytes @ 0x9
  1935                           
  1936     0079                     ??_abs:	
  1937                           ; 1 bytes @ 0x9
  1938                           
  1939     0079                     Lcd_Set_Cursor@address:	
  1940                           ; 1 bytes @ 0x9
  1941                           
  1942     0079                     ___fladd@aexp:	
  1943                           ; 1 bytes @ 0x9
  1944                           
  1945     0079                     ___xxtofl@exp:	
  1946                           ; 1 bytes @ 0x9
  1947                           
  1948                           
  1949                           ; 1 bytes @ 0x9
  1950     0079                     	ds	1
  1951     007A                     ___fladd@bexp:
  1952     007A                     ___xxtofl@arg:	
  1953                           ; 1 bytes @ 0xA
  1954                           
  1955                           
  1956                           ; 4 bytes @ 0xA
  1957     007A                     	ds	1
  1958     007B                     ?_pad:
  1959     007B                     ___fladd@grs:	
  1960                           ; 1 bytes @ 0xB
  1961                           
  1962     007B                     pad@buf:	
  1963                           ; 1 bytes @ 0xB
  1964                           
  1965                           
  1966                           ; 1 bytes @ 0xB
  1967     007B                     	ds	1
  1968     007C                     pad@p:
  1969                           
  1970                           ; 2 bytes @ 0xC
  1971     007C                     	ds	2
  1972     007E                     ??_Lcd_Write_Padded_Integer:
  1973     007E                     ??_Lcd_Write_Float:	
  1974                           ; 1 bytes @ 0xE
  1975                           
  1976     007E                     ??___flsub:	
  1977                           ; 1 bytes @ 0xE
  1978                           
  1979                           
  1980                           	psect	cstackBANK0
  1981     0020                     __pcstackBANK0:	
  1982                           ; 1 bytes @ 0xE
  1983                           
  1984     0020                     ??___fladd:
  1985     0020                     ?_itoa:	
  1986                           ; 1 bytes @ 0x0
  1987                           
  1988     0020                     ?___flmul:	
  1989                           ; 2 bytes @ 0x0
  1990                           
  1991     0020                     read_prec_or_width@c:	
  1992                           ; 4 bytes @ 0x0
  1993                           
  1994     0020                     fputs@c:	
  1995                           ; 1 bytes @ 0x0
  1996                           
  1997     0020                     itoa@buf:	
  1998                           ; 1 bytes @ 0x0
  1999                           
  2000     0020                     ___flmul@b:	
  2001                           ; 2 bytes @ 0x0
  2002                           
  2003                           
  2004                           ; 4 bytes @ 0x0
  2005     0020                     	ds	1
  2006     0021                     read_prec_or_width@n:
  2007     0021                     fputs@i:	
  2008                           ; 2 bytes @ 0x1
  2009                           
  2010                           
  2011                           ; 2 bytes @ 0x1
  2012     0021                     	ds	1
  2013     0022                     itoa@value:
  2014                           
  2015                           ; 2 bytes @ 0x2
  2016     0022                     	ds	1
  2017     0023                     read_prec_or_width@fmt:
  2018     0023                     fputs@s:	
  2019                           ; 1 bytes @ 0x3
  2020                           
  2021                           
  2022                           ; 1 bytes @ 0x3
  2023     0023                     	ds	1
  2024     0024                     ??_pad:
  2025     0024                     itoa@base:	
  2026                           ; 1 bytes @ 0x4
  2027                           
  2028     0024                     ___flmul@a:	
  2029                           ; 2 bytes @ 0x4
  2030                           
  2031                           
  2032                           ; 4 bytes @ 0x4
  2033     0024                     	ds	1
  2034     0025                     pad@i:
  2035                           
  2036                           ; 2 bytes @ 0x5
  2037     0025                     	ds	1
  2038     0026                     itoa@tmp_value:
  2039                           
  2040                           ; 2 bytes @ 0x6
  2041     0026                     	ds	1
  2042     0027                     pad@fp:
  2043                           
  2044                           ; 1 bytes @ 0x7
  2045     0027                     	ds	1
  2046     0028                     ??___flmul:
  2047     0028                     ?_dtoa:	
  2048                           ; 1 bytes @ 0x8
  2049                           
  2050     0028                     ?___flsub:	
  2051                           ; 1 bytes @ 0x8
  2052                           
  2053     0028                     itoa@tmp_char:	
  2054                           ; 4 bytes @ 0x8
  2055                           
  2056     0028                     dtoa@d:	
  2057                           ; 1 bytes @ 0x8
  2058                           
  2059     0028                     ___flsub@a:	
  2060                           ; 2 bytes @ 0x8
  2061                           
  2062                           
  2063                           ; 4 bytes @ 0x8
  2064     0028                     	ds	1
  2065     0029                     itoa@ptr1:
  2066                           
  2067                           ; 2 bytes @ 0x9
  2068     0029                     	ds	1
  2069     002A                     ??_dtoa:
  2070                           
  2071                           ; 1 bytes @ 0xA
  2072     002A                     	ds	1
  2073     002B                     itoa@ptr:
  2074     002B                     _dtoa$1023:	
  2075                           ; 2 bytes @ 0xB
  2076                           
  2077                           
  2078                           ; 2 bytes @ 0xB
  2079     002B                     	ds	1
  2080     002C                     ___flsub@b:
  2081                           
  2082                           ; 4 bytes @ 0xC
  2083     002C                     	ds	1
  2084     002D                     ___flmul@sign:
  2085     002D                     dtoa@fp:	
  2086                           ; 1 bytes @ 0xD
  2087                           
  2088                           
  2089                           ; 1 bytes @ 0xD
  2090     002D                     	ds	1
  2091     002E                     dtoa@p:
  2092     002E                     ___flmul@grs:	
  2093                           ; 1 bytes @ 0xE
  2094                           
  2095                           
  2096                           ; 4 bytes @ 0xE
  2097     002E                     	ds	1
  2098     002F                     dtoa@w:
  2099                           
  2100                           ; 2 bytes @ 0xF
  2101     002F                     	ds	2
  2102     0031                     dtoa@s:
  2103                           
  2104                           ; 1 bytes @ 0x11
  2105     0031                     	ds	1
  2106     0032                     ___flmul@aexp:
  2107     0032                     dtoa@i:	
  2108                           ; 1 bytes @ 0x12
  2109                           
  2110                           
  2111                           ; 2 bytes @ 0x12
  2112     0032                     	ds	1
  2113     0033                     ___flmul@bexp:
  2114                           
  2115                           ; 1 bytes @ 0x13
  2116     0033                     	ds	1
  2117     0034                     ?_vfpfcnvrt:
  2118     0034                     vfpfcnvrt@fmt:	
  2119                           ; 1 bytes @ 0x14
  2120                           
  2121     0034                     ___flmul@prod:	
  2122                           ; 1 bytes @ 0x14
  2123                           
  2124                           
  2125                           ; 4 bytes @ 0x14
  2126     0034                     	ds	1
  2127     0035                     vfpfcnvrt@ap:
  2128                           
  2129                           ; 1 bytes @ 0x15
  2130     0035                     	ds	1
  2131     0036                     ??_vfpfcnvrt:
  2132                           
  2133                           ; 1 bytes @ 0x16
  2134     0036                     	ds	2
  2135     0038                     ___flmul@temp:
  2136                           
  2137                           ; 2 bytes @ 0x18
  2138     0038                     	ds	2
  2139     003A                     ?___fltol:
  2140     003A                     ?___fldiv:	
  2141                           ; 4 bytes @ 0x1A
  2142                           
  2143     003A                     ___fltol@f1:	
  2144                           ; 4 bytes @ 0x1A
  2145                           
  2146     003A                     ___fldiv@a:	
  2147                           ; 4 bytes @ 0x1A
  2148                           
  2149     003A                     vfpfcnvrt@convarg:	
  2150                           ; 4 bytes @ 0x1A
  2151                           
  2152                           
  2153                           ; 4 bytes @ 0x1A
  2154     003A                     	ds	4
  2155     003E                     ??___fltol:
  2156     003E                     vfpfcnvrt@done:	
  2157                           ; 1 bytes @ 0x1E
  2158                           
  2159     003E                     ___fldiv@b:	
  2160                           ; 1 bytes @ 0x1E
  2161                           
  2162                           
  2163                           ; 4 bytes @ 0x1E
  2164     003E                     	ds	1
  2165     003F                     vfpfcnvrt@cp:
  2166                           
  2167                           ; 2 bytes @ 0x1F
  2168     003F                     	ds	2
  2169     0041                     vfpfcnvrt@fp:
  2170                           
  2171                           ; 1 bytes @ 0x21
  2172     0041                     	ds	1
  2173     0042                     ??___fldiv:
  2174     0042                     ?_vfprintf:	
  2175                           ; 1 bytes @ 0x22
  2176                           
  2177     0042                     ___fltol@sign1:	
  2178                           ; 2 bytes @ 0x22
  2179                           
  2180     0042                     vfprintf@fmt:	
  2181                           ; 1 bytes @ 0x22
  2182                           
  2183                           
  2184                           ; 2 bytes @ 0x22
  2185     0042                     	ds	1
  2186     0043                     ___fltol@exp1:
  2187                           
  2188                           ; 1 bytes @ 0x23
  2189     0043                     	ds	1
  2190     0044                     ?_ftoa:
  2191     0044                     vfprintf@ap:	
  2192                           ; 1 bytes @ 0x24
  2193                           
  2194     0044                     ftoa@f:	
  2195                           ; 1 bytes @ 0x24
  2196                           
  2197                           
  2198                           ; 4 bytes @ 0x24
  2199     0044                     	ds	1
  2200     0045                     ??_vfprintf:
  2201                           
  2202                           ; 1 bytes @ 0x25
  2203     0045                     	ds	1
  2204     0046                     vfprintf@fp:
  2205                           
  2206                           ; 1 bytes @ 0x26
  2207     0046                     	ds	1
  2208     0047                     vfprintf@cfmt:
  2209     0047                     ___fldiv@rem:	
  2210                           ; 2 bytes @ 0x27
  2211                           
  2212                           
  2213                           ; 4 bytes @ 0x27
  2214     0047                     	ds	1
  2215     0048                     ftoa@status:
  2216                           
  2217                           ; 1 bytes @ 0x28
  2218     0048                     	ds	1
  2219     0049                     ??_ftoa:
  2220     0049                     ?_sprintf:	
  2221                           ; 1 bytes @ 0x29
  2222                           
  2223     0049                     sprintf@fmt:	
  2224                           ; 2 bytes @ 0x29
  2225                           
  2226                           
  2227                           ; 2 bytes @ 0x29
  2228     0049                     	ds	1
  2229     004A                     _ftoa$1329:
  2230                           
  2231                           ; 4 bytes @ 0x2A
  2232     004A                     	ds	1
  2233     004B                     ___fldiv@sign:
  2234                           
  2235                           ; 1 bytes @ 0x2B
  2236     004B                     	ds	1
  2237     004C                     ___fldiv@new_exp:
  2238                           
  2239                           ; 2 bytes @ 0x2C
  2240     004C                     	ds	2
  2241     004E                     ftoa@frac_as_int:
  2242     004E                     ___fldiv@grs:	
  2243                           ; 2 bytes @ 0x2E
  2244                           
  2245                           
  2246                           ; 4 bytes @ 0x2E
  2247     004E                     	ds	1
  2248     004F                     ??_sprintf:
  2249                           
  2250                           ; 1 bytes @ 0x2F
  2251     004F                     	ds	1
  2252     0050                     sprintf@ap:
  2253     0050                     ftoa@frac_digits:	
  2254                           ; 1 bytes @ 0x30
  2255                           
  2256                           
  2257                           ; 2 bytes @ 0x30
  2258     0050                     	ds	1
  2259     0051                     sprintf@s:
  2260                           
  2261                           ; 1 bytes @ 0x31
  2262     0051                     	ds	1
  2263     0052                     ___fldiv@bexp:
  2264     0052                     ftoa@frac_part:	
  2265                           ; 1 bytes @ 0x32
  2266                           
  2267     0052                     sprintf@f:	
  2268                           ; 4 bytes @ 0x32
  2269                           
  2270                           
  2271                           ; 11 bytes @ 0x32
  2272     0052                     	ds	1
  2273     0053                     ___fldiv@aexp:
  2274                           
  2275                           ; 1 bytes @ 0x33
  2276     0053                     	ds	3
  2277     0056                     ftoa@int_part:
  2278                           
  2279                           ; 2 bytes @ 0x36
  2280     0056                     	ds	2
  2281     0058                     ftoa@ptr:
  2282                           
  2283                           ; 1 bytes @ 0x38
  2284     0058                     	ds	1
  2285     0059                     ?_Lcd_Write_Float:
  2286     0059                     Lcd_Write_Float@f:	
  2287                           ; 1 bytes @ 0x39
  2288                           
  2289                           
  2290                           ; 4 bytes @ 0x39
  2291     0059                     	ds	4
  2292     005D                     ?_Lcd_Write_Padded_Integer:
  2293     005D                     Lcd_Write_Float@buf:	
  2294                           ; 1 bytes @ 0x3D
  2295                           
  2296     005D                     Lcd_Write_Padded_Integer@num:	
  2297                           ; 1 bytes @ 0x3D
  2298                           
  2299                           
  2300                           ; 2 bytes @ 0x3D
  2301     005D                     	ds	1
  2302     005E                     Lcd_Write_Float@status:
  2303                           
  2304                           ; 2 bytes @ 0x3E
  2305     005E                     	ds	1
  2306     005F                     Lcd_Write_Padded_Integer@width:
  2307                           
  2308                           ; 2 bytes @ 0x3F
  2309     005F                     	ds	2
  2310     0061                     ??_calibrate:
  2311                           
  2312                           ; 1 bytes @ 0x41
  2313     0061                     	ds	4
  2314     0065                     ??_main:
  2315                           
  2316                           ; 1 bytes @ 0x45
  2317     0065                     	ds	4
  2318                           
  2319                           	psect	maintext
  2320     004E                     __pmaintext:	
  2321 ;;
  2322 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  2323 ;;
  2324 ;; *************** function _main *****************
  2325 ;; Defined at:
  2326 ;;		line 209 in file "main.c"
  2327 ;; Parameters:    Size  Location     Type
  2328 ;;		None
  2329 ;; Auto vars:     Size  Location     Type
  2330 ;;  inductance_u    4   72[BANK1 ] float 
  2331 ;;  frequency       4   68[BANK1 ] float 
  2332 ;;  precomputed_    4   54[BANK1 ] float 
  2333 ;;  capacitance     4   50[BANK1 ] float 
  2334 ;;  inductance_m    4   46[BANK1 ] float 
  2335 ;;  inductance_h    4   42[BANK1 ] float 
  2336 ;;  count_end       2   66[BANK1 ] unsigned short 
  2337 ;;  count_start     2   64[BANK1 ] unsigned short 
  2338 ;;  total_counts    2   62[BANK1 ] unsigned short 
  2339 ;; Return value:  Size  Location     Type
  2340 ;;                  1    wreg      void 
  2341 ;; Registers used:
  2342 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2343 ;; Tracked objects:
  2344 ;;		On entry : B1F/0
  2345 ;;		On exit  : 0/0
  2346 ;;		Unchanged: 0/0
  2347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2349 ;;      Locals:         0       0      34       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2350 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2351 ;;      Totals:         0       4      34       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2352 ;;Total ram usage:       38 bytes
  2353 ;; Hardware stack levels required when called: 11
  2354 ;; This function calls:
  2355 ;;		_Lcd_Clear
  2356 ;;		_Lcd_Init
  2357 ;;		_Lcd_Set_Cursor
  2358 ;;		_Lcd_Write_Float
  2359 ;;		_Lcd_Write_String
  2360 ;;		_ReadTimer0WithOverflows
  2361 ;;		___fldiv
  2362 ;;		___flge
  2363 ;;		___flmul
  2364 ;;		___flsub
  2365 ;;		___xxtofl
  2366 ;;		_calibrate
  2367 ;;		_initMain
  2368 ;; This function is called by:
  2369 ;;		Startup code after reset
  2370 ;; This function uses a non-reentrant model
  2371 ;;
  2372                           
  2373     004E                     _main:	
  2374                           ;psect for function _main
  2375                           
  2376     004E                     l3915:	
  2377                           ;incstack = 0
  2378                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2379                           
  2380                           
  2381                           ;main.c: 210:     initMain();
  2382     004E  3196  260F  3180   	fcall	_initMain
  2383     0051                     l3917:
  2384                           
  2385                           ;main.c: 212:     uint16_t count_start, count_end, total_counts;;main.c: 213:     float 
      +                          frequency, inductance_h, inductance_uh, inductance_mh;;main.c: 216:     float capacitanc
      +                          e = 100e-9;
  2386     0051  3033               	movlw	51
  2387     0052  0021               	movlb	1	; select bank1
  2388     0053  00D5               	movwf	(main@capacitance+3)^(0+128)
  2389     0054  30D6               	movlw	214
  2390     0055  00D4               	movwf	(main@capacitance+2)^(0+128)
  2391     0056  30BF               	movlw	191
  2392     0057  00D3               	movwf	(main@capacitance+1)^(0+128)
  2393     0058  3095               	movlw	149
  2394     0059  00D2               	movwf	main@capacitance^(0+128)
  2395     005A                     l3919:
  2396                           
  2397                           ;main.c: 219:     float precomputed_constant = 4 * 3.14159 * 3.14159 * capacitance;
  2398     005A  3042               	movlw	66
  2399     005B  0020               	movlb	0	; select bank0
  2400     005C  00A3               	movwf	___flmul@b+3
  2401     005D  301D               	movlw	29
  2402     005E  00A2               	movwf	___flmul@b+2
  2403     005F  30E9               	movlw	233
  2404     0060  00A1               	movwf	___flmul@b+1
  2405     0061  30D5               	movlw	213
  2406     0062  00A0               	movwf	___flmul@b
  2407     0063  0021               	movlb	1	; select bank1
  2408     0064  0855               	movf	(main@capacitance+3)^(0+128),w
  2409     0065  0020               	movlb	0	; select bank0
  2410     0066  00A7               	movwf	___flmul@a+3
  2411     0067  0021               	movlb	1	; select bank1
  2412     0068  0854               	movf	(main@capacitance+2)^(0+128),w
  2413     0069  0020               	movlb	0	; select bank0
  2414     006A  00A6               	movwf	___flmul@a+2
  2415     006B  0021               	movlb	1	; select bank1
  2416     006C  0853               	movf	(main@capacitance+1)^(0+128),w
  2417     006D  0020               	movlb	0	; select bank0
  2418     006E  00A5               	movwf	___flmul@a+1
  2419     006F  0021               	movlb	1	; select bank1
  2420     0070  0852               	movf	main@capacitance^(0+128),w
  2421     0071  0020               	movlb	0	; select bank0
  2422     0072  00A4               	movwf	___flmul@a
  2423     0073  3183  232B  3180   	fcall	___flmul
  2424     0076  0020               	movlb	0	; select bank0
  2425     0077  0823               	movf	?___flmul+3,w
  2426     0078  0021               	movlb	1	; select bank1
  2427     0079  00D9               	movwf	(main@precomputed_constant+3)^(0+128)
  2428     007A  0020               	movlb	0	; select bank0
  2429     007B  0822               	movf	?___flmul+2,w
  2430     007C  0021               	movlb	1	; select bank1
  2431     007D  00D8               	movwf	(main@precomputed_constant+2)^(0+128)
  2432     007E  0020               	movlb	0	; select bank0
  2433     007F  0821               	movf	?___flmul+1,w
  2434     0080  0021               	movlb	1	; select bank1
  2435     0081  00D7               	movwf	(main@precomputed_constant+1)^(0+128)
  2436     0082  0020               	movlb	0	; select bank0
  2437     0083  0820               	movf	?___flmul,w
  2438     0084  0021               	movlb	1	; select bank1
  2439     0085  00D6               	movwf	main@precomputed_constant^(0+128)
  2440     0086                     l3921:
  2441                           
  2442                           ;main.c: 222:     Lcd_Init();
  2443     0086  3195  2595  3180   	fcall	_Lcd_Init
  2444     0089                     l3923:
  2445                           
  2446                           ;main.c: 225:     _delay((unsigned long)((100)*(32000000/4000.0)));
  2447     0089  3005               	movlw	5
  2448     008A  0020               	movlb	0	; select bank0
  2449     008B  00E6               	movwf	??_main+1
  2450     008C  300F               	movlw	15
  2451     008D  00E5               	movwf	??_main
  2452     008E  30F1               	movlw	241
  2453     008F                     u5027:
  2454     008F  0B89               	decfsz	9,f
  2455     0090  288F               	goto	u5027
  2456     0091  0BE5               	decfsz	??_main,f
  2457     0092  288F               	goto	u5027
  2458     0093  0BE6               	decfsz	??_main+1,f
  2459     0094  288F               	goto	u5027
  2460                           
  2461                           ;main.c: 227:     Lcd_Clear();
  2462     0095  3193  23C2  3180   	fcall	_Lcd_Clear
  2463     0098                     l3925:
  2464                           
  2465                           ;main.c: 230:     {;main.c: 231:         LATCbits.LATC4 = 1;
  2466     0098  0022               	movlb	2	; select bank2
  2467     0099  160E               	bsf	14,4	;volatile
  2468     009A                     l3927:
  2469                           
  2470                           ;main.c: 234:         if (PORTCbits.RC6 != 1) {
  2471     009A  0020               	movlb	0	; select bank0
  2472     009B  1B0E               	btfsc	14,6	;volatile
  2473     009C  289E               	goto	u4951
  2474     009D  289F               	goto	u4950
  2475     009E                     u4951:
  2476     009E  28B8               	goto	l3935
  2477     009F                     u4950:
  2478     009F                     l3929:
  2479                           
  2480                           ;main.c: 235:             _delay((unsigned long)((50)*(32000000/4000.0)));
  2481     009F  3003               	movlw	3
  2482     00A0  0020               	movlb	0	; select bank0
  2483     00A1  00E6               	movwf	??_main+1
  2484     00A2  3008               	movlw	8
  2485     00A3  00E5               	movwf	??_main
  2486     00A4  3077               	movlw	119
  2487     00A5                     u5037:
  2488     00A5  0B89               	decfsz	9,f
  2489     00A6  28A5               	goto	u5037
  2490     00A7  0BE5               	decfsz	??_main,f
  2491     00A8  28A5               	goto	u5037
  2492     00A9  0BE6               	decfsz	??_main+1,f
  2493     00AA  28A5               	goto	u5037
  2494     00AB                     l3931:
  2495                           
  2496                           ;main.c: 236:             if (PORTCbits.RC6 != 1) {
  2497     00AB  0020               	movlb	0	; select bank0
  2498     00AC  1B0E               	btfsc	14,6	;volatile
  2499     00AD  28AF               	goto	u4961
  2500     00AE  28B0               	goto	u4960
  2501     00AF                     u4961:
  2502     00AF  28B8               	goto	l3935
  2503     00B0                     u4960:
  2504     00B0                     l3933:
  2505                           
  2506                           ;main.c: 237:                 calibrate();
  2507     00B0  318E  2631  3180   	fcall	_calibrate
  2508     00B3                     l88:	
  2509                           ;main.c: 238:                 while (PORTCbits.RC6 != 1);
  2510                           
  2511     00B3  0020               	movlb	0	; select bank0
  2512     00B4  1F0E               	btfss	14,6	;volatile
  2513     00B5  28B7               	goto	u4971
  2514     00B6  28B8               	goto	u4970
  2515     00B7                     u4971:
  2516     00B7  28B3               	goto	l88
  2517     00B8                     u4970:
  2518     00B8                     l3935:
  2519                           
  2520                           ;main.c: 243:         count_start = ReadTimer0WithOverflows();
  2521     00B8  3193  23F1  3180   	fcall	_ReadTimer0WithOverflows
  2522     00BB  0871               	movf	?_ReadTimer0WithOverflows+1,w
  2523     00BC  0021               	movlb	1	; select bank1
  2524     00BD  00E1               	movwf	(main@count_start+1)^(0+128)
  2525     00BE  0870               	movf	?_ReadTimer0WithOverflows,w
  2526     00BF  00E0               	movwf	main@count_start^(0+128)
  2527     00C0                     l3937:
  2528                           
  2529                           ;main.c: 244:         _delay((unsigned long)((1000)*(32000000/4000.0)));
  2530     00C0  3029               	movlw	41
  2531     00C1  0020               	movlb	0	; select bank0
  2532     00C2  00E6               	movwf	??_main+1
  2533     00C3  3096               	movlw	150
  2534     00C4  00E5               	movwf	??_main
  2535     00C5  307F               	movlw	127
  2536     00C6                     u5047:
  2537     00C6  0B89               	decfsz	9,f
  2538     00C7  28C6               	goto	u5047
  2539     00C8  0BE5               	decfsz	??_main,f
  2540     00C9  28C6               	goto	u5047
  2541     00CA  0BE6               	decfsz	??_main+1,f
  2542     00CB  28C6               	goto	u5047
  2543     00CC                     l3939:
  2544                           
  2545                           ;main.c: 245:         count_end = ReadTimer0WithOverflows();
  2546     00CC  3193  23F1  3180   	fcall	_ReadTimer0WithOverflows
  2547     00CF  0871               	movf	?_ReadTimer0WithOverflows+1,w
  2548     00D0  0021               	movlb	1	; select bank1
  2549     00D1  00E3               	movwf	(main@count_end+1)^(0+128)
  2550     00D2  0870               	movf	?_ReadTimer0WithOverflows,w
  2551     00D3  00E2               	movwf	main@count_end^(0+128)
  2552                           
  2553                           ;main.c: 248:         total_counts = (count_end >= count_start)
  2554     00D4  0861               	movf	(main@count_start+1)^(0+128),w
  2555     00D5  0263               	subwf	(main@count_end+1)^(0+128),w
  2556     00D6  1D03               	skipz
  2557     00D7  28DA               	goto	u4985
  2558     00D8  0860               	movf	main@count_start^(0+128),w
  2559     00D9  0262               	subwf	main@count_end^(0+128),w
  2560     00DA                     u4985:
  2561     00DA  1803               	skipnc
  2562     00DB  28DD               	goto	u4981
  2563     00DC  28DE               	goto	u4980
  2564     00DD                     u4981:
  2565     00DD  28F8               	goto	l3943
  2566     00DE                     u4980:
  2567     00DE                     l3941:
  2568     00DE  086C               	movf	_tmr0_overflows^(0+128),w	;volatile
  2569     00DF  0020               	movlb	0	; select bank0
  2570     00E0  00E6               	movwf	??_main+1
  2571     00E1  01E5               	clrf	??_main
  2572     00E2  0021               	movlb	1	; select bank1
  2573     00E3  0860               	movf	main@count_start^(0+128),w
  2574     00E4  0020               	movlb	0	; select bank0
  2575     00E5  0265               	subwf	??_main,w
  2576     00E6  00E7               	movwf	??_main+2
  2577     00E7  0021               	movlb	1	; select bank1
  2578     00E8  0861               	movf	(main@count_start+1)^(0+128),w
  2579     00E9  0020               	movlb	0	; select bank0
  2580     00EA  3B66               	subwfb	??_main+1,w
  2581     00EB  00E8               	movwf	??_main+3
  2582     00EC  0021               	movlb	1	; select bank1
  2583     00ED  0862               	movf	main@count_end^(0+128),w
  2584     00EE  0020               	movlb	0	; select bank0
  2585     00EF  0767               	addwf	??_main+2,w
  2586     00F0  0021               	movlb	1	; select bank1
  2587     00F1  00DE               	movwf	main@total_counts^(0+128)
  2588     00F2  0863               	movf	(main@count_end+1)^(0+128),w
  2589     00F3  0020               	movlb	0	; select bank0
  2590     00F4  3D68               	addwfc	??_main+3,w
  2591     00F5  0021               	movlb	1	; select bank1
  2592     00F6  00DF               	movwf	(main@total_counts+1)^(0+128)
  2593     00F7  28FE               	goto	l3945
  2594     00F8                     l3943:
  2595     00F8  0860               	movf	main@count_start^(0+128),w
  2596     00F9  0262               	subwf	main@count_end^(0+128),w
  2597     00FA  00DE               	movwf	main@total_counts^(0+128)
  2598     00FB  0861               	movf	(main@count_start+1)^(0+128),w
  2599     00FC  3B63               	subwfb	(main@count_end+1)^(0+128),w
  2600     00FD  00DF               	movwf	(main@total_counts+1)^(0+128)
  2601     00FE                     l3945:
  2602                           
  2603                           ;main.c: 251:         tmr0_overflows = 0;
  2604     00FE  01EC               	clrf	_tmr0_overflows^(0+128)	;volatile
  2605     00FF  01ED               	clrf	(_tmr0_overflows+1)^(0+128)	;volatile
  2606     0100                     l3947:
  2607                           
  2608                           ;main.c: 254:         frequency = ((float)total_counts * 16) / 1.0;
  2609     0100  303F               	movlw	63
  2610     0101  0020               	movlb	0	; select bank0
  2611     0102  00BD               	movwf	___fldiv@a+3
  2612     0103  3080               	movlw	128
  2613     0104  00BC               	movwf	___fldiv@a+2
  2614     0105  3000               	movlw	0
  2615     0106  00BB               	movwf	___fldiv@a+1
  2616     0107  3000               	movlw	0
  2617     0108  00BA               	movwf	___fldiv@a
  2618     0109  3041               	movlw	65
  2619     010A  00A3               	movwf	___flmul@b+3
  2620     010B  3080               	movlw	128
  2621     010C  00A2               	movwf	___flmul@b+2
  2622     010D  3000               	movlw	0
  2623     010E  00A1               	movwf	___flmul@b+1
  2624     010F  3000               	movlw	0
  2625     0110  00A0               	movwf	___flmul@b
  2626     0111  0021               	movlb	1	; select bank1
  2627     0112  085E               	movf	main@total_counts^(0+128),w
  2628     0113  00F0               	movwf	___xxtofl@val
  2629     0114  085F               	movf	(main@total_counts+1)^(0+128),w
  2630     0115  00F1               	movwf	___xxtofl@val+1
  2631     0116  01F2               	clrf	___xxtofl@val+2
  2632     0117  01F3               	clrf	___xxtofl@val+3
  2633     0118  3000               	movlw	0
  2634     0119  3189  210F  3180   	fcall	___xxtofl
  2635     011C  0873               	movf	?___xxtofl+3,w
  2636     011D  0020               	movlb	0	; select bank0
  2637     011E  00A7               	movwf	___flmul@a+3
  2638     011F  0872               	movf	?___xxtofl+2,w
  2639     0120  00A6               	movwf	___flmul@a+2
  2640     0121  0871               	movf	?___xxtofl+1,w
  2641     0122  00A5               	movwf	___flmul@a+1
  2642     0123  0870               	movf	?___xxtofl,w
  2643     0124  00A4               	movwf	___flmul@a
  2644     0125  3183  232B  3180   	fcall	___flmul
  2645     0128  0020               	movlb	0	; select bank0
  2646     0129  0823               	movf	?___flmul+3,w
  2647     012A  00C1               	movwf	___fldiv@b+3
  2648     012B  0822               	movf	?___flmul+2,w
  2649     012C  00C0               	movwf	___fldiv@b+2
  2650     012D  0821               	movf	?___flmul+1,w
  2651     012E  00BF               	movwf	___fldiv@b+1
  2652     012F  0820               	movf	?___flmul,w
  2653     0130  00BE               	movwf	___fldiv@b
  2654     0131  318C  2487  3180   	fcall	___fldiv
  2655     0134  0020               	movlb	0	; select bank0
  2656     0135  083D               	movf	?___fldiv+3,w
  2657     0136  0021               	movlb	1	; select bank1
  2658     0137  00E7               	movwf	(main@frequency+3)^(0+128)
  2659     0138  0020               	movlb	0	; select bank0
  2660     0139  083C               	movf	?___fldiv+2,w
  2661     013A  0021               	movlb	1	; select bank1
  2662     013B  00E6               	movwf	(main@frequency+2)^(0+128)
  2663     013C  0020               	movlb	0	; select bank0
  2664     013D  083B               	movf	?___fldiv+1,w
  2665     013E  0021               	movlb	1	; select bank1
  2666     013F  00E5               	movwf	(main@frequency+1)^(0+128)
  2667     0140  0020               	movlb	0	; select bank0
  2668     0141  083A               	movf	?___fldiv,w
  2669     0142  0021               	movlb	1	; select bank1
  2670     0143  00E4               	movwf	main@frequency^(0+128)
  2671     0144                     l3949:
  2672                           
  2673                           ;main.c: 256:         if (frequency > 0) {
  2674     0144  3000               	movlw	0
  2675     0145  00F3               	movwf	___flge@ff1+3
  2676     0146  3000               	movlw	0
  2677     0147  00F2               	movwf	___flge@ff1+2
  2678     0148  3000               	movlw	0
  2679     0149  00F1               	movwf	___flge@ff1+1
  2680     014A  3000               	movlw	0
  2681     014B  00F0               	movwf	___flge@ff1
  2682     014C  0867               	movf	(main@frequency+3)^(0+128),w
  2683     014D  00F7               	movwf	___flge@ff2+3
  2684     014E  0866               	movf	(main@frequency+2)^(0+128),w
  2685     014F  00F6               	movwf	___flge@ff2+2
  2686     0150  0865               	movf	(main@frequency+1)^(0+128),w
  2687     0151  00F5               	movwf	___flge@ff2+1
  2688     0152  0864               	movf	main@frequency^(0+128),w
  2689     0153  00F4               	movwf	___flge@ff2
  2690     0154  3187  2772  3180   	fcall	___flge
  2691     0157  1803               	btfsc	3,0
  2692     0158  295A               	goto	u4991
  2693     0159  295B               	goto	u4990
  2694     015A                     u4991:
  2695     015A  2B18               	goto	l3979
  2696     015B                     u4990:
  2697     015B                     l3951:
  2698                           
  2699                           ;main.c: 258:             if (frequency < 1000.0) {
  2700     015B  0021               	movlb	1	; select bank1
  2701     015C  0867               	movf	(main@frequency+3)^(0+128),w
  2702     015D  00F3               	movwf	___flge@ff1+3
  2703     015E  0866               	movf	(main@frequency+2)^(0+128),w
  2704     015F  00F2               	movwf	___flge@ff1+2
  2705     0160  0865               	movf	(main@frequency+1)^(0+128),w
  2706     0161  00F1               	movwf	___flge@ff1+1
  2707     0162  0864               	movf	main@frequency^(0+128),w
  2708     0163  00F0               	movwf	___flge@ff1
  2709     0164  3044               	movlw	68
  2710     0165  00F7               	movwf	___flge@ff2+3
  2711     0166  307A               	movlw	122
  2712     0167  00F6               	movwf	___flge@ff2+2
  2713     0168  3000               	movlw	0
  2714     0169  00F5               	movwf	___flge@ff2+1
  2715     016A  3000               	movlw	0
  2716     016B  00F4               	movwf	___flge@ff2
  2717     016C  3187  2772  3180   	fcall	___flge
  2718     016F  1803               	btfsc	3,0
  2719     0170  2972               	goto	u5001
  2720     0171  2973               	goto	u5000
  2721     0172                     u5001:
  2722     0172  2991               	goto	l3959
  2723     0173                     u5000:
  2724     0173                     l3953:
  2725                           
  2726                           ;main.c: 260:                 Lcd_Clear();
  2727     0173  3193  23C2  3180   	fcall	_Lcd_Clear
  2728                           
  2729                           ;main.c: 261:                 Lcd_Set_Cursor(1, 1);
  2730     0176  01F5               	clrf	Lcd_Set_Cursor@col
  2731     0177  0AF5               	incf	Lcd_Set_Cursor@col,f
  2732     0178  3001               	movlw	1
  2733     0179  3194  2465  3180   	fcall	_Lcd_Set_Cursor
  2734     017C                     l3955:
  2735                           
  2736                           ;main.c: 262:                 Lcd_Write_String("Err: Too Large");
  2737     017C  3043               	movlw	low (STR_4| (0+32768))
  2738     017D  00F4               	movwf	Lcd_Write_String@str
  2739     017E  3098               	movlw	high (STR_4| (0+32768))
  2740     017F  00F5               	movwf	Lcd_Write_String@str+1
  2741     0180  3194  2404  3180   	fcall	_Lcd_Write_String
  2742     0183                     l3957:
  2743                           
  2744                           ;main.c: 263:                 _delay((unsigned long)((2000)*(32000000/4000.0)));
  2745     0183  3052               	movlw	82
  2746     0184  0020               	movlb	0	; select bank0
  2747     0185  00E6               	movwf	??_main+1
  2748     0186  302B               	movlw	43
  2749     0187  00E5               	movwf	??_main
  2750     0188  3000               	movlw	0
  2751     0189                     u5057:
  2752     0189  0B89               	decfsz	9,f
  2753     018A  2989               	goto	u5057
  2754     018B  0BE5               	decfsz	??_main,f
  2755     018C  2989               	goto	u5057
  2756     018D  0BE6               	decfsz	??_main+1,f
  2757     018E  2989               	goto	u5057
  2758     018F  0000               	nop
  2759                           
  2760                           ;main.c: 264:                 continue;
  2761     0190  2898               	goto	l3925
  2762     0191                     l3959:
  2763                           
  2764                           ;main.c: 268:             inductance_h = 1.0 / (precomputed_constant * frequency * frequ
      +                          ency);
  2765     0191  0021               	movlb	1	; select bank1
  2766     0192  0867               	movf	(main@frequency+3)^(0+128),w
  2767     0193  0020               	movlb	0	; select bank0
  2768     0194  00A3               	movwf	___flmul@b+3
  2769     0195  0021               	movlb	1	; select bank1
  2770     0196  0866               	movf	(main@frequency+2)^(0+128),w
  2771     0197  0020               	movlb	0	; select bank0
  2772     0198  00A2               	movwf	___flmul@b+2
  2773     0199  0021               	movlb	1	; select bank1
  2774     019A  0865               	movf	(main@frequency+1)^(0+128),w
  2775     019B  0020               	movlb	0	; select bank0
  2776     019C  00A1               	movwf	___flmul@b+1
  2777     019D  0021               	movlb	1	; select bank1
  2778     019E  0864               	movf	main@frequency^(0+128),w
  2779     019F  0020               	movlb	0	; select bank0
  2780     01A0  00A0               	movwf	___flmul@b
  2781     01A1  0021               	movlb	1	; select bank1
  2782     01A2  0859               	movf	(main@precomputed_constant+3)^(0+128),w
  2783     01A3  0020               	movlb	0	; select bank0
  2784     01A4  00A7               	movwf	___flmul@a+3
  2785     01A5  0021               	movlb	1	; select bank1
  2786     01A6  0858               	movf	(main@precomputed_constant+2)^(0+128),w
  2787     01A7  0020               	movlb	0	; select bank0
  2788     01A8  00A6               	movwf	___flmul@a+2
  2789     01A9  0021               	movlb	1	; select bank1
  2790     01AA  0857               	movf	(main@precomputed_constant+1)^(0+128),w
  2791     01AB  0020               	movlb	0	; select bank0
  2792     01AC  00A5               	movwf	___flmul@a+1
  2793     01AD  0021               	movlb	1	; select bank1
  2794     01AE  0856               	movf	main@precomputed_constant^(0+128),w
  2795     01AF  0020               	movlb	0	; select bank0
  2796     01B0  00A4               	movwf	___flmul@a
  2797     01B1  3183  232B  3180   	fcall	___flmul
  2798     01B4  0020               	movlb	0	; select bank0
  2799     01B5  0823               	movf	?___flmul+3,w
  2800     01B6  0021               	movlb	1	; select bank1
  2801     01B7  00DD               	movwf	(_main$1328+3)^(0+128)
  2802     01B8  0020               	movlb	0	; select bank0
  2803     01B9  0822               	movf	?___flmul+2,w
  2804     01BA  0021               	movlb	1	; select bank1
  2805     01BB  00DC               	movwf	(_main$1328+2)^(0+128)
  2806     01BC  0020               	movlb	0	; select bank0
  2807     01BD  0821               	movf	?___flmul+1,w
  2808     01BE  0021               	movlb	1	; select bank1
  2809     01BF  00DB               	movwf	(_main$1328+1)^(0+128)
  2810     01C0  0020               	movlb	0	; select bank0
  2811     01C1  0820               	movf	?___flmul,w
  2812     01C2  0021               	movlb	1	; select bank1
  2813     01C3  00DA               	movwf	_main$1328^(0+128)
  2814                           
  2815                           ;main.c: 268:             inductance_h = 1.0 / (precomputed_constant * frequency * frequ
      +                          ency);
  2816     01C4  0867               	movf	(main@frequency+3)^(0+128),w
  2817     01C5  0020               	movlb	0	; select bank0
  2818     01C6  00A3               	movwf	___flmul@b+3
  2819     01C7  0021               	movlb	1	; select bank1
  2820     01C8  0866               	movf	(main@frequency+2)^(0+128),w
  2821     01C9  0020               	movlb	0	; select bank0
  2822     01CA  00A2               	movwf	___flmul@b+2
  2823     01CB  0021               	movlb	1	; select bank1
  2824     01CC  0865               	movf	(main@frequency+1)^(0+128),w
  2825     01CD  0020               	movlb	0	; select bank0
  2826     01CE  00A1               	movwf	___flmul@b+1
  2827     01CF  0021               	movlb	1	; select bank1
  2828     01D0  0864               	movf	main@frequency^(0+128),w
  2829     01D1  0020               	movlb	0	; select bank0
  2830     01D2  00A0               	movwf	___flmul@b
  2831     01D3  0021               	movlb	1	; select bank1
  2832     01D4  085D               	movf	(_main$1328+3)^(0+128),w
  2833     01D5  0020               	movlb	0	; select bank0
  2834     01D6  00A7               	movwf	___flmul@a+3
  2835     01D7  0021               	movlb	1	; select bank1
  2836     01D8  085C               	movf	(_main$1328+2)^(0+128),w
  2837     01D9  0020               	movlb	0	; select bank0
  2838     01DA  00A6               	movwf	___flmul@a+2
  2839     01DB  0021               	movlb	1	; select bank1
  2840     01DC  085B               	movf	(_main$1328+1)^(0+128),w
  2841     01DD  0020               	movlb	0	; select bank0
  2842     01DE  00A5               	movwf	___flmul@a+1
  2843     01DF  0021               	movlb	1	; select bank1
  2844     01E0  085A               	movf	_main$1328^(0+128),w
  2845     01E1  0020               	movlb	0	; select bank0
  2846     01E2  00A4               	movwf	___flmul@a
  2847     01E3  3183  232B  3180   	fcall	___flmul
  2848     01E6  0020               	movlb	0	; select bank0
  2849     01E7  0823               	movf	?___flmul+3,w
  2850     01E8  00BD               	movwf	___fldiv@a+3
  2851     01E9  0822               	movf	?___flmul+2,w
  2852     01EA  00BC               	movwf	___fldiv@a+2
  2853     01EB  0821               	movf	?___flmul+1,w
  2854     01EC  00BB               	movwf	___fldiv@a+1
  2855     01ED  0820               	movf	?___flmul,w
  2856     01EE  00BA               	movwf	___fldiv@a
  2857     01EF  303F               	movlw	63
  2858     01F0  00C1               	movwf	___fldiv@b+3
  2859     01F1  3080               	movlw	128
  2860     01F2  00C0               	movwf	___fldiv@b+2
  2861     01F3  3000               	movlw	0
  2862     01F4  00BF               	movwf	___fldiv@b+1
  2863     01F5  3000               	movlw	0
  2864     01F6  00BE               	movwf	___fldiv@b
  2865     01F7  318C  2487  3180   	fcall	___fldiv
  2866     01FA  0020               	movlb	0	; select bank0
  2867     01FB  083D               	movf	?___fldiv+3,w
  2868     01FC  0021               	movlb	1	; select bank1
  2869     01FD  00CD               	movwf	(main@inductance_h+3)^(0+128)
  2870     01FE  0020               	movlb	0	; select bank0
  2871     01FF  083C               	movf	?___fldiv+2,w
  2872     0200  0021               	movlb	1	; select bank1
  2873     0201  00CC               	movwf	(main@inductance_h+2)^(0+128)
  2874     0202  0020               	movlb	0	; select bank0
  2875     0203  083B               	movf	?___fldiv+1,w
  2876     0204  0021               	movlb	1	; select bank1
  2877     0205  00CB               	movwf	(main@inductance_h+1)^(0+128)
  2878     0206  0020               	movlb	0	; select bank0
  2879     0207  083A               	movf	?___fldiv,w
  2880     0208  0021               	movlb	1	; select bank1
  2881     0209  00CA               	movwf	main@inductance_h^(0+128)
  2882                           
  2883                           ;main.c: 271:             inductance_uh = inductance_h * 1e6;
  2884     020A  3049               	movlw	73
  2885     020B  0020               	movlb	0	; select bank0
  2886     020C  00A3               	movwf	___flmul@b+3
  2887     020D  3074               	movlw	116
  2888     020E  00A2               	movwf	___flmul@b+2
  2889     020F  3024               	movlw	36
  2890     0210  00A1               	movwf	___flmul@b+1
  2891     0211  3000               	movlw	0
  2892     0212  00A0               	movwf	___flmul@b
  2893     0213  0021               	movlb	1	; select bank1
  2894     0214  084D               	movf	(main@inductance_h+3)^(0+128),w
  2895     0215  0020               	movlb	0	; select bank0
  2896     0216  00A7               	movwf	___flmul@a+3
  2897     0217  0021               	movlb	1	; select bank1
  2898     0218  084C               	movf	(main@inductance_h+2)^(0+128),w
  2899     0219  0020               	movlb	0	; select bank0
  2900     021A  00A6               	movwf	___flmul@a+2
  2901     021B  0021               	movlb	1	; select bank1
  2902     021C  084B               	movf	(main@inductance_h+1)^(0+128),w
  2903     021D  0020               	movlb	0	; select bank0
  2904     021E  00A5               	movwf	___flmul@a+1
  2905     021F  0021               	movlb	1	; select bank1
  2906     0220  084A               	movf	main@inductance_h^(0+128),w
  2907     0221  0020               	movlb	0	; select bank0
  2908     0222  00A4               	movwf	___flmul@a
  2909     0223  3183  232B  3180   	fcall	___flmul
  2910     0226  0020               	movlb	0	; select bank0
  2911     0227  0823               	movf	?___flmul+3,w
  2912     0228  0021               	movlb	1	; select bank1
  2913     0229  00EB               	movwf	(main@inductance_uh+3)^(0+128)
  2914     022A  0020               	movlb	0	; select bank0
  2915     022B  0822               	movf	?___flmul+2,w
  2916     022C  0021               	movlb	1	; select bank1
  2917     022D  00EA               	movwf	(main@inductance_uh+2)^(0+128)
  2918     022E  0020               	movlb	0	; select bank0
  2919     022F  0821               	movf	?___flmul+1,w
  2920     0230  0021               	movlb	1	; select bank1
  2921     0231  00E9               	movwf	(main@inductance_uh+1)^(0+128)
  2922     0232  0020               	movlb	0	; select bank0
  2923     0233  0820               	movf	?___flmul,w
  2924     0234  0021               	movlb	1	; select bank1
  2925     0235  00E8               	movwf	main@inductance_uh^(0+128)
  2926                           
  2927                           ;main.c: 272:             inductance_uh = inductance_uh - calibration_value;
  2928     0236  086E               	movf	_calibration_value^(0+128),w
  2929     0237  0020               	movlb	0	; select bank0
  2930     0238  00E5               	movwf	??_main
  2931     0239  01E6               	clrf	??_main+1
  2932     023A  01E7               	clrf	??_main+2
  2933     023B  01E8               	clrf	??_main+3
  2934     023C  0868               	movf	??_main+3,w
  2935     023D  00F3               	movwf	___xxtofl@val+3
  2936     023E  0867               	movf	??_main+2,w
  2937     023F  00F2               	movwf	___xxtofl@val+2
  2938     0240  0866               	movf	??_main+1,w
  2939     0241  00F1               	movwf	___xxtofl@val+1
  2940     0242  0865               	movf	??_main,w
  2941     0243  00F0               	movwf	___xxtofl@val
  2942     0244  3001               	movlw	1
  2943     0245  3189  210F  3180   	fcall	___xxtofl
  2944     0248  0873               	movf	?___xxtofl+3,w
  2945     0249  0020               	movlb	0	; select bank0
  2946     024A  00AB               	movwf	___flsub@a+3
  2947     024B  0872               	movf	?___xxtofl+2,w
  2948     024C  00AA               	movwf	___flsub@a+2
  2949     024D  0871               	movf	?___xxtofl+1,w
  2950     024E  00A9               	movwf	___flsub@a+1
  2951     024F  0870               	movf	?___xxtofl,w
  2952     0250  00A8               	movwf	___flsub@a
  2953     0251  0021               	movlb	1	; select bank1
  2954     0252  086B               	movf	(main@inductance_uh+3)^(0+128),w
  2955     0253  0020               	movlb	0	; select bank0
  2956     0254  00AF               	movwf	___flsub@b+3
  2957     0255  0021               	movlb	1	; select bank1
  2958     0256  086A               	movf	(main@inductance_uh+2)^(0+128),w
  2959     0257  0020               	movlb	0	; select bank0
  2960     0258  00AE               	movwf	___flsub@b+2
  2961     0259  0021               	movlb	1	; select bank1
  2962     025A  0869               	movf	(main@inductance_uh+1)^(0+128),w
  2963     025B  0020               	movlb	0	; select bank0
  2964     025C  00AD               	movwf	___flsub@b+1
  2965     025D  0021               	movlb	1	; select bank1
  2966     025E  0868               	movf	main@inductance_uh^(0+128),w
  2967     025F  0020               	movlb	0	; select bank0
  2968     0260  00AC               	movwf	___flsub@b
  2969     0261  3194  24D9  3180   	fcall	___flsub
  2970     0264  0020               	movlb	0	; select bank0
  2971     0265  082B               	movf	?___flsub+3,w
  2972     0266  0021               	movlb	1	; select bank1
  2973     0267  00EB               	movwf	(main@inductance_uh+3)^(0+128)
  2974     0268  0020               	movlb	0	; select bank0
  2975     0269  082A               	movf	?___flsub+2,w
  2976     026A  0021               	movlb	1	; select bank1
  2977     026B  00EA               	movwf	(main@inductance_uh+2)^(0+128)
  2978     026C  0020               	movlb	0	; select bank0
  2979     026D  0829               	movf	?___flsub+1,w
  2980     026E  0021               	movlb	1	; select bank1
  2981     026F  00E9               	movwf	(main@inductance_uh+1)^(0+128)
  2982     0270  0020               	movlb	0	; select bank0
  2983     0271  0828               	movf	?___flsub,w
  2984     0272  0021               	movlb	1	; select bank1
  2985     0273  00E8               	movwf	main@inductance_uh^(0+128)
  2986                           
  2987                           ;main.c: 275:             if (inductance_uh > 999.0) {
  2988     0274  3044               	movlw	68
  2989     0275  00F3               	movwf	___flge@ff1+3
  2990     0276  3079               	movlw	121
  2991     0277  00F2               	movwf	___flge@ff1+2
  2992     0278  30C0               	movlw	192
  2993     0279  00F1               	movwf	___flge@ff1+1
  2994     027A  3000               	movlw	0
  2995     027B  00F0               	movwf	___flge@ff1
  2996     027C  086B               	movf	(main@inductance_uh+3)^(0+128),w
  2997     027D  00F7               	movwf	___flge@ff2+3
  2998     027E  086A               	movf	(main@inductance_uh+2)^(0+128),w
  2999     027F  00F6               	movwf	___flge@ff2+2
  3000     0280  0869               	movf	(main@inductance_uh+1)^(0+128),w
  3001     0281  00F5               	movwf	___flge@ff2+1
  3002     0282  0868               	movf	main@inductance_uh^(0+128),w
  3003     0283  00F4               	movwf	___flge@ff2
  3004     0284  3187  2772  3180   	fcall	___flge
  3005     0287  1803               	btfsc	3,0
  3006     0288  2A8A               	goto	u5011
  3007     0289  2A8B               	goto	u5010
  3008     028A                     u5011:
  3009     028A  2AE1               	goto	l3969
  3010     028B                     u5010:
  3011     028B                     l3961:
  3012                           
  3013                           ;main.c: 277:                 inductance_mh = inductance_uh / 1000.0;
  3014     028B  3044               	movlw	68
  3015     028C  0020               	movlb	0	; select bank0
  3016     028D  00BD               	movwf	___fldiv@a+3
  3017     028E  307A               	movlw	122
  3018     028F  00BC               	movwf	___fldiv@a+2
  3019     0290  3000               	movlw	0
  3020     0291  00BB               	movwf	___fldiv@a+1
  3021     0292  3000               	movlw	0
  3022     0293  00BA               	movwf	___fldiv@a
  3023     0294  0021               	movlb	1	; select bank1
  3024     0295  086B               	movf	(main@inductance_uh+3)^(0+128),w
  3025     0296  0020               	movlb	0	; select bank0
  3026     0297  00C1               	movwf	___fldiv@b+3
  3027     0298  0021               	movlb	1	; select bank1
  3028     0299  086A               	movf	(main@inductance_uh+2)^(0+128),w
  3029     029A  0020               	movlb	0	; select bank0
  3030     029B  00C0               	movwf	___fldiv@b+2
  3031     029C  0021               	movlb	1	; select bank1
  3032     029D  0869               	movf	(main@inductance_uh+1)^(0+128),w
  3033     029E  0020               	movlb	0	; select bank0
  3034     029F  00BF               	movwf	___fldiv@b+1
  3035     02A0  0021               	movlb	1	; select bank1
  3036     02A1  0868               	movf	main@inductance_uh^(0+128),w
  3037     02A2  0020               	movlb	0	; select bank0
  3038     02A3  00BE               	movwf	___fldiv@b
  3039     02A4  318C  2487  3180   	fcall	___fldiv
  3040     02A7  0020               	movlb	0	; select bank0
  3041     02A8  083D               	movf	?___fldiv+3,w
  3042     02A9  0021               	movlb	1	; select bank1
  3043     02AA  00D1               	movwf	(main@inductance_mh+3)^(0+128)
  3044     02AB  0020               	movlb	0	; select bank0
  3045     02AC  083C               	movf	?___fldiv+2,w
  3046     02AD  0021               	movlb	1	; select bank1
  3047     02AE  00D0               	movwf	(main@inductance_mh+2)^(0+128)
  3048     02AF  0020               	movlb	0	; select bank0
  3049     02B0  083B               	movf	?___fldiv+1,w
  3050     02B1  0021               	movlb	1	; select bank1
  3051     02B2  00CF               	movwf	(main@inductance_mh+1)^(0+128)
  3052     02B3  0020               	movlb	0	; select bank0
  3053     02B4  083A               	movf	?___fldiv,w
  3054     02B5  0021               	movlb	1	; select bank1
  3055     02B6  00CE               	movwf	main@inductance_mh^(0+128)
  3056                           
  3057                           ;main.c: 279:                 Lcd_Clear();
  3058     02B7  3193  23C2  3180   	fcall	_Lcd_Clear
  3059                           
  3060                           ;main.c: 280:                 Lcd_Set_Cursor(1, 1);
  3061     02BA  01F5               	clrf	Lcd_Set_Cursor@col
  3062     02BB  0AF5               	incf	Lcd_Set_Cursor@col,f
  3063     02BC  3001               	movlw	1
  3064     02BD  3194  2465  3180   	fcall	_Lcd_Set_Cursor
  3065     02C0                     l3963:
  3066                           
  3067                           ;main.c: 281:                 Lcd_Write_String("I (mH): ");
  3068     02C0  3074               	movlw	low (STR_5| (0+32768))
  3069     02C1  00F4               	movwf	Lcd_Write_String@str
  3070     02C2  3098               	movlw	high (STR_5| (0+32768))
  3071     02C3  00F5               	movwf	Lcd_Write_String@str+1
  3072     02C4  3194  2404  3180   	fcall	_Lcd_Write_String
  3073     02C7                     l3965:
  3074                           
  3075                           ;main.c: 282:                 Lcd_Set_Cursor(1, 9);
  3076     02C7  3009               	movlw	9
  3077     02C8  00F5               	movwf	Lcd_Set_Cursor@col
  3078     02C9  3001               	movlw	1
  3079     02CA  3194  2465  3180   	fcall	_Lcd_Set_Cursor
  3080     02CD                     l3967:
  3081                           
  3082                           ;main.c: 283:                 Lcd_Write_Float(inductance_mh);
  3083     02CD  0021               	movlb	1	; select bank1
  3084     02CE  0851               	movf	(main@inductance_mh+3)^(0+128),w
  3085     02CF  0020               	movlb	0	; select bank0
  3086     02D0  00DC               	movwf	Lcd_Write_Float@f+3
  3087     02D1  0021               	movlb	1	; select bank1
  3088     02D2  0850               	movf	(main@inductance_mh+2)^(0+128),w
  3089     02D3  0020               	movlb	0	; select bank0
  3090     02D4  00DB               	movwf	Lcd_Write_Float@f+2
  3091     02D5  0021               	movlb	1	; select bank1
  3092     02D6  084F               	movf	(main@inductance_mh+1)^(0+128),w
  3093     02D7  0020               	movlb	0	; select bank0
  3094     02D8  00DA               	movwf	Lcd_Write_Float@f+1
  3095     02D9  0021               	movlb	1	; select bank1
  3096     02DA  084E               	movf	main@inductance_mh^(0+128),w
  3097     02DB  0020               	movlb	0	; select bank0
  3098     02DC  00D9               	movwf	Lcd_Write_Float@f
  3099     02DD  3194  241B  3180   	fcall	_Lcd_Write_Float
  3100                           
  3101                           ;main.c: 294:             } else {
  3102     02E0  2898               	goto	l3925
  3103     02E1                     l3969:
  3104                           
  3105                           ;main.c: 295:                 Lcd_Clear();
  3106     02E1  3193  23C2  3180   	fcall	_Lcd_Clear
  3107                           
  3108                           ;main.c: 296:                 Lcd_Set_Cursor(1, 1);
  3109     02E4  01F5               	clrf	Lcd_Set_Cursor@col
  3110     02E5  0AF5               	incf	Lcd_Set_Cursor@col,f
  3111     02E6  3001               	movlw	1
  3112     02E7  3194  2465  3180   	fcall	_Lcd_Set_Cursor
  3113     02EA                     l3971:
  3114                           
  3115                           ;main.c: 297:                 Lcd_Write_String("I (uH): ");
  3116     02EA  307D               	movlw	low (STR_6| (0+32768))
  3117     02EB  00F4               	movwf	Lcd_Write_String@str
  3118     02EC  3098               	movlw	high (STR_6| (0+32768))
  3119     02ED  00F5               	movwf	Lcd_Write_String@str+1
  3120     02EE  3194  2404  3180   	fcall	_Lcd_Write_String
  3121     02F1                     l3973:
  3122                           
  3123                           ;main.c: 298:                 Lcd_Set_Cursor(1, 9);
  3124     02F1  3009               	movlw	9
  3125     02F2  00F5               	movwf	Lcd_Set_Cursor@col
  3126     02F3  3001               	movlw	1
  3127     02F4  3194  2465  3180   	fcall	_Lcd_Set_Cursor
  3128     02F7                     l3975:
  3129                           
  3130                           ;main.c: 299:                 Lcd_Write_Float(inductance_uh);
  3131     02F7  0021               	movlb	1	; select bank1
  3132     02F8  086B               	movf	(main@inductance_uh+3)^(0+128),w
  3133     02F9  0020               	movlb	0	; select bank0
  3134     02FA  00DC               	movwf	Lcd_Write_Float@f+3
  3135     02FB  0021               	movlb	1	; select bank1
  3136     02FC  086A               	movf	(main@inductance_uh+2)^(0+128),w
  3137     02FD  0020               	movlb	0	; select bank0
  3138     02FE  00DB               	movwf	Lcd_Write_Float@f+2
  3139     02FF  0021               	movlb	1	; select bank1
  3140     0300  0869               	movf	(main@inductance_uh+1)^(0+128),w
  3141     0301  0020               	movlb	0	; select bank0
  3142     0302  00DA               	movwf	Lcd_Write_Float@f+1
  3143     0303  0021               	movlb	1	; select bank1
  3144     0304  0868               	movf	main@inductance_uh^(0+128),w
  3145     0305  0020               	movlb	0	; select bank0
  3146     0306  00D9               	movwf	Lcd_Write_Float@f
  3147     0307  3194  241B  3180   	fcall	_Lcd_Write_Float
  3148     030A                     l3977:
  3149                           
  3150                           ;main.c: 300:                 _delay((unsigned long)((500)*(32000000/4000.0)));
  3151     030A  3015               	movlw	21
  3152     030B  0020               	movlb	0	; select bank0
  3153     030C  00E6               	movwf	??_main+1
  3154     030D  304B               	movlw	75
  3155     030E  00E5               	movwf	??_main
  3156     030F  30BE               	movlw	190
  3157     0310                     u5067:
  3158     0310  0B89               	decfsz	9,f
  3159     0311  2B10               	goto	u5067
  3160     0312  0BE5               	decfsz	??_main,f
  3161     0313  2B10               	goto	u5067
  3162     0314  0BE6               	decfsz	??_main+1,f
  3163     0315  2B10               	goto	u5067
  3164     0316  0000               	nop
  3165     0317  2898               	goto	l3925
  3166     0318                     l3979:
  3167                           
  3168                           ;main.c: 311:               Lcd_Clear();
  3169     0318  3193  23C2  3180   	fcall	_Lcd_Clear
  3170                           
  3171                           ;main.c: 312:               Lcd_Set_Cursor(1, 1);
  3172     031B  01F5               	clrf	Lcd_Set_Cursor@col
  3173     031C  0AF5               	incf	Lcd_Set_Cursor@col,f
  3174     031D  3001               	movlw	1
  3175     031E  3194  2465  3180   	fcall	_Lcd_Set_Cursor
  3176     0321                     l3981:
  3177                           
  3178                           ;main.c: 314:             Lcd_Write_String("Err: Range");
  3179     0321  3060               	movlw	low (STR_7| (0+32768))
  3180     0322  00F4               	movwf	Lcd_Write_String@str
  3181     0323  3098               	movlw	high (STR_7| (0+32768))
  3182     0324  00F5               	movwf	Lcd_Write_String@str+1
  3183     0325  3194  2404  3180   	fcall	_Lcd_Write_String
  3184     0328  2898               	goto	l3925
  3185     0329  3180  281A         	ljmp	start
  3186     032B                     __end_of_main:
  3187                           
  3188                           	psect	text1
  3189     160F                     __ptext1:	
  3190 ;; *************** function _initMain *****************
  3191 ;; Defined at:
  3192 ;;		line 61 in file "main.c"
  3193 ;; Parameters:    Size  Location     Type
  3194 ;;		None
  3195 ;; Auto vars:     Size  Location     Type
  3196 ;;		None
  3197 ;; Return value:  Size  Location     Type
  3198 ;;                  1    wreg      void 
  3199 ;; Registers used:
  3200 ;;		wreg, status,2, status,0, pclath, cstack
  3201 ;; Tracked objects:
  3202 ;;		On entry : 0/0
  3203 ;;		On exit  : 0/0
  3204 ;;		Unchanged: 0/0
  3205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3208 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3209 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3210 ;;Total ram usage:        1 bytes
  3211 ;; Hardware stack levels used: 1
  3212 ;; Hardware stack levels required when called: 2
  3213 ;; This function calls:
  3214 ;;		_internal_32
  3215 ;; This function is called by:
  3216 ;;		_main
  3217 ;; This function uses a non-reentrant model
  3218 ;;
  3219                           
  3220     160F                     _initMain:	
  3221                           ;psect for function _initMain
  3222                           
  3223     160F                     l3443:	
  3224                           ;incstack = 0
  3225                           ; Regs used in _initMain: [wreg+status,2+status,0+pclath+cstack]
  3226                           
  3227                           
  3228                           ;main.c: 64:     internal_32();
  3229     160F  3193  23A3  3196   	fcall	_internal_32
  3230     1612                     l3445:
  3231                           
  3232                           ;main.c: 67:     _delay((unsigned long)((10)*(32000000/4000.0)));
  3233     1612  3068               	movlw	104
  3234     1613  00F0               	movwf	??_initMain
  3235     1614  30E4               	movlw	228
  3236     1615                     u5077:
  3237     1615  0B89               	decfsz	9,f
  3238     1616  2E15               	goto	u5077
  3239     1617  0BF0               	decfsz	??_initMain,f
  3240     1618  2E15               	goto	u5077
  3241     1619  3200               	nop2
  3242     161A                     l3447:
  3243                           
  3244                           ;main.c: 72:     PPSLOCK = 0x55;
  3245     161A  3055               	movlw	85
  3246     161B  003C               	movlb	28	; select bank28
  3247     161C  008F               	movwf	15	;volsfr
  3248     161D                     l3449:
  3249                           
  3250                           ;main.c: 73:     PPSLOCK = 0xAA;
  3251     161D  30AA               	movlw	170
  3252     161E  008F               	movwf	15	;volsfr
  3253     161F                     l3451:
  3254                           
  3255                           ;main.c: 74:     PPSLOCKbits.PPSLOCKED = 0x00;
  3256     161F  100F               	bcf	15,0	;volsfr
  3257     1620                     l3453:
  3258                           
  3259                           ;main.c: 76:     T0CKIPPSbits.T0CKIPPS = 0x08;
  3260     1620  0811               	movf	17,w	;volatile
  3261     1621  39E0               	andlw	-32
  3262     1622  3808               	iorlw	8
  3263     1623  0091               	movwf	17	;volatile
  3264     1624                     l3455:
  3265                           
  3266                           ;main.c: 78:     PPSLOCK = 0x55;
  3267     1624  3055               	movlw	85
  3268     1625  008F               	movwf	15	;volsfr
  3269     1626                     l3457:
  3270                           
  3271                           ;main.c: 79:     PPSLOCK = 0xAA;
  3272     1626  30AA               	movlw	170
  3273     1627  008F               	movwf	15	;volsfr
  3274     1628                     l3459:
  3275                           
  3276                           ;main.c: 80:     PPSLOCKbits.PPSLOCKED = 0x01;
  3277     1628  140F               	bsf	15,0	;volsfr
  3278     1629                     l3461:
  3279                           
  3280                           ;main.c: 83:     TRISCbits.TRISC4 = 0;
  3281     1629  0021               	movlb	1	; select bank1
  3282     162A  120E               	bcf	14,4	;volatile
  3283     162B                     l3463:
  3284                           
  3285                           ;main.c: 84:     ANSELCbits.ANSC4 = 0;
  3286     162B  0023               	movlb	3	; select bank3
  3287     162C  120E               	bcf	14,4	;volatile
  3288     162D                     l3465:
  3289                           
  3290                           ;main.c: 86:     TRISCbits.TRISC6 = 1;
  3291     162D  0021               	movlb	1	; select bank1
  3292     162E  170E               	bsf	14,6	;volatile
  3293     162F                     l3467:
  3294                           
  3295                           ;main.c: 87:     ANSELCbits.ANSC6 = 0;
  3296     162F  0023               	movlb	3	; select bank3
  3297     1630  130E               	bcf	14,6	;volatile
  3298     1631                     l3469:
  3299                           
  3300                           ;main.c: 90:     TRISBbits.TRISB0 = 1;
  3301     1631  0021               	movlb	1	; select bank1
  3302     1632  140D               	bsf	13,0	;volatile
  3303     1633                     l3471:
  3304                           
  3305                           ;main.c: 91:     ANSELBbits.ANSB0 = 0;
  3306     1633  0023               	movlb	3	; select bank3
  3307     1634  100D               	bcf	13,0	;volatile
  3308     1635                     l3473:
  3309                           
  3310                           ;main.c: 94:     OPTION_REGbits.TMR0CS = 1;
  3311     1635  0021               	movlb	1	; select bank1
  3312     1636  1695               	bsf	21,5	;volatile
  3313     1637                     l3475:
  3314                           
  3315                           ;main.c: 95:     OPTION_REGbits.PSA = 0;
  3316     1637  1195               	bcf	21,3	;volatile
  3317     1638                     l3477:
  3318                           
  3319                           ;main.c: 96:     OPTION_REGbits.PS = 0b011;
  3320     1638  0815               	movf	21,w	;volatile
  3321     1639  39F8               	andlw	-8
  3322     163A  3803               	iorlw	3
  3323     163B  0095               	movwf	21	;volatile
  3324     163C                     l3479:
  3325                           
  3326                           ;main.c: 97:     TMR0 = 0;
  3327     163C  0020               	movlb	0	; select bank0
  3328     163D  0195               	clrf	21	;volatile
  3329     163E                     l3481:
  3330                           
  3331                           ;main.c: 100:     INTCONbits.TMR0IE = 1;
  3332     163E  168B               	bsf	11,5	;volatile
  3333     163F                     l3483:
  3334                           
  3335                           ;main.c: 101:     INTCONbits.TMR0IF = 0;
  3336     163F  110B               	bcf	11,2	;volatile
  3337     1640                     l3485:
  3338                           
  3339                           ;main.c: 104:     T1CON = 0b00110001;
  3340     1640  3031               	movlw	49
  3341     1641  0098               	movwf	24	;volatile
  3342     1642                     l3487:
  3343                           
  3344                           ;main.c: 105:     TMR1 = 0;
  3345     1642  0196               	clrf	22	;volatile
  3346     1643  0197               	clrf	23	;volatile
  3347     1644                     l3489:
  3348                           
  3349                           ;main.c: 106:     PIE1bits.TMR1IE = 1;
  3350     1644  0021               	movlb	1	; select bank1
  3351     1645  1411               	bsf	17,0	;volatile
  3352     1646                     l3491:
  3353                           
  3354                           ;main.c: 107:     INTCONbits.PEIE = 1;
  3355     1646  170B               	bsf	11,6	;volatile
  3356     1647                     l3493:
  3357                           
  3358                           ;main.c: 110:     INTCONbits.GIE = 1;
  3359     1647  178B               	bsf	11,7	;volatile
  3360     1648                     l3495:
  3361                           
  3362                           ;main.c: 114:     TRISD = 0x00;
  3363     1648  018F               	clrf	15	;volatile
  3364     1649                     l3497:
  3365                           
  3366                           ;main.c: 115:     ANSELD = 0x00;
  3367     1649  0023               	movlb	3	; select bank3
  3368     164A  018F               	clrf	15	;volatile
  3369     164B                     l3499:
  3370                           
  3371                           ;main.c: 116:     PORTD = 0x00;
  3372     164B  0020               	movlb	0	; select bank0
  3373     164C  018F               	clrf	15	;volatile
  3374     164D                     l61:
  3375     164D  0008               	return
  3376     164E                     __end_of_initMain:
  3377                           
  3378                           	psect	text2
  3379     13A3                     __ptext2:	
  3380 ;; *************** function _internal_32 *****************
  3381 ;; Defined at:
  3382 ;;		line 32 in file "PIC16F1719_Internal.c"
  3383 ;; Parameters:    Size  Location     Type
  3384 ;;		None
  3385 ;; Auto vars:     Size  Location     Type
  3386 ;;		None
  3387 ;; Return value:  Size  Location     Type
  3388 ;;                  1    wreg      void 
  3389 ;; Registers used:
  3390 ;;		None
  3391 ;; Tracked objects:
  3392 ;;		On entry : 0/0
  3393 ;;		On exit  : 0/0
  3394 ;;		Unchanged: 0/0
  3395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3400 ;;Total ram usage:        0 bytes
  3401 ;; Hardware stack levels used: 1
  3402 ;; Hardware stack levels required when called: 1
  3403 ;; This function calls:
  3404 ;;		Nothing
  3405 ;; This function is called by:
  3406 ;;		_initMain
  3407 ;; This function uses a non-reentrant model
  3408 ;;
  3409                           
  3410     13A3                     _internal_32:	
  3411                           ;psect for function _internal_32
  3412                           
  3413     13A3                     l3241:	
  3414                           ;incstack = 0
  3415                           ; Regs used in _internal_32: []
  3416                           
  3417                           
  3418                           ;PIC16F1719_Internal.c: 34:     SCS0 = 0;
  3419     13A3  0021               	movlb	1	; select bank1
  3420     13A4  1019               	bcf	25,0	;volatile
  3421                           
  3422                           ;PIC16F1719_Internal.c: 35:     SCS1 = 0;
  3423     13A5  1099               	bcf	25,1	;volatile
  3424                           
  3425                           ;PIC16F1719_Internal.c: 38:     IRCF0 = 0;
  3426     13A6  1199               	bcf	25,3	;volatile
  3427                           
  3428                           ;PIC16F1719_Internal.c: 39:     IRCF1 = 1;
  3429     13A7  1619               	bsf	25,4	;volatile
  3430                           
  3431                           ;PIC16F1719_Internal.c: 40:     IRCF2 = 1;
  3432     13A8  1699               	bsf	25,5	;volatile
  3433                           
  3434                           ;PIC16F1719_Internal.c: 41:     IRCF3 = 1;
  3435     13A9  1719               	bsf	25,6	;volatile
  3436                           
  3437                           ;PIC16F1719_Internal.c: 44:     SPLLEN = 1;
  3438     13AA  1799               	bsf	25,7	;volatile
  3439     13AB                     l321:
  3440     13AB  0008               	return
  3441     13AC                     __end_of_internal_32:
  3442                           
  3443                           	psect	text3
  3444     0E31                     __ptext3:	
  3445 ;; *************** function _calibrate *****************
  3446 ;; Defined at:
  3447 ;;		line 165 in file "main.c"
  3448 ;; Parameters:    Size  Location     Type
  3449 ;;		None
  3450 ;; Auto vars:     Size  Location     Type
  3451 ;;  inductance_h    4   24[BANK1 ] float 
  3452 ;;  precomputed_    4   20[BANK1 ] float 
  3453 ;;  capacitance     4   16[BANK1 ] float 
  3454 ;;  frequency       4   34[BANK1 ] float 
  3455 ;;  count_end       2   40[BANK1 ] unsigned short 
  3456 ;;  count_start     2   38[BANK1 ] unsigned short 
  3457 ;;  total_counts    2   32[BANK1 ] unsigned short 
  3458 ;; Return value:  Size  Location     Type
  3459 ;;                  1    wreg      void 
  3460 ;; Registers used:
  3461 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3462 ;; Tracked objects:
  3463 ;;		On entry : 0/0
  3464 ;;		On exit  : 0/0
  3465 ;;		Unchanged: 0/0
  3466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3468 ;;      Locals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3469 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3470 ;;      Totals:         0       4      26       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3471 ;;Total ram usage:       30 bytes
  3472 ;; Hardware stack levels used: 1
  3473 ;; Hardware stack levels required when called: 10
  3474 ;; This function calls:
  3475 ;;		_Lcd_Clear
  3476 ;;		_Lcd_Set_Cursor
  3477 ;;		_Lcd_Write_Padded_Integer
  3478 ;;		_Lcd_Write_String
  3479 ;;		_ReadTimer0WithOverflows
  3480 ;;		___fldiv
  3481 ;;		___flge
  3482 ;;		___flmul
  3483 ;;		___fltol
  3484 ;;		___xxtofl
  3485 ;; This function is called by:
  3486 ;;		_main
  3487 ;; This function uses a non-reentrant model
  3488 ;;
  3489                           
  3490     0E31                     _calibrate:	
  3491                           ;psect for function _calibrate
  3492                           
  3493     0E31                     l3501:	
  3494                           ;incstack = 0
  3495                           ; Regs used in _calibrate: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3496                           
  3497                           
  3498                           ;main.c: 166:     Lcd_Clear();
  3499     0E31  3193  23C2  318E   	fcall	_Lcd_Clear
  3500                           
  3501                           ;main.c: 167:     Lcd_Set_Cursor(1, 1);
  3502     0E34  01F5               	clrf	Lcd_Set_Cursor@col
  3503     0E35  0AF5               	incf	Lcd_Set_Cursor@col,f
  3504     0E36  3001               	movlw	1
  3505     0E37  3194  2465  318E   	fcall	_Lcd_Set_Cursor
  3506     0E3A                     l3503:
  3507                           
  3508                           ;main.c: 168:     Lcd_Write_String("Calibrating...");
  3509     0E3A  3034               	movlw	low (STR_1| (0+32768))
  3510     0E3B  00F4               	movwf	Lcd_Write_String@str
  3511     0E3C  3098               	movlw	high (STR_1| (0+32768))
  3512     0E3D  00F5               	movwf	Lcd_Write_String@str+1
  3513     0E3E  3194  2404  318E   	fcall	_Lcd_Write_String
  3514     0E41                     l3505:
  3515                           
  3516                           ;main.c: 169:     _delay((unsigned long)((1500)*(32000000/4000.0)));
  3517     0E41  303D               	movlw	61
  3518     0E42  0020               	movlb	0	; select bank0
  3519     0E43  00E2               	movwf	??_calibrate+1
  3520     0E44  30E1               	movlw	225
  3521     0E45  00E1               	movwf	??_calibrate
  3522     0E46  303F               	movlw	63
  3523     0E47                     u5087:
  3524     0E47  0B89               	decfsz	9,f
  3525     0E48  2E47               	goto	u5087
  3526     0E49  0BE1               	decfsz	??_calibrate,f
  3527     0E4A  2E47               	goto	u5087
  3528     0E4B  0BE2               	decfsz	??_calibrate+1,f
  3529     0E4C  2E47               	goto	u5087
  3530     0E4D  3200               	nop2
  3531     0E4E                     l3507:
  3532                           
  3533                           ;main.c: 172:     uint16_t count_start = ReadTimer0WithOverflows();
  3534     0E4E  3193  23F1  318E   	fcall	_ReadTimer0WithOverflows
  3535     0E51  0871               	movf	?_ReadTimer0WithOverflows+1,w
  3536     0E52  0021               	movlb	1	; select bank1
  3537     0E53  00C7               	movwf	(calibrate@count_start+1)^(0+128)
  3538     0E54  0870               	movf	?_ReadTimer0WithOverflows,w
  3539     0E55  00C6               	movwf	calibrate@count_start^(0+128)
  3540     0E56                     l3509:
  3541                           
  3542                           ;main.c: 173:     _delay((unsigned long)((1000)*(32000000/4000.0)));
  3543     0E56  3029               	movlw	41
  3544     0E57  0020               	movlb	0	; select bank0
  3545     0E58  00E2               	movwf	??_calibrate+1
  3546     0E59  3096               	movlw	150
  3547     0E5A  00E1               	movwf	??_calibrate
  3548     0E5B  307F               	movlw	127
  3549     0E5C                     u5097:
  3550     0E5C  0B89               	decfsz	9,f
  3551     0E5D  2E5C               	goto	u5097
  3552     0E5E  0BE1               	decfsz	??_calibrate,f
  3553     0E5F  2E5C               	goto	u5097
  3554     0E60  0BE2               	decfsz	??_calibrate+1,f
  3555     0E61  2E5C               	goto	u5097
  3556     0E62                     l3511:
  3557                           
  3558                           ;main.c: 174:     uint16_t count_end = ReadTimer0WithOverflows();
  3559     0E62  3193  23F1  318E   	fcall	_ReadTimer0WithOverflows
  3560     0E65  0871               	movf	?_ReadTimer0WithOverflows+1,w
  3561     0E66  0021               	movlb	1	; select bank1
  3562     0E67  00C9               	movwf	(calibrate@count_end+1)^(0+128)
  3563     0E68  0870               	movf	?_ReadTimer0WithOverflows,w
  3564     0E69  00C8               	movwf	calibrate@count_end^(0+128)
  3565     0E6A                     l3513:
  3566                           
  3567                           ;main.c: 176:     uint16_t total_counts = (count_end >= count_start)
  3568     0E6A  0847               	movf	(calibrate@count_start+1)^(0+128),w
  3569     0E6B  0249               	subwf	(calibrate@count_end+1)^(0+128),w
  3570     0E6C  1D03               	skipz
  3571     0E6D  2E70               	goto	u4495
  3572     0E6E  0846               	movf	calibrate@count_start^(0+128),w
  3573     0E6F  0248               	subwf	calibrate@count_end^(0+128),w
  3574     0E70                     u4495:
  3575     0E70  1803               	skipnc
  3576     0E71  2E73               	goto	u4491
  3577     0E72  2E74               	goto	u4490
  3578     0E73                     u4491:
  3579     0E73  2E8E               	goto	l3517
  3580     0E74                     u4490:
  3581     0E74                     l3515:
  3582     0E74  086C               	movf	_tmr0_overflows^(0+128),w	;volatile
  3583     0E75  0020               	movlb	0	; select bank0
  3584     0E76  00E2               	movwf	??_calibrate+1
  3585     0E77  01E1               	clrf	??_calibrate
  3586     0E78  0021               	movlb	1	; select bank1
  3587     0E79  0846               	movf	calibrate@count_start^(0+128),w
  3588     0E7A  0020               	movlb	0	; select bank0
  3589     0E7B  0261               	subwf	??_calibrate,w
  3590     0E7C  00E3               	movwf	??_calibrate+2
  3591     0E7D  0021               	movlb	1	; select bank1
  3592     0E7E  0847               	movf	(calibrate@count_start+1)^(0+128),w
  3593     0E7F  0020               	movlb	0	; select bank0
  3594     0E80  3B62               	subwfb	??_calibrate+1,w
  3595     0E81  00E4               	movwf	??_calibrate+3
  3596     0E82  0021               	movlb	1	; select bank1
  3597     0E83  0848               	movf	calibrate@count_end^(0+128),w
  3598     0E84  0020               	movlb	0	; select bank0
  3599     0E85  0763               	addwf	??_calibrate+2,w
  3600     0E86  0021               	movlb	1	; select bank1
  3601     0E87  00C0               	movwf	calibrate@total_counts^(0+128)
  3602     0E88  0849               	movf	(calibrate@count_end+1)^(0+128),w
  3603     0E89  0020               	movlb	0	; select bank0
  3604     0E8A  3D64               	addwfc	??_calibrate+3,w
  3605     0E8B  0021               	movlb	1	; select bank1
  3606     0E8C  00C1               	movwf	(calibrate@total_counts+1)^(0+128)
  3607     0E8D  2E94               	goto	l3519
  3608     0E8E                     l3517:
  3609     0E8E  0846               	movf	calibrate@count_start^(0+128),w
  3610     0E8F  0248               	subwf	calibrate@count_end^(0+128),w
  3611     0E90  00C0               	movwf	calibrate@total_counts^(0+128)
  3612     0E91  0847               	movf	(calibrate@count_start+1)^(0+128),w
  3613     0E92  3B49               	subwfb	(calibrate@count_end+1)^(0+128),w
  3614     0E93  00C1               	movwf	(calibrate@total_counts+1)^(0+128)
  3615     0E94                     l3519:
  3616                           
  3617                           ;main.c: 179:     tmr0_overflows = 0;
  3618     0E94  01EC               	clrf	_tmr0_overflows^(0+128)	;volatile
  3619     0E95  01ED               	clrf	(_tmr0_overflows+1)^(0+128)	;volatile
  3620     0E96                     l3521:
  3621                           
  3622                           ;main.c: 181:     float frequency = ((float)total_counts * 16) / 1.0;
  3623     0E96  303F               	movlw	63
  3624     0E97  0020               	movlb	0	; select bank0
  3625     0E98  00BD               	movwf	___fldiv@a+3
  3626     0E99  3080               	movlw	128
  3627     0E9A  00BC               	movwf	___fldiv@a+2
  3628     0E9B  3000               	movlw	0
  3629     0E9C  00BB               	movwf	___fldiv@a+1
  3630     0E9D  3000               	movlw	0
  3631     0E9E  00BA               	movwf	___fldiv@a
  3632     0E9F  3041               	movlw	65
  3633     0EA0  00A3               	movwf	___flmul@b+3
  3634     0EA1  3080               	movlw	128
  3635     0EA2  00A2               	movwf	___flmul@b+2
  3636     0EA3  3000               	movlw	0
  3637     0EA4  00A1               	movwf	___flmul@b+1
  3638     0EA5  3000               	movlw	0
  3639     0EA6  00A0               	movwf	___flmul@b
  3640     0EA7  0021               	movlb	1	; select bank1
  3641     0EA8  0840               	movf	calibrate@total_counts^(0+128),w
  3642     0EA9  00F0               	movwf	___xxtofl@val
  3643     0EAA  0841               	movf	(calibrate@total_counts+1)^(0+128),w
  3644     0EAB  00F1               	movwf	___xxtofl@val+1
  3645     0EAC  01F2               	clrf	___xxtofl@val+2
  3646     0EAD  01F3               	clrf	___xxtofl@val+3
  3647     0EAE  3000               	movlw	0
  3648     0EAF  3189  210F  318E   	fcall	___xxtofl
  3649     0EB2  0873               	movf	?___xxtofl+3,w
  3650     0EB3  0020               	movlb	0	; select bank0
  3651     0EB4  00A7               	movwf	___flmul@a+3
  3652     0EB5  0872               	movf	?___xxtofl+2,w
  3653     0EB6  00A6               	movwf	___flmul@a+2
  3654     0EB7  0871               	movf	?___xxtofl+1,w
  3655     0EB8  00A5               	movwf	___flmul@a+1
  3656     0EB9  0870               	movf	?___xxtofl,w
  3657     0EBA  00A4               	movwf	___flmul@a
  3658     0EBB  3183  232B  318E   	fcall	___flmul
  3659     0EBE  0020               	movlb	0	; select bank0
  3660     0EBF  0823               	movf	?___flmul+3,w
  3661     0EC0  00C1               	movwf	___fldiv@b+3
  3662     0EC1  0822               	movf	?___flmul+2,w
  3663     0EC2  00C0               	movwf	___fldiv@b+2
  3664     0EC3  0821               	movf	?___flmul+1,w
  3665     0EC4  00BF               	movwf	___fldiv@b+1
  3666     0EC5  0820               	movf	?___flmul,w
  3667     0EC6  00BE               	movwf	___fldiv@b
  3668     0EC7  318C  2487  318E   	fcall	___fldiv
  3669     0ECA  0020               	movlb	0	; select bank0
  3670     0ECB  083D               	movf	?___fldiv+3,w
  3671     0ECC  0021               	movlb	1	; select bank1
  3672     0ECD  00C5               	movwf	(calibrate@frequency+3)^(0+128)
  3673     0ECE  0020               	movlb	0	; select bank0
  3674     0ECF  083C               	movf	?___fldiv+2,w
  3675     0ED0  0021               	movlb	1	; select bank1
  3676     0ED1  00C4               	movwf	(calibrate@frequency+2)^(0+128)
  3677     0ED2  0020               	movlb	0	; select bank0
  3678     0ED3  083B               	movf	?___fldiv+1,w
  3679     0ED4  0021               	movlb	1	; select bank1
  3680     0ED5  00C3               	movwf	(calibrate@frequency+1)^(0+128)
  3681     0ED6  0020               	movlb	0	; select bank0
  3682     0ED7  083A               	movf	?___fldiv,w
  3683     0ED8  0021               	movlb	1	; select bank1
  3684     0ED9  00C2               	movwf	calibrate@frequency^(0+128)
  3685     0EDA                     l3523:
  3686                           
  3687                           ;main.c: 183:     if (frequency > 0) {
  3688     0EDA  3000               	movlw	0
  3689     0EDB  00F3               	movwf	___flge@ff1+3
  3690     0EDC  3000               	movlw	0
  3691     0EDD  00F2               	movwf	___flge@ff1+2
  3692     0EDE  3000               	movlw	0
  3693     0EDF  00F1               	movwf	___flge@ff1+1
  3694     0EE0  3000               	movlw	0
  3695     0EE1  00F0               	movwf	___flge@ff1
  3696     0EE2  0845               	movf	(calibrate@frequency+3)^(0+128),w
  3697     0EE3  00F7               	movwf	___flge@ff2+3
  3698     0EE4  0844               	movf	(calibrate@frequency+2)^(0+128),w
  3699     0EE5  00F6               	movwf	___flge@ff2+2
  3700     0EE6  0843               	movf	(calibrate@frequency+1)^(0+128),w
  3701     0EE7  00F5               	movwf	___flge@ff2+1
  3702     0EE8  0842               	movf	calibrate@frequency^(0+128),w
  3703     0EE9  00F4               	movwf	___flge@ff2
  3704     0EEA  3187  2772  318E   	fcall	___flge
  3705     0EED  1803               	btfsc	3,0
  3706     0EEE  2EF0               	goto	u4501
  3707     0EEF  2EF1               	goto	u4500
  3708     0EF0                     u4501:
  3709     0EF0  2FEF               	goto	l3545
  3710     0EF1                     u4500:
  3711     0EF1                     l3525:
  3712                           
  3713                           ;main.c: 184:         float capacitance = 100e-9;
  3714     0EF1  3033               	movlw	51
  3715     0EF2  0021               	movlb	1	; select bank1
  3716     0EF3  00B3               	movwf	(calibrate@capacitance+3)^(0+128)
  3717     0EF4  30D6               	movlw	214
  3718     0EF5  00B2               	movwf	(calibrate@capacitance+2)^(0+128)
  3719     0EF6  30BF               	movlw	191
  3720     0EF7  00B1               	movwf	(calibrate@capacitance+1)^(0+128)
  3721     0EF8  3095               	movlw	149
  3722     0EF9  00B0               	movwf	calibrate@capacitance^(0+128)
  3723     0EFA                     l3527:
  3724                           
  3725                           ;main.c: 185:         float precomputed_constant = 4 * 3.14159 * 3.14159 * capacitance;
  3726     0EFA  3042               	movlw	66
  3727     0EFB  0020               	movlb	0	; select bank0
  3728     0EFC  00A3               	movwf	___flmul@b+3
  3729     0EFD  301D               	movlw	29
  3730     0EFE  00A2               	movwf	___flmul@b+2
  3731     0EFF  30E9               	movlw	233
  3732     0F00  00A1               	movwf	___flmul@b+1
  3733     0F01  30D5               	movlw	213
  3734     0F02  00A0               	movwf	___flmul@b
  3735     0F03  0021               	movlb	1	; select bank1
  3736     0F04  0833               	movf	(calibrate@capacitance+3)^(0+128),w
  3737     0F05  0020               	movlb	0	; select bank0
  3738     0F06  00A7               	movwf	___flmul@a+3
  3739     0F07  0021               	movlb	1	; select bank1
  3740     0F08  0832               	movf	(calibrate@capacitance+2)^(0+128),w
  3741     0F09  0020               	movlb	0	; select bank0
  3742     0F0A  00A6               	movwf	___flmul@a+2
  3743     0F0B  0021               	movlb	1	; select bank1
  3744     0F0C  0831               	movf	(calibrate@capacitance+1)^(0+128),w
  3745     0F0D  0020               	movlb	0	; select bank0
  3746     0F0E  00A5               	movwf	___flmul@a+1
  3747     0F0F  0021               	movlb	1	; select bank1
  3748     0F10  0830               	movf	calibrate@capacitance^(0+128),w
  3749     0F11  0020               	movlb	0	; select bank0
  3750     0F12  00A4               	movwf	___flmul@a
  3751     0F13  3183  232B  318E   	fcall	___flmul
  3752     0F16  0020               	movlb	0	; select bank0
  3753     0F17  0823               	movf	?___flmul+3,w
  3754     0F18  0021               	movlb	1	; select bank1
  3755     0F19  00B7               	movwf	(calibrate@precomputed_constant+3)^(0+128)
  3756     0F1A  0020               	movlb	0	; select bank0
  3757     0F1B  0822               	movf	?___flmul+2,w
  3758     0F1C  0021               	movlb	1	; select bank1
  3759     0F1D  00B6               	movwf	(calibrate@precomputed_constant+2)^(0+128)
  3760     0F1E  0020               	movlb	0	; select bank0
  3761     0F1F  0821               	movf	?___flmul+1,w
  3762     0F20  0021               	movlb	1	; select bank1
  3763     0F21  00B5               	movwf	(calibrate@precomputed_constant+1)^(0+128)
  3764     0F22  0020               	movlb	0	; select bank0
  3765     0F23  0820               	movf	?___flmul,w
  3766     0F24  0021               	movlb	1	; select bank1
  3767     0F25  00B4               	movwf	calibrate@precomputed_constant^(0+128)
  3768     0F26                     l3529:
  3769                           
  3770                           ;main.c: 186:         float inductance_h = 1.0 / (precomputed_constant * frequency * fre
      +                          quency);
  3771     0F26  0845               	movf	(calibrate@frequency+3)^(0+128),w
  3772     0F27  0020               	movlb	0	; select bank0
  3773     0F28  00A3               	movwf	___flmul@b+3
  3774     0F29  0021               	movlb	1	; select bank1
  3775     0F2A  0844               	movf	(calibrate@frequency+2)^(0+128),w
  3776     0F2B  0020               	movlb	0	; select bank0
  3777     0F2C  00A2               	movwf	___flmul@b+2
  3778     0F2D  0021               	movlb	1	; select bank1
  3779     0F2E  0843               	movf	(calibrate@frequency+1)^(0+128),w
  3780     0F2F  0020               	movlb	0	; select bank0
  3781     0F30  00A1               	movwf	___flmul@b+1
  3782     0F31  0021               	movlb	1	; select bank1
  3783     0F32  0842               	movf	calibrate@frequency^(0+128),w
  3784     0F33  0020               	movlb	0	; select bank0
  3785     0F34  00A0               	movwf	___flmul@b
  3786     0F35  0021               	movlb	1	; select bank1
  3787     0F36  0837               	movf	(calibrate@precomputed_constant+3)^(0+128),w
  3788     0F37  0020               	movlb	0	; select bank0
  3789     0F38  00A7               	movwf	___flmul@a+3
  3790     0F39  0021               	movlb	1	; select bank1
  3791     0F3A  0836               	movf	(calibrate@precomputed_constant+2)^(0+128),w
  3792     0F3B  0020               	movlb	0	; select bank0
  3793     0F3C  00A6               	movwf	___flmul@a+2
  3794     0F3D  0021               	movlb	1	; select bank1
  3795     0F3E  0835               	movf	(calibrate@precomputed_constant+1)^(0+128),w
  3796     0F3F  0020               	movlb	0	; select bank0
  3797     0F40  00A5               	movwf	___flmul@a+1
  3798     0F41  0021               	movlb	1	; select bank1
  3799     0F42  0834               	movf	calibrate@precomputed_constant^(0+128),w
  3800     0F43  0020               	movlb	0	; select bank0
  3801     0F44  00A4               	movwf	___flmul@a
  3802     0F45  3183  232B  318E   	fcall	___flmul
  3803     0F48  0020               	movlb	0	; select bank0
  3804     0F49  0823               	movf	?___flmul+3,w
  3805     0F4A  0021               	movlb	1	; select bank1
  3806     0F4B  00BF               	movwf	(_calibrate$1327+3)^(0+128)
  3807     0F4C  0020               	movlb	0	; select bank0
  3808     0F4D  0822               	movf	?___flmul+2,w
  3809     0F4E  0021               	movlb	1	; select bank1
  3810     0F4F  00BE               	movwf	(_calibrate$1327+2)^(0+128)
  3811     0F50  0020               	movlb	0	; select bank0
  3812     0F51  0821               	movf	?___flmul+1,w
  3813     0F52  0021               	movlb	1	; select bank1
  3814     0F53  00BD               	movwf	(_calibrate$1327+1)^(0+128)
  3815     0F54  0020               	movlb	0	; select bank0
  3816     0F55  0820               	movf	?___flmul,w
  3817     0F56  0021               	movlb	1	; select bank1
  3818     0F57  00BC               	movwf	_calibrate$1327^(0+128)
  3819     0F58                     l3531:
  3820                           
  3821                           ;main.c: 186:         float inductance_h = 1.0 / (precomputed_constant * frequency * fre
      +                          quency);
  3822     0F58  0845               	movf	(calibrate@frequency+3)^(0+128),w
  3823     0F59  0020               	movlb	0	; select bank0
  3824     0F5A  00A3               	movwf	___flmul@b+3
  3825     0F5B  0021               	movlb	1	; select bank1
  3826     0F5C  0844               	movf	(calibrate@frequency+2)^(0+128),w
  3827     0F5D  0020               	movlb	0	; select bank0
  3828     0F5E  00A2               	movwf	___flmul@b+2
  3829     0F5F  0021               	movlb	1	; select bank1
  3830     0F60  0843               	movf	(calibrate@frequency+1)^(0+128),w
  3831     0F61  0020               	movlb	0	; select bank0
  3832     0F62  00A1               	movwf	___flmul@b+1
  3833     0F63  0021               	movlb	1	; select bank1
  3834     0F64  0842               	movf	calibrate@frequency^(0+128),w
  3835     0F65  0020               	movlb	0	; select bank0
  3836     0F66  00A0               	movwf	___flmul@b
  3837     0F67  0021               	movlb	1	; select bank1
  3838     0F68  083F               	movf	(_calibrate$1327+3)^(0+128),w
  3839     0F69  0020               	movlb	0	; select bank0
  3840     0F6A  00A7               	movwf	___flmul@a+3
  3841     0F6B  0021               	movlb	1	; select bank1
  3842     0F6C  083E               	movf	(_calibrate$1327+2)^(0+128),w
  3843     0F6D  0020               	movlb	0	; select bank0
  3844     0F6E  00A6               	movwf	___flmul@a+2
  3845     0F6F  0021               	movlb	1	; select bank1
  3846     0F70  083D               	movf	(_calibrate$1327+1)^(0+128),w
  3847     0F71  0020               	movlb	0	; select bank0
  3848     0F72  00A5               	movwf	___flmul@a+1
  3849     0F73  0021               	movlb	1	; select bank1
  3850     0F74  083C               	movf	_calibrate$1327^(0+128),w
  3851     0F75  0020               	movlb	0	; select bank0
  3852     0F76  00A4               	movwf	___flmul@a
  3853     0F77  3183  232B  318E   	fcall	___flmul
  3854     0F7A  0020               	movlb	0	; select bank0
  3855     0F7B  0823               	movf	?___flmul+3,w
  3856     0F7C  00BD               	movwf	___fldiv@a+3
  3857     0F7D  0822               	movf	?___flmul+2,w
  3858     0F7E  00BC               	movwf	___fldiv@a+2
  3859     0F7F  0821               	movf	?___flmul+1,w
  3860     0F80  00BB               	movwf	___fldiv@a+1
  3861     0F81  0820               	movf	?___flmul,w
  3862     0F82  00BA               	movwf	___fldiv@a
  3863     0F83  303F               	movlw	63
  3864     0F84  00C1               	movwf	___fldiv@b+3
  3865     0F85  3080               	movlw	128
  3866     0F86  00C0               	movwf	___fldiv@b+2
  3867     0F87  3000               	movlw	0
  3868     0F88  00BF               	movwf	___fldiv@b+1
  3869     0F89  3000               	movlw	0
  3870     0F8A  00BE               	movwf	___fldiv@b
  3871     0F8B  318C  2487  318E   	fcall	___fldiv
  3872     0F8E  0020               	movlb	0	; select bank0
  3873     0F8F  083D               	movf	?___fldiv+3,w
  3874     0F90  0021               	movlb	1	; select bank1
  3875     0F91  00BB               	movwf	(calibrate@inductance_h+3)^(0+128)
  3876     0F92  0020               	movlb	0	; select bank0
  3877     0F93  083C               	movf	?___fldiv+2,w
  3878     0F94  0021               	movlb	1	; select bank1
  3879     0F95  00BA               	movwf	(calibrate@inductance_h+2)^(0+128)
  3880     0F96  0020               	movlb	0	; select bank0
  3881     0F97  083B               	movf	?___fldiv+1,w
  3882     0F98  0021               	movlb	1	; select bank1
  3883     0F99  00B9               	movwf	(calibrate@inductance_h+1)^(0+128)
  3884     0F9A  0020               	movlb	0	; select bank0
  3885     0F9B  083A               	movf	?___fldiv,w
  3886     0F9C  0021               	movlb	1	; select bank1
  3887     0F9D  00B8               	movwf	calibrate@inductance_h^(0+128)
  3888     0F9E                     l3533:
  3889                           
  3890                           ;main.c: 187:         calibration_value = (uint8_t)(inductance_h * 1e6);
  3891     0F9E  083B               	movf	(calibrate@inductance_h+3)^(0+128),w
  3892     0F9F  0020               	movlb	0	; select bank0
  3893     0FA0  00A7               	movwf	___flmul@a+3
  3894     0FA1  0021               	movlb	1	; select bank1
  3895     0FA2  083A               	movf	(calibrate@inductance_h+2)^(0+128),w
  3896     0FA3  0020               	movlb	0	; select bank0
  3897     0FA4  00A6               	movwf	___flmul@a+2
  3898     0FA5  0021               	movlb	1	; select bank1
  3899     0FA6  0839               	movf	(calibrate@inductance_h+1)^(0+128),w
  3900     0FA7  0020               	movlb	0	; select bank0
  3901     0FA8  00A5               	movwf	___flmul@a+1
  3902     0FA9  0021               	movlb	1	; select bank1
  3903     0FAA  0838               	movf	calibrate@inductance_h^(0+128),w
  3904     0FAB  0020               	movlb	0	; select bank0
  3905     0FAC  00A4               	movwf	___flmul@a
  3906     0FAD  3049               	movlw	73
  3907     0FAE  00A3               	movwf	___flmul@b+3
  3908     0FAF  3074               	movlw	116
  3909     0FB0  00A2               	movwf	___flmul@b+2
  3910     0FB1  3024               	movlw	36
  3911     0FB2  00A1               	movwf	___flmul@b+1
  3912     0FB3  3000               	movlw	0
  3913     0FB4  00A0               	movwf	___flmul@b
  3914     0FB5  3183  232B  318E   	fcall	___flmul
  3915     0FB8  0020               	movlb	0	; select bank0
  3916     0FB9  0823               	movf	?___flmul+3,w
  3917     0FBA  00BD               	movwf	___fltol@f1+3
  3918     0FBB  0822               	movf	?___flmul+2,w
  3919     0FBC  00BC               	movwf	___fltol@f1+2
  3920     0FBD  0821               	movf	?___flmul+1,w
  3921     0FBE  00BB               	movwf	___fltol@f1+1
  3922     0FBF  0820               	movf	?___flmul,w
  3923     0FC0  00BA               	movwf	___fltol@f1
  3924     0FC1  3188  2004  318E   	fcall	___fltol
  3925     0FC4  0020               	movlb	0	; select bank0
  3926     0FC5  083A               	movf	?___fltol,w
  3927     0FC6  0021               	movlb	1	; select bank1
  3928     0FC7  00EE               	movwf	_calibration_value^(0+128)
  3929     0FC8                     l3535:
  3930                           
  3931                           ;main.c: 188:         Lcd_Clear();
  3932     0FC8  3193  23C2  318E   	fcall	_Lcd_Clear
  3933     0FCB                     l3537:
  3934                           
  3935                           ;main.c: 189:         Lcd_Set_Cursor(1, 1);
  3936     0FCB  01F5               	clrf	Lcd_Set_Cursor@col
  3937     0FCC  0AF5               	incf	Lcd_Set_Cursor@col,f
  3938     0FCD  3001               	movlw	1
  3939     0FCE  3194  2465  318E   	fcall	_Lcd_Set_Cursor
  3940     0FD1                     l3539:
  3941                           
  3942                           ;main.c: 190:         Lcd_Write_String("Offset (uH): ");
  3943     0FD1  3052               	movlw	low (STR_2| (0+32768))
  3944     0FD2  00F4               	movwf	Lcd_Write_String@str
  3945     0FD3  3098               	movlw	high (STR_2| (0+32768))
  3946     0FD4  00F5               	movwf	Lcd_Write_String@str+1
  3947     0FD5  3194  2404  318E   	fcall	_Lcd_Write_String
  3948     0FD8                     l3541:
  3949                           
  3950                           ;main.c: 192:         Lcd_Set_Cursor(1, 11);
  3951     0FD8  300B               	movlw	11
  3952     0FD9  00F5               	movwf	Lcd_Set_Cursor@col
  3953     0FDA  3001               	movlw	1
  3954     0FDB  3194  2465  318E   	fcall	_Lcd_Set_Cursor
  3955     0FDE                     l3543:
  3956                           
  3957                           ;main.c: 193:         Lcd_Write_Padded_Integer(calibration_value, 4);
  3958     0FDE  0021               	movlb	1	; select bank1
  3959     0FDF  086E               	movf	_calibration_value^(0+128),w
  3960     0FE0  0020               	movlb	0	; select bank0
  3961     0FE1  00E1               	movwf	??_calibrate
  3962     0FE2  01E2               	clrf	??_calibrate+1
  3963     0FE3  0861               	movf	??_calibrate,w
  3964     0FE4  00DD               	movwf	Lcd_Write_Padded_Integer@num
  3965     0FE5  0862               	movf	??_calibrate+1,w
  3966     0FE6  00DE               	movwf	Lcd_Write_Padded_Integer@num+1
  3967     0FE7  3004               	movlw	4
  3968     0FE8  00DF               	movwf	Lcd_Write_Padded_Integer@width
  3969     0FE9  3000               	movlw	0
  3970     0FEA  00E0               	movwf	Lcd_Write_Padded_Integer@width+1
  3971     0FEB  3194  244C  318E   	fcall	_Lcd_Write_Padded_Integer
  3972                           
  3973                           ;main.c: 194:     } else {
  3974     0FEE  2FFF               	goto	l80
  3975     0FEF                     l3545:
  3976                           
  3977                           ;main.c: 195:         Lcd_Clear();
  3978     0FEF  3193  23C2  318E   	fcall	_Lcd_Clear
  3979                           
  3980                           ;main.c: 196:         Lcd_Set_Cursor(1, 1);
  3981     0FF2  01F5               	clrf	Lcd_Set_Cursor@col
  3982     0FF3  0AF5               	incf	Lcd_Set_Cursor@col,f
  3983     0FF4  3001               	movlw	1
  3984     0FF5  3194  2465  318E   	fcall	_Lcd_Set_Cursor
  3985     0FF8                     l3547:
  3986                           
  3987                           ;main.c: 197:         Lcd_Write_String("Error: Unable to measure frequency");
  3988     0FF8  3000               	movlw	low (STR_3| (0+32768))
  3989     0FF9  00F4               	movwf	Lcd_Write_String@str
  3990     0FFA  3098               	movlw	high (STR_3| (0+32768))
  3991     0FFB  00F5               	movwf	Lcd_Write_String@str+1
  3992     0FFC  3194  2404  318E   	fcall	_Lcd_Write_String
  3993     0FFF                     l80:
  3994     0FFF  0008               	return
  3995     1000                     __end_of_calibrate:
  3996                           
  3997                           	psect	text4
  3998     0C87                     __ptext4:	
  3999 ;; *************** function ___fldiv *****************
  4000 ;; Defined at:
  4001 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcdiv.c"
  4002 ;; Parameters:    Size  Location     Type
  4003 ;;  a               4   26[BANK0 ] void 
  4004 ;;  b               4   30[BANK0 ] void 
  4005 ;; Auto vars:     Size  Location     Type
  4006 ;;  grs             4   46[BANK0 ] unsigned long 
  4007 ;;  rem             4   39[BANK0 ] unsigned long 
  4008 ;;  new_exp         2   44[BANK0 ] short 
  4009 ;;  aexp            1   51[BANK0 ] unsigned char 
  4010 ;;  bexp            1   50[BANK0 ] unsigned char 
  4011 ;;  sign            1   43[BANK0 ] unsigned char 
  4012 ;; Return value:  Size  Location     Type
  4013 ;;                  4   26[BANK0 ] unsigned char 
  4014 ;; Registers used:
  4015 ;;		wreg, status,2, status,0
  4016 ;; Tracked objects:
  4017 ;;		On entry : 0/0
  4018 ;;		On exit  : 0/0
  4019 ;;		Unchanged: 0/0
  4020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4021 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4022 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4023 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4024 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4025 ;;Total ram usage:       26 bytes
  4026 ;; Hardware stack levels used: 1
  4027 ;; Hardware stack levels required when called: 1
  4028 ;; This function calls:
  4029 ;;		Nothing
  4030 ;; This function is called by:
  4031 ;;		_calibrate
  4032 ;;		_main
  4033 ;; This function uses a non-reentrant model
  4034 ;;
  4035                           
  4036     0C87                     ___fldiv:	
  4037                           ;psect for function ___fldiv
  4038                           
  4039     0C87                     l3303:	
  4040                           ;incstack = 0
  4041                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  4042                           
  4043     0C87  0020               	movlb	0	; select bank0
  4044     0C88  0841               	movf	___fldiv@b+3,w
  4045     0C89  3980               	andlw	128
  4046     0C8A  00CB               	movwf	___fldiv@sign
  4047     0C8B                     l3305:
  4048     0C8B  3541               	lslf	___fldiv@b+3,w
  4049     0C8C  00D2               	movwf	___fldiv@bexp
  4050     0C8D                     l3307:
  4051     0C8D  1FC0               	btfss	___fldiv@b+2,7
  4052     0C8E  2C90               	goto	u4201
  4053     0C8F  2C91               	goto	u4200
  4054     0C90                     u4201:
  4055     0C90  2C92               	goto	l3311
  4056     0C91                     u4200:
  4057     0C91                     l3309:
  4058     0C91  1452               	bsf	___fldiv@bexp,0
  4059     0C92                     l3311:
  4060     0C92  0852               	movf	___fldiv@bexp,w
  4061     0C93  1903               	btfsc	3,2
  4062     0C94  2C96               	goto	u4211
  4063     0C95  2C97               	goto	u4210
  4064     0C96                     u4211:
  4065     0C96  2CA7               	goto	l3321
  4066     0C97                     u4210:
  4067     0C97                     l3313:
  4068     0C97  0A52               	incf	___fldiv@bexp,w
  4069     0C98  1D03               	btfss	3,2
  4070     0C99  2C9B               	goto	u4221
  4071     0C9A  2C9C               	goto	u4220
  4072     0C9B                     u4221:
  4073     0C9B  2CA4               	goto	l3317
  4074     0C9C                     u4220:
  4075     0C9C                     l3315:
  4076     0C9C  3000               	movlw	0
  4077     0C9D  00C1               	movwf	___fldiv@b+3
  4078     0C9E  3000               	movlw	0
  4079     0C9F  00C0               	movwf	___fldiv@b+2
  4080     0CA0  3000               	movlw	0
  4081     0CA1  00BF               	movwf	___fldiv@b+1
  4082     0CA2  3000               	movlw	0
  4083     0CA3  00BE               	movwf	___fldiv@b
  4084     0CA4                     l3317:
  4085     0CA4  17C0               	bsf	___fldiv@b+2,7
  4086     0CA5                     l3319:
  4087     0CA5  01C1               	clrf	___fldiv@b+3
  4088     0CA6  2CAF               	goto	l3323
  4089     0CA7                     l3321:
  4090     0CA7  3000               	movlw	0
  4091     0CA8  00C1               	movwf	___fldiv@b+3
  4092     0CA9  3000               	movlw	0
  4093     0CAA  00C0               	movwf	___fldiv@b+2
  4094     0CAB  3000               	movlw	0
  4095     0CAC  00BF               	movwf	___fldiv@b+1
  4096     0CAD  3000               	movlw	0
  4097     0CAE  00BE               	movwf	___fldiv@b
  4098     0CAF                     l3323:
  4099     0CAF  083D               	movf	___fldiv@a+3,w
  4100     0CB0  3980               	andlw	128
  4101     0CB1  00C2               	movwf	??___fldiv
  4102     0CB2  0842               	movf	??___fldiv,w
  4103     0CB3  06CB               	xorwf	___fldiv@sign,f
  4104     0CB4                     l3325:
  4105     0CB4  353D               	lslf	___fldiv@a+3,w
  4106     0CB5  00D3               	movwf	___fldiv@aexp
  4107     0CB6                     l3327:
  4108     0CB6  1FBC               	btfss	___fldiv@a+2,7
  4109     0CB7  2CB9               	goto	u4231
  4110     0CB8  2CBA               	goto	u4230
  4111     0CB9                     u4231:
  4112     0CB9  2CBB               	goto	l3331
  4113     0CBA                     u4230:
  4114     0CBA                     l3329:
  4115     0CBA  1453               	bsf	___fldiv@aexp,0
  4116     0CBB                     l3331:
  4117     0CBB  0853               	movf	___fldiv@aexp,w
  4118     0CBC  1903               	btfsc	3,2
  4119     0CBD  2CBF               	goto	u4241
  4120     0CBE  2CC0               	goto	u4240
  4121     0CBF                     u4241:
  4122     0CBF  2CD0               	goto	l3341
  4123     0CC0                     u4240:
  4124     0CC0                     l3333:
  4125     0CC0  0A53               	incf	___fldiv@aexp,w
  4126     0CC1  1D03               	btfss	3,2
  4127     0CC2  2CC4               	goto	u4251
  4128     0CC3  2CC5               	goto	u4250
  4129     0CC4                     u4251:
  4130     0CC4  2CCD               	goto	l3337
  4131     0CC5                     u4250:
  4132     0CC5                     l3335:
  4133     0CC5  3000               	movlw	0
  4134     0CC6  00BD               	movwf	___fldiv@a+3
  4135     0CC7  3000               	movlw	0
  4136     0CC8  00BC               	movwf	___fldiv@a+2
  4137     0CC9  3000               	movlw	0
  4138     0CCA  00BB               	movwf	___fldiv@a+1
  4139     0CCB  3000               	movlw	0
  4140     0CCC  00BA               	movwf	___fldiv@a
  4141     0CCD                     l3337:
  4142     0CCD  17BC               	bsf	___fldiv@a+2,7
  4143     0CCE                     l3339:
  4144     0CCE  01BD               	clrf	___fldiv@a+3
  4145     0CCF  2CD8               	goto	l764
  4146     0CD0                     l3341:
  4147     0CD0  3000               	movlw	0
  4148     0CD1  00BD               	movwf	___fldiv@a+3
  4149     0CD2  3000               	movlw	0
  4150     0CD3  00BC               	movwf	___fldiv@a+2
  4151     0CD4  3000               	movlw	0
  4152     0CD5  00BB               	movwf	___fldiv@a+1
  4153     0CD6  3000               	movlw	0
  4154     0CD7  00BA               	movwf	___fldiv@a
  4155     0CD8                     l764:
  4156     0CD8  083D               	movf	___fldiv@a+3,w
  4157     0CD9  043C               	iorwf	___fldiv@a+2,w
  4158     0CDA  043B               	iorwf	___fldiv@a+1,w
  4159     0CDB  043A               	iorwf	___fldiv@a,w
  4160     0CDC  1D03               	skipz
  4161     0CDD  2CDF               	goto	u4261
  4162     0CDE  2CE0               	goto	u4260
  4163     0CDF                     u4261:
  4164     0CDF  2CF9               	goto	l3351
  4165     0CE0                     u4260:
  4166     0CE0                     l3343:
  4167     0CE0  3000               	movlw	0
  4168     0CE1  00C1               	movwf	___fldiv@b+3
  4169     0CE2  3000               	movlw	0
  4170     0CE3  00C0               	movwf	___fldiv@b+2
  4171     0CE4  3000               	movlw	0
  4172     0CE5  00BF               	movwf	___fldiv@b+1
  4173     0CE6  3000               	movlw	0
  4174     0CE7  00BE               	movwf	___fldiv@b
  4175     0CE8  3080               	movlw	128
  4176     0CE9  04C0               	iorwf	___fldiv@b+2,f
  4177     0CEA  307F               	movlw	127
  4178     0CEB  04C1               	iorwf	___fldiv@b+3,f
  4179     0CEC                     l3345:
  4180     0CEC  084B               	movf	___fldiv@sign,w
  4181     0CED  00C2               	movwf	??___fldiv
  4182     0CEE  0842               	movf	??___fldiv,w
  4183     0CEF  04C1               	iorwf	___fldiv@b+3,f
  4184     0CF0                     l3347:
  4185     0CF0  0841               	movf	___fldiv@b+3,w
  4186     0CF1  00BD               	movwf	?___fldiv+3
  4187     0CF2  0840               	movf	___fldiv@b+2,w
  4188     0CF3  00BC               	movwf	?___fldiv+2
  4189     0CF4  083F               	movf	___fldiv@b+1,w
  4190     0CF5  00BB               	movwf	?___fldiv+1
  4191     0CF6  083E               	movf	___fldiv@b,w
  4192     0CF7  00BA               	movwf	?___fldiv
  4193     0CF8  2E30               	goto	l766
  4194     0CF9                     l3351:
  4195     0CF9  0852               	movf	___fldiv@bexp,w
  4196     0CFA  1D03               	btfss	3,2
  4197     0CFB  2CFD               	goto	u4271
  4198     0CFC  2CFE               	goto	u4270
  4199     0CFD                     u4271:
  4200     0CFD  2D07               	goto	l3357
  4201     0CFE                     u4270:
  4202     0CFE                     l3353:
  4203     0CFE  3000               	movlw	0
  4204     0CFF  00BD               	movwf	?___fldiv+3
  4205     0D00  3000               	movlw	0
  4206     0D01  00BC               	movwf	?___fldiv+2
  4207     0D02  3000               	movlw	0
  4208     0D03  00BB               	movwf	?___fldiv+1
  4209     0D04  3000               	movlw	0
  4210     0D05  00BA               	movwf	?___fldiv
  4211     0D06  2E30               	goto	l766
  4212     0D07                     l3357:
  4213     0D07  0852               	movf	___fldiv@bexp,w
  4214     0D08  00C2               	movwf	??___fldiv
  4215     0D09  01C3               	clrf	??___fldiv+1
  4216     0D0A  0843               	movf	??___fldiv+1,w
  4217     0D0B  00C5               	movwf	??___fldiv+3
  4218     0D0C  0853               	movf	___fldiv@aexp,w
  4219     0D0D  0242               	subwf	??___fldiv,w
  4220     0D0E  00C4               	movwf	??___fldiv+2
  4221     0D0F  1C03               	skipc
  4222     0D10  03C5               	decf	??___fldiv+3,f
  4223     0D11  0844               	movf	??___fldiv+2,w
  4224     0D12  3E7F               	addlw	127
  4225     0D13  00CC               	movwf	___fldiv@new_exp
  4226     0D14  3000               	movlw	0
  4227     0D15  3D45               	addwfc	??___fldiv+3,w
  4228     0D16  00CD               	movwf	___fldiv@new_exp+1
  4229     0D17                     l3359:
  4230     0D17  0841               	movf	___fldiv@b+3,w
  4231     0D18  00CA               	movwf	___fldiv@rem+3
  4232     0D19  0840               	movf	___fldiv@b+2,w
  4233     0D1A  00C9               	movwf	___fldiv@rem+2
  4234     0D1B  083F               	movf	___fldiv@b+1,w
  4235     0D1C  00C8               	movwf	___fldiv@rem+1
  4236     0D1D  083E               	movf	___fldiv@b,w
  4237     0D1E  00C7               	movwf	___fldiv@rem
  4238     0D1F                     l3361:
  4239     0D1F  3000               	movlw	0
  4240     0D20  00C1               	movwf	___fldiv@b+3
  4241     0D21  3000               	movlw	0
  4242     0D22  00C0               	movwf	___fldiv@b+2
  4243     0D23  3000               	movlw	0
  4244     0D24  00BF               	movwf	___fldiv@b+1
  4245     0D25  3000               	movlw	0
  4246     0D26  00BE               	movwf	___fldiv@b
  4247     0D27                     l3363:
  4248     0D27  3000               	movlw	0
  4249     0D28  00D1               	movwf	___fldiv@grs+3
  4250     0D29  3000               	movlw	0
  4251     0D2A  00D0               	movwf	___fldiv@grs+2
  4252     0D2B  3000               	movlw	0
  4253     0D2C  00CF               	movwf	___fldiv@grs+1
  4254     0D2D  3000               	movlw	0
  4255     0D2E  00CE               	movwf	___fldiv@grs
  4256     0D2F                     l3365:
  4257     0D2F  01D3               	clrf	___fldiv@aexp
  4258     0D30  2D6F               	goto	l3385
  4259     0D31                     l3367:
  4260     0D31  0853               	movf	___fldiv@aexp,w
  4261     0D32  1903               	btfsc	3,2
  4262     0D33  2D35               	goto	u4281
  4263     0D34  2D36               	goto	u4280
  4264     0D35                     u4281:
  4265     0D35  2D50               	goto	l3377
  4266     0D36                     u4280:
  4267     0D36                     l3369:
  4268     0D36  3001               	movlw	1
  4269     0D37                     u4295:
  4270     0D37  35C7               	lslf	___fldiv@rem,f
  4271     0D38  0DC8               	rlf	___fldiv@rem+1,f
  4272     0D39  0DC9               	rlf	___fldiv@rem+2,f
  4273     0D3A  0DCA               	rlf	___fldiv@rem+3,f
  4274     0D3B  0B89               	decfsz	9,f
  4275     0D3C  2D37               	goto	u4295
  4276     0D3D  3001               	movlw	1
  4277     0D3E                     u4305:
  4278     0D3E  35BE               	lslf	___fldiv@b,f
  4279     0D3F  0DBF               	rlf	___fldiv@b+1,f
  4280     0D40  0DC0               	rlf	___fldiv@b+2,f
  4281     0D41  0DC1               	rlf	___fldiv@b+3,f
  4282     0D42  0B89               	decfsz	9,f
  4283     0D43  2D3E               	goto	u4305
  4284     0D44                     l3371:
  4285     0D44  1FD1               	btfss	___fldiv@grs+3,7
  4286     0D45  2D47               	goto	u4311
  4287     0D46  2D48               	goto	u4310
  4288     0D47                     u4311:
  4289     0D47  2D49               	goto	l3375
  4290     0D48                     u4310:
  4291     0D48                     l3373:
  4292     0D48  143E               	bsf	___fldiv@b,0
  4293     0D49                     l3375:
  4294     0D49  3001               	movlw	1
  4295     0D4A                     u4325:
  4296     0D4A  35CE               	lslf	___fldiv@grs,f
  4297     0D4B  0DCF               	rlf	___fldiv@grs+1,f
  4298     0D4C  0DD0               	rlf	___fldiv@grs+2,f
  4299     0D4D  0DD1               	rlf	___fldiv@grs+3,f
  4300     0D4E  0B89               	decfsz	9,f
  4301     0D4F  2D4A               	goto	u4325
  4302     0D50                     l3377:
  4303     0D50  083D               	movf	___fldiv@a+3,w
  4304     0D51  024A               	subwf	___fldiv@rem+3,w
  4305     0D52  1D03               	skipz
  4306     0D53  2D5E               	goto	u4335
  4307     0D54  083C               	movf	___fldiv@a+2,w
  4308     0D55  0249               	subwf	___fldiv@rem+2,w
  4309     0D56  1D03               	skipz
  4310     0D57  2D5E               	goto	u4335
  4311     0D58  083B               	movf	___fldiv@a+1,w
  4312     0D59  0248               	subwf	___fldiv@rem+1,w
  4313     0D5A  1D03               	skipz
  4314     0D5B  2D5E               	goto	u4335
  4315     0D5C  083A               	movf	___fldiv@a,w
  4316     0D5D  0247               	subwf	___fldiv@rem,w
  4317     0D5E                     u4335:
  4318     0D5E  1C03               	skipc
  4319     0D5F  2D61               	goto	u4331
  4320     0D60  2D62               	goto	u4330
  4321     0D61                     u4331:
  4322     0D61  2D6B               	goto	l3383
  4323     0D62                     u4330:
  4324     0D62                     l3379:
  4325     0D62  1751               	bsf	___fldiv@grs+3,6
  4326     0D63                     l3381:
  4327     0D63  083A               	movf	___fldiv@a,w
  4328     0D64  02C7               	subwf	___fldiv@rem,f
  4329     0D65  083B               	movf	___fldiv@a+1,w
  4330     0D66  3BC8               	subwfb	___fldiv@rem+1,f
  4331     0D67  083C               	movf	___fldiv@a+2,w
  4332     0D68  3BC9               	subwfb	___fldiv@rem+2,f
  4333     0D69  083D               	movf	___fldiv@a+3,w
  4334     0D6A  3BCA               	subwfb	___fldiv@rem+3,f
  4335     0D6B                     l3383:
  4336     0D6B  3001               	movlw	1
  4337     0D6C  00C2               	movwf	??___fldiv
  4338     0D6D  0842               	movf	??___fldiv,w
  4339     0D6E  07D3               	addwf	___fldiv@aexp,f
  4340     0D6F                     l3385:
  4341     0D6F  301A               	movlw	26
  4342     0D70  0253               	subwf	___fldiv@aexp,w
  4343     0D71  1C03               	skipc
  4344     0D72  2D74               	goto	u4341
  4345     0D73  2D75               	goto	u4340
  4346     0D74                     u4341:
  4347     0D74  2D31               	goto	l3367
  4348     0D75                     u4340:
  4349     0D75                     l3387:
  4350     0D75  084A               	movf	___fldiv@rem+3,w
  4351     0D76  0449               	iorwf	___fldiv@rem+2,w
  4352     0D77  0448               	iorwf	___fldiv@rem+1,w
  4353     0D78  0447               	iorwf	___fldiv@rem,w
  4354     0D79  1903               	skipnz
  4355     0D7A  2D7C               	goto	u4351
  4356     0D7B  2D7D               	goto	u4350
  4357     0D7C                     u4351:
  4358     0D7C  2D96               	goto	l3401
  4359     0D7D                     u4350:
  4360     0D7D                     l3389:
  4361     0D7D  144E               	bsf	___fldiv@grs,0
  4362     0D7E  2D96               	goto	l3401
  4363     0D7F                     l3391:
  4364     0D7F  3001               	movlw	1
  4365     0D80                     u4365:
  4366     0D80  35BE               	lslf	___fldiv@b,f
  4367     0D81  0DBF               	rlf	___fldiv@b+1,f
  4368     0D82  0DC0               	rlf	___fldiv@b+2,f
  4369     0D83  0DC1               	rlf	___fldiv@b+3,f
  4370     0D84  0B89               	decfsz	9,f
  4371     0D85  2D80               	goto	u4365
  4372     0D86                     l3393:
  4373     0D86  1FD1               	btfss	___fldiv@grs+3,7
  4374     0D87  2D89               	goto	u4371
  4375     0D88  2D8A               	goto	u4370
  4376     0D89                     u4371:
  4377     0D89  2D8B               	goto	l3397
  4378     0D8A                     u4370:
  4379     0D8A                     l3395:
  4380     0D8A  143E               	bsf	___fldiv@b,0
  4381     0D8B                     l3397:
  4382     0D8B  3001               	movlw	1
  4383     0D8C                     u4385:
  4384     0D8C  35CE               	lslf	___fldiv@grs,f
  4385     0D8D  0DCF               	rlf	___fldiv@grs+1,f
  4386     0D8E  0DD0               	rlf	___fldiv@grs+2,f
  4387     0D8F  0DD1               	rlf	___fldiv@grs+3,f
  4388     0D90  0B89               	decfsz	9,f
  4389     0D91  2D8C               	goto	u4385
  4390     0D92                     l3399:
  4391     0D92  30FF               	movlw	255
  4392     0D93  07CC               	addwf	___fldiv@new_exp,f
  4393     0D94  30FF               	movlw	255
  4394     0D95  3DCD               	addwfc	___fldiv@new_exp+1,f
  4395     0D96                     l3401:
  4396     0D96  1FC0               	btfss	___fldiv@b+2,7
  4397     0D97  2D99               	goto	u4391
  4398     0D98  2D9A               	goto	u4390
  4399     0D99                     u4391:
  4400     0D99  2D7F               	goto	l3391
  4401     0D9A                     u4390:
  4402     0D9A                     l3403:
  4403     0D9A  01D3               	clrf	___fldiv@aexp
  4404     0D9B                     l3405:
  4405     0D9B  1FD1               	btfss	___fldiv@grs+3,7
  4406     0D9C  2D9E               	goto	u4401
  4407     0D9D  2D9F               	goto	u4400
  4408     0D9E                     u4401:
  4409     0D9E  2DBB               	goto	l3413
  4410     0D9F                     u4400:
  4411     0D9F                     l3407:
  4412     0D9F  30FF               	movlw	255
  4413     0DA0  054E               	andwf	___fldiv@grs,w
  4414     0DA1  00C2               	movwf	??___fldiv
  4415     0DA2  30FF               	movlw	255
  4416     0DA3  054F               	andwf	___fldiv@grs+1,w
  4417     0DA4  00C3               	movwf	??___fldiv+1
  4418     0DA5  30FF               	movlw	255
  4419     0DA6  0550               	andwf	___fldiv@grs+2,w
  4420     0DA7  00C4               	movwf	??___fldiv+2
  4421     0DA8  307F               	movlw	127
  4422     0DA9  0551               	andwf	___fldiv@grs+3,w
  4423     0DAA  00C5               	movwf	??___fldiv+3
  4424     0DAB  0845               	movf	??___fldiv+3,w
  4425     0DAC  0444               	iorwf	??___fldiv+2,w
  4426     0DAD  0443               	iorwf	??___fldiv+1,w
  4427     0DAE  0442               	iorwf	??___fldiv,w
  4428     0DAF  1903               	skipnz
  4429     0DB0  2DB2               	goto	u4411
  4430     0DB1  2DB3               	goto	u4410
  4431     0DB2                     u4411:
  4432     0DB2  2DB6               	goto	l780
  4433     0DB3                     u4410:
  4434     0DB3                     l3409:
  4435     0DB3  01D3               	clrf	___fldiv@aexp
  4436     0DB4  0AD3               	incf	___fldiv@aexp,f
  4437     0DB5  2DBB               	goto	l3413
  4438     0DB6                     l780:
  4439     0DB6  1C3E               	btfss	___fldiv@b,0
  4440     0DB7  2DB9               	goto	u4421
  4441     0DB8  2DBA               	goto	u4420
  4442     0DB9                     u4421:
  4443     0DB9  2DBB               	goto	l3413
  4444     0DBA                     u4420:
  4445     0DBA  2DB3               	goto	l3409
  4446     0DBB                     l3413:
  4447     0DBB  0853               	movf	___fldiv@aexp,w
  4448     0DBC  1903               	btfsc	3,2
  4449     0DBD  2DBF               	goto	u4431
  4450     0DBE  2DC0               	goto	u4430
  4451     0DBF                     u4431:
  4452     0DBF  2DE8               	goto	l3423
  4453     0DC0                     u4430:
  4454     0DC0                     l3415:
  4455     0DC0  3001               	movlw	1
  4456     0DC1  07BE               	addwf	___fldiv@b,f
  4457     0DC2  3000               	movlw	0
  4458     0DC3  3DBF               	addwfc	___fldiv@b+1,f
  4459     0DC4  3000               	movlw	0
  4460     0DC5  3DC0               	addwfc	___fldiv@b+2,f
  4461     0DC6  3000               	movlw	0
  4462     0DC7  3DC1               	addwfc	___fldiv@b+3,f
  4463     0DC8                     l3417:
  4464     0DC8  1C41               	btfss	___fldiv@b+3,0
  4465     0DC9  2DCB               	goto	u4441
  4466     0DCA  2DCC               	goto	u4440
  4467     0DCB                     u4441:
  4468     0DCB  2DE8               	goto	l3423
  4469     0DCC                     u4440:
  4470     0DCC                     l3419:
  4471     0DCC  083E               	movf	___fldiv@b,w
  4472     0DCD  00C2               	movwf	??___fldiv
  4473     0DCE  083F               	movf	___fldiv@b+1,w
  4474     0DCF  00C3               	movwf	??___fldiv+1
  4475     0DD0  0840               	movf	___fldiv@b+2,w
  4476     0DD1  00C4               	movwf	??___fldiv+2
  4477     0DD2  0841               	movf	___fldiv@b+3,w
  4478     0DD3  00C5               	movwf	??___fldiv+3
  4479     0DD4  3001               	movlw	1
  4480     0DD5  00C6               	movwf	??___fldiv+4
  4481     0DD6                     u4455:
  4482     0DD6  37C5               	asrf	??___fldiv+3,f
  4483     0DD7  0CC4               	rrf	??___fldiv+2,f
  4484     0DD8  0CC3               	rrf	??___fldiv+1,f
  4485     0DD9  0CC2               	rrf	??___fldiv,f
  4486     0DDA                     u4450:
  4487     0DDA  0BC6               	decfsz	??___fldiv+4,f
  4488     0DDB  2DD6               	goto	u4455
  4489     0DDC  0845               	movf	??___fldiv+3,w
  4490     0DDD  00C1               	movwf	___fldiv@b+3
  4491     0DDE  0844               	movf	??___fldiv+2,w
  4492     0DDF  00C0               	movwf	___fldiv@b+2
  4493     0DE0  0843               	movf	??___fldiv+1,w
  4494     0DE1  00BF               	movwf	___fldiv@b+1
  4495     0DE2  0842               	movf	??___fldiv,w
  4496     0DE3  00BE               	movwf	___fldiv@b
  4497     0DE4                     l3421:
  4498     0DE4  3001               	movlw	1
  4499     0DE5  07CC               	addwf	___fldiv@new_exp,f
  4500     0DE6  3000               	movlw	0
  4501     0DE7  3DCD               	addwfc	___fldiv@new_exp+1,f
  4502     0DE8                     l3423:
  4503     0DE8  084D               	movf	___fldiv@new_exp+1,w
  4504     0DE9  3A80               	xorlw	128
  4505     0DEA  00C2               	movwf	??___fldiv
  4506     0DEB  3080               	movlw	128
  4507     0DEC  0242               	subwf	??___fldiv,w
  4508     0DED  1D03               	skipz
  4509     0DEE  2DF1               	goto	u4465
  4510     0DEF  30FF               	movlw	255
  4511     0DF0  024C               	subwf	___fldiv@new_exp,w
  4512     0DF1                     u4465:
  4513     0DF1  1C03               	skipc
  4514     0DF2  2DF4               	goto	u4461
  4515     0DF3  2DF5               	goto	u4460
  4516     0DF4                     u4461:
  4517     0DF4  2E02               	goto	l785
  4518     0DF5                     u4460:
  4519     0DF5                     l3425:
  4520     0DF5  30FF               	movlw	255
  4521     0DF6  0020               	movlb	0	; select bank0
  4522     0DF7  00CC               	movwf	___fldiv@new_exp
  4523     0DF8  3000               	movlw	0
  4524     0DF9  00CD               	movwf	___fldiv@new_exp+1
  4525     0DFA  3000               	movlw	0
  4526     0DFB  00C1               	movwf	___fldiv@b+3
  4527     0DFC  3000               	movlw	0
  4528     0DFD  00C0               	movwf	___fldiv@b+2
  4529     0DFE  3000               	movlw	0
  4530     0DFF  00BF               	movwf	___fldiv@b+1
  4531     0E00  3000               	movlw	0
  4532     0E01  00BE               	movwf	___fldiv@b
  4533     0E02                     l785:
  4534     0E02  0020               	movlb	0	; select bank0
  4535     0E03  084D               	movf	___fldiv@new_exp+1,w
  4536     0E04  3A80               	xorlw	128
  4537     0E05  00C2               	movwf	??___fldiv
  4538     0E06  3080               	movlw	128
  4539     0E07  0242               	subwf	??___fldiv,w
  4540     0E08  1D03               	skipz
  4541     0E09  2E0C               	goto	u4475
  4542     0E0A  3001               	movlw	1
  4543     0E0B  024C               	subwf	___fldiv@new_exp,w
  4544     0E0C                     u4475:
  4545     0E0C  1803               	skipnc
  4546     0E0D  2E0F               	goto	u4471
  4547     0E0E  2E10               	goto	u4470
  4548     0E0F                     u4471:
  4549     0E0F  2E1C               	goto	l786
  4550     0E10                     u4470:
  4551     0E10                     l3427:
  4552     0E10  0020               	movlb	0	; select bank0
  4553     0E11  01CC               	clrf	___fldiv@new_exp
  4554     0E12  01CD               	clrf	___fldiv@new_exp+1
  4555     0E13                     l3429:
  4556     0E13  3000               	movlw	0
  4557     0E14  00C1               	movwf	___fldiv@b+3
  4558     0E15  3000               	movlw	0
  4559     0E16  00C0               	movwf	___fldiv@b+2
  4560     0E17  3000               	movlw	0
  4561     0E18  00BF               	movwf	___fldiv@b+1
  4562     0E19  3000               	movlw	0
  4563     0E1A  00BE               	movwf	___fldiv@b
  4564     0E1B                     l3431:
  4565     0E1B  01CB               	clrf	___fldiv@sign
  4566     0E1C                     l786:
  4567     0E1C  0020               	movlb	0	; select bank0
  4568     0E1D  084C               	movf	___fldiv@new_exp,w
  4569     0E1E  00D2               	movwf	___fldiv@bexp
  4570     0E1F                     l3433:
  4571     0E1F  1C52               	btfss	___fldiv@bexp,0
  4572     0E20  2E22               	goto	u4481
  4573     0E21  2E23               	goto	u4480
  4574     0E22                     u4481:
  4575     0E22  2E25               	goto	l3437
  4576     0E23                     u4480:
  4577     0E23                     l3435:
  4578     0E23  17C0               	bsf	___fldiv@b+2,7
  4579     0E24  2E29               	goto	l788
  4580     0E25                     l3437:
  4581     0E25  307F               	movlw	127
  4582     0E26  00C2               	movwf	??___fldiv
  4583     0E27  0842               	movf	??___fldiv,w
  4584     0E28  05C0               	andwf	___fldiv@b+2,f
  4585     0E29                     l788:
  4586     0E29  3652               	lsrf	___fldiv@bexp,w
  4587     0E2A  00C1               	movwf	___fldiv@b+3
  4588     0E2B  084B               	movf	___fldiv@sign,w
  4589     0E2C  00C2               	movwf	??___fldiv
  4590     0E2D  0842               	movf	??___fldiv,w
  4591     0E2E  04C1               	iorwf	___fldiv@b+3,f
  4592     0E2F  2CF0               	goto	l3347
  4593     0E30                     l766:
  4594     0E30  0008               	return
  4595     0E31                     __end_of___fldiv:
  4596                           
  4597                           	psect	text5
  4598     13F1                     __ptext5:	
  4599 ;; *************** function _ReadTimer0WithOverflows *****************
  4600 ;; Defined at:
  4601 ;;		line 151 in file "main.c"
  4602 ;; Parameters:    Size  Location     Type
  4603 ;;		None
  4604 ;; Auto vars:     Size  Location     Type
  4605 ;;		None
  4606 ;; Return value:  Size  Location     Type
  4607 ;;                  2    0[COMMON] unsigned short 
  4608 ;; Registers used:
  4609 ;;		wreg, status,2, status,0
  4610 ;; Tracked objects:
  4611 ;;		On entry : 0/0
  4612 ;;		On exit  : 0/0
  4613 ;;		Unchanged: 0/0
  4614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4615 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4617 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4618 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4619 ;;Total ram usage:        8 bytes
  4620 ;; Hardware stack levels used: 1
  4621 ;; Hardware stack levels required when called: 1
  4622 ;; This function calls:
  4623 ;;		Nothing
  4624 ;; This function is called by:
  4625 ;;		_calibrate
  4626 ;;		_main
  4627 ;; This function uses a non-reentrant model
  4628 ;;
  4629                           
  4630     13F1                     _ReadTimer0WithOverflows:	
  4631                           ;psect for function _ReadTimer0WithOverflows
  4632                           
  4633     13F1                     l3243:	
  4634                           ;incstack = 0
  4635                           ; Regs used in _ReadTimer0WithOverflows: [wreg+status,2+status,0]
  4636                           
  4637                           
  4638                           ;main.c: 153:     return (tmr0_overflows * 256) + TMR0;
  4639     13F1  0020               	movlb	0	; select bank0
  4640     13F2  0815               	movf	21,w	;volatile
  4641     13F3  00F2               	movwf	??_ReadTimer0WithOverflows
  4642     13F4  01F3               	clrf	??_ReadTimer0WithOverflows+1
  4643     13F5  0021               	movlb	1	; select bank1
  4644     13F6  086C               	movf	_tmr0_overflows^(0+128),w	;volatile
  4645     13F7  00F5               	movwf	??_ReadTimer0WithOverflows+3
  4646     13F8  01F4               	clrf	??_ReadTimer0WithOverflows+2
  4647     13F9  0872               	movf	??_ReadTimer0WithOverflows,w
  4648     13FA  0774               	addwf	??_ReadTimer0WithOverflows+2,w
  4649     13FB  00F6               	movwf	??_ReadTimer0WithOverflows+4
  4650     13FC  0873               	movf	??_ReadTimer0WithOverflows+1,w
  4651     13FD  3D75               	addwfc	??_ReadTimer0WithOverflows+3,w
  4652     13FE  00F7               	movwf	??_ReadTimer0WithOverflows+5
  4653     13FF  0876               	movf	??_ReadTimer0WithOverflows+4,w
  4654     1400  00F0               	movwf	?_ReadTimer0WithOverflows
  4655     1401  0877               	movf	??_ReadTimer0WithOverflows+5,w
  4656     1402  00F1               	movwf	?_ReadTimer0WithOverflows+1
  4657     1403                     l71:
  4658     1403  0008               	return
  4659     1404                     __end_of_ReadTimer0WithOverflows:
  4660                           
  4661                           	psect	text6
  4662     144C                     __ptext6:	
  4663 ;; *************** function _Lcd_Write_Padded_Integer *****************
  4664 ;; Defined at:
  4665 ;;		line 313 in file "SC1601_LCD.c"
  4666 ;; Parameters:    Size  Location     Type
  4667 ;;  num             2   61[BANK0 ] int 
  4668 ;;  width           2   63[BANK0 ] int 
  4669 ;; Auto vars:     Size  Location     Type
  4670 ;;  buf            16    0[BANK1 ] unsigned char [16]
  4671 ;; Return value:  Size  Location     Type
  4672 ;;                  1    wreg      void 
  4673 ;; Registers used:
  4674 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4675 ;; Tracked objects:
  4676 ;;		On entry : 0/0
  4677 ;;		On exit  : 0/0
  4678 ;;		Unchanged: 0/0
  4679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4680 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4681 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4683 ;;      Totals:         0       4      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4684 ;;Total ram usage:       20 bytes
  4685 ;; Hardware stack levels used: 1
  4686 ;; Hardware stack levels required when called: 9
  4687 ;; This function calls:
  4688 ;;		_Lcd_Write_String
  4689 ;;		_sprintf
  4690 ;; This function is called by:
  4691 ;;		_calibrate
  4692 ;; This function uses a non-reentrant model
  4693 ;;
  4694                           
  4695     144C                     _Lcd_Write_Padded_Integer:	
  4696                           ;psect for function _Lcd_Write_Padded_Integer
  4697                           
  4698     144C                     l3259:	
  4699                           ;incstack = 0
  4700                           ; Regs used in _Lcd_Write_Padded_Integer: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4701                           
  4702                           
  4703                           ;SC1601_LCD.c: 313: void Lcd_Write_Padded_Integer(int num, int width);SC1601_LCD.c: 314:
      +                           {;SC1601_LCD.c: 315:     char buf[16];;SC1601_LCD.c: 316:     sprintf(buf, "%0*d", widt
      +                          h, num);
  4704     144C  3093               	movlw	low (STR_9| (0+32768))
  4705     144D  0020               	movlb	0	; select bank0
  4706     144E  00C9               	movwf	sprintf@fmt
  4707     144F  3098               	movlw	high (STR_9| (0+32768))
  4708     1450  00CA               	movwf	sprintf@fmt+1
  4709     1451  0860               	movf	Lcd_Write_Padded_Integer@width+1,w
  4710     1452  00CC               	movwf	?_sprintf+3
  4711     1453  085F               	movf	Lcd_Write_Padded_Integer@width,w
  4712     1454  00CB               	movwf	?_sprintf+2
  4713     1455  085E               	movf	Lcd_Write_Padded_Integer@num+1,w
  4714     1456  00CE               	movwf	?_sprintf+5
  4715     1457  085D               	movf	Lcd_Write_Padded_Integer@num,w
  4716     1458  00CD               	movwf	?_sprintf+4
  4717     1459  30A0               	movlw	(low (Lcd_Write_Padded_Integer@buf| 0))& (0+255)
  4718     145A  3194  249D  3194   	fcall	_sprintf
  4719     145D                     l3261:
  4720                           
  4721                           ;SC1601_LCD.c: 317:     Lcd_Write_String(buf);
  4722     145D  30A0               	movlw	low Lcd_Write_Padded_Integer@buf
  4723     145E  00F4               	movwf	Lcd_Write_String@str
  4724     145F  3000               	movlw	high Lcd_Write_Padded_Integer@buf
  4725     1460  00F5               	movwf	Lcd_Write_String@str+1
  4726     1461  3194  2404  3194   	fcall	_Lcd_Write_String
  4727     1464                     l191:
  4728     1464  0008               	return
  4729     1465                     __end_of_Lcd_Write_Padded_Integer:
  4730                           
  4731                           	psect	text7
  4732     149D                     __ptext7:	
  4733 ;; *************** function _sprintf *****************
  4734 ;; Defined at:
  4735 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
  4736 ;; Parameters:    Size  Location     Type
  4737 ;;  s               1    wreg     PTR unsigned char 
  4738 ;;		 -> Lcd_Display_Battery@buf(5), Lcd_Write_Padded_Integer@buf(16), 
  4739 ;;  fmt             2   41[BANK0 ] PTR const unsigned char 
  4740 ;;		 -> STR_11(5), STR_9(5), 
  4741 ;; Auto vars:     Size  Location     Type
  4742 ;;  s               1   49[BANK0 ] PTR unsigned char 
  4743 ;;		 -> Lcd_Display_Battery@buf(5), Lcd_Write_Padded_Integer@buf(16), 
  4744 ;;  f              11   50[BANK0 ] struct _IO_FILE
  4745 ;;  ret             2    0        int 
  4746 ;;  ap              1   48[BANK0 ] PTR void [1]
  4747 ;;		 -> ?_sprintf(2), 
  4748 ;; Return value:  Size  Location     Type
  4749 ;;                  2   41[BANK0 ] int 
  4750 ;; Registers used:
  4751 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4752 ;; Tracked objects:
  4753 ;;		On entry : 0/0
  4754 ;;		On exit  : 0/0
  4755 ;;		Unchanged: 0/0
  4756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4757 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4758 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4759 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4760 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4761 ;;Total ram usage:       20 bytes
  4762 ;; Hardware stack levels used: 1
  4763 ;; Hardware stack levels required when called: 8
  4764 ;; This function calls:
  4765 ;;		_vfprintf
  4766 ;; This function is called by:
  4767 ;;		_Lcd_Write_Padded_Integer
  4768 ;;		_Lcd_Display_Battery
  4769 ;; This function uses a non-reentrant model
  4770 ;;
  4771                           
  4772     149D                     _sprintf:	
  4773                           ;psect for function _sprintf
  4774                           
  4775                           
  4776                           ;incstack = 0
  4777                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4778                           ;sprintf@s stored from wreg
  4779     149D  0020               	movlb	0	; select bank0
  4780     149E  00D1               	movwf	sprintf@s
  4781     149F                     l2975:
  4782     149F  304B               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  4783     14A0  00D0               	movwf	sprintf@ap
  4784     14A1  0851               	movf	sprintf@s,w
  4785     14A2  00D2               	movwf	sprintf@f
  4786     14A3                     l2977:
  4787     14A3  01D4               	clrf	sprintf@f+2
  4788     14A4  01D5               	clrf	sprintf@f+3
  4789     14A5                     l2979:
  4790     14A5  01DB               	clrf	sprintf@f+9
  4791     14A6  01DC               	clrf	sprintf@f+10
  4792     14A7                     l2981:
  4793     14A7  084A               	movf	sprintf@fmt+1,w
  4794     14A8  00C3               	movwf	vfprintf@fmt+1
  4795     14A9  0849               	movf	sprintf@fmt,w
  4796     14AA  00C2               	movwf	vfprintf@fmt
  4797     14AB  3050               	movlw	(low (sprintf@ap| 0))& (0+255)
  4798     14AC  00C4               	movwf	vfprintf@ap
  4799     14AD  3052               	movlw	(low (sprintf@f| 0))& (0+255)
  4800     14AE  3194  2481  3194   	fcall	_vfprintf
  4801     14B1                     l2983:
  4802     14B1  0020               	movlb	0	; select bank0
  4803     14B2  0854               	movf	sprintf@f+2,w
  4804     14B3  0751               	addwf	sprintf@s,w
  4805     14B4  00CF               	movwf	??_sprintf
  4806     14B5  084F               	movf	??_sprintf,w
  4807     14B6  0086               	movwf	6
  4808     14B7  0187               	clrf	7
  4809     14B8  0181               	clrf	1
  4810     14B9                     l870:
  4811     14B9  0008               	return
  4812     14BA                     __end_of_sprintf:
  4813                           
  4814                           	psect	text8
  4815     1481                     __ptext8:	
  4816 ;; *************** function _vfprintf *****************
  4817 ;; Defined at:
  4818 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  4819 ;; Parameters:    Size  Location     Type
  4820 ;;  fp              1    wreg     PTR struct _IO_FILE
  4821 ;;		 -> sprintf@f(11), 
  4822 ;;  fmt             2   34[BANK0 ] PTR const unsigned char 
  4823 ;;		 -> STR_11(5), STR_9(5), 
  4824 ;;  ap              1   36[BANK0 ] PTR PTR void 
  4825 ;;		 -> sprintf@ap(1), 
  4826 ;; Auto vars:     Size  Location     Type
  4827 ;;  fp              1   38[BANK0 ] PTR struct _IO_FILE
  4828 ;;		 -> sprintf@f(11), 
  4829 ;;  cfmt            2   39[BANK0 ] PTR unsigned char 
  4830 ;;		 -> STR_11(5), STR_9(5), 
  4831 ;; Return value:  Size  Location     Type
  4832 ;;                  2   34[BANK0 ] int 
  4833 ;; Registers used:
  4834 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4835 ;; Tracked objects:
  4836 ;;		On entry : 0/0
  4837 ;;		On exit  : 0/0
  4838 ;;		Unchanged: 0/0
  4839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4840 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4841 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4842 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4843 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4844 ;;Total ram usage:        7 bytes
  4845 ;; Hardware stack levels used: 1
  4846 ;; Hardware stack levels required when called: 7
  4847 ;; This function calls:
  4848 ;;		_vfpfcnvrt
  4849 ;; This function is called by:
  4850 ;;		_sprintf
  4851 ;; This function uses a non-reentrant model
  4852 ;;
  4853                           
  4854     1481                     _vfprintf:	
  4855                           ;psect for function _vfprintf
  4856                           
  4857                           
  4858                           ;incstack = 0
  4859                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4860                           ;vfprintf@fp stored from wreg
  4861     1481  0020               	movlb	0	; select bank0
  4862     1482  00C6               	movwf	vfprintf@fp
  4863     1483                     l2923:
  4864                           
  4865                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  4866     1483  0843               	movf	vfprintf@fmt+1,w
  4867     1484  00C8               	movwf	vfprintf@cfmt+1
  4868     1485  0842               	movf	vfprintf@fmt,w
  4869     1486  00C7               	movwf	vfprintf@cfmt
  4870                           
  4871                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  4872     1487  2C90               	goto	l2927
  4873     1488                     l2925:
  4874                           
  4875                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  4876     1488  3047               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  4877     1489  00B4               	movwf	vfpfcnvrt@fmt
  4878     148A  0844               	movf	vfprintf@ap,w
  4879     148B  00B5               	movwf	vfpfcnvrt@ap
  4880     148C  0846               	movf	vfprintf@fp,w
  4881     148D  318A  2265  3194   	fcall	_vfpfcnvrt
  4882     1490                     l2927:
  4883                           
  4884                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  4885     1490  0020               	movlb	0	; select bank0
  4886     1491  0847               	movf	vfprintf@cfmt,w
  4887     1492  0084               	movwf	4
  4888     1493  0848               	movf	vfprintf@cfmt+1,w
  4889     1494  0085               	movwf	5
  4890     1495  0012               	moviw fsr0++
  4891     1496  1D03               	btfss	3,2
  4892     1497  2C99               	goto	u3541
  4893     1498  2C9A               	goto	u3540
  4894     1499                     u3541:
  4895     1499  2C88               	goto	l2925
  4896     149A                     u3540:
  4897     149A                     l2929:
  4898                           
  4899                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  4900     149A  01C2               	clrf	?_vfprintf
  4901     149B  01C3               	clrf	?_vfprintf+1
  4902     149C                     l941:
  4903     149C  0008               	return
  4904     149D                     __end_of_vfprintf:
  4905                           
  4906                           	psect	text9
  4907     0A65                     __ptext9:	
  4908 ;; *************** function _vfpfcnvrt *****************
  4909 ;; Defined at:
  4910 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  4911 ;; Parameters:    Size  Location     Type
  4912 ;;  fp              1    wreg     PTR struct _IO_FILE
  4913 ;;		 -> sprintf@f(11), 
  4914 ;;  fmt             1   20[BANK0 ] PTR PTR unsigned char 
  4915 ;;		 -> vfprintf@cfmt(2), 
  4916 ;;  ap              1   21[BANK0 ] PTR PTR void 
  4917 ;;		 -> sprintf@ap(1), 
  4918 ;; Auto vars:     Size  Location     Type
  4919 ;;  fp              1   33[BANK0 ] PTR struct _IO_FILE
  4920 ;;		 -> sprintf@f(11), 
  4921 ;;  convarg         4   26[BANK0 ] struct .
  4922 ;;  cp              2   31[BANK0 ] PTR unsigned char 
  4923 ;;		 -> STR_11(5), STR_9(5), 
  4924 ;;  done            1   30[BANK0 ] _Bool 
  4925 ;;  c               1    0        unsigned char 
  4926 ;; Return value:  Size  Location     Type
  4927 ;;                  1    wreg      void 
  4928 ;; Registers used:
  4929 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4930 ;; Tracked objects:
  4931 ;;		On entry : 0/0
  4932 ;;		On exit  : 0/0
  4933 ;;		Unchanged: 0/0
  4934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4935 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4936 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4937 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4938 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4939 ;;Total ram usage:       14 bytes
  4940 ;; Hardware stack levels used: 1
  4941 ;; Hardware stack levels required when called: 6
  4942 ;; This function calls:
  4943 ;;		_dtoa
  4944 ;;		_fputc
  4945 ;;		_read_prec_or_width
  4946 ;; This function is called by:
  4947 ;;		_vfprintf
  4948 ;; This function uses a non-reentrant model
  4949 ;;
  4950                           
  4951     0A65                     _vfpfcnvrt:	
  4952                           ;psect for function _vfpfcnvrt
  4953                           
  4954                           
  4955                           ;incstack = 0
  4956                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4957                           ;vfpfcnvrt@fp stored from wreg
  4958     0A65  0020               	movlb	0	; select bank0
  4959     0A66  00C1               	movwf	vfpfcnvrt@fp
  4960     0A67                     l2649:
  4961                           
  4962                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  4963     0A67  0834               	movf	vfpfcnvrt@fmt,w
  4964     0A68  0086               	movwf	6
  4965     0A69  0187               	clrf	7
  4966     0A6A  3F40               	moviw [0]fsr1
  4967     0A6B  00B6               	movwf	??_vfpfcnvrt
  4968     0A6C  3F41               	moviw [1]fsr1
  4969     0A6D  00B7               	movwf	??_vfpfcnvrt+1
  4970     0A6E  0836               	movf	??_vfpfcnvrt,w
  4971     0A6F  0084               	movwf	4
  4972     0A70  0837               	movf	??_vfpfcnvrt+1,w
  4973     0A71  0085               	movwf	5
  4974     0A72  0012               	moviw fsr0++
  4975     0A73  3A25               	xorlw	37
  4976     0A74  1D03               	btfss	3,2
  4977     0A75  2A77               	goto	u3011
  4978     0A76  2A78               	goto	u3010
  4979     0A77                     u3011:
  4980     0A77  2B2E               	goto	l2701
  4981     0A78                     u3010:
  4982     0A78                     l2651:
  4983                           
  4984                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  4985     0A78  0834               	movf	vfpfcnvrt@fmt,w
  4986     0A79  0086               	movwf	6
  4987     0A7A  0187               	clrf	7
  4988     0A7B  3001               	movlw	1
  4989     0A7C  0781               	addwf	1,f
  4990     0A7D  3141               	addfsr 1,1
  4991     0A7E  1803               	skipnc
  4992     0A7F  0A81               	incf	1,f
  4993     0A80                     l2653:
  4994                           
  4995                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  4996     0A80  01E9               	clrf	_width
  4997     0A81  01EA               	clrf	_width+1
  4998     0A82  1003               	clrc
  4999     0A83  3000               	movlw	0
  5000     0A84  1803               	btfsc	3,0
  5001     0A85  3001               	movlw	1
  5002     0A86  00ED               	movwf	_flags
  5003     0A87                     l2655:
  5004                           
  5005                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  5006     0A87  30FF               	movlw	255
  5007     0A88  00EB               	movwf	_prec
  5008     0A89  30FF               	movlw	255
  5009     0A8A  00EC               	movwf	_prec+1
  5010     0A8B                     l2657:
  5011                           
  5012                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  5013     0A8B  01BE               	clrf	vfpfcnvrt@done
  5014                           
  5015                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  5016     0A8C  2AAA               	goto	l2665
  5017     0A8D                     l926:	
  5018                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1219:            
      +                               case '0' :
  5019                           
  5020                           
  5021                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  5022     0A8D  14ED               	bsf	_flags,1
  5023     0A8E                     l2659:
  5024                           
  5025                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  5026     0A8E  0834               	movf	vfpfcnvrt@fmt,w
  5027     0A8F  0086               	movwf	6
  5028     0A90  0187               	clrf	7
  5029     0A91  3001               	movlw	1
  5030     0A92  0781               	addwf	1,f
  5031     0A93  3141               	addfsr 1,1
  5032     0A94  1803               	skipnc
  5033     0A95  0A81               	incf	1,f
  5034                           
  5035                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  5036     0A96  2AAA               	goto	l2665
  5037     0A97                     l928:	
  5038                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1242:            
      +                               default:
  5039                           
  5040                           
  5041                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  5042     0A97  01BE               	clrf	vfpfcnvrt@done
  5043     0A98  0ABE               	incf	vfpfcnvrt@done,f
  5044                           
  5045                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  5046     0A99  2AAA               	goto	l2665
  5047     0A9A                     l2663:
  5048     0A9A  0834               	movf	vfpfcnvrt@fmt,w
  5049     0A9B  0086               	movwf	6
  5050     0A9C  0187               	clrf	7
  5051     0A9D  3F40               	moviw [0]fsr1
  5052     0A9E  00B6               	movwf	??_vfpfcnvrt
  5053     0A9F  3F41               	moviw [1]fsr1
  5054     0AA0  00B7               	movwf	??_vfpfcnvrt+1
  5055     0AA1  0836               	movf	??_vfpfcnvrt,w
  5056     0AA2  0084               	movwf	4
  5057     0AA3  0837               	movf	??_vfpfcnvrt+1,w
  5058     0AA4  0085               	movwf	5
  5059     0AA5  0800               	movf	0,w	;code access
  5060                           
  5061                           ; Switch size 1, requested type "simple"
  5062                           ; Number of cases is 1, Range of values is 48 to 48
  5063                           ; switch strategies available:
  5064                           ; Name         Instructions Cycles
  5065                           ; simple_byte            4     3 (average)
  5066                           ; direct_byte           11     9 (fixed)
  5067                           ; jumptable            263     9 (fixed)
  5068                           ;	Chosen strategy is simple_byte
  5069     0AA6  3A30               	xorlw	48	; case 48
  5070     0AA7  1903               	skipnz
  5071     0AA8  2A8D               	goto	l926
  5072     0AA9  2A97               	goto	l928
  5073     0AAA                     l2665:
  5074                           
  5075                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  5076     0AAA  083E               	movf	vfpfcnvrt@done,w
  5077     0AAB  1903               	btfsc	3,2
  5078     0AAC  2AAE               	goto	u3021
  5079     0AAD  2AAF               	goto	u3020
  5080     0AAE                     u3021:
  5081     0AAE  2A9A               	goto	l2663
  5082     0AAF                     u3020:
  5083     0AAF                     l2667:
  5084                           
  5085                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  5086     0AAF  0835               	movf	vfpfcnvrt@ap,w
  5087     0AB0  00F6               	movwf	read_prec_or_width@ap
  5088     0AB1  0834               	movf	vfpfcnvrt@fmt,w
  5089     0AB2  3197  27A0  318A   	fcall	_read_prec_or_width
  5090     0AB5  0877               	movf	?_read_prec_or_width+1,w
  5091     0AB6  0020               	movlb	0	; select bank0
  5092     0AB7  00EA               	movwf	_width+1
  5093     0AB8  0876               	movf	?_read_prec_or_width,w
  5094     0AB9  00E9               	movwf	_width
  5095     0ABA                     l2669:
  5096                           
  5097                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  5098     0ABA  1FEA               	btfss	_width+1,7
  5099     0ABB  2ABD               	goto	u3031
  5100     0ABC  2ABE               	goto	u3030
  5101     0ABD                     u3031:
  5102     0ABD  2AC4               	goto	l2675
  5103     0ABE                     u3030:
  5104     0ABE                     l2671:
  5105                           
  5106                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  5107     0ABE  146D               	bsf	_flags,0
  5108     0ABF                     l2673:
  5109                           
  5110                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  5111     0ABF  09E9               	comf	_width,f
  5112     0AC0  09EA               	comf	_width+1,f
  5113     0AC1  0AE9               	incf	_width,f
  5114     0AC2  1903               	skipnz
  5115     0AC3  0AEA               	incf	_width+1,f
  5116     0AC4                     l2675:
  5117                           
  5118                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  5119     0AC4  0834               	movf	vfpfcnvrt@fmt,w
  5120     0AC5  0086               	movwf	6
  5121     0AC6  0187               	clrf	7
  5122     0AC7  3F40               	moviw [0]fsr1
  5123     0AC8  00BF               	movwf	vfpfcnvrt@cp
  5124     0AC9  3F41               	moviw [1]fsr1
  5125     0ACA  00C0               	movwf	vfpfcnvrt@cp+1
  5126     0ACB                     l2677:
  5127                           
  5128                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  5129     0ACB  083F               	movf	vfpfcnvrt@cp,w
  5130     0ACC  0084               	movwf	4
  5131     0ACD  0840               	movf	vfpfcnvrt@cp+1,w
  5132     0ACE  0085               	movwf	5
  5133     0ACF  0012               	moviw fsr0++
  5134     0AD0  3A64               	xorlw	100
  5135     0AD1  1903               	btfsc	3,2
  5136     0AD2  2AD4               	goto	u3041
  5137     0AD3  2AD5               	goto	u3040
  5138     0AD4                     u3041:
  5139     0AD4  2ADF               	goto	l2681
  5140     0AD5                     u3040:
  5141     0AD5                     l2679:
  5142     0AD5  083F               	movf	vfpfcnvrt@cp,w
  5143     0AD6  0084               	movwf	4
  5144     0AD7  0840               	movf	vfpfcnvrt@cp+1,w
  5145     0AD8  0085               	movwf	5
  5146     0AD9  0012               	moviw fsr0++
  5147     0ADA  3A69               	xorlw	105
  5148     0ADB  1D03               	btfss	3,2
  5149     0ADC  2ADE               	goto	u3051
  5150     0ADD  2ADF               	goto	u3050
  5151     0ADE                     u3051:
  5152     0ADE  2B01               	goto	l2689
  5153     0ADF                     u3050:
  5154     0ADF                     l2681:
  5155                           
  5156                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  5157     0ADF  0835               	movf	vfpfcnvrt@ap,w
  5158     0AE0  0086               	movwf	6
  5159     0AE1  0187               	clrf	7
  5160     0AE2  0801               	movf	1,w
  5161     0AE3  0084               	movwf	4
  5162     0AE4  0185               	clrf	5
  5163     0AE5  3002               	movlw	2
  5164     0AE6  0781               	addwf	1,f
  5165     0AE7  3F00               	moviw [0]fsr0
  5166     0AE8  00BA               	movwf	vfpfcnvrt@convarg
  5167     0AE9  3F01               	moviw [1]fsr0
  5168     0AEA  00BB               	movwf	vfpfcnvrt@convarg+1
  5169     0AEB                     l2683:
  5170                           
  5171                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  5172     0AEB  083F               	movf	vfpfcnvrt@cp,w
  5173     0AEC  3E01               	addlw	1
  5174     0AED  00B6               	movwf	??_vfpfcnvrt
  5175     0AEE  3000               	movlw	0
  5176     0AEF  3D40               	addwfc	vfpfcnvrt@cp+1,w
  5177     0AF0  00B7               	movwf	??_vfpfcnvrt+1
  5178     0AF1  0834               	movf	vfpfcnvrt@fmt,w
  5179     0AF2  0086               	movwf	6
  5180     0AF3  0187               	clrf	7
  5181     0AF4  0836               	movf	??_vfpfcnvrt,w
  5182     0AF5  3FC0               	movwi [0]fsr1
  5183     0AF6  0837               	movf	??_vfpfcnvrt+1,w
  5184     0AF7  3FC1               	movwi [1]fsr1
  5185     0AF8                     l2685:
  5186                           
  5187                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  5188     0AF8  083B               	movf	vfpfcnvrt@convarg+1,w
  5189     0AF9  00A9               	movwf	dtoa@d+1
  5190     0AFA  083A               	movf	vfpfcnvrt@convarg,w
  5191     0AFB  00A8               	movwf	dtoa@d
  5192     0AFC  0841               	movf	vfpfcnvrt@fp,w
  5193     0AFD  3189  21B9  318A   	fcall	_dtoa
  5194     0B00  2B46               	goto	l934
  5195     0B01                     l2689:
  5196                           
  5197                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1798:         if 
      +                          ((*fmt)[0] == '%') {
  5198     0B01  0834               	movf	vfpfcnvrt@fmt,w
  5199     0B02  0086               	movwf	6
  5200     0B03  0187               	clrf	7
  5201     0B04  3F40               	moviw [0]fsr1
  5202     0B05  00B6               	movwf	??_vfpfcnvrt
  5203     0B06  3F41               	moviw [1]fsr1
  5204     0B07  00B7               	movwf	??_vfpfcnvrt+1
  5205     0B08  0836               	movf	??_vfpfcnvrt,w
  5206     0B09  0084               	movwf	4
  5207     0B0A  0837               	movf	??_vfpfcnvrt+1,w
  5208     0B0B  0085               	movwf	5
  5209     0B0C  0012               	moviw fsr0++
  5210     0B0D  3A25               	xorlw	37
  5211     0B0E  1D03               	btfss	3,2
  5212     0B0F  2B11               	goto	u3061
  5213     0B10  2B12               	goto	u3060
  5214     0B11                     u3061:
  5215     0B11  2B24               	goto	l2697
  5216     0B12                     u3060:
  5217     0B12                     l2691:
  5218                           
  5219                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1799:            
      +                           ++*fmt;
  5220     0B12  0834               	movf	vfpfcnvrt@fmt,w
  5221     0B13  0086               	movwf	6
  5222     0B14  0187               	clrf	7
  5223     0B15  3001               	movlw	1
  5224     0B16  0781               	addwf	1,f
  5225     0B17  3141               	addfsr 1,1
  5226     0B18  1803               	skipnc
  5227     0B19  0A81               	incf	1,f
  5228     0B1A                     l2693:
  5229                           
  5230                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1800:            
      +                           fputc((int)'%', fp);
  5231     0B1A  3025               	movlw	37
  5232     0B1B  00F0               	movwf	fputc@c
  5233     0B1C  3000               	movlw	0
  5234     0B1D  00F1               	movwf	fputc@c+1
  5235     0B1E  0841               	movf	vfpfcnvrt@fp,w
  5236     0B1F  00F2               	movwf	fputc@fp
  5237     0B20  3196  264E  318A   	fcall	_fputc
  5238     0B23  2B46               	goto	l934
  5239     0B24                     l2697:
  5240                           
  5241                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  5242     0B24  0020               	movlb	0	; select bank0
  5243     0B25  0834               	movf	vfpfcnvrt@fmt,w
  5244     0B26  0086               	movwf	6
  5245     0B27  0187               	clrf	7
  5246     0B28  3001               	movlw	1
  5247     0B29  0781               	addwf	1,f
  5248     0B2A  3141               	addfsr 1,1
  5249     0B2B  1803               	skipnc
  5250     0B2C  0A81               	incf	1,f
  5251     0B2D  2B46               	goto	l934
  5252     0B2E                     l2701:
  5253                           
  5254                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  5255     0B2E  0834               	movf	vfpfcnvrt@fmt,w
  5256     0B2F  0086               	movwf	6
  5257     0B30  0187               	clrf	7
  5258     0B31  3F40               	moviw [0]fsr1
  5259     0B32  00B6               	movwf	??_vfpfcnvrt
  5260     0B33  3F41               	moviw [1]fsr1
  5261     0B34  00B7               	movwf	??_vfpfcnvrt+1
  5262     0B35  0836               	movf	??_vfpfcnvrt,w
  5263     0B36  0084               	movwf	4
  5264     0B37  0837               	movf	??_vfpfcnvrt+1,w
  5265     0B38  0085               	movwf	5
  5266     0B39  0800               	movf	0,w	;code access
  5267     0B3A  00B8               	movwf	??_vfpfcnvrt+2
  5268     0B3B  01B9               	clrf	??_vfpfcnvrt+3
  5269     0B3C  0838               	movf	??_vfpfcnvrt+2,w
  5270     0B3D  00F0               	movwf	fputc@c
  5271     0B3E  0839               	movf	??_vfpfcnvrt+3,w
  5272     0B3F  00F1               	movwf	fputc@c+1
  5273     0B40  0841               	movf	vfpfcnvrt@fp,w
  5274     0B41  00F2               	movwf	fputc@fp
  5275     0B42  3196  264E  318A   	fcall	_fputc
  5276     0B45  2B24               	goto	l2697
  5277     0B46                     l934:
  5278     0B46  0008               	return
  5279     0B47                     __end_of_vfpfcnvrt:
  5280                           
  5281                           	psect	text10
  5282     17A0                     __ptext10:	
  5283 ;; *************** function _read_prec_or_width *****************
  5284 ;; Defined at:
  5285 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  5286 ;; Parameters:    Size  Location     Type
  5287 ;;  fmt             1    wreg     PTR PTR const unsigned c
  5288 ;;		 -> vfprintf@cfmt(2), 
  5289 ;;  ap              1    6[COMMON] PTR PTR void [1]
  5290 ;;		 -> sprintf@ap(1), 
  5291 ;; Auto vars:     Size  Location     Type
  5292 ;;  fmt             1    3[BANK0 ] PTR PTR const unsigned c
  5293 ;;		 -> vfprintf@cfmt(2), 
  5294 ;;  c               1    0[BANK0 ] unsigned char 
  5295 ;;  n               2    1[BANK0 ] int 
  5296 ;; Return value:  Size  Location     Type
  5297 ;;                  2    6[COMMON] int 
  5298 ;; Registers used:
  5299 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5300 ;; Tracked objects:
  5301 ;;		On entry : 0/0
  5302 ;;		On exit  : 0/0
  5303 ;;		Unchanged: 0/0
  5304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5305 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5306 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5307 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5308 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5309 ;;Total ram usage:        9 bytes
  5310 ;; Hardware stack levels used: 1
  5311 ;; Hardware stack levels required when called: 2
  5312 ;; This function calls:
  5313 ;;		___wmul
  5314 ;; This function is called by:
  5315 ;;		_vfpfcnvrt
  5316 ;; This function uses a non-reentrant model
  5317 ;;
  5318                           
  5319     17A0                     _read_prec_or_width:	
  5320                           ;psect for function _read_prec_or_width
  5321                           
  5322                           
  5323                           ;incstack = 0
  5324                           ; Regs used in _read_prec_or_width: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5325                           ;read_prec_or_width@fmt stored from wreg
  5326     17A0  0020               	movlb	0	; select bank0
  5327     17A1  00A3               	movwf	read_prec_or_width@fmt
  5328     17A2                     l2617:
  5329                           
  5330                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  5331     17A2  01A1               	clrf	read_prec_or_width@n
  5332     17A3  01A2               	clrf	read_prec_or_width@n+1
  5333     17A4                     l2619:
  5334                           
  5335                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  5336     17A4  0823               	movf	read_prec_or_width@fmt,w
  5337     17A5  0086               	movwf	6
  5338     17A6  0187               	clrf	7
  5339     17A7  3F40               	moviw [0]fsr1
  5340     17A8  00F8               	movwf	??_read_prec_or_width
  5341     17A9  3F41               	moviw [1]fsr1
  5342     17AA  00F9               	movwf	??_read_prec_or_width+1
  5343     17AB  0878               	movf	??_read_prec_or_width,w
  5344     17AC  0084               	movwf	4
  5345     17AD  0879               	movf	??_read_prec_or_width+1,w
  5346     17AE  0085               	movwf	5
  5347     17AF  0012               	moviw fsr0++
  5348     17B0  3A2A               	xorlw	42
  5349     17B1  1D03               	btfss	3,2
  5350     17B2  2FB4               	goto	u2881
  5351     17B3  2FB5               	goto	u2880
  5352     17B4                     u2881:
  5353     17B4  2FE7               	goto	l2629
  5354     17B5                     u2880:
  5355     17B5                     l2621:
  5356                           
  5357                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  5358     17B5  0823               	movf	read_prec_or_width@fmt,w
  5359     17B6  0086               	movwf	6
  5360     17B7  0187               	clrf	7
  5361     17B8  3001               	movlw	1
  5362     17B9  0781               	addwf	1,f
  5363     17BA  3141               	addfsr 1,1
  5364     17BB  1803               	skipnc
  5365     17BC  0A81               	incf	1,f
  5366     17BD                     l2623:
  5367                           
  5368                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  5369     17BD  0876               	movf	read_prec_or_width@ap,w
  5370     17BE  0086               	movwf	6
  5371     17BF  0187               	clrf	7
  5372     17C0  0801               	movf	1,w
  5373     17C1  0084               	movwf	4
  5374     17C2  0185               	clrf	5
  5375     17C3  3002               	movlw	2
  5376     17C4  0781               	addwf	1,f
  5377     17C5  3F00               	moviw [0]fsr0
  5378     17C6  00A1               	movwf	read_prec_or_width@n
  5379     17C7  3F01               	moviw [1]fsr0
  5380     17C8  00A2               	movwf	read_prec_or_width@n+1
  5381                           
  5382                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  5383     17C9  2FFB               	goto	l2631
  5384     17CA                     l2625:
  5385                           
  5386                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  5387     17CA  0820               	movf	read_prec_or_width@c,w
  5388     17CB  00F8               	movwf	??_read_prec_or_width
  5389     17CC  01F9               	clrf	??_read_prec_or_width+1
  5390     17CD  0822               	movf	read_prec_or_width@n+1,w
  5391     17CE  00F1               	movwf	___wmul@multiplier+1
  5392     17CF  0821               	movf	read_prec_or_width@n,w
  5393     17D0  00F0               	movwf	___wmul@multiplier
  5394     17D1  300A               	movlw	10
  5395     17D2  00F2               	movwf	___wmul@multiplicand
  5396     17D3  3000               	movlw	0
  5397     17D4  00F3               	movwf	___wmul@multiplicand+1
  5398     17D5  3194  24BA  3197   	fcall	___wmul
  5399     17D8  0878               	movf	??_read_prec_or_width,w
  5400     17D9  0770               	addwf	?___wmul,w
  5401     17DA  0020               	movlb	0	; select bank0
  5402     17DB  00A1               	movwf	read_prec_or_width@n
  5403     17DC  0879               	movf	??_read_prec_or_width+1,w
  5404     17DD  3D71               	addwfc	?___wmul+1,w
  5405     17DE  00A2               	movwf	read_prec_or_width@n+1
  5406     17DF                     l2627:
  5407                           
  5408                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  5409     17DF  0823               	movf	read_prec_or_width@fmt,w
  5410     17E0  0086               	movwf	6
  5411     17E1  0187               	clrf	7
  5412     17E2  3001               	movlw	1
  5413     17E3  0781               	addwf	1,f
  5414     17E4  3141               	addfsr 1,1
  5415     17E5  1803               	skipnc
  5416     17E6  0A81               	incf	1,f
  5417     17E7                     l2629:
  5418                           
  5419                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  5420     17E7  0823               	movf	read_prec_or_width@fmt,w
  5421     17E8  0086               	movwf	6
  5422     17E9  0187               	clrf	7
  5423     17EA  3F40               	moviw [0]fsr1
  5424     17EB  00F8               	movwf	??_read_prec_or_width
  5425     17EC  3F41               	moviw [1]fsr1
  5426     17ED  00F9               	movwf	??_read_prec_or_width+1
  5427     17EE  0878               	movf	??_read_prec_or_width,w
  5428     17EF  0084               	movwf	4
  5429     17F0  0879               	movf	??_read_prec_or_width+1,w
  5430     17F1  0085               	movwf	5
  5431     17F2  0800               	movf	0,w	;code access
  5432     17F3  3ED0               	addlw	208
  5433     17F4  00A0               	movwf	read_prec_or_width@c
  5434     17F5  300A               	movlw	10
  5435     17F6  0220               	subwf	read_prec_or_width@c,w
  5436     17F7  1C03               	skipc
  5437     17F8  2FFA               	goto	u2891
  5438     17F9  2FFB               	goto	u2890
  5439     17FA                     u2891:
  5440     17FA  2FCA               	goto	l2625
  5441     17FB                     u2890:
  5442     17FB                     l2631:
  5443                           
  5444                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  5445     17FB  0822               	movf	read_prec_or_width@n+1,w
  5446     17FC  00F7               	movwf	?_read_prec_or_width+1
  5447     17FD  0821               	movf	read_prec_or_width@n,w
  5448     17FE  00F6               	movwf	?_read_prec_or_width
  5449     17FF                     l919:
  5450     17FF  0008               	return
  5451     1800                     __end_of_read_prec_or_width:
  5452                           
  5453                           	psect	text11
  5454     09B9                     __ptext11:	
  5455 ;; *************** function _dtoa *****************
  5456 ;; Defined at:
  5457 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  5458 ;; Parameters:    Size  Location     Type
  5459 ;;  fp              1    wreg     PTR struct _IO_FILE
  5460 ;;		 -> sprintf@f(11), 
  5461 ;;  d               2    8[BANK0 ] int 
  5462 ;; Auto vars:     Size  Location     Type
  5463 ;;  fp              1   13[BANK0 ] PTR struct _IO_FILE
  5464 ;;		 -> sprintf@f(11), 
  5465 ;;  i               2   18[BANK0 ] int 
  5466 ;;  w               2   15[BANK0 ] int 
  5467 ;;  s               1   17[BANK0 ] unsigned char 
  5468 ;;  p               1   14[BANK0 ] _Bool 
  5469 ;; Return value:  Size  Location     Type
  5470 ;;                  1    wreg      void 
  5471 ;; Registers used:
  5472 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5473 ;; Tracked objects:
  5474 ;;		On entry : 0/0
  5475 ;;		On exit  : 0/0
  5476 ;;		Unchanged: 0/0
  5477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5478 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5479 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5480 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5481 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5482 ;;Total ram usage:       12 bytes
  5483 ;; Hardware stack levels used: 1
  5484 ;; Hardware stack levels required when called: 5
  5485 ;; This function calls:
  5486 ;;		___awdiv
  5487 ;;		___awmod
  5488 ;;		_abs
  5489 ;;		_pad
  5490 ;; This function is called by:
  5491 ;;		_vfpfcnvrt
  5492 ;; This function uses a non-reentrant model
  5493 ;;
  5494                           
  5495     09B9                     _dtoa:	
  5496                           ;psect for function _dtoa
  5497                           
  5498                           
  5499                           ;incstack = 0
  5500                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5501                           ;dtoa@fp stored from wreg
  5502     09B9  0020               	movlb	0	; select bank0
  5503     09BA  00AD               	movwf	dtoa@fp
  5504     09BB                     l2571:
  5505                           
  5506                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 52
      +                          0:  _Bool p = 1;
  5507     09BB  01AE               	clrf	dtoa@p
  5508     09BC  0AAE               	incf	dtoa@p,f
  5509     09BD                     l2573:
  5510                           
  5511                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
  5512     09BD  1BA9               	btfsc	dtoa@d+1,7
  5513     09BE  29C0               	goto	u2781
  5514     09BF  29C2               	goto	u2780
  5515     09C0                     u2781:
  5516     09C0  3001               	movlw	1
  5517     09C1  29C3               	goto	u2790
  5518     09C2                     u2780:
  5519     09C2  3000               	movlw	0
  5520     09C3                     u2790:
  5521     09C3  00B1               	movwf	dtoa@s
  5522                           
  5523                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  5524     09C4  086A               	movf	_width+1,w
  5525     09C5  00B0               	movwf	dtoa@w+1
  5526     09C6  0869               	movf	_width,w
  5527     09C7  00AF               	movwf	dtoa@w
  5528     09C8                     l2575:
  5529                           
  5530                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 536:     if (s
  5531     09C8  0831               	movf	dtoa@s,w
  5532     09C9  1903               	btfsc	3,2
  5533     09CA  29CC               	goto	u2801
  5534     09CB  29CD               	goto	u2800
  5535     09CC                     u2801:
  5536     09CC  29E1               	goto	l898
  5537     09CD                     u2800:
  5538     09CD                     l2577:
  5539                           
  5540                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 541:         --w;
  5541     09CD  30FF               	movlw	255
  5542     09CE  07AF               	addwf	dtoa@w,f
  5543     09CF  30FF               	movlw	255
  5544     09D0  3DB0               	addwfc	dtoa@w+1,f
  5545     09D1                     l2579:
  5546                           
  5547                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  5548     09D1  0831               	movf	dtoa@s,w
  5549     09D2  1D03               	btfss	3,2
  5550     09D3  29D5               	goto	u2811
  5551     09D4  29D6               	goto	u2810
  5552     09D5                     u2811:
  5553     09D5  29DB               	goto	l2583
  5554     09D6                     u2810:
  5555     09D6                     l2581:
  5556     09D6  302B               	movlw	43
  5557     09D7  00AB               	movwf	_dtoa$1023
  5558     09D8  3000               	movlw	0
  5559     09D9  00AC               	movwf	_dtoa$1023+1
  5560     09DA  29DF               	goto	l902
  5561     09DB                     l2583:
  5562     09DB  302D               	movlw	45
  5563     09DC  00AB               	movwf	_dtoa$1023
  5564     09DD  3000               	movlw	0
  5565     09DE  00AC               	movwf	_dtoa$1023+1
  5566     09DF                     l902:
  5567     09DF  082B               	movf	_dtoa$1023,w
  5568     09E0  00B1               	movwf	dtoa@s
  5569     09E1                     l898:	
  5570                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 543:     }
  5571                           
  5572                           
  5573                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  5574     09E1  301F               	movlw	31
  5575     09E2  00B2               	movwf	dtoa@i
  5576     09E3  3000               	movlw	0
  5577     09E4  00B3               	movwf	dtoa@i+1
  5578     09E5                     l2585:
  5579                           
  5580                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  5581     09E5  0023               	movlb	3	; select bank3
  5582     09E6  01BF               	clrf	(_dbuf^(0+384)+31)
  5583                           
  5584                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  5585     09E7  2A1C               	goto	l2597
  5586     09E8                     l2587:
  5587                           
  5588                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 564:         --i;
  5589     09E8  30FF               	movlw	255
  5590     09E9  07B2               	addwf	dtoa@i,f
  5591     09EA  30FF               	movlw	255
  5592     09EB  3DB3               	addwfc	dtoa@i+1,f
  5593     09EC                     l2589:
  5594                           
  5595                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  5596     09EC  0832               	movf	dtoa@i,w
  5597     09ED  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5598     09EE  0086               	movwf	6
  5599     09EF  3001               	movlw	1	; select bank3/4
  5600     09F0  0087               	movwf	7
  5601     09F1  300A               	movlw	10
  5602     09F2  00F0               	movwf	___awmod@divisor
  5603     09F3  3000               	movlw	0
  5604     09F4  00F1               	movwf	___awmod@divisor+1
  5605     09F5  0829               	movf	dtoa@d+1,w
  5606     09F6  00F3               	movwf	___awmod@dividend+1
  5607     09F7  0828               	movf	dtoa@d,w
  5608     09F8  00F2               	movwf	___awmod@dividend
  5609     09F9  3196  26EE  3189   	fcall	___awmod
  5610     09FC  0871               	movf	?___awmod+1,w
  5611     09FD  00F8               	movwf	abs@a+1
  5612     09FE  0870               	movf	?___awmod,w
  5613     09FF  00F7               	movwf	abs@a
  5614     0A00  3193  23E0  3189   	fcall	_abs
  5615     0A03  0877               	movf	?_abs,w
  5616     0A04  3E30               	addlw	48
  5617     0A05  0081               	movwf	1
  5618     0A06                     l2591:
  5619                           
  5620                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 569:   p = 0;
  5621     0A06  0020               	movlb	0	; select bank0
  5622     0A07  01AE               	clrf	dtoa@p
  5623     0A08                     l2593:
  5624                           
  5625                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 571:         --w;
  5626     0A08  30FF               	movlw	255
  5627     0A09  07AF               	addwf	dtoa@w,f
  5628     0A0A  30FF               	movlw	255
  5629     0A0B  3DB0               	addwfc	dtoa@w+1,f
  5630     0A0C                     l2595:
  5631                           
  5632                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  5633     0A0C  300A               	movlw	10
  5634     0A0D  00F0               	movwf	___awdiv@divisor
  5635     0A0E  3000               	movlw	0
  5636     0A0F  00F1               	movwf	___awdiv@divisor+1
  5637     0A10  0829               	movf	dtoa@d+1,w
  5638     0A11  00F3               	movwf	___awdiv@dividend+1
  5639     0A12  0828               	movf	dtoa@d,w
  5640     0A13  00F2               	movwf	___awdiv@dividend
  5641     0A14  3197  2741  3189   	fcall	___awdiv
  5642     0A17  0871               	movf	?___awdiv+1,w
  5643     0A18  0020               	movlb	0	; select bank0
  5644     0A19  00A9               	movwf	dtoa@d+1
  5645     0A1A  0870               	movf	?___awdiv,w
  5646     0A1B  00A8               	movwf	dtoa@d
  5647     0A1C                     l2597:
  5648                           
  5649                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  5650     0A1C  0020               	movlb	0	; select bank0
  5651     0A1D  0833               	movf	dtoa@i+1,w
  5652     0A1E  3A80               	xorlw	128
  5653     0A1F  00AA               	movwf	??_dtoa
  5654     0A20  3080               	movlw	128
  5655     0A21  022A               	subwf	??_dtoa,w
  5656     0A22  1D03               	skipz
  5657     0A23  2A26               	goto	u2825
  5658     0A24  3001               	movlw	1
  5659     0A25  0232               	subwf	dtoa@i,w
  5660     0A26                     u2825:
  5661     0A26  1C03               	skipc
  5662     0A27  2A29               	goto	u2821
  5663     0A28  2A2A               	goto	u2820
  5664     0A29                     u2821:
  5665     0A29  2A48               	goto	l2607
  5666     0A2A                     u2820:
  5667     0A2A                     l2599:
  5668     0A2A  0020               	movlb	0	; select bank0
  5669     0A2B  0828               	movf	dtoa@d,w
  5670     0A2C  0429               	iorwf	dtoa@d+1,w
  5671     0A2D  1D03               	btfss	3,2
  5672     0A2E  2A30               	goto	u2831
  5673     0A2F  2A31               	goto	u2830
  5674     0A30                     u2831:
  5675     0A30  29E8               	goto	l2587
  5676     0A31                     u2830:
  5677     0A31                     l2601:
  5678     0A31  082E               	movf	dtoa@p,w
  5679     0A32  1D03               	btfss	3,2
  5680     0A33  2A35               	goto	u2841
  5681     0A34  2A36               	goto	u2840
  5682     0A35                     u2841:
  5683     0A35  29E8               	goto	l2587
  5684     0A36                     u2840:
  5685     0A36                     l2603:
  5686     0A36  0830               	movf	dtoa@w+1,w
  5687     0A37  3A80               	xorlw	128
  5688     0A38  00AA               	movwf	??_dtoa
  5689     0A39  3080               	movlw	128
  5690     0A3A  022A               	subwf	??_dtoa,w
  5691     0A3B  1D03               	skipz
  5692     0A3C  2A3F               	goto	u2855
  5693     0A3D  3001               	movlw	1
  5694     0A3E  022F               	subwf	dtoa@w,w
  5695     0A3F                     u2855:
  5696     0A3F  1C03               	skipc
  5697     0A40  2A42               	goto	u2851
  5698     0A41  2A43               	goto	u2850
  5699     0A42                     u2851:
  5700     0A42  2A48               	goto	l2607
  5701     0A43                     u2850:
  5702     0A43                     l2605:
  5703     0A43  0020               	movlb	0	; select bank0
  5704     0A44  18ED               	btfsc	_flags,1
  5705     0A45  2A47               	goto	u2861
  5706     0A46  2A48               	goto	u2860
  5707     0A47                     u2861:
  5708     0A47  29E8               	goto	l2587
  5709     0A48                     u2860:
  5710     0A48                     l2607:
  5711                           
  5712                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  5713     0A48  0020               	movlb	0	; select bank0
  5714     0A49  0831               	movf	dtoa@s,w
  5715     0A4A  1903               	btfsc	3,2
  5716     0A4B  2A4D               	goto	u2871
  5717     0A4C  2A4E               	goto	u2870
  5718     0A4D                     u2871:
  5719     0A4D  2A59               	goto	l2613
  5720     0A4E                     u2870:
  5721     0A4E                     l2609:
  5722                           
  5723                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 577:         --i;
  5724     0A4E  30FF               	movlw	255
  5725     0A4F  07B2               	addwf	dtoa@i,f
  5726     0A50  30FF               	movlw	255
  5727     0A51  3DB3               	addwfc	dtoa@i+1,f
  5728     0A52                     l2611:
  5729                           
  5730                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  5731     0A52  0832               	movf	dtoa@i,w
  5732     0A53  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5733     0A54  0086               	movwf	6
  5734     0A55  3001               	movlw	1	; select bank3/4
  5735     0A56  0087               	movwf	7
  5736     0A57  0831               	movf	dtoa@s,w
  5737     0A58  0081               	movwf	1
  5738     0A59                     l2613:
  5739                           
  5740                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  5741     0A59  0832               	movf	dtoa@i,w
  5742     0A5A  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5743     0A5B  00FB               	movwf	pad@buf
  5744     0A5C  0830               	movf	dtoa@w+1,w
  5745     0A5D  00FD               	movwf	pad@p+1
  5746     0A5E  082F               	movf	dtoa@w,w
  5747     0A5F  00FC               	movwf	pad@p
  5748     0A60  082D               	movf	dtoa@fp,w
  5749     0A61  3195  25D0  3189   	fcall	_pad
  5750     0A64                     l911:
  5751     0A64  0008               	return
  5752     0A65                     __end_of_dtoa:
  5753                           
  5754                           	psect	text12
  5755     15D0                     __ptext12:	
  5756 ;; *************** function _pad *****************
  5757 ;; Defined at:
  5758 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  5759 ;; Parameters:    Size  Location     Type
  5760 ;;  fp              1    wreg     PTR struct _IO_FILE
  5761 ;;		 -> sprintf@f(11), 
  5762 ;;  buf             1   11[COMMON] PTR unsigned char 
  5763 ;;		 -> dbuf(32), 
  5764 ;;  p               2   12[COMMON] int 
  5765 ;; Auto vars:     Size  Location     Type
  5766 ;;  fp              1    7[BANK0 ] PTR struct _IO_FILE
  5767 ;;		 -> sprintf@f(11), 
  5768 ;;  i               2    5[BANK0 ] int 
  5769 ;; Return value:  Size  Location     Type
  5770 ;;                  1    wreg      void 
  5771 ;; Registers used:
  5772 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5773 ;; Tracked objects:
  5774 ;;		On entry : 0/0
  5775 ;;		On exit  : 0/0
  5776 ;;		Unchanged: 0/0
  5777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5778 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5779 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5780 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5781 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5782 ;;Total ram usage:        7 bytes
  5783 ;; Hardware stack levels used: 1
  5784 ;; Hardware stack levels required when called: 4
  5785 ;; This function calls:
  5786 ;;		_fputc
  5787 ;;		_fputs
  5788 ;; This function is called by:
  5789 ;;		_dtoa
  5790 ;; This function uses a non-reentrant model
  5791 ;;
  5792                           
  5793     15D0                     _pad:	
  5794                           ;psect for function _pad
  5795                           
  5796                           
  5797                           ;incstack = 0
  5798                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5799                           ;pad@fp stored from wreg
  5800     15D0  0020               	movlb	0	; select bank0
  5801     15D1  00A7               	movwf	pad@fp
  5802     15D2                     l2547:
  5803                           
  5804                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
  5805     15D2  1C6D               	btfss	_flags,0
  5806     15D3  2DD5               	goto	u2731
  5807     15D4  2DD6               	goto	u2730
  5808     15D5                     u2731:
  5809     15D5  2DDC               	goto	l2551
  5810     15D6                     u2730:
  5811     15D6                     l2549:
  5812                           
  5813                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  5814     15D6  0827               	movf	pad@fp,w
  5815     15D7  00F8               	movwf	fputs@fp
  5816     15D8  087B               	movf	pad@buf,w
  5817     15D9  3195  253C  3195   	fcall	_fputs
  5818     15DC                     l2551:
  5819                           
  5820                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  5821     15DC  1FFD               	btfss	pad@p+1,7
  5822     15DD  2DDF               	goto	u2741
  5823     15DE  2DE0               	goto	u2740
  5824     15DF                     u2741:
  5825     15DF  2DE2               	goto	l890
  5826     15E0                     u2740:
  5827     15E0                     l2553:
  5828                           
  5829                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  5830     15E0  01FC               	clrf	pad@p
  5831     15E1  01FD               	clrf	pad@p+1
  5832     15E2                     l890:	
  5833                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 207:  }
  5834                           
  5835                           
  5836                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  5837     15E2  0020               	movlb	0	; select bank0
  5838     15E3  01A5               	clrf	pad@i
  5839     15E4  01A6               	clrf	pad@i+1
  5840                           
  5841                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  5842     15E5  2DF5               	goto	l2559
  5843     15E6                     l2555:
  5844                           
  5845                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  5846     15E6  3020               	movlw	32
  5847     15E7  00F0               	movwf	fputc@c
  5848     15E8  3000               	movlw	0
  5849     15E9  00F1               	movwf	fputc@c+1
  5850     15EA  0020               	movlb	0	; select bank0
  5851     15EB  0827               	movf	pad@fp,w
  5852     15EC  00F2               	movwf	fputc@fp
  5853     15ED  3196  264E  3195   	fcall	_fputc
  5854     15F0                     l2557:
  5855                           
  5856                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 211:         ++i;
  5857     15F0  3001               	movlw	1
  5858     15F1  0020               	movlb	0	; select bank0
  5859     15F2  07A5               	addwf	pad@i,f
  5860     15F3  3000               	movlw	0
  5861     15F4  3DA6               	addwfc	pad@i+1,f
  5862     15F5                     l2559:
  5863                           
  5864                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  5865     15F5  0826               	movf	pad@i+1,w
  5866     15F6  3A80               	xorlw	128
  5867     15F7  00A4               	movwf	??_pad
  5868     15F8  087D               	movf	pad@p+1,w
  5869     15F9  3A80               	xorlw	128
  5870     15FA  0224               	subwf	??_pad,w
  5871     15FB  1D03               	skipz
  5872     15FC  2DFF               	goto	u2755
  5873     15FD  087C               	movf	pad@p,w
  5874     15FE  0225               	subwf	pad@i,w
  5875     15FF                     u2755:
  5876     15FF  1C03               	skipc
  5877     1600  2E02               	goto	u2751
  5878     1601  2E03               	goto	u2750
  5879     1602                     u2751:
  5880     1602  2DE6               	goto	l2555
  5881     1603                     u2750:
  5882     1603                     l893:
  5883                           
  5884                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  5885     1603  0020               	movlb	0	; select bank0
  5886     1604  186D               	btfsc	_flags,0
  5887     1605  2E07               	goto	u2761
  5888     1606  2E08               	goto	u2760
  5889     1607                     u2761:
  5890     1607  2E0E               	goto	l895
  5891     1608                     u2760:
  5892     1608                     l2561:
  5893                           
  5894                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  5895     1608  0827               	movf	pad@fp,w
  5896     1609  00F8               	movwf	fputs@fp
  5897     160A  087B               	movf	pad@buf,w
  5898     160B  3195  253C  3195   	fcall	_fputs
  5899     160E                     l895:
  5900     160E  0008               	return
  5901     160F                     __end_of_pad:
  5902                           
  5903                           	psect	text13
  5904     153C                     __ptext13:	
  5905 ;; *************** function _fputs *****************
  5906 ;; Defined at:
  5907 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputs.c"
  5908 ;; Parameters:    Size  Location     Type
  5909 ;;  s               1    wreg     PTR const unsigned char 
  5910 ;;		 -> dbuf(32), 
  5911 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  5912 ;;		 -> sprintf@f(11), 
  5913 ;; Auto vars:     Size  Location     Type
  5914 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  5915 ;;		 -> dbuf(32), 
  5916 ;;  i               2    1[BANK0 ] int 
  5917 ;;  c               1    0[BANK0 ] unsigned char 
  5918 ;; Return value:  Size  Location     Type
  5919 ;;                  2    8[COMMON] int 
  5920 ;; Registers used:
  5921 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5922 ;; Tracked objects:
  5923 ;;		On entry : 0/0
  5924 ;;		On exit  : 0/0
  5925 ;;		Unchanged: 0/0
  5926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5927 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5928 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5929 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5930 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5931 ;;Total ram usage:        7 bytes
  5932 ;; Hardware stack levels used: 1
  5933 ;; Hardware stack levels required when called: 3
  5934 ;; This function calls:
  5935 ;;		_fputc
  5936 ;; This function is called by:
  5937 ;;		_pad
  5938 ;; This function uses a non-reentrant model
  5939 ;;
  5940                           
  5941     153C                     _fputs:	
  5942                           ;psect for function _fputs
  5943                           
  5944                           
  5945                           ;incstack = 0
  5946                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5947                           ;fputs@s stored from wreg
  5948     153C  0020               	movlb	0	; select bank0
  5949     153D  00A3               	movwf	fputs@s
  5950     153E                     l2443:
  5951     153E  01A1               	clrf	fputs@i
  5952     153F  01A2               	clrf	fputs@i+1
  5953     1540  2D52               	goto	l2449
  5954     1541                     l2445:
  5955     1541  0820               	movf	fputs@c,w
  5956     1542  00F9               	movwf	??_fputs
  5957     1543  01FA               	clrf	??_fputs+1
  5958     1544  0879               	movf	??_fputs,w
  5959     1545  00F0               	movwf	fputc@c
  5960     1546  087A               	movf	??_fputs+1,w
  5961     1547  00F1               	movwf	fputc@c+1
  5962     1548  0878               	movf	fputs@fp,w
  5963     1549  00F2               	movwf	fputc@fp
  5964     154A  3196  264E  3195   	fcall	_fputc
  5965     154D                     l2447:
  5966     154D  3001               	movlw	1
  5967     154E  0020               	movlb	0	; select bank0
  5968     154F  07A1               	addwf	fputs@i,f
  5969     1550  3000               	movlw	0
  5970     1551  3DA2               	addwfc	fputs@i+1,f
  5971     1552                     l2449:
  5972     1552  0821               	movf	fputs@i,w
  5973     1553  0723               	addwf	fputs@s,w
  5974     1554  00F9               	movwf	??_fputs
  5975     1555  0879               	movf	??_fputs,w
  5976     1556  0086               	movwf	6
  5977     1557  3001               	movlw	1	; select bank2/3
  5978     1558  0087               	movwf	7
  5979     1559  0801               	movf	1,w
  5980     155A  00A0               	movwf	fputs@c
  5981     155B  0820               	movf	fputs@c,w
  5982     155C  1D03               	btfss	3,2
  5983     155D  2D5F               	goto	u2491
  5984     155E  2D60               	goto	u2490
  5985     155F                     u2491:
  5986     155F  2D41               	goto	l2445
  5987     1560                     u2490:
  5988     1560                     l968:
  5989     1560  0008               	return
  5990     1561                     __end_of_fputs:
  5991                           
  5992                           	psect	text14
  5993     164E                     __ptext14:	
  5994 ;; *************** function _fputc *****************
  5995 ;; Defined at:
  5996 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  5997 ;; Parameters:    Size  Location     Type
  5998 ;;  c               2    0[COMMON] int 
  5999 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  6000 ;;		 -> sprintf@f(11), 
  6001 ;; Auto vars:     Size  Location     Type
  6002 ;;		None
  6003 ;; Return value:  Size  Location     Type
  6004 ;;                  2    0[COMMON] int 
  6005 ;; Registers used:
  6006 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6007 ;; Tracked objects:
  6008 ;;		On entry : 0/0
  6009 ;;		On exit  : 0/0
  6010 ;;		Unchanged: 0/0
  6011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6012 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6014 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6015 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6016 ;;Total ram usage:        8 bytes
  6017 ;; Hardware stack levels used: 1
  6018 ;; Hardware stack levels required when called: 2
  6019 ;; This function calls:
  6020 ;;		_putch
  6021 ;; This function is called by:
  6022 ;;		_pad
  6023 ;;		_vfpfcnvrt
  6024 ;;		_fputs
  6025 ;; This function uses a non-reentrant model
  6026 ;;
  6027                           
  6028     164E                     _fputc:	
  6029                           ;psect for function _fputc
  6030                           
  6031     164E                     l2427:	
  6032                           ;incstack = 0
  6033                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6034                           
  6035     164E  0872               	movf	fputc@fp,w
  6036     164F  1903               	btfsc	3,2
  6037     1650  2E52               	goto	u2451
  6038     1651  2E53               	goto	u2450
  6039     1652                     u2451:
  6040     1652  2E58               	goto	l2431
  6041     1653                     u2450:
  6042     1653                     l2429:
  6043     1653  0872               	movf	fputc@fp,w
  6044     1654  1D03               	btfss	3,2
  6045     1655  2E57               	goto	u2461
  6046     1656  2E58               	goto	u2460
  6047     1657                     u2461:
  6048     1657  2E5D               	goto	l2433
  6049     1658                     u2460:
  6050     1658                     l2431:
  6051     1658  0870               	movf	fputc@c,w
  6052     1659  3187  27FD  3196   	fcall	_putch
  6053     165C  2E9D               	goto	l960
  6054     165D                     l2433:
  6055     165D  0872               	movf	fputc@fp,w
  6056     165E  3E09               	addlw	9
  6057     165F  0086               	movwf	6
  6058     1660  0187               	clrf	7
  6059     1661  0016               	moviw fsr1++
  6060     1662  0401               	iorwf	1,w
  6061     1663  1903               	btfsc	3,2
  6062     1664  2E66               	goto	u2471
  6063     1665  2E67               	goto	u2470
  6064     1666                     u2471:
  6065     1666  2E85               	goto	l2437
  6066     1667                     u2470:
  6067     1667                     l2435:
  6068     1667  0872               	movf	fputc@fp,w
  6069     1668  3E09               	addlw	9
  6070     1669  0086               	movwf	6
  6071     166A  0187               	clrf	7
  6072     166B  3F40               	moviw [0]fsr1
  6073     166C  00F3               	movwf	??_fputc
  6074     166D  3F41               	moviw [1]fsr1
  6075     166E  00F4               	movwf	??_fputc+1
  6076     166F  0872               	movf	fputc@fp,w
  6077     1670  3E02               	addlw	2
  6078     1671  0086               	movwf	6
  6079     1672  0187               	clrf	7
  6080     1673  3F40               	moviw [0]fsr1
  6081     1674  00F5               	movwf	??_fputc+2
  6082     1675  3F41               	moviw [1]fsr1
  6083     1676  00F6               	movwf	??_fputc+3
  6084     1677  0876               	movf	??_fputc+3,w
  6085     1678  3A80               	xorlw	128
  6086     1679  00F7               	movwf	??_fputc+4
  6087     167A  0874               	movf	??_fputc+1,w
  6088     167B  3A80               	xorlw	128
  6089     167C  0277               	subwf	??_fputc+4,w
  6090     167D  1D03               	skipz
  6091     167E  2E81               	goto	u2485
  6092     167F  0873               	movf	??_fputc,w
  6093     1680  0275               	subwf	??_fputc+2,w
  6094     1681                     u2485:
  6095     1681  1803               	skipnc
  6096     1682  2E84               	goto	u2481
  6097     1683  2E85               	goto	u2480
  6098     1684                     u2481:
  6099     1684  2E9D               	goto	l960
  6100     1685                     u2480:
  6101     1685                     l2437:
  6102     1685  0872               	movf	fputc@fp,w
  6103     1686  0086               	movwf	6
  6104     1687  0187               	clrf	7
  6105     1688  0872               	movf	fputc@fp,w
  6106     1689  3E02               	addlw	2
  6107     168A  0084               	movwf	4
  6108     168B  0185               	clrf	5
  6109     168C  0800               	movf	0,w
  6110     168D  0701               	addwf	1,w
  6111     168E  00F3               	movwf	??_fputc
  6112     168F  0873               	movf	??_fputc,w
  6113     1690  0086               	movwf	6
  6114     1691  0187               	clrf	7
  6115     1692  0870               	movf	fputc@c,w
  6116     1693  0081               	movwf	1
  6117     1694                     l2439:
  6118     1694  0872               	movf	fputc@fp,w
  6119     1695  3E02               	addlw	2
  6120     1696  0086               	movwf	6
  6121     1697  0187               	clrf	7
  6122     1698  3001               	movlw	1
  6123     1699  0781               	addwf	1,f
  6124     169A  3141               	addfsr 1,1
  6125     169B  1803               	skipnc
  6126     169C  0A81               	incf	1,f
  6127     169D                     l960:
  6128     169D  0008               	return
  6129     169E                     __end_of_fputc:
  6130                           
  6131                           	psect	text15
  6132     07FD                     __ptext15:	
  6133 ;; *************** function _putch *****************
  6134 ;; Defined at:
  6135 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\putch.c"
  6136 ;; Parameters:    Size  Location     Type
  6137 ;;  c               1    wreg     unsigned char 
  6138 ;; Auto vars:     Size  Location     Type
  6139 ;;  c               1    0[COMMON] unsigned char 
  6140 ;; Return value:  Size  Location     Type
  6141 ;;                  1    wreg      void 
  6142 ;; Registers used:
  6143 ;;		wreg
  6144 ;; Tracked objects:
  6145 ;;		On entry : 0/0
  6146 ;;		On exit  : 0/0
  6147 ;;		Unchanged: 0/0
  6148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6153 ;;Total ram usage:        0 bytes
  6154 ;; Hardware stack levels used: 1
  6155 ;; Hardware stack levels required when called: 1
  6156 ;; This function calls:
  6157 ;;		Nothing
  6158 ;; This function is called by:
  6159 ;;		_fputc
  6160 ;; This function uses a non-reentrant model
  6161 ;;
  6162                           
  6163     07FD                     _putch:	
  6164                           ;psect for function _putch
  6165                           
  6166     07FD                     l971:	
  6167                           ;incstack = 0
  6168                           ; Regs used in _putch: [wreg]
  6169                           
  6170     07FD  0008               	return
  6171     07FE                     __end_of_putch:
  6172                           
  6173                           	psect	text16
  6174     13E0                     __ptext16:	
  6175 ;; *************** function _abs *****************
  6176 ;; Defined at:
  6177 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
  6178 ;; Parameters:    Size  Location     Type
  6179 ;;  a               2    7[COMMON] int 
  6180 ;; Auto vars:     Size  Location     Type
  6181 ;;		None
  6182 ;; Return value:  Size  Location     Type
  6183 ;;                  2    7[COMMON] int 
  6184 ;; Registers used:
  6185 ;;		wreg, status,2, status,0
  6186 ;; Tracked objects:
  6187 ;;		On entry : 0/0
  6188 ;;		On exit  : 0/0
  6189 ;;		Unchanged: 0/0
  6190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6191 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6193 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6194 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6195 ;;Total ram usage:        4 bytes
  6196 ;; Hardware stack levels used: 1
  6197 ;; Hardware stack levels required when called: 1
  6198 ;; This function calls:
  6199 ;;		Nothing
  6200 ;; This function is called by:
  6201 ;;		_dtoa
  6202 ;; This function uses a non-reentrant model
  6203 ;;
  6204                           
  6205     13E0                     _abs:	
  6206                           ;psect for function _abs
  6207                           
  6208     13E0                     l2563:	
  6209                           ;incstack = 0
  6210                           ; Regs used in _abs: [wreg+status,2+status,0]
  6211                           
  6212     13E0  1BF8               	btfsc	abs@a+1,7
  6213     13E1  2BE3               	goto	u2771
  6214     13E2  2BE4               	goto	u2770
  6215     13E3                     u2771:
  6216     13E3  2BE5               	goto	l2567
  6217     13E4                     u2770:
  6218     13E4                     l2565:
  6219     13E4  2BF0               	goto	l948
  6220     13E5                     l2567:
  6221     13E5  0977               	comf	abs@a,w
  6222     13E6  00F9               	movwf	??_abs
  6223     13E7  0978               	comf	abs@a+1,w
  6224     13E8  00FA               	movwf	??_abs+1
  6225     13E9  0AF9               	incf	??_abs,f
  6226     13EA  1903               	skipnz
  6227     13EB  0AFA               	incf	??_abs+1,f
  6228     13EC  0879               	movf	??_abs,w
  6229     13ED  00F7               	movwf	?_abs
  6230     13EE  087A               	movf	??_abs+1,w
  6231     13EF  00F8               	movwf	?_abs+1
  6232     13F0                     l948:
  6233     13F0  0008               	return
  6234     13F1                     __end_of_abs:
  6235                           
  6236                           	psect	text17
  6237     16EE                     __ptext17:	
  6238 ;; *************** function ___awmod *****************
  6239 ;; Defined at:
  6240 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  6241 ;; Parameters:    Size  Location     Type
  6242 ;;  divisor         2    0[COMMON] int 
  6243 ;;  dividend        2    2[COMMON] int 
  6244 ;; Auto vars:     Size  Location     Type
  6245 ;;  sign            1    6[COMMON] unsigned char 
  6246 ;;  counter         1    5[COMMON] unsigned char 
  6247 ;; Return value:  Size  Location     Type
  6248 ;;                  2    0[COMMON] int 
  6249 ;; Registers used:
  6250 ;;		wreg, status,2, status,0
  6251 ;; Tracked objects:
  6252 ;;		On entry : 0/0
  6253 ;;		On exit  : 0/0
  6254 ;;		Unchanged: 0/0
  6255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6256 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6257 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6258 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6259 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6260 ;;Total ram usage:        7 bytes
  6261 ;; Hardware stack levels used: 1
  6262 ;; Hardware stack levels required when called: 1
  6263 ;; This function calls:
  6264 ;;		Nothing
  6265 ;; This function is called by:
  6266 ;;		_dtoa
  6267 ;; This function uses a non-reentrant model
  6268 ;;
  6269                           
  6270     16EE                     ___awmod:	
  6271                           ;psect for function ___awmod
  6272                           
  6273     16EE                     l2509:	
  6274                           ;incstack = 0
  6275                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6276                           
  6277     16EE  01F6               	clrf	___awmod@sign
  6278     16EF                     l2511:
  6279     16EF  1FF3               	btfss	___awmod@dividend+1,7
  6280     16F0  2EF2               	goto	u2641
  6281     16F1  2EF3               	goto	u2640
  6282     16F2                     u2641:
  6283     16F2  2EFA               	goto	l2517
  6284     16F3                     u2640:
  6285     16F3                     l2513:
  6286     16F3  09F2               	comf	___awmod@dividend,f
  6287     16F4  09F3               	comf	___awmod@dividend+1,f
  6288     16F5  0AF2               	incf	___awmod@dividend,f
  6289     16F6  1903               	skipnz
  6290     16F7  0AF3               	incf	___awmod@dividend+1,f
  6291     16F8                     l2515:
  6292     16F8  01F6               	clrf	___awmod@sign
  6293     16F9  0AF6               	incf	___awmod@sign,f
  6294     16FA                     l2517:
  6295     16FA  1FF1               	btfss	___awmod@divisor+1,7
  6296     16FB  2EFD               	goto	u2651
  6297     16FC  2EFE               	goto	u2650
  6298     16FD                     u2651:
  6299     16FD  2F03               	goto	l2521
  6300     16FE                     u2650:
  6301     16FE                     l2519:
  6302     16FE  09F0               	comf	___awmod@divisor,f
  6303     16FF  09F1               	comf	___awmod@divisor+1,f
  6304     1700  0AF0               	incf	___awmod@divisor,f
  6305     1701  1903               	skipnz
  6306     1702  0AF1               	incf	___awmod@divisor+1,f
  6307     1703                     l2521:
  6308     1703  0870               	movf	___awmod@divisor,w
  6309     1704  0471               	iorwf	___awmod@divisor+1,w
  6310     1705  1903               	btfsc	3,2
  6311     1706  2F08               	goto	u2661
  6312     1707  2F09               	goto	u2660
  6313     1708                     u2661:
  6314     1708  2F32               	goto	l2539
  6315     1709                     u2660:
  6316     1709                     l2523:
  6317     1709  01F5               	clrf	___awmod@counter
  6318     170A  0AF5               	incf	___awmod@counter,f
  6319     170B  2F15               	goto	l2529
  6320     170C                     l2525:
  6321     170C  3001               	movlw	1
  6322     170D                     u2675:
  6323     170D  35F0               	lslf	___awmod@divisor,f
  6324     170E  0DF1               	rlf	___awmod@divisor+1,f
  6325     170F  0B89               	decfsz	9,f
  6326     1710  2F0D               	goto	u2675
  6327     1711                     l2527:
  6328     1711  3001               	movlw	1
  6329     1712  00F4               	movwf	??___awmod
  6330     1713  0874               	movf	??___awmod,w
  6331     1714  07F5               	addwf	___awmod@counter,f
  6332     1715                     l2529:
  6333     1715  1FF1               	btfss	___awmod@divisor+1,7
  6334     1716  2F18               	goto	u2681
  6335     1717  2F19               	goto	u2680
  6336     1718                     u2681:
  6337     1718  2F0C               	goto	l2525
  6338     1719                     u2680:
  6339     1719                     l2531:
  6340     1719  0871               	movf	___awmod@divisor+1,w
  6341     171A  0273               	subwf	___awmod@dividend+1,w
  6342     171B  1D03               	skipz
  6343     171C  2F1F               	goto	u2695
  6344     171D  0870               	movf	___awmod@divisor,w
  6345     171E  0272               	subwf	___awmod@dividend,w
  6346     171F                     u2695:
  6347     171F  1C03               	skipc
  6348     1720  2F22               	goto	u2691
  6349     1721  2F23               	goto	u2690
  6350     1722                     u2691:
  6351     1722  2F27               	goto	l2535
  6352     1723                     u2690:
  6353     1723                     l2533:
  6354     1723  0870               	movf	___awmod@divisor,w
  6355     1724  02F2               	subwf	___awmod@dividend,f
  6356     1725  0871               	movf	___awmod@divisor+1,w
  6357     1726  3BF3               	subwfb	___awmod@dividend+1,f
  6358     1727                     l2535:
  6359     1727  3001               	movlw	1
  6360     1728                     u2705:
  6361     1728  36F1               	lsrf	___awmod@divisor+1,f
  6362     1729  0CF0               	rrf	___awmod@divisor,f
  6363     172A  0B89               	decfsz	9,f
  6364     172B  2F28               	goto	u2705
  6365     172C                     l2537:
  6366     172C  3001               	movlw	1
  6367     172D  02F5               	subwf	___awmod@counter,f
  6368     172E  1D03               	btfss	3,2
  6369     172F  2F31               	goto	u2711
  6370     1730  2F32               	goto	u2710
  6371     1731                     u2711:
  6372     1731  2F19               	goto	l2531
  6373     1732                     u2710:
  6374     1732                     l2539:
  6375     1732  0876               	movf	___awmod@sign,w
  6376     1733  1903               	btfsc	3,2
  6377     1734  2F36               	goto	u2721
  6378     1735  2F37               	goto	u2720
  6379     1736                     u2721:
  6380     1736  2F3C               	goto	l2543
  6381     1737                     u2720:
  6382     1737                     l2541:
  6383     1737  09F2               	comf	___awmod@dividend,f
  6384     1738  09F3               	comf	___awmod@dividend+1,f
  6385     1739  0AF2               	incf	___awmod@dividend,f
  6386     173A  1903               	skipnz
  6387     173B  0AF3               	incf	___awmod@dividend+1,f
  6388     173C                     l2543:
  6389     173C  0873               	movf	___awmod@dividend+1,w
  6390     173D  00F1               	movwf	?___awmod+1
  6391     173E  0872               	movf	___awmod@dividend,w
  6392     173F  00F0               	movwf	?___awmod
  6393     1740                     l573:
  6394     1740  0008               	return
  6395     1741                     __end_of___awmod:
  6396                           
  6397                           	psect	text18
  6398     1465                     __ptext18:	
  6399 ;; *************** function _Lcd_Set_Cursor *****************
  6400 ;; Defined at:
  6401 ;;		line 109 in file "SC1601_LCD.c"
  6402 ;; Parameters:    Size  Location     Type
  6403 ;;  row             1    wreg     unsigned char 
  6404 ;;  col             1    5[COMMON] unsigned char 
  6405 ;; Auto vars:     Size  Location     Type
  6406 ;;  row             1    6[COMMON] unsigned char 
  6407 ;;  address         1    9[COMMON] unsigned char 
  6408 ;; Return value:  Size  Location     Type
  6409 ;;                  1    wreg      void 
  6410 ;; Registers used:
  6411 ;;		wreg, status,2, status,0, pclath, cstack
  6412 ;; Tracked objects:
  6413 ;;		On entry : 0/0
  6414 ;;		On exit  : 0/0
  6415 ;;		Unchanged: 0/0
  6416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6417 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6418 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6420 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6421 ;;Total ram usage:        5 bytes
  6422 ;; Hardware stack levels used: 1
  6423 ;; Hardware stack levels required when called: 4
  6424 ;; This function calls:
  6425 ;;		_Lcd_Send_Command
  6426 ;; This function is called by:
  6427 ;;		_calibrate
  6428 ;;		_main
  6429 ;;		_Lcd_Center_Text
  6430 ;;		_Lcd_Scroll_Text
  6431 ;;		_Lcd_Display_Battery
  6432 ;;		_Lcd_Display_Signal
  6433 ;; This function uses a non-reentrant model
  6434 ;;
  6435                           
  6436     1465                     _Lcd_Set_Cursor:	
  6437                           ;psect for function _Lcd_Set_Cursor
  6438                           
  6439                           
  6440                           ;incstack = 0
  6441                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  6442                           ;Lcd_Set_Cursor@row stored from wreg
  6443     1465  00F6               	movwf	Lcd_Set_Cursor@row
  6444     1466                     l3251:
  6445                           
  6446                           ;SC1601_LCD.c: 109: void Lcd_Set_Cursor(char row, char col);SC1601_LCD.c: 110: {;SC1601_
      +                          LCD.c: 111:     char address = (row == 1) ? (0x80 + col - 1) : (0xC0 + col - 1);
  6447     1466  0376               	decf	Lcd_Set_Cursor@row,w
  6448     1467  1903               	btfsc	3,2
  6449     1468  2C6A               	goto	u4171
  6450     1469  2C6B               	goto	u4170
  6451     146A                     u4171:
  6452     146A  2C73               	goto	l3255
  6453     146B                     u4170:
  6454     146B                     l3253:
  6455     146B  0875               	movf	Lcd_Set_Cursor@col,w
  6456     146C  3EBF               	addlw	191
  6457     146D  00F7               	movwf	_Lcd_Set_Cursor$490
  6458     146E  3000               	movlw	0
  6459     146F  1803               	skipnc
  6460     1470  3001               	movlw	1
  6461     1471  00F8               	movwf	_Lcd_Set_Cursor$490+1
  6462     1472  2C7A               	goto	l145
  6463     1473                     l3255:
  6464     1473  0875               	movf	Lcd_Set_Cursor@col,w
  6465     1474  3E7F               	addlw	127
  6466     1475  00F7               	movwf	_Lcd_Set_Cursor$490
  6467     1476  3000               	movlw	0
  6468     1477  1803               	skipnc
  6469     1478  3001               	movlw	1
  6470     1479  00F8               	movwf	_Lcd_Set_Cursor$490+1
  6471     147A                     l145:
  6472     147A  0877               	movf	_Lcd_Set_Cursor$490,w
  6473     147B  00F9               	movwf	Lcd_Set_Cursor@address
  6474     147C                     l3257:
  6475                           
  6476                           ;SC1601_LCD.c: 112:     Lcd_Send_Command(address);
  6477     147C  0879               	movf	Lcd_Set_Cursor@address,w
  6478     147D  3193  23CF  3194   	fcall	_Lcd_Send_Command
  6479     1480                     l146:
  6480     1480  0008               	return
  6481     1481                     __end_of_Lcd_Set_Cursor:
  6482                           
  6483                           	psect	text19
  6484     13C2                     __ptext19:	
  6485 ;; *************** function _Lcd_Clear *****************
  6486 ;; Defined at:
  6487 ;;		line 96 in file "SC1601_LCD.c"
  6488 ;; Parameters:    Size  Location     Type
  6489 ;;		None
  6490 ;; Auto vars:     Size  Location     Type
  6491 ;;		None
  6492 ;; Return value:  Size  Location     Type
  6493 ;;                  1    wreg      void 
  6494 ;; Registers used:
  6495 ;;		wreg, status,2, status,0, pclath, cstack
  6496 ;; Tracked objects:
  6497 ;;		On entry : 0/0
  6498 ;;		On exit  : 0/0
  6499 ;;		Unchanged: 0/0
  6500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6503 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6504 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6505 ;;Total ram usage:        1 bytes
  6506 ;; Hardware stack levels used: 1
  6507 ;; Hardware stack levels required when called: 4
  6508 ;; This function calls:
  6509 ;;		_Lcd_Send_Command
  6510 ;; This function is called by:
  6511 ;;		_calibrate
  6512 ;;		_main
  6513 ;;		_Lcd_Display_Battery
  6514 ;;		_Lcd_Display_Signal
  6515 ;; This function uses a non-reentrant model
  6516 ;;
  6517                           
  6518     13C2                     _Lcd_Clear:	
  6519                           ;psect for function _Lcd_Clear
  6520                           
  6521     13C2                     l3247:	
  6522                           ;incstack = 0
  6523                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  6524                           
  6525                           
  6526                           ;SC1601_LCD.c: 98:     Lcd_Send_Command(0x01);
  6527     13C2  3001               	movlw	1
  6528     13C3  3193  23CF  3193   	fcall	_Lcd_Send_Command
  6529     13C6                     l3249:
  6530                           
  6531                           ;SC1601_LCD.c: 99:     _delay((unsigned long)((2)*(32000000/4000.0)));
  6532     13C6  3015               	movlw	21
  6533     13C7  00F5               	movwf	??_Lcd_Clear
  6534     13C8  30C6               	movlw	198
  6535     13C9                     u5107:
  6536     13C9  0B89               	decfsz	9,f
  6537     13CA  2BC9               	goto	u5107
  6538     13CB  0BF5               	decfsz	??_Lcd_Clear,f
  6539     13CC  2BC9               	goto	u5107
  6540     13CD  3200               	nop2
  6541     13CE                     l139:
  6542     13CE  0008               	return
  6543     13CF                     __end_of_Lcd_Clear:
  6544                           
  6545                           	psect	text20
  6546     141B                     __ptext20:	
  6547 ;; *************** function _Lcd_Write_Float *****************
  6548 ;; Defined at:
  6549 ;;		line 296 in file "SC1601_LCD.c"
  6550 ;; Parameters:    Size  Location     Type
  6551 ;;  f               4   57[BANK0 ] float 
  6552 ;; Auto vars:     Size  Location     Type
  6553 ;;  status          2   62[BANK0 ] int 
  6554 ;;  buf             1   61[BANK0 ] PTR unsigned char 
  6555 ;;		 -> ftoa@buf(16), 
  6556 ;; Return value:  Size  Location     Type
  6557 ;;                  1    wreg      void 
  6558 ;; Registers used:
  6559 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6560 ;; Tracked objects:
  6561 ;;		On entry : 0/0
  6562 ;;		On exit  : 0/0
  6563 ;;		Unchanged: 0/0
  6564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6565 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6566 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6568 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6569 ;;Total ram usage:        7 bytes
  6570 ;; Hardware stack levels used: 1
  6571 ;; Hardware stack levels required when called: 4
  6572 ;; This function calls:
  6573 ;;		_Lcd_Write_String
  6574 ;;		_ftoa
  6575 ;; This function is called by:
  6576 ;;		_main
  6577 ;; This function uses a non-reentrant model
  6578 ;;
  6579                           
  6580     141B                     _Lcd_Write_Float:	
  6581                           ;psect for function _Lcd_Write_Float
  6582                           
  6583     141B                     l3911:	
  6584                           ;incstack = 0
  6585                           ; Regs used in _Lcd_Write_Float: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6586                           
  6587                           
  6588                           ;SC1601_LCD.c: 296: void Lcd_Write_Float(float f);SC1601_LCD.c: 297: {;SC1601_LCD.c: 298
      +                          :     char* buf;;SC1601_LCD.c: 299:     int status;;SC1601_LCD.c: 300:     buf = ftoa(f,
      +                           &status);
  6589     141B  0020               	movlb	0	; select bank0
  6590     141C  085C               	movf	Lcd_Write_Float@f+3,w
  6591     141D  00C7               	movwf	ftoa@f+3
  6592     141E  085B               	movf	Lcd_Write_Float@f+2,w
  6593     141F  00C6               	movwf	ftoa@f+2
  6594     1420  085A               	movf	Lcd_Write_Float@f+1,w
  6595     1421  00C5               	movwf	ftoa@f+1
  6596     1422  0859               	movf	Lcd_Write_Float@f,w
  6597     1423  00C4               	movwf	ftoa@f
  6598     1424  305E               	movlw	(low (Lcd_Write_Float@status| 0))& (0+255)
  6599     1425  00C8               	movwf	ftoa@status
  6600     1426  318B  2347  3194   	fcall	_ftoa
  6601     1429  0020               	movlb	0	; select bank0
  6602     142A  00DD               	movwf	Lcd_Write_Float@buf
  6603     142B                     l3913:
  6604                           
  6605                           ;SC1601_LCD.c: 301:     Lcd_Write_String(buf);
  6606     142B  085D               	movf	Lcd_Write_Float@buf,w
  6607     142C  00F4               	movwf	Lcd_Write_String@str
  6608     142D  3001               	movlw	1
  6609     142E  00F5               	movwf	Lcd_Write_String@str+1
  6610     142F  3194  2404  3194   	fcall	_Lcd_Write_String
  6611     1432                     l188:
  6612     1432  0008               	return
  6613     1433                     __end_of_Lcd_Write_Float:
  6614                           
  6615                           	psect	text21
  6616     0B47                     __ptext21:	
  6617 ;; *************** function _ftoa *****************
  6618 ;; Defined at:
  6619 ;;		line 241 in file "SC1601_LCD.c"
  6620 ;; Parameters:    Size  Location     Type
  6621 ;;  f               4   36[BANK0 ] float 
  6622 ;;  status          1   40[BANK0 ] PTR int 
  6623 ;;		 -> Lcd_Write_Float@status(2), 
  6624 ;; Auto vars:     Size  Location     Type
  6625 ;;  frac_part       4   50[BANK0 ] float 
  6626 ;;  int_part        2   54[BANK0 ] int 
  6627 ;;  frac_digits     2   48[BANK0 ] int 
  6628 ;;  frac_as_int     2   46[BANK0 ] int 
  6629 ;;  ptr             1   56[BANK0 ] PTR unsigned char 
  6630 ;;		 -> ftoa@buf(16), 
  6631 ;; Return value:  Size  Location     Type
  6632 ;;                  1    wreg      PTR unsigned char 
  6633 ;; Registers used:
  6634 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6635 ;; Tracked objects:
  6636 ;;		On entry : 0/0
  6637 ;;		On exit  : 0/0
  6638 ;;		Unchanged: 0/0
  6639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6640 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6641 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6642 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6643 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6644 ;;Total ram usage:       21 bytes
  6645 ;; Hardware stack levels used: 1
  6646 ;; Hardware stack levels required when called: 3
  6647 ;; This function calls:
  6648 ;;		___flge
  6649 ;;		___flmul
  6650 ;;		___flneg
  6651 ;;		___flsub
  6652 ;;		___fltol
  6653 ;;		___xxtofl
  6654 ;;		_itoa
  6655 ;; This function is called by:
  6656 ;;		_Lcd_Write_Float
  6657 ;; This function uses a non-reentrant model
  6658 ;;
  6659                           
  6660     0B47                     _ftoa:	
  6661                           ;psect for function _ftoa
  6662                           
  6663     0B47                     l3871:	
  6664                           ;incstack = 0
  6665                           ; Regs used in _ftoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6666                           
  6667                           
  6668                           ;SC1601_LCD.c: 242:     static char buf[16];;SC1601_LCD.c: 243:     char* ptr = buf;
  6669     0B47  30C0               	movlw	(low (ftoa@buf| (0+256)))& (0+255)
  6670     0B48  0020               	movlb	0	; select bank0
  6671     0B49  00D8               	movwf	ftoa@ptr
  6672     0B4A                     l3873:
  6673                           
  6674                           ;SC1601_LCD.c: 244:     int int_part = (int)f;
  6675     0B4A  0847               	movf	ftoa@f+3,w
  6676     0B4B  00BD               	movwf	___fltol@f1+3
  6677     0B4C  0846               	movf	ftoa@f+2,w
  6678     0B4D  00BC               	movwf	___fltol@f1+2
  6679     0B4E  0845               	movf	ftoa@f+1,w
  6680     0B4F  00BB               	movwf	___fltol@f1+1
  6681     0B50  0844               	movf	ftoa@f,w
  6682     0B51  00BA               	movwf	___fltol@f1
  6683     0B52  3188  2004  318B   	fcall	___fltol
  6684     0B55  0020               	movlb	0	; select bank0
  6685     0B56  083B               	movf	?___fltol+1,w
  6686     0B57  00D7               	movwf	ftoa@int_part+1
  6687     0B58  083A               	movf	?___fltol,w
  6688     0B59  00D6               	movwf	ftoa@int_part
  6689     0B5A                     l3875:
  6690                           
  6691                           ;SC1601_LCD.c: 245:     float frac_part = f - int_part;
  6692     0B5A  0856               	movf	ftoa@int_part,w
  6693     0B5B  00F0               	movwf	___xxtofl@val
  6694     0B5C  0857               	movf	ftoa@int_part+1,w
  6695     0B5D  00F1               	movwf	___xxtofl@val+1
  6696     0B5E  0D89               	rlf	9,f
  6697     0B5F  3B89               	subwfb	9,f
  6698     0B60  0989               	comf	9,f
  6699     0B61  00F2               	movwf	___xxtofl@val+2
  6700     0B62  00F3               	movwf	___xxtofl@val+3
  6701     0B63  3001               	movlw	1
  6702     0B64  3189  210F  318B   	fcall	___xxtofl
  6703     0B67  0873               	movf	?___xxtofl+3,w
  6704     0B68  0020               	movlb	0	; select bank0
  6705     0B69  00AB               	movwf	___flsub@a+3
  6706     0B6A  0872               	movf	?___xxtofl+2,w
  6707     0B6B  00AA               	movwf	___flsub@a+2
  6708     0B6C  0871               	movf	?___xxtofl+1,w
  6709     0B6D  00A9               	movwf	___flsub@a+1
  6710     0B6E  0870               	movf	?___xxtofl,w
  6711     0B6F  00A8               	movwf	___flsub@a
  6712     0B70  0847               	movf	ftoa@f+3,w
  6713     0B71  00AF               	movwf	___flsub@b+3
  6714     0B72  0846               	movf	ftoa@f+2,w
  6715     0B73  00AE               	movwf	___flsub@b+2
  6716     0B74  0845               	movf	ftoa@f+1,w
  6717     0B75  00AD               	movwf	___flsub@b+1
  6718     0B76  0844               	movf	ftoa@f,w
  6719     0B77  00AC               	movwf	___flsub@b
  6720     0B78  3194  24D9  318B   	fcall	___flsub
  6721     0B7B  0020               	movlb	0	; select bank0
  6722     0B7C  082B               	movf	?___flsub+3,w
  6723     0B7D  00D5               	movwf	ftoa@frac_part+3
  6724     0B7E  082A               	movf	?___flsub+2,w
  6725     0B7F  00D4               	movwf	ftoa@frac_part+2
  6726     0B80  0829               	movf	?___flsub+1,w
  6727     0B81  00D3               	movwf	ftoa@frac_part+1
  6728     0B82  0828               	movf	?___flsub,w
  6729     0B83  00D2               	movwf	ftoa@frac_part
  6730                           
  6731                           ;SC1601_LCD.c: 246:     int frac_as_int;;SC1601_LCD.c: 247:     int frac_digits = 2;
  6732     0B84  3002               	movlw	2
  6733     0B85  00D0               	movwf	ftoa@frac_digits
  6734     0B86  3000               	movlw	0
  6735     0B87  00D1               	movwf	ftoa@frac_digits+1
  6736     0B88                     l3877:
  6737                           
  6738                           ;SC1601_LCD.c: 250:     if (f < 0.0) {
  6739     0B88  0847               	movf	ftoa@f+3,w
  6740     0B89  00F3               	movwf	___flge@ff1+3
  6741     0B8A  0846               	movf	ftoa@f+2,w
  6742     0B8B  00F2               	movwf	___flge@ff1+2
  6743     0B8C  0845               	movf	ftoa@f+1,w
  6744     0B8D  00F1               	movwf	___flge@ff1+1
  6745     0B8E  0844               	movf	ftoa@f,w
  6746     0B8F  00F0               	movwf	___flge@ff1
  6747     0B90  3000               	movlw	0
  6748     0B91  00F7               	movwf	___flge@ff2+3
  6749     0B92  3000               	movlw	0
  6750     0B93  00F6               	movwf	___flge@ff2+2
  6751     0B94  3000               	movlw	0
  6752     0B95  00F5               	movwf	___flge@ff2+1
  6753     0B96  3000               	movlw	0
  6754     0B97  00F4               	movwf	___flge@ff2
  6755     0B98  3187  2772  318B   	fcall	___flge
  6756     0B9B  1803               	btfsc	3,0
  6757     0B9C  2B9E               	goto	u4931
  6758     0B9D  2B9F               	goto	u4930
  6759     0B9E                     u4931:
  6760     0B9E  2BF8               	goto	l3889
  6761     0B9F                     u4930:
  6762     0B9F                     l3879:
  6763                           
  6764                           ;SC1601_LCD.c: 251:         *ptr++ = '-';
  6765     0B9F  0020               	movlb	0	; select bank0
  6766     0BA0  0858               	movf	ftoa@ptr,w
  6767     0BA1  0086               	movwf	6
  6768     0BA2  3001               	movlw	1	; select bank2/3
  6769     0BA3  0087               	movwf	7
  6770     0BA4  302D               	movlw	45
  6771     0BA5  0081               	movwf	1
  6772     0BA6                     l3881:
  6773     0BA6  3001               	movlw	1
  6774     0BA7  00C9               	movwf	??_ftoa
  6775     0BA8  0849               	movf	??_ftoa,w
  6776     0BA9  07D8               	addwf	ftoa@ptr,f
  6777     0BAA                     l3883:
  6778                           
  6779                           ;SC1601_LCD.c: 252:         f = -f;
  6780     0BAA  0847               	movf	ftoa@f+3,w
  6781     0BAB  00F3               	movwf	___flneg@f1+3
  6782     0BAC  0846               	movf	ftoa@f+2,w
  6783     0BAD  00F2               	movwf	___flneg@f1+2
  6784     0BAE  0845               	movf	ftoa@f+1,w
  6785     0BAF  00F1               	movwf	___flneg@f1+1
  6786     0BB0  0844               	movf	ftoa@f,w
  6787     0BB1  00F0               	movwf	___flneg@f1
  6788     0BB2  3193  23B7  318B   	fcall	___flneg
  6789     0BB5  0873               	movf	?___flneg+3,w
  6790     0BB6  0020               	movlb	0	; select bank0
  6791     0BB7  00C7               	movwf	ftoa@f+3
  6792     0BB8  0872               	movf	?___flneg+2,w
  6793     0BB9  00C6               	movwf	ftoa@f+2
  6794     0BBA  0871               	movf	?___flneg+1,w
  6795     0BBB  00C5               	movwf	ftoa@f+1
  6796     0BBC  0870               	movf	?___flneg,w
  6797     0BBD  00C4               	movwf	ftoa@f
  6798     0BBE                     l3885:
  6799                           
  6800                           ;SC1601_LCD.c: 253:         int_part = (int)f;
  6801     0BBE  0847               	movf	ftoa@f+3,w
  6802     0BBF  00BD               	movwf	___fltol@f1+3
  6803     0BC0  0846               	movf	ftoa@f+2,w
  6804     0BC1  00BC               	movwf	___fltol@f1+2
  6805     0BC2  0845               	movf	ftoa@f+1,w
  6806     0BC3  00BB               	movwf	___fltol@f1+1
  6807     0BC4  0844               	movf	ftoa@f,w
  6808     0BC5  00BA               	movwf	___fltol@f1
  6809     0BC6  3188  2004  318B   	fcall	___fltol
  6810     0BC9  0020               	movlb	0	; select bank0
  6811     0BCA  083B               	movf	?___fltol+1,w
  6812     0BCB  00D7               	movwf	ftoa@int_part+1
  6813     0BCC  083A               	movf	?___fltol,w
  6814     0BCD  00D6               	movwf	ftoa@int_part
  6815     0BCE                     l3887:
  6816                           
  6817                           ;SC1601_LCD.c: 254:         frac_part = f - int_part;
  6818     0BCE  0856               	movf	ftoa@int_part,w
  6819     0BCF  00F0               	movwf	___xxtofl@val
  6820     0BD0  0857               	movf	ftoa@int_part+1,w
  6821     0BD1  00F1               	movwf	___xxtofl@val+1
  6822     0BD2  0D89               	rlf	9,f
  6823     0BD3  3B89               	subwfb	9,f
  6824     0BD4  0989               	comf	9,f
  6825     0BD5  00F2               	movwf	___xxtofl@val+2
  6826     0BD6  00F3               	movwf	___xxtofl@val+3
  6827     0BD7  3001               	movlw	1
  6828     0BD8  3189  210F  318B   	fcall	___xxtofl
  6829     0BDB  0873               	movf	?___xxtofl+3,w
  6830     0BDC  0020               	movlb	0	; select bank0
  6831     0BDD  00AB               	movwf	___flsub@a+3
  6832     0BDE  0872               	movf	?___xxtofl+2,w
  6833     0BDF  00AA               	movwf	___flsub@a+2
  6834     0BE0  0871               	movf	?___xxtofl+1,w
  6835     0BE1  00A9               	movwf	___flsub@a+1
  6836     0BE2  0870               	movf	?___xxtofl,w
  6837     0BE3  00A8               	movwf	___flsub@a
  6838     0BE4  0847               	movf	ftoa@f+3,w
  6839     0BE5  00AF               	movwf	___flsub@b+3
  6840     0BE6  0846               	movf	ftoa@f+2,w
  6841     0BE7  00AE               	movwf	___flsub@b+2
  6842     0BE8  0845               	movf	ftoa@f+1,w
  6843     0BE9  00AD               	movwf	___flsub@b+1
  6844     0BEA  0844               	movf	ftoa@f,w
  6845     0BEB  00AC               	movwf	___flsub@b
  6846     0BEC  3194  24D9  318B   	fcall	___flsub
  6847     0BEF  0020               	movlb	0	; select bank0
  6848     0BF0  082B               	movf	?___flsub+3,w
  6849     0BF1  00D5               	movwf	ftoa@frac_part+3
  6850     0BF2  082A               	movf	?___flsub+2,w
  6851     0BF3  00D4               	movwf	ftoa@frac_part+2
  6852     0BF4  0829               	movf	?___flsub+1,w
  6853     0BF5  00D3               	movwf	ftoa@frac_part+1
  6854     0BF6  0828               	movf	?___flsub,w
  6855     0BF7  00D2               	movwf	ftoa@frac_part
  6856     0BF8                     l3889:
  6857                           
  6858                           ;SC1601_LCD.c: 258:     itoa(ptr, int_part, 10);
  6859     0BF8  0020               	movlb	0	; select bank0
  6860     0BF9  0858               	movf	ftoa@ptr,w
  6861     0BFA  00A0               	movwf	itoa@buf
  6862     0BFB  3001               	movlw	1
  6863     0BFC  00A1               	movwf	itoa@buf+1
  6864     0BFD  0857               	movf	ftoa@int_part+1,w
  6865     0BFE  00A3               	movwf	itoa@value+1
  6866     0BFF  0856               	movf	ftoa@int_part,w
  6867     0C00  00A2               	movwf	itoa@value
  6868     0C01  300A               	movlw	10
  6869     0C02  00A4               	movwf	itoa@base
  6870     0C03  3000               	movlw	0
  6871     0C04  00A5               	movwf	itoa@base+1
  6872     0C05  3188  2075  318B   	fcall	_itoa
  6873                           
  6874                           ;SC1601_LCD.c: 259:     while (*ptr != '\0') {
  6875     0C08  2C0D               	goto	l3893
  6876     0C09                     l3891:
  6877                           
  6878                           ;SC1601_LCD.c: 260:         ptr++;
  6879     0C09  3001               	movlw	1
  6880     0C0A  00C9               	movwf	??_ftoa
  6881     0C0B  0849               	movf	??_ftoa,w
  6882     0C0C  07D8               	addwf	ftoa@ptr,f
  6883     0C0D                     l3893:
  6884                           
  6885                           ;SC1601_LCD.c: 259:     while (*ptr != '\0') {
  6886     0C0D  0020               	movlb	0	; select bank0
  6887     0C0E  0858               	movf	ftoa@ptr,w
  6888     0C0F  0086               	movwf	6
  6889     0C10  3001               	movlw	1	; select bank2/3
  6890     0C11  0087               	movwf	7
  6891     0C12  0801               	movf	1,w
  6892     0C13  1D03               	btfss	3,2
  6893     0C14  2C16               	goto	u4941
  6894     0C15  2C17               	goto	u4940
  6895     0C16                     u4941:
  6896     0C16  2C09               	goto	l3891
  6897     0C17                     u4940:
  6898     0C17                     l3895:
  6899                           
  6900                           ;SC1601_LCD.c: 264:     *ptr++ = '.';
  6901     0C17  0858               	movf	ftoa@ptr,w
  6902     0C18  0086               	movwf	6
  6903     0C19  3001               	movlw	1	; select bank2/3
  6904     0C1A  0087               	movwf	7
  6905     0C1B  302E               	movlw	46
  6906     0C1C  0081               	movwf	1
  6907     0C1D                     l3897:
  6908     0C1D  3001               	movlw	1
  6909     0C1E  00C9               	movwf	??_ftoa
  6910     0C1F  0849               	movf	??_ftoa,w
  6911     0C20  07D8               	addwf	ftoa@ptr,f
  6912     0C21                     l3899:
  6913                           
  6914                           ;SC1601_LCD.c: 267:     frac_as_int = (int)(frac_part * 10 * frac_digits);
  6915     0C21  0855               	movf	ftoa@frac_part+3,w
  6916     0C22  00A7               	movwf	___flmul@a+3
  6917     0C23  0854               	movf	ftoa@frac_part+2,w
  6918     0C24  00A6               	movwf	___flmul@a+2
  6919     0C25  0853               	movf	ftoa@frac_part+1,w
  6920     0C26  00A5               	movwf	___flmul@a+1
  6921     0C27  0852               	movf	ftoa@frac_part,w
  6922     0C28  00A4               	movwf	___flmul@a
  6923     0C29  3041               	movlw	65
  6924     0C2A  00A3               	movwf	___flmul@b+3
  6925     0C2B  3020               	movlw	32
  6926     0C2C  00A2               	movwf	___flmul@b+2
  6927     0C2D  3000               	movlw	0
  6928     0C2E  00A1               	movwf	___flmul@b+1
  6929     0C2F  3000               	movlw	0
  6930     0C30  00A0               	movwf	___flmul@b
  6931     0C31  3183  232B  318B   	fcall	___flmul
  6932     0C34  0020               	movlb	0	; select bank0
  6933     0C35  0823               	movf	?___flmul+3,w
  6934     0C36  00CD               	movwf	_ftoa$1329+3
  6935     0C37  0822               	movf	?___flmul+2,w
  6936     0C38  00CC               	movwf	_ftoa$1329+2
  6937     0C39  0821               	movf	?___flmul+1,w
  6938     0C3A  00CB               	movwf	_ftoa$1329+1
  6939     0C3B  0820               	movf	?___flmul,w
  6940     0C3C  00CA               	movwf	_ftoa$1329
  6941     0C3D                     l3901:
  6942                           
  6943                           ;SC1601_LCD.c: 267:     frac_as_int = (int)(frac_part * 10 * frac_digits);
  6944     0C3D  084D               	movf	_ftoa$1329+3,w
  6945     0C3E  00A7               	movwf	___flmul@a+3
  6946     0C3F  084C               	movf	_ftoa$1329+2,w
  6947     0C40  00A6               	movwf	___flmul@a+2
  6948     0C41  084B               	movf	_ftoa$1329+1,w
  6949     0C42  00A5               	movwf	___flmul@a+1
  6950     0C43  084A               	movf	_ftoa$1329,w
  6951     0C44  00A4               	movwf	___flmul@a
  6952     0C45  0850               	movf	ftoa@frac_digits,w
  6953     0C46  00F0               	movwf	___xxtofl@val
  6954     0C47  0851               	movf	ftoa@frac_digits+1,w
  6955     0C48  00F1               	movwf	___xxtofl@val+1
  6956     0C49  0D89               	rlf	9,f
  6957     0C4A  3B89               	subwfb	9,f
  6958     0C4B  0989               	comf	9,f
  6959     0C4C  00F2               	movwf	___xxtofl@val+2
  6960     0C4D  00F3               	movwf	___xxtofl@val+3
  6961     0C4E  3001               	movlw	1
  6962     0C4F  3189  210F  318B   	fcall	___xxtofl
  6963     0C52  0873               	movf	?___xxtofl+3,w
  6964     0C53  0020               	movlb	0	; select bank0
  6965     0C54  00A3               	movwf	___flmul@b+3
  6966     0C55  0872               	movf	?___xxtofl+2,w
  6967     0C56  00A2               	movwf	___flmul@b+2
  6968     0C57  0871               	movf	?___xxtofl+1,w
  6969     0C58  00A1               	movwf	___flmul@b+1
  6970     0C59  0870               	movf	?___xxtofl,w
  6971     0C5A  00A0               	movwf	___flmul@b
  6972     0C5B  3183  232B  318B   	fcall	___flmul
  6973     0C5E  0020               	movlb	0	; select bank0
  6974     0C5F  0823               	movf	?___flmul+3,w
  6975     0C60  00BD               	movwf	___fltol@f1+3
  6976     0C61  0822               	movf	?___flmul+2,w
  6977     0C62  00BC               	movwf	___fltol@f1+2
  6978     0C63  0821               	movf	?___flmul+1,w
  6979     0C64  00BB               	movwf	___fltol@f1+1
  6980     0C65  0820               	movf	?___flmul,w
  6981     0C66  00BA               	movwf	___fltol@f1
  6982     0C67  3188  2004  318B   	fcall	___fltol
  6983     0C6A  0020               	movlb	0	; select bank0
  6984     0C6B  083B               	movf	?___fltol+1,w
  6985     0C6C  00CF               	movwf	ftoa@frac_as_int+1
  6986     0C6D  083A               	movf	?___fltol,w
  6987     0C6E  00CE               	movwf	ftoa@frac_as_int
  6988     0C6F                     l3903:
  6989                           
  6990                           ;SC1601_LCD.c: 268:     itoa(ptr, frac_as_int, 10);
  6991     0C6F  0858               	movf	ftoa@ptr,w
  6992     0C70  00A0               	movwf	itoa@buf
  6993     0C71  3001               	movlw	1
  6994     0C72  00A1               	movwf	itoa@buf+1
  6995     0C73  084F               	movf	ftoa@frac_as_int+1,w
  6996     0C74  00A3               	movwf	itoa@value+1
  6997     0C75  084E               	movf	ftoa@frac_as_int,w
  6998     0C76  00A2               	movwf	itoa@value
  6999     0C77  300A               	movlw	10
  7000     0C78  00A4               	movwf	itoa@base
  7001     0C79  3000               	movlw	0
  7002     0C7A  00A5               	movwf	itoa@base+1
  7003     0C7B  3188  2075  318B   	fcall	_itoa
  7004     0C7E                     l3905:
  7005                           
  7006                           ;SC1601_LCD.c: 271:     *status = 0;
  7007     0C7E  0020               	movlb	0	; select bank0
  7008     0C7F  0848               	movf	ftoa@status,w
  7009     0C80  0086               	movwf	6
  7010     0C81  0187               	clrf	7
  7011     0C82  3000               	movlw	0
  7012     0C83  3FC0               	movwi [0]fsr1
  7013     0C84  3FC1               	movwi [1]fsr1
  7014     0C85                     l3907:
  7015                           
  7016                           ;SC1601_LCD.c: 272:     return buf;
  7017     0C85  30C0               	movlw	(low (ftoa@buf| (0+256)))& (0+255)
  7018     0C86                     l182:
  7019     0C86  0008               	return
  7020     0C87                     __end_of_ftoa:
  7021                           
  7022                           	psect	text22
  7023     0875                     __ptext22:	
  7024 ;; *************** function _itoa *****************
  7025 ;; Defined at:
  7026 ;;		line 201 in file "SC1601_LCD.c"
  7027 ;; Parameters:    Size  Location     Type
  7028 ;;  buf             2    0[BANK0 ] PTR unsigned char 
  7029 ;;		 -> Lcd_Write_Integer@buf(8), ftoa@buf(16), 
  7030 ;;  value           2    2[BANK0 ] int 
  7031 ;;  base            2    4[BANK0 ] int 
  7032 ;; Auto vars:     Size  Location     Type
  7033 ;;  ptr             2   11[BANK0 ] PTR unsigned char 
  7034 ;;		 -> Lcd_Write_Integer@buf(8), ftoa@buf(16), 
  7035 ;;  ptr1            2    9[BANK0 ] PTR unsigned char 
  7036 ;;		 -> Lcd_Write_Integer@buf(8), ftoa@buf(16), 
  7037 ;;  tmp_value       2    6[BANK0 ] int 
  7038 ;;  tmp_char        1    8[BANK0 ] unsigned char 
  7039 ;; Return value:  Size  Location     Type
  7040 ;;                  2    0[BANK0 ] PTR unsigned char 
  7041 ;; Registers used:
  7042 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7043 ;; Tracked objects:
  7044 ;;		On entry : 0/0
  7045 ;;		On exit  : 0/0
  7046 ;;		Unchanged: 0/0
  7047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7048 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7049 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7050 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7051 ;;      Totals:         5      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7052 ;;Total ram usage:       18 bytes
  7053 ;; Hardware stack levels used: 1
  7054 ;; Hardware stack levels required when called: 2
  7055 ;; This function calls:
  7056 ;;		___awdiv
  7057 ;;		___wmul
  7058 ;; This function is called by:
  7059 ;;		_ftoa
  7060 ;;		_Lcd_Write_Integer
  7061 ;; This function uses a non-reentrant model
  7062 ;;
  7063                           
  7064     0875                     _itoa:	
  7065                           ;psect for function _itoa
  7066                           
  7067     0875                     l3839:	
  7068                           ;incstack = 0
  7069                           ; Regs used in _itoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7070                           
  7071                           
  7072                           ;SC1601_LCD.c: 202:     char* ptr = buf;
  7073     0875  0020               	movlb	0	; select bank0
  7074     0876  0821               	movf	itoa@buf+1,w
  7075     0877  00AC               	movwf	itoa@ptr+1
  7076     0878  0820               	movf	itoa@buf,w
  7077     0879  00AB               	movwf	itoa@ptr
  7078                           
  7079                           ;SC1601_LCD.c: 203:     char* ptr1 = buf;
  7080     087A  0821               	movf	itoa@buf+1,w
  7081     087B  00AA               	movwf	itoa@ptr1+1
  7082     087C  0820               	movf	itoa@buf,w
  7083     087D  00A9               	movwf	itoa@ptr1
  7084     087E                     l3841:
  7085                           
  7086                           ;SC1601_LCD.c: 204:     char tmp_char;;SC1601_LCD.c: 205:     int tmp_value;;SC1601_LCD.
      +                          c: 208:     if (value < 0 && base == 10) {
  7087     087E  1FA3               	btfss	itoa@value+1,7
  7088     087F  2881               	goto	u4891
  7089     0880  2882               	goto	u4890
  7090     0881                     u4891:
  7091     0881  2898               	goto	l3851
  7092     0882                     u4890:
  7093     0882                     l3843:
  7094     0882  300A               	movlw	10
  7095     0883  0624               	xorwf	itoa@base,w
  7096     0884  0425               	iorwf	itoa@base+1,w
  7097     0885  1D03               	btfss	3,2
  7098     0886  2888               	goto	u4901
  7099     0887  2889               	goto	u4900
  7100     0888                     u4901:
  7101     0888  2898               	goto	l3851
  7102     0889                     u4900:
  7103     0889                     l3845:
  7104                           
  7105                           ;SC1601_LCD.c: 209:         *ptr++ = '-';
  7106     0889  082B               	movf	itoa@ptr,w
  7107     088A  0086               	movwf	6
  7108     088B  082C               	movf	itoa@ptr+1,w
  7109     088C  0087               	movwf	7
  7110     088D  302D               	movlw	45
  7111     088E  0081               	movwf	1
  7112     088F                     l3847:
  7113     088F  3001               	movlw	1
  7114     0890  07AB               	addwf	itoa@ptr,f
  7115     0891  3000               	movlw	0
  7116     0892  3DAC               	addwfc	itoa@ptr+1,f
  7117     0893                     l3849:
  7118                           
  7119                           ;SC1601_LCD.c: 210:         value = -value;
  7120     0893  09A2               	comf	itoa@value,f
  7121     0894  09A3               	comf	itoa@value+1,f
  7122     0895  0AA2               	incf	itoa@value,f
  7123     0896  1903               	skipnz
  7124     0897  0AA3               	incf	itoa@value+1,f
  7125     0898                     l3851:
  7126                           
  7127                           ;SC1601_LCD.c: 215:         tmp_value = value;
  7128     0898  0823               	movf	itoa@value+1,w
  7129     0899  00A7               	movwf	itoa@tmp_value+1
  7130     089A  0822               	movf	itoa@value,w
  7131     089B  00A6               	movwf	itoa@tmp_value
  7132     089C                     l3853:
  7133                           
  7134                           ;SC1601_LCD.c: 216:         value /= base;
  7135     089C  0825               	movf	itoa@base+1,w
  7136     089D  00F1               	movwf	___awdiv@divisor+1
  7137     089E  0824               	movf	itoa@base,w
  7138     089F  00F0               	movwf	___awdiv@divisor
  7139     08A0  0823               	movf	itoa@value+1,w
  7140     08A1  00F3               	movwf	___awdiv@dividend+1
  7141     08A2  0822               	movf	itoa@value,w
  7142     08A3  00F2               	movwf	___awdiv@dividend
  7143     08A4  3197  2741  3188   	fcall	___awdiv
  7144     08A7  0871               	movf	?___awdiv+1,w
  7145     08A8  0020               	movlb	0	; select bank0
  7146     08A9  00A3               	movwf	itoa@value+1
  7147     08AA  0870               	movf	?___awdiv,w
  7148     08AB  00A2               	movwf	itoa@value
  7149     08AC                     l3855:
  7150                           
  7151                           ;SC1601_LCD.c: 217:         *ptr++ = "0123456789ABCDEF"[tmp_value - (value * base)];
  7152     08AC  0823               	movf	itoa@value+1,w
  7153     08AD  00F1               	movwf	___wmul@multiplier+1
  7154     08AE  0822               	movf	itoa@value,w
  7155     08AF  00F0               	movwf	___wmul@multiplier
  7156     08B0  0825               	movf	itoa@base+1,w
  7157     08B1  00F3               	movwf	___wmul@multiplicand+1
  7158     08B2  0824               	movf	itoa@base,w
  7159     08B3  00F2               	movwf	___wmul@multiplicand
  7160     08B4  3194  24BA  3188   	fcall	___wmul
  7161     08B7  3023               	movlw	low (STR_8| (0+32768))
  7162     08B8  00F9               	movwf	??_itoa
  7163     08B9  3098               	movlw	high (STR_8| (0+32768))
  7164     08BA  00FA               	movwf	??_itoa+1
  7165     08BB  0870               	movf	?___wmul,w
  7166     08BC  0279               	subwf	??_itoa,w
  7167     08BD  00FB               	movwf	??_itoa+2
  7168     08BE  0871               	movf	?___wmul+1,w
  7169     08BF  3B7A               	subwfb	??_itoa+1,w
  7170     08C0  00FC               	movwf	??_itoa+3
  7171     08C1  087B               	movf	??_itoa+2,w
  7172     08C2  0020               	movlb	0	; select bank0
  7173     08C3  0726               	addwf	itoa@tmp_value,w
  7174     08C4  0084               	movwf	4
  7175     08C5  087C               	movf	??_itoa+3,w
  7176     08C6  3D27               	addwfc	itoa@tmp_value+1,w
  7177     08C7  0085               	movwf	5
  7178     08C8  0800               	movf	0,w	;code access
  7179     08C9  00FD               	movwf	??_itoa+4
  7180     08CA  082B               	movf	itoa@ptr,w
  7181     08CB  0086               	movwf	6
  7182     08CC  082C               	movf	itoa@ptr+1,w
  7183     08CD  0087               	movwf	7
  7184     08CE  087D               	movf	??_itoa+4,w
  7185     08CF  0081               	movwf	1
  7186     08D0                     l3857:
  7187     08D0  3001               	movlw	1
  7188     08D1  07AB               	addwf	itoa@ptr,f
  7189     08D2  3000               	movlw	0
  7190     08D3  3DAC               	addwfc	itoa@ptr+1,f
  7191     08D4                     l3859:
  7192                           
  7193                           ;SC1601_LCD.c: 218:     } while (value);
  7194     08D4  0822               	movf	itoa@value,w
  7195     08D5  0423               	iorwf	itoa@value+1,w
  7196     08D6  1D03               	btfss	3,2
  7197     08D7  28D9               	goto	u4911
  7198     08D8  28DA               	goto	u4910
  7199     08D9                     u4911:
  7200     08D9  2898               	goto	l3851
  7201     08DA                     u4910:
  7202     08DA                     l3861:
  7203                           
  7204                           ;SC1601_LCD.c: 221:     *ptr = '\0';
  7205     08DA  082B               	movf	itoa@ptr,w
  7206     08DB  0086               	movwf	6
  7207     08DC  082C               	movf	itoa@ptr+1,w
  7208     08DD  0087               	movwf	7
  7209     08DE  0181               	clrf	1
  7210     08DF                     l3863:
  7211                           
  7212                           ;SC1601_LCD.c: 224:     ptr--;
  7213     08DF  3001               	movlw	1
  7214     08E0  02AB               	subwf	itoa@ptr,f
  7215     08E1  3000               	movlw	0
  7216     08E2  3BAC               	subwfb	itoa@ptr+1,f
  7217                           
  7218                           ;SC1601_LCD.c: 225:     while (ptr1 < ptr) {
  7219     08E3  2904               	goto	l170
  7220     08E4                     l3865:
  7221                           
  7222                           ;SC1601_LCD.c: 226:         tmp_char = *ptr;
  7223     08E4  082B               	movf	itoa@ptr,w
  7224     08E5  0086               	movwf	6
  7225     08E6  082C               	movf	itoa@ptr+1,w
  7226     08E7  0087               	movwf	7
  7227     08E8  0801               	movf	1,w
  7228     08E9  00A8               	movwf	itoa@tmp_char
  7229                           
  7230                           ;SC1601_LCD.c: 227:         *ptr-- = *ptr1;
  7231     08EA  0829               	movf	itoa@ptr1,w
  7232     08EB  0086               	movwf	6
  7233     08EC  082A               	movf	itoa@ptr1+1,w
  7234     08ED  0087               	movwf	7
  7235     08EE  0801               	movf	1,w
  7236     08EF  00F9               	movwf	??_itoa
  7237     08F0  082B               	movf	itoa@ptr,w
  7238     08F1  0086               	movwf	6
  7239     08F2  082C               	movf	itoa@ptr+1,w
  7240     08F3  0087               	movwf	7
  7241     08F4  0879               	movf	??_itoa,w
  7242     08F5  0081               	movwf	1
  7243     08F6                     l3867:
  7244     08F6  3001               	movlw	1
  7245     08F7  02AB               	subwf	itoa@ptr,f
  7246     08F8  3000               	movlw	0
  7247     08F9  3BAC               	subwfb	itoa@ptr+1,f
  7248     08FA                     l3869:
  7249                           
  7250                           ;SC1601_LCD.c: 228:         *ptr1++ = tmp_char;
  7251     08FA  0829               	movf	itoa@ptr1,w
  7252     08FB  0086               	movwf	6
  7253     08FC  082A               	movf	itoa@ptr1+1,w
  7254     08FD  0087               	movwf	7
  7255     08FE  0828               	movf	itoa@tmp_char,w
  7256     08FF  0081               	movwf	1
  7257     0900  3001               	movlw	1
  7258     0901  07A9               	addwf	itoa@ptr1,f
  7259     0902  3000               	movlw	0
  7260     0903  3DAA               	addwfc	itoa@ptr1+1,f
  7261     0904                     l170:	
  7262                           ;SC1601_LCD.c: 229:     }
  7263                           
  7264                           
  7265                           ;SC1601_LCD.c: 225:     while (ptr1 < ptr) {
  7266     0904  082C               	movf	itoa@ptr+1,w
  7267     0905  022A               	subwf	itoa@ptr1+1,w
  7268     0906  1D03               	skipz
  7269     0907  290A               	goto	u4925
  7270     0908  082B               	movf	itoa@ptr,w
  7271     0909  0229               	subwf	itoa@ptr1,w
  7272     090A                     u4925:
  7273     090A  1C03               	skipc
  7274     090B  290D               	goto	u4921
  7275     090C  290E               	goto	u4920
  7276     090D                     u4921:
  7277     090D  28E4               	goto	l3865
  7278     090E                     u4920:
  7279     090E                     l172:
  7280     090E                     l173:	
  7281                           ;SC1601_LCD.c: 231:     return buf;
  7282                           
  7283     090E  0008               	return
  7284     090F                     __end_of_itoa:
  7285                           
  7286                           	psect	text23
  7287     14BA                     __ptext23:	
  7288 ;; *************** function ___wmul *****************
  7289 ;; Defined at:
  7290 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  7291 ;; Parameters:    Size  Location     Type
  7292 ;;  multiplier      2    0[COMMON] unsigned int 
  7293 ;;  multiplicand    2    2[COMMON] unsigned int 
  7294 ;; Auto vars:     Size  Location     Type
  7295 ;;  product         2    4[COMMON] unsigned int 
  7296 ;; Return value:  Size  Location     Type
  7297 ;;                  2    0[COMMON] unsigned int 
  7298 ;; Registers used:
  7299 ;;		wreg, status,2, status,0
  7300 ;; Tracked objects:
  7301 ;;		On entry : 0/0
  7302 ;;		On exit  : 0/0
  7303 ;;		Unchanged: 0/0
  7304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7305 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7306 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7308 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7309 ;;Total ram usage:        6 bytes
  7310 ;; Hardware stack levels used: 1
  7311 ;; Hardware stack levels required when called: 1
  7312 ;; This function calls:
  7313 ;;		Nothing
  7314 ;; This function is called by:
  7315 ;;		_itoa
  7316 ;;		_read_prec_or_width
  7317 ;;		_Lcd_Progress_Bar
  7318 ;; This function uses a non-reentrant model
  7319 ;;
  7320                           
  7321     14BA                     ___wmul:	
  7322                           ;psect for function ___wmul
  7323                           
  7324     14BA                     l2451:	
  7325                           ;incstack = 0
  7326                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7327                           
  7328     14BA  01F4               	clrf	___wmul@product
  7329     14BB  01F5               	clrf	___wmul@product+1
  7330     14BC                     l2453:
  7331     14BC  1C70               	btfss	___wmul@multiplier,0
  7332     14BD  2CBF               	goto	u2501
  7333     14BE  2CC0               	goto	u2500
  7334     14BF                     u2501:
  7335     14BF  2CC4               	goto	l407
  7336     14C0                     u2500:
  7337     14C0                     l2455:
  7338     14C0  0872               	movf	___wmul@multiplicand,w
  7339     14C1  07F4               	addwf	___wmul@product,f
  7340     14C2  0873               	movf	___wmul@multiplicand+1,w
  7341     14C3  3DF5               	addwfc	___wmul@product+1,f
  7342     14C4                     l407:
  7343     14C4  3001               	movlw	1
  7344     14C5                     u2515:
  7345     14C5  35F2               	lslf	___wmul@multiplicand,f
  7346     14C6  0DF3               	rlf	___wmul@multiplicand+1,f
  7347     14C7  0B89               	decfsz	9,f
  7348     14C8  2CC5               	goto	u2515
  7349     14C9                     l2457:
  7350     14C9  3001               	movlw	1
  7351     14CA                     u2525:
  7352     14CA  36F1               	lsrf	___wmul@multiplier+1,f
  7353     14CB  0CF0               	rrf	___wmul@multiplier,f
  7354     14CC  0B89               	decfsz	9,f
  7355     14CD  2CCA               	goto	u2525
  7356     14CE                     l2459:
  7357     14CE  0870               	movf	___wmul@multiplier,w
  7358     14CF  0471               	iorwf	___wmul@multiplier+1,w
  7359     14D0  1D03               	btfss	3,2
  7360     14D1  2CD3               	goto	u2531
  7361     14D2  2CD4               	goto	u2530
  7362     14D3                     u2531:
  7363     14D3  2CBC               	goto	l2453
  7364     14D4                     u2530:
  7365     14D4                     l2461:
  7366     14D4  0875               	movf	___wmul@product+1,w
  7367     14D5  00F1               	movwf	?___wmul+1
  7368     14D6  0874               	movf	___wmul@product,w
  7369     14D7  00F0               	movwf	?___wmul
  7370     14D8                     l409:
  7371     14D8  0008               	return
  7372     14D9                     __end_of___wmul:
  7373                           
  7374                           	psect	text24
  7375     1741                     __ptext24:	
  7376 ;; *************** function ___awdiv *****************
  7377 ;; Defined at:
  7378 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  7379 ;; Parameters:    Size  Location     Type
  7380 ;;  divisor         2    0[COMMON] int 
  7381 ;;  dividend        2    2[COMMON] int 
  7382 ;; Auto vars:     Size  Location     Type
  7383 ;;  quotient        2    7[COMMON] int 
  7384 ;;  sign            1    6[COMMON] unsigned char 
  7385 ;;  counter         1    5[COMMON] unsigned char 
  7386 ;; Return value:  Size  Location     Type
  7387 ;;                  2    0[COMMON] int 
  7388 ;; Registers used:
  7389 ;;		wreg, status,2, status,0
  7390 ;; Tracked objects:
  7391 ;;		On entry : 0/0
  7392 ;;		On exit  : 0/0
  7393 ;;		Unchanged: 0/0
  7394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7395 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7396 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7397 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7398 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7399 ;;Total ram usage:        9 bytes
  7400 ;; Hardware stack levels used: 1
  7401 ;; Hardware stack levels required when called: 1
  7402 ;; This function calls:
  7403 ;;		Nothing
  7404 ;; This function is called by:
  7405 ;;		_itoa
  7406 ;;		_dtoa
  7407 ;;		_Lcd_Center_Text
  7408 ;;		_Lcd_Progress_Bar
  7409 ;; This function uses a non-reentrant model
  7410 ;;
  7411                           
  7412     1741                     ___awdiv:	
  7413                           ;psect for function ___awdiv
  7414                           
  7415     1741                     l2465:	
  7416                           ;incstack = 0
  7417                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  7418                           
  7419     1741  01F6               	clrf	___awdiv@sign
  7420     1742                     l2467:
  7421     1742  1FF1               	btfss	___awdiv@divisor+1,7
  7422     1743  2F45               	goto	u2541
  7423     1744  2F46               	goto	u2540
  7424     1745                     u2541:
  7425     1745  2F4D               	goto	l2473
  7426     1746                     u2540:
  7427     1746                     l2469:
  7428     1746  09F0               	comf	___awdiv@divisor,f
  7429     1747  09F1               	comf	___awdiv@divisor+1,f
  7430     1748  0AF0               	incf	___awdiv@divisor,f
  7431     1749  1903               	skipnz
  7432     174A  0AF1               	incf	___awdiv@divisor+1,f
  7433     174B                     l2471:
  7434     174B  01F6               	clrf	___awdiv@sign
  7435     174C  0AF6               	incf	___awdiv@sign,f
  7436     174D                     l2473:
  7437     174D  1FF3               	btfss	___awdiv@dividend+1,7
  7438     174E  2F50               	goto	u2551
  7439     174F  2F51               	goto	u2550
  7440     1750                     u2551:
  7441     1750  2F5A               	goto	l2479
  7442     1751                     u2550:
  7443     1751                     l2475:
  7444     1751  09F2               	comf	___awdiv@dividend,f
  7445     1752  09F3               	comf	___awdiv@dividend+1,f
  7446     1753  0AF2               	incf	___awdiv@dividend,f
  7447     1754  1903               	skipnz
  7448     1755  0AF3               	incf	___awdiv@dividend+1,f
  7449     1756                     l2477:
  7450     1756  3001               	movlw	1
  7451     1757  00F4               	movwf	??___awdiv
  7452     1758  0874               	movf	??___awdiv,w
  7453     1759  06F6               	xorwf	___awdiv@sign,f
  7454     175A                     l2479:
  7455     175A  01F7               	clrf	___awdiv@quotient
  7456     175B  01F8               	clrf	___awdiv@quotient+1
  7457     175C                     l2481:
  7458     175C  0870               	movf	___awdiv@divisor,w
  7459     175D  0471               	iorwf	___awdiv@divisor+1,w
  7460     175E  1903               	btfsc	3,2
  7461     175F  2F61               	goto	u2561
  7462     1760  2F62               	goto	u2560
  7463     1761                     u2561:
  7464     1761  2F91               	goto	l2501
  7465     1762                     u2560:
  7466     1762                     l2483:
  7467     1762  01F5               	clrf	___awdiv@counter
  7468     1763  0AF5               	incf	___awdiv@counter,f
  7469     1764  2F6E               	goto	l2489
  7470     1765                     l2485:
  7471     1765  3001               	movlw	1
  7472     1766                     u2575:
  7473     1766  35F0               	lslf	___awdiv@divisor,f
  7474     1767  0DF1               	rlf	___awdiv@divisor+1,f
  7475     1768  0B89               	decfsz	9,f
  7476     1769  2F66               	goto	u2575
  7477     176A                     l2487:
  7478     176A  3001               	movlw	1
  7479     176B  00F4               	movwf	??___awdiv
  7480     176C  0874               	movf	??___awdiv,w
  7481     176D  07F5               	addwf	___awdiv@counter,f
  7482     176E                     l2489:
  7483     176E  1FF1               	btfss	___awdiv@divisor+1,7
  7484     176F  2F71               	goto	u2581
  7485     1770  2F72               	goto	u2580
  7486     1771                     u2581:
  7487     1771  2F65               	goto	l2485
  7488     1772                     u2580:
  7489     1772                     l2491:
  7490     1772  3001               	movlw	1
  7491     1773                     u2595:
  7492     1773  35F7               	lslf	___awdiv@quotient,f
  7493     1774  0DF8               	rlf	___awdiv@quotient+1,f
  7494     1775  0B89               	decfsz	9,f
  7495     1776  2F73               	goto	u2595
  7496     1777  0871               	movf	___awdiv@divisor+1,w
  7497     1778  0273               	subwf	___awdiv@dividend+1,w
  7498     1779  1D03               	skipz
  7499     177A  2F7D               	goto	u2605
  7500     177B  0870               	movf	___awdiv@divisor,w
  7501     177C  0272               	subwf	___awdiv@dividend,w
  7502     177D                     u2605:
  7503     177D  1C03               	skipc
  7504     177E  2F80               	goto	u2601
  7505     177F  2F81               	goto	u2600
  7506     1780                     u2601:
  7507     1780  2F86               	goto	l2497
  7508     1781                     u2600:
  7509     1781                     l2493:
  7510     1781  0870               	movf	___awdiv@divisor,w
  7511     1782  02F2               	subwf	___awdiv@dividend,f
  7512     1783  0871               	movf	___awdiv@divisor+1,w
  7513     1784  3BF3               	subwfb	___awdiv@dividend+1,f
  7514     1785                     l2495:
  7515     1785  1477               	bsf	___awdiv@quotient,0
  7516     1786                     l2497:
  7517     1786  3001               	movlw	1
  7518     1787                     u2615:
  7519     1787  36F1               	lsrf	___awdiv@divisor+1,f
  7520     1788  0CF0               	rrf	___awdiv@divisor,f
  7521     1789  0B89               	decfsz	9,f
  7522     178A  2F87               	goto	u2615
  7523     178B                     l2499:
  7524     178B  3001               	movlw	1
  7525     178C  02F5               	subwf	___awdiv@counter,f
  7526     178D  1D03               	btfss	3,2
  7527     178E  2F90               	goto	u2621
  7528     178F  2F91               	goto	u2620
  7529     1790                     u2621:
  7530     1790  2F72               	goto	l2491
  7531     1791                     u2620:
  7532     1791                     l2501:
  7533     1791  0876               	movf	___awdiv@sign,w
  7534     1792  1903               	btfsc	3,2
  7535     1793  2F95               	goto	u2631
  7536     1794  2F96               	goto	u2630
  7537     1795                     u2631:
  7538     1795  2F9B               	goto	l2505
  7539     1796                     u2630:
  7540     1796                     l2503:
  7541     1796  09F7               	comf	___awdiv@quotient,f
  7542     1797  09F8               	comf	___awdiv@quotient+1,f
  7543     1798  0AF7               	incf	___awdiv@quotient,f
  7544     1799  1903               	skipnz
  7545     179A  0AF8               	incf	___awdiv@quotient+1,f
  7546     179B                     l2505:
  7547     179B  0878               	movf	___awdiv@quotient+1,w
  7548     179C  00F1               	movwf	?___awdiv+1
  7549     179D  0877               	movf	___awdiv@quotient,w
  7550     179E  00F0               	movwf	?___awdiv
  7551     179F                     l560:
  7552     179F  0008               	return
  7553     17A0                     __end_of___awdiv:
  7554                           
  7555                           	psect	text25
  7556     090F                     __ptext25:	
  7557 ;; *************** function ___xxtofl *****************
  7558 ;; Defined at:
  7559 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\xxtofl.c"
  7560 ;; Parameters:    Size  Location     Type
  7561 ;;  sign            1    wreg     unsigned char 
  7562 ;;  val             4    0[COMMON] long 
  7563 ;; Auto vars:     Size  Location     Type
  7564 ;;  sign            1    8[COMMON] unsigned char 
  7565 ;;  arg             4   10[COMMON] unsigned long 
  7566 ;;  exp             1    9[COMMON] unsigned char 
  7567 ;; Return value:  Size  Location     Type
  7568 ;;                  4    0[COMMON] unsigned char 
  7569 ;; Registers used:
  7570 ;;		wreg, status,2, status,0
  7571 ;; Tracked objects:
  7572 ;;		On entry : 0/0
  7573 ;;		On exit  : 0/0
  7574 ;;		Unchanged: 0/0
  7575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7576 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7577 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7578 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7579 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7580 ;;Total ram usage:       14 bytes
  7581 ;; Hardware stack levels used: 1
  7582 ;; Hardware stack levels required when called: 1
  7583 ;; This function calls:
  7584 ;;		Nothing
  7585 ;; This function is called by:
  7586 ;;		_calibrate
  7587 ;;		_main
  7588 ;;		_ftoa
  7589 ;; This function uses a non-reentrant model
  7590 ;;
  7591                           
  7592     090F                     ___xxtofl:	
  7593                           ;psect for function ___xxtofl
  7594                           
  7595                           
  7596                           ;incstack = 0
  7597                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7598                           ;___xxtofl@sign stored from wreg
  7599     090F  00F8               	movwf	___xxtofl@sign
  7600     0910                     l3197:
  7601     0910  0878               	movf	___xxtofl@sign,w
  7602     0911  1903               	btfsc	3,2
  7603     0912  2914               	goto	u4031
  7604     0913  2915               	goto	u4030
  7605     0914                     u4031:
  7606     0914  2929               	goto	l3203
  7607     0915                     u4030:
  7608     0915                     l3199:
  7609     0915  1FF3               	btfss	___xxtofl@val+3,7
  7610     0916  2918               	goto	u4041
  7611     0917  2919               	goto	u4040
  7612     0918                     u4041:
  7613     0918  2929               	goto	l3203
  7614     0919                     u4040:
  7615     0919                     l3201:
  7616     0919  0970               	comf	___xxtofl@val,w
  7617     091A  00FA               	movwf	___xxtofl@arg
  7618     091B  0971               	comf	___xxtofl@val+1,w
  7619     091C  00FB               	movwf	___xxtofl@arg+1
  7620     091D  0972               	comf	___xxtofl@val+2,w
  7621     091E  00FC               	movwf	___xxtofl@arg+2
  7622     091F  0973               	comf	___xxtofl@val+3,w
  7623     0920  00FD               	movwf	___xxtofl@arg+3
  7624     0921  0AFA               	incf	___xxtofl@arg,f
  7625     0922  1903               	skipnz
  7626     0923  0AFB               	incf	___xxtofl@arg+1,f
  7627     0924  1903               	skipnz
  7628     0925  0AFC               	incf	___xxtofl@arg+2,f
  7629     0926  1903               	skipnz
  7630     0927  0AFD               	incf	___xxtofl@arg+3,f
  7631     0928  2931               	goto	l848
  7632     0929                     l3203:
  7633     0929  0873               	movf	___xxtofl@val+3,w
  7634     092A  00FD               	movwf	___xxtofl@arg+3
  7635     092B  0872               	movf	___xxtofl@val+2,w
  7636     092C  00FC               	movwf	___xxtofl@arg+2
  7637     092D  0871               	movf	___xxtofl@val+1,w
  7638     092E  00FB               	movwf	___xxtofl@arg+1
  7639     092F  0870               	movf	___xxtofl@val,w
  7640     0930  00FA               	movwf	___xxtofl@arg
  7641     0931                     l848:
  7642     0931  0873               	movf	___xxtofl@val+3,w
  7643     0932  0472               	iorwf	___xxtofl@val+2,w
  7644     0933  0471               	iorwf	___xxtofl@val+1,w
  7645     0934  0470               	iorwf	___xxtofl@val,w
  7646     0935  1D03               	skipz
  7647     0936  2938               	goto	u4051
  7648     0937  2939               	goto	u4050
  7649     0938                     u4051:
  7650     0938  2942               	goto	l3209
  7651     0939                     u4050:
  7652     0939                     l3205:
  7653     0939  3000               	movlw	0
  7654     093A  00F3               	movwf	?___xxtofl+3
  7655     093B  3000               	movlw	0
  7656     093C  00F2               	movwf	?___xxtofl+2
  7657     093D  3000               	movlw	0
  7658     093E  00F1               	movwf	?___xxtofl+1
  7659     093F  3000               	movlw	0
  7660     0940  00F0               	movwf	?___xxtofl
  7661     0941  29B8               	goto	l850
  7662     0942                     l3209:
  7663     0942  3096               	movlw	150
  7664     0943  00F9               	movwf	___xxtofl@exp
  7665     0944  2950               	goto	l3213
  7666     0945                     l3211:
  7667     0945  3001               	movlw	1
  7668     0946  00F4               	movwf	??___xxtofl
  7669     0947  0874               	movf	??___xxtofl,w
  7670     0948  07F9               	addwf	___xxtofl@exp,f
  7671     0949  3001               	movlw	1
  7672     094A                     u4065:
  7673     094A  36FD               	lsrf	___xxtofl@arg+3,f
  7674     094B  0CFC               	rrf	___xxtofl@arg+2,f
  7675     094C  0CFB               	rrf	___xxtofl@arg+1,f
  7676     094D  0CFA               	rrf	___xxtofl@arg,f
  7677     094E  0B89               	decfsz	9,f
  7678     094F  294A               	goto	u4065
  7679     0950                     l3213:
  7680     0950  30FE               	movlw	254
  7681     0951  057D               	andwf	___xxtofl@arg+3,w
  7682     0952  1D03               	btfss	3,2
  7683     0953  2955               	goto	u4071
  7684     0954  2956               	goto	u4070
  7685     0955                     u4071:
  7686     0955  2945               	goto	l3211
  7687     0956                     u4070:
  7688     0956  296A               	goto	l854
  7689     0957                     l3215:
  7690     0957  3001               	movlw	1
  7691     0958  00F4               	movwf	??___xxtofl
  7692     0959  0874               	movf	??___xxtofl,w
  7693     095A  07F9               	addwf	___xxtofl@exp,f
  7694     095B                     l3217:
  7695     095B  3001               	movlw	1
  7696     095C  07FA               	addwf	___xxtofl@arg,f
  7697     095D  3000               	movlw	0
  7698     095E  3DFB               	addwfc	___xxtofl@arg+1,f
  7699     095F  3000               	movlw	0
  7700     0960  3DFC               	addwfc	___xxtofl@arg+2,f
  7701     0961  3000               	movlw	0
  7702     0962  3DFD               	addwfc	___xxtofl@arg+3,f
  7703     0963                     l3219:
  7704     0963  3001               	movlw	1
  7705     0964                     u4085:
  7706     0964  36FD               	lsrf	___xxtofl@arg+3,f
  7707     0965  0CFC               	rrf	___xxtofl@arg+2,f
  7708     0966  0CFB               	rrf	___xxtofl@arg+1,f
  7709     0967  0CFA               	rrf	___xxtofl@arg,f
  7710     0968  0B89               	decfsz	9,f
  7711     0969  2964               	goto	u4085
  7712     096A                     l854:
  7713     096A  30FF               	movlw	255
  7714     096B  057D               	andwf	___xxtofl@arg+3,w
  7715     096C  1D03               	btfss	3,2
  7716     096D  296F               	goto	u4091
  7717     096E  2970               	goto	u4090
  7718     096F                     u4091:
  7719     096F  2957               	goto	l3215
  7720     0970                     u4090:
  7721     0970  297A               	goto	l3223
  7722     0971                     l3221:
  7723     0971  3001               	movlw	1
  7724     0972  02F9               	subwf	___xxtofl@exp,f
  7725     0973  3001               	movlw	1
  7726     0974                     u4105:
  7727     0974  35FA               	lslf	___xxtofl@arg,f
  7728     0975  0DFB               	rlf	___xxtofl@arg+1,f
  7729     0976  0DFC               	rlf	___xxtofl@arg+2,f
  7730     0977  0DFD               	rlf	___xxtofl@arg+3,f
  7731     0978  0B89               	decfsz	9,f
  7732     0979  2974               	goto	u4105
  7733     097A                     l3223:
  7734     097A  1BFC               	btfsc	___xxtofl@arg+2,7
  7735     097B  297D               	goto	u4111
  7736     097C  297E               	goto	u4110
  7737     097D                     u4111:
  7738     097D  2984               	goto	l861
  7739     097E                     u4110:
  7740     097E                     l3225:
  7741     097E  3002               	movlw	2
  7742     097F  0279               	subwf	___xxtofl@exp,w
  7743     0980  1803               	skipnc
  7744     0981  2983               	goto	u4121
  7745     0982  2984               	goto	u4120
  7746     0983                     u4121:
  7747     0983  2971               	goto	l3221
  7748     0984                     u4120:
  7749     0984                     l861:
  7750     0984  1879               	btfsc	___xxtofl@exp,0
  7751     0985  2987               	goto	u4131
  7752     0986  2988               	goto	u4130
  7753     0987                     u4131:
  7754     0987  2990               	goto	l862
  7755     0988                     u4130:
  7756     0988                     l3227:
  7757     0988  30FF               	movlw	255
  7758     0989  05FA               	andwf	___xxtofl@arg,f
  7759     098A  30FF               	movlw	255
  7760     098B  05FB               	andwf	___xxtofl@arg+1,f
  7761     098C  307F               	movlw	127
  7762     098D  05FC               	andwf	___xxtofl@arg+2,f
  7763     098E  30FF               	movlw	255
  7764     098F  05FD               	andwf	___xxtofl@arg+3,f
  7765     0990                     l862:
  7766     0990  1003               	clrc
  7767     0991  0CF9               	rrf	___xxtofl@exp,f
  7768     0992                     l3229:
  7769     0992  0879               	movf	___xxtofl@exp,w
  7770     0993  00F4               	movwf	??___xxtofl
  7771     0994  01F5               	clrf	??___xxtofl+1
  7772     0995  01F6               	clrf	??___xxtofl+2
  7773     0996  01F7               	clrf	??___xxtofl+3
  7774     0997  3018               	movlw	24
  7775     0998                     u4145:
  7776     0998  35F4               	lslf	??___xxtofl,f
  7777     0999  0DF5               	rlf	??___xxtofl+1,f
  7778     099A  0DF6               	rlf	??___xxtofl+2,f
  7779     099B  0DF7               	rlf	??___xxtofl+3,f
  7780     099C                     u4140:
  7781     099C  0B89               	decfsz	9,f
  7782     099D  2998               	goto	u4145
  7783     099E  0874               	movf	??___xxtofl,w
  7784     099F  04FA               	iorwf	___xxtofl@arg,f
  7785     09A0  0875               	movf	??___xxtofl+1,w
  7786     09A1  04FB               	iorwf	___xxtofl@arg+1,f
  7787     09A2  0876               	movf	??___xxtofl+2,w
  7788     09A3  04FC               	iorwf	___xxtofl@arg+2,f
  7789     09A4  0877               	movf	??___xxtofl+3,w
  7790     09A5  04FD               	iorwf	___xxtofl@arg+3,f
  7791     09A6                     l3231:
  7792     09A6  0878               	movf	___xxtofl@sign,w
  7793     09A7  1903               	btfsc	3,2
  7794     09A8  29AA               	goto	u4151
  7795     09A9  29AB               	goto	u4150
  7796     09AA                     u4151:
  7797     09AA  29B0               	goto	l3237
  7798     09AB                     u4150:
  7799     09AB                     l3233:
  7800     09AB  1FF3               	btfss	___xxtofl@val+3,7
  7801     09AC  29AE               	goto	u4161
  7802     09AD  29AF               	goto	u4160
  7803     09AE                     u4161:
  7804     09AE  29B0               	goto	l3237
  7805     09AF                     u4160:
  7806     09AF                     l3235:
  7807     09AF  17FD               	bsf	___xxtofl@arg+3,7
  7808     09B0                     l3237:
  7809     09B0  087D               	movf	___xxtofl@arg+3,w
  7810     09B1  00F3               	movwf	?___xxtofl+3
  7811     09B2  087C               	movf	___xxtofl@arg+2,w
  7812     09B3  00F2               	movwf	?___xxtofl+2
  7813     09B4  087B               	movf	___xxtofl@arg+1,w
  7814     09B5  00F1               	movwf	?___xxtofl+1
  7815     09B6  087A               	movf	___xxtofl@arg,w
  7816     09B7  00F0               	movwf	?___xxtofl
  7817     09B8                     l850:
  7818     09B8  0008               	return
  7819     09B9                     __end_of___xxtofl:
  7820                           
  7821                           	psect	text26
  7822     0804                     __ptext26:	
  7823 ;; *************** function ___fltol *****************
  7824 ;; Defined at:
  7825 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
  7826 ;; Parameters:    Size  Location     Type
  7827 ;;  f1              4   26[BANK0 ] unsigned char 
  7828 ;; Auto vars:     Size  Location     Type
  7829 ;;  exp1            1   35[BANK0 ] unsigned char 
  7830 ;;  sign1           1   34[BANK0 ] unsigned char 
  7831 ;; Return value:  Size  Location     Type
  7832 ;;                  4   26[BANK0 ] long 
  7833 ;; Registers used:
  7834 ;;		wreg, status,2, status,0
  7835 ;; Tracked objects:
  7836 ;;		On entry : 0/0
  7837 ;;		On exit  : 0/0
  7838 ;;		Unchanged: 0/0
  7839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7840 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7841 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7842 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7843 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7844 ;;Total ram usage:       10 bytes
  7845 ;; Hardware stack levels used: 1
  7846 ;; Hardware stack levels required when called: 1
  7847 ;; This function calls:
  7848 ;;		Nothing
  7849 ;; This function is called by:
  7850 ;;		_calibrate
  7851 ;;		_ftoa
  7852 ;; This function uses a non-reentrant model
  7853 ;;
  7854                           
  7855     0804                     ___fltol:	
  7856                           ;psect for function ___fltol
  7857                           
  7858     0804                     l3015:	
  7859                           ;incstack = 0
  7860                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7861                           
  7862     0804  1003               	clrc
  7863     0805  0020               	movlb	0	; select bank0
  7864     0806  0D3C               	rlf	___fltol@f1+2,w
  7865     0807  0D3D               	rlf	___fltol@f1+3,w
  7866     0808  00C3               	movwf	___fltol@exp1
  7867     0809  0843               	movf	___fltol@exp1,w
  7868     080A  1D03               	btfss	3,2
  7869     080B  280D               	goto	u3671
  7870     080C  280E               	goto	u3670
  7871     080D                     u3671:
  7872     080D  2817               	goto	l3021
  7873     080E                     u3670:
  7874     080E                     l3017:
  7875     080E  3000               	movlw	0
  7876     080F  00BD               	movwf	?___fltol+3
  7877     0810  3000               	movlw	0
  7878     0811  00BC               	movwf	?___fltol+2
  7879     0812  3000               	movlw	0
  7880     0813  00BB               	movwf	?___fltol+1
  7881     0814  3000               	movlw	0
  7882     0815  00BA               	movwf	?___fltol
  7883     0816  2874               	goto	l601
  7884     0817                     l3021:
  7885     0817  083A               	movf	___fltol@f1,w
  7886     0818  00BE               	movwf	??___fltol
  7887     0819  083B               	movf	___fltol@f1+1,w
  7888     081A  00BF               	movwf	??___fltol+1
  7889     081B  083C               	movf	___fltol@f1+2,w
  7890     081C  00C0               	movwf	??___fltol+2
  7891     081D  083D               	movf	___fltol@f1+3,w
  7892     081E  00C1               	movwf	??___fltol+3
  7893     081F  301F               	movlw	31
  7894     0820                     u3685:
  7895     0820  36C1               	lsrf	??___fltol+3,f
  7896     0821  0CC0               	rrf	??___fltol+2,f
  7897     0822  0CBF               	rrf	??___fltol+1,f
  7898     0823  0CBE               	rrf	??___fltol,f
  7899     0824                     u3680:
  7900     0824  0B89               	decfsz	9,f
  7901     0825  2820               	goto	u3685
  7902     0826  083E               	movf	??___fltol,w
  7903     0827  00C2               	movwf	___fltol@sign1
  7904     0828                     l3023:
  7905     0828  17BC               	bsf	___fltol@f1+2,7
  7906     0829                     l3025:
  7907     0829  30FF               	movlw	255
  7908     082A  05BA               	andwf	___fltol@f1,f
  7909     082B  30FF               	movlw	255
  7910     082C  05BB               	andwf	___fltol@f1+1,f
  7911     082D  30FF               	movlw	255
  7912     082E  05BC               	andwf	___fltol@f1+2,f
  7913     082F  3000               	movlw	0
  7914     0830  05BD               	andwf	___fltol@f1+3,f
  7915     0831                     l3027:
  7916     0831  3096               	movlw	150
  7917     0832  02C3               	subwf	___fltol@exp1,f
  7918     0833                     l3029:
  7919     0833  1FC3               	btfss	___fltol@exp1,7
  7920     0834  2836               	goto	u3691
  7921     0835  2837               	goto	u3690
  7922     0836                     u3691:
  7923     0836  284F               	goto	l3039
  7924     0837                     u3690:
  7925     0837                     l3031:
  7926     0837  0843               	movf	___fltol@exp1,w
  7927     0838  3A80               	xorlw	128
  7928     0839  3E97               	addlw	151
  7929     083A  1803               	skipnc
  7930     083B  283D               	goto	u3701
  7931     083C  283E               	goto	u3700
  7932     083D                     u3701:
  7933     083D  283F               	goto	l3037
  7934     083E                     u3700:
  7935     083E  280E               	goto	l3017
  7936     083F                     l3037:
  7937     083F  3001               	movlw	1
  7938     0840                     u3715:
  7939     0840  36BD               	lsrf	___fltol@f1+3,f
  7940     0841  0CBC               	rrf	___fltol@f1+2,f
  7941     0842  0CBB               	rrf	___fltol@f1+1,f
  7942     0843  0CBA               	rrf	___fltol@f1,f
  7943     0844  0B89               	decfsz	9,f
  7944     0845  2840               	goto	u3715
  7945     0846  3001               	movlw	1
  7946     0847  00BE               	movwf	??___fltol
  7947     0848  083E               	movf	??___fltol,w
  7948     0849  07C3               	addwf	___fltol@exp1,f
  7949     084A  1D03               	btfss	3,2
  7950     084B  284D               	goto	u3721
  7951     084C  284E               	goto	u3720
  7952     084D                     u3721:
  7953     084D  283F               	goto	l3037
  7954     084E                     u3720:
  7955     084E  2864               	goto	l3047
  7956     084F                     l3039:
  7957     084F  3020               	movlw	32
  7958     0850  0243               	subwf	___fltol@exp1,w
  7959     0851  1C03               	skipc
  7960     0852  2854               	goto	u3731
  7961     0853  2855               	goto	u3730
  7962     0854                     u3731:
  7963     0854  285F               	goto	l608
  7964     0855                     u3730:
  7965     0855  280E               	goto	l3017
  7966     0856                     l3045:
  7967     0856  3001               	movlw	1
  7968     0857                     u3745:
  7969     0857  35BA               	lslf	___fltol@f1,f
  7970     0858  0DBB               	rlf	___fltol@f1+1,f
  7971     0859  0DBC               	rlf	___fltol@f1+2,f
  7972     085A  0DBD               	rlf	___fltol@f1+3,f
  7973     085B  0B89               	decfsz	9,f
  7974     085C  2857               	goto	u3745
  7975     085D  3001               	movlw	1
  7976     085E  02C3               	subwf	___fltol@exp1,f
  7977     085F                     l608:
  7978     085F  0843               	movf	___fltol@exp1,w
  7979     0860  1D03               	btfss	3,2
  7980     0861  2863               	goto	u3751
  7981     0862  2864               	goto	u3750
  7982     0863                     u3751:
  7983     0863  2856               	goto	l3045
  7984     0864                     u3750:
  7985     0864                     l3047:
  7986     0864  0842               	movf	___fltol@sign1,w
  7987     0865  1903               	btfsc	3,2
  7988     0866  2868               	goto	u3761
  7989     0867  2869               	goto	u3760
  7990     0868                     u3761:
  7991     0868  2874               	goto	l611
  7992     0869                     u3760:
  7993     0869                     l3049:
  7994     0869  09BA               	comf	___fltol@f1,f
  7995     086A  09BB               	comf	___fltol@f1+1,f
  7996     086B  09BC               	comf	___fltol@f1+2,f
  7997     086C  09BD               	comf	___fltol@f1+3,f
  7998     086D  0ABA               	incf	___fltol@f1,f
  7999     086E  1903               	skipnz
  8000     086F  0ABB               	incf	___fltol@f1+1,f
  8001     0870  1903               	skipnz
  8002     0871  0ABC               	incf	___fltol@f1+2,f
  8003     0872  1903               	skipnz
  8004     0873  0ABD               	incf	___fltol@f1+3,f
  8005     0874                     l611:
  8006     0874                     l601:
  8007     0874  0008               	return
  8008     0875                     __end_of___fltol:
  8009                           
  8010                           	psect	text27
  8011     14D9                     __ptext27:	
  8012 ;; *************** function ___flsub *****************
  8013 ;; Defined at:
  8014 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcadd.c"
  8015 ;; Parameters:    Size  Location     Type
  8016 ;;  a               4    8[BANK0 ] long 
  8017 ;;  b               4   12[BANK0 ] long 
  8018 ;; Auto vars:     Size  Location     Type
  8019 ;;		None
  8020 ;; Return value:  Size  Location     Type
  8021 ;;                  4    8[BANK0 ] long 
  8022 ;; Registers used:
  8023 ;;		wreg, status,2, status,0, pclath, cstack
  8024 ;; Tracked objects:
  8025 ;;		On entry : 0/0
  8026 ;;		On exit  : 0/0
  8027 ;;		Unchanged: 0/0
  8028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8029 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8032 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8033 ;;Total ram usage:        8 bytes
  8034 ;; Hardware stack levels used: 1
  8035 ;; Hardware stack levels required when called: 2
  8036 ;; This function calls:
  8037 ;;		___fladd
  8038 ;; This function is called by:
  8039 ;;		_main
  8040 ;;		_ftoa
  8041 ;; This function uses a non-reentrant model
  8042 ;;
  8043                           
  8044     14D9                     ___flsub:	
  8045                           ;psect for function ___flsub
  8046                           
  8047     14D9                     l3051:	
  8048                           ;incstack = 0
  8049                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
  8050                           
  8051     14D9  3080               	movlw	128
  8052     14DA  0020               	movlb	0	; select bank0
  8053     14DB  06AB               	xorwf	___flsub@a+3,f
  8054     14DC                     l3053:
  8055     14DC  082F               	movf	___flsub@b+3,w
  8056     14DD  00F3               	movwf	___fladd@b+3
  8057     14DE  082E               	movf	___flsub@b+2,w
  8058     14DF  00F2               	movwf	___fladd@b+2
  8059     14E0  082D               	movf	___flsub@b+1,w
  8060     14E1  00F1               	movwf	___fladd@b+1
  8061     14E2  082C               	movf	___flsub@b,w
  8062     14E3  00F0               	movwf	___fladd@b
  8063     14E4  082B               	movf	___flsub@a+3,w
  8064     14E5  00F7               	movwf	___fladd@a+3
  8065     14E6  082A               	movf	___flsub@a+2,w
  8066     14E7  00F6               	movwf	___fladd@a+2
  8067     14E8  0829               	movf	___flsub@a+1,w
  8068     14E9  00F5               	movwf	___fladd@a+1
  8069     14EA  0828               	movf	___flsub@a,w
  8070     14EB  00F4               	movwf	___fladd@a
  8071     14EC  3185  2566  3194   	fcall	___fladd
  8072     14EF  0873               	movf	?___fladd+3,w
  8073     14F0  0020               	movlb	0	; select bank0
  8074     14F1  00AB               	movwf	?___flsub+3
  8075     14F2  0872               	movf	?___fladd+2,w
  8076     14F3  00AA               	movwf	?___flsub+2
  8077     14F4  0871               	movf	?___fladd+1,w
  8078     14F5  00A9               	movwf	?___flsub+1
  8079     14F6  0870               	movf	?___fladd,w
  8080     14F7  00A8               	movwf	?___flsub
  8081     14F8                     l754:
  8082     14F8  0008               	return
  8083     14F9                     __end_of___flsub:
  8084                           
  8085                           	psect	text28
  8086     0566                     __ptext28:	
  8087 ;; *************** function ___fladd *****************
  8088 ;; Defined at:
  8089 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcadd.c"
  8090 ;; Parameters:    Size  Location     Type
  8091 ;;  b               4    0[COMMON] long 
  8092 ;;  a               4    4[COMMON] long 
  8093 ;; Auto vars:     Size  Location     Type
  8094 ;;  grs             1   11[COMMON] unsigned char 
  8095 ;;  bexp            1   10[COMMON] unsigned char 
  8096 ;;  aexp            1    9[COMMON] unsigned char 
  8097 ;;  signs           1    8[COMMON] unsigned char 
  8098 ;; Return value:  Size  Location     Type
  8099 ;;                  4    0[COMMON] unsigned char 
  8100 ;; Registers used:
  8101 ;;		wreg, status,2, status,0
  8102 ;; Tracked objects:
  8103 ;;		On entry : 0/0
  8104 ;;		On exit  : 0/0
  8105 ;;		Unchanged: 0/0
  8106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8107 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8108 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8109 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8110 ;;      Totals:        12       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8111 ;;Total ram usage:       20 bytes
  8112 ;; Hardware stack levels used: 1
  8113 ;; Hardware stack levels required when called: 1
  8114 ;; This function calls:
  8115 ;;		Nothing
  8116 ;; This function is called by:
  8117 ;;		___flsub
  8118 ;; This function uses a non-reentrant model
  8119 ;;
  8120                           
  8121     0566                     ___fladd:	
  8122                           ;psect for function ___fladd
  8123                           
  8124     0566                     l2715:	
  8125                           ;incstack = 0
  8126                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  8127                           
  8128     0566  0873               	movf	___fladd@b+3,w
  8129     0567  3980               	andlw	128
  8130     0568  00F8               	movwf	___fladd@signs
  8131     0569                     l2717:
  8132     0569  3573               	lslf	___fladd@b+3,w
  8133     056A  00FA               	movwf	___fladd@bexp
  8134     056B                     l2719:
  8135     056B  1FF2               	btfss	___fladd@b+2,7
  8136     056C  2D6E               	goto	u3081
  8137     056D  2D6F               	goto	u3080
  8138     056E                     u3081:
  8139     056E  2D70               	goto	l2723
  8140     056F                     u3080:
  8141     056F                     l2721:
  8142     056F  147A               	bsf	___fladd@bexp,0
  8143     0570                     l2723:
  8144     0570  087A               	movf	___fladd@bexp,w
  8145     0571  1903               	btfsc	3,2
  8146     0572  2D74               	goto	u3091
  8147     0573  2D75               	goto	u3090
  8148     0574                     u3091:
  8149     0574  2D85               	goto	l2733
  8150     0575                     u3090:
  8151     0575                     l2725:
  8152     0575  0A7A               	incf	___fladd@bexp,w
  8153     0576  1D03               	btfss	3,2
  8154     0577  2D79               	goto	u3101
  8155     0578  2D7A               	goto	u3100
  8156     0579                     u3101:
  8157     0579  2D82               	goto	l2729
  8158     057A                     u3100:
  8159     057A                     l2727:
  8160     057A  3000               	movlw	0
  8161     057B  00F3               	movwf	___fladd@b+3
  8162     057C  3000               	movlw	0
  8163     057D  00F2               	movwf	___fladd@b+2
  8164     057E  3000               	movlw	0
  8165     057F  00F1               	movwf	___fladd@b+1
  8166     0580  3000               	movlw	0
  8167     0581  00F0               	movwf	___fladd@b
  8168     0582                     l2729:
  8169     0582  17F2               	bsf	___fladd@b+2,7
  8170     0583                     l2731:
  8171     0583  01F3               	clrf	___fladd@b+3
  8172     0584  2D8D               	goto	l2735
  8173     0585                     l2733:
  8174     0585  3000               	movlw	0
  8175     0586  00F3               	movwf	___fladd@b+3
  8176     0587  3000               	movlw	0
  8177     0588  00F2               	movwf	___fladd@b+2
  8178     0589  3000               	movlw	0
  8179     058A  00F1               	movwf	___fladd@b+1
  8180     058B  3000               	movlw	0
  8181     058C  00F0               	movwf	___fladd@b
  8182     058D                     l2735:
  8183     058D  0877               	movf	___fladd@a+3,w
  8184     058E  3980               	andlw	128
  8185     058F  00F9               	movwf	___fladd@aexp
  8186     0590                     l2737:
  8187     0590  0879               	movf	___fladd@aexp,w
  8188     0591  0678               	xorwf	___fladd@signs,w
  8189     0592  1903               	skipnz
  8190     0593  2D95               	goto	u3111
  8191     0594  2D96               	goto	u3110
  8192     0595                     u3111:
  8193     0595  2D97               	goto	l2741
  8194     0596                     u3110:
  8195     0596                     l2739:
  8196     0596  1778               	bsf	___fladd@signs,6
  8197     0597                     l2741:
  8198     0597  3577               	lslf	___fladd@a+3,w
  8199     0598  00F9               	movwf	___fladd@aexp
  8200     0599                     l2743:
  8201     0599  1FF6               	btfss	___fladd@a+2,7
  8202     059A  2D9C               	goto	u3121
  8203     059B  2D9D               	goto	u3120
  8204     059C                     u3121:
  8205     059C  2D9E               	goto	l2747
  8206     059D                     u3120:
  8207     059D                     l2745:
  8208     059D  1479               	bsf	___fladd@aexp,0
  8209     059E                     l2747:
  8210     059E  0879               	movf	___fladd@aexp,w
  8211     059F  1903               	btfsc	3,2
  8212     05A0  2DA2               	goto	u3131
  8213     05A1  2DA3               	goto	u3130
  8214     05A2                     u3131:
  8215     05A2  2DB3               	goto	l2757
  8216     05A3                     u3130:
  8217     05A3                     l2749:
  8218     05A3  0A79               	incf	___fladd@aexp,w
  8219     05A4  1D03               	btfss	3,2
  8220     05A5  2DA7               	goto	u3141
  8221     05A6  2DA8               	goto	u3140
  8222     05A7                     u3141:
  8223     05A7  2DB0               	goto	l2753
  8224     05A8                     u3140:
  8225     05A8                     l2751:
  8226     05A8  3000               	movlw	0
  8227     05A9  00F7               	movwf	___fladd@a+3
  8228     05AA  3000               	movlw	0
  8229     05AB  00F6               	movwf	___fladd@a+2
  8230     05AC  3000               	movlw	0
  8231     05AD  00F5               	movwf	___fladd@a+1
  8232     05AE  3000               	movlw	0
  8233     05AF  00F4               	movwf	___fladd@a
  8234     05B0                     l2753:
  8235     05B0  17F6               	bsf	___fladd@a+2,7
  8236     05B1                     l2755:
  8237     05B1  01F7               	clrf	___fladd@a+3
  8238     05B2  2DBB               	goto	l708
  8239     05B3                     l2757:
  8240     05B3  3000               	movlw	0
  8241     05B4  00F7               	movwf	___fladd@a+3
  8242     05B5  3000               	movlw	0
  8243     05B6  00F6               	movwf	___fladd@a+2
  8244     05B7  3000               	movlw	0
  8245     05B8  00F5               	movwf	___fladd@a+1
  8246     05B9  3000               	movlw	0
  8247     05BA  00F4               	movwf	___fladd@a
  8248     05BB                     l708:
  8249     05BB  087A               	movf	___fladd@bexp,w
  8250     05BC  0279               	subwf	___fladd@aexp,w
  8251     05BD  1803               	skipnc
  8252     05BE  2DC0               	goto	u3151
  8253     05BF  2DC1               	goto	u3150
  8254     05C0                     u3151:
  8255     05C0  2DE8               	goto	l2793
  8256     05C1                     u3150:
  8257     05C1                     l2759:
  8258     05C1  1F78               	btfss	___fladd@signs,6
  8259     05C2  2DC4               	goto	u3161
  8260     05C3  2DC5               	goto	u3160
  8261     05C4                     u3161:
  8262     05C4  2DCA               	goto	l2763
  8263     05C5                     u3160:
  8264     05C5                     l2761:
  8265     05C5  3080               	movlw	128
  8266     05C6  0020               	movlb	0	; select bank0
  8267     05C7  00A0               	movwf	??___fladd
  8268     05C8  0820               	movf	??___fladd,w
  8269     05C9  06F8               	xorwf	___fladd@signs,f
  8270     05CA                     l2763:
  8271     05CA  087A               	movf	___fladd@bexp,w
  8272     05CB  00FB               	movwf	___fladd@grs
  8273     05CC                     l2765:
  8274     05CC  0879               	movf	___fladd@aexp,w
  8275     05CD  00FA               	movwf	___fladd@bexp
  8276     05CE                     l2767:
  8277     05CE  087B               	movf	___fladd@grs,w
  8278     05CF  00F9               	movwf	___fladd@aexp
  8279     05D0                     l2769:
  8280     05D0  0870               	movf	___fladd@b,w
  8281     05D1  00FB               	movwf	___fladd@grs
  8282     05D2                     l2771:
  8283     05D2  0874               	movf	___fladd@a,w
  8284     05D3  00F0               	movwf	___fladd@b
  8285     05D4                     l2773:
  8286     05D4  087B               	movf	___fladd@grs,w
  8287     05D5  00F4               	movwf	___fladd@a
  8288     05D6                     l2775:
  8289     05D6  0871               	movf	___fladd@b+1,w
  8290     05D7  00FB               	movwf	___fladd@grs
  8291     05D8                     l2777:
  8292     05D8  0875               	movf	___fladd@a+1,w
  8293     05D9  00F1               	movwf	___fladd@b+1
  8294     05DA                     l2779:
  8295     05DA  087B               	movf	___fladd@grs,w
  8296     05DB  00F5               	movwf	___fladd@a+1
  8297     05DC                     l2781:
  8298     05DC  0872               	movf	___fladd@b+2,w
  8299     05DD  00FB               	movwf	___fladd@grs
  8300     05DE                     l2783:
  8301     05DE  0876               	movf	___fladd@a+2,w
  8302     05DF  00F2               	movwf	___fladd@b+2
  8303     05E0                     l2785:
  8304     05E0  087B               	movf	___fladd@grs,w
  8305     05E1  00F6               	movwf	___fladd@a+2
  8306     05E2                     l2787:
  8307     05E2  0873               	movf	___fladd@b+3,w
  8308     05E3  00FB               	movwf	___fladd@grs
  8309     05E4                     l2789:
  8310     05E4  0877               	movf	___fladd@a+3,w
  8311     05E5  00F3               	movwf	___fladd@b+3
  8312     05E6                     l2791:
  8313     05E6  087B               	movf	___fladd@grs,w
  8314     05E7  00F7               	movwf	___fladd@a+3
  8315     05E8                     l2793:
  8316     05E8  01FB               	clrf	___fladd@grs
  8317     05E9                     l2795:
  8318     05E9  0879               	movf	___fladd@aexp,w
  8319     05EA  0020               	movlb	0	; select bank0
  8320     05EB  00A0               	movwf	??___fladd
  8321     05EC  01A1               	clrf	??___fladd+1
  8322     05ED  0821               	movf	??___fladd+1,w
  8323     05EE  00A3               	movwf	??___fladd+3
  8324     05EF  087A               	movf	___fladd@bexp,w
  8325     05F0  0220               	subwf	??___fladd,w
  8326     05F1  00A2               	movwf	??___fladd+2
  8327     05F2  1C03               	skipc
  8328     05F3  03A3               	decf	??___fladd+3,f
  8329     05F4  0823               	movf	??___fladd+3,w
  8330     05F5  3A80               	xorlw	128
  8331     05F6  00A4               	movwf	??___fladd+4
  8332     05F7  3080               	movlw	128
  8333     05F8  0224               	subwf	??___fladd+4,w
  8334     05F9  1D03               	skipz
  8335     05FA  2DFD               	goto	u3175
  8336     05FB  301A               	movlw	26
  8337     05FC  0222               	subwf	??___fladd+2,w
  8338     05FD                     u3175:
  8339     05FD  1C03               	skipc
  8340     05FE  2E00               	goto	u3171
  8341     05FF  2E01               	goto	u3170
  8342     0600                     u3171:
  8343     0600  2E33               	goto	l2811
  8344     0601                     u3170:
  8345     0601                     l2797:
  8346     0601  0873               	movf	___fladd@b+3,w
  8347     0602  0472               	iorwf	___fladd@b+2,w
  8348     0603  0471               	iorwf	___fladd@b+1,w
  8349     0604  0470               	iorwf	___fladd@b,w
  8350     0605  1D03               	skipz
  8351     0606  2E08               	goto	u3181
  8352     0607  2E0A               	goto	u3180
  8353     0608                     u3181:
  8354     0608  3001               	movlw	1
  8355     0609  2E0B               	goto	u3190
  8356     060A                     u3180:
  8357     060A  3000               	movlw	0
  8358     060B                     u3190:
  8359     060B  00FB               	movwf	___fladd@grs
  8360     060C  3000               	movlw	0
  8361     060D  00F3               	movwf	___fladd@b+3
  8362     060E  3000               	movlw	0
  8363     060F  00F2               	movwf	___fladd@b+2
  8364     0610  3000               	movlw	0
  8365     0611  00F1               	movwf	___fladd@b+1
  8366     0612  3000               	movlw	0
  8367     0613  00F0               	movwf	___fladd@b
  8368     0614  0879               	movf	___fladd@aexp,w
  8369     0615  00FA               	movwf	___fladd@bexp
  8370     0616  2E39               	goto	l712
  8371     0617                     l714:
  8372     0617  1C7B               	btfss	___fladd@grs,0
  8373     0618  2E1A               	goto	u3201
  8374     0619  2E1B               	goto	u3200
  8375     061A                     u3201:
  8376     061A  2E1F               	goto	l2801
  8377     061B                     u3200:
  8378     061B                     l2799:
  8379     061B  367B               	lsrf	___fladd@grs,w
  8380     061C  3801               	iorlw	1
  8381     061D  00FB               	movwf	___fladd@grs
  8382     061E  2E21               	goto	l2803
  8383     061F                     l2801:
  8384     061F  1003               	clrc
  8385     0620  0CFB               	rrf	___fladd@grs,f
  8386     0621                     l2803:
  8387     0621  1C70               	btfss	___fladd@b,0
  8388     0622  2E24               	goto	u3211
  8389     0623  2E25               	goto	u3210
  8390     0624                     u3211:
  8391     0624  2E26               	goto	l2807
  8392     0625                     u3210:
  8393     0625                     l2805:
  8394     0625  17FB               	bsf	___fladd@grs,7
  8395     0626                     l2807:
  8396     0626  3001               	movlw	1
  8397     0627  0020               	movlb	0	; select bank0
  8398     0628  00A0               	movwf	??___fladd
  8399     0629                     u3225:
  8400     0629  37F3               	asrf	___fladd@b+3,f
  8401     062A  0CF2               	rrf	___fladd@b+2,f
  8402     062B  0CF1               	rrf	___fladd@b+1,f
  8403     062C  0CF0               	rrf	___fladd@b,f
  8404     062D  0BA0               	decfsz	??___fladd& (0+127),f
  8405     062E  2E29               	goto	u3225
  8406     062F                     l2809:
  8407     062F  3001               	movlw	1
  8408     0630  00A0               	movwf	??___fladd
  8409     0631  0820               	movf	??___fladd,w
  8410     0632  07FA               	addwf	___fladd@bexp,f
  8411     0633                     l2811:
  8412     0633  0879               	movf	___fladd@aexp,w
  8413     0634  027A               	subwf	___fladd@bexp,w
  8414     0635  1C03               	skipc
  8415     0636  2E38               	goto	u3231
  8416     0637  2E39               	goto	u3230
  8417     0638                     u3231:
  8418     0638  2E17               	goto	l714
  8419     0639                     u3230:
  8420     0639                     l712:
  8421     0639  1B78               	btfsc	___fladd@signs,6
  8422     063A  2E3C               	goto	u3241
  8423     063B  2E3D               	goto	u3240
  8424     063C                     u3241:
  8425     063C  2E74               	goto	l2837
  8426     063D                     u3240:
  8427     063D                     l2813:
  8428     063D  087A               	movf	___fladd@bexp,w
  8429     063E  1D03               	btfss	3,2
  8430     063F  2E41               	goto	u3251
  8431     0640  2E42               	goto	u3250
  8432     0641                     u3251:
  8433     0641  2E4B               	goto	l2819
  8434     0642                     u3250:
  8435     0642                     l2815:
  8436     0642  3000               	movlw	0
  8437     0643  00F3               	movwf	?___fladd+3
  8438     0644  3000               	movlw	0
  8439     0645  00F2               	movwf	?___fladd+2
  8440     0646  3000               	movlw	0
  8441     0647  00F1               	movwf	?___fladd+1
  8442     0648  3000               	movlw	0
  8443     0649  00F0               	movwf	?___fladd
  8444     064A  2F71               	goto	l721
  8445     064B                     l2819:
  8446     064B  0874               	movf	___fladd@a,w
  8447     064C  07F0               	addwf	___fladd@b,f
  8448     064D  0875               	movf	___fladd@a+1,w
  8449     064E  3DF1               	addwfc	___fladd@b+1,f
  8450     064F  0876               	movf	___fladd@a+2,w
  8451     0650  3DF2               	addwfc	___fladd@b+2,f
  8452     0651  0877               	movf	___fladd@a+3,w
  8453     0652  3DF3               	addwfc	___fladd@b+3,f
  8454     0653                     l2821:
  8455     0653  1C73               	btfss	___fladd@b+3,0
  8456     0654  2E56               	goto	u3261
  8457     0655  2E57               	goto	u3260
  8458     0656                     u3261:
  8459     0656  2F01               	goto	l2871
  8460     0657                     u3260:
  8461     0657                     l2823:
  8462     0657  1C7B               	btfss	___fladd@grs,0
  8463     0658  2E5A               	goto	u3271
  8464     0659  2E5B               	goto	u3270
  8465     065A                     u3271:
  8466     065A  2E5F               	goto	l2827
  8467     065B                     u3270:
  8468     065B                     l2825:
  8469     065B  367B               	lsrf	___fladd@grs,w
  8470     065C  3801               	iorlw	1
  8471     065D  00FB               	movwf	___fladd@grs
  8472     065E  2E61               	goto	l2829
  8473     065F                     l2827:
  8474     065F  1003               	clrc
  8475     0660  0CFB               	rrf	___fladd@grs,f
  8476     0661                     l2829:
  8477     0661  1C70               	btfss	___fladd@b,0
  8478     0662  2E64               	goto	u3281
  8479     0663  2E65               	goto	u3280
  8480     0664                     u3281:
  8481     0664  2E66               	goto	l2833
  8482     0665                     u3280:
  8483     0665                     l2831:
  8484     0665  17FB               	bsf	___fladd@grs,7
  8485     0666                     l2833:
  8486     0666  3001               	movlw	1
  8487     0667  0020               	movlb	0	; select bank0
  8488     0668  00A0               	movwf	??___fladd
  8489     0669                     u3295:
  8490     0669  37F3               	asrf	___fladd@b+3,f
  8491     066A  0CF2               	rrf	___fladd@b+2,f
  8492     066B  0CF1               	rrf	___fladd@b+1,f
  8493     066C  0CF0               	rrf	___fladd@b,f
  8494     066D  0BA0               	decfsz	??___fladd& (0+127),f
  8495     066E  2E69               	goto	u3295
  8496     066F                     l2835:
  8497     066F  3001               	movlw	1
  8498     0670  00A0               	movwf	??___fladd
  8499     0671  0820               	movf	??___fladd,w
  8500     0672  07FA               	addwf	___fladd@bexp,f
  8501     0673  2F01               	goto	l2871
  8502     0674                     l2837:
  8503     0674  0873               	movf	___fladd@b+3,w
  8504     0675  3A80               	xorlw	128
  8505     0676  0020               	movlb	0	; select bank0
  8506     0677  00A0               	movwf	??___fladd
  8507     0678  0877               	movf	___fladd@a+3,w
  8508     0679  3A80               	xorlw	128
  8509     067A  0220               	subwf	??___fladd,w
  8510     067B  1D03               	skipz
  8511     067C  2E87               	goto	u3303
  8512     067D  0876               	movf	___fladd@a+2,w
  8513     067E  0272               	subwf	___fladd@b+2,w
  8514     067F  1D03               	skipz
  8515     0680  2E87               	goto	u3303
  8516     0681  0875               	movf	___fladd@a+1,w
  8517     0682  0271               	subwf	___fladd@b+1,w
  8518     0683  1D03               	skipz
  8519     0684  2E87               	goto	u3303
  8520     0685  0874               	movf	___fladd@a,w
  8521     0686  0270               	subwf	___fladd@b,w
  8522     0687                     u3303:
  8523     0687  1803               	skipnc
  8524     0688  2E8A               	goto	u3301
  8525     0689  2E8B               	goto	u3300
  8526     068A                     u3301:
  8527     068A  2EC3               	goto	l2847
  8528     068B                     u3300:
  8529     068B                     l2839:
  8530     068B  30FF               	movlw	255
  8531     068C  00A0               	movwf	??___fladd
  8532     068D  30FF               	movlw	255
  8533     068E  00A1               	movwf	??___fladd+1
  8534     068F  30FF               	movlw	255
  8535     0690  00A2               	movwf	??___fladd+2
  8536     0691  30FF               	movlw	255
  8537     0692  00A3               	movwf	??___fladd+3
  8538     0693  0870               	movf	___fladd@b,w
  8539     0694  0274               	subwf	___fladd@a,w
  8540     0695  00A4               	movwf	??___fladd+4
  8541     0696  0871               	movf	___fladd@b+1,w
  8542     0697  3B75               	subwfb	___fladd@a+1,w
  8543     0698  00A5               	movwf	??___fladd+5
  8544     0699  0872               	movf	___fladd@b+2,w
  8545     069A  3B76               	subwfb	___fladd@a+2,w
  8546     069B  00A6               	movwf	??___fladd+6
  8547     069C  0873               	movf	___fladd@b+3,w
  8548     069D  3B77               	subwfb	___fladd@a+3,w
  8549     069E  00A7               	movwf	??___fladd+7
  8550     069F  0824               	movf	??___fladd+4,w
  8551     06A0  07A0               	addwf	??___fladd,f
  8552     06A1  0825               	movf	??___fladd+5,w
  8553     06A2  3DA1               	addwfc	??___fladd+1,f
  8554     06A3  0826               	movf	??___fladd+6,w
  8555     06A4  3DA2               	addwfc	??___fladd+2,f
  8556     06A5  0827               	movf	??___fladd+7,w
  8557     06A6  3DA3               	addwfc	??___fladd+3,f
  8558     06A7  0823               	movf	??___fladd+3,w
  8559     06A8  00F3               	movwf	___fladd@b+3
  8560     06A9  0822               	movf	??___fladd+2,w
  8561     06AA  00F2               	movwf	___fladd@b+2
  8562     06AB  0821               	movf	??___fladd+1,w
  8563     06AC  00F1               	movwf	___fladd@b+1
  8564     06AD  0820               	movf	??___fladd,w
  8565     06AE  00F0               	movwf	___fladd@b
  8566     06AF                     l2841:
  8567     06AF  3080               	movlw	128
  8568     06B0  00A0               	movwf	??___fladd
  8569     06B1  0820               	movf	??___fladd,w
  8570     06B2  06F8               	xorwf	___fladd@signs,f
  8571     06B3  09FB               	comf	___fladd@grs,f
  8572     06B4  0AFB               	incf	___fladd@grs,f
  8573     06B5                     l2843:
  8574     06B5  087B               	movf	___fladd@grs,w
  8575     06B6  1D03               	btfss	3,2
  8576     06B7  2EB9               	goto	u3311
  8577     06B8  2EBA               	goto	u3310
  8578     06B9                     u3311:
  8579     06B9  2ECB               	goto	l729
  8580     06BA                     u3310:
  8581     06BA                     l2845:
  8582     06BA  3001               	movlw	1
  8583     06BB  07F0               	addwf	___fladd@b,f
  8584     06BC  3000               	movlw	0
  8585     06BD  3DF1               	addwfc	___fladd@b+1,f
  8586     06BE  3000               	movlw	0
  8587     06BF  3DF2               	addwfc	___fladd@b+2,f
  8588     06C0  3000               	movlw	0
  8589     06C1  3DF3               	addwfc	___fladd@b+3,f
  8590     06C2  2ECB               	goto	l729
  8591     06C3                     l2847:
  8592     06C3  0874               	movf	___fladd@a,w
  8593     06C4  02F0               	subwf	___fladd@b,f
  8594     06C5  0875               	movf	___fladd@a+1,w
  8595     06C6  3BF1               	subwfb	___fladd@b+1,f
  8596     06C7  0876               	movf	___fladd@a+2,w
  8597     06C8  3BF2               	subwfb	___fladd@b+2,f
  8598     06C9  0877               	movf	___fladd@a+3,w
  8599     06CA  3BF3               	subwfb	___fladd@b+3,f
  8600     06CB                     l729:
  8601     06CB  0873               	movf	___fladd@b+3,w
  8602     06CC  0472               	iorwf	___fladd@b+2,w
  8603     06CD  0471               	iorwf	___fladd@b+1,w
  8604     06CE  0470               	iorwf	___fladd@b,w
  8605     06CF  1D03               	skipz
  8606     06D0  2ED2               	goto	u3321
  8607     06D1  2ED3               	goto	u3320
  8608     06D2                     u3321:
  8609     06D2  2EFD               	goto	l2869
  8610     06D3                     u3320:
  8611     06D3                     l2849:
  8612     06D3  087B               	movf	___fladd@grs,w
  8613     06D4  1D03               	btfss	3,2
  8614     06D5  2ED7               	goto	u3331
  8615     06D6  2ED8               	goto	u3330
  8616     06D7                     u3331:
  8617     06D7  2EFD               	goto	l2869
  8618     06D8                     u3330:
  8619     06D8                     l2851:
  8620     06D8  3000               	movlw	0
  8621     06D9  00F3               	movwf	?___fladd+3
  8622     06DA  3000               	movlw	0
  8623     06DB  00F2               	movwf	?___fladd+2
  8624     06DC  3000               	movlw	0
  8625     06DD  00F1               	movwf	?___fladd+1
  8626     06DE  3000               	movlw	0
  8627     06DF  00F0               	movwf	?___fladd
  8628     06E0  2F71               	goto	l721
  8629     06E1                     l2855:
  8630     06E1  3001               	movlw	1
  8631     06E2                     u3345:
  8632     06E2  35F0               	lslf	___fladd@b,f
  8633     06E3  0DF1               	rlf	___fladd@b+1,f
  8634     06E4  0DF2               	rlf	___fladd@b+2,f
  8635     06E5  0DF3               	rlf	___fladd@b+3,f
  8636     06E6  0B89               	decfsz	9,f
  8637     06E7  2EE2               	goto	u3345
  8638     06E8                     l2857:
  8639     06E8  1FFB               	btfss	___fladd@grs,7
  8640     06E9  2EEB               	goto	u3351
  8641     06EA  2EEC               	goto	u3350
  8642     06EB                     u3351:
  8643     06EB  2EED               	goto	l733
  8644     06EC                     u3350:
  8645     06EC                     l2859:
  8646     06EC  1470               	bsf	___fladd@b,0
  8647     06ED                     l733:
  8648     06ED  1C7B               	btfss	___fladd@grs,0
  8649     06EE  2EF0               	goto	u3361
  8650     06EF  2EF1               	goto	u3360
  8651     06F0                     u3361:
  8652     06F0  2EF4               	goto	l2863
  8653     06F1                     u3360:
  8654     06F1                     l2861:
  8655     06F1  1403               	setc
  8656     06F2  0DFB               	rlf	___fladd@grs,f
  8657     06F3  2EF6               	goto	l2865
  8658     06F4                     l2863:
  8659     06F4  1003               	clrc
  8660     06F5  0DFB               	rlf	___fladd@grs,f
  8661     06F6                     l2865:
  8662     06F6  087A               	movf	___fladd@bexp,w
  8663     06F7  1903               	btfsc	3,2
  8664     06F8  2EFA               	goto	u3371
  8665     06F9  2EFB               	goto	u3370
  8666     06FA                     u3371:
  8667     06FA  2EFD               	goto	l2869
  8668     06FB                     u3370:
  8669     06FB                     l2867:
  8670     06FB  3001               	movlw	1
  8671     06FC  02FA               	subwf	___fladd@bexp,f
  8672     06FD                     l2869:
  8673     06FD  1FF2               	btfss	___fladd@b+2,7
  8674     06FE  2F00               	goto	u3381
  8675     06FF  2F01               	goto	u3380
  8676     0700                     u3381:
  8677     0700  2EE1               	goto	l2855
  8678     0701                     u3380:
  8679     0701                     l2871:
  8680     0701  01F9               	clrf	___fladd@aexp
  8681     0702                     l2873:
  8682     0702  1FFB               	btfss	___fladd@grs,7
  8683     0703  2F05               	goto	u3391
  8684     0704  2F06               	goto	u3390
  8685     0705                     u3391:
  8686     0705  2F14               	goto	l2881
  8687     0706                     u3390:
  8688     0706                     l2875:
  8689     0706  087B               	movf	___fladd@grs,w
  8690     0707  397F               	andlw	127
  8691     0708  1903               	btfsc	3,2
  8692     0709  2F0B               	goto	u3401
  8693     070A  2F0C               	goto	u3400
  8694     070B                     u3401:
  8695     070B  2F0F               	goto	l739
  8696     070C                     u3400:
  8697     070C                     l2877:
  8698     070C  01F9               	clrf	___fladd@aexp
  8699     070D  0AF9               	incf	___fladd@aexp,f
  8700     070E  2F14               	goto	l2881
  8701     070F                     l739:
  8702     070F  1C70               	btfss	___fladd@b,0
  8703     0710  2F12               	goto	u3411
  8704     0711  2F13               	goto	u3410
  8705     0712                     u3411:
  8706     0712  2F14               	goto	l2881
  8707     0713                     u3410:
  8708     0713  2F0C               	goto	l2877
  8709     0714                     l2881:
  8710     0714  0879               	movf	___fladd@aexp,w
  8711     0715  1903               	btfsc	3,2
  8712     0716  2F18               	goto	u3421
  8713     0717  2F19               	goto	u3420
  8714     0718                     u3421:
  8715     0718  2F47               	goto	l742
  8716     0719                     u3420:
  8717     0719                     l2883:
  8718     0719  3001               	movlw	1
  8719     071A  07F0               	addwf	___fladd@b,f
  8720     071B  3000               	movlw	0
  8721     071C  3DF1               	addwfc	___fladd@b+1,f
  8722     071D  3000               	movlw	0
  8723     071E  3DF2               	addwfc	___fladd@b+2,f
  8724     071F  3000               	movlw	0
  8725     0720  3DF3               	addwfc	___fladd@b+3,f
  8726     0721                     l2885:
  8727     0721  1C73               	btfss	___fladd@b+3,0
  8728     0722  2F24               	goto	u3431
  8729     0723  2F25               	goto	u3430
  8730     0724                     u3431:
  8731     0724  2F47               	goto	l742
  8732     0725                     u3430:
  8733     0725                     l2887:
  8734     0725  0870               	movf	___fladd@b,w
  8735     0726  0020               	movlb	0	; select bank0
  8736     0727  00A0               	movwf	??___fladd
  8737     0728  0871               	movf	___fladd@b+1,w
  8738     0729  00A1               	movwf	??___fladd+1
  8739     072A  0872               	movf	___fladd@b+2,w
  8740     072B  00A2               	movwf	??___fladd+2
  8741     072C  0873               	movf	___fladd@b+3,w
  8742     072D  00A3               	movwf	??___fladd+3
  8743     072E  3001               	movlw	1
  8744     072F  00A4               	movwf	??___fladd+4
  8745     0730                     u3445:
  8746     0730  37A3               	asrf	??___fladd+3,f
  8747     0731  0CA2               	rrf	??___fladd+2,f
  8748     0732  0CA1               	rrf	??___fladd+1,f
  8749     0733  0CA0               	rrf	??___fladd,f
  8750     0734                     u3440:
  8751     0734  0BA4               	decfsz	??___fladd+4,f
  8752     0735  2F30               	goto	u3445
  8753     0736  0823               	movf	??___fladd+3,w
  8754     0737  00F3               	movwf	___fladd@b+3
  8755     0738  0822               	movf	??___fladd+2,w
  8756     0739  00F2               	movwf	___fladd@b+2
  8757     073A  0821               	movf	??___fladd+1,w
  8758     073B  00F1               	movwf	___fladd@b+1
  8759     073C  0820               	movf	??___fladd,w
  8760     073D  00F0               	movwf	___fladd@b
  8761     073E  0A7A               	incf	___fladd@bexp,w
  8762     073F  1903               	btfsc	3,2
  8763     0740  2F42               	goto	u3451
  8764     0741  2F43               	goto	u3450
  8765     0742                     u3451:
  8766     0742  2F47               	goto	l742
  8767     0743                     u3450:
  8768     0743                     l2889:
  8769     0743  3001               	movlw	1
  8770     0744  00A0               	movwf	??___fladd
  8771     0745  0820               	movf	??___fladd,w
  8772     0746  07FA               	addwf	___fladd@bexp,f
  8773     0747                     l742:
  8774     0747  0A7A               	incf	___fladd@bexp,w
  8775     0748  1903               	btfsc	3,2
  8776     0749  2F4B               	goto	u3461
  8777     074A  2F4C               	goto	u3460
  8778     074B                     u3461:
  8779     074B  2F51               	goto	l2893
  8780     074C                     u3460:
  8781     074C                     l2891:
  8782     074C  087A               	movf	___fladd@bexp,w
  8783     074D  1D03               	btfss	3,2
  8784     074E  2F50               	goto	u3471
  8785     074F  2F51               	goto	u3470
  8786     0750                     u3471:
  8787     0750  2F5F               	goto	l2899
  8788     0751                     u3470:
  8789     0751                     l2893:
  8790     0751  3000               	movlw	0
  8791     0752  00F3               	movwf	___fladd@b+3
  8792     0753  3000               	movlw	0
  8793     0754  00F2               	movwf	___fladd@b+2
  8794     0755  3000               	movlw	0
  8795     0756  00F1               	movwf	___fladd@b+1
  8796     0757  3000               	movlw	0
  8797     0758  00F0               	movwf	___fladd@b
  8798     0759                     l2895:
  8799     0759  087A               	movf	___fladd@bexp,w
  8800     075A  1D03               	btfss	3,2
  8801     075B  2F5D               	goto	u3481
  8802     075C  2F5E               	goto	u3480
  8803     075D                     u3481:
  8804     075D  2F5F               	goto	l2899
  8805     075E                     u3480:
  8806     075E                     l2897:
  8807     075E  01F8               	clrf	___fladd@signs
  8808     075F                     l2899:
  8809     075F  1C7A               	btfss	___fladd@bexp,0
  8810     0760  2F62               	goto	u3491
  8811     0761  2F63               	goto	u3490
  8812     0762                     u3491:
  8813     0762  2F65               	goto	l2903
  8814     0763                     u3490:
  8815     0763                     l2901:
  8816     0763  17F2               	bsf	___fladd@b+2,7
  8817     0764  2F6A               	goto	l750
  8818     0765                     l2903:
  8819     0765  307F               	movlw	127
  8820     0766  0020               	movlb	0	; select bank0
  8821     0767  00A0               	movwf	??___fladd
  8822     0768  0820               	movf	??___fladd,w
  8823     0769  05F2               	andwf	___fladd@b+2,f
  8824     076A                     l750:
  8825     076A  367A               	lsrf	___fladd@bexp,w
  8826     076B  00F3               	movwf	___fladd@b+3
  8827     076C                     l2905:
  8828     076C  1FF8               	btfss	___fladd@signs,7
  8829     076D  2F6F               	goto	u3501
  8830     076E  2F70               	goto	u3500
  8831     076F                     u3501:
  8832     076F  2F71               	goto	l751
  8833     0770                     u3500:
  8834     0770                     l2907:
  8835     0770  17F3               	bsf	___fladd@b+3,7
  8836     0771                     l751:
  8837     0771                     l721:
  8838     0771  0008               	return
  8839     0772                     __end_of___fladd:
  8840                           
  8841                           	psect	text29
  8842     13B7                     __ptext29:	
  8843 ;; *************** function ___flneg *****************
  8844 ;; Defined at:
  8845 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\flneg.c"
  8846 ;; Parameters:    Size  Location     Type
  8847 ;;  f1              4    0[COMMON] unsigned char 
  8848 ;; Auto vars:     Size  Location     Type
  8849 ;;		None
  8850 ;; Return value:  Size  Location     Type
  8851 ;;                  4    0[COMMON] unsigned char 
  8852 ;; Registers used:
  8853 ;;		wreg
  8854 ;; Tracked objects:
  8855 ;;		On entry : 0/0
  8856 ;;		On exit  : 0/0
  8857 ;;		Unchanged: 0/0
  8858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8859 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8862 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8863 ;;Total ram usage:        4 bytes
  8864 ;; Hardware stack levels used: 1
  8865 ;; Hardware stack levels required when called: 1
  8866 ;; This function calls:
  8867 ;;		Nothing
  8868 ;; This function is called by:
  8869 ;;		_ftoa
  8870 ;; This function uses a non-reentrant model
  8871 ;;
  8872                           
  8873     13B7                     ___flneg:	
  8874                           ;psect for function ___flneg
  8875                           
  8876     13B7                     l3007:	
  8877                           ;incstack = 0
  8878                           ; Regs used in ___flneg: [wreg]
  8879                           
  8880     13B7  0873               	movf	___flneg@f1+3,w
  8881     13B8  0472               	iorwf	___flneg@f1+2,w
  8882     13B9  0471               	iorwf	___flneg@f1+1,w
  8883     13BA  0470               	iorwf	___flneg@f1,w
  8884     13BB  1903               	skipnz
  8885     13BC  2BBE               	goto	u3661
  8886     13BD  2BBF               	goto	u3660
  8887     13BE                     u3661:
  8888     13BE  2BC1               	goto	l3011
  8889     13BF                     u3660:
  8890     13BF                     l3009:
  8891     13BF  3080               	movlw	128
  8892     13C0  06F3               	xorwf	___flneg@f1+3,f
  8893     13C1                     l3011:
  8894     13C1                     l597:
  8895     13C1  0008               	return
  8896     13C2                     __end_of___flneg:
  8897                           
  8898                           	psect	text30
  8899     032B                     __ptext30:	
  8900 ;; *************** function ___flmul *****************
  8901 ;; Defined at:
  8902 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcmul.c"
  8903 ;; Parameters:    Size  Location     Type
  8904 ;;  b               4    0[BANK0 ] unsigned char 
  8905 ;;  a               4    4[BANK0 ] unsigned char 
  8906 ;; Auto vars:     Size  Location     Type
  8907 ;;  prod            4   20[BANK0 ] struct .
  8908 ;;  grs             4   14[BANK0 ] unsigned long 
  8909 ;;  temp            2   24[BANK0 ] struct .
  8910 ;;  bexp            1   19[BANK0 ] unsigned char 
  8911 ;;  aexp            1   18[BANK0 ] unsigned char 
  8912 ;;  sign            1   13[BANK0 ] unsigned char 
  8913 ;; Return value:  Size  Location     Type
  8914 ;;                  4    0[BANK0 ] unsigned char 
  8915 ;; Registers used:
  8916 ;;		wreg, status,2, status,0, pclath, cstack
  8917 ;; Tracked objects:
  8918 ;;		On entry : 0/0
  8919 ;;		On exit  : 0/0
  8920 ;;		Unchanged: 0/0
  8921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8922 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8923 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8924 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8925 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8926 ;;Total ram usage:       26 bytes
  8927 ;; Hardware stack levels used: 1
  8928 ;; Hardware stack levels required when called: 2
  8929 ;; This function calls:
  8930 ;;		__Umul8_16
  8931 ;; This function is called by:
  8932 ;;		_calibrate
  8933 ;;		_main
  8934 ;;		_ftoa
  8935 ;; This function uses a non-reentrant model
  8936 ;;
  8937                           
  8938     032B                     ___flmul:	
  8939                           ;psect for function ___flmul
  8940                           
  8941     032B                     l3057:	
  8942                           ;incstack = 0
  8943                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  8944                           
  8945     032B  0020               	movlb	0	; select bank0
  8946     032C  0823               	movf	___flmul@b+3,w
  8947     032D  3980               	andlw	128
  8948     032E  00AD               	movwf	___flmul@sign
  8949     032F                     l3059:
  8950     032F  3523               	lslf	___flmul@b+3,w
  8951     0330  00B3               	movwf	___flmul@bexp
  8952     0331                     l3061:
  8953     0331  1FA2               	btfss	___flmul@b+2,7
  8954     0332  2B34               	goto	u3771
  8955     0333  2B35               	goto	u3770
  8956     0334                     u3771:
  8957     0334  2B36               	goto	l3065
  8958     0335                     u3770:
  8959     0335                     l3063:
  8960     0335  1433               	bsf	___flmul@bexp,0
  8961     0336                     l3065:
  8962     0336  0833               	movf	___flmul@bexp,w
  8963     0337  1903               	btfsc	3,2
  8964     0338  2B3A               	goto	u3781
  8965     0339  2B3B               	goto	u3780
  8966     033A                     u3781:
  8967     033A  2B4A               	goto	l3073
  8968     033B                     u3780:
  8969     033B                     l3067:
  8970     033B  0A33               	incf	___flmul@bexp,w
  8971     033C  1D03               	btfss	3,2
  8972     033D  2B3F               	goto	u3791
  8973     033E  2B40               	goto	u3790
  8974     033F                     u3791:
  8975     033F  2B48               	goto	l3071
  8976     0340                     u3790:
  8977     0340                     l3069:
  8978     0340  3000               	movlw	0
  8979     0341  00A3               	movwf	___flmul@b+3
  8980     0342  3000               	movlw	0
  8981     0343  00A2               	movwf	___flmul@b+2
  8982     0344  3000               	movlw	0
  8983     0345  00A1               	movwf	___flmul@b+1
  8984     0346  3000               	movlw	0
  8985     0347  00A0               	movwf	___flmul@b
  8986     0348                     l3071:
  8987     0348  17A2               	bsf	___flmul@b+2,7
  8988     0349  2B52               	goto	l3075
  8989     034A                     l3073:
  8990     034A  3000               	movlw	0
  8991     034B  00A3               	movwf	___flmul@b+3
  8992     034C  3000               	movlw	0
  8993     034D  00A2               	movwf	___flmul@b+2
  8994     034E  3000               	movlw	0
  8995     034F  00A1               	movwf	___flmul@b+1
  8996     0350  3000               	movlw	0
  8997     0351  00A0               	movwf	___flmul@b
  8998     0352                     l3075:
  8999     0352  0827               	movf	___flmul@a+3,w
  9000     0353  3980               	andlw	128
  9001     0354  00A8               	movwf	??___flmul
  9002     0355  0828               	movf	??___flmul,w
  9003     0356  06AD               	xorwf	___flmul@sign,f
  9004     0357                     l3077:
  9005     0357  3527               	lslf	___flmul@a+3,w
  9006     0358  00B2               	movwf	___flmul@aexp
  9007     0359                     l3079:
  9008     0359  1FA6               	btfss	___flmul@a+2,7
  9009     035A  2B5C               	goto	u3801
  9010     035B  2B5D               	goto	u3800
  9011     035C                     u3801:
  9012     035C  2B5E               	goto	l3083
  9013     035D                     u3800:
  9014     035D                     l3081:
  9015     035D  1432               	bsf	___flmul@aexp,0
  9016     035E                     l3083:
  9017     035E  0832               	movf	___flmul@aexp,w
  9018     035F  1903               	btfsc	3,2
  9019     0360  2B62               	goto	u3811
  9020     0361  2B63               	goto	u3810
  9021     0362                     u3811:
  9022     0362  2B72               	goto	l3091
  9023     0363                     u3810:
  9024     0363                     l3085:
  9025     0363  0A32               	incf	___flmul@aexp,w
  9026     0364  1D03               	btfss	3,2
  9027     0365  2B67               	goto	u3821
  9028     0366  2B68               	goto	u3820
  9029     0367                     u3821:
  9030     0367  2B70               	goto	l3089
  9031     0368                     u3820:
  9032     0368                     l3087:
  9033     0368  3000               	movlw	0
  9034     0369  00A7               	movwf	___flmul@a+3
  9035     036A  3000               	movlw	0
  9036     036B  00A6               	movwf	___flmul@a+2
  9037     036C  3000               	movlw	0
  9038     036D  00A5               	movwf	___flmul@a+1
  9039     036E  3000               	movlw	0
  9040     036F  00A4               	movwf	___flmul@a
  9041     0370                     l3089:
  9042     0370  17A6               	bsf	___flmul@a+2,7
  9043     0371  2B7A               	goto	l3093
  9044     0372                     l3091:
  9045     0372  3000               	movlw	0
  9046     0373  00A7               	movwf	___flmul@a+3
  9047     0374  3000               	movlw	0
  9048     0375  00A6               	movwf	___flmul@a+2
  9049     0376  3000               	movlw	0
  9050     0377  00A5               	movwf	___flmul@a+1
  9051     0378  3000               	movlw	0
  9052     0379  00A4               	movwf	___flmul@a
  9053     037A                     l3093:
  9054     037A  0832               	movf	___flmul@aexp,w
  9055     037B  1903               	btfsc	3,2
  9056     037C  2B7E               	goto	u3831
  9057     037D  2B7F               	goto	u3830
  9058     037E                     u3831:
  9059     037E  2B84               	goto	l3097
  9060     037F                     u3830:
  9061     037F                     l3095:
  9062     037F  0833               	movf	___flmul@bexp,w
  9063     0380  1D03               	btfss	3,2
  9064     0381  2B83               	goto	u3841
  9065     0382  2B84               	goto	u3840
  9066     0383                     u3841:
  9067     0383  2B8D               	goto	l3101
  9068     0384                     u3840:
  9069     0384                     l3097:
  9070     0384  3000               	movlw	0
  9071     0385  00A3               	movwf	?___flmul+3
  9072     0386  3000               	movlw	0
  9073     0387  00A2               	movwf	?___flmul+2
  9074     0388  3000               	movlw	0
  9075     0389  00A1               	movwf	?___flmul+1
  9076     038A  3000               	movlw	0
  9077     038B  00A0               	movwf	?___flmul
  9078     038C  2D65               	goto	l804
  9079     038D                     l3101:
  9080     038D  0820               	movf	___flmul@b,w
  9081     038E  00F0               	movwf	__Umul8_16@multiplicand
  9082     038F  0826               	movf	___flmul@a+2,w
  9083     0390  3195  2519  3183   	fcall	__Umul8_16
  9084     0393  0871               	movf	?__Umul8_16+1,w
  9085     0394  0020               	movlb	0	; select bank0
  9086     0395  00B9               	movwf	___flmul@temp+1
  9087     0396  0870               	movf	?__Umul8_16,w
  9088     0397  00B8               	movwf	___flmul@temp
  9089     0398                     l3103:
  9090     0398  0838               	movf	___flmul@temp,w
  9091     0399  00A8               	movwf	??___flmul
  9092     039A  01A9               	clrf	??___flmul+1
  9093     039B  01AA               	clrf	??___flmul+2
  9094     039C  01AB               	clrf	??___flmul+3
  9095     039D  082B               	movf	??___flmul+3,w
  9096     039E  00B1               	movwf	___flmul@grs+3
  9097     039F  082A               	movf	??___flmul+2,w
  9098     03A0  00B0               	movwf	___flmul@grs+2
  9099     03A1  0829               	movf	??___flmul+1,w
  9100     03A2  00AF               	movwf	___flmul@grs+1
  9101     03A3  0828               	movf	??___flmul,w
  9102     03A4  00AE               	movwf	___flmul@grs
  9103     03A5                     l3105:
  9104     03A5  0839               	movf	___flmul@temp+1,w
  9105     03A6  00A8               	movwf	??___flmul
  9106     03A7  01A9               	clrf	??___flmul+1
  9107     03A8  01AA               	clrf	??___flmul+2
  9108     03A9  01AB               	clrf	??___flmul+3
  9109     03AA  082B               	movf	??___flmul+3,w
  9110     03AB  00B7               	movwf	___flmul@prod+3
  9111     03AC  082A               	movf	??___flmul+2,w
  9112     03AD  00B6               	movwf	___flmul@prod+2
  9113     03AE  0829               	movf	??___flmul+1,w
  9114     03AF  00B5               	movwf	___flmul@prod+1
  9115     03B0  0828               	movf	??___flmul,w
  9116     03B1  00B4               	movwf	___flmul@prod
  9117     03B2  0821               	movf	___flmul@b+1,w
  9118     03B3  00F0               	movwf	__Umul8_16@multiplicand
  9119     03B4  0825               	movf	___flmul@a+1,w
  9120     03B5  3195  2519  3183   	fcall	__Umul8_16
  9121     03B8  0871               	movf	?__Umul8_16+1,w
  9122     03B9  0020               	movlb	0	; select bank0
  9123     03BA  00B9               	movwf	___flmul@temp+1
  9124     03BB  0870               	movf	?__Umul8_16,w
  9125     03BC  00B8               	movwf	___flmul@temp
  9126     03BD                     l3107:
  9127     03BD  0838               	movf	___flmul@temp,w
  9128     03BE  00A8               	movwf	??___flmul
  9129     03BF  01A9               	clrf	??___flmul+1
  9130     03C0  01AA               	clrf	??___flmul+2
  9131     03C1  01AB               	clrf	??___flmul+3
  9132     03C2  0828               	movf	??___flmul,w
  9133     03C3  07AE               	addwf	___flmul@grs,f
  9134     03C4  0829               	movf	??___flmul+1,w
  9135     03C5  3DAF               	addwfc	___flmul@grs+1,f
  9136     03C6  082A               	movf	??___flmul+2,w
  9137     03C7  3DB0               	addwfc	___flmul@grs+2,f
  9138     03C8  082B               	movf	??___flmul+3,w
  9139     03C9  3DB1               	addwfc	___flmul@grs+3,f
  9140     03CA                     l3109:
  9141     03CA  0839               	movf	___flmul@temp+1,w
  9142     03CB  00A8               	movwf	??___flmul
  9143     03CC  01A9               	clrf	??___flmul+1
  9144     03CD  01AA               	clrf	??___flmul+2
  9145     03CE  01AB               	clrf	??___flmul+3
  9146     03CF  0828               	movf	??___flmul,w
  9147     03D0  07B4               	addwf	___flmul@prod,f
  9148     03D1  0829               	movf	??___flmul+1,w
  9149     03D2  3DB5               	addwfc	___flmul@prod+1,f
  9150     03D3  082A               	movf	??___flmul+2,w
  9151     03D4  3DB6               	addwfc	___flmul@prod+2,f
  9152     03D5  082B               	movf	??___flmul+3,w
  9153     03D6  3DB7               	addwfc	___flmul@prod+3,f
  9154     03D7  0822               	movf	___flmul@b+2,w
  9155     03D8  00F0               	movwf	__Umul8_16@multiplicand
  9156     03D9  0824               	movf	___flmul@a,w
  9157     03DA  3195  2519  3183   	fcall	__Umul8_16
  9158     03DD  0871               	movf	?__Umul8_16+1,w
  9159     03DE  0020               	movlb	0	; select bank0
  9160     03DF  00B9               	movwf	___flmul@temp+1
  9161     03E0  0870               	movf	?__Umul8_16,w
  9162     03E1  00B8               	movwf	___flmul@temp
  9163     03E2                     l3111:
  9164     03E2  0838               	movf	___flmul@temp,w
  9165     03E3  00A8               	movwf	??___flmul
  9166     03E4  01A9               	clrf	??___flmul+1
  9167     03E5  01AA               	clrf	??___flmul+2
  9168     03E6  01AB               	clrf	??___flmul+3
  9169     03E7  0828               	movf	??___flmul,w
  9170     03E8  07AE               	addwf	___flmul@grs,f
  9171     03E9  0829               	movf	??___flmul+1,w
  9172     03EA  3DAF               	addwfc	___flmul@grs+1,f
  9173     03EB  082A               	movf	??___flmul+2,w
  9174     03EC  3DB0               	addwfc	___flmul@grs+2,f
  9175     03ED  082B               	movf	??___flmul+3,w
  9176     03EE  3DB1               	addwfc	___flmul@grs+3,f
  9177     03EF                     l3113:
  9178     03EF  0839               	movf	___flmul@temp+1,w
  9179     03F0  00A8               	movwf	??___flmul
  9180     03F1  01A9               	clrf	??___flmul+1
  9181     03F2  01AA               	clrf	??___flmul+2
  9182     03F3  01AB               	clrf	??___flmul+3
  9183     03F4  0828               	movf	??___flmul,w
  9184     03F5  07B4               	addwf	___flmul@prod,f
  9185     03F6  0829               	movf	??___flmul+1,w
  9186     03F7  3DB5               	addwfc	___flmul@prod+1,f
  9187     03F8  082A               	movf	??___flmul+2,w
  9188     03F9  3DB6               	addwfc	___flmul@prod+2,f
  9189     03FA  082B               	movf	??___flmul+3,w
  9190     03FB  3DB7               	addwfc	___flmul@prod+3,f
  9191     03FC                     l3115:
  9192     03FC  3008               	movlw	8
  9193     03FD                     u3855:
  9194     03FD  35AE               	lslf	___flmul@grs,f
  9195     03FE  0DAF               	rlf	___flmul@grs+1,f
  9196     03FF  0DB0               	rlf	___flmul@grs+2,f
  9197     0400  0DB1               	rlf	___flmul@grs+3,f
  9198     0401  0B89               	decfsz	9,f
  9199     0402  2BFD               	goto	u3855
  9200     0403                     l3117:
  9201     0403  0821               	movf	___flmul@b+1,w
  9202     0404  00F0               	movwf	__Umul8_16@multiplicand
  9203     0405  0824               	movf	___flmul@a,w
  9204     0406  3195  2519  3183   	fcall	__Umul8_16
  9205     0409  0871               	movf	?__Umul8_16+1,w
  9206     040A  0020               	movlb	0	; select bank0
  9207     040B  00B9               	movwf	___flmul@temp+1
  9208     040C  0870               	movf	?__Umul8_16,w
  9209     040D  00B8               	movwf	___flmul@temp
  9210     040E                     l3119:
  9211     040E  0838               	movf	___flmul@temp,w
  9212     040F  07AE               	addwf	___flmul@grs,f
  9213     0410  0839               	movf	___flmul@temp+1,w
  9214     0411  3DAF               	addwfc	___flmul@grs+1,f
  9215     0412  3000               	movlw	0
  9216     0413  3DB0               	addwfc	___flmul@grs+2,f
  9217     0414  3DB1               	addwfc	___flmul@grs+3,f
  9218     0415                     l3121:
  9219     0415  0820               	movf	___flmul@b,w
  9220     0416  00F0               	movwf	__Umul8_16@multiplicand
  9221     0417  0825               	movf	___flmul@a+1,w
  9222     0418  3195  2519  3183   	fcall	__Umul8_16
  9223     041B  0871               	movf	?__Umul8_16+1,w
  9224     041C  0020               	movlb	0	; select bank0
  9225     041D  00B9               	movwf	___flmul@temp+1
  9226     041E  0870               	movf	?__Umul8_16,w
  9227     041F  00B8               	movwf	___flmul@temp
  9228     0420                     l3123:
  9229     0420  0838               	movf	___flmul@temp,w
  9230     0421  07AE               	addwf	___flmul@grs,f
  9231     0422  0839               	movf	___flmul@temp+1,w
  9232     0423  3DAF               	addwfc	___flmul@grs+1,f
  9233     0424  3000               	movlw	0
  9234     0425  3DB0               	addwfc	___flmul@grs+2,f
  9235     0426  3DB1               	addwfc	___flmul@grs+3,f
  9236     0427                     l3125:
  9237     0427  3008               	movlw	8
  9238     0428                     u3865:
  9239     0428  35AE               	lslf	___flmul@grs,f
  9240     0429  0DAF               	rlf	___flmul@grs+1,f
  9241     042A  0DB0               	rlf	___flmul@grs+2,f
  9242     042B  0DB1               	rlf	___flmul@grs+3,f
  9243     042C  0B89               	decfsz	9,f
  9244     042D  2C28               	goto	u3865
  9245     042E  0820               	movf	___flmul@b,w
  9246     042F  00F0               	movwf	__Umul8_16@multiplicand
  9247     0430  0824               	movf	___flmul@a,w
  9248     0431  3195  2519  3183   	fcall	__Umul8_16
  9249     0434  0871               	movf	?__Umul8_16+1,w
  9250     0435  0020               	movlb	0	; select bank0
  9251     0436  00B9               	movwf	___flmul@temp+1
  9252     0437  0870               	movf	?__Umul8_16,w
  9253     0438  00B8               	movwf	___flmul@temp
  9254     0439                     l3127:
  9255     0439  0838               	movf	___flmul@temp,w
  9256     043A  07AE               	addwf	___flmul@grs,f
  9257     043B  0839               	movf	___flmul@temp+1,w
  9258     043C  3DAF               	addwfc	___flmul@grs+1,f
  9259     043D  3000               	movlw	0
  9260     043E  3DB0               	addwfc	___flmul@grs+2,f
  9261     043F  3DB1               	addwfc	___flmul@grs+3,f
  9262     0440                     l3129:
  9263     0440  0821               	movf	___flmul@b+1,w
  9264     0441  00F0               	movwf	__Umul8_16@multiplicand
  9265     0442  0826               	movf	___flmul@a+2,w
  9266     0443  3195  2519  3183   	fcall	__Umul8_16
  9267     0446  0871               	movf	?__Umul8_16+1,w
  9268     0447  0020               	movlb	0	; select bank0
  9269     0448  00B9               	movwf	___flmul@temp+1
  9270     0449  0870               	movf	?__Umul8_16,w
  9271     044A  00B8               	movwf	___flmul@temp
  9272     044B  0838               	movf	___flmul@temp,w
  9273     044C  07B4               	addwf	___flmul@prod,f
  9274     044D  0839               	movf	___flmul@temp+1,w
  9275     044E  3DB5               	addwfc	___flmul@prod+1,f
  9276     044F  3000               	movlw	0
  9277     0450  3DB6               	addwfc	___flmul@prod+2,f
  9278     0451  3DB7               	addwfc	___flmul@prod+3,f
  9279     0452                     l3131:
  9280     0452  0822               	movf	___flmul@b+2,w
  9281     0453  00F0               	movwf	__Umul8_16@multiplicand
  9282     0454  0825               	movf	___flmul@a+1,w
  9283     0455  3195  2519  3183   	fcall	__Umul8_16
  9284     0458  0871               	movf	?__Umul8_16+1,w
  9285     0459  0020               	movlb	0	; select bank0
  9286     045A  00B9               	movwf	___flmul@temp+1
  9287     045B  0870               	movf	?__Umul8_16,w
  9288     045C  00B8               	movwf	___flmul@temp
  9289     045D                     l3133:
  9290     045D  0838               	movf	___flmul@temp,w
  9291     045E  07B4               	addwf	___flmul@prod,f
  9292     045F  0839               	movf	___flmul@temp+1,w
  9293     0460  3DB5               	addwfc	___flmul@prod+1,f
  9294     0461  3000               	movlw	0
  9295     0462  3DB6               	addwfc	___flmul@prod+2,f
  9296     0463  3DB7               	addwfc	___flmul@prod+3,f
  9297     0464  0822               	movf	___flmul@b+2,w
  9298     0465  00F0               	movwf	__Umul8_16@multiplicand
  9299     0466  0826               	movf	___flmul@a+2,w
  9300     0467  3195  2519  3183   	fcall	__Umul8_16
  9301     046A  0871               	movf	?__Umul8_16+1,w
  9302     046B  0020               	movlb	0	; select bank0
  9303     046C  00B9               	movwf	___flmul@temp+1
  9304     046D  0870               	movf	?__Umul8_16,w
  9305     046E  00B8               	movwf	___flmul@temp
  9306     046F                     l3135:
  9307     046F  0838               	movf	___flmul@temp,w
  9308     0470  00A8               	movwf	??___flmul
  9309     0471  0839               	movf	___flmul@temp+1,w
  9310     0472  00A9               	movwf	??___flmul+1
  9311     0473  01AA               	clrf	??___flmul+2
  9312     0474  01AB               	clrf	??___flmul+3
  9313     0475  3008               	movlw	8
  9314     0476                     u3875:
  9315     0476  35A8               	lslf	??___flmul,f
  9316     0477  0DA9               	rlf	??___flmul+1,f
  9317     0478  0DAA               	rlf	??___flmul+2,f
  9318     0479  0DAB               	rlf	??___flmul+3,f
  9319     047A                     u3870:
  9320     047A  0B89               	decfsz	9,f
  9321     047B  2C76               	goto	u3875
  9322     047C  0828               	movf	??___flmul,w
  9323     047D  07B4               	addwf	___flmul@prod,f
  9324     047E  0829               	movf	??___flmul+1,w
  9325     047F  3DB5               	addwfc	___flmul@prod+1,f
  9326     0480  082A               	movf	??___flmul+2,w
  9327     0481  3DB6               	addwfc	___flmul@prod+2,f
  9328     0482  082B               	movf	??___flmul+3,w
  9329     0483  3DB7               	addwfc	___flmul@prod+3,f
  9330     0484                     l3137:
  9331     0484  082E               	movf	___flmul@grs,w
  9332     0485  00A8               	movwf	??___flmul
  9333     0486  082F               	movf	___flmul@grs+1,w
  9334     0487  00A9               	movwf	??___flmul+1
  9335     0488  0830               	movf	___flmul@grs+2,w
  9336     0489  00AA               	movwf	??___flmul+2
  9337     048A  0831               	movf	___flmul@grs+3,w
  9338     048B  00AB               	movwf	??___flmul+3
  9339     048C  3018               	movlw	24
  9340     048D                     u3885:
  9341     048D  36AB               	lsrf	??___flmul+3,f
  9342     048E  0CAA               	rrf	??___flmul+2,f
  9343     048F  0CA9               	rrf	??___flmul+1,f
  9344     0490  0CA8               	rrf	??___flmul,f
  9345     0491                     u3880:
  9346     0491  0B89               	decfsz	9,f
  9347     0492  2C8D               	goto	u3885
  9348     0493  0828               	movf	??___flmul,w
  9349     0494  07B4               	addwf	___flmul@prod,f
  9350     0495  0829               	movf	??___flmul+1,w
  9351     0496  3DB5               	addwfc	___flmul@prod+1,f
  9352     0497  082A               	movf	??___flmul+2,w
  9353     0498  3DB6               	addwfc	___flmul@prod+2,f
  9354     0499  082B               	movf	??___flmul+3,w
  9355     049A  3DB7               	addwfc	___flmul@prod+3,f
  9356     049B                     l3139:
  9357     049B  3008               	movlw	8
  9358     049C                     u3895:
  9359     049C  35AE               	lslf	___flmul@grs,f
  9360     049D  0DAF               	rlf	___flmul@grs+1,f
  9361     049E  0DB0               	rlf	___flmul@grs+2,f
  9362     049F  0DB1               	rlf	___flmul@grs+3,f
  9363     04A0  0B89               	decfsz	9,f
  9364     04A1  2C9C               	goto	u3895
  9365     04A2                     l3141:
  9366     04A2  0833               	movf	___flmul@bexp,w
  9367     04A3  0732               	addwf	___flmul@aexp,w
  9368     04A4  00A8               	movwf	??___flmul
  9369     04A5  01A9               	clrf	??___flmul+1
  9370     04A6  0DA9               	rlf	??___flmul+1,f
  9371     04A7  0828               	movf	??___flmul,w
  9372     04A8  3E82               	addlw	130
  9373     04A9  00B8               	movwf	___flmul@temp
  9374     04AA  30FF               	movlw	255
  9375     04AB  3D29               	addwfc	??___flmul+1,w
  9376     04AC  00B9               	movwf	___flmul@temp+1
  9377     04AD  2CC5               	goto	l3153
  9378     04AE                     l3143:
  9379     04AE  3001               	movlw	1
  9380     04AF                     u3905:
  9381     04AF  35B4               	lslf	___flmul@prod,f
  9382     04B0  0DB5               	rlf	___flmul@prod+1,f
  9383     04B1  0DB6               	rlf	___flmul@prod+2,f
  9384     04B2  0DB7               	rlf	___flmul@prod+3,f
  9385     04B3  0B89               	decfsz	9,f
  9386     04B4  2CAF               	goto	u3905
  9387     04B5                     l3145:
  9388     04B5  1FB1               	btfss	___flmul@grs+3,7
  9389     04B6  2CB8               	goto	u3911
  9390     04B7  2CB9               	goto	u3910
  9391     04B8                     u3911:
  9392     04B8  2CBA               	goto	l3149
  9393     04B9                     u3910:
  9394     04B9                     l3147:
  9395     04B9  1434               	bsf	___flmul@prod,0
  9396     04BA                     l3149:
  9397     04BA  3001               	movlw	1
  9398     04BB                     u3925:
  9399     04BB  35AE               	lslf	___flmul@grs,f
  9400     04BC  0DAF               	rlf	___flmul@grs+1,f
  9401     04BD  0DB0               	rlf	___flmul@grs+2,f
  9402     04BE  0DB1               	rlf	___flmul@grs+3,f
  9403     04BF  0B89               	decfsz	9,f
  9404     04C0  2CBB               	goto	u3925
  9405     04C1                     l3151:
  9406     04C1  30FF               	movlw	255
  9407     04C2  07B8               	addwf	___flmul@temp,f
  9408     04C3  30FF               	movlw	255
  9409     04C4  3DB9               	addwfc	___flmul@temp+1,f
  9410     04C5                     l3153:
  9411     04C5  1FB6               	btfss	___flmul@prod+2,7
  9412     04C6  2CC8               	goto	u3931
  9413     04C7  2CC9               	goto	u3930
  9414     04C8                     u3931:
  9415     04C8  2CAE               	goto	l3143
  9416     04C9                     u3930:
  9417     04C9                     l3155:
  9418     04C9  01B2               	clrf	___flmul@aexp
  9419     04CA                     l3157:
  9420     04CA  1FB1               	btfss	___flmul@grs+3,7
  9421     04CB  2CCD               	goto	u3941
  9422     04CC  2CCE               	goto	u3940
  9423     04CD                     u3941:
  9424     04CD  2CEA               	goto	l3165
  9425     04CE                     u3940:
  9426     04CE                     l3159:
  9427     04CE  30FF               	movlw	255
  9428     04CF  052E               	andwf	___flmul@grs,w
  9429     04D0  00A8               	movwf	??___flmul
  9430     04D1  30FF               	movlw	255
  9431     04D2  052F               	andwf	___flmul@grs+1,w
  9432     04D3  00A9               	movwf	??___flmul+1
  9433     04D4  30FF               	movlw	255
  9434     04D5  0530               	andwf	___flmul@grs+2,w
  9435     04D6  00AA               	movwf	??___flmul+2
  9436     04D7  307F               	movlw	127
  9437     04D8  0531               	andwf	___flmul@grs+3,w
  9438     04D9  00AB               	movwf	??___flmul+3
  9439     04DA  082B               	movf	??___flmul+3,w
  9440     04DB  042A               	iorwf	??___flmul+2,w
  9441     04DC  0429               	iorwf	??___flmul+1,w
  9442     04DD  0428               	iorwf	??___flmul,w
  9443     04DE  1903               	skipnz
  9444     04DF  2CE1               	goto	u3951
  9445     04E0  2CE2               	goto	u3950
  9446     04E1                     u3951:
  9447     04E1  2CE5               	goto	l810
  9448     04E2                     u3950:
  9449     04E2                     l3161:
  9450     04E2  01B2               	clrf	___flmul@aexp
  9451     04E3  0AB2               	incf	___flmul@aexp,f
  9452     04E4  2CEA               	goto	l3165
  9453     04E5                     l810:
  9454     04E5  1C34               	btfss	___flmul@prod,0
  9455     04E6  2CE8               	goto	u3961
  9456     04E7  2CE9               	goto	u3960
  9457     04E8                     u3961:
  9458     04E8  2CEA               	goto	l3165
  9459     04E9                     u3960:
  9460     04E9  2CE2               	goto	l3161
  9461     04EA                     l3165:
  9462     04EA  0832               	movf	___flmul@aexp,w
  9463     04EB  1903               	btfsc	3,2
  9464     04EC  2CEE               	goto	u3971
  9465     04ED  2CEF               	goto	u3970
  9466     04EE                     u3971:
  9467     04EE  2D17               	goto	l3175
  9468     04EF                     u3970:
  9469     04EF                     l3167:
  9470     04EF  3001               	movlw	1
  9471     04F0  07B4               	addwf	___flmul@prod,f
  9472     04F1  3000               	movlw	0
  9473     04F2  3DB5               	addwfc	___flmul@prod+1,f
  9474     04F3  3000               	movlw	0
  9475     04F4  3DB6               	addwfc	___flmul@prod+2,f
  9476     04F5  3000               	movlw	0
  9477     04F6  3DB7               	addwfc	___flmul@prod+3,f
  9478     04F7                     l3169:
  9479     04F7  1C37               	btfss	___flmul@prod+3,0
  9480     04F8  2CFA               	goto	u3981
  9481     04F9  2CFB               	goto	u3980
  9482     04FA                     u3981:
  9483     04FA  2D17               	goto	l3175
  9484     04FB                     u3980:
  9485     04FB                     l3171:
  9486     04FB  0834               	movf	___flmul@prod,w
  9487     04FC  00A8               	movwf	??___flmul
  9488     04FD  0835               	movf	___flmul@prod+1,w
  9489     04FE  00A9               	movwf	??___flmul+1
  9490     04FF  0836               	movf	___flmul@prod+2,w
  9491     0500  00AA               	movwf	??___flmul+2
  9492     0501  0837               	movf	___flmul@prod+3,w
  9493     0502  00AB               	movwf	??___flmul+3
  9494     0503  3001               	movlw	1
  9495     0504  00AC               	movwf	??___flmul+4
  9496     0505                     u3995:
  9497     0505  37AB               	asrf	??___flmul+3,f
  9498     0506  0CAA               	rrf	??___flmul+2,f
  9499     0507  0CA9               	rrf	??___flmul+1,f
  9500     0508  0CA8               	rrf	??___flmul,f
  9501     0509                     u3990:
  9502     0509  0BAC               	decfsz	??___flmul+4,f
  9503     050A  2D05               	goto	u3995
  9504     050B  082B               	movf	??___flmul+3,w
  9505     050C  00B7               	movwf	___flmul@prod+3
  9506     050D  082A               	movf	??___flmul+2,w
  9507     050E  00B6               	movwf	___flmul@prod+2
  9508     050F  0829               	movf	??___flmul+1,w
  9509     0510  00B5               	movwf	___flmul@prod+1
  9510     0511  0828               	movf	??___flmul,w
  9511     0512  00B4               	movwf	___flmul@prod
  9512     0513                     l3173:
  9513     0513  3001               	movlw	1
  9514     0514  07B8               	addwf	___flmul@temp,f
  9515     0515  3000               	movlw	0
  9516     0516  3DB9               	addwfc	___flmul@temp+1,f
  9517     0517                     l3175:
  9518     0517  0839               	movf	___flmul@temp+1,w
  9519     0518  3A80               	xorlw	128
  9520     0519  00A8               	movwf	??___flmul
  9521     051A  3080               	movlw	128
  9522     051B  0228               	subwf	??___flmul,w
  9523     051C  1D03               	skipz
  9524     051D  2D20               	goto	u4005
  9525     051E  30FF               	movlw	255
  9526     051F  0238               	subwf	___flmul@temp,w
  9527     0520                     u4005:
  9528     0520  1C03               	skipc
  9529     0521  2D23               	goto	u4001
  9530     0522  2D24               	goto	u4000
  9531     0523                     u4001:
  9532     0523  2D2E               	goto	l3179
  9533     0524                     u4000:
  9534     0524                     l3177:
  9535     0524  307F               	movlw	127
  9536     0525  0020               	movlb	0	; select bank0
  9537     0526  00B7               	movwf	___flmul@prod+3
  9538     0527  3080               	movlw	128
  9539     0528  00B6               	movwf	___flmul@prod+2
  9540     0529  3000               	movlw	0
  9541     052A  00B5               	movwf	___flmul@prod+1
  9542     052B  3000               	movlw	0
  9543     052C  00B4               	movwf	___flmul@prod
  9544     052D  2D59               	goto	l816
  9545     052E                     l3179:
  9546     052E  0020               	movlb	0	; select bank0
  9547     052F  0839               	movf	___flmul@temp+1,w
  9548     0530  3A80               	xorlw	128
  9549     0531  00A8               	movwf	??___flmul
  9550     0532  3080               	movlw	128
  9551     0533  0228               	subwf	??___flmul,w
  9552     0534  1D03               	skipz
  9553     0535  2D38               	goto	u4015
  9554     0536  3001               	movlw	1
  9555     0537  0238               	subwf	___flmul@temp,w
  9556     0538                     u4015:
  9557     0538  1803               	skipnc
  9558     0539  2D3B               	goto	u4011
  9559     053A  2D3C               	goto	u4010
  9560     053B                     u4011:
  9561     053B  2D47               	goto	l3185
  9562     053C                     u4010:
  9563     053C                     l3181:
  9564     053C  3000               	movlw	0
  9565     053D  0020               	movlb	0	; select bank0
  9566     053E  00B7               	movwf	___flmul@prod+3
  9567     053F  3000               	movlw	0
  9568     0540  00B6               	movwf	___flmul@prod+2
  9569     0541  3000               	movlw	0
  9570     0542  00B5               	movwf	___flmul@prod+1
  9571     0543  3000               	movlw	0
  9572     0544  00B4               	movwf	___flmul@prod
  9573     0545                     l3183:
  9574     0545  01AD               	clrf	___flmul@sign
  9575     0546  2D59               	goto	l816
  9576     0547                     l3185:
  9577     0547  0020               	movlb	0	; select bank0
  9578     0548  0838               	movf	___flmul@temp,w
  9579     0549  00B3               	movwf	___flmul@bexp
  9580     054A  30FF               	movlw	255
  9581     054B  05B4               	andwf	___flmul@prod,f
  9582     054C  30FF               	movlw	255
  9583     054D  05B5               	andwf	___flmul@prod+1,f
  9584     054E  307F               	movlw	127
  9585     054F  05B6               	andwf	___flmul@prod+2,f
  9586     0550  3000               	movlw	0
  9587     0551  05B7               	andwf	___flmul@prod+3,f
  9588     0552                     l3187:
  9589     0552  1C33               	btfss	___flmul@bexp,0
  9590     0553  2D55               	goto	u4021
  9591     0554  2D56               	goto	u4020
  9592     0555                     u4021:
  9593     0555  2D57               	goto	l3191
  9594     0556                     u4020:
  9595     0556                     l3189:
  9596     0556  17B6               	bsf	___flmul@prod+2,7
  9597     0557                     l3191:
  9598     0557  3633               	lsrf	___flmul@bexp,w
  9599     0558  00B7               	movwf	___flmul@prod+3
  9600     0559                     l816:
  9601     0559  082D               	movf	___flmul@sign,w
  9602     055A  00A8               	movwf	??___flmul
  9603     055B  0828               	movf	??___flmul,w
  9604     055C  04B7               	iorwf	___flmul@prod+3,f
  9605     055D                     l3193:
  9606     055D  0837               	movf	___flmul@prod+3,w
  9607     055E  00A3               	movwf	?___flmul+3
  9608     055F  0836               	movf	___flmul@prod+2,w
  9609     0560  00A2               	movwf	?___flmul+2
  9610     0561  0835               	movf	___flmul@prod+1,w
  9611     0562  00A1               	movwf	?___flmul+1
  9612     0563  0834               	movf	___flmul@prod,w
  9613     0564  00A0               	movwf	?___flmul
  9614     0565                     l804:
  9615     0565  0008               	return
  9616     0566                     __end_of___flmul:
  9617                           
  9618                           	psect	text31
  9619     1519                     __ptext31:	
  9620 ;; *************** function __Umul8_16 *****************
  9621 ;; Defined at:
  9622 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul8_16.c"
  9623 ;; Parameters:    Size  Location     Type
  9624 ;;  multiplier      1    wreg     unsigned char 
  9625 ;;  multiplicand    1    0[COMMON] unsigned char 
  9626 ;; Auto vars:     Size  Location     Type
  9627 ;;  multiplier      1    8[COMMON] unsigned char 
  9628 ;;  word_mpld       2    6[COMMON] unsigned short 
  9629 ;;  product         2    4[COMMON] unsigned short 
  9630 ;; Return value:  Size  Location     Type
  9631 ;;                  2    0[COMMON] unsigned int 
  9632 ;; Registers used:
  9633 ;;		wreg, status,2, status,0
  9634 ;; Tracked objects:
  9635 ;;		On entry : 0/0
  9636 ;;		On exit  : 0/0
  9637 ;;		Unchanged: 0/0
  9638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9639 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9640 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9641 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9642 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9643 ;;Total ram usage:        9 bytes
  9644 ;; Hardware stack levels used: 1
  9645 ;; Hardware stack levels required when called: 1
  9646 ;; This function calls:
  9647 ;;		Nothing
  9648 ;; This function is called by:
  9649 ;;		___flmul
  9650 ;; This function uses a non-reentrant model
  9651 ;;
  9652                           
  9653     1519                     __Umul8_16:	
  9654                           ;psect for function __Umul8_16
  9655                           
  9656                           
  9657                           ;incstack = 0
  9658                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9659                           ;__Umul8_16@multiplier stored from wreg
  9660     1519  00F8               	movwf	__Umul8_16@multiplier
  9661     151A                     l2909:
  9662     151A  01F4               	clrf	__Umul8_16@product
  9663     151B  01F5               	clrf	__Umul8_16@product+1
  9664     151C                     l2911:
  9665     151C  0870               	movf	__Umul8_16@multiplicand,w
  9666     151D  00F2               	movwf	??__Umul8_16
  9667     151E  01F3               	clrf	??__Umul8_16+1
  9668     151F  0872               	movf	??__Umul8_16,w
  9669     1520  00F6               	movwf	__Umul8_16@word_mpld
  9670     1521  0873               	movf	??__Umul8_16+1,w
  9671     1522  00F7               	movwf	__Umul8_16@word_mpld+1
  9672     1523                     l2913:
  9673     1523  1C78               	btfss	__Umul8_16@multiplier,0
  9674     1524  2D26               	goto	u3511
  9675     1525  2D27               	goto	u3510
  9676     1526                     u3511:
  9677     1526  2D2B               	goto	l823
  9678     1527                     u3510:
  9679     1527                     l2915:
  9680     1527  0876               	movf	__Umul8_16@word_mpld,w
  9681     1528  07F4               	addwf	__Umul8_16@product,f
  9682     1529  0877               	movf	__Umul8_16@word_mpld+1,w
  9683     152A  3DF5               	addwfc	__Umul8_16@product+1,f
  9684     152B                     l823:
  9685     152B  3001               	movlw	1
  9686     152C                     u3525:
  9687     152C  35F6               	lslf	__Umul8_16@word_mpld,f
  9688     152D  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  9689     152E  0B89               	decfsz	9,f
  9690     152F  2D2C               	goto	u3525
  9691     1530  1003               	clrc
  9692     1531  0CF8               	rrf	__Umul8_16@multiplier,f
  9693     1532                     l2917:
  9694     1532  0878               	movf	__Umul8_16@multiplier,w
  9695     1533  1D03               	btfss	3,2
  9696     1534  2D36               	goto	u3531
  9697     1535  2D37               	goto	u3530
  9698     1536                     u3531:
  9699     1536  2D23               	goto	l2913
  9700     1537                     u3530:
  9701     1537                     l2919:
  9702     1537  0875               	movf	__Umul8_16@product+1,w
  9703     1538  00F1               	movwf	?__Umul8_16+1
  9704     1539  0874               	movf	__Umul8_16@product,w
  9705     153A  00F0               	movwf	?__Umul8_16
  9706     153B                     l825:
  9707     153B  0008               	return
  9708     153C                     __end_of__Umul8_16:
  9709                           
  9710                           	psect	text32
  9711     0772                     __ptext32:	
  9712 ;; *************** function ___flge *****************
  9713 ;; Defined at:
  9714 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\flge.c"
  9715 ;; Parameters:    Size  Location     Type
  9716 ;;  ff1             4    0[COMMON] unsigned int 
  9717 ;;  ff2             4    4[COMMON] unsigned int 
  9718 ;; Auto vars:     Size  Location     Type
  9719 ;;		None
  9720 ;; Return value:  Size  Location     Type
  9721 ;;		None               void
  9722 ;; Registers used:
  9723 ;;		wreg, status,2, status,0
  9724 ;; Tracked objects:
  9725 ;;		On entry : 0/0
  9726 ;;		On exit  : 0/0
  9727 ;;		Unchanged: 0/0
  9728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9729 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9731 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9732 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9733 ;;Total ram usage:       12 bytes
  9734 ;; Hardware stack levels used: 1
  9735 ;; Hardware stack levels required when called: 1
  9736 ;; This function calls:
  9737 ;;		Nothing
  9738 ;; This function is called by:
  9739 ;;		_calibrate
  9740 ;;		_main
  9741 ;;		_ftoa
  9742 ;; This function uses a non-reentrant model
  9743 ;;
  9744                           
  9745     0772                     ___flge:	
  9746                           ;psect for function ___flge
  9747                           
  9748     0772                     l2987:	
  9749                           ;incstack = 0
  9750                           ; Regs used in ___flge: [wreg+status,2+status,0]
  9751                           
  9752     0772  3000               	movlw	0
  9753     0773  0570               	andwf	___flge@ff1,w
  9754     0774  00F8               	movwf	??___flge
  9755     0775  3000               	movlw	0
  9756     0776  0571               	andwf	___flge@ff1+1,w
  9757     0777  00F9               	movwf	??___flge+1
  9758     0778  3080               	movlw	128
  9759     0779  0572               	andwf	___flge@ff1+2,w
  9760     077A  00FA               	movwf	??___flge+2
  9761     077B  307F               	movlw	127
  9762     077C  0573               	andwf	___flge@ff1+3,w
  9763     077D  00FB               	movwf	??___flge+3
  9764     077E  087B               	movf	??___flge+3,w
  9765     077F  047A               	iorwf	??___flge+2,w
  9766     0780  0479               	iorwf	??___flge+1,w
  9767     0781  0478               	iorwf	??___flge,w
  9768     0782  1D03               	skipz
  9769     0783  2F85               	goto	u3611
  9770     0784  2F86               	goto	u3610
  9771     0785                     u3611:
  9772     0785  2F8E               	goto	l585
  9773     0786                     u3610:
  9774     0786                     l2989:
  9775     0786  3000               	movlw	0
  9776     0787  00F3               	movwf	___flge@ff1+3
  9777     0788  3000               	movlw	0
  9778     0789  00F2               	movwf	___flge@ff1+2
  9779     078A  3000               	movlw	0
  9780     078B  00F1               	movwf	___flge@ff1+1
  9781     078C  3000               	movlw	0
  9782     078D  00F0               	movwf	___flge@ff1
  9783     078E                     l585:
  9784     078E  3000               	movlw	0
  9785     078F  0574               	andwf	___flge@ff2,w
  9786     0790  00F8               	movwf	??___flge
  9787     0791  3000               	movlw	0
  9788     0792  0575               	andwf	___flge@ff2+1,w
  9789     0793  00F9               	movwf	??___flge+1
  9790     0794  3080               	movlw	128
  9791     0795  0576               	andwf	___flge@ff2+2,w
  9792     0796  00FA               	movwf	??___flge+2
  9793     0797  307F               	movlw	127
  9794     0798  0577               	andwf	___flge@ff2+3,w
  9795     0799  00FB               	movwf	??___flge+3
  9796     079A  087B               	movf	??___flge+3,w
  9797     079B  047A               	iorwf	??___flge+2,w
  9798     079C  0479               	iorwf	??___flge+1,w
  9799     079D  0478               	iorwf	??___flge,w
  9800     079E  1D03               	skipz
  9801     079F  2FA1               	goto	u3621
  9802     07A0  2FA2               	goto	u3620
  9803     07A1                     u3621:
  9804     07A1  2FAA               	goto	l2993
  9805     07A2                     u3620:
  9806     07A2                     l2991:
  9807     07A2  3000               	movlw	0
  9808     07A3  00F7               	movwf	___flge@ff2+3
  9809     07A4  3000               	movlw	0
  9810     07A5  00F6               	movwf	___flge@ff2+2
  9811     07A6  3000               	movlw	0
  9812     07A7  00F5               	movwf	___flge@ff2+1
  9813     07A8  3000               	movlw	0
  9814     07A9  00F4               	movwf	___flge@ff2
  9815     07AA                     l2993:
  9816     07AA  1FF3               	btfss	___flge@ff1+3,7
  9817     07AB  2FAD               	goto	u3631
  9818     07AC  2FAE               	goto	u3630
  9819     07AD                     u3631:
  9820     07AD  2FC6               	goto	l2997
  9821     07AE                     u3630:
  9822     07AE                     l2995:
  9823     07AE  3000               	movlw	0
  9824     07AF  00F8               	movwf	??___flge
  9825     07B0  3000               	movlw	0
  9826     07B1  00F9               	movwf	??___flge+1
  9827     07B2  3000               	movlw	0
  9828     07B3  00FA               	movwf	??___flge+2
  9829     07B4  3080               	movlw	128
  9830     07B5  00FB               	movwf	??___flge+3
  9831     07B6  0870               	movf	___flge@ff1,w
  9832     07B7  02F8               	subwf	??___flge,f
  9833     07B8  0871               	movf	___flge@ff1+1,w
  9834     07B9  3BF9               	subwfb	??___flge+1,f
  9835     07BA  0872               	movf	___flge@ff1+2,w
  9836     07BB  3BFA               	subwfb	??___flge+2,f
  9837     07BC  0873               	movf	___flge@ff1+3,w
  9838     07BD  3BFB               	subwfb	??___flge+3,f
  9839     07BE  087B               	movf	??___flge+3,w
  9840     07BF  00F3               	movwf	___flge@ff1+3
  9841     07C0  087A               	movf	??___flge+2,w
  9842     07C1  00F2               	movwf	___flge@ff1+2
  9843     07C2  0879               	movf	??___flge+1,w
  9844     07C3  00F1               	movwf	___flge@ff1+1
  9845     07C4  0878               	movf	??___flge,w
  9846     07C5  00F0               	movwf	___flge@ff1
  9847     07C6                     l2997:
  9848     07C6  1FF7               	btfss	___flge@ff2+3,7
  9849     07C7  2FC9               	goto	u3641
  9850     07C8  2FCA               	goto	u3640
  9851     07C9                     u3641:
  9852     07C9  2FE2               	goto	l588
  9853     07CA                     u3640:
  9854     07CA                     l2999:
  9855     07CA  3000               	movlw	0
  9856     07CB  00F8               	movwf	??___flge
  9857     07CC  3000               	movlw	0
  9858     07CD  00F9               	movwf	??___flge+1
  9859     07CE  3000               	movlw	0
  9860     07CF  00FA               	movwf	??___flge+2
  9861     07D0  3080               	movlw	128
  9862     07D1  00FB               	movwf	??___flge+3
  9863     07D2  0874               	movf	___flge@ff2,w
  9864     07D3  02F8               	subwf	??___flge,f
  9865     07D4  0875               	movf	___flge@ff2+1,w
  9866     07D5  3BF9               	subwfb	??___flge+1,f
  9867     07D6  0876               	movf	___flge@ff2+2,w
  9868     07D7  3BFA               	subwfb	??___flge+2,f
  9869     07D8  0877               	movf	___flge@ff2+3,w
  9870     07D9  3BFB               	subwfb	??___flge+3,f
  9871     07DA  087B               	movf	??___flge+3,w
  9872     07DB  00F7               	movwf	___flge@ff2+3
  9873     07DC  087A               	movf	??___flge+2,w
  9874     07DD  00F6               	movwf	___flge@ff2+2
  9875     07DE  0879               	movf	??___flge+1,w
  9876     07DF  00F5               	movwf	___flge@ff2+1
  9877     07E0  0878               	movf	??___flge,w
  9878     07E1  00F4               	movwf	___flge@ff2
  9879     07E2                     l588:
  9880     07E2  3080               	movlw	128
  9881     07E3  06F3               	xorwf	___flge@ff1+3,f
  9882     07E4  3080               	movlw	128
  9883     07E5  06F7               	xorwf	___flge@ff2+3,f
  9884     07E6  0877               	movf	___flge@ff2+3,w
  9885     07E7  0273               	subwf	___flge@ff1+3,w
  9886     07E8  1D03               	skipz
  9887     07E9  2FF4               	goto	u3655
  9888     07EA  0876               	movf	___flge@ff2+2,w
  9889     07EB  0272               	subwf	___flge@ff1+2,w
  9890     07EC  1D03               	skipz
  9891     07ED  2FF4               	goto	u3655
  9892     07EE  0875               	movf	___flge@ff2+1,w
  9893     07EF  0271               	subwf	___flge@ff1+1,w
  9894     07F0  1D03               	skipz
  9895     07F1  2FF4               	goto	u3655
  9896     07F2  0874               	movf	___flge@ff2,w
  9897     07F3  0270               	subwf	___flge@ff1,w
  9898     07F4                     u3655:
  9899     07F4  1803               	skipnc
  9900     07F5  2FF7               	goto	u3651
  9901     07F6  2FF8               	goto	u3650
  9902     07F7                     u3651:
  9903     07F7  2FFA               	goto	l3003
  9904     07F8                     u3650:
  9905     07F8                     l3001:
  9906     07F8  1003               	clrc
  9907     07F9  2FFB               	goto	l593
  9908     07FA                     l3003:
  9909     07FA  1403               	setc
  9910     07FB                     l593:
  9911     07FB  0008               	return
  9912     07FC                     __end_of___flge:
  9913                           
  9914                           	psect	text33
  9915     1404                     __ptext33:	
  9916 ;; *************** function _Lcd_Write_String *****************
  9917 ;; Defined at:
  9918 ;;		line 163 in file "SC1601_LCD.c"
  9919 ;; Parameters:    Size  Location     Type
  9920 ;;  str             2    4[COMMON] PTR const unsigned char 
  9921 ;;		 -> STR_12(8), Lcd_Display_Battery@buf(5), STR_10(9), Lcd_Scroll_Text@buffer(17), 
  9922 ;;		 -> Lcd_Write_Padded_Integer@buf(16), Lcd_Write_Integer@buf(8), ftoa@buf(16), STR_7(11), 
  9923 ;;		 -> STR_6(9), STR_5(9), STR_4(15), STR_3(35), 
  9924 ;;		 -> STR_2(14), STR_1(15), 
  9925 ;; Auto vars:     Size  Location     Type
  9926 ;;		None
  9927 ;; Return value:  Size  Location     Type
  9928 ;;                  1    wreg      void 
  9929 ;; Registers used:
  9930 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9931 ;; Tracked objects:
  9932 ;;		On entry : 0/0
  9933 ;;		On exit  : 0/0
  9934 ;;		Unchanged: 0/0
  9935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9936 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9938 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9939 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9940 ;;Total ram usage:        3 bytes
  9941 ;; Hardware stack levels used: 1
  9942 ;; Hardware stack levels required when called: 3
  9943 ;; This function calls:
  9944 ;;		_Lcd_Write_Char
  9945 ;; This function is called by:
  9946 ;;		_calibrate
  9947 ;;		_main
  9948 ;;		_Lcd_Write_Float
  9949 ;;		_Lcd_Write_Padded_Integer
  9950 ;;		_Lcd_Write_Integer
  9951 ;;		_Lcd_Center_Text
  9952 ;;		_Lcd_Scroll_Text
  9953 ;;		_Lcd_Display_Battery
  9954 ;;		_Lcd_Display_Signal
  9955 ;; This function uses a non-reentrant model
  9956 ;;
  9957                           
  9958     1404                     _Lcd_Write_String:	
  9959                           ;psect for function _Lcd_Write_String
  9960                           
  9961     1404                     l2933:	
  9962                           ;incstack = 0
  9963                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9964                           
  9965                           
  9966                           ;SC1601_LCD.c: 163: void Lcd_Write_String(const char *str);SC1601_LCD.c: 164: {;SC1601_L
      +                          CD.c: 165:     while (*str) {
  9967     1404  2C11               	goto	l2939
  9968     1405                     l2935:
  9969                           
  9970                           ;SC1601_LCD.c: 166:         Lcd_Write_Char(*str++);
  9971     1405  0874               	movf	Lcd_Write_String@str,w
  9972     1406  0084               	movwf	4
  9973     1407  0875               	movf	Lcd_Write_String@str+1,w
  9974     1408  0085               	movwf	5
  9975     1409  0800               	movf	0,w	;code access
  9976     140A  3194  2433  3194   	fcall	_Lcd_Write_Char
  9977     140D                     l2937:
  9978     140D  3001               	movlw	1
  9979     140E  07F4               	addwf	Lcd_Write_String@str,f
  9980     140F  3000               	movlw	0
  9981     1410  3DF5               	addwfc	Lcd_Write_String@str+1,f
  9982     1411                     l2939:
  9983                           
  9984                           ;SC1601_LCD.c: 165:     while (*str) {
  9985     1411  0874               	movf	Lcd_Write_String@str,w
  9986     1412  0084               	movwf	4
  9987     1413  0875               	movf	Lcd_Write_String@str+1,w
  9988     1414  0085               	movwf	5
  9989     1415  0012               	moviw fsr0++
  9990     1416  1D03               	btfss	3,2
  9991     1417  2C19               	goto	u3551
  9992     1418  2C1A               	goto	u3550
  9993     1419                     u3551:
  9994     1419  2C05               	goto	l2935
  9995     141A                     u3550:
  9996     141A                     l158:
  9997     141A  0008               	return
  9998     141B                     __end_of_Lcd_Write_String:
  9999                           
 10000                           	psect	text34
 10001     1433                     __ptext34:	
 10002 ;; *************** function _Lcd_Write_Char *****************
 10003 ;; Defined at:
 10004 ;;		line 147 in file "SC1601_LCD.c"
 10005 ;; Parameters:    Size  Location     Type
 10006 ;;  a               1    wreg     unsigned char 
 10007 ;; Auto vars:     Size  Location     Type
 10008 ;;  a               1    3[COMMON] unsigned char 
 10009 ;; Return value:  Size  Location     Type
 10010 ;;                  1    wreg      void 
 10011 ;; Registers used:
 10012 ;;		wreg, status,2, status,0, pclath, cstack
 10013 ;; Tracked objects:
 10014 ;;		On entry : 0/0
 10015 ;;		On exit  : 0/0
 10016 ;;		Unchanged: 0/0
 10017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10019 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10020 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10021 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10022 ;;Total ram usage:        2 bytes
 10023 ;; Hardware stack levels used: 1
 10024 ;; Hardware stack levels required when called: 2
 10025 ;; This function calls:
 10026 ;;		_Lcd_Enable_Pulse
 10027 ;;		_Lcd_Port
 10028 ;; This function is called by:
 10029 ;;		_Lcd_Write_String
 10030 ;;		_Lcd_Create_Char
 10031 ;;		_Lcd_Display_Custom_Char
 10032 ;;		_Lcd_Progress_Bar
 10033 ;; This function uses a non-reentrant model
 10034 ;;
 10035                           
 10036     1433                     _Lcd_Write_Char:	
 10037                           ;psect for function _Lcd_Write_Char
 10038                           
 10039                           
 10040                           ;incstack = 0
 10041                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 10042                           ;Lcd_Write_Char@a stored from wreg
 10043     1433  00F3               	movwf	Lcd_Write_Char@a
 10044     1434                     l2711:
 10045                           
 10046                           ;SC1601_LCD.c: 147: void Lcd_Write_Char(char a);SC1601_LCD.c: 148: {;SC1601_LCD.c: 149: 
      +                              RD2 = 1;
 10047     1434  0020               	movlb	0	; select bank0
 10048     1435  150F               	bsf	15,2	;volatile
 10049     1436                     l2713:
 10050                           
 10051                           ;SC1601_LCD.c: 150:     Lcd_Port(a >> 4);
 10052     1436  0873               	movf	Lcd_Write_Char@a,w
 10053     1437  00F2               	movwf	??_Lcd_Write_Char
 10054     1438  3004               	movlw	4
 10055     1439                     u3075:
 10056     1439  36F2               	lsrf	??_Lcd_Write_Char,f
 10057     143A  0B89               	decfsz	9,f
 10058     143B  2C39               	goto	u3075
 10059     143C  0872               	movf	??_Lcd_Write_Char,w
 10060     143D  3195  2561  3194   	fcall	_Lcd_Port
 10061                           
 10062                           ;SC1601_LCD.c: 151:     Lcd_Enable_Pulse();
 10063     1440  3193  239A  3194   	fcall	_Lcd_Enable_Pulse
 10064                           
 10065                           ;SC1601_LCD.c: 152:     Lcd_Port(a & 0x0F);
 10066     1443  0873               	movf	Lcd_Write_Char@a,w
 10067     1444  390F               	andlw	15
 10068     1445  3195  2561  3194   	fcall	_Lcd_Port
 10069                           
 10070                           ;SC1601_LCD.c: 153:     Lcd_Enable_Pulse();
 10071     1448  3193  239A  3194   	fcall	_Lcd_Enable_Pulse
 10072     144B                     l152:
 10073     144B  0008               	return
 10074     144C                     __end_of_Lcd_Write_Char:
 10075                           
 10076                           	psect	text35
 10077     1595                     __ptext35:	
 10078 ;; *************** function _Lcd_Init *****************
 10079 ;; Defined at:
 10080 ;;		line 122 in file "SC1601_LCD.c"
 10081 ;; Parameters:    Size  Location     Type
 10082 ;;		None
 10083 ;; Auto vars:     Size  Location     Type
 10084 ;;		None
 10085 ;; Return value:  Size  Location     Type
 10086 ;;                  1    wreg      void 
 10087 ;; Registers used:
 10088 ;;		wreg, status,2, status,0, pclath, cstack
 10089 ;; Tracked objects:
 10090 ;;		On entry : 0/0
 10091 ;;		On exit  : 0/0
 10092 ;;		Unchanged: 0/0
 10093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10096 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10097 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10098 ;;Total ram usage:        1 bytes
 10099 ;; Hardware stack levels used: 1
 10100 ;; Hardware stack levels required when called: 4
 10101 ;; This function calls:
 10102 ;;		_Lcd_Cmd
 10103 ;;		_Lcd_Port
 10104 ;;		_Lcd_Send_Command
 10105 ;; This function is called by:
 10106 ;;		_main
 10107 ;;		_Lcd_Reset
 10108 ;; This function uses a non-reentrant model
 10109 ;;
 10110                           
 10111     1595                     _Lcd_Init:	
 10112                           ;psect for function _Lcd_Init
 10113                           
 10114     1595                     l3549:	
 10115                           ;incstack = 0
 10116                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
 10117                           
 10118                           
 10119                           ;SC1601_LCD.c: 124:     Lcd_Port(0x00);
 10120     1595  3000               	movlw	0
 10121     1596  3195  2561  3195   	fcall	_Lcd_Port
 10122     1599                     l3551:
 10123                           
 10124                           ;SC1601_LCD.c: 125:     _delay((unsigned long)((20)*(32000000/4000.0)));
 10125     1599  30D0               	movlw	208
 10126     159A  00F5               	movwf	??_Lcd_Init
 10127     159B  30CA               	movlw	202
 10128     159C                     u5117:
 10129     159C  0B89               	decfsz	9,f
 10130     159D  2D9C               	goto	u5117
 10131     159E  0BF5               	decfsz	??_Lcd_Init,f
 10132     159F  2D9C               	goto	u5117
 10133     15A0                     l3553:
 10134                           
 10135                           ;SC1601_LCD.c: 128:     Lcd_Cmd(0x03); _delay((unsigned long)((5)*(32000000/4000.0)));
 10136     15A0  3003               	movlw	3
 10137     15A1  3193  23AC  3195   	fcall	_Lcd_Cmd
 10138     15A4  3034               	movlw	52
 10139     15A5  00F5               	movwf	??_Lcd_Init
 10140     15A6  30F2               	movlw	242
 10141     15A7                     u5127:
 10142     15A7  0B89               	decfsz	9,f
 10143     15A8  2DA7               	goto	u5127
 10144     15A9  0BF5               	decfsz	??_Lcd_Init,f
 10145     15AA  2DA7               	goto	u5127
 10146     15AB                     l3555:
 10147                           
 10148                           ;SC1601_LCD.c: 129:     Lcd_Cmd(0x03); _delay((unsigned long)((100)*(32000000/4000000.0)
      +                          ));
 10149     15AB  3003               	movlw	3
 10150     15AC  3193  23AC  3195   	fcall	_Lcd_Cmd
 10151     15AF                     l3557:
 10152     15AF  30A0               	movlw	160
 10153     15B0                     u5137:
 10154     15B0  3200               	nop2
 10155     15B1  0B89               	decfsz	9,f
 10156     15B2  2DB0               	goto	u5137
 10157                           
 10158                           ;SC1601_LCD.c: 130:     Lcd_Cmd(0x03);
 10159     15B3  3003               	movlw	3
 10160     15B4  3193  23AC  3195   	fcall	_Lcd_Cmd
 10161                           
 10162                           ;SC1601_LCD.c: 131:     Lcd_Cmd(0x02);
 10163     15B7  3002               	movlw	2
 10164     15B8  3193  23AC  3195   	fcall	_Lcd_Cmd
 10165                           
 10166                           ;SC1601_LCD.c: 134:     Lcd_Send_Command(0x28);
 10167     15BB  3028               	movlw	40
 10168     15BC  3193  23CF  3195   	fcall	_Lcd_Send_Command
 10169                           
 10170                           ;SC1601_LCD.c: 135:     Lcd_Send_Command(0x0C);
 10171     15BF  300C               	movlw	12
 10172     15C0  3193  23CF  3195   	fcall	_Lcd_Send_Command
 10173                           
 10174                           ;SC1601_LCD.c: 136:     Lcd_Send_Command(0x06);
 10175     15C3  3006               	movlw	6
 10176     15C4  3193  23CF  3195   	fcall	_Lcd_Send_Command
 10177     15C7                     l3559:
 10178                           
 10179                           ;SC1601_LCD.c: 137:     _delay((unsigned long)((2)*(32000000/4000.0)));
 10180     15C7  3015               	movlw	21
 10181     15C8  00F5               	movwf	??_Lcd_Init
 10182     15C9  30C6               	movlw	198
 10183     15CA                     u5147:
 10184     15CA  0B89               	decfsz	9,f
 10185     15CB  2DCA               	goto	u5147
 10186     15CC  0BF5               	decfsz	??_Lcd_Init,f
 10187     15CD  2DCA               	goto	u5147
 10188     15CE  3200               	nop2
 10189     15CF                     l149:
 10190     15CF  0008               	return
 10191     15D0                     __end_of_Lcd_Init:
 10192                           
 10193                           	psect	text36
 10194     13CF                     __ptext36:	
 10195 ;; *************** function _Lcd_Send_Command *****************
 10196 ;; Defined at:
 10197 ;;		line 83 in file "SC1601_LCD.c"
 10198 ;; Parameters:    Size  Location     Type
 10199 ;;  cmd             1    wreg     unsigned char 
 10200 ;; Auto vars:     Size  Location     Type
 10201 ;;  cmd             1    4[COMMON] unsigned char 
 10202 ;; Return value:  Size  Location     Type
 10203 ;;                  1    wreg      void 
 10204 ;; Registers used:
 10205 ;;		wreg, status,2, status,0, pclath, cstack
 10206 ;; Tracked objects:
 10207 ;;		On entry : 0/0
 10208 ;;		On exit  : 0/0
 10209 ;;		Unchanged: 0/0
 10210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10212 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10213 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10214 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10215 ;;Total ram usage:        2 bytes
 10216 ;; Hardware stack levels used: 1
 10217 ;; Hardware stack levels required when called: 3
 10218 ;; This function calls:
 10219 ;;		_Lcd_Cmd
 10220 ;; This function is called by:
 10221 ;;		_Lcd_Clear
 10222 ;;		_Lcd_Set_Cursor
 10223 ;;		_Lcd_Init
 10224 ;;		_Lcd_Shift_Right
 10225 ;;		_Lcd_Shift_Left
 10226 ;;		_Lcd_Reset
 10227 ;;		_Lcd_Create_Char
 10228 ;;		_Lcd_Blink_On
 10229 ;;		_Lcd_Blink_Off
 10230 ;;		_Lcd_Display_On
 10231 ;;		_Lcd_Display_Off
 10232 ;;		_Lcd_Move_Cursor_Left
 10233 ;;		_Lcd_Move_Cursor_Right
 10234 ;; This function uses a non-reentrant model
 10235 ;;
 10236                           
 10237     13CF                     _Lcd_Send_Command:	
 10238                           ;psect for function _Lcd_Send_Command
 10239                           
 10240                           
 10241                           ;incstack = 0
 10242                           ; Regs used in _Lcd_Send_Command: [wreg+status,2+status,0+pclath+cstack]
 10243                           ;Lcd_Send_Command@cmd stored from wreg
 10244     13CF  00F4               	movwf	Lcd_Send_Command@cmd
 10245     13D0                     l2941:
 10246                           
 10247                           ;SC1601_LCD.c: 83: void Lcd_Send_Command(char cmd);SC1601_LCD.c: 84: {;SC1601_LCD.c: 85:
      +                               Lcd_Cmd(cmd >> 4);
 10248     13D0  0874               	movf	Lcd_Send_Command@cmd,w
 10249     13D1  00F3               	movwf	??_Lcd_Send_Command
 10250     13D2  3004               	movlw	4
 10251     13D3                     u3565:
 10252     13D3  36F3               	lsrf	??_Lcd_Send_Command,f
 10253     13D4  0B89               	decfsz	9,f
 10254     13D5  2BD3               	goto	u3565
 10255     13D6  0873               	movf	??_Lcd_Send_Command,w
 10256     13D7  3193  23AC  3193   	fcall	_Lcd_Cmd
 10257                           
 10258                           ;SC1601_LCD.c: 86:     Lcd_Cmd(cmd & 0x0F);
 10259     13DA  0874               	movf	Lcd_Send_Command@cmd,w
 10260     13DB  390F               	andlw	15
 10261     13DC  3193  23AC  3193   	fcall	_Lcd_Cmd
 10262     13DF                     l136:
 10263     13DF  0008               	return
 10264     13E0                     __end_of_Lcd_Send_Command:
 10265                           
 10266                           	psect	text37
 10267     13AC                     __ptext37:	
 10268 ;; *************** function _Lcd_Cmd *****************
 10269 ;; Defined at:
 10270 ;;		line 69 in file "SC1601_LCD.c"
 10271 ;; Parameters:    Size  Location     Type
 10272 ;;  a               1    wreg     unsigned char 
 10273 ;; Auto vars:     Size  Location     Type
 10274 ;;  a               1    2[COMMON] unsigned char 
 10275 ;; Return value:  Size  Location     Type
 10276 ;;                  1    wreg      void 
 10277 ;; Registers used:
 10278 ;;		wreg, status,2, status,0, pclath, cstack
 10279 ;; Tracked objects:
 10280 ;;		On entry : 0/0
 10281 ;;		On exit  : 0/0
 10282 ;;		Unchanged: 0/0
 10283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10285 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10287 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10288 ;;Total ram usage:        1 bytes
 10289 ;; Hardware stack levels used: 1
 10290 ;; Hardware stack levels required when called: 2
 10291 ;; This function calls:
 10292 ;;		_Lcd_Enable_Pulse
 10293 ;;		_Lcd_Port
 10294 ;; This function is called by:
 10295 ;;		_Lcd_Send_Command
 10296 ;;		_Lcd_Init
 10297 ;; This function uses a non-reentrant model
 10298 ;;
 10299                           
 10300     13AC                     _Lcd_Cmd:	
 10301                           ;psect for function _Lcd_Cmd
 10302                           
 10303                           
 10304                           ;incstack = 0
 10305                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
 10306                           ;Lcd_Cmd@a stored from wreg
 10307     13AC  00F2               	movwf	Lcd_Cmd@a
 10308     13AD                     l2707:
 10309                           
 10310                           ;SC1601_LCD.c: 69: void Lcd_Cmd(char a);SC1601_LCD.c: 70: {;SC1601_LCD.c: 71:     RD2 = 
      +                          0;
 10311     13AD  0020               	movlb	0	; select bank0
 10312     13AE  110F               	bcf	15,2	;volatile
 10313     13AF                     l2709:
 10314                           
 10315                           ;SC1601_LCD.c: 72:     Lcd_Port(a);
 10316     13AF  0872               	movf	Lcd_Cmd@a,w
 10317     13B0  3195  2561  3193   	fcall	_Lcd_Port
 10318                           
 10319                           ;SC1601_LCD.c: 73:     Lcd_Enable_Pulse();
 10320     13B3  3193  239A  3193   	fcall	_Lcd_Enable_Pulse
 10321     13B6                     l133:
 10322     13B6  0008               	return
 10323     13B7                     __end_of_Lcd_Cmd:
 10324                           
 10325                           	psect	text38
 10326     1561                     __ptext38:	
 10327 ;; *************** function _Lcd_Port *****************
 10328 ;; Defined at:
 10329 ;;		line 40 in file "SC1601_LCD.c"
 10330 ;; Parameters:    Size  Location     Type
 10331 ;;  a               1    wreg     unsigned char 
 10332 ;; Auto vars:     Size  Location     Type
 10333 ;;  a               1    1[COMMON] unsigned char 
 10334 ;; Return value:  Size  Location     Type
 10335 ;;                  1    wreg      void 
 10336 ;; Registers used:
 10337 ;;		wreg, status,2, status,0
 10338 ;; Tracked objects:
 10339 ;;		On entry : 0/0
 10340 ;;		On exit  : 0/0
 10341 ;;		Unchanged: 0/0
 10342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10344 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10345 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10346 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10347 ;;Total ram usage:        2 bytes
 10348 ;; Hardware stack levels used: 1
 10349 ;; Hardware stack levels required when called: 1
 10350 ;; This function calls:
 10351 ;;		Nothing
 10352 ;; This function is called by:
 10353 ;;		_Lcd_Cmd
 10354 ;;		_Lcd_Init
 10355 ;;		_Lcd_Write_Char
 10356 ;; This function uses a non-reentrant model
 10357 ;;
 10358                           
 10359     1561                     _Lcd_Port:	
 10360                           ;psect for function _Lcd_Port
 10361                           
 10362                           
 10363                           ;incstack = 0
 10364                           ; Regs used in _Lcd_Port: [wreg+status,2+status,0]
 10365                           ;Lcd_Port@a stored from wreg
 10366     1561  00F1               	movwf	Lcd_Port@a
 10367     1562                     l2635:
 10368                           
 10369                           ;SC1601_LCD.c: 40: void Lcd_Port(char a);SC1601_LCD.c: 41: {;SC1601_LCD.c: 42:     RD4 =
      +                           (a & 0x01);
 10370     1562  1871               	btfsc	Lcd_Port@a,0
 10371     1563  2D65               	goto	u2901
 10372     1564  2D68               	goto	u2900
 10373     1565                     u2901:
 10374     1565  0020               	movlb	0	; select bank0
 10375     1566  160F               	bsf	15,4	;volatile
 10376     1567  2D6A               	goto	u2914
 10377     1568                     u2900:
 10378     1568  0020               	movlb	0	; select bank0
 10379     1569  120F               	bcf	15,4	;volatile
 10380     156A                     u2914:
 10381     156A                     l2637:
 10382                           
 10383                           ;SC1601_LCD.c: 43:     RD5 = (a & 0x02) >> 1;
 10384     156A  0871               	movf	Lcd_Port@a,w
 10385     156B  00F0               	movwf	??_Lcd_Port
 10386     156C  3001               	movlw	1
 10387     156D                     u2925:
 10388     156D  36F0               	lsrf	??_Lcd_Port,f
 10389     156E  0B89               	decfsz	9,f
 10390     156F  2D6D               	goto	u2925
 10391     1570  1870               	btfsc	??_Lcd_Port,0
 10392     1571  2D73               	goto	u2931
 10393     1572  2D76               	goto	u2930
 10394     1573                     u2931:
 10395     1573  0020               	movlb	0	; select bank0
 10396     1574  168F               	bsf	15,5	;volatile
 10397     1575  2D78               	goto	u2944
 10398     1576                     u2930:
 10399     1576  0020               	movlb	0	; select bank0
 10400     1577  128F               	bcf	15,5	;volatile
 10401     1578                     u2944:
 10402     1578                     l2639:
 10403                           
 10404                           ;SC1601_LCD.c: 44:     RD6 = (a & 0x04) >> 2;
 10405     1578  0871               	movf	Lcd_Port@a,w
 10406     1579  00F0               	movwf	??_Lcd_Port
 10407     157A  3002               	movlw	2
 10408     157B                     u2955:
 10409     157B  36F0               	lsrf	??_Lcd_Port,f
 10410     157C  0B89               	decfsz	9,f
 10411     157D  2D7B               	goto	u2955
 10412     157E  1870               	btfsc	??_Lcd_Port,0
 10413     157F  2D81               	goto	u2961
 10414     1580  2D84               	goto	u2960
 10415     1581                     u2961:
 10416     1581  0020               	movlb	0	; select bank0
 10417     1582  170F               	bsf	15,6	;volatile
 10418     1583  2D86               	goto	u2974
 10419     1584                     u2960:
 10420     1584  0020               	movlb	0	; select bank0
 10421     1585  130F               	bcf	15,6	;volatile
 10422     1586                     u2974:
 10423     1586                     l2641:
 10424                           
 10425                           ;SC1601_LCD.c: 45:     RD7 = (a & 0x08) >> 3;
 10426     1586  0871               	movf	Lcd_Port@a,w
 10427     1587  00F0               	movwf	??_Lcd_Port
 10428     1588  3003               	movlw	3
 10429     1589                     u2985:
 10430     1589  36F0               	lsrf	??_Lcd_Port,f
 10431     158A  0B89               	decfsz	9,f
 10432     158B  2D89               	goto	u2985
 10433     158C  1870               	btfsc	??_Lcd_Port,0
 10434     158D  2D8F               	goto	u2991
 10435     158E  2D92               	goto	u2990
 10436     158F                     u2991:
 10437     158F  0020               	movlb	0	; select bank0
 10438     1590  178F               	bsf	15,7	;volatile
 10439     1591  2D94               	goto	u3004
 10440     1592                     u2990:
 10441     1592  0020               	movlb	0	; select bank0
 10442     1593  138F               	bcf	15,7	;volatile
 10443     1594                     u3004:
 10444     1594                     l127:
 10445     1594  0008               	return
 10446     1595                     __end_of_Lcd_Port:
 10447                           
 10448                           	psect	text39
 10449     139A                     __ptext39:	
 10450 ;; *************** function _Lcd_Enable_Pulse *****************
 10451 ;; Defined at:
 10452 ;;		line 55 in file "SC1601_LCD.c"
 10453 ;; Parameters:    Size  Location     Type
 10454 ;;		None
 10455 ;; Auto vars:     Size  Location     Type
 10456 ;;		None
 10457 ;; Return value:  Size  Location     Type
 10458 ;;                  1    wreg      void 
 10459 ;; Registers used:
 10460 ;;		wreg
 10461 ;; Tracked objects:
 10462 ;;		On entry : 0/0
 10463 ;;		On exit  : 0/0
 10464 ;;		Unchanged: 0/0
 10465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10470 ;;Total ram usage:        0 bytes
 10471 ;; Hardware stack levels used: 1
 10472 ;; Hardware stack levels required when called: 1
 10473 ;; This function calls:
 10474 ;;		Nothing
 10475 ;; This function is called by:
 10476 ;;		_Lcd_Cmd
 10477 ;;		_Lcd_Write_Char
 10478 ;; This function uses a non-reentrant model
 10479 ;;
 10480                           
 10481     139A                     _Lcd_Enable_Pulse:	
 10482                           ;psect for function _Lcd_Enable_Pulse
 10483                           
 10484     139A                     l2643:	
 10485                           ;incstack = 0
 10486                           ; Regs used in _Lcd_Enable_Pulse: [wreg]
 10487                           
 10488                           
 10489                           ;SC1601_LCD.c: 57:     RD3 = 1;
 10490     139A  0020               	movlb	0	; select bank0
 10491     139B  158F               	bsf	15,3	;volatile
 10492     139C                     l2645:
 10493                           
 10494                           ;SC1601_LCD.c: 58:     _delay((unsigned long)((50)*(32000000/4000000.0)));
 10495     139C  3085               	movlw	133
 10496     139D                     u5157:
 10497     139D  0B89               	decfsz	9,f
 10498     139E  2B9D               	goto	u5157
 10499     139F  0000               	nop
 10500     13A0                     l2647:
 10501                           
 10502                           ;SC1601_LCD.c: 59:     RD3 = 0;
 10503     13A0  0020               	movlb	0	; select bank0
 10504     13A1  118F               	bcf	15,3	;volatile
 10505     13A2                     l130:
 10506     13A2  0008               	return
 10507     13A3                     __end_of_Lcd_Enable_Pulse:
 10508                           
 10509                           	psect	intentry
 10510     0004                     __pintentry:	
 10511 ;; *************** function _isr *****************
 10512 ;; Defined at:
 10513 ;;		line 129 in file "main.c"
 10514 ;; Parameters:    Size  Location     Type
 10515 ;;		None
 10516 ;; Auto vars:     Size  Location     Type
 10517 ;;		None
 10518 ;; Return value:  Size  Location     Type
 10519 ;;                  1    wreg      void 
 10520 ;; Registers used:
 10521 ;;		wreg, status,2
 10522 ;; Tracked objects:
 10523 ;;		On entry : 0/0
 10524 ;;		On exit  : 0/0
 10525 ;;		Unchanged: 0/0
 10526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10531 ;;Total ram usage:        0 bytes
 10532 ;; Hardware stack levels used: 1
 10533 ;; This function calls:
 10534 ;;		Nothing
 10535 ;; This function is called by:
 10536 ;;		Interrupt level 1
 10537 ;; This function uses a non-reentrant model
 10538 ;;
 10539                           
 10540     0004                     _isr:
 10541                           
 10542                           ;incstack = 0
 10543     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 10544                           
 10545                           ; Regs used in _isr: [wreg+status,2]
 10546     0005  3180               	pagesel	$
 10547     0006                     i1l3583:
 10548                           
 10549                           ;main.c: 130:     if (INTCONbits.TMR0IF) {
 10550     0006  1D0B               	btfss	11,2	;volatile
 10551     0007  2809               	goto	u453_21
 10552     0008  280A               	goto	u453_20
 10553     0009                     u453_21:
 10554     0009  2810               	goto	i1l3589
 10555     000A                     u453_20:
 10556     000A                     i1l3585:
 10557                           
 10558                           ;main.c: 132:         tmr0_overflows++;
 10559     000A  3001               	movlw	1
 10560     000B  0021               	movlb	1	; select bank1
 10561     000C  07EC               	addwf	_tmr0_overflows^(0+128),f	;volatile
 10562     000D  3000               	movlw	0
 10563     000E  3DED               	addwfc	(_tmr0_overflows+1)^(0+128),f	;volatile
 10564     000F                     i1l3587:
 10565                           
 10566                           ;main.c: 133:         INTCONbits.TMR0IF = 0;
 10567     000F  110B               	bcf	11,2	;volatile
 10568     0010                     i1l3589:
 10569                           
 10570                           ;main.c: 136:     if (PIR1bits.TMR1IF) {
 10571     0010  0020               	movlb	0	; select bank0
 10572     0011  1C11               	btfss	17,0	;volatile
 10573     0012  2814               	goto	u454_21
 10574     0013  2815               	goto	u454_20
 10575     0014                     u454_21:
 10576     0014  2818               	goto	i1l68
 10577     0015                     u454_20:
 10578     0015                     i1l3591:
 10579                           
 10580                           ;main.c: 138:         PIR1bits.TMR1IF = 0;
 10581     0015  1011               	bcf	17,0	;volatile
 10582     0016                     i1l3593:
 10583                           
 10584                           ;main.c: 139:         TMR1 = 0;
 10585     0016  0196               	clrf	22	;volatile
 10586     0017  0197               	clrf	23	;volatile
 10587     0018                     i1l68:
 10588     0018  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 10589     0019  0009               	retfie
 10590     001A                     __end_of_isr:
 10591     007E                     btemp	set	126	;btemp
 10592     007E                     int$flags	set	126
 10593     007E                     wtemp0	set	126
 10594                           
 10595                           	psect	config
 10596                           
 10597                           ;Config register CONFIG1 @ 0x8007
 10598                           ;	Oscillator Selection Bits
 10599                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 10600                           ;	Watchdog Timer Enable
 10601                           ;	WDTE = OFF, WDT disabled
 10602                           ;	Power-up Timer Enable
 10603                           ;	PWRTE = OFF, PWRT disabled
 10604                           ;	MCLR Pin Function Select
 10605                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input if LVP bit is also 0.
 10606                           ;	Flash Program Memory Code Protection
 10607                           ;	CP = OFF, Program memory code protection is disabled
 10608                           ;	Brown-out Reset Enable
 10609                           ;	BOREN = OFF, Brown-out Reset disabled
 10610                           ;	Clock Out Enable
 10611                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 10612                           ;	Internal/External Switchover Mode
 10613                           ;	IESO = ON, Internal/External Switchover Mode is enabled
 10614                           ;	Fail-Safe Clock Monitor Enable
 10615                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 10616     8007                     	org	32775
 10617     8007  19A4               	dw	6564
 10618                           
 10619                           ;Config register CONFIG2 @ 0x8008
 10620                           ;	Flash Memory Self-Write Protection
 10621                           ;	WRT = OFF, Write protection off
 10622                           ;	Peripheral Pin Select one-way control
 10623                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
 10624                           ;	Zero-cross detect disable
 10625                           ;	ZCDDIS = ON, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 10626                           ;	Phase Lock Loop enable
 10627                           ;	PLLEN = OFF, 4x PLL is disabled
 10628                           ;	Stack Overflow/Underflow Reset Enable
 10629                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 10630                           ;	Brown-out Reset Voltage Selection
 10631                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 10632                           ;	Low-Power Brown Out Reset
 10633                           ;	LPBOR = OFF, Low-Power BOR is disabled
 10634                           ;	In-Circuit Debugger Mode
 10635                           ;	DEBUG = 0x1, unprogrammed default
 10636                           ;	Low-Voltage Programming Enable
 10637                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
 10638     8008                     	org	32776
 10639     8008  1EFF               	dw	7935

Data Sizes:
    Strings     152
    Constant    0
    Data        113
    BSS         55
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     73      78
    BANK1            80     76      79
    BANK2            80      0      80
    BANK3            80      0      80
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    ftoa@ptr	PTR unsigned char  size(1) Largest target is 16
		 -> ftoa@buf(BANK3[16]), 

    ftoa@status	PTR int  size(1) Largest target is 2
		 -> Lcd_Write_Float@status(BANK0[2]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 16
		 -> ftoa@buf(BANK3[16]), Lcd_Write_Integer@buf(COMMON[8]), 

    itoa@ptr	PTR unsigned char  size(2) Largest target is 16
		 -> ftoa@buf(BANK3[16]), Lcd_Write_Integer@buf(COMMON[8]), 

    itoa@ptr1	PTR unsigned char  size(2) Largest target is 16
		 -> ftoa@buf(BANK3[16]), Lcd_Write_Integer@buf(COMMON[8]), 

    Lcd_Write_Float@buf	PTR unsigned char  size(1) Largest target is 16
		 -> ftoa@buf(BANK3[16]), 

    Lcd_Write_String@str	PTR const unsigned char  size(2) Largest target is 35
		 -> ftoa@buf(BANK3[16]), Lcd_Display_Battery@buf(COMMON[5]), Lcd_Scroll_Text@buffer(BANK0[17]), Lcd_Write_Integer@buf(COMMON[8]), 
		 -> Lcd_Write_Padded_Integer@buf(BANK1[16]), STR_1(CODE[15]), STR_10(CODE[9]), STR_12(CODE[8]), 
		 -> STR_2(CODE[14]), STR_3(CODE[35]), STR_4(CODE[15]), STR_5(CODE[9]), 
		 -> STR_6(CODE[9]), STR_7(CODE[11]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S944$buffer	PTR unsigned char  size(2) Largest target is 0

    S944$source	PTR const unsigned char  size(2) Largest target is 0

    sp__ftoa	PTR unsigned char  size(1) Largest target is 16
		 -> ftoa@buf(BANK3[16]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 16
		 -> ftoa@buf(BANK3[16]), Lcd_Write_Integer@buf(COMMON[8]), 

    sp__strncpy	PTR unsigned char  size(1) Largest target is 17
		 -> Lcd_Scroll_Text@buffer(BANK0[17]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_11(CODE[5]), STR_9(CODE[5]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 16
		 -> Lcd_Display_Battery@buf(COMMON[5]), Lcd_Write_Padded_Integer@buf(BANK1[16]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 5
		 -> STR_11(CODE[5]), STR_9(CODE[5]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_11(CODE[5]), STR_9(CODE[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_11(CODE[5]), STR_9(CODE[5]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _calibrate->___xxtofl
    ___fldiv->___xxtofl
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _Lcd_Set_Cursor->_Lcd_Send_Command
    _Lcd_Clear->_Lcd_Send_Command
    _ftoa->___xxtofl
    _ftoa->_itoa
    _itoa->___awdiv
    ___fltol->___xxtofl
    ___flsub->___xxtofl
    ___flmul->___xxtofl
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Init->_Lcd_Send_Command
    _Lcd_Send_Command->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_calibrate
    _calibrate->_Lcd_Write_Padded_Integer
    ___fldiv->___flmul
    _Lcd_Write_Padded_Integer->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _Lcd_Write_Float->_ftoa
    _ftoa->___fltol
    ___fltol->___flmul
    ___flsub->___fladd

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_calibrate
    _calibrate->_Lcd_Write_Padded_Integer

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _isr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _isr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _isr in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _isr in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _isr in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _isr in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _isr in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _isr in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _isr in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _isr in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                38    38      0   50221
                                             69 BANK0      4     4      0
                                             42 BANK1     34    34      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                    _Lcd_Write_Float
                   _Lcd_Write_String
            _ReadTimer0WithOverflows
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
                          _calibrate
                           _initMain
 ---------------------------------------------------------------------------------
 (1) _initMain                                             1     1      0       0
                                              0 COMMON     1     1      0
                        _internal_32
 ---------------------------------------------------------------------------------
 (2) _internal_32                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calibrate                                           30    30      0   21034
                                             65 BANK0      4     4      0
                                             16 BANK1     26    26      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
           _Lcd_Write_Padded_Integer
                   _Lcd_Write_String
            _ReadTimer0WithOverflows
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1881
                                             26 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _ReadTimer0WithOverflows                              8     6      2       0
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Padded_Integer                            20    16      4    9312
                                             61 BANK0      4     0      4
                                              0 BANK1     16    16      0
                   _Lcd_Write_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             22    16      6    7749
                                             41 BANK0     20    14      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             7     4      3    7330
                                             34 BANK0      7     4      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           15    13      2    7011
                                             20 BANK0     14    12      2
                               _dtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (6) _read_prec_or_width                                   9     7      2     989
                                              6 COMMON     5     3      2
                                              0 BANK0      4     4      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                12    10      2    4515
                                              8 BANK0     12    10      2
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                  7     4      3    2347
                                             11 COMMON     3     0      3
                                              4 BANK0      4     4      0
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     6      1    1149
                                              8 COMMON     3     2      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                8     5      3     834
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                              7 COMMON     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       5     4      1    1711
                                              5 COMMON     5     4      1
                   _Lcd_Send_Command
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            1     1      0     154
                                              5 COMMON     1     1      0
                   _Lcd_Send_Command
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_Float                                      7     3      4   14670
                                             57 BANK0      7     3      4
                   _Lcd_Write_String
                               _ftoa
 ---------------------------------------------------------------------------------
 (2) _ftoa                                                21    16      5   13071
                                             36 BANK0     21    16      5
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                               _itoa
 ---------------------------------------------------------------------------------
 (3) _itoa                                                18    12      6    3166
                                              9 COMMON     5     5      0
                                              0 BANK0     13     7      6
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     700
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              9     5      4    1060
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     778
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     533
                                             26 BANK0     10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flsub                                              8     0      8    2637
                                              8 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             20    12      8    2136
                                              0 COMMON    12     4      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    4089
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     942
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     3     1      2    1317
                                              4 COMMON     3     1      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0     132
                                              2 COMMON     2     2      0
                   _Lcd_Enable_Pulse
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     352
                                              5 COMMON     1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
                   _Lcd_Send_Command
 ---------------------------------------------------------------------------------
 (3) _Lcd_Send_Command                                     2     2      0     154
                                              3 COMMON     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (4) _Lcd_Cmd                                              1     1      0     110
                                              2 COMMON     1     1      0
                   _Lcd_Enable_Pulse
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             2     2      0      88
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _Lcd_Enable_Pulse                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _isr                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Send_Command
       _Lcd_Cmd
         _Lcd_Enable_Pulse
         _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
     _Lcd_Send_Command
   _Lcd_Set_Cursor
     _Lcd_Send_Command
   _Lcd_Write_Float
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Enable_Pulse
         _Lcd_Port
     _ftoa
       ___flge
       ___flmul
         __Umul8_16
         ___xxtofl (ARG)
       ___flneg
       ___flsub
         ___fladd
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _itoa
         ___awdiv
         ___wmul
   _Lcd_Write_String
   _ReadTimer0WithOverflows
   ___fldiv
     ___flmul (ARG)
     ___xxtofl (ARG)
   ___flge
   ___flmul
   ___flsub
   ___xxtofl
   _calibrate
     _Lcd_Clear
     _Lcd_Set_Cursor
     _Lcd_Write_Padded_Integer
       _Lcd_Write_String
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___awdiv
               ___awmod
               _abs
                 ___awmod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
             _fputc
             _read_prec_or_width
               ___wmul
     _Lcd_Write_String
     _ReadTimer0WithOverflows
     ___fldiv
     ___flge
     ___flmul
     ___fltol
     ___xxtofl
   _initMain
     _internal_32

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     49      4E       5       97.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     4C      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      50      11      100.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0     14B      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     14B      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              50      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24              50      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25              20      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sun Dec 15 01:06:28 2024

                    ___fldiv@aexp 0053                      ___fldiv@bexp 0052                      ___fldiv@sign 004B  
                              l61 164D                                l71 1403                                l80 0FFF  
                              l88 00B3                      ___awdiv@sign 0076               ___wmul@multiplicand 0072  
             __Umul8_16@word_mpld 0076                  ?_Lcd_Write_Float 0059                               l130 13A2  
                             l133 13B6                               l127 1594                               l136 13DF  
                             l152 144B                               l145 147A                               l321 13AB  
                             l170 0904                               l146 1480                               l139 13CE  
                             l172 090E                               l149 15CF                               l173 090E  
                             l158 141A                               l182 0C86                               l407 14C4  
                             l191 1464                               l601 0874                               l409 14D8  
                             l611 0874                               l188 1432                               l712 0639  
                             l608 085F                               l560 179F                               l721 0771  
                             l810 04E5                               l714 0617                               l804 0565  
                             l708 05BB                               l733 06ED                               l573 1740  
                             l750 076A                               l742 0747                               l902 09DF  
                             l823 152B                               l751 0771                               l911 0A64  
                             l816 0559                               l593 07FB                               l585 078E  
                             l825 153B                               l729 06CB                               l754 14F8  
                             l850 09B8                               l739 070F                               l588 07E2  
                             l780 0DB6                               l764 0CD8                               l597 13C1  
                             l861 0984                               l941 149C                               l862 0990  
                             l854 096A                               l934 0B46                               l926 0A8D  
                             l870 14B9                               l766 0E30                               l919 17FF  
                             l848 0931                               l960 169D                               l928 0A97  
                             l785 0E02                               l890 15E2                               l786 0E1C  
                             l971 07FD                               l948 13F0                               l788 0E29  
                             l893 1603                               l895 160E                               l968 1560  
                             l898 09E1                               _RD2 007A                               _RD3 007B  
                             _RD4 007C                               _RD5 007D                               _RD6 007E  
                             _RD7 007F                               _abs 13E0          ?_ReadTimer0WithOverflows 0070  
                             _pad 15D0                               _isr 0004                      ___awmod@sign 0076  
                             wreg 0009                      ___flmul@aexp 0032                      ___flmul@bexp 0033  
                    ___flmul@sign 002D                      ___flmul@temp 0038                      ___flmul@prod 0034  
                    ___fltol@exp1 0043                              ?_abs 0077                              l3001 07F8  
                            l3003 07FA                              l3011 13C1                              l3101 038D  
                            l3021 0817                              l3111 03E2                              l3103 0398  
                            l3007 13B7                              l3031 0837                              l3023 0828  
                            l3015 0804                              l3121 0415                              l3113 03EF  
                            l3105 03A5                              l3009 13BF                              l3025 0829  
                            l3017 080E                              l3201 0919                              l3131 0452  
                            l3123 0420                              l3115 03FC                              l3107 03BD  
                            l3051 14D9                              l3027 0831                              l3211 0945  
                            l3203 0929                              l3141 04A2                              l3133 045D  
                            l3125 0427                              l3117 0403                              l3109 03CA  
                            l3061 0331                              l3053 14DC                              l3045 0856  
                            l3037 083F                              l3029 0833                              l3221 0971  
                            l3213 0950                              l3205 0939                              l2501 1791  
                            l3151 04C1                              l3143 04AE                              l3135 046F  
                            l3127 0439                              l3119 040E                              l3071 0348  
                            l3063 0335                              l3047 0864                              l3039 084F  
                            l3231 09A6                              l3223 097A                              l3215 0957  
                            l2503 1796                              l2511 16EF                              l2431 1658  
                            l3311 0C92                              l3303 0C87                              l3161 04E2  
                            l3145 04B5                              l3153 04C5                              l3137 0484  
                            l3129 0440                              l3081 035D                              l3073 034A  
                            l3065 0336                              l3057 032B                              l3049 0869  
                            l3233 09AB                              l3225 097E                              l3217 095B  
                            l3209 0942                              l2505 179B                              l2521 1703  
                            l2513 16F3                              l2433 165D                              l2601 0A31  
                            l3401 0D96                              l3313 0C97                              l3321 0CA7  
                            l3305 0C8B                              l3241 13A3                              l3171 04FB  
                            l3155 04C9                              l3147 04B9                              l3139 049B  
                            l3091 0372                              l3083 035E                              l3075 0352  
                            l3067 033B                              l3059 032F                              l3235 09AF  
                            l3227 0988                              l3219 0963                              l2451 14BA  
                            l3251 1466                              l2531 1719                              l2523 1709  
                            l2515 16F8                              l2435 1667                              l2427 164E  
                            l2443 153E                              l2611 0A52                              l2603 0A36  
                            l3243 13F1                              l3403 0D9A                              l3331 0CBB  
                            l3323 0CAF                              l3315 0C9C                              l3307 0C8D  
                            l3181 053C                              l3173 0513                              l3165 04EA  
                            l3157 04CA                              l3149 04BA                              l3093 037A  
                            l3085 0363                              l3077 0357                              l3069 0340  
                            l3237 09B0                              l3229 0992                              l2461 14D4  
                            l2453 14BC                              l3253 146B                              l2541 1737  
                            l2533 1723                              l2525 170C                              l2517 16FA  
                            l2509 16EE                              l2437 1685                              l2429 1653  
                            l2445 1541                              l2613 0A59                              l2605 0A43  
                            l2621 17B5                              l2701 0B2E                              l3261 145D  
                            l3421 0DE4                              l3413 0DBB                              l3405 0D9B  
                            l3333 0CC0                              l3341 0CD0                              l3325 0CB4  
                            l3317 0CA4                              l3309 0C91                              l3501 0E31  
                            l2711 1434                              l3191 0557                              l3183 0545  
                            l3167 04EF                              l3175 0517                              l3159 04CE  
                            l3095 037F                              l3087 0368                              l3079 0359  
                            l2471 174B                              l2455 14C0                              l3247 13C2  
                            l3255 1473                              l2543 173C                              l2535 1727  
                            l2527 1711                              l2519 16FE                              l2439 1694  
                            l2447 154D                              l2551 15DC                              l2607 0A48  
                            l2631 17FB                              l2623 17BD                              l3431 0E1B  
                            l3415 0DC0                              l3423 0DE8                              l3407 0D9F  
                            l3343 0CE0                              l3351 0CF9                              l3335 0CC5  
                            l3327 0CB6                              l3319 0CA5                              l3511 0E62  
                            l3503 0E3A                              l2641 1586                              l2713 1436  
                            l3193 055D                              l3185 0547                              l3177 0524  
                            l3169 04F7                              l3097 0384                              l3089 0370  
                            l2801 061F                              l2721 056F                              l2481 175C  
                            l2473 174D                              l2465 1741                              l2457 14C9  
                            l3249 13C6                              l3257 147C                              l2537 172C  
                            l2529 1715                              l2449 1552                              l2561 1608  
                            l2553 15E0                              l2609 0A4E                              l2625 17CA  
                            l2617 17A2                              l3433 0E1F                              l3425 0DF5  
                            l3417 0DC8                              l3409 0DB3                              l3361 0D1F  
                            l3353 0CFE                              l3345 0CEC                              l3337 0CCD  
                            l3329 0CBA                              l3521 0E96                              l3513 0E6A  
                            l3505 0E41                              l2643 139A                              l2635 1562  
                            l2707 13AD                              l3187 0552                              l3179 052E  
                            l2803 0621                              l2811 0633                              l2731 0583  
                            l2723 0570                              l2715 0566                              l2491 1772  
                            l2483 1762                              l2475 1751                              l2467 1742  
                            l2459 14CE                              l2539 1732                              l2563 13E0  
                            l2555 15E6                              l2547 15D2                              l2571 09BB  
                            l2627 17DF                              l2619 17A4                              l2651 0A78  
                            l3259 144C                              l3435 0E23                              l3427 0E10  
                            l3419 0DCC                              l3371 0D44                              l3363 0D27  
                            l3347 0CF0                              l3339 0CCE                              l3531 0F58  
                            l3523 0EDA                              l3515 0E74                              l3507 0E4E  
                            l3451 161F                              l3443 160F                              l2645 139C  
                            l2637 156A                              l2709 13AF                              l3189 0556  
                            l2901 0763                              l2821 0653                              l2813 063D  
                            l2805 0625                              l2741 0597                              l2725 0575  
                            l2733 0585                              l2717 0569                              l3197 0910  
                            l2493 1781                              l2485 1765                              l2477 1756  
                            l2469 1746                              l2565 13E4                              l2557 15F0  
                            l2549 15D6                              l2581 09D6                              l2573 09BD  
                            l2629 17E7                              l2653 0A80                              l3437 0E25  
                            l3429 0E13                              l3381 0D63                              l3373 0D48  
                            l3365 0D2F                              l3357 0D07                              l3541 0FD8  
                            l3533 0F9E                              l3525 0EF1                              l3517 0E8E  
                            l3509 0E56                              l3461 1629                              l3453 1620  
                            l3445 1612                              l2647 13A0                              l2639 1578  
                            l3551 1599                              l2911 151C                              l2903 0765  
                            l2831 0665                              l2823 0657                              l2815 0642  
                            l2807 0626                              l2751 05A8                              l2743 0599  
                            l2735 058D                              l2727 057A                              l2719 056B  
                            l3199 0915                              l2495 1785                              l2487 176A  
                            l2479 175A                              l2567 13E5                              l2559 15F5  
                            l2591 0A06                              l2583 09DB                              l2575 09C8  
                            l2671 0ABE                              l2663 0A9A                              l2655 0A87  
                            l3391 0D7F                              l3383 0D6B                              l3375 0D49  
                            l3367 0D31                              l3359 0D17                              l3543 0FDE  
                            l3535 0FC8                              l3527 0EFA                              l3519 0E94  
                            l3471 1633                              l3463 162B                              l3455 1624  
                            l3447 161A                              l3553 15A0                              l2913 1523  
                            l2905 076C                              l2841 06AF                              l2833 0666  
                            l2825 065B                              l2809 062F                              l2761 05C5  
                            l2753 05B0                              l2745 059D                              l2737 0590  
                            l2729 0582                              l2497 1786                              l2489 176E  
                            l2593 0A08                              l2585 09E5                              l2577 09CD  
                            l2681 0ADF                              l2673 0ABF                              l2665 0AAA  
                            l2657 0A8B                              l2649 0A67                              l3393 0D86  
                            l3369 0D36                              l3377 0D50                              l3385 0D6F  
                            l3537 0FCB                              l3529 0F26                              l3545 0FEF  
                            l3481 163E                              l3473 1635                              l3465 162D  
                            l3457 1626                              l3449 161D                              l3555 15AB  
                            l2915 1527                              l2907 0770                              l2851 06D8  
                            l2843 06B5                              l2835 066F                              l2827 065F  
                            l2819 064B                              l2771 05D2                              l2763 05CA  
                            l2755 05B1                              l2747 059E                              l2739 0596  
                            l2499 178B                              l2595 0A0C                              l2587 09E8  
                            l2579 09D1                              l2691 0B12                              l2683 0AEB  
                            l2675 0AC4                              l2667 0AAF                              l2659 0A8E  
                            l2923 1483                              l3395 0D8A                              l3387 0D75  
                            l3379 0D62                              l3547 0FF8                              l3539 0FD1  
                            l3491 1646                              l3483 163F                              l3475 1637  
                            l3467 162F                              l3459 1628                              l2941 13D0  
                            l3557 15AF                              l3549 1595                              l2933 1404  
                            l2917 1532                              l2909 151A                              l2861 06F1  
                            l2845 06BA                              l2829 0661                              l2837 0674  
                            l2781 05DC                              l2773 05D4                              l2765 05CC  
                            l2749 05A3                              l2757 05B3                              l3901 0C3D  
                            l2589 09EC                              l2597 0A1C                              l2693 0B1A  
                            l2685 0AF8                              l2677 0ACB                              l2669 0ABA  
                            l2925 1488                              l3397 0D8B                              l3389 0D7D  
                            l3493 1647                              l3485 1640                              l3477 1638  
                            l3469 1631                              ?_pad 007B                              l3559 15C7  
                            l2935 1405                              l2919 1537                              l2863 06F4  
                            l2855 06E1                              l2839 068B                              l2847 06C3  
                            l2871 0701                              l2791 05E6                              l2783 05DE  
                            l2775 05D6                              l2767 05CE                              l2759 05C1  
                            l3903 0C6F                              l3911 141B                              l2599 0A2A  
                            l2679 0AD5                              l2927 1490                              l3399 0D92  
                            l3495 1648                              l3487 1642                              l3479 163C  
                            l2937 140D                              l2881 0714                              l2873 0702  
                            l2865 06F6                              l2857 06E8                              l2849 06D3  
                            l2785 05E0                              l2777 05D8                              l2769 05D0  
                            l2793 05E8                              l3841 087E                              l3905 0C7E  
                            l3913 142B                              l2697 0B24                              l2689 0B01  
                            l2929 149A                              l3497 1649                              l3489 1644  
                            l3921 0086                              l2939 1411                              l2891 074C  
                            l2883 0719                              l2875 0706                              l2867 06FB  
                            l2859 06EC                              l2795 05E9                              l2787 05E2  
                            l2779 05DA                              l3843 0882                              l3851 0898  
                            l3907 0C85                              l3499 164B                              l3931 00AB  
                            l3923 0089                              l3915 004E                              l2893 0751  
                            l2885 0721                              l2877 070C                              l2869 06FD  
                            l2797 0601                              l2789 05E4                              l3861 08DA  
                            l3853 089C                              l3845 0889                              l2981 14A7  
                            l3941 00DE                              l3933 00B0                              l3925 0098  
                            l3917 0051                              l2991 07A2                              l2895 0759  
                            l2887 0725                              l2799 061B                              l3863 08DF  
                            l3855 08AC                              l3847 088F                              l3839 0875  
                            l3871 0B47                              l2983 14B1                              l2975 149F  
                            l3951 015B                              l3943 00F8                              l3935 00B8  
                            l3927 009A                              l3919 005A                              l2993 07AA  
                            l2897 075E                              l2889 0743                              l3865 08E4  
                            l3857 08D0                              l3849 0893                              l3881 0BA6  
                            l3873 0B4A                              l2977 14A3                              l3961 028B  
                            l3953 0173                              l3945 00FE                              l3937 00C0  
                            l3929 009F                              l2995 07AE                              l2987 0772  
                            l2899 075F                              l3867 08F6                              l3859 08D4  
                            l3891 0C09                              l3883 0BAA                              l3875 0B5A  
                            l2979 14A5                              l3971 02EA                              l3963 02C0  
                            l3955 017C                              l3947 0100                              l3939 00CC  
                            l2997 07C6                              l2989 0786                              l3869 08FA  
                            l3893 0C0D                              l3885 0BBE                              l3877 0B88  
                            l3981 0321                              l3973 02F1                              l3965 02C7  
                            l3957 0183                              l3949 0144                              l2999 07CA  
                            l3895 0C17                              l3887 0BCE                              l3879 0B9F  
                            l3975 02F7                              l3967 02CD                              l3959 0191  
                            l3897 0C1D                              l3889 0BF8                              l3977 030A  
                            l3969 02E1                              l3899 0C21                              l3979 0318  
                            ?_isr 0070                              STR_1 1834                              STR_2 1852  
                            STR_3 1800                              STR_4 1843                              STR_5 1874  
                            STR_6 187D                              STR_7 1860                              STR_8 1823  
                            STR_9 1893                              u3010 0A78                              u3011 0A77  
                            u3004 1594                              u3100 057A                              u3020 0AAF  
                            u3101 0579                              u3021 0AAE                              u3110 0596  
                            u3030 0ABE                              u3111 0595                              u3031 0ABD  
                            u4000 0524                              u3200 061B                              u3120 059D  
                            u3040 0AD5                              u4001 0523                              u3201 061A  
                            u3121 059C                              u3041 0AD4                              u4010 053C  
                            u3210 0625                              u3130 05A3                              u3050 0ADF  
                            u4011 053B                              u3211 0624                              u3131 05A2  
                            u3051 0ADE                              u4020 0556                              u3300 068B  
                            u3140 05A8                              u2500 14C0                              u3060 0B12  
                            u4021 0555                              u4005 0520                              u3301 068A  
                            u3141 05A7                              u2501 14BF                              u3061 0B11  
                            u3310 06BA                              u3230 0639                              u3150 05C1  
                            u4110 097E                              u4030 0915                              u4015 0538  
                            u3311 06B9                              u3303 0687                              u3231 0638  
                            u3151 05C0                              u4111 097D                              u4031 0914  
                            u3400 070C                              u3320 06D3                              u3240 063D  
                            u3160 05C5                              u3080 056F                              u4120 0984  
                            u4040 0919                              u2600 1781                              u4200 0C91  
                            u5000 0173                              u3401 070B                              u3321 06D2  
                            u3241 063C                              u3225 0629                              u3161 05C4  
                            u3081 056E                              u4121 0983                              u4105 0974  
                            u4041 0918                              u2601 1780                              u4201 0C90  
                            u5001 0172                              u3410 0713                              u3330 06D8  
                            u3250 0642                              u3170 0601                              u3090 0575  
                            u4130 0988                              u4050 0939                              u2530 14D4  
                            u2450 1653                              u4210 0C97                              u5010 028B  
                            u3075 1439                              u3411 0712                              u3331 06D7  
                            u3251 0641                              u3171 0600                              u3091 0574  
                            u4131 0987                              u4051 0938                              u2531 14D3  
                            u2515 14C5                              u2451 1652                              u4211 0C96  
                            u5011 028A                              u3500 0770                              u3420 0719  
                            u3260 0657                              u3180 060A                              u4140 099C  
                            u2620 1791                              u2540 1746                              u2460 1658  
                            u4220 0C9C                              u3501 076F                              u3421 0718  
                            u3261 0656                              u3181 0608                              u2621 1790  
                            u2605 177D                              u2541 1745                              u2525 14CA  
                            u2461 1657                              u4221 0C9B                              u3510 1527  
                            u3430 0725                              u3350 06EC                              u3270 065B  
                            u3190 060B                              u4150 09AB                              u4070 0956  
                            u2630 1796                              u2550 1751                              u2710 1732  
                            u2470 1667                              u4310 0D48                              u4230 0CBA  
                            u3511 1526                              u3431 0724                              u3351 06EB  
                            u3271 065A                              u3175 05FD                              u4151 09AA  
                            u4071 0955                              u2631 1795                              u2615 1787  
                            u2551 1750                              u2711 1731                              u2471 1666  
                            u4311 0D47                              u4231 0CB9                              u3440 0734  
                            u3360 06F1                              u3280 0665                              u4160 09AF  
                            u2560 1762                              u2720 1737                              u2640 16F3  
                            u2480 1685                              u2800 09CD                              u4400 0D9F  
                            u4240 0CC0                              u3361 06F0                              u3345 06E2  
                            u3281 0664                              u4161 09AE                              u4145 0998  
                            u4065 094A                              u2561 1761                              u2721 1736  
                            u2705 1728                              u2641 16F2                              u2481 1684  
                            u2801 09CC                              u4401 0D9E                              u4305 0D3E  
                            u4241 0CBF                              u3610 0786                              u3530 1537  
                            u3450 0743                              u3370 06FB                              u4090 0970  
                            u4170 146B                              u2650 16FE                              u2490 1560  
                            u2730 15D6                              u2810 09D6                              u4410 0DB3  
                            u4330 0D62                              u4250 0CC5                              u3611 0785  
                            u3531 1536                              u3451 0742                              u3371 06FA  
                            u4091 096F                              u5107 13C9                              u4171 146A  
                            u2651 16FD                              u2491 155F                              u2731 15D5  
                            u2811 09D5                              u4411 0DB2                              u4331 0D61  
                            u4251 0CC4                              u5027 008F                              u2900 1568  
                            u3620 07A2                              u3460 074C                              u3380 0701  
                            u3700 083E                              u2580 1772                              u2660 1709  
                            u2740 15E0                              u2820 0A2A                              u3540 149A  
                            u4420 0DBA                              u4340 0D75                              u4260 0CE0  
                            u4500 0EF1                              u2901 1565                              u5117 159C  
                            u3621 07A1                              u3525 152C                              u3461 074B  
                            u3445 0730                              u3381 0700                              u3701 083D  
                            u4085 0964                              u2581 1771                              u2661 1708  
                            u2485 1681                              u2741 15DF                              u2821 0A29  
                            u3541 1499                              u4421 0DB9                              u4341 0D74  
                            u4325 0D4A                              u4261 0CDF                              u4501 0EF0  
                            u5037 00A5                              u3550 141A                              u3630 07AE  
                            u3470 0751                              u3390 0706                              u2750 1603  
                            u2830 0A31                              u4430 0DC0                              u4350 0D7D  
                            u4270 0CFE                              u5127 15A7                              u3551 1419  
                            u3631 07AD                              u3471 0750                              u3391 0705  
                            u3295 0669                              u2575 1766                              u2751 1602  
                            u2831 0A30                              u4431 0DBF                              u4351 0D7C  
                            u4335 0D5E                              u4271 0CFD                              u5047 00C6  
                            u3640 07CA                              u3800 035D                              u3480 075E  
                            u3720 084E                              u2680 1719                              u2760 1608  
                            u2840 0A36                              u4440 0DCC                              u4280 0D36  
                            u5137 15B0                              u3641 07C9                              u3801 035C  
                            u3481 075D                              u3721 084D                              u2681 1718  
                            u2761 1607                              u2841 0A35                              u2825 0A26  
                            u4441 0DCB                              u4281 0D35                              u5057 0189  
                            u2930 1576                              u2914 156A                              u3650 07F8  
                            u3810 0363                              u3490 0763                              u3730 0855  
                            u2690 1723                              u2770 13E4                              u2850 0A43  
                            u4450 0DDA                              u4370 0D8A                              u2931 1573  
                            u5147 15CA                              u3651 07F7                              u3811 0362  
                            u3491 0762                              u3731 0854                              u3715 0840  
                            u2595 1773                              u2691 1722                              u2675 170D  
                            u2771 13E3                              u2755 15FF                              u2851 0A42  
                            u4371 0D89                              u5067 0310                              u3820 0368  
                            u3660 13BF                              u2860 0A48                              u2780 09C2  
                            u4460 0DF5                              u5157 139D                              u2925 156D  
                            u3565 13D3                              u3821 0367                              u3661 13BE  
                            u2861 0A47                              u2781 09C0                              u4461 0DF4  
                            u4365 0D80                              u5077 1615                              u3910 04B9  
                            u3830 037F                              u3750 0864                              u3670 080E  
                            u2870 0A4E                              u2790 09C3                              u4470 0E10  
                            u4390 0D9A                              u3655 07F4                              u3911 04B8  
                            u3831 037E                              u3751 0863                              u3671 080D  
                            u2695 171F                              u2871 0A4D                              u2855 0A3F  
                            u4471 0E0F                              u4455 0DD6                              u4391 0D99  
                            u4295 0D37                              u5087 0E47                              u2960 1584  
                            u2944 1578                              u3840 0384                              u3760 0869  
                            u3680 0824                              u2880 17B5                              u4480 0E23  
                            u2961 1581                              u3905 04AF                              u3841 0383  
                            u3761 0868                              u3745 0857                              u2881 17B4  
                            u4481 0E22                              u4465 0DF1                              u4385 0D8C  
                            u5097 0E5C                              u3930 04C9                              u3770 0335  
                            u3690 0837                              u2890 17FB                              u4490 0E74  
                            u2955 157B                              u3931 04C8                              u3771 0334  
                            u3691 0836                              u2891 17FA                              u4475 0E0C  
                            u4491 0E73                              u3940 04CE                              u3780 033B  
                            u4900 0889                              u3941 04CD                              u3925 04BB  
                            u3781 033A                              u3685 0820                              u4901 0888  
                            u2990 1592                              u2974 1586                              u3950 04E2  
                            u3870 047A                              u3790 0340                              u4910 08DA  
                            u2991 158F                              u3951 04E1                              u3855 03FD  
                            u3791 033F                              u4911 08D9                              u4495 0E70  
                            u3960 04E9                              u3880 0491                              u4920 090E  
                            u2985 1589                              u3961 04E8                              u3865 0428  
                            u4921 090D                              u3970 04EF                              u4930 0B9F  
                            _SCS0 04C8                              u3971 04EE                              u3875 0476  
                            u4931 0B9E                              _SCS1 04C9                              i1l68 0018  
                            u3980 04FB                              u4940 0C17                              u3981 04FA  
                            u3885 048D                              u4925 090A                              u4941 0C16  
                            u3990 0509                              u4950 009F                              u3895 049C  
                            u4951 009E                              u4960 00B0                              u4961 00AF  
                            u4890 0882                              u4970 00B8                              u3995 0505  
                            u4891 0881                              u4971 00B7                              u4980 00DE  
                            u4981 00DD                              u4990 015B                              u4991 015A  
                            u4985 00DA                              _TMR0 0015                              _TMR1 0016  
             Lcd_Write_String@str 0074                              abs@a 0077                 ?_Lcd_Write_String 0074  
                            _dbuf 01A0                              _main 004E                              _dtoa 09B9  
                            _ftoa 0B47                              _itoa 0875                              _prec 006B  
                            pad@i 0025                              pad@p 007C                              fsr0h 0005  
                            fsr1h 0007                              indf0 0000                              fsr0l 0004  
                            indf1 0001                              fsr1l 0006                              btemp 007E  
                            start 001A                ??_Lcd_Write_String 0076                   ___fldiv@new_exp 004C  
                 __end_of_Lcd_Cmd 13B7     Lcd_Write_Padded_Integer@width 005F        Lcd_Progress_Bar_Init@F6642 0168  
      Lcd_Progress_Bar_Init@F6644 0160        Lcd_Progress_Bar_Init@F6646 0158        Lcd_Progress_Bar_Init@F6648 0150  
                           ??_abs 0079                             ??_pad 0024                             ??_isr 0070  
                   ___fltol@sign1 0042                   __end_of___fladd 0772                             ?_main 0070  
                           ?_dtoa 0028                             ?_ftoa 0044                   __end_of___fldiv 0E31  
                           ?_itoa 0020                   __end_of___awdiv 17A0                   __end_of___flneg 13C2  
                           STR_10 186B                             STR_11 188E                             STR_12 1886  
                 __end_of___awmod 1741                   __end_of___flmul 0566                   __end_of___flsub 14F9  
                 __end_of___fltol 0875                   ___awdiv@divisor 0070                             _T1CON 0018  
                           _IRCF0 04CB                             _IRCF1 04CC                             _IRCF2 04CD  
                           _IRCF3 04CE                   ___awdiv@counter 0075                      vfpfcnvrt@fmt 0034  
                           _PORTD 000F                             _TRISD 008F             Lcd_Battery_Init@F6661 0140  
           Lcd_Battery_Init@F6671 01E8             Lcd_Battery_Init@F6663 0138             Lcd_Battery_Init@F6665 0130  
           Lcd_Battery_Init@F6659 0148             Lcd_Battery_Init@F6667 0128             Lcd_Battery_Init@F6669 0120  
                           _flags 006D               read_prec_or_width@c 0020               read_prec_or_width@n 0021  
                           _fputc 164E                             _fputs 153C                             pad@fp 0027  
                           _width 0069                             _putch 07FD                             dtoa@d 0028  
                           dtoa@i 0032                             dtoa@p 002E                             dtoa@s 0031  
                           dtoa@w 002F                             ftoa@f 0044                             status 0003  
                           wtemp0 007E                   __end_of_sprintf 14BA                      ?_internal_32 0070  
               _calibration_value 00EE                  __end_of_Lcd_Init 15D0                  __end_of_Lcd_Port 1595  
                 __initialization 001C                  _Lcd_Send_Command 13CF                      __end_of_main 032B  
                    __end_of_dtoa 0A65                      __end_of_ftoa 0C87                      __end_of_itoa 090F  
 __end_of_ReadTimer0WithOverflows 1404        ??_Lcd_Write_Padded_Integer 007E                            ??_main 0065  
                          ??_dtoa 002A                            ??_ftoa 0049                            ??_itoa 0079  
      __end_of_read_prec_or_width 1800          main@precomputed_constant 00D6                            ?_fputc 0070  
                          ?_fputs 0078                  ___awdiv@dividend 0072                            ?_putch 0070  
                          _ANSELD 018F                     main@count_end 00E2                            i1l3591 0015  
                          i1l3583 0006                            i1l3593 0016                            i1l3585 000A  
                          i1l3587 000F                            i1l3589 0010                            u453_20 000A  
                          u453_21 0009                            u454_20 0015                            u454_21 0014  
                       ??_Lcd_Cmd 0072                     vfpfcnvrt@done 003E                     main@frequency 00E4  
                          _SPLLEN 04CF                  __end_of___xxtofl 09B9                      vfprintf@cfmt 0047  
                          ___flge 0772                         ??___fladd 0020                            ___wmul 14BA  
                       ??___fldiv 0042                         ??___awdiv 0074                         ??___flneg 0074  
                       ??___awmod 0074                         ??___flmul 0028                         ??___flsub 007E  
                       ??___fltol 003E                  __end_of_initMain 164E              read_prec_or_width@ap 0076  
                ___awdiv@quotient 0077                   ___awmod@divisor 0070                   ___awmod@counter 0075  
                          pad@buf 007B                            dtoa@fp 002D                            fputc@c 0070  
                          fputs@c 0020                            fputs@i 0021                            fputs@s 0023  
                Lcd_Write_Float@f 0059                            putch@c 0070                  __end_of_vfprintf 149D  
                  _tmr0_overflows 00EC                         ??_sprintf 004F                        ___flge@ff1 0070  
                      ___flge@ff2 0074                      ___xxtofl@arg 007A                      ___xxtofl@exp 0079  
                    ___xxtofl@val 0070                 ?_Lcd_Enable_Pulse 0070           __end_of__initialization 004A  
                      ___flneg@f1 0070                 __end_of_Lcd_Clear 13CF                ??_Lcd_Enable_Pulse 0070  
                    ftoa@int_part 0056                        ___fltol@f1 003A                    __pcstackCOMMON 0070  
   calibrate@precomputed_constant 00B4                      __pidataBANK1 07FC                      __pidataBANK2 169E  
                    __pidataBANK3 14F9                     __end_of_fputc 169E                     __end_of_fputs 1561  
                   __end_of_putch 07FE                    _Lcd_Set_Cursor 1465                    _OPTION_REGbits 0095  
                       ?_Lcd_Init 0070                      _T0CKIPPSbits 0E11                         ?_Lcd_Port 0070  
                         ??_fputc 0073                           ??_fputs 0079                           ??_putch 0070  
                      __pbssBANK0 0069                        __pbssBANK1 00EC                        __pbssBANK3 01A0  
               __end_of__Umul8_16 153C                        __pmaintext 004E                           ?___flge 0070  
                         ?___wmul 0070                        __pintentry 0004            __end_of_Lcd_Set_Cursor 1481  
                       ?___xxtofl 0070       Lcd_Write_Padded_Integer@buf 00A0                        ??_Lcd_Init 0075  
     Lcd_Write_Padded_Integer@num 005D                           _PPSLOCK 0E0F                        ??_Lcd_Port 0070  
        __end_of_Lcd_Send_Command 13E0                 __end_of_calibrate 1000                         ?_initMain 0070  
                  _Lcd_Write_Char 1433                           _Lcd_Cmd 13AC                           ___fladd 0566  
                         ___fldiv 0C87                           ___awdiv 1741                           ___flneg 13B7  
                         ___awmod 16EE                           ___flmul 032B                           ___flsub 14D9  
                         ___fltol 0804                         ?_vfprintf 0042                   ?_Lcd_Set_Cursor 0075  
                         __ptext1 160F                           __ptext2 13A3                           __ptext3 0E31  
                         __ptext4 0C87                           __ptext5 13F1                           __ptext6 144C  
                         __ptext7 149D                           __ptext8 1481                           __ptext9 0A65  
           read_prec_or_width@fmt 0023                        ??___xxtofl 0074                  ___awmod@dividend 0072  
                         _sprintf 149D                           clrloop0 138F            __end_of_Lcd_Write_Char 144C  
            end_of_initialization 004A                           ftoa@buf 01C0                           ftoa@ptr 0058  
                      ??_initMain 0070                           fputc@fp 0072                           itoa@buf 0020  
                         init_ram 1394                           itoa@ptr 002B                           fputs@fp 0078  
                         initloop 1395                _read_prec_or_width 17A0               Lcd_Send_Command@cmd 0074  
               __end_of_vfpfcnvrt 0B47               ?_read_prec_or_width 0076                  vfpfcnvrt@convarg 003A  
                       Lcd_Port@a 0071                        ??_vfprintf 0045                      itoa@tmp_char 0028  
                       _PORTCbits 000E                     ftoa@frac_part 0052                       ___fladd@grs 007B  
                main@inductance_h 00CA                     ___xxtofl@sign 0078                         _TRISBbits 008D  
                       _TRISCbits 008E              Lcd_Signal_Init@F6680 01D8              Lcd_Signal_Init@F6682 01D0  
            Lcd_Signal_Init@F6678 01E0              ??_read_prec_or_width 0078                       ___fldiv@grs 004E  
                     ___fldiv@rem 0047                   ?_Lcd_Write_Char 0070         ?_Lcd_Write_Padded_Integer 005D  
         _ReadTimer0WithOverflows 13F1                       ___flmul@grs 002E                 ??_Lcd_Write_Float 007E  
           calibrate@inductance_h 00B8                         _Lcd_Clear 13C2                   main@capacitance 00D2  
                  __end_of___flge 07FC                       vfpfcnvrt@ap 0035                       vfpfcnvrt@cp 003F  
                     vfpfcnvrt@fp 0041                    __end_of___wmul 14D9                  _Lcd_Write_String 1404  
           Lcd_Set_Cursor@address 0079             Lcd_Write_Float@status 005E               start_initialization 001C  
            calibrate@capacitance 00B0                       __end_of_abs 13F1                       __end_of_pad 160F  
                     __end_of_isr 001A                        ftoa@status 0048                       vfprintf@fmt 0042  
                      ?_Lcd_Clear 0070                          ??___flge 0078                          ??___wmul 0074  
                       __Umul8_16 1519                       __pdataBANK1 00EE                       __pdataBANK2 0120  
                     __pdataBANK3 01D0                   Lcd_Write_Char@a 0073                         ___fladd@a 0074  
                       ___fladd@b 0070                         ___fldiv@a 003A                         ___fldiv@b 003E  
                       ___flmul@a 0024                         ___flmul@b 0020                         ___flsub@a 0028  
                       ___flsub@b 002C                         ___latbits 0003                     __pcstackBANK0 0020  
                   __pcstackBANK1 00A0         ??_ReadTimer0WithOverflows 0072                 ?_Lcd_Send_Command 0070  
              _Lcd_Set_Cursor$490 0077                ??_Lcd_Send_Command 0073                          ?_Lcd_Cmd 0070  
                       _calibrate 0E31                     ??_internal_32 0070                         _main$1328 00DA  
                       _dtoa$1023 002B                  ??_Lcd_Set_Cursor 0076                          ?___fladd 0070  
                        ?___fldiv 003A                          ?___awdiv 0070                         _ftoa$1329 004A  
                        ?___flneg 0070                          ?___awmod 0070                          ?___flmul 0020  
                        ?___flsub 0028                          ?___fltol 003A                        ?__Umul8_16 0070  
              calibrate@count_end 00C8                calibrate@frequency 00C2                          ?_sprintf 0049  
                      ?_calibrate 0070                    ___wmul@product 0074                          _LATCbits 010E  
                        _LATDbits 010F                         clear_ram0 138E                   main@count_start 00E0  
                        _PIE1bits 0091                          Lcd_Cmd@a 0072                          _PIR1bits 0011  
                     ??_Lcd_Clear 0075               __end_of_internal_32 13AC              calibrate@count_start 00C6  
                _Lcd_Enable_Pulse 139A                         _vfpfcnvrt 0A65  __end_of_Lcd_Write_Padded_Integer 1465  
               ___wmul@multiplier 0070                  ??_Lcd_Write_Char 0072                   _Lcd_Write_Float 141B  
                        _Lcd_Init 1595                          _Lcd_Port 1561          __end_of_Lcd_Write_String 141B  
                      vfprintf@ap 0044                        vfprintf@fp 0046                       ??__Umul8_16 0072  
                       itoa@value 0022                        ?_vfpfcnvrt 0034                        _ANSELBbits 018D  
                      _ANSELCbits 018E                        sprintf@fmt 0049                          ___xxtofl 090F  
                        __ptext10 17A0                          __ptext11 09B9                          __ptext20 141B  
                        __ptext12 15D0                          __ptext21 0B47                          __ptext13 153C  
                        __ptext30 032B                          __ptext22 0875                          __ptext14 164E  
                        __ptext31 1519                          __ptext23 14BA                          __ptext15 07FD  
                        __ptext32 0772                          __ptext24 1741                          __ptext16 13E0  
                        __ptext33 1404                          __ptext25 090F                          __ptext17 16EE  
                        __ptext34 1433                          __ptext26 0804                          __ptext18 1465  
                        __ptext35 1595                          __ptext27 14D9                          __ptext19 13C2  
                        __ptext36 13CF                          __ptext28 0566                          __ptext37 13AC  
                        __ptext29 13B7                          __ptext38 1561                          __ptext39 139A  
                        _initMain 160F                       ??_calibrate 0061                    _calibrate$1327 00BC  
                     _internal_32 13A3                          int$flags 007E                          _vfprintf 1481  
         __end_of_Lcd_Write_Float 1433                        _INTCONbits 000B          _Lcd_Write_Padded_Integer 144C  
                        itoa@base 0024                    __pstringtext10 1886                    __pstringtext11 188E  
                  __pstringtext12 1893                    __pstringtext13 0000                          itoa@ptr1 0029  
                        intlevel1 0000                         sprintf@ap 0050                       _PPSLOCKbits 0E0F  
                main@total_counts 00DE                Lcd_Write_Float@buf 005D                       ??_vfpfcnvrt 0036  
                   __pstringtext1 1800                     __pstringtext2 1823                     __pstringtext3 1834  
                   __pstringtext4 1843                     __pstringtext5 1852                     __pstringtext6 1860  
                   __pstringtext7 186B                     __pstringtext8 1874                     __pstringtext9 187D  
          __Umul8_16@multiplicand 0070                   ftoa@frac_as_int 004E                   ftoa@frac_digits 0050  
                        sprintf@f 0052                          sprintf@s 0051                     itoa@tmp_value 0026  
               Lcd_Set_Cursor@col 0075                 Lcd_Set_Cursor@row 0076                     ___fladd@signs 0078  
           calibrate@total_counts 00C0          __end_of_Lcd_Enable_Pulse 13A3                      ___fladd@aexp 0079  
                    ___fladd@bexp 007A              __Umul8_16@multiplier 0078                 main@inductance_mh 00CE  
               main@inductance_uh 00E8                 __Umul8_16@product 0074  
