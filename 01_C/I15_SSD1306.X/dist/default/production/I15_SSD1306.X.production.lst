

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Tue Apr 18 11:29:50 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1717
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2
    35                           	psect	text25,local,class=CODE,merge=1,delta=2
    36                           	psect	text26,local,class=CODE,merge=1,delta=2
    37                           	psect	text27,local,class=CODE,merge=1,delta=2
    38                           	psect	text28,local,class=CODE,merge=1,delta=2
    39                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text30,local,class=CODE,merge=1,delta=2
    41                           	psect	text31,local,class=CODE,merge=1,delta=2
    42                           	psect	text32,local,class=CODE,merge=1,delta=2
    43                           	psect	text33,local,class=CODE,merge=1,delta=2
    44                           	dabs	1,0x7E,2
    45  0000                     
    46                           ; Version 1.41
    47                           ; Generated 25/01/2017 GMT
    48                           ; 
    49                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC16F1717 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     	;# 
    81  0001                     	;# 
    82  0002                     	;# 
    83  0003                     	;# 
    84  0004                     	;# 
    85  0005                     	;# 
    86  0006                     	;# 
    87  0007                     	;# 
    88  0008                     	;# 
    89  0009                     	;# 
    90  000A                     	;# 
    91  000B                     	;# 
    92  000C                     	;# 
    93  000D                     	;# 
    94  000E                     	;# 
    95  000F                     	;# 
    96  0010                     	;# 
    97  0011                     	;# 
    98  0012                     	;# 
    99  0013                     	;# 
   100  0015                     	;# 
   101  0016                     	;# 
   102  0016                     	;# 
   103  0017                     	;# 
   104  0018                     	;# 
   105  0019                     	;# 
   106  001A                     	;# 
   107  001B                     	;# 
   108  001C                     	;# 
   109  008C                     	;# 
   110  008D                     	;# 
   111  008E                     	;# 
   112  008F                     	;# 
   113  0090                     	;# 
   114  0091                     	;# 
   115  0092                     	;# 
   116  0093                     	;# 
   117  0095                     	;# 
   118  0096                     	;# 
   119  0097                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009A                     	;# 
   123  009B                     	;# 
   124  009B                     	;# 
   125  009C                     	;# 
   126  009D                     	;# 
   127  009E                     	;# 
   128  009F                     	;# 
   129  010C                     	;# 
   130  010D                     	;# 
   131  010E                     	;# 
   132  010F                     	;# 
   133  0110                     	;# 
   134  0111                     	;# 
   135  0112                     	;# 
   136  0113                     	;# 
   137  0114                     	;# 
   138  0115                     	;# 
   139  0116                     	;# 
   140  0117                     	;# 
   141  0118                     	;# 
   142  0119                     	;# 
   143  011A                     	;# 
   144  011B                     	;# 
   145  011B                     	;# 
   146  011C                     	;# 
   147  018C                     	;# 
   148  018D                     	;# 
   149  018E                     	;# 
   150  018F                     	;# 
   151  0190                     	;# 
   152  0191                     	;# 
   153  0191                     	;# 
   154  0192                     	;# 
   155  0193                     	;# 
   156  0193                     	;# 
   157  0194                     	;# 
   158  0195                     	;# 
   159  0196                     	;# 
   160  0197                     	;# 
   161  0199                     	;# 
   162  0199                     	;# 
   163  0199                     	;# 
   164  019A                     	;# 
   165  019A                     	;# 
   166  019A                     	;# 
   167  019B                     	;# 
   168  019B                     	;# 
   169  019B                     	;# 
   170  019B                     	;# 
   171  019B                     	;# 
   172  019C                     	;# 
   173  019C                     	;# 
   174  019C                     	;# 
   175  019D                     	;# 
   176  019D                     	;# 
   177  019D                     	;# 
   178  019E                     	;# 
   179  019E                     	;# 
   180  019E                     	;# 
   181  019F                     	;# 
   182  019F                     	;# 
   183  019F                     	;# 
   184  019F                     	;# 
   185  019F                     	;# 
   186  020C                     	;# 
   187  020D                     	;# 
   188  020E                     	;# 
   189  020F                     	;# 
   190  0210                     	;# 
   191  0211                     	;# 
   192  0211                     	;# 
   193  0212                     	;# 
   194  0212                     	;# 
   195  0213                     	;# 
   196  0213                     	;# 
   197  0214                     	;# 
   198  0214                     	;# 
   199  0215                     	;# 
   200  0215                     	;# 
   201  0215                     	;# 
   202  0215                     	;# 
   203  0216                     	;# 
   204  0216                     	;# 
   205  0217                     	;# 
   206  0217                     	;# 
   207  028C                     	;# 
   208  028D                     	;# 
   209  028E                     	;# 
   210  028F                     	;# 
   211  0290                     	;# 
   212  0291                     	;# 
   213  0291                     	;# 
   214  0292                     	;# 
   215  0293                     	;# 
   216  0293                     	;# 
   217  0298                     	;# 
   218  0298                     	;# 
   219  0299                     	;# 
   220  029A                     	;# 
   221  029A                     	;# 
   222  029E                     	;# 
   223  030C                     	;# 
   224  030D                     	;# 
   225  030E                     	;# 
   226  030F                     	;# 
   227  0310                     	;# 
   228  038C                     	;# 
   229  038D                     	;# 
   230  038E                     	;# 
   231  038F                     	;# 
   232  0390                     	;# 
   233  0391                     	;# 
   234  0392                     	;# 
   235  0393                     	;# 
   236  0394                     	;# 
   237  0395                     	;# 
   238  0396                     	;# 
   239  0397                     	;# 
   240  0398                     	;# 
   241  0399                     	;# 
   242  039D                     	;# 
   243  039E                     	;# 
   244  039F                     	;# 
   245  0415                     	;# 
   246  0416                     	;# 
   247  0417                     	;# 
   248  041C                     	;# 
   249  041D                     	;# 
   250  041E                     	;# 
   251  0498                     	;# 
   252  0498                     	;# 
   253  0499                     	;# 
   254  049A                     	;# 
   255  049B                     	;# 
   256  049B                     	;# 
   257  049C                     	;# 
   258  049D                     	;# 
   259  049E                     	;# 
   260  049F                     	;# 
   261  0511                     	;# 
   262  0515                     	;# 
   263  0617                     	;# 
   264  0618                     	;# 
   265  0619                     	;# 
   266  0619                     	;# 
   267  061A                     	;# 
   268  061B                     	;# 
   269  061C                     	;# 
   270  061C                     	;# 
   271  0691                     	;# 
   272  0692                     	;# 
   273  0693                     	;# 
   274  0694                     	;# 
   275  0695                     	;# 
   276  0696                     	;# 
   277  0697                     	;# 
   278  0698                     	;# 
   279  0699                     	;# 
   280  069A                     	;# 
   281  069B                     	;# 
   282  069C                     	;# 
   283  069D                     	;# 
   284  069E                     	;# 
   285  069F                     	;# 
   286  0E0F                     	;# 
   287  0E10                     	;# 
   288  0E11                     	;# 
   289  0E12                     	;# 
   290  0E13                     	;# 
   291  0E14                     	;# 
   292  0E15                     	;# 
   293  0E17                     	;# 
   294  0E20                     	;# 
   295  0E21                     	;# 
   296  0E22                     	;# 
   297  0E24                     	;# 
   298  0E25                     	;# 
   299  0E28                     	;# 
   300  0E29                     	;# 
   301  0E2A                     	;# 
   302  0E2B                     	;# 
   303  0E90                     	;# 
   304  0E91                     	;# 
   305  0E92                     	;# 
   306  0E93                     	;# 
   307  0E94                     	;# 
   308  0E95                     	;# 
   309  0E96                     	;# 
   310  0E97                     	;# 
   311  0E98                     	;# 
   312  0E99                     	;# 
   313  0E9A                     	;# 
   314  0E9B                     	;# 
   315  0E9C                     	;# 
   316  0E9D                     	;# 
   317  0E9E                     	;# 
   318  0E9F                     	;# 
   319  0EA0                     	;# 
   320  0EA1                     	;# 
   321  0EA2                     	;# 
   322  0EA3                     	;# 
   323  0EA4                     	;# 
   324  0EA5                     	;# 
   325  0EA6                     	;# 
   326  0EA7                     	;# 
   327  0EA8                     	;# 
   328  0EA9                     	;# 
   329  0EAA                     	;# 
   330  0EAB                     	;# 
   331  0EAC                     	;# 
   332  0EAD                     	;# 
   333  0EAE                     	;# 
   334  0EAF                     	;# 
   335  0EB0                     	;# 
   336  0EB1                     	;# 
   337  0EB2                     	;# 
   338  0F0F                     	;# 
   339  0F10                     	;# 
   340  0F11                     	;# 
   341  0F12                     	;# 
   342  0F13                     	;# 
   343  0F14                     	;# 
   344  0F15                     	;# 
   345  0F16                     	;# 
   346  0F17                     	;# 
   347  0F18                     	;# 
   348  0F19                     	;# 
   349  0F1A                     	;# 
   350  0F1B                     	;# 
   351  0F1C                     	;# 
   352  0F1D                     	;# 
   353  0F1E                     	;# 
   354  0F1F                     	;# 
   355  0F20                     	;# 
   356  0F21                     	;# 
   357  0F22                     	;# 
   358  0F23                     	;# 
   359  0F24                     	;# 
   360  0F25                     	;# 
   361  0F26                     	;# 
   362  0F27                     	;# 
   363  0F28                     	;# 
   364  0F29                     	;# 
   365  0F2A                     	;# 
   366  0F2B                     	;# 
   367  0F2C                     	;# 
   368  0F2D                     	;# 
   369  0F2E                     	;# 
   370  0F2F                     	;# 
   371  0F30                     	;# 
   372  0F31                     	;# 
   373  0F32                     	;# 
   374  0F33                     	;# 
   375  0F34                     	;# 
   376  0F35                     	;# 
   377  0F36                     	;# 
   378  0F37                     	;# 
   379  0FE4                     	;# 
   380  0FE5                     	;# 
   381  0FE6                     	;# 
   382  0FE7                     	;# 
   383  0FE8                     	;# 
   384  0FE9                     	;# 
   385  0FEA                     	;# 
   386  0FEB                     	;# 
   387  0FED                     	;# 
   388  0FEE                     	;# 
   389  0FEF                     	;# 
   390  0000                     	;# 
   391  0001                     	;# 
   392  0002                     	;# 
   393  0003                     	;# 
   394  0004                     	;# 
   395  0005                     	;# 
   396  0006                     	;# 
   397  0007                     	;# 
   398  0008                     	;# 
   399  0009                     	;# 
   400  000A                     	;# 
   401  000B                     	;# 
   402  000C                     	;# 
   403  000D                     	;# 
   404  000E                     	;# 
   405  000F                     	;# 
   406  0010                     	;# 
   407  0011                     	;# 
   408  0012                     	;# 
   409  0013                     	;# 
   410  0015                     	;# 
   411  0016                     	;# 
   412  0016                     	;# 
   413  0017                     	;# 
   414  0018                     	;# 
   415  0019                     	;# 
   416  001A                     	;# 
   417  001B                     	;# 
   418  001C                     	;# 
   419  008C                     	;# 
   420  008D                     	;# 
   421  008E                     	;# 
   422  008F                     	;# 
   423  0090                     	;# 
   424  0091                     	;# 
   425  0092                     	;# 
   426  0093                     	;# 
   427  0095                     	;# 
   428  0096                     	;# 
   429  0097                     	;# 
   430  0098                     	;# 
   431  0099                     	;# 
   432  009A                     	;# 
   433  009B                     	;# 
   434  009B                     	;# 
   435  009C                     	;# 
   436  009D                     	;# 
   437  009E                     	;# 
   438  009F                     	;# 
   439  010C                     	;# 
   440  010D                     	;# 
   441  010E                     	;# 
   442  010F                     	;# 
   443  0110                     	;# 
   444  0111                     	;# 
   445  0112                     	;# 
   446  0113                     	;# 
   447  0114                     	;# 
   448  0115                     	;# 
   449  0116                     	;# 
   450  0117                     	;# 
   451  0118                     	;# 
   452  0119                     	;# 
   453  011A                     	;# 
   454  011B                     	;# 
   455  011B                     	;# 
   456  011C                     	;# 
   457  018C                     	;# 
   458  018D                     	;# 
   459  018E                     	;# 
   460  018F                     	;# 
   461  0190                     	;# 
   462  0191                     	;# 
   463  0191                     	;# 
   464  0192                     	;# 
   465  0193                     	;# 
   466  0193                     	;# 
   467  0194                     	;# 
   468  0195                     	;# 
   469  0196                     	;# 
   470  0197                     	;# 
   471  0199                     	;# 
   472  0199                     	;# 
   473  0199                     	;# 
   474  019A                     	;# 
   475  019A                     	;# 
   476  019A                     	;# 
   477  019B                     	;# 
   478  019B                     	;# 
   479  019B                     	;# 
   480  019B                     	;# 
   481  019B                     	;# 
   482  019C                     	;# 
   483  019C                     	;# 
   484  019C                     	;# 
   485  019D                     	;# 
   486  019D                     	;# 
   487  019D                     	;# 
   488  019E                     	;# 
   489  019E                     	;# 
   490  019E                     	;# 
   491  019F                     	;# 
   492  019F                     	;# 
   493  019F                     	;# 
   494  019F                     	;# 
   495  019F                     	;# 
   496  020C                     	;# 
   497  020D                     	;# 
   498  020E                     	;# 
   499  020F                     	;# 
   500  0210                     	;# 
   501  0211                     	;# 
   502  0211                     	;# 
   503  0212                     	;# 
   504  0212                     	;# 
   505  0213                     	;# 
   506  0213                     	;# 
   507  0214                     	;# 
   508  0214                     	;# 
   509  0215                     	;# 
   510  0215                     	;# 
   511  0215                     	;# 
   512  0215                     	;# 
   513  0216                     	;# 
   514  0216                     	;# 
   515  0217                     	;# 
   516  0217                     	;# 
   517  028C                     	;# 
   518  028D                     	;# 
   519  028E                     	;# 
   520  028F                     	;# 
   521  0290                     	;# 
   522  0291                     	;# 
   523  0291                     	;# 
   524  0292                     	;# 
   525  0293                     	;# 
   526  0293                     	;# 
   527  0298                     	;# 
   528  0298                     	;# 
   529  0299                     	;# 
   530  029A                     	;# 
   531  029A                     	;# 
   532  029E                     	;# 
   533  030C                     	;# 
   534  030D                     	;# 
   535  030E                     	;# 
   536  030F                     	;# 
   537  0310                     	;# 
   538  038C                     	;# 
   539  038D                     	;# 
   540  038E                     	;# 
   541  038F                     	;# 
   542  0390                     	;# 
   543  0391                     	;# 
   544  0392                     	;# 
   545  0393                     	;# 
   546  0394                     	;# 
   547  0395                     	;# 
   548  0396                     	;# 
   549  0397                     	;# 
   550  0398                     	;# 
   551  0399                     	;# 
   552  039D                     	;# 
   553  039E                     	;# 
   554  039F                     	;# 
   555  0415                     	;# 
   556  0416                     	;# 
   557  0417                     	;# 
   558  041C                     	;# 
   559  041D                     	;# 
   560  041E                     	;# 
   561  0498                     	;# 
   562  0498                     	;# 
   563  0499                     	;# 
   564  049A                     	;# 
   565  049B                     	;# 
   566  049B                     	;# 
   567  049C                     	;# 
   568  049D                     	;# 
   569  049E                     	;# 
   570  049F                     	;# 
   571  0511                     	;# 
   572  0515                     	;# 
   573  0617                     	;# 
   574  0618                     	;# 
   575  0619                     	;# 
   576  0619                     	;# 
   577  061A                     	;# 
   578  061B                     	;# 
   579  061C                     	;# 
   580  061C                     	;# 
   581  0691                     	;# 
   582  0692                     	;# 
   583  0693                     	;# 
   584  0694                     	;# 
   585  0695                     	;# 
   586  0696                     	;# 
   587  0697                     	;# 
   588  0698                     	;# 
   589  0699                     	;# 
   590  069A                     	;# 
   591  069B                     	;# 
   592  069C                     	;# 
   593  069D                     	;# 
   594  069E                     	;# 
   595  069F                     	;# 
   596  0E0F                     	;# 
   597  0E10                     	;# 
   598  0E11                     	;# 
   599  0E12                     	;# 
   600  0E13                     	;# 
   601  0E14                     	;# 
   602  0E15                     	;# 
   603  0E17                     	;# 
   604  0E20                     	;# 
   605  0E21                     	;# 
   606  0E22                     	;# 
   607  0E24                     	;# 
   608  0E25                     	;# 
   609  0E28                     	;# 
   610  0E29                     	;# 
   611  0E2A                     	;# 
   612  0E2B                     	;# 
   613  0E90                     	;# 
   614  0E91                     	;# 
   615  0E92                     	;# 
   616  0E93                     	;# 
   617  0E94                     	;# 
   618  0E95                     	;# 
   619  0E96                     	;# 
   620  0E97                     	;# 
   621  0E98                     	;# 
   622  0E99                     	;# 
   623  0E9A                     	;# 
   624  0E9B                     	;# 
   625  0E9C                     	;# 
   626  0E9D                     	;# 
   627  0E9E                     	;# 
   628  0E9F                     	;# 
   629  0EA0                     	;# 
   630  0EA1                     	;# 
   631  0EA2                     	;# 
   632  0EA3                     	;# 
   633  0EA4                     	;# 
   634  0EA5                     	;# 
   635  0EA6                     	;# 
   636  0EA7                     	;# 
   637  0EA8                     	;# 
   638  0EA9                     	;# 
   639  0EAA                     	;# 
   640  0EAB                     	;# 
   641  0EAC                     	;# 
   642  0EAD                     	;# 
   643  0EAE                     	;# 
   644  0EAF                     	;# 
   645  0EB0                     	;# 
   646  0EB1                     	;# 
   647  0EB2                     	;# 
   648  0F0F                     	;# 
   649  0F10                     	;# 
   650  0F11                     	;# 
   651  0F12                     	;# 
   652  0F13                     	;# 
   653  0F14                     	;# 
   654  0F15                     	;# 
   655  0F16                     	;# 
   656  0F17                     	;# 
   657  0F18                     	;# 
   658  0F19                     	;# 
   659  0F1A                     	;# 
   660  0F1B                     	;# 
   661  0F1C                     	;# 
   662  0F1D                     	;# 
   663  0F1E                     	;# 
   664  0F1F                     	;# 
   665  0F20                     	;# 
   666  0F21                     	;# 
   667  0F22                     	;# 
   668  0F23                     	;# 
   669  0F24                     	;# 
   670  0F25                     	;# 
   671  0F26                     	;# 
   672  0F27                     	;# 
   673  0F28                     	;# 
   674  0F29                     	;# 
   675  0F2A                     	;# 
   676  0F2B                     	;# 
   677  0F2C                     	;# 
   678  0F2D                     	;# 
   679  0F2E                     	;# 
   680  0F2F                     	;# 
   681  0F30                     	;# 
   682  0F31                     	;# 
   683  0F32                     	;# 
   684  0F33                     	;# 
   685  0F34                     	;# 
   686  0F35                     	;# 
   687  0F36                     	;# 
   688  0F37                     	;# 
   689  0FE4                     	;# 
   690  0FE5                     	;# 
   691  0FE6                     	;# 
   692  0FE7                     	;# 
   693  0FE8                     	;# 
   694  0FE9                     	;# 
   695  0FEA                     	;# 
   696  0FEB                     	;# 
   697  0FED                     	;# 
   698  0FEE                     	;# 
   699  0FEF                     	;# 
   700  0000                     	;# 
   701  0001                     	;# 
   702  0002                     	;# 
   703  0003                     	;# 
   704  0004                     	;# 
   705  0005                     	;# 
   706  0006                     	;# 
   707  0007                     	;# 
   708  0008                     	;# 
   709  0009                     	;# 
   710  000A                     	;# 
   711  000B                     	;# 
   712  000C                     	;# 
   713  000D                     	;# 
   714  000E                     	;# 
   715  000F                     	;# 
   716  0010                     	;# 
   717  0011                     	;# 
   718  0012                     	;# 
   719  0013                     	;# 
   720  0015                     	;# 
   721  0016                     	;# 
   722  0016                     	;# 
   723  0017                     	;# 
   724  0018                     	;# 
   725  0019                     	;# 
   726  001A                     	;# 
   727  001B                     	;# 
   728  001C                     	;# 
   729  008C                     	;# 
   730  008D                     	;# 
   731  008E                     	;# 
   732  008F                     	;# 
   733  0090                     	;# 
   734  0091                     	;# 
   735  0092                     	;# 
   736  0093                     	;# 
   737  0095                     	;# 
   738  0096                     	;# 
   739  0097                     	;# 
   740  0098                     	;# 
   741  0099                     	;# 
   742  009A                     	;# 
   743  009B                     	;# 
   744  009B                     	;# 
   745  009C                     	;# 
   746  009D                     	;# 
   747  009E                     	;# 
   748  009F                     	;# 
   749  010C                     	;# 
   750  010D                     	;# 
   751  010E                     	;# 
   752  010F                     	;# 
   753  0110                     	;# 
   754  0111                     	;# 
   755  0112                     	;# 
   756  0113                     	;# 
   757  0114                     	;# 
   758  0115                     	;# 
   759  0116                     	;# 
   760  0117                     	;# 
   761  0118                     	;# 
   762  0119                     	;# 
   763  011A                     	;# 
   764  011B                     	;# 
   765  011B                     	;# 
   766  011C                     	;# 
   767  018C                     	;# 
   768  018D                     	;# 
   769  018E                     	;# 
   770  018F                     	;# 
   771  0190                     	;# 
   772  0191                     	;# 
   773  0191                     	;# 
   774  0192                     	;# 
   775  0193                     	;# 
   776  0193                     	;# 
   777  0194                     	;# 
   778  0195                     	;# 
   779  0196                     	;# 
   780  0197                     	;# 
   781  0199                     	;# 
   782  0199                     	;# 
   783  0199                     	;# 
   784  019A                     	;# 
   785  019A                     	;# 
   786  019A                     	;# 
   787  019B                     	;# 
   788  019B                     	;# 
   789  019B                     	;# 
   790  019B                     	;# 
   791  019B                     	;# 
   792  019C                     	;# 
   793  019C                     	;# 
   794  019C                     	;# 
   795  019D                     	;# 
   796  019D                     	;# 
   797  019D                     	;# 
   798  019E                     	;# 
   799  019E                     	;# 
   800  019E                     	;# 
   801  019F                     	;# 
   802  019F                     	;# 
   803  019F                     	;# 
   804  019F                     	;# 
   805  019F                     	;# 
   806  020C                     	;# 
   807  020D                     	;# 
   808  020E                     	;# 
   809  020F                     	;# 
   810  0210                     	;# 
   811  0211                     	;# 
   812  0211                     	;# 
   813  0212                     	;# 
   814  0212                     	;# 
   815  0213                     	;# 
   816  0213                     	;# 
   817  0214                     	;# 
   818  0214                     	;# 
   819  0215                     	;# 
   820  0215                     	;# 
   821  0215                     	;# 
   822  0215                     	;# 
   823  0216                     	;# 
   824  0216                     	;# 
   825  0217                     	;# 
   826  0217                     	;# 
   827  028C                     	;# 
   828  028D                     	;# 
   829  028E                     	;# 
   830  028F                     	;# 
   831  0290                     	;# 
   832  0291                     	;# 
   833  0291                     	;# 
   834  0292                     	;# 
   835  0293                     	;# 
   836  0293                     	;# 
   837  0298                     	;# 
   838  0298                     	;# 
   839  0299                     	;# 
   840  029A                     	;# 
   841  029A                     	;# 
   842  029E                     	;# 
   843  030C                     	;# 
   844  030D                     	;# 
   845  030E                     	;# 
   846  030F                     	;# 
   847  0310                     	;# 
   848  038C                     	;# 
   849  038D                     	;# 
   850  038E                     	;# 
   851  038F                     	;# 
   852  0390                     	;# 
   853  0391                     	;# 
   854  0392                     	;# 
   855  0393                     	;# 
   856  0394                     	;# 
   857  0395                     	;# 
   858  0396                     	;# 
   859  0397                     	;# 
   860  0398                     	;# 
   861  0399                     	;# 
   862  039D                     	;# 
   863  039E                     	;# 
   864  039F                     	;# 
   865  0415                     	;# 
   866  0416                     	;# 
   867  0417                     	;# 
   868  041C                     	;# 
   869  041D                     	;# 
   870  041E                     	;# 
   871  0498                     	;# 
   872  0498                     	;# 
   873  0499                     	;# 
   874  049A                     	;# 
   875  049B                     	;# 
   876  049B                     	;# 
   877  049C                     	;# 
   878  049D                     	;# 
   879  049E                     	;# 
   880  049F                     	;# 
   881  0511                     	;# 
   882  0515                     	;# 
   883  0617                     	;# 
   884  0618                     	;# 
   885  0619                     	;# 
   886  0619                     	;# 
   887  061A                     	;# 
   888  061B                     	;# 
   889  061C                     	;# 
   890  061C                     	;# 
   891  0691                     	;# 
   892  0692                     	;# 
   893  0693                     	;# 
   894  0694                     	;# 
   895  0695                     	;# 
   896  0696                     	;# 
   897  0697                     	;# 
   898  0698                     	;# 
   899  0699                     	;# 
   900  069A                     	;# 
   901  069B                     	;# 
   902  069C                     	;# 
   903  069D                     	;# 
   904  069E                     	;# 
   905  069F                     	;# 
   906  0E0F                     	;# 
   907  0E10                     	;# 
   908  0E11                     	;# 
   909  0E12                     	;# 
   910  0E13                     	;# 
   911  0E14                     	;# 
   912  0E15                     	;# 
   913  0E17                     	;# 
   914  0E20                     	;# 
   915  0E21                     	;# 
   916  0E22                     	;# 
   917  0E24                     	;# 
   918  0E25                     	;# 
   919  0E28                     	;# 
   920  0E29                     	;# 
   921  0E2A                     	;# 
   922  0E2B                     	;# 
   923  0E90                     	;# 
   924  0E91                     	;# 
   925  0E92                     	;# 
   926  0E93                     	;# 
   927  0E94                     	;# 
   928  0E95                     	;# 
   929  0E96                     	;# 
   930  0E97                     	;# 
   931  0E98                     	;# 
   932  0E99                     	;# 
   933  0E9A                     	;# 
   934  0E9B                     	;# 
   935  0E9C                     	;# 
   936  0E9D                     	;# 
   937  0E9E                     	;# 
   938  0E9F                     	;# 
   939  0EA0                     	;# 
   940  0EA1                     	;# 
   941  0EA2                     	;# 
   942  0EA3                     	;# 
   943  0EA4                     	;# 
   944  0EA5                     	;# 
   945  0EA6                     	;# 
   946  0EA7                     	;# 
   947  0EA8                     	;# 
   948  0EA9                     	;# 
   949  0EAA                     	;# 
   950  0EAB                     	;# 
   951  0EAC                     	;# 
   952  0EAD                     	;# 
   953  0EAE                     	;# 
   954  0EAF                     	;# 
   955  0EB0                     	;# 
   956  0EB1                     	;# 
   957  0EB2                     	;# 
   958  0F0F                     	;# 
   959  0F10                     	;# 
   960  0F11                     	;# 
   961  0F12                     	;# 
   962  0F13                     	;# 
   963  0F14                     	;# 
   964  0F15                     	;# 
   965  0F16                     	;# 
   966  0F17                     	;# 
   967  0F18                     	;# 
   968  0F19                     	;# 
   969  0F1A                     	;# 
   970  0F1B                     	;# 
   971  0F1C                     	;# 
   972  0F1D                     	;# 
   973  0F1E                     	;# 
   974  0F1F                     	;# 
   975  0F20                     	;# 
   976  0F21                     	;# 
   977  0F22                     	;# 
   978  0F23                     	;# 
   979  0F24                     	;# 
   980  0F25                     	;# 
   981  0F26                     	;# 
   982  0F27                     	;# 
   983  0F28                     	;# 
   984  0F29                     	;# 
   985  0F2A                     	;# 
   986  0F2B                     	;# 
   987  0F2C                     	;# 
   988  0F2D                     	;# 
   989  0F2E                     	;# 
   990  0F2F                     	;# 
   991  0F30                     	;# 
   992  0F31                     	;# 
   993  0F32                     	;# 
   994  0F33                     	;# 
   995  0F34                     	;# 
   996  0F35                     	;# 
   997  0F36                     	;# 
   998  0F37                     	;# 
   999  0FE4                     	;# 
  1000  0FE5                     	;# 
  1001  0FE6                     	;# 
  1002  0FE7                     	;# 
  1003  0FE8                     	;# 
  1004  0FE9                     	;# 
  1005  0FEA                     	;# 
  1006  0FEB                     	;# 
  1007  0FED                     	;# 
  1008  0FEE                     	;# 
  1009  0FEF                     	;# 
  1010  0000                     	;# 
  1011  0001                     	;# 
  1012  0002                     	;# 
  1013  0003                     	;# 
  1014  0004                     	;# 
  1015  0005                     	;# 
  1016  0006                     	;# 
  1017  0007                     	;# 
  1018  0008                     	;# 
  1019  0009                     	;# 
  1020  000A                     	;# 
  1021  000B                     	;# 
  1022  000C                     	;# 
  1023  000D                     	;# 
  1024  000E                     	;# 
  1025  000F                     	;# 
  1026  0010                     	;# 
  1027  0011                     	;# 
  1028  0012                     	;# 
  1029  0013                     	;# 
  1030  0015                     	;# 
  1031  0016                     	;# 
  1032  0016                     	;# 
  1033  0017                     	;# 
  1034  0018                     	;# 
  1035  0019                     	;# 
  1036  001A                     	;# 
  1037  001B                     	;# 
  1038  001C                     	;# 
  1039  008C                     	;# 
  1040  008D                     	;# 
  1041  008E                     	;# 
  1042  008F                     	;# 
  1043  0090                     	;# 
  1044  0091                     	;# 
  1045  0092                     	;# 
  1046  0093                     	;# 
  1047  0095                     	;# 
  1048  0096                     	;# 
  1049  0097                     	;# 
  1050  0098                     	;# 
  1051  0099                     	;# 
  1052  009A                     	;# 
  1053  009B                     	;# 
  1054  009B                     	;# 
  1055  009C                     	;# 
  1056  009D                     	;# 
  1057  009E                     	;# 
  1058  009F                     	;# 
  1059  010C                     	;# 
  1060  010D                     	;# 
  1061  010E                     	;# 
  1062  010F                     	;# 
  1063  0110                     	;# 
  1064  0111                     	;# 
  1065  0112                     	;# 
  1066  0113                     	;# 
  1067  0114                     	;# 
  1068  0115                     	;# 
  1069  0116                     	;# 
  1070  0117                     	;# 
  1071  0118                     	;# 
  1072  0119                     	;# 
  1073  011A                     	;# 
  1074  011B                     	;# 
  1075  011B                     	;# 
  1076  011C                     	;# 
  1077  018C                     	;# 
  1078  018D                     	;# 
  1079  018E                     	;# 
  1080  018F                     	;# 
  1081  0190                     	;# 
  1082  0191                     	;# 
  1083  0191                     	;# 
  1084  0192                     	;# 
  1085  0193                     	;# 
  1086  0193                     	;# 
  1087  0194                     	;# 
  1088  0195                     	;# 
  1089  0196                     	;# 
  1090  0197                     	;# 
  1091  0199                     	;# 
  1092  0199                     	;# 
  1093  0199                     	;# 
  1094  019A                     	;# 
  1095  019A                     	;# 
  1096  019A                     	;# 
  1097  019B                     	;# 
  1098  019B                     	;# 
  1099  019B                     	;# 
  1100  019B                     	;# 
  1101  019B                     	;# 
  1102  019C                     	;# 
  1103  019C                     	;# 
  1104  019C                     	;# 
  1105  019D                     	;# 
  1106  019D                     	;# 
  1107  019D                     	;# 
  1108  019E                     	;# 
  1109  019E                     	;# 
  1110  019E                     	;# 
  1111  019F                     	;# 
  1112  019F                     	;# 
  1113  019F                     	;# 
  1114  019F                     	;# 
  1115  019F                     	;# 
  1116  020C                     	;# 
  1117  020D                     	;# 
  1118  020E                     	;# 
  1119  020F                     	;# 
  1120  0210                     	;# 
  1121  0211                     	;# 
  1122  0211                     	;# 
  1123  0212                     	;# 
  1124  0212                     	;# 
  1125  0213                     	;# 
  1126  0213                     	;# 
  1127  0214                     	;# 
  1128  0214                     	;# 
  1129  0215                     	;# 
  1130  0215                     	;# 
  1131  0215                     	;# 
  1132  0215                     	;# 
  1133  0216                     	;# 
  1134  0216                     	;# 
  1135  0217                     	;# 
  1136  0217                     	;# 
  1137  028C                     	;# 
  1138  028D                     	;# 
  1139  028E                     	;# 
  1140  028F                     	;# 
  1141  0290                     	;# 
  1142  0291                     	;# 
  1143  0291                     	;# 
  1144  0292                     	;# 
  1145  0293                     	;# 
  1146  0293                     	;# 
  1147  0298                     	;# 
  1148  0298                     	;# 
  1149  0299                     	;# 
  1150  029A                     	;# 
  1151  029A                     	;# 
  1152  029E                     	;# 
  1153  030C                     	;# 
  1154  030D                     	;# 
  1155  030E                     	;# 
  1156  030F                     	;# 
  1157  0310                     	;# 
  1158  038C                     	;# 
  1159  038D                     	;# 
  1160  038E                     	;# 
  1161  038F                     	;# 
  1162  0390                     	;# 
  1163  0391                     	;# 
  1164  0392                     	;# 
  1165  0393                     	;# 
  1166  0394                     	;# 
  1167  0395                     	;# 
  1168  0396                     	;# 
  1169  0397                     	;# 
  1170  0398                     	;# 
  1171  0399                     	;# 
  1172  039D                     	;# 
  1173  039E                     	;# 
  1174  039F                     	;# 
  1175  0415                     	;# 
  1176  0416                     	;# 
  1177  0417                     	;# 
  1178  041C                     	;# 
  1179  041D                     	;# 
  1180  041E                     	;# 
  1181  0498                     	;# 
  1182  0498                     	;# 
  1183  0499                     	;# 
  1184  049A                     	;# 
  1185  049B                     	;# 
  1186  049B                     	;# 
  1187  049C                     	;# 
  1188  049D                     	;# 
  1189  049E                     	;# 
  1190  049F                     	;# 
  1191  0511                     	;# 
  1192  0515                     	;# 
  1193  0617                     	;# 
  1194  0618                     	;# 
  1195  0619                     	;# 
  1196  0619                     	;# 
  1197  061A                     	;# 
  1198  061B                     	;# 
  1199  061C                     	;# 
  1200  061C                     	;# 
  1201  0691                     	;# 
  1202  0692                     	;# 
  1203  0693                     	;# 
  1204  0694                     	;# 
  1205  0695                     	;# 
  1206  0696                     	;# 
  1207  0697                     	;# 
  1208  0698                     	;# 
  1209  0699                     	;# 
  1210  069A                     	;# 
  1211  069B                     	;# 
  1212  069C                     	;# 
  1213  069D                     	;# 
  1214  069E                     	;# 
  1215  069F                     	;# 
  1216  0E0F                     	;# 
  1217  0E10                     	;# 
  1218  0E11                     	;# 
  1219  0E12                     	;# 
  1220  0E13                     	;# 
  1221  0E14                     	;# 
  1222  0E15                     	;# 
  1223  0E17                     	;# 
  1224  0E20                     	;# 
  1225  0E21                     	;# 
  1226  0E22                     	;# 
  1227  0E24                     	;# 
  1228  0E25                     	;# 
  1229  0E28                     	;# 
  1230  0E29                     	;# 
  1231  0E2A                     	;# 
  1232  0E2B                     	;# 
  1233  0E90                     	;# 
  1234  0E91                     	;# 
  1235  0E92                     	;# 
  1236  0E93                     	;# 
  1237  0E94                     	;# 
  1238  0E95                     	;# 
  1239  0E96                     	;# 
  1240  0E97                     	;# 
  1241  0E98                     	;# 
  1242  0E99                     	;# 
  1243  0E9A                     	;# 
  1244  0E9B                     	;# 
  1245  0E9C                     	;# 
  1246  0E9D                     	;# 
  1247  0E9E                     	;# 
  1248  0E9F                     	;# 
  1249  0EA0                     	;# 
  1250  0EA1                     	;# 
  1251  0EA2                     	;# 
  1252  0EA3                     	;# 
  1253  0EA4                     	;# 
  1254  0EA5                     	;# 
  1255  0EA6                     	;# 
  1256  0EA7                     	;# 
  1257  0EA8                     	;# 
  1258  0EA9                     	;# 
  1259  0EAA                     	;# 
  1260  0EAB                     	;# 
  1261  0EAC                     	;# 
  1262  0EAD                     	;# 
  1263  0EAE                     	;# 
  1264  0EAF                     	;# 
  1265  0EB0                     	;# 
  1266  0EB1                     	;# 
  1267  0EB2                     	;# 
  1268  0F0F                     	;# 
  1269  0F10                     	;# 
  1270  0F11                     	;# 
  1271  0F12                     	;# 
  1272  0F13                     	;# 
  1273  0F14                     	;# 
  1274  0F15                     	;# 
  1275  0F16                     	;# 
  1276  0F17                     	;# 
  1277  0F18                     	;# 
  1278  0F19                     	;# 
  1279  0F1A                     	;# 
  1280  0F1B                     	;# 
  1281  0F1C                     	;# 
  1282  0F1D                     	;# 
  1283  0F1E                     	;# 
  1284  0F1F                     	;# 
  1285  0F20                     	;# 
  1286  0F21                     	;# 
  1287  0F22                     	;# 
  1288  0F23                     	;# 
  1289  0F24                     	;# 
  1290  0F25                     	;# 
  1291  0F26                     	;# 
  1292  0F27                     	;# 
  1293  0F28                     	;# 
  1294  0F29                     	;# 
  1295  0F2A                     	;# 
  1296  0F2B                     	;# 
  1297  0F2C                     	;# 
  1298  0F2D                     	;# 
  1299  0F2E                     	;# 
  1300  0F2F                     	;# 
  1301  0F30                     	;# 
  1302  0F31                     	;# 
  1303  0F32                     	;# 
  1304  0F33                     	;# 
  1305  0F34                     	;# 
  1306  0F35                     	;# 
  1307  0F36                     	;# 
  1308  0F37                     	;# 
  1309  0FE4                     	;# 
  1310  0FE5                     	;# 
  1311  0FE6                     	;# 
  1312  0FE7                     	;# 
  1313  0FE8                     	;# 
  1314  0FE9                     	;# 
  1315  0FEA                     	;# 
  1316  0FEB                     	;# 
  1317  0FED                     	;# 
  1318  0FEE                     	;# 
  1319  0FEF                     	;# 
  1320                           
  1321                           	psect	stringtext
  1322  0800                     __pstringtext:	
  1323  0800                     _dpowers:	
  1324  0800  3401               	retlw	1
  1325  0801  3400               	retlw	0
  1326  0802  3400               	retlw	0
  1327  0803  3400               	retlw	0
  1328  0804  340A               	retlw	10
  1329  0805  3400               	retlw	0
  1330  0806  3400               	retlw	0
  1331  0807  3400               	retlw	0
  1332  0808  3464               	retlw	100
  1333  0809  3400               	retlw	0
  1334  080A  3400               	retlw	0
  1335  080B  3400               	retlw	0
  1336  080C  34E8               	retlw	232
  1337  080D  3403               	retlw	3
  1338  080E  3400               	retlw	0
  1339  080F  3400               	retlw	0
  1340  0810  3410               	retlw	16
  1341  0811  3427               	retlw	39
  1342  0812  3400               	retlw	0
  1343  0813  3400               	retlw	0
  1344  0814  34A0               	retlw	160
  1345  0815  3486               	retlw	134
  1346  0816  3401               	retlw	1
  1347  0817  3400               	retlw	0
  1348  0818  3440               	retlw	64
  1349  0819  3442               	retlw	66
  1350  081A  340F               	retlw	15
  1351  081B  3400               	retlw	0
  1352  081C  3480               	retlw	128
  1353  081D  3496               	retlw	150
  1354  081E  3498               	retlw	152
  1355  081F  3400               	retlw	0
  1356  0820  3400               	retlw	0
  1357  0821  34E1               	retlw	225
  1358  0822  34F5               	retlw	245
  1359  0823  3405               	retlw	5
  1360  0824  3400               	retlw	0
  1361  0825  34CA               	retlw	202
  1362  0826  349A               	retlw	154
  1363  0827  343B               	retlw	59
  1364  0828                     __end_of_dpowers:	
  1365  0828                     _OledFont:	
  1366  0828  3400               	retlw	0
  1367  0829  3400               	retlw	0
  1368  082A  3400               	retlw	0
  1369  082B  3400               	retlw	0
  1370  082C  3400               	retlw	0
  1371  082D  3400               	retlw	0
  1372  082E  3400               	retlw	0
  1373  082F  3400               	retlw	0
  1374  0830  3400               	retlw	0
  1375  0831  3400               	retlw	0
  1376  0832  345F               	retlw	95
  1377  0833  3400               	retlw	0
  1378  0834  3400               	retlw	0
  1379  0835  3400               	retlw	0
  1380  0836  3400               	retlw	0
  1381  0837  3400               	retlw	0
  1382  0838  3400               	retlw	0
  1383  0839  3400               	retlw	0
  1384  083A  3407               	retlw	7
  1385  083B  3400               	retlw	0
  1386  083C  3407               	retlw	7
  1387  083D  3400               	retlw	0
  1388  083E  3400               	retlw	0
  1389  083F  3400               	retlw	0
  1390  0840  3400               	retlw	0
  1391  0841  3414               	retlw	20
  1392  0842  347F               	retlw	127
  1393  0843  3414               	retlw	20
  1394  0844  347F               	retlw	127
  1395  0845  3414               	retlw	20
  1396  0846  3400               	retlw	0
  1397  0847  3400               	retlw	0
  1398  0848  3400               	retlw	0
  1399  0849  3424               	retlw	36
  1400  084A  342A               	retlw	42
  1401  084B  347F               	retlw	127
  1402  084C  342A               	retlw	42
  1403  084D  3412               	retlw	18
  1404  084E  3400               	retlw	0
  1405  084F  3400               	retlw	0
  1406  0850  3400               	retlw	0
  1407  0851  3423               	retlw	35
  1408  0852  3413               	retlw	19
  1409  0853  3408               	retlw	8
  1410  0854  3464               	retlw	100
  1411  0855  3462               	retlw	98
  1412  0856  3400               	retlw	0
  1413  0857  3400               	retlw	0
  1414  0858  3400               	retlw	0
  1415  0859  3436               	retlw	54
  1416  085A  3449               	retlw	73
  1417  085B  3455               	retlw	85
  1418  085C  3422               	retlw	34
  1419  085D  3450               	retlw	80
  1420  085E  3400               	retlw	0
  1421  085F  3400               	retlw	0
  1422  0860  3400               	retlw	0
  1423  0861  3400               	retlw	0
  1424  0862  3405               	retlw	5
  1425  0863  3403               	retlw	3
  1426  0864  3400               	retlw	0
  1427  0865  3400               	retlw	0
  1428  0866  3400               	retlw	0
  1429  0867  3400               	retlw	0
  1430  0868  3400               	retlw	0
  1431  0869  341C               	retlw	28
  1432  086A  3422               	retlw	34
  1433  086B  3441               	retlw	65
  1434  086C  3400               	retlw	0
  1435  086D  3400               	retlw	0
  1436  086E  3400               	retlw	0
  1437  086F  3400               	retlw	0
  1438  0870  3400               	retlw	0
  1439  0871  3441               	retlw	65
  1440  0872  3422               	retlw	34
  1441  0873  341C               	retlw	28
  1442  0874  3400               	retlw	0
  1443  0875  3400               	retlw	0
  1444  0876  3400               	retlw	0
  1445  0877  3400               	retlw	0
  1446  0878  3400               	retlw	0
  1447  0879  3408               	retlw	8
  1448  087A  342A               	retlw	42
  1449  087B  341C               	retlw	28
  1450  087C  342A               	retlw	42
  1451  087D  3408               	retlw	8
  1452  087E  3400               	retlw	0
  1453  087F  3400               	retlw	0
  1454  0880  3400               	retlw	0
  1455  0881  3408               	retlw	8
  1456  0882  3408               	retlw	8
  1457  0883  343E               	retlw	62
  1458  0884  3408               	retlw	8
  1459  0885  3408               	retlw	8
  1460  0886  3400               	retlw	0
  1461  0887  3400               	retlw	0
  1462  0888  3400               	retlw	0
  1463  0889  34A0               	retlw	160
  1464  088A  3460               	retlw	96
  1465  088B  3400               	retlw	0
  1466  088C  3400               	retlw	0
  1467  088D  3400               	retlw	0
  1468  088E  3400               	retlw	0
  1469  088F  3400               	retlw	0
  1470  0890  3400               	retlw	0
  1471  0891  3408               	retlw	8
  1472  0892  3408               	retlw	8
  1473  0893  3408               	retlw	8
  1474  0894  3408               	retlw	8
  1475  0895  3408               	retlw	8
  1476  0896  3400               	retlw	0
  1477  0897  3400               	retlw	0
  1478  0898  3400               	retlw	0
  1479  0899  3460               	retlw	96
  1480  089A  3460               	retlw	96
  1481  089B  3400               	retlw	0
  1482  089C  3400               	retlw	0
  1483  089D  3400               	retlw	0
  1484  089E  3400               	retlw	0
  1485  089F  3400               	retlw	0
  1486  08A0  3400               	retlw	0
  1487  08A1  3420               	retlw	32
  1488  08A2  3410               	retlw	16
  1489  08A3  3408               	retlw	8
  1490  08A4  3404               	retlw	4
  1491  08A5  3402               	retlw	2
  1492  08A6  3400               	retlw	0
  1493  08A7  3400               	retlw	0
  1494  08A8  3400               	retlw	0
  1495  08A9  343E               	retlw	62
  1496  08AA  3451               	retlw	81
  1497  08AB  3449               	retlw	73
  1498  08AC  3445               	retlw	69
  1499  08AD  343E               	retlw	62
  1500  08AE  3400               	retlw	0
  1501  08AF  3400               	retlw	0
  1502  08B0  3400               	retlw	0
  1503  08B1  3400               	retlw	0
  1504  08B2  3442               	retlw	66
  1505  08B3  347F               	retlw	127
  1506  08B4  3440               	retlw	64
  1507  08B5  3400               	retlw	0
  1508  08B6  3400               	retlw	0
  1509  08B7  3400               	retlw	0
  1510  08B8  3400               	retlw	0
  1511  08B9  3462               	retlw	98
  1512  08BA  3451               	retlw	81
  1513  08BB  3449               	retlw	73
  1514  08BC  3449               	retlw	73
  1515  08BD  3446               	retlw	70
  1516  08BE  3400               	retlw	0
  1517  08BF  3400               	retlw	0
  1518  08C0  3400               	retlw	0
  1519  08C1  3422               	retlw	34
  1520  08C2  3441               	retlw	65
  1521  08C3  3449               	retlw	73
  1522  08C4  3449               	retlw	73
  1523  08C5  3436               	retlw	54
  1524  08C6  3400               	retlw	0
  1525  08C7  3400               	retlw	0
  1526  08C8  3400               	retlw	0
  1527  08C9  3418               	retlw	24
  1528  08CA  3414               	retlw	20
  1529  08CB  3412               	retlw	18
  1530  08CC  347F               	retlw	127
  1531  08CD  3410               	retlw	16
  1532  08CE  3400               	retlw	0
  1533  08CF  3400               	retlw	0
  1534  08D0  3400               	retlw	0
  1535  08D1  3427               	retlw	39
  1536  08D2  3445               	retlw	69
  1537  08D3  3445               	retlw	69
  1538  08D4  3445               	retlw	69
  1539  08D5  3439               	retlw	57
  1540  08D6  3400               	retlw	0
  1541  08D7  3400               	retlw	0
  1542  08D8  3400               	retlw	0
  1543  08D9  343C               	retlw	60
  1544  08DA  344A               	retlw	74
  1545  08DB  3449               	retlw	73
  1546  08DC  3449               	retlw	73
  1547  08DD  3430               	retlw	48
  1548  08DE  3400               	retlw	0
  1549  08DF  3400               	retlw	0
  1550  08E0  3400               	retlw	0
  1551  08E1  3401               	retlw	1
  1552  08E2  3471               	retlw	113
  1553  08E3  3409               	retlw	9
  1554  08E4  3405               	retlw	5
  1555  08E5  3403               	retlw	3
  1556  08E6  3400               	retlw	0
  1557  08E7  3400               	retlw	0
  1558  08E8  3400               	retlw	0
  1559  08E9  3436               	retlw	54
  1560  08EA  3449               	retlw	73
  1561  08EB  3449               	retlw	73
  1562  08EC  3449               	retlw	73
  1563  08ED  3436               	retlw	54
  1564  08EE  3400               	retlw	0
  1565  08EF  3400               	retlw	0
  1566  08F0  3400               	retlw	0
  1567  08F1  3406               	retlw	6
  1568  08F2  3449               	retlw	73
  1569  08F3  3449               	retlw	73
  1570  08F4  3429               	retlw	41
  1571  08F5  341E               	retlw	30
  1572  08F6  3400               	retlw	0
  1573  08F7  3400               	retlw	0
  1574  08F8  3400               	retlw	0
  1575  08F9  3400               	retlw	0
  1576  08FA  3436               	retlw	54
  1577  08FB  3436               	retlw	54
  1578  08FC  3400               	retlw	0
  1579  08FD  3400               	retlw	0
  1580  08FE  3400               	retlw	0
  1581  08FF  3400               	retlw	0
  1582  0900  3400               	retlw	0
  1583  0901  3400               	retlw	0
  1584  0902  34AC               	retlw	172
  1585  0903  346C               	retlw	108
  1586  0904  3400               	retlw	0
  1587  0905  3400               	retlw	0
  1588  0906  3400               	retlw	0
  1589  0907  3400               	retlw	0
  1590  0908  3400               	retlw	0
  1591  0909  3408               	retlw	8
  1592  090A  3414               	retlw	20
  1593  090B  3422               	retlw	34
  1594  090C  3441               	retlw	65
  1595  090D  3400               	retlw	0
  1596  090E  3400               	retlw	0
  1597  090F  3400               	retlw	0
  1598  0910  3400               	retlw	0
  1599  0911  3414               	retlw	20
  1600  0912  3414               	retlw	20
  1601  0913  3414               	retlw	20
  1602  0914  3414               	retlw	20
  1603  0915  3414               	retlw	20
  1604  0916  3400               	retlw	0
  1605  0917  3400               	retlw	0
  1606  0918  3400               	retlw	0
  1607  0919  3441               	retlw	65
  1608  091A  3422               	retlw	34
  1609  091B  3414               	retlw	20
  1610  091C  3408               	retlw	8
  1611  091D  3400               	retlw	0
  1612  091E  3400               	retlw	0
  1613  091F  3400               	retlw	0
  1614  0920  3400               	retlw	0
  1615  0921  3402               	retlw	2
  1616  0922  3401               	retlw	1
  1617  0923  3451               	retlw	81
  1618  0924  3409               	retlw	9
  1619  0925  3406               	retlw	6
  1620  0926  3400               	retlw	0
  1621  0927  3400               	retlw	0
  1622  0928  3400               	retlw	0
  1623  0929  3432               	retlw	50
  1624  092A  3449               	retlw	73
  1625  092B  3479               	retlw	121
  1626  092C  3441               	retlw	65
  1627  092D  343E               	retlw	62
  1628  092E  3400               	retlw	0
  1629  092F  3400               	retlw	0
  1630  0930  3400               	retlw	0
  1631  0931  347E               	retlw	126
  1632  0932  3409               	retlw	9
  1633  0933  3409               	retlw	9
  1634  0934  3409               	retlw	9
  1635  0935  347E               	retlw	126
  1636  0936  3400               	retlw	0
  1637  0937  3400               	retlw	0
  1638  0938  3400               	retlw	0
  1639  0939  347F               	retlw	127
  1640  093A  3449               	retlw	73
  1641  093B  3449               	retlw	73
  1642  093C  3449               	retlw	73
  1643  093D  3436               	retlw	54
  1644  093E  3400               	retlw	0
  1645  093F  3400               	retlw	0
  1646  0940  3400               	retlw	0
  1647  0941  343E               	retlw	62
  1648  0942  3441               	retlw	65
  1649  0943  3441               	retlw	65
  1650  0944  3441               	retlw	65
  1651  0945  3422               	retlw	34
  1652  0946  3400               	retlw	0
  1653  0947  3400               	retlw	0
  1654  0948  3400               	retlw	0
  1655  0949  347F               	retlw	127
  1656  094A  3441               	retlw	65
  1657  094B  3441               	retlw	65
  1658  094C  3422               	retlw	34
  1659  094D  341C               	retlw	28
  1660  094E  3400               	retlw	0
  1661  094F  3400               	retlw	0
  1662  0950  3400               	retlw	0
  1663  0951  347F               	retlw	127
  1664  0952  3449               	retlw	73
  1665  0953  3449               	retlw	73
  1666  0954  3449               	retlw	73
  1667  0955  3441               	retlw	65
  1668  0956  3400               	retlw	0
  1669  0957  3400               	retlw	0
  1670  0958  3400               	retlw	0
  1671  0959  347F               	retlw	127
  1672  095A  3409               	retlw	9
  1673  095B  3409               	retlw	9
  1674  095C  3409               	retlw	9
  1675  095D  3401               	retlw	1
  1676  095E  3400               	retlw	0
  1677  095F  3400               	retlw	0
  1678  0960  3400               	retlw	0
  1679  0961  343E               	retlw	62
  1680  0962  3441               	retlw	65
  1681  0963  3441               	retlw	65
  1682  0964  3451               	retlw	81
  1683  0965  3472               	retlw	114
  1684  0966  3400               	retlw	0
  1685  0967  3400               	retlw	0
  1686  0968  3400               	retlw	0
  1687  0969  347F               	retlw	127
  1688  096A  3408               	retlw	8
  1689  096B  3408               	retlw	8
  1690  096C  3408               	retlw	8
  1691  096D  347F               	retlw	127
  1692  096E  3400               	retlw	0
  1693  096F  3400               	retlw	0
  1694  0970  3400               	retlw	0
  1695  0971  3441               	retlw	65
  1696  0972  347F               	retlw	127
  1697  0973  3441               	retlw	65
  1698  0974  3400               	retlw	0
  1699  0975  3400               	retlw	0
  1700  0976  3400               	retlw	0
  1701  0977  3400               	retlw	0
  1702  0978  3400               	retlw	0
  1703  0979  3420               	retlw	32
  1704  097A  3440               	retlw	64
  1705  097B  3441               	retlw	65
  1706  097C  343F               	retlw	63
  1707  097D  3401               	retlw	1
  1708  097E  3400               	retlw	0
  1709  097F  3400               	retlw	0
  1710  0980  3400               	retlw	0
  1711  0981  347F               	retlw	127
  1712  0982  3408               	retlw	8
  1713  0983  3414               	retlw	20
  1714  0984  3422               	retlw	34
  1715  0985  3441               	retlw	65
  1716  0986  3400               	retlw	0
  1717  0987  3400               	retlw	0
  1718  0988  3400               	retlw	0
  1719  0989  347F               	retlw	127
  1720  098A  3440               	retlw	64
  1721  098B  3440               	retlw	64
  1722  098C  3440               	retlw	64
  1723  098D  3440               	retlw	64
  1724  098E  3400               	retlw	0
  1725  098F  3400               	retlw	0
  1726  0990  3400               	retlw	0
  1727  0991  347F               	retlw	127
  1728  0992  3402               	retlw	2
  1729  0993  340C               	retlw	12
  1730  0994  3402               	retlw	2
  1731  0995  347F               	retlw	127
  1732  0996  3400               	retlw	0
  1733  0997  3400               	retlw	0
  1734  0998  3400               	retlw	0
  1735  0999  347F               	retlw	127
  1736  099A  3404               	retlw	4
  1737  099B  3408               	retlw	8
  1738  099C  3410               	retlw	16
  1739  099D  347F               	retlw	127
  1740  099E  3400               	retlw	0
  1741  099F  3400               	retlw	0
  1742  09A0  3400               	retlw	0
  1743  09A1  343E               	retlw	62
  1744  09A2  3441               	retlw	65
  1745  09A3  3441               	retlw	65
  1746  09A4  3441               	retlw	65
  1747  09A5  343E               	retlw	62
  1748  09A6  3400               	retlw	0
  1749  09A7  3400               	retlw	0
  1750  09A8  3400               	retlw	0
  1751  09A9  347F               	retlw	127
  1752  09AA  3409               	retlw	9
  1753  09AB  3409               	retlw	9
  1754  09AC  3409               	retlw	9
  1755  09AD  3406               	retlw	6
  1756  09AE  3400               	retlw	0
  1757  09AF  3400               	retlw	0
  1758  09B0  3400               	retlw	0
  1759  09B1  343E               	retlw	62
  1760  09B2  3441               	retlw	65
  1761  09B3  3451               	retlw	81
  1762  09B4  3421               	retlw	33
  1763  09B5  345E               	retlw	94
  1764  09B6  3400               	retlw	0
  1765  09B7  3400               	retlw	0
  1766  09B8  3400               	retlw	0
  1767  09B9  347F               	retlw	127
  1768  09BA  3409               	retlw	9
  1769  09BB  3419               	retlw	25
  1770  09BC  3429               	retlw	41
  1771  09BD  3446               	retlw	70
  1772  09BE  3400               	retlw	0
  1773  09BF  3400               	retlw	0
  1774  09C0  3400               	retlw	0
  1775  09C1  3426               	retlw	38
  1776  09C2  3449               	retlw	73
  1777  09C3  3449               	retlw	73
  1778  09C4  3449               	retlw	73
  1779  09C5  3432               	retlw	50
  1780  09C6  3400               	retlw	0
  1781  09C7  3400               	retlw	0
  1782  09C8  3400               	retlw	0
  1783  09C9  3401               	retlw	1
  1784  09CA  3401               	retlw	1
  1785  09CB  347F               	retlw	127
  1786  09CC  3401               	retlw	1
  1787  09CD  3401               	retlw	1
  1788  09CE  3400               	retlw	0
  1789  09CF  3400               	retlw	0
  1790  09D0  3400               	retlw	0
  1791  09D1  343F               	retlw	63
  1792  09D2  3440               	retlw	64
  1793  09D3  3440               	retlw	64
  1794  09D4  3440               	retlw	64
  1795  09D5  343F               	retlw	63
  1796  09D6  3400               	retlw	0
  1797  09D7  3400               	retlw	0
  1798  09D8  3400               	retlw	0
  1799  09D9  341F               	retlw	31
  1800  09DA  3420               	retlw	32
  1801  09DB  3440               	retlw	64
  1802  09DC  3420               	retlw	32
  1803  09DD  341F               	retlw	31
  1804  09DE  3400               	retlw	0
  1805  09DF  3400               	retlw	0
  1806  09E0  3400               	retlw	0
  1807  09E1  343F               	retlw	63
  1808  09E2  3440               	retlw	64
  1809  09E3  3438               	retlw	56
  1810  09E4  3440               	retlw	64
  1811  09E5  343F               	retlw	63
  1812  09E6  3400               	retlw	0
  1813  09E7  3400               	retlw	0
  1814  09E8  3400               	retlw	0
  1815  09E9  3463               	retlw	99
  1816  09EA  3414               	retlw	20
  1817  09EB  3408               	retlw	8
  1818  09EC  3414               	retlw	20
  1819  09ED  3463               	retlw	99
  1820  09EE  3400               	retlw	0
  1821  09EF  3400               	retlw	0
  1822  09F0  3400               	retlw	0
  1823  09F1  3403               	retlw	3
  1824  09F2  3404               	retlw	4
  1825  09F3  3478               	retlw	120
  1826  09F4  3404               	retlw	4
  1827  09F5  3403               	retlw	3
  1828  09F6  3400               	retlw	0
  1829  09F7  3400               	retlw	0
  1830  09F8  3400               	retlw	0
  1831  09F9  3461               	retlw	97
  1832  09FA  3451               	retlw	81
  1833  09FB  3449               	retlw	73
  1834  09FC  3445               	retlw	69
  1835  09FD  3443               	retlw	67
  1836  09FE  3400               	retlw	0
  1837  09FF  3400               	retlw	0
  1838  0A00  3400               	retlw	0
  1839  0A01  347F               	retlw	127
  1840  0A02  3441               	retlw	65
  1841  0A03  3441               	retlw	65
  1842  0A04  3400               	retlw	0
  1843  0A05  3400               	retlw	0
  1844  0A06  3400               	retlw	0
  1845  0A07  3400               	retlw	0
  1846  0A08  3400               	retlw	0
  1847  0A09  3402               	retlw	2
  1848  0A0A  3404               	retlw	4
  1849  0A0B  3408               	retlw	8
  1850  0A0C  3410               	retlw	16
  1851  0A0D  3420               	retlw	32
  1852  0A0E  3400               	retlw	0
  1853  0A0F  3400               	retlw	0
  1854  0A10  3400               	retlw	0
  1855  0A11  3441               	retlw	65
  1856  0A12  3441               	retlw	65
  1857  0A13  347F               	retlw	127
  1858  0A14  3400               	retlw	0
  1859  0A15  3400               	retlw	0
  1860  0A16  3400               	retlw	0
  1861  0A17  3400               	retlw	0
  1862  0A18  3400               	retlw	0
  1863  0A19  3404               	retlw	4
  1864  0A1A  3402               	retlw	2
  1865  0A1B  3401               	retlw	1
  1866  0A1C  3402               	retlw	2
  1867  0A1D  3404               	retlw	4
  1868  0A1E  3400               	retlw	0
  1869  0A1F  3400               	retlw	0
  1870  0A20  3400               	retlw	0
  1871  0A21  3480               	retlw	128
  1872  0A22  3480               	retlw	128
  1873  0A23  3480               	retlw	128
  1874  0A24  3480               	retlw	128
  1875  0A25  3480               	retlw	128
  1876  0A26  3400               	retlw	0
  1877  0A27  3400               	retlw	0
  1878  0A28  3400               	retlw	0
  1879  0A29  3401               	retlw	1
  1880  0A2A  3402               	retlw	2
  1881  0A2B  3404               	retlw	4
  1882  0A2C  3400               	retlw	0
  1883  0A2D  3400               	retlw	0
  1884  0A2E  3400               	retlw	0
  1885  0A2F  3400               	retlw	0
  1886  0A30  3400               	retlw	0
  1887  0A31  3420               	retlw	32
  1888  0A32  3454               	retlw	84
  1889  0A33  3454               	retlw	84
  1890  0A34  3454               	retlw	84
  1891  0A35  3478               	retlw	120
  1892  0A36  3400               	retlw	0
  1893  0A37  3400               	retlw	0
  1894  0A38  3400               	retlw	0
  1895  0A39  347F               	retlw	127
  1896  0A3A  3448               	retlw	72
  1897  0A3B  3444               	retlw	68
  1898  0A3C  3444               	retlw	68
  1899  0A3D  3438               	retlw	56
  1900  0A3E  3400               	retlw	0
  1901  0A3F  3400               	retlw	0
  1902  0A40  3400               	retlw	0
  1903  0A41  3438               	retlw	56
  1904  0A42  3444               	retlw	68
  1905  0A43  3444               	retlw	68
  1906  0A44  3428               	retlw	40
  1907  0A45  3400               	retlw	0
  1908  0A46  3400               	retlw	0
  1909  0A47  3400               	retlw	0
  1910  0A48  3400               	retlw	0
  1911  0A49  3438               	retlw	56
  1912  0A4A  3444               	retlw	68
  1913  0A4B  3444               	retlw	68
  1914  0A4C  3448               	retlw	72
  1915  0A4D  347F               	retlw	127
  1916  0A4E  3400               	retlw	0
  1917  0A4F  3400               	retlw	0
  1918  0A50  3400               	retlw	0
  1919  0A51  3438               	retlw	56
  1920  0A52  3454               	retlw	84
  1921  0A53  3454               	retlw	84
  1922  0A54  3454               	retlw	84
  1923  0A55  3418               	retlw	24
  1924  0A56  3400               	retlw	0
  1925  0A57  3400               	retlw	0
  1926  0A58  3400               	retlw	0
  1927  0A59  3408               	retlw	8
  1928  0A5A  347E               	retlw	126
  1929  0A5B  3409               	retlw	9
  1930  0A5C  3402               	retlw	2
  1931  0A5D  3400               	retlw	0
  1932  0A5E  3400               	retlw	0
  1933  0A5F  3400               	retlw	0
  1934  0A60  3400               	retlw	0
  1935  0A61  3418               	retlw	24
  1936  0A62  34A4               	retlw	164
  1937  0A63  34A4               	retlw	164
  1938  0A64  34A4               	retlw	164
  1939  0A65  347C               	retlw	124
  1940  0A66  3400               	retlw	0
  1941  0A67  3400               	retlw	0
  1942  0A68  3400               	retlw	0
  1943  0A69  347F               	retlw	127
  1944  0A6A  3408               	retlw	8
  1945  0A6B  3404               	retlw	4
  1946  0A6C  3404               	retlw	4
  1947  0A6D  3478               	retlw	120
  1948  0A6E  3400               	retlw	0
  1949  0A6F  3400               	retlw	0
  1950  0A70  3400               	retlw	0
  1951  0A71  3400               	retlw	0
  1952  0A72  347D               	retlw	125
  1953  0A73  3400               	retlw	0
  1954  0A74  3400               	retlw	0
  1955  0A75  3400               	retlw	0
  1956  0A76  3400               	retlw	0
  1957  0A77  3400               	retlw	0
  1958  0A78  3400               	retlw	0
  1959  0A79  3480               	retlw	128
  1960  0A7A  3484               	retlw	132
  1961  0A7B  347D               	retlw	125
  1962  0A7C  3400               	retlw	0
  1963  0A7D  3400               	retlw	0
  1964  0A7E  3400               	retlw	0
  1965  0A7F  3400               	retlw	0
  1966  0A80  3400               	retlw	0
  1967  0A81  347F               	retlw	127
  1968  0A82  3410               	retlw	16
  1969  0A83  3428               	retlw	40
  1970  0A84  3444               	retlw	68
  1971  0A85  3400               	retlw	0
  1972  0A86  3400               	retlw	0
  1973  0A87  3400               	retlw	0
  1974  0A88  3400               	retlw	0
  1975  0A89  3441               	retlw	65
  1976  0A8A  347F               	retlw	127
  1977  0A8B  3440               	retlw	64
  1978  0A8C  3400               	retlw	0
  1979  0A8D  3400               	retlw	0
  1980  0A8E  3400               	retlw	0
  1981  0A8F  3400               	retlw	0
  1982  0A90  3400               	retlw	0
  1983  0A91  347C               	retlw	124
  1984  0A92  3404               	retlw	4
  1985  0A93  3418               	retlw	24
  1986  0A94  3404               	retlw	4
  1987  0A95  3478               	retlw	120
  1988  0A96  3400               	retlw	0
  1989  0A97  3400               	retlw	0
  1990  0A98  3400               	retlw	0
  1991  0A99  347C               	retlw	124
  1992  0A9A  3408               	retlw	8
  1993  0A9B  3404               	retlw	4
  1994  0A9C  347C               	retlw	124
  1995  0A9D  3400               	retlw	0
  1996  0A9E  3400               	retlw	0
  1997  0A9F  3400               	retlw	0
  1998  0AA0  3400               	retlw	0
  1999  0AA1  3438               	retlw	56
  2000  0AA2  3444               	retlw	68
  2001  0AA3  3444               	retlw	68
  2002  0AA4  3438               	retlw	56
  2003  0AA5  3400               	retlw	0
  2004  0AA6  3400               	retlw	0
  2005  0AA7  3400               	retlw	0
  2006  0AA8  3400               	retlw	0
  2007  0AA9  34FC               	retlw	252
  2008  0AAA  3424               	retlw	36
  2009  0AAB  3424               	retlw	36
  2010  0AAC  3418               	retlw	24
  2011  0AAD  3400               	retlw	0
  2012  0AAE  3400               	retlw	0
  2013  0AAF  3400               	retlw	0
  2014  0AB0  3400               	retlw	0
  2015  0AB1  3418               	retlw	24
  2016  0AB2  3424               	retlw	36
  2017  0AB3  3424               	retlw	36
  2018  0AB4  34FC               	retlw	252
  2019  0AB5  3400               	retlw	0
  2020  0AB6  3400               	retlw	0
  2021  0AB7  3400               	retlw	0
  2022  0AB8  3400               	retlw	0
  2023  0AB9  3400               	retlw	0
  2024  0ABA  347C               	retlw	124
  2025  0ABB  3408               	retlw	8
  2026  0ABC  3404               	retlw	4
  2027  0ABD  3400               	retlw	0
  2028  0ABE  3400               	retlw	0
  2029  0ABF  3400               	retlw	0
  2030  0AC0  3400               	retlw	0
  2031  0AC1  3448               	retlw	72
  2032  0AC2  3454               	retlw	84
  2033  0AC3  3454               	retlw	84
  2034  0AC4  3424               	retlw	36
  2035  0AC5  3400               	retlw	0
  2036  0AC6  3400               	retlw	0
  2037  0AC7  3400               	retlw	0
  2038  0AC8  3400               	retlw	0
  2039  0AC9  3404               	retlw	4
  2040  0ACA  347F               	retlw	127
  2041  0ACB  3444               	retlw	68
  2042  0ACC  3400               	retlw	0
  2043  0ACD  3400               	retlw	0
  2044  0ACE  3400               	retlw	0
  2045  0ACF  3400               	retlw	0
  2046  0AD0  3400               	retlw	0
  2047  0AD1  343C               	retlw	60
  2048  0AD2  3440               	retlw	64
  2049  0AD3  3440               	retlw	64
  2050  0AD4  347C               	retlw	124
  2051  0AD5  3400               	retlw	0
  2052  0AD6  3400               	retlw	0
  2053  0AD7  3400               	retlw	0
  2054  0AD8  3400               	retlw	0
  2055  0AD9  341C               	retlw	28
  2056  0ADA  3420               	retlw	32
  2057  0ADB  3440               	retlw	64
  2058  0ADC  3420               	retlw	32
  2059  0ADD  341C               	retlw	28
  2060  0ADE  3400               	retlw	0
  2061  0ADF  3400               	retlw	0
  2062  0AE0  3400               	retlw	0
  2063  0AE1  343C               	retlw	60
  2064  0AE2  3440               	retlw	64
  2065  0AE3  3430               	retlw	48
  2066  0AE4  3440               	retlw	64
  2067  0AE5  343C               	retlw	60
  2068  0AE6  3400               	retlw	0
  2069  0AE7  3400               	retlw	0
  2070  0AE8  3400               	retlw	0
  2071  0AE9  3444               	retlw	68
  2072  0AEA  3428               	retlw	40
  2073  0AEB  3410               	retlw	16
  2074  0AEC  3428               	retlw	40
  2075  0AED  3444               	retlw	68
  2076  0AEE  3400               	retlw	0
  2077  0AEF  3400               	retlw	0
  2078  0AF0  3400               	retlw	0
  2079  0AF1  341C               	retlw	28
  2080  0AF2  34A0               	retlw	160
  2081  0AF3  34A0               	retlw	160
  2082  0AF4  347C               	retlw	124
  2083  0AF5  3400               	retlw	0
  2084  0AF6  3400               	retlw	0
  2085  0AF7  3400               	retlw	0
  2086  0AF8  3400               	retlw	0
  2087  0AF9  3444               	retlw	68
  2088  0AFA  3464               	retlw	100
  2089  0AFB  3454               	retlw	84
  2090  0AFC  344C               	retlw	76
  2091  0AFD  3444               	retlw	68
  2092  0AFE  3400               	retlw	0
  2093  0AFF  3400               	retlw	0
  2094  0B00  3400               	retlw	0
  2095  0B01  3408               	retlw	8
  2096  0B02  3436               	retlw	54
  2097  0B03  3441               	retlw	65
  2098  0B04  3400               	retlw	0
  2099  0B05  3400               	retlw	0
  2100  0B06  3400               	retlw	0
  2101  0B07  3400               	retlw	0
  2102  0B08  3400               	retlw	0
  2103  0B09  3400               	retlw	0
  2104  0B0A  347F               	retlw	127
  2105  0B0B  3400               	retlw	0
  2106  0B0C  3400               	retlw	0
  2107  0B0D  3400               	retlw	0
  2108  0B0E  3400               	retlw	0
  2109  0B0F  3400               	retlw	0
  2110  0B10  3400               	retlw	0
  2111  0B11  3441               	retlw	65
  2112  0B12  3436               	retlw	54
  2113  0B13  3408               	retlw	8
  2114  0B14  3400               	retlw	0
  2115  0B15  3400               	retlw	0
  2116  0B16  3400               	retlw	0
  2117  0B17  3400               	retlw	0
  2118  0B18  3400               	retlw	0
  2119  0B19  3402               	retlw	2
  2120  0B1A  3401               	retlw	1
  2121  0B1B  3401               	retlw	1
  2122  0B1C  3402               	retlw	2
  2123  0B1D  3401               	retlw	1
  2124  0B1E  3400               	retlw	0
  2125  0B1F  3400               	retlw	0
  2126  0B20  3400               	retlw	0
  2127  0B21  3402               	retlw	2
  2128  0B22  3405               	retlw	5
  2129  0B23  3405               	retlw	5
  2130  0B24  3402               	retlw	2
  2131  0B25  3400               	retlw	0
  2132  0B26  3400               	retlw	0
  2133  0B27  3400               	retlw	0
  2134  0B28                     __end_of_OledFont:	
  2135  0011                     _PIR1bits	set	17
  2136  008E                     _TRISCbits	set	142
  2137  04CF                     _SPLLEN	set	1231
  2138  04CE                     _IRCF3	set	1230
  2139  04CD                     _IRCF2	set	1229
  2140  04CC                     _IRCF1	set	1228
  2141  04CB                     _IRCF0	set	1227
  2142  04C9                     _SCS1	set	1225
  2143  04C8                     _SCS0	set	1224
  2144  018E                     _ANSELCbits	set	398
  2145  0216                     _SSPCON2bits	set	534
  2146  0211                     _SSPBUF	set	529
  2147  0212                     _SSPADD	set	530
  2148  0215                     _SSPCONbits	set	533
  2149  0E20                     _SSPCLKPPSbits	set	3616
  2150  0E21                     _SSPDATPPSbits	set	3617
  2151  0E0F                     _PPSLOCKbits	set	3599
  2152  0E0F                     _PPSLOCK	set	3599
  2153  0EA5                     _RC5PPSbits	set	3749
  2154  0EA4                     _RC4PPSbits	set	3748
  2155  0B28                     STR_5:	
  2156  0B28  3449               	retlw	73	;'I'
  2157  0B29  346E               	retlw	110	;'n'
  2158  0B2A  3474               	retlw	116	;'t'
  2159  0B2B  3465               	retlw	101	;'e'
  2160  0B2C  3467               	retlw	103	;'g'
  2161  0B2D  3465               	retlw	101	;'e'
  2162  0B2E  3472               	retlw	114	;'r'
  2163  0B2F  3420               	retlw	32	;' '
  2164  0B30  3443               	retlw	67	;'C'
  2165  0B31  346F               	retlw	111	;'o'
  2166  0B32  3475               	retlw	117	;'u'
  2167  0B33  346E               	retlw	110	;'n'
  2168  0B34  3474               	retlw	116	;'t'
  2169  0B35  343A               	retlw	58	;':'
  2170  0B36  3400               	retlw	0
  2171  0B37                     STR_1:	
  2172  0B37  344F               	retlw	79	;'O'
  2173  0B38  344C               	retlw	76	;'L'
  2174  0B39  3445               	retlw	69	;'E'
  2175  0B3A  3444               	retlw	68	;'D'
  2176  0B3B  3420               	retlw	32	;' '
  2177  0B3C  3453               	retlw	83	;'S'
  2178  0B3D  3453               	retlw	83	;'S'
  2179  0B3E  3444               	retlw	68	;'D'
  2180  0B3F  3431               	retlw	49	;'1'
  2181  0B40  3433               	retlw	51	;'3'
  2182  0B41  3430               	retlw	48	;'0'
  2183  0B42  3436               	retlw	54	;'6'
  2184  0B43  3400               	retlw	0
  2185  0B44                     STR_6:	
  2186  0B44  3446               	retlw	70	;'F'
  2187  0B45  346C               	retlw	108	;'l'
  2188  0B46  346F               	retlw	111	;'o'
  2189  0B47  3461               	retlw	97	;'a'
  2190  0B48  3474               	retlw	116	;'t'
  2191  0B49  3420               	retlw	32	;' '
  2192  0B4A  3443               	retlw	67	;'C'
  2193  0B4B  346F               	retlw	111	;'o'
  2194  0B4C  3475               	retlw	117	;'u'
  2195  0B4D  346E               	retlw	110	;'n'
  2196  0B4E  3474               	retlw	116	;'t'
  2197  0B4F  343A               	retlw	58	;':'
  2198  0B50  3400               	retlw	0
  2199  0B51                     STR_4:	
  2200  0B51  3462               	retlw	98	;'b'
  2201  0B52  3479               	retlw	121	;'y'
  2202  0B53  3420               	retlw	32	;' '
  2203  0B54  3441               	retlw	65	;'A'
  2204  0B55  3472               	retlw	114	;'r'
  2205  0B56  346D               	retlw	109	;'m'
  2206  0B57  3473               	retlw	115	;'s'
  2207  0B58  3474               	retlw	116	;'t'
  2208  0B59  3472               	retlw	114	;'r'
  2209  0B5A  346F               	retlw	111	;'o'
  2210  0B5B  346E               	retlw	110	;'n'
  2211  0B5C  3467               	retlw	103	;'g'
  2212  0B5D  3400               	retlw	0
  2213  0B5E                     STR_9:	
  2214  0B5E  3425               	retlw	37	;'%'
  2215  0B5F  346C               	retlw	108	;'l'
  2216  0B60  3475               	retlw	117	;'u'
  2217  0B61  342E               	retlw	46	;'.'
  2218  0B62  3425               	retlw	37	;'%'
  2219  0B63  3436               	retlw	54	;'6'
  2220  0B64  342E               	retlw	46	;'.'
  2221  0B65  3436               	retlw	54	;'6'
  2222  0B66  346C               	retlw	108	;'l'
  2223  0B67  3475               	retlw	117	;'u'
  2224  0B68  3400               	retlw	0
  2225  0B69                     STR_2:	
  2226  0B69  344E               	retlw	78	;'N'
  2227  0B6A  346F               	retlw	111	;'o'
  2228  0B6B  3420               	retlw	32	;' '
  2229  0B6C  3442               	retlw	66	;'B'
  2230  0B6D  3475               	retlw	117	;'u'
  2231  0B6E  3466               	retlw	102	;'f'
  2232  0B6F  3466               	retlw	102	;'f'
  2233  0B70  3465               	retlw	101	;'e'
  2234  0B71  3472               	retlw	114	;'r'
  2235  0B72  3400               	retlw	0
  2236  0B73                     STR_3:	
  2237  0B73  3446               	retlw	70	;'F'
  2238  0B74  346F               	retlw	111	;'o'
  2239  0B75  3472               	retlw	114	;'r'
  2240  0B76  3420               	retlw	32	;' '
  2241  0B77  3458               	retlw	88	;'X'
  2242  0B78  3443               	retlw	67	;'C'
  2243  0B79  3438               	retlw	56	;'8'
  2244  0B7A  3400               	retlw	0
  2245  0B7B                     STR_7:	
  2246  0B7B  3420               	retlw	32	;' '
  2247  0B7C  3420               	retlw	32	;' '
  2248  0B7D  3420               	retlw	32	;' '
  2249  0B7E  3420               	retlw	32	;' '
  2250  0B7F  3420               	retlw	32	;' '
  2251  0B80  3400               	retlw	0
  2252  0B7B                     
  2253                           ; #config settings
  2254  0000                     
  2255                           	psect	cinit
  2256  07F6                     start_initialization:	
  2257  07F6                     __initialization:	
  2258                           
  2259                           ; Clear objects allocated to BANK1
  2260  07F6  30A0               	movlw	low __pbssBANK1
  2261  07F7  0084               	movwf	4
  2262  07F8  3000               	movlw	high __pbssBANK1
  2263  07F9  0085               	movwf	5
  2264  07FA  3011               	movlw	17
  2265  07FB  3180  2004         	fcall	clear_ram0
  2266  07FD                     end_of_initialization:	
  2267                           ;End of C runtime variable initialization code
  2268                           
  2269  07FD                     __end_of__initialization:	
  2270  07FD  0020               	movlb	0
  2271  07FE  3184  2CE4         	ljmp	_main	;jump to C main() function
  2272                           
  2273                           	psect	bssBANK1
  2274  00A0                     __pbssBANK1:	
  2275  00A0                     ftoa@buf:	
  2276  00A0                     	ds	17
  2277                           
  2278                           	psect	clrtext
  2279  0004                     clear_ram0:	
  2280                           ;	Called with FSR0 containing the base address, and
  2281                           ;	WREG with the size to clear
  2282                           
  2283  0004  0064               	clrwdt	;clear the watchdog before getting into this loop
  2284  0005                     clrloop0:	
  2285  0005  0180               	clrf	0	;clear RAM location pointed to by FSR
  2286  0006  3101               	addfsr 0,1
  2287  0007  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2288  0008  2805               	goto	clrloop0	;have we reached the end yet?
  2289  0009  3400               	retlw	0	;all done for this memory range, return
  2290                           
  2291                           	psect	cstackCOMMON
  2292  0070                     __pcstackCOMMON:	
  2293  0070                     ?_isdigit:	
  2294  0070                     ?___ftge:	
  2295                           ; 1 bit 
  2296                           
  2297  0070                     ?_OLED_Init:	
  2298                           ; 1 bit 
  2299                           
  2300  0070                     ?_OLED_Clear:	
  2301                           ; 1 bytes @ 0x0
  2302                           
  2303  0070                     ?_OLED_Write_Integer:	
  2304                           ; 1 bytes @ 0x0
  2305                           
  2306  0070                     ?_memmove:	
  2307                           ; 1 bytes @ 0x0
  2308                           
  2309  0070                     ??_isdigit:	
  2310                           ; 1 bytes @ 0x0
  2311                           
  2312  0070                     ?_internal_16:	
  2313                           ; 1 bytes @ 0x0
  2314                           
  2315  0070                     ??_internal_16:	
  2316                           ; 1 bytes @ 0x0
  2317                           
  2318  0070                     ?_I2C_Init:	
  2319                           ; 1 bytes @ 0x0
  2320                           
  2321  0070                     ??_I2C_Init:	
  2322                           ; 1 bytes @ 0x0
  2323                           
  2324  0070                     ?_Send_I2C_Data:	
  2325                           ; 1 bytes @ 0x0
  2326                           
  2327  0070                     ?_Send_I2C_StartBit:	
  2328                           ; 1 bytes @ 0x0
  2329                           
  2330  0070                     ??_Send_I2C_StartBit:	
  2331                           ; 1 bytes @ 0x0
  2332                           
  2333  0070                     ?_Send_I2C_StopBit:	
  2334                           ; 1 bytes @ 0x0
  2335                           
  2336  0070                     ??_Send_I2C_StopBit:	
  2337                           ; 1 bytes @ 0x0
  2338                           
  2339  0070                     ?_initMain:	
  2340                           ; 1 bytes @ 0x0
  2341                           
  2342  0070                     ??_initMain:	
  2343                           ; 1 bytes @ 0x0
  2344                           
  2345  0070                     ?_main:	
  2346                           ; 1 bytes @ 0x0
  2347                           
  2348  0070                     ?_OLED_Command:	
  2349                           ; 1 bytes @ 0x0
  2350                           
  2351  0070                     ?_OLED_PutChar:	
  2352                           ; 1 bytes @ 0x0
  2353                           
  2354  0070                     ?___wmul:	
  2355                           ; 1 bytes @ 0x0
  2356                           
  2357  0070                     ?___lwdiv:	
  2358                           ; 2 bytes @ 0x0
  2359                           
  2360  0070                     ?___lwmod:	
  2361                           ; 2 bytes @ 0x0
  2362                           
  2363  0070                     ?___ftpack:	
  2364                           ; 2 bytes @ 0x0
  2365                           
  2366  0070                     ?___ftneg:	
  2367                           ; 3 bytes @ 0x0
  2368                           
  2369  0070                     ?___lldiv:	
  2370                           ; 3 bytes @ 0x0
  2371                           
  2372  0070                     _isdigit$512:	
  2373                           ; 4 bytes @ 0x0
  2374                           
  2375  0070                     Send_I2C_Data@databyte:	
  2376                           ; 1 bytes @ 0x0
  2377                           
  2378  0070                     ___wmul@multiplier:	
  2379                           ; 2 bytes @ 0x0
  2380                           
  2381  0070                     ___lwdiv@divisor:	
  2382                           ; 2 bytes @ 0x0
  2383                           
  2384  0070                     ___lwmod@divisor:	
  2385                           ; 2 bytes @ 0x0
  2386                           
  2387  0070                     memmove@s1:	
  2388                           ; 2 bytes @ 0x0
  2389                           
  2390  0070                     ___ftpack@arg:	
  2391                           ; 2 bytes @ 0x0
  2392                           
  2393  0070                     ___ftge@ff1:	
  2394                           ; 3 bytes @ 0x0
  2395                           
  2396  0070                     ___ftneg@f1:	
  2397                           ; 3 bytes @ 0x0
  2398                           
  2399  0070                     ___lldiv@divisor:	
  2400                           ; 3 bytes @ 0x0
  2401                           
  2402                           
  2403                           ; 4 bytes @ 0x0
  2404  0070                     	ds	1
  2405  0071                     isdigit@c:	
  2406                           
  2407                           ; 1 bytes @ 0x1
  2408  0071                     	ds	1
  2409  0072                     ??_Send_I2C_Data:	
  2410  0072                     ??_OLED_Command:	
  2411                           ; 1 bytes @ 0x2
  2412                           
  2413  0072                     ___wmul@multiplicand:	
  2414                           ; 1 bytes @ 0x2
  2415                           
  2416  0072                     ___lwdiv@dividend:	
  2417                           ; 2 bytes @ 0x2
  2418                           
  2419  0072                     ___lwmod@dividend:	
  2420                           ; 2 bytes @ 0x2
  2421                           
  2422  0072                     memmove@n:	
  2423                           ; 2 bytes @ 0x2
  2424                           
  2425                           
  2426                           ; 2 bytes @ 0x2
  2427  0072                     	ds	1
  2428  0073                     ??___ftneg:	
  2429  0073                     ___ftpack@exp:	
  2430                           ; 1 bytes @ 0x3
  2431                           
  2432  0073                     ___ftge@ff2:	
  2433                           ; 1 bytes @ 0x3
  2434                           
  2435                           
  2436                           ; 3 bytes @ 0x3
  2437  0073                     	ds	1
  2438  0074                     ??_memmove:	
  2439  0074                     ??___wmul:	
  2440                           ; 1 bytes @ 0x4
  2441                           
  2442  0074                     ??___lwdiv:	
  2443                           ; 1 bytes @ 0x4
  2444                           
  2445  0074                     ??___lwmod:	
  2446                           ; 1 bytes @ 0x4
  2447                           
  2448  0074                     OLED_Command@temp:	
  2449                           ; 1 bytes @ 0x4
  2450                           
  2451  0074                     ___ftpack@sign:	
  2452                           ; 1 bytes @ 0x4
  2453                           
  2454  0074                     ___wmul@product:	
  2455                           ; 1 bytes @ 0x4
  2456                           
  2457  0074                     ___lldiv@dividend:	
  2458                           ; 2 bytes @ 0x4
  2459                           
  2460                           
  2461                           ; 4 bytes @ 0x4
  2462  0074                     	ds	1
  2463  0075                     ??_OLED_Init:	
  2464  0075                     ?_OLED_YX:	
  2465                           ; 1 bytes @ 0x5
  2466                           
  2467  0075                     ??___ftpack:	
  2468                           ; 1 bytes @ 0x5
  2469                           
  2470  0075                     OLED_YX@Column:	
  2471                           ; 1 bytes @ 0x5
  2472                           
  2473  0075                     ___lwmod@counter:	
  2474                           ; 1 bytes @ 0x5
  2475                           
  2476  0075                     ___lwdiv@quotient:	
  2477                           ; 1 bytes @ 0x5
  2478                           
  2479                           
  2480                           ; 2 bytes @ 0x5
  2481  0075                     	ds	1
  2482  0076                     ??_OLED_YX:	
  2483  0076                     ??___ftge:	
  2484                           ; 1 bytes @ 0x6
  2485                           
  2486                           
  2487                           ; 1 bytes @ 0x6
  2488  0076                     	ds	1
  2489  0077                     ___lwdiv@counter:	
  2490                           
  2491                           ; 1 bytes @ 0x7
  2492  0077                     	ds	1
  2493  0078                     ?_utoa:	
  2494  0078                     ??___lldiv:	
  2495                           ; 1 bytes @ 0x8
  2496                           
  2497  0078                     ?___ftadd:	
  2498                           ; 1 bytes @ 0x8
  2499                           
  2500  0078                     ?___ftmul:	
  2501                           ; 3 bytes @ 0x8
  2502                           
  2503  0078                     ?___lltoft:	
  2504                           ; 3 bytes @ 0x8
  2505                           
  2506  0078                     memmove@d1:	
  2507                           ; 3 bytes @ 0x8
  2508                           
  2509  0078                     utoa@val:	
  2510                           ; 1 bytes @ 0x8
  2511                           
  2512  0078                     ___ftadd@f1:	
  2513                           ; 2 bytes @ 0x8
  2514                           
  2515  0078                     ___ftmul@f1:	
  2516                           ; 3 bytes @ 0x8
  2517                           
  2518  0078                     ___lltoft@c:	
  2519                           ; 3 bytes @ 0x8
  2520                           
  2521                           
  2522                           ; 4 bytes @ 0x8
  2523  0078                     	ds	1
  2524  0079                     OLED_YX@Row:	
  2525  0079                     memmove@s:	
  2526                           ; 1 bytes @ 0x9
  2527                           
  2528  0079                     ___lldiv@quotient:	
  2529                           ; 2 bytes @ 0x9
  2530                           
  2531                           
  2532                           ; 4 bytes @ 0x9
  2533  0079                     	ds	1
  2534  007A                     utoa@base:	
  2535                           
  2536                           ; 2 bytes @ 0xA
  2537  007A                     	ds	1
  2538  007B                     memmove@d:	
  2539  007B                     ___ftadd@f2:	
  2540                           ; 1 bytes @ 0xB
  2541                           
  2542  007B                     ___ftmul@f2:	
  2543                           ; 3 bytes @ 0xB
  2544                           
  2545                           
  2546                           ; 3 bytes @ 0xB
  2547  007B                     	ds	1
  2548  007C                     ??_OLED_Clear:	
  2549  007C                     ?_OLED_Write_String:	
  2550                           ; 1 bytes @ 0xC
  2551                           
  2552  007C                     ??_utoa:	
  2553                           ; 1 bytes @ 0xC
  2554                           
  2555  007C                     ??___lltoft:	
  2556                           ; 1 bytes @ 0xC
  2557                           
  2558  007C                     OLED_Write_String@s:	
  2559                           ; 1 bytes @ 0xC
  2560                           
  2561                           
  2562                           ; 2 bytes @ 0xC
  2563  007C                     	ds	1
  2564  007D                     ??_itoa:	
  2565  007D                     ___lldiv@counter:	
  2566                           ; 1 bytes @ 0xD
  2567                           
  2568  007D                     ___lltoft@exp:	
  2569                           ; 1 bytes @ 0xD
  2570                           
  2571                           
  2572                           ; 1 bytes @ 0xD
  2573  007D                     	ds	1
  2574  007E                     ??___ftsub:	
  2575                           
  2576                           	psect	cstackBANK0
  2577  0020                     __pcstackBANK0:	
  2578                           ; 1 bytes @ 0xE
  2579                           
  2580  0020                     ??_OLED_PutChar:	
  2581  0020                     ??___ftadd:	
  2582                           ; 1 bytes @ 0x0
  2583                           
  2584  0020                     ??___ftmul:	
  2585                           ; 1 bytes @ 0x0
  2586                           
  2587  0020                     ?___llmod:	
  2588                           ; 1 bytes @ 0x0
  2589                           
  2590  0020                     utoa@v:	
  2591                           ; 4 bytes @ 0x0
  2592                           
  2593  0020                     ___llmod@divisor:	
  2594                           ; 2 bytes @ 0x0
  2595                           
  2596                           
  2597                           ; 4 bytes @ 0x0
  2598  0020                     	ds	2
  2599  0022                     utoa@c:	
  2600                           
  2601                           ; 1 bytes @ 0x2
  2602  0022                     	ds	1
  2603  0023                     utoa@buf:	
  2604                           
  2605                           ; 1 bytes @ 0x3
  2606  0023                     	ds	1
  2607  0024                     ?_itoa:	
  2608  0024                     ___ftadd@sign:	
  2609                           ; 1 bytes @ 0x4
  2610                           
  2611  0024                     ___ftmul@exp:	
  2612                           ; 1 bytes @ 0x4
  2613                           
  2614  0024                     itoa@val:	
  2615                           ; 1 bytes @ 0x4
  2616                           
  2617  0024                     ___llmod@dividend:	
  2618                           ; 2 bytes @ 0x4
  2619                           
  2620                           
  2621                           ; 4 bytes @ 0x4
  2622  0024                     	ds	1
  2623  0025                     ___ftadd@exp2:	
  2624  0025                     ___ftmul@f3_as_product:	
  2625                           ; 1 bytes @ 0x5
  2626                           
  2627                           
  2628                           ; 3 bytes @ 0x5
  2629  0025                     	ds	1
  2630  0026                     ___ftadd@exp1:	
  2631  0026                     itoa@base:	
  2632                           ; 1 bytes @ 0x6
  2633                           
  2634  0026                     OLED_PutChar@bytes:	
  2635                           ; 2 bytes @ 0x6
  2636                           
  2637                           
  2638                           ; 9 bytes @ 0x6
  2639  0026                     	ds	1
  2640  0027                     ?___ftsub:	
  2641  0027                     ___ftsub@f2:	
  2642                           ; 3 bytes @ 0x7
  2643                           
  2644                           
  2645                           ; 3 bytes @ 0x7
  2646  0027                     	ds	1
  2647  0028                     ??___llmod:	
  2648  0028                     ___ftmul@cntr:	
  2649                           ; 1 bytes @ 0x8
  2650                           
  2651  0028                     itoa@cp:	
  2652                           ; 1 bytes @ 0x8
  2653                           
  2654                           
  2655                           ; 1 bytes @ 0x8
  2656  0028                     	ds	1
  2657  0029                     ___ftmul@sign:	
  2658  0029                     itoa@buf:	
  2659                           ; 1 bytes @ 0x9
  2660                           
  2661  0029                     ___llmod@counter:	
  2662                           ; 1 bytes @ 0x9
  2663                           
  2664                           
  2665                           ; 1 bytes @ 0x9
  2666  0029                     	ds	1
  2667  002A                     ?_sprintf:	
  2668  002A                     ?___fttol:	
  2669                           ; 2 bytes @ 0xA
  2670                           
  2671  002A                     sprintf@f:	
  2672                           ; 4 bytes @ 0xA
  2673                           
  2674  002A                     ___ftsub@f1:	
  2675                           ; 2 bytes @ 0xA
  2676                           
  2677  002A                     ___fttol@f1:	
  2678                           ; 3 bytes @ 0xA
  2679                           
  2680                           
  2681                           ; 3 bytes @ 0xA
  2682  002A                     	ds	4
  2683  002E                     ??___fttol:	
  2684                           
  2685                           ; 1 bytes @ 0xE
  2686  002E                     	ds	1
  2687  002F                     OLED_PutChar@base:	
  2688                           
  2689                           ; 2 bytes @ 0xF
  2690  002F                     	ds	2
  2691  0031                     OLED_PutChar@i:	
  2692                           
  2693                           ; 2 bytes @ 0x11
  2694  0031                     	ds	1
  2695  0032                     ___fttol@sign1:	
  2696                           
  2697                           ; 1 bytes @ 0x12
  2698  0032                     	ds	1
  2699  0033                     OLED_PutChar@ch:	
  2700  0033                     ___fttol@lval:	
  2701                           ; 1 bytes @ 0x13
  2702                           
  2703                           
  2704                           ; 4 bytes @ 0x13
  2705  0033                     	ds	1
  2706  0034                     ??_OLED_Write_String:	
  2707  0034                     ??_sprintf:	
  2708                           ; 1 bytes @ 0x14
  2709                           
  2710  0034                     OLED_Clear@row:	
  2711                           ; 1 bytes @ 0x14
  2712                           
  2713                           
  2714                           ; 2 bytes @ 0x14
  2715  0034                     	ds	1
  2716  0035                     ??_OLED_Write_Integer:	
  2717                           
  2718                           ; 1 bytes @ 0x15
  2719  0035                     	ds	1
  2720  0036                     OLED_Clear@col:	
  2721                           
  2722                           ; 2 bytes @ 0x16
  2723  0036                     	ds	1
  2724  0037                     ___fttol@exp1:	
  2725  0037                     OLED_Write_Integer@s:	
  2726                           ; 1 bytes @ 0x17
  2727                           
  2728                           
  2729                           ; 20 bytes @ 0x17
  2730  0037                     	ds	3
  2731  003A                     sprintf@flag:	
  2732                           
  2733                           ; 1 bytes @ 0x1A
  2734  003A                     	ds	1
  2735  003B                     sprintf@ap:	
  2736                           
  2737                           ; 1 bytes @ 0x1B
  2738  003B                     	ds	1
  2739  003C                     sprintf@val:	
  2740                           
  2741                           ; 4 bytes @ 0x1C
  2742  003C                     	ds	4
  2743  0040                     sprintf@sp:	
  2744                           
  2745                           ; 1 bytes @ 0x20
  2746  0040                     	ds	1
  2747  0041                     sprintf@width:	
  2748                           
  2749                           ; 2 bytes @ 0x21
  2750  0041                     	ds	2
  2751  0043                     sprintf@prec:	
  2752                           
  2753                           ; 2 bytes @ 0x23
  2754  0043                     	ds	2
  2755  0045                     sprintf@c:	
  2756                           
  2757                           ; 1 bytes @ 0x25
  2758  0045                     	ds	1
  2759  0046                     ?_ftoa:	
  2760  0046                     ftoa@f:	
  2761                           ; 1 bytes @ 0x26
  2762                           
  2763                           
  2764                           ; 3 bytes @ 0x26
  2765  0046                     	ds	3
  2766  0049                     ftoa@status:	
  2767                           
  2768                           ; 1 bytes @ 0x29
  2769  0049                     	ds	1
  2770  004A                     ??_ftoa:	
  2771                           
  2772                           ; 1 bytes @ 0x2A
  2773  004A                     	ds	1
  2774  004B                     OLED_Write_Integer@i:	
  2775  004B                     ftoa@rem:	
  2776                           ; 1 bytes @ 0x2B
  2777                           
  2778                           
  2779                           ; 4 bytes @ 0x2B
  2780  004B                     	ds	4
  2781  004F                     ftoa@l:	
  2782                           
  2783                           ; 4 bytes @ 0x2F
  2784  004F                     	ds	4
  2785  0053                     ftoa@cp:	
  2786                           
  2787                           ; 1 bytes @ 0x33
  2788  0053                     	ds	1
  2789  0054                     ?_OLED_Write_Float:	
  2790  0054                     OLED_Write_Float@f:	
  2791                           ; 1 bytes @ 0x34
  2792                           
  2793                           
  2794                           ; 3 bytes @ 0x34
  2795  0054                     	ds	3
  2796  0057                     ??_OLED_Write_Float:	
  2797                           
  2798                           ; 1 bytes @ 0x37
  2799  0057                     	ds	2
  2800  0059                     OLED_Write_Float@status:	
  2801                           
  2802                           ; 2 bytes @ 0x39
  2803  0059                     	ds	2
  2804  005B                     OLED_Write_Float@buf11:	
  2805                           
  2806                           ; 1 bytes @ 0x3B
  2807  005B                     	ds	1
  2808  005C                     ??_main:	
  2809                           
  2810                           ; 1 bytes @ 0x3C
  2811  005C                     	ds	2
  2812  005E                     main@count:	
  2813                           
  2814                           ; 2 bytes @ 0x3E
  2815  005E                     	ds	2
  2816  0060                     main@dec:	
  2817                           
  2818                           ; 3 bytes @ 0x40
  2819  0060                     	ds	3
  2820                           
  2821                           	psect	maintext
  2822  04E4                     __pmaintext:	
  2823 ;;
  2824 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2825 ;;
  2826 ;; *************** function _main *****************
  2827 ;; Defined at:
  2828 ;;		line 87 in file "Main.c"
  2829 ;; Parameters:    Size  Location     Type
  2830 ;;		None
  2831 ;; Auto vars:     Size  Location     Type
  2832 ;;  dec             3   64[BANK0 ] float 
  2833 ;;  count           2   62[BANK0 ] int 
  2834 ;; Return value:  Size  Location     Type
  2835 ;;                  1    wreg      void 
  2836 ;; Registers used:
  2837 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2838 ;; Tracked objects:
  2839 ;;		On entry : B1F/0
  2840 ;;		On exit  : 0/0
  2841 ;;		Unchanged: 0/0
  2842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2844 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2845 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2846 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2847 ;;Total ram usage:        7 bytes
  2848 ;; Hardware stack levels required when called:    5
  2849 ;; This function calls:
  2850 ;;		_I2C_Init
  2851 ;;		_OLED_Clear
  2852 ;;		_OLED_Init
  2853 ;;		_OLED_Write_Float
  2854 ;;		_OLED_Write_Integer
  2855 ;;		_OLED_Write_String
  2856 ;;		_OLED_YX
  2857 ;;		___ftadd
  2858 ;;		___ftge
  2859 ;;		_initMain
  2860 ;; This function is called by:
  2861 ;;		Startup code after reset
  2862 ;; This function uses a non-reentrant model
  2863 ;;
  2864                           
  2865                           
  2866                           ;psect for function _main
  2867  04E4                     _main:	
  2868                           
  2869                           ;Main.c: 88: initMain();
  2870                           
  2871                           ;incstack = 0
  2872                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2873  04E4  318E  2678  3184   	fcall	_initMain
  2874                           
  2875                           ;Main.c: 91: I2C_Init();
  2876  04E7  318D  254A  3184   	fcall	_I2C_Init
  2877                           
  2878                           ;Main.c: 93: _delay((unsigned long)((100)*(16000000/4000.0)));
  2879  04EA  3003               	movlw	3
  2880  04EB  0020               	movlb	0	; select bank0
  2881  04EC  00DD               	movwf	??_main+1
  2882  04ED  3008               	movlw	8
  2883  04EE  00DC               	movwf	??_main
  2884  04EF  3077               	movlw	119
  2885  04F0                     u2897:	
  2886  04F0  0B89               	decfsz	9,f
  2887  04F1  2CF0               	goto	u2897
  2888  04F2  0BDC               	decfsz	??_main,f
  2889  04F3  2CF0               	goto	u2897
  2890  04F4  0BDD               	decfsz	??_main+1,f
  2891  04F5  2CF0               	goto	u2897
  2892                           
  2893                           ;Main.c: 96: OLED_Init();
  2894  04F6  3180  206C  3184   	fcall	_OLED_Init
  2895                           
  2896                           ;Main.c: 99: OLED_Clear();
  2897  04F9  318E  26CC  3184   	fcall	_OLED_Clear
  2898                           
  2899                           ;Main.c: 102: int count = 0;
  2900  04FC  0020               	movlb	0	; select bank0
  2901  04FD  01DE               	clrf	main@count
  2902  04FE  01DF               	clrf	main@count+1
  2903                           
  2904                           ;Main.c: 103: float dec = 0.0;
  2905  04FF  3000               	movlw	0
  2906  0500  00E0               	movwf	main@dec
  2907  0501  3000               	movlw	0
  2908  0502  00E1               	movwf	main@dec+1
  2909  0503  3000               	movlw	0
  2910  0504  00E2               	movwf	main@dec+2
  2911  0505                     l2161:	
  2912                           ;Main.c: 105: while ( 1 ) {
  2913                           
  2914                           
  2915                           ;Main.c: 111: OLED_YX( 0, 0 );
  2916  0505  01F5               	clrf	OLED_YX@Column
  2917  0506  3000               	movlw	0
  2918  0507  318E  2628  3184   	fcall	_OLED_YX
  2919                           
  2920                           ;Main.c: 112: OLED_Write_String( "OLED SSD1306" );
  2921  050A  3037               	movlw	low (STR_1| (0+32768))
  2922  050B  00FC               	movwf	OLED_Write_String@s
  2923  050C  308B               	movlw	high (STR_1| (0+32768))
  2924  050D  00FD               	movwf	OLED_Write_String@s+1
  2925  050E  318D  255A  3184   	fcall	_OLED_Write_String
  2926                           
  2927                           ;Main.c: 114: OLED_YX(1, 0);
  2928  0511  01F5               	clrf	OLED_YX@Column
  2929  0512  3001               	movlw	1
  2930  0513  318E  2628  3184   	fcall	_OLED_YX
  2931                           
  2932                           ;Main.c: 115: OLED_Write_String ("No Buffer");
  2933  0516  3069               	movlw	low (STR_2| (0+32768))
  2934  0517  00FC               	movwf	OLED_Write_String@s
  2935  0518  308B               	movlw	high (STR_2| (0+32768))
  2936  0519  00FD               	movwf	OLED_Write_String@s+1
  2937  051A  318D  255A  3184   	fcall	_OLED_Write_String
  2938                           
  2939                           ;Main.c: 117: OLED_YX(2, 0);
  2940  051D  01F5               	clrf	OLED_YX@Column
  2941  051E  3002               	movlw	2
  2942  051F  318E  2628  3184   	fcall	_OLED_YX
  2943                           
  2944                           ;Main.c: 118: OLED_Write_String("For XC8");
  2945  0522  3073               	movlw	low (STR_3| (0+32768))
  2946  0523  00FC               	movwf	OLED_Write_String@s
  2947  0524  308B               	movlw	high (STR_3| (0+32768))
  2948  0525  00FD               	movwf	OLED_Write_String@s+1
  2949  0526  318D  255A  3184   	fcall	_OLED_Write_String
  2950                           
  2951                           ;Main.c: 120: OLED_YX(3,0);
  2952  0529  01F5               	clrf	OLED_YX@Column
  2953  052A  3003               	movlw	3
  2954  052B  318E  2628  3184   	fcall	_OLED_YX
  2955                           
  2956                           ;Main.c: 121: OLED_Write_String("by Armstrong");
  2957  052E  3051               	movlw	low (STR_4| (0+32768))
  2958  052F  00FC               	movwf	OLED_Write_String@s
  2959  0530  308B               	movlw	high (STR_4| (0+32768))
  2960  0531  00FD               	movwf	OLED_Write_String@s+1
  2961  0532  318D  255A  3184   	fcall	_OLED_Write_String
  2962                           
  2963                           ;Main.c: 123: _delay((unsigned long)((1000)*(16000000/4000.0)));
  2964  0535  3015               	movlw	21
  2965  0536  0020               	movlb	0	; select bank0
  2966  0537  00DD               	movwf	??_main+1
  2967  0538  304B               	movlw	75
  2968  0539  00DC               	movwf	??_main
  2969  053A  30BE               	movlw	190
  2970  053B                     u2907:	
  2971  053B  0B89               	decfsz	9,f
  2972  053C  2D3B               	goto	u2907
  2973  053D  0BDC               	decfsz	??_main,f
  2974  053E  2D3B               	goto	u2907
  2975  053F  0BDD               	decfsz	??_main+1,f
  2976  0540  2D3B               	goto	u2907
  2977  0541  0000               	nop
  2978                           
  2979                           ;Main.c: 124: OLED_Clear();
  2980  0542  318E  26CC  3184   	fcall	_OLED_Clear
  2981                           
  2982                           ;Main.c: 125: _delay((unsigned long)((100)*(16000000/4000.0)));
  2983  0545  3003               	movlw	3
  2984  0546  0020               	movlb	0	; select bank0
  2985  0547  00DD               	movwf	??_main+1
  2986  0548  3008               	movlw	8
  2987  0549  00DC               	movwf	??_main
  2988  054A  3077               	movlw	119
  2989  054B                     u2917:	
  2990  054B  0B89               	decfsz	9,f
  2991  054C  2D4B               	goto	u2917
  2992  054D  0BDC               	decfsz	??_main,f
  2993  054E  2D4B               	goto	u2917
  2994  054F  0BDD               	decfsz	??_main+1,f
  2995  0550  2D4B               	goto	u2917
  2996                           
  2997                           ;Main.c: 131: for (count = 0; count <= 100; count++){
  2998  0551  0020               	movlb	0	; select bank0
  2999  0552  01DE               	clrf	main@count
  3000  0553  01DF               	clrf	main@count+1
  3001  0554  085F               	movf	main@count+1,w
  3002  0555  3A80               	xorlw	128
  3003  0556  00DC               	movwf	??_main
  3004  0557  3080               	movlw	128
  3005  0558  025C               	subwf	??_main,w
  3006  0559  1D03               	skipz
  3007  055A  2D5D               	goto	u2855
  3008  055B  3065               	movlw	101
  3009  055C  025E               	subwf	main@count,w
  3010  055D                     u2855:	
  3011  055D  1803               	btfsc	3,0
  3012  055E  2D91               	goto	l2199
  3013  055F                     l2187:	
  3014                           
  3015                           ;Main.c: 132: OLED_YX( 0, 0 );
  3016  055F  01F5               	clrf	OLED_YX@Column
  3017  0560  3000               	movlw	0
  3018  0561  318E  2628  3184   	fcall	_OLED_YX
  3019                           
  3020                           ;Main.c: 133: OLED_Write_String( "Integer Count:" );
  3021  0564  3028               	movlw	low (STR_5| (0+32768))
  3022  0565  00FC               	movwf	OLED_Write_String@s
  3023  0566  308B               	movlw	high (STR_5| (0+32768))
  3024  0567  00FD               	movwf	OLED_Write_String@s+1
  3025  0568  318D  255A  3184   	fcall	_OLED_Write_String
  3026                           
  3027                           ;Main.c: 134: OLED_YX(2, 0);
  3028  056B  01F5               	clrf	OLED_YX@Column
  3029  056C  3002               	movlw	2
  3030  056D  318E  2628  3184   	fcall	_OLED_YX
  3031                           
  3032                           ;Main.c: 135: OLED_Write_Integer(count);
  3033  0570  0020               	movlb	0	; select bank0
  3034  0571  085E               	movf	main@count,w
  3035  0572  318D  25C5  3184   	fcall	_OLED_Write_Integer
  3036                           
  3037                           ;Main.c: 136: _delay((unsigned long)((100)*(16000000/4000.0)));
  3038  0575  3003               	movlw	3
  3039  0576  0020               	movlb	0	; select bank0
  3040  0577  00DD               	movwf	??_main+1
  3041  0578  3008               	movlw	8
  3042  0579  00DC               	movwf	??_main
  3043  057A  3077               	movlw	119
  3044  057B                     u2927:	
  3045  057B  0B89               	decfsz	9,f
  3046  057C  2D7B               	goto	u2927
  3047  057D  0BDC               	decfsz	??_main,f
  3048  057E  2D7B               	goto	u2927
  3049  057F  0BDD               	decfsz	??_main+1,f
  3050  0580  2D7B               	goto	u2927
  3051  0581  3001               	movlw	1
  3052  0582  0020               	movlb	0	; select bank0
  3053  0583  07DE               	addwf	main@count,f
  3054  0584  3000               	movlw	0
  3055  0585  3DDF               	addwfc	main@count+1,f
  3056  0586  085F               	movf	main@count+1,w
  3057  0587  3A80               	xorlw	128
  3058  0588  00DC               	movwf	??_main
  3059  0589  3080               	movlw	128
  3060  058A  025C               	subwf	??_main,w
  3061  058B  1D03               	skipz
  3062  058C  2D8F               	goto	u2865
  3063  058D  3065               	movlw	101
  3064  058E  025E               	subwf	main@count,w
  3065  058F                     u2865:	
  3066  058F  1C03               	skipc
  3067  0590  2D5F               	goto	l2187
  3068  0591                     l2199:	
  3069                           
  3070                           ;Main.c: 137: }
  3071                           ;Main.c: 139: OLED_Clear();
  3072  0591  318E  26CC  3184   	fcall	_OLED_Clear
  3073                           
  3074                           ;Main.c: 140: _delay((unsigned long)((100)*(16000000/4000.0)));
  3075  0594  3003               	movlw	3
  3076  0595  0020               	movlb	0	; select bank0
  3077  0596  00DD               	movwf	??_main+1
  3078  0597  3008               	movlw	8
  3079  0598  00DC               	movwf	??_main
  3080  0599  3077               	movlw	119
  3081  059A                     u2937:	
  3082  059A  0B89               	decfsz	9,f
  3083  059B  2D9A               	goto	u2937
  3084  059C  0BDC               	decfsz	??_main,f
  3085  059D  2D9A               	goto	u2937
  3086  059E  0BDD               	decfsz	??_main+1,f
  3087  059F  2D9A               	goto	u2937
  3088                           
  3089                           ;Main.c: 147: for(dec = 0.0; dec <= 20.0; dec+= 0.5)
  3090  05A0  3000               	movlw	0
  3091  05A1  0020               	movlb	0	; select bank0
  3092  05A2  00E0               	movwf	main@dec
  3093  05A3  3000               	movlw	0
  3094  05A4  00E1               	movwf	main@dec+1
  3095  05A5  3000               	movlw	0
  3096  05A6  00E2               	movwf	main@dec+2
  3097  05A7  3000               	movlw	0
  3098  05A8  00F0               	movwf	___ftge@ff1
  3099  05A9  30A0               	movlw	160
  3100  05AA  00F1               	movwf	___ftge@ff1+1
  3101  05AB  3041               	movlw	65
  3102  05AC  00F2               	movwf	___ftge@ff1+2
  3103  05AD  0860               	movf	main@dec,w
  3104  05AE  00F3               	movwf	___ftge@ff2
  3105  05AF  0861               	movf	main@dec+1,w
  3106  05B0  00F4               	movwf	___ftge@ff2+1
  3107  05B1  0862               	movf	main@dec+2,w
  3108  05B2  00F5               	movwf	___ftge@ff2+2
  3109  05B3  318F  2730  3184   	fcall	___ftge
  3110  05B6  1C03               	btfss	3,0
  3111  05B7  2E07               	goto	l2221
  3112  05B8                     l2209:	
  3113                           
  3114                           ;Main.c: 148: {
  3115                           ;Main.c: 149: OLED_YX( 0, 0 );
  3116  05B8  01F5               	clrf	OLED_YX@Column
  3117  05B9  3000               	movlw	0
  3118  05BA  318E  2628  3184   	fcall	_OLED_YX
  3119                           
  3120                           ;Main.c: 150: OLED_Write_String( "Float Count:" );
  3121  05BD  3044               	movlw	low (STR_6| (0+32768))
  3122  05BE  00FC               	movwf	OLED_Write_String@s
  3123  05BF  308B               	movlw	high (STR_6| (0+32768))
  3124  05C0  00FD               	movwf	OLED_Write_String@s+1
  3125  05C1  318D  255A  3184   	fcall	_OLED_Write_String
  3126                           
  3127                           ;Main.c: 151: OLED_YX(2, 0);
  3128  05C4  01F5               	clrf	OLED_YX@Column
  3129  05C5  3002               	movlw	2
  3130  05C6  318E  2628  3184   	fcall	_OLED_YX
  3131                           
  3132                           ;Main.c: 152: OLED_Write_Float(dec);
  3133  05C9  0020               	movlb	0	; select bank0
  3134  05CA  0860               	movf	main@dec,w
  3135  05CB  00D4               	movwf	OLED_Write_Float@f
  3136  05CC  0861               	movf	main@dec+1,w
  3137  05CD  00D5               	movwf	OLED_Write_Float@f+1
  3138  05CE  0862               	movf	main@dec+2,w
  3139  05CF  00D6               	movwf	OLED_Write_Float@f+2
  3140  05D0  318D  25E4  3184   	fcall	_OLED_Write_Float
  3141                           
  3142                           ;Main.c: 153: _delay((unsigned long)((100)*(16000000/4000.0)));
  3143  05D3  3003               	movlw	3
  3144  05D4  0020               	movlb	0	; select bank0
  3145  05D5  00DD               	movwf	??_main+1
  3146  05D6  3008               	movlw	8
  3147  05D7  00DC               	movwf	??_main
  3148  05D8  3077               	movlw	119
  3149  05D9                     u2947:	
  3150  05D9  0B89               	decfsz	9,f
  3151  05DA  2DD9               	goto	u2947
  3152  05DB  0BDC               	decfsz	??_main,f
  3153  05DC  2DD9               	goto	u2947
  3154  05DD  0BDD               	decfsz	??_main+1,f
  3155  05DE  2DD9               	goto	u2947
  3156  05DF  3000               	movlw	0
  3157  05E0  00F8               	movwf	___ftadd@f1
  3158  05E1  3000               	movlw	0
  3159  05E2  00F9               	movwf	___ftadd@f1+1
  3160  05E3  303F               	movlw	63
  3161  05E4  00FA               	movwf	___ftadd@f1+2
  3162  05E5  0020               	movlb	0	; select bank0
  3163  05E6  0860               	movf	main@dec,w
  3164  05E7  00FB               	movwf	___ftadd@f2
  3165  05E8  0861               	movf	main@dec+1,w
  3166  05E9  00FC               	movwf	___ftadd@f2+1
  3167  05EA  0862               	movf	main@dec+2,w
  3168  05EB  00FD               	movwf	___ftadd@f2+2
  3169  05EC  3183  23EF  3184   	fcall	___ftadd
  3170  05EF  0878               	movf	?___ftadd,w
  3171  05F0  0020               	movlb	0	; select bank0
  3172  05F1  00E0               	movwf	main@dec
  3173  05F2  0879               	movf	?___ftadd+1,w
  3174  05F3  00E1               	movwf	main@dec+1
  3175  05F4  087A               	movf	?___ftadd+2,w
  3176  05F5  00E2               	movwf	main@dec+2
  3177  05F6  3000               	movlw	0
  3178  05F7  00F0               	movwf	___ftge@ff1
  3179  05F8  30A0               	movlw	160
  3180  05F9  00F1               	movwf	___ftge@ff1+1
  3181  05FA  3041               	movlw	65
  3182  05FB  00F2               	movwf	___ftge@ff1+2
  3183  05FC  0860               	movf	main@dec,w
  3184  05FD  00F3               	movwf	___ftge@ff2
  3185  05FE  0861               	movf	main@dec+1,w
  3186  05FF  00F4               	movwf	___ftge@ff2+1
  3187  0600  0862               	movf	main@dec+2,w
  3188  0601  00F5               	movwf	___ftge@ff2+2
  3189  0602  318F  2730  3184   	fcall	___ftge
  3190  0605  1803               	btfsc	3,0
  3191  0606  2DB8               	goto	l2209
  3192  0607                     l2221:	
  3193                           
  3194                           ;Main.c: 154: }
  3195                           ;Main.c: 157: _delay((unsigned long)((100)*(16000000/4000.0)));
  3196  0607  3003               	movlw	3
  3197  0608  0020               	movlb	0	; select bank0
  3198  0609  00DD               	movwf	??_main+1
  3199  060A  3008               	movlw	8
  3200  060B  00DC               	movwf	??_main
  3201  060C  3077               	movlw	119
  3202  060D                     u2957:	
  3203  060D  0B89               	decfsz	9,f
  3204  060E  2E0D               	goto	u2957
  3205  060F  0BDC               	decfsz	??_main,f
  3206  0610  2E0D               	goto	u2957
  3207  0611  0BDD               	decfsz	??_main+1,f
  3208  0612  2E0D               	goto	u2957
  3209                           
  3210                           ;Main.c: 158: OLED_Clear();
  3211  0613  318E  26CC  3184   	fcall	_OLED_Clear
  3212  0616  2D05               	goto	l2161
  3213  0617                     __end_of_main:	
  3214                           ;Main.c: 159: }
  3215                           ;Main.c: 161: return;
  3216                           
  3217                           
  3218                           	psect	text1
  3219  0E78                     __ptext1:	
  3220 ;; *************** function _initMain *****************
  3221 ;; Defined at:
  3222 ;;		line 47 in file "Main.c"
  3223 ;; Parameters:    Size  Location     Type
  3224 ;;		None
  3225 ;; Auto vars:     Size  Location     Type
  3226 ;;		None
  3227 ;; Return value:  Size  Location     Type
  3228 ;;                  1    wreg      void 
  3229 ;; Registers used:
  3230 ;;		wreg, status,2, status,0, pclath, cstack
  3231 ;; Tracked objects:
  3232 ;;		On entry : 0/0
  3233 ;;		On exit  : 0/0
  3234 ;;		Unchanged: 0/0
  3235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3240 ;;Total ram usage:        0 bytes
  3241 ;; Hardware stack levels used:    1
  3242 ;; Hardware stack levels required when called:    1
  3243 ;; This function calls:
  3244 ;;		_internal_16
  3245 ;; This function is called by:
  3246 ;;		_main
  3247 ;; This function uses a non-reentrant model
  3248 ;;
  3249                           
  3250                           
  3251                           ;psect for function _initMain
  3252  0E78                     _initMain:	
  3253                           
  3254                           ;Main.c: 50: internal_16();
  3255                           
  3256                           ;incstack = 0
  3257                           ; Regs used in _initMain: [wreg+status,2+status,0+pclath+cstack]
  3258  0E78  318D  2533         	fcall	_internal_16
  3259                           
  3260                           ;Main.c: 57: ANSELCbits.ANSC4 = 0;
  3261  0E7A  0023               	movlb	3	; select bank3
  3262  0E7B  120E               	bcf	14,4	;volatile
  3263                           
  3264                           ;Main.c: 58: ANSELCbits.ANSC5 = 0;
  3265  0E7C  128E               	bcf	14,5	;volatile
  3266                           
  3267                           ;Main.c: 60: TRISCbits.TRISC4 = 1;
  3268  0E7D  0021               	movlb	1	; select bank1
  3269  0E7E  160E               	bsf	14,4	;volatile
  3270                           
  3271                           ;Main.c: 61: TRISCbits.TRISC5 = 1;
  3272  0E7F  168E               	bsf	14,5	;volatile
  3273                           
  3274                           ;Main.c: 63: PPSLOCK = 0x55;
  3275  0E80  3055               	movlw	85
  3276  0E81  003C               	movlb	28	; select bank28
  3277  0E82  008F               	movwf	15	;volatile
  3278                           
  3279                           ;Main.c: 64: PPSLOCK = 0xAA;
  3280  0E83  30AA               	movlw	170
  3281  0E84  008F               	movwf	15	;volatile
  3282                           
  3283                           ;Main.c: 65: PPSLOCKbits.PPSLOCKED = 0x00;
  3284  0E85  100F               	bcf	15,0	;volatile
  3285                           
  3286                           ;Main.c: 67: RC4PPSbits.RC4PPS = 0x0011;
  3287  0E86  003D               	movlb	29	; select bank29
  3288  0E87  0824               	movf	36,w	;volatile
  3289  0E88  39E0               	andlw	-32
  3290  0E89  3811               	iorlw	17
  3291  0E8A  00A4               	movwf	36	;volatile
  3292                           
  3293                           ;Main.c: 68: SSPDATPPSbits.SSPDATPPS = 0x0014;
  3294  0E8B  003C               	movlb	28	; select bank28
  3295  0E8C  0821               	movf	33,w	;volatile
  3296  0E8D  39E0               	andlw	-32
  3297  0E8E  3814               	iorlw	20
  3298  0E8F  00A1               	movwf	33	;volatile
  3299                           
  3300                           ;Main.c: 69: SSPCLKPPSbits.SSPCLKPPS = 0x0015;
  3301  0E90  0820               	movf	32,w	;volatile
  3302  0E91  39E0               	andlw	-32
  3303  0E92  3815               	iorlw	21
  3304  0E93  00A0               	movwf	32	;volatile
  3305                           
  3306                           ;Main.c: 70: RC5PPSbits.RC5PPS = 0x0010;
  3307  0E94  003D               	movlb	29	; select bank29
  3308  0E95  0825               	movf	37,w	;volatile
  3309  0E96  39E0               	andlw	-32
  3310  0E97  3810               	iorlw	16
  3311  0E98  00A5               	movwf	37	;volatile
  3312                           
  3313                           ;Main.c: 72: PPSLOCK = 0x55;
  3314  0E99  3055               	movlw	85
  3315  0E9A  003C               	movlb	28	; select bank28
  3316  0E9B  008F               	movwf	15	;volatile
  3317                           
  3318                           ;Main.c: 73: PPSLOCK = 0xAA;
  3319  0E9C  30AA               	movlw	170
  3320  0E9D  008F               	movwf	15	;volatile
  3321                           
  3322                           ;Main.c: 74: PPSLOCKbits.PPSLOCKED = 0x01;
  3323  0E9E  140F               	bsf	15,0	;volatile
  3324  0E9F  0008               	return
  3325  0EA0                     __end_of_initMain:	
  3326                           
  3327                           	psect	text2
  3328  0D33                     __ptext2:	
  3329 ;; *************** function _internal_16 *****************
  3330 ;; Defined at:
  3331 ;;		line 56 in file "16F1717_Internal.c"
  3332 ;; Parameters:    Size  Location     Type
  3333 ;;		None
  3334 ;; Auto vars:     Size  Location     Type
  3335 ;;		None
  3336 ;; Return value:  Size  Location     Type
  3337 ;;                  1    wreg      void 
  3338 ;; Registers used:
  3339 ;;		None
  3340 ;; Tracked objects:
  3341 ;;		On entry : 0/0
  3342 ;;		On exit  : 0/0
  3343 ;;		Unchanged: 0/0
  3344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3349 ;;Total ram usage:        0 bytes
  3350 ;; Hardware stack levels used:    1
  3351 ;; This function calls:
  3352 ;;		Nothing
  3353 ;; This function is called by:
  3354 ;;		_initMain
  3355 ;; This function uses a non-reentrant model
  3356 ;;
  3357                           
  3358                           
  3359                           ;psect for function _internal_16
  3360  0D33                     _internal_16:	
  3361                           
  3362                           ;16F1717_Internal.c: 58: SCS0 = 0;
  3363                           
  3364                           ;incstack = 0
  3365                           ; Regs used in _internal_16: []
  3366  0D33  0021               	movlb	1	; select bank1
  3367  0D34  1019               	bcf	25,0	;volatile
  3368                           
  3369                           ;16F1717_Internal.c: 59: SCS1 = 0;
  3370  0D35  1099               	bcf	25,1	;volatile
  3371                           
  3372                           ;16F1717_Internal.c: 62: IRCF0 = 1;
  3373  0D36  1599               	bsf	25,3	;volatile
  3374                           
  3375                           ;16F1717_Internal.c: 63: IRCF1 = 1;
  3376  0D37  1619               	bsf	25,4	;volatile
  3377                           
  3378                           ;16F1717_Internal.c: 64: IRCF2 = 1;
  3379  0D38  1699               	bsf	25,5	;volatile
  3380                           
  3381                           ;16F1717_Internal.c: 65: IRCF3 = 1;
  3382  0D39  1719               	bsf	25,6	;volatile
  3383                           
  3384                           ;16F1717_Internal.c: 68: SPLLEN = 0;
  3385  0D3A  1399               	bcf	25,7	;volatile
  3386  0D3B  0008               	return
  3387  0D3C                     __end_of_internal_16:	
  3388                           
  3389                           	psect	text3
  3390  0DC5                     __ptext3:	
  3391 ;; *************** function _OLED_Write_Integer *****************
  3392 ;; Defined at:
  3393 ;;		line 299 in file "oled.c"
  3394 ;; Parameters:    Size  Location     Type
  3395 ;;  i               1    wreg     unsigned char 
  3396 ;; Auto vars:     Size  Location     Type
  3397 ;;  i               1   43[BANK0 ] unsigned char 
  3398 ;;  s              20   23[BANK0 ] unsigned char [20]
  3399 ;; Return value:  Size  Location     Type
  3400 ;;                  1    wreg      void 
  3401 ;; Registers used:
  3402 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3403 ;; Tracked objects:
  3404 ;;		On entry : 0/0
  3405 ;;		On exit  : 0/0
  3406 ;;		Unchanged: 0/0
  3407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3409 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3410 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3411 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3412 ;;Total ram usage:       23 bytes
  3413 ;; Hardware stack levels used:    1
  3414 ;; Hardware stack levels required when called:    3
  3415 ;; This function calls:
  3416 ;;		_OLED_Write_String
  3417 ;;		_itoa
  3418 ;; This function is called by:
  3419 ;;		_main
  3420 ;; This function uses a non-reentrant model
  3421 ;;
  3422                           
  3423                           
  3424                           ;psect for function _OLED_Write_Integer
  3425  0DC5                     _OLED_Write_Integer:	
  3426                           
  3427                           ;incstack = 0
  3428                           ; Regs used in _OLED_Write_Integer: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3429                           ;OLED_Write_Integer@i stored from wreg
  3430  0DC5  0020               	movlb	0	; select bank0
  3431  0DC6  00CB               	movwf	OLED_Write_Integer@i
  3432                           
  3433                           ;oled.c: 301: char s[20];
  3434                           ;oled.c: 302: itoa( s, i, 10 );
  3435  0DC7  084B               	movf	OLED_Write_Integer@i,w
  3436  0DC8  00B5               	movwf	??_OLED_Write_Integer
  3437  0DC9  01B6               	clrf	??_OLED_Write_Integer+1
  3438  0DCA  0835               	movf	??_OLED_Write_Integer,w
  3439  0DCB  00A4               	movwf	itoa@val
  3440  0DCC  0836               	movf	??_OLED_Write_Integer+1,w
  3441  0DCD  00A5               	movwf	itoa@val+1
  3442  0DCE  300A               	movlw	10
  3443  0DCF  00A6               	movwf	itoa@base
  3444  0DD0  3000               	movlw	0
  3445  0DD1  00A7               	movwf	itoa@base+1
  3446  0DD2  3037               	movlw	(low (OLED_Write_Integer@s| 0))& (0+255)
  3447  0DD3  318E  2604  318D   	fcall	_itoa
  3448                           
  3449                           ;oled.c: 303: OLED_Write_String( s );
  3450  0DD6  3037               	movlw	low OLED_Write_Integer@s
  3451  0DD7  00FC               	movwf	OLED_Write_String@s
  3452  0DD8  3000               	movlw	high OLED_Write_Integer@s
  3453  0DD9  00FD               	movwf	OLED_Write_String@s+1
  3454  0DDA  318D  255A  318D   	fcall	_OLED_Write_String
  3455                           
  3456                           ;oled.c: 304: OLED_Write_String( "     " );
  3457  0DDD  307B               	movlw	low (STR_7| (0+32768))
  3458  0DDE  00FC               	movwf	OLED_Write_String@s
  3459  0DDF  308B               	movlw	high (STR_7| (0+32768))
  3460  0DE0  00FD               	movwf	OLED_Write_String@s+1
  3461  0DE1  318D  255A         	fcall	_OLED_Write_String
  3462  0DE3  0008               	return
  3463  0DE4                     __end_of_OLED_Write_Integer:	
  3464                           
  3465                           	psect	text4
  3466  0E04                     __ptext4:	
  3467 ;; *************** function _itoa *****************
  3468 ;; Defined at:
  3469 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\itoa.c"
  3470 ;; Parameters:    Size  Location     Type
  3471 ;;  buf             1    wreg     PTR unsigned char 
  3472 ;;		 -> OLED_Write_Integer@s(20), 
  3473 ;;  val             2    4[BANK0 ] int 
  3474 ;;  base            2    6[BANK0 ] int 
  3475 ;; Auto vars:     Size  Location     Type
  3476 ;;  buf             1    9[BANK0 ] PTR unsigned char 
  3477 ;;		 -> OLED_Write_Integer@s(20), 
  3478 ;;  cp              1    8[BANK0 ] PTR unsigned char 
  3479 ;;		 -> OLED_Write_Integer@s(20), 
  3480 ;; Return value:  Size  Location     Type
  3481 ;;                  1    wreg      PTR unsigned char 
  3482 ;; Registers used:
  3483 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3484 ;; Tracked objects:
  3485 ;;		On entry : 0/0
  3486 ;;		On exit  : 0/0
  3487 ;;		Unchanged: 0/0
  3488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3489 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3490 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3491 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3492 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3493 ;;Total ram usage:        7 bytes
  3494 ;; Hardware stack levels used:    1
  3495 ;; Hardware stack levels required when called:    2
  3496 ;; This function calls:
  3497 ;;		_utoa
  3498 ;; This function is called by:
  3499 ;;		_OLED_Write_Integer
  3500 ;; This function uses a non-reentrant model
  3501 ;;
  3502                           
  3503                           
  3504                           ;psect for function _itoa
  3505  0E04                     _itoa:	
  3506                           
  3507                           ;incstack = 0
  3508                           ; Regs used in _itoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3509                           ;itoa@buf stored from wreg
  3510  0E04  0020               	movlb	0	; select bank0
  3511  0E05  00A9               	movwf	itoa@buf
  3512  0E06  0829               	movf	itoa@buf,w
  3513  0E07  00FD               	movwf	??_itoa
  3514  0E08  087D               	movf	??_itoa,w
  3515  0E09  00A8               	movwf	itoa@cp
  3516  0E0A  1FA5               	btfss	itoa@val+1,7
  3517  0E0B  2E1C               	goto	l2053
  3518  0E0C  302D               	movlw	45
  3519  0E0D  00FD               	movwf	??_itoa
  3520  0E0E  0829               	movf	itoa@buf,w
  3521  0E0F  0086               	movwf	6
  3522  0E10  0187               	clrf	7
  3523  0E11  087D               	movf	??_itoa,w
  3524  0E12  0081               	movwf	1
  3525  0E13  3001               	movlw	1
  3526  0E14  00FD               	movwf	??_itoa
  3527  0E15  087D               	movf	??_itoa,w
  3528  0E16  07A9               	addwf	itoa@buf,f
  3529  0E17  09A4               	comf	itoa@val,f
  3530  0E18  09A5               	comf	itoa@val+1,f
  3531  0E19  0AA4               	incf	itoa@val,f
  3532  0E1A  1903               	skipnz
  3533  0E1B  0AA5               	incf	itoa@val+1,f
  3534  0E1C                     l2053:	
  3535  0E1C  0825               	movf	itoa@val+1,w
  3536  0E1D  00F9               	movwf	utoa@val+1
  3537  0E1E  0824               	movf	itoa@val,w
  3538  0E1F  00F8               	movwf	utoa@val
  3539  0E20  0827               	movf	itoa@base+1,w
  3540  0E21  00FB               	movwf	utoa@base+1
  3541  0E22  0826               	movf	itoa@base,w
  3542  0E23  00FA               	movwf	utoa@base
  3543  0E24  0829               	movf	itoa@buf,w
  3544  0E25  3180  200A         	fcall	_utoa
  3545  0E27  0008               	return
  3546  0E28                     __end_of_itoa:	
  3547                           ;	Return value of _itoa is never used
  3548                           
  3549                           
  3550                           	psect	text5
  3551  000A                     __ptext5:	
  3552 ;; *************** function _utoa *****************
  3553 ;; Defined at:
  3554 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\itoa.c"
  3555 ;; Parameters:    Size  Location     Type
  3556 ;;  buf             1    wreg     PTR unsigned char 
  3557 ;;		 -> OLED_Write_Integer@s(20), 
  3558 ;;  val             2    8[COMMON] unsigned int 
  3559 ;;  base            2   10[COMMON] int 
  3560 ;; Auto vars:     Size  Location     Type
  3561 ;;  buf             1    3[BANK0 ] PTR unsigned char 
  3562 ;;		 -> OLED_Write_Integer@s(20), 
  3563 ;;  v               2    0[BANK0 ] unsigned int 
  3564 ;;  c               1    2[BANK0 ] unsigned char 
  3565 ;; Return value:  Size  Location     Type
  3566 ;;                  1    wreg      PTR unsigned char 
  3567 ;; Registers used:
  3568 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3569 ;; Tracked objects:
  3570 ;;		On entry : 0/0
  3571 ;;		On exit  : 0/0
  3572 ;;		Unchanged: 0/0
  3573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3574 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3575 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3576 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3577 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3578 ;;Total ram usage:        9 bytes
  3579 ;; Hardware stack levels used:    1
  3580 ;; Hardware stack levels required when called:    1
  3581 ;; This function calls:
  3582 ;;		___lwdiv
  3583 ;;		___lwmod
  3584 ;; This function is called by:
  3585 ;;		_itoa
  3586 ;; This function uses a non-reentrant model
  3587 ;;
  3588                           
  3589                           
  3590                           ;psect for function _utoa
  3591  000A                     _utoa:	
  3592                           
  3593                           ;incstack = 0
  3594                           ; Regs used in _utoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3595                           ;utoa@buf stored from wreg
  3596  000A  0020               	movlb	0	; select bank0
  3597  000B  00A3               	movwf	utoa@buf
  3598  000C  0879               	movf	utoa@val+1,w
  3599  000D  00A1               	movwf	utoa@v+1
  3600  000E  0878               	movf	utoa@val,w
  3601  000F  00A0               	movwf	utoa@v
  3602  0010                     l1993:	
  3603  0010  087B               	movf	utoa@base+1,w
  3604  0011  00F1               	movwf	___lwdiv@divisor+1
  3605  0012  087A               	movf	utoa@base,w
  3606  0013  00F0               	movwf	___lwdiv@divisor
  3607  0014  0821               	movf	utoa@v+1,w
  3608  0015  00F3               	movwf	___lwdiv@dividend+1
  3609  0016  0820               	movf	utoa@v,w
  3610  0017  00F2               	movwf	___lwdiv@dividend
  3611  0018  318E  26FC  3180   	fcall	___lwdiv
  3612  001B  0871               	movf	?___lwdiv+1,w
  3613  001C  0020               	movlb	0	; select bank0
  3614  001D  00A1               	movwf	utoa@v+1
  3615  001E  0870               	movf	?___lwdiv,w
  3616  001F  00A0               	movwf	utoa@v
  3617  0020  3001               	movlw	1
  3618  0021  00FC               	movwf	??_utoa
  3619  0022  087C               	movf	??_utoa,w
  3620  0023  07A3               	addwf	utoa@buf,f
  3621  0024  0820               	movf	utoa@v,w
  3622  0025  0421               	iorwf	utoa@v+1,w
  3623  0026  1D03               	btfss	3,2
  3624  0027  2810               	goto	l1993
  3625  0028  0823               	movf	utoa@buf,w
  3626  0029  0086               	movwf	6
  3627  002A  0187               	clrf	7
  3628  002B  0181               	clrf	1
  3629  002C  3001               	movlw	1
  3630  002D  02A3               	subwf	utoa@buf,f
  3631  002E                     l2003:	
  3632  002E  087B               	movf	utoa@base+1,w
  3633  002F  00F1               	movwf	___lwmod@divisor+1
  3634  0030  087A               	movf	utoa@base,w
  3635  0031  00F0               	movwf	___lwmod@divisor
  3636  0032  0879               	movf	utoa@val+1,w
  3637  0033  00F3               	movwf	___lwmod@dividend+1
  3638  0034  0878               	movf	utoa@val,w
  3639  0035  00F2               	movwf	___lwmod@dividend
  3640  0036  318E  26A0  3180   	fcall	___lwmod
  3641  0039  0870               	movf	?___lwmod,w
  3642  003A  00FC               	movwf	??_utoa
  3643  003B  087C               	movf	??_utoa,w
  3644  003C  0020               	movlb	0	; select bank0
  3645  003D  00A2               	movwf	utoa@c
  3646  003E  087B               	movf	utoa@base+1,w
  3647  003F  00F1               	movwf	___lwdiv@divisor+1
  3648  0040  087A               	movf	utoa@base,w
  3649  0041  00F0               	movwf	___lwdiv@divisor
  3650  0042  0879               	movf	utoa@val+1,w
  3651  0043  00F3               	movwf	___lwdiv@dividend+1
  3652  0044  0878               	movf	utoa@val,w
  3653  0045  00F2               	movwf	___lwdiv@dividend
  3654  0046  318E  26FC  3180   	fcall	___lwdiv
  3655  0049  0871               	movf	?___lwdiv+1,w
  3656  004A  00F9               	movwf	utoa@val+1
  3657  004B  0870               	movf	?___lwdiv,w
  3658  004C  00F8               	movwf	utoa@val
  3659  004D  300A               	movlw	10
  3660  004E  0020               	movlb	0	; select bank0
  3661  004F  0222               	subwf	utoa@c,w
  3662  0050  1C03               	skipc
  3663  0051  2856               	goto	l524
  3664  0052  3007               	movlw	7
  3665  0053  00FC               	movwf	??_utoa
  3666  0054  087C               	movf	??_utoa,w
  3667  0055  07A2               	addwf	utoa@c,f
  3668  0056                     l524:	
  3669  0056  3030               	movlw	48
  3670  0057  00FC               	movwf	??_utoa
  3671  0058  087C               	movf	??_utoa,w
  3672  0059  07A2               	addwf	utoa@c,f
  3673  005A  0822               	movf	utoa@c,w
  3674  005B  00FC               	movwf	??_utoa
  3675  005C  0823               	movf	utoa@buf,w
  3676  005D  0086               	movwf	6
  3677  005E  0187               	clrf	7
  3678  005F  087C               	movf	??_utoa,w
  3679  0060  0081               	movwf	1
  3680  0061  3001               	movlw	1
  3681  0062  02A3               	subwf	utoa@buf,f
  3682  0063  0878               	movf	utoa@val,w
  3683  0064  0479               	iorwf	utoa@val+1,w
  3684  0065  1D03               	btfss	3,2
  3685  0066  282E               	goto	l2003
  3686                           
  3687                           ;	Return value of _utoa is never used
  3688  0067  3001               	movlw	1
  3689  0068  00FC               	movwf	??_utoa
  3690  0069  087C               	movf	??_utoa,w
  3691  006A  07A3               	addwf	utoa@buf,f
  3692  006B  0008               	return
  3693  006C                     __end_of_utoa:	
  3694                           
  3695                           	psect	text6
  3696  0EA0                     __ptext6:	
  3697 ;; *************** function ___lwmod *****************
  3698 ;; Defined at:
  3699 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
  3700 ;; Parameters:    Size  Location     Type
  3701 ;;  divisor         2    0[COMMON] unsigned int 
  3702 ;;  dividend        2    2[COMMON] unsigned int 
  3703 ;; Auto vars:     Size  Location     Type
  3704 ;;  counter         1    5[COMMON] unsigned char 
  3705 ;; Return value:  Size  Location     Type
  3706 ;;                  2    0[COMMON] unsigned int 
  3707 ;; Registers used:
  3708 ;;		wreg, status,2, status,0
  3709 ;; Tracked objects:
  3710 ;;		On entry : 0/0
  3711 ;;		On exit  : 0/0
  3712 ;;		Unchanged: 0/0
  3713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3714 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3715 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3716 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3717 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3718 ;;Total ram usage:        6 bytes
  3719 ;; Hardware stack levels used:    1
  3720 ;; This function calls:
  3721 ;;		Nothing
  3722 ;; This function is called by:
  3723 ;;		_utoa
  3724 ;; This function uses a non-reentrant model
  3725 ;;
  3726                           
  3727                           
  3728                           ;psect for function ___lwmod
  3729  0EA0                     ___lwmod:	
  3730                           
  3731                           ;incstack = 0
  3732                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3733  0EA0  0870               	movf	___lwmod@divisor,w
  3734  0EA1  0471               	iorwf	___lwmod@divisor+1,w
  3735  0EA2  1903               	btfsc	3,2
  3736  0EA3  2EC7               	goto	l1713
  3737  0EA4  01F5               	clrf	___lwmod@counter
  3738  0EA5  0AF5               	incf	___lwmod@counter,f
  3739  0EA6                     l1703:	
  3740  0EA6  1BF1               	btfsc	___lwmod@divisor+1,7
  3741  0EA7  2EB2               	goto	l1705
  3742  0EA8  3001               	movlw	1
  3743  0EA9                     u2175:	
  3744  0EA9  35F0               	lslf	___lwmod@divisor,f
  3745  0EAA  0DF1               	rlf	___lwmod@divisor+1,f
  3746  0EAB  0B89               	decfsz	9,f
  3747  0EAC  2EA9               	goto	u2175
  3748  0EAD  3001               	movlw	1
  3749  0EAE  00F4               	movwf	??___lwmod
  3750  0EAF  0874               	movf	??___lwmod,w
  3751  0EB0  07F5               	addwf	___lwmod@counter,f
  3752  0EB1  2EA6               	goto	l1703
  3753  0EB2                     l1705:	
  3754  0EB2  0871               	movf	___lwmod@divisor+1,w
  3755  0EB3  0273               	subwf	___lwmod@dividend+1,w
  3756  0EB4  1D03               	skipz
  3757  0EB5  2EB8               	goto	u2195
  3758  0EB6  0870               	movf	___lwmod@divisor,w
  3759  0EB7  0272               	subwf	___lwmod@dividend,w
  3760  0EB8                     u2195:	
  3761  0EB8  1C03               	skipc
  3762  0EB9  2EBE               	goto	l1709
  3763  0EBA  0870               	movf	___lwmod@divisor,w
  3764  0EBB  02F2               	subwf	___lwmod@dividend,f
  3765  0EBC  0871               	movf	___lwmod@divisor+1,w
  3766  0EBD  3BF3               	subwfb	___lwmod@dividend+1,f
  3767  0EBE                     l1709:	
  3768  0EBE  3001               	movlw	1
  3769  0EBF                     u2205:	
  3770  0EBF  36F1               	lsrf	___lwmod@divisor+1,f
  3771  0EC0  0CF0               	rrf	___lwmod@divisor,f
  3772  0EC1  0B89               	decfsz	9,f
  3773  0EC2  2EBF               	goto	u2205
  3774  0EC3  3001               	movlw	1
  3775  0EC4  02F5               	subwf	___lwmod@counter,f
  3776  0EC5  1D03               	btfss	3,2
  3777  0EC6  2EB2               	goto	l1705
  3778  0EC7                     l1713:	
  3779  0EC7  0873               	movf	___lwmod@dividend+1,w
  3780  0EC8  00F1               	movwf	?___lwmod+1
  3781  0EC9  0872               	movf	___lwmod@dividend,w
  3782  0ECA  00F0               	movwf	?___lwmod
  3783  0ECB  0008               	return
  3784  0ECC                     __end_of___lwmod:	
  3785                           
  3786                           	psect	text7
  3787  0EFC                     __ptext7:	
  3788 ;; *************** function ___lwdiv *****************
  3789 ;; Defined at:
  3790 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  3791 ;; Parameters:    Size  Location     Type
  3792 ;;  divisor         2    0[COMMON] unsigned int 
  3793 ;;  dividend        2    2[COMMON] unsigned int 
  3794 ;; Auto vars:     Size  Location     Type
  3795 ;;  quotient        2    5[COMMON] unsigned int 
  3796 ;;  counter         1    7[COMMON] unsigned char 
  3797 ;; Return value:  Size  Location     Type
  3798 ;;                  2    0[COMMON] unsigned int 
  3799 ;; Registers used:
  3800 ;;		wreg, status,2, status,0
  3801 ;; Tracked objects:
  3802 ;;		On entry : 0/0
  3803 ;;		On exit  : 0/0
  3804 ;;		Unchanged: 0/0
  3805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3806 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3807 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3808 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3809 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3810 ;;Total ram usage:        8 bytes
  3811 ;; Hardware stack levels used:    1
  3812 ;; This function calls:
  3813 ;;		Nothing
  3814 ;; This function is called by:
  3815 ;;		_utoa
  3816 ;; This function uses a non-reentrant model
  3817 ;;
  3818                           
  3819                           
  3820                           ;psect for function ___lwdiv
  3821  0EFC                     ___lwdiv:	
  3822                           
  3823                           ;incstack = 0
  3824                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3825  0EFC  01F5               	clrf	___lwdiv@quotient
  3826  0EFD  01F6               	clrf	___lwdiv@quotient+1
  3827  0EFE  0870               	movf	___lwdiv@divisor,w
  3828  0EFF  0471               	iorwf	___lwdiv@divisor+1,w
  3829  0F00  1903               	btfsc	3,2
  3830  0F01  2F2B               	goto	l1691
  3831  0F02  01F7               	clrf	___lwdiv@counter
  3832  0F03  0AF7               	incf	___lwdiv@counter,f
  3833  0F04                     l1679:	
  3834  0F04  1BF1               	btfsc	___lwdiv@divisor+1,7
  3835  0F05  2F10               	goto	l1681
  3836  0F06  3001               	movlw	1
  3837  0F07                     u2105:	
  3838  0F07  35F0               	lslf	___lwdiv@divisor,f
  3839  0F08  0DF1               	rlf	___lwdiv@divisor+1,f
  3840  0F09  0B89               	decfsz	9,f
  3841  0F0A  2F07               	goto	u2105
  3842  0F0B  3001               	movlw	1
  3843  0F0C  00F4               	movwf	??___lwdiv
  3844  0F0D  0874               	movf	??___lwdiv,w
  3845  0F0E  07F7               	addwf	___lwdiv@counter,f
  3846  0F0F  2F04               	goto	l1679
  3847  0F10                     l1681:	
  3848  0F10  3001               	movlw	1
  3849  0F11                     u2125:	
  3850  0F11  35F5               	lslf	___lwdiv@quotient,f
  3851  0F12  0DF6               	rlf	___lwdiv@quotient+1,f
  3852  0F13  0B89               	decfsz	9,f
  3853  0F14  2F11               	goto	u2125
  3854  0F15  0871               	movf	___lwdiv@divisor+1,w
  3855  0F16  0273               	subwf	___lwdiv@dividend+1,w
  3856  0F17  1D03               	skipz
  3857  0F18  2F1B               	goto	u2135
  3858  0F19  0870               	movf	___lwdiv@divisor,w
  3859  0F1A  0272               	subwf	___lwdiv@dividend,w
  3860  0F1B                     u2135:	
  3861  0F1B  1C03               	skipc
  3862  0F1C  2F22               	goto	l1687
  3863  0F1D  0870               	movf	___lwdiv@divisor,w
  3864  0F1E  02F2               	subwf	___lwdiv@dividend,f
  3865  0F1F  0871               	movf	___lwdiv@divisor+1,w
  3866  0F20  3BF3               	subwfb	___lwdiv@dividend+1,f
  3867  0F21  1475               	bsf	___lwdiv@quotient,0
  3868  0F22                     l1687:	
  3869  0F22  3001               	movlw	1
  3870  0F23                     u2145:	
  3871  0F23  36F1               	lsrf	___lwdiv@divisor+1,f
  3872  0F24  0CF0               	rrf	___lwdiv@divisor,f
  3873  0F25  0B89               	decfsz	9,f
  3874  0F26  2F23               	goto	u2145
  3875  0F27  3001               	movlw	1
  3876  0F28  02F7               	subwf	___lwdiv@counter,f
  3877  0F29  1D03               	btfss	3,2
  3878  0F2A  2F10               	goto	l1681
  3879  0F2B                     l1691:	
  3880  0F2B  0876               	movf	___lwdiv@quotient+1,w
  3881  0F2C  00F1               	movwf	?___lwdiv+1
  3882  0F2D  0875               	movf	___lwdiv@quotient,w
  3883  0F2E  00F0               	movwf	?___lwdiv
  3884  0F2F  0008               	return
  3885  0F30                     __end_of___lwdiv:	
  3886                           
  3887                           	psect	text8
  3888  0DE4                     __ptext8:	
  3889 ;; *************** function _OLED_Write_Float *****************
  3890 ;; Defined at:
  3891 ;;		line 316 in file "oled.c"
  3892 ;; Parameters:    Size  Location     Type
  3893 ;;  f               3   52[BANK0 ] float 
  3894 ;; Auto vars:     Size  Location     Type
  3895 ;;  status          2   57[BANK0 ] int 
  3896 ;;  buf11           1   59[BANK0 ] PTR unsigned char 
  3897 ;;		 -> ftoa@buf(17), 
  3898 ;; Return value:  Size  Location     Type
  3899 ;;                  1    wreg      void 
  3900 ;; Registers used:
  3901 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3902 ;; Tracked objects:
  3903 ;;		On entry : 0/0
  3904 ;;		On exit  : 0/0
  3905 ;;		Unchanged: 0/0
  3906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3907 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3908 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3909 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3910 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3911 ;;Total ram usage:        8 bytes
  3912 ;; Hardware stack levels used:    1
  3913 ;; Hardware stack levels required when called:    4
  3914 ;; This function calls:
  3915 ;;		_OLED_Write_String
  3916 ;;		_ftoa
  3917 ;; This function is called by:
  3918 ;;		_main
  3919 ;; This function uses a non-reentrant model
  3920 ;;
  3921                           
  3922                           
  3923                           ;psect for function _OLED_Write_Float
  3924  0DE4                     _OLED_Write_Float:	
  3925                           
  3926                           ;oled.c: 318: char* buf11;
  3927                           ;oled.c: 319: int status;
  3928                           ;oled.c: 321: buf11 = ftoa(f, &status);
  3929                           
  3930                           ;incstack = 0
  3931                           ; Regs used in _OLED_Write_Float: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3932  0DE4  0020               	movlb	0	; select bank0
  3933  0DE5  0854               	movf	OLED_Write_Float@f,w
  3934  0DE6  00C6               	movwf	ftoa@f
  3935  0DE7  0855               	movf	OLED_Write_Float@f+1,w
  3936  0DE8  00C7               	movwf	ftoa@f+1
  3937  0DE9  0856               	movf	OLED_Write_Float@f+2,w
  3938  0DEA  00C8               	movwf	ftoa@f+2
  3939  0DEB  3059               	movlw	(low (OLED_Write_Float@status| 0))& (0+255)
  3940  0DEC  00D7               	movwf	??_OLED_Write_Float
  3941  0DED  0857               	movf	??_OLED_Write_Float,w
  3942  0DEE  00C9               	movwf	ftoa@status
  3943  0DEF  3182  229A  318D   	fcall	_ftoa
  3944  0DF2  0020               	movlb	0	; select bank0
  3945  0DF3  00D8               	movwf	??_OLED_Write_Float+1
  3946  0DF4  0858               	movf	??_OLED_Write_Float+1,w
  3947  0DF5  00DB               	movwf	OLED_Write_Float@buf11
  3948                           
  3949                           ;oled.c: 323: OLED_Write_String(buf11);
  3950  0DF6  085B               	movf	OLED_Write_Float@buf11,w
  3951  0DF7  00FC               	movwf	OLED_Write_String@s
  3952  0DF8  3000               	movlw	0
  3953  0DF9  00FD               	movwf	OLED_Write_String@s+1
  3954  0DFA  318D  255A  318D   	fcall	_OLED_Write_String
  3955                           
  3956                           ;oled.c: 324: OLED_Write_String( "     " );
  3957  0DFD  307B               	movlw	low (STR_7| (0+32768))
  3958  0DFE  00FC               	movwf	OLED_Write_String@s
  3959  0DFF  308B               	movlw	high (STR_7| (0+32768))
  3960  0E00  00FD               	movwf	OLED_Write_String@s+1
  3961  0E01  318D  255A         	fcall	_OLED_Write_String
  3962  0E03  0008               	return
  3963  0E04                     __end_of_OLED_Write_Float:	
  3964                           
  3965                           	psect	text9
  3966  029A                     __ptext9:	
  3967 ;; *************** function _ftoa *****************
  3968 ;; Defined at:
  3969 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftoa.c"
  3970 ;; Parameters:    Size  Location     Type
  3971 ;;  f               3   38[BANK0 ] float 
  3972 ;;  status          1   41[BANK0 ] PTR int 
  3973 ;;		 -> OLED_Write_Float@status(2), 
  3974 ;; Auto vars:     Size  Location     Type
  3975 ;;  l               4   47[BANK0 ] unsigned long 
  3976 ;;  rem             4   43[BANK0 ] unsigned long 
  3977 ;;  cp              1   51[BANK0 ] PTR unsigned char 
  3978 ;;		 -> ftoa@buf(17), 
  3979 ;; Return value:  Size  Location     Type
  3980 ;;                  1    wreg      PTR unsigned char 
  3981 ;; Registers used:
  3982 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3983 ;; Tracked objects:
  3984 ;;		On entry : 0/0
  3985 ;;		On exit  : 0/0
  3986 ;;		Unchanged: 0/0
  3987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3988 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3989 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3990 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3991 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3992 ;;Total ram usage:       14 bytes
  3993 ;; Hardware stack levels used:    1
  3994 ;; Hardware stack levels required when called:    3
  3995 ;; This function calls:
  3996 ;;		___ftge
  3997 ;;		___ftmul
  3998 ;;		___ftneg
  3999 ;;		___ftsub
  4000 ;;		___fttol
  4001 ;;		___lltoft
  4002 ;;		_sprintf
  4003 ;; This function is called by:
  4004 ;;		_OLED_Write_Float
  4005 ;; This function uses a non-reentrant model
  4006 ;;
  4007                           
  4008                           
  4009                           ;psect for function _ftoa
  4010  029A                     _ftoa:	
  4011                           
  4012                           ;incstack = 0
  4013                           ; Regs used in _ftoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4014  029A  30A0               	movlw	(low (ftoa@buf| 0))& (0+255)
  4015  029B  0020               	movlb	0	; select bank0
  4016  029C  00CA               	movwf	??_ftoa
  4017  029D  084A               	movf	??_ftoa,w
  4018  029E  00D3               	movwf	ftoa@cp
  4019  029F  0846               	movf	ftoa@f,w
  4020  02A0  00F0               	movwf	___ftge@ff1
  4021  02A1  0847               	movf	ftoa@f+1,w
  4022  02A2  00F1               	movwf	___ftge@ff1+1
  4023  02A3  0848               	movf	ftoa@f+2,w
  4024  02A4  00F2               	movwf	___ftge@ff1+2
  4025  02A5  3000               	movlw	0
  4026  02A6  00F3               	movwf	___ftge@ff2
  4027  02A7  3000               	movlw	0
  4028  02A8  00F4               	movwf	___ftge@ff2+1
  4029  02A9  3000               	movlw	0
  4030  02AA  00F5               	movwf	___ftge@ff2+2
  4031  02AB  318F  2730  3182   	fcall	___ftge
  4032  02AE  1803               	btfsc	3,0
  4033  02AF  2ACC               	goto	l2067
  4034  02B0  302D               	movlw	45
  4035  02B1  0020               	movlb	0	; select bank0
  4036  02B2  00CA               	movwf	??_ftoa
  4037  02B3  0853               	movf	ftoa@cp,w
  4038  02B4  0086               	movwf	6
  4039  02B5  0187               	clrf	7
  4040  02B6  084A               	movf	??_ftoa,w
  4041  02B7  0081               	movwf	1
  4042  02B8  3001               	movlw	1
  4043  02B9  00CA               	movwf	??_ftoa
  4044  02BA  084A               	movf	??_ftoa,w
  4045  02BB  07D3               	addwf	ftoa@cp,f
  4046  02BC  0846               	movf	ftoa@f,w
  4047  02BD  00F0               	movwf	___ftneg@f1
  4048  02BE  0847               	movf	ftoa@f+1,w
  4049  02BF  00F1               	movwf	___ftneg@f1+1
  4050  02C0  0848               	movf	ftoa@f+2,w
  4051  02C1  00F2               	movwf	___ftneg@f1+2
  4052  02C2  318D  2522  3182   	fcall	___ftneg
  4053  02C5  0870               	movf	?___ftneg,w
  4054  02C6  0020               	movlb	0	; select bank0
  4055  02C7  00C6               	movwf	ftoa@f
  4056  02C8  0871               	movf	?___ftneg+1,w
  4057  02C9  00C7               	movwf	ftoa@f+1
  4058  02CA  0872               	movf	?___ftneg+2,w
  4059  02CB  00C8               	movwf	ftoa@f+2
  4060  02CC                     l2067:	
  4061  02CC  0020               	movlb	0	; select bank0
  4062  02CD  0846               	movf	ftoa@f,w
  4063  02CE  00AA               	movwf	___fttol@f1
  4064  02CF  0847               	movf	ftoa@f+1,w
  4065  02D0  00AB               	movwf	___fttol@f1+1
  4066  02D1  0848               	movf	ftoa@f+2,w
  4067  02D2  00AC               	movwf	___fttol@f1+2
  4068  02D3  3182  2213  3182   	fcall	___fttol
  4069  02D6  0020               	movlb	0	; select bank0
  4070  02D7  082D               	movf	?___fttol+3,w
  4071  02D8  00D2               	movwf	ftoa@l+3
  4072  02D9  082C               	movf	?___fttol+2,w
  4073  02DA  00D1               	movwf	ftoa@l+2
  4074  02DB  082B               	movf	?___fttol+1,w
  4075  02DC  00D0               	movwf	ftoa@l+1
  4076  02DD  082A               	movf	?___fttol,w
  4077  02DE  00CF               	movwf	ftoa@l
  4078  02DF  0852               	movf	ftoa@l+3,w
  4079  02E0  00FB               	movwf	___lltoft@c+3
  4080  02E1  0851               	movf	ftoa@l+2,w
  4081  02E2  00FA               	movwf	___lltoft@c+2
  4082  02E3  0850               	movf	ftoa@l+1,w
  4083  02E4  00F9               	movwf	___lltoft@c+1
  4084  02E5  084F               	movf	ftoa@l,w
  4085  02E6  00F8               	movwf	___lltoft@c
  4086  02E7  318E  2650  3182   	fcall	___lltoft
  4087  02EA  0878               	movf	?___lltoft,w
  4088  02EB  0020               	movlb	0	; select bank0
  4089  02EC  00A7               	movwf	___ftsub@f2
  4090  02ED  0879               	movf	?___lltoft+1,w
  4091  02EE  00A8               	movwf	___ftsub@f2+1
  4092  02EF  087A               	movf	?___lltoft+2,w
  4093  02F0  00A9               	movwf	___ftsub@f2+2
  4094  02F1  0846               	movf	ftoa@f,w
  4095  02F2  00AA               	movwf	___ftsub@f1
  4096  02F3  0847               	movf	ftoa@f+1,w
  4097  02F4  00AB               	movwf	___ftsub@f1+1
  4098  02F5  0848               	movf	ftoa@f+2,w
  4099  02F6  00AC               	movwf	___ftsub@f1+2
  4100  02F7  318D  25A7  3182   	fcall	___ftsub
  4101  02FA  0020               	movlb	0	; select bank0
  4102  02FB  0827               	movf	?___ftsub,w
  4103  02FC  00C6               	movwf	ftoa@f
  4104  02FD  0828               	movf	?___ftsub+1,w
  4105  02FE  00C7               	movwf	ftoa@f+1
  4106  02FF  0829               	movf	?___ftsub+2,w
  4107  0300  00C8               	movwf	ftoa@f+2
  4108  0301  0846               	movf	ftoa@f,w
  4109  0302  00FB               	movwf	___ftmul@f2
  4110  0303  0847               	movf	ftoa@f+1,w
  4111  0304  00FC               	movwf	___ftmul@f2+1
  4112  0305  0848               	movf	ftoa@f+2,w
  4113  0306  00FD               	movwf	___ftmul@f2+2
  4114  0307  3024               	movlw	36
  4115  0308  00F8               	movwf	___ftmul@f1
  4116  0309  3074               	movlw	116
  4117  030A  00F9               	movwf	___ftmul@f1+1
  4118  030B  3049               	movlw	73
  4119  030C  00FA               	movwf	___ftmul@f1+2
  4120  030D  3183  233C  3182   	fcall	___ftmul
  4121  0310  0878               	movf	?___ftmul,w
  4122  0311  0020               	movlb	0	; select bank0
  4123  0312  00AA               	movwf	___fttol@f1
  4124  0313  0879               	movf	?___ftmul+1,w
  4125  0314  00AB               	movwf	___fttol@f1+1
  4126  0315  087A               	movf	?___ftmul+2,w
  4127  0316  00AC               	movwf	___fttol@f1+2
  4128  0317  3182  2213  3182   	fcall	___fttol
  4129  031A  0020               	movlb	0	; select bank0
  4130  031B  082D               	movf	?___fttol+3,w
  4131  031C  00CE               	movwf	ftoa@rem+3
  4132  031D  082C               	movf	?___fttol+2,w
  4133  031E  00CD               	movwf	ftoa@rem+2
  4134  031F  082B               	movf	?___fttol+1,w
  4135  0320  00CC               	movwf	ftoa@rem+1
  4136  0321  082A               	movf	?___fttol,w
  4137  0322  00CB               	movwf	ftoa@rem
  4138  0323  305E               	movlw	low (STR_9| (0+32768))
  4139  0324  00AA               	movwf	sprintf@f
  4140  0325  308B               	movlw	high (STR_9| (0+32768))
  4141  0326  00AB               	movwf	sprintf@f+1
  4142  0327  0852               	movf	ftoa@l+3,w
  4143  0328  00AF               	movwf	?_sprintf+5
  4144  0329  0851               	movf	ftoa@l+2,w
  4145  032A  00AE               	movwf	?_sprintf+4
  4146  032B  0850               	movf	ftoa@l+1,w
  4147  032C  00AD               	movwf	?_sprintf+3
  4148  032D  084F               	movf	ftoa@l,w
  4149  032E  00AC               	movwf	?_sprintf+2
  4150  032F  084E               	movf	ftoa@rem+3,w
  4151  0330  00B3               	movwf	?_sprintf+9
  4152  0331  084D               	movf	ftoa@rem+2,w
  4153  0332  00B2               	movwf	?_sprintf+8
  4154  0333  084C               	movf	ftoa@rem+1,w
  4155  0334  00B1               	movwf	?_sprintf+7
  4156  0335  084B               	movf	ftoa@rem,w
  4157  0336  00B0               	movwf	?_sprintf+6
  4158  0337  0853               	movf	ftoa@cp,w
  4159  0338  3186  2617         	fcall	_sprintf
  4160  033A  30A0               	movlw	(low (ftoa@buf| 0))& (0+255)
  4161  033B  0008               	return
  4162  033C                     __end_of_ftoa:	
  4163                           
  4164                           	psect	text10
  4165  0617                     __ptext10:	
  4166 ;; *************** function _sprintf *****************
  4167 ;; Defined at:
  4168 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  4169 ;; Parameters:    Size  Location     Type
  4170 ;;  sp              1    wreg     PTR unsigned char 
  4171 ;;		 -> ftoa@buf(17), 
  4172 ;;  f               2   10[BANK0 ] PTR const unsigned char 
  4173 ;;		 -> STR_9(11), 
  4174 ;; Auto vars:     Size  Location     Type
  4175 ;;  sp              1   32[BANK0 ] PTR unsigned char 
  4176 ;;		 -> ftoa@buf(17), 
  4177 ;;  val             4   28[BANK0 ] unsigned long 
  4178 ;;  tmpval          4    0        struct .
  4179 ;;  prec            2   35[BANK0 ] int 
  4180 ;;  width           2   33[BANK0 ] int 
  4181 ;;  cp              2    0        PTR const unsigned char 
  4182 ;;  len             2    0        unsigned int 
  4183 ;;  c               1   37[BANK0 ] char 
  4184 ;;  ap              1   27[BANK0 ] PTR void [1]
  4185 ;;		 -> ?_sprintf(2), 
  4186 ;;  flag            1   26[BANK0 ] unsigned char 
  4187 ;; Return value:  Size  Location     Type
  4188 ;;                  2   10[BANK0 ] int 
  4189 ;; Registers used:
  4190 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4191 ;; Tracked objects:
  4192 ;;		On entry : 0/0
  4193 ;;		On exit  : 0/0
  4194 ;;		Unchanged: 0/0
  4195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4196 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4197 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4198 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4199 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4200 ;;Total ram usage:       28 bytes
  4201 ;; Hardware stack levels used:    1
  4202 ;; Hardware stack levels required when called:    1
  4203 ;; This function calls:
  4204 ;;		___lldiv
  4205 ;;		___llmod
  4206 ;;		___wmul
  4207 ;;		_isdigit
  4208 ;; This function is called by:
  4209 ;;		_ftoa
  4210 ;; This function uses a non-reentrant model
  4211 ;;
  4212                           
  4213                           
  4214                           ;psect for function _sprintf
  4215  0617                     _sprintf:	
  4216                           
  4217                           ;incstack = 0
  4218                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4219                           ;sprintf@sp stored from wreg
  4220  0617  0020               	movlb	0	; select bank0
  4221  0618  00C0               	movwf	sprintf@sp
  4222                           
  4223                           ;doprnt.c: 494: va_list ap;
  4224                           ;doprnt.c: 499: signed char c;
  4225                           ;doprnt.c: 501: int width;
  4226                           ;doprnt.c: 504: int prec;
  4227                           ;doprnt.c: 508: unsigned char flag;
  4228                           ;doprnt.c: 523: union {
  4229                           ;doprnt.c: 524: unsigned long vd;
  4230                           ;doprnt.c: 525: double integ;
  4231                           ;doprnt.c: 526: } tmpval;
  4232                           ;doprnt.c: 528: unsigned long val;
  4233                           ;doprnt.c: 529: unsigned len;
  4234                           ;doprnt.c: 530: const char * cp;
  4235                           ;doprnt.c: 533: *ap = __va_start();
  4236  0619  302C               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  4237  061A  00B4               	movwf	??_sprintf
  4238  061B  0834               	movf	??_sprintf,w
  4239  061C  00BB               	movwf	sprintf@ap
  4240  061D                     l1857:	
  4241                           ;doprnt.c: 536: while(c = *f++) {
  4242                           
  4243  061D  082B               	movf	sprintf@f+1,w
  4244  061E  00B5               	movwf	??_sprintf+1
  4245  061F  082A               	movf	sprintf@f,w
  4246  0620  00B4               	movwf	??_sprintf
  4247  0621  0AAA               	incf	sprintf@f,f
  4248  0622  1903               	skipnz
  4249  0623  0AAB               	incf	sprintf@f+1,f
  4250  0624  0834               	movf	??_sprintf,w
  4251  0625  0084               	movwf	4
  4252  0626  0835               	movf	??_sprintf+1,w
  4253  0627  0085               	movwf	5
  4254  0628  0800               	movf	0,w	;code access
  4255  0629  00B6               	movwf	??_sprintf+2
  4256  062A  0836               	movf	??_sprintf+2,w
  4257  062B  00C5               	movwf	sprintf@c
  4258  062C  0845               	movf	sprintf@c,w
  4259  062D  1903               	btfsc	3,2
  4260  062E  2FF1               	goto	l1859
  4261                           
  4262                           ;doprnt.c: 538: if(c != '%')
  4263  062F  3025               	movlw	37
  4264  0630  0645               	xorwf	sprintf@c,w
  4265  0631  1903               	btfsc	3,2
  4266  0632  2E3F               	goto	l1767
  4267                           
  4268                           ;doprnt.c: 540: {
  4269                           ;doprnt.c: 541: ((*sp++ = (c)));
  4270  0633  0845               	movf	sprintf@c,w
  4271  0634  00B4               	movwf	??_sprintf
  4272  0635  0840               	movf	sprintf@sp,w
  4273  0636  0086               	movwf	6
  4274  0637  0187               	clrf	7
  4275  0638  0834               	movf	??_sprintf,w
  4276  0639  0081               	movwf	1
  4277  063A  3001               	movlw	1
  4278  063B  00B4               	movwf	??_sprintf
  4279  063C  0834               	movf	??_sprintf,w
  4280  063D  07C0               	addwf	sprintf@sp,f
  4281                           
  4282                           ;doprnt.c: 542: continue;
  4283  063E  2E1D               	goto	l1857
  4284  063F                     l1767:	
  4285                           
  4286                           ;doprnt.c: 543: }
  4287                           ;doprnt.c: 546: width = 0;
  4288  063F  01C1               	clrf	sprintf@width
  4289  0640  01C2               	clrf	sprintf@width+1
  4290                           
  4291                           ;doprnt.c: 548: flag = 0;
  4292  0641  01BA               	clrf	sprintf@flag
  4293                           
  4294                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  4295  0642  082A               	movf	sprintf@f,w
  4296  0643  0084               	movwf	4
  4297  0644  082B               	movf	sprintf@f+1,w
  4298  0645  0085               	movwf	5
  4299  0646  0800               	movf	0,w	;code access
  4300  0647  318D  253C  3186   	fcall	_isdigit
  4301  064A  1C03               	btfss	3,0
  4302  064B  2E7D               	goto	l1781
  4303                           
  4304                           ;doprnt.c: 598: width = 0;
  4305  064C  0020               	movlb	0	; select bank0
  4306  064D  01C1               	clrf	sprintf@width
  4307  064E  01C2               	clrf	sprintf@width+1
  4308  064F                     l1773:	
  4309                           ;doprnt.c: 599: do {
  4310                           
  4311                           
  4312                           ;doprnt.c: 600: width *= 10;
  4313  064F  300A               	movlw	10
  4314  0650  00F0               	movwf	___wmul@multiplier
  4315  0651  3000               	movlw	0
  4316  0652  00F1               	movwf	___wmul@multiplier+1
  4317  0653  0020               	movlb	0	; select bank0
  4318  0654  0842               	movf	sprintf@width+1,w
  4319  0655  00F3               	movwf	___wmul@multiplicand+1
  4320  0656  0841               	movf	sprintf@width,w
  4321  0657  00F2               	movwf	___wmul@multiplicand
  4322  0658  318D  256E  3186   	fcall	___wmul
  4323  065B  0871               	movf	?___wmul+1,w
  4324  065C  0020               	movlb	0	; select bank0
  4325  065D  00C2               	movwf	sprintf@width+1
  4326  065E  0870               	movf	?___wmul,w
  4327  065F  00C1               	movwf	sprintf@width
  4328                           
  4329                           ;doprnt.c: 601: width += *f++ - '0';
  4330  0660  082A               	movf	sprintf@f,w
  4331  0661  0084               	movwf	4
  4332  0662  082B               	movf	sprintf@f+1,w
  4333  0663  0085               	movwf	5
  4334  0664  0800               	movf	0,w	;code access
  4335  0665  3ED0               	addlw	208
  4336  0666  00B4               	movwf	??_sprintf
  4337  0667  30FF               	movlw	255
  4338  0668  1803               	skipnc
  4339  0669  3000               	movlw	0
  4340  066A  00B5               	movwf	??_sprintf+1
  4341  066B  0834               	movf	??_sprintf,w
  4342  066C  07C1               	addwf	sprintf@width,f
  4343  066D  0835               	movf	??_sprintf+1,w
  4344  066E  3DC2               	addwfc	sprintf@width+1,f
  4345  066F  3001               	movlw	1
  4346  0670  07AA               	addwf	sprintf@f,f
  4347  0671  3000               	movlw	0
  4348  0672  3DAB               	addwfc	sprintf@f+1,f
  4349                           
  4350                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  4351  0673  082A               	movf	sprintf@f,w
  4352  0674  0084               	movwf	4
  4353  0675  082B               	movf	sprintf@f+1,w
  4354  0676  0085               	movwf	5
  4355  0677  0800               	movf	0,w	;code access
  4356  0678  318D  253C  3186   	fcall	_isdigit
  4357  067B  1803               	btfsc	3,0
  4358  067C  2E4F               	goto	l1773
  4359  067D                     l1781:	
  4360                           
  4361                           ;doprnt.c: 608: }
  4362                           ;doprnt.c: 611: if(*f == '.') {
  4363  067D  0020               	movlb	0	; select bank0
  4364  067E  082A               	movf	sprintf@f,w
  4365  067F  0084               	movwf	4
  4366  0680  082B               	movf	sprintf@f+1,w
  4367  0681  0085               	movwf	5
  4368  0682  0012               	moviw fsr0++
  4369  0683  3A2E               	xorlw	46
  4370  0684  1D03               	btfss	3,2
  4371  0685  2EBB               	goto	l1793
  4372                           
  4373                           ;doprnt.c: 613: f++;
  4374  0686  3001               	movlw	1
  4375  0687  07AA               	addwf	sprintf@f,f
  4376  0688  3000               	movlw	0
  4377  0689  3DAB               	addwfc	sprintf@f+1,f
  4378                           
  4379                           ;doprnt.c: 620: {
  4380                           ;doprnt.c: 621: prec = 0;
  4381  068A  01C3               	clrf	sprintf@prec
  4382  068B  01C4               	clrf	sprintf@prec+1
  4383  068C                     l1791:	
  4384                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  4385                           
  4386  068C  082A               	movf	sprintf@f,w
  4387  068D  0084               	movwf	4
  4388  068E  082B               	movf	sprintf@f+1,w
  4389  068F  0085               	movwf	5
  4390  0690  0800               	movf	0,w	;code access
  4391  0691  318D  253C  3186   	fcall	_isdigit
  4392  0694  1C03               	btfss	3,0
  4393  0695  2EC6               	goto	l1799
  4394                           
  4395                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  4396  0696  0020               	movlb	0	; select bank0
  4397  0697  082A               	movf	sprintf@f,w
  4398  0698  0084               	movwf	4
  4399  0699  082B               	movf	sprintf@f+1,w
  4400  069A  0085               	movwf	5
  4401  069B  0800               	movf	0,w	;code access
  4402  069C  00B4               	movwf	??_sprintf
  4403  069D  01B5               	clrf	??_sprintf+1
  4404  069E  0844               	movf	sprintf@prec+1,w
  4405  069F  00F1               	movwf	___wmul@multiplier+1
  4406  06A0  0843               	movf	sprintf@prec,w
  4407  06A1  00F0               	movwf	___wmul@multiplier
  4408  06A2  300A               	movlw	10
  4409  06A3  00F2               	movwf	___wmul@multiplicand
  4410  06A4  3000               	movlw	0
  4411  06A5  00F3               	movwf	___wmul@multiplicand+1
  4412  06A6  318D  256E  3186   	fcall	___wmul
  4413  06A9  0020               	movlb	0	; select bank0
  4414  06AA  0834               	movf	??_sprintf,w
  4415  06AB  0770               	addwf	?___wmul,w
  4416  06AC  00B6               	movwf	??_sprintf+2
  4417  06AD  0835               	movf	??_sprintf+1,w
  4418  06AE  3D71               	addwfc	?___wmul+1,w
  4419  06AF  00B7               	movwf	??_sprintf+3
  4420  06B0  0836               	movf	??_sprintf+2,w
  4421  06B1  3ED0               	addlw	208
  4422  06B2  00C3               	movwf	sprintf@prec
  4423  06B3  30FF               	movlw	255
  4424  06B4  3D37               	addwfc	??_sprintf+3,w
  4425  06B5  00C4               	movwf	sprintf@prec+1
  4426  06B6  3001               	movlw	1
  4427  06B7  07AA               	addwf	sprintf@f,f
  4428  06B8  3000               	movlw	0
  4429  06B9  3DAB               	addwfc	sprintf@f+1,f
  4430  06BA  2E8C               	goto	l1791
  4431  06BB                     l1793:	
  4432                           ;doprnt.c: 624: }
  4433                           ;doprnt.c: 625: } else {
  4434                           
  4435                           
  4436                           ;doprnt.c: 626: prec = 0;
  4437  06BB  0020               	movlb	0	; select bank0
  4438  06BC  01C3               	clrf	sprintf@prec
  4439  06BD  01C4               	clrf	sprintf@prec+1
  4440                           
  4441                           ;doprnt.c: 635: switch(c = *f++) {
  4442                           
  4443                           ;doprnt.c: 630: }
  4444                           ;doprnt.c: 633: loop:
  4445  06BE  2EC6               	goto	l1799
  4446  06BF                     l218:	
  4447                           ;doprnt.c: 641: case 'l':
  4448                           
  4449                           ;doprnt.c: 638: goto alldone;
  4450                           
  4451                           ;doprnt.c: 637: case 0:
  4452                           
  4453                           
  4454                           ;doprnt.c: 643: flag |= 0x10;
  4455  06BF  163A               	bsf	sprintf@flag,4
  4456                           
  4457                           ;doprnt.c: 644: goto loop;
  4458  06C0  2EC6               	goto	l1799
  4459  06C1                     l1795:	
  4460                           ;doprnt.c: 817: case 'u':
  4461                           
  4462                           ;doprnt.c: 813: continue;
  4463                           
  4464                           ;doprnt.c: 802: default:
  4465                           
  4466                           
  4467                           ;doprnt.c: 818: flag |= 0xC0;
  4468  06C1  30C0               	movlw	192
  4469  06C2  00B4               	movwf	??_sprintf
  4470  06C3  0834               	movf	??_sprintf,w
  4471  06C4  04BA               	iorwf	sprintf@flag,f
  4472                           
  4473                           ;doprnt.c: 822: }
  4474                           
  4475                           ;doprnt.c: 819: break;
  4476  06C5  2EDE               	goto	l221
  4477  06C6                     l1799:	
  4478  06C6  0020               	movlb	0	; select bank0
  4479  06C7  082B               	movf	sprintf@f+1,w
  4480  06C8  00B5               	movwf	??_sprintf+1
  4481  06C9  082A               	movf	sprintf@f,w
  4482  06CA  00B4               	movwf	??_sprintf
  4483  06CB  0AAA               	incf	sprintf@f,f
  4484  06CC  1903               	skipnz
  4485  06CD  0AAB               	incf	sprintf@f+1,f
  4486  06CE  0834               	movf	??_sprintf,w
  4487  06CF  0084               	movwf	4
  4488  06D0  0835               	movf	??_sprintf+1,w
  4489  06D1  0085               	movwf	5
  4490  06D2  0800               	movf	0,w	;code access
  4491  06D3  00C5               	movwf	sprintf@c
  4492                           
  4493                           ; Switch size 1, requested type "space"
  4494                           ; Number of cases is 3, Range of values is 0 to 117
  4495                           ; switch strategies available:
  4496                           ; Name         Instructions Cycles
  4497                           ; simple_byte           10     6 (average)
  4498                           ; direct_byte          242     6 (fixed)
  4499                           ; jumptable            260     6 (fixed)
  4500                           ;	Chosen strategy is simple_byte
  4501  06D4  3A00               	xorlw	0	; case 0
  4502  06D5  1903               	skipnz
  4503  06D6  2FF1               	goto	l1859
  4504  06D7  3A6C               	xorlw	108	; case 108
  4505  06D8  1903               	skipnz
  4506  06D9  2EBF               	goto	l218
  4507  06DA  3A19               	xorlw	25	; case 117
  4508  06DB  1903               	skipnz
  4509  06DC  2EC1               	goto	l1795
  4510  06DD  2E1D               	goto	l1857
  4511  06DE                     l221:	
  4512                           
  4513                           ;doprnt.c: 1273: {
  4514                           ;doprnt.c: 1281: if(flag & 0x10)
  4515  06DE  1E3A               	btfss	sprintf@flag,4
  4516  06DF  2EED               	goto	l1805
  4517                           
  4518                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  4519  06E0  083B               	movf	sprintf@ap,w
  4520  06E1  0086               	movwf	6
  4521  06E2  0187               	clrf	7
  4522  06E3  3F40               	moviw [0]fsr1
  4523  06E4  00BC               	movwf	sprintf@val
  4524  06E5  3F41               	moviw [1]fsr1
  4525  06E6  00BD               	movwf	sprintf@val+1
  4526  06E7  3F42               	moviw [2]fsr1
  4527  06E8  00BE               	movwf	sprintf@val+2
  4528  06E9  3F43               	moviw [3]fsr1
  4529  06EA  00BF               	movwf	sprintf@val+3
  4530  06EB  3004               	movlw	4
  4531  06EC  2EFB               	goto	L1
  4532  06ED                     l1805:	
  4533                           
  4534                           ;doprnt.c: 1283: else
  4535                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  4536  06ED  083B               	movf	sprintf@ap,w
  4537  06EE  0086               	movwf	6
  4538  06EF  0187               	clrf	7
  4539  06F0  3F40               	moviw [0]fsr1
  4540  06F1  00B4               	movwf	??_sprintf
  4541  06F2  3F41               	moviw [1]fsr1
  4542  06F3  00B5               	movwf	??_sprintf+1
  4543  06F4  0834               	movf	??_sprintf,w
  4544  06F5  00BC               	movwf	sprintf@val
  4545  06F6  0835               	movf	??_sprintf+1,w
  4546  06F7  00BD               	movwf	sprintf@val+1
  4547  06F8  01BE               	clrf	sprintf@val+2
  4548  06F9  01BF               	clrf	sprintf@val+3
  4549  06FA  3002               	movlw	2
  4550  06FB                     L1:	
  4551  06FB  00B4               	movwf	??_sprintf
  4552  06FC  0834               	movf	??_sprintf,w
  4553  06FD  07BB               	addwf	sprintf@ap,f
  4554                           
  4555                           ;doprnt.c: 1287: }
  4556                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  4557  06FE  0843               	movf	sprintf@prec,w
  4558  06FF  0444               	iorwf	sprintf@prec+1,w
  4559  0700  1D03               	btfss	3,2
  4560  0701  2F0C               	goto	l1815
  4561  0702  083F               	movf	sprintf@val+3,w
  4562  0703  043E               	iorwf	sprintf@val+2,w
  4563  0704  043D               	iorwf	sprintf@val+1,w
  4564  0705  043C               	iorwf	sprintf@val,w
  4565  0706  1D03               	skipz
  4566  0707  2F0C               	goto	l1815
  4567                           
  4568                           ;doprnt.c: 1291: prec++;
  4569  0708  3001               	movlw	1
  4570  0709  07C3               	addwf	sprintf@prec,f
  4571  070A  3000               	movlw	0
  4572  070B  3DC4               	addwfc	sprintf@prec+1,f
  4573  070C                     l1815:	
  4574                           
  4575                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4576  070C  01C5               	clrf	sprintf@c
  4577  070D  0AC5               	incf	sprintf@c,f
  4578  070E  300A               	movlw	10
  4579  070F  0645               	xorwf	sprintf@c,w
  4580  0710  1903               	btfsc	3,2
  4581  0711  2F3F               	goto	l1827
  4582  0712                     l1821:	
  4583                           
  4584                           ;doprnt.c: 1306: if(val < dpowers[c])
  4585  0712  0845               	movf	sprintf@c,w
  4586  0713  00B4               	movwf	??_sprintf
  4587  0714  01B5               	clrf	??_sprintf+1
  4588  0715  35B4               	lslf	??_sprintf,f
  4589  0716  0DB5               	rlf	??_sprintf+1,f
  4590  0717  35B4               	lslf	??_sprintf,f
  4591  0718  0DB5               	rlf	??_sprintf+1,f
  4592  0719  3000               	movlw	low (_dpowers| (0+32768))
  4593  071A  0734               	addwf	??_sprintf,w
  4594  071B  0084               	movwf	4
  4595  071C  3088               	movlw	high (_dpowers| (0+32768))
  4596  071D  3D35               	addwfc	??_sprintf+1,w
  4597  071E  0085               	movwf	5
  4598  071F  3F00               	moviw [0]fsr0
  4599  0720  00B6               	movwf	??_sprintf+2
  4600  0721  3F01               	moviw [1]fsr0
  4601  0722  00B7               	movwf	??_sprintf+3
  4602  0723  3F02               	moviw [2]fsr0
  4603  0724  00B8               	movwf	??_sprintf+4
  4604  0725  3F03               	moviw [3]fsr0
  4605  0726  00B9               	movwf	??_sprintf+5
  4606  0727  0839               	movf	??_sprintf+5,w
  4607  0728  023F               	subwf	sprintf@val+3,w
  4608  0729  1D03               	skipz
  4609  072A  2F35               	goto	u2355
  4610  072B  0838               	movf	??_sprintf+4,w
  4611  072C  023E               	subwf	sprintf@val+2,w
  4612  072D  1D03               	skipz
  4613  072E  2F35               	goto	u2355
  4614  072F  0837               	movf	??_sprintf+3,w
  4615  0730  023D               	subwf	sprintf@val+1,w
  4616  0731  1D03               	skipz
  4617  0732  2F35               	goto	u2355
  4618  0733  0836               	movf	??_sprintf+2,w
  4619  0734  023C               	subwf	sprintf@val,w
  4620  0735                     u2355:	
  4621  0735  1C03               	btfss	3,0
  4622  0736  2F3F               	goto	l1827
  4623                           
  4624                           ;doprnt.c: 1307: break;
  4625  0737  3001               	movlw	1
  4626  0738  00B4               	movwf	??_sprintf
  4627  0739  0834               	movf	??_sprintf,w
  4628  073A  07C5               	addwf	sprintf@c,f
  4629  073B  300A               	movlw	10
  4630  073C  0645               	xorwf	sprintf@c,w
  4631  073D  1D03               	btfss	3,2
  4632  073E  2F12               	goto	l1821
  4633  073F                     l1827:	
  4634                           
  4635                           ;doprnt.c: 1339: if(c < prec)
  4636  073F  0845               	movf	sprintf@c,w
  4637  0740  00B4               	movwf	??_sprintf
  4638  0741  01B5               	clrf	??_sprintf+1
  4639  0742  1BB4               	btfsc	??_sprintf,7
  4640  0743  03B5               	decf	??_sprintf+1,f
  4641  0744  0835               	movf	??_sprintf+1,w
  4642  0745  3A80               	xorlw	128
  4643  0746  00B6               	movwf	??_sprintf+2
  4644  0747  0844               	movf	sprintf@prec+1,w
  4645  0748  3A80               	xorlw	128
  4646  0749  0236               	subwf	??_sprintf+2,w
  4647  074A  1D03               	skipz
  4648  074B  2F4E               	goto	u2375
  4649  074C  0843               	movf	sprintf@prec,w
  4650  074D  0234               	subwf	??_sprintf,w
  4651  074E                     u2375:	
  4652  074E  1803               	skipnc
  4653  074F  2F56               	goto	l1831
  4654                           
  4655                           ;doprnt.c: 1340: c = prec;
  4656  0750  0020               	movlb	0	; select bank0
  4657  0751  0843               	movf	sprintf@prec,w
  4658  0752  00B4               	movwf	??_sprintf
  4659  0753  0834               	movf	??_sprintf,w
  4660  0754  00C5               	movwf	sprintf@c
  4661  0755  2F6E               	goto	l1835
  4662  0756                     l1831:	
  4663                           
  4664                           ;doprnt.c: 1341: else if(prec < c)
  4665  0756  0020               	movlb	0	; select bank0
  4666  0757  0845               	movf	sprintf@c,w
  4667  0758  00B4               	movwf	??_sprintf
  4668  0759  01B5               	clrf	??_sprintf+1
  4669  075A  1BB4               	btfsc	??_sprintf,7
  4670  075B  03B5               	decf	??_sprintf+1,f
  4671  075C  0844               	movf	sprintf@prec+1,w
  4672  075D  3A80               	xorlw	128
  4673  075E  00B6               	movwf	??_sprintf+2
  4674  075F  0835               	movf	??_sprintf+1,w
  4675  0760  3A80               	xorlw	128
  4676  0761  0236               	subwf	??_sprintf+2,w
  4677  0762  1D03               	skipz
  4678  0763  2F66               	goto	u2385
  4679  0764  0834               	movf	??_sprintf,w
  4680  0765  0243               	subwf	sprintf@prec,w
  4681  0766                     u2385:	
  4682  0766  1803               	skipnc
  4683  0767  2F6E               	goto	l1835
  4684                           
  4685                           ;doprnt.c: 1342: prec = c;
  4686  0768  0020               	movlb	0	; select bank0
  4687  0769  0845               	movf	sprintf@c,w
  4688  076A  00C3               	movwf	sprintf@prec
  4689  076B  01C4               	clrf	sprintf@prec+1
  4690  076C  1BC3               	btfsc	sprintf@prec,7
  4691  076D  03C4               	decf	sprintf@prec+1,f
  4692  076E                     l1835:	
  4693                           
  4694                           ;doprnt.c: 1381: if(width > c)
  4695  076E  0020               	movlb	0	; select bank0
  4696  076F  0845               	movf	sprintf@c,w
  4697  0770  00B4               	movwf	??_sprintf
  4698  0771  01B5               	clrf	??_sprintf+1
  4699  0772  1BB4               	btfsc	??_sprintf,7
  4700  0773  03B5               	decf	??_sprintf+1,f
  4701  0774  0835               	movf	??_sprintf+1,w
  4702  0775  3A80               	xorlw	128
  4703  0776  00B6               	movwf	??_sprintf+2
  4704  0777  0842               	movf	sprintf@width+1,w
  4705  0778  3A80               	xorlw	128
  4706  0779  0236               	subwf	??_sprintf+2,w
  4707  077A  1D03               	skipz
  4708  077B  2F7E               	goto	u2395
  4709  077C  0841               	movf	sprintf@width,w
  4710  077D  0234               	subwf	??_sprintf,w
  4711  077E                     u2395:	
  4712  077E  1803               	skipnc
  4713  077F  2F8B               	goto	l1839
  4714                           
  4715                           ;doprnt.c: 1382: width -= c;
  4716  0780  0020               	movlb	0	; select bank0
  4717  0781  0845               	movf	sprintf@c,w
  4718  0782  00B4               	movwf	??_sprintf
  4719  0783  01B5               	clrf	??_sprintf+1
  4720  0784  1BB4               	btfsc	??_sprintf,7
  4721  0785  03B5               	decf	??_sprintf+1,f
  4722  0786  0834               	movf	??_sprintf,w
  4723  0787  02C1               	subwf	sprintf@width,f
  4724  0788  0835               	movf	??_sprintf+1,w
  4725  0789  3BC2               	subwfb	sprintf@width+1,f
  4726  078A  2F8E               	goto	l1841
  4727  078B                     l1839:	
  4728                           
  4729                           ;doprnt.c: 1383: else
  4730                           ;doprnt.c: 1384: width = 0;
  4731  078B  0020               	movlb	0	; select bank0
  4732  078C  01C1               	clrf	sprintf@width
  4733  078D  01C2               	clrf	sprintf@width+1
  4734  078E                     l1841:	
  4735                           
  4736                           ;doprnt.c: 1422: {
  4737                           ;doprnt.c: 1424: if(width
  4738                           ;doprnt.c: 1428: )
  4739  078E  0841               	movf	sprintf@width,w
  4740  078F  0442               	iorwf	sprintf@width+1,w
  4741  0790  1903               	btfsc	3,2
  4742  0791  2FE6               	goto	l1855
  4743                           
  4744                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  4745                           
  4746                           ;doprnt.c: 1429: do
  4747  0792  3020               	movlw	32
  4748  0793  00B4               	movwf	??_sprintf
  4749  0794  0840               	movf	sprintf@sp,w
  4750  0795  0086               	movwf	6
  4751  0796  0187               	clrf	7
  4752  0797  0834               	movf	??_sprintf,w
  4753  0798  0081               	movwf	1
  4754  0799  3001               	movlw	1
  4755  079A  00B4               	movwf	??_sprintf
  4756  079B  0834               	movf	??_sprintf,w
  4757  079C  07C0               	addwf	sprintf@sp,f
  4758                           
  4759                           ;doprnt.c: 1431: while(--width);
  4760  079D  30FF               	movlw	255
  4761  079E  07C1               	addwf	sprintf@width,f
  4762  079F  30FF               	movlw	255
  4763  07A0  3DC2               	addwfc	sprintf@width+1,f
  4764  07A1  2F8E               	goto	l1841
  4765  07A2                     l1849:	
  4766                           ;doprnt.c: 1469: }
  4767                           ;doprnt.c: 1474: while(prec--) {
  4768                           
  4769                           
  4770                           ;doprnt.c: 1478: {
  4771                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  4772  07A2  3000               	movlw	0
  4773  07A3  00A3               	movwf	___llmod@divisor+3
  4774  07A4  3000               	movlw	0
  4775  07A5  00A2               	movwf	___llmod@divisor+2
  4776  07A6  3000               	movlw	0
  4777  07A7  00A1               	movwf	___llmod@divisor+1
  4778  07A8  300A               	movlw	10
  4779  07A9  00A0               	movwf	___llmod@divisor
  4780  07AA  0844               	movf	sprintf@prec+1,w
  4781  07AB  0085               	movwf	5
  4782  07AC  0843               	movf	sprintf@prec,w
  4783  07AD  0084               	movwf	4
  4784  07AE  3584               	lslf	4,f
  4785  07AF  0D85               	rlf	5,f
  4786  07B0  3584               	lslf	4,f
  4787  07B1  0D85               	rlf	5,f
  4788  07B2  3000               	movlw	low (_dpowers| (0+32768))
  4789  07B3  0784               	addwf	4,f
  4790  07B4  3088               	movlw	high (_dpowers| (0+32768))
  4791  07B5  3D85               	addwfc	5,f
  4792  07B6  3F00               	moviw [0]fsr0
  4793  07B7  00F0               	movwf	___lldiv@divisor
  4794  07B8  3F01               	moviw [1]fsr0
  4795  07B9  00F1               	movwf	___lldiv@divisor+1
  4796  07BA  3F02               	moviw [2]fsr0
  4797  07BB  00F2               	movwf	___lldiv@divisor+2
  4798  07BC  3F03               	moviw [3]fsr0
  4799  07BD  00F3               	movwf	___lldiv@divisor+3
  4800  07BE  083F               	movf	sprintf@val+3,w
  4801  07BF  00F7               	movwf	___lldiv@dividend+3
  4802  07C0  083E               	movf	sprintf@val+2,w
  4803  07C1  00F6               	movwf	___lldiv@dividend+2
  4804  07C2  083D               	movf	sprintf@val+1,w
  4805  07C3  00F5               	movwf	___lldiv@dividend+1
  4806  07C4  083C               	movf	sprintf@val,w
  4807  07C5  00F4               	movwf	___lldiv@dividend
  4808  07C6  318F  27AE  3186   	fcall	___lldiv
  4809  07C9  0873               	movf	?___lldiv+3,w
  4810  07CA  0020               	movlb	0	; select bank0
  4811  07CB  00A7               	movwf	___llmod@dividend+3
  4812  07CC  0872               	movf	?___lldiv+2,w
  4813  07CD  00A6               	movwf	___llmod@dividend+2
  4814  07CE  0871               	movf	?___lldiv+1,w
  4815  07CF  00A5               	movwf	___llmod@dividend+1
  4816  07D0  0870               	movf	?___lldiv,w
  4817  07D1  00A4               	movwf	___llmod@dividend
  4818  07D2  318F  276B  3186   	fcall	___llmod
  4819  07D5  0020               	movlb	0	; select bank0
  4820  07D6  0820               	movf	?___llmod,w
  4821  07D7  3E30               	addlw	48
  4822  07D8  00B4               	movwf	??_sprintf
  4823  07D9  0834               	movf	??_sprintf,w
  4824  07DA  00C5               	movwf	sprintf@c
  4825                           
  4826                           ;doprnt.c: 1523: }
  4827                           ;doprnt.c: 1524: ((*sp++ = (c)));
  4828  07DB  0845               	movf	sprintf@c,w
  4829  07DC  00B4               	movwf	??_sprintf
  4830  07DD  0840               	movf	sprintf@sp,w
  4831  07DE  0086               	movwf	6
  4832  07DF  0187               	clrf	7
  4833  07E0  0834               	movf	??_sprintf,w
  4834  07E1  0081               	movwf	1
  4835  07E2  3001               	movlw	1
  4836  07E3  00B4               	movwf	??_sprintf
  4837  07E4  0834               	movf	??_sprintf,w
  4838  07E5  07C0               	addwf	sprintf@sp,f
  4839  07E6                     l1855:	
  4840  07E6  30FF               	movlw	255
  4841  07E7  07C3               	addwf	sprintf@prec,f
  4842  07E8  30FF               	movlw	255
  4843  07E9  3DC4               	addwfc	sprintf@prec+1,f
  4844  07EA  0A43               	incf	sprintf@prec,w
  4845  07EB  1D03               	skipz
  4846  07EC  2FA2               	goto	l1849
  4847  07ED  0A44               	incf	sprintf@prec+1,w
  4848  07EE  1903               	btfsc	3,2
  4849  07EF  2E1D               	goto	l1857
  4850  07F0  2FA2               	goto	l1849
  4851  07F1                     l1859:	
  4852                           ;doprnt.c: 1525: }
  4853                           ;doprnt.c: 1533: }
  4854                           ;doprnt.c: 1535: alldone:
  4855                           
  4856                           
  4857                           ;doprnt.c: 1538: *sp = 0;
  4858  07F1  0840               	movf	sprintf@sp,w
  4859  07F2  0086               	movwf	6
  4860  07F3  0187               	clrf	7
  4861  07F4  0181               	clrf	1
  4862  07F5  0008               	return
  4863  07F6                     __end_of_sprintf:	
  4864                           ;doprnt.c: 1540: return 0;
  4865                           ;	Return value of _sprintf is never used
  4866                           
  4867                           
  4868                           	psect	text11
  4869  0D3C                     __ptext11:	
  4870 ;; *************** function _isdigit *****************
  4871 ;; Defined at:
  4872 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\isdigit.c"
  4873 ;; Parameters:    Size  Location     Type
  4874 ;;  c               1    wreg     unsigned char 
  4875 ;; Auto vars:     Size  Location     Type
  4876 ;;  c               1    1[COMMON] unsigned char 
  4877 ;; Return value:  Size  Location     Type
  4878 ;;		None               void
  4879 ;; Registers used:
  4880 ;;		wreg, status,2, status,0
  4881 ;; Tracked objects:
  4882 ;;		On entry : 0/0
  4883 ;;		On exit  : 0/0
  4884 ;;		Unchanged: 0/0
  4885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4887 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4889 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4890 ;;Total ram usage:        2 bytes
  4891 ;; Hardware stack levels used:    1
  4892 ;; This function calls:
  4893 ;;		Nothing
  4894 ;; This function is called by:
  4895 ;;		_sprintf
  4896 ;; This function uses a non-reentrant model
  4897 ;;
  4898                           
  4899                           
  4900                           ;psect for function _isdigit
  4901  0D3C                     _isdigit:	
  4902                           
  4903                           ;incstack = 0
  4904                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4905                           ;isdigit@c stored from wreg
  4906  0D3C  00F1               	movwf	isdigit@c
  4907  0D3D  01F0               	clrf	_isdigit$512
  4908  0D3E  303A               	movlw	58
  4909  0D3F  0271               	subwf	isdigit@c,w
  4910  0D40  1803               	skipnc
  4911  0D41  2D48               	goto	l1537
  4912  0D42  3030               	movlw	48
  4913  0D43  0271               	subwf	isdigit@c,w
  4914  0D44  1C03               	skipc
  4915  0D45  2D48               	goto	l1537
  4916  0D46  01F0               	clrf	_isdigit$512
  4917  0D47  0AF0               	incf	_isdigit$512,f
  4918  0D48                     l1537:	
  4919  0D48  0C70               	rrf	_isdigit$512,w
  4920  0D49  0008               	return
  4921  0D4A                     __end_of_isdigit:	
  4922                           
  4923                           	psect	text12
  4924  0D6E                     __ptext12:	
  4925 ;; *************** function ___wmul *****************
  4926 ;; Defined at:
  4927 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
  4928 ;; Parameters:    Size  Location     Type
  4929 ;;  multiplier      2    0[COMMON] unsigned int 
  4930 ;;  multiplicand    2    2[COMMON] unsigned int 
  4931 ;; Auto vars:     Size  Location     Type
  4932 ;;  product         2    4[COMMON] unsigned int 
  4933 ;; Return value:  Size  Location     Type
  4934 ;;                  2    0[COMMON] unsigned int 
  4935 ;; Registers used:
  4936 ;;		wreg, status,2, status,0
  4937 ;; Tracked objects:
  4938 ;;		On entry : 0/0
  4939 ;;		On exit  : 0/0
  4940 ;;		Unchanged: 0/0
  4941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4942 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4943 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4945 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4946 ;;Total ram usage:        6 bytes
  4947 ;; Hardware stack levels used:    1
  4948 ;; This function calls:
  4949 ;;		Nothing
  4950 ;; This function is called by:
  4951 ;;		_sprintf
  4952 ;; This function uses a non-reentrant model
  4953 ;;
  4954                           
  4955                           
  4956                           ;psect for function ___wmul
  4957  0D6E                     ___wmul:	
  4958                           
  4959                           ;incstack = 0
  4960                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4961  0D6E  01F4               	clrf	___wmul@product
  4962  0D6F  01F5               	clrf	___wmul@product+1
  4963  0D70                     l1543:	
  4964  0D70  1C70               	btfss	___wmul@multiplier,0
  4965  0D71  2D76               	goto	l244
  4966  0D72  0872               	movf	___wmul@multiplicand,w
  4967  0D73  07F4               	addwf	___wmul@product,f
  4968  0D74  0873               	movf	___wmul@multiplicand+1,w
  4969  0D75  3DF5               	addwfc	___wmul@product+1,f
  4970  0D76                     l244:	
  4971  0D76  3001               	movlw	1
  4972  0D77                     u1705:	
  4973  0D77  35F2               	lslf	___wmul@multiplicand,f
  4974  0D78  0DF3               	rlf	___wmul@multiplicand+1,f
  4975  0D79  0B89               	decfsz	9,f
  4976  0D7A  2D77               	goto	u1705
  4977  0D7B  3001               	movlw	1
  4978  0D7C                     u1715:	
  4979  0D7C  36F1               	lsrf	___wmul@multiplier+1,f
  4980  0D7D  0CF0               	rrf	___wmul@multiplier,f
  4981  0D7E  0B89               	decfsz	9,f
  4982  0D7F  2D7C               	goto	u1715
  4983  0D80  0870               	movf	___wmul@multiplier,w
  4984  0D81  0471               	iorwf	___wmul@multiplier+1,w
  4985  0D82  1D03               	btfss	3,2
  4986  0D83  2D70               	goto	l1543
  4987  0D84  0875               	movf	___wmul@product+1,w
  4988  0D85  00F1               	movwf	?___wmul+1
  4989  0D86  0874               	movf	___wmul@product,w
  4990  0D87  00F0               	movwf	?___wmul
  4991  0D88  0008               	return
  4992  0D89                     __end_of___wmul:	
  4993                           
  4994                           	psect	text13
  4995  0F6B                     __ptext13:	
  4996 ;; *************** function ___llmod *****************
  4997 ;; Defined at:
  4998 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\llmod.c"
  4999 ;; Parameters:    Size  Location     Type
  5000 ;;  divisor         4    0[BANK0 ] unsigned long 
  5001 ;;  dividend        4    4[BANK0 ] unsigned long 
  5002 ;; Auto vars:     Size  Location     Type
  5003 ;;  counter         1    9[BANK0 ] unsigned char 
  5004 ;; Return value:  Size  Location     Type
  5005 ;;                  4    0[BANK0 ] unsigned long 
  5006 ;; Registers used:
  5007 ;;		wreg, status,2, status,0
  5008 ;; Tracked objects:
  5009 ;;		On entry : 0/0
  5010 ;;		On exit  : 0/0
  5011 ;;		Unchanged: 0/0
  5012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5013 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5014 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5015 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5016 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5017 ;;Total ram usage:       10 bytes
  5018 ;; Hardware stack levels used:    1
  5019 ;; This function calls:
  5020 ;;		Nothing
  5021 ;; This function is called by:
  5022 ;;		_sprintf
  5023 ;; This function uses a non-reentrant model
  5024 ;;
  5025                           
  5026                           
  5027                           ;psect for function ___llmod
  5028  0F6B                     ___llmod:	
  5029                           
  5030                           ;incstack = 0
  5031                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5032  0F6B  0020               	movlb	0	; select bank0
  5033  0F6C  0823               	movf	___llmod@divisor+3,w
  5034  0F6D  0422               	iorwf	___llmod@divisor+2,w
  5035  0F6E  0421               	iorwf	___llmod@divisor+1,w
  5036  0F6F  0420               	iorwf	___llmod@divisor,w
  5037  0F70  1903               	skipnz
  5038  0F71  2FA5               	goto	l1665
  5039  0F72  01A9               	clrf	___llmod@counter
  5040  0F73  0AA9               	incf	___llmod@counter,f
  5041  0F74                     l1655:	
  5042  0F74  1BA3               	btfsc	___llmod@divisor+3,7
  5043  0F75  2F82               	goto	l1657
  5044  0F76  3001               	movlw	1
  5045  0F77                     u2045:	
  5046  0F77  35A0               	lslf	___llmod@divisor,f
  5047  0F78  0DA1               	rlf	___llmod@divisor+1,f
  5048  0F79  0DA2               	rlf	___llmod@divisor+2,f
  5049  0F7A  0DA3               	rlf	___llmod@divisor+3,f
  5050  0F7B  0B89               	decfsz	9,f
  5051  0F7C  2F77               	goto	u2045
  5052  0F7D  3001               	movlw	1
  5053  0F7E  00A8               	movwf	??___llmod
  5054  0F7F  0828               	movf	??___llmod,w
  5055  0F80  07A9               	addwf	___llmod@counter,f
  5056  0F81  2F74               	goto	l1655
  5057  0F82                     l1657:	
  5058  0F82  0823               	movf	___llmod@divisor+3,w
  5059  0F83  0227               	subwf	___llmod@dividend+3,w
  5060  0F84  1D03               	skipz
  5061  0F85  2F90               	goto	u2065
  5062  0F86  0822               	movf	___llmod@divisor+2,w
  5063  0F87  0226               	subwf	___llmod@dividend+2,w
  5064  0F88  1D03               	skipz
  5065  0F89  2F90               	goto	u2065
  5066  0F8A  0821               	movf	___llmod@divisor+1,w
  5067  0F8B  0225               	subwf	___llmod@dividend+1,w
  5068  0F8C  1D03               	skipz
  5069  0F8D  2F90               	goto	u2065
  5070  0F8E  0820               	movf	___llmod@divisor,w
  5071  0F8F  0224               	subwf	___llmod@dividend,w
  5072  0F90                     u2065:	
  5073  0F90  1C03               	skipc
  5074  0F91  2F9A               	goto	l1661
  5075  0F92  0820               	movf	___llmod@divisor,w
  5076  0F93  02A4               	subwf	___llmod@dividend,f
  5077  0F94  0821               	movf	___llmod@divisor+1,w
  5078  0F95  3BA5               	subwfb	___llmod@dividend+1,f
  5079  0F96  0822               	movf	___llmod@divisor+2,w
  5080  0F97  3BA6               	subwfb	___llmod@dividend+2,f
  5081  0F98  0823               	movf	___llmod@divisor+3,w
  5082  0F99  3BA7               	subwfb	___llmod@dividend+3,f
  5083  0F9A                     l1661:	
  5084  0F9A  3001               	movlw	1
  5085  0F9B                     u2075:	
  5086  0F9B  36A3               	lsrf	___llmod@divisor+3,f
  5087  0F9C  0CA2               	rrf	___llmod@divisor+2,f
  5088  0F9D  0CA1               	rrf	___llmod@divisor+1,f
  5089  0F9E  0CA0               	rrf	___llmod@divisor,f
  5090  0F9F  0B89               	decfsz	9,f
  5091  0FA0  2F9B               	goto	u2075
  5092  0FA1  3001               	movlw	1
  5093  0FA2  02A9               	subwf	___llmod@counter,f
  5094  0FA3  1D03               	btfss	3,2
  5095  0FA4  2F82               	goto	l1657
  5096  0FA5                     l1665:	
  5097  0FA5  0827               	movf	___llmod@dividend+3,w
  5098  0FA6  00A3               	movwf	?___llmod+3
  5099  0FA7  0826               	movf	___llmod@dividend+2,w
  5100  0FA8  00A2               	movwf	?___llmod+2
  5101  0FA9  0825               	movf	___llmod@dividend+1,w
  5102  0FAA  00A1               	movwf	?___llmod+1
  5103  0FAB  0824               	movf	___llmod@dividend,w
  5104  0FAC  00A0               	movwf	?___llmod
  5105  0FAD  0008               	return
  5106  0FAE                     __end_of___llmod:	
  5107                           
  5108                           	psect	text14
  5109  0FAE                     __ptext14:	
  5110 ;; *************** function ___lldiv *****************
  5111 ;; Defined at:
  5112 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lldiv.c"
  5113 ;; Parameters:    Size  Location     Type
  5114 ;;  divisor         4    0[COMMON] unsigned long 
  5115 ;;  dividend        4    4[COMMON] unsigned long 
  5116 ;; Auto vars:     Size  Location     Type
  5117 ;;  quotient        4    9[COMMON] unsigned long 
  5118 ;;  counter         1   13[COMMON] unsigned char 
  5119 ;; Return value:  Size  Location     Type
  5120 ;;                  4    0[COMMON] unsigned long 
  5121 ;; Registers used:
  5122 ;;		wreg, status,2, status,0
  5123 ;; Tracked objects:
  5124 ;;		On entry : 0/0
  5125 ;;		On exit  : 0/0
  5126 ;;		Unchanged: 0/0
  5127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5128 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5129 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5130 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5131 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5132 ;;Total ram usage:       14 bytes
  5133 ;; Hardware stack levels used:    1
  5134 ;; This function calls:
  5135 ;;		Nothing
  5136 ;; This function is called by:
  5137 ;;		_sprintf
  5138 ;; This function uses a non-reentrant model
  5139 ;;
  5140                           
  5141                           
  5142                           ;psect for function ___lldiv
  5143  0FAE                     ___lldiv:	
  5144                           
  5145                           ;incstack = 0
  5146                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5147  0FAE  3000               	movlw	0
  5148  0FAF  00FC               	movwf	___lldiv@quotient+3
  5149  0FB0  3000               	movlw	0
  5150  0FB1  00FB               	movwf	___lldiv@quotient+2
  5151  0FB2  3000               	movlw	0
  5152  0FB3  00FA               	movwf	___lldiv@quotient+1
  5153  0FB4  3000               	movlw	0
  5154  0FB5  00F9               	movwf	___lldiv@quotient
  5155  0FB6  0873               	movf	___lldiv@divisor+3,w
  5156  0FB7  0472               	iorwf	___lldiv@divisor+2,w
  5157  0FB8  0471               	iorwf	___lldiv@divisor+1,w
  5158  0FB9  0470               	iorwf	___lldiv@divisor,w
  5159  0FBA  1903               	skipnz
  5160  0FBB  2FF7               	goto	l1645
  5161  0FBC  01FD               	clrf	___lldiv@counter
  5162  0FBD  0AFD               	incf	___lldiv@counter,f
  5163  0FBE                     l1631:	
  5164  0FBE  1BF3               	btfsc	___lldiv@divisor+3,7
  5165  0FBF  2FCC               	goto	l1633
  5166  0FC0  3001               	movlw	1
  5167  0FC1                     u1975:	
  5168  0FC1  35F0               	lslf	___lldiv@divisor,f
  5169  0FC2  0DF1               	rlf	___lldiv@divisor+1,f
  5170  0FC3  0DF2               	rlf	___lldiv@divisor+2,f
  5171  0FC4  0DF3               	rlf	___lldiv@divisor+3,f
  5172  0FC5  0B89               	decfsz	9,f
  5173  0FC6  2FC1               	goto	u1975
  5174  0FC7  3001               	movlw	1
  5175  0FC8  00F8               	movwf	??___lldiv
  5176  0FC9  0878               	movf	??___lldiv,w
  5177  0FCA  07FD               	addwf	___lldiv@counter,f
  5178  0FCB  2FBE               	goto	l1631
  5179  0FCC                     l1633:	
  5180  0FCC  3001               	movlw	1
  5181  0FCD                     u1995:	
  5182  0FCD  35F9               	lslf	___lldiv@quotient,f
  5183  0FCE  0DFA               	rlf	___lldiv@quotient+1,f
  5184  0FCF  0DFB               	rlf	___lldiv@quotient+2,f
  5185  0FD0  0DFC               	rlf	___lldiv@quotient+3,f
  5186  0FD1  0B89               	decfsz	9,f
  5187  0FD2  2FCD               	goto	u1995
  5188  0FD3  0873               	movf	___lldiv@divisor+3,w
  5189  0FD4  0277               	subwf	___lldiv@dividend+3,w
  5190  0FD5  1D03               	skipz
  5191  0FD6  2FE1               	goto	u2005
  5192  0FD7  0872               	movf	___lldiv@divisor+2,w
  5193  0FD8  0276               	subwf	___lldiv@dividend+2,w
  5194  0FD9  1D03               	skipz
  5195  0FDA  2FE1               	goto	u2005
  5196  0FDB  0871               	movf	___lldiv@divisor+1,w
  5197  0FDC  0275               	subwf	___lldiv@dividend+1,w
  5198  0FDD  1D03               	skipz
  5199  0FDE  2FE1               	goto	u2005
  5200  0FDF  0870               	movf	___lldiv@divisor,w
  5201  0FE0  0274               	subwf	___lldiv@dividend,w
  5202  0FE1                     u2005:	
  5203  0FE1  1C03               	skipc
  5204  0FE2  2FEC               	goto	l1641
  5205  0FE3  0870               	movf	___lldiv@divisor,w
  5206  0FE4  02F4               	subwf	___lldiv@dividend,f
  5207  0FE5  0871               	movf	___lldiv@divisor+1,w
  5208  0FE6  3BF5               	subwfb	___lldiv@dividend+1,f
  5209  0FE7  0872               	movf	___lldiv@divisor+2,w
  5210  0FE8  3BF6               	subwfb	___lldiv@dividend+2,f
  5211  0FE9  0873               	movf	___lldiv@divisor+3,w
  5212  0FEA  3BF7               	subwfb	___lldiv@dividend+3,f
  5213  0FEB  1479               	bsf	___lldiv@quotient,0
  5214  0FEC                     l1641:	
  5215  0FEC  3001               	movlw	1
  5216  0FED                     u2015:	
  5217  0FED  36F3               	lsrf	___lldiv@divisor+3,f
  5218  0FEE  0CF2               	rrf	___lldiv@divisor+2,f
  5219  0FEF  0CF1               	rrf	___lldiv@divisor+1,f
  5220  0FF0  0CF0               	rrf	___lldiv@divisor,f
  5221  0FF1  0B89               	decfsz	9,f
  5222  0FF2  2FED               	goto	u2015
  5223  0FF3  3001               	movlw	1
  5224  0FF4  02FD               	subwf	___lldiv@counter,f
  5225  0FF5  1D03               	btfss	3,2
  5226  0FF6  2FCC               	goto	l1633
  5227  0FF7                     l1645:	
  5228  0FF7  087C               	movf	___lldiv@quotient+3,w
  5229  0FF8  00F3               	movwf	?___lldiv+3
  5230  0FF9  087B               	movf	___lldiv@quotient+2,w
  5231  0FFA  00F2               	movwf	?___lldiv+2
  5232  0FFB  087A               	movf	___lldiv@quotient+1,w
  5233  0FFC  00F1               	movwf	?___lldiv+1
  5234  0FFD  0879               	movf	___lldiv@quotient,w
  5235  0FFE  00F0               	movwf	?___lldiv
  5236  0FFF  0008               	return
  5237  1000                     __end_of___lldiv:	
  5238                           
  5239                           	psect	text15
  5240  0E50                     __ptext15:	
  5241 ;; *************** function ___lltoft *****************
  5242 ;; Defined at:
  5243 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lltoft.c"
  5244 ;; Parameters:    Size  Location     Type
  5245 ;;  c               4    8[COMMON] unsigned long 
  5246 ;; Auto vars:     Size  Location     Type
  5247 ;;  exp             1   13[COMMON] unsigned char 
  5248 ;; Return value:  Size  Location     Type
  5249 ;;                  3    8[COMMON] float 
  5250 ;; Registers used:
  5251 ;;		wreg, status,2, status,0, pclath, cstack
  5252 ;; Tracked objects:
  5253 ;;		On entry : 0/0
  5254 ;;		On exit  : 0/0
  5255 ;;		Unchanged: 0/0
  5256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5257 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5258 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5259 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5260 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5261 ;;Total ram usage:        6 bytes
  5262 ;; Hardware stack levels used:    1
  5263 ;; Hardware stack levels required when called:    1
  5264 ;; This function calls:
  5265 ;;		___ftpack
  5266 ;; This function is called by:
  5267 ;;		_ftoa
  5268 ;; This function uses a non-reentrant model
  5269 ;;
  5270                           
  5271                           
  5272                           ;psect for function ___lltoft
  5273  0E50                     ___lltoft:	
  5274                           
  5275                           ;incstack = 0
  5276                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  5277  0E50  308E               	movlw	142
  5278  0E51  00FC               	movwf	??___lltoft
  5279  0E52  087C               	movf	??___lltoft,w
  5280  0E53  00FD               	movwf	___lltoft@exp
  5281  0E54                     l2025:	
  5282  0E54  30FF               	movlw	255
  5283  0E55  057B               	andwf	___lltoft@c+3,w
  5284  0E56  1903               	btfsc	3,2
  5285  0E57  2E64               	goto	l2027
  5286  0E58  3001               	movlw	1
  5287  0E59                     u2745:	
  5288  0E59  36FB               	lsrf	___lltoft@c+3,f
  5289  0E5A  0CFA               	rrf	___lltoft@c+2,f
  5290  0E5B  0CF9               	rrf	___lltoft@c+1,f
  5291  0E5C  0CF8               	rrf	___lltoft@c,f
  5292  0E5D  0B89               	decfsz	9,f
  5293  0E5E  2E59               	goto	u2745
  5294  0E5F  3001               	movlw	1
  5295  0E60  00FC               	movwf	??___lltoft
  5296  0E61  087C               	movf	??___lltoft,w
  5297  0E62  07FD               	addwf	___lltoft@exp,f
  5298  0E63  2E54               	goto	l2025
  5299  0E64                     l2027:	
  5300  0E64  0878               	movf	___lltoft@c,w
  5301  0E65  00F0               	movwf	___ftpack@arg
  5302  0E66  0879               	movf	___lltoft@c+1,w
  5303  0E67  00F1               	movwf	___ftpack@arg+1
  5304  0E68  087A               	movf	___lltoft@c+2,w
  5305  0E69  00F2               	movwf	___ftpack@arg+2
  5306  0E6A  087D               	movf	___lltoft@exp,w
  5307  0E6B  00FC               	movwf	??___lltoft
  5308  0E6C  087C               	movf	??___lltoft,w
  5309  0E6D  00F3               	movwf	___ftpack@exp
  5310  0E6E  01F4               	clrf	___ftpack@sign
  5311  0E6F  3180  20D0         	fcall	___ftpack
  5312  0E71  0870               	movf	?___ftpack,w
  5313  0E72  00F8               	movwf	?___lltoft
  5314  0E73  0871               	movf	?___ftpack+1,w
  5315  0E74  00F9               	movwf	?___lltoft+1
  5316  0E75  0872               	movf	?___ftpack+2,w
  5317  0E76  00FA               	movwf	?___lltoft+2
  5318  0E77  0008               	return
  5319  0E78                     __end_of___lltoft:	
  5320                           
  5321                           	psect	text16
  5322  0213                     __ptext16:	
  5323 ;; *************** function ___fttol *****************
  5324 ;; Defined at:
  5325 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\fttol.c"
  5326 ;; Parameters:    Size  Location     Type
  5327 ;;  f1              3   10[BANK0 ] float 
  5328 ;; Auto vars:     Size  Location     Type
  5329 ;;  lval            4   19[BANK0 ] unsigned long 
  5330 ;;  exp1            1   23[BANK0 ] unsigned char 
  5331 ;;  sign1           1   18[BANK0 ] unsigned char 
  5332 ;; Return value:  Size  Location     Type
  5333 ;;                  4   10[BANK0 ] long 
  5334 ;; Registers used:
  5335 ;;		wreg, status,2, status,0
  5336 ;; Tracked objects:
  5337 ;;		On entry : 0/0
  5338 ;;		On exit  : 0/0
  5339 ;;		Unchanged: 0/0
  5340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5341 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5342 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5343 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5344 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5345 ;;Total ram usage:       14 bytes
  5346 ;; Hardware stack levels used:    1
  5347 ;; This function calls:
  5348 ;;		Nothing
  5349 ;; This function is called by:
  5350 ;;		_ftoa
  5351 ;; This function uses a non-reentrant model
  5352 ;;
  5353                           
  5354                           
  5355                           ;psect for function ___fttol
  5356  0213                     ___fttol:	
  5357                           
  5358                           ;incstack = 0
  5359                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  5360  0213  0020               	movlb	0	; select bank0
  5361  0214  082A               	movf	___fttol@f1,w
  5362  0215  00AE               	movwf	??___fttol
  5363  0216  082B               	movf	___fttol@f1+1,w
  5364  0217  00AF               	movwf	??___fttol+1
  5365  0218  082C               	movf	___fttol@f1+2,w
  5366  0219  00B0               	movwf	??___fttol+2
  5367  021A  1003               	clrc
  5368  021B  0D2F               	rlf	??___fttol+1,w
  5369  021C  0D30               	rlf	??___fttol+2,w
  5370  021D  00B1               	movwf	??___fttol+3
  5371  021E  0831               	movf	??___fttol+3,w
  5372  021F  00B7               	movwf	___fttol@exp1
  5373  0220  0837               	movf	___fttol@exp1,w
  5374  0221  1D03               	btfss	3,2
  5375  0222  2A2C               	goto	l1955
  5376  0223  3000               	movlw	0
  5377  0224  00AD               	movwf	?___fttol+3
  5378  0225  3000               	movlw	0
  5379  0226  00AC               	movwf	?___fttol+2
  5380  0227  3000               	movlw	0
  5381  0228  00AB               	movwf	?___fttol+1
  5382  0229  3000               	movlw	0
  5383  022A  00AA               	movwf	?___fttol
  5384  022B  0008               	return
  5385  022C                     l1955:	
  5386  022C  082A               	movf	___fttol@f1,w
  5387  022D  00AE               	movwf	??___fttol
  5388  022E  082B               	movf	___fttol@f1+1,w
  5389  022F  00AF               	movwf	??___fttol+1
  5390  0230  082C               	movf	___fttol@f1+2,w
  5391  0231  00B0               	movwf	??___fttol+2
  5392  0232  3017               	movlw	23
  5393  0233                     u2625:	
  5394  0233  36B0               	lsrf	??___fttol+2,f
  5395  0234  0CAF               	rrf	??___fttol+1,f
  5396  0235  0CAE               	rrf	??___fttol,f
  5397  0236  0B89               	decfsz	9,f
  5398  0237  2A33               	goto	u2625
  5399  0238  082E               	movf	??___fttol,w
  5400  0239  00B1               	movwf	??___fttol+3
  5401  023A  0831               	movf	??___fttol+3,w
  5402  023B  00B2               	movwf	___fttol@sign1
  5403  023C  17AB               	bsf	___fttol@f1+1,7
  5404  023D  30FF               	movlw	255
  5405  023E  05AA               	andwf	___fttol@f1,f
  5406  023F  30FF               	movlw	255
  5407  0240  05AB               	andwf	___fttol@f1+1,f
  5408  0241  3000               	movlw	0
  5409  0242  05AC               	andwf	___fttol@f1+2,f
  5410  0243  082A               	movf	___fttol@f1,w
  5411  0244  00B3               	movwf	___fttol@lval
  5412  0245  082B               	movf	___fttol@f1+1,w
  5413  0246  00B4               	movwf	___fttol@lval+1
  5414  0247  082C               	movf	___fttol@f1+2,w
  5415  0248  00B5               	movwf	___fttol@lval+2
  5416  0249  01B6               	clrf	___fttol@lval+3
  5417  024A  308E               	movlw	142
  5418  024B  02B7               	subwf	___fttol@exp1,f
  5419  024C  1FB7               	btfss	___fttol@exp1,7
  5420  024D  2A6A               	goto	l1975
  5421  024E  0837               	movf	___fttol@exp1,w
  5422  024F  3A80               	xorlw	128
  5423  0250  3E8F               	addlw	143
  5424  0251  1803               	skipnc
  5425  0252  2A5C               	goto	l1973
  5426  0253  3000               	movlw	0
  5427  0254  00AD               	movwf	?___fttol+3
  5428  0255  3000               	movlw	0
  5429  0256  00AC               	movwf	?___fttol+2
  5430  0257  3000               	movlw	0
  5431  0258  00AB               	movwf	?___fttol+1
  5432  0259  3000               	movlw	0
  5433  025A  00AA               	movwf	?___fttol
  5434  025B  0008               	return
  5435  025C                     l1973:	
  5436  025C  3001               	movlw	1
  5437  025D                     u2655:	
  5438  025D  36B6               	lsrf	___fttol@lval+3,f
  5439  025E  0CB5               	rrf	___fttol@lval+2,f
  5440  025F  0CB4               	rrf	___fttol@lval+1,f
  5441  0260  0CB3               	rrf	___fttol@lval,f
  5442  0261  0B89               	decfsz	9,f
  5443  0262  2A5D               	goto	u2655
  5444  0263  3001               	movlw	1
  5445  0264  00AE               	movwf	??___fttol
  5446  0265  082E               	movf	??___fttol,w
  5447  0266  07B7               	addwf	___fttol@exp1,f
  5448  0267  1903               	btfsc	3,2
  5449  0268  2A83               	goto	l1983
  5450  0269  2A5C               	goto	l1973
  5451  026A                     l1975:	
  5452  026A  3018               	movlw	24
  5453  026B  0237               	subwf	___fttol@exp1,w
  5454  026C  1C03               	skipc
  5455  026D  2A80               	goto	l504
  5456  026E  3000               	movlw	0
  5457  026F  00AD               	movwf	?___fttol+3
  5458  0270  3000               	movlw	0
  5459  0271  00AC               	movwf	?___fttol+2
  5460  0272  3000               	movlw	0
  5461  0273  00AB               	movwf	?___fttol+1
  5462  0274  3000               	movlw	0
  5463  0275  00AA               	movwf	?___fttol
  5464  0276  0008               	return
  5465  0277                     l1981:	
  5466  0277  3001               	movlw	1
  5467  0278                     u2685:	
  5468  0278  35B3               	lslf	___fttol@lval,f
  5469  0279  0DB4               	rlf	___fttol@lval+1,f
  5470  027A  0DB5               	rlf	___fttol@lval+2,f
  5471  027B  0DB6               	rlf	___fttol@lval+3,f
  5472  027C  0B89               	decfsz	9,f
  5473  027D  2A78               	goto	u2685
  5474  027E  3001               	movlw	1
  5475  027F  02B7               	subwf	___fttol@exp1,f
  5476  0280                     l504:	
  5477  0280  0837               	movf	___fttol@exp1,w
  5478  0281  1D03               	btfss	3,2
  5479  0282  2A77               	goto	l1981
  5480  0283                     l1983:	
  5481  0283  0832               	movf	___fttol@sign1,w
  5482  0284  1903               	btfsc	3,2
  5483  0285  2A91               	goto	l1987
  5484  0286  09B3               	comf	___fttol@lval,f
  5485  0287  09B4               	comf	___fttol@lval+1,f
  5486  0288  09B5               	comf	___fttol@lval+2,f
  5487  0289  09B6               	comf	___fttol@lval+3,f
  5488  028A  0AB3               	incf	___fttol@lval,f
  5489  028B  1903               	skipnz
  5490  028C  0AB4               	incf	___fttol@lval+1,f
  5491  028D  1903               	skipnz
  5492  028E  0AB5               	incf	___fttol@lval+2,f
  5493  028F  1903               	skipnz
  5494  0290  0AB6               	incf	___fttol@lval+3,f
  5495  0291                     l1987:	
  5496  0291  0836               	movf	___fttol@lval+3,w
  5497  0292  00AD               	movwf	?___fttol+3
  5498  0293  0835               	movf	___fttol@lval+2,w
  5499  0294  00AC               	movwf	?___fttol+2
  5500  0295  0834               	movf	___fttol@lval+1,w
  5501  0296  00AB               	movwf	?___fttol+1
  5502  0297  0833               	movf	___fttol@lval,w
  5503  0298  00AA               	movwf	?___fttol
  5504  0299  0008               	return
  5505  029A                     __end_of___fttol:	
  5506                           
  5507                           	psect	text17
  5508  0DA7                     __ptext17:	
  5509 ;; *************** function ___ftsub *****************
  5510 ;; Defined at:
  5511 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftsub.c"
  5512 ;; Parameters:    Size  Location     Type
  5513 ;;  f2              3    7[BANK0 ] float 
  5514 ;;  f1              3   10[BANK0 ] float 
  5515 ;; Auto vars:     Size  Location     Type
  5516 ;;		None
  5517 ;; Return value:  Size  Location     Type
  5518 ;;                  3    7[BANK0 ] float 
  5519 ;; Registers used:
  5520 ;;		wreg, status,2, status,0, pclath, cstack
  5521 ;; Tracked objects:
  5522 ;;		On entry : 0/0
  5523 ;;		On exit  : 0/0
  5524 ;;		Unchanged: 0/0
  5525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5526 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5529 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5530 ;;Total ram usage:        6 bytes
  5531 ;; Hardware stack levels used:    1
  5532 ;; Hardware stack levels required when called:    2
  5533 ;; This function calls:
  5534 ;;		___ftadd
  5535 ;; This function is called by:
  5536 ;;		_ftoa
  5537 ;; This function uses a non-reentrant model
  5538 ;;
  5539                           
  5540                           
  5541                           ;psect for function ___ftsub
  5542  0DA7                     ___ftsub:	
  5543                           
  5544                           ;incstack = 0
  5545                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  5546  0DA7  0020               	movlb	0	; select bank0
  5547  0DA8  0829               	movf	___ftsub@f2+2,w
  5548  0DA9  0428               	iorwf	___ftsub@f2+1,w
  5549  0DAA  0427               	iorwf	___ftsub@f2,w
  5550  0DAB  1903               	skipnz
  5551  0DAC  2DAF               	goto	l1945
  5552  0DAD  3080               	movlw	128
  5553  0DAE  06A9               	xorwf	___ftsub@f2+2,f
  5554  0DAF                     l1945:	
  5555  0DAF  082A               	movf	___ftsub@f1,w
  5556  0DB0  00F8               	movwf	___ftadd@f1
  5557  0DB1  082B               	movf	___ftsub@f1+1,w
  5558  0DB2  00F9               	movwf	___ftadd@f1+1
  5559  0DB3  082C               	movf	___ftsub@f1+2,w
  5560  0DB4  00FA               	movwf	___ftadd@f1+2
  5561  0DB5  0827               	movf	___ftsub@f2,w
  5562  0DB6  00FB               	movwf	___ftadd@f2
  5563  0DB7  0828               	movf	___ftsub@f2+1,w
  5564  0DB8  00FC               	movwf	___ftadd@f2+1
  5565  0DB9  0829               	movf	___ftsub@f2+2,w
  5566  0DBA  00FD               	movwf	___ftadd@f2+2
  5567  0DBB  3183  23EF         	fcall	___ftadd
  5568  0DBD  0878               	movf	?___ftadd,w
  5569  0DBE  0020               	movlb	0	; select bank0
  5570  0DBF  00A7               	movwf	?___ftsub
  5571  0DC0  0879               	movf	?___ftadd+1,w
  5572  0DC1  00A8               	movwf	?___ftsub+1
  5573  0DC2  087A               	movf	?___ftadd+2,w
  5574  0DC3  00A9               	movwf	?___ftsub+2
  5575  0DC4  0008               	return
  5576  0DC5                     __end_of___ftsub:	
  5577                           
  5578                           	psect	text18
  5579  03EF                     __ptext18:	
  5580 ;; *************** function ___ftadd *****************
  5581 ;; Defined at:
  5582 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftadd.c"
  5583 ;; Parameters:    Size  Location     Type
  5584 ;;  f1              3    8[COMMON] float 
  5585 ;;  f2              3   11[COMMON] float 
  5586 ;; Auto vars:     Size  Location     Type
  5587 ;;  exp1            1    6[BANK0 ] unsigned char 
  5588 ;;  exp2            1    5[BANK0 ] unsigned char 
  5589 ;;  sign            1    4[BANK0 ] unsigned char 
  5590 ;; Return value:  Size  Location     Type
  5591 ;;                  3    8[COMMON] float 
  5592 ;; Registers used:
  5593 ;;		wreg, status,2, status,0, pclath, cstack
  5594 ;; Tracked objects:
  5595 ;;		On entry : 0/0
  5596 ;;		On exit  : 0/0
  5597 ;;		Unchanged: 0/0
  5598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5599 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5600 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5601 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5602 ;;      Totals:         6       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5603 ;;Total ram usage:       13 bytes
  5604 ;; Hardware stack levels used:    1
  5605 ;; Hardware stack levels required when called:    1
  5606 ;; This function calls:
  5607 ;;		___ftpack
  5608 ;; This function is called by:
  5609 ;;		_main
  5610 ;;		___ftsub
  5611 ;; This function uses a non-reentrant model
  5612 ;;
  5613                           
  5614                           
  5615                           ;psect for function ___ftadd
  5616  03EF                     ___ftadd:	
  5617                           
  5618                           ;incstack = 0
  5619                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  5620  03EF  0878               	movf	___ftadd@f1,w
  5621  03F0  0020               	movlb	0	; select bank0
  5622  03F1  00A0               	movwf	??___ftadd
  5623  03F2  0879               	movf	___ftadd@f1+1,w
  5624  03F3  00A1               	movwf	??___ftadd+1
  5625  03F4  087A               	movf	___ftadd@f1+2,w
  5626  03F5  00A2               	movwf	??___ftadd+2
  5627  03F6  1003               	clrc
  5628  03F7  0D21               	rlf	??___ftadd+1,w
  5629  03F8  0D22               	rlf	??___ftadd+2,w
  5630  03F9  00A3               	movwf	??___ftadd+3
  5631  03FA  0823               	movf	??___ftadd+3,w
  5632  03FB  00A6               	movwf	___ftadd@exp1
  5633  03FC  087B               	movf	___ftadd@f2,w
  5634  03FD  00A0               	movwf	??___ftadd
  5635  03FE  087C               	movf	___ftadd@f2+1,w
  5636  03FF  00A1               	movwf	??___ftadd+1
  5637  0400  087D               	movf	___ftadd@f2+2,w
  5638  0401  00A2               	movwf	??___ftadd+2
  5639  0402  1003               	clrc
  5640  0403  0D21               	rlf	??___ftadd+1,w
  5641  0404  0D22               	rlf	??___ftadd+2,w
  5642  0405  00A3               	movwf	??___ftadd+3
  5643  0406  0823               	movf	??___ftadd+3,w
  5644  0407  00A5               	movwf	___ftadd@exp2
  5645  0408  0826               	movf	___ftadd@exp1,w
  5646  0409  1903               	btfsc	3,2
  5647  040A  2C17               	goto	l1561
  5648  040B  0825               	movf	___ftadd@exp2,w
  5649  040C  0226               	subwf	___ftadd@exp1,w
  5650  040D  1803               	skipnc
  5651  040E  2C1E               	goto	l1565
  5652  040F  0326               	decf	___ftadd@exp1,w
  5653  0410  3AFF               	xorlw	255
  5654  0411  0725               	addwf	___ftadd@exp2,w
  5655  0412  00A0               	movwf	??___ftadd
  5656  0413  3019               	movlw	25
  5657  0414  0220               	subwf	??___ftadd,w
  5658  0415  1C03               	skipc
  5659  0416  2C1E               	goto	l1565
  5660  0417                     l1561:	
  5661  0417  087B               	movf	___ftadd@f2,w
  5662  0418  00F8               	movwf	?___ftadd
  5663  0419  087C               	movf	___ftadd@f2+1,w
  5664  041A  00F9               	movwf	?___ftadd+1
  5665  041B  087D               	movf	___ftadd@f2+2,w
  5666  041C  00FA               	movwf	?___ftadd+2
  5667  041D  0008               	return
  5668  041E                     l1565:	
  5669  041E  0825               	movf	___ftadd@exp2,w
  5670  041F  1903               	btfsc	3,2
  5671  0420  0008               	return
  5672  0421  0826               	movf	___ftadd@exp1,w
  5673  0422  0225               	subwf	___ftadd@exp2,w
  5674  0423  1803               	skipnc
  5675  0424  2C2D               	goto	l1571
  5676  0425  0325               	decf	___ftadd@exp2,w
  5677  0426  3AFF               	xorlw	255
  5678  0427  0726               	addwf	___ftadd@exp1,w
  5679  0428  00A0               	movwf	??___ftadd
  5680  0429  3019               	movlw	25
  5681  042A  0220               	subwf	??___ftadd,w
  5682  042B  1803               	btfsc	3,0
  5683  042C  0008               	return
  5684  042D                     l1571:	
  5685  042D  3006               	movlw	6
  5686  042E  00A0               	movwf	??___ftadd
  5687  042F  0820               	movf	??___ftadd,w
  5688  0430  00A4               	movwf	___ftadd@sign
  5689  0431  1BFA               	btfsc	___ftadd@f1+2,7
  5690  0432  17A4               	bsf	___ftadd@sign,7
  5691  0433  1BFD               	btfsc	___ftadd@f2+2,7
  5692  0434  1724               	bsf	___ftadd@sign,6
  5693  0435  17F9               	bsf	___ftadd@f1+1,7
  5694  0436  30FF               	movlw	255
  5695  0437  05F8               	andwf	___ftadd@f1,f
  5696  0438  30FF               	movlw	255
  5697  0439  05F9               	andwf	___ftadd@f1+1,f
  5698  043A  3000               	movlw	0
  5699  043B  05FA               	andwf	___ftadd@f1+2,f
  5700  043C  17FC               	bsf	___ftadd@f2+1,7
  5701  043D  30FF               	movlw	255
  5702  043E  05FB               	andwf	___ftadd@f2,f
  5703  043F  30FF               	movlw	255
  5704  0440  05FC               	andwf	___ftadd@f2+1,f
  5705  0441  3000               	movlw	0
  5706  0442  05FD               	andwf	___ftadd@f2+2,f
  5707  0443  0825               	movf	___ftadd@exp2,w
  5708  0444  0226               	subwf	___ftadd@exp1,w
  5709  0445  1803               	skipnc
  5710  0446  2C69               	goto	l1593
  5711  0447                     l1583:	
  5712  0447  3001               	movlw	1
  5713  0448                     u1825:	
  5714  0448  35FB               	lslf	___ftadd@f2,f
  5715  0449  0DFC               	rlf	___ftadd@f2+1,f
  5716  044A  0DFD               	rlf	___ftadd@f2+2,f
  5717  044B  0B89               	decfsz	9,f
  5718  044C  2C48               	goto	u1825
  5719  044D  3001               	movlw	1
  5720  044E  02A5               	subwf	___ftadd@exp2,f
  5721  044F  0825               	movf	___ftadd@exp2,w
  5722  0450  0626               	xorwf	___ftadd@exp1,w
  5723  0451  1903               	skipnz
  5724  0452  2C64               	goto	l1591
  5725  0453  3001               	movlw	1
  5726  0454  02A4               	subwf	___ftadd@sign,f
  5727  0455  0824               	movf	___ftadd@sign,w
  5728  0456  3907               	andlw	7
  5729  0457  1903               	btfsc	3,2
  5730  0458  2C64               	goto	l1591
  5731  0459  2C47               	goto	l1583
  5732  045A                     l1589:	
  5733  045A  3001               	movlw	1
  5734  045B                     u1855:	
  5735  045B  36FA               	lsrf	___ftadd@f1+2,f
  5736  045C  0CF9               	rrf	___ftadd@f1+1,f
  5737  045D  0CF8               	rrf	___ftadd@f1,f
  5738  045E  0B89               	decfsz	9,f
  5739  045F  2C5B               	goto	u1855
  5740  0460  3001               	movlw	1
  5741  0461  00A0               	movwf	??___ftadd
  5742  0462  0820               	movf	??___ftadd,w
  5743  0463  07A6               	addwf	___ftadd@exp1,f
  5744  0464                     l1591:	
  5745  0464  0826               	movf	___ftadd@exp1,w
  5746  0465  0625               	xorwf	___ftadd@exp2,w
  5747  0466  1903               	btfsc	3,2
  5748  0467  2C8E               	goto	l436
  5749  0468  2C5A               	goto	l1589
  5750  0469                     l1593:	
  5751  0469  0826               	movf	___ftadd@exp1,w
  5752  046A  0225               	subwf	___ftadd@exp2,w
  5753  046B  1803               	skipnc
  5754  046C  2C8E               	goto	l436
  5755  046D                     l1595:	
  5756  046D  3001               	movlw	1
  5757  046E                     u1885:	
  5758  046E  35F8               	lslf	___ftadd@f1,f
  5759  046F  0DF9               	rlf	___ftadd@f1+1,f
  5760  0470  0DFA               	rlf	___ftadd@f1+2,f
  5761  0471  0B89               	decfsz	9,f
  5762  0472  2C6E               	goto	u1885
  5763  0473  3001               	movlw	1
  5764  0474  02A6               	subwf	___ftadd@exp1,f
  5765  0475  0825               	movf	___ftadd@exp2,w
  5766  0476  0626               	xorwf	___ftadd@exp1,w
  5767  0477  1903               	skipnz
  5768  0478  2C8A               	goto	l1603
  5769  0479  3001               	movlw	1
  5770  047A  02A4               	subwf	___ftadd@sign,f
  5771  047B  0824               	movf	___ftadd@sign,w
  5772  047C  3907               	andlw	7
  5773  047D  1903               	btfsc	3,2
  5774  047E  2C8A               	goto	l1603
  5775  047F  2C6D               	goto	l1595
  5776  0480                     l1601:	
  5777  0480  3001               	movlw	1
  5778  0481                     u1915:	
  5779  0481  36FD               	lsrf	___ftadd@f2+2,f
  5780  0482  0CFC               	rrf	___ftadd@f2+1,f
  5781  0483  0CFB               	rrf	___ftadd@f2,f
  5782  0484  0B89               	decfsz	9,f
  5783  0485  2C81               	goto	u1915
  5784  0486  3001               	movlw	1
  5785  0487  00A0               	movwf	??___ftadd
  5786  0488  0820               	movf	??___ftadd,w
  5787  0489  07A5               	addwf	___ftadd@exp2,f
  5788  048A                     l1603:	
  5789  048A  0826               	movf	___ftadd@exp1,w
  5790  048B  0625               	xorwf	___ftadd@exp2,w
  5791  048C  1D03               	skipz
  5792  048D  2C80               	goto	l1601
  5793  048E                     l436:	
  5794  048E  1FA4               	btfss	___ftadd@sign,7
  5795  048F  2CA0               	goto	l1607
  5796  0490  30FF               	movlw	255
  5797  0491  06F8               	xorwf	___ftadd@f1,f
  5798  0492  30FF               	movlw	255
  5799  0493  06F9               	xorwf	___ftadd@f1+1,f
  5800  0494  30FF               	movlw	255
  5801  0495  06FA               	xorwf	___ftadd@f1+2,f
  5802  0496  3001               	movlw	1
  5803  0497  07F8               	addwf	___ftadd@f1,f
  5804  0498  3000               	movlw	0
  5805  0499  1803               	skipnc
  5806  049A  3001               	movlw	1
  5807  049B  07F9               	addwf	___ftadd@f1+1,f
  5808  049C  3000               	movlw	0
  5809  049D  1803               	skipnc
  5810  049E  3001               	movlw	1
  5811  049F  07FA               	addwf	___ftadd@f1+2,f
  5812  04A0                     l1607:	
  5813  04A0  1F24               	btfss	___ftadd@sign,6
  5814  04A1  2CB2               	goto	l1611
  5815  04A2  30FF               	movlw	255
  5816  04A3  06FB               	xorwf	___ftadd@f2,f
  5817  04A4  30FF               	movlw	255
  5818  04A5  06FC               	xorwf	___ftadd@f2+1,f
  5819  04A6  30FF               	movlw	255
  5820  04A7  06FD               	xorwf	___ftadd@f2+2,f
  5821  04A8  3001               	movlw	1
  5822  04A9  07FB               	addwf	___ftadd@f2,f
  5823  04AA  3000               	movlw	0
  5824  04AB  1803               	skipnc
  5825  04AC  3001               	movlw	1
  5826  04AD  07FC               	addwf	___ftadd@f2+1,f
  5827  04AE  3000               	movlw	0
  5828  04AF  1803               	skipnc
  5829  04B0  3001               	movlw	1
  5830  04B1  07FD               	addwf	___ftadd@f2+2,f
  5831  04B2                     l1611:	
  5832  04B2  01A4               	clrf	___ftadd@sign
  5833  04B3  0878               	movf	___ftadd@f1,w
  5834  04B4  07FB               	addwf	___ftadd@f2,f
  5835  04B5  0879               	movf	___ftadd@f1+1,w
  5836  04B6  3DFC               	addwfc	___ftadd@f2+1,f
  5837  04B7  087A               	movf	___ftadd@f1+2,w
  5838  04B8  3DFD               	addwfc	___ftadd@f2+2,f
  5839  04B9  1FFD               	btfss	___ftadd@f2+2,7
  5840  04BA  2CCD               	goto	l1621
  5841  04BB  30FF               	movlw	255
  5842  04BC  06FB               	xorwf	___ftadd@f2,f
  5843  04BD  30FF               	movlw	255
  5844  04BE  06FC               	xorwf	___ftadd@f2+1,f
  5845  04BF  30FF               	movlw	255
  5846  04C0  06FD               	xorwf	___ftadd@f2+2,f
  5847  04C1  3001               	movlw	1
  5848  04C2  07FB               	addwf	___ftadd@f2,f
  5849  04C3  3000               	movlw	0
  5850  04C4  1803               	skipnc
  5851  04C5  3001               	movlw	1
  5852  04C6  07FC               	addwf	___ftadd@f2+1,f
  5853  04C7  3000               	movlw	0
  5854  04C8  1803               	skipnc
  5855  04C9  3001               	movlw	1
  5856  04CA  07FD               	addwf	___ftadd@f2+2,f
  5857  04CB  01A4               	clrf	___ftadd@sign
  5858  04CC  0AA4               	incf	___ftadd@sign,f
  5859  04CD                     l1621:	
  5860  04CD  087B               	movf	___ftadd@f2,w
  5861  04CE  00F0               	movwf	___ftpack@arg
  5862  04CF  087C               	movf	___ftadd@f2+1,w
  5863  04D0  00F1               	movwf	___ftpack@arg+1
  5864  04D1  087D               	movf	___ftadd@f2+2,w
  5865  04D2  00F2               	movwf	___ftpack@arg+2
  5866  04D3  0826               	movf	___ftadd@exp1,w
  5867  04D4  00A0               	movwf	??___ftadd
  5868  04D5  0820               	movf	??___ftadd,w
  5869  04D6  00F3               	movwf	___ftpack@exp
  5870  04D7  0824               	movf	___ftadd@sign,w
  5871  04D8  00A1               	movwf	??___ftadd+1
  5872  04D9  0821               	movf	??___ftadd+1,w
  5873  04DA  00F4               	movwf	___ftpack@sign
  5874  04DB  3180  20D0         	fcall	___ftpack
  5875  04DD  0870               	movf	?___ftpack,w
  5876  04DE  00F8               	movwf	?___ftadd
  5877  04DF  0871               	movf	?___ftpack+1,w
  5878  04E0  00F9               	movwf	?___ftadd+1
  5879  04E1  0872               	movf	?___ftpack+2,w
  5880  04E2  00FA               	movwf	?___ftadd+2
  5881  04E3  0008               	return
  5882  04E4                     __end_of___ftadd:	
  5883                           
  5884                           	psect	text19
  5885  0D22                     __ptext19:	
  5886 ;; *************** function ___ftneg *****************
  5887 ;; Defined at:
  5888 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftneg.c"
  5889 ;; Parameters:    Size  Location     Type
  5890 ;;  f1              3    0[COMMON] float 
  5891 ;; Auto vars:     Size  Location     Type
  5892 ;;		None
  5893 ;; Return value:  Size  Location     Type
  5894 ;;                  3    0[COMMON] float 
  5895 ;; Registers used:
  5896 ;;		wreg
  5897 ;; Tracked objects:
  5898 ;;		On entry : 0/0
  5899 ;;		On exit  : 0/0
  5900 ;;		Unchanged: 0/0
  5901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5902 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5905 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5906 ;;Total ram usage:        3 bytes
  5907 ;; Hardware stack levels used:    1
  5908 ;; This function calls:
  5909 ;;		Nothing
  5910 ;; This function is called by:
  5911 ;;		_ftoa
  5912 ;; This function uses a non-reentrant model
  5913 ;;
  5914                           
  5915                           
  5916                           ;psect for function ___ftneg
  5917  0D22                     ___ftneg:	
  5918                           
  5919                           ;incstack = 0
  5920                           ; Regs used in ___ftneg: [wreg]
  5921  0D22  0872               	movf	___ftneg@f1+2,w
  5922  0D23  0471               	iorwf	___ftneg@f1+1,w
  5923  0D24  0470               	iorwf	___ftneg@f1,w
  5924  0D25  1903               	skipnz
  5925  0D26  0008               	return
  5926  0D27  3080               	movlw	128
  5927  0D28  06F2               	xorwf	___ftneg@f1+2,f
  5928  0D29  0008               	return
  5929  0D2A                     __end_of___ftneg:	
  5930                           
  5931                           	psect	text20
  5932  033C                     __ptext20:	
  5933 ;; *************** function ___ftmul *****************
  5934 ;; Defined at:
  5935 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftmul.c"
  5936 ;; Parameters:    Size  Location     Type
  5937 ;;  f1              3    8[COMMON] float 
  5938 ;;  f2              3   11[COMMON] float 
  5939 ;; Auto vars:     Size  Location     Type
  5940 ;;  f3_as_produc    3    5[BANK0 ] unsigned um
  5941 ;;  sign            1    9[BANK0 ] unsigned char 
  5942 ;;  cntr            1    8[BANK0 ] unsigned char 
  5943 ;;  exp             1    4[BANK0 ] unsigned char 
  5944 ;; Return value:  Size  Location     Type
  5945 ;;                  3    8[COMMON] float 
  5946 ;; Registers used:
  5947 ;;		wreg, status,2, status,0, pclath, cstack
  5948 ;; Tracked objects:
  5949 ;;		On entry : 0/0
  5950 ;;		On exit  : 0/0
  5951 ;;		Unchanged: 0/0
  5952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5953 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5954 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5955 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5956 ;;      Totals:         6      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5957 ;;Total ram usage:       16 bytes
  5958 ;; Hardware stack levels used:    1
  5959 ;; Hardware stack levels required when called:    1
  5960 ;; This function calls:
  5961 ;;		___ftpack
  5962 ;; This function is called by:
  5963 ;;		_ftoa
  5964 ;; This function uses a non-reentrant model
  5965 ;;
  5966                           
  5967                           
  5968                           ;psect for function ___ftmul
  5969  033C                     ___ftmul:	
  5970                           
  5971                           ;incstack = 0
  5972                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  5973  033C  0878               	movf	___ftmul@f1,w
  5974  033D  0020               	movlb	0	; select bank0
  5975  033E  00A0               	movwf	??___ftmul
  5976  033F  0879               	movf	___ftmul@f1+1,w
  5977  0340  00A1               	movwf	??___ftmul+1
  5978  0341  087A               	movf	___ftmul@f1+2,w
  5979  0342  00A2               	movwf	??___ftmul+2
  5980  0343  1003               	clrc
  5981  0344  0D21               	rlf	??___ftmul+1,w
  5982  0345  0D22               	rlf	??___ftmul+2,w
  5983  0346  00A3               	movwf	??___ftmul+3
  5984  0347  0823               	movf	??___ftmul+3,w
  5985  0348  00A4               	movwf	___ftmul@exp
  5986  0349  0824               	movf	___ftmul@exp,w
  5987  034A  1D03               	btfss	3,2
  5988  034B  2B53               	goto	l1889
  5989  034C  3000               	movlw	0
  5990  034D  00F8               	movwf	?___ftmul
  5991  034E  3000               	movlw	0
  5992  034F  00F9               	movwf	?___ftmul+1
  5993  0350  3000               	movlw	0
  5994  0351  00FA               	movwf	?___ftmul+2
  5995  0352  0008               	return
  5996  0353                     l1889:	
  5997  0353  087B               	movf	___ftmul@f2,w
  5998  0354  00A0               	movwf	??___ftmul
  5999  0355  087C               	movf	___ftmul@f2+1,w
  6000  0356  00A1               	movwf	??___ftmul+1
  6001  0357  087D               	movf	___ftmul@f2+2,w
  6002  0358  00A2               	movwf	??___ftmul+2
  6003  0359  1003               	clrc
  6004  035A  0D21               	rlf	??___ftmul+1,w
  6005  035B  0D22               	rlf	??___ftmul+2,w
  6006  035C  00A3               	movwf	??___ftmul+3
  6007  035D  0823               	movf	??___ftmul+3,w
  6008  035E  00A9               	movwf	___ftmul@sign
  6009  035F  0829               	movf	___ftmul@sign,w
  6010  0360  1D03               	btfss	3,2
  6011  0361  2B69               	goto	l1895
  6012  0362  3000               	movlw	0
  6013  0363  00F8               	movwf	?___ftmul
  6014  0364  3000               	movlw	0
  6015  0365  00F9               	movwf	?___ftmul+1
  6016  0366  3000               	movlw	0
  6017  0367  00FA               	movwf	?___ftmul+2
  6018  0368  0008               	return
  6019  0369                     l1895:	
  6020  0369  0829               	movf	___ftmul@sign,w
  6021  036A  3E7B               	addlw	123
  6022  036B  00A0               	movwf	??___ftmul
  6023  036C  0820               	movf	??___ftmul,w
  6024  036D  07A4               	addwf	___ftmul@exp,f
  6025  036E  0878               	movf	___ftmul@f1,w
  6026  036F  00A0               	movwf	??___ftmul
  6027  0370  0879               	movf	___ftmul@f1+1,w
  6028  0371  00A1               	movwf	??___ftmul+1
  6029  0372  087A               	movf	___ftmul@f1+2,w
  6030  0373  00A2               	movwf	??___ftmul+2
  6031  0374  3010               	movlw	16
  6032  0375                     u2495:	
  6033  0375  36A2               	lsrf	??___ftmul+2,f
  6034  0376  0CA1               	rrf	??___ftmul+1,f
  6035  0377  0CA0               	rrf	??___ftmul,f
  6036  0378  0B89               	decfsz	9,f
  6037  0379  2B75               	goto	u2495
  6038  037A  0820               	movf	??___ftmul,w
  6039  037B  00A3               	movwf	??___ftmul+3
  6040  037C  0823               	movf	??___ftmul+3,w
  6041  037D  00A9               	movwf	___ftmul@sign
  6042  037E  087B               	movf	___ftmul@f2,w
  6043  037F  00A0               	movwf	??___ftmul
  6044  0380  087C               	movf	___ftmul@f2+1,w
  6045  0381  00A1               	movwf	??___ftmul+1
  6046  0382  087D               	movf	___ftmul@f2+2,w
  6047  0383  00A2               	movwf	??___ftmul+2
  6048  0384  3010               	movlw	16
  6049  0385                     u2505:	
  6050  0385  36A2               	lsrf	??___ftmul+2,f
  6051  0386  0CA1               	rrf	??___ftmul+1,f
  6052  0387  0CA0               	rrf	??___ftmul,f
  6053  0388  0B89               	decfsz	9,f
  6054  0389  2B85               	goto	u2505
  6055  038A  0820               	movf	??___ftmul,w
  6056  038B  00A3               	movwf	??___ftmul+3
  6057  038C  0823               	movf	??___ftmul+3,w
  6058  038D  06A9               	xorwf	___ftmul@sign,f
  6059  038E  3080               	movlw	128
  6060  038F  00A0               	movwf	??___ftmul
  6061  0390  0820               	movf	??___ftmul,w
  6062  0391  05A9               	andwf	___ftmul@sign,f
  6063  0392  17F9               	bsf	___ftmul@f1+1,7
  6064  0393  17FC               	bsf	___ftmul@f2+1,7
  6065  0394  30FF               	movlw	255
  6066  0395  05FB               	andwf	___ftmul@f2,f
  6067  0396  30FF               	movlw	255
  6068  0397  05FC               	andwf	___ftmul@f2+1,f
  6069  0398  3000               	movlw	0
  6070  0399  05FD               	andwf	___ftmul@f2+2,f
  6071  039A  3000               	movlw	0
  6072  039B  00A5               	movwf	___ftmul@f3_as_product
  6073  039C  3000               	movlw	0
  6074  039D  00A6               	movwf	___ftmul@f3_as_product+1
  6075  039E  3000               	movlw	0
  6076  039F  00A7               	movwf	___ftmul@f3_as_product+2
  6077  03A0  3007               	movlw	7
  6078  03A1  00A0               	movwf	??___ftmul
  6079  03A2  0820               	movf	??___ftmul,w
  6080  03A3  00A8               	movwf	___ftmul@cntr
  6081  03A4                     l1907:	
  6082  03A4  1C78               	btfss	___ftmul@f1,0
  6083  03A5  2BAC               	goto	l1911
  6084  03A6  087B               	movf	___ftmul@f2,w
  6085  03A7  07A5               	addwf	___ftmul@f3_as_product,f
  6086  03A8  087C               	movf	___ftmul@f2+1,w
  6087  03A9  3DA6               	addwfc	___ftmul@f3_as_product+1,f
  6088  03AA  087D               	movf	___ftmul@f2+2,w
  6089  03AB  3DA7               	addwfc	___ftmul@f3_as_product+2,f
  6090  03AC                     l1911:	
  6091  03AC  3001               	movlw	1
  6092  03AD                     u2525:	
  6093  03AD  36FA               	lsrf	___ftmul@f1+2,f
  6094  03AE  0CF9               	rrf	___ftmul@f1+1,f
  6095  03AF  0CF8               	rrf	___ftmul@f1,f
  6096  03B0  0B89               	decfsz	9,f
  6097  03B1  2BAD               	goto	u2525
  6098  03B2  3001               	movlw	1
  6099  03B3                     u2535:	
  6100  03B3  35FB               	lslf	___ftmul@f2,f
  6101  03B4  0DFC               	rlf	___ftmul@f2+1,f
  6102  03B5  0DFD               	rlf	___ftmul@f2+2,f
  6103  03B6  0B89               	decfsz	9,f
  6104  03B7  2BB3               	goto	u2535
  6105  03B8  3001               	movlw	1
  6106  03B9  02A8               	subwf	___ftmul@cntr,f
  6107  03BA  1D03               	btfss	3,2
  6108  03BB  2BA4               	goto	l1907
  6109  03BC  3009               	movlw	9
  6110  03BD  00A0               	movwf	??___ftmul
  6111  03BE  0820               	movf	??___ftmul,w
  6112  03BF  00A8               	movwf	___ftmul@cntr
  6113  03C0                     l1919:	
  6114  03C0  1C78               	btfss	___ftmul@f1,0
  6115  03C1  2BC8               	goto	l1923
  6116  03C2  087B               	movf	___ftmul@f2,w
  6117  03C3  07A5               	addwf	___ftmul@f3_as_product,f
  6118  03C4  087C               	movf	___ftmul@f2+1,w
  6119  03C5  3DA6               	addwfc	___ftmul@f3_as_product+1,f
  6120  03C6  087D               	movf	___ftmul@f2+2,w
  6121  03C7  3DA7               	addwfc	___ftmul@f3_as_product+2,f
  6122  03C8                     l1923:	
  6123  03C8  3001               	movlw	1
  6124  03C9                     u2565:	
  6125  03C9  36FA               	lsrf	___ftmul@f1+2,f
  6126  03CA  0CF9               	rrf	___ftmul@f1+1,f
  6127  03CB  0CF8               	rrf	___ftmul@f1,f
  6128  03CC  0B89               	decfsz	9,f
  6129  03CD  2BC9               	goto	u2565
  6130  03CE  3001               	movlw	1
  6131  03CF                     u2575:	
  6132  03CF  36A7               	lsrf	___ftmul@f3_as_product+2,f
  6133  03D0  0CA6               	rrf	___ftmul@f3_as_product+1,f
  6134  03D1  0CA5               	rrf	___ftmul@f3_as_product,f
  6135  03D2  0B89               	decfsz	9,f
  6136  03D3  2BCF               	goto	u2575
  6137  03D4  3001               	movlw	1
  6138  03D5  02A8               	subwf	___ftmul@cntr,f
  6139  03D6  1D03               	btfss	3,2
  6140  03D7  2BC0               	goto	l1919
  6141  03D8  0825               	movf	___ftmul@f3_as_product,w
  6142  03D9  00F0               	movwf	___ftpack@arg
  6143  03DA  0826               	movf	___ftmul@f3_as_product+1,w
  6144  03DB  00F1               	movwf	___ftpack@arg+1
  6145  03DC  0827               	movf	___ftmul@f3_as_product+2,w
  6146  03DD  00F2               	movwf	___ftpack@arg+2
  6147  03DE  0824               	movf	___ftmul@exp,w
  6148  03DF  00A0               	movwf	??___ftmul
  6149  03E0  0820               	movf	??___ftmul,w
  6150  03E1  00F3               	movwf	___ftpack@exp
  6151  03E2  0829               	movf	___ftmul@sign,w
  6152  03E3  00A1               	movwf	??___ftmul+1
  6153  03E4  0821               	movf	??___ftmul+1,w
  6154  03E5  00F4               	movwf	___ftpack@sign
  6155  03E6  3180  20D0         	fcall	___ftpack
  6156  03E8  0870               	movf	?___ftpack,w
  6157  03E9  00F8               	movwf	?___ftmul
  6158  03EA  0871               	movf	?___ftpack+1,w
  6159  03EB  00F9               	movwf	?___ftmul+1
  6160  03EC  0872               	movf	?___ftpack+2,w
  6161  03ED  00FA               	movwf	?___ftmul+2
  6162  03EE  0008               	return
  6163  03EF                     __end_of___ftmul:	
  6164                           
  6165                           	psect	text21
  6166  00D0                     __ptext21:	
  6167 ;; *************** function ___ftpack *****************
  6168 ;; Defined at:
  6169 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\float.c"
  6170 ;; Parameters:    Size  Location     Type
  6171 ;;  arg             3    0[COMMON] unsigned um
  6172 ;;  exp             1    3[COMMON] unsigned char 
  6173 ;;  sign            1    4[COMMON] unsigned char 
  6174 ;; Auto vars:     Size  Location     Type
  6175 ;;		None
  6176 ;; Return value:  Size  Location     Type
  6177 ;;                  3    0[COMMON] float 
  6178 ;; Registers used:
  6179 ;;		wreg, status,2, status,0
  6180 ;; Tracked objects:
  6181 ;;		On entry : 0/0
  6182 ;;		On exit  : 0/0
  6183 ;;		Unchanged: 0/0
  6184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6185 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6187 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6188 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6189 ;;Total ram usage:        8 bytes
  6190 ;; Hardware stack levels used:    1
  6191 ;; This function calls:
  6192 ;;		Nothing
  6193 ;; This function is called by:
  6194 ;;		___ftadd
  6195 ;;		___ftmul
  6196 ;;		___lltoft
  6197 ;; This function uses a non-reentrant model
  6198 ;;
  6199                           
  6200                           
  6201                           ;psect for function ___ftpack
  6202  00D0                     ___ftpack:	
  6203                           
  6204                           ;incstack = 0
  6205                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  6206  00D0  0873               	movf	___ftpack@exp,w
  6207  00D1  1903               	btfsc	3,2
  6208  00D2  28D8               	goto	l1471
  6209  00D3  0872               	movf	___ftpack@arg+2,w
  6210  00D4  0471               	iorwf	___ftpack@arg+1,w
  6211  00D5  0470               	iorwf	___ftpack@arg,w
  6212  00D6  1D03               	skipz
  6213  00D7  28E9               	goto	l1477
  6214  00D8                     l1471:	
  6215  00D8  3000               	movlw	0
  6216  00D9  00F0               	movwf	?___ftpack
  6217  00DA  3000               	movlw	0
  6218  00DB  00F1               	movwf	?___ftpack+1
  6219  00DC  3000               	movlw	0
  6220  00DD  00F2               	movwf	?___ftpack+2
  6221  00DE  0008               	return
  6222  00DF                     l1475:	
  6223  00DF  3001               	movlw	1
  6224  00E0  00F5               	movwf	??___ftpack
  6225  00E1  0875               	movf	??___ftpack,w
  6226  00E2  07F3               	addwf	___ftpack@exp,f
  6227  00E3  3001               	movlw	1
  6228  00E4                     u1495:	
  6229  00E4  36F2               	lsrf	___ftpack@arg+2,f
  6230  00E5  0CF1               	rrf	___ftpack@arg+1,f
  6231  00E6  0CF0               	rrf	___ftpack@arg,f
  6232  00E7  0B89               	decfsz	9,f
  6233  00E8  28E4               	goto	u1495
  6234  00E9                     l1477:	
  6235  00E9  30FE               	movlw	254
  6236  00EA  0572               	andwf	___ftpack@arg+2,w
  6237  00EB  1903               	btfsc	3,2
  6238  00EC  2902               	goto	l405
  6239  00ED  28DF               	goto	l1475
  6240  00EE                     l1479:	
  6241  00EE  3001               	movlw	1
  6242  00EF  00F5               	movwf	??___ftpack
  6243  00F0  0875               	movf	??___ftpack,w
  6244  00F1  07F3               	addwf	___ftpack@exp,f
  6245  00F2  3001               	movlw	1
  6246  00F3  07F0               	addwf	___ftpack@arg,f
  6247  00F4  3000               	movlw	0
  6248  00F5  1803               	skipnc
  6249  00F6  3001               	movlw	1
  6250  00F7  07F1               	addwf	___ftpack@arg+1,f
  6251  00F8  3000               	movlw	0
  6252  00F9  1803               	skipnc
  6253  00FA  3001               	movlw	1
  6254  00FB  07F2               	addwf	___ftpack@arg+2,f
  6255  00FC  3001               	movlw	1
  6256  00FD                     u1515:	
  6257  00FD  36F2               	lsrf	___ftpack@arg+2,f
  6258  00FE  0CF1               	rrf	___ftpack@arg+1,f
  6259  00FF  0CF0               	rrf	___ftpack@arg,f
  6260  0100  0B89               	decfsz	9,f
  6261  0101  28FD               	goto	u1515
  6262  0102                     l405:	
  6263  0102  30FF               	movlw	255
  6264  0103  0572               	andwf	___ftpack@arg+2,w
  6265  0104  1903               	btfsc	3,2
  6266  0105  290F               	goto	l1487
  6267  0106  28EE               	goto	l1479
  6268  0107                     l1485:	
  6269  0107  3001               	movlw	1
  6270  0108  02F3               	subwf	___ftpack@exp,f
  6271  0109  3001               	movlw	1
  6272  010A                     u1535:	
  6273  010A  35F0               	lslf	___ftpack@arg,f
  6274  010B  0DF1               	rlf	___ftpack@arg+1,f
  6275  010C  0DF2               	rlf	___ftpack@arg+2,f
  6276  010D  0B89               	decfsz	9,f
  6277  010E  290A               	goto	u1535
  6278  010F                     l1487:	
  6279  010F  1BF1               	btfsc	___ftpack@arg+1,7
  6280  0110  2915               	goto	l412
  6281  0111  3002               	movlw	2
  6282  0112  0273               	subwf	___ftpack@exp,w
  6283  0113  1803               	skipnc
  6284  0114  2907               	goto	l1485
  6285  0115                     l412:	
  6286  0115  1873               	btfsc	___ftpack@exp,0
  6287  0116  291D               	goto	l413
  6288  0117  30FF               	movlw	255
  6289  0118  05F0               	andwf	___ftpack@arg,f
  6290  0119  307F               	movlw	127
  6291  011A  05F1               	andwf	___ftpack@arg+1,f
  6292  011B  30FF               	movlw	255
  6293  011C  05F2               	andwf	___ftpack@arg+2,f
  6294  011D                     l413:	
  6295  011D  1003               	clrc
  6296  011E  0CF3               	rrf	___ftpack@exp,f
  6297  011F  0873               	movf	___ftpack@exp,w
  6298  0120  00F5               	movwf	??___ftpack
  6299  0121  01F6               	clrf	??___ftpack+1
  6300  0122  01F7               	clrf	??___ftpack+2
  6301  0123  3010               	movlw	16
  6302  0124                     u1575:	
  6303  0124  35F5               	lslf	??___ftpack,f
  6304  0125  0DF6               	rlf	??___ftpack+1,f
  6305  0126  0DF7               	rlf	??___ftpack+2,f
  6306  0127  0B89               	decfsz	9,f
  6307  0128  2924               	goto	u1575
  6308  0129  0875               	movf	??___ftpack,w
  6309  012A  04F0               	iorwf	___ftpack@arg,f
  6310  012B  0876               	movf	??___ftpack+1,w
  6311  012C  04F1               	iorwf	___ftpack@arg+1,f
  6312  012D  0877               	movf	??___ftpack+2,w
  6313  012E  04F2               	iorwf	___ftpack@arg+2,f
  6314  012F  0874               	movf	___ftpack@sign,w
  6315  0130  1903               	btfsc	3,2
  6316  0131  0008               	return
  6317  0132  17F2               	bsf	___ftpack@arg+2,7
  6318  0133  0008               	return
  6319  0134                     __end_of___ftpack:	
  6320                           
  6321                           	psect	text22
  6322  0F30                     __ptext22:	
  6323 ;; *************** function ___ftge *****************
  6324 ;; Defined at:
  6325 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftge.c"
  6326 ;; Parameters:    Size  Location     Type
  6327 ;;  ff1             3    0[COMMON] float 
  6328 ;;  ff2             3    3[COMMON] float 
  6329 ;; Auto vars:     Size  Location     Type
  6330 ;;		None
  6331 ;; Return value:  Size  Location     Type
  6332 ;;		None               void
  6333 ;; Registers used:
  6334 ;;		wreg, status,2, status,0
  6335 ;; Tracked objects:
  6336 ;;		On entry : 0/0
  6337 ;;		On exit  : 0/0
  6338 ;;		Unchanged: 0/0
  6339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6340 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6342 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6343 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6344 ;;Total ram usage:        9 bytes
  6345 ;; Hardware stack levels used:    1
  6346 ;; This function calls:
  6347 ;;		Nothing
  6348 ;; This function is called by:
  6349 ;;		_main
  6350 ;;		_ftoa
  6351 ;; This function uses a non-reentrant model
  6352 ;;
  6353                           
  6354                           
  6355                           ;psect for function ___ftge
  6356  0F30                     ___ftge:	
  6357                           
  6358                           ;incstack = 0
  6359                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  6360  0F30  1FF2               	btfss	___ftge@ff1+2,7
  6361  0F31  2F46               	goto	l1867
  6362  0F32  0970               	comf	___ftge@ff1,w
  6363  0F33  00F6               	movwf	??___ftge
  6364  0F34  0971               	comf	___ftge@ff1+1,w
  6365  0F35  00F7               	movwf	??___ftge+1
  6366  0F36  0972               	comf	___ftge@ff1+2,w
  6367  0F37  00F8               	movwf	??___ftge+2
  6368  0F38  0AF6               	incf	??___ftge,f
  6369  0F39  1903               	skipnz
  6370  0F3A  0AF7               	incf	??___ftge+1,f
  6371  0F3B  1903               	skipnz
  6372  0F3C  0AF8               	incf	??___ftge+2,f
  6373  0F3D  3000               	movlw	0
  6374  0F3E  0776               	addwf	??___ftge,w
  6375  0F3F  00F0               	movwf	___ftge@ff1
  6376  0F40  3000               	movlw	0
  6377  0F41  3D77               	addwfc	??___ftge+1,w
  6378  0F42  00F1               	movwf	___ftge@ff1+1
  6379  0F43  3080               	movlw	128
  6380  0F44  3D78               	addwfc	??___ftge+2,w
  6381  0F45  00F2               	movwf	___ftge@ff1+2
  6382  0F46                     l1867:	
  6383  0F46  1FF5               	btfss	___ftge@ff2+2,7
  6384  0F47  2F5C               	goto	l1871
  6385  0F48  0973               	comf	___ftge@ff2,w
  6386  0F49  00F6               	movwf	??___ftge
  6387  0F4A  0974               	comf	___ftge@ff2+1,w
  6388  0F4B  00F7               	movwf	??___ftge+1
  6389  0F4C  0975               	comf	___ftge@ff2+2,w
  6390  0F4D  00F8               	movwf	??___ftge+2
  6391  0F4E  0AF6               	incf	??___ftge,f
  6392  0F4F  1903               	skipnz
  6393  0F50  0AF7               	incf	??___ftge+1,f
  6394  0F51  1903               	skipnz
  6395  0F52  0AF8               	incf	??___ftge+2,f
  6396  0F53  3000               	movlw	0
  6397  0F54  0776               	addwf	??___ftge,w
  6398  0F55  00F3               	movwf	___ftge@ff2
  6399  0F56  3000               	movlw	0
  6400  0F57  3D77               	addwfc	??___ftge+1,w
  6401  0F58  00F4               	movwf	___ftge@ff2+1
  6402  0F59  3080               	movlw	128
  6403  0F5A  3D78               	addwfc	??___ftge+2,w
  6404  0F5B  00F5               	movwf	___ftge@ff2+2
  6405  0F5C                     l1871:	
  6406  0F5C  3080               	movlw	128
  6407  0F5D  06F2               	xorwf	___ftge@ff1+2,f
  6408  0F5E  3080               	movlw	128
  6409  0F5F  06F5               	xorwf	___ftge@ff2+2,f
  6410  0F60  0875               	movf	___ftge@ff2+2,w
  6411  0F61  0272               	subwf	___ftge@ff1+2,w
  6412  0F62  1D03               	skipz
  6413  0F63  0008               	return
  6414  0F64  0874               	movf	___ftge@ff2+1,w
  6415  0F65  0271               	subwf	___ftge@ff1+1,w
  6416  0F66  1D03               	skipz
  6417  0F67  0008               	return
  6418  0F68  0873               	movf	___ftge@ff2,w
  6419  0F69  0270               	subwf	___ftge@ff1,w
  6420  0F6A  0008               	return
  6421  0F6B                     __end_of___ftge:	
  6422                           
  6423                           	psect	text23
  6424  0D5A                     __ptext23:	
  6425 ;; *************** function _OLED_Write_String *****************
  6426 ;; Defined at:
  6427 ;;		line 284 in file "oled.c"
  6428 ;; Parameters:    Size  Location     Type
  6429 ;;  s               2   12[COMMON] PTR unsigned char 
  6430 ;;		 -> ftoa@buf(17), STR_8(6), STR_7(6), OLED_Write_Integer@s(20), 
  6431 ;;		 -> STR_6(13), STR_5(15), STR_4(13), STR_3(8), 
  6432 ;;		 -> STR_2(10), STR_1(13), 
  6433 ;; Auto vars:     Size  Location     Type
  6434 ;;		None
  6435 ;; Return value:  Size  Location     Type
  6436 ;;                  1    wreg      void 
  6437 ;; Registers used:
  6438 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6439 ;; Tracked objects:
  6440 ;;		On entry : 0/0
  6441 ;;		On exit  : 0/0
  6442 ;;		Unchanged: 0/0
  6443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6444 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6446 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6447 ;;      Totals:         2       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6448 ;;Total ram usage:        3 bytes
  6449 ;; Hardware stack levels used:    1
  6450 ;; Hardware stack levels required when called:    2
  6451 ;; This function calls:
  6452 ;;		_OLED_PutChar
  6453 ;; This function is called by:
  6454 ;;		_main
  6455 ;;		_OLED_Write_Integer
  6456 ;;		_OLED_Write_Float
  6457 ;; This function uses a non-reentrant model
  6458 ;;
  6459                           
  6460                           
  6461                           ;psect for function _OLED_Write_String
  6462  0D5A                     _OLED_Write_String:	
  6463  0D5A                     l2041:	
  6464                           ;oled.c: 286: while (*s) OLED_PutChar( *s++);
  6465                           
  6466                           ;incstack = 0
  6467                           ; Regs used in _OLED_Write_String: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6468                           
  6469  0D5A  087C               	movf	OLED_Write_String@s,w
  6470  0D5B  0084               	movwf	4
  6471  0D5C  087D               	movf	OLED_Write_String@s+1,w
  6472  0D5D  0085               	movwf	5
  6473  0D5E  0012               	moviw fsr0++
  6474  0D5F  1903               	btfsc	3,2
  6475  0D60  0008               	return
  6476  0D61  087C               	movf	OLED_Write_String@s,w
  6477  0D62  0084               	movwf	4
  6478  0D63  087D               	movf	OLED_Write_String@s+1,w
  6479  0D64  0085               	movwf	5
  6480  0D65  0800               	movf	0,w	;code access
  6481  0D66  3181  2199  318D   	fcall	_OLED_PutChar
  6482  0D69  3001               	movlw	1
  6483  0D6A  07FC               	addwf	OLED_Write_String@s,f
  6484  0D6B  3000               	movlw	0
  6485  0D6C  3DFD               	addwfc	OLED_Write_String@s+1,f
  6486  0D6D  2D5A               	goto	l2041
  6487  0D6E                     __end_of_OLED_Write_String:	
  6488                           
  6489                           	psect	text24
  6490  006C                     __ptext24:	
  6491 ;; *************** function _OLED_Init *****************
  6492 ;; Defined at:
  6493 ;;		line 174 in file "oled.c"
  6494 ;; Parameters:    Size  Location     Type
  6495 ;;		None
  6496 ;; Auto vars:     Size  Location     Type
  6497 ;;		None
  6498 ;; Return value:  Size  Location     Type
  6499 ;;                  1    wreg      void 
  6500 ;; Registers used:
  6501 ;;		wreg, status,2, status,0, pclath, cstack
  6502 ;; Tracked objects:
  6503 ;;		On entry : 0/0
  6504 ;;		On exit  : 0/0
  6505 ;;		Unchanged: 0/0
  6506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6511 ;;Total ram usage:        0 bytes
  6512 ;; Hardware stack levels used:    1
  6513 ;; Hardware stack levels required when called:    2
  6514 ;; This function calls:
  6515 ;;		_OLED_Command
  6516 ;; This function is called by:
  6517 ;;		_main
  6518 ;; This function uses a non-reentrant model
  6519 ;;
  6520                           
  6521                           
  6522                           ;psect for function _OLED_Init
  6523  006C                     _OLED_Init:	
  6524                           
  6525                           ;oled.c: 176: OLED_Command(0xAE);
  6526                           
  6527                           ;incstack = 0
  6528                           ; Regs used in _OLED_Init: [wreg+status,2+status,0+pclath+cstack]
  6529  006C  30AE               	movlw	174
  6530  006D  318D  2589  3180   	fcall	_OLED_Command
  6531                           
  6532                           ;oled.c: 177: OLED_Command(0xD5);
  6533  0070  30D5               	movlw	213
  6534  0071  318D  2589  3180   	fcall	_OLED_Command
  6535                           
  6536                           ;oled.c: 178: OLED_Command(0x80);
  6537  0074  3080               	movlw	128
  6538  0075  318D  2589  3180   	fcall	_OLED_Command
  6539                           
  6540                           ;oled.c: 179: OLED_Command(0xA8);
  6541  0078  30A8               	movlw	168
  6542  0079  318D  2589  3180   	fcall	_OLED_Command
  6543                           
  6544                           ;oled.c: 180: OLED_Command(0x1F);
  6545  007C  301F               	movlw	31
  6546  007D  318D  2589  3180   	fcall	_OLED_Command
  6547                           
  6548                           ;oled.c: 181: OLED_Command(0xD3);
  6549  0080  30D3               	movlw	211
  6550  0081  318D  2589  3180   	fcall	_OLED_Command
  6551                           
  6552                           ;oled.c: 182: OLED_Command(0x0);
  6553  0084  3000               	movlw	0
  6554  0085  318D  2589  3180   	fcall	_OLED_Command
  6555                           
  6556                           ;oled.c: 183: OLED_Command(0x40 | 0x0);
  6557  0088  3040               	movlw	64
  6558  0089  318D  2589  3180   	fcall	_OLED_Command
  6559                           
  6560                           ;oled.c: 184: OLED_Command(0x8D);
  6561  008C  308D               	movlw	141
  6562  008D  318D  2589  3180   	fcall	_OLED_Command
  6563                           
  6564                           ;oled.c: 185: OLED_Command(0xAF);
  6565  0090  30AF               	movlw	175
  6566  0091  318D  2589  3180   	fcall	_OLED_Command
  6567                           
  6568                           ;oled.c: 186: OLED_Command(0x20);
  6569  0094  3020               	movlw	32
  6570  0095  318D  2589  3180   	fcall	_OLED_Command
  6571                           
  6572                           ;oled.c: 187: OLED_Command(0x00);
  6573  0098  3000               	movlw	0
  6574  0099  318D  2589  3180   	fcall	_OLED_Command
  6575                           
  6576                           ;oled.c: 188: OLED_Command(0xA0 | 0x1);
  6577  009C  30A1               	movlw	161
  6578  009D  318D  2589  3180   	fcall	_OLED_Command
  6579                           
  6580                           ;oled.c: 189: OLED_Command(0xC8);
  6581  00A0  30C8               	movlw	200
  6582  00A1  318D  2589  3180   	fcall	_OLED_Command
  6583                           
  6584                           ;oled.c: 190: OLED_Command(0xDA);
  6585  00A4  30DA               	movlw	218
  6586  00A5  318D  2589  3180   	fcall	_OLED_Command
  6587                           
  6588                           ;oled.c: 191: OLED_Command(0x02);
  6589  00A8  3002               	movlw	2
  6590  00A9  318D  2589  3180   	fcall	_OLED_Command
  6591                           
  6592                           ;oled.c: 192: OLED_Command(0x81);
  6593  00AC  3081               	movlw	129
  6594  00AD  318D  2589  3180   	fcall	_OLED_Command
  6595                           
  6596                           ;oled.c: 193: OLED_Command(0x8F);
  6597  00B0  308F               	movlw	143
  6598  00B1  318D  2589  3180   	fcall	_OLED_Command
  6599                           
  6600                           ;oled.c: 194: OLED_Command(0xD9);
  6601  00B4  30D9               	movlw	217
  6602  00B5  318D  2589  3180   	fcall	_OLED_Command
  6603                           
  6604                           ;oled.c: 195: OLED_Command(0xF1);
  6605  00B8  30F1               	movlw	241
  6606  00B9  318D  2589  3180   	fcall	_OLED_Command
  6607                           
  6608                           ;oled.c: 196: OLED_Command(0xDB);
  6609  00BC  30DB               	movlw	219
  6610  00BD  318D  2589  3180   	fcall	_OLED_Command
  6611                           
  6612                           ;oled.c: 197: OLED_Command(0x40);
  6613  00C0  3040               	movlw	64
  6614  00C1  318D  2589  3180   	fcall	_OLED_Command
  6615                           
  6616                           ;oled.c: 198: OLED_Command(0xA4);
  6617  00C4  30A4               	movlw	164
  6618  00C5  318D  2589  3180   	fcall	_OLED_Command
  6619                           
  6620                           ;oled.c: 199: OLED_Command(0xA6);
  6621  00C8  30A6               	movlw	166
  6622  00C9  318D  2589  3180   	fcall	_OLED_Command
  6623                           
  6624                           ;oled.c: 200: OLED_Command(0xAF);
  6625  00CC  30AF               	movlw	175
  6626  00CD  318D  2589         	fcall	_OLED_Command
  6627  00CF  0008               	return
  6628  00D0                     __end_of_OLED_Init:	
  6629                           
  6630                           	psect	text25
  6631  0ECC                     __ptext25:	
  6632 ;; *************** function _OLED_Clear *****************
  6633 ;; Defined at:
  6634 ;;		line 264 in file "oled.c"
  6635 ;; Parameters:    Size  Location     Type
  6636 ;;		None
  6637 ;; Auto vars:     Size  Location     Type
  6638 ;;  col             2   22[BANK0 ] unsigned int 
  6639 ;;  row             2   20[BANK0 ] unsigned int 
  6640 ;; Return value:  Size  Location     Type
  6641 ;;                  1    wreg      void 
  6642 ;; Registers used:
  6643 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6644 ;; Tracked objects:
  6645 ;;		On entry : 0/0
  6646 ;;		On exit  : 0/0
  6647 ;;		Unchanged: 0/0
  6648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6650 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6651 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6652 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6653 ;;Total ram usage:        5 bytes
  6654 ;; Hardware stack levels used:    1
  6655 ;; Hardware stack levels required when called:    3
  6656 ;; This function calls:
  6657 ;;		_OLED_PutChar
  6658 ;;		_OLED_YX
  6659 ;; This function is called by:
  6660 ;;		_main
  6661 ;; This function uses a non-reentrant model
  6662 ;;
  6663                           
  6664                           
  6665                           ;psect for function _OLED_Clear
  6666  0ECC                     _OLED_Clear:	
  6667                           
  6668                           ;oled.c: 266: for ( uint16_t row = 0; row < 8; row++ ) {
  6669                           
  6670                           ;incstack = 0
  6671                           ; Regs used in _OLED_Clear: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6672  0ECC  0020               	movlb	0	; select bank0
  6673  0ECD  01B4               	clrf	OLED_Clear@row
  6674  0ECE  01B5               	clrf	OLED_Clear@row+1
  6675  0ECF                     L3:	
  6676  0ECF  3000               	movlw	0
  6677  0ED0  0235               	subwf	OLED_Clear@row+1,w
  6678  0ED1  3008               	movlw	8
  6679  0ED2  1903               	skipnz
  6680  0ED3  0234               	subwf	OLED_Clear@row,w
  6681  0ED4  1803               	btfsc	3,0
  6682  0ED5  0008               	return
  6683                           
  6684                           ;oled.c: 267: for ( uint16_t col = 0; col < 16; col++ ) {
  6685  0ED6  01B6               	clrf	OLED_Clear@col
  6686  0ED7  01B7               	clrf	OLED_Clear@col+1
  6687  0ED8  3000               	movlw	0
  6688  0ED9  0237               	subwf	OLED_Clear@col+1,w
  6689  0EDA  3010               	movlw	16
  6690  0EDB  1903               	skipnz
  6691  0EDC  0236               	subwf	OLED_Clear@col,w
  6692  0EDD  1803               	btfsc	3,0
  6693  0EDE  2EF7               	goto	l2139
  6694  0EDF                     l2131:	
  6695                           
  6696                           ;oled.c: 268: OLED_YX( row, col );
  6697  0EDF  0836               	movf	OLED_Clear@col,w
  6698  0EE0  00FC               	movwf	??_OLED_Clear
  6699  0EE1  087C               	movf	??_OLED_Clear,w
  6700  0EE2  00F5               	movwf	OLED_YX@Column
  6701  0EE3  0834               	movf	OLED_Clear@row,w
  6702  0EE4  318E  2628  318E   	fcall	_OLED_YX
  6703                           
  6704                           ;oled.c: 269: OLED_PutChar(' ');
  6705  0EE7  3020               	movlw	32
  6706  0EE8  3181  2199  318E   	fcall	_OLED_PutChar
  6707  0EEB  3001               	movlw	1
  6708  0EEC  0020               	movlb	0	; select bank0
  6709  0EED  07B6               	addwf	OLED_Clear@col,f
  6710  0EEE  3000               	movlw	0
  6711  0EEF  3DB7               	addwfc	OLED_Clear@col+1,f
  6712  0EF0  3000               	movlw	0
  6713  0EF1  0237               	subwf	OLED_Clear@col+1,w
  6714  0EF2  3010               	movlw	16
  6715  0EF3  1903               	skipnz
  6716  0EF4  0236               	subwf	OLED_Clear@col,w
  6717  0EF5  1C03               	skipc
  6718  0EF6  2EDF               	goto	l2131
  6719  0EF7                     l2139:	
  6720  0EF7  3001               	movlw	1
  6721  0EF8  07B4               	addwf	OLED_Clear@row,f
  6722  0EF9  3000               	movlw	0
  6723  0EFA  3DB5               	addwfc	OLED_Clear@row+1,f
  6724  0EFB  2ECF               	goto	L3
  6725  0EFC                     __end_of_OLED_Clear:	
  6726                           
  6727                           	psect	text26
  6728  0E28                     __ptext26:	
  6729 ;; *************** function _OLED_YX *****************
  6730 ;; Defined at:
  6731 ;;		line 213 in file "oled.c"
  6732 ;; Parameters:    Size  Location     Type
  6733 ;;  Row             1    wreg     unsigned char 
  6734 ;;  Column          1    5[COMMON] unsigned char 
  6735 ;; Auto vars:     Size  Location     Type
  6736 ;;  Row             1    9[COMMON] unsigned char 
  6737 ;; Return value:  Size  Location     Type
  6738 ;;                  1    wreg      void 
  6739 ;; Registers used:
  6740 ;;		wreg, status,2, status,0, pclath, cstack
  6741 ;; Tracked objects:
  6742 ;;		On entry : 0/0
  6743 ;;		On exit  : 0/0
  6744 ;;		Unchanged: 0/0
  6745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6746 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6747 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6748 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6749 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6750 ;;Total ram usage:        5 bytes
  6751 ;; Hardware stack levels used:    1
  6752 ;; Hardware stack levels required when called:    2
  6753 ;; This function calls:
  6754 ;;		_OLED_Command
  6755 ;; This function is called by:
  6756 ;;		_main
  6757 ;;		_OLED_Clear
  6758 ;; This function uses a non-reentrant model
  6759 ;;
  6760                           
  6761                           
  6762                           ;psect for function _OLED_YX
  6763  0E28                     _OLED_YX:	
  6764                           
  6765                           ;incstack = 0
  6766                           ; Regs used in _OLED_YX: [wreg+status,2+status,0+pclath+cstack]
  6767                           ;OLED_YX@Row stored from wreg
  6768  0E28  00F9               	movwf	OLED_YX@Row
  6769                           
  6770                           ;oled.c: 215: OLED_Command( 0xB0 + Row);
  6771  0E29  0879               	movf	OLED_YX@Row,w
  6772  0E2A  3EB0               	addlw	176
  6773  0E2B  318D  2589  318E   	fcall	_OLED_Command
  6774                           
  6775                           ;oled.c: 216: OLED_Command( 0x00 + (8*Column & 0x0F) );
  6776  0E2E  0875               	movf	OLED_YX@Column,w
  6777  0E2F  00F6               	movwf	??_OLED_YX
  6778  0E30  3002               	movlw	2
  6779  0E31                     u2765:	
  6780  0E31  35F6               	lslf	??_OLED_YX,f
  6781  0E32  3EFF               	addlw	-1
  6782  0E33  1D03               	skipz
  6783  0E34  2E31               	goto	u2765
  6784  0E35  3576               	lslf	??_OLED_YX,w
  6785  0E36  390F               	andlw	15
  6786  0E37  318D  2589  318E   	fcall	_OLED_Command
  6787                           
  6788                           ;oled.c: 217: OLED_Command( 0x10 + ((8*Column>>4)&0x0F) );
  6789  0E3A  0875               	movf	OLED_YX@Column,w
  6790  0E3B  00F6               	movwf	??_OLED_YX
  6791  0E3C  01F7               	clrf	??_OLED_YX+1
  6792  0E3D  35F6               	lslf	??_OLED_YX,f
  6793  0E3E  0DF7               	rlf	??_OLED_YX+1,f
  6794  0E3F  35F6               	lslf	??_OLED_YX,f
  6795  0E40  0DF7               	rlf	??_OLED_YX+1,f
  6796  0E41  35F6               	lslf	??_OLED_YX,f
  6797  0E42  0DF7               	rlf	??_OLED_YX+1,f
  6798  0E43  3004               	movlw	4
  6799  0E44  00F8               	movwf	??_OLED_YX+2
  6800  0E45                     u2775:	
  6801  0E45  0D77               	rlf	??_OLED_YX+1,w
  6802  0E46  0CF7               	rrf	??_OLED_YX+1,f
  6803  0E47  0CF6               	rrf	??_OLED_YX,f
  6804  0E48  0BF8               	decfsz	??_OLED_YX+2,f
  6805  0E49  2E45               	goto	u2775
  6806  0E4A  0876               	movf	??_OLED_YX,w
  6807  0E4B  390F               	andlw	15
  6808  0E4C  3E10               	addlw	16
  6809  0E4D  318D  2589         	fcall	_OLED_Command
  6810  0E4F  0008               	return
  6811  0E50                     __end_of_OLED_YX:	
  6812                           
  6813                           	psect	text27
  6814  0D89                     __ptext27:	
  6815 ;; *************** function _OLED_Command *****************
  6816 ;; Defined at:
  6817 ;;		line 138 in file "oled.c"
  6818 ;; Parameters:    Size  Location     Type
  6819 ;;  temp            1    wreg     unsigned char 
  6820 ;; Auto vars:     Size  Location     Type
  6821 ;;  temp            1    4[COMMON] unsigned char 
  6822 ;; Return value:  Size  Location     Type
  6823 ;;                  1    wreg      void 
  6824 ;; Registers used:
  6825 ;;		wreg, status,2, status,0, pclath, cstack
  6826 ;; Tracked objects:
  6827 ;;		On entry : 0/0
  6828 ;;		On exit  : 0/0
  6829 ;;		Unchanged: 0/0
  6830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6832 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6833 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6834 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6835 ;;Total ram usage:        3 bytes
  6836 ;; Hardware stack levels used:    1
  6837 ;; Hardware stack levels required when called:    1
  6838 ;; This function calls:
  6839 ;;		_Send_I2C_Data
  6840 ;;		_Send_I2C_StartBit
  6841 ;;		_Send_I2C_StopBit
  6842 ;; This function is called by:
  6843 ;;		_OLED_Init
  6844 ;;		_OLED_YX
  6845 ;; This function uses a non-reentrant model
  6846 ;;
  6847                           
  6848                           
  6849                           ;psect for function _OLED_Command
  6850  0D89                     _OLED_Command:	
  6851                           
  6852                           ;incstack = 0
  6853                           ; Regs used in _OLED_Command: [wreg+status,2+status,0+pclath+cstack]
  6854                           ;OLED_Command@temp stored from wreg
  6855  0D89  00F4               	movwf	OLED_Command@temp
  6856                           
  6857                           ;oled.c: 140: Send_I2C_StartBit();
  6858  0D8A  318D  2512  318D   	fcall	_Send_I2C_StartBit
  6859                           
  6860                           ;oled.c: 141: Send_I2C_Data(0x3C << 1);
  6861  0D8D  3078               	movlw	120
  6862  0D8E  00F0               	movwf	Send_I2C_Data@databyte
  6863  0D8F  3000               	movlw	0
  6864  0D90  00F1               	movwf	Send_I2C_Data@databyte+1
  6865  0D91  318D  252A  318D   	fcall	_Send_I2C_Data
  6866                           
  6867                           ;oled.c: 142: Send_I2C_Data(0x00);
  6868  0D94  3000               	movlw	0
  6869  0D95  00F0               	movwf	Send_I2C_Data@databyte
  6870  0D96  00F1               	movwf	Send_I2C_Data@databyte+1
  6871  0D97  318D  252A  318D   	fcall	_Send_I2C_Data
  6872                           
  6873                           ;oled.c: 143: Send_I2C_Data(temp);
  6874  0D9A  0874               	movf	OLED_Command@temp,w
  6875  0D9B  00F2               	movwf	??_OLED_Command
  6876  0D9C  01F3               	clrf	??_OLED_Command+1
  6877  0D9D  0872               	movf	??_OLED_Command,w
  6878  0D9E  00F0               	movwf	Send_I2C_Data@databyte
  6879  0D9F  0873               	movf	??_OLED_Command+1,w
  6880  0DA0  00F1               	movwf	Send_I2C_Data@databyte+1
  6881  0DA1  318D  252A  318D   	fcall	_Send_I2C_Data
  6882                           
  6883                           ;oled.c: 144: Send_I2C_StopBit();
  6884  0DA4  318D  251A         	fcall	_Send_I2C_StopBit
  6885  0DA6  0008               	return
  6886  0DA7                     __end_of_OLED_Command:	
  6887                           
  6888                           	psect	text28
  6889  0199                     __ptext28:	
  6890 ;; *************** function _OLED_PutChar *****************
  6891 ;; Defined at:
  6892 ;;		line 229 in file "oled.c"
  6893 ;; Parameters:    Size  Location     Type
  6894 ;;  ch              1    wreg     unsigned char 
  6895 ;; Auto vars:     Size  Location     Type
  6896 ;;  ch              1   19[BANK0 ] unsigned char 
  6897 ;;  bytes           9    6[BANK0 ] unsigned char [9]
  6898 ;;  i               2   17[BANK0 ] int 
  6899 ;;  base            2   15[BANK0 ] PTR const unsigned char 
  6900 ;;		 -> OledFont(768), 
  6901 ;; Return value:  Size  Location     Type
  6902 ;;                  1    wreg      void 
  6903 ;; Registers used:
  6904 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6905 ;; Tracked objects:
  6906 ;;		On entry : 0/0
  6907 ;;		On exit  : 0/0
  6908 ;;		Unchanged: 0/0
  6909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6911 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6912 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6913 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6914 ;;Total ram usage:       20 bytes
  6915 ;; Hardware stack levels used:    1
  6916 ;; Hardware stack levels required when called:    1
  6917 ;; This function calls:
  6918 ;;		_Send_I2C_Data
  6919 ;;		_Send_I2C_StartBit
  6920 ;;		_Send_I2C_StopBit
  6921 ;;		_memmove
  6922 ;; This function is called by:
  6923 ;;		_OLED_Clear
  6924 ;;		_OLED_Write_String
  6925 ;; This function uses a non-reentrant model
  6926 ;;
  6927                           
  6928                           
  6929                           ;psect for function _OLED_PutChar
  6930  0199                     _OLED_PutChar:	
  6931                           
  6932                           ;incstack = 0
  6933                           ; Regs used in _OLED_PutChar: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6934                           ;OLED_PutChar@ch stored from wreg
  6935  0199  0020               	movlb	0	; select bank0
  6936  019A  00B3               	movwf	OLED_PutChar@ch
  6937                           
  6938                           ;oled.c: 231: if ( ( ch < 32 ) || ( ch > 127 ) ){
  6939  019B  3020               	movlw	32
  6940  019C  0233               	subwf	OLED_PutChar@ch,w
  6941  019D  1C03               	skipc
  6942  019E  29A3               	goto	l1731
  6943  019F  3080               	movlw	128
  6944  01A0  0233               	subwf	OLED_PutChar@ch,w
  6945  01A1  1C03               	skipc
  6946  01A2  29A7               	goto	l1733
  6947  01A3                     l1731:	
  6948                           
  6949                           ;oled.c: 232: ch = ' ';
  6950  01A3  3020               	movlw	32
  6951  01A4  00A0               	movwf	??_OLED_PutChar
  6952  01A5  0820               	movf	??_OLED_PutChar,w
  6953  01A6  00B3               	movwf	OLED_PutChar@ch
  6954  01A7                     l1733:	
  6955                           
  6956                           ;oled.c: 233: }
  6957                           ;oled.c: 235: const uint8_t *base = &OledFont[ch - 32][0];
  6958  01A7  0833               	movf	OLED_PutChar@ch,w
  6959  01A8  00A0               	movwf	??_OLED_PutChar
  6960  01A9  01A1               	clrf	??_OLED_PutChar+1
  6961  01AA  35A0               	lslf	??_OLED_PutChar,f
  6962  01AB  0DA1               	rlf	??_OLED_PutChar+1,f
  6963  01AC  35A0               	lslf	??_OLED_PutChar,f
  6964  01AD  0DA1               	rlf	??_OLED_PutChar+1,f
  6965  01AE  35A0               	lslf	??_OLED_PutChar,f
  6966  01AF  0DA1               	rlf	??_OLED_PutChar+1,f
  6967  01B0  0820               	movf	??_OLED_PutChar,w
  6968  01B1  3E00               	addlw	0
  6969  01B2  00A2               	movwf	??_OLED_PutChar+2
  6970  01B3  30FF               	movlw	255
  6971  01B4  3D21               	addwfc	??_OLED_PutChar+1,w
  6972  01B5  00A3               	movwf	??_OLED_PutChar+3
  6973  01B6  3028               	movlw	low (_OledFont| (0+32768))
  6974  01B7  00A4               	movwf	??_OLED_PutChar+4
  6975  01B8  3088               	movlw	high (_OledFont| (0+32768))
  6976  01B9  00A5               	movwf	??_OLED_PutChar+5
  6977  01BA  0822               	movf	??_OLED_PutChar+2,w
  6978  01BB  0724               	addwf	??_OLED_PutChar+4,w
  6979  01BC  00AF               	movwf	OLED_PutChar@base
  6980  01BD  0823               	movf	??_OLED_PutChar+3,w
  6981  01BE  3D25               	addwfc	??_OLED_PutChar+5,w
  6982  01BF  00B0               	movwf	OLED_PutChar@base+1
  6983                           
  6984                           ;oled.c: 237: uint8_t bytes[9];
  6985                           ;oled.c: 238: bytes[0] = 0x40;
  6986  01C0  3040               	movlw	64
  6987  01C1  00A0               	movwf	??_OLED_PutChar
  6988  01C2  0820               	movf	??_OLED_PutChar,w
  6989  01C3  00A6               	movwf	OLED_PutChar@bytes
  6990                           
  6991                           ;oled.c: 239: memmove( bytes + 1, base, 8 );
  6992  01C4  0830               	movf	OLED_PutChar@base+1,w
  6993  01C5  00F1               	movwf	memmove@s1+1
  6994  01C6  082F               	movf	OLED_PutChar@base,w
  6995  01C7  00F0               	movwf	memmove@s1
  6996  01C8  3008               	movlw	8
  6997  01C9  00F2               	movwf	memmove@n
  6998  01CA  3000               	movlw	0
  6999  01CB  00F3               	movwf	memmove@n+1
  7000  01CC  3027               	movlw	(low ((OLED_PutChar@bytes| 0+1)))& (0+255)
  7001  01CD  3181  2134  3181   	fcall	_memmove
  7002                           
  7003                           ;oled.c: 241: Send_I2C_StartBit();
  7004  01D0  318D  2512  3181   	fcall	_Send_I2C_StartBit
  7005                           
  7006                           ;oled.c: 242: Send_I2C_Data(0x3C << 1);
  7007  01D3  3078               	movlw	120
  7008  01D4  00F0               	movwf	Send_I2C_Data@databyte
  7009  01D5  3000               	movlw	0
  7010  01D6  00F1               	movwf	Send_I2C_Data@databyte+1
  7011  01D7  318D  252A  3181   	fcall	_Send_I2C_Data
  7012                           
  7013                           ;oled.c: 243: Send_I2C_Data(0x40);
  7014  01DA  3040               	movlw	64
  7015  01DB  00F0               	movwf	Send_I2C_Data@databyte
  7016  01DC  3000               	movlw	0
  7017  01DD  00F1               	movwf	Send_I2C_Data@databyte+1
  7018  01DE  318D  252A  3181   	fcall	_Send_I2C_Data
  7019                           
  7020                           ;oled.c: 245: int i;
  7021                           ;oled.c: 247: for (i = 1; i <= 8; i++){
  7022  01E1  3001               	movlw	1
  7023  01E2  0020               	movlb	0	; select bank0
  7024  01E3  00B1               	movwf	OLED_PutChar@i
  7025  01E4  3000               	movlw	0
  7026  01E5  00B2               	movwf	OLED_PutChar@i+1
  7027  01E6  0832               	movf	OLED_PutChar@i+1,w
  7028  01E7  3A80               	xorlw	128
  7029  01E8  00A0               	movwf	??_OLED_PutChar
  7030  01E9  3080               	movlw	128
  7031  01EA  0220               	subwf	??_OLED_PutChar,w
  7032  01EB  1D03               	skipz
  7033  01EC  29EF               	goto	u2245
  7034  01ED  3009               	movlw	9
  7035  01EE  0231               	subwf	OLED_PutChar@i,w
  7036  01EF                     u2245:	
  7037  01EF  1803               	btfsc	3,0
  7038  01F0  2A10               	goto	l1757
  7039  01F1                     l1751:	
  7040                           
  7041                           ;oled.c: 248: Send_I2C_Data(bytes[i]);
  7042  01F1  0020               	movlb	0	; select bank0
  7043  01F2  0831               	movf	OLED_PutChar@i,w
  7044  01F3  3E26               	addlw	(low (OLED_PutChar@bytes| 0))& (0+255)
  7045  01F4  0086               	movwf	6
  7046  01F5  0187               	clrf	7
  7047  01F6  0801               	movf	1,w
  7048  01F7  00A0               	movwf	??_OLED_PutChar
  7049  01F8  01A1               	clrf	??_OLED_PutChar+1
  7050  01F9  0820               	movf	??_OLED_PutChar,w
  7051  01FA  00F0               	movwf	Send_I2C_Data@databyte
  7052  01FB  0821               	movf	??_OLED_PutChar+1,w
  7053  01FC  00F1               	movwf	Send_I2C_Data@databyte+1
  7054  01FD  318D  252A  3181   	fcall	_Send_I2C_Data
  7055  0200  3001               	movlw	1
  7056  0201  0020               	movlb	0	; select bank0
  7057  0202  07B1               	addwf	OLED_PutChar@i,f
  7058  0203  3000               	movlw	0
  7059  0204  3DB2               	addwfc	OLED_PutChar@i+1,f
  7060  0205  0832               	movf	OLED_PutChar@i+1,w
  7061  0206  3A80               	xorlw	128
  7062  0207  00A0               	movwf	??_OLED_PutChar
  7063  0208  3080               	movlw	128
  7064  0209  0220               	subwf	??_OLED_PutChar,w
  7065  020A  1D03               	skipz
  7066  020B  2A0E               	goto	u2255
  7067  020C  3009               	movlw	9
  7068  020D  0231               	subwf	OLED_PutChar@i,w
  7069  020E                     u2255:	
  7070  020E  1C03               	skipc
  7071  020F  29F1               	goto	l1751
  7072  0210                     l1757:	
  7073                           
  7074                           ;oled.c: 249: }
  7075                           ;oled.c: 251: Send_I2C_StopBit();
  7076  0210  318D  251A         	fcall	_Send_I2C_StopBit
  7077  0212  0008               	return
  7078  0213                     __end_of_OLED_PutChar:	
  7079                           
  7080                           	psect	text29
  7081  0134                     __ptext29:	
  7082 ;; *************** function _memmove *****************
  7083 ;; Defined at:
  7084 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\memmove.c"
  7085 ;; Parameters:    Size  Location     Type
  7086 ;;  d1              1    wreg     PTR void 
  7087 ;;		 -> OLED_PutChar@bytes(9), 
  7088 ;;  s1              2    0[COMMON] PTR const void 
  7089 ;;		 -> OledFont(768), 
  7090 ;;  n               2    2[COMMON] unsigned int 
  7091 ;; Auto vars:     Size  Location     Type
  7092 ;;  d1              1    8[COMMON] PTR void 
  7093 ;;		 -> OLED_PutChar@bytes(9), 
  7094 ;;  s               2    9[COMMON] PTR const unsigned char 
  7095 ;;		 -> OledFont(768), 
  7096 ;;  d               1   11[COMMON] PTR unsigned char 
  7097 ;;		 -> OLED_PutChar@bytes(9), 
  7098 ;; Return value:  Size  Location     Type
  7099 ;;                  1    wreg      PTR void 
  7100 ;; Registers used:
  7101 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  7102 ;; Tracked objects:
  7103 ;;		On entry : 0/0
  7104 ;;		On exit  : 0/0
  7105 ;;		Unchanged: 0/0
  7106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7107 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7108 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7109 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7110 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7111 ;;Total ram usage:       12 bytes
  7112 ;; Hardware stack levels used:    1
  7113 ;; This function calls:
  7114 ;;		Nothing
  7115 ;; This function is called by:
  7116 ;;		_OLED_PutChar
  7117 ;; This function uses a non-reentrant model
  7118 ;;
  7119                           
  7120                           
  7121                           ;psect for function _memmove
  7122  0134                     _memmove:	
  7123                           
  7124                           ;incstack = 0
  7125                           ; Regs used in _memmove: [wreg-fsr1h+status,2+status,0+pclath]
  7126                           ;memmove@d1 stored from wreg
  7127  0134  00F8               	movwf	memmove@d1
  7128  0135  0871               	movf	memmove@s1+1,w
  7129  0136  00FA               	movwf	memmove@s+1
  7130  0137  0870               	movf	memmove@s1,w
  7131  0138  00F9               	movwf	memmove@s
  7132  0139  0878               	movf	memmove@d1,w
  7133  013A  00F4               	movwf	??_memmove
  7134  013B  0874               	movf	??_memmove,w
  7135  013C  00FB               	movwf	memmove@d
  7136  013D  087B               	movf	memmove@d,w
  7137  013E  00F4               	movwf	??_memmove
  7138  013F  3000               	movlw	0
  7139  0140  00F5               	movwf	??_memmove+1
  7140  0141  0875               	movf	??_memmove+1,w
  7141  0142  027A               	subwf	memmove@s+1,w
  7142  0143  1D03               	skipz
  7143  0144  2947               	goto	u1625
  7144  0145  0874               	movf	??_memmove,w
  7145  0146  0279               	subwf	memmove@s,w
  7146  0147                     u1625:	
  7147  0147  1803               	skipnc
  7148  0148  297D               	goto	l1519
  7149  0149  0872               	movf	memmove@n,w
  7150  014A  0779               	addwf	memmove@s,w
  7151  014B  00F4               	movwf	??_memmove
  7152  014C  0873               	movf	memmove@n+1,w
  7153  014D  3D7A               	addwfc	memmove@s+1,w
  7154  014E  00F5               	movwf	??_memmove+1
  7155  014F  087B               	movf	memmove@d,w
  7156  0150  00F6               	movwf	??_memmove+2
  7157  0151  3000               	movlw	0
  7158  0152  00F7               	movwf	??_memmove+3
  7159  0153  0875               	movf	??_memmove+1,w
  7160  0154  0277               	subwf	??_memmove+3,w
  7161  0155  1D03               	skipz
  7162  0156  2959               	goto	u1635
  7163  0157  0874               	movf	??_memmove,w
  7164  0158  0276               	subwf	??_memmove+2,w
  7165  0159                     u1635:	
  7166  0159  1803               	skipnc
  7167  015A  297D               	goto	l1519
  7168  015B  0872               	movf	memmove@n,w
  7169  015C  07F9               	addwf	memmove@s,f
  7170  015D  0873               	movf	memmove@n+1,w
  7171  015E  3DFA               	addwfc	memmove@s+1,f
  7172  015F  0872               	movf	memmove@n,w
  7173  0160  00F4               	movwf	??_memmove
  7174  0161  0874               	movf	??_memmove,w
  7175  0162  07FB               	addwf	memmove@d,f
  7176  0163                     l1515:	
  7177  0163  3001               	movlw	1
  7178  0164  02F9               	subwf	memmove@s,f
  7179  0165  3000               	movlw	0
  7180  0166  3BFA               	subwfb	memmove@s+1,f
  7181  0167  0879               	movf	memmove@s,w
  7182  0168  0084               	movwf	4
  7183  0169  087A               	movf	memmove@s+1,w
  7184  016A  0085               	movwf	5
  7185  016B  0800               	movf	0,w	;code access
  7186  016C  00F4               	movwf	??_memmove
  7187  016D  3001               	movlw	1
  7188  016E  02FB               	subwf	memmove@d,f
  7189  016F  087B               	movf	memmove@d,w
  7190  0170  0086               	movwf	6
  7191  0171  0187               	clrf	7
  7192  0172  0874               	movf	??_memmove,w
  7193  0173  0081               	movwf	1
  7194  0174  3001               	movlw	1
  7195  0175  02F2               	subwf	memmove@n,f
  7196  0176  3000               	movlw	0
  7197  0177  3BF3               	subwfb	memmove@n+1,f
  7198  0178  0872               	movf	memmove@n,w
  7199  0179  0473               	iorwf	memmove@n+1,w
  7200  017A  1903               	btfsc	3,2
  7201  017B  0008               	return
  7202  017C  2963               	goto	l1515
  7203  017D                     l1519:	
  7204  017D  0872               	movf	memmove@n,w
  7205  017E  0473               	iorwf	memmove@n+1,w
  7206  017F  1903               	btfsc	3,2
  7207  0180  0008               	return
  7208  0181  0879               	movf	memmove@s,w
  7209  0182  0084               	movwf	4
  7210  0183  087A               	movf	memmove@s+1,w
  7211  0184  0085               	movwf	5
  7212  0185  0800               	movf	0,w	;code access
  7213  0186  00F4               	movwf	??_memmove
  7214  0187  087B               	movf	memmove@d,w
  7215  0188  0086               	movwf	6
  7216  0189  0187               	clrf	7
  7217  018A  0874               	movf	??_memmove,w
  7218  018B  0081               	movwf	1
  7219  018C  3001               	movlw	1
  7220  018D  07F9               	addwf	memmove@s,f
  7221  018E  3000               	movlw	0
  7222  018F  3DFA               	addwfc	memmove@s+1,f
  7223  0190  3001               	movlw	1
  7224  0191  00F4               	movwf	??_memmove
  7225  0192  0874               	movf	??_memmove,w
  7226  0193  07FB               	addwf	memmove@d,f
  7227  0194  3001               	movlw	1
  7228  0195  02F2               	subwf	memmove@n,f
  7229  0196  3000               	movlw	0
  7230  0197  3BF3               	subwfb	memmove@n+1,f
  7231  0198  297D               	goto	l1519
  7232  0199                     __end_of_memmove:	
  7233                           ;	Return value of _memmove is never used
  7234                           
  7235                           
  7236                           	psect	text30
  7237  0D1A                     __ptext30:	
  7238 ;; *************** function _Send_I2C_StopBit *****************
  7239 ;; Defined at:
  7240 ;;		line 106 in file "I2C.c"
  7241 ;; Parameters:    Size  Location     Type
  7242 ;;		None
  7243 ;; Auto vars:     Size  Location     Type
  7244 ;;		None
  7245 ;; Return value:  Size  Location     Type
  7246 ;;                  1    wreg      void 
  7247 ;; Registers used:
  7248 ;;		None
  7249 ;; Tracked objects:
  7250 ;;		On entry : 0/0
  7251 ;;		On exit  : 0/0
  7252 ;;		Unchanged: 0/0
  7253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7258 ;;Total ram usage:        0 bytes
  7259 ;; Hardware stack levels used:    1
  7260 ;; This function calls:
  7261 ;;		Nothing
  7262 ;; This function is called by:
  7263 ;;		_OLED_Command
  7264 ;;		_OLED_PutChar
  7265 ;;		_OLED_Data
  7266 ;; This function uses a non-reentrant model
  7267 ;;
  7268                           
  7269                           
  7270                           ;psect for function _Send_I2C_StopBit
  7271  0D1A                     _Send_I2C_StopBit:	
  7272                           
  7273                           ;I2C.c: 108: PIR1bits.SSP1IF=0;
  7274                           
  7275                           ;incstack = 0
  7276                           ; Regs used in _Send_I2C_StopBit: []
  7277  0D1A  0020               	movlb	0	; select bank0
  7278  0D1B  1191               	bcf	17,3	;volatile
  7279                           
  7280                           ;I2C.c: 109: SSPCON2bits.PEN=1;
  7281  0D1C  0024               	movlb	4	; select bank4
  7282  0D1D  1516               	bsf	22,2	;volatile
  7283  0D1E                     l77:	
  7284                           ;I2C.c: 110: while(!PIR1bits.SSP1IF);
  7285                           
  7286  0D1E  0020               	movlb	0	; select bank0
  7287  0D1F  1991               	btfsc	17,3	;volatile
  7288  0D20  0008               	return
  7289  0D21  2D1E               	goto	l77
  7290  0D22                     __end_of_Send_I2C_StopBit:	
  7291                           
  7292                           	psect	text31
  7293  0D12                     __ptext31:	
  7294 ;; *************** function _Send_I2C_StartBit *****************
  7295 ;; Defined at:
  7296 ;;		line 96 in file "I2C.c"
  7297 ;; Parameters:    Size  Location     Type
  7298 ;;		None
  7299 ;; Auto vars:     Size  Location     Type
  7300 ;;		None
  7301 ;; Return value:  Size  Location     Type
  7302 ;;                  1    wreg      void 
  7303 ;; Registers used:
  7304 ;;		None
  7305 ;; Tracked objects:
  7306 ;;		On entry : 0/0
  7307 ;;		On exit  : 0/0
  7308 ;;		Unchanged: 0/0
  7309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7314 ;;Total ram usage:        0 bytes
  7315 ;; Hardware stack levels used:    1
  7316 ;; This function calls:
  7317 ;;		Nothing
  7318 ;; This function is called by:
  7319 ;;		_OLED_Command
  7320 ;;		_OLED_PutChar
  7321 ;;		_OLED_Data
  7322 ;; This function uses a non-reentrant model
  7323 ;;
  7324                           
  7325                           
  7326                           ;psect for function _Send_I2C_StartBit
  7327  0D12                     _Send_I2C_StartBit:	
  7328                           
  7329                           ;I2C.c: 98: PIR1bits.SSP1IF=0;
  7330                           
  7331                           ;incstack = 0
  7332                           ; Regs used in _Send_I2C_StartBit: []
  7333  0D12  0020               	movlb	0	; select bank0
  7334  0D13  1191               	bcf	17,3	;volatile
  7335                           
  7336                           ;I2C.c: 99: SSPCON2bits.SEN=1;
  7337  0D14  0024               	movlb	4	; select bank4
  7338  0D15  1416               	bsf	22,0	;volatile
  7339  0D16                     l71:	
  7340                           ;I2C.c: 100: while(!PIR1bits.SSP1IF);
  7341                           
  7342  0D16  0020               	movlb	0	; select bank0
  7343  0D17  1991               	btfsc	17,3	;volatile
  7344  0D18  0008               	return
  7345  0D19  2D16               	goto	l71
  7346  0D1A                     __end_of_Send_I2C_StartBit:	
  7347                           
  7348                           	psect	text32
  7349  0D2A                     __ptext32:	
  7350 ;; *************** function _Send_I2C_Data *****************
  7351 ;; Defined at:
  7352 ;;		line 48 in file "I2C.c"
  7353 ;; Parameters:    Size  Location     Type
  7354 ;;  databyte        2    0[COMMON] unsigned int 
  7355 ;; Auto vars:     Size  Location     Type
  7356 ;;		None
  7357 ;; Return value:  Size  Location     Type
  7358 ;;                  1    wreg      void 
  7359 ;; Registers used:
  7360 ;;		wreg
  7361 ;; Tracked objects:
  7362 ;;		On entry : 0/0
  7363 ;;		On exit  : 0/0
  7364 ;;		Unchanged: 0/0
  7365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7366 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7369 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7370 ;;Total ram usage:        2 bytes
  7371 ;; Hardware stack levels used:    1
  7372 ;; This function calls:
  7373 ;;		Nothing
  7374 ;; This function is called by:
  7375 ;;		_OLED_Command
  7376 ;;		_OLED_PutChar
  7377 ;;		_OLED_Data
  7378 ;; This function uses a non-reentrant model
  7379 ;;
  7380                           
  7381                           
  7382                           ;psect for function _Send_I2C_Data
  7383  0D2A                     _Send_I2C_Data:	
  7384                           
  7385                           ;I2C.c: 50: PIR1bits.SSP1IF=0;
  7386                           
  7387                           ;incstack = 0
  7388                           ; Regs used in _Send_I2C_Data: [wreg]
  7389  0D2A  0020               	movlb	0	; select bank0
  7390  0D2B  1191               	bcf	17,3	;volatile
  7391                           
  7392                           ;I2C.c: 51: SSPBUF = databyte;
  7393  0D2C  0870               	movf	Send_I2C_Data@databyte,w
  7394  0D2D  0024               	movlb	4	; select bank4
  7395  0D2E  0091               	movwf	17	;volatile
  7396  0D2F                     l53:	
  7397                           ;I2C.c: 52: while(!PIR1bits.SSP1IF);
  7398                           
  7399  0D2F  0020               	movlb	0	; select bank0
  7400  0D30  1991               	btfsc	17,3	;volatile
  7401  0D31  0008               	return
  7402  0D32  2D2F               	goto	l53
  7403  0D33                     __end_of_Send_I2C_Data:	
  7404                           
  7405                           	psect	text33
  7406  0D4A                     __ptext33:	
  7407 ;; *************** function _I2C_Init *****************
  7408 ;; Defined at:
  7409 ;;		line 19 in file "I2C.c"
  7410 ;; Parameters:    Size  Location     Type
  7411 ;;		None
  7412 ;; Auto vars:     Size  Location     Type
  7413 ;;		None
  7414 ;; Return value:  Size  Location     Type
  7415 ;;                  1    wreg      void 
  7416 ;; Registers used:
  7417 ;;		wreg, status,2, status,0
  7418 ;; Tracked objects:
  7419 ;;		On entry : 0/0
  7420 ;;		On exit  : 0/0
  7421 ;;		Unchanged: 0/0
  7422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7425 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7426 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7427 ;;Total ram usage:        1 bytes
  7428 ;; Hardware stack levels used:    1
  7429 ;; This function calls:
  7430 ;;		Nothing
  7431 ;; This function is called by:
  7432 ;;		_main
  7433 ;; This function uses a non-reentrant model
  7434 ;;
  7435                           
  7436                           
  7437                           ;psect for function _I2C_Init
  7438  0D4A                     _I2C_Init:	
  7439                           
  7440                           ;I2C.c: 25: SSPCONbits.SSPM=0x08;
  7441                           
  7442                           ;incstack = 0
  7443                           ; Regs used in _I2C_Init: [wreg+status,2+status,0]
  7444  0D4A  0024               	movlb	4	; select bank4
  7445  0D4B  0815               	movf	21,w	;volatile
  7446  0D4C  39F0               	andlw	-16
  7447  0D4D  3808               	iorlw	8
  7448  0D4E  0095               	movwf	21	;volatile
  7449                           
  7450                           ;I2C.c: 26: SSPCONbits.SSPEN=1;
  7451  0D4F  1695               	bsf	21,5	;volatile
  7452                           
  7453                           ;I2C.c: 38: SSPADD = 39;
  7454  0D50  3027               	movlw	39
  7455  0D51  0092               	movwf	18	;volatile
  7456                           
  7457                           ;I2C.c: 42: _delay((unsigned long)((10)*(16000000/4000.0)));
  7458  0D52  3034               	movlw	52
  7459  0D53  00F0               	movwf	??_I2C_Init
  7460  0D54  30F2               	movlw	242
  7461  0D55                     u2967:	
  7462  0D55  0B89               	decfsz	9,f
  7463  0D56  2D55               	goto	u2967
  7464  0D57  0BF0               	decfsz	??_I2C_Init,f
  7465  0D58  2D55               	goto	u2967
  7466  0D59  0008               	return
  7467  0D5A                     __end_of_I2C_Init:	
  7468  007E                     btemp	set	126	;btemp
  7469  007E                     wtemp0	set	126


Data Sizes:
    Strings     89
    Constant    808
    Data        0
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     67      67
    BANK1            80      0      17
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    ftoa@status	PTR int  size(1) Largest target is 2
		 -> OLED_Write_Float@status(BANK0[2]), 

    memmove@d1	PTR void  size(1) Largest target is 9
		 -> OLED_PutChar@bytes(BANK0[9]), 

    memmove@d	PTR unsigned char  size(1) Largest target is 9
		 -> OLED_PutChar@bytes(BANK0[9]), 

    memmove@s1	PTR const void  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    memmove@s	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 20
		 -> OLED_Write_Integer@s(BANK0[20]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 20
		 -> OLED_Write_Integer@s(BANK0[20]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 20
		 -> OLED_Write_Integer@s(BANK0[20]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 20
		 -> OLED_Write_Integer@s(BANK0[20]), 

    ftoa@cp	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_9(CODE[11]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__ftoa	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    OLED_Write_Float@buf11	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 20
		 -> OLED_Write_Integer@s(BANK0[20]), 

    OLED_Write_String@s	PTR unsigned char  size(2) Largest target is 20
		 -> ftoa@buf(BANK1[17]), STR_8(CODE[6]), STR_7(CODE[6]), OLED_Write_Integer@s(BANK0[20]), 
		 -> STR_6(CODE[13]), STR_5(CODE[15]), STR_4(CODE[13]), STR_3(CODE[8]), 
		 -> STR_2(CODE[10]), STR_1(CODE[13]), 

    sp__memmove	PTR void  size(1) Largest target is 9
		 -> OLED_PutChar@bytes(BANK0[9]), 

    OLED_PutChar@base	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 


Critical Paths under _main in COMMON

    _main->_OLED_Write_String
    _main->___ftadd
    _OLED_Write_Integer->_OLED_Write_String
    _OLED_Write_Integer->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _OLED_Write_Float->_OLED_Write_String
    _ftoa->___ftmul
    _ftoa->___lltoft
    _sprintf->___lldiv
    ___llmod->___lldiv
    ___lltoft->___ftpack
    ___fttol->___ftmul
    ___ftsub->___ftadd
    ___ftsub->___lltoft
    ___ftadd->___ftpack
    ___ftmul->___ftpack
    _OLED_Init->_OLED_Command
    _OLED_YX->_OLED_Command
    _OLED_Command->_Send_I2C_Data
    _OLED_PutChar->_memmove

Critical Paths under _main in BANK0

    _main->_OLED_Write_Float
    _OLED_Write_Integer->_OLED_Write_String
    _itoa->_utoa
    _OLED_Write_Float->_ftoa
    _ftoa->_sprintf
    _sprintf->___llmod
    ___fttol->___ftmul
    ___ftsub->___ftadd
    _OLED_Write_String->_OLED_PutChar
    _OLED_Clear->_OLED_PutChar

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0   24145
                                             60 BANK0      7     7      0
                           _I2C_Init
                         _OLED_Clear
                          _OLED_Init
                   _OLED_Write_Float
                 _OLED_Write_Integer
                  _OLED_Write_String
                            _OLED_YX
                            ___ftadd
                             ___ftge
                           _initMain
 ---------------------------------------------------------------------------------
 (1) _initMain                                             0     0      0       0
                        _internal_16
 ---------------------------------------------------------------------------------
 (2) _internal_16                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OLED_Write_Integer                                  23    23      0    3223
                                             21 BANK0     23    23      0
                  _OLED_Write_String
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 7     3      4    1370
                                             13 COMMON     1     1      0
                                              4 BANK0      6     2      4
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     5      4    1074
                                              8 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     265
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     374
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _OLED_Write_Float                                     8     5      3   11820
                                             52 BANK0      8     5      3
                  _OLED_Write_String
                               _ftoa
 ---------------------------------------------------------------------------------
 (2) _ftoa                                                14    10      4    9921
                                             38 BANK0     14    10      4
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                           ___lltoft
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             36    26     10    1896
                                             10 BANK0     28    18     10
                            ___lldiv
                            ___llmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     304
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___llmod                                             10     2      8     265
                                              0 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             14     6      8     268
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             6     2      4    1790
                                              8 COMMON     6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     358
                                             10 BANK0     14    10      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftsub                                              6     0      6    2893
                                              7 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftadd                                             13     7      6    2720
                                              8 COMMON     6     0      6
                                              0 BANK0      7     7      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3      98
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    2100
                                              8 COMMON     6     0      6
                                              0 BANK0     10    10      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    1668
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) ___ftge                                               9     3      6     454
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (1) _OLED_Write_String                                    3     1      2    1779
                                             12 COMMON     2     0      2
                                             20 BANK0      1     1      0
                       _OLED_PutChar
 ---------------------------------------------------------------------------------
 (1) _OLED_Init                                            0     0      0     521
                       _OLED_Command
 ---------------------------------------------------------------------------------
 (1) _OLED_Clear                                           5     5      0    2404
                                             12 COMMON     1     1      0
                                             20 BANK0      4     4      0
                       _OLED_PutChar
                            _OLED_YX
 ---------------------------------------------------------------------------------
 (1) _OLED_YX                                              5     4      1    1064
                                              5 COMMON     5     4      1
                       _OLED_Command
 ---------------------------------------------------------------------------------
 (2) _OLED_Command                                         3     3      0     521
                                              2 COMMON     3     3      0
                      _Send_I2C_Data
                  _Send_I2C_StartBit
                   _Send_I2C_StopBit
 ---------------------------------------------------------------------------------
 (2) _OLED_PutChar                                        20    20      0    1204
                                              0 BANK0     20    20      0
                      _Send_I2C_Data
                  _Send_I2C_StartBit
                   _Send_I2C_StopBit
                            _memmove
 ---------------------------------------------------------------------------------
 (3) _memmove                                             12     8      4     497
                                              0 COMMON    12     8      4
 ---------------------------------------------------------------------------------
 (3) _Send_I2C_StopBit                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Send_I2C_StartBit                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Send_I2C_Data                                        2     0      2     499
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Init
   _OLED_Clear
     _OLED_PutChar
       _Send_I2C_Data
       _Send_I2C_StartBit
       _Send_I2C_StopBit
       _memmove
     _OLED_YX
       _OLED_Command
         _Send_I2C_Data
         _Send_I2C_StartBit
         _Send_I2C_StopBit
   _OLED_Init
     _OLED_Command
       _Send_I2C_Data
       _Send_I2C_StartBit
       _Send_I2C_StopBit
   _OLED_Write_Float
     _OLED_Write_String
       _OLED_PutChar
         _Send_I2C_Data
         _Send_I2C_StartBit
         _Send_I2C_StopBit
         _memmove
     _ftoa
       ___ftge
       ___ftmul
         ___ftpack
       ___ftneg
       ___ftsub
         ___ftadd
           ___ftpack
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___ftpack
       ___lltoft
         ___ftpack
       _sprintf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         _isdigit
   _OLED_Write_Integer
     _OLED_Write_String
       _OLED_PutChar
         _Send_I2C_Data
         _Send_I2C_StartBit
         _Send_I2C_StopBit
         _memmove
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
   _OLED_Write_String
     _OLED_PutChar
       _Send_I2C_Data
       _Send_I2C_StartBit
       _Send_I2C_StopBit
       _memmove
   _OLED_YX
     _OLED_Command
       _Send_I2C_Data
       _Send_I2C_StartBit
       _Send_I2C_StopBit
   ___ftadd
     ___ftpack
   ___ftge
   _initMain
     _internal_16

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     43      43       5       83.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      11       7       21.3%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      62      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      62      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Tue Apr 18 11:29:50 2017

                __CFG_CP$OFF 0000                           l53 0D2F                           l71 0D16  
                         l77 0D1E          ___wmul@multiplicand 0072                 ___ftadd@exp1 0026  
               ___ftadd@exp2 0025           OLED_Write_String@s 007C                 ___ftadd@sign 0024  
                        l221 06DE                          l218 06BF                          l412 0115  
                        l244 0D76                          l413 011D                          l405 0102  
                        l504 0280                          l436 048E                          l524 0056  
   __end_of_OLED_Write_Float 0E04                 __CFG_BORV$LO 0000                          wreg 0009  
               __CFG_IESO$ON 0000             OLED_Command@temp 0074                 __CFG_LVP$OFF 0000  
                       l2003 002E                         l2041 0D5A                         l2025 0E54  
                       l2131 0EDF                         l2027 0E64                         l2053 0E1C  
                       l2221 0607                         l1601 0480                         l2209 05B8  
                       l2161 0505                         l1515 0163                         l2139 0EF7  
                       l1611 04B2                         l1603 048A                         l2067 02CC  
                       l1621 04CD                         l1519 017D                         l1471 00D8  
                       l1607 04A0                         l1631 0FBE                         l1543 0D70  
                       l1703 0EA6                         l1561 0417                         l1641 0FEC  
                       l1633 0FCC                         l1537 0D48                         l1705 0EB2  
                       l1713 0EC7                         l1731 01A3                         l1475 00DF  
                       l1571 042D                         l2187 055F                         l1733 01A7  
                       l1485 0107                         l1477 00E9                         l1565 041E  
                       l1645 0FF7                         l1661 0F9A                         l1821 0712  
                       l1805 06ED                         l1709 0EBE                         l1751 01F1  
                       l1487 010F                         l1479 00EE                         l1911 03AC  
                       l1591 0464                         l1583 0447                         l1655 0F74  
                       l1831 0756                         l1815 070C                         l2199 0591  
                       l1593 0469                         l1657 0F82                         l1665 0FA5  
                       l1841 078E                         l1681 0F10                         l1923 03C8  
                       l1907 03A4                         l1595 046D                         l1835 076E  
                       l1827 073F                         l1691 0F2B                         l1757 0210  
                       l1589 045A                         l1773 064F                         l1781 067D  
                       l1871 0F5C                         l1919 03C0                         l1855 07E6  
                       l1839 078B                         l1791 068C                         l1767 063F  
                       l1687 0F22                         l1679 0F04                         l1945 0DAF  
                       l1849 07A2                         l1793 06BB                         l1857 061D  
                       l1867 0F46                         l1955 022C                         l1795 06C1  
                       l1859 07F1                         l1981 0277                         l1973 025C  
                       l1895 0369                         l1983 0283                         l1975 026A  
                       l1799 06C6                         l1889 0353                         l1993 0010  
                       l1987 0291                         STR_1 0B37                         STR_2 0B69  
                       STR_3 0B73                         STR_4 0B51                         STR_5 0B28  
                       STR_6 0B44                         STR_7 0B7B                         STR_8 0B7B  
                       STR_9 0B5E              __end_of_OLED_YX 0E50                         u2005 0FE1  
                       u2015 0FED                  ?_OLED_Clear 0070                         u2105 0F07  
                       u2045 0F77                         u2125 0F11                         u2205 0EBF  
                       u2135 0F1B                         u2065 0F90                         u2145 0F23  
                       u1515 00FD                         u2075 0F9B                         u2245 01EF  
                       u2255 020E                         u1535 010A                         u2175 0EA9  
                       u1625 0147                         u2505 0385                         u1705 0D77  
                       u1635 0159                         u1715 0D7C                         u2355 0735  
                       u2195 0EB8                         u2525 03AD                         u1575 0124  
                       u1495 00E4                         u2535 03B3                         u2375 074E  
                       u1825 0448                         u2625 0233                         u2385 0766  
                       u1915 0481                         u2395 077E                         u2565 03C9  
                       u2575 03CF                         u2495 0375                         u1855 045B  
                       u2655 025D                         u2745 0E59                         u2907 053B  
                       u2765 0E31                         u1885 046E                         u2685 0278  
                       u2917 054B                         u2775 0E45                         u1975 0FC1  
                       u2927 057B                         u2855 055D                         u2937 059A  
                       u2865 058F                         u1995 0FCD                         u2947 05D9  
                       u2957 060D                         u2967 0D55                         u2897 04F0  
                       _SCS0 04C8                         _SCS1 04C9                 __CFG_WRT$OFF 0000  
                       _main 04E4                         _ftoa 029A                 ___ftpack@arg 0070  
                       _itoa 0E04                 ___ftpack@exp 0073             __end_of_I2C_Init 0D5A  
                       fsr0h 0005                         fsr1h 0007                         indf0 0000  
                       fsr0l 0004                         indf1 0001                         fsr1l 0006  
                       btemp 007E                         _utoa 000A                         start 0002  
               ___ftmul@cntr 0028                 ___ftmul@sign 0029                 ___fttol@exp1 0037  
         __size_of_OLED_Init 0064                 ___fttol@lval 0033                        ?_main 0070  
                      ?_ftoa 0046                        ?_itoa 0024              __end_of___ftadd 04E4  
              __CFG_WDTE$OFF 0000              __end_of___ftneg 0D2A              __end_of___lldiv 1000  
                      ?_utoa 0078              __end_of___ftmul 03EF              __end_of___llmod 0FAE  
            __end_of___ftsub 0DC5              __end_of___fttol 029A                        _IRCF0 04CB  
                      _IRCF1 04CC                        _IRCF2 04CD                        _IRCF3 04CE  
            __end_of___lwdiv 0F30              __end_of___lwmod 0ECC                 ___lltoft@exp 007D  
             __CFG_FCMEN$OFF 0000              __end_of_dpowers 0828              __end_of_isdigit 0D4A  
            __end_of_memmove 0199                ___ftpack@sign 0074                        ftoa@f 0046  
                      ftoa@l 004F               __CFG_BOREN$OFF 0000                        utoa@c 0022  
                      utoa@v 0020                        status 0003                        wtemp0 007E  
            __end_of_sprintf 07F6   __size_of_Send_I2C_StartBit 0008                 ?_internal_16 0070  
             __CFG_MCLRE$OFF 0000              __initialization 07F6                 __end_of_main 0617  
               __end_of_ftoa 033C                 __end_of_itoa 0E28                 __end_of_utoa 006C  
             __CFG_LPBOR$OFF 0000             __end_of_OledFont 0B28          __size_of_OLED_Clear 0030  
                     ??_main 005C                       ??_ftoa 004A                ___fttol@sign1 0032  
                     ??_itoa 007D                       ??_utoa 007C               __CFG_PLLEN$OFF 0000  
                  ??_OLED_YX 0076             ___llmod@dividend 0024           _OLED_Write_Integer 0DC5  
             __CFG_ZCDDIS$ON 0000             __end_of___ftpack 0134            __end_of_OLED_Init 00D0  
           __end_of___lltoft 0E78                ?_OLED_Command 0070                       _SPLLEN 04CF  
                     _SSPADD 0212                       _SSPBUF 0211          ?_OLED_Write_Integer 0070  
             __CFG_PWRTE$OFF 0000                ?_OLED_PutChar 0070                       ___ftge 0F30  
                     ___wmul 0D6E       __size_of_Send_I2C_Data 0009                    ??___ftadd 0020  
             __CFG_STVREN$ON 0000                    ??___ftneg 0073                    ??___lldiv 0078  
                  ??___ftmul 0020                    ??___llmod 0028                    ??___ftsub 007E  
                  ??___fttol 002E                    ??___lwdiv 0074                    ??___lwmod 0074  
           __end_of_initMain 0EA0                       ftoa@cp 0053        ___ftmul@f3_as_product 0025  
       ??_OLED_Write_Integer 0035                       itoa@cp 0028                    ??_isdigit 0070  
                  ?_I2C_Init 0070                    ??_memmove 0074        Send_I2C_Data@databyte 0070  
                  ??_sprintf 0034               ??_OLED_Command 0072      __end_of__initialization 07FD  
                 ___ftadd@f1 0078                   ___ftadd@f2 007B                   ___ftge@ff1 0070  
                 ___ftge@ff2 0073               ??_OLED_PutChar 0020                   ___ftneg@f1 0070  
                 ___ftmul@f1 0078                   ___ftmul@f2 007B    __size_of_Send_I2C_StopBit 0008  
                 ___ftsub@f1 002A                   ___ftsub@f2 0027                   ___fttol@f1 002A  
             __pcstackCOMMON 0070                   ___lltoft@c 0078                   ??_I2C_Init 0070  
          ?_OLED_Write_Float 0054           ??_OLED_Write_Float 0057                _Send_I2C_Data 0D2A  
               sprintf@width 0041                 ??_OLED_Clear 007C                   __pbssBANK1 00A0  
                 __pmaintext 04E4         __size_of_internal_16 0009                      ?___ftge 0070  
                    ?___wmul 0070              __CFG_PPS1WAY$ON 0000                    ?___ftpack 0070  
                  ?___lltoft 0078           __end_of_OLED_Clear 0EFC                      _OLED_YX 0E28  
             ?_Send_I2C_Data 0070                      _PPSLOCK 0E0F                    ?_initMain 0070  
            __size_of___ftge 003B                      ___ftadd 03EF                      ___ftneg 0D22  
                    ___lldiv 0FAE              __size_of___wmul 001B                      ___ftmul 033C  
                    ___llmod 0F6B                      ___ftsub 0DA7                      ___fttol 0213  
                    ___lwdiv 0EFC                      ___lwmod 0EA0                   ??___ftpack 0075  
       __end_of_OLED_Command 0DA7                   ??___lltoft 007C                      __ptext1 0E78  
                    __ptext2 0D33                      __ptext3 0DC5                      __ptext4 0E04  
                    __ptext5 000A                      __ptext6 0EA0                      __ptext7 0EFC  
                    __ptext8 0DE4                      __ptext9 029A                      _dpowers 0800  
                    _isdigit 0D3C                      _memmove 0134         __end_of_OLED_PutChar 0213  
                    main@dec 0060                      _sprintf 0617                      clrloop0 0005  
       end_of_initialization 07FD                      ftoa@buf 00A0                      ftoa@rem 004B  
                 ??_initMain 0070                      itoa@buf 0029                      itoa@val 0024  
                  _OLED_Init 006C              ___lldiv@divisor 0070             OLED_PutChar@base 002F  
            ___lldiv@counter 007D             _Send_I2C_StopBit 0D1A                 __pstringtext 0800  
                    utoa@buf 0023                      utoa@val 0078            OLED_Write_Float@f 0054  
            ??_Send_I2C_Data 0072             __CFG_FOSC$INTOSC 0000                    _TRISCbits 008E  
          __size_of_I2C_Init 0010                   ?_OLED_Init 0070                  ___ftmul@exp 0024  
             __end_of___ftge 0F6B               __end_of___wmul 0D89  __size_of_OLED_Write_Integer 001F  
        start_initialization 07F6                   ftoa@status 0049              ___llmod@divisor 0020  
            ___llmod@counter 0029    __size_of_OLED_Write_Float 0020            _OLED_Write_String 0D5A  
         ?_OLED_Write_String 007C        __size_of_OLED_Command 001E                     ??___ftge 0076  
                   ??___wmul 0074                   OLED_YX@Row 0079        __size_of_OLED_PutChar 007A  
        ??_OLED_Write_String 0034            __size_of___ftpack 0064            __size_of___lltoft 0028  
                  ___latbits 0002                     ?_OLED_YX 0075                __pcstackBANK0 0020  
                sprintf@flag 003A                 _OLED_Command 0D89    __end_of_OLED_Write_String 0D6E  
                sprintf@prec 0043                ??_internal_16 0070                  ??_OLED_Init 0075  
          __size_of_initMain 0028             ___lwdiv@dividend 0072                 _OLED_PutChar 0199  
                   ?___ftadd 0078                     ?___ftneg 0070                     ?___lldiv 0070  
                   ?___ftmul 0078                     ?___llmod 0020                     ?___ftsub 0027  
                   ?___fttol 002A                     ?___lwdiv 0070                     ?___lwmod 0070  
                   ?_isdigit 0070                     _I2C_Init 0D4A                     ?_memmove 0070  
     OLED_Write_Float@status 0059     __end_of_Send_I2C_StopBit 0D22             ___lwdiv@quotient 0075  
                   ?_sprintf 002A               ___wmul@product 0074                    clear_ram0 0004  
                   _PIR1bits 0011          __end_of_internal_16 0D3C            ___wmul@multiplier 0070  
                  main@count 005E             __size_of_OLED_YX 0028   __size_of_OLED_Write_String 0014  
                   _OledFont 0828             _OLED_Write_Float 0DE4                    memmove@d1 0078  
                  memmove@s1 0070             __size_of___ftadd 00F5             __size_of___ftneg 0008  
           __size_of___lldiv 0052             __size_of___ftmul 00B3             __size_of___llmod 0043  
           __size_of___ftsub 001E             __size_of___fttol 0087             __size_of___lwdiv 0034  
           __size_of___lwmod 002C                     ___ftpack 00D0                     ___lltoft 0E50  
                _isdigit$512 0070                   _ANSELCbits 018E                   sprintf@val 003C  
           __size_of_isdigit 000E             __size_of_memmove 0065              ___lwdiv@divisor 0070  
      __end_of_Send_I2C_Data 0D33              ___lwdiv@counter 0077                     __ptext10 0617  
                   __ptext11 0D3C                     __ptext20 033C                     __ptext12 0D6E  
                   __ptext21 00D0                     __ptext13 0F6B                     __ptext30 0D1A  
                   __ptext22 0F30                     __ptext14 0FAE                     __ptext31 0D12  
                   __ptext23 0D5A                     __ptext15 0E50                     __ptext32 0D2A  
                   __ptext24 006C                     __ptext16 0213                     __ptext33 0D4A  
                   __ptext25 0ECC                     __ptext17 0DA7                     __ptext26 0E28  
                   __ptext18 03EF                     __ptext27 0D89                     __ptext19 0D22  
                   __ptext28 0199                     __ptext29 0134        OLED_Write_Float@buf11 005B  
           __size_of_sprintf 01DF                     _initMain 0E78                __size_of_main 0133  
              _SSPDATPPSbits 0E21                __size_of_ftoa 00A2                __size_of_itoa 0024  
              __size_of_utoa 0062                OLED_Clear@col 0036                  _internal_16 0D33  
              OLED_Clear@row 0034                OLED_YX@Column 0075               OLED_PutChar@ch 0033  
                 _RC4PPSbits 0EA4                _SSPCLKPPSbits 0E20                   _RC5PPSbits 0EA5  
 __end_of_OLED_Write_Integer 0DE4                     itoa@base 0026                     isdigit@c 0071  
                   memmove@d 007B                     memmove@n 0072                     memmove@s 0079  
                 _OLED_Clear 0ECC                    sprintf@ap 003B                    sprintf@sp 0040  
           ___lwmod@dividend 0072             ___lldiv@dividend 0074            __CFG_CLKOUTEN$OFF 0000  
                _PPSLOCKbits 0E0F            _Send_I2C_StartBit 0D12            OLED_PutChar@bytes 0026  
              OLED_PutChar@i 0031           ?_Send_I2C_StartBit 0070                     utoa@base 007A  
        ??_Send_I2C_StartBit 0070                     sprintf@c 0045                     sprintf@f 002A  
           ___lldiv@quotient 0079              ___lwmod@divisor 0070              ___lwmod@counter 0075  
                _SSPCON2bits 0216            ?_Send_I2C_StopBit 0070           ??_Send_I2C_StopBit 0070  
        OLED_Write_Integer@i 004B          OLED_Write_Integer@s 0037    __end_of_Send_I2C_StartBit 0D1A  
                 _SSPCONbits 0215  
