

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Sat Jul 20 11:02:41 2019

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F1717
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2
    35                           	psect	text25,local,class=CODE,merge=1,delta=2
    36                           	psect	text26,local,class=CODE,merge=1,delta=2
    37                           	psect	text27,local,class=CODE,merge=1,delta=2
    38                           	psect	text28,local,class=CODE,merge=1,delta=2
    39                           	psect	text29,local,class=CODE,merge=1,delta=2
    40                           	psect	text30,local,class=CODE,merge=1,delta=2
    41                           	psect	text31,local,class=CODE,merge=1,delta=2
    42                           	psect	text32,local,class=CODE,merge=1,delta=2
    43                           	psect	text33,local,class=CODE,merge=1,delta=2
    44                           	dabs	1,0x7E,2
    45  0000                     	;# 
    46  0001                     	;# 
    47  0002                     	;# 
    48  0003                     	;# 
    49  0004                     	;# 
    50  0005                     	;# 
    51  0006                     	;# 
    52  0007                     	;# 
    53  0008                     	;# 
    54  0009                     	;# 
    55  000A                     	;# 
    56  000B                     	;# 
    57  000C                     	;# 
    58  000D                     	;# 
    59  000E                     	;# 
    60  000F                     	;# 
    61  0010                     	;# 
    62  0011                     	;# 
    63  0012                     	;# 
    64  0013                     	;# 
    65  0015                     	;# 
    66  0016                     	;# 
    67  0016                     	;# 
    68  0017                     	;# 
    69  0018                     	;# 
    70  0019                     	;# 
    71  001A                     	;# 
    72  001B                     	;# 
    73  001C                     	;# 
    74  008C                     	;# 
    75  008D                     	;# 
    76  008E                     	;# 
    77  008F                     	;# 
    78  0090                     	;# 
    79  0091                     	;# 
    80  0092                     	;# 
    81  0093                     	;# 
    82  0095                     	;# 
    83  0096                     	;# 
    84  0097                     	;# 
    85  0098                     	;# 
    86  0099                     	;# 
    87  009A                     	;# 
    88  009B                     	;# 
    89  009B                     	;# 
    90  009C                     	;# 
    91  009D                     	;# 
    92  009E                     	;# 
    93  009F                     	;# 
    94  010C                     	;# 
    95  010D                     	;# 
    96  010E                     	;# 
    97  010F                     	;# 
    98  0110                     	;# 
    99  0111                     	;# 
   100  0112                     	;# 
   101  0113                     	;# 
   102  0114                     	;# 
   103  0115                     	;# 
   104  0116                     	;# 
   105  0117                     	;# 
   106  0118                     	;# 
   107  0119                     	;# 
   108  011A                     	;# 
   109  011B                     	;# 
   110  011B                     	;# 
   111  011C                     	;# 
   112  018C                     	;# 
   113  018D                     	;# 
   114  018E                     	;# 
   115  018F                     	;# 
   116  0190                     	;# 
   117  0191                     	;# 
   118  0191                     	;# 
   119  0192                     	;# 
   120  0193                     	;# 
   121  0193                     	;# 
   122  0194                     	;# 
   123  0195                     	;# 
   124  0196                     	;# 
   125  0197                     	;# 
   126  0199                     	;# 
   127  0199                     	;# 
   128  0199                     	;# 
   129  019A                     	;# 
   130  019A                     	;# 
   131  019A                     	;# 
   132  019B                     	;# 
   133  019B                     	;# 
   134  019B                     	;# 
   135  019B                     	;# 
   136  019B                     	;# 
   137  019C                     	;# 
   138  019C                     	;# 
   139  019C                     	;# 
   140  019D                     	;# 
   141  019D                     	;# 
   142  019D                     	;# 
   143  019E                     	;# 
   144  019E                     	;# 
   145  019E                     	;# 
   146  019F                     	;# 
   147  019F                     	;# 
   148  019F                     	;# 
   149  019F                     	;# 
   150  019F                     	;# 
   151  020C                     	;# 
   152  020D                     	;# 
   153  020E                     	;# 
   154  020F                     	;# 
   155  0210                     	;# 
   156  0211                     	;# 
   157  0211                     	;# 
   158  0212                     	;# 
   159  0212                     	;# 
   160  0213                     	;# 
   161  0213                     	;# 
   162  0214                     	;# 
   163  0214                     	;# 
   164  0215                     	;# 
   165  0215                     	;# 
   166  0215                     	;# 
   167  0215                     	;# 
   168  0216                     	;# 
   169  0216                     	;# 
   170  0217                     	;# 
   171  0217                     	;# 
   172  028C                     	;# 
   173  028D                     	;# 
   174  028E                     	;# 
   175  028F                     	;# 
   176  0290                     	;# 
   177  0291                     	;# 
   178  0291                     	;# 
   179  0292                     	;# 
   180  0293                     	;# 
   181  0293                     	;# 
   182  0298                     	;# 
   183  0298                     	;# 
   184  0299                     	;# 
   185  029A                     	;# 
   186  029A                     	;# 
   187  029E                     	;# 
   188  030C                     	;# 
   189  030D                     	;# 
   190  030E                     	;# 
   191  030F                     	;# 
   192  0310                     	;# 
   193  038C                     	;# 
   194  038D                     	;# 
   195  038E                     	;# 
   196  038F                     	;# 
   197  0390                     	;# 
   198  0391                     	;# 
   199  0392                     	;# 
   200  0393                     	;# 
   201  0394                     	;# 
   202  0395                     	;# 
   203  0396                     	;# 
   204  0397                     	;# 
   205  0398                     	;# 
   206  0399                     	;# 
   207  039D                     	;# 
   208  039E                     	;# 
   209  039F                     	;# 
   210  0415                     	;# 
   211  0416                     	;# 
   212  0417                     	;# 
   213  041C                     	;# 
   214  041D                     	;# 
   215  041E                     	;# 
   216  0498                     	;# 
   217  0498                     	;# 
   218  0499                     	;# 
   219  049A                     	;# 
   220  049B                     	;# 
   221  049B                     	;# 
   222  049C                     	;# 
   223  049D                     	;# 
   224  049E                     	;# 
   225  049F                     	;# 
   226  0511                     	;# 
   227  0515                     	;# 
   228  0617                     	;# 
   229  0618                     	;# 
   230  0619                     	;# 
   231  0619                     	;# 
   232  061A                     	;# 
   233  061B                     	;# 
   234  061C                     	;# 
   235  061C                     	;# 
   236  0691                     	;# 
   237  0692                     	;# 
   238  0693                     	;# 
   239  0694                     	;# 
   240  0695                     	;# 
   241  0696                     	;# 
   242  0697                     	;# 
   243  0698                     	;# 
   244  0699                     	;# 
   245  069A                     	;# 
   246  069B                     	;# 
   247  069C                     	;# 
   248  069D                     	;# 
   249  069E                     	;# 
   250  069F                     	;# 
   251  0E0F                     	;# 
   252  0E10                     	;# 
   253  0E11                     	;# 
   254  0E12                     	;# 
   255  0E13                     	;# 
   256  0E14                     	;# 
   257  0E15                     	;# 
   258  0E17                     	;# 
   259  0E20                     	;# 
   260  0E21                     	;# 
   261  0E22                     	;# 
   262  0E24                     	;# 
   263  0E25                     	;# 
   264  0E28                     	;# 
   265  0E29                     	;# 
   266  0E2A                     	;# 
   267  0E2B                     	;# 
   268  0E90                     	;# 
   269  0E91                     	;# 
   270  0E92                     	;# 
   271  0E93                     	;# 
   272  0E94                     	;# 
   273  0E95                     	;# 
   274  0E96                     	;# 
   275  0E97                     	;# 
   276  0E98                     	;# 
   277  0E99                     	;# 
   278  0E9A                     	;# 
   279  0E9B                     	;# 
   280  0E9C                     	;# 
   281  0E9D                     	;# 
   282  0E9E                     	;# 
   283  0E9F                     	;# 
   284  0EA0                     	;# 
   285  0EA1                     	;# 
   286  0EA2                     	;# 
   287  0EA3                     	;# 
   288  0EA4                     	;# 
   289  0EA5                     	;# 
   290  0EA6                     	;# 
   291  0EA7                     	;# 
   292  0EA8                     	;# 
   293  0EA9                     	;# 
   294  0EAA                     	;# 
   295  0EAB                     	;# 
   296  0EAC                     	;# 
   297  0EAD                     	;# 
   298  0EAE                     	;# 
   299  0EAF                     	;# 
   300  0EB0                     	;# 
   301  0EB1                     	;# 
   302  0EB2                     	;# 
   303  0F0F                     	;# 
   304  0F10                     	;# 
   305  0F11                     	;# 
   306  0F12                     	;# 
   307  0F13                     	;# 
   308  0F14                     	;# 
   309  0F15                     	;# 
   310  0F16                     	;# 
   311  0F17                     	;# 
   312  0F18                     	;# 
   313  0F19                     	;# 
   314  0F1A                     	;# 
   315  0F1B                     	;# 
   316  0F1C                     	;# 
   317  0F1D                     	;# 
   318  0F1E                     	;# 
   319  0F1F                     	;# 
   320  0F20                     	;# 
   321  0F21                     	;# 
   322  0F22                     	;# 
   323  0F23                     	;# 
   324  0F24                     	;# 
   325  0F25                     	;# 
   326  0F26                     	;# 
   327  0F27                     	;# 
   328  0F28                     	;# 
   329  0F29                     	;# 
   330  0F2A                     	;# 
   331  0F2B                     	;# 
   332  0F2C                     	;# 
   333  0F2D                     	;# 
   334  0F2E                     	;# 
   335  0F2F                     	;# 
   336  0F30                     	;# 
   337  0F31                     	;# 
   338  0F32                     	;# 
   339  0F33                     	;# 
   340  0F34                     	;# 
   341  0F35                     	;# 
   342  0F36                     	;# 
   343  0F37                     	;# 
   344  0FE4                     	;# 
   345  0FE5                     	;# 
   346  0FE6                     	;# 
   347  0FE7                     	;# 
   348  0FE8                     	;# 
   349  0FE9                     	;# 
   350  0FEA                     	;# 
   351  0FEB                     	;# 
   352  0FED                     	;# 
   353  0FEE                     	;# 
   354  0FEF                     	;# 
   355  0000                     	;# 
   356  0001                     	;# 
   357  0002                     	;# 
   358  0003                     	;# 
   359  0004                     	;# 
   360  0005                     	;# 
   361  0006                     	;# 
   362  0007                     	;# 
   363  0008                     	;# 
   364  0009                     	;# 
   365  000A                     	;# 
   366  000B                     	;# 
   367  000C                     	;# 
   368  000D                     	;# 
   369  000E                     	;# 
   370  000F                     	;# 
   371  0010                     	;# 
   372  0011                     	;# 
   373  0012                     	;# 
   374  0013                     	;# 
   375  0015                     	;# 
   376  0016                     	;# 
   377  0016                     	;# 
   378  0017                     	;# 
   379  0018                     	;# 
   380  0019                     	;# 
   381  001A                     	;# 
   382  001B                     	;# 
   383  001C                     	;# 
   384  008C                     	;# 
   385  008D                     	;# 
   386  008E                     	;# 
   387  008F                     	;# 
   388  0090                     	;# 
   389  0091                     	;# 
   390  0092                     	;# 
   391  0093                     	;# 
   392  0095                     	;# 
   393  0096                     	;# 
   394  0097                     	;# 
   395  0098                     	;# 
   396  0099                     	;# 
   397  009A                     	;# 
   398  009B                     	;# 
   399  009B                     	;# 
   400  009C                     	;# 
   401  009D                     	;# 
   402  009E                     	;# 
   403  009F                     	;# 
   404  010C                     	;# 
   405  010D                     	;# 
   406  010E                     	;# 
   407  010F                     	;# 
   408  0110                     	;# 
   409  0111                     	;# 
   410  0112                     	;# 
   411  0113                     	;# 
   412  0114                     	;# 
   413  0115                     	;# 
   414  0116                     	;# 
   415  0117                     	;# 
   416  0118                     	;# 
   417  0119                     	;# 
   418  011A                     	;# 
   419  011B                     	;# 
   420  011B                     	;# 
   421  011C                     	;# 
   422  018C                     	;# 
   423  018D                     	;# 
   424  018E                     	;# 
   425  018F                     	;# 
   426  0190                     	;# 
   427  0191                     	;# 
   428  0191                     	;# 
   429  0192                     	;# 
   430  0193                     	;# 
   431  0193                     	;# 
   432  0194                     	;# 
   433  0195                     	;# 
   434  0196                     	;# 
   435  0197                     	;# 
   436  0199                     	;# 
   437  0199                     	;# 
   438  0199                     	;# 
   439  019A                     	;# 
   440  019A                     	;# 
   441  019A                     	;# 
   442  019B                     	;# 
   443  019B                     	;# 
   444  019B                     	;# 
   445  019B                     	;# 
   446  019B                     	;# 
   447  019C                     	;# 
   448  019C                     	;# 
   449  019C                     	;# 
   450  019D                     	;# 
   451  019D                     	;# 
   452  019D                     	;# 
   453  019E                     	;# 
   454  019E                     	;# 
   455  019E                     	;# 
   456  019F                     	;# 
   457  019F                     	;# 
   458  019F                     	;# 
   459  019F                     	;# 
   460  019F                     	;# 
   461  020C                     	;# 
   462  020D                     	;# 
   463  020E                     	;# 
   464  020F                     	;# 
   465  0210                     	;# 
   466  0211                     	;# 
   467  0211                     	;# 
   468  0212                     	;# 
   469  0212                     	;# 
   470  0213                     	;# 
   471  0213                     	;# 
   472  0214                     	;# 
   473  0214                     	;# 
   474  0215                     	;# 
   475  0215                     	;# 
   476  0215                     	;# 
   477  0215                     	;# 
   478  0216                     	;# 
   479  0216                     	;# 
   480  0217                     	;# 
   481  0217                     	;# 
   482  028C                     	;# 
   483  028D                     	;# 
   484  028E                     	;# 
   485  028F                     	;# 
   486  0290                     	;# 
   487  0291                     	;# 
   488  0291                     	;# 
   489  0292                     	;# 
   490  0293                     	;# 
   491  0293                     	;# 
   492  0298                     	;# 
   493  0298                     	;# 
   494  0299                     	;# 
   495  029A                     	;# 
   496  029A                     	;# 
   497  029E                     	;# 
   498  030C                     	;# 
   499  030D                     	;# 
   500  030E                     	;# 
   501  030F                     	;# 
   502  0310                     	;# 
   503  038C                     	;# 
   504  038D                     	;# 
   505  038E                     	;# 
   506  038F                     	;# 
   507  0390                     	;# 
   508  0391                     	;# 
   509  0392                     	;# 
   510  0393                     	;# 
   511  0394                     	;# 
   512  0395                     	;# 
   513  0396                     	;# 
   514  0397                     	;# 
   515  0398                     	;# 
   516  0399                     	;# 
   517  039D                     	;# 
   518  039E                     	;# 
   519  039F                     	;# 
   520  0415                     	;# 
   521  0416                     	;# 
   522  0417                     	;# 
   523  041C                     	;# 
   524  041D                     	;# 
   525  041E                     	;# 
   526  0498                     	;# 
   527  0498                     	;# 
   528  0499                     	;# 
   529  049A                     	;# 
   530  049B                     	;# 
   531  049B                     	;# 
   532  049C                     	;# 
   533  049D                     	;# 
   534  049E                     	;# 
   535  049F                     	;# 
   536  0511                     	;# 
   537  0515                     	;# 
   538  0617                     	;# 
   539  0618                     	;# 
   540  0619                     	;# 
   541  0619                     	;# 
   542  061A                     	;# 
   543  061B                     	;# 
   544  061C                     	;# 
   545  061C                     	;# 
   546  0691                     	;# 
   547  0692                     	;# 
   548  0693                     	;# 
   549  0694                     	;# 
   550  0695                     	;# 
   551  0696                     	;# 
   552  0697                     	;# 
   553  0698                     	;# 
   554  0699                     	;# 
   555  069A                     	;# 
   556  069B                     	;# 
   557  069C                     	;# 
   558  069D                     	;# 
   559  069E                     	;# 
   560  069F                     	;# 
   561  0E0F                     	;# 
   562  0E10                     	;# 
   563  0E11                     	;# 
   564  0E12                     	;# 
   565  0E13                     	;# 
   566  0E14                     	;# 
   567  0E15                     	;# 
   568  0E17                     	;# 
   569  0E20                     	;# 
   570  0E21                     	;# 
   571  0E22                     	;# 
   572  0E24                     	;# 
   573  0E25                     	;# 
   574  0E28                     	;# 
   575  0E29                     	;# 
   576  0E2A                     	;# 
   577  0E2B                     	;# 
   578  0E90                     	;# 
   579  0E91                     	;# 
   580  0E92                     	;# 
   581  0E93                     	;# 
   582  0E94                     	;# 
   583  0E95                     	;# 
   584  0E96                     	;# 
   585  0E97                     	;# 
   586  0E98                     	;# 
   587  0E99                     	;# 
   588  0E9A                     	;# 
   589  0E9B                     	;# 
   590  0E9C                     	;# 
   591  0E9D                     	;# 
   592  0E9E                     	;# 
   593  0E9F                     	;# 
   594  0EA0                     	;# 
   595  0EA1                     	;# 
   596  0EA2                     	;# 
   597  0EA3                     	;# 
   598  0EA4                     	;# 
   599  0EA5                     	;# 
   600  0EA6                     	;# 
   601  0EA7                     	;# 
   602  0EA8                     	;# 
   603  0EA9                     	;# 
   604  0EAA                     	;# 
   605  0EAB                     	;# 
   606  0EAC                     	;# 
   607  0EAD                     	;# 
   608  0EAE                     	;# 
   609  0EAF                     	;# 
   610  0EB0                     	;# 
   611  0EB1                     	;# 
   612  0EB2                     	;# 
   613  0F0F                     	;# 
   614  0F10                     	;# 
   615  0F11                     	;# 
   616  0F12                     	;# 
   617  0F13                     	;# 
   618  0F14                     	;# 
   619  0F15                     	;# 
   620  0F16                     	;# 
   621  0F17                     	;# 
   622  0F18                     	;# 
   623  0F19                     	;# 
   624  0F1A                     	;# 
   625  0F1B                     	;# 
   626  0F1C                     	;# 
   627  0F1D                     	;# 
   628  0F1E                     	;# 
   629  0F1F                     	;# 
   630  0F20                     	;# 
   631  0F21                     	;# 
   632  0F22                     	;# 
   633  0F23                     	;# 
   634  0F24                     	;# 
   635  0F25                     	;# 
   636  0F26                     	;# 
   637  0F27                     	;# 
   638  0F28                     	;# 
   639  0F29                     	;# 
   640  0F2A                     	;# 
   641  0F2B                     	;# 
   642  0F2C                     	;# 
   643  0F2D                     	;# 
   644  0F2E                     	;# 
   645  0F2F                     	;# 
   646  0F30                     	;# 
   647  0F31                     	;# 
   648  0F32                     	;# 
   649  0F33                     	;# 
   650  0F34                     	;# 
   651  0F35                     	;# 
   652  0F36                     	;# 
   653  0F37                     	;# 
   654  0FE4                     	;# 
   655  0FE5                     	;# 
   656  0FE6                     	;# 
   657  0FE7                     	;# 
   658  0FE8                     	;# 
   659  0FE9                     	;# 
   660  0FEA                     	;# 
   661  0FEB                     	;# 
   662  0FED                     	;# 
   663  0FEE                     	;# 
   664  0FEF                     	;# 
   665  0000                     	;# 
   666  0001                     	;# 
   667  0002                     	;# 
   668  0003                     	;# 
   669  0004                     	;# 
   670  0005                     	;# 
   671  0006                     	;# 
   672  0007                     	;# 
   673  0008                     	;# 
   674  0009                     	;# 
   675  000A                     	;# 
   676  000B                     	;# 
   677  000C                     	;# 
   678  000D                     	;# 
   679  000E                     	;# 
   680  000F                     	;# 
   681  0010                     	;# 
   682  0011                     	;# 
   683  0012                     	;# 
   684  0013                     	;# 
   685  0015                     	;# 
   686  0016                     	;# 
   687  0016                     	;# 
   688  0017                     	;# 
   689  0018                     	;# 
   690  0019                     	;# 
   691  001A                     	;# 
   692  001B                     	;# 
   693  001C                     	;# 
   694  008C                     	;# 
   695  008D                     	;# 
   696  008E                     	;# 
   697  008F                     	;# 
   698  0090                     	;# 
   699  0091                     	;# 
   700  0092                     	;# 
   701  0093                     	;# 
   702  0095                     	;# 
   703  0096                     	;# 
   704  0097                     	;# 
   705  0098                     	;# 
   706  0099                     	;# 
   707  009A                     	;# 
   708  009B                     	;# 
   709  009B                     	;# 
   710  009C                     	;# 
   711  009D                     	;# 
   712  009E                     	;# 
   713  009F                     	;# 
   714  010C                     	;# 
   715  010D                     	;# 
   716  010E                     	;# 
   717  010F                     	;# 
   718  0110                     	;# 
   719  0111                     	;# 
   720  0112                     	;# 
   721  0113                     	;# 
   722  0114                     	;# 
   723  0115                     	;# 
   724  0116                     	;# 
   725  0117                     	;# 
   726  0118                     	;# 
   727  0119                     	;# 
   728  011A                     	;# 
   729  011B                     	;# 
   730  011B                     	;# 
   731  011C                     	;# 
   732  018C                     	;# 
   733  018D                     	;# 
   734  018E                     	;# 
   735  018F                     	;# 
   736  0190                     	;# 
   737  0191                     	;# 
   738  0191                     	;# 
   739  0192                     	;# 
   740  0193                     	;# 
   741  0193                     	;# 
   742  0194                     	;# 
   743  0195                     	;# 
   744  0196                     	;# 
   745  0197                     	;# 
   746  0199                     	;# 
   747  0199                     	;# 
   748  0199                     	;# 
   749  019A                     	;# 
   750  019A                     	;# 
   751  019A                     	;# 
   752  019B                     	;# 
   753  019B                     	;# 
   754  019B                     	;# 
   755  019B                     	;# 
   756  019B                     	;# 
   757  019C                     	;# 
   758  019C                     	;# 
   759  019C                     	;# 
   760  019D                     	;# 
   761  019D                     	;# 
   762  019D                     	;# 
   763  019E                     	;# 
   764  019E                     	;# 
   765  019E                     	;# 
   766  019F                     	;# 
   767  019F                     	;# 
   768  019F                     	;# 
   769  019F                     	;# 
   770  019F                     	;# 
   771  020C                     	;# 
   772  020D                     	;# 
   773  020E                     	;# 
   774  020F                     	;# 
   775  0210                     	;# 
   776  0211                     	;# 
   777  0211                     	;# 
   778  0212                     	;# 
   779  0212                     	;# 
   780  0213                     	;# 
   781  0213                     	;# 
   782  0214                     	;# 
   783  0214                     	;# 
   784  0215                     	;# 
   785  0215                     	;# 
   786  0215                     	;# 
   787  0215                     	;# 
   788  0216                     	;# 
   789  0216                     	;# 
   790  0217                     	;# 
   791  0217                     	;# 
   792  028C                     	;# 
   793  028D                     	;# 
   794  028E                     	;# 
   795  028F                     	;# 
   796  0290                     	;# 
   797  0291                     	;# 
   798  0291                     	;# 
   799  0292                     	;# 
   800  0293                     	;# 
   801  0293                     	;# 
   802  0298                     	;# 
   803  0298                     	;# 
   804  0299                     	;# 
   805  029A                     	;# 
   806  029A                     	;# 
   807  029E                     	;# 
   808  030C                     	;# 
   809  030D                     	;# 
   810  030E                     	;# 
   811  030F                     	;# 
   812  0310                     	;# 
   813  038C                     	;# 
   814  038D                     	;# 
   815  038E                     	;# 
   816  038F                     	;# 
   817  0390                     	;# 
   818  0391                     	;# 
   819  0392                     	;# 
   820  0393                     	;# 
   821  0394                     	;# 
   822  0395                     	;# 
   823  0396                     	;# 
   824  0397                     	;# 
   825  0398                     	;# 
   826  0399                     	;# 
   827  039D                     	;# 
   828  039E                     	;# 
   829  039F                     	;# 
   830  0415                     	;# 
   831  0416                     	;# 
   832  0417                     	;# 
   833  041C                     	;# 
   834  041D                     	;# 
   835  041E                     	;# 
   836  0498                     	;# 
   837  0498                     	;# 
   838  0499                     	;# 
   839  049A                     	;# 
   840  049B                     	;# 
   841  049B                     	;# 
   842  049C                     	;# 
   843  049D                     	;# 
   844  049E                     	;# 
   845  049F                     	;# 
   846  0511                     	;# 
   847  0515                     	;# 
   848  0617                     	;# 
   849  0618                     	;# 
   850  0619                     	;# 
   851  0619                     	;# 
   852  061A                     	;# 
   853  061B                     	;# 
   854  061C                     	;# 
   855  061C                     	;# 
   856  0691                     	;# 
   857  0692                     	;# 
   858  0693                     	;# 
   859  0694                     	;# 
   860  0695                     	;# 
   861  0696                     	;# 
   862  0697                     	;# 
   863  0698                     	;# 
   864  0699                     	;# 
   865  069A                     	;# 
   866  069B                     	;# 
   867  069C                     	;# 
   868  069D                     	;# 
   869  069E                     	;# 
   870  069F                     	;# 
   871  0E0F                     	;# 
   872  0E10                     	;# 
   873  0E11                     	;# 
   874  0E12                     	;# 
   875  0E13                     	;# 
   876  0E14                     	;# 
   877  0E15                     	;# 
   878  0E17                     	;# 
   879  0E20                     	;# 
   880  0E21                     	;# 
   881  0E22                     	;# 
   882  0E24                     	;# 
   883  0E25                     	;# 
   884  0E28                     	;# 
   885  0E29                     	;# 
   886  0E2A                     	;# 
   887  0E2B                     	;# 
   888  0E90                     	;# 
   889  0E91                     	;# 
   890  0E92                     	;# 
   891  0E93                     	;# 
   892  0E94                     	;# 
   893  0E95                     	;# 
   894  0E96                     	;# 
   895  0E97                     	;# 
   896  0E98                     	;# 
   897  0E99                     	;# 
   898  0E9A                     	;# 
   899  0E9B                     	;# 
   900  0E9C                     	;# 
   901  0E9D                     	;# 
   902  0E9E                     	;# 
   903  0E9F                     	;# 
   904  0EA0                     	;# 
   905  0EA1                     	;# 
   906  0EA2                     	;# 
   907  0EA3                     	;# 
   908  0EA4                     	;# 
   909  0EA5                     	;# 
   910  0EA6                     	;# 
   911  0EA7                     	;# 
   912  0EA8                     	;# 
   913  0EA9                     	;# 
   914  0EAA                     	;# 
   915  0EAB                     	;# 
   916  0EAC                     	;# 
   917  0EAD                     	;# 
   918  0EAE                     	;# 
   919  0EAF                     	;# 
   920  0EB0                     	;# 
   921  0EB1                     	;# 
   922  0EB2                     	;# 
   923  0F0F                     	;# 
   924  0F10                     	;# 
   925  0F11                     	;# 
   926  0F12                     	;# 
   927  0F13                     	;# 
   928  0F14                     	;# 
   929  0F15                     	;# 
   930  0F16                     	;# 
   931  0F17                     	;# 
   932  0F18                     	;# 
   933  0F19                     	;# 
   934  0F1A                     	;# 
   935  0F1B                     	;# 
   936  0F1C                     	;# 
   937  0F1D                     	;# 
   938  0F1E                     	;# 
   939  0F1F                     	;# 
   940  0F20                     	;# 
   941  0F21                     	;# 
   942  0F22                     	;# 
   943  0F23                     	;# 
   944  0F24                     	;# 
   945  0F25                     	;# 
   946  0F26                     	;# 
   947  0F27                     	;# 
   948  0F28                     	;# 
   949  0F29                     	;# 
   950  0F2A                     	;# 
   951  0F2B                     	;# 
   952  0F2C                     	;# 
   953  0F2D                     	;# 
   954  0F2E                     	;# 
   955  0F2F                     	;# 
   956  0F30                     	;# 
   957  0F31                     	;# 
   958  0F32                     	;# 
   959  0F33                     	;# 
   960  0F34                     	;# 
   961  0F35                     	;# 
   962  0F36                     	;# 
   963  0F37                     	;# 
   964  0FE4                     	;# 
   965  0FE5                     	;# 
   966  0FE6                     	;# 
   967  0FE7                     	;# 
   968  0FE8                     	;# 
   969  0FE9                     	;# 
   970  0FEA                     	;# 
   971  0FEB                     	;# 
   972  0FED                     	;# 
   973  0FEE                     	;# 
   974  0FEF                     	;# 
   975  0000                     	;# 
   976  0001                     	;# 
   977  0002                     	;# 
   978  0003                     	;# 
   979  0004                     	;# 
   980  0005                     	;# 
   981  0006                     	;# 
   982  0007                     	;# 
   983  0008                     	;# 
   984  0009                     	;# 
   985  000A                     	;# 
   986  000B                     	;# 
   987  000C                     	;# 
   988  000D                     	;# 
   989  000E                     	;# 
   990  000F                     	;# 
   991  0010                     	;# 
   992  0011                     	;# 
   993  0012                     	;# 
   994  0013                     	;# 
   995  0015                     	;# 
   996  0016                     	;# 
   997  0016                     	;# 
   998  0017                     	;# 
   999  0018                     	;# 
  1000  0019                     	;# 
  1001  001A                     	;# 
  1002  001B                     	;# 
  1003  001C                     	;# 
  1004  008C                     	;# 
  1005  008D                     	;# 
  1006  008E                     	;# 
  1007  008F                     	;# 
  1008  0090                     	;# 
  1009  0091                     	;# 
  1010  0092                     	;# 
  1011  0093                     	;# 
  1012  0095                     	;# 
  1013  0096                     	;# 
  1014  0097                     	;# 
  1015  0098                     	;# 
  1016  0099                     	;# 
  1017  009A                     	;# 
  1018  009B                     	;# 
  1019  009B                     	;# 
  1020  009C                     	;# 
  1021  009D                     	;# 
  1022  009E                     	;# 
  1023  009F                     	;# 
  1024  010C                     	;# 
  1025  010D                     	;# 
  1026  010E                     	;# 
  1027  010F                     	;# 
  1028  0110                     	;# 
  1029  0111                     	;# 
  1030  0112                     	;# 
  1031  0113                     	;# 
  1032  0114                     	;# 
  1033  0115                     	;# 
  1034  0116                     	;# 
  1035  0117                     	;# 
  1036  0118                     	;# 
  1037  0119                     	;# 
  1038  011A                     	;# 
  1039  011B                     	;# 
  1040  011B                     	;# 
  1041  011C                     	;# 
  1042  018C                     	;# 
  1043  018D                     	;# 
  1044  018E                     	;# 
  1045  018F                     	;# 
  1046  0190                     	;# 
  1047  0191                     	;# 
  1048  0191                     	;# 
  1049  0192                     	;# 
  1050  0193                     	;# 
  1051  0193                     	;# 
  1052  0194                     	;# 
  1053  0195                     	;# 
  1054  0196                     	;# 
  1055  0197                     	;# 
  1056  0199                     	;# 
  1057  0199                     	;# 
  1058  0199                     	;# 
  1059  019A                     	;# 
  1060  019A                     	;# 
  1061  019A                     	;# 
  1062  019B                     	;# 
  1063  019B                     	;# 
  1064  019B                     	;# 
  1065  019B                     	;# 
  1066  019B                     	;# 
  1067  019C                     	;# 
  1068  019C                     	;# 
  1069  019C                     	;# 
  1070  019D                     	;# 
  1071  019D                     	;# 
  1072  019D                     	;# 
  1073  019E                     	;# 
  1074  019E                     	;# 
  1075  019E                     	;# 
  1076  019F                     	;# 
  1077  019F                     	;# 
  1078  019F                     	;# 
  1079  019F                     	;# 
  1080  019F                     	;# 
  1081  020C                     	;# 
  1082  020D                     	;# 
  1083  020E                     	;# 
  1084  020F                     	;# 
  1085  0210                     	;# 
  1086  0211                     	;# 
  1087  0211                     	;# 
  1088  0212                     	;# 
  1089  0212                     	;# 
  1090  0213                     	;# 
  1091  0213                     	;# 
  1092  0214                     	;# 
  1093  0214                     	;# 
  1094  0215                     	;# 
  1095  0215                     	;# 
  1096  0215                     	;# 
  1097  0215                     	;# 
  1098  0216                     	;# 
  1099  0216                     	;# 
  1100  0217                     	;# 
  1101  0217                     	;# 
  1102  028C                     	;# 
  1103  028D                     	;# 
  1104  028E                     	;# 
  1105  028F                     	;# 
  1106  0290                     	;# 
  1107  0291                     	;# 
  1108  0291                     	;# 
  1109  0292                     	;# 
  1110  0293                     	;# 
  1111  0293                     	;# 
  1112  0298                     	;# 
  1113  0298                     	;# 
  1114  0299                     	;# 
  1115  029A                     	;# 
  1116  029A                     	;# 
  1117  029E                     	;# 
  1118  030C                     	;# 
  1119  030D                     	;# 
  1120  030E                     	;# 
  1121  030F                     	;# 
  1122  0310                     	;# 
  1123  038C                     	;# 
  1124  038D                     	;# 
  1125  038E                     	;# 
  1126  038F                     	;# 
  1127  0390                     	;# 
  1128  0391                     	;# 
  1129  0392                     	;# 
  1130  0393                     	;# 
  1131  0394                     	;# 
  1132  0395                     	;# 
  1133  0396                     	;# 
  1134  0397                     	;# 
  1135  0398                     	;# 
  1136  0399                     	;# 
  1137  039D                     	;# 
  1138  039E                     	;# 
  1139  039F                     	;# 
  1140  0415                     	;# 
  1141  0416                     	;# 
  1142  0417                     	;# 
  1143  041C                     	;# 
  1144  041D                     	;# 
  1145  041E                     	;# 
  1146  0498                     	;# 
  1147  0498                     	;# 
  1148  0499                     	;# 
  1149  049A                     	;# 
  1150  049B                     	;# 
  1151  049B                     	;# 
  1152  049C                     	;# 
  1153  049D                     	;# 
  1154  049E                     	;# 
  1155  049F                     	;# 
  1156  0511                     	;# 
  1157  0515                     	;# 
  1158  0617                     	;# 
  1159  0618                     	;# 
  1160  0619                     	;# 
  1161  0619                     	;# 
  1162  061A                     	;# 
  1163  061B                     	;# 
  1164  061C                     	;# 
  1165  061C                     	;# 
  1166  0691                     	;# 
  1167  0692                     	;# 
  1168  0693                     	;# 
  1169  0694                     	;# 
  1170  0695                     	;# 
  1171  0696                     	;# 
  1172  0697                     	;# 
  1173  0698                     	;# 
  1174  0699                     	;# 
  1175  069A                     	;# 
  1176  069B                     	;# 
  1177  069C                     	;# 
  1178  069D                     	;# 
  1179  069E                     	;# 
  1180  069F                     	;# 
  1181  0E0F                     	;# 
  1182  0E10                     	;# 
  1183  0E11                     	;# 
  1184  0E12                     	;# 
  1185  0E13                     	;# 
  1186  0E14                     	;# 
  1187  0E15                     	;# 
  1188  0E17                     	;# 
  1189  0E20                     	;# 
  1190  0E21                     	;# 
  1191  0E22                     	;# 
  1192  0E24                     	;# 
  1193  0E25                     	;# 
  1194  0E28                     	;# 
  1195  0E29                     	;# 
  1196  0E2A                     	;# 
  1197  0E2B                     	;# 
  1198  0E90                     	;# 
  1199  0E91                     	;# 
  1200  0E92                     	;# 
  1201  0E93                     	;# 
  1202  0E94                     	;# 
  1203  0E95                     	;# 
  1204  0E96                     	;# 
  1205  0E97                     	;# 
  1206  0E98                     	;# 
  1207  0E99                     	;# 
  1208  0E9A                     	;# 
  1209  0E9B                     	;# 
  1210  0E9C                     	;# 
  1211  0E9D                     	;# 
  1212  0E9E                     	;# 
  1213  0E9F                     	;# 
  1214  0EA0                     	;# 
  1215  0EA1                     	;# 
  1216  0EA2                     	;# 
  1217  0EA3                     	;# 
  1218  0EA4                     	;# 
  1219  0EA5                     	;# 
  1220  0EA6                     	;# 
  1221  0EA7                     	;# 
  1222  0EA8                     	;# 
  1223  0EA9                     	;# 
  1224  0EAA                     	;# 
  1225  0EAB                     	;# 
  1226  0EAC                     	;# 
  1227  0EAD                     	;# 
  1228  0EAE                     	;# 
  1229  0EAF                     	;# 
  1230  0EB0                     	;# 
  1231  0EB1                     	;# 
  1232  0EB2                     	;# 
  1233  0F0F                     	;# 
  1234  0F10                     	;# 
  1235  0F11                     	;# 
  1236  0F12                     	;# 
  1237  0F13                     	;# 
  1238  0F14                     	;# 
  1239  0F15                     	;# 
  1240  0F16                     	;# 
  1241  0F17                     	;# 
  1242  0F18                     	;# 
  1243  0F19                     	;# 
  1244  0F1A                     	;# 
  1245  0F1B                     	;# 
  1246  0F1C                     	;# 
  1247  0F1D                     	;# 
  1248  0F1E                     	;# 
  1249  0F1F                     	;# 
  1250  0F20                     	;# 
  1251  0F21                     	;# 
  1252  0F22                     	;# 
  1253  0F23                     	;# 
  1254  0F24                     	;# 
  1255  0F25                     	;# 
  1256  0F26                     	;# 
  1257  0F27                     	;# 
  1258  0F28                     	;# 
  1259  0F29                     	;# 
  1260  0F2A                     	;# 
  1261  0F2B                     	;# 
  1262  0F2C                     	;# 
  1263  0F2D                     	;# 
  1264  0F2E                     	;# 
  1265  0F2F                     	;# 
  1266  0F30                     	;# 
  1267  0F31                     	;# 
  1268  0F32                     	;# 
  1269  0F33                     	;# 
  1270  0F34                     	;# 
  1271  0F35                     	;# 
  1272  0F36                     	;# 
  1273  0F37                     	;# 
  1274  0FE4                     	;# 
  1275  0FE5                     	;# 
  1276  0FE6                     	;# 
  1277  0FE7                     	;# 
  1278  0FE8                     	;# 
  1279  0FE9                     	;# 
  1280  0FEA                     	;# 
  1281  0FEB                     	;# 
  1282  0FED                     	;# 
  1283  0FEE                     	;# 
  1284  0FEF                     	;# 
  1285                           
  1286                           	psect	stringtext
  1287  0800                     __pstringtext:	
  1288  0800                     _dpowers:	
  1289  0800  3401               	retlw	1
  1290  0801  3400               	retlw	0
  1291  0802  3400               	retlw	0
  1292  0803  3400               	retlw	0
  1293  0804  340A               	retlw	10
  1294  0805  3400               	retlw	0
  1295  0806  3400               	retlw	0
  1296  0807  3400               	retlw	0
  1297  0808  3464               	retlw	100
  1298  0809  3400               	retlw	0
  1299  080A  3400               	retlw	0
  1300  080B  3400               	retlw	0
  1301  080C  34E8               	retlw	232
  1302  080D  3403               	retlw	3
  1303  080E  3400               	retlw	0
  1304  080F  3400               	retlw	0
  1305  0810  3410               	retlw	16
  1306  0811  3427               	retlw	39
  1307  0812  3400               	retlw	0
  1308  0813  3400               	retlw	0
  1309  0814  34A0               	retlw	160
  1310  0815  3486               	retlw	134
  1311  0816  3401               	retlw	1
  1312  0817  3400               	retlw	0
  1313  0818  3440               	retlw	64
  1314  0819  3442               	retlw	66
  1315  081A  340F               	retlw	15
  1316  081B  3400               	retlw	0
  1317  081C  3480               	retlw	128
  1318  081D  3496               	retlw	150
  1319  081E  3498               	retlw	152
  1320  081F  3400               	retlw	0
  1321  0820  3400               	retlw	0
  1322  0821  34E1               	retlw	225
  1323  0822  34F5               	retlw	245
  1324  0823  3405               	retlw	5
  1325  0824  3400               	retlw	0
  1326  0825  34CA               	retlw	202
  1327  0826  349A               	retlw	154
  1328  0827  343B               	retlw	59
  1329  0828                     __end_of_dpowers:	
  1330  0828                     _OledFont:	
  1331  0828  3400               	retlw	0
  1332  0829  3400               	retlw	0
  1333  082A  3400               	retlw	0
  1334  082B  3400               	retlw	0
  1335  082C  3400               	retlw	0
  1336  082D  3400               	retlw	0
  1337  082E  3400               	retlw	0
  1338  082F  3400               	retlw	0
  1339  0830  3400               	retlw	0
  1340  0831  3400               	retlw	0
  1341  0832  345F               	retlw	95
  1342  0833  3400               	retlw	0
  1343  0834  3400               	retlw	0
  1344  0835  3400               	retlw	0
  1345  0836  3400               	retlw	0
  1346  0837  3400               	retlw	0
  1347  0838  3400               	retlw	0
  1348  0839  3400               	retlw	0
  1349  083A  3407               	retlw	7
  1350  083B  3400               	retlw	0
  1351  083C  3407               	retlw	7
  1352  083D  3400               	retlw	0
  1353  083E  3400               	retlw	0
  1354  083F  3400               	retlw	0
  1355  0840  3400               	retlw	0
  1356  0841  3414               	retlw	20
  1357  0842  347F               	retlw	127
  1358  0843  3414               	retlw	20
  1359  0844  347F               	retlw	127
  1360  0845  3414               	retlw	20
  1361  0846  3400               	retlw	0
  1362  0847  3400               	retlw	0
  1363  0848  3400               	retlw	0
  1364  0849  3424               	retlw	36
  1365  084A  342A               	retlw	42
  1366  084B  347F               	retlw	127
  1367  084C  342A               	retlw	42
  1368  084D  3412               	retlw	18
  1369  084E  3400               	retlw	0
  1370  084F  3400               	retlw	0
  1371  0850  3400               	retlw	0
  1372  0851  3423               	retlw	35
  1373  0852  3413               	retlw	19
  1374  0853  3408               	retlw	8
  1375  0854  3464               	retlw	100
  1376  0855  3462               	retlw	98
  1377  0856  3400               	retlw	0
  1378  0857  3400               	retlw	0
  1379  0858  3400               	retlw	0
  1380  0859  3436               	retlw	54
  1381  085A  3449               	retlw	73
  1382  085B  3455               	retlw	85
  1383  085C  3422               	retlw	34
  1384  085D  3450               	retlw	80
  1385  085E  3400               	retlw	0
  1386  085F  3400               	retlw	0
  1387  0860  3400               	retlw	0
  1388  0861  3400               	retlw	0
  1389  0862  3405               	retlw	5
  1390  0863  3403               	retlw	3
  1391  0864  3400               	retlw	0
  1392  0865  3400               	retlw	0
  1393  0866  3400               	retlw	0
  1394  0867  3400               	retlw	0
  1395  0868  3400               	retlw	0
  1396  0869  341C               	retlw	28
  1397  086A  3422               	retlw	34
  1398  086B  3441               	retlw	65
  1399  086C  3400               	retlw	0
  1400  086D  3400               	retlw	0
  1401  086E  3400               	retlw	0
  1402  086F  3400               	retlw	0
  1403  0870  3400               	retlw	0
  1404  0871  3441               	retlw	65
  1405  0872  3422               	retlw	34
  1406  0873  341C               	retlw	28
  1407  0874  3400               	retlw	0
  1408  0875  3400               	retlw	0
  1409  0876  3400               	retlw	0
  1410  0877  3400               	retlw	0
  1411  0878  3400               	retlw	0
  1412  0879  3408               	retlw	8
  1413  087A  342A               	retlw	42
  1414  087B  341C               	retlw	28
  1415  087C  342A               	retlw	42
  1416  087D  3408               	retlw	8
  1417  087E  3400               	retlw	0
  1418  087F  3400               	retlw	0
  1419  0880  3400               	retlw	0
  1420  0881  3408               	retlw	8
  1421  0882  3408               	retlw	8
  1422  0883  343E               	retlw	62
  1423  0884  3408               	retlw	8
  1424  0885  3408               	retlw	8
  1425  0886  3400               	retlw	0
  1426  0887  3400               	retlw	0
  1427  0888  3400               	retlw	0
  1428  0889  34A0               	retlw	160
  1429  088A  3460               	retlw	96
  1430  088B  3400               	retlw	0
  1431  088C  3400               	retlw	0
  1432  088D  3400               	retlw	0
  1433  088E  3400               	retlw	0
  1434  088F  3400               	retlw	0
  1435  0890  3400               	retlw	0
  1436  0891  3408               	retlw	8
  1437  0892  3408               	retlw	8
  1438  0893  3408               	retlw	8
  1439  0894  3408               	retlw	8
  1440  0895  3408               	retlw	8
  1441  0896  3400               	retlw	0
  1442  0897  3400               	retlw	0
  1443  0898  3400               	retlw	0
  1444  0899  3460               	retlw	96
  1445  089A  3460               	retlw	96
  1446  089B  3400               	retlw	0
  1447  089C  3400               	retlw	0
  1448  089D  3400               	retlw	0
  1449  089E  3400               	retlw	0
  1450  089F  3400               	retlw	0
  1451  08A0  3400               	retlw	0
  1452  08A1  3420               	retlw	32
  1453  08A2  3410               	retlw	16
  1454  08A3  3408               	retlw	8
  1455  08A4  3404               	retlw	4
  1456  08A5  3402               	retlw	2
  1457  08A6  3400               	retlw	0
  1458  08A7  3400               	retlw	0
  1459  08A8  3400               	retlw	0
  1460  08A9  343E               	retlw	62
  1461  08AA  3451               	retlw	81
  1462  08AB  3449               	retlw	73
  1463  08AC  3445               	retlw	69
  1464  08AD  343E               	retlw	62
  1465  08AE  3400               	retlw	0
  1466  08AF  3400               	retlw	0
  1467  08B0  3400               	retlw	0
  1468  08B1  3400               	retlw	0
  1469  08B2  3442               	retlw	66
  1470  08B3  347F               	retlw	127
  1471  08B4  3440               	retlw	64
  1472  08B5  3400               	retlw	0
  1473  08B6  3400               	retlw	0
  1474  08B7  3400               	retlw	0
  1475  08B8  3400               	retlw	0
  1476  08B9  3462               	retlw	98
  1477  08BA  3451               	retlw	81
  1478  08BB  3449               	retlw	73
  1479  08BC  3449               	retlw	73
  1480  08BD  3446               	retlw	70
  1481  08BE  3400               	retlw	0
  1482  08BF  3400               	retlw	0
  1483  08C0  3400               	retlw	0
  1484  08C1  3422               	retlw	34
  1485  08C2  3441               	retlw	65
  1486  08C3  3449               	retlw	73
  1487  08C4  3449               	retlw	73
  1488  08C5  3436               	retlw	54
  1489  08C6  3400               	retlw	0
  1490  08C7  3400               	retlw	0
  1491  08C8  3400               	retlw	0
  1492  08C9  3418               	retlw	24
  1493  08CA  3414               	retlw	20
  1494  08CB  3412               	retlw	18
  1495  08CC  347F               	retlw	127
  1496  08CD  3410               	retlw	16
  1497  08CE  3400               	retlw	0
  1498  08CF  3400               	retlw	0
  1499  08D0  3400               	retlw	0
  1500  08D1  3427               	retlw	39
  1501  08D2  3445               	retlw	69
  1502  08D3  3445               	retlw	69
  1503  08D4  3445               	retlw	69
  1504  08D5  3439               	retlw	57
  1505  08D6  3400               	retlw	0
  1506  08D7  3400               	retlw	0
  1507  08D8  3400               	retlw	0
  1508  08D9  343C               	retlw	60
  1509  08DA  344A               	retlw	74
  1510  08DB  3449               	retlw	73
  1511  08DC  3449               	retlw	73
  1512  08DD  3430               	retlw	48
  1513  08DE  3400               	retlw	0
  1514  08DF  3400               	retlw	0
  1515  08E0  3400               	retlw	0
  1516  08E1  3401               	retlw	1
  1517  08E2  3471               	retlw	113
  1518  08E3  3409               	retlw	9
  1519  08E4  3405               	retlw	5
  1520  08E5  3403               	retlw	3
  1521  08E6  3400               	retlw	0
  1522  08E7  3400               	retlw	0
  1523  08E8  3400               	retlw	0
  1524  08E9  3436               	retlw	54
  1525  08EA  3449               	retlw	73
  1526  08EB  3449               	retlw	73
  1527  08EC  3449               	retlw	73
  1528  08ED  3436               	retlw	54
  1529  08EE  3400               	retlw	0
  1530  08EF  3400               	retlw	0
  1531  08F0  3400               	retlw	0
  1532  08F1  3406               	retlw	6
  1533  08F2  3449               	retlw	73
  1534  08F3  3449               	retlw	73
  1535  08F4  3429               	retlw	41
  1536  08F5  341E               	retlw	30
  1537  08F6  3400               	retlw	0
  1538  08F7  3400               	retlw	0
  1539  08F8  3400               	retlw	0
  1540  08F9  3400               	retlw	0
  1541  08FA  3436               	retlw	54
  1542  08FB  3436               	retlw	54
  1543  08FC  3400               	retlw	0
  1544  08FD  3400               	retlw	0
  1545  08FE  3400               	retlw	0
  1546  08FF  3400               	retlw	0
  1547  0900  3400               	retlw	0
  1548  0901  3400               	retlw	0
  1549  0902  34AC               	retlw	172
  1550  0903  346C               	retlw	108
  1551  0904  3400               	retlw	0
  1552  0905  3400               	retlw	0
  1553  0906  3400               	retlw	0
  1554  0907  3400               	retlw	0
  1555  0908  3400               	retlw	0
  1556  0909  3408               	retlw	8
  1557  090A  3414               	retlw	20
  1558  090B  3422               	retlw	34
  1559  090C  3441               	retlw	65
  1560  090D  3400               	retlw	0
  1561  090E  3400               	retlw	0
  1562  090F  3400               	retlw	0
  1563  0910  3400               	retlw	0
  1564  0911  3414               	retlw	20
  1565  0912  3414               	retlw	20
  1566  0913  3414               	retlw	20
  1567  0914  3414               	retlw	20
  1568  0915  3414               	retlw	20
  1569  0916  3400               	retlw	0
  1570  0917  3400               	retlw	0
  1571  0918  3400               	retlw	0
  1572  0919  3441               	retlw	65
  1573  091A  3422               	retlw	34
  1574  091B  3414               	retlw	20
  1575  091C  3408               	retlw	8
  1576  091D  3400               	retlw	0
  1577  091E  3400               	retlw	0
  1578  091F  3400               	retlw	0
  1579  0920  3400               	retlw	0
  1580  0921  3402               	retlw	2
  1581  0922  3401               	retlw	1
  1582  0923  3451               	retlw	81
  1583  0924  3409               	retlw	9
  1584  0925  3406               	retlw	6
  1585  0926  3400               	retlw	0
  1586  0927  3400               	retlw	0
  1587  0928  3400               	retlw	0
  1588  0929  3432               	retlw	50
  1589  092A  3449               	retlw	73
  1590  092B  3479               	retlw	121
  1591  092C  3441               	retlw	65
  1592  092D  343E               	retlw	62
  1593  092E  3400               	retlw	0
  1594  092F  3400               	retlw	0
  1595  0930  3400               	retlw	0
  1596  0931  347E               	retlw	126
  1597  0932  3409               	retlw	9
  1598  0933  3409               	retlw	9
  1599  0934  3409               	retlw	9
  1600  0935  347E               	retlw	126
  1601  0936  3400               	retlw	0
  1602  0937  3400               	retlw	0
  1603  0938  3400               	retlw	0
  1604  0939  347F               	retlw	127
  1605  093A  3449               	retlw	73
  1606  093B  3449               	retlw	73
  1607  093C  3449               	retlw	73
  1608  093D  3436               	retlw	54
  1609  093E  3400               	retlw	0
  1610  093F  3400               	retlw	0
  1611  0940  3400               	retlw	0
  1612  0941  343E               	retlw	62
  1613  0942  3441               	retlw	65
  1614  0943  3441               	retlw	65
  1615  0944  3441               	retlw	65
  1616  0945  3422               	retlw	34
  1617  0946  3400               	retlw	0
  1618  0947  3400               	retlw	0
  1619  0948  3400               	retlw	0
  1620  0949  347F               	retlw	127
  1621  094A  3441               	retlw	65
  1622  094B  3441               	retlw	65
  1623  094C  3422               	retlw	34
  1624  094D  341C               	retlw	28
  1625  094E  3400               	retlw	0
  1626  094F  3400               	retlw	0
  1627  0950  3400               	retlw	0
  1628  0951  347F               	retlw	127
  1629  0952  3449               	retlw	73
  1630  0953  3449               	retlw	73
  1631  0954  3449               	retlw	73
  1632  0955  3441               	retlw	65
  1633  0956  3400               	retlw	0
  1634  0957  3400               	retlw	0
  1635  0958  3400               	retlw	0
  1636  0959  347F               	retlw	127
  1637  095A  3409               	retlw	9
  1638  095B  3409               	retlw	9
  1639  095C  3409               	retlw	9
  1640  095D  3401               	retlw	1
  1641  095E  3400               	retlw	0
  1642  095F  3400               	retlw	0
  1643  0960  3400               	retlw	0
  1644  0961  343E               	retlw	62
  1645  0962  3441               	retlw	65
  1646  0963  3441               	retlw	65
  1647  0964  3451               	retlw	81
  1648  0965  3472               	retlw	114
  1649  0966  3400               	retlw	0
  1650  0967  3400               	retlw	0
  1651  0968  3400               	retlw	0
  1652  0969  347F               	retlw	127
  1653  096A  3408               	retlw	8
  1654  096B  3408               	retlw	8
  1655  096C  3408               	retlw	8
  1656  096D  347F               	retlw	127
  1657  096E  3400               	retlw	0
  1658  096F  3400               	retlw	0
  1659  0970  3400               	retlw	0
  1660  0971  3441               	retlw	65
  1661  0972  347F               	retlw	127
  1662  0973  3441               	retlw	65
  1663  0974  3400               	retlw	0
  1664  0975  3400               	retlw	0
  1665  0976  3400               	retlw	0
  1666  0977  3400               	retlw	0
  1667  0978  3400               	retlw	0
  1668  0979  3420               	retlw	32
  1669  097A  3440               	retlw	64
  1670  097B  3441               	retlw	65
  1671  097C  343F               	retlw	63
  1672  097D  3401               	retlw	1
  1673  097E  3400               	retlw	0
  1674  097F  3400               	retlw	0
  1675  0980  3400               	retlw	0
  1676  0981  347F               	retlw	127
  1677  0982  3408               	retlw	8
  1678  0983  3414               	retlw	20
  1679  0984  3422               	retlw	34
  1680  0985  3441               	retlw	65
  1681  0986  3400               	retlw	0
  1682  0987  3400               	retlw	0
  1683  0988  3400               	retlw	0
  1684  0989  347F               	retlw	127
  1685  098A  3440               	retlw	64
  1686  098B  3440               	retlw	64
  1687  098C  3440               	retlw	64
  1688  098D  3440               	retlw	64
  1689  098E  3400               	retlw	0
  1690  098F  3400               	retlw	0
  1691  0990  3400               	retlw	0
  1692  0991  347F               	retlw	127
  1693  0992  3402               	retlw	2
  1694  0993  340C               	retlw	12
  1695  0994  3402               	retlw	2
  1696  0995  347F               	retlw	127
  1697  0996  3400               	retlw	0
  1698  0997  3400               	retlw	0
  1699  0998  3400               	retlw	0
  1700  0999  347F               	retlw	127
  1701  099A  3404               	retlw	4
  1702  099B  3408               	retlw	8
  1703  099C  3410               	retlw	16
  1704  099D  347F               	retlw	127
  1705  099E  3400               	retlw	0
  1706  099F  3400               	retlw	0
  1707  09A0  3400               	retlw	0
  1708  09A1  343E               	retlw	62
  1709  09A2  3441               	retlw	65
  1710  09A3  3441               	retlw	65
  1711  09A4  3441               	retlw	65
  1712  09A5  343E               	retlw	62
  1713  09A6  3400               	retlw	0
  1714  09A7  3400               	retlw	0
  1715  09A8  3400               	retlw	0
  1716  09A9  347F               	retlw	127
  1717  09AA  3409               	retlw	9
  1718  09AB  3409               	retlw	9
  1719  09AC  3409               	retlw	9
  1720  09AD  3406               	retlw	6
  1721  09AE  3400               	retlw	0
  1722  09AF  3400               	retlw	0
  1723  09B0  3400               	retlw	0
  1724  09B1  343E               	retlw	62
  1725  09B2  3441               	retlw	65
  1726  09B3  3451               	retlw	81
  1727  09B4  3421               	retlw	33
  1728  09B5  345E               	retlw	94
  1729  09B6  3400               	retlw	0
  1730  09B7  3400               	retlw	0
  1731  09B8  3400               	retlw	0
  1732  09B9  347F               	retlw	127
  1733  09BA  3409               	retlw	9
  1734  09BB  3419               	retlw	25
  1735  09BC  3429               	retlw	41
  1736  09BD  3446               	retlw	70
  1737  09BE  3400               	retlw	0
  1738  09BF  3400               	retlw	0
  1739  09C0  3400               	retlw	0
  1740  09C1  3426               	retlw	38
  1741  09C2  3449               	retlw	73
  1742  09C3  3449               	retlw	73
  1743  09C4  3449               	retlw	73
  1744  09C5  3432               	retlw	50
  1745  09C6  3400               	retlw	0
  1746  09C7  3400               	retlw	0
  1747  09C8  3400               	retlw	0
  1748  09C9  3401               	retlw	1
  1749  09CA  3401               	retlw	1
  1750  09CB  347F               	retlw	127
  1751  09CC  3401               	retlw	1
  1752  09CD  3401               	retlw	1
  1753  09CE  3400               	retlw	0
  1754  09CF  3400               	retlw	0
  1755  09D0  3400               	retlw	0
  1756  09D1  343F               	retlw	63
  1757  09D2  3440               	retlw	64
  1758  09D3  3440               	retlw	64
  1759  09D4  3440               	retlw	64
  1760  09D5  343F               	retlw	63
  1761  09D6  3400               	retlw	0
  1762  09D7  3400               	retlw	0
  1763  09D8  3400               	retlw	0
  1764  09D9  341F               	retlw	31
  1765  09DA  3420               	retlw	32
  1766  09DB  3440               	retlw	64
  1767  09DC  3420               	retlw	32
  1768  09DD  341F               	retlw	31
  1769  09DE  3400               	retlw	0
  1770  09DF  3400               	retlw	0
  1771  09E0  3400               	retlw	0
  1772  09E1  343F               	retlw	63
  1773  09E2  3440               	retlw	64
  1774  09E3  3438               	retlw	56
  1775  09E4  3440               	retlw	64
  1776  09E5  343F               	retlw	63
  1777  09E6  3400               	retlw	0
  1778  09E7  3400               	retlw	0
  1779  09E8  3400               	retlw	0
  1780  09E9  3463               	retlw	99
  1781  09EA  3414               	retlw	20
  1782  09EB  3408               	retlw	8
  1783  09EC  3414               	retlw	20
  1784  09ED  3463               	retlw	99
  1785  09EE  3400               	retlw	0
  1786  09EF  3400               	retlw	0
  1787  09F0  3400               	retlw	0
  1788  09F1  3403               	retlw	3
  1789  09F2  3404               	retlw	4
  1790  09F3  3478               	retlw	120
  1791  09F4  3404               	retlw	4
  1792  09F5  3403               	retlw	3
  1793  09F6  3400               	retlw	0
  1794  09F7  3400               	retlw	0
  1795  09F8  3400               	retlw	0
  1796  09F9  3461               	retlw	97
  1797  09FA  3451               	retlw	81
  1798  09FB  3449               	retlw	73
  1799  09FC  3445               	retlw	69
  1800  09FD  3443               	retlw	67
  1801  09FE  3400               	retlw	0
  1802  09FF  3400               	retlw	0
  1803  0A00  3400               	retlw	0
  1804  0A01  347F               	retlw	127
  1805  0A02  3441               	retlw	65
  1806  0A03  3441               	retlw	65
  1807  0A04  3400               	retlw	0
  1808  0A05  3400               	retlw	0
  1809  0A06  3400               	retlw	0
  1810  0A07  3400               	retlw	0
  1811  0A08  3400               	retlw	0
  1812  0A09  3402               	retlw	2
  1813  0A0A  3404               	retlw	4
  1814  0A0B  3408               	retlw	8
  1815  0A0C  3410               	retlw	16
  1816  0A0D  3420               	retlw	32
  1817  0A0E  3400               	retlw	0
  1818  0A0F  3400               	retlw	0
  1819  0A10  3400               	retlw	0
  1820  0A11  3441               	retlw	65
  1821  0A12  3441               	retlw	65
  1822  0A13  347F               	retlw	127
  1823  0A14  3400               	retlw	0
  1824  0A15  3400               	retlw	0
  1825  0A16  3400               	retlw	0
  1826  0A17  3400               	retlw	0
  1827  0A18  3400               	retlw	0
  1828  0A19  3404               	retlw	4
  1829  0A1A  3402               	retlw	2
  1830  0A1B  3401               	retlw	1
  1831  0A1C  3402               	retlw	2
  1832  0A1D  3404               	retlw	4
  1833  0A1E  3400               	retlw	0
  1834  0A1F  3400               	retlw	0
  1835  0A20  3400               	retlw	0
  1836  0A21  3480               	retlw	128
  1837  0A22  3480               	retlw	128
  1838  0A23  3480               	retlw	128
  1839  0A24  3480               	retlw	128
  1840  0A25  3480               	retlw	128
  1841  0A26  3400               	retlw	0
  1842  0A27  3400               	retlw	0
  1843  0A28  3400               	retlw	0
  1844  0A29  3401               	retlw	1
  1845  0A2A  3402               	retlw	2
  1846  0A2B  3404               	retlw	4
  1847  0A2C  3400               	retlw	0
  1848  0A2D  3400               	retlw	0
  1849  0A2E  3400               	retlw	0
  1850  0A2F  3400               	retlw	0
  1851  0A30  3400               	retlw	0
  1852  0A31  3420               	retlw	32
  1853  0A32  3454               	retlw	84
  1854  0A33  3454               	retlw	84
  1855  0A34  3454               	retlw	84
  1856  0A35  3478               	retlw	120
  1857  0A36  3400               	retlw	0
  1858  0A37  3400               	retlw	0
  1859  0A38  3400               	retlw	0
  1860  0A39  347F               	retlw	127
  1861  0A3A  3448               	retlw	72
  1862  0A3B  3444               	retlw	68
  1863  0A3C  3444               	retlw	68
  1864  0A3D  3438               	retlw	56
  1865  0A3E  3400               	retlw	0
  1866  0A3F  3400               	retlw	0
  1867  0A40  3400               	retlw	0
  1868  0A41  3438               	retlw	56
  1869  0A42  3444               	retlw	68
  1870  0A43  3444               	retlw	68
  1871  0A44  3428               	retlw	40
  1872  0A45  3400               	retlw	0
  1873  0A46  3400               	retlw	0
  1874  0A47  3400               	retlw	0
  1875  0A48  3400               	retlw	0
  1876  0A49  3438               	retlw	56
  1877  0A4A  3444               	retlw	68
  1878  0A4B  3444               	retlw	68
  1879  0A4C  3448               	retlw	72
  1880  0A4D  347F               	retlw	127
  1881  0A4E  3400               	retlw	0
  1882  0A4F  3400               	retlw	0
  1883  0A50  3400               	retlw	0
  1884  0A51  3438               	retlw	56
  1885  0A52  3454               	retlw	84
  1886  0A53  3454               	retlw	84
  1887  0A54  3454               	retlw	84
  1888  0A55  3418               	retlw	24
  1889  0A56  3400               	retlw	0
  1890  0A57  3400               	retlw	0
  1891  0A58  3400               	retlw	0
  1892  0A59  3408               	retlw	8
  1893  0A5A  347E               	retlw	126
  1894  0A5B  3409               	retlw	9
  1895  0A5C  3402               	retlw	2
  1896  0A5D  3400               	retlw	0
  1897  0A5E  3400               	retlw	0
  1898  0A5F  3400               	retlw	0
  1899  0A60  3400               	retlw	0
  1900  0A61  3418               	retlw	24
  1901  0A62  34A4               	retlw	164
  1902  0A63  34A4               	retlw	164
  1903  0A64  34A4               	retlw	164
  1904  0A65  347C               	retlw	124
  1905  0A66  3400               	retlw	0
  1906  0A67  3400               	retlw	0
  1907  0A68  3400               	retlw	0
  1908  0A69  347F               	retlw	127
  1909  0A6A  3408               	retlw	8
  1910  0A6B  3404               	retlw	4
  1911  0A6C  3404               	retlw	4
  1912  0A6D  3478               	retlw	120
  1913  0A6E  3400               	retlw	0
  1914  0A6F  3400               	retlw	0
  1915  0A70  3400               	retlw	0
  1916  0A71  3400               	retlw	0
  1917  0A72  347D               	retlw	125
  1918  0A73  3400               	retlw	0
  1919  0A74  3400               	retlw	0
  1920  0A75  3400               	retlw	0
  1921  0A76  3400               	retlw	0
  1922  0A77  3400               	retlw	0
  1923  0A78  3400               	retlw	0
  1924  0A79  3480               	retlw	128
  1925  0A7A  3484               	retlw	132
  1926  0A7B  347D               	retlw	125
  1927  0A7C  3400               	retlw	0
  1928  0A7D  3400               	retlw	0
  1929  0A7E  3400               	retlw	0
  1930  0A7F  3400               	retlw	0
  1931  0A80  3400               	retlw	0
  1932  0A81  347F               	retlw	127
  1933  0A82  3410               	retlw	16
  1934  0A83  3428               	retlw	40
  1935  0A84  3444               	retlw	68
  1936  0A85  3400               	retlw	0
  1937  0A86  3400               	retlw	0
  1938  0A87  3400               	retlw	0
  1939  0A88  3400               	retlw	0
  1940  0A89  3441               	retlw	65
  1941  0A8A  347F               	retlw	127
  1942  0A8B  3440               	retlw	64
  1943  0A8C  3400               	retlw	0
  1944  0A8D  3400               	retlw	0
  1945  0A8E  3400               	retlw	0
  1946  0A8F  3400               	retlw	0
  1947  0A90  3400               	retlw	0
  1948  0A91  347C               	retlw	124
  1949  0A92  3404               	retlw	4
  1950  0A93  3418               	retlw	24
  1951  0A94  3404               	retlw	4
  1952  0A95  3478               	retlw	120
  1953  0A96  3400               	retlw	0
  1954  0A97  3400               	retlw	0
  1955  0A98  3400               	retlw	0
  1956  0A99  347C               	retlw	124
  1957  0A9A  3408               	retlw	8
  1958  0A9B  3404               	retlw	4
  1959  0A9C  347C               	retlw	124
  1960  0A9D  3400               	retlw	0
  1961  0A9E  3400               	retlw	0
  1962  0A9F  3400               	retlw	0
  1963  0AA0  3400               	retlw	0
  1964  0AA1  3438               	retlw	56
  1965  0AA2  3444               	retlw	68
  1966  0AA3  3444               	retlw	68
  1967  0AA4  3438               	retlw	56
  1968  0AA5  3400               	retlw	0
  1969  0AA6  3400               	retlw	0
  1970  0AA7  3400               	retlw	0
  1971  0AA8  3400               	retlw	0
  1972  0AA9  34FC               	retlw	252
  1973  0AAA  3424               	retlw	36
  1974  0AAB  3424               	retlw	36
  1975  0AAC  3418               	retlw	24
  1976  0AAD  3400               	retlw	0
  1977  0AAE  3400               	retlw	0
  1978  0AAF  3400               	retlw	0
  1979  0AB0  3400               	retlw	0
  1980  0AB1  3418               	retlw	24
  1981  0AB2  3424               	retlw	36
  1982  0AB3  3424               	retlw	36
  1983  0AB4  34FC               	retlw	252
  1984  0AB5  3400               	retlw	0
  1985  0AB6  3400               	retlw	0
  1986  0AB7  3400               	retlw	0
  1987  0AB8  3400               	retlw	0
  1988  0AB9  3400               	retlw	0
  1989  0ABA  347C               	retlw	124
  1990  0ABB  3408               	retlw	8
  1991  0ABC  3404               	retlw	4
  1992  0ABD  3400               	retlw	0
  1993  0ABE  3400               	retlw	0
  1994  0ABF  3400               	retlw	0
  1995  0AC0  3400               	retlw	0
  1996  0AC1  3448               	retlw	72
  1997  0AC2  3454               	retlw	84
  1998  0AC3  3454               	retlw	84
  1999  0AC4  3424               	retlw	36
  2000  0AC5  3400               	retlw	0
  2001  0AC6  3400               	retlw	0
  2002  0AC7  3400               	retlw	0
  2003  0AC8  3400               	retlw	0
  2004  0AC9  3404               	retlw	4
  2005  0ACA  347F               	retlw	127
  2006  0ACB  3444               	retlw	68
  2007  0ACC  3400               	retlw	0
  2008  0ACD  3400               	retlw	0
  2009  0ACE  3400               	retlw	0
  2010  0ACF  3400               	retlw	0
  2011  0AD0  3400               	retlw	0
  2012  0AD1  343C               	retlw	60
  2013  0AD2  3440               	retlw	64
  2014  0AD3  3440               	retlw	64
  2015  0AD4  347C               	retlw	124
  2016  0AD5  3400               	retlw	0
  2017  0AD6  3400               	retlw	0
  2018  0AD7  3400               	retlw	0
  2019  0AD8  3400               	retlw	0
  2020  0AD9  341C               	retlw	28
  2021  0ADA  3420               	retlw	32
  2022  0ADB  3440               	retlw	64
  2023  0ADC  3420               	retlw	32
  2024  0ADD  341C               	retlw	28
  2025  0ADE  3400               	retlw	0
  2026  0ADF  3400               	retlw	0
  2027  0AE0  3400               	retlw	0
  2028  0AE1  343C               	retlw	60
  2029  0AE2  3440               	retlw	64
  2030  0AE3  3430               	retlw	48
  2031  0AE4  3440               	retlw	64
  2032  0AE5  343C               	retlw	60
  2033  0AE6  3400               	retlw	0
  2034  0AE7  3400               	retlw	0
  2035  0AE8  3400               	retlw	0
  2036  0AE9  3444               	retlw	68
  2037  0AEA  3428               	retlw	40
  2038  0AEB  3410               	retlw	16
  2039  0AEC  3428               	retlw	40
  2040  0AED  3444               	retlw	68
  2041  0AEE  3400               	retlw	0
  2042  0AEF  3400               	retlw	0
  2043  0AF0  3400               	retlw	0
  2044  0AF1  341C               	retlw	28
  2045  0AF2  34A0               	retlw	160
  2046  0AF3  34A0               	retlw	160
  2047  0AF4  347C               	retlw	124
  2048  0AF5  3400               	retlw	0
  2049  0AF6  3400               	retlw	0
  2050  0AF7  3400               	retlw	0
  2051  0AF8  3400               	retlw	0
  2052  0AF9  3444               	retlw	68
  2053  0AFA  3464               	retlw	100
  2054  0AFB  3454               	retlw	84
  2055  0AFC  344C               	retlw	76
  2056  0AFD  3444               	retlw	68
  2057  0AFE  3400               	retlw	0
  2058  0AFF  3400               	retlw	0
  2059  0B00  3400               	retlw	0
  2060  0B01  3408               	retlw	8
  2061  0B02  3436               	retlw	54
  2062  0B03  3441               	retlw	65
  2063  0B04  3400               	retlw	0
  2064  0B05  3400               	retlw	0
  2065  0B06  3400               	retlw	0
  2066  0B07  3400               	retlw	0
  2067  0B08  3400               	retlw	0
  2068  0B09  3400               	retlw	0
  2069  0B0A  347F               	retlw	127
  2070  0B0B  3400               	retlw	0
  2071  0B0C  3400               	retlw	0
  2072  0B0D  3400               	retlw	0
  2073  0B0E  3400               	retlw	0
  2074  0B0F  3400               	retlw	0
  2075  0B10  3400               	retlw	0
  2076  0B11  3441               	retlw	65
  2077  0B12  3436               	retlw	54
  2078  0B13  3408               	retlw	8
  2079  0B14  3400               	retlw	0
  2080  0B15  3400               	retlw	0
  2081  0B16  3400               	retlw	0
  2082  0B17  3400               	retlw	0
  2083  0B18  3400               	retlw	0
  2084  0B19  3402               	retlw	2
  2085  0B1A  3401               	retlw	1
  2086  0B1B  3401               	retlw	1
  2087  0B1C  3402               	retlw	2
  2088  0B1D  3401               	retlw	1
  2089  0B1E  3400               	retlw	0
  2090  0B1F  3400               	retlw	0
  2091  0B20  3400               	retlw	0
  2092  0B21  3402               	retlw	2
  2093  0B22  3405               	retlw	5
  2094  0B23  3405               	retlw	5
  2095  0B24  3402               	retlw	2
  2096  0B25  3400               	retlw	0
  2097  0B26  3400               	retlw	0
  2098  0B27  3400               	retlw	0
  2099  0B28                     __end_of_OledFont:	
  2100  0011                     _PIR1bits	set	17
  2101  008E                     _TRISCbits	set	142
  2102  04CB                     _IRCF0	set	1227
  2103  04CC                     _IRCF1	set	1228
  2104  04CD                     _IRCF2	set	1229
  2105  04CE                     _IRCF3	set	1230
  2106  04C8                     _SCS0	set	1224
  2107  04C9                     _SCS1	set	1225
  2108  04CF                     _SPLLEN	set	1231
  2109  018E                     _ANSELCbits	set	398
  2110  0212                     _SSPADD	set	530
  2111  0211                     _SSPBUF	set	529
  2112  0216                     _SSPCON2bits	set	534
  2113  0215                     _SSPCONbits	set	533
  2114  0E0F                     _PPSLOCK	set	3599
  2115  0E0F                     _PPSLOCKbits	set	3599
  2116  0E20                     _SSPCLKPPSbits	set	3616
  2117  0E21                     _SSPDATPPSbits	set	3617
  2118  0EA4                     _RC4PPSbits	set	3748
  2119  0EA5                     _RC5PPSbits	set	3749
  2120  0B28                     STR_5:	
  2121  0B28  3449               	retlw	73	;'I'
  2122  0B29  346E               	retlw	110	;'n'
  2123  0B2A  3474               	retlw	116	;'t'
  2124  0B2B  3465               	retlw	101	;'e'
  2125  0B2C  3467               	retlw	103	;'g'
  2126  0B2D  3465               	retlw	101	;'e'
  2127  0B2E  3472               	retlw	114	;'r'
  2128  0B2F  3420               	retlw	32	;' '
  2129  0B30  3443               	retlw	67	;'C'
  2130  0B31  346F               	retlw	111	;'o'
  2131  0B32  3475               	retlw	117	;'u'
  2132  0B33  346E               	retlw	110	;'n'
  2133  0B34  3474               	retlw	116	;'t'
  2134  0B35  343A               	retlw	58	;':'
  2135  0B36  3400               	retlw	0
  2136  0B37                     STR_1:	
  2137  0B37  344F               	retlw	79	;'O'
  2138  0B38  344C               	retlw	76	;'L'
  2139  0B39  3445               	retlw	69	;'E'
  2140  0B3A  3444               	retlw	68	;'D'
  2141  0B3B  3420               	retlw	32	;' '
  2142  0B3C  3453               	retlw	83	;'S'
  2143  0B3D  3453               	retlw	83	;'S'
  2144  0B3E  3444               	retlw	68	;'D'
  2145  0B3F  3431               	retlw	49	;'1'
  2146  0B40  3433               	retlw	51	;'3'
  2147  0B41  3430               	retlw	48	;'0'
  2148  0B42  3436               	retlw	54	;'6'
  2149  0B43  3400               	retlw	0
  2150  0B44                     STR_6:	
  2151  0B44  3446               	retlw	70	;'F'
  2152  0B45  346C               	retlw	108	;'l'
  2153  0B46  346F               	retlw	111	;'o'
  2154  0B47  3461               	retlw	97	;'a'
  2155  0B48  3474               	retlw	116	;'t'
  2156  0B49  3420               	retlw	32	;' '
  2157  0B4A  3443               	retlw	67	;'C'
  2158  0B4B  346F               	retlw	111	;'o'
  2159  0B4C  3475               	retlw	117	;'u'
  2160  0B4D  346E               	retlw	110	;'n'
  2161  0B4E  3474               	retlw	116	;'t'
  2162  0B4F  343A               	retlw	58	;':'
  2163  0B50  3400               	retlw	0
  2164  0B51                     STR_4:	
  2165  0B51  3462               	retlw	98	;'b'
  2166  0B52  3479               	retlw	121	;'y'
  2167  0B53  3420               	retlw	32	;' '
  2168  0B54  3441               	retlw	65	;'A'
  2169  0B55  3472               	retlw	114	;'r'
  2170  0B56  346D               	retlw	109	;'m'
  2171  0B57  3473               	retlw	115	;'s'
  2172  0B58  3474               	retlw	116	;'t'
  2173  0B59  3472               	retlw	114	;'r'
  2174  0B5A  346F               	retlw	111	;'o'
  2175  0B5B  346E               	retlw	110	;'n'
  2176  0B5C  3467               	retlw	103	;'g'
  2177  0B5D  3400               	retlw	0
  2178  0B5E                     STR_9:	
  2179  0B5E  3425               	retlw	37	;'%'
  2180  0B5F  346C               	retlw	108	;'l'
  2181  0B60  3475               	retlw	117	;'u'
  2182  0B61  342E               	retlw	46	;'.'
  2183  0B62  3425               	retlw	37	;'%'
  2184  0B63  3436               	retlw	54	;'6'
  2185  0B64  342E               	retlw	46	;'.'
  2186  0B65  3436               	retlw	54	;'6'
  2187  0B66  346C               	retlw	108	;'l'
  2188  0B67  3475               	retlw	117	;'u'
  2189  0B68  3400               	retlw	0
  2190  0B69                     STR_2:	
  2191  0B69  344E               	retlw	78	;'N'
  2192  0B6A  346F               	retlw	111	;'o'
  2193  0B6B  3420               	retlw	32	;' '
  2194  0B6C  3442               	retlw	66	;'B'
  2195  0B6D  3475               	retlw	117	;'u'
  2196  0B6E  3466               	retlw	102	;'f'
  2197  0B6F  3466               	retlw	102	;'f'
  2198  0B70  3465               	retlw	101	;'e'
  2199  0B71  3472               	retlw	114	;'r'
  2200  0B72  3400               	retlw	0
  2201  0B73                     STR_3:	
  2202  0B73  3446               	retlw	70	;'F'
  2203  0B74  346F               	retlw	111	;'o'
  2204  0B75  3472               	retlw	114	;'r'
  2205  0B76  3420               	retlw	32	;' '
  2206  0B77  3458               	retlw	88	;'X'
  2207  0B78  3443               	retlw	67	;'C'
  2208  0B79  3438               	retlw	56	;'8'
  2209  0B7A  3400               	retlw	0
  2210  0B7B                     STR_7:	
  2211  0B7B  3420               	retlw	32	;' '
  2212  0B7C  3420               	retlw	32	;' '
  2213  0B7D  3420               	retlw	32	;' '
  2214  0B7E  3420               	retlw	32	;' '
  2215  0B7F  3420               	retlw	32	;' '
  2216  0B80  3400               	retlw	0
  2217  0B7B                     
  2218                           ; #config settings
  2219  0000                     
  2220                           	psect	cinit
  2221  07F6                     start_initialization:	
  2222  07F6                     __initialization:	
  2223                           
  2224                           ; Clear objects allocated to BANK1
  2225  07F6  30A0               	movlw	low __pbssBANK1
  2226  07F7  0084               	movwf	4
  2227  07F8  3000               	movlw	high __pbssBANK1
  2228  07F9  0085               	movwf	5
  2229  07FA  3011               	movlw	17
  2230  07FB  318D  2507         	fcall	clear_ram0
  2231  07FD                     end_of_initialization:	
  2232                           ;End of C runtime variable initialization code
  2233                           
  2234  07FD                     __end_of__initialization:	
  2235  07FD  0020               	movlb	0
  2236  07FE  3184  2CDA         	ljmp	_main	;jump to C main() function
  2237                           
  2238                           	psect	bssBANK1
  2239  00A0                     __pbssBANK1:	
  2240  00A0                     ftoa@buf:	
  2241  00A0                     	ds	17
  2242                           
  2243                           	psect	clrtext
  2244  0D07                     clear_ram0:	
  2245                           ;	Called with FSR0 containing the base address, and
  2246                           ;	WREG with the size to clear
  2247                           
  2248  0D07  0064               	clrwdt	;clear the watchdog before getting into this loop
  2249  0D08                     clrloop0:	
  2250  0D08  0180               	clrf	0	;clear RAM location pointed to by FSR
  2251  0D09  3101               	addfsr 0,1
  2252  0D0A  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2253  0D0B  2D08               	goto	clrloop0	;have we reached the end yet?
  2254  0D0C  3400               	retlw	0	;all done for this memory range, return
  2255                           
  2256                           	psect	cstackCOMMON
  2257  0070                     __pcstackCOMMON:	
  2258  0070                     ?_isdigit:	
  2259  0070                     ?___ftge:	
  2260                           ; 1 bit 
  2261                           
  2262  0070                     ?_OLED_Init:	
  2263                           ; 1 bit 
  2264                           
  2265  0070                     ?_OLED_Clear:	
  2266                           ; 1 bytes @ 0x0
  2267                           
  2268  0070                     ?_memmove:	
  2269                           ; 1 bytes @ 0x0
  2270                           
  2271  0070                     ??_isdigit:	
  2272                           ; 1 bytes @ 0x0
  2273                           
  2274  0070                     ?_internal_16:	
  2275                           ; 1 bytes @ 0x0
  2276                           
  2277  0070                     ??_internal_16:	
  2278                           ; 1 bytes @ 0x0
  2279                           
  2280  0070                     ?_I2C_Init:	
  2281                           ; 1 bytes @ 0x0
  2282                           
  2283  0070                     ??_I2C_Init:	
  2284                           ; 1 bytes @ 0x0
  2285                           
  2286  0070                     ?_Send_I2C_Data:	
  2287                           ; 1 bytes @ 0x0
  2288                           
  2289  0070                     ?_Send_I2C_StartBit:	
  2290                           ; 1 bytes @ 0x0
  2291                           
  2292  0070                     ??_Send_I2C_StartBit:	
  2293                           ; 1 bytes @ 0x0
  2294                           
  2295  0070                     ?_Send_I2C_StopBit:	
  2296                           ; 1 bytes @ 0x0
  2297                           
  2298  0070                     ??_Send_I2C_StopBit:	
  2299                           ; 1 bytes @ 0x0
  2300                           
  2301  0070                     ?_initMain:	
  2302                           ; 1 bytes @ 0x0
  2303                           
  2304  0070                     ??_initMain:	
  2305                           ; 1 bytes @ 0x0
  2306                           
  2307  0070                     ?_main:	
  2308                           ; 1 bytes @ 0x0
  2309                           
  2310  0070                     ?_OLED_Command:	
  2311                           ; 1 bytes @ 0x0
  2312                           
  2313  0070                     ?_OLED_PutChar:	
  2314                           ; 1 bytes @ 0x0
  2315                           
  2316  0070                     ?___wmul:	
  2317                           ; 1 bytes @ 0x0
  2318                           
  2319  0070                     ?___lwdiv:	
  2320                           ; 2 bytes @ 0x0
  2321                           
  2322  0070                     ?___lwmod:	
  2323                           ; 2 bytes @ 0x0
  2324                           
  2325  0070                     ?___ftpack:	
  2326                           ; 2 bytes @ 0x0
  2327                           
  2328  0070                     ?___ftneg:	
  2329                           ; 3 bytes @ 0x0
  2330                           
  2331  0070                     ?___lldiv:	
  2332                           ; 3 bytes @ 0x0
  2333                           
  2334  0070                     _isdigit$512:	
  2335                           ; 4 bytes @ 0x0
  2336                           
  2337  0070                     Send_I2C_Data@databyte:	
  2338                           ; 1 bytes @ 0x0
  2339                           
  2340  0070                     ___wmul@multiplier:	
  2341                           ; 2 bytes @ 0x0
  2342                           
  2343  0070                     ___lwdiv@divisor:	
  2344                           ; 2 bytes @ 0x0
  2345                           
  2346  0070                     ___lwmod@divisor:	
  2347                           ; 2 bytes @ 0x0
  2348                           
  2349  0070                     memmove@s1:	
  2350                           ; 2 bytes @ 0x0
  2351                           
  2352  0070                     ___ftpack@arg:	
  2353                           ; 2 bytes @ 0x0
  2354                           
  2355  0070                     ___ftge@ff1:	
  2356                           ; 3 bytes @ 0x0
  2357                           
  2358  0070                     ___ftneg@f1:	
  2359                           ; 3 bytes @ 0x0
  2360                           
  2361  0070                     ___lldiv@divisor:	
  2362                           ; 3 bytes @ 0x0
  2363                           
  2364                           
  2365                           ; 4 bytes @ 0x0
  2366  0070                     	ds	1
  2367  0071                     isdigit@c:	
  2368                           
  2369                           ; 1 bytes @ 0x1
  2370  0071                     	ds	1
  2371  0072                     ??_Send_I2C_Data:	
  2372  0072                     ??_OLED_Command:	
  2373                           ; 1 bytes @ 0x2
  2374                           
  2375  0072                     ___wmul@multiplicand:	
  2376                           ; 1 bytes @ 0x2
  2377                           
  2378  0072                     ___lwdiv@dividend:	
  2379                           ; 2 bytes @ 0x2
  2380                           
  2381  0072                     ___lwmod@dividend:	
  2382                           ; 2 bytes @ 0x2
  2383                           
  2384  0072                     memmove@n:	
  2385                           ; 2 bytes @ 0x2
  2386                           
  2387                           
  2388                           ; 2 bytes @ 0x2
  2389  0072                     	ds	1
  2390  0073                     ??___ftneg:	
  2391  0073                     ___ftpack@exp:	
  2392                           ; 1 bytes @ 0x3
  2393                           
  2394  0073                     ___ftge@ff2:	
  2395                           ; 1 bytes @ 0x3
  2396                           
  2397                           
  2398                           ; 3 bytes @ 0x3
  2399  0073                     	ds	1
  2400  0074                     ??_memmove:	
  2401  0074                     ??___wmul:	
  2402                           ; 1 bytes @ 0x4
  2403                           
  2404  0074                     ??___lwdiv:	
  2405                           ; 1 bytes @ 0x4
  2406                           
  2407  0074                     ??___lwmod:	
  2408                           ; 1 bytes @ 0x4
  2409                           
  2410  0074                     OLED_Command@temp:	
  2411                           ; 1 bytes @ 0x4
  2412                           
  2413  0074                     ___ftpack@sign:	
  2414                           ; 1 bytes @ 0x4
  2415                           
  2416  0074                     ___wmul@product:	
  2417                           ; 1 bytes @ 0x4
  2418                           
  2419  0074                     ___lldiv@dividend:	
  2420                           ; 2 bytes @ 0x4
  2421                           
  2422                           
  2423                           ; 4 bytes @ 0x4
  2424  0074                     	ds	1
  2425  0075                     ??_OLED_Init:	
  2426  0075                     ?_OLED_YX:	
  2427                           ; 1 bytes @ 0x5
  2428                           
  2429  0075                     ??___ftpack:	
  2430                           ; 1 bytes @ 0x5
  2431                           
  2432  0075                     OLED_YX@Column:	
  2433                           ; 1 bytes @ 0x5
  2434                           
  2435  0075                     ___lwmod@counter:	
  2436                           ; 1 bytes @ 0x5
  2437                           
  2438  0075                     ___lwdiv@quotient:	
  2439                           ; 1 bytes @ 0x5
  2440                           
  2441                           
  2442                           ; 2 bytes @ 0x5
  2443  0075                     	ds	1
  2444  0076                     ??_OLED_YX:	
  2445  0076                     ??___ftge:	
  2446                           ; 1 bytes @ 0x6
  2447                           
  2448                           
  2449                           ; 1 bytes @ 0x6
  2450  0076                     	ds	1
  2451  0077                     ___lwdiv@counter:	
  2452                           
  2453                           ; 1 bytes @ 0x7
  2454  0077                     	ds	1
  2455  0078                     ?_utoa:	
  2456  0078                     ??___lldiv:	
  2457                           ; 1 bytes @ 0x8
  2458                           
  2459  0078                     ?___ftadd:	
  2460                           ; 1 bytes @ 0x8
  2461                           
  2462  0078                     ?___ftmul:	
  2463                           ; 3 bytes @ 0x8
  2464                           
  2465  0078                     ?___lltoft:	
  2466                           ; 3 bytes @ 0x8
  2467                           
  2468  0078                     memmove@d1:	
  2469                           ; 3 bytes @ 0x8
  2470                           
  2471  0078                     utoa@val:	
  2472                           ; 1 bytes @ 0x8
  2473                           
  2474  0078                     ___ftadd@f1:	
  2475                           ; 2 bytes @ 0x8
  2476                           
  2477  0078                     ___ftmul@f1:	
  2478                           ; 3 bytes @ 0x8
  2479                           
  2480  0078                     ___lltoft@c:	
  2481                           ; 3 bytes @ 0x8
  2482                           
  2483                           
  2484                           ; 4 bytes @ 0x8
  2485  0078                     	ds	1
  2486  0079                     OLED_YX@Row:	
  2487  0079                     memmove@s:	
  2488                           ; 1 bytes @ 0x9
  2489                           
  2490  0079                     ___lldiv@quotient:	
  2491                           ; 2 bytes @ 0x9
  2492                           
  2493                           
  2494                           ; 4 bytes @ 0x9
  2495  0079                     	ds	1
  2496  007A                     utoa@base:	
  2497                           
  2498                           ; 2 bytes @ 0xA
  2499  007A                     	ds	1
  2500  007B                     memmove@d:	
  2501  007B                     ___ftadd@f2:	
  2502                           ; 1 bytes @ 0xB
  2503                           
  2504  007B                     ___ftmul@f2:	
  2505                           ; 3 bytes @ 0xB
  2506                           
  2507                           
  2508                           ; 3 bytes @ 0xB
  2509  007B                     	ds	1
  2510  007C                     ??_OLED_Clear:	
  2511  007C                     ?_OLED_Write_String:	
  2512                           ; 1 bytes @ 0xC
  2513                           
  2514  007C                     ??_utoa:	
  2515                           ; 1 bytes @ 0xC
  2516                           
  2517  007C                     ??___lltoft:	
  2518                           ; 1 bytes @ 0xC
  2519                           
  2520  007C                     OLED_Write_String@s:	
  2521                           ; 1 bytes @ 0xC
  2522                           
  2523                           
  2524                           ; 2 bytes @ 0xC
  2525  007C                     	ds	1
  2526  007D                     ??_itoa:	
  2527  007D                     ___lldiv@counter:	
  2528                           ; 1 bytes @ 0xD
  2529                           
  2530  007D                     ___lltoft@exp:	
  2531                           ; 1 bytes @ 0xD
  2532                           
  2533                           
  2534                           ; 1 bytes @ 0xD
  2535  007D                     	ds	1
  2536  007E                     ??_OLED_Write_Integer:	
  2537  007E                     ??___ftsub:	
  2538                           ; 1 bytes @ 0xE
  2539                           
  2540                           
  2541                           	psect	cstackBANK0
  2542  0020                     __pcstackBANK0:	
  2543                           ; 1 bytes @ 0xE
  2544                           
  2545  0020                     ??_OLED_PutChar:	
  2546  0020                     ??___ftadd:	
  2547                           ; 1 bytes @ 0x0
  2548                           
  2549  0020                     ??___ftmul:	
  2550                           ; 1 bytes @ 0x0
  2551                           
  2552  0020                     ?___llmod:	
  2553                           ; 1 bytes @ 0x0
  2554                           
  2555  0020                     utoa@v:	
  2556                           ; 4 bytes @ 0x0
  2557                           
  2558  0020                     ___llmod@divisor:	
  2559                           ; 2 bytes @ 0x0
  2560                           
  2561                           
  2562                           ; 4 bytes @ 0x0
  2563  0020                     	ds	2
  2564  0022                     utoa@c:	
  2565                           
  2566                           ; 1 bytes @ 0x2
  2567  0022                     	ds	1
  2568  0023                     utoa@buf:	
  2569                           
  2570                           ; 1 bytes @ 0x3
  2571  0023                     	ds	1
  2572  0024                     ?_itoa:	
  2573  0024                     ___ftadd@sign:	
  2574                           ; 1 bytes @ 0x4
  2575                           
  2576  0024                     ___ftmul@exp:	
  2577                           ; 1 bytes @ 0x4
  2578                           
  2579  0024                     itoa@val:	
  2580                           ; 1 bytes @ 0x4
  2581                           
  2582  0024                     ___llmod@dividend:	
  2583                           ; 2 bytes @ 0x4
  2584                           
  2585                           
  2586                           ; 4 bytes @ 0x4
  2587  0024                     	ds	1
  2588  0025                     ___ftadd@exp2:	
  2589  0025                     ___ftmul@f3_as_product:	
  2590                           ; 1 bytes @ 0x5
  2591                           
  2592                           
  2593                           ; 3 bytes @ 0x5
  2594  0025                     	ds	1
  2595  0026                     ___ftadd@exp1:	
  2596  0026                     itoa@base:	
  2597                           ; 1 bytes @ 0x6
  2598                           
  2599  0026                     OLED_PutChar@bytes:	
  2600                           ; 2 bytes @ 0x6
  2601                           
  2602                           
  2603                           ; 9 bytes @ 0x6
  2604  0026                     	ds	1
  2605  0027                     ?___ftsub:	
  2606  0027                     ___ftsub@f2:	
  2607                           ; 3 bytes @ 0x7
  2608                           
  2609                           
  2610                           ; 3 bytes @ 0x7
  2611  0027                     	ds	1
  2612  0028                     ??___llmod:	
  2613  0028                     ___ftmul@cntr:	
  2614                           ; 1 bytes @ 0x8
  2615                           
  2616  0028                     itoa@cp:	
  2617                           ; 1 bytes @ 0x8
  2618                           
  2619                           
  2620                           ; 1 bytes @ 0x8
  2621  0028                     	ds	1
  2622  0029                     ___ftmul@sign:	
  2623  0029                     itoa@buf:	
  2624                           ; 1 bytes @ 0x9
  2625                           
  2626  0029                     ___llmod@counter:	
  2627                           ; 1 bytes @ 0x9
  2628                           
  2629                           
  2630                           ; 1 bytes @ 0x9
  2631  0029                     	ds	1
  2632  002A                     ?_sprintf:	
  2633  002A                     ?___fttol:	
  2634                           ; 2 bytes @ 0xA
  2635                           
  2636  002A                     sprintf@f:	
  2637                           ; 4 bytes @ 0xA
  2638                           
  2639  002A                     ___ftsub@f1:	
  2640                           ; 2 bytes @ 0xA
  2641                           
  2642  002A                     ___fttol@f1:	
  2643                           ; 3 bytes @ 0xA
  2644                           
  2645                           
  2646                           ; 3 bytes @ 0xA
  2647  002A                     	ds	4
  2648  002E                     ??___fttol:	
  2649                           
  2650                           ; 1 bytes @ 0xE
  2651  002E                     	ds	1
  2652  002F                     OLED_PutChar@base:	
  2653                           
  2654                           ; 2 bytes @ 0xF
  2655  002F                     	ds	2
  2656  0031                     OLED_PutChar@i:	
  2657                           
  2658                           ; 2 bytes @ 0x11
  2659  0031                     	ds	1
  2660  0032                     ___fttol@sign1:	
  2661                           
  2662                           ; 1 bytes @ 0x12
  2663  0032                     	ds	1
  2664  0033                     OLED_PutChar@ch:	
  2665  0033                     ___fttol@lval:	
  2666                           ; 1 bytes @ 0x13
  2667                           
  2668                           
  2669                           ; 4 bytes @ 0x13
  2670  0033                     	ds	1
  2671  0034                     ??_OLED_Write_String:	
  2672  0034                     ??_sprintf:	
  2673                           ; 1 bytes @ 0x14
  2674                           
  2675  0034                     OLED_Clear@row:	
  2676                           ; 1 bytes @ 0x14
  2677                           
  2678                           
  2679                           ; 2 bytes @ 0x14
  2680  0034                     	ds	1
  2681  0035                     ?_OLED_Write_Integer:	
  2682  0035                     OLED_Write_Integer@i:	
  2683                           ; 1 bytes @ 0x15
  2684                           
  2685                           
  2686                           ; 2 bytes @ 0x15
  2687  0035                     	ds	1
  2688  0036                     OLED_Clear@col:	
  2689                           
  2690                           ; 2 bytes @ 0x16
  2691  0036                     	ds	1
  2692  0037                     ___fttol@exp1:	
  2693  0037                     OLED_Write_Integer@s:	
  2694                           ; 1 bytes @ 0x17
  2695                           
  2696                           
  2697                           ; 20 bytes @ 0x17
  2698  0037                     	ds	3
  2699  003A                     sprintf@flag:	
  2700                           
  2701                           ; 1 bytes @ 0x1A
  2702  003A                     	ds	1
  2703  003B                     sprintf@ap:	
  2704                           
  2705                           ; 1 bytes @ 0x1B
  2706  003B                     	ds	1
  2707  003C                     sprintf@val:	
  2708                           
  2709                           ; 4 bytes @ 0x1C
  2710  003C                     	ds	4
  2711  0040                     sprintf@sp:	
  2712                           
  2713                           ; 1 bytes @ 0x20
  2714  0040                     	ds	1
  2715  0041                     sprintf@width:	
  2716                           
  2717                           ; 2 bytes @ 0x21
  2718  0041                     	ds	2
  2719  0043                     sprintf@prec:	
  2720                           
  2721                           ; 2 bytes @ 0x23
  2722  0043                     	ds	2
  2723  0045                     sprintf@c:	
  2724                           
  2725                           ; 1 bytes @ 0x25
  2726  0045                     	ds	1
  2727  0046                     ?_ftoa:	
  2728  0046                     ftoa@f:	
  2729                           ; 1 bytes @ 0x26
  2730                           
  2731                           
  2732                           ; 3 bytes @ 0x26
  2733  0046                     	ds	3
  2734  0049                     ftoa@status:	
  2735                           
  2736                           ; 1 bytes @ 0x29
  2737  0049                     	ds	1
  2738  004A                     ??_ftoa:	
  2739                           
  2740                           ; 1 bytes @ 0x2A
  2741  004A                     	ds	1
  2742  004B                     ftoa@rem:	
  2743                           
  2744                           ; 4 bytes @ 0x2B
  2745  004B                     	ds	4
  2746  004F                     ftoa@l:	
  2747                           
  2748                           ; 4 bytes @ 0x2F
  2749  004F                     	ds	4
  2750  0053                     ftoa@cp:	
  2751                           
  2752                           ; 1 bytes @ 0x33
  2753  0053                     	ds	1
  2754  0054                     ?_OLED_Write_Float:	
  2755  0054                     OLED_Write_Float@f:	
  2756                           ; 1 bytes @ 0x34
  2757                           
  2758                           
  2759                           ; 3 bytes @ 0x34
  2760  0054                     	ds	3
  2761  0057                     ??_OLED_Write_Float:	
  2762                           
  2763                           ; 1 bytes @ 0x37
  2764  0057                     	ds	2
  2765  0059                     OLED_Write_Float@status:	
  2766                           
  2767                           ; 2 bytes @ 0x39
  2768  0059                     	ds	2
  2769  005B                     OLED_Write_Float@buf11:	
  2770                           
  2771                           ; 1 bytes @ 0x3B
  2772  005B                     	ds	1
  2773  005C                     ??_main:	
  2774                           
  2775                           ; 1 bytes @ 0x3C
  2776  005C                     	ds	3
  2777  005F                     main@count:	
  2778                           
  2779                           ; 2 bytes @ 0x3F
  2780  005F                     	ds	2
  2781  0061                     main@dec:	
  2782                           
  2783                           ; 3 bytes @ 0x41
  2784  0061                     	ds	3
  2785                           
  2786                           	psect	maintext
  2787  04DA                     __pmaintext:	
  2788 ;;
  2789 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2790 ;;
  2791 ;; *************** function _main *****************
  2792 ;; Defined at:
  2793 ;;		line 87 in file "Main.c"
  2794 ;; Parameters:    Size  Location     Type
  2795 ;;		None
  2796 ;; Auto vars:     Size  Location     Type
  2797 ;;  dec             3   65[BANK0 ] float 
  2798 ;;  count           2   63[BANK0 ] int 
  2799 ;; Return value:  Size  Location     Type
  2800 ;;                  1    wreg      void 
  2801 ;; Registers used:
  2802 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2803 ;; Tracked objects:
  2804 ;;		On entry : B1F/0
  2805 ;;		On exit  : 0/0
  2806 ;;		Unchanged: 0/0
  2807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2809 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2810 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2811 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2812 ;;Total ram usage:        8 bytes
  2813 ;; Hardware stack levels required when called:    5
  2814 ;; This function calls:
  2815 ;;		_I2C_Init
  2816 ;;		_OLED_Clear
  2817 ;;		_OLED_Init
  2818 ;;		_OLED_Write_Float
  2819 ;;		_OLED_Write_Integer
  2820 ;;		_OLED_Write_String
  2821 ;;		_OLED_YX
  2822 ;;		___ftadd
  2823 ;;		___ftge
  2824 ;;		_initMain
  2825 ;; This function is called by:
  2826 ;;		Startup code after reset
  2827 ;; This function uses a non-reentrant model
  2828 ;;
  2829                           
  2830                           
  2831                           ;psect for function _main
  2832  04DA                     _main:	
  2833                           
  2834                           ;Main.c: 88: initMain();
  2835                           
  2836                           ;incstack = 0
  2837                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2838  04DA  318E  2668  3184   	fcall	_initMain
  2839                           
  2840                           ;Main.c: 91: I2C_Init();
  2841  04DD  318D  253C  3184   	fcall	_I2C_Init
  2842                           
  2843                           ;Main.c: 93: _delay((unsigned long)((100)*(16000000/4000.0)));
  2844  04E0  3003               	movlw	3
  2845  04E1  0020               	movlb	0	; select bank0
  2846  04E2  00DE               	movwf	??_main+2
  2847  04E3  3008               	movlw	8
  2848  04E4  00DD               	movwf	??_main+1
  2849  04E5  3078               	movlw	120
  2850  04E6  00DC               	movwf	??_main
  2851  04E7                     u2897:	
  2852  04E7  0BDC               	decfsz	??_main,f
  2853  04E8  2CE7               	goto	u2897
  2854  04E9  0BDD               	decfsz	??_main+1,f
  2855  04EA  2CE7               	goto	u2897
  2856  04EB  0BDE               	decfsz	??_main+2,f
  2857  04EC  2CE7               	goto	u2897
  2858                           
  2859                           ;Main.c: 96: OLED_Init();
  2860  04ED  3180  2062  3184   	fcall	_OLED_Init
  2861                           
  2862                           ;Main.c: 99: OLED_Clear();
  2863  04F0  318E  26BC  3184   	fcall	_OLED_Clear
  2864                           
  2865                           ;Main.c: 102: int count = 0;
  2866  04F3  0020               	movlb	0	; select bank0
  2867  04F4  01DF               	clrf	main@count
  2868  04F5  01E0               	clrf	main@count+1
  2869                           
  2870                           ;Main.c: 103: float dec = 0.0;
  2871  04F6  3000               	movlw	0
  2872  04F7  00E1               	movwf	main@dec
  2873  04F8  3000               	movlw	0
  2874  04F9  00E2               	movwf	main@dec+1
  2875  04FA  3000               	movlw	0
  2876  04FB  00E3               	movwf	main@dec+2
  2877  04FC                     l2161:	
  2878                           ;Main.c: 105: while ( 1 ) {
  2879                           
  2880                           
  2881                           ;Main.c: 111: OLED_YX( 0, 0 );
  2882  04FC  01F5               	clrf	OLED_YX@Column
  2883  04FD  3000               	movlw	0
  2884  04FE  318E  2618  3184   	fcall	_OLED_YX
  2885                           
  2886                           ;Main.c: 112: OLED_Write_String( "OLED SSD1306" );
  2887  0501  3037               	movlw	low (STR_1| (0+32768))
  2888  0502  00FC               	movwf	OLED_Write_String@s
  2889  0503  308B               	movlw	high (STR_1| (0+32768))
  2890  0504  00FD               	movwf	OLED_Write_String@s+1
  2891  0505  318D  254E  3184   	fcall	_OLED_Write_String
  2892                           
  2893                           ;Main.c: 114: OLED_YX(1, 0);
  2894  0508  01F5               	clrf	OLED_YX@Column
  2895  0509  3001               	movlw	1
  2896  050A  318E  2618  3184   	fcall	_OLED_YX
  2897                           
  2898                           ;Main.c: 115: OLED_Write_String ("No Buffer");
  2899  050D  3069               	movlw	low (STR_2| (0+32768))
  2900  050E  00FC               	movwf	OLED_Write_String@s
  2901  050F  308B               	movlw	high (STR_2| (0+32768))
  2902  0510  00FD               	movwf	OLED_Write_String@s+1
  2903  0511  318D  254E  3184   	fcall	_OLED_Write_String
  2904                           
  2905                           ;Main.c: 117: OLED_YX(2, 0);
  2906  0514  01F5               	clrf	OLED_YX@Column
  2907  0515  3002               	movlw	2
  2908  0516  318E  2618  3184   	fcall	_OLED_YX
  2909                           
  2910                           ;Main.c: 118: OLED_Write_String("For XC8");
  2911  0519  3073               	movlw	low (STR_3| (0+32768))
  2912  051A  00FC               	movwf	OLED_Write_String@s
  2913  051B  308B               	movlw	high (STR_3| (0+32768))
  2914  051C  00FD               	movwf	OLED_Write_String@s+1
  2915  051D  318D  254E  3184   	fcall	_OLED_Write_String
  2916                           
  2917                           ;Main.c: 120: OLED_YX(3,0);
  2918  0520  01F5               	clrf	OLED_YX@Column
  2919  0521  3003               	movlw	3
  2920  0522  318E  2618  3184   	fcall	_OLED_YX
  2921                           
  2922                           ;Main.c: 121: OLED_Write_String("by Armstrong");
  2923  0525  3051               	movlw	low (STR_4| (0+32768))
  2924  0526  00FC               	movwf	OLED_Write_String@s
  2925  0527  308B               	movlw	high (STR_4| (0+32768))
  2926  0528  00FD               	movwf	OLED_Write_String@s+1
  2927  0529  318D  254E  3184   	fcall	_OLED_Write_String
  2928                           
  2929                           ;Main.c: 123: _delay((unsigned long)((1000)*(16000000/4000.0)));
  2930  052C  3015               	movlw	21
  2931  052D  0020               	movlb	0	; select bank0
  2932  052E  00DE               	movwf	??_main+2
  2933  052F  304B               	movlw	75
  2934  0530  00DD               	movwf	??_main+1
  2935  0531  30D1               	movlw	209
  2936  0532  00DC               	movwf	??_main
  2937  0533                     u2907:	
  2938  0533  0BDC               	decfsz	??_main,f
  2939  0534  2D33               	goto	u2907
  2940  0535  0BDD               	decfsz	??_main+1,f
  2941  0536  2D33               	goto	u2907
  2942  0537  0BDE               	decfsz	??_main+2,f
  2943  0538  2D33               	goto	u2907
  2944  0539  0000               	nop
  2945                           
  2946                           ;Main.c: 124: OLED_Clear();
  2947  053A  318E  26BC  3184   	fcall	_OLED_Clear
  2948                           
  2949                           ;Main.c: 125: _delay((unsigned long)((100)*(16000000/4000.0)));
  2950  053D  3003               	movlw	3
  2951  053E  0020               	movlb	0	; select bank0
  2952  053F  00DE               	movwf	??_main+2
  2953  0540  3008               	movlw	8
  2954  0541  00DD               	movwf	??_main+1
  2955  0542  3078               	movlw	120
  2956  0543  00DC               	movwf	??_main
  2957  0544                     u2917:	
  2958  0544  0BDC               	decfsz	??_main,f
  2959  0545  2D44               	goto	u2917
  2960  0546  0BDD               	decfsz	??_main+1,f
  2961  0547  2D44               	goto	u2917
  2962  0548  0BDE               	decfsz	??_main+2,f
  2963  0549  2D44               	goto	u2917
  2964                           
  2965                           ;Main.c: 131: for (count = 0; count <= 1024; count++){
  2966  054A  0020               	movlb	0	; select bank0
  2967  054B  01DF               	clrf	main@count
  2968  054C  01E0               	clrf	main@count+1
  2969  054D  0860               	movf	main@count+1,w
  2970  054E  3A80               	xorlw	128
  2971  054F  00DC               	movwf	??_main
  2972  0550  3084               	movlw	132
  2973  0551  025C               	subwf	??_main,w
  2974  0552  1D03               	skipz
  2975  0553  2D56               	goto	u2855
  2976  0554  3001               	movlw	1
  2977  0555  025F               	subwf	main@count,w
  2978  0556                     u2855:	
  2979  0556  1803               	btfsc	3,0
  2980  0557  2D8E               	goto	l2199
  2981  0558                     l2187:	
  2982                           
  2983                           ;Main.c: 132: OLED_YX( 0, 0 );
  2984  0558  01F5               	clrf	OLED_YX@Column
  2985  0559  3000               	movlw	0
  2986  055A  318E  2618  3184   	fcall	_OLED_YX
  2987                           
  2988                           ;Main.c: 133: OLED_Write_String( "Integer Count:" );
  2989  055D  3028               	movlw	low (STR_5| (0+32768))
  2990  055E  00FC               	movwf	OLED_Write_String@s
  2991  055F  308B               	movlw	high (STR_5| (0+32768))
  2992  0560  00FD               	movwf	OLED_Write_String@s+1
  2993  0561  318D  254E  3184   	fcall	_OLED_Write_String
  2994                           
  2995                           ;Main.c: 134: OLED_YX(2, 0);
  2996  0564  01F5               	clrf	OLED_YX@Column
  2997  0565  3002               	movlw	2
  2998  0566  318E  2618  3184   	fcall	_OLED_YX
  2999                           
  3000                           ;Main.c: 135: OLED_Write_Integer(count);
  3001  0569  0020               	movlb	0	; select bank0
  3002  056A  0860               	movf	main@count+1,w
  3003  056B  00B6               	movwf	OLED_Write_Integer@i+1
  3004  056C  085F               	movf	main@count,w
  3005  056D  00B5               	movwf	OLED_Write_Integer@i
  3006  056E  318D  257D  3184   	fcall	_OLED_Write_Integer
  3007                           
  3008                           ;Main.c: 136: _delay((unsigned long)((100)*(16000000/4000.0)));
  3009  0571  3003               	movlw	3
  3010  0572  0020               	movlb	0	; select bank0
  3011  0573  00DE               	movwf	??_main+2
  3012  0574  3008               	movlw	8
  3013  0575  00DD               	movwf	??_main+1
  3014  0576  3078               	movlw	120
  3015  0577  00DC               	movwf	??_main
  3016  0578                     u2927:	
  3017  0578  0BDC               	decfsz	??_main,f
  3018  0579  2D78               	goto	u2927
  3019  057A  0BDD               	decfsz	??_main+1,f
  3020  057B  2D78               	goto	u2927
  3021  057C  0BDE               	decfsz	??_main+2,f
  3022  057D  2D78               	goto	u2927
  3023  057E  3001               	movlw	1
  3024  057F  0020               	movlb	0	; select bank0
  3025  0580  07DF               	addwf	main@count,f
  3026  0581  3000               	movlw	0
  3027  0582  3DE0               	addwfc	main@count+1,f
  3028  0583  0860               	movf	main@count+1,w
  3029  0584  3A80               	xorlw	128
  3030  0585  00DC               	movwf	??_main
  3031  0586  3084               	movlw	132
  3032  0587  025C               	subwf	??_main,w
  3033  0588  1D03               	skipz
  3034  0589  2D8C               	goto	u2865
  3035  058A  3001               	movlw	1
  3036  058B  025F               	subwf	main@count,w
  3037  058C                     u2865:	
  3038  058C  1C03               	skipc
  3039  058D  2D58               	goto	l2187
  3040  058E                     l2199:	
  3041                           
  3042                           ;Main.c: 137: }
  3043                           ;Main.c: 139: OLED_Clear();
  3044  058E  318E  26BC  3184   	fcall	_OLED_Clear
  3045                           
  3046                           ;Main.c: 140: _delay((unsigned long)((100)*(16000000/4000.0)));
  3047  0591  3003               	movlw	3
  3048  0592  0020               	movlb	0	; select bank0
  3049  0593  00DE               	movwf	??_main+2
  3050  0594  3008               	movlw	8
  3051  0595  00DD               	movwf	??_main+1
  3052  0596  3078               	movlw	120
  3053  0597  00DC               	movwf	??_main
  3054  0598                     u2937:	
  3055  0598  0BDC               	decfsz	??_main,f
  3056  0599  2D98               	goto	u2937
  3057  059A  0BDD               	decfsz	??_main+1,f
  3058  059B  2D98               	goto	u2937
  3059  059C  0BDE               	decfsz	??_main+2,f
  3060  059D  2D98               	goto	u2937
  3061                           
  3062                           ;Main.c: 147: for(dec = 0.0; dec <= 20.0; dec+= 0.5)
  3063  059E  3000               	movlw	0
  3064  059F  0020               	movlb	0	; select bank0
  3065  05A0  00E1               	movwf	main@dec
  3066  05A1  3000               	movlw	0
  3067  05A2  00E2               	movwf	main@dec+1
  3068  05A3  3000               	movlw	0
  3069  05A4  00E3               	movwf	main@dec+2
  3070  05A5  3000               	movlw	0
  3071  05A6  00F0               	movwf	___ftge@ff1
  3072  05A7  30A0               	movlw	160
  3073  05A8  00F1               	movwf	___ftge@ff1+1
  3074  05A9  3041               	movlw	65
  3075  05AA  00F2               	movwf	___ftge@ff1+2
  3076  05AB  0861               	movf	main@dec,w
  3077  05AC  00F3               	movwf	___ftge@ff2
  3078  05AD  0862               	movf	main@dec+1,w
  3079  05AE  00F4               	movwf	___ftge@ff2+1
  3080  05AF  0863               	movf	main@dec+2,w
  3081  05B0  00F5               	movwf	___ftge@ff2+2
  3082  05B1  318F  2720  3184   	fcall	___ftge
  3083  05B4  1C03               	btfss	3,0
  3084  05B5  2E06               	goto	l2221
  3085  05B6                     l2209:	
  3086                           
  3087                           ;Main.c: 148: {
  3088                           ;Main.c: 149: OLED_YX( 0, 0 );
  3089  05B6  01F5               	clrf	OLED_YX@Column
  3090  05B7  3000               	movlw	0
  3091  05B8  318E  2618  3184   	fcall	_OLED_YX
  3092                           
  3093                           ;Main.c: 150: OLED_Write_String( "Float Count:" );
  3094  05BB  3044               	movlw	low (STR_6| (0+32768))
  3095  05BC  00FC               	movwf	OLED_Write_String@s
  3096  05BD  308B               	movlw	high (STR_6| (0+32768))
  3097  05BE  00FD               	movwf	OLED_Write_String@s+1
  3098  05BF  318D  254E  3184   	fcall	_OLED_Write_String
  3099                           
  3100                           ;Main.c: 151: OLED_YX(2, 0);
  3101  05C2  01F5               	clrf	OLED_YX@Column
  3102  05C3  3002               	movlw	2
  3103  05C4  318E  2618  3184   	fcall	_OLED_YX
  3104                           
  3105                           ;Main.c: 152: OLED_Write_Float(dec);
  3106  05C7  0020               	movlb	0	; select bank0
  3107  05C8  0861               	movf	main@dec,w
  3108  05C9  00D4               	movwf	OLED_Write_Float@f
  3109  05CA  0862               	movf	main@dec+1,w
  3110  05CB  00D5               	movwf	OLED_Write_Float@f+1
  3111  05CC  0863               	movf	main@dec+2,w
  3112  05CD  00D6               	movwf	OLED_Write_Float@f+2
  3113  05CE  318D  25D4  3184   	fcall	_OLED_Write_Float
  3114                           
  3115                           ;Main.c: 153: _delay((unsigned long)((100)*(16000000/4000.0)));
  3116  05D1  3003               	movlw	3
  3117  05D2  0020               	movlb	0	; select bank0
  3118  05D3  00DE               	movwf	??_main+2
  3119  05D4  3008               	movlw	8
  3120  05D5  00DD               	movwf	??_main+1
  3121  05D6  3078               	movlw	120
  3122  05D7  00DC               	movwf	??_main
  3123  05D8                     u2947:	
  3124  05D8  0BDC               	decfsz	??_main,f
  3125  05D9  2DD8               	goto	u2947
  3126  05DA  0BDD               	decfsz	??_main+1,f
  3127  05DB  2DD8               	goto	u2947
  3128  05DC  0BDE               	decfsz	??_main+2,f
  3129  05DD  2DD8               	goto	u2947
  3130  05DE  3000               	movlw	0
  3131  05DF  00F8               	movwf	___ftadd@f1
  3132  05E0  3000               	movlw	0
  3133  05E1  00F9               	movwf	___ftadd@f1+1
  3134  05E2  303F               	movlw	63
  3135  05E3  00FA               	movwf	___ftadd@f1+2
  3136  05E4  0020               	movlb	0	; select bank0
  3137  05E5  0861               	movf	main@dec,w
  3138  05E6  00FB               	movwf	___ftadd@f2
  3139  05E7  0862               	movf	main@dec+1,w
  3140  05E8  00FC               	movwf	___ftadd@f2+1
  3141  05E9  0863               	movf	main@dec+2,w
  3142  05EA  00FD               	movwf	___ftadd@f2+2
  3143  05EB  3183  23E5  3184   	fcall	___ftadd
  3144  05EE  0878               	movf	?___ftadd,w
  3145  05EF  0020               	movlb	0	; select bank0
  3146  05F0  00E1               	movwf	main@dec
  3147  05F1  0879               	movf	?___ftadd+1,w
  3148  05F2  00E2               	movwf	main@dec+1
  3149  05F3  087A               	movf	?___ftadd+2,w
  3150  05F4  00E3               	movwf	main@dec+2
  3151  05F5  3000               	movlw	0
  3152  05F6  00F0               	movwf	___ftge@ff1
  3153  05F7  30A0               	movlw	160
  3154  05F8  00F1               	movwf	___ftge@ff1+1
  3155  05F9  3041               	movlw	65
  3156  05FA  00F2               	movwf	___ftge@ff1+2
  3157  05FB  0861               	movf	main@dec,w
  3158  05FC  00F3               	movwf	___ftge@ff2
  3159  05FD  0862               	movf	main@dec+1,w
  3160  05FE  00F4               	movwf	___ftge@ff2+1
  3161  05FF  0863               	movf	main@dec+2,w
  3162  0600  00F5               	movwf	___ftge@ff2+2
  3163  0601  318F  2720  3184   	fcall	___ftge
  3164  0604  1803               	btfsc	3,0
  3165  0605  2DB6               	goto	l2209
  3166  0606                     l2221:	
  3167                           
  3168                           ;Main.c: 154: }
  3169                           ;Main.c: 157: _delay((unsigned long)((100)*(16000000/4000.0)));
  3170  0606  3003               	movlw	3
  3171  0607  0020               	movlb	0	; select bank0
  3172  0608  00DE               	movwf	??_main+2
  3173  0609  3008               	movlw	8
  3174  060A  00DD               	movwf	??_main+1
  3175  060B  3078               	movlw	120
  3176  060C  00DC               	movwf	??_main
  3177  060D                     u2957:	
  3178  060D  0BDC               	decfsz	??_main,f
  3179  060E  2E0D               	goto	u2957
  3180  060F  0BDD               	decfsz	??_main+1,f
  3181  0610  2E0D               	goto	u2957
  3182  0611  0BDE               	decfsz	??_main+2,f
  3183  0612  2E0D               	goto	u2957
  3184                           
  3185                           ;Main.c: 158: OLED_Clear();
  3186  0613  318E  26BC  3184   	fcall	_OLED_Clear
  3187  0616  2CFC               	goto	l2161
  3188  0617                     __end_of_main:	
  3189                           ;Main.c: 159: }
  3190                           ;Main.c: 161: return;
  3191                           
  3192                           
  3193                           	psect	text1
  3194  0E68                     __ptext1:	
  3195 ;; *************** function _initMain *****************
  3196 ;; Defined at:
  3197 ;;		line 47 in file "Main.c"
  3198 ;; Parameters:    Size  Location     Type
  3199 ;;		None
  3200 ;; Auto vars:     Size  Location     Type
  3201 ;;		None
  3202 ;; Return value:  Size  Location     Type
  3203 ;;                  1    wreg      void 
  3204 ;; Registers used:
  3205 ;;		wreg, status,2, status,0, pclath, cstack
  3206 ;; Tracked objects:
  3207 ;;		On entry : 0/0
  3208 ;;		On exit  : 0/0
  3209 ;;		Unchanged: 0/0
  3210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3215 ;;Total ram usage:        0 bytes
  3216 ;; Hardware stack levels used:    1
  3217 ;; Hardware stack levels required when called:    1
  3218 ;; This function calls:
  3219 ;;		_internal_16
  3220 ;; This function is called by:
  3221 ;;		_main
  3222 ;; This function uses a non-reentrant model
  3223 ;;
  3224                           
  3225                           
  3226                           ;psect for function _initMain
  3227  0E68                     _initMain:	
  3228                           
  3229                           ;Main.c: 50: internal_16();
  3230                           
  3231                           ;incstack = 0
  3232                           ; Regs used in _initMain: [wreg+status,2+status,0+pclath+cstack]
  3233  0E68  3180  2007         	fcall	_internal_16
  3234                           
  3235                           ;Main.c: 57: ANSELCbits.ANSC4 = 0;
  3236  0E6A  0023               	movlb	3	; select bank3
  3237  0E6B  120E               	bcf	14,4	;volatile
  3238                           
  3239                           ;Main.c: 58: ANSELCbits.ANSC5 = 0;
  3240  0E6C  128E               	bcf	14,5	;volatile
  3241                           
  3242                           ;Main.c: 60: TRISCbits.TRISC4 = 1;
  3243  0E6D  0021               	movlb	1	; select bank1
  3244  0E6E  160E               	bsf	14,4	;volatile
  3245                           
  3246                           ;Main.c: 61: TRISCbits.TRISC5 = 1;
  3247  0E6F  168E               	bsf	14,5	;volatile
  3248                           
  3249                           ;Main.c: 63: PPSLOCK = 0x55;
  3250  0E70  3055               	movlw	85
  3251  0E71  003C               	movlb	28	; select bank28
  3252  0E72  008F               	movwf	15	;volatile
  3253                           
  3254                           ;Main.c: 64: PPSLOCK = 0xAA;
  3255  0E73  30AA               	movlw	170
  3256  0E74  008F               	movwf	15	;volatile
  3257                           
  3258                           ;Main.c: 65: PPSLOCKbits.PPSLOCKED = 0x00;
  3259  0E75  100F               	bcf	15,0	;volatile
  3260                           
  3261                           ;Main.c: 67: RC4PPSbits.RC4PPS = 0x0011;
  3262  0E76  003D               	movlb	29	; select bank29
  3263  0E77  0824               	movf	36,w	;volatile
  3264  0E78  39E0               	andlw	-32
  3265  0E79  3811               	iorlw	17
  3266  0E7A  00A4               	movwf	36	;volatile
  3267                           
  3268                           ;Main.c: 68: SSPDATPPSbits.SSPDATPPS = 0x0014;
  3269  0E7B  003C               	movlb	28	; select bank28
  3270  0E7C  0821               	movf	33,w	;volatile
  3271  0E7D  39E0               	andlw	-32
  3272  0E7E  3814               	iorlw	20
  3273  0E7F  00A1               	movwf	33	;volatile
  3274                           
  3275                           ;Main.c: 69: SSPCLKPPSbits.SSPCLKPPS = 0x0015;
  3276  0E80  0820               	movf	32,w	;volatile
  3277  0E81  39E0               	andlw	-32
  3278  0E82  3815               	iorlw	21
  3279  0E83  00A0               	movwf	32	;volatile
  3280                           
  3281                           ;Main.c: 70: RC5PPSbits.RC5PPS = 0x0010;
  3282  0E84  003D               	movlb	29	; select bank29
  3283  0E85  0825               	movf	37,w	;volatile
  3284  0E86  39E0               	andlw	-32
  3285  0E87  3810               	iorlw	16
  3286  0E88  00A5               	movwf	37	;volatile
  3287                           
  3288                           ;Main.c: 72: PPSLOCK = 0x55;
  3289  0E89  3055               	movlw	85
  3290  0E8A  003C               	movlb	28	; select bank28
  3291  0E8B  008F               	movwf	15	;volatile
  3292                           
  3293                           ;Main.c: 73: PPSLOCK = 0xAA;
  3294  0E8C  30AA               	movlw	170
  3295  0E8D  008F               	movwf	15	;volatile
  3296                           
  3297                           ;Main.c: 74: PPSLOCKbits.PPSLOCKED = 0x01;
  3298  0E8E  140F               	bsf	15,0	;volatile
  3299  0E8F  0008               	return
  3300  0E90                     __end_of_initMain:	
  3301                           
  3302                           	psect	text2
  3303  0007                     __ptext2:	
  3304 ;; *************** function _internal_16 *****************
  3305 ;; Defined at:
  3306 ;;		line 56 in file "16F1717_Internal.c"
  3307 ;; Parameters:    Size  Location     Type
  3308 ;;		None
  3309 ;; Auto vars:     Size  Location     Type
  3310 ;;		None
  3311 ;; Return value:  Size  Location     Type
  3312 ;;                  1    wreg      void 
  3313 ;; Registers used:
  3314 ;;		None
  3315 ;; Tracked objects:
  3316 ;;		On entry : 0/0
  3317 ;;		On exit  : 0/0
  3318 ;;		Unchanged: 0/0
  3319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3324 ;;Total ram usage:        0 bytes
  3325 ;; Hardware stack levels used:    1
  3326 ;; This function calls:
  3327 ;;		Nothing
  3328 ;; This function is called by:
  3329 ;;		_initMain
  3330 ;; This function uses a non-reentrant model
  3331 ;;
  3332                           
  3333                           
  3334                           ;psect for function _internal_16
  3335  0007                     _internal_16:	
  3336                           
  3337                           ;16F1717_Internal.c: 58: SCS0 = 0;
  3338                           
  3339                           ;incstack = 0
  3340                           ; Regs used in _internal_16: []
  3341  0007  0021               	movlb	1	; select bank1
  3342  0008  1019               	bcf	25,0	;volatile
  3343                           
  3344                           ;16F1717_Internal.c: 59: SCS1 = 0;
  3345  0009  1099               	bcf	25,1	;volatile
  3346                           
  3347                           ;16F1717_Internal.c: 62: IRCF0 = 1;
  3348  000A  1599               	bsf	25,3	;volatile
  3349                           
  3350                           ;16F1717_Internal.c: 63: IRCF1 = 1;
  3351  000B  1619               	bsf	25,4	;volatile
  3352                           
  3353                           ;16F1717_Internal.c: 64: IRCF2 = 1;
  3354  000C  1699               	bsf	25,5	;volatile
  3355                           
  3356                           ;16F1717_Internal.c: 65: IRCF3 = 1;
  3357  000D  1719               	bsf	25,6	;volatile
  3358                           
  3359                           ;16F1717_Internal.c: 68: SPLLEN = 0;
  3360  000E  1399               	bcf	25,7	;volatile
  3361  000F  0008               	return
  3362  0010                     __end_of_internal_16:	
  3363                           
  3364                           	psect	text3
  3365  0D7D                     __ptext3:	
  3366 ;; *************** function _OLED_Write_Integer *****************
  3367 ;; Defined at:
  3368 ;;		line 299 in file "oled.c"
  3369 ;; Parameters:    Size  Location     Type
  3370 ;;  i               2   21[BANK0 ] unsigned int 
  3371 ;; Auto vars:     Size  Location     Type
  3372 ;;  s              20   23[BANK0 ] unsigned char [20]
  3373 ;; Return value:  Size  Location     Type
  3374 ;;                  1    wreg      void 
  3375 ;; Registers used:
  3376 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3377 ;; Tracked objects:
  3378 ;;		On entry : 0/0
  3379 ;;		On exit  : 0/0
  3380 ;;		Unchanged: 0/0
  3381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3382 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3383 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3385 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3386 ;;Total ram usage:       22 bytes
  3387 ;; Hardware stack levels used:    1
  3388 ;; Hardware stack levels required when called:    3
  3389 ;; This function calls:
  3390 ;;		_OLED_Write_String
  3391 ;;		_itoa
  3392 ;; This function is called by:
  3393 ;;		_main
  3394 ;; This function uses a non-reentrant model
  3395 ;;
  3396                           
  3397                           
  3398                           ;psect for function _OLED_Write_Integer
  3399  0D7D                     _OLED_Write_Integer:	
  3400                           
  3401                           ;oled.c: 301: char s[20];
  3402                           ;oled.c: 302: itoa( s, i, 10 );
  3403                           
  3404                           ;incstack = 0
  3405                           ; Regs used in _OLED_Write_Integer: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3406  0D7D  0020               	movlb	0	; select bank0
  3407  0D7E  0836               	movf	OLED_Write_Integer@i+1,w
  3408  0D7F  00A5               	movwf	itoa@val+1
  3409  0D80  0835               	movf	OLED_Write_Integer@i,w
  3410  0D81  00A4               	movwf	itoa@val
  3411  0D82  300A               	movlw	10
  3412  0D83  00A6               	movwf	itoa@base
  3413  0D84  3000               	movlw	0
  3414  0D85  00A7               	movwf	itoa@base+1
  3415  0D86  3037               	movlw	(low (OLED_Write_Integer@s| 0))& (0+255)
  3416  0D87  318D  25F4  318D   	fcall	_itoa
  3417                           
  3418                           ;oled.c: 303: OLED_Write_String( s );
  3419  0D8A  3037               	movlw	low OLED_Write_Integer@s
  3420  0D8B  00FC               	movwf	OLED_Write_String@s
  3421  0D8C  3000               	movlw	high OLED_Write_Integer@s
  3422  0D8D  00FD               	movwf	OLED_Write_String@s+1
  3423  0D8E  318D  254E  318D   	fcall	_OLED_Write_String
  3424                           
  3425                           ;oled.c: 304: OLED_Write_String( "     " );
  3426  0D91  307B               	movlw	low (STR_7| (0+32768))
  3427  0D92  00FC               	movwf	OLED_Write_String@s
  3428  0D93  308B               	movlw	high (STR_7| (0+32768))
  3429  0D94  00FD               	movwf	OLED_Write_String@s+1
  3430  0D95  318D  254E         	fcall	_OLED_Write_String
  3431  0D97  0008               	return
  3432  0D98                     __end_of_OLED_Write_Integer:	
  3433                           
  3434                           	psect	text4
  3435  0DF4                     __ptext4:	
  3436 ;; *************** function _itoa *****************
  3437 ;; Defined at:
  3438 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\itoa.c"
  3439 ;; Parameters:    Size  Location     Type
  3440 ;;  buf             1    wreg     PTR unsigned char 
  3441 ;;		 -> OLED_Write_Integer@s(20), 
  3442 ;;  val             2    4[BANK0 ] int 
  3443 ;;  base            2    6[BANK0 ] int 
  3444 ;; Auto vars:     Size  Location     Type
  3445 ;;  buf             1    9[BANK0 ] PTR unsigned char 
  3446 ;;		 -> OLED_Write_Integer@s(20), 
  3447 ;;  cp              1    8[BANK0 ] PTR unsigned char 
  3448 ;;		 -> OLED_Write_Integer@s(20), 
  3449 ;; Return value:  Size  Location     Type
  3450 ;;                  1    wreg      PTR unsigned char 
  3451 ;; Registers used:
  3452 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3453 ;; Tracked objects:
  3454 ;;		On entry : 0/0
  3455 ;;		On exit  : 0/0
  3456 ;;		Unchanged: 0/0
  3457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3458 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3459 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3460 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3461 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3462 ;;Total ram usage:        7 bytes
  3463 ;; Hardware stack levels used:    1
  3464 ;; Hardware stack levels required when called:    2
  3465 ;; This function calls:
  3466 ;;		_utoa
  3467 ;; This function is called by:
  3468 ;;		_OLED_Write_Integer
  3469 ;; This function uses a non-reentrant model
  3470 ;;
  3471                           
  3472                           
  3473                           ;psect for function _itoa
  3474  0DF4                     _itoa:	
  3475                           
  3476                           ;incstack = 0
  3477                           ; Regs used in _itoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3478                           ;itoa@buf stored from wreg
  3479  0DF4  0020               	movlb	0	; select bank0
  3480  0DF5  00A9               	movwf	itoa@buf
  3481  0DF6  0829               	movf	itoa@buf,w
  3482  0DF7  00FD               	movwf	??_itoa
  3483  0DF8  087D               	movf	??_itoa,w
  3484  0DF9  00A8               	movwf	itoa@cp
  3485  0DFA  1FA5               	btfss	itoa@val+1,7
  3486  0DFB  2E0C               	goto	l2053
  3487  0DFC  302D               	movlw	45
  3488  0DFD  00FD               	movwf	??_itoa
  3489  0DFE  0829               	movf	itoa@buf,w
  3490  0DFF  0086               	movwf	6
  3491  0E00  0187               	clrf	7
  3492  0E01  087D               	movf	??_itoa,w
  3493  0E02  0081               	movwf	1
  3494  0E03  3001               	movlw	1
  3495  0E04  00FD               	movwf	??_itoa
  3496  0E05  087D               	movf	??_itoa,w
  3497  0E06  07A9               	addwf	itoa@buf,f
  3498  0E07  09A4               	comf	itoa@val,f
  3499  0E08  09A5               	comf	itoa@val+1,f
  3500  0E09  0AA4               	incf	itoa@val,f
  3501  0E0A  1903               	skipnz
  3502  0E0B  0AA5               	incf	itoa@val+1,f
  3503  0E0C                     l2053:	
  3504  0E0C  0825               	movf	itoa@val+1,w
  3505  0E0D  00F9               	movwf	utoa@val+1
  3506  0E0E  0824               	movf	itoa@val,w
  3507  0E0F  00F8               	movwf	utoa@val
  3508  0E10  0827               	movf	itoa@base+1,w
  3509  0E11  00FB               	movwf	utoa@base+1
  3510  0E12  0826               	movf	itoa@base,w
  3511  0E13  00FA               	movwf	utoa@base
  3512  0E14  0829               	movf	itoa@buf,w
  3513  0E15  318F  279E         	fcall	_utoa
  3514  0E17  0008               	return
  3515  0E18                     __end_of_itoa:	
  3516                           ;	Return value of _itoa is never used
  3517                           
  3518                           
  3519                           	psect	text5
  3520  0F9E                     __ptext5:	
  3521 ;; *************** function _utoa *****************
  3522 ;; Defined at:
  3523 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\itoa.c"
  3524 ;; Parameters:    Size  Location     Type
  3525 ;;  buf             1    wreg     PTR unsigned char 
  3526 ;;		 -> OLED_Write_Integer@s(20), 
  3527 ;;  val             2    8[COMMON] unsigned int 
  3528 ;;  base            2   10[COMMON] int 
  3529 ;; Auto vars:     Size  Location     Type
  3530 ;;  buf             1    3[BANK0 ] PTR unsigned char 
  3531 ;;		 -> OLED_Write_Integer@s(20), 
  3532 ;;  v               2    0[BANK0 ] unsigned int 
  3533 ;;  c               1    2[BANK0 ] unsigned char 
  3534 ;; Return value:  Size  Location     Type
  3535 ;;                  1    wreg      PTR unsigned char 
  3536 ;; Registers used:
  3537 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3538 ;; Tracked objects:
  3539 ;;		On entry : 0/0
  3540 ;;		On exit  : 0/0
  3541 ;;		Unchanged: 0/0
  3542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3543 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3544 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3545 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3546 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3547 ;;Total ram usage:        9 bytes
  3548 ;; Hardware stack levels used:    1
  3549 ;; Hardware stack levels required when called:    1
  3550 ;; This function calls:
  3551 ;;		___lwdiv
  3552 ;;		___lwmod
  3553 ;; This function is called by:
  3554 ;;		_itoa
  3555 ;; This function uses a non-reentrant model
  3556 ;;
  3557                           
  3558                           
  3559                           ;psect for function _utoa
  3560  0F9E                     _utoa:	
  3561                           
  3562                           ;incstack = 0
  3563                           ; Regs used in _utoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3564                           ;utoa@buf stored from wreg
  3565  0F9E  0020               	movlb	0	; select bank0
  3566  0F9F  00A3               	movwf	utoa@buf
  3567  0FA0  0879               	movf	utoa@val+1,w
  3568  0FA1  00A1               	movwf	utoa@v+1
  3569  0FA2  0878               	movf	utoa@val,w
  3570  0FA3  00A0               	movwf	utoa@v
  3571  0FA4                     l1993:	
  3572  0FA4  087B               	movf	utoa@base+1,w
  3573  0FA5  00F1               	movwf	___lwdiv@divisor+1
  3574  0FA6  087A               	movf	utoa@base,w
  3575  0FA7  00F0               	movwf	___lwdiv@divisor
  3576  0FA8  0821               	movf	utoa@v+1,w
  3577  0FA9  00F3               	movwf	___lwdiv@dividend+1
  3578  0FAA  0820               	movf	utoa@v,w
  3579  0FAB  00F2               	movwf	___lwdiv@dividend
  3580  0FAC  318E  26EC  318F   	fcall	___lwdiv
  3581  0FAF  0871               	movf	?___lwdiv+1,w
  3582  0FB0  0020               	movlb	0	; select bank0
  3583  0FB1  00A1               	movwf	utoa@v+1
  3584  0FB2  0870               	movf	?___lwdiv,w
  3585  0FB3  00A0               	movwf	utoa@v
  3586  0FB4  3001               	movlw	1
  3587  0FB5  00FC               	movwf	??_utoa
  3588  0FB6  087C               	movf	??_utoa,w
  3589  0FB7  07A3               	addwf	utoa@buf,f
  3590  0FB8  0820               	movf	utoa@v,w
  3591  0FB9  0421               	iorwf	utoa@v+1,w
  3592  0FBA  1D03               	btfss	3,2
  3593  0FBB  2FA4               	goto	l1993
  3594  0FBC  0823               	movf	utoa@buf,w
  3595  0FBD  0086               	movwf	6
  3596  0FBE  0187               	clrf	7
  3597  0FBF  0181               	clrf	1
  3598  0FC0  3001               	movlw	1
  3599  0FC1  02A3               	subwf	utoa@buf,f
  3600  0FC2                     l2003:	
  3601  0FC2  087B               	movf	utoa@base+1,w
  3602  0FC3  00F1               	movwf	___lwmod@divisor+1
  3603  0FC4  087A               	movf	utoa@base,w
  3604  0FC5  00F0               	movwf	___lwmod@divisor
  3605  0FC6  0879               	movf	utoa@val+1,w
  3606  0FC7  00F3               	movwf	___lwmod@dividend+1
  3607  0FC8  0878               	movf	utoa@val,w
  3608  0FC9  00F2               	movwf	___lwmod@dividend
  3609  0FCA  318E  2690  318F   	fcall	___lwmod
  3610  0FCD  0870               	movf	?___lwmod,w
  3611  0FCE  00FC               	movwf	??_utoa
  3612  0FCF  087C               	movf	??_utoa,w
  3613  0FD0  0020               	movlb	0	; select bank0
  3614  0FD1  00A2               	movwf	utoa@c
  3615  0FD2  087B               	movf	utoa@base+1,w
  3616  0FD3  00F1               	movwf	___lwdiv@divisor+1
  3617  0FD4  087A               	movf	utoa@base,w
  3618  0FD5  00F0               	movwf	___lwdiv@divisor
  3619  0FD6  0879               	movf	utoa@val+1,w
  3620  0FD7  00F3               	movwf	___lwdiv@dividend+1
  3621  0FD8  0878               	movf	utoa@val,w
  3622  0FD9  00F2               	movwf	___lwdiv@dividend
  3623  0FDA  318E  26EC  318F   	fcall	___lwdiv
  3624  0FDD  0871               	movf	?___lwdiv+1,w
  3625  0FDE  00F9               	movwf	utoa@val+1
  3626  0FDF  0870               	movf	?___lwdiv,w
  3627  0FE0  00F8               	movwf	utoa@val
  3628  0FE1  300A               	movlw	10
  3629  0FE2  0020               	movlb	0	; select bank0
  3630  0FE3  0222               	subwf	utoa@c,w
  3631  0FE4  1C03               	skipc
  3632  0FE5  2FEA               	goto	l524
  3633  0FE6  3007               	movlw	7
  3634  0FE7  00FC               	movwf	??_utoa
  3635  0FE8  087C               	movf	??_utoa,w
  3636  0FE9  07A2               	addwf	utoa@c,f
  3637  0FEA                     l524:	
  3638  0FEA  3030               	movlw	48
  3639  0FEB  00FC               	movwf	??_utoa
  3640  0FEC  087C               	movf	??_utoa,w
  3641  0FED  07A2               	addwf	utoa@c,f
  3642  0FEE  0822               	movf	utoa@c,w
  3643  0FEF  00FC               	movwf	??_utoa
  3644  0FF0  0823               	movf	utoa@buf,w
  3645  0FF1  0086               	movwf	6
  3646  0FF2  0187               	clrf	7
  3647  0FF3  087C               	movf	??_utoa,w
  3648  0FF4  0081               	movwf	1
  3649  0FF5  3001               	movlw	1
  3650  0FF6  02A3               	subwf	utoa@buf,f
  3651  0FF7  0878               	movf	utoa@val,w
  3652  0FF8  0479               	iorwf	utoa@val+1,w
  3653  0FF9  1D03               	btfss	3,2
  3654  0FFA  2FC2               	goto	l2003
  3655                           
  3656                           ;	Return value of _utoa is never used
  3657  0FFB  3001               	movlw	1
  3658  0FFC  00FC               	movwf	??_utoa
  3659  0FFD  087C               	movf	??_utoa,w
  3660  0FFE  07A3               	addwf	utoa@buf,f
  3661  0FFF  0008               	return
  3662  1000                     __end_of_utoa:	
  3663                           
  3664                           	psect	text6
  3665  0E90                     __ptext6:	
  3666 ;; *************** function ___lwmod *****************
  3667 ;; Defined at:
  3668 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwmod.c"
  3669 ;; Parameters:    Size  Location     Type
  3670 ;;  divisor         2    0[COMMON] unsigned int 
  3671 ;;  dividend        2    2[COMMON] unsigned int 
  3672 ;; Auto vars:     Size  Location     Type
  3673 ;;  counter         1    5[COMMON] unsigned char 
  3674 ;; Return value:  Size  Location     Type
  3675 ;;                  2    0[COMMON] unsigned int 
  3676 ;; Registers used:
  3677 ;;		wreg, status,2, status,0
  3678 ;; Tracked objects:
  3679 ;;		On entry : 0/0
  3680 ;;		On exit  : 0/0
  3681 ;;		Unchanged: 0/0
  3682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3683 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3684 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3685 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3686 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3687 ;;Total ram usage:        6 bytes
  3688 ;; Hardware stack levels used:    1
  3689 ;; This function calls:
  3690 ;;		Nothing
  3691 ;; This function is called by:
  3692 ;;		_utoa
  3693 ;; This function uses a non-reentrant model
  3694 ;;
  3695                           
  3696                           
  3697                           ;psect for function ___lwmod
  3698  0E90                     ___lwmod:	
  3699                           
  3700                           ;incstack = 0
  3701                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3702  0E90  0870               	movf	___lwmod@divisor,w
  3703  0E91  0471               	iorwf	___lwmod@divisor+1,w
  3704  0E92  1903               	btfsc	3,2
  3705  0E93  2EB7               	goto	l1713
  3706  0E94  01F5               	clrf	___lwmod@counter
  3707  0E95  0AF5               	incf	___lwmod@counter,f
  3708  0E96                     l1703:	
  3709  0E96  1BF1               	btfsc	___lwmod@divisor+1,7
  3710  0E97  2EA2               	goto	l1705
  3711  0E98  3001               	movlw	1
  3712  0E99                     u2175:	
  3713  0E99  35F0               	lslf	___lwmod@divisor,f
  3714  0E9A  0DF1               	rlf	___lwmod@divisor+1,f
  3715  0E9B  0B89               	decfsz	9,f
  3716  0E9C  2E99               	goto	u2175
  3717  0E9D  3001               	movlw	1
  3718  0E9E  00F4               	movwf	??___lwmod
  3719  0E9F  0874               	movf	??___lwmod,w
  3720  0EA0  07F5               	addwf	___lwmod@counter,f
  3721  0EA1  2E96               	goto	l1703
  3722  0EA2                     l1705:	
  3723  0EA2  0871               	movf	___lwmod@divisor+1,w
  3724  0EA3  0273               	subwf	___lwmod@dividend+1,w
  3725  0EA4  1D03               	skipz
  3726  0EA5  2EA8               	goto	u2195
  3727  0EA6  0870               	movf	___lwmod@divisor,w
  3728  0EA7  0272               	subwf	___lwmod@dividend,w
  3729  0EA8                     u2195:	
  3730  0EA8  1C03               	skipc
  3731  0EA9  2EAE               	goto	l1709
  3732  0EAA  0870               	movf	___lwmod@divisor,w
  3733  0EAB  02F2               	subwf	___lwmod@dividend,f
  3734  0EAC  0871               	movf	___lwmod@divisor+1,w
  3735  0EAD  3BF3               	subwfb	___lwmod@dividend+1,f
  3736  0EAE                     l1709:	
  3737  0EAE  3001               	movlw	1
  3738  0EAF                     u2205:	
  3739  0EAF  36F1               	lsrf	___lwmod@divisor+1,f
  3740  0EB0  0CF0               	rrf	___lwmod@divisor,f
  3741  0EB1  0B89               	decfsz	9,f
  3742  0EB2  2EAF               	goto	u2205
  3743  0EB3  3001               	movlw	1
  3744  0EB4  02F5               	subwf	___lwmod@counter,f
  3745  0EB5  1D03               	btfss	3,2
  3746  0EB6  2EA2               	goto	l1705
  3747  0EB7                     l1713:	
  3748  0EB7  0873               	movf	___lwmod@dividend+1,w
  3749  0EB8  00F1               	movwf	?___lwmod+1
  3750  0EB9  0872               	movf	___lwmod@dividend,w
  3751  0EBA  00F0               	movwf	?___lwmod
  3752  0EBB  0008               	return
  3753  0EBC                     __end_of___lwmod:	
  3754                           
  3755                           	psect	text7
  3756  0EEC                     __ptext7:	
  3757 ;; *************** function ___lwdiv *****************
  3758 ;; Defined at:
  3759 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c"
  3760 ;; Parameters:    Size  Location     Type
  3761 ;;  divisor         2    0[COMMON] unsigned int 
  3762 ;;  dividend        2    2[COMMON] unsigned int 
  3763 ;; Auto vars:     Size  Location     Type
  3764 ;;  quotient        2    5[COMMON] unsigned int 
  3765 ;;  counter         1    7[COMMON] unsigned char 
  3766 ;; Return value:  Size  Location     Type
  3767 ;;                  2    0[COMMON] unsigned int 
  3768 ;; Registers used:
  3769 ;;		wreg, status,2, status,0
  3770 ;; Tracked objects:
  3771 ;;		On entry : 0/0
  3772 ;;		On exit  : 0/0
  3773 ;;		Unchanged: 0/0
  3774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3775 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3776 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3777 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3778 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3779 ;;Total ram usage:        8 bytes
  3780 ;; Hardware stack levels used:    1
  3781 ;; This function calls:
  3782 ;;		Nothing
  3783 ;; This function is called by:
  3784 ;;		_utoa
  3785 ;; This function uses a non-reentrant model
  3786 ;;
  3787                           
  3788                           
  3789                           ;psect for function ___lwdiv
  3790  0EEC                     ___lwdiv:	
  3791                           
  3792                           ;incstack = 0
  3793                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3794  0EEC  01F5               	clrf	___lwdiv@quotient
  3795  0EED  01F6               	clrf	___lwdiv@quotient+1
  3796  0EEE  0870               	movf	___lwdiv@divisor,w
  3797  0EEF  0471               	iorwf	___lwdiv@divisor+1,w
  3798  0EF0  1903               	btfsc	3,2
  3799  0EF1  2F1B               	goto	l1691
  3800  0EF2  01F7               	clrf	___lwdiv@counter
  3801  0EF3  0AF7               	incf	___lwdiv@counter,f
  3802  0EF4                     l1679:	
  3803  0EF4  1BF1               	btfsc	___lwdiv@divisor+1,7
  3804  0EF5  2F00               	goto	l1681
  3805  0EF6  3001               	movlw	1
  3806  0EF7                     u2105:	
  3807  0EF7  35F0               	lslf	___lwdiv@divisor,f
  3808  0EF8  0DF1               	rlf	___lwdiv@divisor+1,f
  3809  0EF9  0B89               	decfsz	9,f
  3810  0EFA  2EF7               	goto	u2105
  3811  0EFB  3001               	movlw	1
  3812  0EFC  00F4               	movwf	??___lwdiv
  3813  0EFD  0874               	movf	??___lwdiv,w
  3814  0EFE  07F7               	addwf	___lwdiv@counter,f
  3815  0EFF  2EF4               	goto	l1679
  3816  0F00                     l1681:	
  3817  0F00  3001               	movlw	1
  3818  0F01                     u2125:	
  3819  0F01  35F5               	lslf	___lwdiv@quotient,f
  3820  0F02  0DF6               	rlf	___lwdiv@quotient+1,f
  3821  0F03  0B89               	decfsz	9,f
  3822  0F04  2F01               	goto	u2125
  3823  0F05  0871               	movf	___lwdiv@divisor+1,w
  3824  0F06  0273               	subwf	___lwdiv@dividend+1,w
  3825  0F07  1D03               	skipz
  3826  0F08  2F0B               	goto	u2135
  3827  0F09  0870               	movf	___lwdiv@divisor,w
  3828  0F0A  0272               	subwf	___lwdiv@dividend,w
  3829  0F0B                     u2135:	
  3830  0F0B  1C03               	skipc
  3831  0F0C  2F12               	goto	l1687
  3832  0F0D  0870               	movf	___lwdiv@divisor,w
  3833  0F0E  02F2               	subwf	___lwdiv@dividend,f
  3834  0F0F  0871               	movf	___lwdiv@divisor+1,w
  3835  0F10  3BF3               	subwfb	___lwdiv@dividend+1,f
  3836  0F11  1475               	bsf	___lwdiv@quotient,0
  3837  0F12                     l1687:	
  3838  0F12  3001               	movlw	1
  3839  0F13                     u2145:	
  3840  0F13  36F1               	lsrf	___lwdiv@divisor+1,f
  3841  0F14  0CF0               	rrf	___lwdiv@divisor,f
  3842  0F15  0B89               	decfsz	9,f
  3843  0F16  2F13               	goto	u2145
  3844  0F17  3001               	movlw	1
  3845  0F18  02F7               	subwf	___lwdiv@counter,f
  3846  0F19  1D03               	btfss	3,2
  3847  0F1A  2F00               	goto	l1681
  3848  0F1B                     l1691:	
  3849  0F1B  0876               	movf	___lwdiv@quotient+1,w
  3850  0F1C  00F1               	movwf	?___lwdiv+1
  3851  0F1D  0875               	movf	___lwdiv@quotient,w
  3852  0F1E  00F0               	movwf	?___lwdiv
  3853  0F1F  0008               	return
  3854  0F20                     __end_of___lwdiv:	
  3855                           
  3856                           	psect	text8
  3857  0DD4                     __ptext8:	
  3858 ;; *************** function _OLED_Write_Float *****************
  3859 ;; Defined at:
  3860 ;;		line 316 in file "oled.c"
  3861 ;; Parameters:    Size  Location     Type
  3862 ;;  f               3   52[BANK0 ] float 
  3863 ;; Auto vars:     Size  Location     Type
  3864 ;;  status          2   57[BANK0 ] int 
  3865 ;;  buf11           1   59[BANK0 ] PTR unsigned char 
  3866 ;;		 -> ftoa@buf(17), 
  3867 ;; Return value:  Size  Location     Type
  3868 ;;                  1    wreg      void 
  3869 ;; Registers used:
  3870 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3871 ;; Tracked objects:
  3872 ;;		On entry : 0/0
  3873 ;;		On exit  : 0/0
  3874 ;;		Unchanged: 0/0
  3875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3876 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3877 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3878 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3879 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3880 ;;Total ram usage:        8 bytes
  3881 ;; Hardware stack levels used:    1
  3882 ;; Hardware stack levels required when called:    4
  3883 ;; This function calls:
  3884 ;;		_OLED_Write_String
  3885 ;;		_ftoa
  3886 ;; This function is called by:
  3887 ;;		_main
  3888 ;; This function uses a non-reentrant model
  3889 ;;
  3890                           
  3891                           
  3892                           ;psect for function _OLED_Write_Float
  3893  0DD4                     _OLED_Write_Float:	
  3894                           
  3895                           ;oled.c: 318: char* buf11;
  3896                           ;oled.c: 319: int status;
  3897                           ;oled.c: 321: buf11 = ftoa(f, &status);
  3898                           
  3899                           ;incstack = 0
  3900                           ; Regs used in _OLED_Write_Float: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3901  0DD4  0020               	movlb	0	; select bank0
  3902  0DD5  0854               	movf	OLED_Write_Float@f,w
  3903  0DD6  00C6               	movwf	ftoa@f
  3904  0DD7  0855               	movf	OLED_Write_Float@f+1,w
  3905  0DD8  00C7               	movwf	ftoa@f+1
  3906  0DD9  0856               	movf	OLED_Write_Float@f+2,w
  3907  0DDA  00C8               	movwf	ftoa@f+2
  3908  0DDB  3059               	movlw	(low (OLED_Write_Float@status| 0))& (0+255)
  3909  0DDC  00D7               	movwf	??_OLED_Write_Float
  3910  0DDD  0857               	movf	??_OLED_Write_Float,w
  3911  0DDE  00C9               	movwf	ftoa@status
  3912  0DDF  3182  2290  318D   	fcall	_ftoa
  3913  0DE2  0020               	movlb	0	; select bank0
  3914  0DE3  00D8               	movwf	??_OLED_Write_Float+1
  3915  0DE4  0858               	movf	??_OLED_Write_Float+1,w
  3916  0DE5  00DB               	movwf	OLED_Write_Float@buf11
  3917                           
  3918                           ;oled.c: 323: OLED_Write_String(buf11);
  3919  0DE6  085B               	movf	OLED_Write_Float@buf11,w
  3920  0DE7  00FC               	movwf	OLED_Write_String@s
  3921  0DE8  3000               	movlw	0
  3922  0DE9  00FD               	movwf	OLED_Write_String@s+1
  3923  0DEA  318D  254E  318D   	fcall	_OLED_Write_String
  3924                           
  3925                           ;oled.c: 324: OLED_Write_String( "     " );
  3926  0DED  307B               	movlw	low (STR_7| (0+32768))
  3927  0DEE  00FC               	movwf	OLED_Write_String@s
  3928  0DEF  308B               	movlw	high (STR_7| (0+32768))
  3929  0DF0  00FD               	movwf	OLED_Write_String@s+1
  3930  0DF1  318D  254E         	fcall	_OLED_Write_String
  3931  0DF3  0008               	return
  3932  0DF4                     __end_of_OLED_Write_Float:	
  3933                           
  3934                           	psect	text9
  3935  0290                     __ptext9:	
  3936 ;; *************** function _ftoa *****************
  3937 ;; Defined at:
  3938 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftoa.c"
  3939 ;; Parameters:    Size  Location     Type
  3940 ;;  f               3   38[BANK0 ] float 
  3941 ;;  status          1   41[BANK0 ] PTR int 
  3942 ;;		 -> OLED_Write_Float@status(2), 
  3943 ;; Auto vars:     Size  Location     Type
  3944 ;;  l               4   47[BANK0 ] unsigned long 
  3945 ;;  rem             4   43[BANK0 ] unsigned long 
  3946 ;;  cp              1   51[BANK0 ] PTR unsigned char 
  3947 ;;		 -> ftoa@buf(17), 
  3948 ;; Return value:  Size  Location     Type
  3949 ;;                  1    wreg      PTR unsigned char 
  3950 ;; Registers used:
  3951 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3952 ;; Tracked objects:
  3953 ;;		On entry : 0/0
  3954 ;;		On exit  : 0/0
  3955 ;;		Unchanged: 0/0
  3956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3957 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3958 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3959 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3960 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3961 ;;Total ram usage:       14 bytes
  3962 ;; Hardware stack levels used:    1
  3963 ;; Hardware stack levels required when called:    3
  3964 ;; This function calls:
  3965 ;;		___ftge
  3966 ;;		___ftmul
  3967 ;;		___ftneg
  3968 ;;		___ftsub
  3969 ;;		___fttol
  3970 ;;		___lltoft
  3971 ;;		_sprintf
  3972 ;; This function is called by:
  3973 ;;		_OLED_Write_Float
  3974 ;; This function uses a non-reentrant model
  3975 ;;
  3976                           
  3977                           
  3978                           ;psect for function _ftoa
  3979  0290                     _ftoa:	
  3980                           
  3981                           ;incstack = 0
  3982                           ; Regs used in _ftoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3983  0290  30A0               	movlw	(low (ftoa@buf| 0))& (0+255)
  3984  0291  0020               	movlb	0	; select bank0
  3985  0292  00CA               	movwf	??_ftoa
  3986  0293  084A               	movf	??_ftoa,w
  3987  0294  00D3               	movwf	ftoa@cp
  3988  0295  0846               	movf	ftoa@f,w
  3989  0296  00F0               	movwf	___ftge@ff1
  3990  0297  0847               	movf	ftoa@f+1,w
  3991  0298  00F1               	movwf	___ftge@ff1+1
  3992  0299  0848               	movf	ftoa@f+2,w
  3993  029A  00F2               	movwf	___ftge@ff1+2
  3994  029B  3000               	movlw	0
  3995  029C  00F3               	movwf	___ftge@ff2
  3996  029D  3000               	movlw	0
  3997  029E  00F4               	movwf	___ftge@ff2+1
  3998  029F  3000               	movlw	0
  3999  02A0  00F5               	movwf	___ftge@ff2+2
  4000  02A1  318F  2720  3182   	fcall	___ftge
  4001  02A4  1803               	btfsc	3,0
  4002  02A5  2AC2               	goto	l2067
  4003  02A6  302D               	movlw	45
  4004  02A7  0020               	movlb	0	; select bank0
  4005  02A8  00CA               	movwf	??_ftoa
  4006  02A9  0853               	movf	ftoa@cp,w
  4007  02AA  0086               	movwf	6
  4008  02AB  0187               	clrf	7
  4009  02AC  084A               	movf	??_ftoa,w
  4010  02AD  0081               	movwf	1
  4011  02AE  3001               	movlw	1
  4012  02AF  00CA               	movwf	??_ftoa
  4013  02B0  084A               	movf	??_ftoa,w
  4014  02B1  07D3               	addwf	ftoa@cp,f
  4015  02B2  0846               	movf	ftoa@f,w
  4016  02B3  00F0               	movwf	___ftneg@f1
  4017  02B4  0847               	movf	ftoa@f+1,w
  4018  02B5  00F1               	movwf	___ftneg@f1+1
  4019  02B6  0848               	movf	ftoa@f+2,w
  4020  02B7  00F2               	movwf	___ftneg@f1+2
  4021  02B8  318D  251D  3182   	fcall	___ftneg
  4022  02BB  0870               	movf	?___ftneg,w
  4023  02BC  0020               	movlb	0	; select bank0
  4024  02BD  00C6               	movwf	ftoa@f
  4025  02BE  0871               	movf	?___ftneg+1,w
  4026  02BF  00C7               	movwf	ftoa@f+1
  4027  02C0  0872               	movf	?___ftneg+2,w
  4028  02C1  00C8               	movwf	ftoa@f+2
  4029  02C2                     l2067:	
  4030  02C2  0020               	movlb	0	; select bank0
  4031  02C3  0846               	movf	ftoa@f,w
  4032  02C4  00AA               	movwf	___fttol@f1
  4033  02C5  0847               	movf	ftoa@f+1,w
  4034  02C6  00AB               	movwf	___fttol@f1+1
  4035  02C7  0848               	movf	ftoa@f+2,w
  4036  02C8  00AC               	movwf	___fttol@f1+2
  4037  02C9  3182  2209  3182   	fcall	___fttol
  4038  02CC  0020               	movlb	0	; select bank0
  4039  02CD  082D               	movf	?___fttol+3,w
  4040  02CE  00D2               	movwf	ftoa@l+3
  4041  02CF  082C               	movf	?___fttol+2,w
  4042  02D0  00D1               	movwf	ftoa@l+2
  4043  02D1  082B               	movf	?___fttol+1,w
  4044  02D2  00D0               	movwf	ftoa@l+1
  4045  02D3  082A               	movf	?___fttol,w
  4046  02D4  00CF               	movwf	ftoa@l
  4047  02D5  0852               	movf	ftoa@l+3,w
  4048  02D6  00FB               	movwf	___lltoft@c+3
  4049  02D7  0851               	movf	ftoa@l+2,w
  4050  02D8  00FA               	movwf	___lltoft@c+2
  4051  02D9  0850               	movf	ftoa@l+1,w
  4052  02DA  00F9               	movwf	___lltoft@c+1
  4053  02DB  084F               	movf	ftoa@l,w
  4054  02DC  00F8               	movwf	___lltoft@c
  4055  02DD  318E  2640  3182   	fcall	___lltoft
  4056  02E0  0878               	movf	?___lltoft,w
  4057  02E1  0020               	movlb	0	; select bank0
  4058  02E2  00A7               	movwf	___ftsub@f2
  4059  02E3  0879               	movf	?___lltoft+1,w
  4060  02E4  00A8               	movwf	___ftsub@f2+1
  4061  02E5  087A               	movf	?___lltoft+2,w
  4062  02E6  00A9               	movwf	___ftsub@f2+2
  4063  02E7  0846               	movf	ftoa@f,w
  4064  02E8  00AA               	movwf	___ftsub@f1
  4065  02E9  0847               	movf	ftoa@f+1,w
  4066  02EA  00AB               	movwf	___ftsub@f1+1
  4067  02EB  0848               	movf	ftoa@f+2,w
  4068  02EC  00AC               	movwf	___ftsub@f1+2
  4069  02ED  318D  25B6  3182   	fcall	___ftsub
  4070  02F0  0020               	movlb	0	; select bank0
  4071  02F1  0827               	movf	?___ftsub,w
  4072  02F2  00C6               	movwf	ftoa@f
  4073  02F3  0828               	movf	?___ftsub+1,w
  4074  02F4  00C7               	movwf	ftoa@f+1
  4075  02F5  0829               	movf	?___ftsub+2,w
  4076  02F6  00C8               	movwf	ftoa@f+2
  4077  02F7  0846               	movf	ftoa@f,w
  4078  02F8  00FB               	movwf	___ftmul@f2
  4079  02F9  0847               	movf	ftoa@f+1,w
  4080  02FA  00FC               	movwf	___ftmul@f2+1
  4081  02FB  0848               	movf	ftoa@f+2,w
  4082  02FC  00FD               	movwf	___ftmul@f2+2
  4083  02FD  3024               	movlw	36
  4084  02FE  00F8               	movwf	___ftmul@f1
  4085  02FF  3074               	movlw	116
  4086  0300  00F9               	movwf	___ftmul@f1+1
  4087  0301  3049               	movlw	73
  4088  0302  00FA               	movwf	___ftmul@f1+2
  4089  0303  3183  2332  3182   	fcall	___ftmul
  4090  0306  0878               	movf	?___ftmul,w
  4091  0307  0020               	movlb	0	; select bank0
  4092  0308  00AA               	movwf	___fttol@f1
  4093  0309  0879               	movf	?___ftmul+1,w
  4094  030A  00AB               	movwf	___fttol@f1+1
  4095  030B  087A               	movf	?___ftmul+2,w
  4096  030C  00AC               	movwf	___fttol@f1+2
  4097  030D  3182  2209  3182   	fcall	___fttol
  4098  0310  0020               	movlb	0	; select bank0
  4099  0311  082D               	movf	?___fttol+3,w
  4100  0312  00CE               	movwf	ftoa@rem+3
  4101  0313  082C               	movf	?___fttol+2,w
  4102  0314  00CD               	movwf	ftoa@rem+2
  4103  0315  082B               	movf	?___fttol+1,w
  4104  0316  00CC               	movwf	ftoa@rem+1
  4105  0317  082A               	movf	?___fttol,w
  4106  0318  00CB               	movwf	ftoa@rem
  4107  0319  305E               	movlw	low (STR_9| (0+32768))
  4108  031A  00AA               	movwf	sprintf@f
  4109  031B  308B               	movlw	high (STR_9| (0+32768))
  4110  031C  00AB               	movwf	sprintf@f+1
  4111  031D  0852               	movf	ftoa@l+3,w
  4112  031E  00AF               	movwf	?_sprintf+5
  4113  031F  0851               	movf	ftoa@l+2,w
  4114  0320  00AE               	movwf	?_sprintf+4
  4115  0321  0850               	movf	ftoa@l+1,w
  4116  0322  00AD               	movwf	?_sprintf+3
  4117  0323  084F               	movf	ftoa@l,w
  4118  0324  00AC               	movwf	?_sprintf+2
  4119  0325  084E               	movf	ftoa@rem+3,w
  4120  0326  00B3               	movwf	?_sprintf+9
  4121  0327  084D               	movf	ftoa@rem+2,w
  4122  0328  00B2               	movwf	?_sprintf+8
  4123  0329  084C               	movf	ftoa@rem+1,w
  4124  032A  00B1               	movwf	?_sprintf+7
  4125  032B  084B               	movf	ftoa@rem,w
  4126  032C  00B0               	movwf	?_sprintf+6
  4127  032D  0853               	movf	ftoa@cp,w
  4128  032E  3186  2617         	fcall	_sprintf
  4129  0330  30A0               	movlw	(low (ftoa@buf| 0))& (0+255)
  4130  0331  0008               	return
  4131  0332                     __end_of_ftoa:	
  4132                           
  4133                           	psect	text10
  4134  0617                     __ptext10:	
  4135 ;; *************** function _sprintf *****************
  4136 ;; Defined at:
  4137 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
  4138 ;; Parameters:    Size  Location     Type
  4139 ;;  sp              1    wreg     PTR unsigned char 
  4140 ;;		 -> ftoa@buf(17), 
  4141 ;;  f               2   10[BANK0 ] PTR const unsigned char 
  4142 ;;		 -> STR_9(11), 
  4143 ;; Auto vars:     Size  Location     Type
  4144 ;;  sp              1   32[BANK0 ] PTR unsigned char 
  4145 ;;		 -> ftoa@buf(17), 
  4146 ;;  val             4   28[BANK0 ] unsigned long 
  4147 ;;  tmpval          4    0        struct .
  4148 ;;  prec            2   35[BANK0 ] int 
  4149 ;;  width           2   33[BANK0 ] int 
  4150 ;;  cp              2    0        PTR const unsigned char 
  4151 ;;  len             2    0        unsigned int 
  4152 ;;  c               1   37[BANK0 ] char 
  4153 ;;  ap              1   27[BANK0 ] PTR void [1]
  4154 ;;		 -> ?_sprintf(2), 
  4155 ;;  flag            1   26[BANK0 ] unsigned char 
  4156 ;; Return value:  Size  Location     Type
  4157 ;;                  2   10[BANK0 ] int 
  4158 ;; Registers used:
  4159 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4160 ;; Tracked objects:
  4161 ;;		On entry : 0/0
  4162 ;;		On exit  : 0/0
  4163 ;;		Unchanged: 0/0
  4164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4165 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4166 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4167 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4168 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4169 ;;Total ram usage:       28 bytes
  4170 ;; Hardware stack levels used:    1
  4171 ;; Hardware stack levels required when called:    1
  4172 ;; This function calls:
  4173 ;;		___lldiv
  4174 ;;		___llmod
  4175 ;;		___wmul
  4176 ;;		_isdigit
  4177 ;; This function is called by:
  4178 ;;		_ftoa
  4179 ;; This function uses a non-reentrant model
  4180 ;;
  4181                           
  4182                           
  4183                           ;psect for function _sprintf
  4184  0617                     _sprintf:	
  4185                           
  4186                           ;incstack = 0
  4187                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4188                           ;sprintf@sp stored from wreg
  4189  0617  0020               	movlb	0	; select bank0
  4190  0618  00C0               	movwf	sprintf@sp
  4191                           
  4192                           ;doprnt.c: 494: va_list ap;
  4193                           ;doprnt.c: 499: signed char c;
  4194                           ;doprnt.c: 501: int width;
  4195                           ;doprnt.c: 504: int prec;
  4196                           ;doprnt.c: 508: unsigned char flag;
  4197                           ;doprnt.c: 523: union {
  4198                           ;doprnt.c: 524: unsigned long vd;
  4199                           ;doprnt.c: 525: double integ;
  4200                           ;doprnt.c: 526: } tmpval;
  4201                           ;doprnt.c: 528: unsigned long val;
  4202                           ;doprnt.c: 529: unsigned len;
  4203                           ;doprnt.c: 530: const char * cp;
  4204                           ;doprnt.c: 533: *ap = __va_start();
  4205  0619  302C               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  4206  061A  00B4               	movwf	??_sprintf
  4207  061B  0834               	movf	??_sprintf,w
  4208  061C  00BB               	movwf	sprintf@ap
  4209  061D                     l1857:	
  4210                           ;doprnt.c: 536: while(c = *f++) {
  4211                           
  4212  061D  082B               	movf	sprintf@f+1,w
  4213  061E  00B5               	movwf	??_sprintf+1
  4214  061F  082A               	movf	sprintf@f,w
  4215  0620  00B4               	movwf	??_sprintf
  4216  0621  0AAA               	incf	sprintf@f,f
  4217  0622  1903               	skipnz
  4218  0623  0AAB               	incf	sprintf@f+1,f
  4219  0624  0834               	movf	??_sprintf,w
  4220  0625  0084               	movwf	4
  4221  0626  0835               	movf	??_sprintf+1,w
  4222  0627  0085               	movwf	5
  4223  0628  0800               	movf	0,w	;code access
  4224  0629  00B6               	movwf	??_sprintf+2
  4225  062A  0836               	movf	??_sprintf+2,w
  4226  062B  00C5               	movwf	sprintf@c
  4227  062C  0845               	movf	sprintf@c,w
  4228  062D  1903               	btfsc	3,2
  4229  062E  2FF1               	goto	l1859
  4230                           
  4231                           ;doprnt.c: 538: if(c != '%')
  4232  062F  3025               	movlw	37
  4233  0630  0645               	xorwf	sprintf@c,w
  4234  0631  1903               	btfsc	3,2
  4235  0632  2E3F               	goto	l1767
  4236                           
  4237                           ;doprnt.c: 540: {
  4238                           ;doprnt.c: 541: ((*sp++ = (c)));
  4239  0633  0845               	movf	sprintf@c,w
  4240  0634  00B4               	movwf	??_sprintf
  4241  0635  0840               	movf	sprintf@sp,w
  4242  0636  0086               	movwf	6
  4243  0637  0187               	clrf	7
  4244  0638  0834               	movf	??_sprintf,w
  4245  0639  0081               	movwf	1
  4246  063A  3001               	movlw	1
  4247  063B  00B4               	movwf	??_sprintf
  4248  063C  0834               	movf	??_sprintf,w
  4249  063D  07C0               	addwf	sprintf@sp,f
  4250                           
  4251                           ;doprnt.c: 542: continue;
  4252  063E  2E1D               	goto	l1857
  4253  063F                     l1767:	
  4254                           
  4255                           ;doprnt.c: 543: }
  4256                           ;doprnt.c: 546: width = 0;
  4257  063F  01C1               	clrf	sprintf@width
  4258  0640  01C2               	clrf	sprintf@width+1
  4259                           
  4260                           ;doprnt.c: 548: flag = 0;
  4261  0641  01BA               	clrf	sprintf@flag
  4262                           
  4263                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  4264  0642  082A               	movf	sprintf@f,w
  4265  0643  0084               	movwf	4
  4266  0644  082B               	movf	sprintf@f+1,w
  4267  0645  0085               	movwf	5
  4268  0646  0800               	movf	0,w	;code access
  4269  0647  318D  252E  3186   	fcall	_isdigit
  4270  064A  1C03               	btfss	3,0
  4271  064B  2E7D               	goto	l1781
  4272                           
  4273                           ;doprnt.c: 598: width = 0;
  4274  064C  0020               	movlb	0	; select bank0
  4275  064D  01C1               	clrf	sprintf@width
  4276  064E  01C2               	clrf	sprintf@width+1
  4277  064F                     l1773:	
  4278                           ;doprnt.c: 599: do {
  4279                           
  4280                           
  4281                           ;doprnt.c: 600: width *= 10;
  4282  064F  300A               	movlw	10
  4283  0650  00F0               	movwf	___wmul@multiplier
  4284  0651  3000               	movlw	0
  4285  0652  00F1               	movwf	___wmul@multiplier+1
  4286  0653  0020               	movlb	0	; select bank0
  4287  0654  0842               	movf	sprintf@width+1,w
  4288  0655  00F3               	movwf	___wmul@multiplicand+1
  4289  0656  0841               	movf	sprintf@width,w
  4290  0657  00F2               	movwf	___wmul@multiplicand
  4291  0658  318D  2562  3186   	fcall	___wmul
  4292  065B  0871               	movf	?___wmul+1,w
  4293  065C  0020               	movlb	0	; select bank0
  4294  065D  00C2               	movwf	sprintf@width+1
  4295  065E  0870               	movf	?___wmul,w
  4296  065F  00C1               	movwf	sprintf@width
  4297                           
  4298                           ;doprnt.c: 601: width += *f++ - '0';
  4299  0660  082A               	movf	sprintf@f,w
  4300  0661  0084               	movwf	4
  4301  0662  082B               	movf	sprintf@f+1,w
  4302  0663  0085               	movwf	5
  4303  0664  0800               	movf	0,w	;code access
  4304  0665  3ED0               	addlw	208
  4305  0666  00B4               	movwf	??_sprintf
  4306  0667  30FF               	movlw	255
  4307  0668  1803               	skipnc
  4308  0669  3000               	movlw	0
  4309  066A  00B5               	movwf	??_sprintf+1
  4310  066B  0834               	movf	??_sprintf,w
  4311  066C  07C1               	addwf	sprintf@width,f
  4312  066D  0835               	movf	??_sprintf+1,w
  4313  066E  3DC2               	addwfc	sprintf@width+1,f
  4314  066F  3001               	movlw	1
  4315  0670  07AA               	addwf	sprintf@f,f
  4316  0671  3000               	movlw	0
  4317  0672  3DAB               	addwfc	sprintf@f+1,f
  4318                           
  4319                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  4320  0673  082A               	movf	sprintf@f,w
  4321  0674  0084               	movwf	4
  4322  0675  082B               	movf	sprintf@f+1,w
  4323  0676  0085               	movwf	5
  4324  0677  0800               	movf	0,w	;code access
  4325  0678  318D  252E  3186   	fcall	_isdigit
  4326  067B  1803               	btfsc	3,0
  4327  067C  2E4F               	goto	l1773
  4328  067D                     l1781:	
  4329                           
  4330                           ;doprnt.c: 608: }
  4331                           ;doprnt.c: 611: if(*f == '.') {
  4332  067D  0020               	movlb	0	; select bank0
  4333  067E  082A               	movf	sprintf@f,w
  4334  067F  0084               	movwf	4
  4335  0680  082B               	movf	sprintf@f+1,w
  4336  0681  0085               	movwf	5
  4337  0682  0012               	moviw fsr0++
  4338  0683  3A2E               	xorlw	46
  4339  0684  1D03               	btfss	3,2
  4340  0685  2EBB               	goto	l1793
  4341                           
  4342                           ;doprnt.c: 613: f++;
  4343  0686  3001               	movlw	1
  4344  0687  07AA               	addwf	sprintf@f,f
  4345  0688  3000               	movlw	0
  4346  0689  3DAB               	addwfc	sprintf@f+1,f
  4347                           
  4348                           ;doprnt.c: 620: {
  4349                           ;doprnt.c: 621: prec = 0;
  4350  068A  01C3               	clrf	sprintf@prec
  4351  068B  01C4               	clrf	sprintf@prec+1
  4352  068C                     l1791:	
  4353                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  4354                           
  4355  068C  082A               	movf	sprintf@f,w
  4356  068D  0084               	movwf	4
  4357  068E  082B               	movf	sprintf@f+1,w
  4358  068F  0085               	movwf	5
  4359  0690  0800               	movf	0,w	;code access
  4360  0691  318D  252E  3186   	fcall	_isdigit
  4361  0694  1C03               	btfss	3,0
  4362  0695  2EC6               	goto	l1799
  4363                           
  4364                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  4365  0696  0020               	movlb	0	; select bank0
  4366  0697  082A               	movf	sprintf@f,w
  4367  0698  0084               	movwf	4
  4368  0699  082B               	movf	sprintf@f+1,w
  4369  069A  0085               	movwf	5
  4370  069B  0800               	movf	0,w	;code access
  4371  069C  00B4               	movwf	??_sprintf
  4372  069D  01B5               	clrf	??_sprintf+1
  4373  069E  0844               	movf	sprintf@prec+1,w
  4374  069F  00F1               	movwf	___wmul@multiplier+1
  4375  06A0  0843               	movf	sprintf@prec,w
  4376  06A1  00F0               	movwf	___wmul@multiplier
  4377  06A2  300A               	movlw	10
  4378  06A3  00F2               	movwf	___wmul@multiplicand
  4379  06A4  3000               	movlw	0
  4380  06A5  00F3               	movwf	___wmul@multiplicand+1
  4381  06A6  318D  2562  3186   	fcall	___wmul
  4382  06A9  0020               	movlb	0	; select bank0
  4383  06AA  0834               	movf	??_sprintf,w
  4384  06AB  0770               	addwf	?___wmul,w
  4385  06AC  00B6               	movwf	??_sprintf+2
  4386  06AD  0835               	movf	??_sprintf+1,w
  4387  06AE  3D71               	addwfc	?___wmul+1,w
  4388  06AF  00B7               	movwf	??_sprintf+3
  4389  06B0  0836               	movf	??_sprintf+2,w
  4390  06B1  3ED0               	addlw	208
  4391  06B2  00C3               	movwf	sprintf@prec
  4392  06B3  30FF               	movlw	255
  4393  06B4  3D37               	addwfc	??_sprintf+3,w
  4394  06B5  00C4               	movwf	sprintf@prec+1
  4395  06B6  3001               	movlw	1
  4396  06B7  07AA               	addwf	sprintf@f,f
  4397  06B8  3000               	movlw	0
  4398  06B9  3DAB               	addwfc	sprintf@f+1,f
  4399  06BA  2E8C               	goto	l1791
  4400  06BB                     l1793:	
  4401                           ;doprnt.c: 624: }
  4402                           ;doprnt.c: 625: } else {
  4403                           
  4404                           
  4405                           ;doprnt.c: 626: prec = 0;
  4406  06BB  0020               	movlb	0	; select bank0
  4407  06BC  01C3               	clrf	sprintf@prec
  4408  06BD  01C4               	clrf	sprintf@prec+1
  4409                           
  4410                           ;doprnt.c: 635: switch(c = *f++) {
  4411                           
  4412                           ;doprnt.c: 630: }
  4413                           ;doprnt.c: 633: loop:
  4414  06BE  2EC6               	goto	l1799
  4415  06BF                     l218:	
  4416                           ;doprnt.c: 641: case 'l':
  4417                           
  4418                           ;doprnt.c: 638: goto alldone;
  4419                           
  4420                           ;doprnt.c: 637: case 0:
  4421                           
  4422                           
  4423                           ;doprnt.c: 643: flag |= 0x10;
  4424  06BF  163A               	bsf	sprintf@flag,4
  4425                           
  4426                           ;doprnt.c: 644: goto loop;
  4427  06C0  2EC6               	goto	l1799
  4428  06C1                     l1795:	
  4429                           ;doprnt.c: 817: case 'u':
  4430                           
  4431                           ;doprnt.c: 813: continue;
  4432                           
  4433                           ;doprnt.c: 802: default:
  4434                           
  4435                           
  4436                           ;doprnt.c: 818: flag |= 0xC0;
  4437  06C1  30C0               	movlw	192
  4438  06C2  00B4               	movwf	??_sprintf
  4439  06C3  0834               	movf	??_sprintf,w
  4440  06C4  04BA               	iorwf	sprintf@flag,f
  4441                           
  4442                           ;doprnt.c: 822: }
  4443                           
  4444                           ;doprnt.c: 819: break;
  4445  06C5  2EDE               	goto	l221
  4446  06C6                     l1799:	
  4447  06C6  0020               	movlb	0	; select bank0
  4448  06C7  082B               	movf	sprintf@f+1,w
  4449  06C8  00B5               	movwf	??_sprintf+1
  4450  06C9  082A               	movf	sprintf@f,w
  4451  06CA  00B4               	movwf	??_sprintf
  4452  06CB  0AAA               	incf	sprintf@f,f
  4453  06CC  1903               	skipnz
  4454  06CD  0AAB               	incf	sprintf@f+1,f
  4455  06CE  0834               	movf	??_sprintf,w
  4456  06CF  0084               	movwf	4
  4457  06D0  0835               	movf	??_sprintf+1,w
  4458  06D1  0085               	movwf	5
  4459  06D2  0800               	movf	0,w	;code access
  4460  06D3  00C5               	movwf	sprintf@c
  4461                           
  4462                           ; Switch size 1, requested type "space"
  4463                           ; Number of cases is 3, Range of values is 0 to 117
  4464                           ; switch strategies available:
  4465                           ; Name         Instructions Cycles
  4466                           ; simple_byte           10     6 (average)
  4467                           ; direct_byte          242     6 (fixed)
  4468                           ; jumptable            260     6 (fixed)
  4469                           ;	Chosen strategy is simple_byte
  4470  06D4  3A00               	xorlw	0	; case 0
  4471  06D5  1903               	skipnz
  4472  06D6  2FF1               	goto	l1859
  4473  06D7  3A6C               	xorlw	108	; case 108
  4474  06D8  1903               	skipnz
  4475  06D9  2EBF               	goto	l218
  4476  06DA  3A19               	xorlw	25	; case 117
  4477  06DB  1903               	skipnz
  4478  06DC  2EC1               	goto	l1795
  4479  06DD  2E1D               	goto	l1857
  4480  06DE                     l221:	
  4481                           
  4482                           ;doprnt.c: 1273: {
  4483                           ;doprnt.c: 1281: if(flag & 0x10)
  4484  06DE  1E3A               	btfss	sprintf@flag,4
  4485  06DF  2EED               	goto	l1805
  4486                           
  4487                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  4488  06E0  083B               	movf	sprintf@ap,w
  4489  06E1  0086               	movwf	6
  4490  06E2  0187               	clrf	7
  4491  06E3  3F40               	moviw [0]fsr1
  4492  06E4  00BC               	movwf	sprintf@val
  4493  06E5  3F41               	moviw [1]fsr1
  4494  06E6  00BD               	movwf	sprintf@val+1
  4495  06E7  3F42               	moviw [2]fsr1
  4496  06E8  00BE               	movwf	sprintf@val+2
  4497  06E9  3F43               	moviw [3]fsr1
  4498  06EA  00BF               	movwf	sprintf@val+3
  4499  06EB  3004               	movlw	4
  4500  06EC  2EFB               	goto	L1
  4501  06ED                     l1805:	
  4502                           
  4503                           ;doprnt.c: 1283: else
  4504                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  4505  06ED  083B               	movf	sprintf@ap,w
  4506  06EE  0086               	movwf	6
  4507  06EF  0187               	clrf	7
  4508  06F0  3F40               	moviw [0]fsr1
  4509  06F1  00B4               	movwf	??_sprintf
  4510  06F2  3F41               	moviw [1]fsr1
  4511  06F3  00B5               	movwf	??_sprintf+1
  4512  06F4  0834               	movf	??_sprintf,w
  4513  06F5  00BC               	movwf	sprintf@val
  4514  06F6  0835               	movf	??_sprintf+1,w
  4515  06F7  00BD               	movwf	sprintf@val+1
  4516  06F8  01BE               	clrf	sprintf@val+2
  4517  06F9  01BF               	clrf	sprintf@val+3
  4518  06FA  3002               	movlw	2
  4519  06FB                     L1:	
  4520  06FB  00B4               	movwf	??_sprintf
  4521  06FC  0834               	movf	??_sprintf,w
  4522  06FD  07BB               	addwf	sprintf@ap,f
  4523                           
  4524                           ;doprnt.c: 1287: }
  4525                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  4526  06FE  0843               	movf	sprintf@prec,w
  4527  06FF  0444               	iorwf	sprintf@prec+1,w
  4528  0700  1D03               	btfss	3,2
  4529  0701  2F0C               	goto	l1815
  4530  0702  083F               	movf	sprintf@val+3,w
  4531  0703  043E               	iorwf	sprintf@val+2,w
  4532  0704  043D               	iorwf	sprintf@val+1,w
  4533  0705  043C               	iorwf	sprintf@val,w
  4534  0706  1D03               	skipz
  4535  0707  2F0C               	goto	l1815
  4536                           
  4537                           ;doprnt.c: 1291: prec++;
  4538  0708  3001               	movlw	1
  4539  0709  07C3               	addwf	sprintf@prec,f
  4540  070A  3000               	movlw	0
  4541  070B  3DC4               	addwfc	sprintf@prec+1,f
  4542  070C                     l1815:	
  4543                           
  4544                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4545  070C  01C5               	clrf	sprintf@c
  4546  070D  0AC5               	incf	sprintf@c,f
  4547  070E  300A               	movlw	10
  4548  070F  0645               	xorwf	sprintf@c,w
  4549  0710  1903               	btfsc	3,2
  4550  0711  2F3F               	goto	l1827
  4551  0712                     l1821:	
  4552                           
  4553                           ;doprnt.c: 1306: if(val < dpowers[c])
  4554  0712  0845               	movf	sprintf@c,w
  4555  0713  00B4               	movwf	??_sprintf
  4556  0714  01B5               	clrf	??_sprintf+1
  4557  0715  35B4               	lslf	??_sprintf,f
  4558  0716  0DB5               	rlf	??_sprintf+1,f
  4559  0717  35B4               	lslf	??_sprintf,f
  4560  0718  0DB5               	rlf	??_sprintf+1,f
  4561  0719  3000               	movlw	low (_dpowers| (0+32768))
  4562  071A  0734               	addwf	??_sprintf,w
  4563  071B  0084               	movwf	4
  4564  071C  3088               	movlw	high (_dpowers| (0+32768))
  4565  071D  3D35               	addwfc	??_sprintf+1,w
  4566  071E  0085               	movwf	5
  4567  071F  3F00               	moviw [0]fsr0
  4568  0720  00B6               	movwf	??_sprintf+2
  4569  0721  3F01               	moviw [1]fsr0
  4570  0722  00B7               	movwf	??_sprintf+3
  4571  0723  3F02               	moviw [2]fsr0
  4572  0724  00B8               	movwf	??_sprintf+4
  4573  0725  3F03               	moviw [3]fsr0
  4574  0726  00B9               	movwf	??_sprintf+5
  4575  0727  0839               	movf	??_sprintf+5,w
  4576  0728  023F               	subwf	sprintf@val+3,w
  4577  0729  1D03               	skipz
  4578  072A  2F35               	goto	u2355
  4579  072B  0838               	movf	??_sprintf+4,w
  4580  072C  023E               	subwf	sprintf@val+2,w
  4581  072D  1D03               	skipz
  4582  072E  2F35               	goto	u2355
  4583  072F  0837               	movf	??_sprintf+3,w
  4584  0730  023D               	subwf	sprintf@val+1,w
  4585  0731  1D03               	skipz
  4586  0732  2F35               	goto	u2355
  4587  0733  0836               	movf	??_sprintf+2,w
  4588  0734  023C               	subwf	sprintf@val,w
  4589  0735                     u2355:	
  4590  0735  1C03               	btfss	3,0
  4591  0736  2F3F               	goto	l1827
  4592                           
  4593                           ;doprnt.c: 1307: break;
  4594  0737  3001               	movlw	1
  4595  0738  00B4               	movwf	??_sprintf
  4596  0739  0834               	movf	??_sprintf,w
  4597  073A  07C5               	addwf	sprintf@c,f
  4598  073B  300A               	movlw	10
  4599  073C  0645               	xorwf	sprintf@c,w
  4600  073D  1D03               	btfss	3,2
  4601  073E  2F12               	goto	l1821
  4602  073F                     l1827:	
  4603                           
  4604                           ;doprnt.c: 1339: if(c < prec)
  4605  073F  0845               	movf	sprintf@c,w
  4606  0740  00B4               	movwf	??_sprintf
  4607  0741  01B5               	clrf	??_sprintf+1
  4608  0742  1BB4               	btfsc	??_sprintf,7
  4609  0743  03B5               	decf	??_sprintf+1,f
  4610  0744  0835               	movf	??_sprintf+1,w
  4611  0745  3A80               	xorlw	128
  4612  0746  00B6               	movwf	??_sprintf+2
  4613  0747  0844               	movf	sprintf@prec+1,w
  4614  0748  3A80               	xorlw	128
  4615  0749  0236               	subwf	??_sprintf+2,w
  4616  074A  1D03               	skipz
  4617  074B  2F4E               	goto	u2375
  4618  074C  0843               	movf	sprintf@prec,w
  4619  074D  0234               	subwf	??_sprintf,w
  4620  074E                     u2375:	
  4621  074E  1803               	skipnc
  4622  074F  2F56               	goto	l1831
  4623                           
  4624                           ;doprnt.c: 1340: c = prec;
  4625  0750  0020               	movlb	0	; select bank0
  4626  0751  0843               	movf	sprintf@prec,w
  4627  0752  00B4               	movwf	??_sprintf
  4628  0753  0834               	movf	??_sprintf,w
  4629  0754  00C5               	movwf	sprintf@c
  4630  0755  2F6E               	goto	l1835
  4631  0756                     l1831:	
  4632                           
  4633                           ;doprnt.c: 1341: else if(prec < c)
  4634  0756  0020               	movlb	0	; select bank0
  4635  0757  0845               	movf	sprintf@c,w
  4636  0758  00B4               	movwf	??_sprintf
  4637  0759  01B5               	clrf	??_sprintf+1
  4638  075A  1BB4               	btfsc	??_sprintf,7
  4639  075B  03B5               	decf	??_sprintf+1,f
  4640  075C  0844               	movf	sprintf@prec+1,w
  4641  075D  3A80               	xorlw	128
  4642  075E  00B6               	movwf	??_sprintf+2
  4643  075F  0835               	movf	??_sprintf+1,w
  4644  0760  3A80               	xorlw	128
  4645  0761  0236               	subwf	??_sprintf+2,w
  4646  0762  1D03               	skipz
  4647  0763  2F66               	goto	u2385
  4648  0764  0834               	movf	??_sprintf,w
  4649  0765  0243               	subwf	sprintf@prec,w
  4650  0766                     u2385:	
  4651  0766  1803               	skipnc
  4652  0767  2F6E               	goto	l1835
  4653                           
  4654                           ;doprnt.c: 1342: prec = c;
  4655  0768  0020               	movlb	0	; select bank0
  4656  0769  0845               	movf	sprintf@c,w
  4657  076A  00C3               	movwf	sprintf@prec
  4658  076B  01C4               	clrf	sprintf@prec+1
  4659  076C  1BC3               	btfsc	sprintf@prec,7
  4660  076D  03C4               	decf	sprintf@prec+1,f
  4661  076E                     l1835:	
  4662                           
  4663                           ;doprnt.c: 1381: if(width > c)
  4664  076E  0020               	movlb	0	; select bank0
  4665  076F  0845               	movf	sprintf@c,w
  4666  0770  00B4               	movwf	??_sprintf
  4667  0771  01B5               	clrf	??_sprintf+1
  4668  0772  1BB4               	btfsc	??_sprintf,7
  4669  0773  03B5               	decf	??_sprintf+1,f
  4670  0774  0835               	movf	??_sprintf+1,w
  4671  0775  3A80               	xorlw	128
  4672  0776  00B6               	movwf	??_sprintf+2
  4673  0777  0842               	movf	sprintf@width+1,w
  4674  0778  3A80               	xorlw	128
  4675  0779  0236               	subwf	??_sprintf+2,w
  4676  077A  1D03               	skipz
  4677  077B  2F7E               	goto	u2395
  4678  077C  0841               	movf	sprintf@width,w
  4679  077D  0234               	subwf	??_sprintf,w
  4680  077E                     u2395:	
  4681  077E  1803               	skipnc
  4682  077F  2F8B               	goto	l1839
  4683                           
  4684                           ;doprnt.c: 1382: width -= c;
  4685  0780  0020               	movlb	0	; select bank0
  4686  0781  0845               	movf	sprintf@c,w
  4687  0782  00B4               	movwf	??_sprintf
  4688  0783  01B5               	clrf	??_sprintf+1
  4689  0784  1BB4               	btfsc	??_sprintf,7
  4690  0785  03B5               	decf	??_sprintf+1,f
  4691  0786  0834               	movf	??_sprintf,w
  4692  0787  02C1               	subwf	sprintf@width,f
  4693  0788  0835               	movf	??_sprintf+1,w
  4694  0789  3BC2               	subwfb	sprintf@width+1,f
  4695  078A  2F8E               	goto	l1841
  4696  078B                     l1839:	
  4697                           
  4698                           ;doprnt.c: 1383: else
  4699                           ;doprnt.c: 1384: width = 0;
  4700  078B  0020               	movlb	0	; select bank0
  4701  078C  01C1               	clrf	sprintf@width
  4702  078D  01C2               	clrf	sprintf@width+1
  4703  078E                     l1841:	
  4704                           
  4705                           ;doprnt.c: 1422: {
  4706                           ;doprnt.c: 1424: if(width
  4707                           ;doprnt.c: 1428: )
  4708  078E  0841               	movf	sprintf@width,w
  4709  078F  0442               	iorwf	sprintf@width+1,w
  4710  0790  1903               	btfsc	3,2
  4711  0791  2FE6               	goto	l1855
  4712                           
  4713                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  4714                           
  4715                           ;doprnt.c: 1429: do
  4716  0792  3020               	movlw	32
  4717  0793  00B4               	movwf	??_sprintf
  4718  0794  0840               	movf	sprintf@sp,w
  4719  0795  0086               	movwf	6
  4720  0796  0187               	clrf	7
  4721  0797  0834               	movf	??_sprintf,w
  4722  0798  0081               	movwf	1
  4723  0799  3001               	movlw	1
  4724  079A  00B4               	movwf	??_sprintf
  4725  079B  0834               	movf	??_sprintf,w
  4726  079C  07C0               	addwf	sprintf@sp,f
  4727                           
  4728                           ;doprnt.c: 1431: while(--width);
  4729  079D  30FF               	movlw	255
  4730  079E  07C1               	addwf	sprintf@width,f
  4731  079F  30FF               	movlw	255
  4732  07A0  3DC2               	addwfc	sprintf@width+1,f
  4733  07A1  2F8E               	goto	l1841
  4734  07A2                     l1849:	
  4735                           ;doprnt.c: 1469: }
  4736                           ;doprnt.c: 1474: while(prec--) {
  4737                           
  4738                           
  4739                           ;doprnt.c: 1478: {
  4740                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  4741  07A2  3000               	movlw	0
  4742  07A3  00A3               	movwf	___llmod@divisor+3
  4743  07A4  3000               	movlw	0
  4744  07A5  00A2               	movwf	___llmod@divisor+2
  4745  07A6  3000               	movlw	0
  4746  07A7  00A1               	movwf	___llmod@divisor+1
  4747  07A8  300A               	movlw	10
  4748  07A9  00A0               	movwf	___llmod@divisor
  4749  07AA  0844               	movf	sprintf@prec+1,w
  4750  07AB  0085               	movwf	5
  4751  07AC  0843               	movf	sprintf@prec,w
  4752  07AD  0084               	movwf	4
  4753  07AE  3584               	lslf	4,f
  4754  07AF  0D85               	rlf	5,f
  4755  07B0  3584               	lslf	4,f
  4756  07B1  0D85               	rlf	5,f
  4757  07B2  3000               	movlw	low (_dpowers| (0+32768))
  4758  07B3  0784               	addwf	4,f
  4759  07B4  3088               	movlw	high (_dpowers| (0+32768))
  4760  07B5  3D85               	addwfc	5,f
  4761  07B6  3F00               	moviw [0]fsr0
  4762  07B7  00F0               	movwf	___lldiv@divisor
  4763  07B8  3F01               	moviw [1]fsr0
  4764  07B9  00F1               	movwf	___lldiv@divisor+1
  4765  07BA  3F02               	moviw [2]fsr0
  4766  07BB  00F2               	movwf	___lldiv@divisor+2
  4767  07BC  3F03               	moviw [3]fsr0
  4768  07BD  00F3               	movwf	___lldiv@divisor+3
  4769  07BE  083F               	movf	sprintf@val+3,w
  4770  07BF  00F7               	movwf	___lldiv@dividend+3
  4771  07C0  083E               	movf	sprintf@val+2,w
  4772  07C1  00F6               	movwf	___lldiv@dividend+2
  4773  07C2  083D               	movf	sprintf@val+1,w
  4774  07C3  00F5               	movwf	___lldiv@dividend+1
  4775  07C4  083C               	movf	sprintf@val,w
  4776  07C5  00F4               	movwf	___lldiv@dividend
  4777  07C6  3180  2010  3186   	fcall	___lldiv
  4778  07C9  0873               	movf	?___lldiv+3,w
  4779  07CA  0020               	movlb	0	; select bank0
  4780  07CB  00A7               	movwf	___llmod@dividend+3
  4781  07CC  0872               	movf	?___lldiv+2,w
  4782  07CD  00A6               	movwf	___llmod@dividend+2
  4783  07CE  0871               	movf	?___lldiv+1,w
  4784  07CF  00A5               	movwf	___llmod@dividend+1
  4785  07D0  0870               	movf	?___lldiv,w
  4786  07D1  00A4               	movwf	___llmod@dividend
  4787  07D2  318F  275B  3186   	fcall	___llmod
  4788  07D5  0020               	movlb	0	; select bank0
  4789  07D6  0820               	movf	?___llmod,w
  4790  07D7  3E30               	addlw	48
  4791  07D8  00B4               	movwf	??_sprintf
  4792  07D9  0834               	movf	??_sprintf,w
  4793  07DA  00C5               	movwf	sprintf@c
  4794                           
  4795                           ;doprnt.c: 1523: }
  4796                           ;doprnt.c: 1524: ((*sp++ = (c)));
  4797  07DB  0845               	movf	sprintf@c,w
  4798  07DC  00B4               	movwf	??_sprintf
  4799  07DD  0840               	movf	sprintf@sp,w
  4800  07DE  0086               	movwf	6
  4801  07DF  0187               	clrf	7
  4802  07E0  0834               	movf	??_sprintf,w
  4803  07E1  0081               	movwf	1
  4804  07E2  3001               	movlw	1
  4805  07E3  00B4               	movwf	??_sprintf
  4806  07E4  0834               	movf	??_sprintf,w
  4807  07E5  07C0               	addwf	sprintf@sp,f
  4808  07E6                     l1855:	
  4809  07E6  30FF               	movlw	255
  4810  07E7  07C3               	addwf	sprintf@prec,f
  4811  07E8  30FF               	movlw	255
  4812  07E9  3DC4               	addwfc	sprintf@prec+1,f
  4813  07EA  0A43               	incf	sprintf@prec,w
  4814  07EB  1D03               	skipz
  4815  07EC  2FA2               	goto	l1849
  4816  07ED  0A44               	incf	sprintf@prec+1,w
  4817  07EE  1903               	btfsc	3,2
  4818  07EF  2E1D               	goto	l1857
  4819  07F0  2FA2               	goto	l1849
  4820  07F1                     l1859:	
  4821                           ;doprnt.c: 1525: }
  4822                           ;doprnt.c: 1533: }
  4823                           ;doprnt.c: 1535: alldone:
  4824                           
  4825                           
  4826                           ;doprnt.c: 1538: *sp = 0;
  4827  07F1  0840               	movf	sprintf@sp,w
  4828  07F2  0086               	movwf	6
  4829  07F3  0187               	clrf	7
  4830  07F4  0181               	clrf	1
  4831  07F5  0008               	return
  4832  07F6                     __end_of_sprintf:	
  4833                           ;doprnt.c: 1540: return 0;
  4834                           ;	Return value of _sprintf is never used
  4835                           
  4836                           
  4837                           	psect	text11
  4838  0D2E                     __ptext11:	
  4839 ;; *************** function _isdigit *****************
  4840 ;; Defined at:
  4841 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\isdigit.c"
  4842 ;; Parameters:    Size  Location     Type
  4843 ;;  c               1    wreg     unsigned char 
  4844 ;; Auto vars:     Size  Location     Type
  4845 ;;  c               1    1[COMMON] unsigned char 
  4846 ;; Return value:  Size  Location     Type
  4847 ;;		None               void
  4848 ;; Registers used:
  4849 ;;		wreg, status,2, status,0
  4850 ;; Tracked objects:
  4851 ;;		On entry : 0/0
  4852 ;;		On exit  : 0/0
  4853 ;;		Unchanged: 0/0
  4854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4856 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4858 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4859 ;;Total ram usage:        2 bytes
  4860 ;; Hardware stack levels used:    1
  4861 ;; This function calls:
  4862 ;;		Nothing
  4863 ;; This function is called by:
  4864 ;;		_sprintf
  4865 ;; This function uses a non-reentrant model
  4866 ;;
  4867                           
  4868                           
  4869                           ;psect for function _isdigit
  4870  0D2E                     _isdigit:	
  4871                           
  4872                           ;incstack = 0
  4873                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4874                           ;isdigit@c stored from wreg
  4875  0D2E  00F1               	movwf	isdigit@c
  4876  0D2F  01F0               	clrf	_isdigit$512
  4877  0D30  303A               	movlw	58
  4878  0D31  0271               	subwf	isdigit@c,w
  4879  0D32  1803               	skipnc
  4880  0D33  2D3A               	goto	l1537
  4881  0D34  3030               	movlw	48
  4882  0D35  0271               	subwf	isdigit@c,w
  4883  0D36  1C03               	skipc
  4884  0D37  2D3A               	goto	l1537
  4885  0D38  01F0               	clrf	_isdigit$512
  4886  0D39  0AF0               	incf	_isdigit$512,f
  4887  0D3A                     l1537:	
  4888  0D3A  0C70               	rrf	_isdigit$512,w
  4889  0D3B  0008               	return
  4890  0D3C                     __end_of_isdigit:	
  4891                           
  4892                           	psect	text12
  4893  0D62                     __ptext12:	
  4894 ;; *************** function ___wmul *****************
  4895 ;; Defined at:
  4896 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  4897 ;; Parameters:    Size  Location     Type
  4898 ;;  multiplier      2    0[COMMON] unsigned int 
  4899 ;;  multiplicand    2    2[COMMON] unsigned int 
  4900 ;; Auto vars:     Size  Location     Type
  4901 ;;  product         2    4[COMMON] unsigned int 
  4902 ;; Return value:  Size  Location     Type
  4903 ;;                  2    0[COMMON] unsigned int 
  4904 ;; Registers used:
  4905 ;;		wreg, status,2, status,0
  4906 ;; Tracked objects:
  4907 ;;		On entry : 0/0
  4908 ;;		On exit  : 0/0
  4909 ;;		Unchanged: 0/0
  4910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4911 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4912 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4914 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4915 ;;Total ram usage:        6 bytes
  4916 ;; Hardware stack levels used:    1
  4917 ;; This function calls:
  4918 ;;		Nothing
  4919 ;; This function is called by:
  4920 ;;		_sprintf
  4921 ;; This function uses a non-reentrant model
  4922 ;;
  4923                           
  4924                           
  4925                           ;psect for function ___wmul
  4926  0D62                     ___wmul:	
  4927                           
  4928                           ;incstack = 0
  4929                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4930  0D62  01F4               	clrf	___wmul@product
  4931  0D63  01F5               	clrf	___wmul@product+1
  4932  0D64                     l1543:	
  4933  0D64  1C70               	btfss	___wmul@multiplier,0
  4934  0D65  2D6A               	goto	l244
  4935  0D66  0872               	movf	___wmul@multiplicand,w
  4936  0D67  07F4               	addwf	___wmul@product,f
  4937  0D68  0873               	movf	___wmul@multiplicand+1,w
  4938  0D69  3DF5               	addwfc	___wmul@product+1,f
  4939  0D6A                     l244:	
  4940  0D6A  3001               	movlw	1
  4941  0D6B                     u1705:	
  4942  0D6B  35F2               	lslf	___wmul@multiplicand,f
  4943  0D6C  0DF3               	rlf	___wmul@multiplicand+1,f
  4944  0D6D  0B89               	decfsz	9,f
  4945  0D6E  2D6B               	goto	u1705
  4946  0D6F  3001               	movlw	1
  4947  0D70                     u1715:	
  4948  0D70  36F1               	lsrf	___wmul@multiplier+1,f
  4949  0D71  0CF0               	rrf	___wmul@multiplier,f
  4950  0D72  0B89               	decfsz	9,f
  4951  0D73  2D70               	goto	u1715
  4952  0D74  0870               	movf	___wmul@multiplier,w
  4953  0D75  0471               	iorwf	___wmul@multiplier+1,w
  4954  0D76  1D03               	btfss	3,2
  4955  0D77  2D64               	goto	l1543
  4956  0D78  0875               	movf	___wmul@product+1,w
  4957  0D79  00F1               	movwf	?___wmul+1
  4958  0D7A  0874               	movf	___wmul@product,w
  4959  0D7B  00F0               	movwf	?___wmul
  4960  0D7C  0008               	return
  4961  0D7D                     __end_of___wmul:	
  4962                           
  4963                           	psect	text13
  4964  0F5B                     __ptext13:	
  4965 ;; *************** function ___llmod *****************
  4966 ;; Defined at:
  4967 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\llmod.c"
  4968 ;; Parameters:    Size  Location     Type
  4969 ;;  divisor         4    0[BANK0 ] unsigned long 
  4970 ;;  dividend        4    4[BANK0 ] unsigned long 
  4971 ;; Auto vars:     Size  Location     Type
  4972 ;;  counter         1    9[BANK0 ] unsigned char 
  4973 ;; Return value:  Size  Location     Type
  4974 ;;                  4    0[BANK0 ] unsigned long 
  4975 ;; Registers used:
  4976 ;;		wreg, status,2, status,0
  4977 ;; Tracked objects:
  4978 ;;		On entry : 0/0
  4979 ;;		On exit  : 0/0
  4980 ;;		Unchanged: 0/0
  4981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4982 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4983 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4984 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4985 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4986 ;;Total ram usage:       10 bytes
  4987 ;; Hardware stack levels used:    1
  4988 ;; This function calls:
  4989 ;;		Nothing
  4990 ;; This function is called by:
  4991 ;;		_sprintf
  4992 ;; This function uses a non-reentrant model
  4993 ;;
  4994                           
  4995                           
  4996                           ;psect for function ___llmod
  4997  0F5B                     ___llmod:	
  4998                           
  4999                           ;incstack = 0
  5000                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5001  0F5B  0020               	movlb	0	; select bank0
  5002  0F5C  0823               	movf	___llmod@divisor+3,w
  5003  0F5D  0422               	iorwf	___llmod@divisor+2,w
  5004  0F5E  0421               	iorwf	___llmod@divisor+1,w
  5005  0F5F  0420               	iorwf	___llmod@divisor,w
  5006  0F60  1903               	skipnz
  5007  0F61  2F95               	goto	l1665
  5008  0F62  01A9               	clrf	___llmod@counter
  5009  0F63  0AA9               	incf	___llmod@counter,f
  5010  0F64                     l1655:	
  5011  0F64  1BA3               	btfsc	___llmod@divisor+3,7
  5012  0F65  2F72               	goto	l1657
  5013  0F66  3001               	movlw	1
  5014  0F67                     u2045:	
  5015  0F67  35A0               	lslf	___llmod@divisor,f
  5016  0F68  0DA1               	rlf	___llmod@divisor+1,f
  5017  0F69  0DA2               	rlf	___llmod@divisor+2,f
  5018  0F6A  0DA3               	rlf	___llmod@divisor+3,f
  5019  0F6B  0B89               	decfsz	9,f
  5020  0F6C  2F67               	goto	u2045
  5021  0F6D  3001               	movlw	1
  5022  0F6E  00A8               	movwf	??___llmod
  5023  0F6F  0828               	movf	??___llmod,w
  5024  0F70  07A9               	addwf	___llmod@counter,f
  5025  0F71  2F64               	goto	l1655
  5026  0F72                     l1657:	
  5027  0F72  0823               	movf	___llmod@divisor+3,w
  5028  0F73  0227               	subwf	___llmod@dividend+3,w
  5029  0F74  1D03               	skipz
  5030  0F75  2F80               	goto	u2065
  5031  0F76  0822               	movf	___llmod@divisor+2,w
  5032  0F77  0226               	subwf	___llmod@dividend+2,w
  5033  0F78  1D03               	skipz
  5034  0F79  2F80               	goto	u2065
  5035  0F7A  0821               	movf	___llmod@divisor+1,w
  5036  0F7B  0225               	subwf	___llmod@dividend+1,w
  5037  0F7C  1D03               	skipz
  5038  0F7D  2F80               	goto	u2065
  5039  0F7E  0820               	movf	___llmod@divisor,w
  5040  0F7F  0224               	subwf	___llmod@dividend,w
  5041  0F80                     u2065:	
  5042  0F80  1C03               	skipc
  5043  0F81  2F8A               	goto	l1661
  5044  0F82  0820               	movf	___llmod@divisor,w
  5045  0F83  02A4               	subwf	___llmod@dividend,f
  5046  0F84  0821               	movf	___llmod@divisor+1,w
  5047  0F85  3BA5               	subwfb	___llmod@dividend+1,f
  5048  0F86  0822               	movf	___llmod@divisor+2,w
  5049  0F87  3BA6               	subwfb	___llmod@dividend+2,f
  5050  0F88  0823               	movf	___llmod@divisor+3,w
  5051  0F89  3BA7               	subwfb	___llmod@dividend+3,f
  5052  0F8A                     l1661:	
  5053  0F8A  3001               	movlw	1
  5054  0F8B                     u2075:	
  5055  0F8B  36A3               	lsrf	___llmod@divisor+3,f
  5056  0F8C  0CA2               	rrf	___llmod@divisor+2,f
  5057  0F8D  0CA1               	rrf	___llmod@divisor+1,f
  5058  0F8E  0CA0               	rrf	___llmod@divisor,f
  5059  0F8F  0B89               	decfsz	9,f
  5060  0F90  2F8B               	goto	u2075
  5061  0F91  3001               	movlw	1
  5062  0F92  02A9               	subwf	___llmod@counter,f
  5063  0F93  1D03               	btfss	3,2
  5064  0F94  2F72               	goto	l1657
  5065  0F95                     l1665:	
  5066  0F95  0827               	movf	___llmod@dividend+3,w
  5067  0F96  00A3               	movwf	?___llmod+3
  5068  0F97  0826               	movf	___llmod@dividend+2,w
  5069  0F98  00A2               	movwf	?___llmod+2
  5070  0F99  0825               	movf	___llmod@dividend+1,w
  5071  0F9A  00A1               	movwf	?___llmod+1
  5072  0F9B  0824               	movf	___llmod@dividend,w
  5073  0F9C  00A0               	movwf	?___llmod
  5074  0F9D  0008               	return
  5075  0F9E                     __end_of___llmod:	
  5076                           
  5077                           	psect	text14
  5078  0010                     __ptext14:	
  5079 ;; *************** function ___lldiv *****************
  5080 ;; Defined at:
  5081 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lldiv.c"
  5082 ;; Parameters:    Size  Location     Type
  5083 ;;  divisor         4    0[COMMON] unsigned long 
  5084 ;;  dividend        4    4[COMMON] unsigned long 
  5085 ;; Auto vars:     Size  Location     Type
  5086 ;;  quotient        4    9[COMMON] unsigned long 
  5087 ;;  counter         1   13[COMMON] unsigned char 
  5088 ;; Return value:  Size  Location     Type
  5089 ;;                  4    0[COMMON] unsigned long 
  5090 ;; Registers used:
  5091 ;;		wreg, status,2, status,0
  5092 ;; Tracked objects:
  5093 ;;		On entry : 0/0
  5094 ;;		On exit  : 0/0
  5095 ;;		Unchanged: 0/0
  5096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5097 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5098 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5099 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5100 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5101 ;;Total ram usage:       14 bytes
  5102 ;; Hardware stack levels used:    1
  5103 ;; This function calls:
  5104 ;;		Nothing
  5105 ;; This function is called by:
  5106 ;;		_sprintf
  5107 ;; This function uses a non-reentrant model
  5108 ;;
  5109                           
  5110                           
  5111                           ;psect for function ___lldiv
  5112  0010                     ___lldiv:	
  5113                           
  5114                           ;incstack = 0
  5115                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5116  0010  3000               	movlw	0
  5117  0011  00FC               	movwf	___lldiv@quotient+3
  5118  0012  3000               	movlw	0
  5119  0013  00FB               	movwf	___lldiv@quotient+2
  5120  0014  3000               	movlw	0
  5121  0015  00FA               	movwf	___lldiv@quotient+1
  5122  0016  3000               	movlw	0
  5123  0017  00F9               	movwf	___lldiv@quotient
  5124  0018  0873               	movf	___lldiv@divisor+3,w
  5125  0019  0472               	iorwf	___lldiv@divisor+2,w
  5126  001A  0471               	iorwf	___lldiv@divisor+1,w
  5127  001B  0470               	iorwf	___lldiv@divisor,w
  5128  001C  1903               	skipnz
  5129  001D  2859               	goto	l1645
  5130  001E  01FD               	clrf	___lldiv@counter
  5131  001F  0AFD               	incf	___lldiv@counter,f
  5132  0020                     l1631:	
  5133  0020  1BF3               	btfsc	___lldiv@divisor+3,7
  5134  0021  282E               	goto	l1633
  5135  0022  3001               	movlw	1
  5136  0023                     u1975:	
  5137  0023  35F0               	lslf	___lldiv@divisor,f
  5138  0024  0DF1               	rlf	___lldiv@divisor+1,f
  5139  0025  0DF2               	rlf	___lldiv@divisor+2,f
  5140  0026  0DF3               	rlf	___lldiv@divisor+3,f
  5141  0027  0B89               	decfsz	9,f
  5142  0028  2823               	goto	u1975
  5143  0029  3001               	movlw	1
  5144  002A  00F8               	movwf	??___lldiv
  5145  002B  0878               	movf	??___lldiv,w
  5146  002C  07FD               	addwf	___lldiv@counter,f
  5147  002D  2820               	goto	l1631
  5148  002E                     l1633:	
  5149  002E  3001               	movlw	1
  5150  002F                     u1995:	
  5151  002F  35F9               	lslf	___lldiv@quotient,f
  5152  0030  0DFA               	rlf	___lldiv@quotient+1,f
  5153  0031  0DFB               	rlf	___lldiv@quotient+2,f
  5154  0032  0DFC               	rlf	___lldiv@quotient+3,f
  5155  0033  0B89               	decfsz	9,f
  5156  0034  282F               	goto	u1995
  5157  0035  0873               	movf	___lldiv@divisor+3,w
  5158  0036  0277               	subwf	___lldiv@dividend+3,w
  5159  0037  1D03               	skipz
  5160  0038  2843               	goto	u2005
  5161  0039  0872               	movf	___lldiv@divisor+2,w
  5162  003A  0276               	subwf	___lldiv@dividend+2,w
  5163  003B  1D03               	skipz
  5164  003C  2843               	goto	u2005
  5165  003D  0871               	movf	___lldiv@divisor+1,w
  5166  003E  0275               	subwf	___lldiv@dividend+1,w
  5167  003F  1D03               	skipz
  5168  0040  2843               	goto	u2005
  5169  0041  0870               	movf	___lldiv@divisor,w
  5170  0042  0274               	subwf	___lldiv@dividend,w
  5171  0043                     u2005:	
  5172  0043  1C03               	skipc
  5173  0044  284E               	goto	l1641
  5174  0045  0870               	movf	___lldiv@divisor,w
  5175  0046  02F4               	subwf	___lldiv@dividend,f
  5176  0047  0871               	movf	___lldiv@divisor+1,w
  5177  0048  3BF5               	subwfb	___lldiv@dividend+1,f
  5178  0049  0872               	movf	___lldiv@divisor+2,w
  5179  004A  3BF6               	subwfb	___lldiv@dividend+2,f
  5180  004B  0873               	movf	___lldiv@divisor+3,w
  5181  004C  3BF7               	subwfb	___lldiv@dividend+3,f
  5182  004D  1479               	bsf	___lldiv@quotient,0
  5183  004E                     l1641:	
  5184  004E  3001               	movlw	1
  5185  004F                     u2015:	
  5186  004F  36F3               	lsrf	___lldiv@divisor+3,f
  5187  0050  0CF2               	rrf	___lldiv@divisor+2,f
  5188  0051  0CF1               	rrf	___lldiv@divisor+1,f
  5189  0052  0CF0               	rrf	___lldiv@divisor,f
  5190  0053  0B89               	decfsz	9,f
  5191  0054  284F               	goto	u2015
  5192  0055  3001               	movlw	1
  5193  0056  02FD               	subwf	___lldiv@counter,f
  5194  0057  1D03               	btfss	3,2
  5195  0058  282E               	goto	l1633
  5196  0059                     l1645:	
  5197  0059  087C               	movf	___lldiv@quotient+3,w
  5198  005A  00F3               	movwf	?___lldiv+3
  5199  005B  087B               	movf	___lldiv@quotient+2,w
  5200  005C  00F2               	movwf	?___lldiv+2
  5201  005D  087A               	movf	___lldiv@quotient+1,w
  5202  005E  00F1               	movwf	?___lldiv+1
  5203  005F  0879               	movf	___lldiv@quotient,w
  5204  0060  00F0               	movwf	?___lldiv
  5205  0061  0008               	return
  5206  0062                     __end_of___lldiv:	
  5207                           
  5208                           	psect	text15
  5209  0E40                     __ptext15:	
  5210 ;; *************** function ___lltoft *****************
  5211 ;; Defined at:
  5212 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lltoft.c"
  5213 ;; Parameters:    Size  Location     Type
  5214 ;;  c               4    8[COMMON] unsigned long 
  5215 ;; Auto vars:     Size  Location     Type
  5216 ;;  exp             1   13[COMMON] unsigned char 
  5217 ;; Return value:  Size  Location     Type
  5218 ;;                  3    8[COMMON] float 
  5219 ;; Registers used:
  5220 ;;		wreg, status,2, status,0, pclath, cstack
  5221 ;; Tracked objects:
  5222 ;;		On entry : 0/0
  5223 ;;		On exit  : 0/0
  5224 ;;		Unchanged: 0/0
  5225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5226 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5227 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5228 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5229 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5230 ;;Total ram usage:        6 bytes
  5231 ;; Hardware stack levels used:    1
  5232 ;; Hardware stack levels required when called:    1
  5233 ;; This function calls:
  5234 ;;		___ftpack
  5235 ;; This function is called by:
  5236 ;;		_ftoa
  5237 ;; This function uses a non-reentrant model
  5238 ;;
  5239                           
  5240                           
  5241                           ;psect for function ___lltoft
  5242  0E40                     ___lltoft:	
  5243                           
  5244                           ;incstack = 0
  5245                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  5246  0E40  308E               	movlw	142
  5247  0E41  00FC               	movwf	??___lltoft
  5248  0E42  087C               	movf	??___lltoft,w
  5249  0E43  00FD               	movwf	___lltoft@exp
  5250  0E44                     l2025:	
  5251  0E44  30FF               	movlw	255
  5252  0E45  057B               	andwf	___lltoft@c+3,w
  5253  0E46  1903               	btfsc	3,2
  5254  0E47  2E54               	goto	l2027
  5255  0E48  3001               	movlw	1
  5256  0E49                     u2745:	
  5257  0E49  36FB               	lsrf	___lltoft@c+3,f
  5258  0E4A  0CFA               	rrf	___lltoft@c+2,f
  5259  0E4B  0CF9               	rrf	___lltoft@c+1,f
  5260  0E4C  0CF8               	rrf	___lltoft@c,f
  5261  0E4D  0B89               	decfsz	9,f
  5262  0E4E  2E49               	goto	u2745
  5263  0E4F  3001               	movlw	1
  5264  0E50  00FC               	movwf	??___lltoft
  5265  0E51  087C               	movf	??___lltoft,w
  5266  0E52  07FD               	addwf	___lltoft@exp,f
  5267  0E53  2E44               	goto	l2025
  5268  0E54                     l2027:	
  5269  0E54  0878               	movf	___lltoft@c,w
  5270  0E55  00F0               	movwf	___ftpack@arg
  5271  0E56  0879               	movf	___lltoft@c+1,w
  5272  0E57  00F1               	movwf	___ftpack@arg+1
  5273  0E58  087A               	movf	___lltoft@c+2,w
  5274  0E59  00F2               	movwf	___ftpack@arg+2
  5275  0E5A  087D               	movf	___lltoft@exp,w
  5276  0E5B  00FC               	movwf	??___lltoft
  5277  0E5C  087C               	movf	??___lltoft,w
  5278  0E5D  00F3               	movwf	___ftpack@exp
  5279  0E5E  01F4               	clrf	___ftpack@sign
  5280  0E5F  3180  20C6         	fcall	___ftpack
  5281  0E61  0870               	movf	?___ftpack,w
  5282  0E62  00F8               	movwf	?___lltoft
  5283  0E63  0871               	movf	?___ftpack+1,w
  5284  0E64  00F9               	movwf	?___lltoft+1
  5285  0E65  0872               	movf	?___ftpack+2,w
  5286  0E66  00FA               	movwf	?___lltoft+2
  5287  0E67  0008               	return
  5288  0E68                     __end_of___lltoft:	
  5289                           
  5290                           	psect	text16
  5291  0209                     __ptext16:	
  5292 ;; *************** function ___fttol *****************
  5293 ;; Defined at:
  5294 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  5295 ;; Parameters:    Size  Location     Type
  5296 ;;  f1              3   10[BANK0 ] float 
  5297 ;; Auto vars:     Size  Location     Type
  5298 ;;  lval            4   19[BANK0 ] unsigned long 
  5299 ;;  exp1            1   23[BANK0 ] unsigned char 
  5300 ;;  sign1           1   18[BANK0 ] unsigned char 
  5301 ;; Return value:  Size  Location     Type
  5302 ;;                  4   10[BANK0 ] long 
  5303 ;; Registers used:
  5304 ;;		wreg, status,2, status,0
  5305 ;; Tracked objects:
  5306 ;;		On entry : 0/0
  5307 ;;		On exit  : 0/0
  5308 ;;		Unchanged: 0/0
  5309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5310 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5311 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5312 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5313 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5314 ;;Total ram usage:       14 bytes
  5315 ;; Hardware stack levels used:    1
  5316 ;; This function calls:
  5317 ;;		Nothing
  5318 ;; This function is called by:
  5319 ;;		_ftoa
  5320 ;; This function uses a non-reentrant model
  5321 ;;
  5322                           
  5323                           
  5324                           ;psect for function ___fttol
  5325  0209                     ___fttol:	
  5326                           
  5327                           ;incstack = 0
  5328                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  5329  0209  0020               	movlb	0	; select bank0
  5330  020A  082A               	movf	___fttol@f1,w
  5331  020B  00AE               	movwf	??___fttol
  5332  020C  082B               	movf	___fttol@f1+1,w
  5333  020D  00AF               	movwf	??___fttol+1
  5334  020E  082C               	movf	___fttol@f1+2,w
  5335  020F  00B0               	movwf	??___fttol+2
  5336  0210  1003               	clrc
  5337  0211  0D2F               	rlf	??___fttol+1,w
  5338  0212  0D30               	rlf	??___fttol+2,w
  5339  0213  00B1               	movwf	??___fttol+3
  5340  0214  0831               	movf	??___fttol+3,w
  5341  0215  00B7               	movwf	___fttol@exp1
  5342  0216  0837               	movf	___fttol@exp1,w
  5343  0217  1D03               	btfss	3,2
  5344  0218  2A22               	goto	l1955
  5345  0219  3000               	movlw	0
  5346  021A  00AD               	movwf	?___fttol+3
  5347  021B  3000               	movlw	0
  5348  021C  00AC               	movwf	?___fttol+2
  5349  021D  3000               	movlw	0
  5350  021E  00AB               	movwf	?___fttol+1
  5351  021F  3000               	movlw	0
  5352  0220  00AA               	movwf	?___fttol
  5353  0221  0008               	return
  5354  0222                     l1955:	
  5355  0222  082A               	movf	___fttol@f1,w
  5356  0223  00AE               	movwf	??___fttol
  5357  0224  082B               	movf	___fttol@f1+1,w
  5358  0225  00AF               	movwf	??___fttol+1
  5359  0226  082C               	movf	___fttol@f1+2,w
  5360  0227  00B0               	movwf	??___fttol+2
  5361  0228  3017               	movlw	23
  5362  0229                     u2625:	
  5363  0229  36B0               	lsrf	??___fttol+2,f
  5364  022A  0CAF               	rrf	??___fttol+1,f
  5365  022B  0CAE               	rrf	??___fttol,f
  5366  022C  0B89               	decfsz	9,f
  5367  022D  2A29               	goto	u2625
  5368  022E  082E               	movf	??___fttol,w
  5369  022F  00B1               	movwf	??___fttol+3
  5370  0230  0831               	movf	??___fttol+3,w
  5371  0231  00B2               	movwf	___fttol@sign1
  5372  0232  17AB               	bsf	___fttol@f1+1,7
  5373  0233  30FF               	movlw	255
  5374  0234  05AA               	andwf	___fttol@f1,f
  5375  0235  30FF               	movlw	255
  5376  0236  05AB               	andwf	___fttol@f1+1,f
  5377  0237  3000               	movlw	0
  5378  0238  05AC               	andwf	___fttol@f1+2,f
  5379  0239  082A               	movf	___fttol@f1,w
  5380  023A  00B3               	movwf	___fttol@lval
  5381  023B  082B               	movf	___fttol@f1+1,w
  5382  023C  00B4               	movwf	___fttol@lval+1
  5383  023D  082C               	movf	___fttol@f1+2,w
  5384  023E  00B5               	movwf	___fttol@lval+2
  5385  023F  01B6               	clrf	___fttol@lval+3
  5386  0240  308E               	movlw	142
  5387  0241  02B7               	subwf	___fttol@exp1,f
  5388  0242  1FB7               	btfss	___fttol@exp1,7
  5389  0243  2A60               	goto	l1975
  5390  0244  0837               	movf	___fttol@exp1,w
  5391  0245  3A80               	xorlw	128
  5392  0246  3E8F               	addlw	143
  5393  0247  1803               	skipnc
  5394  0248  2A52               	goto	l1973
  5395  0249  3000               	movlw	0
  5396  024A  00AD               	movwf	?___fttol+3
  5397  024B  3000               	movlw	0
  5398  024C  00AC               	movwf	?___fttol+2
  5399  024D  3000               	movlw	0
  5400  024E  00AB               	movwf	?___fttol+1
  5401  024F  3000               	movlw	0
  5402  0250  00AA               	movwf	?___fttol
  5403  0251  0008               	return
  5404  0252                     l1973:	
  5405  0252  3001               	movlw	1
  5406  0253                     u2655:	
  5407  0253  36B6               	lsrf	___fttol@lval+3,f
  5408  0254  0CB5               	rrf	___fttol@lval+2,f
  5409  0255  0CB4               	rrf	___fttol@lval+1,f
  5410  0256  0CB3               	rrf	___fttol@lval,f
  5411  0257  0B89               	decfsz	9,f
  5412  0258  2A53               	goto	u2655
  5413  0259  3001               	movlw	1
  5414  025A  00AE               	movwf	??___fttol
  5415  025B  082E               	movf	??___fttol,w
  5416  025C  07B7               	addwf	___fttol@exp1,f
  5417  025D  1903               	btfsc	3,2
  5418  025E  2A79               	goto	l1983
  5419  025F  2A52               	goto	l1973
  5420  0260                     l1975:	
  5421  0260  3018               	movlw	24
  5422  0261  0237               	subwf	___fttol@exp1,w
  5423  0262  1C03               	skipc
  5424  0263  2A76               	goto	l504
  5425  0264  3000               	movlw	0
  5426  0265  00AD               	movwf	?___fttol+3
  5427  0266  3000               	movlw	0
  5428  0267  00AC               	movwf	?___fttol+2
  5429  0268  3000               	movlw	0
  5430  0269  00AB               	movwf	?___fttol+1
  5431  026A  3000               	movlw	0
  5432  026B  00AA               	movwf	?___fttol
  5433  026C  0008               	return
  5434  026D                     l1981:	
  5435  026D  3001               	movlw	1
  5436  026E                     u2685:	
  5437  026E  35B3               	lslf	___fttol@lval,f
  5438  026F  0DB4               	rlf	___fttol@lval+1,f
  5439  0270  0DB5               	rlf	___fttol@lval+2,f
  5440  0271  0DB6               	rlf	___fttol@lval+3,f
  5441  0272  0B89               	decfsz	9,f
  5442  0273  2A6E               	goto	u2685
  5443  0274  3001               	movlw	1
  5444  0275  02B7               	subwf	___fttol@exp1,f
  5445  0276                     l504:	
  5446  0276  0837               	movf	___fttol@exp1,w
  5447  0277  1D03               	btfss	3,2
  5448  0278  2A6D               	goto	l1981
  5449  0279                     l1983:	
  5450  0279  0832               	movf	___fttol@sign1,w
  5451  027A  1903               	btfsc	3,2
  5452  027B  2A87               	goto	l1987
  5453  027C  09B3               	comf	___fttol@lval,f
  5454  027D  09B4               	comf	___fttol@lval+1,f
  5455  027E  09B5               	comf	___fttol@lval+2,f
  5456  027F  09B6               	comf	___fttol@lval+3,f
  5457  0280  0AB3               	incf	___fttol@lval,f
  5458  0281  1903               	skipnz
  5459  0282  0AB4               	incf	___fttol@lval+1,f
  5460  0283  1903               	skipnz
  5461  0284  0AB5               	incf	___fttol@lval+2,f
  5462  0285  1903               	skipnz
  5463  0286  0AB6               	incf	___fttol@lval+3,f
  5464  0287                     l1987:	
  5465  0287  0836               	movf	___fttol@lval+3,w
  5466  0288  00AD               	movwf	?___fttol+3
  5467  0289  0835               	movf	___fttol@lval+2,w
  5468  028A  00AC               	movwf	?___fttol+2
  5469  028B  0834               	movf	___fttol@lval+1,w
  5470  028C  00AB               	movwf	?___fttol+1
  5471  028D  0833               	movf	___fttol@lval,w
  5472  028E  00AA               	movwf	?___fttol
  5473  028F  0008               	return
  5474  0290                     __end_of___fttol:	
  5475                           
  5476                           	psect	text17
  5477  0DB6                     __ptext17:	
  5478 ;; *************** function ___ftsub *****************
  5479 ;; Defined at:
  5480 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
  5481 ;; Parameters:    Size  Location     Type
  5482 ;;  f2              3    7[BANK0 ] float 
  5483 ;;  f1              3   10[BANK0 ] float 
  5484 ;; Auto vars:     Size  Location     Type
  5485 ;;		None
  5486 ;; Return value:  Size  Location     Type
  5487 ;;                  3    7[BANK0 ] float 
  5488 ;; Registers used:
  5489 ;;		wreg, status,2, status,0, pclath, cstack
  5490 ;; Tracked objects:
  5491 ;;		On entry : 0/0
  5492 ;;		On exit  : 0/0
  5493 ;;		Unchanged: 0/0
  5494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5495 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5498 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5499 ;;Total ram usage:        6 bytes
  5500 ;; Hardware stack levels used:    1
  5501 ;; Hardware stack levels required when called:    2
  5502 ;; This function calls:
  5503 ;;		___ftadd
  5504 ;; This function is called by:
  5505 ;;		_ftoa
  5506 ;; This function uses a non-reentrant model
  5507 ;;
  5508                           
  5509                           
  5510                           ;psect for function ___ftsub
  5511  0DB6                     ___ftsub:	
  5512                           
  5513                           ;incstack = 0
  5514                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  5515  0DB6  0020               	movlb	0	; select bank0
  5516  0DB7  0829               	movf	___ftsub@f2+2,w
  5517  0DB8  0428               	iorwf	___ftsub@f2+1,w
  5518  0DB9  0427               	iorwf	___ftsub@f2,w
  5519  0DBA  1903               	skipnz
  5520  0DBB  2DBE               	goto	l1945
  5521  0DBC  3080               	movlw	128
  5522  0DBD  06A9               	xorwf	___ftsub@f2+2,f
  5523  0DBE                     l1945:	
  5524  0DBE  082A               	movf	___ftsub@f1,w
  5525  0DBF  00F8               	movwf	___ftadd@f1
  5526  0DC0  082B               	movf	___ftsub@f1+1,w
  5527  0DC1  00F9               	movwf	___ftadd@f1+1
  5528  0DC2  082C               	movf	___ftsub@f1+2,w
  5529  0DC3  00FA               	movwf	___ftadd@f1+2
  5530  0DC4  0827               	movf	___ftsub@f2,w
  5531  0DC5  00FB               	movwf	___ftadd@f2
  5532  0DC6  0828               	movf	___ftsub@f2+1,w
  5533  0DC7  00FC               	movwf	___ftadd@f2+1
  5534  0DC8  0829               	movf	___ftsub@f2+2,w
  5535  0DC9  00FD               	movwf	___ftadd@f2+2
  5536  0DCA  3183  23E5         	fcall	___ftadd
  5537  0DCC  0878               	movf	?___ftadd,w
  5538  0DCD  0020               	movlb	0	; select bank0
  5539  0DCE  00A7               	movwf	?___ftsub
  5540  0DCF  0879               	movf	?___ftadd+1,w
  5541  0DD0  00A8               	movwf	?___ftsub+1
  5542  0DD1  087A               	movf	?___ftadd+2,w
  5543  0DD2  00A9               	movwf	?___ftsub+2
  5544  0DD3  0008               	return
  5545  0DD4                     __end_of___ftsub:	
  5546                           
  5547                           	psect	text18
  5548  03E5                     __ptext18:	
  5549 ;; *************** function ___ftadd *****************
  5550 ;; Defined at:
  5551 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
  5552 ;; Parameters:    Size  Location     Type
  5553 ;;  f1              3    8[COMMON] float 
  5554 ;;  f2              3   11[COMMON] float 
  5555 ;; Auto vars:     Size  Location     Type
  5556 ;;  exp1            1    6[BANK0 ] unsigned char 
  5557 ;;  exp2            1    5[BANK0 ] unsigned char 
  5558 ;;  sign            1    4[BANK0 ] unsigned char 
  5559 ;; Return value:  Size  Location     Type
  5560 ;;                  3    8[COMMON] float 
  5561 ;; Registers used:
  5562 ;;		wreg, status,2, status,0, pclath, cstack
  5563 ;; Tracked objects:
  5564 ;;		On entry : 0/0
  5565 ;;		On exit  : 0/0
  5566 ;;		Unchanged: 0/0
  5567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5568 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5569 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5570 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5571 ;;      Totals:         6       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5572 ;;Total ram usage:       13 bytes
  5573 ;; Hardware stack levels used:    1
  5574 ;; Hardware stack levels required when called:    1
  5575 ;; This function calls:
  5576 ;;		___ftpack
  5577 ;; This function is called by:
  5578 ;;		_main
  5579 ;;		___ftsub
  5580 ;; This function uses a non-reentrant model
  5581 ;;
  5582                           
  5583                           
  5584                           ;psect for function ___ftadd
  5585  03E5                     ___ftadd:	
  5586                           
  5587                           ;incstack = 0
  5588                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  5589  03E5  0878               	movf	___ftadd@f1,w
  5590  03E6  0020               	movlb	0	; select bank0
  5591  03E7  00A0               	movwf	??___ftadd
  5592  03E8  0879               	movf	___ftadd@f1+1,w
  5593  03E9  00A1               	movwf	??___ftadd+1
  5594  03EA  087A               	movf	___ftadd@f1+2,w
  5595  03EB  00A2               	movwf	??___ftadd+2
  5596  03EC  1003               	clrc
  5597  03ED  0D21               	rlf	??___ftadd+1,w
  5598  03EE  0D22               	rlf	??___ftadd+2,w
  5599  03EF  00A3               	movwf	??___ftadd+3
  5600  03F0  0823               	movf	??___ftadd+3,w
  5601  03F1  00A6               	movwf	___ftadd@exp1
  5602  03F2  087B               	movf	___ftadd@f2,w
  5603  03F3  00A0               	movwf	??___ftadd
  5604  03F4  087C               	movf	___ftadd@f2+1,w
  5605  03F5  00A1               	movwf	??___ftadd+1
  5606  03F6  087D               	movf	___ftadd@f2+2,w
  5607  03F7  00A2               	movwf	??___ftadd+2
  5608  03F8  1003               	clrc
  5609  03F9  0D21               	rlf	??___ftadd+1,w
  5610  03FA  0D22               	rlf	??___ftadd+2,w
  5611  03FB  00A3               	movwf	??___ftadd+3
  5612  03FC  0823               	movf	??___ftadd+3,w
  5613  03FD  00A5               	movwf	___ftadd@exp2
  5614  03FE  0826               	movf	___ftadd@exp1,w
  5615  03FF  1903               	btfsc	3,2
  5616  0400  2C0D               	goto	l1561
  5617  0401  0825               	movf	___ftadd@exp2,w
  5618  0402  0226               	subwf	___ftadd@exp1,w
  5619  0403  1803               	skipnc
  5620  0404  2C14               	goto	l1565
  5621  0405  0326               	decf	___ftadd@exp1,w
  5622  0406  3AFF               	xorlw	255
  5623  0407  0725               	addwf	___ftadd@exp2,w
  5624  0408  00A0               	movwf	??___ftadd
  5625  0409  3019               	movlw	25
  5626  040A  0220               	subwf	??___ftadd,w
  5627  040B  1C03               	skipc
  5628  040C  2C14               	goto	l1565
  5629  040D                     l1561:	
  5630  040D  087B               	movf	___ftadd@f2,w
  5631  040E  00F8               	movwf	?___ftadd
  5632  040F  087C               	movf	___ftadd@f2+1,w
  5633  0410  00F9               	movwf	?___ftadd+1
  5634  0411  087D               	movf	___ftadd@f2+2,w
  5635  0412  00FA               	movwf	?___ftadd+2
  5636  0413  0008               	return
  5637  0414                     l1565:	
  5638  0414  0825               	movf	___ftadd@exp2,w
  5639  0415  1903               	btfsc	3,2
  5640  0416  0008               	return
  5641  0417  0826               	movf	___ftadd@exp1,w
  5642  0418  0225               	subwf	___ftadd@exp2,w
  5643  0419  1803               	skipnc
  5644  041A  2C23               	goto	l1571
  5645  041B  0325               	decf	___ftadd@exp2,w
  5646  041C  3AFF               	xorlw	255
  5647  041D  0726               	addwf	___ftadd@exp1,w
  5648  041E  00A0               	movwf	??___ftadd
  5649  041F  3019               	movlw	25
  5650  0420  0220               	subwf	??___ftadd,w
  5651  0421  1803               	btfsc	3,0
  5652  0422  0008               	return
  5653  0423                     l1571:	
  5654  0423  3006               	movlw	6
  5655  0424  00A0               	movwf	??___ftadd
  5656  0425  0820               	movf	??___ftadd,w
  5657  0426  00A4               	movwf	___ftadd@sign
  5658  0427  1BFA               	btfsc	___ftadd@f1+2,7
  5659  0428  17A4               	bsf	___ftadd@sign,7
  5660  0429  1BFD               	btfsc	___ftadd@f2+2,7
  5661  042A  1724               	bsf	___ftadd@sign,6
  5662  042B  17F9               	bsf	___ftadd@f1+1,7
  5663  042C  30FF               	movlw	255
  5664  042D  05F8               	andwf	___ftadd@f1,f
  5665  042E  30FF               	movlw	255
  5666  042F  05F9               	andwf	___ftadd@f1+1,f
  5667  0430  3000               	movlw	0
  5668  0431  05FA               	andwf	___ftadd@f1+2,f
  5669  0432  17FC               	bsf	___ftadd@f2+1,7
  5670  0433  30FF               	movlw	255
  5671  0434  05FB               	andwf	___ftadd@f2,f
  5672  0435  30FF               	movlw	255
  5673  0436  05FC               	andwf	___ftadd@f2+1,f
  5674  0437  3000               	movlw	0
  5675  0438  05FD               	andwf	___ftadd@f2+2,f
  5676  0439  0825               	movf	___ftadd@exp2,w
  5677  043A  0226               	subwf	___ftadd@exp1,w
  5678  043B  1803               	skipnc
  5679  043C  2C5F               	goto	l1593
  5680  043D                     l1583:	
  5681  043D  3001               	movlw	1
  5682  043E                     u1825:	
  5683  043E  35FB               	lslf	___ftadd@f2,f
  5684  043F  0DFC               	rlf	___ftadd@f2+1,f
  5685  0440  0DFD               	rlf	___ftadd@f2+2,f
  5686  0441  0B89               	decfsz	9,f
  5687  0442  2C3E               	goto	u1825
  5688  0443  3001               	movlw	1
  5689  0444  02A5               	subwf	___ftadd@exp2,f
  5690  0445  0825               	movf	___ftadd@exp2,w
  5691  0446  0626               	xorwf	___ftadd@exp1,w
  5692  0447  1903               	skipnz
  5693  0448  2C5A               	goto	l1591
  5694  0449  3001               	movlw	1
  5695  044A  02A4               	subwf	___ftadd@sign,f
  5696  044B  0824               	movf	___ftadd@sign,w
  5697  044C  3907               	andlw	7
  5698  044D  1903               	btfsc	3,2
  5699  044E  2C5A               	goto	l1591
  5700  044F  2C3D               	goto	l1583
  5701  0450                     l1589:	
  5702  0450  3001               	movlw	1
  5703  0451                     u1855:	
  5704  0451  36FA               	lsrf	___ftadd@f1+2,f
  5705  0452  0CF9               	rrf	___ftadd@f1+1,f
  5706  0453  0CF8               	rrf	___ftadd@f1,f
  5707  0454  0B89               	decfsz	9,f
  5708  0455  2C51               	goto	u1855
  5709  0456  3001               	movlw	1
  5710  0457  00A0               	movwf	??___ftadd
  5711  0458  0820               	movf	??___ftadd,w
  5712  0459  07A6               	addwf	___ftadd@exp1,f
  5713  045A                     l1591:	
  5714  045A  0826               	movf	___ftadd@exp1,w
  5715  045B  0625               	xorwf	___ftadd@exp2,w
  5716  045C  1903               	btfsc	3,2
  5717  045D  2C84               	goto	l436
  5718  045E  2C50               	goto	l1589
  5719  045F                     l1593:	
  5720  045F  0826               	movf	___ftadd@exp1,w
  5721  0460  0225               	subwf	___ftadd@exp2,w
  5722  0461  1803               	skipnc
  5723  0462  2C84               	goto	l436
  5724  0463                     l1595:	
  5725  0463  3001               	movlw	1
  5726  0464                     u1885:	
  5727  0464  35F8               	lslf	___ftadd@f1,f
  5728  0465  0DF9               	rlf	___ftadd@f1+1,f
  5729  0466  0DFA               	rlf	___ftadd@f1+2,f
  5730  0467  0B89               	decfsz	9,f
  5731  0468  2C64               	goto	u1885
  5732  0469  3001               	movlw	1
  5733  046A  02A6               	subwf	___ftadd@exp1,f
  5734  046B  0825               	movf	___ftadd@exp2,w
  5735  046C  0626               	xorwf	___ftadd@exp1,w
  5736  046D  1903               	skipnz
  5737  046E  2C80               	goto	l1603
  5738  046F  3001               	movlw	1
  5739  0470  02A4               	subwf	___ftadd@sign,f
  5740  0471  0824               	movf	___ftadd@sign,w
  5741  0472  3907               	andlw	7
  5742  0473  1903               	btfsc	3,2
  5743  0474  2C80               	goto	l1603
  5744  0475  2C63               	goto	l1595
  5745  0476                     l1601:	
  5746  0476  3001               	movlw	1
  5747  0477                     u1915:	
  5748  0477  36FD               	lsrf	___ftadd@f2+2,f
  5749  0478  0CFC               	rrf	___ftadd@f2+1,f
  5750  0479  0CFB               	rrf	___ftadd@f2,f
  5751  047A  0B89               	decfsz	9,f
  5752  047B  2C77               	goto	u1915
  5753  047C  3001               	movlw	1
  5754  047D  00A0               	movwf	??___ftadd
  5755  047E  0820               	movf	??___ftadd,w
  5756  047F  07A5               	addwf	___ftadd@exp2,f
  5757  0480                     l1603:	
  5758  0480  0826               	movf	___ftadd@exp1,w
  5759  0481  0625               	xorwf	___ftadd@exp2,w
  5760  0482  1D03               	skipz
  5761  0483  2C76               	goto	l1601
  5762  0484                     l436:	
  5763  0484  1FA4               	btfss	___ftadd@sign,7
  5764  0485  2C96               	goto	l1607
  5765  0486  30FF               	movlw	255
  5766  0487  06F8               	xorwf	___ftadd@f1,f
  5767  0488  30FF               	movlw	255
  5768  0489  06F9               	xorwf	___ftadd@f1+1,f
  5769  048A  30FF               	movlw	255
  5770  048B  06FA               	xorwf	___ftadd@f1+2,f
  5771  048C  3001               	movlw	1
  5772  048D  07F8               	addwf	___ftadd@f1,f
  5773  048E  3000               	movlw	0
  5774  048F  1803               	skipnc
  5775  0490  3001               	movlw	1
  5776  0491  07F9               	addwf	___ftadd@f1+1,f
  5777  0492  3000               	movlw	0
  5778  0493  1803               	skipnc
  5779  0494  3001               	movlw	1
  5780  0495  07FA               	addwf	___ftadd@f1+2,f
  5781  0496                     l1607:	
  5782  0496  1F24               	btfss	___ftadd@sign,6
  5783  0497  2CA8               	goto	l1611
  5784  0498  30FF               	movlw	255
  5785  0499  06FB               	xorwf	___ftadd@f2,f
  5786  049A  30FF               	movlw	255
  5787  049B  06FC               	xorwf	___ftadd@f2+1,f
  5788  049C  30FF               	movlw	255
  5789  049D  06FD               	xorwf	___ftadd@f2+2,f
  5790  049E  3001               	movlw	1
  5791  049F  07FB               	addwf	___ftadd@f2,f
  5792  04A0  3000               	movlw	0
  5793  04A1  1803               	skipnc
  5794  04A2  3001               	movlw	1
  5795  04A3  07FC               	addwf	___ftadd@f2+1,f
  5796  04A4  3000               	movlw	0
  5797  04A5  1803               	skipnc
  5798  04A6  3001               	movlw	1
  5799  04A7  07FD               	addwf	___ftadd@f2+2,f
  5800  04A8                     l1611:	
  5801  04A8  01A4               	clrf	___ftadd@sign
  5802  04A9  0878               	movf	___ftadd@f1,w
  5803  04AA  07FB               	addwf	___ftadd@f2,f
  5804  04AB  0879               	movf	___ftadd@f1+1,w
  5805  04AC  3DFC               	addwfc	___ftadd@f2+1,f
  5806  04AD  087A               	movf	___ftadd@f1+2,w
  5807  04AE  3DFD               	addwfc	___ftadd@f2+2,f
  5808  04AF  1FFD               	btfss	___ftadd@f2+2,7
  5809  04B0  2CC3               	goto	l1621
  5810  04B1  30FF               	movlw	255
  5811  04B2  06FB               	xorwf	___ftadd@f2,f
  5812  04B3  30FF               	movlw	255
  5813  04B4  06FC               	xorwf	___ftadd@f2+1,f
  5814  04B5  30FF               	movlw	255
  5815  04B6  06FD               	xorwf	___ftadd@f2+2,f
  5816  04B7  3001               	movlw	1
  5817  04B8  07FB               	addwf	___ftadd@f2,f
  5818  04B9  3000               	movlw	0
  5819  04BA  1803               	skipnc
  5820  04BB  3001               	movlw	1
  5821  04BC  07FC               	addwf	___ftadd@f2+1,f
  5822  04BD  3000               	movlw	0
  5823  04BE  1803               	skipnc
  5824  04BF  3001               	movlw	1
  5825  04C0  07FD               	addwf	___ftadd@f2+2,f
  5826  04C1  01A4               	clrf	___ftadd@sign
  5827  04C2  0AA4               	incf	___ftadd@sign,f
  5828  04C3                     l1621:	
  5829  04C3  087B               	movf	___ftadd@f2,w
  5830  04C4  00F0               	movwf	___ftpack@arg
  5831  04C5  087C               	movf	___ftadd@f2+1,w
  5832  04C6  00F1               	movwf	___ftpack@arg+1
  5833  04C7  087D               	movf	___ftadd@f2+2,w
  5834  04C8  00F2               	movwf	___ftpack@arg+2
  5835  04C9  0826               	movf	___ftadd@exp1,w
  5836  04CA  00A0               	movwf	??___ftadd
  5837  04CB  0820               	movf	??___ftadd,w
  5838  04CC  00F3               	movwf	___ftpack@exp
  5839  04CD  0824               	movf	___ftadd@sign,w
  5840  04CE  00A1               	movwf	??___ftadd+1
  5841  04CF  0821               	movf	??___ftadd+1,w
  5842  04D0  00F4               	movwf	___ftpack@sign
  5843  04D1  3180  20C6         	fcall	___ftpack
  5844  04D3  0870               	movf	?___ftpack,w
  5845  04D4  00F8               	movwf	?___ftadd
  5846  04D5  0871               	movf	?___ftpack+1,w
  5847  04D6  00F9               	movwf	?___ftadd+1
  5848  04D7  0872               	movf	?___ftpack+2,w
  5849  04D8  00FA               	movwf	?___ftadd+2
  5850  04D9  0008               	return
  5851  04DA                     __end_of___ftadd:	
  5852                           
  5853                           	psect	text19
  5854  0D1D                     __ptext19:	
  5855 ;; *************** function ___ftneg *****************
  5856 ;; Defined at:
  5857 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftneg.c"
  5858 ;; Parameters:    Size  Location     Type
  5859 ;;  f1              3    0[COMMON] float 
  5860 ;; Auto vars:     Size  Location     Type
  5861 ;;		None
  5862 ;; Return value:  Size  Location     Type
  5863 ;;                  3    0[COMMON] float 
  5864 ;; Registers used:
  5865 ;;		wreg
  5866 ;; Tracked objects:
  5867 ;;		On entry : 0/0
  5868 ;;		On exit  : 0/0
  5869 ;;		Unchanged: 0/0
  5870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5871 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5874 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5875 ;;Total ram usage:        3 bytes
  5876 ;; Hardware stack levels used:    1
  5877 ;; This function calls:
  5878 ;;		Nothing
  5879 ;; This function is called by:
  5880 ;;		_ftoa
  5881 ;; This function uses a non-reentrant model
  5882 ;;
  5883                           
  5884                           
  5885                           ;psect for function ___ftneg
  5886  0D1D                     ___ftneg:	
  5887                           
  5888                           ;incstack = 0
  5889                           ; Regs used in ___ftneg: [wreg]
  5890  0D1D  0872               	movf	___ftneg@f1+2,w
  5891  0D1E  0471               	iorwf	___ftneg@f1+1,w
  5892  0D1F  0470               	iorwf	___ftneg@f1,w
  5893  0D20  1903               	skipnz
  5894  0D21  0008               	return
  5895  0D22  3080               	movlw	128
  5896  0D23  06F2               	xorwf	___ftneg@f1+2,f
  5897  0D24  0008               	return
  5898  0D25                     __end_of___ftneg:	
  5899                           
  5900                           	psect	text20
  5901  0332                     __ptext20:	
  5902 ;; *************** function ___ftmul *****************
  5903 ;; Defined at:
  5904 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  5905 ;; Parameters:    Size  Location     Type
  5906 ;;  f1              3    8[COMMON] float 
  5907 ;;  f2              3   11[COMMON] float 
  5908 ;; Auto vars:     Size  Location     Type
  5909 ;;  f3_as_produc    3    5[BANK0 ] unsigned um
  5910 ;;  sign            1    9[BANK0 ] unsigned char 
  5911 ;;  cntr            1    8[BANK0 ] unsigned char 
  5912 ;;  exp             1    4[BANK0 ] unsigned char 
  5913 ;; Return value:  Size  Location     Type
  5914 ;;                  3    8[COMMON] float 
  5915 ;; Registers used:
  5916 ;;		wreg, status,2, status,0, pclath, cstack
  5917 ;; Tracked objects:
  5918 ;;		On entry : 0/0
  5919 ;;		On exit  : 0/0
  5920 ;;		Unchanged: 0/0
  5921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5922 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5923 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5924 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5925 ;;      Totals:         6      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5926 ;;Total ram usage:       16 bytes
  5927 ;; Hardware stack levels used:    1
  5928 ;; Hardware stack levels required when called:    1
  5929 ;; This function calls:
  5930 ;;		___ftpack
  5931 ;; This function is called by:
  5932 ;;		_ftoa
  5933 ;; This function uses a non-reentrant model
  5934 ;;
  5935                           
  5936                           
  5937                           ;psect for function ___ftmul
  5938  0332                     ___ftmul:	
  5939                           
  5940                           ;incstack = 0
  5941                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  5942  0332  0878               	movf	___ftmul@f1,w
  5943  0333  0020               	movlb	0	; select bank0
  5944  0334  00A0               	movwf	??___ftmul
  5945  0335  0879               	movf	___ftmul@f1+1,w
  5946  0336  00A1               	movwf	??___ftmul+1
  5947  0337  087A               	movf	___ftmul@f1+2,w
  5948  0338  00A2               	movwf	??___ftmul+2
  5949  0339  1003               	clrc
  5950  033A  0D21               	rlf	??___ftmul+1,w
  5951  033B  0D22               	rlf	??___ftmul+2,w
  5952  033C  00A3               	movwf	??___ftmul+3
  5953  033D  0823               	movf	??___ftmul+3,w
  5954  033E  00A4               	movwf	___ftmul@exp
  5955  033F  0824               	movf	___ftmul@exp,w
  5956  0340  1D03               	btfss	3,2
  5957  0341  2B49               	goto	l1889
  5958  0342  3000               	movlw	0
  5959  0343  00F8               	movwf	?___ftmul
  5960  0344  3000               	movlw	0
  5961  0345  00F9               	movwf	?___ftmul+1
  5962  0346  3000               	movlw	0
  5963  0347  00FA               	movwf	?___ftmul+2
  5964  0348  0008               	return
  5965  0349                     l1889:	
  5966  0349  087B               	movf	___ftmul@f2,w
  5967  034A  00A0               	movwf	??___ftmul
  5968  034B  087C               	movf	___ftmul@f2+1,w
  5969  034C  00A1               	movwf	??___ftmul+1
  5970  034D  087D               	movf	___ftmul@f2+2,w
  5971  034E  00A2               	movwf	??___ftmul+2
  5972  034F  1003               	clrc
  5973  0350  0D21               	rlf	??___ftmul+1,w
  5974  0351  0D22               	rlf	??___ftmul+2,w
  5975  0352  00A3               	movwf	??___ftmul+3
  5976  0353  0823               	movf	??___ftmul+3,w
  5977  0354  00A9               	movwf	___ftmul@sign
  5978  0355  0829               	movf	___ftmul@sign,w
  5979  0356  1D03               	btfss	3,2
  5980  0357  2B5F               	goto	l1895
  5981  0358  3000               	movlw	0
  5982  0359  00F8               	movwf	?___ftmul
  5983  035A  3000               	movlw	0
  5984  035B  00F9               	movwf	?___ftmul+1
  5985  035C  3000               	movlw	0
  5986  035D  00FA               	movwf	?___ftmul+2
  5987  035E  0008               	return
  5988  035F                     l1895:	
  5989  035F  0829               	movf	___ftmul@sign,w
  5990  0360  3E7B               	addlw	123
  5991  0361  00A0               	movwf	??___ftmul
  5992  0362  0820               	movf	??___ftmul,w
  5993  0363  07A4               	addwf	___ftmul@exp,f
  5994  0364  0878               	movf	___ftmul@f1,w
  5995  0365  00A0               	movwf	??___ftmul
  5996  0366  0879               	movf	___ftmul@f1+1,w
  5997  0367  00A1               	movwf	??___ftmul+1
  5998  0368  087A               	movf	___ftmul@f1+2,w
  5999  0369  00A2               	movwf	??___ftmul+2
  6000  036A  3010               	movlw	16
  6001  036B                     u2495:	
  6002  036B  36A2               	lsrf	??___ftmul+2,f
  6003  036C  0CA1               	rrf	??___ftmul+1,f
  6004  036D  0CA0               	rrf	??___ftmul,f
  6005  036E  0B89               	decfsz	9,f
  6006  036F  2B6B               	goto	u2495
  6007  0370  0820               	movf	??___ftmul,w
  6008  0371  00A3               	movwf	??___ftmul+3
  6009  0372  0823               	movf	??___ftmul+3,w
  6010  0373  00A9               	movwf	___ftmul@sign
  6011  0374  087B               	movf	___ftmul@f2,w
  6012  0375  00A0               	movwf	??___ftmul
  6013  0376  087C               	movf	___ftmul@f2+1,w
  6014  0377  00A1               	movwf	??___ftmul+1
  6015  0378  087D               	movf	___ftmul@f2+2,w
  6016  0379  00A2               	movwf	??___ftmul+2
  6017  037A  3010               	movlw	16
  6018  037B                     u2505:	
  6019  037B  36A2               	lsrf	??___ftmul+2,f
  6020  037C  0CA1               	rrf	??___ftmul+1,f
  6021  037D  0CA0               	rrf	??___ftmul,f
  6022  037E  0B89               	decfsz	9,f
  6023  037F  2B7B               	goto	u2505
  6024  0380  0820               	movf	??___ftmul,w
  6025  0381  00A3               	movwf	??___ftmul+3
  6026  0382  0823               	movf	??___ftmul+3,w
  6027  0383  06A9               	xorwf	___ftmul@sign,f
  6028  0384  3080               	movlw	128
  6029  0385  00A0               	movwf	??___ftmul
  6030  0386  0820               	movf	??___ftmul,w
  6031  0387  05A9               	andwf	___ftmul@sign,f
  6032  0388  17F9               	bsf	___ftmul@f1+1,7
  6033  0389  17FC               	bsf	___ftmul@f2+1,7
  6034  038A  30FF               	movlw	255
  6035  038B  05FB               	andwf	___ftmul@f2,f
  6036  038C  30FF               	movlw	255
  6037  038D  05FC               	andwf	___ftmul@f2+1,f
  6038  038E  3000               	movlw	0
  6039  038F  05FD               	andwf	___ftmul@f2+2,f
  6040  0390  3000               	movlw	0
  6041  0391  00A5               	movwf	___ftmul@f3_as_product
  6042  0392  3000               	movlw	0
  6043  0393  00A6               	movwf	___ftmul@f3_as_product+1
  6044  0394  3000               	movlw	0
  6045  0395  00A7               	movwf	___ftmul@f3_as_product+2
  6046  0396  3007               	movlw	7
  6047  0397  00A0               	movwf	??___ftmul
  6048  0398  0820               	movf	??___ftmul,w
  6049  0399  00A8               	movwf	___ftmul@cntr
  6050  039A                     l1907:	
  6051  039A  1C78               	btfss	___ftmul@f1,0
  6052  039B  2BA2               	goto	l1911
  6053  039C  087B               	movf	___ftmul@f2,w
  6054  039D  07A5               	addwf	___ftmul@f3_as_product,f
  6055  039E  087C               	movf	___ftmul@f2+1,w
  6056  039F  3DA6               	addwfc	___ftmul@f3_as_product+1,f
  6057  03A0  087D               	movf	___ftmul@f2+2,w
  6058  03A1  3DA7               	addwfc	___ftmul@f3_as_product+2,f
  6059  03A2                     l1911:	
  6060  03A2  3001               	movlw	1
  6061  03A3                     u2525:	
  6062  03A3  36FA               	lsrf	___ftmul@f1+2,f
  6063  03A4  0CF9               	rrf	___ftmul@f1+1,f
  6064  03A5  0CF8               	rrf	___ftmul@f1,f
  6065  03A6  0B89               	decfsz	9,f
  6066  03A7  2BA3               	goto	u2525
  6067  03A8  3001               	movlw	1
  6068  03A9                     u2535:	
  6069  03A9  35FB               	lslf	___ftmul@f2,f
  6070  03AA  0DFC               	rlf	___ftmul@f2+1,f
  6071  03AB  0DFD               	rlf	___ftmul@f2+2,f
  6072  03AC  0B89               	decfsz	9,f
  6073  03AD  2BA9               	goto	u2535
  6074  03AE  3001               	movlw	1
  6075  03AF  02A8               	subwf	___ftmul@cntr,f
  6076  03B0  1D03               	btfss	3,2
  6077  03B1  2B9A               	goto	l1907
  6078  03B2  3009               	movlw	9
  6079  03B3  00A0               	movwf	??___ftmul
  6080  03B4  0820               	movf	??___ftmul,w
  6081  03B5  00A8               	movwf	___ftmul@cntr
  6082  03B6                     l1919:	
  6083  03B6  1C78               	btfss	___ftmul@f1,0
  6084  03B7  2BBE               	goto	l1923
  6085  03B8  087B               	movf	___ftmul@f2,w
  6086  03B9  07A5               	addwf	___ftmul@f3_as_product,f
  6087  03BA  087C               	movf	___ftmul@f2+1,w
  6088  03BB  3DA6               	addwfc	___ftmul@f3_as_product+1,f
  6089  03BC  087D               	movf	___ftmul@f2+2,w
  6090  03BD  3DA7               	addwfc	___ftmul@f3_as_product+2,f
  6091  03BE                     l1923:	
  6092  03BE  3001               	movlw	1
  6093  03BF                     u2565:	
  6094  03BF  36FA               	lsrf	___ftmul@f1+2,f
  6095  03C0  0CF9               	rrf	___ftmul@f1+1,f
  6096  03C1  0CF8               	rrf	___ftmul@f1,f
  6097  03C2  0B89               	decfsz	9,f
  6098  03C3  2BBF               	goto	u2565
  6099  03C4  3001               	movlw	1
  6100  03C5                     u2575:	
  6101  03C5  36A7               	lsrf	___ftmul@f3_as_product+2,f
  6102  03C6  0CA6               	rrf	___ftmul@f3_as_product+1,f
  6103  03C7  0CA5               	rrf	___ftmul@f3_as_product,f
  6104  03C8  0B89               	decfsz	9,f
  6105  03C9  2BC5               	goto	u2575
  6106  03CA  3001               	movlw	1
  6107  03CB  02A8               	subwf	___ftmul@cntr,f
  6108  03CC  1D03               	btfss	3,2
  6109  03CD  2BB6               	goto	l1919
  6110  03CE  0825               	movf	___ftmul@f3_as_product,w
  6111  03CF  00F0               	movwf	___ftpack@arg
  6112  03D0  0826               	movf	___ftmul@f3_as_product+1,w
  6113  03D1  00F1               	movwf	___ftpack@arg+1
  6114  03D2  0827               	movf	___ftmul@f3_as_product+2,w
  6115  03D3  00F2               	movwf	___ftpack@arg+2
  6116  03D4  0824               	movf	___ftmul@exp,w
  6117  03D5  00A0               	movwf	??___ftmul
  6118  03D6  0820               	movf	??___ftmul,w
  6119  03D7  00F3               	movwf	___ftpack@exp
  6120  03D8  0829               	movf	___ftmul@sign,w
  6121  03D9  00A1               	movwf	??___ftmul+1
  6122  03DA  0821               	movf	??___ftmul+1,w
  6123  03DB  00F4               	movwf	___ftpack@sign
  6124  03DC  3180  20C6         	fcall	___ftpack
  6125  03DE  0870               	movf	?___ftpack,w
  6126  03DF  00F8               	movwf	?___ftmul
  6127  03E0  0871               	movf	?___ftpack+1,w
  6128  03E1  00F9               	movwf	?___ftmul+1
  6129  03E2  0872               	movf	?___ftpack+2,w
  6130  03E3  00FA               	movwf	?___ftmul+2
  6131  03E4  0008               	return
  6132  03E5                     __end_of___ftmul:	
  6133                           
  6134                           	psect	text21
  6135  00C6                     __ptext21:	
  6136 ;; *************** function ___ftpack *****************
  6137 ;; Defined at:
  6138 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  6139 ;; Parameters:    Size  Location     Type
  6140 ;;  arg             3    0[COMMON] unsigned um
  6141 ;;  exp             1    3[COMMON] unsigned char 
  6142 ;;  sign            1    4[COMMON] unsigned char 
  6143 ;; Auto vars:     Size  Location     Type
  6144 ;;		None
  6145 ;; Return value:  Size  Location     Type
  6146 ;;                  3    0[COMMON] float 
  6147 ;; Registers used:
  6148 ;;		wreg, status,2, status,0
  6149 ;; Tracked objects:
  6150 ;;		On entry : 0/0
  6151 ;;		On exit  : 0/0
  6152 ;;		Unchanged: 0/0
  6153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6154 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6156 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6157 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6158 ;;Total ram usage:        8 bytes
  6159 ;; Hardware stack levels used:    1
  6160 ;; This function calls:
  6161 ;;		Nothing
  6162 ;; This function is called by:
  6163 ;;		___ftadd
  6164 ;;		___ftmul
  6165 ;;		___lltoft
  6166 ;; This function uses a non-reentrant model
  6167 ;;
  6168                           
  6169                           
  6170                           ;psect for function ___ftpack
  6171  00C6                     ___ftpack:	
  6172                           
  6173                           ;incstack = 0
  6174                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  6175  00C6  0873               	movf	___ftpack@exp,w
  6176  00C7  1903               	btfsc	3,2
  6177  00C8  28CE               	goto	l1471
  6178  00C9  0872               	movf	___ftpack@arg+2,w
  6179  00CA  0471               	iorwf	___ftpack@arg+1,w
  6180  00CB  0470               	iorwf	___ftpack@arg,w
  6181  00CC  1D03               	skipz
  6182  00CD  28DF               	goto	l1477
  6183  00CE                     l1471:	
  6184  00CE  3000               	movlw	0
  6185  00CF  00F0               	movwf	?___ftpack
  6186  00D0  3000               	movlw	0
  6187  00D1  00F1               	movwf	?___ftpack+1
  6188  00D2  3000               	movlw	0
  6189  00D3  00F2               	movwf	?___ftpack+2
  6190  00D4  0008               	return
  6191  00D5                     l1475:	
  6192  00D5  3001               	movlw	1
  6193  00D6  00F5               	movwf	??___ftpack
  6194  00D7  0875               	movf	??___ftpack,w
  6195  00D8  07F3               	addwf	___ftpack@exp,f
  6196  00D9  3001               	movlw	1
  6197  00DA                     u1495:	
  6198  00DA  36F2               	lsrf	___ftpack@arg+2,f
  6199  00DB  0CF1               	rrf	___ftpack@arg+1,f
  6200  00DC  0CF0               	rrf	___ftpack@arg,f
  6201  00DD  0B89               	decfsz	9,f
  6202  00DE  28DA               	goto	u1495
  6203  00DF                     l1477:	
  6204  00DF  30FE               	movlw	254
  6205  00E0  0572               	andwf	___ftpack@arg+2,w
  6206  00E1  1903               	btfsc	3,2
  6207  00E2  28F8               	goto	l405
  6208  00E3  28D5               	goto	l1475
  6209  00E4                     l1479:	
  6210  00E4  3001               	movlw	1
  6211  00E5  00F5               	movwf	??___ftpack
  6212  00E6  0875               	movf	??___ftpack,w
  6213  00E7  07F3               	addwf	___ftpack@exp,f
  6214  00E8  3001               	movlw	1
  6215  00E9  07F0               	addwf	___ftpack@arg,f
  6216  00EA  3000               	movlw	0
  6217  00EB  1803               	skipnc
  6218  00EC  3001               	movlw	1
  6219  00ED  07F1               	addwf	___ftpack@arg+1,f
  6220  00EE  3000               	movlw	0
  6221  00EF  1803               	skipnc
  6222  00F0  3001               	movlw	1
  6223  00F1  07F2               	addwf	___ftpack@arg+2,f
  6224  00F2  3001               	movlw	1
  6225  00F3                     u1515:	
  6226  00F3  36F2               	lsrf	___ftpack@arg+2,f
  6227  00F4  0CF1               	rrf	___ftpack@arg+1,f
  6228  00F5  0CF0               	rrf	___ftpack@arg,f
  6229  00F6  0B89               	decfsz	9,f
  6230  00F7  28F3               	goto	u1515
  6231  00F8                     l405:	
  6232  00F8  30FF               	movlw	255
  6233  00F9  0572               	andwf	___ftpack@arg+2,w
  6234  00FA  1903               	btfsc	3,2
  6235  00FB  2905               	goto	l1487
  6236  00FC  28E4               	goto	l1479
  6237  00FD                     l1485:	
  6238  00FD  3001               	movlw	1
  6239  00FE  02F3               	subwf	___ftpack@exp,f
  6240  00FF  3001               	movlw	1
  6241  0100                     u1535:	
  6242  0100  35F0               	lslf	___ftpack@arg,f
  6243  0101  0DF1               	rlf	___ftpack@arg+1,f
  6244  0102  0DF2               	rlf	___ftpack@arg+2,f
  6245  0103  0B89               	decfsz	9,f
  6246  0104  2900               	goto	u1535
  6247  0105                     l1487:	
  6248  0105  1BF1               	btfsc	___ftpack@arg+1,7
  6249  0106  290B               	goto	l412
  6250  0107  3002               	movlw	2
  6251  0108  0273               	subwf	___ftpack@exp,w
  6252  0109  1803               	skipnc
  6253  010A  28FD               	goto	l1485
  6254  010B                     l412:	
  6255  010B  1873               	btfsc	___ftpack@exp,0
  6256  010C  2913               	goto	l413
  6257  010D  30FF               	movlw	255
  6258  010E  05F0               	andwf	___ftpack@arg,f
  6259  010F  307F               	movlw	127
  6260  0110  05F1               	andwf	___ftpack@arg+1,f
  6261  0111  30FF               	movlw	255
  6262  0112  05F2               	andwf	___ftpack@arg+2,f
  6263  0113                     l413:	
  6264  0113  1003               	clrc
  6265  0114  0CF3               	rrf	___ftpack@exp,f
  6266  0115  0873               	movf	___ftpack@exp,w
  6267  0116  00F5               	movwf	??___ftpack
  6268  0117  01F6               	clrf	??___ftpack+1
  6269  0118  01F7               	clrf	??___ftpack+2
  6270  0119  3010               	movlw	16
  6271  011A                     u1575:	
  6272  011A  35F5               	lslf	??___ftpack,f
  6273  011B  0DF6               	rlf	??___ftpack+1,f
  6274  011C  0DF7               	rlf	??___ftpack+2,f
  6275  011D  0B89               	decfsz	9,f
  6276  011E  291A               	goto	u1575
  6277  011F  0875               	movf	??___ftpack,w
  6278  0120  04F0               	iorwf	___ftpack@arg,f
  6279  0121  0876               	movf	??___ftpack+1,w
  6280  0122  04F1               	iorwf	___ftpack@arg+1,f
  6281  0123  0877               	movf	??___ftpack+2,w
  6282  0124  04F2               	iorwf	___ftpack@arg+2,f
  6283  0125  0874               	movf	___ftpack@sign,w
  6284  0126  1903               	btfsc	3,2
  6285  0127  0008               	return
  6286  0128  17F2               	bsf	___ftpack@arg+2,7
  6287  0129  0008               	return
  6288  012A                     __end_of___ftpack:	
  6289                           
  6290                           	psect	text22
  6291  0F20                     __ptext22:	
  6292 ;; *************** function ___ftge *****************
  6293 ;; Defined at:
  6294 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
  6295 ;; Parameters:    Size  Location     Type
  6296 ;;  ff1             3    0[COMMON] float 
  6297 ;;  ff2             3    3[COMMON] float 
  6298 ;; Auto vars:     Size  Location     Type
  6299 ;;		None
  6300 ;; Return value:  Size  Location     Type
  6301 ;;		None               void
  6302 ;; Registers used:
  6303 ;;		wreg, status,2, status,0
  6304 ;; Tracked objects:
  6305 ;;		On entry : 0/0
  6306 ;;		On exit  : 0/0
  6307 ;;		Unchanged: 0/0
  6308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6309 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6311 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6312 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6313 ;;Total ram usage:        9 bytes
  6314 ;; Hardware stack levels used:    1
  6315 ;; This function calls:
  6316 ;;		Nothing
  6317 ;; This function is called by:
  6318 ;;		_main
  6319 ;;		_ftoa
  6320 ;; This function uses a non-reentrant model
  6321 ;;
  6322                           
  6323                           
  6324                           ;psect for function ___ftge
  6325  0F20                     ___ftge:	
  6326                           
  6327                           ;incstack = 0
  6328                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  6329  0F20  1FF2               	btfss	___ftge@ff1+2,7
  6330  0F21  2F36               	goto	l1867
  6331  0F22  0970               	comf	___ftge@ff1,w
  6332  0F23  00F6               	movwf	??___ftge
  6333  0F24  0971               	comf	___ftge@ff1+1,w
  6334  0F25  00F7               	movwf	??___ftge+1
  6335  0F26  0972               	comf	___ftge@ff1+2,w
  6336  0F27  00F8               	movwf	??___ftge+2
  6337  0F28  0AF6               	incf	??___ftge,f
  6338  0F29  1903               	skipnz
  6339  0F2A  0AF7               	incf	??___ftge+1,f
  6340  0F2B  1903               	skipnz
  6341  0F2C  0AF8               	incf	??___ftge+2,f
  6342  0F2D  3000               	movlw	0
  6343  0F2E  0776               	addwf	??___ftge,w
  6344  0F2F  00F0               	movwf	___ftge@ff1
  6345  0F30  3000               	movlw	0
  6346  0F31  3D77               	addwfc	??___ftge+1,w
  6347  0F32  00F1               	movwf	___ftge@ff1+1
  6348  0F33  3080               	movlw	128
  6349  0F34  3D78               	addwfc	??___ftge+2,w
  6350  0F35  00F2               	movwf	___ftge@ff1+2
  6351  0F36                     l1867:	
  6352  0F36  1FF5               	btfss	___ftge@ff2+2,7
  6353  0F37  2F4C               	goto	l1871
  6354  0F38  0973               	comf	___ftge@ff2,w
  6355  0F39  00F6               	movwf	??___ftge
  6356  0F3A  0974               	comf	___ftge@ff2+1,w
  6357  0F3B  00F7               	movwf	??___ftge+1
  6358  0F3C  0975               	comf	___ftge@ff2+2,w
  6359  0F3D  00F8               	movwf	??___ftge+2
  6360  0F3E  0AF6               	incf	??___ftge,f
  6361  0F3F  1903               	skipnz
  6362  0F40  0AF7               	incf	??___ftge+1,f
  6363  0F41  1903               	skipnz
  6364  0F42  0AF8               	incf	??___ftge+2,f
  6365  0F43  3000               	movlw	0
  6366  0F44  0776               	addwf	??___ftge,w
  6367  0F45  00F3               	movwf	___ftge@ff2
  6368  0F46  3000               	movlw	0
  6369  0F47  3D77               	addwfc	??___ftge+1,w
  6370  0F48  00F4               	movwf	___ftge@ff2+1
  6371  0F49  3080               	movlw	128
  6372  0F4A  3D78               	addwfc	??___ftge+2,w
  6373  0F4B  00F5               	movwf	___ftge@ff2+2
  6374  0F4C                     l1871:	
  6375  0F4C  3080               	movlw	128
  6376  0F4D  06F2               	xorwf	___ftge@ff1+2,f
  6377  0F4E  3080               	movlw	128
  6378  0F4F  06F5               	xorwf	___ftge@ff2+2,f
  6379  0F50  0875               	movf	___ftge@ff2+2,w
  6380  0F51  0272               	subwf	___ftge@ff1+2,w
  6381  0F52  1D03               	skipz
  6382  0F53  0008               	return
  6383  0F54  0874               	movf	___ftge@ff2+1,w
  6384  0F55  0271               	subwf	___ftge@ff1+1,w
  6385  0F56  1D03               	skipz
  6386  0F57  0008               	return
  6387  0F58  0873               	movf	___ftge@ff2,w
  6388  0F59  0270               	subwf	___ftge@ff1,w
  6389  0F5A  0008               	return
  6390  0F5B                     __end_of___ftge:	
  6391                           
  6392                           	psect	text23
  6393  0D4E                     __ptext23:	
  6394 ;; *************** function _OLED_Write_String *****************
  6395 ;; Defined at:
  6396 ;;		line 284 in file "oled.c"
  6397 ;; Parameters:    Size  Location     Type
  6398 ;;  s               2   12[COMMON] PTR unsigned char 
  6399 ;;		 -> ftoa@buf(17), STR_8(6), STR_7(6), OLED_Write_Integer@s(20), 
  6400 ;;		 -> STR_6(13), STR_5(15), STR_4(13), STR_3(8), 
  6401 ;;		 -> STR_2(10), STR_1(13), 
  6402 ;; Auto vars:     Size  Location     Type
  6403 ;;		None
  6404 ;; Return value:  Size  Location     Type
  6405 ;;                  1    wreg      void 
  6406 ;; Registers used:
  6407 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6408 ;; Tracked objects:
  6409 ;;		On entry : 0/0
  6410 ;;		On exit  : 0/0
  6411 ;;		Unchanged: 0/0
  6412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6413 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6415 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6416 ;;      Totals:         2       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6417 ;;Total ram usage:        3 bytes
  6418 ;; Hardware stack levels used:    1
  6419 ;; Hardware stack levels required when called:    2
  6420 ;; This function calls:
  6421 ;;		_OLED_PutChar
  6422 ;; This function is called by:
  6423 ;;		_main
  6424 ;;		_OLED_Write_Integer
  6425 ;;		_OLED_Write_Float
  6426 ;; This function uses a non-reentrant model
  6427 ;;
  6428                           
  6429                           
  6430                           ;psect for function _OLED_Write_String
  6431  0D4E                     _OLED_Write_String:	
  6432  0D4E                     l2041:	
  6433                           ;oled.c: 286: while (*s) OLED_PutChar( *s++);
  6434                           
  6435                           ;incstack = 0
  6436                           ; Regs used in _OLED_Write_String: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6437                           
  6438  0D4E  087C               	movf	OLED_Write_String@s,w
  6439  0D4F  0084               	movwf	4
  6440  0D50  087D               	movf	OLED_Write_String@s+1,w
  6441  0D51  0085               	movwf	5
  6442  0D52  0012               	moviw fsr0++
  6443  0D53  1903               	btfsc	3,2
  6444  0D54  0008               	return
  6445  0D55  087C               	movf	OLED_Write_String@s,w
  6446  0D56  0084               	movwf	4
  6447  0D57  087D               	movf	OLED_Write_String@s+1,w
  6448  0D58  0085               	movwf	5
  6449  0D59  0800               	movf	0,w	;code access
  6450  0D5A  3181  218F  318D   	fcall	_OLED_PutChar
  6451  0D5D  3001               	movlw	1
  6452  0D5E  07FC               	addwf	OLED_Write_String@s,f
  6453  0D5F  3000               	movlw	0
  6454  0D60  3DFD               	addwfc	OLED_Write_String@s+1,f
  6455  0D61  2D4E               	goto	l2041
  6456  0D62                     __end_of_OLED_Write_String:	
  6457                           
  6458                           	psect	text24
  6459  0062                     __ptext24:	
  6460 ;; *************** function _OLED_Init *****************
  6461 ;; Defined at:
  6462 ;;		line 174 in file "oled.c"
  6463 ;; Parameters:    Size  Location     Type
  6464 ;;		None
  6465 ;; Auto vars:     Size  Location     Type
  6466 ;;		None
  6467 ;; Return value:  Size  Location     Type
  6468 ;;                  1    wreg      void 
  6469 ;; Registers used:
  6470 ;;		wreg, status,2, status,0, pclath, cstack
  6471 ;; Tracked objects:
  6472 ;;		On entry : 0/0
  6473 ;;		On exit  : 0/0
  6474 ;;		Unchanged: 0/0
  6475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6480 ;;Total ram usage:        0 bytes
  6481 ;; Hardware stack levels used:    1
  6482 ;; Hardware stack levels required when called:    2
  6483 ;; This function calls:
  6484 ;;		_OLED_Command
  6485 ;; This function is called by:
  6486 ;;		_main
  6487 ;; This function uses a non-reentrant model
  6488 ;;
  6489                           
  6490                           
  6491                           ;psect for function _OLED_Init
  6492  0062                     _OLED_Init:	
  6493                           
  6494                           ;oled.c: 176: OLED_Command(0xAE);
  6495                           
  6496                           ;incstack = 0
  6497                           ; Regs used in _OLED_Init: [wreg+status,2+status,0+pclath+cstack]
  6498  0062  30AE               	movlw	174
  6499  0063  318D  2598  3180   	fcall	_OLED_Command
  6500                           
  6501                           ;oled.c: 177: OLED_Command(0xD5);
  6502  0066  30D5               	movlw	213
  6503  0067  318D  2598  3180   	fcall	_OLED_Command
  6504                           
  6505                           ;oled.c: 178: OLED_Command(0x80);
  6506  006A  3080               	movlw	128
  6507  006B  318D  2598  3180   	fcall	_OLED_Command
  6508                           
  6509                           ;oled.c: 179: OLED_Command(0xA8);
  6510  006E  30A8               	movlw	168
  6511  006F  318D  2598  3180   	fcall	_OLED_Command
  6512                           
  6513                           ;oled.c: 180: OLED_Command(0x1F);
  6514  0072  301F               	movlw	31
  6515  0073  318D  2598  3180   	fcall	_OLED_Command
  6516                           
  6517                           ;oled.c: 181: OLED_Command(0xD3);
  6518  0076  30D3               	movlw	211
  6519  0077  318D  2598  3180   	fcall	_OLED_Command
  6520                           
  6521                           ;oled.c: 182: OLED_Command(0x0);
  6522  007A  3000               	movlw	0
  6523  007B  318D  2598  3180   	fcall	_OLED_Command
  6524                           
  6525                           ;oled.c: 183: OLED_Command(0x40 | 0x0);
  6526  007E  3040               	movlw	64
  6527  007F  318D  2598  3180   	fcall	_OLED_Command
  6528                           
  6529                           ;oled.c: 184: OLED_Command(0x8D);
  6530  0082  308D               	movlw	141
  6531  0083  318D  2598  3180   	fcall	_OLED_Command
  6532                           
  6533                           ;oled.c: 185: OLED_Command(0xAF);
  6534  0086  30AF               	movlw	175
  6535  0087  318D  2598  3180   	fcall	_OLED_Command
  6536                           
  6537                           ;oled.c: 186: OLED_Command(0x20);
  6538  008A  3020               	movlw	32
  6539  008B  318D  2598  3180   	fcall	_OLED_Command
  6540                           
  6541                           ;oled.c: 187: OLED_Command(0x00);
  6542  008E  3000               	movlw	0
  6543  008F  318D  2598  3180   	fcall	_OLED_Command
  6544                           
  6545                           ;oled.c: 188: OLED_Command(0xA0 | 0x1);
  6546  0092  30A1               	movlw	161
  6547  0093  318D  2598  3180   	fcall	_OLED_Command
  6548                           
  6549                           ;oled.c: 189: OLED_Command(0xC8);
  6550  0096  30C8               	movlw	200
  6551  0097  318D  2598  3180   	fcall	_OLED_Command
  6552                           
  6553                           ;oled.c: 190: OLED_Command(0xDA);
  6554  009A  30DA               	movlw	218
  6555  009B  318D  2598  3180   	fcall	_OLED_Command
  6556                           
  6557                           ;oled.c: 191: OLED_Command(0x02);
  6558  009E  3002               	movlw	2
  6559  009F  318D  2598  3180   	fcall	_OLED_Command
  6560                           
  6561                           ;oled.c: 192: OLED_Command(0x81);
  6562  00A2  3081               	movlw	129
  6563  00A3  318D  2598  3180   	fcall	_OLED_Command
  6564                           
  6565                           ;oled.c: 193: OLED_Command(0x8F);
  6566  00A6  308F               	movlw	143
  6567  00A7  318D  2598  3180   	fcall	_OLED_Command
  6568                           
  6569                           ;oled.c: 194: OLED_Command(0xD9);
  6570  00AA  30D9               	movlw	217
  6571  00AB  318D  2598  3180   	fcall	_OLED_Command
  6572                           
  6573                           ;oled.c: 195: OLED_Command(0xF1);
  6574  00AE  30F1               	movlw	241
  6575  00AF  318D  2598  3180   	fcall	_OLED_Command
  6576                           
  6577                           ;oled.c: 196: OLED_Command(0xDB);
  6578  00B2  30DB               	movlw	219
  6579  00B3  318D  2598  3180   	fcall	_OLED_Command
  6580                           
  6581                           ;oled.c: 197: OLED_Command(0x40);
  6582  00B6  3040               	movlw	64
  6583  00B7  318D  2598  3180   	fcall	_OLED_Command
  6584                           
  6585                           ;oled.c: 198: OLED_Command(0xA4);
  6586  00BA  30A4               	movlw	164
  6587  00BB  318D  2598  3180   	fcall	_OLED_Command
  6588                           
  6589                           ;oled.c: 199: OLED_Command(0xA6);
  6590  00BE  30A6               	movlw	166
  6591  00BF  318D  2598  3180   	fcall	_OLED_Command
  6592                           
  6593                           ;oled.c: 200: OLED_Command(0xAF);
  6594  00C2  30AF               	movlw	175
  6595  00C3  318D  2598         	fcall	_OLED_Command
  6596  00C5  0008               	return
  6597  00C6                     __end_of_OLED_Init:	
  6598                           
  6599                           	psect	text25
  6600  0EBC                     __ptext25:	
  6601 ;; *************** function _OLED_Clear *****************
  6602 ;; Defined at:
  6603 ;;		line 264 in file "oled.c"
  6604 ;; Parameters:    Size  Location     Type
  6605 ;;		None
  6606 ;; Auto vars:     Size  Location     Type
  6607 ;;  col             2   22[BANK0 ] unsigned int 
  6608 ;;  row             2   20[BANK0 ] unsigned int 
  6609 ;; Return value:  Size  Location     Type
  6610 ;;                  1    wreg      void 
  6611 ;; Registers used:
  6612 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6613 ;; Tracked objects:
  6614 ;;		On entry : 0/0
  6615 ;;		On exit  : 0/0
  6616 ;;		Unchanged: 0/0
  6617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6619 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6620 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6621 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6622 ;;Total ram usage:        5 bytes
  6623 ;; Hardware stack levels used:    1
  6624 ;; Hardware stack levels required when called:    3
  6625 ;; This function calls:
  6626 ;;		_OLED_PutChar
  6627 ;;		_OLED_YX
  6628 ;; This function is called by:
  6629 ;;		_main
  6630 ;; This function uses a non-reentrant model
  6631 ;;
  6632                           
  6633                           
  6634                           ;psect for function _OLED_Clear
  6635  0EBC                     _OLED_Clear:	
  6636                           
  6637                           ;oled.c: 266: for ( uint16_t row = 0; row < 8; row++ ) {
  6638                           
  6639                           ;incstack = 0
  6640                           ; Regs used in _OLED_Clear: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6641  0EBC  0020               	movlb	0	; select bank0
  6642  0EBD  01B4               	clrf	OLED_Clear@row
  6643  0EBE  01B5               	clrf	OLED_Clear@row+1
  6644  0EBF                     L3:	
  6645  0EBF  3000               	movlw	0
  6646  0EC0  0235               	subwf	OLED_Clear@row+1,w
  6647  0EC1  3008               	movlw	8
  6648  0EC2  1903               	skipnz
  6649  0EC3  0234               	subwf	OLED_Clear@row,w
  6650  0EC4  1803               	btfsc	3,0
  6651  0EC5  0008               	return
  6652                           
  6653                           ;oled.c: 267: for ( uint16_t col = 0; col < 16; col++ ) {
  6654  0EC6  01B6               	clrf	OLED_Clear@col
  6655  0EC7  01B7               	clrf	OLED_Clear@col+1
  6656  0EC8  3000               	movlw	0
  6657  0EC9  0237               	subwf	OLED_Clear@col+1,w
  6658  0ECA  3010               	movlw	16
  6659  0ECB  1903               	skipnz
  6660  0ECC  0236               	subwf	OLED_Clear@col,w
  6661  0ECD  1803               	btfsc	3,0
  6662  0ECE  2EE7               	goto	l2139
  6663  0ECF                     l2131:	
  6664                           
  6665                           ;oled.c: 268: OLED_YX( row, col );
  6666  0ECF  0836               	movf	OLED_Clear@col,w
  6667  0ED0  00FC               	movwf	??_OLED_Clear
  6668  0ED1  087C               	movf	??_OLED_Clear,w
  6669  0ED2  00F5               	movwf	OLED_YX@Column
  6670  0ED3  0834               	movf	OLED_Clear@row,w
  6671  0ED4  318E  2618  318E   	fcall	_OLED_YX
  6672                           
  6673                           ;oled.c: 269: OLED_PutChar(' ');
  6674  0ED7  3020               	movlw	32
  6675  0ED8  3181  218F  318E   	fcall	_OLED_PutChar
  6676  0EDB  3001               	movlw	1
  6677  0EDC  0020               	movlb	0	; select bank0
  6678  0EDD  07B6               	addwf	OLED_Clear@col,f
  6679  0EDE  3000               	movlw	0
  6680  0EDF  3DB7               	addwfc	OLED_Clear@col+1,f
  6681  0EE0  3000               	movlw	0
  6682  0EE1  0237               	subwf	OLED_Clear@col+1,w
  6683  0EE2  3010               	movlw	16
  6684  0EE3  1903               	skipnz
  6685  0EE4  0236               	subwf	OLED_Clear@col,w
  6686  0EE5  1C03               	skipc
  6687  0EE6  2ECF               	goto	l2131
  6688  0EE7                     l2139:	
  6689  0EE7  3001               	movlw	1
  6690  0EE8  07B4               	addwf	OLED_Clear@row,f
  6691  0EE9  3000               	movlw	0
  6692  0EEA  3DB5               	addwfc	OLED_Clear@row+1,f
  6693  0EEB  2EBF               	goto	L3
  6694  0EEC                     __end_of_OLED_Clear:	
  6695                           
  6696                           	psect	text26
  6697  0E18                     __ptext26:	
  6698 ;; *************** function _OLED_YX *****************
  6699 ;; Defined at:
  6700 ;;		line 213 in file "oled.c"
  6701 ;; Parameters:    Size  Location     Type
  6702 ;;  Row             1    wreg     unsigned char 
  6703 ;;  Column          1    5[COMMON] unsigned char 
  6704 ;; Auto vars:     Size  Location     Type
  6705 ;;  Row             1    9[COMMON] unsigned char 
  6706 ;; Return value:  Size  Location     Type
  6707 ;;                  1    wreg      void 
  6708 ;; Registers used:
  6709 ;;		wreg, status,2, status,0, pclath, cstack
  6710 ;; Tracked objects:
  6711 ;;		On entry : 0/0
  6712 ;;		On exit  : 0/0
  6713 ;;		Unchanged: 0/0
  6714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6715 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6716 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6717 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6718 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6719 ;;Total ram usage:        5 bytes
  6720 ;; Hardware stack levels used:    1
  6721 ;; Hardware stack levels required when called:    2
  6722 ;; This function calls:
  6723 ;;		_OLED_Command
  6724 ;; This function is called by:
  6725 ;;		_main
  6726 ;;		_OLED_Clear
  6727 ;; This function uses a non-reentrant model
  6728 ;;
  6729                           
  6730                           
  6731                           ;psect for function _OLED_YX
  6732  0E18                     _OLED_YX:	
  6733                           
  6734                           ;incstack = 0
  6735                           ; Regs used in _OLED_YX: [wreg+status,2+status,0+pclath+cstack]
  6736                           ;OLED_YX@Row stored from wreg
  6737  0E18  00F9               	movwf	OLED_YX@Row
  6738                           
  6739                           ;oled.c: 215: OLED_Command( 0xB0 + Row);
  6740  0E19  0879               	movf	OLED_YX@Row,w
  6741  0E1A  3EB0               	addlw	176
  6742  0E1B  318D  2598  318E   	fcall	_OLED_Command
  6743                           
  6744                           ;oled.c: 216: OLED_Command( 0x00 + (8*Column & 0x0F) );
  6745  0E1E  0875               	movf	OLED_YX@Column,w
  6746  0E1F  00F6               	movwf	??_OLED_YX
  6747  0E20  3002               	movlw	2
  6748  0E21                     u2765:	
  6749  0E21  35F6               	lslf	??_OLED_YX,f
  6750  0E22  3EFF               	addlw	-1
  6751  0E23  1D03               	skipz
  6752  0E24  2E21               	goto	u2765
  6753  0E25  3576               	lslf	??_OLED_YX,w
  6754  0E26  390F               	andlw	15
  6755  0E27  318D  2598  318E   	fcall	_OLED_Command
  6756                           
  6757                           ;oled.c: 217: OLED_Command( 0x10 + ((8*Column>>4)&0x0F) );
  6758  0E2A  0875               	movf	OLED_YX@Column,w
  6759  0E2B  00F6               	movwf	??_OLED_YX
  6760  0E2C  01F7               	clrf	??_OLED_YX+1
  6761  0E2D  35F6               	lslf	??_OLED_YX,f
  6762  0E2E  0DF7               	rlf	??_OLED_YX+1,f
  6763  0E2F  35F6               	lslf	??_OLED_YX,f
  6764  0E30  0DF7               	rlf	??_OLED_YX+1,f
  6765  0E31  35F6               	lslf	??_OLED_YX,f
  6766  0E32  0DF7               	rlf	??_OLED_YX+1,f
  6767  0E33  3004               	movlw	4
  6768  0E34  00F8               	movwf	??_OLED_YX+2
  6769  0E35                     u2775:	
  6770  0E35  0D77               	rlf	??_OLED_YX+1,w
  6771  0E36  0CF7               	rrf	??_OLED_YX+1,f
  6772  0E37  0CF6               	rrf	??_OLED_YX,f
  6773  0E38  0BF8               	decfsz	??_OLED_YX+2,f
  6774  0E39  2E35               	goto	u2775
  6775  0E3A  0876               	movf	??_OLED_YX,w
  6776  0E3B  390F               	andlw	15
  6777  0E3C  3E10               	addlw	16
  6778  0E3D  318D  2598         	fcall	_OLED_Command
  6779  0E3F  0008               	return
  6780  0E40                     __end_of_OLED_YX:	
  6781                           
  6782                           	psect	text27
  6783  0D98                     __ptext27:	
  6784 ;; *************** function _OLED_Command *****************
  6785 ;; Defined at:
  6786 ;;		line 138 in file "oled.c"
  6787 ;; Parameters:    Size  Location     Type
  6788 ;;  temp            1    wreg     unsigned char 
  6789 ;; Auto vars:     Size  Location     Type
  6790 ;;  temp            1    4[COMMON] unsigned char 
  6791 ;; Return value:  Size  Location     Type
  6792 ;;                  1    wreg      void 
  6793 ;; Registers used:
  6794 ;;		wreg, status,2, status,0, pclath, cstack
  6795 ;; Tracked objects:
  6796 ;;		On entry : 0/0
  6797 ;;		On exit  : 0/0
  6798 ;;		Unchanged: 0/0
  6799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6801 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6802 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6803 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6804 ;;Total ram usage:        3 bytes
  6805 ;; Hardware stack levels used:    1
  6806 ;; Hardware stack levels required when called:    1
  6807 ;; This function calls:
  6808 ;;		_Send_I2C_Data
  6809 ;;		_Send_I2C_StartBit
  6810 ;;		_Send_I2C_StopBit
  6811 ;; This function is called by:
  6812 ;;		_OLED_Init
  6813 ;;		_OLED_YX
  6814 ;; This function uses a non-reentrant model
  6815 ;;
  6816                           
  6817                           
  6818                           ;psect for function _OLED_Command
  6819  0D98                     _OLED_Command:	
  6820                           
  6821                           ;incstack = 0
  6822                           ; Regs used in _OLED_Command: [wreg+status,2+status,0+pclath+cstack]
  6823                           ;OLED_Command@temp stored from wreg
  6824  0D98  00F4               	movwf	OLED_Command@temp
  6825                           
  6826                           ;oled.c: 140: Send_I2C_StartBit();
  6827  0D99  318D  250D  318D   	fcall	_Send_I2C_StartBit
  6828                           
  6829                           ;oled.c: 141: Send_I2C_Data(0x3C << 1);
  6830  0D9C  3078               	movlw	120
  6831  0D9D  00F0               	movwf	Send_I2C_Data@databyte
  6832  0D9E  3000               	movlw	0
  6833  0D9F  00F1               	movwf	Send_I2C_Data@databyte+1
  6834  0DA0  318D  2525  318D   	fcall	_Send_I2C_Data
  6835                           
  6836                           ;oled.c: 142: Send_I2C_Data(0x00);
  6837  0DA3  3000               	movlw	0
  6838  0DA4  00F0               	movwf	Send_I2C_Data@databyte
  6839  0DA5  00F1               	movwf	Send_I2C_Data@databyte+1
  6840  0DA6  318D  2525  318D   	fcall	_Send_I2C_Data
  6841                           
  6842                           ;oled.c: 143: Send_I2C_Data(temp);
  6843  0DA9  0874               	movf	OLED_Command@temp,w
  6844  0DAA  00F2               	movwf	??_OLED_Command
  6845  0DAB  01F3               	clrf	??_OLED_Command+1
  6846  0DAC  0872               	movf	??_OLED_Command,w
  6847  0DAD  00F0               	movwf	Send_I2C_Data@databyte
  6848  0DAE  0873               	movf	??_OLED_Command+1,w
  6849  0DAF  00F1               	movwf	Send_I2C_Data@databyte+1
  6850  0DB0  318D  2525  318D   	fcall	_Send_I2C_Data
  6851                           
  6852                           ;oled.c: 144: Send_I2C_StopBit();
  6853  0DB3  318D  2515         	fcall	_Send_I2C_StopBit
  6854  0DB5  0008               	return
  6855  0DB6                     __end_of_OLED_Command:	
  6856                           
  6857                           	psect	text28
  6858  018F                     __ptext28:	
  6859 ;; *************** function _OLED_PutChar *****************
  6860 ;; Defined at:
  6861 ;;		line 229 in file "oled.c"
  6862 ;; Parameters:    Size  Location     Type
  6863 ;;  ch              1    wreg     unsigned char 
  6864 ;; Auto vars:     Size  Location     Type
  6865 ;;  ch              1   19[BANK0 ] unsigned char 
  6866 ;;  bytes           9    6[BANK0 ] unsigned char [9]
  6867 ;;  i               2   17[BANK0 ] int 
  6868 ;;  base            2   15[BANK0 ] PTR const unsigned char 
  6869 ;;		 -> OledFont(768), 
  6870 ;; Return value:  Size  Location     Type
  6871 ;;                  1    wreg      void 
  6872 ;; Registers used:
  6873 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6874 ;; Tracked objects:
  6875 ;;		On entry : 0/0
  6876 ;;		On exit  : 0/0
  6877 ;;		Unchanged: 0/0
  6878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6880 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6881 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6882 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6883 ;;Total ram usage:       20 bytes
  6884 ;; Hardware stack levels used:    1
  6885 ;; Hardware stack levels required when called:    1
  6886 ;; This function calls:
  6887 ;;		_Send_I2C_Data
  6888 ;;		_Send_I2C_StartBit
  6889 ;;		_Send_I2C_StopBit
  6890 ;;		_memmove
  6891 ;; This function is called by:
  6892 ;;		_OLED_Clear
  6893 ;;		_OLED_Write_String
  6894 ;; This function uses a non-reentrant model
  6895 ;;
  6896                           
  6897                           
  6898                           ;psect for function _OLED_PutChar
  6899  018F                     _OLED_PutChar:	
  6900                           
  6901                           ;incstack = 0
  6902                           ; Regs used in _OLED_PutChar: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6903                           ;OLED_PutChar@ch stored from wreg
  6904  018F  0020               	movlb	0	; select bank0
  6905  0190  00B3               	movwf	OLED_PutChar@ch
  6906                           
  6907                           ;oled.c: 231: if ( ( ch < 32 ) || ( ch > 127 ) ){
  6908  0191  3020               	movlw	32
  6909  0192  0233               	subwf	OLED_PutChar@ch,w
  6910  0193  1C03               	skipc
  6911  0194  2999               	goto	l1731
  6912  0195  3080               	movlw	128
  6913  0196  0233               	subwf	OLED_PutChar@ch,w
  6914  0197  1C03               	skipc
  6915  0198  299D               	goto	l1733
  6916  0199                     l1731:	
  6917                           
  6918                           ;oled.c: 232: ch = ' ';
  6919  0199  3020               	movlw	32
  6920  019A  00A0               	movwf	??_OLED_PutChar
  6921  019B  0820               	movf	??_OLED_PutChar,w
  6922  019C  00B3               	movwf	OLED_PutChar@ch
  6923  019D                     l1733:	
  6924                           
  6925                           ;oled.c: 233: }
  6926                           ;oled.c: 235: const uint8_t *base = &OledFont[ch - 32][0];
  6927  019D  0833               	movf	OLED_PutChar@ch,w
  6928  019E  00A0               	movwf	??_OLED_PutChar
  6929  019F  01A1               	clrf	??_OLED_PutChar+1
  6930  01A0  35A0               	lslf	??_OLED_PutChar,f
  6931  01A1  0DA1               	rlf	??_OLED_PutChar+1,f
  6932  01A2  35A0               	lslf	??_OLED_PutChar,f
  6933  01A3  0DA1               	rlf	??_OLED_PutChar+1,f
  6934  01A4  35A0               	lslf	??_OLED_PutChar,f
  6935  01A5  0DA1               	rlf	??_OLED_PutChar+1,f
  6936  01A6  0820               	movf	??_OLED_PutChar,w
  6937  01A7  3E00               	addlw	0
  6938  01A8  00A2               	movwf	??_OLED_PutChar+2
  6939  01A9  30FF               	movlw	255
  6940  01AA  3D21               	addwfc	??_OLED_PutChar+1,w
  6941  01AB  00A3               	movwf	??_OLED_PutChar+3
  6942  01AC  3028               	movlw	low (_OledFont| (0+32768))
  6943  01AD  00A4               	movwf	??_OLED_PutChar+4
  6944  01AE  3088               	movlw	high (_OledFont| (0+32768))
  6945  01AF  00A5               	movwf	??_OLED_PutChar+5
  6946  01B0  0822               	movf	??_OLED_PutChar+2,w
  6947  01B1  0724               	addwf	??_OLED_PutChar+4,w
  6948  01B2  00AF               	movwf	OLED_PutChar@base
  6949  01B3  0823               	movf	??_OLED_PutChar+3,w
  6950  01B4  3D25               	addwfc	??_OLED_PutChar+5,w
  6951  01B5  00B0               	movwf	OLED_PutChar@base+1
  6952                           
  6953                           ;oled.c: 237: uint8_t bytes[9];
  6954                           ;oled.c: 238: bytes[0] = 0x40;
  6955  01B6  3040               	movlw	64
  6956  01B7  00A0               	movwf	??_OLED_PutChar
  6957  01B8  0820               	movf	??_OLED_PutChar,w
  6958  01B9  00A6               	movwf	OLED_PutChar@bytes
  6959                           
  6960                           ;oled.c: 239: memmove( bytes + 1, base, 8 );
  6961  01BA  0830               	movf	OLED_PutChar@base+1,w
  6962  01BB  00F1               	movwf	memmove@s1+1
  6963  01BC  082F               	movf	OLED_PutChar@base,w
  6964  01BD  00F0               	movwf	memmove@s1
  6965  01BE  3008               	movlw	8
  6966  01BF  00F2               	movwf	memmove@n
  6967  01C0  3000               	movlw	0
  6968  01C1  00F3               	movwf	memmove@n+1
  6969  01C2  3027               	movlw	(low ((OLED_PutChar@bytes| 0+1)))& (0+255)
  6970  01C3  3181  212A  3181   	fcall	_memmove
  6971                           
  6972                           ;oled.c: 241: Send_I2C_StartBit();
  6973  01C6  318D  250D  3181   	fcall	_Send_I2C_StartBit
  6974                           
  6975                           ;oled.c: 242: Send_I2C_Data(0x3C << 1);
  6976  01C9  3078               	movlw	120
  6977  01CA  00F0               	movwf	Send_I2C_Data@databyte
  6978  01CB  3000               	movlw	0
  6979  01CC  00F1               	movwf	Send_I2C_Data@databyte+1
  6980  01CD  318D  2525  3181   	fcall	_Send_I2C_Data
  6981                           
  6982                           ;oled.c: 243: Send_I2C_Data(0x40);
  6983  01D0  3040               	movlw	64
  6984  01D1  00F0               	movwf	Send_I2C_Data@databyte
  6985  01D2  3000               	movlw	0
  6986  01D3  00F1               	movwf	Send_I2C_Data@databyte+1
  6987  01D4  318D  2525  3181   	fcall	_Send_I2C_Data
  6988                           
  6989                           ;oled.c: 245: int i;
  6990                           ;oled.c: 247: for (i = 1; i <= 8; i++){
  6991  01D7  3001               	movlw	1
  6992  01D8  0020               	movlb	0	; select bank0
  6993  01D9  00B1               	movwf	OLED_PutChar@i
  6994  01DA  3000               	movlw	0
  6995  01DB  00B2               	movwf	OLED_PutChar@i+1
  6996  01DC  0832               	movf	OLED_PutChar@i+1,w
  6997  01DD  3A80               	xorlw	128
  6998  01DE  00A0               	movwf	??_OLED_PutChar
  6999  01DF  3080               	movlw	128
  7000  01E0  0220               	subwf	??_OLED_PutChar,w
  7001  01E1  1D03               	skipz
  7002  01E2  29E5               	goto	u2245
  7003  01E3  3009               	movlw	9
  7004  01E4  0231               	subwf	OLED_PutChar@i,w
  7005  01E5                     u2245:	
  7006  01E5  1803               	btfsc	3,0
  7007  01E6  2A06               	goto	l1757
  7008  01E7                     l1751:	
  7009                           
  7010                           ;oled.c: 248: Send_I2C_Data(bytes[i]);
  7011  01E7  0020               	movlb	0	; select bank0
  7012  01E8  0831               	movf	OLED_PutChar@i,w
  7013  01E9  3E26               	addlw	(low (OLED_PutChar@bytes| 0))& (0+255)
  7014  01EA  0086               	movwf	6
  7015  01EB  0187               	clrf	7
  7016  01EC  0801               	movf	1,w
  7017  01ED  00A0               	movwf	??_OLED_PutChar
  7018  01EE  01A1               	clrf	??_OLED_PutChar+1
  7019  01EF  0820               	movf	??_OLED_PutChar,w
  7020  01F0  00F0               	movwf	Send_I2C_Data@databyte
  7021  01F1  0821               	movf	??_OLED_PutChar+1,w
  7022  01F2  00F1               	movwf	Send_I2C_Data@databyte+1
  7023  01F3  318D  2525  3181   	fcall	_Send_I2C_Data
  7024  01F6  3001               	movlw	1
  7025  01F7  0020               	movlb	0	; select bank0
  7026  01F8  07B1               	addwf	OLED_PutChar@i,f
  7027  01F9  3000               	movlw	0
  7028  01FA  3DB2               	addwfc	OLED_PutChar@i+1,f
  7029  01FB  0832               	movf	OLED_PutChar@i+1,w
  7030  01FC  3A80               	xorlw	128
  7031  01FD  00A0               	movwf	??_OLED_PutChar
  7032  01FE  3080               	movlw	128
  7033  01FF  0220               	subwf	??_OLED_PutChar,w
  7034  0200  1D03               	skipz
  7035  0201  2A04               	goto	u2255
  7036  0202  3009               	movlw	9
  7037  0203  0231               	subwf	OLED_PutChar@i,w
  7038  0204                     u2255:	
  7039  0204  1C03               	skipc
  7040  0205  29E7               	goto	l1751
  7041  0206                     l1757:	
  7042                           
  7043                           ;oled.c: 249: }
  7044                           ;oled.c: 251: Send_I2C_StopBit();
  7045  0206  318D  2515         	fcall	_Send_I2C_StopBit
  7046  0208  0008               	return
  7047  0209                     __end_of_OLED_PutChar:	
  7048                           
  7049                           	psect	text29
  7050  012A                     __ptext29:	
  7051 ;; *************** function _memmove *****************
  7052 ;; Defined at:
  7053 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\memmove.c"
  7054 ;; Parameters:    Size  Location     Type
  7055 ;;  d1              1    wreg     PTR void 
  7056 ;;		 -> OLED_PutChar@bytes(9), 
  7057 ;;  s1              2    0[COMMON] PTR const void 
  7058 ;;		 -> OledFont(768), 
  7059 ;;  n               2    2[COMMON] unsigned int 
  7060 ;; Auto vars:     Size  Location     Type
  7061 ;;  d1              1    8[COMMON] PTR void 
  7062 ;;		 -> OLED_PutChar@bytes(9), 
  7063 ;;  s               2    9[COMMON] PTR const unsigned char 
  7064 ;;		 -> OledFont(768), 
  7065 ;;  d               1   11[COMMON] PTR unsigned char 
  7066 ;;		 -> OLED_PutChar@bytes(9), 
  7067 ;; Return value:  Size  Location     Type
  7068 ;;                  1    wreg      PTR void 
  7069 ;; Registers used:
  7070 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  7071 ;; Tracked objects:
  7072 ;;		On entry : 0/0
  7073 ;;		On exit  : 0/0
  7074 ;;		Unchanged: 0/0
  7075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7076 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7077 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7078 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7079 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7080 ;;Total ram usage:       12 bytes
  7081 ;; Hardware stack levels used:    1
  7082 ;; This function calls:
  7083 ;;		Nothing
  7084 ;; This function is called by:
  7085 ;;		_OLED_PutChar
  7086 ;; This function uses a non-reentrant model
  7087 ;;
  7088                           
  7089                           
  7090                           ;psect for function _memmove
  7091  012A                     _memmove:	
  7092                           
  7093                           ;incstack = 0
  7094                           ; Regs used in _memmove: [wreg-fsr1h+status,2+status,0+pclath]
  7095                           ;memmove@d1 stored from wreg
  7096  012A  00F8               	movwf	memmove@d1
  7097  012B  0871               	movf	memmove@s1+1,w
  7098  012C  00FA               	movwf	memmove@s+1
  7099  012D  0870               	movf	memmove@s1,w
  7100  012E  00F9               	movwf	memmove@s
  7101  012F  0878               	movf	memmove@d1,w
  7102  0130  00F4               	movwf	??_memmove
  7103  0131  0874               	movf	??_memmove,w
  7104  0132  00FB               	movwf	memmove@d
  7105  0133  087B               	movf	memmove@d,w
  7106  0134  00F4               	movwf	??_memmove
  7107  0135  3000               	movlw	0
  7108  0136  00F5               	movwf	??_memmove+1
  7109  0137  0875               	movf	??_memmove+1,w
  7110  0138  027A               	subwf	memmove@s+1,w
  7111  0139  1D03               	skipz
  7112  013A  293D               	goto	u1625
  7113  013B  0874               	movf	??_memmove,w
  7114  013C  0279               	subwf	memmove@s,w
  7115  013D                     u1625:	
  7116  013D  1803               	skipnc
  7117  013E  2973               	goto	l1519
  7118  013F  0872               	movf	memmove@n,w
  7119  0140  0779               	addwf	memmove@s,w
  7120  0141  00F4               	movwf	??_memmove
  7121  0142  0873               	movf	memmove@n+1,w
  7122  0143  3D7A               	addwfc	memmove@s+1,w
  7123  0144  00F5               	movwf	??_memmove+1
  7124  0145  087B               	movf	memmove@d,w
  7125  0146  00F6               	movwf	??_memmove+2
  7126  0147  3000               	movlw	0
  7127  0148  00F7               	movwf	??_memmove+3
  7128  0149  0875               	movf	??_memmove+1,w
  7129  014A  0277               	subwf	??_memmove+3,w
  7130  014B  1D03               	skipz
  7131  014C  294F               	goto	u1635
  7132  014D  0874               	movf	??_memmove,w
  7133  014E  0276               	subwf	??_memmove+2,w
  7134  014F                     u1635:	
  7135  014F  1803               	skipnc
  7136  0150  2973               	goto	l1519
  7137  0151  0872               	movf	memmove@n,w
  7138  0152  07F9               	addwf	memmove@s,f
  7139  0153  0873               	movf	memmove@n+1,w
  7140  0154  3DFA               	addwfc	memmove@s+1,f
  7141  0155  0872               	movf	memmove@n,w
  7142  0156  00F4               	movwf	??_memmove
  7143  0157  0874               	movf	??_memmove,w
  7144  0158  07FB               	addwf	memmove@d,f
  7145  0159                     l1515:	
  7146  0159  3001               	movlw	1
  7147  015A  02F9               	subwf	memmove@s,f
  7148  015B  3000               	movlw	0
  7149  015C  3BFA               	subwfb	memmove@s+1,f
  7150  015D  0879               	movf	memmove@s,w
  7151  015E  0084               	movwf	4
  7152  015F  087A               	movf	memmove@s+1,w
  7153  0160  0085               	movwf	5
  7154  0161  0800               	movf	0,w	;code access
  7155  0162  00F4               	movwf	??_memmove
  7156  0163  3001               	movlw	1
  7157  0164  02FB               	subwf	memmove@d,f
  7158  0165  087B               	movf	memmove@d,w
  7159  0166  0086               	movwf	6
  7160  0167  0187               	clrf	7
  7161  0168  0874               	movf	??_memmove,w
  7162  0169  0081               	movwf	1
  7163  016A  3001               	movlw	1
  7164  016B  02F2               	subwf	memmove@n,f
  7165  016C  3000               	movlw	0
  7166  016D  3BF3               	subwfb	memmove@n+1,f
  7167  016E  0872               	movf	memmove@n,w
  7168  016F  0473               	iorwf	memmove@n+1,w
  7169  0170  1903               	btfsc	3,2
  7170  0171  0008               	return
  7171  0172  2959               	goto	l1515
  7172  0173                     l1519:	
  7173  0173  0872               	movf	memmove@n,w
  7174  0174  0473               	iorwf	memmove@n+1,w
  7175  0175  1903               	btfsc	3,2
  7176  0176  0008               	return
  7177  0177  0879               	movf	memmove@s,w
  7178  0178  0084               	movwf	4
  7179  0179  087A               	movf	memmove@s+1,w
  7180  017A  0085               	movwf	5
  7181  017B  0800               	movf	0,w	;code access
  7182  017C  00F4               	movwf	??_memmove
  7183  017D  087B               	movf	memmove@d,w
  7184  017E  0086               	movwf	6
  7185  017F  0187               	clrf	7
  7186  0180  0874               	movf	??_memmove,w
  7187  0181  0081               	movwf	1
  7188  0182  3001               	movlw	1
  7189  0183  07F9               	addwf	memmove@s,f
  7190  0184  3000               	movlw	0
  7191  0185  3DFA               	addwfc	memmove@s+1,f
  7192  0186  3001               	movlw	1
  7193  0187  00F4               	movwf	??_memmove
  7194  0188  0874               	movf	??_memmove,w
  7195  0189  07FB               	addwf	memmove@d,f
  7196  018A  3001               	movlw	1
  7197  018B  02F2               	subwf	memmove@n,f
  7198  018C  3000               	movlw	0
  7199  018D  3BF3               	subwfb	memmove@n+1,f
  7200  018E  2973               	goto	l1519
  7201  018F                     __end_of_memmove:	
  7202                           ;	Return value of _memmove is never used
  7203                           
  7204                           
  7205                           	psect	text30
  7206  0D15                     __ptext30:	
  7207 ;; *************** function _Send_I2C_StopBit *****************
  7208 ;; Defined at:
  7209 ;;		line 106 in file "I2C.c"
  7210 ;; Parameters:    Size  Location     Type
  7211 ;;		None
  7212 ;; Auto vars:     Size  Location     Type
  7213 ;;		None
  7214 ;; Return value:  Size  Location     Type
  7215 ;;                  1    wreg      void 
  7216 ;; Registers used:
  7217 ;;		None
  7218 ;; Tracked objects:
  7219 ;;		On entry : 0/0
  7220 ;;		On exit  : 0/0
  7221 ;;		Unchanged: 0/0
  7222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7227 ;;Total ram usage:        0 bytes
  7228 ;; Hardware stack levels used:    1
  7229 ;; This function calls:
  7230 ;;		Nothing
  7231 ;; This function is called by:
  7232 ;;		_OLED_Command
  7233 ;;		_OLED_PutChar
  7234 ;;		_OLED_Data
  7235 ;; This function uses a non-reentrant model
  7236 ;;
  7237                           
  7238                           
  7239                           ;psect for function _Send_I2C_StopBit
  7240  0D15                     _Send_I2C_StopBit:	
  7241                           
  7242                           ;I2C.c: 108: PIR1bits.SSP1IF=0;
  7243                           
  7244                           ;incstack = 0
  7245                           ; Regs used in _Send_I2C_StopBit: []
  7246  0D15  0020               	movlb	0	; select bank0
  7247  0D16  1191               	bcf	17,3	;volatile
  7248                           
  7249                           ;I2C.c: 109: SSPCON2bits.PEN=1;
  7250  0D17  0024               	movlb	4	; select bank4
  7251  0D18  1516               	bsf	22,2	;volatile
  7252  0D19                     l77:	
  7253                           ;I2C.c: 110: while(!PIR1bits.SSP1IF);
  7254                           
  7255  0D19  0020               	movlb	0	; select bank0
  7256  0D1A  1991               	btfsc	17,3	;volatile
  7257  0D1B  0008               	return
  7258  0D1C  2D19               	goto	l77
  7259  0D1D                     __end_of_Send_I2C_StopBit:	
  7260                           
  7261                           	psect	text31
  7262  0D0D                     __ptext31:	
  7263 ;; *************** function _Send_I2C_StartBit *****************
  7264 ;; Defined at:
  7265 ;;		line 96 in file "I2C.c"
  7266 ;; Parameters:    Size  Location     Type
  7267 ;;		None
  7268 ;; Auto vars:     Size  Location     Type
  7269 ;;		None
  7270 ;; Return value:  Size  Location     Type
  7271 ;;                  1    wreg      void 
  7272 ;; Registers used:
  7273 ;;		None
  7274 ;; Tracked objects:
  7275 ;;		On entry : 0/0
  7276 ;;		On exit  : 0/0
  7277 ;;		Unchanged: 0/0
  7278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7283 ;;Total ram usage:        0 bytes
  7284 ;; Hardware stack levels used:    1
  7285 ;; This function calls:
  7286 ;;		Nothing
  7287 ;; This function is called by:
  7288 ;;		_OLED_Command
  7289 ;;		_OLED_PutChar
  7290 ;;		_OLED_Data
  7291 ;; This function uses a non-reentrant model
  7292 ;;
  7293                           
  7294                           
  7295                           ;psect for function _Send_I2C_StartBit
  7296  0D0D                     _Send_I2C_StartBit:	
  7297                           
  7298                           ;I2C.c: 98: PIR1bits.SSP1IF=0;
  7299                           
  7300                           ;incstack = 0
  7301                           ; Regs used in _Send_I2C_StartBit: []
  7302  0D0D  0020               	movlb	0	; select bank0
  7303  0D0E  1191               	bcf	17,3	;volatile
  7304                           
  7305                           ;I2C.c: 99: SSPCON2bits.SEN=1;
  7306  0D0F  0024               	movlb	4	; select bank4
  7307  0D10  1416               	bsf	22,0	;volatile
  7308  0D11                     l71:	
  7309                           ;I2C.c: 100: while(!PIR1bits.SSP1IF);
  7310                           
  7311  0D11  0020               	movlb	0	; select bank0
  7312  0D12  1991               	btfsc	17,3	;volatile
  7313  0D13  0008               	return
  7314  0D14  2D11               	goto	l71
  7315  0D15                     __end_of_Send_I2C_StartBit:	
  7316                           
  7317                           	psect	text32
  7318  0D25                     __ptext32:	
  7319 ;; *************** function _Send_I2C_Data *****************
  7320 ;; Defined at:
  7321 ;;		line 48 in file "I2C.c"
  7322 ;; Parameters:    Size  Location     Type
  7323 ;;  databyte        2    0[COMMON] unsigned int 
  7324 ;; Auto vars:     Size  Location     Type
  7325 ;;		None
  7326 ;; Return value:  Size  Location     Type
  7327 ;;                  1    wreg      void 
  7328 ;; Registers used:
  7329 ;;		wreg
  7330 ;; Tracked objects:
  7331 ;;		On entry : 0/0
  7332 ;;		On exit  : 0/0
  7333 ;;		Unchanged: 0/0
  7334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7335 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7338 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7339 ;;Total ram usage:        2 bytes
  7340 ;; Hardware stack levels used:    1
  7341 ;; This function calls:
  7342 ;;		Nothing
  7343 ;; This function is called by:
  7344 ;;		_OLED_Command
  7345 ;;		_OLED_PutChar
  7346 ;;		_OLED_Data
  7347 ;; This function uses a non-reentrant model
  7348 ;;
  7349                           
  7350                           
  7351                           ;psect for function _Send_I2C_Data
  7352  0D25                     _Send_I2C_Data:	
  7353                           
  7354                           ;I2C.c: 50: PIR1bits.SSP1IF=0;
  7355                           
  7356                           ;incstack = 0
  7357                           ; Regs used in _Send_I2C_Data: [wreg]
  7358  0D25  0020               	movlb	0	; select bank0
  7359  0D26  1191               	bcf	17,3	;volatile
  7360                           
  7361                           ;I2C.c: 51: SSPBUF = databyte;
  7362  0D27  0870               	movf	Send_I2C_Data@databyte,w
  7363  0D28  0024               	movlb	4	; select bank4
  7364  0D29  0091               	movwf	17	;volatile
  7365  0D2A                     l53:	
  7366                           ;I2C.c: 52: while(!PIR1bits.SSP1IF);
  7367                           
  7368  0D2A  0020               	movlb	0	; select bank0
  7369  0D2B  1991               	btfsc	17,3	;volatile
  7370  0D2C  0008               	return
  7371  0D2D  2D2A               	goto	l53
  7372  0D2E                     __end_of_Send_I2C_Data:	
  7373                           
  7374                           	psect	text33
  7375  0D3C                     __ptext33:	
  7376 ;; *************** function _I2C_Init *****************
  7377 ;; Defined at:
  7378 ;;		line 19 in file "I2C.c"
  7379 ;; Parameters:    Size  Location     Type
  7380 ;;		None
  7381 ;; Auto vars:     Size  Location     Type
  7382 ;;		None
  7383 ;; Return value:  Size  Location     Type
  7384 ;;                  1    wreg      void 
  7385 ;; Registers used:
  7386 ;;		wreg, status,2, status,0
  7387 ;; Tracked objects:
  7388 ;;		On entry : 0/0
  7389 ;;		On exit  : 0/0
  7390 ;;		Unchanged: 0/0
  7391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7394 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7395 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7396 ;;Total ram usage:        2 bytes
  7397 ;; Hardware stack levels used:    1
  7398 ;; This function calls:
  7399 ;;		Nothing
  7400 ;; This function is called by:
  7401 ;;		_main
  7402 ;; This function uses a non-reentrant model
  7403 ;;
  7404                           
  7405                           
  7406                           ;psect for function _I2C_Init
  7407  0D3C                     _I2C_Init:	
  7408                           
  7409                           ;I2C.c: 25: SSPCONbits.SSPM=0x08;
  7410                           
  7411                           ;incstack = 0
  7412                           ; Regs used in _I2C_Init: [wreg+status,2+status,0]
  7413  0D3C  0024               	movlb	4	; select bank4
  7414  0D3D  0815               	movf	21,w	;volatile
  7415  0D3E  39F0               	andlw	-16
  7416  0D3F  3808               	iorlw	8
  7417  0D40  0095               	movwf	21	;volatile
  7418                           
  7419                           ;I2C.c: 26: SSPCONbits.SSPEN=1;
  7420  0D41  1695               	bsf	21,5	;volatile
  7421                           
  7422                           ;I2C.c: 38: SSPADD = 39;
  7423  0D42  3027               	movlw	39
  7424  0D43  0092               	movwf	18	;volatile
  7425                           
  7426                           ;I2C.c: 42: _delay((unsigned long)((10)*(16000000/4000.0)));
  7427  0D44  3034               	movlw	52
  7428  0D45  00F1               	movwf	??_I2C_Init+1
  7429  0D46  30F1               	movlw	241
  7430  0D47  00F0               	movwf	??_I2C_Init
  7431  0D48                     u2967:	
  7432  0D48  0BF0               	decfsz	??_I2C_Init,f
  7433  0D49  2D48               	goto	u2967
  7434  0D4A  0BF1               	decfsz	??_I2C_Init+1,f
  7435  0D4B  2D48               	goto	u2967
  7436  0D4C  3200               	nop2
  7437  0D4D  0008               	return
  7438  0D4E                     __end_of_I2C_Init:	
  7439  007E                     btemp	set	126	;btemp
  7440  007E                     wtemp	set	126
  7441  007E                     wtemp0	set	126
  7442  0080                     wtemp1	set	128
  7443  0082                     wtemp2	set	130
  7444  0084                     wtemp3	set	132
  7445  0086                     wtemp4	set	134
  7446  0088                     wtemp5	set	136
  7447  007F                     wtemp6	set	127
  7448  007E                     ttemp	set	126
  7449  007E                     ttemp0	set	126
  7450  0081                     ttemp1	set	129
  7451  0084                     ttemp2	set	132
  7452  0087                     ttemp3	set	135
  7453  007F                     ttemp4	set	127
  7454  007E                     ltemp	set	126
  7455  007E                     ltemp0	set	126
  7456  0082                     ltemp1	set	130
  7457  0086                     ltemp2	set	134
  7458  0080                     ltemp3	set	128


Data Sizes:
    Strings     89
    Constant    808
    Data        0
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     68      68
    BANK1            80      0      17
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    ftoa@status	PTR int  size(1) Largest target is 2
		 -> OLED_Write_Float@status(BANK0[2]), 

    memmove@d1	PTR void  size(1) Largest target is 9
		 -> OLED_PutChar@bytes(BANK0[9]), 

    memmove@d	PTR unsigned char  size(1) Largest target is 9
		 -> OLED_PutChar@bytes(BANK0[9]), 

    memmove@s1	PTR const void  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    memmove@s	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 20
		 -> OLED_Write_Integer@s(BANK0[20]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 20
		 -> OLED_Write_Integer@s(BANK0[20]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 20
		 -> OLED_Write_Integer@s(BANK0[20]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 20
		 -> OLED_Write_Integer@s(BANK0[20]), 

    ftoa@cp	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_9(CODE[11]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__ftoa	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    OLED_Write_Float@buf11	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 20
		 -> OLED_Write_Integer@s(BANK0[20]), 

    OLED_Write_String@s	PTR unsigned char  size(2) Largest target is 20
		 -> ftoa@buf(BANK1[17]), STR_8(CODE[6]), STR_7(CODE[6]), OLED_Write_Integer@s(BANK0[20]), 
		 -> STR_6(CODE[13]), STR_5(CODE[15]), STR_4(CODE[13]), STR_3(CODE[8]), 
		 -> STR_2(CODE[10]), STR_1(CODE[13]), 

    sp__memmove	PTR void  size(1) Largest target is 9
		 -> OLED_PutChar@bytes(BANK0[9]), 

    OLED_PutChar@base	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 


Critical Paths under _main in COMMON

    _main->_OLED_Write_String
    _main->___ftadd
    _OLED_Write_Integer->_OLED_Write_String
    _OLED_Write_Integer->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _OLED_Write_Float->_OLED_Write_String
    _ftoa->___ftmul
    _ftoa->___lltoft
    _sprintf->___lldiv
    ___llmod->___lldiv
    ___lltoft->___ftpack
    ___fttol->___ftmul
    ___ftsub->___ftadd
    ___ftsub->___lltoft
    ___ftadd->___ftpack
    ___ftmul->___ftpack
    _OLED_Init->_OLED_Command
    _OLED_YX->_OLED_Command
    _OLED_Command->_Send_I2C_Data
    _OLED_PutChar->_memmove

Critical Paths under _main in BANK0

    _main->_OLED_Write_Float
    _OLED_Write_Integer->_OLED_Write_String
    _itoa->_utoa
    _OLED_Write_Float->_ftoa
    _ftoa->_sprintf
    _sprintf->___llmod
    ___fttol->___ftmul
    ___ftsub->___ftadd
    _OLED_Write_String->_OLED_PutChar
    _OLED_Clear->_OLED_PutChar

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   24198
                                             60 BANK0      8     8      0
                           _I2C_Init
                         _OLED_Clear
                          _OLED_Init
                   _OLED_Write_Float
                 _OLED_Write_Integer
                  _OLED_Write_String
                            _OLED_YX
                            ___ftadd
                             ___ftge
                           _initMain
 ---------------------------------------------------------------------------------
 (1) _initMain                                             0     0      0       0
                        _internal_16
 ---------------------------------------------------------------------------------
 (2) _internal_16                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OLED_Write_Integer                                  22    20      2    3276
                                             21 BANK0     22    20      2
                  _OLED_Write_String
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 7     3      4    1370
                                             13 COMMON     1     1      0
                                              4 BANK0      6     2      4
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     5      4    1074
                                              8 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     265
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     374
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _OLED_Write_Float                                     8     5      3   11820
                                             52 BANK0      8     5      3
                  _OLED_Write_String
                               _ftoa
 ---------------------------------------------------------------------------------
 (2) _ftoa                                                14    10      4    9921
                                             38 BANK0     14    10      4
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                           ___lltoft
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             36    26     10    1896
                                             10 BANK0     28    18     10
                            ___lldiv
                            ___llmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     304
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___llmod                                             10     2      8     265
                                              0 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             14     6      8     268
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             6     2      4    1790
                                              8 COMMON     6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     358
                                             10 BANK0     14    10      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftsub                                              6     0      6    2893
                                              7 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftadd                                             13     7      6    2720
                                              8 COMMON     6     0      6
                                              0 BANK0      7     7      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3      98
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    2100
                                              8 COMMON     6     0      6
                                              0 BANK0     10    10      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    1668
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) ___ftge                                               9     3      6     454
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (1) _OLED_Write_String                                    3     1      2    1779
                                             12 COMMON     2     0      2
                                             20 BANK0      1     1      0
                       _OLED_PutChar
 ---------------------------------------------------------------------------------
 (1) _OLED_Init                                            0     0      0     521
                       _OLED_Command
 ---------------------------------------------------------------------------------
 (1) _OLED_Clear                                           5     5      0    2404
                                             12 COMMON     1     1      0
                                             20 BANK0      4     4      0
                       _OLED_PutChar
                            _OLED_YX
 ---------------------------------------------------------------------------------
 (1) _OLED_YX                                              5     4      1    1064
                                              5 COMMON     5     4      1
                       _OLED_Command
 ---------------------------------------------------------------------------------
 (2) _OLED_Command                                         3     3      0     521
                                              2 COMMON     3     3      0
                      _Send_I2C_Data
                  _Send_I2C_StartBit
                   _Send_I2C_StopBit
 ---------------------------------------------------------------------------------
 (2) _OLED_PutChar                                        20    20      0    1204
                                              0 BANK0     20    20      0
                      _Send_I2C_Data
                  _Send_I2C_StartBit
                   _Send_I2C_StopBit
                            _memmove
 ---------------------------------------------------------------------------------
 (3) _memmove                                             12     8      4     497
                                              0 COMMON    12     8      4
 ---------------------------------------------------------------------------------
 (3) _Send_I2C_StopBit                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Send_I2C_StartBit                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Send_I2C_Data                                        2     0      2     499
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Init
   _OLED_Clear
     _OLED_PutChar
       _Send_I2C_Data
       _Send_I2C_StartBit
       _Send_I2C_StopBit
       _memmove
     _OLED_YX
       _OLED_Command
         _Send_I2C_Data
         _Send_I2C_StartBit
         _Send_I2C_StopBit
   _OLED_Init
     _OLED_Command
       _Send_I2C_Data
       _Send_I2C_StartBit
       _Send_I2C_StopBit
   _OLED_Write_Float
     _OLED_Write_String
       _OLED_PutChar
         _Send_I2C_Data
         _Send_I2C_StartBit
         _Send_I2C_StopBit
         _memmove
     _ftoa
       ___ftge
       ___ftmul
         ___ftpack
       ___ftneg
       ___ftsub
         ___ftadd
           ___ftpack
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___ftpack
       ___lltoft
         ___ftpack
       _sprintf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         _isdigit
   _OLED_Write_Integer
     _OLED_Write_String
       _OLED_PutChar
         _Send_I2C_Data
         _Send_I2C_StartBit
         _Send_I2C_StopBit
         _memmove
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
   _OLED_Write_String
     _OLED_PutChar
       _Send_I2C_Data
       _Send_I2C_StartBit
       _Send_I2C_StopBit
       _memmove
   _OLED_YX
     _OLED_Command
       _Send_I2C_Data
       _Send_I2C_StartBit
       _Send_I2C_StopBit
   ___ftadd
     ___ftpack
   ___ftge
   _initMain
     _internal_16

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     44      44       5       85.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      11       7       21.3%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      63      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      63      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Sat Jul 20 11:02:41 2019

                __CFG_CP$OFF 0000                           l53 0D2A                           l71 0D11  
                         l77 0D19          ___wmul@multiplicand 0072                 ___ftadd@exp1 0026  
               ___ftadd@exp2 0025           OLED_Write_String@s 007C                 ___ftadd@sign 0024  
                        l221 06DE                          l218 06BF                          l412 010B  
                        l244 0D6A                          l413 0113                          l405 00F8  
                        l504 0276                          l436 0484                          l524 0FEA  
   __end_of_OLED_Write_Float 0DF4                 __CFG_BORV$LO 0000                          wreg 0009  
               __CFG_IESO$ON 0000             OLED_Command@temp 0074                 __CFG_LVP$OFF 0000  
                       l2003 0FC2                         l2041 0D4E                         l2025 0E44  
                       l2131 0ECF                         l2027 0E54                         l2053 0E0C  
                       l2221 0606                         l1601 0476                         l2209 05B6  
                       l2161 04FC                         l1515 0159                         l2139 0EE7  
                       l1611 04A8                         l1603 0480                         l2067 02C2  
                       l1621 04C3                         l1519 0173                         l1471 00CE  
                       l1607 0496                         l1631 0020                         l1543 0D64  
                       l1703 0E96                         l1561 040D                         l1641 004E  
                       l1633 002E                         l1537 0D3A                         l1705 0EA2  
                       l1713 0EB7                         l1731 0199                         l1475 00D5  
                       l1571 0423                         l2187 0558                         l1733 019D  
                       l1485 00FD                         l1477 00DF                         l1565 0414  
                       l1645 0059                         l1661 0F8A                         l1821 0712  
                       l1805 06ED                         l1709 0EAE                         l1751 01E7  
                       l1487 0105                         l1479 00E4                         l1911 03A2  
                       l1591 045A                         l1583 043D                         l1655 0F64  
                       l1831 0756                         l1815 070C                         l2199 058E  
                       l1593 045F                         l1657 0F72                         l1665 0F95  
                       l1841 078E                         l1681 0F00                         l1923 03BE  
                       l1907 039A                         l1595 0463                         l1835 076E  
                       l1827 073F                         l1691 0F1B                         l1757 0206  
                       l1589 0450                         l1773 064F                         l1781 067D  
                       l1871 0F4C                         l1919 03B6                         l1855 07E6  
                       l1839 078B                         l1791 068C                         l1767 063F  
                       l1687 0F12                         l1679 0EF4                         l1945 0DBE  
                       l1849 07A2                         l1793 06BB                         l1857 061D  
                       l1867 0F36                         l1955 0222                         l1795 06C1  
                       l1859 07F1                         l1981 026D                         l1973 0252  
                       l1895 035F                         l1983 0279                         l1975 0260  
                       l1799 06C6                         l1889 0349                         l1993 0FA4  
                       l1987 0287                         STR_1 0B37                         STR_2 0B69  
                       STR_3 0B73                         STR_4 0B51                         STR_5 0B28  
                       STR_6 0B44                         STR_7 0B7B                         STR_8 0B7B  
                       STR_9 0B5E              __end_of_OLED_YX 0E40                         u2005 0043  
                       u2015 004F                  ?_OLED_Clear 0070                         u2105 0EF7  
                       u2045 0F67                         u2125 0F01                         u2205 0EAF  
                       u2135 0F0B                         u2065 0F80                         u2145 0F13  
                       u1515 00F3                         u2075 0F8B                         u2245 01E5  
                       u2255 0204                         u1535 0100                         u2175 0E99  
                       u1625 013D                         u2505 037B                         u1705 0D6B  
                       u1635 014F                         u1715 0D70                         u2355 0735  
                       u2195 0EA8                         u2525 03A3                         u1575 011A  
                       u1495 00DA                         u2535 03A9                         u2375 074E  
                       u1825 043E                         u2625 0229                         u2385 0766  
                       u1915 0477                         u2395 077E                         u2565 03BF  
                       u2575 03C5                         u2495 036B                         u1855 0451  
                       u2655 0253                         u2745 0E49                         u2907 0533  
                       u2765 0E21                         u1885 0464                         u2685 026E  
                       u2917 0544                         u2775 0E35                         u1975 0023  
                       u2927 0578                         u2855 0556                         u2937 0598  
                       u2865 058C                         u1995 002F                         u2947 05D8  
                       u2957 060D                         u2967 0D48                         u2897 04E7  
                       _SCS0 04C8                         _SCS1 04C9                 __CFG_WRT$OFF 0000  
                       _main 04DA                         _ftoa 0290                 ___ftpack@arg 0070  
                       _itoa 0DF4                 ___ftpack@exp 0073             __end_of_I2C_Init 0D4E  
                       fsr0h 0005                         fsr1h 0007                         fsr0l 0004  
                       indf0 0000                         indf1 0001                         fsr1l 0006  
                       btemp 007E                         _utoa 0F9E                         ltemp 007E  
                       start 0002                         ttemp 007E                         wtemp 007E  
               ___ftmul@cntr 0028                 ___ftmul@sign 0029                 ___fttol@exp1 0037  
         __size_of_OLED_Init 0064                 ___fttol@lval 0033                        ?_main 0070  
                      ?_ftoa 0046                        ?_itoa 0024              __end_of___ftadd 04DA  
              __CFG_WDTE$OFF 0000              __end_of___ftneg 0D25              __end_of___lldiv 0062  
                      ?_utoa 0078              __end_of___ftmul 03E5              __end_of___llmod 0F9E  
            __end_of___ftsub 0DD4              __end_of___fttol 0290                        _IRCF0 04CB  
                      _IRCF1 04CC                        _IRCF2 04CD                        _IRCF3 04CE  
            __end_of___lwdiv 0F20              __end_of___lwmod 0EBC                 ___lltoft@exp 007D  
             __CFG_FCMEN$OFF 0000              __end_of_dpowers 0828              __end_of_isdigit 0D3C  
            __end_of_memmove 018F                ___ftpack@sign 0074                        ftoa@f 0046  
                      ftoa@l 004F               __CFG_BOREN$OFF 0000                        ltemp0 007E  
                      ltemp1 0082                        ltemp2 0086                        ltemp3 0080  
                      ttemp0 007E                        ttemp1 0081                        ttemp2 0084  
                      ttemp3 0087                        ttemp4 007F                        utoa@c 0022  
                      utoa@v 0020                        status 0003                        wtemp0 007E  
                      wtemp1 0080                        wtemp2 0082                        wtemp3 0084  
                      wtemp4 0086                        wtemp5 0088                        wtemp6 007F  
            __end_of_sprintf 07F6   __size_of_Send_I2C_StartBit 0008                 ?_internal_16 0070  
             __CFG_MCLRE$OFF 0000              __initialization 07F6                 __end_of_main 0617  
               __end_of_ftoa 0332                 __end_of_itoa 0E18                 __end_of_utoa 1000  
             __CFG_LPBOR$OFF 0000             __end_of_OledFont 0B28          __size_of_OLED_Clear 0030  
                     ??_main 005C                       ??_ftoa 004A                ___fttol@sign1 0032  
                     ??_itoa 007D                       ??_utoa 007C               __CFG_PLLEN$OFF 0000  
                  ??_OLED_YX 0076             ___llmod@dividend 0024           _OLED_Write_Integer 0D7D  
             __CFG_ZCDDIS$ON 0000             __end_of___ftpack 012A            __end_of_OLED_Init 00C6  
           __end_of___lltoft 0E68                ?_OLED_Command 0070                       _SPLLEN 04CF  
                     _SSPADD 0212                       _SSPBUF 0211          ?_OLED_Write_Integer 0035  
             __CFG_PWRTE$OFF 0000                ?_OLED_PutChar 0070                       ___ftge 0F20  
                     ___wmul 0D62       __size_of_Send_I2C_Data 0009                    ??___ftadd 0020  
             __CFG_STVREN$ON 0000                    ??___ftneg 0073                    ??___lldiv 0078  
                  ??___ftmul 0020                    ??___llmod 0028                    ??___ftsub 007E  
                  ??___fttol 002E                    ??___lwdiv 0074                    ??___lwmod 0074  
           __end_of_initMain 0E90                       ftoa@cp 0053        ___ftmul@f3_as_product 0025  
       ??_OLED_Write_Integer 007E                       itoa@cp 0028                    ??_isdigit 0070  
                  ?_I2C_Init 0070                    ??_memmove 0074        Send_I2C_Data@databyte 0070  
                  ??_sprintf 0034               ??_OLED_Command 0072      __end_of__initialization 07FD  
                 ___ftadd@f1 0078                   ___ftadd@f2 007B                   ___ftge@ff1 0070  
                 ___ftge@ff2 0073               ??_OLED_PutChar 0020                   ___ftneg@f1 0070  
                 ___ftmul@f1 0078                   ___ftmul@f2 007B    __size_of_Send_I2C_StopBit 0008  
                 ___ftsub@f1 002A                   ___ftsub@f2 0027                   ___fttol@f1 002A  
             __pcstackCOMMON 0070                   ___lltoft@c 0078                   ??_I2C_Init 0070  
          ?_OLED_Write_Float 0054           ??_OLED_Write_Float 0057                _Send_I2C_Data 0D25  
               sprintf@width 0041                 ??_OLED_Clear 007C                   __pbssBANK1 00A0  
                 __pmaintext 04DA         __size_of_internal_16 0009                      ?___ftge 0070  
                    ?___wmul 0070              __CFG_PPS1WAY$ON 0000                    ?___ftpack 0070  
                  ?___lltoft 0078           __end_of_OLED_Clear 0EEC                      _OLED_YX 0E18  
             ?_Send_I2C_Data 0070                      _PPSLOCK 0E0F                    ?_initMain 0070  
            __size_of___ftge 003B                      ___ftadd 03E5                      ___ftneg 0D1D  
                    ___lldiv 0010              __size_of___wmul 001B                      ___ftmul 0332  
                    ___llmod 0F5B                      ___ftsub 0DB6                      ___fttol 0209  
                    ___lwdiv 0EEC                      ___lwmod 0E90                   ??___ftpack 0075  
       __end_of_OLED_Command 0DB6                   ??___lltoft 007C                      __ptext1 0E68  
                    __ptext2 0007                      __ptext3 0D7D                      __ptext4 0DF4  
                    __ptext5 0F9E                      __ptext6 0E90                      __ptext7 0EEC  
                    __ptext8 0DD4                      __ptext9 0290                      _dpowers 0800  
                    _isdigit 0D2E                      _memmove 012A         __end_of_OLED_PutChar 0209  
                    main@dec 0061                      _sprintf 0617                      clrloop0 0D08  
       end_of_initialization 07FD                      ftoa@buf 00A0                      ftoa@rem 004B  
                 ??_initMain 0070                      itoa@buf 0029                      itoa@val 0024  
                  _OLED_Init 0062              ___lldiv@divisor 0070             OLED_PutChar@base 002F  
            ___lldiv@counter 007D             _Send_I2C_StopBit 0D15                 __pstringtext 0800  
                    utoa@buf 0023                      utoa@val 0078            OLED_Write_Float@f 0054  
            ??_Send_I2C_Data 0072             __CFG_FOSC$INTOSC 0000                    _TRISCbits 008E  
          __size_of_I2C_Init 0012                   ?_OLED_Init 0070                  ___ftmul@exp 0024  
             __end_of___ftge 0F5B               __end_of___wmul 0D7D  __size_of_OLED_Write_Integer 001B  
        start_initialization 07F6                   ftoa@status 0049              ___llmod@divisor 0020  
            ___llmod@counter 0029    __size_of_OLED_Write_Float 0020            _OLED_Write_String 0D4E  
         ?_OLED_Write_String 007C        __size_of_OLED_Command 001E                     ??___ftge 0076  
                   ??___wmul 0074                   OLED_YX@Row 0079        __size_of_OLED_PutChar 007A  
        ??_OLED_Write_String 0034            __size_of___ftpack 0064            __size_of___lltoft 0028  
                  ___latbits 0002                     ?_OLED_YX 0075                __pcstackBANK0 0020  
                sprintf@flag 003A                 _OLED_Command 0D98    __end_of_OLED_Write_String 0D62  
                sprintf@prec 0043                ??_internal_16 0070                  ??_OLED_Init 0075  
          __size_of_initMain 0028             ___lwdiv@dividend 0072                 _OLED_PutChar 018F  
                   ?___ftadd 0078                     ?___ftneg 0070                     ?___lldiv 0070  
                   ?___ftmul 0078                     ?___llmod 0020                     ?___ftsub 0027  
                   ?___fttol 002A                     ?___lwdiv 0070                     ?___lwmod 0070  
                   ?_isdigit 0070                     _I2C_Init 0D3C                     ?_memmove 0070  
     OLED_Write_Float@status 0059     __end_of_Send_I2C_StopBit 0D1D             ___lwdiv@quotient 0075  
                   ?_sprintf 002A               ___wmul@product 0074                    clear_ram0 0D07  
                   _PIR1bits 0011          __end_of_internal_16 0010            ___wmul@multiplier 0070  
                  main@count 005F             __size_of_OLED_YX 0028   __size_of_OLED_Write_String 0014  
                   _OledFont 0828             _OLED_Write_Float 0DD4                    memmove@d1 0078  
                  memmove@s1 0070             __size_of___ftadd 00F5             __size_of___ftneg 0008  
           __size_of___lldiv 0052             __size_of___ftmul 00B3             __size_of___llmod 0043  
           __size_of___ftsub 001E             __size_of___fttol 0087             __size_of___lwdiv 0034  
           __size_of___lwmod 002C                     ___ftpack 00C6                     ___lltoft 0E40  
                _isdigit$512 0070                   _ANSELCbits 018E                   sprintf@val 003C  
           __size_of_isdigit 000E             __size_of_memmove 0065              ___lwdiv@divisor 0070  
      __end_of_Send_I2C_Data 0D2E              ___lwdiv@counter 0077                     __ptext10 0617  
                   __ptext11 0D2E                     __ptext20 0332                     __ptext12 0D62  
                   __ptext21 00C6                     __ptext13 0F5B                     __ptext30 0D15  
                   __ptext22 0F20                     __ptext14 0010                     __ptext31 0D0D  
                   __ptext23 0D4E                     __ptext15 0E40                     __ptext32 0D25  
                   __ptext24 0062                     __ptext16 0209                     __ptext33 0D3C  
                   __ptext25 0EBC                     __ptext17 0DB6                     __ptext26 0E18  
                   __ptext18 03E5                     __ptext27 0D98                     __ptext19 0D1D  
                   __ptext28 018F                     __ptext29 012A        OLED_Write_Float@buf11 005B  
           __size_of_sprintf 01DF                     _initMain 0E68                __size_of_main 013D  
              _SSPDATPPSbits 0E21                __size_of_ftoa 00A2                __size_of_itoa 0024  
              __size_of_utoa 0062                OLED_Clear@col 0036                  _internal_16 0007  
              OLED_Clear@row 0034                OLED_YX@Column 0075               OLED_PutChar@ch 0033  
                 _RC4PPSbits 0EA4                _SSPCLKPPSbits 0E20                   _RC5PPSbits 0EA5  
 __end_of_OLED_Write_Integer 0D98                     itoa@base 0026                     isdigit@c 0071  
                   memmove@d 007B                     memmove@n 0072                     memmove@s 0079  
                 _OLED_Clear 0EBC                    sprintf@ap 003B                    sprintf@sp 0040  
           ___lwmod@dividend 0072             ___lldiv@dividend 0074            __CFG_CLKOUTEN$OFF 0000  
                _PPSLOCKbits 0E0F            _Send_I2C_StartBit 0D0D            OLED_PutChar@bytes 0026  
              OLED_PutChar@i 0031           ?_Send_I2C_StartBit 0070                     utoa@base 007A  
        ??_Send_I2C_StartBit 0070                     sprintf@c 0045                     sprintf@f 002A  
           ___lldiv@quotient 0079              ___lwmod@divisor 0070              ___lwmod@counter 0075  
                _SSPCON2bits 0216            ?_Send_I2C_StopBit 0070           ??_Send_I2C_StopBit 0070  
        OLED_Write_Integer@i 0035          OLED_Write_Integer@s 0037    __end_of_Send_I2C_StartBit 0D15  
                 _SSPCONbits 0215  
