

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Fri Apr 21 17:10:16 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1717
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK3,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    15                           	psect	inittext,global,class=CODE,delta=2
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,delta=2
    23                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text8,local,class=CODE,merge=1,delta=2
    30                           	psect	text9,local,class=CODE,merge=1,delta=2
    31                           	psect	text10,local,class=CODE,merge=1,delta=2
    32                           	psect	text11,local,class=CODE,merge=1,delta=2
    33                           	psect	text12,local,class=CODE,merge=1,delta=2
    34                           	psect	text13,local,class=CODE,merge=1,delta=2
    35                           	psect	text14,local,class=CODE,merge=1,delta=2
    36                           	psect	text15,local,class=CODE,merge=1,delta=2
    37                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text17,local,class=CODE,merge=1,delta=2
    39                           	psect	text18,local,class=CODE,merge=1,delta=2
    40                           	psect	text19,local,class=CODE,merge=1,delta=2
    41                           	psect	text20,local,class=CODE,merge=1,delta=2
    42                           	psect	text21,local,class=CODE,merge=1,delta=2
    43                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text23,local,class=CODE,merge=1,delta=2
    45                           	psect	text24,local,class=CODE,merge=1,delta=2
    46                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text27,local,class=CODE,merge=1,delta=2
    49                           	psect	text28,local,class=CODE,merge=1,delta=2
    50                           	psect	text29,local,class=CODE,merge=1,delta=2
    51                           	psect	text30,local,class=CODE,merge=1,delta=2
    52                           	psect	text31,local,class=CODE,merge=1,delta=2
    53                           	psect	text32,local,class=CODE,merge=1,delta=2
    54                           	psect	text33,local,class=CODE,merge=1,delta=2,group=1
    55                           	psect	text34,local,class=CODE,merge=1,delta=2,group=1
    56                           	psect	text35,local,class=CODE,merge=1,delta=2,group=1
    57                           	psect	text36,local,class=CODE,merge=1,delta=2,group=1
    58                           	psect	text37,local,class=CODE,merge=1,delta=2
    59                           	psect	text38,local,class=CODE,merge=1,delta=2
    60                           	psect	intentry,global,class=CODE,delta=2
    61                           	psect	text40,local,class=CODE,merge=1,delta=2
    62                           	psect	text41,local,class=CODE,merge=1,delta=2
    63                           	psect	text42,local,class=CODE,merge=1,delta=2
    64                           	psect	text43,local,class=CODE,merge=1,delta=2
    65                           	psect	text44,local,class=CODE,merge=1,delta=2
    66                           	psect	text45,local,class=CODE,merge=1,delta=2
    67                           	psect	text46,local,class=CODE,merge=1,delta=2
    68                           	psect	text47,local,class=CODE,merge=1,delta=2
    69                           	psect	text48,local,class=CODE,merge=1,delta=2
    70                           	psect	text49,local,class=CODE,merge=1,delta=2
    71                           	psect	text50,local,class=CODE,merge=1,delta=2
    72                           	psect	text51,local,class=CODE,merge=1,delta=2
    73                           	psect	text52,local,class=CODE,merge=1,delta=2
    74                           	psect	text53,local,class=CODE,merge=1,delta=2
    75                           	dabs	1,0x7E,2
    76  0000                     
    77                           ; Version 1.41
    78                           ; Generated 25/01/2017 GMT
    79                           ; 
    80                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    81                           ; All rights reserved.
    82                           ; 
    83                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    84                           ; 
    85                           ; Redistribution and use in source and binary forms, with or without modification, are
    86                           ; permitted provided that the following conditions are met:
    87                           ; 
    88                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    89                           ;        conditions and the following disclaimer.
    90                           ; 
    91                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    92                           ;        of conditions and the following disclaimer in the documentation and/or other
    93                           ;        materials provided with the distribution.
    94                           ; 
    95                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    96                           ;        software without specific prior written permission.
    97                           ; 
    98                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    99                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   100                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   101                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   102                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   103                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   104                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   105                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   106                           ; 
   107                           ; 
   108                           ; Code-generator required, PIC16F1717 Definitions
   109                           ; 
   110                           ; SFR Addresses
   111  0000                     	;# 
   112  0001                     	;# 
   113  0002                     	;# 
   114  0003                     	;# 
   115  0004                     	;# 
   116  0005                     	;# 
   117  0006                     	;# 
   118  0007                     	;# 
   119  0008                     	;# 
   120  0009                     	;# 
   121  000A                     	;# 
   122  000B                     	;# 
   123  000C                     	;# 
   124  000D                     	;# 
   125  000E                     	;# 
   126  000F                     	;# 
   127  0010                     	;# 
   128  0011                     	;# 
   129  0012                     	;# 
   130  0013                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  001A                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  008C                     	;# 
   141  008D                     	;# 
   142  008E                     	;# 
   143  008F                     	;# 
   144  0090                     	;# 
   145  0091                     	;# 
   146  0092                     	;# 
   147  0093                     	;# 
   148  0095                     	;# 
   149  0096                     	;# 
   150  0097                     	;# 
   151  0098                     	;# 
   152  0099                     	;# 
   153  009A                     	;# 
   154  009B                     	;# 
   155  009B                     	;# 
   156  009C                     	;# 
   157  009D                     	;# 
   158  009E                     	;# 
   159  009F                     	;# 
   160  010C                     	;# 
   161  010D                     	;# 
   162  010E                     	;# 
   163  010F                     	;# 
   164  0110                     	;# 
   165  0111                     	;# 
   166  0112                     	;# 
   167  0113                     	;# 
   168  0114                     	;# 
   169  0115                     	;# 
   170  0116                     	;# 
   171  0117                     	;# 
   172  0118                     	;# 
   173  0119                     	;# 
   174  011A                     	;# 
   175  011B                     	;# 
   176  011B                     	;# 
   177  011C                     	;# 
   178  018C                     	;# 
   179  018D                     	;# 
   180  018E                     	;# 
   181  018F                     	;# 
   182  0190                     	;# 
   183  0191                     	;# 
   184  0191                     	;# 
   185  0192                     	;# 
   186  0193                     	;# 
   187  0193                     	;# 
   188  0194                     	;# 
   189  0195                     	;# 
   190  0196                     	;# 
   191  0197                     	;# 
   192  0199                     	;# 
   193  0199                     	;# 
   194  0199                     	;# 
   195  019A                     	;# 
   196  019A                     	;# 
   197  019A                     	;# 
   198  019B                     	;# 
   199  019B                     	;# 
   200  019B                     	;# 
   201  019B                     	;# 
   202  019B                     	;# 
   203  019C                     	;# 
   204  019C                     	;# 
   205  019C                     	;# 
   206  019D                     	;# 
   207  019D                     	;# 
   208  019D                     	;# 
   209  019E                     	;# 
   210  019E                     	;# 
   211  019E                     	;# 
   212  019F                     	;# 
   213  019F                     	;# 
   214  019F                     	;# 
   215  019F                     	;# 
   216  019F                     	;# 
   217  020C                     	;# 
   218  020D                     	;# 
   219  020E                     	;# 
   220  020F                     	;# 
   221  0210                     	;# 
   222  0211                     	;# 
   223  0211                     	;# 
   224  0212                     	;# 
   225  0212                     	;# 
   226  0213                     	;# 
   227  0213                     	;# 
   228  0214                     	;# 
   229  0214                     	;# 
   230  0215                     	;# 
   231  0215                     	;# 
   232  0215                     	;# 
   233  0215                     	;# 
   234  0216                     	;# 
   235  0216                     	;# 
   236  0217                     	;# 
   237  0217                     	;# 
   238  028C                     	;# 
   239  028D                     	;# 
   240  028E                     	;# 
   241  028F                     	;# 
   242  0290                     	;# 
   243  0291                     	;# 
   244  0291                     	;# 
   245  0292                     	;# 
   246  0293                     	;# 
   247  0293                     	;# 
   248  0298                     	;# 
   249  0298                     	;# 
   250  0299                     	;# 
   251  029A                     	;# 
   252  029A                     	;# 
   253  029E                     	;# 
   254  030C                     	;# 
   255  030D                     	;# 
   256  030E                     	;# 
   257  030F                     	;# 
   258  0310                     	;# 
   259  038C                     	;# 
   260  038D                     	;# 
   261  038E                     	;# 
   262  038F                     	;# 
   263  0390                     	;# 
   264  0391                     	;# 
   265  0392                     	;# 
   266  0393                     	;# 
   267  0394                     	;# 
   268  0395                     	;# 
   269  0396                     	;# 
   270  0397                     	;# 
   271  0398                     	;# 
   272  0399                     	;# 
   273  039D                     	;# 
   274  039E                     	;# 
   275  039F                     	;# 
   276  0415                     	;# 
   277  0416                     	;# 
   278  0417                     	;# 
   279  041C                     	;# 
   280  041D                     	;# 
   281  041E                     	;# 
   282  0498                     	;# 
   283  0498                     	;# 
   284  0499                     	;# 
   285  049A                     	;# 
   286  049B                     	;# 
   287  049B                     	;# 
   288  049C                     	;# 
   289  049D                     	;# 
   290  049E                     	;# 
   291  049F                     	;# 
   292  0511                     	;# 
   293  0515                     	;# 
   294  0617                     	;# 
   295  0618                     	;# 
   296  0619                     	;# 
   297  0619                     	;# 
   298  061A                     	;# 
   299  061B                     	;# 
   300  061C                     	;# 
   301  061C                     	;# 
   302  0691                     	;# 
   303  0692                     	;# 
   304  0693                     	;# 
   305  0694                     	;# 
   306  0695                     	;# 
   307  0696                     	;# 
   308  0697                     	;# 
   309  0698                     	;# 
   310  0699                     	;# 
   311  069A                     	;# 
   312  069B                     	;# 
   313  069C                     	;# 
   314  069D                     	;# 
   315  069E                     	;# 
   316  069F                     	;# 
   317  0E0F                     	;# 
   318  0E10                     	;# 
   319  0E11                     	;# 
   320  0E12                     	;# 
   321  0E13                     	;# 
   322  0E14                     	;# 
   323  0E15                     	;# 
   324  0E17                     	;# 
   325  0E20                     	;# 
   326  0E21                     	;# 
   327  0E22                     	;# 
   328  0E24                     	;# 
   329  0E25                     	;# 
   330  0E28                     	;# 
   331  0E29                     	;# 
   332  0E2A                     	;# 
   333  0E2B                     	;# 
   334  0E90                     	;# 
   335  0E91                     	;# 
   336  0E92                     	;# 
   337  0E93                     	;# 
   338  0E94                     	;# 
   339  0E95                     	;# 
   340  0E96                     	;# 
   341  0E97                     	;# 
   342  0E98                     	;# 
   343  0E99                     	;# 
   344  0E9A                     	;# 
   345  0E9B                     	;# 
   346  0E9C                     	;# 
   347  0E9D                     	;# 
   348  0E9E                     	;# 
   349  0E9F                     	;# 
   350  0EA0                     	;# 
   351  0EA1                     	;# 
   352  0EA2                     	;# 
   353  0EA3                     	;# 
   354  0EA4                     	;# 
   355  0EA5                     	;# 
   356  0EA6                     	;# 
   357  0EA7                     	;# 
   358  0EA8                     	;# 
   359  0EA9                     	;# 
   360  0EAA                     	;# 
   361  0EAB                     	;# 
   362  0EAC                     	;# 
   363  0EAD                     	;# 
   364  0EAE                     	;# 
   365  0EAF                     	;# 
   366  0EB0                     	;# 
   367  0EB1                     	;# 
   368  0EB2                     	;# 
   369  0F0F                     	;# 
   370  0F10                     	;# 
   371  0F11                     	;# 
   372  0F12                     	;# 
   373  0F13                     	;# 
   374  0F14                     	;# 
   375  0F15                     	;# 
   376  0F16                     	;# 
   377  0F17                     	;# 
   378  0F18                     	;# 
   379  0F19                     	;# 
   380  0F1A                     	;# 
   381  0F1B                     	;# 
   382  0F1C                     	;# 
   383  0F1D                     	;# 
   384  0F1E                     	;# 
   385  0F1F                     	;# 
   386  0F20                     	;# 
   387  0F21                     	;# 
   388  0F22                     	;# 
   389  0F23                     	;# 
   390  0F24                     	;# 
   391  0F25                     	;# 
   392  0F26                     	;# 
   393  0F27                     	;# 
   394  0F28                     	;# 
   395  0F29                     	;# 
   396  0F2A                     	;# 
   397  0F2B                     	;# 
   398  0F2C                     	;# 
   399  0F2D                     	;# 
   400  0F2E                     	;# 
   401  0F2F                     	;# 
   402  0F30                     	;# 
   403  0F31                     	;# 
   404  0F32                     	;# 
   405  0F33                     	;# 
   406  0F34                     	;# 
   407  0F35                     	;# 
   408  0F36                     	;# 
   409  0F37                     	;# 
   410  0FE4                     	;# 
   411  0FE5                     	;# 
   412  0FE6                     	;# 
   413  0FE7                     	;# 
   414  0FE8                     	;# 
   415  0FE9                     	;# 
   416  0FEA                     	;# 
   417  0FEB                     	;# 
   418  0FED                     	;# 
   419  0FEE                     	;# 
   420  0FEF                     	;# 
   421  0000                     	;# 
   422  0001                     	;# 
   423  0002                     	;# 
   424  0003                     	;# 
   425  0004                     	;# 
   426  0005                     	;# 
   427  0006                     	;# 
   428  0007                     	;# 
   429  0008                     	;# 
   430  0009                     	;# 
   431  000A                     	;# 
   432  000B                     	;# 
   433  000C                     	;# 
   434  000D                     	;# 
   435  000E                     	;# 
   436  000F                     	;# 
   437  0010                     	;# 
   438  0011                     	;# 
   439  0012                     	;# 
   440  0013                     	;# 
   441  0015                     	;# 
   442  0016                     	;# 
   443  0016                     	;# 
   444  0017                     	;# 
   445  0018                     	;# 
   446  0019                     	;# 
   447  001A                     	;# 
   448  001B                     	;# 
   449  001C                     	;# 
   450  008C                     	;# 
   451  008D                     	;# 
   452  008E                     	;# 
   453  008F                     	;# 
   454  0090                     	;# 
   455  0091                     	;# 
   456  0092                     	;# 
   457  0093                     	;# 
   458  0095                     	;# 
   459  0096                     	;# 
   460  0097                     	;# 
   461  0098                     	;# 
   462  0099                     	;# 
   463  009A                     	;# 
   464  009B                     	;# 
   465  009B                     	;# 
   466  009C                     	;# 
   467  009D                     	;# 
   468  009E                     	;# 
   469  009F                     	;# 
   470  010C                     	;# 
   471  010D                     	;# 
   472  010E                     	;# 
   473  010F                     	;# 
   474  0110                     	;# 
   475  0111                     	;# 
   476  0112                     	;# 
   477  0113                     	;# 
   478  0114                     	;# 
   479  0115                     	;# 
   480  0116                     	;# 
   481  0117                     	;# 
   482  0118                     	;# 
   483  0119                     	;# 
   484  011A                     	;# 
   485  011B                     	;# 
   486  011B                     	;# 
   487  011C                     	;# 
   488  018C                     	;# 
   489  018D                     	;# 
   490  018E                     	;# 
   491  018F                     	;# 
   492  0190                     	;# 
   493  0191                     	;# 
   494  0191                     	;# 
   495  0192                     	;# 
   496  0193                     	;# 
   497  0193                     	;# 
   498  0194                     	;# 
   499  0195                     	;# 
   500  0196                     	;# 
   501  0197                     	;# 
   502  0199                     	;# 
   503  0199                     	;# 
   504  0199                     	;# 
   505  019A                     	;# 
   506  019A                     	;# 
   507  019A                     	;# 
   508  019B                     	;# 
   509  019B                     	;# 
   510  019B                     	;# 
   511  019B                     	;# 
   512  019B                     	;# 
   513  019C                     	;# 
   514  019C                     	;# 
   515  019C                     	;# 
   516  019D                     	;# 
   517  019D                     	;# 
   518  019D                     	;# 
   519  019E                     	;# 
   520  019E                     	;# 
   521  019E                     	;# 
   522  019F                     	;# 
   523  019F                     	;# 
   524  019F                     	;# 
   525  019F                     	;# 
   526  019F                     	;# 
   527  020C                     	;# 
   528  020D                     	;# 
   529  020E                     	;# 
   530  020F                     	;# 
   531  0210                     	;# 
   532  0211                     	;# 
   533  0211                     	;# 
   534  0212                     	;# 
   535  0212                     	;# 
   536  0213                     	;# 
   537  0213                     	;# 
   538  0214                     	;# 
   539  0214                     	;# 
   540  0215                     	;# 
   541  0215                     	;# 
   542  0215                     	;# 
   543  0215                     	;# 
   544  0216                     	;# 
   545  0216                     	;# 
   546  0217                     	;# 
   547  0217                     	;# 
   548  028C                     	;# 
   549  028D                     	;# 
   550  028E                     	;# 
   551  028F                     	;# 
   552  0290                     	;# 
   553  0291                     	;# 
   554  0291                     	;# 
   555  0292                     	;# 
   556  0293                     	;# 
   557  0293                     	;# 
   558  0298                     	;# 
   559  0298                     	;# 
   560  0299                     	;# 
   561  029A                     	;# 
   562  029A                     	;# 
   563  029E                     	;# 
   564  030C                     	;# 
   565  030D                     	;# 
   566  030E                     	;# 
   567  030F                     	;# 
   568  0310                     	;# 
   569  038C                     	;# 
   570  038D                     	;# 
   571  038E                     	;# 
   572  038F                     	;# 
   573  0390                     	;# 
   574  0391                     	;# 
   575  0392                     	;# 
   576  0393                     	;# 
   577  0394                     	;# 
   578  0395                     	;# 
   579  0396                     	;# 
   580  0397                     	;# 
   581  0398                     	;# 
   582  0399                     	;# 
   583  039D                     	;# 
   584  039E                     	;# 
   585  039F                     	;# 
   586  0415                     	;# 
   587  0416                     	;# 
   588  0417                     	;# 
   589  041C                     	;# 
   590  041D                     	;# 
   591  041E                     	;# 
   592  0498                     	;# 
   593  0498                     	;# 
   594  0499                     	;# 
   595  049A                     	;# 
   596  049B                     	;# 
   597  049B                     	;# 
   598  049C                     	;# 
   599  049D                     	;# 
   600  049E                     	;# 
   601  049F                     	;# 
   602  0511                     	;# 
   603  0515                     	;# 
   604  0617                     	;# 
   605  0618                     	;# 
   606  0619                     	;# 
   607  0619                     	;# 
   608  061A                     	;# 
   609  061B                     	;# 
   610  061C                     	;# 
   611  061C                     	;# 
   612  0691                     	;# 
   613  0692                     	;# 
   614  0693                     	;# 
   615  0694                     	;# 
   616  0695                     	;# 
   617  0696                     	;# 
   618  0697                     	;# 
   619  0698                     	;# 
   620  0699                     	;# 
   621  069A                     	;# 
   622  069B                     	;# 
   623  069C                     	;# 
   624  069D                     	;# 
   625  069E                     	;# 
   626  069F                     	;# 
   627  0E0F                     	;# 
   628  0E10                     	;# 
   629  0E11                     	;# 
   630  0E12                     	;# 
   631  0E13                     	;# 
   632  0E14                     	;# 
   633  0E15                     	;# 
   634  0E17                     	;# 
   635  0E20                     	;# 
   636  0E21                     	;# 
   637  0E22                     	;# 
   638  0E24                     	;# 
   639  0E25                     	;# 
   640  0E28                     	;# 
   641  0E29                     	;# 
   642  0E2A                     	;# 
   643  0E2B                     	;# 
   644  0E90                     	;# 
   645  0E91                     	;# 
   646  0E92                     	;# 
   647  0E93                     	;# 
   648  0E94                     	;# 
   649  0E95                     	;# 
   650  0E96                     	;# 
   651  0E97                     	;# 
   652  0E98                     	;# 
   653  0E99                     	;# 
   654  0E9A                     	;# 
   655  0E9B                     	;# 
   656  0E9C                     	;# 
   657  0E9D                     	;# 
   658  0E9E                     	;# 
   659  0E9F                     	;# 
   660  0EA0                     	;# 
   661  0EA1                     	;# 
   662  0EA2                     	;# 
   663  0EA3                     	;# 
   664  0EA4                     	;# 
   665  0EA5                     	;# 
   666  0EA6                     	;# 
   667  0EA7                     	;# 
   668  0EA8                     	;# 
   669  0EA9                     	;# 
   670  0EAA                     	;# 
   671  0EAB                     	;# 
   672  0EAC                     	;# 
   673  0EAD                     	;# 
   674  0EAE                     	;# 
   675  0EAF                     	;# 
   676  0EB0                     	;# 
   677  0EB1                     	;# 
   678  0EB2                     	;# 
   679  0F0F                     	;# 
   680  0F10                     	;# 
   681  0F11                     	;# 
   682  0F12                     	;# 
   683  0F13                     	;# 
   684  0F14                     	;# 
   685  0F15                     	;# 
   686  0F16                     	;# 
   687  0F17                     	;# 
   688  0F18                     	;# 
   689  0F19                     	;# 
   690  0F1A                     	;# 
   691  0F1B                     	;# 
   692  0F1C                     	;# 
   693  0F1D                     	;# 
   694  0F1E                     	;# 
   695  0F1F                     	;# 
   696  0F20                     	;# 
   697  0F21                     	;# 
   698  0F22                     	;# 
   699  0F23                     	;# 
   700  0F24                     	;# 
   701  0F25                     	;# 
   702  0F26                     	;# 
   703  0F27                     	;# 
   704  0F28                     	;# 
   705  0F29                     	;# 
   706  0F2A                     	;# 
   707  0F2B                     	;# 
   708  0F2C                     	;# 
   709  0F2D                     	;# 
   710  0F2E                     	;# 
   711  0F2F                     	;# 
   712  0F30                     	;# 
   713  0F31                     	;# 
   714  0F32                     	;# 
   715  0F33                     	;# 
   716  0F34                     	;# 
   717  0F35                     	;# 
   718  0F36                     	;# 
   719  0F37                     	;# 
   720  0FE4                     	;# 
   721  0FE5                     	;# 
   722  0FE6                     	;# 
   723  0FE7                     	;# 
   724  0FE8                     	;# 
   725  0FE9                     	;# 
   726  0FEA                     	;# 
   727  0FEB                     	;# 
   728  0FED                     	;# 
   729  0FEE                     	;# 
   730  0FEF                     	;# 
   731  0000                     	;# 
   732  0001                     	;# 
   733  0002                     	;# 
   734  0003                     	;# 
   735  0004                     	;# 
   736  0005                     	;# 
   737  0006                     	;# 
   738  0007                     	;# 
   739  0008                     	;# 
   740  0009                     	;# 
   741  000A                     	;# 
   742  000B                     	;# 
   743  000C                     	;# 
   744  000D                     	;# 
   745  000E                     	;# 
   746  000F                     	;# 
   747  0010                     	;# 
   748  0011                     	;# 
   749  0012                     	;# 
   750  0013                     	;# 
   751  0015                     	;# 
   752  0016                     	;# 
   753  0016                     	;# 
   754  0017                     	;# 
   755  0018                     	;# 
   756  0019                     	;# 
   757  001A                     	;# 
   758  001B                     	;# 
   759  001C                     	;# 
   760  008C                     	;# 
   761  008D                     	;# 
   762  008E                     	;# 
   763  008F                     	;# 
   764  0090                     	;# 
   765  0091                     	;# 
   766  0092                     	;# 
   767  0093                     	;# 
   768  0095                     	;# 
   769  0096                     	;# 
   770  0097                     	;# 
   771  0098                     	;# 
   772  0099                     	;# 
   773  009A                     	;# 
   774  009B                     	;# 
   775  009B                     	;# 
   776  009C                     	;# 
   777  009D                     	;# 
   778  009E                     	;# 
   779  009F                     	;# 
   780  010C                     	;# 
   781  010D                     	;# 
   782  010E                     	;# 
   783  010F                     	;# 
   784  0110                     	;# 
   785  0111                     	;# 
   786  0112                     	;# 
   787  0113                     	;# 
   788  0114                     	;# 
   789  0115                     	;# 
   790  0116                     	;# 
   791  0117                     	;# 
   792  0118                     	;# 
   793  0119                     	;# 
   794  011A                     	;# 
   795  011B                     	;# 
   796  011B                     	;# 
   797  011C                     	;# 
   798  018C                     	;# 
   799  018D                     	;# 
   800  018E                     	;# 
   801  018F                     	;# 
   802  0190                     	;# 
   803  0191                     	;# 
   804  0191                     	;# 
   805  0192                     	;# 
   806  0193                     	;# 
   807  0193                     	;# 
   808  0194                     	;# 
   809  0195                     	;# 
   810  0196                     	;# 
   811  0197                     	;# 
   812  0199                     	;# 
   813  0199                     	;# 
   814  0199                     	;# 
   815  019A                     	;# 
   816  019A                     	;# 
   817  019A                     	;# 
   818  019B                     	;# 
   819  019B                     	;# 
   820  019B                     	;# 
   821  019B                     	;# 
   822  019B                     	;# 
   823  019C                     	;# 
   824  019C                     	;# 
   825  019C                     	;# 
   826  019D                     	;# 
   827  019D                     	;# 
   828  019D                     	;# 
   829  019E                     	;# 
   830  019E                     	;# 
   831  019E                     	;# 
   832  019F                     	;# 
   833  019F                     	;# 
   834  019F                     	;# 
   835  019F                     	;# 
   836  019F                     	;# 
   837  020C                     	;# 
   838  020D                     	;# 
   839  020E                     	;# 
   840  020F                     	;# 
   841  0210                     	;# 
   842  0211                     	;# 
   843  0211                     	;# 
   844  0212                     	;# 
   845  0212                     	;# 
   846  0213                     	;# 
   847  0213                     	;# 
   848  0214                     	;# 
   849  0214                     	;# 
   850  0215                     	;# 
   851  0215                     	;# 
   852  0215                     	;# 
   853  0215                     	;# 
   854  0216                     	;# 
   855  0216                     	;# 
   856  0217                     	;# 
   857  0217                     	;# 
   858  028C                     	;# 
   859  028D                     	;# 
   860  028E                     	;# 
   861  028F                     	;# 
   862  0290                     	;# 
   863  0291                     	;# 
   864  0291                     	;# 
   865  0292                     	;# 
   866  0293                     	;# 
   867  0293                     	;# 
   868  0298                     	;# 
   869  0298                     	;# 
   870  0299                     	;# 
   871  029A                     	;# 
   872  029A                     	;# 
   873  029E                     	;# 
   874  030C                     	;# 
   875  030D                     	;# 
   876  030E                     	;# 
   877  030F                     	;# 
   878  0310                     	;# 
   879  038C                     	;# 
   880  038D                     	;# 
   881  038E                     	;# 
   882  038F                     	;# 
   883  0390                     	;# 
   884  0391                     	;# 
   885  0392                     	;# 
   886  0393                     	;# 
   887  0394                     	;# 
   888  0395                     	;# 
   889  0396                     	;# 
   890  0397                     	;# 
   891  0398                     	;# 
   892  0399                     	;# 
   893  039D                     	;# 
   894  039E                     	;# 
   895  039F                     	;# 
   896  0415                     	;# 
   897  0416                     	;# 
   898  0417                     	;# 
   899  041C                     	;# 
   900  041D                     	;# 
   901  041E                     	;# 
   902  0498                     	;# 
   903  0498                     	;# 
   904  0499                     	;# 
   905  049A                     	;# 
   906  049B                     	;# 
   907  049B                     	;# 
   908  049C                     	;# 
   909  049D                     	;# 
   910  049E                     	;# 
   911  049F                     	;# 
   912  0511                     	;# 
   913  0515                     	;# 
   914  0617                     	;# 
   915  0618                     	;# 
   916  0619                     	;# 
   917  0619                     	;# 
   918  061A                     	;# 
   919  061B                     	;# 
   920  061C                     	;# 
   921  061C                     	;# 
   922  0691                     	;# 
   923  0692                     	;# 
   924  0693                     	;# 
   925  0694                     	;# 
   926  0695                     	;# 
   927  0696                     	;# 
   928  0697                     	;# 
   929  0698                     	;# 
   930  0699                     	;# 
   931  069A                     	;# 
   932  069B                     	;# 
   933  069C                     	;# 
   934  069D                     	;# 
   935  069E                     	;# 
   936  069F                     	;# 
   937  0E0F                     	;# 
   938  0E10                     	;# 
   939  0E11                     	;# 
   940  0E12                     	;# 
   941  0E13                     	;# 
   942  0E14                     	;# 
   943  0E15                     	;# 
   944  0E17                     	;# 
   945  0E20                     	;# 
   946  0E21                     	;# 
   947  0E22                     	;# 
   948  0E24                     	;# 
   949  0E25                     	;# 
   950  0E28                     	;# 
   951  0E29                     	;# 
   952  0E2A                     	;# 
   953  0E2B                     	;# 
   954  0E90                     	;# 
   955  0E91                     	;# 
   956  0E92                     	;# 
   957  0E93                     	;# 
   958  0E94                     	;# 
   959  0E95                     	;# 
   960  0E96                     	;# 
   961  0E97                     	;# 
   962  0E98                     	;# 
   963  0E99                     	;# 
   964  0E9A                     	;# 
   965  0E9B                     	;# 
   966  0E9C                     	;# 
   967  0E9D                     	;# 
   968  0E9E                     	;# 
   969  0E9F                     	;# 
   970  0EA0                     	;# 
   971  0EA1                     	;# 
   972  0EA2                     	;# 
   973  0EA3                     	;# 
   974  0EA4                     	;# 
   975  0EA5                     	;# 
   976  0EA6                     	;# 
   977  0EA7                     	;# 
   978  0EA8                     	;# 
   979  0EA9                     	;# 
   980  0EAA                     	;# 
   981  0EAB                     	;# 
   982  0EAC                     	;# 
   983  0EAD                     	;# 
   984  0EAE                     	;# 
   985  0EAF                     	;# 
   986  0EB0                     	;# 
   987  0EB1                     	;# 
   988  0EB2                     	;# 
   989  0F0F                     	;# 
   990  0F10                     	;# 
   991  0F11                     	;# 
   992  0F12                     	;# 
   993  0F13                     	;# 
   994  0F14                     	;# 
   995  0F15                     	;# 
   996  0F16                     	;# 
   997  0F17                     	;# 
   998  0F18                     	;# 
   999  0F19                     	;# 
  1000  0F1A                     	;# 
  1001  0F1B                     	;# 
  1002  0F1C                     	;# 
  1003  0F1D                     	;# 
  1004  0F1E                     	;# 
  1005  0F1F                     	;# 
  1006  0F20                     	;# 
  1007  0F21                     	;# 
  1008  0F22                     	;# 
  1009  0F23                     	;# 
  1010  0F24                     	;# 
  1011  0F25                     	;# 
  1012  0F26                     	;# 
  1013  0F27                     	;# 
  1014  0F28                     	;# 
  1015  0F29                     	;# 
  1016  0F2A                     	;# 
  1017  0F2B                     	;# 
  1018  0F2C                     	;# 
  1019  0F2D                     	;# 
  1020  0F2E                     	;# 
  1021  0F2F                     	;# 
  1022  0F30                     	;# 
  1023  0F31                     	;# 
  1024  0F32                     	;# 
  1025  0F33                     	;# 
  1026  0F34                     	;# 
  1027  0F35                     	;# 
  1028  0F36                     	;# 
  1029  0F37                     	;# 
  1030  0FE4                     	;# 
  1031  0FE5                     	;# 
  1032  0FE6                     	;# 
  1033  0FE7                     	;# 
  1034  0FE8                     	;# 
  1035  0FE9                     	;# 
  1036  0FEA                     	;# 
  1037  0FEB                     	;# 
  1038  0FED                     	;# 
  1039  0FEE                     	;# 
  1040  0FEF                     	;# 
  1041  0000                     	;# 
  1042  0001                     	;# 
  1043  0002                     	;# 
  1044  0003                     	;# 
  1045  0004                     	;# 
  1046  0005                     	;# 
  1047  0006                     	;# 
  1048  0007                     	;# 
  1049  0008                     	;# 
  1050  0009                     	;# 
  1051  000A                     	;# 
  1052  000B                     	;# 
  1053  000C                     	;# 
  1054  000D                     	;# 
  1055  000E                     	;# 
  1056  000F                     	;# 
  1057  0010                     	;# 
  1058  0011                     	;# 
  1059  0012                     	;# 
  1060  0013                     	;# 
  1061  0015                     	;# 
  1062  0016                     	;# 
  1063  0016                     	;# 
  1064  0017                     	;# 
  1065  0018                     	;# 
  1066  0019                     	;# 
  1067  001A                     	;# 
  1068  001B                     	;# 
  1069  001C                     	;# 
  1070  008C                     	;# 
  1071  008D                     	;# 
  1072  008E                     	;# 
  1073  008F                     	;# 
  1074  0090                     	;# 
  1075  0091                     	;# 
  1076  0092                     	;# 
  1077  0093                     	;# 
  1078  0095                     	;# 
  1079  0096                     	;# 
  1080  0097                     	;# 
  1081  0098                     	;# 
  1082  0099                     	;# 
  1083  009A                     	;# 
  1084  009B                     	;# 
  1085  009B                     	;# 
  1086  009C                     	;# 
  1087  009D                     	;# 
  1088  009E                     	;# 
  1089  009F                     	;# 
  1090  010C                     	;# 
  1091  010D                     	;# 
  1092  010E                     	;# 
  1093  010F                     	;# 
  1094  0110                     	;# 
  1095  0111                     	;# 
  1096  0112                     	;# 
  1097  0113                     	;# 
  1098  0114                     	;# 
  1099  0115                     	;# 
  1100  0116                     	;# 
  1101  0117                     	;# 
  1102  0118                     	;# 
  1103  0119                     	;# 
  1104  011A                     	;# 
  1105  011B                     	;# 
  1106  011B                     	;# 
  1107  011C                     	;# 
  1108  018C                     	;# 
  1109  018D                     	;# 
  1110  018E                     	;# 
  1111  018F                     	;# 
  1112  0190                     	;# 
  1113  0191                     	;# 
  1114  0191                     	;# 
  1115  0192                     	;# 
  1116  0193                     	;# 
  1117  0193                     	;# 
  1118  0194                     	;# 
  1119  0195                     	;# 
  1120  0196                     	;# 
  1121  0197                     	;# 
  1122  0199                     	;# 
  1123  0199                     	;# 
  1124  0199                     	;# 
  1125  019A                     	;# 
  1126  019A                     	;# 
  1127  019A                     	;# 
  1128  019B                     	;# 
  1129  019B                     	;# 
  1130  019B                     	;# 
  1131  019B                     	;# 
  1132  019B                     	;# 
  1133  019C                     	;# 
  1134  019C                     	;# 
  1135  019C                     	;# 
  1136  019D                     	;# 
  1137  019D                     	;# 
  1138  019D                     	;# 
  1139  019E                     	;# 
  1140  019E                     	;# 
  1141  019E                     	;# 
  1142  019F                     	;# 
  1143  019F                     	;# 
  1144  019F                     	;# 
  1145  019F                     	;# 
  1146  019F                     	;# 
  1147  020C                     	;# 
  1148  020D                     	;# 
  1149  020E                     	;# 
  1150  020F                     	;# 
  1151  0210                     	;# 
  1152  0211                     	;# 
  1153  0211                     	;# 
  1154  0212                     	;# 
  1155  0212                     	;# 
  1156  0213                     	;# 
  1157  0213                     	;# 
  1158  0214                     	;# 
  1159  0214                     	;# 
  1160  0215                     	;# 
  1161  0215                     	;# 
  1162  0215                     	;# 
  1163  0215                     	;# 
  1164  0216                     	;# 
  1165  0216                     	;# 
  1166  0217                     	;# 
  1167  0217                     	;# 
  1168  028C                     	;# 
  1169  028D                     	;# 
  1170  028E                     	;# 
  1171  028F                     	;# 
  1172  0290                     	;# 
  1173  0291                     	;# 
  1174  0291                     	;# 
  1175  0292                     	;# 
  1176  0293                     	;# 
  1177  0293                     	;# 
  1178  0298                     	;# 
  1179  0298                     	;# 
  1180  0299                     	;# 
  1181  029A                     	;# 
  1182  029A                     	;# 
  1183  029E                     	;# 
  1184  030C                     	;# 
  1185  030D                     	;# 
  1186  030E                     	;# 
  1187  030F                     	;# 
  1188  0310                     	;# 
  1189  038C                     	;# 
  1190  038D                     	;# 
  1191  038E                     	;# 
  1192  038F                     	;# 
  1193  0390                     	;# 
  1194  0391                     	;# 
  1195  0392                     	;# 
  1196  0393                     	;# 
  1197  0394                     	;# 
  1198  0395                     	;# 
  1199  0396                     	;# 
  1200  0397                     	;# 
  1201  0398                     	;# 
  1202  0399                     	;# 
  1203  039D                     	;# 
  1204  039E                     	;# 
  1205  039F                     	;# 
  1206  0415                     	;# 
  1207  0416                     	;# 
  1208  0417                     	;# 
  1209  041C                     	;# 
  1210  041D                     	;# 
  1211  041E                     	;# 
  1212  0498                     	;# 
  1213  0498                     	;# 
  1214  0499                     	;# 
  1215  049A                     	;# 
  1216  049B                     	;# 
  1217  049B                     	;# 
  1218  049C                     	;# 
  1219  049D                     	;# 
  1220  049E                     	;# 
  1221  049F                     	;# 
  1222  0511                     	;# 
  1223  0515                     	;# 
  1224  0617                     	;# 
  1225  0618                     	;# 
  1226  0619                     	;# 
  1227  0619                     	;# 
  1228  061A                     	;# 
  1229  061B                     	;# 
  1230  061C                     	;# 
  1231  061C                     	;# 
  1232  0691                     	;# 
  1233  0692                     	;# 
  1234  0693                     	;# 
  1235  0694                     	;# 
  1236  0695                     	;# 
  1237  0696                     	;# 
  1238  0697                     	;# 
  1239  0698                     	;# 
  1240  0699                     	;# 
  1241  069A                     	;# 
  1242  069B                     	;# 
  1243  069C                     	;# 
  1244  069D                     	;# 
  1245  069E                     	;# 
  1246  069F                     	;# 
  1247  0E0F                     	;# 
  1248  0E10                     	;# 
  1249  0E11                     	;# 
  1250  0E12                     	;# 
  1251  0E13                     	;# 
  1252  0E14                     	;# 
  1253  0E15                     	;# 
  1254  0E17                     	;# 
  1255  0E20                     	;# 
  1256  0E21                     	;# 
  1257  0E22                     	;# 
  1258  0E24                     	;# 
  1259  0E25                     	;# 
  1260  0E28                     	;# 
  1261  0E29                     	;# 
  1262  0E2A                     	;# 
  1263  0E2B                     	;# 
  1264  0E90                     	;# 
  1265  0E91                     	;# 
  1266  0E92                     	;# 
  1267  0E93                     	;# 
  1268  0E94                     	;# 
  1269  0E95                     	;# 
  1270  0E96                     	;# 
  1271  0E97                     	;# 
  1272  0E98                     	;# 
  1273  0E99                     	;# 
  1274  0E9A                     	;# 
  1275  0E9B                     	;# 
  1276  0E9C                     	;# 
  1277  0E9D                     	;# 
  1278  0E9E                     	;# 
  1279  0E9F                     	;# 
  1280  0EA0                     	;# 
  1281  0EA1                     	;# 
  1282  0EA2                     	;# 
  1283  0EA3                     	;# 
  1284  0EA4                     	;# 
  1285  0EA5                     	;# 
  1286  0EA6                     	;# 
  1287  0EA7                     	;# 
  1288  0EA8                     	;# 
  1289  0EA9                     	;# 
  1290  0EAA                     	;# 
  1291  0EAB                     	;# 
  1292  0EAC                     	;# 
  1293  0EAD                     	;# 
  1294  0EAE                     	;# 
  1295  0EAF                     	;# 
  1296  0EB0                     	;# 
  1297  0EB1                     	;# 
  1298  0EB2                     	;# 
  1299  0F0F                     	;# 
  1300  0F10                     	;# 
  1301  0F11                     	;# 
  1302  0F12                     	;# 
  1303  0F13                     	;# 
  1304  0F14                     	;# 
  1305  0F15                     	;# 
  1306  0F16                     	;# 
  1307  0F17                     	;# 
  1308  0F18                     	;# 
  1309  0F19                     	;# 
  1310  0F1A                     	;# 
  1311  0F1B                     	;# 
  1312  0F1C                     	;# 
  1313  0F1D                     	;# 
  1314  0F1E                     	;# 
  1315  0F1F                     	;# 
  1316  0F20                     	;# 
  1317  0F21                     	;# 
  1318  0F22                     	;# 
  1319  0F23                     	;# 
  1320  0F24                     	;# 
  1321  0F25                     	;# 
  1322  0F26                     	;# 
  1323  0F27                     	;# 
  1324  0F28                     	;# 
  1325  0F29                     	;# 
  1326  0F2A                     	;# 
  1327  0F2B                     	;# 
  1328  0F2C                     	;# 
  1329  0F2D                     	;# 
  1330  0F2E                     	;# 
  1331  0F2F                     	;# 
  1332  0F30                     	;# 
  1333  0F31                     	;# 
  1334  0F32                     	;# 
  1335  0F33                     	;# 
  1336  0F34                     	;# 
  1337  0F35                     	;# 
  1338  0F36                     	;# 
  1339  0F37                     	;# 
  1340  0FE4                     	;# 
  1341  0FE5                     	;# 
  1342  0FE6                     	;# 
  1343  0FE7                     	;# 
  1344  0FE8                     	;# 
  1345  0FE9                     	;# 
  1346  0FEA                     	;# 
  1347  0FEB                     	;# 
  1348  0FED                     	;# 
  1349  0FEE                     	;# 
  1350  0FEF                     	;# 
  1351  0000                     	;# 
  1352  0001                     	;# 
  1353  0002                     	;# 
  1354  0003                     	;# 
  1355  0004                     	;# 
  1356  0005                     	;# 
  1357  0006                     	;# 
  1358  0007                     	;# 
  1359  0008                     	;# 
  1360  0009                     	;# 
  1361  000A                     	;# 
  1362  000B                     	;# 
  1363  000C                     	;# 
  1364  000D                     	;# 
  1365  000E                     	;# 
  1366  000F                     	;# 
  1367  0010                     	;# 
  1368  0011                     	;# 
  1369  0012                     	;# 
  1370  0013                     	;# 
  1371  0015                     	;# 
  1372  0016                     	;# 
  1373  0016                     	;# 
  1374  0017                     	;# 
  1375  0018                     	;# 
  1376  0019                     	;# 
  1377  001A                     	;# 
  1378  001B                     	;# 
  1379  001C                     	;# 
  1380  008C                     	;# 
  1381  008D                     	;# 
  1382  008E                     	;# 
  1383  008F                     	;# 
  1384  0090                     	;# 
  1385  0091                     	;# 
  1386  0092                     	;# 
  1387  0093                     	;# 
  1388  0095                     	;# 
  1389  0096                     	;# 
  1390  0097                     	;# 
  1391  0098                     	;# 
  1392  0099                     	;# 
  1393  009A                     	;# 
  1394  009B                     	;# 
  1395  009B                     	;# 
  1396  009C                     	;# 
  1397  009D                     	;# 
  1398  009E                     	;# 
  1399  009F                     	;# 
  1400  010C                     	;# 
  1401  010D                     	;# 
  1402  010E                     	;# 
  1403  010F                     	;# 
  1404  0110                     	;# 
  1405  0111                     	;# 
  1406  0112                     	;# 
  1407  0113                     	;# 
  1408  0114                     	;# 
  1409  0115                     	;# 
  1410  0116                     	;# 
  1411  0117                     	;# 
  1412  0118                     	;# 
  1413  0119                     	;# 
  1414  011A                     	;# 
  1415  011B                     	;# 
  1416  011B                     	;# 
  1417  011C                     	;# 
  1418  018C                     	;# 
  1419  018D                     	;# 
  1420  018E                     	;# 
  1421  018F                     	;# 
  1422  0190                     	;# 
  1423  0191                     	;# 
  1424  0191                     	;# 
  1425  0192                     	;# 
  1426  0193                     	;# 
  1427  0193                     	;# 
  1428  0194                     	;# 
  1429  0195                     	;# 
  1430  0196                     	;# 
  1431  0197                     	;# 
  1432  0199                     	;# 
  1433  0199                     	;# 
  1434  0199                     	;# 
  1435  019A                     	;# 
  1436  019A                     	;# 
  1437  019A                     	;# 
  1438  019B                     	;# 
  1439  019B                     	;# 
  1440  019B                     	;# 
  1441  019B                     	;# 
  1442  019B                     	;# 
  1443  019C                     	;# 
  1444  019C                     	;# 
  1445  019C                     	;# 
  1446  019D                     	;# 
  1447  019D                     	;# 
  1448  019D                     	;# 
  1449  019E                     	;# 
  1450  019E                     	;# 
  1451  019E                     	;# 
  1452  019F                     	;# 
  1453  019F                     	;# 
  1454  019F                     	;# 
  1455  019F                     	;# 
  1456  019F                     	;# 
  1457  020C                     	;# 
  1458  020D                     	;# 
  1459  020E                     	;# 
  1460  020F                     	;# 
  1461  0210                     	;# 
  1462  0211                     	;# 
  1463  0211                     	;# 
  1464  0212                     	;# 
  1465  0212                     	;# 
  1466  0213                     	;# 
  1467  0213                     	;# 
  1468  0214                     	;# 
  1469  0214                     	;# 
  1470  0215                     	;# 
  1471  0215                     	;# 
  1472  0215                     	;# 
  1473  0215                     	;# 
  1474  0216                     	;# 
  1475  0216                     	;# 
  1476  0217                     	;# 
  1477  0217                     	;# 
  1478  028C                     	;# 
  1479  028D                     	;# 
  1480  028E                     	;# 
  1481  028F                     	;# 
  1482  0290                     	;# 
  1483  0291                     	;# 
  1484  0291                     	;# 
  1485  0292                     	;# 
  1486  0293                     	;# 
  1487  0293                     	;# 
  1488  0298                     	;# 
  1489  0298                     	;# 
  1490  0299                     	;# 
  1491  029A                     	;# 
  1492  029A                     	;# 
  1493  029E                     	;# 
  1494  030C                     	;# 
  1495  030D                     	;# 
  1496  030E                     	;# 
  1497  030F                     	;# 
  1498  0310                     	;# 
  1499  038C                     	;# 
  1500  038D                     	;# 
  1501  038E                     	;# 
  1502  038F                     	;# 
  1503  0390                     	;# 
  1504  0391                     	;# 
  1505  0392                     	;# 
  1506  0393                     	;# 
  1507  0394                     	;# 
  1508  0395                     	;# 
  1509  0396                     	;# 
  1510  0397                     	;# 
  1511  0398                     	;# 
  1512  0399                     	;# 
  1513  039D                     	;# 
  1514  039E                     	;# 
  1515  039F                     	;# 
  1516  0415                     	;# 
  1517  0416                     	;# 
  1518  0417                     	;# 
  1519  041C                     	;# 
  1520  041D                     	;# 
  1521  041E                     	;# 
  1522  0498                     	;# 
  1523  0498                     	;# 
  1524  0499                     	;# 
  1525  049A                     	;# 
  1526  049B                     	;# 
  1527  049B                     	;# 
  1528  049C                     	;# 
  1529  049D                     	;# 
  1530  049E                     	;# 
  1531  049F                     	;# 
  1532  0511                     	;# 
  1533  0515                     	;# 
  1534  0617                     	;# 
  1535  0618                     	;# 
  1536  0619                     	;# 
  1537  0619                     	;# 
  1538  061A                     	;# 
  1539  061B                     	;# 
  1540  061C                     	;# 
  1541  061C                     	;# 
  1542  0691                     	;# 
  1543  0692                     	;# 
  1544  0693                     	;# 
  1545  0694                     	;# 
  1546  0695                     	;# 
  1547  0696                     	;# 
  1548  0697                     	;# 
  1549  0698                     	;# 
  1550  0699                     	;# 
  1551  069A                     	;# 
  1552  069B                     	;# 
  1553  069C                     	;# 
  1554  069D                     	;# 
  1555  069E                     	;# 
  1556  069F                     	;# 
  1557  0E0F                     	;# 
  1558  0E10                     	;# 
  1559  0E11                     	;# 
  1560  0E12                     	;# 
  1561  0E13                     	;# 
  1562  0E14                     	;# 
  1563  0E15                     	;# 
  1564  0E17                     	;# 
  1565  0E20                     	;# 
  1566  0E21                     	;# 
  1567  0E22                     	;# 
  1568  0E24                     	;# 
  1569  0E25                     	;# 
  1570  0E28                     	;# 
  1571  0E29                     	;# 
  1572  0E2A                     	;# 
  1573  0E2B                     	;# 
  1574  0E90                     	;# 
  1575  0E91                     	;# 
  1576  0E92                     	;# 
  1577  0E93                     	;# 
  1578  0E94                     	;# 
  1579  0E95                     	;# 
  1580  0E96                     	;# 
  1581  0E97                     	;# 
  1582  0E98                     	;# 
  1583  0E99                     	;# 
  1584  0E9A                     	;# 
  1585  0E9B                     	;# 
  1586  0E9C                     	;# 
  1587  0E9D                     	;# 
  1588  0E9E                     	;# 
  1589  0E9F                     	;# 
  1590  0EA0                     	;# 
  1591  0EA1                     	;# 
  1592  0EA2                     	;# 
  1593  0EA3                     	;# 
  1594  0EA4                     	;# 
  1595  0EA5                     	;# 
  1596  0EA6                     	;# 
  1597  0EA7                     	;# 
  1598  0EA8                     	;# 
  1599  0EA9                     	;# 
  1600  0EAA                     	;# 
  1601  0EAB                     	;# 
  1602  0EAC                     	;# 
  1603  0EAD                     	;# 
  1604  0EAE                     	;# 
  1605  0EAF                     	;# 
  1606  0EB0                     	;# 
  1607  0EB1                     	;# 
  1608  0EB2                     	;# 
  1609  0F0F                     	;# 
  1610  0F10                     	;# 
  1611  0F11                     	;# 
  1612  0F12                     	;# 
  1613  0F13                     	;# 
  1614  0F14                     	;# 
  1615  0F15                     	;# 
  1616  0F16                     	;# 
  1617  0F17                     	;# 
  1618  0F18                     	;# 
  1619  0F19                     	;# 
  1620  0F1A                     	;# 
  1621  0F1B                     	;# 
  1622  0F1C                     	;# 
  1623  0F1D                     	;# 
  1624  0F1E                     	;# 
  1625  0F1F                     	;# 
  1626  0F20                     	;# 
  1627  0F21                     	;# 
  1628  0F22                     	;# 
  1629  0F23                     	;# 
  1630  0F24                     	;# 
  1631  0F25                     	;# 
  1632  0F26                     	;# 
  1633  0F27                     	;# 
  1634  0F28                     	;# 
  1635  0F29                     	;# 
  1636  0F2A                     	;# 
  1637  0F2B                     	;# 
  1638  0F2C                     	;# 
  1639  0F2D                     	;# 
  1640  0F2E                     	;# 
  1641  0F2F                     	;# 
  1642  0F30                     	;# 
  1643  0F31                     	;# 
  1644  0F32                     	;# 
  1645  0F33                     	;# 
  1646  0F34                     	;# 
  1647  0F35                     	;# 
  1648  0F36                     	;# 
  1649  0F37                     	;# 
  1650  0FE4                     	;# 
  1651  0FE5                     	;# 
  1652  0FE6                     	;# 
  1653  0FE7                     	;# 
  1654  0FE8                     	;# 
  1655  0FE9                     	;# 
  1656  0FEA                     	;# 
  1657  0FEB                     	;# 
  1658  0FED                     	;# 
  1659  0FEE                     	;# 
  1660  0FEF                     	;# 
  1661  0000                     	;# 
  1662  0001                     	;# 
  1663  0002                     	;# 
  1664  0003                     	;# 
  1665  0004                     	;# 
  1666  0005                     	;# 
  1667  0006                     	;# 
  1668  0007                     	;# 
  1669  0008                     	;# 
  1670  0009                     	;# 
  1671  000A                     	;# 
  1672  000B                     	;# 
  1673  000C                     	;# 
  1674  000D                     	;# 
  1675  000E                     	;# 
  1676  000F                     	;# 
  1677  0010                     	;# 
  1678  0011                     	;# 
  1679  0012                     	;# 
  1680  0013                     	;# 
  1681  0015                     	;# 
  1682  0016                     	;# 
  1683  0016                     	;# 
  1684  0017                     	;# 
  1685  0018                     	;# 
  1686  0019                     	;# 
  1687  001A                     	;# 
  1688  001B                     	;# 
  1689  001C                     	;# 
  1690  008C                     	;# 
  1691  008D                     	;# 
  1692  008E                     	;# 
  1693  008F                     	;# 
  1694  0090                     	;# 
  1695  0091                     	;# 
  1696  0092                     	;# 
  1697  0093                     	;# 
  1698  0095                     	;# 
  1699  0096                     	;# 
  1700  0097                     	;# 
  1701  0098                     	;# 
  1702  0099                     	;# 
  1703  009A                     	;# 
  1704  009B                     	;# 
  1705  009B                     	;# 
  1706  009C                     	;# 
  1707  009D                     	;# 
  1708  009E                     	;# 
  1709  009F                     	;# 
  1710  010C                     	;# 
  1711  010D                     	;# 
  1712  010E                     	;# 
  1713  010F                     	;# 
  1714  0110                     	;# 
  1715  0111                     	;# 
  1716  0112                     	;# 
  1717  0113                     	;# 
  1718  0114                     	;# 
  1719  0115                     	;# 
  1720  0116                     	;# 
  1721  0117                     	;# 
  1722  0118                     	;# 
  1723  0119                     	;# 
  1724  011A                     	;# 
  1725  011B                     	;# 
  1726  011B                     	;# 
  1727  011C                     	;# 
  1728  018C                     	;# 
  1729  018D                     	;# 
  1730  018E                     	;# 
  1731  018F                     	;# 
  1732  0190                     	;# 
  1733  0191                     	;# 
  1734  0191                     	;# 
  1735  0192                     	;# 
  1736  0193                     	;# 
  1737  0193                     	;# 
  1738  0194                     	;# 
  1739  0195                     	;# 
  1740  0196                     	;# 
  1741  0197                     	;# 
  1742  0199                     	;# 
  1743  0199                     	;# 
  1744  0199                     	;# 
  1745  019A                     	;# 
  1746  019A                     	;# 
  1747  019A                     	;# 
  1748  019B                     	;# 
  1749  019B                     	;# 
  1750  019B                     	;# 
  1751  019B                     	;# 
  1752  019B                     	;# 
  1753  019C                     	;# 
  1754  019C                     	;# 
  1755  019C                     	;# 
  1756  019D                     	;# 
  1757  019D                     	;# 
  1758  019D                     	;# 
  1759  019E                     	;# 
  1760  019E                     	;# 
  1761  019E                     	;# 
  1762  019F                     	;# 
  1763  019F                     	;# 
  1764  019F                     	;# 
  1765  019F                     	;# 
  1766  019F                     	;# 
  1767  020C                     	;# 
  1768  020D                     	;# 
  1769  020E                     	;# 
  1770  020F                     	;# 
  1771  0210                     	;# 
  1772  0211                     	;# 
  1773  0211                     	;# 
  1774  0212                     	;# 
  1775  0212                     	;# 
  1776  0213                     	;# 
  1777  0213                     	;# 
  1778  0214                     	;# 
  1779  0214                     	;# 
  1780  0215                     	;# 
  1781  0215                     	;# 
  1782  0215                     	;# 
  1783  0215                     	;# 
  1784  0216                     	;# 
  1785  0216                     	;# 
  1786  0217                     	;# 
  1787  0217                     	;# 
  1788  028C                     	;# 
  1789  028D                     	;# 
  1790  028E                     	;# 
  1791  028F                     	;# 
  1792  0290                     	;# 
  1793  0291                     	;# 
  1794  0291                     	;# 
  1795  0292                     	;# 
  1796  0293                     	;# 
  1797  0293                     	;# 
  1798  0298                     	;# 
  1799  0298                     	;# 
  1800  0299                     	;# 
  1801  029A                     	;# 
  1802  029A                     	;# 
  1803  029E                     	;# 
  1804  030C                     	;# 
  1805  030D                     	;# 
  1806  030E                     	;# 
  1807  030F                     	;# 
  1808  0310                     	;# 
  1809  038C                     	;# 
  1810  038D                     	;# 
  1811  038E                     	;# 
  1812  038F                     	;# 
  1813  0390                     	;# 
  1814  0391                     	;# 
  1815  0392                     	;# 
  1816  0393                     	;# 
  1817  0394                     	;# 
  1818  0395                     	;# 
  1819  0396                     	;# 
  1820  0397                     	;# 
  1821  0398                     	;# 
  1822  0399                     	;# 
  1823  039D                     	;# 
  1824  039E                     	;# 
  1825  039F                     	;# 
  1826  0415                     	;# 
  1827  0416                     	;# 
  1828  0417                     	;# 
  1829  041C                     	;# 
  1830  041D                     	;# 
  1831  041E                     	;# 
  1832  0498                     	;# 
  1833  0498                     	;# 
  1834  0499                     	;# 
  1835  049A                     	;# 
  1836  049B                     	;# 
  1837  049B                     	;# 
  1838  049C                     	;# 
  1839  049D                     	;# 
  1840  049E                     	;# 
  1841  049F                     	;# 
  1842  0511                     	;# 
  1843  0515                     	;# 
  1844  0617                     	;# 
  1845  0618                     	;# 
  1846  0619                     	;# 
  1847  0619                     	;# 
  1848  061A                     	;# 
  1849  061B                     	;# 
  1850  061C                     	;# 
  1851  061C                     	;# 
  1852  0691                     	;# 
  1853  0692                     	;# 
  1854  0693                     	;# 
  1855  0694                     	;# 
  1856  0695                     	;# 
  1857  0696                     	;# 
  1858  0697                     	;# 
  1859  0698                     	;# 
  1860  0699                     	;# 
  1861  069A                     	;# 
  1862  069B                     	;# 
  1863  069C                     	;# 
  1864  069D                     	;# 
  1865  069E                     	;# 
  1866  069F                     	;# 
  1867  0E0F                     	;# 
  1868  0E10                     	;# 
  1869  0E11                     	;# 
  1870  0E12                     	;# 
  1871  0E13                     	;# 
  1872  0E14                     	;# 
  1873  0E15                     	;# 
  1874  0E17                     	;# 
  1875  0E20                     	;# 
  1876  0E21                     	;# 
  1877  0E22                     	;# 
  1878  0E24                     	;# 
  1879  0E25                     	;# 
  1880  0E28                     	;# 
  1881  0E29                     	;# 
  1882  0E2A                     	;# 
  1883  0E2B                     	;# 
  1884  0E90                     	;# 
  1885  0E91                     	;# 
  1886  0E92                     	;# 
  1887  0E93                     	;# 
  1888  0E94                     	;# 
  1889  0E95                     	;# 
  1890  0E96                     	;# 
  1891  0E97                     	;# 
  1892  0E98                     	;# 
  1893  0E99                     	;# 
  1894  0E9A                     	;# 
  1895  0E9B                     	;# 
  1896  0E9C                     	;# 
  1897  0E9D                     	;# 
  1898  0E9E                     	;# 
  1899  0E9F                     	;# 
  1900  0EA0                     	;# 
  1901  0EA1                     	;# 
  1902  0EA2                     	;# 
  1903  0EA3                     	;# 
  1904  0EA4                     	;# 
  1905  0EA5                     	;# 
  1906  0EA6                     	;# 
  1907  0EA7                     	;# 
  1908  0EA8                     	;# 
  1909  0EA9                     	;# 
  1910  0EAA                     	;# 
  1911  0EAB                     	;# 
  1912  0EAC                     	;# 
  1913  0EAD                     	;# 
  1914  0EAE                     	;# 
  1915  0EAF                     	;# 
  1916  0EB0                     	;# 
  1917  0EB1                     	;# 
  1918  0EB2                     	;# 
  1919  0F0F                     	;# 
  1920  0F10                     	;# 
  1921  0F11                     	;# 
  1922  0F12                     	;# 
  1923  0F13                     	;# 
  1924  0F14                     	;# 
  1925  0F15                     	;# 
  1926  0F16                     	;# 
  1927  0F17                     	;# 
  1928  0F18                     	;# 
  1929  0F19                     	;# 
  1930  0F1A                     	;# 
  1931  0F1B                     	;# 
  1932  0F1C                     	;# 
  1933  0F1D                     	;# 
  1934  0F1E                     	;# 
  1935  0F1F                     	;# 
  1936  0F20                     	;# 
  1937  0F21                     	;# 
  1938  0F22                     	;# 
  1939  0F23                     	;# 
  1940  0F24                     	;# 
  1941  0F25                     	;# 
  1942  0F26                     	;# 
  1943  0F27                     	;# 
  1944  0F28                     	;# 
  1945  0F29                     	;# 
  1946  0F2A                     	;# 
  1947  0F2B                     	;# 
  1948  0F2C                     	;# 
  1949  0F2D                     	;# 
  1950  0F2E                     	;# 
  1951  0F2F                     	;# 
  1952  0F30                     	;# 
  1953  0F31                     	;# 
  1954  0F32                     	;# 
  1955  0F33                     	;# 
  1956  0F34                     	;# 
  1957  0F35                     	;# 
  1958  0F36                     	;# 
  1959  0F37                     	;# 
  1960  0FE4                     	;# 
  1961  0FE5                     	;# 
  1962  0FE6                     	;# 
  1963  0FE7                     	;# 
  1964  0FE8                     	;# 
  1965  0FE9                     	;# 
  1966  0FEA                     	;# 
  1967  0FEB                     	;# 
  1968  0FED                     	;# 
  1969  0FEE                     	;# 
  1970  0FEF                     	;# 
  1971  0000                     	;# 
  1972  0001                     	;# 
  1973  0002                     	;# 
  1974  0003                     	;# 
  1975  0004                     	;# 
  1976  0005                     	;# 
  1977  0006                     	;# 
  1978  0007                     	;# 
  1979  0008                     	;# 
  1980  0009                     	;# 
  1981  000A                     	;# 
  1982  000B                     	;# 
  1983  000C                     	;# 
  1984  000D                     	;# 
  1985  000E                     	;# 
  1986  000F                     	;# 
  1987  0010                     	;# 
  1988  0011                     	;# 
  1989  0012                     	;# 
  1990  0013                     	;# 
  1991  0015                     	;# 
  1992  0016                     	;# 
  1993  0016                     	;# 
  1994  0017                     	;# 
  1995  0018                     	;# 
  1996  0019                     	;# 
  1997  001A                     	;# 
  1998  001B                     	;# 
  1999  001C                     	;# 
  2000  008C                     	;# 
  2001  008D                     	;# 
  2002  008E                     	;# 
  2003  008F                     	;# 
  2004  0090                     	;# 
  2005  0091                     	;# 
  2006  0092                     	;# 
  2007  0093                     	;# 
  2008  0095                     	;# 
  2009  0096                     	;# 
  2010  0097                     	;# 
  2011  0098                     	;# 
  2012  0099                     	;# 
  2013  009A                     	;# 
  2014  009B                     	;# 
  2015  009B                     	;# 
  2016  009C                     	;# 
  2017  009D                     	;# 
  2018  009E                     	;# 
  2019  009F                     	;# 
  2020  010C                     	;# 
  2021  010D                     	;# 
  2022  010E                     	;# 
  2023  010F                     	;# 
  2024  0110                     	;# 
  2025  0111                     	;# 
  2026  0112                     	;# 
  2027  0113                     	;# 
  2028  0114                     	;# 
  2029  0115                     	;# 
  2030  0116                     	;# 
  2031  0117                     	;# 
  2032  0118                     	;# 
  2033  0119                     	;# 
  2034  011A                     	;# 
  2035  011B                     	;# 
  2036  011B                     	;# 
  2037  011C                     	;# 
  2038  018C                     	;# 
  2039  018D                     	;# 
  2040  018E                     	;# 
  2041  018F                     	;# 
  2042  0190                     	;# 
  2043  0191                     	;# 
  2044  0191                     	;# 
  2045  0192                     	;# 
  2046  0193                     	;# 
  2047  0193                     	;# 
  2048  0194                     	;# 
  2049  0195                     	;# 
  2050  0196                     	;# 
  2051  0197                     	;# 
  2052  0199                     	;# 
  2053  0199                     	;# 
  2054  0199                     	;# 
  2055  019A                     	;# 
  2056  019A                     	;# 
  2057  019A                     	;# 
  2058  019B                     	;# 
  2059  019B                     	;# 
  2060  019B                     	;# 
  2061  019B                     	;# 
  2062  019B                     	;# 
  2063  019C                     	;# 
  2064  019C                     	;# 
  2065  019C                     	;# 
  2066  019D                     	;# 
  2067  019D                     	;# 
  2068  019D                     	;# 
  2069  019E                     	;# 
  2070  019E                     	;# 
  2071  019E                     	;# 
  2072  019F                     	;# 
  2073  019F                     	;# 
  2074  019F                     	;# 
  2075  019F                     	;# 
  2076  019F                     	;# 
  2077  020C                     	;# 
  2078  020D                     	;# 
  2079  020E                     	;# 
  2080  020F                     	;# 
  2081  0210                     	;# 
  2082  0211                     	;# 
  2083  0211                     	;# 
  2084  0212                     	;# 
  2085  0212                     	;# 
  2086  0213                     	;# 
  2087  0213                     	;# 
  2088  0214                     	;# 
  2089  0214                     	;# 
  2090  0215                     	;# 
  2091  0215                     	;# 
  2092  0215                     	;# 
  2093  0215                     	;# 
  2094  0216                     	;# 
  2095  0216                     	;# 
  2096  0217                     	;# 
  2097  0217                     	;# 
  2098  028C                     	;# 
  2099  028D                     	;# 
  2100  028E                     	;# 
  2101  028F                     	;# 
  2102  0290                     	;# 
  2103  0291                     	;# 
  2104  0291                     	;# 
  2105  0292                     	;# 
  2106  0293                     	;# 
  2107  0293                     	;# 
  2108  0298                     	;# 
  2109  0298                     	;# 
  2110  0299                     	;# 
  2111  029A                     	;# 
  2112  029A                     	;# 
  2113  029E                     	;# 
  2114  030C                     	;# 
  2115  030D                     	;# 
  2116  030E                     	;# 
  2117  030F                     	;# 
  2118  0310                     	;# 
  2119  038C                     	;# 
  2120  038D                     	;# 
  2121  038E                     	;# 
  2122  038F                     	;# 
  2123  0390                     	;# 
  2124  0391                     	;# 
  2125  0392                     	;# 
  2126  0393                     	;# 
  2127  0394                     	;# 
  2128  0395                     	;# 
  2129  0396                     	;# 
  2130  0397                     	;# 
  2131  0398                     	;# 
  2132  0399                     	;# 
  2133  039D                     	;# 
  2134  039E                     	;# 
  2135  039F                     	;# 
  2136  0415                     	;# 
  2137  0416                     	;# 
  2138  0417                     	;# 
  2139  041C                     	;# 
  2140  041D                     	;# 
  2141  041E                     	;# 
  2142  0498                     	;# 
  2143  0498                     	;# 
  2144  0499                     	;# 
  2145  049A                     	;# 
  2146  049B                     	;# 
  2147  049B                     	;# 
  2148  049C                     	;# 
  2149  049D                     	;# 
  2150  049E                     	;# 
  2151  049F                     	;# 
  2152  0511                     	;# 
  2153  0515                     	;# 
  2154  0617                     	;# 
  2155  0618                     	;# 
  2156  0619                     	;# 
  2157  0619                     	;# 
  2158  061A                     	;# 
  2159  061B                     	;# 
  2160  061C                     	;# 
  2161  061C                     	;# 
  2162  0691                     	;# 
  2163  0692                     	;# 
  2164  0693                     	;# 
  2165  0694                     	;# 
  2166  0695                     	;# 
  2167  0696                     	;# 
  2168  0697                     	;# 
  2169  0698                     	;# 
  2170  0699                     	;# 
  2171  069A                     	;# 
  2172  069B                     	;# 
  2173  069C                     	;# 
  2174  069D                     	;# 
  2175  069E                     	;# 
  2176  069F                     	;# 
  2177  0E0F                     	;# 
  2178  0E10                     	;# 
  2179  0E11                     	;# 
  2180  0E12                     	;# 
  2181  0E13                     	;# 
  2182  0E14                     	;# 
  2183  0E15                     	;# 
  2184  0E17                     	;# 
  2185  0E20                     	;# 
  2186  0E21                     	;# 
  2187  0E22                     	;# 
  2188  0E24                     	;# 
  2189  0E25                     	;# 
  2190  0E28                     	;# 
  2191  0E29                     	;# 
  2192  0E2A                     	;# 
  2193  0E2B                     	;# 
  2194  0E90                     	;# 
  2195  0E91                     	;# 
  2196  0E92                     	;# 
  2197  0E93                     	;# 
  2198  0E94                     	;# 
  2199  0E95                     	;# 
  2200  0E96                     	;# 
  2201  0E97                     	;# 
  2202  0E98                     	;# 
  2203  0E99                     	;# 
  2204  0E9A                     	;# 
  2205  0E9B                     	;# 
  2206  0E9C                     	;# 
  2207  0E9D                     	;# 
  2208  0E9E                     	;# 
  2209  0E9F                     	;# 
  2210  0EA0                     	;# 
  2211  0EA1                     	;# 
  2212  0EA2                     	;# 
  2213  0EA3                     	;# 
  2214  0EA4                     	;# 
  2215  0EA5                     	;# 
  2216  0EA6                     	;# 
  2217  0EA7                     	;# 
  2218  0EA8                     	;# 
  2219  0EA9                     	;# 
  2220  0EAA                     	;# 
  2221  0EAB                     	;# 
  2222  0EAC                     	;# 
  2223  0EAD                     	;# 
  2224  0EAE                     	;# 
  2225  0EAF                     	;# 
  2226  0EB0                     	;# 
  2227  0EB1                     	;# 
  2228  0EB2                     	;# 
  2229  0F0F                     	;# 
  2230  0F10                     	;# 
  2231  0F11                     	;# 
  2232  0F12                     	;# 
  2233  0F13                     	;# 
  2234  0F14                     	;# 
  2235  0F15                     	;# 
  2236  0F16                     	;# 
  2237  0F17                     	;# 
  2238  0F18                     	;# 
  2239  0F19                     	;# 
  2240  0F1A                     	;# 
  2241  0F1B                     	;# 
  2242  0F1C                     	;# 
  2243  0F1D                     	;# 
  2244  0F1E                     	;# 
  2245  0F1F                     	;# 
  2246  0F20                     	;# 
  2247  0F21                     	;# 
  2248  0F22                     	;# 
  2249  0F23                     	;# 
  2250  0F24                     	;# 
  2251  0F25                     	;# 
  2252  0F26                     	;# 
  2253  0F27                     	;# 
  2254  0F28                     	;# 
  2255  0F29                     	;# 
  2256  0F2A                     	;# 
  2257  0F2B                     	;# 
  2258  0F2C                     	;# 
  2259  0F2D                     	;# 
  2260  0F2E                     	;# 
  2261  0F2F                     	;# 
  2262  0F30                     	;# 
  2263  0F31                     	;# 
  2264  0F32                     	;# 
  2265  0F33                     	;# 
  2266  0F34                     	;# 
  2267  0F35                     	;# 
  2268  0F36                     	;# 
  2269  0F37                     	;# 
  2270  0FE4                     	;# 
  2271  0FE5                     	;# 
  2272  0FE6                     	;# 
  2273  0FE7                     	;# 
  2274  0FE8                     	;# 
  2275  0FE9                     	;# 
  2276  0FEA                     	;# 
  2277  0FEB                     	;# 
  2278  0FED                     	;# 
  2279  0FEE                     	;# 
  2280  0FEF                     	;# 
  2281  0000                     	;# 
  2282  0001                     	;# 
  2283  0002                     	;# 
  2284  0003                     	;# 
  2285  0004                     	;# 
  2286  0005                     	;# 
  2287  0006                     	;# 
  2288  0007                     	;# 
  2289  0008                     	;# 
  2290  0009                     	;# 
  2291  000A                     	;# 
  2292  000B                     	;# 
  2293  000C                     	;# 
  2294  000D                     	;# 
  2295  000E                     	;# 
  2296  000F                     	;# 
  2297  0010                     	;# 
  2298  0011                     	;# 
  2299  0012                     	;# 
  2300  0013                     	;# 
  2301  0015                     	;# 
  2302  0016                     	;# 
  2303  0016                     	;# 
  2304  0017                     	;# 
  2305  0018                     	;# 
  2306  0019                     	;# 
  2307  001A                     	;# 
  2308  001B                     	;# 
  2309  001C                     	;# 
  2310  008C                     	;# 
  2311  008D                     	;# 
  2312  008E                     	;# 
  2313  008F                     	;# 
  2314  0090                     	;# 
  2315  0091                     	;# 
  2316  0092                     	;# 
  2317  0093                     	;# 
  2318  0095                     	;# 
  2319  0096                     	;# 
  2320  0097                     	;# 
  2321  0098                     	;# 
  2322  0099                     	;# 
  2323  009A                     	;# 
  2324  009B                     	;# 
  2325  009B                     	;# 
  2326  009C                     	;# 
  2327  009D                     	;# 
  2328  009E                     	;# 
  2329  009F                     	;# 
  2330  010C                     	;# 
  2331  010D                     	;# 
  2332  010E                     	;# 
  2333  010F                     	;# 
  2334  0110                     	;# 
  2335  0111                     	;# 
  2336  0112                     	;# 
  2337  0113                     	;# 
  2338  0114                     	;# 
  2339  0115                     	;# 
  2340  0116                     	;# 
  2341  0117                     	;# 
  2342  0118                     	;# 
  2343  0119                     	;# 
  2344  011A                     	;# 
  2345  011B                     	;# 
  2346  011B                     	;# 
  2347  011C                     	;# 
  2348  018C                     	;# 
  2349  018D                     	;# 
  2350  018E                     	;# 
  2351  018F                     	;# 
  2352  0190                     	;# 
  2353  0191                     	;# 
  2354  0191                     	;# 
  2355  0192                     	;# 
  2356  0193                     	;# 
  2357  0193                     	;# 
  2358  0194                     	;# 
  2359  0195                     	;# 
  2360  0196                     	;# 
  2361  0197                     	;# 
  2362  0199                     	;# 
  2363  0199                     	;# 
  2364  0199                     	;# 
  2365  019A                     	;# 
  2366  019A                     	;# 
  2367  019A                     	;# 
  2368  019B                     	;# 
  2369  019B                     	;# 
  2370  019B                     	;# 
  2371  019B                     	;# 
  2372  019B                     	;# 
  2373  019C                     	;# 
  2374  019C                     	;# 
  2375  019C                     	;# 
  2376  019D                     	;# 
  2377  019D                     	;# 
  2378  019D                     	;# 
  2379  019E                     	;# 
  2380  019E                     	;# 
  2381  019E                     	;# 
  2382  019F                     	;# 
  2383  019F                     	;# 
  2384  019F                     	;# 
  2385  019F                     	;# 
  2386  019F                     	;# 
  2387  020C                     	;# 
  2388  020D                     	;# 
  2389  020E                     	;# 
  2390  020F                     	;# 
  2391  0210                     	;# 
  2392  0211                     	;# 
  2393  0211                     	;# 
  2394  0212                     	;# 
  2395  0212                     	;# 
  2396  0213                     	;# 
  2397  0213                     	;# 
  2398  0214                     	;# 
  2399  0214                     	;# 
  2400  0215                     	;# 
  2401  0215                     	;# 
  2402  0215                     	;# 
  2403  0215                     	;# 
  2404  0216                     	;# 
  2405  0216                     	;# 
  2406  0217                     	;# 
  2407  0217                     	;# 
  2408  028C                     	;# 
  2409  028D                     	;# 
  2410  028E                     	;# 
  2411  028F                     	;# 
  2412  0290                     	;# 
  2413  0291                     	;# 
  2414  0291                     	;# 
  2415  0292                     	;# 
  2416  0293                     	;# 
  2417  0293                     	;# 
  2418  0298                     	;# 
  2419  0298                     	;# 
  2420  0299                     	;# 
  2421  029A                     	;# 
  2422  029A                     	;# 
  2423  029E                     	;# 
  2424  030C                     	;# 
  2425  030D                     	;# 
  2426  030E                     	;# 
  2427  030F                     	;# 
  2428  0310                     	;# 
  2429  038C                     	;# 
  2430  038D                     	;# 
  2431  038E                     	;# 
  2432  038F                     	;# 
  2433  0390                     	;# 
  2434  0391                     	;# 
  2435  0392                     	;# 
  2436  0393                     	;# 
  2437  0394                     	;# 
  2438  0395                     	;# 
  2439  0396                     	;# 
  2440  0397                     	;# 
  2441  0398                     	;# 
  2442  0399                     	;# 
  2443  039D                     	;# 
  2444  039E                     	;# 
  2445  039F                     	;# 
  2446  0415                     	;# 
  2447  0416                     	;# 
  2448  0417                     	;# 
  2449  041C                     	;# 
  2450  041D                     	;# 
  2451  041E                     	;# 
  2452  0498                     	;# 
  2453  0498                     	;# 
  2454  0499                     	;# 
  2455  049A                     	;# 
  2456  049B                     	;# 
  2457  049B                     	;# 
  2458  049C                     	;# 
  2459  049D                     	;# 
  2460  049E                     	;# 
  2461  049F                     	;# 
  2462  0511                     	;# 
  2463  0515                     	;# 
  2464  0617                     	;# 
  2465  0618                     	;# 
  2466  0619                     	;# 
  2467  0619                     	;# 
  2468  061A                     	;# 
  2469  061B                     	;# 
  2470  061C                     	;# 
  2471  061C                     	;# 
  2472  0691                     	;# 
  2473  0692                     	;# 
  2474  0693                     	;# 
  2475  0694                     	;# 
  2476  0695                     	;# 
  2477  0696                     	;# 
  2478  0697                     	;# 
  2479  0698                     	;# 
  2480  0699                     	;# 
  2481  069A                     	;# 
  2482  069B                     	;# 
  2483  069C                     	;# 
  2484  069D                     	;# 
  2485  069E                     	;# 
  2486  069F                     	;# 
  2487  0E0F                     	;# 
  2488  0E10                     	;# 
  2489  0E11                     	;# 
  2490  0E12                     	;# 
  2491  0E13                     	;# 
  2492  0E14                     	;# 
  2493  0E15                     	;# 
  2494  0E17                     	;# 
  2495  0E20                     	;# 
  2496  0E21                     	;# 
  2497  0E22                     	;# 
  2498  0E24                     	;# 
  2499  0E25                     	;# 
  2500  0E28                     	;# 
  2501  0E29                     	;# 
  2502  0E2A                     	;# 
  2503  0E2B                     	;# 
  2504  0E90                     	;# 
  2505  0E91                     	;# 
  2506  0E92                     	;# 
  2507  0E93                     	;# 
  2508  0E94                     	;# 
  2509  0E95                     	;# 
  2510  0E96                     	;# 
  2511  0E97                     	;# 
  2512  0E98                     	;# 
  2513  0E99                     	;# 
  2514  0E9A                     	;# 
  2515  0E9B                     	;# 
  2516  0E9C                     	;# 
  2517  0E9D                     	;# 
  2518  0E9E                     	;# 
  2519  0E9F                     	;# 
  2520  0EA0                     	;# 
  2521  0EA1                     	;# 
  2522  0EA2                     	;# 
  2523  0EA3                     	;# 
  2524  0EA4                     	;# 
  2525  0EA5                     	;# 
  2526  0EA6                     	;# 
  2527  0EA7                     	;# 
  2528  0EA8                     	;# 
  2529  0EA9                     	;# 
  2530  0EAA                     	;# 
  2531  0EAB                     	;# 
  2532  0EAC                     	;# 
  2533  0EAD                     	;# 
  2534  0EAE                     	;# 
  2535  0EAF                     	;# 
  2536  0EB0                     	;# 
  2537  0EB1                     	;# 
  2538  0EB2                     	;# 
  2539  0F0F                     	;# 
  2540  0F10                     	;# 
  2541  0F11                     	;# 
  2542  0F12                     	;# 
  2543  0F13                     	;# 
  2544  0F14                     	;# 
  2545  0F15                     	;# 
  2546  0F16                     	;# 
  2547  0F17                     	;# 
  2548  0F18                     	;# 
  2549  0F19                     	;# 
  2550  0F1A                     	;# 
  2551  0F1B                     	;# 
  2552  0F1C                     	;# 
  2553  0F1D                     	;# 
  2554  0F1E                     	;# 
  2555  0F1F                     	;# 
  2556  0F20                     	;# 
  2557  0F21                     	;# 
  2558  0F22                     	;# 
  2559  0F23                     	;# 
  2560  0F24                     	;# 
  2561  0F25                     	;# 
  2562  0F26                     	;# 
  2563  0F27                     	;# 
  2564  0F28                     	;# 
  2565  0F29                     	;# 
  2566  0F2A                     	;# 
  2567  0F2B                     	;# 
  2568  0F2C                     	;# 
  2569  0F2D                     	;# 
  2570  0F2E                     	;# 
  2571  0F2F                     	;# 
  2572  0F30                     	;# 
  2573  0F31                     	;# 
  2574  0F32                     	;# 
  2575  0F33                     	;# 
  2576  0F34                     	;# 
  2577  0F35                     	;# 
  2578  0F36                     	;# 
  2579  0F37                     	;# 
  2580  0FE4                     	;# 
  2581  0FE5                     	;# 
  2582  0FE6                     	;# 
  2583  0FE7                     	;# 
  2584  0FE8                     	;# 
  2585  0FE9                     	;# 
  2586  0FEA                     	;# 
  2587  0FEB                     	;# 
  2588  0FED                     	;# 
  2589  0FEE                     	;# 
  2590  0FEF                     	;# 
  2591                           
  2592                           	psect	idataBANK1
  2593  07FC                     __pidataBANK1:	
  2594                           
  2595                           ;initializer for _d
  2596  07FC  3401               	retlw	1
  2597                           
  2598                           ;initializer for _m
  2599  07FD  3401               	retlw	1
  2600                           
  2601                           ;initializer for _x
  2602  07FE  3401               	retlw	1
  2603                           
  2604                           	psect	idataBANK3
  2605  16E3                     __pidataBANK3:	
  2606                           
  2607                           ;initializer for _months
  2608  16E3  34A5               	retlw	low (STR_1| (0+32768))
  2609  16E4  3485               	retlw	high (STR_1| (0+32768))
  2610  16E5  34A9               	retlw	low (STR_2| (0+32768))
  2611  16E6  3485               	retlw	high (STR_2| (0+32768))
  2612  16E7  3495               	retlw	low (STR_3| (0+32768))
  2613  16E8  3485               	retlw	high (STR_3| (0+32768))
  2614  16E9  34B5               	retlw	low (STR_4| (0+32768))
  2615  16EA  3485               	retlw	high (STR_4| (0+32768))
  2616  16EB  34B9               	retlw	low (STR_5| (0+32768))
  2617  16EC  3485               	retlw	high (STR_5| (0+32768))
  2618  16ED  34C5               	retlw	low (STR_6| (0+32768))
  2619  16EE  3485               	retlw	high (STR_6| (0+32768))
  2620  16EF  34AD               	retlw	low (STR_7| (0+32768))
  2621  16F0  3485               	retlw	high (STR_7| (0+32768))
  2622  16F1  34A1               	retlw	low (STR_8| (0+32768))
  2623  16F2  3485               	retlw	high (STR_8| (0+32768))
  2624  16F3  349D               	retlw	low (STR_9| (0+32768))
  2625  16F4  3485               	retlw	high (STR_9| (0+32768))
  2626  16F5  34B1               	retlw	low (STR_10| (0+32768))
  2627  16F6  3485               	retlw	high (STR_10| (0+32768))
  2628  16F7  34BD               	retlw	low (STR_11| (0+32768))
  2629  16F8  3485               	retlw	high (STR_11| (0+32768))
  2630  16F9  34C1               	retlw	low (STR_12| (0+32768))
  2631  16FA  3485               	retlw	high (STR_12| (0+32768))
  2632  16FB  3499               	retlw	low (STR_13| (0+32768))
  2633  16FC  3485               	retlw	high (STR_13| (0+32768))
  2634                           
  2635                           	psect	stringtext
  2636  01CF                     __pstringtext:	
  2637  01CF                     _dpowers:	
  2638  01CF  3401               	retlw	1
  2639  01D0  3400               	retlw	0
  2640  01D1  3400               	retlw	0
  2641  01D2  3400               	retlw	0
  2642  01D3  340A               	retlw	10
  2643  01D4  3400               	retlw	0
  2644  01D5  3400               	retlw	0
  2645  01D6  3400               	retlw	0
  2646  01D7  3464               	retlw	100
  2647  01D8  3400               	retlw	0
  2648  01D9  3400               	retlw	0
  2649  01DA  3400               	retlw	0
  2650  01DB  34E8               	retlw	232
  2651  01DC  3403               	retlw	3
  2652  01DD  3400               	retlw	0
  2653  01DE  3400               	retlw	0
  2654  01DF  3410               	retlw	16
  2655  01E0  3427               	retlw	39
  2656  01E1  3400               	retlw	0
  2657  01E2  3400               	retlw	0
  2658  01E3  34A0               	retlw	160
  2659  01E4  3486               	retlw	134
  2660  01E5  3401               	retlw	1
  2661  01E6  3400               	retlw	0
  2662  01E7  3440               	retlw	64
  2663  01E8  3442               	retlw	66
  2664  01E9  340F               	retlw	15
  2665  01EA  3400               	retlw	0
  2666  01EB  3480               	retlw	128
  2667  01EC  3496               	retlw	150
  2668  01ED  3498               	retlw	152
  2669  01EE  3400               	retlw	0
  2670  01EF  3400               	retlw	0
  2671  01F0  34E1               	retlw	225
  2672  01F1  34F5               	retlw	245
  2673  01F2  3405               	retlw	5
  2674  01F3  3400               	retlw	0
  2675  01F4  34CA               	retlw	202
  2676  01F5  349A               	retlw	154
  2677  01F6  343B               	retlw	59
  2678  01F7                     __end_of_dpowers:	
  2679  01F7                     _OledFont:	
  2680  01F7  3400               	retlw	0
  2681  01F8  3400               	retlw	0
  2682  01F9  3400               	retlw	0
  2683  01FA  3400               	retlw	0
  2684  01FB  3400               	retlw	0
  2685  01FC  3400               	retlw	0
  2686  01FD  3400               	retlw	0
  2687  01FE  3400               	retlw	0
  2688  01FF  3400               	retlw	0
  2689  0200  3400               	retlw	0
  2690  0201  345F               	retlw	95
  2691  0202  3400               	retlw	0
  2692  0203  3400               	retlw	0
  2693  0204  3400               	retlw	0
  2694  0205  3400               	retlw	0
  2695  0206  3400               	retlw	0
  2696  0207  3400               	retlw	0
  2697  0208  3400               	retlw	0
  2698  0209  3407               	retlw	7
  2699  020A  3400               	retlw	0
  2700  020B  3407               	retlw	7
  2701  020C  3400               	retlw	0
  2702  020D  3400               	retlw	0
  2703  020E  3400               	retlw	0
  2704  020F  3400               	retlw	0
  2705  0210  3414               	retlw	20
  2706  0211  347F               	retlw	127
  2707  0212  3414               	retlw	20
  2708  0213  347F               	retlw	127
  2709  0214  3414               	retlw	20
  2710  0215  3400               	retlw	0
  2711  0216  3400               	retlw	0
  2712  0217  3400               	retlw	0
  2713  0218  3424               	retlw	36
  2714  0219  342A               	retlw	42
  2715  021A  347F               	retlw	127
  2716  021B  342A               	retlw	42
  2717  021C  3412               	retlw	18
  2718  021D  3400               	retlw	0
  2719  021E  3400               	retlw	0
  2720  021F  3400               	retlw	0
  2721  0220  3423               	retlw	35
  2722  0221  3413               	retlw	19
  2723  0222  3408               	retlw	8
  2724  0223  3464               	retlw	100
  2725  0224  3462               	retlw	98
  2726  0225  3400               	retlw	0
  2727  0226  3400               	retlw	0
  2728  0227  3400               	retlw	0
  2729  0228  3436               	retlw	54
  2730  0229  3449               	retlw	73
  2731  022A  3455               	retlw	85
  2732  022B  3422               	retlw	34
  2733  022C  3450               	retlw	80
  2734  022D  3400               	retlw	0
  2735  022E  3400               	retlw	0
  2736  022F  3400               	retlw	0
  2737  0230  3400               	retlw	0
  2738  0231  3405               	retlw	5
  2739  0232  3403               	retlw	3
  2740  0233  3400               	retlw	0
  2741  0234  3400               	retlw	0
  2742  0235  3400               	retlw	0
  2743  0236  3400               	retlw	0
  2744  0237  3400               	retlw	0
  2745  0238  341C               	retlw	28
  2746  0239  3422               	retlw	34
  2747  023A  3441               	retlw	65
  2748  023B  3400               	retlw	0
  2749  023C  3400               	retlw	0
  2750  023D  3400               	retlw	0
  2751  023E  3400               	retlw	0
  2752  023F  3400               	retlw	0
  2753  0240  3441               	retlw	65
  2754  0241  3422               	retlw	34
  2755  0242  341C               	retlw	28
  2756  0243  3400               	retlw	0
  2757  0244  3400               	retlw	0
  2758  0245  3400               	retlw	0
  2759  0246  3400               	retlw	0
  2760  0247  3400               	retlw	0
  2761  0248  3408               	retlw	8
  2762  0249  342A               	retlw	42
  2763  024A  341C               	retlw	28
  2764  024B  342A               	retlw	42
  2765  024C  3408               	retlw	8
  2766  024D  3400               	retlw	0
  2767  024E  3400               	retlw	0
  2768  024F  3400               	retlw	0
  2769  0250  3408               	retlw	8
  2770  0251  3408               	retlw	8
  2771  0252  343E               	retlw	62
  2772  0253  3408               	retlw	8
  2773  0254  3408               	retlw	8
  2774  0255  3400               	retlw	0
  2775  0256  3400               	retlw	0
  2776  0257  3400               	retlw	0
  2777  0258  34A0               	retlw	160
  2778  0259  3460               	retlw	96
  2779  025A  3400               	retlw	0
  2780  025B  3400               	retlw	0
  2781  025C  3400               	retlw	0
  2782  025D  3400               	retlw	0
  2783  025E  3400               	retlw	0
  2784  025F  3400               	retlw	0
  2785  0260  3408               	retlw	8
  2786  0261  3408               	retlw	8
  2787  0262  3408               	retlw	8
  2788  0263  3408               	retlw	8
  2789  0264  3408               	retlw	8
  2790  0265  3400               	retlw	0
  2791  0266  3400               	retlw	0
  2792  0267  3400               	retlw	0
  2793  0268  3460               	retlw	96
  2794  0269  3460               	retlw	96
  2795  026A  3400               	retlw	0
  2796  026B  3400               	retlw	0
  2797  026C  3400               	retlw	0
  2798  026D  3400               	retlw	0
  2799  026E  3400               	retlw	0
  2800  026F  3400               	retlw	0
  2801  0270  3420               	retlw	32
  2802  0271  3410               	retlw	16
  2803  0272  3408               	retlw	8
  2804  0273  3404               	retlw	4
  2805  0274  3402               	retlw	2
  2806  0275  3400               	retlw	0
  2807  0276  3400               	retlw	0
  2808  0277  3400               	retlw	0
  2809  0278  343E               	retlw	62
  2810  0279  3451               	retlw	81
  2811  027A  3449               	retlw	73
  2812  027B  3445               	retlw	69
  2813  027C  343E               	retlw	62
  2814  027D  3400               	retlw	0
  2815  027E  3400               	retlw	0
  2816  027F  3400               	retlw	0
  2817  0280  3400               	retlw	0
  2818  0281  3442               	retlw	66
  2819  0282  347F               	retlw	127
  2820  0283  3440               	retlw	64
  2821  0284  3400               	retlw	0
  2822  0285  3400               	retlw	0
  2823  0286  3400               	retlw	0
  2824  0287  3400               	retlw	0
  2825  0288  3462               	retlw	98
  2826  0289  3451               	retlw	81
  2827  028A  3449               	retlw	73
  2828  028B  3449               	retlw	73
  2829  028C  3446               	retlw	70
  2830  028D  3400               	retlw	0
  2831  028E  3400               	retlw	0
  2832  028F  3400               	retlw	0
  2833  0290  3422               	retlw	34
  2834  0291  3441               	retlw	65
  2835  0292  3449               	retlw	73
  2836  0293  3449               	retlw	73
  2837  0294  3436               	retlw	54
  2838  0295  3400               	retlw	0
  2839  0296  3400               	retlw	0
  2840  0297  3400               	retlw	0
  2841  0298  3418               	retlw	24
  2842  0299  3414               	retlw	20
  2843  029A  3412               	retlw	18
  2844  029B  347F               	retlw	127
  2845  029C  3410               	retlw	16
  2846  029D  3400               	retlw	0
  2847  029E  3400               	retlw	0
  2848  029F  3400               	retlw	0
  2849  02A0  3427               	retlw	39
  2850  02A1  3445               	retlw	69
  2851  02A2  3445               	retlw	69
  2852  02A3  3445               	retlw	69
  2853  02A4  3439               	retlw	57
  2854  02A5  3400               	retlw	0
  2855  02A6  3400               	retlw	0
  2856  02A7  3400               	retlw	0
  2857  02A8  343C               	retlw	60
  2858  02A9  344A               	retlw	74
  2859  02AA  3449               	retlw	73
  2860  02AB  3449               	retlw	73
  2861  02AC  3430               	retlw	48
  2862  02AD  3400               	retlw	0
  2863  02AE  3400               	retlw	0
  2864  02AF  3400               	retlw	0
  2865  02B0  3401               	retlw	1
  2866  02B1  3471               	retlw	113
  2867  02B2  3409               	retlw	9
  2868  02B3  3405               	retlw	5
  2869  02B4  3403               	retlw	3
  2870  02B5  3400               	retlw	0
  2871  02B6  3400               	retlw	0
  2872  02B7  3400               	retlw	0
  2873  02B8  3436               	retlw	54
  2874  02B9  3449               	retlw	73
  2875  02BA  3449               	retlw	73
  2876  02BB  3449               	retlw	73
  2877  02BC  3436               	retlw	54
  2878  02BD  3400               	retlw	0
  2879  02BE  3400               	retlw	0
  2880  02BF  3400               	retlw	0
  2881  02C0  3406               	retlw	6
  2882  02C1  3449               	retlw	73
  2883  02C2  3449               	retlw	73
  2884  02C3  3429               	retlw	41
  2885  02C4  341E               	retlw	30
  2886  02C5  3400               	retlw	0
  2887  02C6  3400               	retlw	0
  2888  02C7  3400               	retlw	0
  2889  02C8  3400               	retlw	0
  2890  02C9  3436               	retlw	54
  2891  02CA  3436               	retlw	54
  2892  02CB  3400               	retlw	0
  2893  02CC  3400               	retlw	0
  2894  02CD  3400               	retlw	0
  2895  02CE  3400               	retlw	0
  2896  02CF  3400               	retlw	0
  2897  02D0  3400               	retlw	0
  2898  02D1  34AC               	retlw	172
  2899  02D2  346C               	retlw	108
  2900  02D3  3400               	retlw	0
  2901  02D4  3400               	retlw	0
  2902  02D5  3400               	retlw	0
  2903  02D6  3400               	retlw	0
  2904  02D7  3400               	retlw	0
  2905  02D8  3408               	retlw	8
  2906  02D9  3414               	retlw	20
  2907  02DA  3422               	retlw	34
  2908  02DB  3441               	retlw	65
  2909  02DC  3400               	retlw	0
  2910  02DD  3400               	retlw	0
  2911  02DE  3400               	retlw	0
  2912  02DF  3400               	retlw	0
  2913  02E0  3414               	retlw	20
  2914  02E1  3414               	retlw	20
  2915  02E2  3414               	retlw	20
  2916  02E3  3414               	retlw	20
  2917  02E4  3414               	retlw	20
  2918  02E5  3400               	retlw	0
  2919  02E6  3400               	retlw	0
  2920  02E7  3400               	retlw	0
  2921  02E8  3441               	retlw	65
  2922  02E9  3422               	retlw	34
  2923  02EA  3414               	retlw	20
  2924  02EB  3408               	retlw	8
  2925  02EC  3400               	retlw	0
  2926  02ED  3400               	retlw	0
  2927  02EE  3400               	retlw	0
  2928  02EF  3400               	retlw	0
  2929  02F0  3402               	retlw	2
  2930  02F1  3401               	retlw	1
  2931  02F2  3451               	retlw	81
  2932  02F3  3409               	retlw	9
  2933  02F4  3406               	retlw	6
  2934  02F5  3400               	retlw	0
  2935  02F6  3400               	retlw	0
  2936  02F7  3400               	retlw	0
  2937  02F8  3432               	retlw	50
  2938  02F9  3449               	retlw	73
  2939  02FA  3479               	retlw	121
  2940  02FB  3441               	retlw	65
  2941  02FC  343E               	retlw	62
  2942  02FD  3400               	retlw	0
  2943  02FE  3400               	retlw	0
  2944  02FF  3400               	retlw	0
  2945  0300  347E               	retlw	126
  2946  0301  3409               	retlw	9
  2947  0302  3409               	retlw	9
  2948  0303  3409               	retlw	9
  2949  0304  347E               	retlw	126
  2950  0305  3400               	retlw	0
  2951  0306  3400               	retlw	0
  2952  0307  3400               	retlw	0
  2953  0308  347F               	retlw	127
  2954  0309  3449               	retlw	73
  2955  030A  3449               	retlw	73
  2956  030B  3449               	retlw	73
  2957  030C  3436               	retlw	54
  2958  030D  3400               	retlw	0
  2959  030E  3400               	retlw	0
  2960  030F  3400               	retlw	0
  2961  0310  343E               	retlw	62
  2962  0311  3441               	retlw	65
  2963  0312  3441               	retlw	65
  2964  0313  3441               	retlw	65
  2965  0314  3422               	retlw	34
  2966  0315  3400               	retlw	0
  2967  0316  3400               	retlw	0
  2968  0317  3400               	retlw	0
  2969  0318  347F               	retlw	127
  2970  0319  3441               	retlw	65
  2971  031A  3441               	retlw	65
  2972  031B  3422               	retlw	34
  2973  031C  341C               	retlw	28
  2974  031D  3400               	retlw	0
  2975  031E  3400               	retlw	0
  2976  031F  3400               	retlw	0
  2977  0320  347F               	retlw	127
  2978  0321  3449               	retlw	73
  2979  0322  3449               	retlw	73
  2980  0323  3449               	retlw	73
  2981  0324  3441               	retlw	65
  2982  0325  3400               	retlw	0
  2983  0326  3400               	retlw	0
  2984  0327  3400               	retlw	0
  2985  0328  347F               	retlw	127
  2986  0329  3409               	retlw	9
  2987  032A  3409               	retlw	9
  2988  032B  3409               	retlw	9
  2989  032C  3401               	retlw	1
  2990  032D  3400               	retlw	0
  2991  032E  3400               	retlw	0
  2992  032F  3400               	retlw	0
  2993  0330  343E               	retlw	62
  2994  0331  3441               	retlw	65
  2995  0332  3441               	retlw	65
  2996  0333  3451               	retlw	81
  2997  0334  3472               	retlw	114
  2998  0335  3400               	retlw	0
  2999  0336  3400               	retlw	0
  3000  0337  3400               	retlw	0
  3001  0338  347F               	retlw	127
  3002  0339  3408               	retlw	8
  3003  033A  3408               	retlw	8
  3004  033B  3408               	retlw	8
  3005  033C  347F               	retlw	127
  3006  033D  3400               	retlw	0
  3007  033E  3400               	retlw	0
  3008  033F  3400               	retlw	0
  3009  0340  3441               	retlw	65
  3010  0341  347F               	retlw	127
  3011  0342  3441               	retlw	65
  3012  0343  3400               	retlw	0
  3013  0344  3400               	retlw	0
  3014  0345  3400               	retlw	0
  3015  0346  3400               	retlw	0
  3016  0347  3400               	retlw	0
  3017  0348  3420               	retlw	32
  3018  0349  3440               	retlw	64
  3019  034A  3441               	retlw	65
  3020  034B  343F               	retlw	63
  3021  034C  3401               	retlw	1
  3022  034D  3400               	retlw	0
  3023  034E  3400               	retlw	0
  3024  034F  3400               	retlw	0
  3025  0350  347F               	retlw	127
  3026  0351  3408               	retlw	8
  3027  0352  3414               	retlw	20
  3028  0353  3422               	retlw	34
  3029  0354  3441               	retlw	65
  3030  0355  3400               	retlw	0
  3031  0356  3400               	retlw	0
  3032  0357  3400               	retlw	0
  3033  0358  347F               	retlw	127
  3034  0359  3440               	retlw	64
  3035  035A  3440               	retlw	64
  3036  035B  3440               	retlw	64
  3037  035C  3440               	retlw	64
  3038  035D  3400               	retlw	0
  3039  035E  3400               	retlw	0
  3040  035F  3400               	retlw	0
  3041  0360  347F               	retlw	127
  3042  0361  3402               	retlw	2
  3043  0362  340C               	retlw	12
  3044  0363  3402               	retlw	2
  3045  0364  347F               	retlw	127
  3046  0365  3400               	retlw	0
  3047  0366  3400               	retlw	0
  3048  0367  3400               	retlw	0
  3049  0368  347F               	retlw	127
  3050  0369  3404               	retlw	4
  3051  036A  3408               	retlw	8
  3052  036B  3410               	retlw	16
  3053  036C  347F               	retlw	127
  3054  036D  3400               	retlw	0
  3055  036E  3400               	retlw	0
  3056  036F  3400               	retlw	0
  3057  0370  343E               	retlw	62
  3058  0371  3441               	retlw	65
  3059  0372  3441               	retlw	65
  3060  0373  3441               	retlw	65
  3061  0374  343E               	retlw	62
  3062  0375  3400               	retlw	0
  3063  0376  3400               	retlw	0
  3064  0377  3400               	retlw	0
  3065  0378  347F               	retlw	127
  3066  0379  3409               	retlw	9
  3067  037A  3409               	retlw	9
  3068  037B  3409               	retlw	9
  3069  037C  3406               	retlw	6
  3070  037D  3400               	retlw	0
  3071  037E  3400               	retlw	0
  3072  037F  3400               	retlw	0
  3073  0380  343E               	retlw	62
  3074  0381  3441               	retlw	65
  3075  0382  3451               	retlw	81
  3076  0383  3421               	retlw	33
  3077  0384  345E               	retlw	94
  3078  0385  3400               	retlw	0
  3079  0386  3400               	retlw	0
  3080  0387  3400               	retlw	0
  3081  0388  347F               	retlw	127
  3082  0389  3409               	retlw	9
  3083  038A  3419               	retlw	25
  3084  038B  3429               	retlw	41
  3085  038C  3446               	retlw	70
  3086  038D  3400               	retlw	0
  3087  038E  3400               	retlw	0
  3088  038F  3400               	retlw	0
  3089  0390  3426               	retlw	38
  3090  0391  3449               	retlw	73
  3091  0392  3449               	retlw	73
  3092  0393  3449               	retlw	73
  3093  0394  3432               	retlw	50
  3094  0395  3400               	retlw	0
  3095  0396  3400               	retlw	0
  3096  0397  3400               	retlw	0
  3097  0398  3401               	retlw	1
  3098  0399  3401               	retlw	1
  3099  039A  347F               	retlw	127
  3100  039B  3401               	retlw	1
  3101  039C  3401               	retlw	1
  3102  039D  3400               	retlw	0
  3103  039E  3400               	retlw	0
  3104  039F  3400               	retlw	0
  3105  03A0  343F               	retlw	63
  3106  03A1  3440               	retlw	64
  3107  03A2  3440               	retlw	64
  3108  03A3  3440               	retlw	64
  3109  03A4  343F               	retlw	63
  3110  03A5  3400               	retlw	0
  3111  03A6  3400               	retlw	0
  3112  03A7  3400               	retlw	0
  3113  03A8  341F               	retlw	31
  3114  03A9  3420               	retlw	32
  3115  03AA  3440               	retlw	64
  3116  03AB  3420               	retlw	32
  3117  03AC  341F               	retlw	31
  3118  03AD  3400               	retlw	0
  3119  03AE  3400               	retlw	0
  3120  03AF  3400               	retlw	0
  3121  03B0  343F               	retlw	63
  3122  03B1  3440               	retlw	64
  3123  03B2  3438               	retlw	56
  3124  03B3  3440               	retlw	64
  3125  03B4  343F               	retlw	63
  3126  03B5  3400               	retlw	0
  3127  03B6  3400               	retlw	0
  3128  03B7  3400               	retlw	0
  3129  03B8  3463               	retlw	99
  3130  03B9  3414               	retlw	20
  3131  03BA  3408               	retlw	8
  3132  03BB  3414               	retlw	20
  3133  03BC  3463               	retlw	99
  3134  03BD  3400               	retlw	0
  3135  03BE  3400               	retlw	0
  3136  03BF  3400               	retlw	0
  3137  03C0  3403               	retlw	3
  3138  03C1  3404               	retlw	4
  3139  03C2  3478               	retlw	120
  3140  03C3  3404               	retlw	4
  3141  03C4  3403               	retlw	3
  3142  03C5  3400               	retlw	0
  3143  03C6  3400               	retlw	0
  3144  03C7  3400               	retlw	0
  3145  03C8  3461               	retlw	97
  3146  03C9  3451               	retlw	81
  3147  03CA  3449               	retlw	73
  3148  03CB  3445               	retlw	69
  3149  03CC  3443               	retlw	67
  3150  03CD  3400               	retlw	0
  3151  03CE  3400               	retlw	0
  3152  03CF  3400               	retlw	0
  3153  03D0  347F               	retlw	127
  3154  03D1  3441               	retlw	65
  3155  03D2  3441               	retlw	65
  3156  03D3  3400               	retlw	0
  3157  03D4  3400               	retlw	0
  3158  03D5  3400               	retlw	0
  3159  03D6  3400               	retlw	0
  3160  03D7  3400               	retlw	0
  3161  03D8  3402               	retlw	2
  3162  03D9  3404               	retlw	4
  3163  03DA  3408               	retlw	8
  3164  03DB  3410               	retlw	16
  3165  03DC  3420               	retlw	32
  3166  03DD  3400               	retlw	0
  3167  03DE  3400               	retlw	0
  3168  03DF  3400               	retlw	0
  3169  03E0  3441               	retlw	65
  3170  03E1  3441               	retlw	65
  3171  03E2  347F               	retlw	127
  3172  03E3  3400               	retlw	0
  3173  03E4  3400               	retlw	0
  3174  03E5  3400               	retlw	0
  3175  03E6  3400               	retlw	0
  3176  03E7  3400               	retlw	0
  3177  03E8  3404               	retlw	4
  3178  03E9  3402               	retlw	2
  3179  03EA  3401               	retlw	1
  3180  03EB  3402               	retlw	2
  3181  03EC  3404               	retlw	4
  3182  03ED  3400               	retlw	0
  3183  03EE  3400               	retlw	0
  3184  03EF  3400               	retlw	0
  3185  03F0  3480               	retlw	128
  3186  03F1  3480               	retlw	128
  3187  03F2  3480               	retlw	128
  3188  03F3  3480               	retlw	128
  3189  03F4  3480               	retlw	128
  3190  03F5  3400               	retlw	0
  3191  03F6  3400               	retlw	0
  3192  03F7  3400               	retlw	0
  3193  03F8  3401               	retlw	1
  3194  03F9  3402               	retlw	2
  3195  03FA  3404               	retlw	4
  3196  03FB  3400               	retlw	0
  3197  03FC  3400               	retlw	0
  3198  03FD  3400               	retlw	0
  3199  03FE  3400               	retlw	0
  3200  03FF  3400               	retlw	0
  3201  0400  3420               	retlw	32
  3202  0401  3454               	retlw	84
  3203  0402  3454               	retlw	84
  3204  0403  3454               	retlw	84
  3205  0404  3478               	retlw	120
  3206  0405  3400               	retlw	0
  3207  0406  3400               	retlw	0
  3208  0407  3400               	retlw	0
  3209  0408  347F               	retlw	127
  3210  0409  3448               	retlw	72
  3211  040A  3444               	retlw	68
  3212  040B  3444               	retlw	68
  3213  040C  3438               	retlw	56
  3214  040D  3400               	retlw	0
  3215  040E  3400               	retlw	0
  3216  040F  3400               	retlw	0
  3217  0410  3438               	retlw	56
  3218  0411  3444               	retlw	68
  3219  0412  3444               	retlw	68
  3220  0413  3428               	retlw	40
  3221  0414  3400               	retlw	0
  3222  0415  3400               	retlw	0
  3223  0416  3400               	retlw	0
  3224  0417  3400               	retlw	0
  3225  0418  3438               	retlw	56
  3226  0419  3444               	retlw	68
  3227  041A  3444               	retlw	68
  3228  041B  3448               	retlw	72
  3229  041C  347F               	retlw	127
  3230  041D  3400               	retlw	0
  3231  041E  3400               	retlw	0
  3232  041F  3400               	retlw	0
  3233  0420  3438               	retlw	56
  3234  0421  3454               	retlw	84
  3235  0422  3454               	retlw	84
  3236  0423  3454               	retlw	84
  3237  0424  3418               	retlw	24
  3238  0425  3400               	retlw	0
  3239  0426  3400               	retlw	0
  3240  0427  3400               	retlw	0
  3241  0428  3408               	retlw	8
  3242  0429  347E               	retlw	126
  3243  042A  3409               	retlw	9
  3244  042B  3402               	retlw	2
  3245  042C  3400               	retlw	0
  3246  042D  3400               	retlw	0
  3247  042E  3400               	retlw	0
  3248  042F  3400               	retlw	0
  3249  0430  3418               	retlw	24
  3250  0431  34A4               	retlw	164
  3251  0432  34A4               	retlw	164
  3252  0433  34A4               	retlw	164
  3253  0434  347C               	retlw	124
  3254  0435  3400               	retlw	0
  3255  0436  3400               	retlw	0
  3256  0437  3400               	retlw	0
  3257  0438  347F               	retlw	127
  3258  0439  3408               	retlw	8
  3259  043A  3404               	retlw	4
  3260  043B  3404               	retlw	4
  3261  043C  3478               	retlw	120
  3262  043D  3400               	retlw	0
  3263  043E  3400               	retlw	0
  3264  043F  3400               	retlw	0
  3265  0440  3400               	retlw	0
  3266  0441  347D               	retlw	125
  3267  0442  3400               	retlw	0
  3268  0443  3400               	retlw	0
  3269  0444  3400               	retlw	0
  3270  0445  3400               	retlw	0
  3271  0446  3400               	retlw	0
  3272  0447  3400               	retlw	0
  3273  0448  3480               	retlw	128
  3274  0449  3484               	retlw	132
  3275  044A  347D               	retlw	125
  3276  044B  3400               	retlw	0
  3277  044C  3400               	retlw	0
  3278  044D  3400               	retlw	0
  3279  044E  3400               	retlw	0
  3280  044F  3400               	retlw	0
  3281  0450  347F               	retlw	127
  3282  0451  3410               	retlw	16
  3283  0452  3428               	retlw	40
  3284  0453  3444               	retlw	68
  3285  0454  3400               	retlw	0
  3286  0455  3400               	retlw	0
  3287  0456  3400               	retlw	0
  3288  0457  3400               	retlw	0
  3289  0458  3441               	retlw	65
  3290  0459  347F               	retlw	127
  3291  045A  3440               	retlw	64
  3292  045B  3400               	retlw	0
  3293  045C  3400               	retlw	0
  3294  045D  3400               	retlw	0
  3295  045E  3400               	retlw	0
  3296  045F  3400               	retlw	0
  3297  0460  347C               	retlw	124
  3298  0461  3404               	retlw	4
  3299  0462  3418               	retlw	24
  3300  0463  3404               	retlw	4
  3301  0464  3478               	retlw	120
  3302  0465  3400               	retlw	0
  3303  0466  3400               	retlw	0
  3304  0467  3400               	retlw	0
  3305  0468  347C               	retlw	124
  3306  0469  3408               	retlw	8
  3307  046A  3404               	retlw	4
  3308  046B  347C               	retlw	124
  3309  046C  3400               	retlw	0
  3310  046D  3400               	retlw	0
  3311  046E  3400               	retlw	0
  3312  046F  3400               	retlw	0
  3313  0470  3438               	retlw	56
  3314  0471  3444               	retlw	68
  3315  0472  3444               	retlw	68
  3316  0473  3438               	retlw	56
  3317  0474  3400               	retlw	0
  3318  0475  3400               	retlw	0
  3319  0476  3400               	retlw	0
  3320  0477  3400               	retlw	0
  3321  0478  34FC               	retlw	252
  3322  0479  3424               	retlw	36
  3323  047A  3424               	retlw	36
  3324  047B  3418               	retlw	24
  3325  047C  3400               	retlw	0
  3326  047D  3400               	retlw	0
  3327  047E  3400               	retlw	0
  3328  047F  3400               	retlw	0
  3329  0480  3418               	retlw	24
  3330  0481  3424               	retlw	36
  3331  0482  3424               	retlw	36
  3332  0483  34FC               	retlw	252
  3333  0484  3400               	retlw	0
  3334  0485  3400               	retlw	0
  3335  0486  3400               	retlw	0
  3336  0487  3400               	retlw	0
  3337  0488  3400               	retlw	0
  3338  0489  347C               	retlw	124
  3339  048A  3408               	retlw	8
  3340  048B  3404               	retlw	4
  3341  048C  3400               	retlw	0
  3342  048D  3400               	retlw	0
  3343  048E  3400               	retlw	0
  3344  048F  3400               	retlw	0
  3345  0490  3448               	retlw	72
  3346  0491  3454               	retlw	84
  3347  0492  3454               	retlw	84
  3348  0493  3424               	retlw	36
  3349  0494  3400               	retlw	0
  3350  0495  3400               	retlw	0
  3351  0496  3400               	retlw	0
  3352  0497  3400               	retlw	0
  3353  0498  3404               	retlw	4
  3354  0499  347F               	retlw	127
  3355  049A  3444               	retlw	68
  3356  049B  3400               	retlw	0
  3357  049C  3400               	retlw	0
  3358  049D  3400               	retlw	0
  3359  049E  3400               	retlw	0
  3360  049F  3400               	retlw	0
  3361  04A0  343C               	retlw	60
  3362  04A1  3440               	retlw	64
  3363  04A2  3440               	retlw	64
  3364  04A3  347C               	retlw	124
  3365  04A4  3400               	retlw	0
  3366  04A5  3400               	retlw	0
  3367  04A6  3400               	retlw	0
  3368  04A7  3400               	retlw	0
  3369  04A8  341C               	retlw	28
  3370  04A9  3420               	retlw	32
  3371  04AA  3440               	retlw	64
  3372  04AB  3420               	retlw	32
  3373  04AC  341C               	retlw	28
  3374  04AD  3400               	retlw	0
  3375  04AE  3400               	retlw	0
  3376  04AF  3400               	retlw	0
  3377  04B0  343C               	retlw	60
  3378  04B1  3440               	retlw	64
  3379  04B2  3430               	retlw	48
  3380  04B3  3440               	retlw	64
  3381  04B4  343C               	retlw	60
  3382  04B5  3400               	retlw	0
  3383  04B6  3400               	retlw	0
  3384  04B7  3400               	retlw	0
  3385  04B8  3444               	retlw	68
  3386  04B9  3428               	retlw	40
  3387  04BA  3410               	retlw	16
  3388  04BB  3428               	retlw	40
  3389  04BC  3444               	retlw	68
  3390  04BD  3400               	retlw	0
  3391  04BE  3400               	retlw	0
  3392  04BF  3400               	retlw	0
  3393  04C0  341C               	retlw	28
  3394  04C1  34A0               	retlw	160
  3395  04C2  34A0               	retlw	160
  3396  04C3  347C               	retlw	124
  3397  04C4  3400               	retlw	0
  3398  04C5  3400               	retlw	0
  3399  04C6  3400               	retlw	0
  3400  04C7  3400               	retlw	0
  3401  04C8  3444               	retlw	68
  3402  04C9  3464               	retlw	100
  3403  04CA  3454               	retlw	84
  3404  04CB  344C               	retlw	76
  3405  04CC  3444               	retlw	68
  3406  04CD  3400               	retlw	0
  3407  04CE  3400               	retlw	0
  3408  04CF  3400               	retlw	0
  3409  04D0  3408               	retlw	8
  3410  04D1  3436               	retlw	54
  3411  04D2  3441               	retlw	65
  3412  04D3  3400               	retlw	0
  3413  04D4  3400               	retlw	0
  3414  04D5  3400               	retlw	0
  3415  04D6  3400               	retlw	0
  3416  04D7  3400               	retlw	0
  3417  04D8  3400               	retlw	0
  3418  04D9  347F               	retlw	127
  3419  04DA  3400               	retlw	0
  3420  04DB  3400               	retlw	0
  3421  04DC  3400               	retlw	0
  3422  04DD  3400               	retlw	0
  3423  04DE  3400               	retlw	0
  3424  04DF  3400               	retlw	0
  3425  04E0  3441               	retlw	65
  3426  04E1  3436               	retlw	54
  3427  04E2  3408               	retlw	8
  3428  04E3  3400               	retlw	0
  3429  04E4  3400               	retlw	0
  3430  04E5  3400               	retlw	0
  3431  04E6  3400               	retlw	0
  3432  04E7  3400               	retlw	0
  3433  04E8  3402               	retlw	2
  3434  04E9  3401               	retlw	1
  3435  04EA  3401               	retlw	1
  3436  04EB  3402               	retlw	2
  3437  04EC  3401               	retlw	1
  3438  04ED  3400               	retlw	0
  3439  04EE  3400               	retlw	0
  3440  04EF  3400               	retlw	0
  3441  04F0  3402               	retlw	2
  3442  04F1  3405               	retlw	5
  3443  04F2  3405               	retlw	5
  3444  04F3  3402               	retlw	2
  3445  04F4  3400               	retlw	0
  3446  04F5  3400               	retlw	0
  3447  04F6  3400               	retlw	0
  3448  04F7                     __end_of_OledFont:	
  3449  04F7                     _screen_mth:	
  3450  04F7  346D               	retlw	109
  3451  04F8  346F               	retlw	111
  3452  04F9  346E               	retlw	110
  3453  04FA  3474               	retlw	116
  3454  04FB  3468               	retlw	104
  3455  04FC  342E               	retlw	46
  3456  04FD  3474               	retlw	116
  3457  04FE  3478               	retlw	120
  3458  04FF  3474               	retlw	116
  3459  0500  343D               	retlw	61
  3460  0501  3400               	retlw	0
  3461  0502                     __end_of_screen_mth:	
  3462  0502                     _screen_date:	
  3463  0502  3464               	retlw	100
  3464  0503  3461               	retlw	97
  3465  0504  3474               	retlw	116
  3466  0505  3465               	retlw	101
  3467  0506  342E               	retlw	46
  3468  0507  3474               	retlw	116
  3469  0508  3478               	retlw	120
  3470  0509  3474               	retlw	116
  3471  050A  343D               	retlw	61
  3472  050B  3400               	retlw	0
  3473  050C                     __end_of_screen_date:	
  3474  050C                     _screen_time:	
  3475  050C  3474               	retlw	116
  3476  050D  3469               	retlw	105
  3477  050E  346D               	retlw	109
  3478  050F  3465               	retlw	101
  3479  0510  342E               	retlw	46
  3480  0511  3474               	retlw	116
  3481  0512  3478               	retlw	120
  3482  0513  3474               	retlw	116
  3483  0514  343D               	retlw	61
  3484  0515  3400               	retlw	0
  3485  0516                     __end_of_screen_time:	
  3486  0516                     _screen_month:	
  3487  0516  3474               	retlw	116
  3488  0517  3433               	retlw	51
  3489  0518  342E               	retlw	46
  3490  0519  3474               	retlw	116
  3491  051A  3478               	retlw	120
  3492  051B  3474               	retlw	116
  3493  051C  343D               	retlw	61
  3494  051D  3400               	retlw	0
  3495  051E                     __end_of_screen_month:	
  3496  051E                     _screen_date1:	
  3497  051E  3474               	retlw	116
  3498  051F  3432               	retlw	50
  3499  0520  342E               	retlw	46
  3500  0521  3474               	retlw	116
  3501  0522  3478               	retlw	120
  3502  0523  3474               	retlw	116
  3503  0524  343D               	retlw	61
  3504  0525  3400               	retlw	0
  3505  0526                     __end_of_screen_date1:	
  3506  0526                     _screen_mins:	
  3507  0526  3474               	retlw	116
  3508  0527  3431               	retlw	49
  3509  0528  342E               	retlw	46
  3510  0529  3474               	retlw	116
  3511  052A  3478               	retlw	120
  3512  052B  3474               	retlw	116
  3513  052C  343D               	retlw	61
  3514  052D  3400               	retlw	0
  3515  052E                     __end_of_screen_mins:	
  3516  052E                     _screen_hour:	
  3517  052E  3474               	retlw	116
  3518  052F  3430               	retlw	48
  3519  0530  342E               	retlw	46
  3520  0531  3474               	retlw	116
  3521  0532  3478               	retlw	120
  3522  0533  3474               	retlw	116
  3523  0534  343D               	retlw	61
  3524  0535  3400               	retlw	0
  3525  0536                     __end_of_screen_hour:	
  3526  0015                     _TMR0	set	21
  3527  000B                     _INTCONbits	set	11
  3528  0011                     _PIR1bits	set	17
  3529  005F                     _GIE	set	95
  3530  007A                     _RD2	set	122
  3531  0078                     _RD0	set	120
  3532  0079                     _RD1	set	121
  3533  0095                     _OPTION_REGbits	set	149
  3534  008F                     _TRISD	set	143
  3535  008E                     _TRISCbits	set	142
  3536  008D                     _TRISBbits	set	141
  3537  0476                     _TRISC6	set	1142
  3538  0477                     _TRISC7	set	1143
  3539  047A                     _TRISD2	set	1146
  3540  04CF                     _SPLLEN	set	1231
  3541  04CE                     _IRCF3	set	1230
  3542  04CD                     _IRCF2	set	1229
  3543  04CC                     _IRCF1	set	1228
  3544  04CB                     _IRCF0	set	1227
  3545  04C9                     _SCS1	set	1225
  3546  04C8                     _SCS0	set	1224
  3547  018F                     _ANSELD	set	399
  3548  018E                     _ANSELCbits	set	398
  3549  018D                     _ANSELBbits	set	397
  3550  019A                     _TX1REG	set	410
  3551  0199                     _RC1REG	set	409
  3552  019D                     _RC1STAbits	set	413
  3553  019B                     _SPBRG	set	411
  3554  0CF5                     _TXEN	set	3317
  3555  0CEC                     _CREN	set	3308
  3556  0CEF                     _SPEN	set	3311
  3557  0CF4                     _SYNC	set	3316
  3558  0CF2                     _BRGH	set	3314
  3559  0216                     _SSPCON2bits	set	534
  3560  0211                     _SSPBUF	set	529
  3561  0212                     _SSPADD	set	530
  3562  0215                     _SSPCONbits	set	533
  3563  0E24                     _RXPPSbits	set	3620
  3564  0E20                     _SSPCLKPPSbits	set	3616
  3565  0E21                     _SSPDATPPSbits	set	3617
  3566  0E0F                     _PPSLOCKbits	set	3599
  3567  0E0F                     _PPSLOCK	set	3599
  3568  0E9A                     _RB2PPSbits	set	3738
  3569  0EA5                     _RC5PPSbits	set	3749
  3570  0EA4                     _RC4PPSbits	set	3748
  3571  0536                     STR_32:	
  3572  0536  3474               	retlw	116	;'t'
  3573  0537  3430               	retlw	48	;'0'
  3574  0538  342E               	retlw	46	;'.'
  3575  0539  3474               	retlw	116	;'t'
  3576  053A  3478               	retlw	120	;'x'
  3577  053B  3474               	retlw	116	;'t'
  3578  053C  343D               	retlw	61	;'='
  3579  053D  3422               	retlw	34	;'"'
  3580  053E  344F               	retlw	79	;'O'
  3581  053F  3446               	retlw	70	;'F'
  3582  0540  3446               	retlw	70	;'F'
  3583  0541  3422               	retlw	34	;'"'
  3584  0542  3400               	retlw	0
  3585  0543                     STR_30:	
  3586  0543  3474               	retlw	116	;'t'
  3587  0544  3430               	retlw	48	;'0'
  3588  0545  342E               	retlw	46	;'.'
  3589  0546  3474               	retlw	116	;'t'
  3590  0547  3478               	retlw	120	;'x'
  3591  0548  3474               	retlw	116	;'t'
  3592  0549  343D               	retlw	61	;'='
  3593  054A  3422               	retlw	34	;'"'
  3594  054B  344F               	retlw	79	;'O'
  3595  054C  344E               	retlw	78	;'N'
  3596  054D  3422               	retlw	34	;'"'
  3597  054E  3400               	retlw	0
  3598  054F                     STR_45:	
  3599  054F  3425               	retlw	37	;'%'
  3600  0550  346C               	retlw	108	;'l'
  3601  0551  3475               	retlw	117	;'u'
  3602  0552  342E               	retlw	46	;'.'
  3603  0553  3425               	retlw	37	;'%'
  3604  0554  3436               	retlw	54	;'6'
  3605  0555  342E               	retlw	46	;'.'
  3606  0556  3436               	retlw	54	;'6'
  3607  0557  346C               	retlw	108	;'l'
  3608  0558  3475               	retlw	117	;'u'
  3609  0559  3400               	retlw	0
  3610  055A                     STR_33:	
  3611  055A  3464               	retlw	100	;'d'
  3612  055B  3469               	retlw	105	;'i'
  3613  055C  346D               	retlw	109	;'m'
  3614  055D  343D               	retlw	61	;'='
  3615  055E  3431               	retlw	49	;'1'
  3616  055F  3430               	retlw	48	;'0'
  3617  0560  3430               	retlw	48	;'0'
  3618  0561  3400               	retlw	0
  3619  0562                     STR_28:	
  3620  0562  3470               	retlw	112	;'p'
  3621  0563  3461               	retlw	97	;'a'
  3622  0564  3467               	retlw	103	;'g'
  3623  0565  3465               	retlw	101	;'e'
  3624  0566  3420               	retlw	32	;' '
  3625  0567  3430               	retlw	48	;'0'
  3626  0568  3400               	retlw	0
  3627  0569                     STR_31:	
  3628  0569  3464               	retlw	100	;'d'
  3629  056A  3469               	retlw	105	;'i'
  3630  056B  346D               	retlw	109	;'m'
  3631  056C  343D               	retlw	61	;'='
  3632  056D  3433               	retlw	51	;'3'
  3633  056E  3430               	retlw	48	;'0'
  3634  056F  3400               	retlw	0
  3635  0570                     STR_42:	
  3636  0570  3420               	retlw	32	;' '
  3637  0571  3420               	retlw	32	;' '
  3638  0572  3420               	retlw	32	;' '
  3639  0573  3420               	retlw	32	;' '
  3640  0574  3420               	retlw	32	;' '
  3641  0575  3400               	retlw	0
  3642  0576                     STR_17:	
  3643  0576  346D               	retlw	109	;'m'
  3644  0577  346F               	retlw	111	;'o'
  3645  0578  346E               	retlw	110	;'n'
  3646  0579  3474               	retlw	116	;'t'
  3647  057A  3468               	retlw	104	;'h'
  3648  057B  3400               	retlw	0
  3649  057C                     STR_44:	
  3650  057C  3449               	retlw	73	;'I'
  3651  057D  346E               	retlw	110	;'n'
  3652  057E  3469               	retlw	105	;'i'
  3653  057F  3474               	retlw	116	;'t'
  3654  0580  3400               	retlw	0
  3655  0581                     STR_16:	
  3656  0581  3464               	retlw	100	;'d'
  3657  0582  3461               	retlw	97	;'a'
  3658  0583  3474               	retlw	116	;'t'
  3659  0584  3465               	retlw	101	;'e'
  3660  0585  3400               	retlw	0
  3661  0586                     STR_29:	
  3662  0586  3465               	retlw	101	;'e'
  3663  0587  346E               	retlw	110	;'n'
  3664  0588  3465               	retlw	101	;'e'
  3665  0589  3472               	retlw	114	;'r'
  3666  058A  3400               	retlw	0
  3667  058B                     STR_14:	
  3668  058B  3468               	retlw	104	;'h'
  3669  058C  346F               	retlw	111	;'o'
  3670  058D  3475               	retlw	117	;'u'
  3671  058E  3472               	retlw	114	;'r'
  3672  058F  3400               	retlw	0
  3673  0590                     STR_15:	
  3674  0590  346D               	retlw	109	;'m'
  3675  0591  3469               	retlw	105	;'i'
  3676  0592  346E               	retlw	110	;'n'
  3677  0593  3473               	retlw	115	;'s'
  3678  0594  3400               	retlw	0
  3679  0595                     STR_3:	
  3680  0595  3446               	retlw	70	;'F'
  3681  0596  3445               	retlw	69	;'E'
  3682  0597  3442               	retlw	66	;'B'
  3683  0598  3400               	retlw	0
  3684  0599                     STR_13:	
  3685  0599  3444               	retlw	68	;'D'
  3686  059A  3445               	retlw	69	;'E'
  3687  059B  3443               	retlw	67	;'C'
  3688  059C  3400               	retlw	0
  3689  059D                     STR_9:	
  3690  059D  3441               	retlw	65	;'A'
  3691  059E  3455               	retlw	85	;'U'
  3692  059F  3447               	retlw	71	;'G'
  3693  05A0  3400               	retlw	0
  3694  05A1                     STR_8:	
  3695  05A1  344A               	retlw	74	;'J'
  3696  05A2  3455               	retlw	85	;'U'
  3697  05A3  344C               	retlw	76	;'L'
  3698  05A4  3400               	retlw	0
  3699  05A5                     STR_1:	
  3700  05A5  344D               	retlw	77	;'M'
  3701  05A6  344D               	retlw	77	;'M'
  3702  05A7  344D               	retlw	77	;'M'
  3703  05A8  3400               	retlw	0
  3704  05A9                     STR_2:	
  3705  05A9  344A               	retlw	74	;'J'
  3706  05AA  3441               	retlw	65	;'A'
  3707  05AB  344E               	retlw	78	;'N'
  3708  05AC  3400               	retlw	0
  3709  05AD                     STR_7:	
  3710  05AD  344A               	retlw	74	;'J'
  3711  05AE  3455               	retlw	85	;'U'
  3712  05AF  344E               	retlw	78	;'N'
  3713  05B0  3400               	retlw	0
  3714  05B1                     STR_10:	
  3715  05B1  3453               	retlw	83	;'S'
  3716  05B2  3445               	retlw	69	;'E'
  3717  05B3  3450               	retlw	80	;'P'
  3718  05B4  3400               	retlw	0
  3719  05B5                     STR_4:	
  3720  05B5  344D               	retlw	77	;'M'
  3721  05B6  3441               	retlw	65	;'A'
  3722  05B7  3452               	retlw	82	;'R'
  3723  05B8  3400               	retlw	0
  3724  05B9                     STR_5:	
  3725  05B9  3441               	retlw	65	;'A'
  3726  05BA  3450               	retlw	80	;'P'
  3727  05BB  3452               	retlw	82	;'R'
  3728  05BC  3400               	retlw	0
  3729  05BD                     STR_11:	
  3730  05BD  344F               	retlw	79	;'O'
  3731  05BE  3443               	retlw	67	;'C'
  3732  05BF  3454               	retlw	84	;'T'
  3733  05C0  3400               	retlw	0
  3734  05C1                     STR_12:	
  3735  05C1  344E               	retlw	78	;'N'
  3736  05C2  344F               	retlw	79	;'O'
  3737  05C3  3456               	retlw	86	;'V'
  3738  05C4  3400               	retlw	0
  3739  05C5                     STR_6:	
  3740  05C5  344D               	retlw	77	;'M'
  3741  05C6  3441               	retlw	65	;'A'
  3742  05C7  3459               	retlw	89	;'Y'
  3743  05C8  3400               	retlw	0
  3744  05C9                     STR_18:	
  3745  05C9  3473               	retlw	115	;'s'
  3746  05CA  3465               	retlw	101	;'e'
  3747  05CB  3474               	retlw	116	;'t'
  3748  05CC  3400               	retlw	0
  3749  05CD                     STR_39:	
  3750  05CD  343A               	retlw	58	;':'
  3751  05CE  3400               	retlw	0
  3752  0570                     
  3753                           ; #config settings
  3754  0000                     
  3755                           	psect	cinit
  3756  018C                     start_initialization:	
  3757  018C                     __initialization:	
  3758                           
  3759                           ; Initialize objects allocated to BANK1
  3760  018C  30FC               	movlw	low __pidataBANK1
  3761  018D  0084               	movwf	4
  3762  018E  3087               	movlw	(high __pidataBANK1)| (0+128)
  3763  018F  0085               	movwf	5
  3764  0190  30E9               	movlw	low __pdataBANK1
  3765  0191  0086               	movwf	6
  3766  0192  3000               	movlw	high __pdataBANK1
  3767  0193  0087               	movwf	7
  3768  0194  3003               	movlw	3
  3769  0195  3195  25E0  3181   	fcall	init_ram
  3770                           
  3771                           ; Initialize objects allocated to BANK3
  3772  0198  30E3               	movlw	low __pidataBANK3
  3773  0199  0084               	movwf	4
  3774  019A  3096               	movlw	(high __pidataBANK3)| (0+128)
  3775  019B  0085               	movwf	5
  3776  019C  30BB               	movlw	low __pdataBANK3
  3777  019D  0086               	movwf	6
  3778  019E  3001               	movlw	high __pdataBANK3
  3779  019F  0087               	movwf	7
  3780  01A0  301A               	movlw	26
  3781  01A1  3195  25E0  3181   	fcall	init_ram
  3782                           
  3783                           ; Clear objects allocated to BANK0
  3784  01A4  3051               	movlw	low __pbssBANK0
  3785  01A5  0084               	movwf	4
  3786  01A6  3000               	movlw	high __pbssBANK0
  3787  01A7  0085               	movwf	5
  3788  01A8  3010               	movlw	16
  3789  01A9  3195  25DA  3181   	fcall	clear_ram0
  3790                           
  3791                           ; Clear objects allocated to BANK1
  3792  01AC  30A0               	movlw	low __pbssBANK1
  3793  01AD  0084               	movwf	4
  3794  01AE  3000               	movlw	high __pbssBANK1
  3795  01AF  0085               	movwf	5
  3796  01B0  3038               	movlw	56
  3797  01B1  3195  25DA  3181   	fcall	clear_ram0
  3798                           
  3799                           ; Clear objects allocated to BANK2
  3800  01B4  3020               	movlw	low __pbssBANK2
  3801  01B5  0084               	movwf	4
  3802  01B6  3001               	movlw	high __pbssBANK2
  3803  01B7  0085               	movwf	5
  3804  01B8  304E               	movlw	78
  3805  01B9  3195  25DA  3181   	fcall	clear_ram0
  3806                           
  3807                           ; Clear objects allocated to BANK3
  3808  01BC  30A0               	movlw	low __pbssBANK3
  3809  01BD  0084               	movwf	4
  3810  01BE  3001               	movlw	high __pbssBANK3
  3811  01BF  0085               	movwf	5
  3812  01C0  301B               	movlw	27
  3813  01C1  3195  25DA  3181   	fcall	clear_ram0
  3814                           
  3815                           ; Clear objects allocated to BANK4
  3816  01C4  3020               	movlw	low __pbssBANK4
  3817  01C5  0084               	movwf	4
  3818  01C6  3002               	movlw	high __pbssBANK4
  3819  01C7  0085               	movwf	5
  3820  01C8  3032               	movlw	50
  3821  01C9  3195  25DA         	fcall	clear_ram0
  3822  01CB                     end_of_initialization:	
  3823                           ;End of C runtime variable initialization code
  3824                           
  3825  01CB                     __end_of__initialization:	
  3826  01CB  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3827  01CC  0020               	movlb	0
  3828  01CD  3185  2DCF         	ljmp	_main	;jump to C main() function
  3829                           
  3830                           	psect	bssBANK0
  3831  0051                     __pbssBANK0:	
  3832  0051                     _sec2:	
  3833  0051                     	ds	1
  3834  0052                     _min2:	
  3835  0052                     	ds	1
  3836  0053                     _hr3:	
  3837  0053                     	ds	1
  3838  0054                     _hr2:	
  3839  0054                     	ds	1
  3840  0055                     _dy2:	
  3841  0055                     	ds	1
  3842  0056                     _date2:	
  3843  0056                     	ds	1
  3844  0057                     _mn2:	
  3845  0057                     	ds	1
  3846  0058                     _yr2:	
  3847  0058                     	ds	1
  3848  0059                     _sec1:	
  3849  0059                     	ds	1
  3850  005A                     _min1:	
  3851  005A                     	ds	1
  3852  005B                     _hr1:	
  3853  005B                     	ds	1
  3854  005C                     _dy1:	
  3855  005C                     	ds	1
  3856  005D                     _date1:	
  3857  005D                     	ds	1
  3858  005E                     _mn1:	
  3859  005E                     	ds	1
  3860  005F                     _yr1:	
  3861  005F                     	ds	1
  3862  0060                     _on:	
  3863  0060                     	ds	1
  3864                           
  3865                           	psect	bssBANK1
  3866  00A0                     __pbssBANK1:	
  3867  00A0                     isr@count:	
  3868  00A0                     	ds	2
  3869  00A2                     _y:	
  3870  00A2                     	ds	1
  3871  00A3                     _min_string:	
  3872  00A3                     	ds	10
  3873  00AD                     _hour_string:	
  3874  00AD                     	ds	10
  3875  00B7                     _date_string:	
  3876  00B7                     	ds	10
  3877  00C1                     _time_string:	
  3878  00C1                     	ds	10
  3879  00CB                     _min_arr:	
  3880  00CB                     	ds	8
  3881  00D3                     _dt_arr:	
  3882  00D3                     	ds	5
  3883                           
  3884                           	psect	dataBANK1
  3885  00E9                     __pdataBANK1:	
  3886  00E9                     _d:	
  3887  00E9                     	ds	1
  3888  00EA                     _m:	
  3889  00EA                     	ds	1
  3890  00EB                     _x:	
  3891  00EB                     	ds	1
  3892                           
  3893                           	psect	bssBANK2
  3894  0120                     __pbssBANK2:	
  3895  0120                     _mth_string:	
  3896  0120                     	ds	10
  3897  012A                     _month_string:	
  3898  012A                     	ds	10
  3899  0134                     _date1_string:	
  3900  0134                     	ds	10
  3901  013E                     _month_arr:	
  3902  013E                     	ds	10
  3903  0148                     _date_arr:	
  3904  0148                     	ds	10
  3905  0152                     _hour_arr:	
  3906  0152                     	ds	10
  3907  015C                     _minute_arr:	
  3908  015C                     	ds	10
  3909  0166                     _hr_arr:	
  3910  0166                     	ds	8
  3911                           
  3912                           	psect	bssBANK3
  3913  01A0                     __pbssBANK3:	
  3914  01A0                     _mth_arr:	
  3915  01A0                     	ds	10
  3916  01AA                     ftoa@buf:	
  3917  01AA                     	ds	17
  3918                           
  3919                           	psect	dataBANK3
  3920  01BB                     __pdataBANK3:	
  3921  01BB                     _months:	
  3922  01BB                     	ds	26
  3923                           
  3924                           	psect	bssBANK4
  3925  0220                     __pbssBANK4:	
  3926  0220                     _buf:	
  3927  0220                     	ds	50
  3928                           
  3929                           	psect	inittext
  3930  15E0                     init_ram:	
  3931  15E0  00FE               	movwf	126
  3932  15E1                     initloop:	
  3933  15E1  0012               	moviw fsr0++
  3934  15E2  001E               	movwi fsr1++
  3935  15E3  0BFE               	decfsz	126,f
  3936  15E4  2DE1               	goto	initloop
  3937  15E5  3400               	retlw	0
  3938                           
  3939                           	psect	clrtext
  3940  15DA                     clear_ram0:	
  3941                           ;	Called with FSR0 containing the base address, and
  3942                           ;	WREG with the size to clear
  3943                           
  3944  15DA  0064               	clrwdt	;clear the watchdog before getting into this loop
  3945  15DB                     clrloop0:	
  3946  15DB  0180               	clrf	0	;clear RAM location pointed to by FSR
  3947  15DC  3101               	addfsr 0,1
  3948  15DD  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3949  15DE  2DDB               	goto	clrloop0	;have we reached the end yet?
  3950  15DF  3400               	retlw	0	;all done for this memory range, return
  3951                           
  3952                           	psect	cstackBANK3
  3953  01D5                     __pcstackBANK3:	
  3954  01D5                     ??_main:	
  3955                           
  3956                           ; 1 bytes @ 0x0
  3957  01D5                     	ds	6
  3958  01DB                     main@hour1:	
  3959                           
  3960                           ; 1 bytes @ 0x6
  3961  01DB                     	ds	1
  3962  01DC                     main@min1:	
  3963                           
  3964                           ; 1 bytes @ 0x7
  3965  01DC                     	ds	1
  3966  01DD                     main@date3:	
  3967                           
  3968                           ; 1 bytes @ 0x8
  3969  01DD                     	ds	1
  3970  01DE                     main@month1:	
  3971                           
  3972                           ; 1 bytes @ 0x9
  3973  01DE                     	ds	1
  3974  01DF                     main@set1:	
  3975                           
  3976                           ; 1 bytes @ 0xA
  3977  01DF                     	ds	1
  3978  01E0                     main@sec:	
  3979                           
  3980                           ; 1 bytes @ 0xB
  3981  01E0                     	ds	1
  3982  01E1                     main@min:	
  3983                           
  3984                           ; 1 bytes @ 0xC
  3985  01E1                     	ds	1
  3986  01E2                     main@hr:	
  3987                           
  3988                           ; 1 bytes @ 0xD
  3989  01E2                     	ds	1
  3990  01E3                     main@day:	
  3991                           
  3992                           ; 1 bytes @ 0xE
  3993  01E3                     	ds	1
  3994  01E4                     main@date:	
  3995                           
  3996                           ; 1 bytes @ 0xF
  3997  01E4                     	ds	1
  3998  01E5                     main@month:	
  3999                           
  4000                           ; 1 bytes @ 0x10
  4001  01E5                     	ds	1
  4002  01E6                     main@year:	
  4003                           
  4004                           ; 1 bytes @ 0x11
  4005  01E6                     	ds	1
  4006                           
  4007                           	psect	cstackBANK1
  4008  00D8                     __pcstackBANK1:	
  4009  00D8                     ??_OLED_Write_String:	
  4010  00D8                     OLED_Clear@row:	
  4011                           ; 1 bytes @ 0x0
  4012                           
  4013                           
  4014                           ; 2 bytes @ 0x0
  4015  00D8                     	ds	2
  4016  00DA                     OLED_Clear@col:	
  4017                           
  4018                           ; 2 bytes @ 0x2
  4019  00DA                     	ds	2
  4020  00DC                     ??_initMain:	
  4021                           
  4022                           ; 1 bytes @ 0x4
  4023  00DC                     	ds	6
  4024  00E2                     initMain@sec:	
  4025                           
  4026                           ; 1 bytes @ 0xA
  4027  00E2                     	ds	1
  4028  00E3                     initMain@min:	
  4029                           
  4030                           ; 1 bytes @ 0xB
  4031  00E3                     	ds	1
  4032  00E4                     initMain@hr:	
  4033                           
  4034                           ; 1 bytes @ 0xC
  4035  00E4                     	ds	1
  4036  00E5                     initMain@day:	
  4037                           
  4038                           ; 1 bytes @ 0xD
  4039  00E5                     	ds	1
  4040  00E6                     initMain@date:	
  4041                           
  4042                           ; 1 bytes @ 0xE
  4043  00E6                     	ds	1
  4044  00E7                     initMain@month:	
  4045                           
  4046                           ; 1 bytes @ 0xF
  4047  00E7                     	ds	1
  4048  00E8                     initMain@year:	
  4049                           
  4050                           ; 1 bytes @ 0x10
  4051  00E8                     	ds	1
  4052                           
  4053                           	psect	cstackCOMMON
  4054  0070                     __pcstackCOMMON:	
  4055  0070                     ?_initMain:	
  4056  0070                     ?_green:	
  4057                           ; 1 bytes @ 0x0
  4058                           
  4059  0070                     ?_DS1302_Reset:	
  4060                           ; 1 bytes @ 0x0
  4061                           
  4062  0070                     ?_DS1302_WriteByte:	
  4063                           ; 1 bytes @ 0x0
  4064                           
  4065  0070                     ?_DS1302_ReadByte:	
  4066                           ; 1 bytes @ 0x0
  4067                           
  4068  0070                     ??_DS1302_ReadByte:	
  4069                           ; 1 bytes @ 0x0
  4070                           
  4071  0070                     ?_get_dec:	
  4072                           ; 1 bytes @ 0x0
  4073                           
  4074  0070                     ?_get_bcd:	
  4075                           ; 1 bytes @ 0x0
  4076                           
  4077  0070                     ?_internal_16:	
  4078                           ; 1 bytes @ 0x0
  4079                           
  4080  0070                     ?_I2C_Init:	
  4081                           ; 1 bytes @ 0x0
  4082                           
  4083  0070                     ?_Send_I2C_StartBit:	
  4084                           ; 1 bytes @ 0x0
  4085                           
  4086  0070                     ?_Send_I2C_StopBit:	
  4087                           ; 1 bytes @ 0x0
  4088                           
  4089  0070                     ?_main:	
  4090                           ; 1 bytes @ 0x0
  4091                           
  4092  0070                     ?_isr:	
  4093                           ; 1 bytes @ 0x0
  4094                           
  4095  0070                     ?_OLED_Command:	
  4096                           ; 1 bytes @ 0x0
  4097                           
  4098  0070                     ?_OLED_Init:	
  4099                           ; 1 bytes @ 0x0
  4100                           
  4101  0070                     ?_OLED_PutChar:	
  4102                           ; 1 bytes @ 0x0
  4103                           
  4104  0070                     ?_OLED_Clear:	
  4105                           ; 1 bytes @ 0x0
  4106                           
  4107  0070                     ?_EUSART_Read:	
  4108                           ; 1 bytes @ 0x0
  4109                           
  4110  0070                     ?_EUSART_Write:	
  4111                           ; 1 bytes @ 0x0
  4112                           
  4113  0070                     ?i1_DS1302_Reset:	
  4114                           ; 1 bytes @ 0x0
  4115                           
  4116  0070                     ??i1_DS1302_Reset:	
  4117                           ; 1 bytes @ 0x0
  4118                           
  4119  0070                     ?i1_DS1302_WriteByte:	
  4120                           ; 1 bytes @ 0x0
  4121                           
  4122  0070                     ??i1_DS1302_WriteByte:	
  4123                           ; 1 bytes @ 0x0
  4124                           
  4125  0070                     ?i1_EUSART_Write:	
  4126                           ; 1 bytes @ 0x0
  4127                           
  4128  0070                     ??i1_EUSART_Write:	
  4129                           ; 1 bytes @ 0x0
  4130                           
  4131  0070                     ?i1___bmul:	
  4132                           ; 1 bytes @ 0x0
  4133                           
  4134  0070                     ?i1_strcat:	
  4135                           ; 1 bytes @ 0x0
  4136                           
  4137  0070                     ?i1_strcpy:	
  4138                           ; 1 bytes @ 0x0
  4139                           
  4140  0070                     ?i1___lwdiv:	
  4141                           ; 1 bytes @ 0x0
  4142                           
  4143  0070                     ?i1___lwmod:	
  4144                           ; 2 bytes @ 0x0
  4145                           
  4146  0070                     i1EUSART_Write@txData:	
  4147                           ; 2 bytes @ 0x0
  4148                           
  4149  0070                     i1___bmul@multiplicand:	
  4150                           ; 1 bytes @ 0x0
  4151                           
  4152  0070                     i1___lwdiv@divisor:	
  4153                           ; 1 bytes @ 0x0
  4154                           
  4155  0070                     i1___lwmod@divisor:	
  4156                           ; 2 bytes @ 0x0
  4157                           
  4158  0070                     i1strcat@to:	
  4159                           ; 2 bytes @ 0x0
  4160                           
  4161  0070                     i1strcpy@to:	
  4162                           ; 2 bytes @ 0x0
  4163                           
  4164                           
  4165                           ; 2 bytes @ 0x0
  4166  0070                     	ds	1
  4167  0071                     ?i1_EUSART_Write_Text:	
  4168  0071                     ??i1___bmul:	
  4169                           ; 1 bytes @ 0x1
  4170                           
  4171  0071                     DS1302_ReadByte@TmpByte:	
  4172                           ; 1 bytes @ 0x1
  4173                           
  4174  0071                     i1DS1302_WriteByte@W_Byte:	
  4175                           ; 1 bytes @ 0x1
  4176                           
  4177  0071                     i1EUSART_Write_Text@text:	
  4178                           ; 1 bytes @ 0x1
  4179                           
  4180                           
  4181                           ; 2 bytes @ 0x1
  4182  0071                     	ds	1
  4183  0072                     DS1302_ReadByte@R_Byte:	
  4184  0072                     i1DS1302_WriteByte@i:	
  4185                           ; 1 bytes @ 0x2
  4186                           
  4187  0072                     i1___bmul@product:	
  4188                           ; 1 bytes @ 0x2
  4189                           
  4190  0072                     i1___lwdiv@dividend:	
  4191                           ; 1 bytes @ 0x2
  4192                           
  4193  0072                     i1___lwmod@dividend:	
  4194                           ; 2 bytes @ 0x2
  4195                           
  4196  0072                     i1strcat@from:	
  4197                           ; 2 bytes @ 0x2
  4198                           
  4199  0072                     i1strcpy@from:	
  4200                           ; 2 bytes @ 0x2
  4201                           
  4202                           
  4203                           ; 2 bytes @ 0x2
  4204  0072                     	ds	1
  4205  0073                     ??i1_EUSART_Write_Text:	
  4206  0073                     DS1302_ReadByte@i:	
  4207                           ; 1 bytes @ 0x3
  4208                           
  4209  0073                     i1___bmul@multiplier:	
  4210                           ; 1 bytes @ 0x3
  4211                           
  4212                           
  4213                           ; 1 bytes @ 0x3
  4214  0073                     	ds	1
  4215  0074                     ??_get_dec:	
  4216  0074                     ??i1___lwdiv:	
  4217                           ; 1 bytes @ 0x4
  4218                           
  4219  0074                     ??i1___lwmod:	
  4220                           ; 1 bytes @ 0x4
  4221                           
  4222  0074                     ??i1_strcat:	
  4223                           ; 1 bytes @ 0x4
  4224                           
  4225  0074                     ??i1_strcpy:	
  4226                           ; 1 bytes @ 0x4
  4227                           
  4228  0074                     i1EUSART_Write_Text@i:	
  4229                           ; 1 bytes @ 0x4
  4230                           
  4231  0074                     i1strcat@cp:	
  4232                           ; 2 bytes @ 0x4
  4233                           
  4234  0074                     i1strcpy@cp:	
  4235                           ; 2 bytes @ 0x4
  4236                           
  4237                           
  4238                           ; 2 bytes @ 0x4
  4239  0074                     	ds	1
  4240  0075                     i1___lwmod@counter:	
  4241  0075                     i1___lwdiv@quotient:	
  4242                           ; 1 bytes @ 0x5
  4243                           
  4244                           
  4245                           ; 2 bytes @ 0x5
  4246  0075                     	ds	1
  4247  0076                     ?i1_touchscreen_data:	
  4248  0076                     i1touchscreen_data@cmd:	
  4249                           ; 1 bytes @ 0x6
  4250                           
  4251                           
  4252                           ; 2 bytes @ 0x6
  4253  0076                     	ds	1
  4254  0077                     get_dec@var2:	
  4255  0077                     i1___lwdiv@counter:	
  4256                           ; 1 bytes @ 0x7
  4257                           
  4258                           
  4259                           ; 1 bytes @ 0x7
  4260  0077                     	ds	1
  4261  0078                     ?i1_utoa:	
  4262  0078                     get_dec@var:	
  4263                           ; 1 bytes @ 0x8
  4264                           
  4265  0078                     i1touchscreen_data@string2:	
  4266                           ; 1 bytes @ 0x8
  4267                           
  4268  0078                     i1utoa@buf:	
  4269                           ; 2 bytes @ 0x8
  4270                           
  4271                           
  4272                           ; 2 bytes @ 0x8
  4273  0078                     	ds	2
  4274  007A                     ??i1_touchscreen_data:	
  4275  007A                     i1utoa@val:	
  4276                           ; 1 bytes @ 0xA
  4277                           
  4278                           
  4279                           ; 2 bytes @ 0xA
  4280  007A                     	ds	2
  4281  007C                     i1utoa@base:	
  4282                           
  4283                           ; 2 bytes @ 0xC
  4284  007C                     	ds	2
  4285  007E                     ??i1_itoa:	
  4286                           
  4287                           	psect	cstackBANK0
  4288  0020                     __pcstackBANK0:	
  4289                           ; 1 bytes @ 0xE
  4290                           
  4291  0020                     ??i1_utoa:	
  4292                           
  4293                           ; 1 bytes @ 0x0
  4294  0020                     	ds	1
  4295  0021                     i1utoa@v:	
  4296                           
  4297                           ; 2 bytes @ 0x1
  4298  0021                     	ds	2
  4299  0023                     i1utoa@c:	
  4300                           
  4301                           ; 1 bytes @ 0x3
  4302  0023                     	ds	1
  4303  0024                     ?i1_itoa:	
  4304  0024                     i1itoa@buf:	
  4305                           ; 1 bytes @ 0x4
  4306                           
  4307                           
  4308                           ; 2 bytes @ 0x4
  4309  0024                     	ds	2
  4310  0026                     i1itoa@val:	
  4311                           
  4312                           ; 2 bytes @ 0x6
  4313  0026                     	ds	2
  4314  0028                     i1itoa@base:	
  4315                           
  4316                           ; 2 bytes @ 0x8
  4317  0028                     	ds	2
  4318  002A                     i1itoa@cp:	
  4319                           
  4320                           ; 2 bytes @ 0xA
  4321  002A                     	ds	2
  4322  002C                     ??_isr:	
  4323                           
  4324                           ; 1 bytes @ 0xC
  4325  002C                     	ds	3
  4326  002F                     ?_EUSART_Read_Text:	
  4327  002F                     ??_DS1302_Reset:	
  4328                           ; 1 bytes @ 0xF
  4329                           
  4330  002F                     ??_DS1302_WriteByte:	
  4331                           ; 1 bytes @ 0xF
  4332                           
  4333  002F                     ?_memmove:	
  4334                           ; 1 bytes @ 0xF
  4335                           
  4336  002F                     ?_strchr:	
  4337                           ; 1 bytes @ 0xF
  4338                           
  4339  002F                     ??_internal_16:	
  4340                           ; 1 bytes @ 0xF
  4341                           
  4342  002F                     ??_I2C_Init:	
  4343                           ; 1 bytes @ 0xF
  4344                           
  4345  002F                     ?_Send_I2C_Data:	
  4346                           ; 1 bytes @ 0xF
  4347                           
  4348  002F                     ??_Send_I2C_StartBit:	
  4349                           ; 1 bytes @ 0xF
  4350                           
  4351  002F                     ??_Send_I2C_StopBit:	
  4352                           ; 1 bytes @ 0xF
  4353                           
  4354  002F                     ??_EUSART_Read:	
  4355                           ; 1 bytes @ 0xF
  4356                           
  4357  002F                     ??_EUSART_Write:	
  4358                           ; 1 bytes @ 0xF
  4359                           
  4360  002F                     ?___bmul:	
  4361                           ; 1 bytes @ 0xF
  4362                           
  4363  002F                     ?_strcpy:	
  4364                           ; 1 bytes @ 0xF
  4365                           
  4366  002F                     ?_strcat:	
  4367                           ; 2 bytes @ 0xF
  4368                           
  4369  002F                     ?_strlen:	
  4370                           ; 2 bytes @ 0xF
  4371                           
  4372  002F                     ?___awdiv:	
  4373                           ; 2 bytes @ 0xF
  4374                           
  4375  002F                     ?___lwdiv:	
  4376                           ; 2 bytes @ 0xF
  4377                           
  4378  002F                     ?___lwmod:	
  4379                           ; 2 bytes @ 0xF
  4380                           
  4381  002F                     ?___aldiv:	
  4382                           ; 2 bytes @ 0xF
  4383                           
  4384  002F                     EUSART_Write@txData:	
  4385                           ; 4 bytes @ 0xF
  4386                           
  4387  002F                     ___bmul@multiplicand:	
  4388                           ; 1 bytes @ 0xF
  4389                           
  4390  002F                     Send_I2C_Data@databyte:	
  4391                           ; 1 bytes @ 0xF
  4392                           
  4393  002F                     EUSART_Read_Text@length:	
  4394                           ; 2 bytes @ 0xF
  4395                           
  4396  002F                     ___awdiv@divisor:	
  4397                           ; 2 bytes @ 0xF
  4398                           
  4399  002F                     ___lwdiv@divisor:	
  4400                           ; 2 bytes @ 0xF
  4401                           
  4402  002F                     ___lwmod@divisor:	
  4403                           ; 2 bytes @ 0xF
  4404                           
  4405  002F                     memmove@s1:	
  4406                           ; 2 bytes @ 0xF
  4407                           
  4408  002F                     strcat@to:	
  4409                           ; 2 bytes @ 0xF
  4410                           
  4411  002F                     strcpy@to:	
  4412                           ; 2 bytes @ 0xF
  4413                           
  4414  002F                     strchr@chr:	
  4415                           ; 2 bytes @ 0xF
  4416                           
  4417  002F                     strlen@s:	
  4418                           ; 2 bytes @ 0xF
  4419                           
  4420  002F                     ___aldiv@divisor:	
  4421                           ; 2 bytes @ 0xF
  4422                           
  4423                           
  4424                           ; 4 bytes @ 0xF
  4425  002F                     	ds	1
  4426  0030                     ?_EUSART_Write_Text:	
  4427  0030                     ??___bmul:	
  4428                           ; 1 bytes @ 0x10
  4429                           
  4430  0030                     DS1302_WriteByte@W_Byte:	
  4431                           ; 1 bytes @ 0x10
  4432                           
  4433  0030                     EUSART_Write_Text@text:	
  4434                           ; 1 bytes @ 0x10
  4435                           
  4436                           
  4437                           ; 2 bytes @ 0x10
  4438  0030                     	ds	1
  4439  0031                     ??_EUSART_Read_Text:	
  4440  0031                     ??_strlen:	
  4441                           ; 1 bytes @ 0x11
  4442                           
  4443  0031                     ??_strchr:	
  4444                           ; 1 bytes @ 0x11
  4445                           
  4446  0031                     ??_Send_I2C_Data:	
  4447                           ; 1 bytes @ 0x11
  4448                           
  4449  0031                     ??_OLED_Command:	
  4450                           ; 1 bytes @ 0x11
  4451                           
  4452  0031                     DS1302_WriteByte@i:	
  4453                           ; 1 bytes @ 0x11
  4454                           
  4455  0031                     ___bmul@product:	
  4456                           ; 1 bytes @ 0x11
  4457                           
  4458  0031                     strchr@ptr:	
  4459                           ; 1 bytes @ 0x11
  4460                           
  4461  0031                     ___awdiv@dividend:	
  4462                           ; 1 bytes @ 0x11
  4463                           
  4464  0031                     ___lwdiv@dividend:	
  4465                           ; 2 bytes @ 0x11
  4466                           
  4467  0031                     ___lwmod@dividend:	
  4468                           ; 2 bytes @ 0x11
  4469                           
  4470  0031                     memmove@n:	
  4471                           ; 2 bytes @ 0x11
  4472                           
  4473  0031                     strcat@from:	
  4474                           ; 2 bytes @ 0x11
  4475                           
  4476  0031                     strcpy@from:	
  4477                           ; 2 bytes @ 0x11
  4478                           
  4479                           
  4480                           ; 2 bytes @ 0x11
  4481  0031                     	ds	1
  4482  0032                     ??_EUSART_Write_Text:	
  4483  0032                     ___bmul@multiplier:	
  4484                           ; 1 bytes @ 0x12
  4485                           
  4486                           
  4487                           ; 1 bytes @ 0x12
  4488  0032                     	ds	1
  4489  0033                     ??_strcpy:	
  4490  0033                     ??_strcat:	
  4491                           ; 1 bytes @ 0x13
  4492                           
  4493  0033                     ??_memmove:	
  4494                           ; 1 bytes @ 0x13
  4495                           
  4496  0033                     ??___awdiv:	
  4497                           ; 1 bytes @ 0x13
  4498                           
  4499  0033                     ??___lwdiv:	
  4500                           ; 1 bytes @ 0x13
  4501                           
  4502  0033                     ??___lwmod:	
  4503                           ; 1 bytes @ 0x13
  4504                           
  4505  0033                     OLED_Command@temp:	
  4506                           ; 1 bytes @ 0x13
  4507                           
  4508  0033                     EUSART_Read_Text@Output:	
  4509                           ; 1 bytes @ 0x13
  4510                           
  4511  0033                     EUSART_Write_Text@i:	
  4512                           ; 1 bytes @ 0x13
  4513                           
  4514  0033                     strcat@cp:	
  4515                           ; 2 bytes @ 0x13
  4516                           
  4517  0033                     strcpy@cp:	
  4518                           ; 2 bytes @ 0x13
  4519                           
  4520  0033                     strlen@cp:	
  4521                           ; 2 bytes @ 0x13
  4522                           
  4523  0033                     ___aldiv@dividend:	
  4524                           ; 2 bytes @ 0x13
  4525                           
  4526                           
  4527                           ; 4 bytes @ 0x13
  4528  0033                     	ds	1
  4529  0034                     ??_OLED_Init:	
  4530  0034                     ?_OLED_YX:	
  4531                           ; 1 bytes @ 0x14
  4532                           
  4533  0034                     OLED_YX@Column:	
  4534                           ; 1 bytes @ 0x14
  4535                           
  4536  0034                     ___awdiv@counter:	
  4537                           ; 1 bytes @ 0x14
  4538                           
  4539  0034                     ___lwdiv@counter:	
  4540                           ; 1 bytes @ 0x14
  4541                           
  4542  0034                     ___lwmod@counter:	
  4543                           ; 1 bytes @ 0x14
  4544                           
  4545  0034                     EUSART_Read_Text@i_522:	
  4546                           ; 1 bytes @ 0x14
  4547                           
  4548                           
  4549                           ; 2 bytes @ 0x14
  4550  0034                     	ds	1
  4551  0035                     ?_touchscreen_data:	
  4552  0035                     ?_touchscreen_command:	
  4553                           ; 1 bytes @ 0x15
  4554                           
  4555  0035                     ??_OLED_YX:	
  4556                           ; 1 bytes @ 0x15
  4557                           
  4558  0035                     ?_strncmp:	
  4559                           ; 1 bytes @ 0x15
  4560                           
  4561  0035                     ___awdiv@sign:	
  4562                           ; 2 bytes @ 0x15
  4563                           
  4564  0035                     touchscreen_command@string:	
  4565                           ; 1 bytes @ 0x15
  4566                           
  4567  0035                     touchscreen_data@cmd:	
  4568                           ; 2 bytes @ 0x15
  4569                           
  4570  0035                     ___lwdiv@quotient:	
  4571                           ; 2 bytes @ 0x15
  4572                           
  4573  0035                     strncmp@s2:	
  4574                           ; 2 bytes @ 0x15
  4575                           
  4576                           
  4577                           ; 2 bytes @ 0x15
  4578  0035                     	ds	1
  4579  0036                     ___awdiv@quotient:	
  4580                           
  4581                           ; 2 bytes @ 0x16
  4582  0036                     	ds	1
  4583  0037                     ??_touchscreen_command:	
  4584  0037                     ??___aldiv:	
  4585                           ; 1 bytes @ 0x17
  4586                           
  4587  0037                     ?_utoa:	
  4588                           ; 1 bytes @ 0x17
  4589                           
  4590  0037                     memmove@d1:	
  4591                           ; 2 bytes @ 0x17
  4592                           
  4593  0037                     touchscreen_data@string2:	
  4594                           ; 1 bytes @ 0x17
  4595                           
  4596  0037                     utoa@buf:	
  4597                           ; 2 bytes @ 0x17
  4598                           
  4599  0037                     strncmp@len:	
  4600                           ; 2 bytes @ 0x17
  4601                           
  4602                           
  4603                           ; 2 bytes @ 0x17
  4604  0037                     	ds	1
  4605  0038                     ??_get_bcd:	
  4606  0038                     OLED_YX@Row:	
  4607                           ; 1 bytes @ 0x18
  4608                           
  4609  0038                     ___aldiv@counter:	
  4610                           ; 1 bytes @ 0x18
  4611                           
  4612  0038                     memmove@s:	
  4613                           ; 1 bytes @ 0x18
  4614                           
  4615                           
  4616                           ; 2 bytes @ 0x18
  4617  0038                     	ds	1
  4618  0039                     ??_touchscreen_data:	
  4619  0039                     ??_strncmp:	
  4620                           ; 1 bytes @ 0x19
  4621                           
  4622  0039                     ___aldiv@sign:	
  4623                           ; 1 bytes @ 0x19
  4624                           
  4625  0039                     utoa@val:	
  4626                           ; 1 bytes @ 0x19
  4627                           
  4628                           
  4629                           ; 2 bytes @ 0x19
  4630  0039                     	ds	1
  4631  003A                     memmove@d:	
  4632  003A                     ___aldiv@quotient:	
  4633                           ; 1 bytes @ 0x1A
  4634                           
  4635                           
  4636                           ; 4 bytes @ 0x1A
  4637  003A                     	ds	1
  4638  003B                     ??_OLED_PutChar:	
  4639  003B                     get_bcd@nibl:	
  4640                           ; 1 bytes @ 0x1B
  4641                           
  4642  003B                     strncmp@s1:	
  4643                           ; 1 bytes @ 0x1B
  4644                           
  4645  003B                     utoa@base:	
  4646                           ; 1 bytes @ 0x1B
  4647                           
  4648                           
  4649                           ; 2 bytes @ 0x1B
  4650  003B                     	ds	1
  4651  003C                     ?_strstr:	
  4652  003C                     get_bcd@data:	
  4653                           ; 1 bytes @ 0x1C
  4654                           
  4655  003C                     strstr@s2:	
  4656                           ; 1 bytes @ 0x1C
  4657                           
  4658                           
  4659                           ; 2 bytes @ 0x1C
  4660  003C                     	ds	1
  4661  003D                     ??_utoa:	
  4662  003D                     get_bcd@nibh:	
  4663                           ; 1 bytes @ 0x1D
  4664                           
  4665                           
  4666                           ; 1 bytes @ 0x1D
  4667  003D                     	ds	1
  4668  003E                     ??_strstr:	
  4669  003E                     ?_DS1302_Initialize:	
  4670                           ; 1 bytes @ 0x1E
  4671                           
  4672  003E                     ?_EUSART_Initialize:	
  4673                           ; 1 bytes @ 0x1E
  4674                           
  4675  003E                     DS1302_Initialize@min:	
  4676                           ; 1 bytes @ 0x1E
  4677                           
  4678  003E                     utoa@v:	
  4679                           ; 1 bytes @ 0x1E
  4680                           
  4681  003E                     EUSART_Initialize@baudrate:	
  4682                           ; 2 bytes @ 0x1E
  4683                           
  4684                           
  4685                           ; 4 bytes @ 0x1E
  4686  003E                     	ds	1
  4687  003F                     DS1302_Initialize@hr:	
  4688                           
  4689                           ; 1 bytes @ 0x1F
  4690  003F                     	ds	1
  4691  0040                     DS1302_Initialize@day:	
  4692  0040                     utoa@c:	
  4693                           ; 1 bytes @ 0x20
  4694                           
  4695                           
  4696                           ; 1 bytes @ 0x20
  4697  0040                     	ds	1
  4698  0041                     ?_itoa:	
  4699  0041                     DS1302_Initialize@date:	
  4700                           ; 2 bytes @ 0x21
  4701                           
  4702  0041                     strstr@s1:	
  4703                           ; 1 bytes @ 0x21
  4704                           
  4705  0041                     itoa@buf:	
  4706                           ; 1 bytes @ 0x21
  4707                           
  4708  0041                     OLED_PutChar@bytes:	
  4709                           ; 2 bytes @ 0x21
  4710                           
  4711                           
  4712                           ; 9 bytes @ 0x21
  4713  0041                     	ds	1
  4714  0042                     ??_green:	
  4715  0042                     ??_EUSART_Initialize:	
  4716                           ; 1 bytes @ 0x22
  4717                           
  4718  0042                     DS1302_Initialize@mth:	
  4719                           ; 1 bytes @ 0x22
  4720                           
  4721                           
  4722                           ; 1 bytes @ 0x22
  4723  0042                     	ds	1
  4724  0043                     DS1302_Initialize@year:	
  4725  0043                     itoa@val:	
  4726                           ; 1 bytes @ 0x23
  4727                           
  4728                           
  4729                           ; 2 bytes @ 0x23
  4730  0043                     	ds	1
  4731  0044                     ??_DS1302_Initialize:	
  4732  0044                     green@buf:	
  4733                           ; 1 bytes @ 0x24
  4734                           
  4735                           
  4736                           ; 1 bytes @ 0x24
  4737  0044                     	ds	1
  4738  0045                     green@green1:	
  4739  0045                     DS1302_Initialize@sec:	
  4740                           ; 1 bytes @ 0x25
  4741                           
  4742  0045                     itoa@base:	
  4743                           ; 1 bytes @ 0x25
  4744                           
  4745                           
  4746                           ; 2 bytes @ 0x25
  4747  0045                     	ds	1
  4748  0046                     DS1302_Initialize@sec1:	
  4749                           
  4750                           ; 1 bytes @ 0x26
  4751  0046                     	ds	1
  4752  0047                     ??_itoa:	
  4753  0047                     DS1302_Initialize@min1:	
  4754                           ; 1 bytes @ 0x27
  4755                           
  4756  0047                     itoa@cp:	
  4757                           ; 1 bytes @ 0x27
  4758                           
  4759                           
  4760                           ; 2 bytes @ 0x27
  4761  0047                     	ds	1
  4762  0048                     DS1302_Initialize@hr1:	
  4763                           
  4764                           ; 1 bytes @ 0x28
  4765  0048                     	ds	1
  4766  0049                     DS1302_Initialize@day1:	
  4767                           
  4768                           ; 1 bytes @ 0x29
  4769  0049                     	ds	1
  4770  004A                     DS1302_Initialize@date1:	
  4771  004A                     OLED_PutChar@base:	
  4772                           ; 1 bytes @ 0x2A
  4773                           
  4774  004A                     EUSART_Initialize@x:	
  4775                           ; 2 bytes @ 0x2A
  4776                           
  4777                           
  4778                           ; 2 bytes @ 0x2A
  4779  004A                     	ds	1
  4780  004B                     DS1302_Initialize@mth1:	
  4781                           
  4782                           ; 1 bytes @ 0x2B
  4783  004B                     	ds	1
  4784  004C                     DS1302_Initialize@year1:	
  4785  004C                     OLED_PutChar@ch:	
  4786                           ; 1 bytes @ 0x2C
  4787                           
  4788                           
  4789                           ; 1 bytes @ 0x2C
  4790  004C                     	ds	1
  4791  004D                     OLED_PutChar@i:	
  4792                           
  4793                           ; 2 bytes @ 0x2D
  4794  004D                     	ds	2
  4795  004F                     ??_OLED_Clear:	
  4796  004F                     ?_OLED_Write_String:	
  4797                           ; 1 bytes @ 0x2F
  4798                           
  4799  004F                     OLED_Write_String@s:	
  4800                           ; 1 bytes @ 0x2F
  4801                           
  4802                           
  4803                           ; 2 bytes @ 0x2F
  4804  004F                     	ds	2
  4805                           
  4806                           	psect	maintext
  4807  05CF                     __pmaintext:	
  4808 ;;
  4809 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
  4810 ;;
  4811 ;; *************** function _main *****************
  4812 ;; Defined at:
  4813 ;;		line 101 in file "Main.c"
  4814 ;; Parameters:    Size  Location     Type
  4815 ;;		None
  4816 ;; Auto vars:     Size  Location     Type
  4817 ;;  year            1   17[BANK3 ] unsigned char 
  4818 ;;  month           1   16[BANK3 ] unsigned char 
  4819 ;;  date            1   15[BANK3 ] unsigned char 
  4820 ;;  day             1   14[BANK3 ] unsigned char 
  4821 ;;  hr              1   13[BANK3 ] unsigned char 
  4822 ;;  min             1   12[BANK3 ] unsigned char 
  4823 ;;  sec             1   11[BANK3 ] unsigned char 
  4824 ;;  set1            1   10[BANK3 ] PTR unsigned char 
  4825 ;;		 -> NULL(0), buf(50), 
  4826 ;;  month1          1    9[BANK3 ] PTR unsigned char 
  4827 ;;		 -> NULL(0), buf(50), 
  4828 ;;  date3           1    8[BANK3 ] PTR unsigned char 
  4829 ;;		 -> NULL(0), buf(50), 
  4830 ;;  min1            1    7[BANK3 ] PTR unsigned char 
  4831 ;;		 -> NULL(0), buf(50), 
  4832 ;;  hour1           1    6[BANK3 ] PTR unsigned char 
  4833 ;;		 -> NULL(0), buf(50), 
  4834 ;; Return value:  Size  Location     Type
  4835 ;;                  1    wreg      void 
  4836 ;; Registers used:
  4837 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4838 ;; Tracked objects:
  4839 ;;		On entry : B1F/0
  4840 ;;		On exit  : 0/0
  4841 ;;		Unchanged: 0/0
  4842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4844 ;;      Locals:         0       0       0       0      12       0       0       0       0       0       0       0       
      +0       0
  4845 ;;      Temps:          0       0       0       0       6       0       0       0       0       0       0       0       
      +0       0
  4846 ;;      Totals:         0       0       0       0      18       0       0       0       0       0       0       0       
      +0       0
  4847 ;;Total ram usage:       18 bytes
  4848 ;; Hardware stack levels required when called:    9
  4849 ;; This function calls:
  4850 ;;		_DS1302_Initialize
  4851 ;;		_EUSART_Read_Text
  4852 ;;		_green
  4853 ;;		_initMain
  4854 ;;		_itoa
  4855 ;;		_strcat
  4856 ;;		_strcpy
  4857 ;;		_strstr
  4858 ;;		_touchscreen_command
  4859 ;;		_touchscreen_data
  4860 ;; This function is called by:
  4861 ;;		Startup code after reset
  4862 ;; This function uses a non-reentrant model
  4863 ;;
  4864                           
  4865                           
  4866                           ;psect for function _main
  4867  05CF                     _main:	
  4868                           
  4869                           ;Main.c: 102: initMain();
  4870                           
  4871                           ;incstack = 0
  4872                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4873  05CF  318F  2713  3185   	fcall	_initMain
  4874  05D2                     l3760:	
  4875                           ;Main.c: 104: char* hour1;
  4876                           ;Main.c: 105: char* min1;
  4877                           ;Main.c: 106: char* date3;
  4878                           ;Main.c: 107: char* month1;
  4879                           ;Main.c: 108: char* set1;
  4880                           ;Main.c: 110: while(1){
  4881                           
  4882                           
  4883                           ;Main.c: 113: EUSART_Read_Text(buf, 11);
  4884  05D2  300B               	movlw	11
  4885  05D3  0020               	movlb	0	; select bank0
  4886  05D4  00AF               	movwf	EUSART_Read_Text@length
  4887  05D5  3000               	movlw	0
  4888  05D6  00B0               	movwf	EUSART_Read_Text@length+1
  4889  05D7  3020               	movlw	(low (_buf| (0+512)))& (0+255)
  4890  05D8  3197  2734  3185   	fcall	_EUSART_Read_Text
  4891                           
  4892                           ;Main.c: 116: green(buf);
  4893  05DB  3020               	movlw	(low (_buf| (0+512)))& (0+255)
  4894  05DC  318C  2483  3185   	fcall	_green
  4895                           
  4896                           ;Main.c: 122: hour1 = strstr(buf, "hour");
  4897  05DF  308B               	movlw	low (STR_14| (0+32768))
  4898  05E0  0020               	movlb	0	; select bank0
  4899  05E1  00BC               	movwf	strstr@s2
  4900  05E2  3085               	movlw	high (STR_14| (0+32768))
  4901  05E3  00BD               	movwf	strstr@s2+1
  4902  05E4  3020               	movlw	(low (_buf| (0+512)))& (0+255)
  4903  05E5  318A  221B  3185   	fcall	_strstr
  4904  05E8  0023               	movlb	3	; select bank3
  4905  05E9  00D5               	movwf	??_main^(0+384)
  4906  05EA  0855               	movf	??_main^(0+384),w
  4907  05EB  00DB               	movwf	main@hour1^(0+384)
  4908                           
  4909                           ;Main.c: 123: min1 = strstr(buf, "mins");
  4910  05EC  3090               	movlw	low (STR_15| (0+32768))
  4911  05ED  0020               	movlb	0	; select bank0
  4912  05EE  00BC               	movwf	strstr@s2
  4913  05EF  3085               	movlw	high (STR_15| (0+32768))
  4914  05F0  00BD               	movwf	strstr@s2+1
  4915  05F1  3020               	movlw	(low (_buf| (0+512)))& (0+255)
  4916  05F2  318A  221B  3185   	fcall	_strstr
  4917  05F5  0023               	movlb	3	; select bank3
  4918  05F6  00D5               	movwf	??_main^(0+384)
  4919  05F7  0855               	movf	??_main^(0+384),w
  4920  05F8  00DC               	movwf	main@min1^(0+384)
  4921                           
  4922                           ;Main.c: 124: date3 = strstr(buf, "date");
  4923  05F9  3081               	movlw	low (STR_16| (0+32768))
  4924  05FA  0020               	movlb	0	; select bank0
  4925  05FB  00BC               	movwf	strstr@s2
  4926  05FC  3085               	movlw	high (STR_16| (0+32768))
  4927  05FD  00BD               	movwf	strstr@s2+1
  4928  05FE  3020               	movlw	(low (_buf| (0+512)))& (0+255)
  4929  05FF  318A  221B  3185   	fcall	_strstr
  4930  0602  0023               	movlb	3	; select bank3
  4931  0603  00D5               	movwf	??_main^(0+384)
  4932  0604  0855               	movf	??_main^(0+384),w
  4933  0605  00DD               	movwf	main@date3^(0+384)
  4934                           
  4935                           ;Main.c: 125: month1 = strstr(buf, "month");
  4936  0606  3076               	movlw	low (STR_17| (0+32768))
  4937  0607  0020               	movlb	0	; select bank0
  4938  0608  00BC               	movwf	strstr@s2
  4939  0609  3085               	movlw	high (STR_17| (0+32768))
  4940  060A  00BD               	movwf	strstr@s2+1
  4941  060B  3020               	movlw	(low (_buf| (0+512)))& (0+255)
  4942  060C  318A  221B  3185   	fcall	_strstr
  4943  060F  0023               	movlb	3	; select bank3
  4944  0610  00D5               	movwf	??_main^(0+384)
  4945  0611  0855               	movf	??_main^(0+384),w
  4946  0612  00DE               	movwf	main@month1^(0+384)
  4947                           
  4948                           ;Main.c: 126: set1 = strstr(buf, "set");
  4949  0613  30C9               	movlw	low (STR_18| (0+32768))
  4950  0614  0020               	movlb	0	; select bank0
  4951  0615  00BC               	movwf	strstr@s2
  4952  0616  3085               	movlw	high (STR_18| (0+32768))
  4953  0617  00BD               	movwf	strstr@s2+1
  4954  0618  3020               	movlw	(low (_buf| (0+512)))& (0+255)
  4955  0619  318A  221B  3185   	fcall	_strstr
  4956  061C  0023               	movlb	3	; select bank3
  4957  061D  00D5               	movwf	??_main^(0+384)
  4958  061E  0855               	movf	??_main^(0+384),w
  4959  061F  00DF               	movwf	main@set1^(0+384)
  4960                           
  4961                           ;Main.c: 132: if (min1)
  4962  0620  085C               	movf	main@min1^(0+384),w
  4963  0621  1903               	btfsc	3,2
  4964  0622  2E89               	goto	l3794
  4965                           
  4966                           ;Main.c: 133: {
  4967                           ;Main.c: 135: itoa( minute_arr, y, 10 );
  4968  0623  305C               	movlw	low _minute_arr
  4969  0624  0020               	movlb	0	; select bank0
  4970  0625  00C1               	movwf	itoa@buf
  4971  0626  3001               	movlw	high _minute_arr
  4972  0627  00C2               	movwf	itoa@buf+1
  4973  0628  0021               	movlb	1	; select bank1
  4974  0629  0822               	movf	_y^(0+128),w
  4975  062A  0023               	movlb	3	; select bank3
  4976  062B  00D5               	movwf	??_main^(0+384)
  4977  062C  01D6               	clrf	(??_main^(0+384)+1)
  4978  062D  0855               	movf	??_main^(0+384),w
  4979  062E  0020               	movlb	0	; select bank0
  4980  062F  00C3               	movwf	itoa@val
  4981  0630  0023               	movlb	3	; select bank3
  4982  0631  0856               	movf	(??_main+1)^(0+384),w
  4983  0632  0020               	movlb	0	; select bank0
  4984  0633  00C4               	movwf	itoa@val+1
  4985  0634  300A               	movlw	10
  4986  0635  00C5               	movwf	itoa@base
  4987  0636  3000               	movlw	0
  4988  0637  00C6               	movwf	itoa@base+1
  4989  0638  3188  200C  3185   	fcall	_itoa
  4990                           
  4991                           ;Main.c: 137: strcpy(min_string, "\"");
  4992  063B  30A3               	movlw	low _min_string
  4993  063C  0020               	movlb	0	; select bank0
  4994  063D  00AF               	movwf	strcpy@to
  4995  063E  3000               	movlw	high _min_string
  4996  063F  00B0               	movwf	strcpy@to+1
  4997  0640  3041               	movlw	low ((STR_32+11)| (0+32768))
  4998  0641  00B1               	movwf	strcpy@from
  4999  0642  3085               	movlw	high ((STR_32+11)| (0+32768))
  5000  0643  00B2               	movwf	strcpy@from+1
  5001  0644  3196  26FD  3185   	fcall	_strcpy
  5002                           
  5003                           ;Main.c: 141: if (y < 10){
  5004  0647  300A               	movlw	10
  5005  0648  0021               	movlb	1	; select bank1
  5006  0649  0222               	subwf	_y^(0+128),w
  5007  064A  1803               	skipnc
  5008  064B  2E58               	goto	l3784
  5009                           
  5010                           ;Main.c: 142: strcat(min_string, "0");
  5011  064C  30A3               	movlw	low _min_string
  5012  064D  0020               	movlb	0	; select bank0
  5013  064E  00AF               	movwf	strcat@to
  5014  064F  3000               	movlw	high _min_string
  5015  0650  00B0               	movwf	strcat@to+1
  5016  0651  3067               	movlw	low ((STR_28+5)| (0+32768))
  5017  0652  00B1               	movwf	strcat@from
  5018  0653  3085               	movlw	high ((STR_28+5)| (0+32768))
  5019  0654  00B2               	movwf	strcat@from+1
  5020  0655  3188  207E  3185   	fcall	_strcat
  5021  0658                     l3784:	
  5022                           ;Main.c: 144: }
  5023                           
  5024                           ;Main.c: 143: strcat(min_string, minute_arr);
  5025                           
  5026                           
  5027                           ;Main.c: 146: else
  5028                           ;Main.c: 147: {
  5029                           ;Main.c: 148: strcat(min_string, minute_arr);
  5030  0658  30A3               	movlw	low _min_string
  5031  0659  0020               	movlb	0	; select bank0
  5032  065A  00AF               	movwf	strcat@to
  5033  065B  3000               	movlw	high _min_string
  5034  065C  00B0               	movwf	strcat@to+1
  5035  065D  305C               	movlw	low _minute_arr
  5036  065E  00B1               	movwf	strcat@from
  5037  065F  3001               	movlw	high _minute_arr
  5038  0660  00B2               	movwf	strcat@from+1
  5039  0661  3188  207E  3185   	fcall	_strcat
  5040                           
  5041                           ;Main.c: 149: }
  5042                           ;Main.c: 151: strcat(min_string, "\"");
  5043  0664  30A3               	movlw	low _min_string
  5044  0665  0020               	movlb	0	; select bank0
  5045  0666  00AF               	movwf	strcat@to
  5046  0667  3000               	movlw	high _min_string
  5047  0668  00B0               	movwf	strcat@to+1
  5048  0669  3041               	movlw	low ((STR_32+11)| (0+32768))
  5049  066A  00B1               	movwf	strcat@from
  5050  066B  3085               	movlw	high ((STR_32+11)| (0+32768))
  5051  066C  00B2               	movwf	strcat@from+1
  5052  066D  3188  207E  3185   	fcall	_strcat
  5053                           
  5054                           ;Main.c: 153: if (y < 59){
  5055  0670  303B               	movlw	59
  5056  0671  0021               	movlb	1	; select bank1
  5057  0672  0222               	subwf	_y^(0+128),w
  5058  0673  1803               	skipnc
  5059  0674  2E7C               	goto	l3790
  5060                           
  5061                           ;Main.c: 154: y++;
  5062  0675  3001               	movlw	1
  5063  0676  0023               	movlb	3	; select bank3
  5064  0677  00D5               	movwf	??_main^(0+384)
  5065  0678  0855               	movf	??_main^(0+384),w
  5066  0679  0021               	movlb	1	; select bank1
  5067  067A  07A2               	addwf	_y^(0+128),f
  5068                           
  5069                           ;Main.c: 155: }
  5070  067B  2E7D               	goto	l3792
  5071  067C                     l3790:	
  5072                           
  5073                           ;Main.c: 157: else {
  5074                           ;Main.c: 158: y = 0;
  5075  067C  01A2               	clrf	_y^(0+128)
  5076  067D                     l3792:	
  5077                           
  5078                           ;Main.c: 159: }
  5079                           ;Main.c: 163: touchscreen_data(screen_mins, min_string);
  5080  067D  3026               	movlw	low (_screen_mins| (0+32768))
  5081  067E  0020               	movlb	0	; select bank0
  5082  067F  00B5               	movwf	touchscreen_data@cmd
  5083  0680  3085               	movlw	high (_screen_mins| (0+32768))
  5084  0681  00B6               	movwf	touchscreen_data@cmd+1
  5085  0682  30A3               	movlw	low _min_string
  5086  0683  00B7               	movwf	touchscreen_data@string2
  5087  0684  3000               	movlw	high _min_string
  5088  0685  00B8               	movwf	touchscreen_data@string2+1
  5089  0686  3188  20A5  3185   	fcall	_touchscreen_data
  5090  0689                     l3794:	
  5091                           
  5092                           ;Main.c: 164: }
  5093                           ;Main.c: 169: if (hour1){
  5094  0689  0023               	movlb	3	; select bank3
  5095  068A  085B               	movf	main@hour1^(0+384),w
  5096  068B  1903               	btfsc	3,2
  5097  068C  2EE3               	goto	l3810
  5098                           
  5099                           ;Main.c: 172: itoa( hour_arr, x, 10 );
  5100  068D  3052               	movlw	low _hour_arr
  5101  068E  0020               	movlb	0	; select bank0
  5102  068F  00C1               	movwf	itoa@buf
  5103  0690  3001               	movlw	high _hour_arr
  5104  0691  00C2               	movwf	itoa@buf+1
  5105  0692  0021               	movlb	1	; select bank1
  5106  0693  086B               	movf	_x^(0+128),w
  5107  0694  0023               	movlb	3	; select bank3
  5108  0695  00D5               	movwf	??_main^(0+384)
  5109  0696  01D6               	clrf	(??_main^(0+384)+1)
  5110  0697  0855               	movf	??_main^(0+384),w
  5111  0698  0020               	movlb	0	; select bank0
  5112  0699  00C3               	movwf	itoa@val
  5113  069A  0023               	movlb	3	; select bank3
  5114  069B  0856               	movf	(??_main+1)^(0+384),w
  5115  069C  0020               	movlb	0	; select bank0
  5116  069D  00C4               	movwf	itoa@val+1
  5117  069E  300A               	movlw	10
  5118  069F  00C5               	movwf	itoa@base
  5119  06A0  3000               	movlw	0
  5120  06A1  00C6               	movwf	itoa@base+1
  5121  06A2  3188  200C  3185   	fcall	_itoa
  5122                           
  5123                           ;Main.c: 174: strcpy(hour_string, "\"");
  5124  06A5  30AD               	movlw	low _hour_string
  5125  06A6  0020               	movlb	0	; select bank0
  5126  06A7  00AF               	movwf	strcpy@to
  5127  06A8  3000               	movlw	high _hour_string
  5128  06A9  00B0               	movwf	strcpy@to+1
  5129  06AA  3041               	movlw	low ((STR_32+11)| (0+32768))
  5130  06AB  00B1               	movwf	strcpy@from
  5131  06AC  3085               	movlw	high ((STR_32+11)| (0+32768))
  5132  06AD  00B2               	movwf	strcpy@from+1
  5133  06AE  3196  26FD  3185   	fcall	_strcpy
  5134                           
  5135                           ;Main.c: 175: strcat(hour_string, hour_arr);
  5136  06B1  30AD               	movlw	low _hour_string
  5137  06B2  0020               	movlb	0	; select bank0
  5138  06B3  00AF               	movwf	strcat@to
  5139  06B4  3000               	movlw	high _hour_string
  5140  06B5  00B0               	movwf	strcat@to+1
  5141  06B6  3052               	movlw	low _hour_arr
  5142  06B7  00B1               	movwf	strcat@from
  5143  06B8  3001               	movlw	high _hour_arr
  5144  06B9  00B2               	movwf	strcat@from+1
  5145  06BA  3188  207E  3185   	fcall	_strcat
  5146                           
  5147                           ;Main.c: 176: strcat(hour_string, "\"");
  5148  06BD  30AD               	movlw	low _hour_string
  5149  06BE  0020               	movlb	0	; select bank0
  5150  06BF  00AF               	movwf	strcat@to
  5151  06C0  3000               	movlw	high _hour_string
  5152  06C1  00B0               	movwf	strcat@to+1
  5153  06C2  3041               	movlw	low ((STR_32+11)| (0+32768))
  5154  06C3  00B1               	movwf	strcat@from
  5155  06C4  3085               	movlw	high ((STR_32+11)| (0+32768))
  5156  06C5  00B2               	movwf	strcat@from+1
  5157  06C6  3188  207E  3185   	fcall	_strcat
  5158                           
  5159                           ;Main.c: 178: if (x < 12){
  5160  06C9  300C               	movlw	12
  5161  06CA  0021               	movlb	1	; select bank1
  5162  06CB  026B               	subwf	_x^(0+128),w
  5163  06CC  1803               	skipnc
  5164  06CD  2ED5               	goto	l224
  5165                           
  5166                           ;Main.c: 179: x++;
  5167  06CE  3001               	movlw	1
  5168  06CF  0023               	movlb	3	; select bank3
  5169  06D0  00D5               	movwf	??_main^(0+384)
  5170  06D1  0855               	movf	??_main^(0+384),w
  5171  06D2  0021               	movlb	1	; select bank1
  5172  06D3  07EB               	addwf	_x^(0+128),f
  5173                           
  5174                           ;Main.c: 180: }
  5175  06D4  2ED7               	goto	l3808
  5176  06D5                     l224:	
  5177                           
  5178                           ;Main.c: 182: else {
  5179                           ;Main.c: 183: x = 1;
  5180  06D5  01EB               	clrf	_x^(0+128)
  5181  06D6  0AEB               	incf	_x^(0+128),f
  5182  06D7                     l3808:	
  5183                           
  5184                           ;Main.c: 184: }
  5185                           ;Main.c: 187: touchscreen_data(screen_hour, hour_string);
  5186  06D7  302E               	movlw	low (_screen_hour| (0+32768))
  5187  06D8  0020               	movlb	0	; select bank0
  5188  06D9  00B5               	movwf	touchscreen_data@cmd
  5189  06DA  3085               	movlw	high (_screen_hour| (0+32768))
  5190  06DB  00B6               	movwf	touchscreen_data@cmd+1
  5191  06DC  30AD               	movlw	low _hour_string
  5192  06DD  00B7               	movwf	touchscreen_data@string2
  5193  06DE  3000               	movlw	high _hour_string
  5194  06DF  00B8               	movwf	touchscreen_data@string2+1
  5195  06E0  3188  20A5  3185   	fcall	_touchscreen_data
  5196  06E3                     l3810:	
  5197                           
  5198                           ;Main.c: 188: }
  5199                           ;Main.c: 193: if(date3)
  5200  06E3  0023               	movlb	3	; select bank3
  5201  06E4  085D               	movf	main@date3^(0+384),w
  5202  06E5  1903               	btfsc	3,2
  5203  06E6  2F3C               	goto	l3828
  5204                           
  5205                           ;Main.c: 194: {
  5206                           ;Main.c: 196: itoa( date_arr, d, 10 );
  5207  06E7  3048               	movlw	low _date_arr
  5208  06E8  0020               	movlb	0	; select bank0
  5209  06E9  00C1               	movwf	itoa@buf
  5210  06EA  3001               	movlw	high _date_arr
  5211  06EB  00C2               	movwf	itoa@buf+1
  5212  06EC  0021               	movlb	1	; select bank1
  5213  06ED  0869               	movf	_d^(0+128),w
  5214  06EE  0023               	movlb	3	; select bank3
  5215  06EF  00D5               	movwf	??_main^(0+384)
  5216  06F0  01D6               	clrf	(??_main^(0+384)+1)
  5217  06F1  0855               	movf	??_main^(0+384),w
  5218  06F2  0020               	movlb	0	; select bank0
  5219  06F3  00C3               	movwf	itoa@val
  5220  06F4  0023               	movlb	3	; select bank3
  5221  06F5  0856               	movf	(??_main+1)^(0+384),w
  5222  06F6  0020               	movlb	0	; select bank0
  5223  06F7  00C4               	movwf	itoa@val+1
  5224  06F8  300A               	movlw	10
  5225  06F9  00C5               	movwf	itoa@base
  5226  06FA  3000               	movlw	0
  5227  06FB  00C6               	movwf	itoa@base+1
  5228  06FC  3188  200C  3185   	fcall	_itoa
  5229                           
  5230                           ;Main.c: 198: strcpy(date1_string, "\"");
  5231  06FF  3034               	movlw	low _date1_string
  5232  0700  0020               	movlb	0	; select bank0
  5233  0701  00AF               	movwf	strcpy@to
  5234  0702  3001               	movlw	high _date1_string
  5235  0703  00B0               	movwf	strcpy@to+1
  5236  0704  3041               	movlw	low ((STR_32+11)| (0+32768))
  5237  0705  00B1               	movwf	strcpy@from
  5238  0706  3085               	movlw	high ((STR_32+11)| (0+32768))
  5239  0707  00B2               	movwf	strcpy@from+1
  5240  0708  3196  26FD  3185   	fcall	_strcpy
  5241                           
  5242                           ;Main.c: 199: strcat(date1_string, date_arr);
  5243  070B  3034               	movlw	low _date1_string
  5244  070C  0020               	movlb	0	; select bank0
  5245  070D  00AF               	movwf	strcat@to
  5246  070E  3001               	movlw	high _date1_string
  5247  070F  00B0               	movwf	strcat@to+1
  5248  0710  3048               	movlw	low _date_arr
  5249  0711  00B1               	movwf	strcat@from
  5250  0712  3001               	movlw	high _date_arr
  5251  0713  00B2               	movwf	strcat@from+1
  5252  0714  3188  207E  3185   	fcall	_strcat
  5253                           
  5254                           ;Main.c: 200: strcat(date1_string, "\"");
  5255  0717  3034               	movlw	low _date1_string
  5256  0718  0020               	movlb	0	; select bank0
  5257  0719  00AF               	movwf	strcat@to
  5258  071A  3001               	movlw	high _date1_string
  5259  071B  00B0               	movwf	strcat@to+1
  5260  071C  3041               	movlw	low ((STR_32+11)| (0+32768))
  5261  071D  00B1               	movwf	strcat@from
  5262  071E  3085               	movlw	high ((STR_32+11)| (0+32768))
  5263  071F  00B2               	movwf	strcat@from+1
  5264  0720  3188  207E  3185   	fcall	_strcat
  5265                           
  5266                           ;Main.c: 202: if (d < 31){
  5267  0723  301F               	movlw	31
  5268  0724  0021               	movlb	1	; select bank1
  5269  0725  0269               	subwf	_d^(0+128),w
  5270  0726  1803               	skipnc
  5271  0727  2F2F               	goto	l3824
  5272                           
  5273                           ;Main.c: 203: d++;
  5274  0728  3001               	movlw	1
  5275  0729  0023               	movlb	3	; select bank3
  5276  072A  00D5               	movwf	??_main^(0+384)
  5277  072B  0855               	movf	??_main^(0+384),w
  5278  072C  0021               	movlb	1	; select bank1
  5279  072D  07E9               	addwf	_d^(0+128),f
  5280                           
  5281                           ;Main.c: 204: }
  5282  072E  2F30               	goto	l3826
  5283  072F                     l3824:	
  5284                           
  5285                           ;Main.c: 206: else {
  5286                           ;Main.c: 207: d = 0;
  5287  072F  01E9               	clrf	_d^(0+128)
  5288  0730                     l3826:	
  5289                           
  5290                           ;Main.c: 208: }
  5291                           ;Main.c: 211: touchscreen_data(screen_date1, date1_string);
  5292  0730  301E               	movlw	low (_screen_date1| (0+32768))
  5293  0731  0020               	movlb	0	; select bank0
  5294  0732  00B5               	movwf	touchscreen_data@cmd
  5295  0733  3085               	movlw	high (_screen_date1| (0+32768))
  5296  0734  00B6               	movwf	touchscreen_data@cmd+1
  5297  0735  3034               	movlw	low _date1_string
  5298  0736  00B7               	movwf	touchscreen_data@string2
  5299  0737  3001               	movlw	high _date1_string
  5300  0738  00B8               	movwf	touchscreen_data@string2+1
  5301  0739  3188  20A5  3185   	fcall	_touchscreen_data
  5302  073C                     l3828:	
  5303                           
  5304                           ;Main.c: 212: }
  5305                           ;Main.c: 219: if(month1)
  5306  073C  0023               	movlb	3	; select bank3
  5307  073D  085E               	movf	main@month1^(0+384),w
  5308  073E  1903               	btfsc	3,2
  5309  073F  2F96               	goto	l3844
  5310                           
  5311                           ;Main.c: 220: {
  5312                           ;Main.c: 222: itoa( month_arr, m, 10 );
  5313  0740  303E               	movlw	low _month_arr
  5314  0741  0020               	movlb	0	; select bank0
  5315  0742  00C1               	movwf	itoa@buf
  5316  0743  3001               	movlw	high _month_arr
  5317  0744  00C2               	movwf	itoa@buf+1
  5318  0745  0021               	movlb	1	; select bank1
  5319  0746  086A               	movf	_m^(0+128),w
  5320  0747  0023               	movlb	3	; select bank3
  5321  0748  00D5               	movwf	??_main^(0+384)
  5322  0749  01D6               	clrf	(??_main^(0+384)+1)
  5323  074A  0855               	movf	??_main^(0+384),w
  5324  074B  0020               	movlb	0	; select bank0
  5325  074C  00C3               	movwf	itoa@val
  5326  074D  0023               	movlb	3	; select bank3
  5327  074E  0856               	movf	(??_main+1)^(0+384),w
  5328  074F  0020               	movlb	0	; select bank0
  5329  0750  00C4               	movwf	itoa@val+1
  5330  0751  300A               	movlw	10
  5331  0752  00C5               	movwf	itoa@base
  5332  0753  3000               	movlw	0
  5333  0754  00C6               	movwf	itoa@base+1
  5334  0755  3188  200C  3185   	fcall	_itoa
  5335                           
  5336                           ;Main.c: 224: strcpy(month_string, "\"");
  5337  0758  302A               	movlw	low _month_string
  5338  0759  0020               	movlb	0	; select bank0
  5339  075A  00AF               	movwf	strcpy@to
  5340  075B  3001               	movlw	high _month_string
  5341  075C  00B0               	movwf	strcpy@to+1
  5342  075D  3041               	movlw	low ((STR_32+11)| (0+32768))
  5343  075E  00B1               	movwf	strcpy@from
  5344  075F  3085               	movlw	high ((STR_32+11)| (0+32768))
  5345  0760  00B2               	movwf	strcpy@from+1
  5346  0761  3196  26FD  3185   	fcall	_strcpy
  5347                           
  5348                           ;Main.c: 225: strcat(month_string, month_arr);
  5349  0764  302A               	movlw	low _month_string
  5350  0765  0020               	movlb	0	; select bank0
  5351  0766  00AF               	movwf	strcat@to
  5352  0767  3001               	movlw	high _month_string
  5353  0768  00B0               	movwf	strcat@to+1
  5354  0769  303E               	movlw	low _month_arr
  5355  076A  00B1               	movwf	strcat@from
  5356  076B  3001               	movlw	high _month_arr
  5357  076C  00B2               	movwf	strcat@from+1
  5358  076D  3188  207E  3185   	fcall	_strcat
  5359                           
  5360                           ;Main.c: 226: strcat(month_string, "\"");
  5361  0770  302A               	movlw	low _month_string
  5362  0771  0020               	movlb	0	; select bank0
  5363  0772  00AF               	movwf	strcat@to
  5364  0773  3001               	movlw	high _month_string
  5365  0774  00B0               	movwf	strcat@to+1
  5366  0775  3041               	movlw	low ((STR_32+11)| (0+32768))
  5367  0776  00B1               	movwf	strcat@from
  5368  0777  3085               	movlw	high ((STR_32+11)| (0+32768))
  5369  0778  00B2               	movwf	strcat@from+1
  5370  0779  3188  207E  3185   	fcall	_strcat
  5371                           
  5372                           ;Main.c: 228: if (m < 12){
  5373  077C  300C               	movlw	12
  5374  077D  0021               	movlb	1	; select bank1
  5375  077E  026A               	subwf	_m^(0+128),w
  5376  077F  1803               	skipnc
  5377  0780  2F88               	goto	l230
  5378                           
  5379                           ;Main.c: 229: m++;
  5380  0781  3001               	movlw	1
  5381  0782  0023               	movlb	3	; select bank3
  5382  0783  00D5               	movwf	??_main^(0+384)
  5383  0784  0855               	movf	??_main^(0+384),w
  5384  0785  0021               	movlb	1	; select bank1
  5385  0786  07EA               	addwf	_m^(0+128),f
  5386                           
  5387                           ;Main.c: 230: }
  5388  0787  2F8A               	goto	l3842
  5389  0788                     l230:	
  5390                           
  5391                           ;Main.c: 232: else {
  5392                           ;Main.c: 233: m = 1;
  5393  0788  01EA               	clrf	_m^(0+128)
  5394  0789  0AEA               	incf	_m^(0+128),f
  5395  078A                     l3842:	
  5396                           
  5397                           ;Main.c: 234: }
  5398                           ;Main.c: 237: touchscreen_data(screen_month, month_string);
  5399  078A  3016               	movlw	low (_screen_month| (0+32768))
  5400  078B  0020               	movlb	0	; select bank0
  5401  078C  00B5               	movwf	touchscreen_data@cmd
  5402  078D  3085               	movlw	high (_screen_month| (0+32768))
  5403  078E  00B6               	movwf	touchscreen_data@cmd+1
  5404  078F  302A               	movlw	low _month_string
  5405  0790  00B7               	movwf	touchscreen_data@string2
  5406  0791  3001               	movlw	high _month_string
  5407  0792  00B8               	movwf	touchscreen_data@string2+1
  5408  0793  3188  20A5  3185   	fcall	_touchscreen_data
  5409  0796                     l3844:	
  5410                           
  5411                           ;Main.c: 238: }
  5412                           ;Main.c: 244: if (set1){
  5413  0796  0023               	movlb	3	; select bank3
  5414  0797  085F               	movf	main@set1^(0+384),w
  5415  0798  1903               	btfsc	3,2
  5416  0799  2DD2               	goto	l3760
  5417                           
  5418                           ;Main.c: 247: byte sec = 00;
  5419  079A  01E0               	clrf	main@sec^(0+384)
  5420                           
  5421                           ;Main.c: 248: byte min = y-1;
  5422  079B  0021               	movlb	1	; select bank1
  5423  079C  0822               	movf	_y^(0+128),w
  5424  079D  3EFF               	addlw	255
  5425  079E  0023               	movlb	3	; select bank3
  5426  079F  00D5               	movwf	??_main^(0+384)
  5427  07A0  0855               	movf	??_main^(0+384),w
  5428  07A1  00E1               	movwf	main@min^(0+384)
  5429                           
  5430                           ;Main.c: 249: byte hr = x-1;
  5431  07A2  0021               	movlb	1	; select bank1
  5432  07A3  086B               	movf	_x^(0+128),w
  5433  07A4  3EFF               	addlw	255
  5434  07A5  0023               	movlb	3	; select bank3
  5435  07A6  00D5               	movwf	??_main^(0+384)
  5436  07A7  0855               	movf	??_main^(0+384),w
  5437  07A8  00E2               	movwf	main@hr^(0+384)
  5438                           
  5439                           ;Main.c: 250: byte day = 2;
  5440  07A9  3002               	movlw	2
  5441  07AA  00D5               	movwf	??_main^(0+384)
  5442  07AB  0855               	movf	??_main^(0+384),w
  5443  07AC  00E3               	movwf	main@day^(0+384)
  5444                           
  5445                           ;Main.c: 251: byte date = d-1;
  5446  07AD  0021               	movlb	1	; select bank1
  5447  07AE  0869               	movf	_d^(0+128),w
  5448  07AF  3EFF               	addlw	255
  5449  07B0  0023               	movlb	3	; select bank3
  5450  07B1  00D5               	movwf	??_main^(0+384)
  5451  07B2  0855               	movf	??_main^(0+384),w
  5452  07B3  00E4               	movwf	main@date^(0+384)
  5453                           
  5454                           ;Main.c: 252: byte month = m-1;
  5455  07B4  0021               	movlb	1	; select bank1
  5456  07B5  086A               	movf	_m^(0+128),w
  5457  07B6  3EFF               	addlw	255
  5458  07B7  0023               	movlb	3	; select bank3
  5459  07B8  00D5               	movwf	??_main^(0+384)
  5460  07B9  0855               	movf	??_main^(0+384),w
  5461  07BA  00E5               	movwf	main@month^(0+384)
  5462                           
  5463                           ;Main.c: 253: byte year = 17;
  5464  07BB  3011               	movlw	17
  5465  07BC  00D5               	movwf	??_main^(0+384)
  5466  07BD  0855               	movf	??_main^(0+384),w
  5467  07BE  00E6               	movwf	main@year^(0+384)
  5468                           
  5469                           ;Main.c: 256: DS1302_Initialize(sec, min, hr, day, date, month, year);
  5470  07BF  0861               	movf	main@min^(0+384),w
  5471  07C0  00D5               	movwf	??_main^(0+384)
  5472  07C1  0855               	movf	??_main^(0+384),w
  5473  07C2  0020               	movlb	0	; select bank0
  5474  07C3  00BE               	movwf	DS1302_Initialize@min
  5475  07C4  0023               	movlb	3	; select bank3
  5476  07C5  0862               	movf	main@hr^(0+384),w
  5477  07C6  00D6               	movwf	(??_main+1)^(0+384)
  5478  07C7  0856               	movf	(??_main+1)^(0+384),w
  5479  07C8  0020               	movlb	0	; select bank0
  5480  07C9  00BF               	movwf	DS1302_Initialize@hr
  5481  07CA  0023               	movlb	3	; select bank3
  5482  07CB  0863               	movf	main@day^(0+384),w
  5483  07CC  00D7               	movwf	(??_main+2)^(0+384)
  5484  07CD  0857               	movf	(??_main+2)^(0+384),w
  5485  07CE  0020               	movlb	0	; select bank0
  5486  07CF  00C0               	movwf	DS1302_Initialize@day
  5487  07D0  0023               	movlb	3	; select bank3
  5488  07D1  0864               	movf	main@date^(0+384),w
  5489  07D2  00D8               	movwf	(??_main+3)^(0+384)
  5490  07D3  0858               	movf	(??_main+3)^(0+384),w
  5491  07D4  0020               	movlb	0	; select bank0
  5492  07D5  00C1               	movwf	DS1302_Initialize@date
  5493  07D6  0023               	movlb	3	; select bank3
  5494  07D7  0865               	movf	main@month^(0+384),w
  5495  07D8  00D9               	movwf	(??_main+4)^(0+384)
  5496  07D9  0859               	movf	(??_main+4)^(0+384),w
  5497  07DA  0020               	movlb	0	; select bank0
  5498  07DB  00C2               	movwf	DS1302_Initialize@mth
  5499  07DC  0023               	movlb	3	; select bank3
  5500  07DD  0866               	movf	main@year^(0+384),w
  5501  07DE  00DA               	movwf	(??_main+5)^(0+384)
  5502  07DF  085A               	movf	(??_main+5)^(0+384),w
  5503  07E0  0020               	movlb	0	; select bank0
  5504  07E1  00C3               	movwf	DS1302_Initialize@year
  5505  07E2  0023               	movlb	3	; select bank3
  5506  07E3  0860               	movf	main@sec^(0+384),w
  5507  07E4  318D  2568  3185   	fcall	_DS1302_Initialize
  5508                           
  5509                           ;Main.c: 257: touchscreen_command("page 0");
  5510  07E7  3062               	movlw	low (STR_28| (0+32768))
  5511  07E8  0020               	movlb	0	; select bank0
  5512  07E9  00B5               	movwf	touchscreen_command@string
  5513  07EA  3085               	movlw	high (STR_28| (0+32768))
  5514  07EB  00B6               	movwf	touchscreen_command@string+1
  5515  07EC  3197  2772  3185   	fcall	_touchscreen_command
  5516  07EF  2DD2               	goto	l3760
  5517  07F0                     __end_of_main:	
  5518                           ;Main.c: 258: }
  5519                           ;Main.c: 260: }
  5520                           ;Main.c: 262: return;
  5521                           
  5522                           
  5523                           	psect	text1
  5524  08A5                     __ptext1:	
  5525 ;; *************** function _touchscreen_data *****************
  5526 ;; Defined at:
  5527 ;;		line 31 in file "touchscreen.c"
  5528 ;; Parameters:    Size  Location     Type
  5529 ;;  cmd             2   21[BANK0 ] PTR unsigned char 
  5530 ;;		 -> screen_date(10), screen_mth(11), screen_time(10), screen_month(8), 
  5531 ;;		 -> screen_date1(8), screen_hour(8), screen_mins(8), 
  5532 ;;  string2         2   23[BANK0 ] PTR unsigned char 
  5533 ;;		 -> time_string(10), mth_string(10), date_string(10), month_string(10), 
  5534 ;;		 -> date1_string(10), hour_string(10), min_string(10), 
  5535 ;; Auto vars:     Size  Location     Type
  5536 ;;		None
  5537 ;; Return value:  Size  Location     Type
  5538 ;;                  1    wreg      void 
  5539 ;; Registers used:
  5540 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5541 ;; Tracked objects:
  5542 ;;		On entry : 0/0
  5543 ;;		On exit  : 0/0
  5544 ;;		Unchanged: 0/0
  5545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5546 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5548 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5549 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5550 ;;Total ram usage:        6 bytes
  5551 ;; Hardware stack levels used:    1
  5552 ;; Hardware stack levels required when called:    6
  5553 ;; This function calls:
  5554 ;;		_EUSART_Write
  5555 ;;		_EUSART_Write_Text
  5556 ;; This function is called by:
  5557 ;;		_main
  5558 ;; This function uses a non-reentrant model
  5559 ;;
  5560                           
  5561                           
  5562                           ;psect for function _touchscreen_data
  5563  08A5                     _touchscreen_data:	
  5564                           
  5565                           ;touchscreen.c: 33: EUSART_Write_Text(cmd);
  5566                           
  5567                           ;incstack = 0
  5568                           ; Regs used in _touchscreen_data: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5569  08A5  0020               	movlb	0	; select bank0
  5570  08A6  0836               	movf	touchscreen_data@cmd+1,w
  5571  08A7  00B1               	movwf	EUSART_Write_Text@text+1
  5572  08A8  0835               	movf	touchscreen_data@cmd,w
  5573  08A9  00B0               	movwf	EUSART_Write_Text@text
  5574  08AA  3197  2718  3188   	fcall	_EUSART_Write_Text
  5575                           
  5576                           ;touchscreen.c: 34: EUSART_Write_Text(string2);
  5577  08AD  0020               	movlb	0	; select bank0
  5578  08AE  0838               	movf	touchscreen_data@string2+1,w
  5579  08AF  00B1               	movwf	EUSART_Write_Text@text+1
  5580  08B0  0837               	movf	touchscreen_data@string2,w
  5581  08B1  00B0               	movwf	EUSART_Write_Text@text
  5582  08B2  3197  2718  3188   	fcall	_EUSART_Write_Text
  5583                           
  5584                           ;touchscreen.c: 35: EUSART_Write(0xFF);
  5585  08B5  30FF               	movlw	255
  5586  08B6  3195  25EE  3188   	fcall	_EUSART_Write
  5587                           
  5588                           ;touchscreen.c: 36: EUSART_Write(0xFF);
  5589  08B9  30FF               	movlw	255
  5590  08BA  3195  25EE  3188   	fcall	_EUSART_Write
  5591                           
  5592                           ;touchscreen.c: 37: EUSART_Write(0xFF);
  5593  08BD  30FF               	movlw	255
  5594  08BE  3195  25EE  3188   	fcall	_EUSART_Write
  5595                           
  5596                           ;touchscreen.c: 39: _delay((unsigned long)((100)*(16000000/4000.0)));
  5597  08C1  3003               	movlw	3
  5598  08C2  0020               	movlb	0	; select bank0
  5599  08C3  00BA               	movwf	??_touchscreen_data+1
  5600  08C4  3008               	movlw	8
  5601  08C5  00B9               	movwf	??_touchscreen_data
  5602  08C6  3077               	movlw	119
  5603  08C7                     u3787:	
  5604  08C7  0B89               	decfsz	9,f
  5605  08C8  28C7               	goto	u3787
  5606  08C9  0BB9               	decfsz	??_touchscreen_data,f
  5607  08CA  28C7               	goto	u3787
  5608  08CB  0BBA               	decfsz	??_touchscreen_data+1,f
  5609  08CC  28C7               	goto	u3787
  5610  08CD  0008               	return
  5611  08CE                     __end_of_touchscreen_data:	
  5612                           
  5613                           	psect	text2
  5614  16FD                     __ptext2:	
  5615 ;; *************** function _strcpy *****************
  5616 ;; Defined at:
  5617 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\strcpy.c"
  5618 ;; Parameters:    Size  Location     Type
  5619 ;;  to              2   15[BANK0 ] PTR unsigned char 
  5620 ;;		 -> time_string(10), mth_string(10), date_string(10), month_string(10), 
  5621 ;;		 -> date1_string(10), hour_string(10), min_string(10), 
  5622 ;;  from            2   17[BANK0 ] PTR const unsigned char 
  5623 ;;		 -> STR_38(2), STR_36(2), STR_34(2), STR_26(2), 
  5624 ;;		 -> STR_24(2), STR_22(2), STR_19(2), 
  5625 ;; Auto vars:     Size  Location     Type
  5626 ;;  cp              2   19[BANK0 ] PTR unsigned char 
  5627 ;;		 -> time_string(10), mth_string(10), date_string(10), month_string(10), 
  5628 ;;		 -> date1_string(10), hour_string(10), min_string(10), 
  5629 ;; Return value:  Size  Location     Type
  5630 ;;                  2   15[BANK0 ] PTR unsigned char 
  5631 ;; Registers used:
  5632 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, pclath
  5633 ;; Tracked objects:
  5634 ;;		On entry : 0/0
  5635 ;;		On exit  : 0/0
  5636 ;;		Unchanged: 0/0
  5637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5638 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5639 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5641 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5642 ;;Total ram usage:        6 bytes
  5643 ;; Hardware stack levels used:    1
  5644 ;; Hardware stack levels required when called:    4
  5645 ;; This function calls:
  5646 ;;		Nothing
  5647 ;; This function is called by:
  5648 ;;		_main
  5649 ;; This function uses a non-reentrant model
  5650 ;;
  5651                           
  5652                           
  5653                           ;psect for function _strcpy
  5654  16FD                     _strcpy:	
  5655                           
  5656                           ;incstack = 0
  5657                           ; Regs used in _strcpy: [wreg-fsr1h+pclath]
  5658  16FD  0020               	movlb	0	; select bank0
  5659  16FE  0830               	movf	strcpy@to+1,w
  5660  16FF  00B4               	movwf	strcpy@cp+1
  5661  1700  082F               	movf	strcpy@to,w
  5662  1701  00B3               	movwf	strcpy@cp
  5663  1702                     l3722:	
  5664  1702  0833               	movf	strcpy@cp,w
  5665  1703  0086               	movwf	6
  5666  1704  0834               	movf	strcpy@cp+1,w
  5667  1705  0087               	movwf	7
  5668  1706  0831               	movf	strcpy@from,w
  5669  1707  0084               	movwf	4
  5670  1708  0832               	movf	strcpy@from+1,w
  5671  1709  0085               	movwf	5
  5672  170A  0800               	movf	0,w	;code access
  5673  170B  3FC0               	movwi [0]fsr1
  5674  170C  0889               	movf	9,f
  5675  170D  1903               	btfsc	3,2
  5676  170E  0008               	return
  5677  170F  3001               	movlw	1
  5678  1710  07B3               	addwf	strcpy@cp,f
  5679  1711  3000               	movlw	0
  5680  1712  3DB4               	addwfc	strcpy@cp+1,f
  5681  1713  3001               	movlw	1
  5682  1714  07B1               	addwf	strcpy@from,f
  5683  1715  3000               	movlw	0
  5684  1716  3DB2               	addwfc	strcpy@from+1,f
  5685  1717  2F02               	goto	l3722
  5686  1718                     __end_of_strcpy:	
  5687                           ;	Return value of _strcpy is never used
  5688                           
  5689                           
  5690                           	psect	text3
  5691  087E                     __ptext3:	
  5692 ;; *************** function _strcat *****************
  5693 ;; Defined at:
  5694 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\strcat.c"
  5695 ;; Parameters:    Size  Location     Type
  5696 ;;  to              2   15[BANK0 ] PTR unsigned char 
  5697 ;;		 -> time_string(10), mth_string(10), date_string(10), month_string(10), 
  5698 ;;		 -> date1_string(10), hour_string(10), min_string(10), 
  5699 ;;  from            2   17[BANK0 ] PTR const unsigned char 
  5700 ;;		 -> STR_41(2), STR_40(2), STR_39(2), STR_37(2), 
  5701 ;;		 -> STR_35(2), dt_arr(5), hr_arr(8), min_arr(8), 
  5702 ;;		 -> STR_27(2), month_arr(10), STR_25(2), date_arr(10), 
  5703 ;;		 -> STR_23(2), hour_arr(10), STR_21(2), STR_20(2), 
  5704 ;;		 -> minute_arr(10), STR_13(4), STR_12(4), STR_11(4), 
  5705 ;;		 -> STR_10(4), STR_9(4), STR_8(4), STR_7(4), 
  5706 ;;		 -> STR_6(4), STR_5(4), STR_4(4), STR_3(4), 
  5707 ;;		 -> STR_2(4), STR_1(4), 
  5708 ;; Auto vars:     Size  Location     Type
  5709 ;;  cp              2   19[BANK0 ] PTR unsigned char 
  5710 ;;		 -> time_string(10), mth_string(10), date_string(10), month_string(10), 
  5711 ;;		 -> date1_string(10), hour_string(10), min_string(10), 
  5712 ;; Return value:  Size  Location     Type
  5713 ;;                  2   15[BANK0 ] PTR unsigned char 
  5714 ;; Registers used:
  5715 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  5716 ;; Tracked objects:
  5717 ;;		On entry : 0/0
  5718 ;;		On exit  : 0/0
  5719 ;;		Unchanged: 0/0
  5720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5721 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5722 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5724 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5725 ;;Total ram usage:        6 bytes
  5726 ;; Hardware stack levels used:    1
  5727 ;; Hardware stack levels required when called:    4
  5728 ;; This function calls:
  5729 ;;		Nothing
  5730 ;; This function is called by:
  5731 ;;		_main
  5732 ;; This function uses a non-reentrant model
  5733 ;;
  5734                           
  5735                           
  5736                           ;psect for function _strcat
  5737  087E                     _strcat:	
  5738                           
  5739                           ;incstack = 0
  5740                           ; Regs used in _strcat: [wreg-fsr1h+status,2+status,0+pclath]
  5741  087E  0020               	movlb	0	; select bank0
  5742  087F  0830               	movf	strcat@to+1,w
  5743  0880  00B4               	movwf	strcat@cp+1
  5744  0881  082F               	movf	strcat@to,w
  5745  0882  00B3               	movwf	strcat@cp
  5746  0883                     l3728:	
  5747  0883  0833               	movf	strcat@cp,w
  5748  0884  0086               	movwf	6
  5749  0885  0834               	movf	strcat@cp+1,w
  5750  0886  0087               	movwf	7
  5751  0887  0801               	movf	1,w
  5752  0888  1903               	btfsc	3,2
  5753  0889  2897               	goto	l3732
  5754  088A  3001               	movlw	1
  5755  088B  07B3               	addwf	strcat@cp,f
  5756  088C  3000               	movlw	0
  5757  088D  3DB4               	addwfc	strcat@cp+1,f
  5758  088E  2883               	goto	l3728
  5759  088F                     l3730:	
  5760  088F  3001               	movlw	1
  5761  0890  07B3               	addwf	strcat@cp,f
  5762  0891  3000               	movlw	0
  5763  0892  3DB4               	addwfc	strcat@cp+1,f
  5764  0893  3001               	movlw	1
  5765  0894  07B1               	addwf	strcat@from,f
  5766  0895  3000               	movlw	0
  5767  0896  3DB2               	addwfc	strcat@from+1,f
  5768  0897                     l3732:	
  5769  0897  0833               	movf	strcat@cp,w
  5770  0898  0086               	movwf	6
  5771  0899  0834               	movf	strcat@cp+1,w
  5772  089A  0087               	movwf	7
  5773  089B  0831               	movf	strcat@from,w
  5774  089C  0084               	movwf	4
  5775  089D  0832               	movf	strcat@from+1,w
  5776  089E  0085               	movwf	5
  5777  089F  0800               	movf	0,w	;code access
  5778  08A0  3FC0               	movwi [0]fsr1
  5779  08A1  0889               	movf	9,f
  5780  08A2  1903               	btfsc	3,2
  5781  08A3  0008               	return
  5782  08A4  288F               	goto	l3730
  5783  08A5                     __end_of_strcat:	
  5784                           ;	Return value of _strcat is never used
  5785                           
  5786                           
  5787                           	psect	text4
  5788  080C                     __ptext4:	
  5789 ;; *************** function _itoa *****************
  5790 ;; Defined at:
  5791 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\itoa.c"
  5792 ;; Parameters:    Size  Location     Type
  5793 ;;  buf             2   33[BANK0 ] PTR unsigned char 
  5794 ;;		 -> OLED_Write_Integer@s(20), dt_arr(5), hr_arr(8), min_arr(8), 
  5795 ;;		 -> month_arr(10), date_arr(10), hour_arr(10), minute_arr(10), 
  5796 ;;  val             2   35[BANK0 ] int 
  5797 ;;  base            2   37[BANK0 ] int 
  5798 ;; Auto vars:     Size  Location     Type
  5799 ;;  cp              2   39[BANK0 ] PTR unsigned char 
  5800 ;;		 -> OLED_Write_Integer@s(20), dt_arr(5), hr_arr(8), min_arr(8), 
  5801 ;;		 -> month_arr(10), date_arr(10), hour_arr(10), minute_arr(10), 
  5802 ;; Return value:  Size  Location     Type
  5803 ;;                  2   33[BANK0 ] PTR unsigned char 
  5804 ;; Registers used:
  5805 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5806 ;; Tracked objects:
  5807 ;;		On entry : 0/0
  5808 ;;		On exit  : 0/0
  5809 ;;		Unchanged: 0/0
  5810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5811 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5812 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5814 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5815 ;;Total ram usage:        8 bytes
  5816 ;; Hardware stack levels used:    1
  5817 ;; Hardware stack levels required when called:    6
  5818 ;; This function calls:
  5819 ;;		_utoa
  5820 ;; This function is called by:
  5821 ;;		_main
  5822 ;;		_OLED_Write_Integer
  5823 ;; This function uses a non-reentrant model
  5824 ;;
  5825                           
  5826                           
  5827                           ;psect for function _itoa
  5828  080C                     _itoa:	
  5829                           
  5830                           ;incstack = 0
  5831                           ; Regs used in _itoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5832  080C  0020               	movlb	0	; select bank0
  5833  080D  0842               	movf	itoa@buf+1,w
  5834  080E  00C8               	movwf	itoa@cp+1
  5835  080F  0841               	movf	itoa@buf,w
  5836  0810  00C7               	movwf	itoa@cp
  5837  0811  1FC4               	btfss	itoa@val+1,7
  5838  0812  2822               	goto	l3714
  5839  0813  0841               	movf	itoa@buf,w
  5840  0814  0086               	movwf	6
  5841  0815  0842               	movf	itoa@buf+1,w
  5842  0816  0087               	movwf	7
  5843  0817  302D               	movlw	45
  5844  0818  0081               	movwf	1
  5845  0819  3001               	movlw	1
  5846  081A  07C1               	addwf	itoa@buf,f
  5847  081B  3000               	movlw	0
  5848  081C  3DC2               	addwfc	itoa@buf+1,f
  5849  081D  09C3               	comf	itoa@val,f
  5850  081E  09C4               	comf	itoa@val+1,f
  5851  081F  0AC3               	incf	itoa@val,f
  5852  0820  1903               	skipnz
  5853  0821  0AC4               	incf	itoa@val+1,f
  5854  0822                     l3714:	
  5855  0822  0842               	movf	itoa@buf+1,w
  5856  0823  00B8               	movwf	utoa@buf+1
  5857  0824  0841               	movf	itoa@buf,w
  5858  0825  00B7               	movwf	utoa@buf
  5859  0826  0844               	movf	itoa@val+1,w
  5860  0827  00BA               	movwf	utoa@val+1
  5861  0828  0843               	movf	itoa@val,w
  5862  0829  00B9               	movwf	utoa@val
  5863  082A  0846               	movf	itoa@base+1,w
  5864  082B  00BC               	movwf	utoa@base+1
  5865  082C  0845               	movf	itoa@base,w
  5866  082D  00BB               	movwf	utoa@base
  5867  082E  318B  23B8         	fcall	_utoa
  5868  0830  0008               	return
  5869  0831                     __end_of_itoa:	
  5870                           ;	Return value of _itoa is never used
  5871                           
  5872                           
  5873                           	psect	text5
  5874  0BB8                     __ptext5:	
  5875 ;; *************** function _utoa *****************
  5876 ;; Defined at:
  5877 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\itoa.c"
  5878 ;; Parameters:    Size  Location     Type
  5879 ;;  buf             2   23[BANK0 ] PTR unsigned char 
  5880 ;;		 -> OLED_Write_Integer@s(20), dt_arr(5), hr_arr(8), min_arr(8), 
  5881 ;;		 -> month_arr(10), date_arr(10), hour_arr(10), minute_arr(10), 
  5882 ;;  val             2   25[BANK0 ] unsigned int 
  5883 ;;  base            2   27[BANK0 ] int 
  5884 ;; Auto vars:     Size  Location     Type
  5885 ;;  v               2   30[BANK0 ] unsigned int 
  5886 ;;  c               1   32[BANK0 ] unsigned char 
  5887 ;; Return value:  Size  Location     Type
  5888 ;;                  2   23[BANK0 ] PTR unsigned char 
  5889 ;; Registers used:
  5890 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5891 ;; Tracked objects:
  5892 ;;		On entry : 0/0
  5893 ;;		On exit  : 0/0
  5894 ;;		Unchanged: 0/0
  5895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5896 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5897 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5898 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5899 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5900 ;;Total ram usage:       10 bytes
  5901 ;; Hardware stack levels used:    1
  5902 ;; Hardware stack levels required when called:    5
  5903 ;; This function calls:
  5904 ;;		___lwdiv
  5905 ;;		___lwmod
  5906 ;; This function is called by:
  5907 ;;		_itoa
  5908 ;; This function uses a non-reentrant model
  5909 ;;
  5910                           
  5911                           
  5912                           ;psect for function _utoa
  5913  0BB8                     _utoa:	
  5914                           
  5915                           ;incstack = 0
  5916                           ; Regs used in _utoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5917  0BB8  0020               	movlb	0	; select bank0
  5918  0BB9  083A               	movf	utoa@val+1,w
  5919  0BBA  00BF               	movwf	utoa@v+1
  5920  0BBB  0839               	movf	utoa@val,w
  5921  0BBC  00BE               	movwf	utoa@v
  5922  0BBD                     l3520:	
  5923  0BBD  083C               	movf	utoa@base+1,w
  5924  0BBE  00B0               	movwf	___lwdiv@divisor+1
  5925  0BBF  083B               	movf	utoa@base,w
  5926  0BC0  00AF               	movwf	___lwdiv@divisor
  5927  0BC1  083F               	movf	utoa@v+1,w
  5928  0BC2  00B2               	movwf	___lwdiv@dividend+1
  5929  0BC3  083E               	movf	utoa@v,w
  5930  0BC4  00B1               	movwf	___lwdiv@dividend
  5931  0BC5  3189  21E6  318B   	fcall	___lwdiv
  5932  0BC8  0020               	movlb	0	; select bank0
  5933  0BC9  0830               	movf	?___lwdiv+1,w
  5934  0BCA  00BF               	movwf	utoa@v+1
  5935  0BCB  082F               	movf	?___lwdiv,w
  5936  0BCC  00BE               	movwf	utoa@v
  5937  0BCD  3001               	movlw	1
  5938  0BCE  07B7               	addwf	utoa@buf,f
  5939  0BCF  3000               	movlw	0
  5940  0BD0  3DB8               	addwfc	utoa@buf+1,f
  5941  0BD1  083E               	movf	utoa@v,w
  5942  0BD2  043F               	iorwf	utoa@v+1,w
  5943  0BD3  1D03               	btfss	3,2
  5944  0BD4  2BBD               	goto	l3520
  5945  0BD5  0837               	movf	utoa@buf,w
  5946  0BD6  0086               	movwf	6
  5947  0BD7  0838               	movf	utoa@buf+1,w
  5948  0BD8  0087               	movwf	7
  5949  0BD9  0181               	clrf	1
  5950  0BDA  3001               	movlw	1
  5951  0BDB  02B7               	subwf	utoa@buf,f
  5952  0BDC  3000               	movlw	0
  5953  0BDD  3BB8               	subwfb	utoa@buf+1,f
  5954  0BDE                     l3530:	
  5955  0BDE  083C               	movf	utoa@base+1,w
  5956  0BDF  00B0               	movwf	___lwmod@divisor+1
  5957  0BE0  083B               	movf	utoa@base,w
  5958  0BE1  00AF               	movwf	___lwmod@divisor
  5959  0BE2  083A               	movf	utoa@val+1,w
  5960  0BE3  00B2               	movwf	___lwmod@dividend+1
  5961  0BE4  0839               	movf	utoa@val,w
  5962  0BE5  00B1               	movwf	___lwmod@dividend
  5963  0BE6  3189  2125  318B   	fcall	___lwmod
  5964  0BE9  0020               	movlb	0	; select bank0
  5965  0BEA  082F               	movf	?___lwmod,w
  5966  0BEB  00BD               	movwf	??_utoa
  5967  0BEC  083D               	movf	??_utoa,w
  5968  0BED  00C0               	movwf	utoa@c
  5969  0BEE  083C               	movf	utoa@base+1,w
  5970  0BEF  00B0               	movwf	___lwdiv@divisor+1
  5971  0BF0  083B               	movf	utoa@base,w
  5972  0BF1  00AF               	movwf	___lwdiv@divisor
  5973  0BF2  083A               	movf	utoa@val+1,w
  5974  0BF3  00B2               	movwf	___lwdiv@dividend+1
  5975  0BF4  0839               	movf	utoa@val,w
  5976  0BF5  00B1               	movwf	___lwdiv@dividend
  5977  0BF6  3189  21E6  318B   	fcall	___lwdiv
  5978  0BF9  0020               	movlb	0	; select bank0
  5979  0BFA  0830               	movf	?___lwdiv+1,w
  5980  0BFB  00BA               	movwf	utoa@val+1
  5981  0BFC  082F               	movf	?___lwdiv,w
  5982  0BFD  00B9               	movwf	utoa@val
  5983  0BFE  300A               	movlw	10
  5984  0BFF  0240               	subwf	utoa@c,w
  5985  0C00  1C03               	skipc
  5986  0C01  2C06               	goto	l794
  5987  0C02  3007               	movlw	7
  5988  0C03  00BD               	movwf	??_utoa
  5989  0C04  083D               	movf	??_utoa,w
  5990  0C05  07C0               	addwf	utoa@c,f
  5991  0C06                     l794:	
  5992  0C06  3030               	movlw	48
  5993  0C07  00BD               	movwf	??_utoa
  5994  0C08  083D               	movf	??_utoa,w
  5995  0C09  07C0               	addwf	utoa@c,f
  5996  0C0A  0837               	movf	utoa@buf,w
  5997  0C0B  0086               	movwf	6
  5998  0C0C  0838               	movf	utoa@buf+1,w
  5999  0C0D  0087               	movwf	7
  6000  0C0E  0840               	movf	utoa@c,w
  6001  0C0F  0081               	movwf	1
  6002  0C10  3001               	movlw	1
  6003  0C11  02B7               	subwf	utoa@buf,f
  6004  0C12  3000               	movlw	0
  6005  0C13  3BB8               	subwfb	utoa@buf+1,f
  6006  0C14  0839               	movf	utoa@val,w
  6007  0C15  043A               	iorwf	utoa@val+1,w
  6008  0C16  1D03               	btfss	3,2
  6009  0C17  2BDE               	goto	l3530
  6010                           
  6011                           ;	Return value of _utoa is never used
  6012  0C18  3001               	movlw	1
  6013  0C19  07B7               	addwf	utoa@buf,f
  6014  0C1A  3000               	movlw	0
  6015  0C1B  3DB8               	addwfc	utoa@buf+1,f
  6016  0C1C  0008               	return
  6017  0C1D                     __end_of_utoa:	
  6018                           
  6019                           	psect	text6
  6020  0925                     __ptext6:	
  6021 ;; *************** function ___lwmod *****************
  6022 ;; Defined at:
  6023 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
  6024 ;; Parameters:    Size  Location     Type
  6025 ;;  divisor         2   15[BANK0 ] unsigned int 
  6026 ;;  dividend        2   17[BANK0 ] unsigned int 
  6027 ;; Auto vars:     Size  Location     Type
  6028 ;;  counter         1   20[BANK0 ] unsigned char 
  6029 ;; Return value:  Size  Location     Type
  6030 ;;                  2   15[BANK0 ] unsigned int 
  6031 ;; Registers used:
  6032 ;;		wreg, status,2, status,0
  6033 ;; Tracked objects:
  6034 ;;		On entry : 0/0
  6035 ;;		On exit  : 0/0
  6036 ;;		Unchanged: 0/0
  6037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6038 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6039 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6040 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6041 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6042 ;;Total ram usage:        6 bytes
  6043 ;; Hardware stack levels used:    1
  6044 ;; Hardware stack levels required when called:    4
  6045 ;; This function calls:
  6046 ;;		Nothing
  6047 ;; This function is called by:
  6048 ;;		_utoa
  6049 ;; This function uses a non-reentrant model
  6050 ;;
  6051                           
  6052                           
  6053                           ;psect for function ___lwmod
  6054  0925                     ___lwmod:	
  6055                           
  6056                           ;incstack = 0
  6057                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6058  0925  0020               	movlb	0	; select bank0
  6059  0926  082F               	movf	___lwmod@divisor,w
  6060  0927  0430               	iorwf	___lwmod@divisor+1,w
  6061  0928  1903               	btfsc	3,2
  6062  0929  294D               	goto	l3338
  6063  092A  01B4               	clrf	___lwmod@counter
  6064  092B  0AB4               	incf	___lwmod@counter,f
  6065  092C                     l3328:	
  6066  092C  1BB0               	btfsc	___lwmod@divisor+1,7
  6067  092D  2938               	goto	l3330
  6068  092E  3001               	movlw	1
  6069  092F                     u3215:	
  6070  092F  35AF               	lslf	___lwmod@divisor,f
  6071  0930  0DB0               	rlf	___lwmod@divisor+1,f
  6072  0931  0B89               	decfsz	9,f
  6073  0932  292F               	goto	u3215
  6074  0933  3001               	movlw	1
  6075  0934  00B3               	movwf	??___lwmod
  6076  0935  0833               	movf	??___lwmod,w
  6077  0936  07B4               	addwf	___lwmod@counter,f
  6078  0937  292C               	goto	l3328
  6079  0938                     l3330:	
  6080  0938  0830               	movf	___lwmod@divisor+1,w
  6081  0939  0232               	subwf	___lwmod@dividend+1,w
  6082  093A  1D03               	skipz
  6083  093B  293E               	goto	u3235
  6084  093C  082F               	movf	___lwmod@divisor,w
  6085  093D  0231               	subwf	___lwmod@dividend,w
  6086  093E                     u3235:	
  6087  093E  1C03               	skipc
  6088  093F  2944               	goto	l3334
  6089  0940  082F               	movf	___lwmod@divisor,w
  6090  0941  02B1               	subwf	___lwmod@dividend,f
  6091  0942  0830               	movf	___lwmod@divisor+1,w
  6092  0943  3BB2               	subwfb	___lwmod@dividend+1,f
  6093  0944                     l3334:	
  6094  0944  3001               	movlw	1
  6095  0945                     u3245:	
  6096  0945  36B0               	lsrf	___lwmod@divisor+1,f
  6097  0946  0CAF               	rrf	___lwmod@divisor,f
  6098  0947  0B89               	decfsz	9,f
  6099  0948  2945               	goto	u3245
  6100  0949  3001               	movlw	1
  6101  094A  02B4               	subwf	___lwmod@counter,f
  6102  094B  1D03               	btfss	3,2
  6103  094C  2938               	goto	l3330
  6104  094D                     l3338:	
  6105  094D  0832               	movf	___lwmod@dividend+1,w
  6106  094E  00B0               	movwf	?___lwmod+1
  6107  094F  0831               	movf	___lwmod@dividend,w
  6108  0950  00AF               	movwf	?___lwmod
  6109  0951  0008               	return
  6110  0952                     __end_of___lwmod:	
  6111                           
  6112                           	psect	text7
  6113  09E6                     __ptext7:	
  6114 ;; *************** function ___lwdiv *****************
  6115 ;; Defined at:
  6116 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  6117 ;; Parameters:    Size  Location     Type
  6118 ;;  divisor         2   15[BANK0 ] unsigned int 
  6119 ;;  dividend        2   17[BANK0 ] unsigned int 
  6120 ;; Auto vars:     Size  Location     Type
  6121 ;;  quotient        2   21[BANK0 ] unsigned int 
  6122 ;;  counter         1   20[BANK0 ] unsigned char 
  6123 ;; Return value:  Size  Location     Type
  6124 ;;                  2   15[BANK0 ] unsigned int 
  6125 ;; Registers used:
  6126 ;;		wreg, status,2, status,0
  6127 ;; Tracked objects:
  6128 ;;		On entry : 0/0
  6129 ;;		On exit  : 0/0
  6130 ;;		Unchanged: 0/0
  6131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6132 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6133 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6134 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6135 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6136 ;;Total ram usage:        8 bytes
  6137 ;; Hardware stack levels used:    1
  6138 ;; Hardware stack levels required when called:    4
  6139 ;; This function calls:
  6140 ;;		Nothing
  6141 ;; This function is called by:
  6142 ;;		_utoa
  6143 ;; This function uses a non-reentrant model
  6144 ;;
  6145                           
  6146                           
  6147                           ;psect for function ___lwdiv
  6148  09E6                     ___lwdiv:	
  6149                           
  6150                           ;incstack = 0
  6151                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6152  09E6  0020               	movlb	0	; select bank0
  6153  09E7  01B5               	clrf	___lwdiv@quotient
  6154  09E8  01B6               	clrf	___lwdiv@quotient+1
  6155  09E9  082F               	movf	___lwdiv@divisor,w
  6156  09EA  0430               	iorwf	___lwdiv@divisor+1,w
  6157  09EB  1903               	btfsc	3,2
  6158  09EC  2A16               	goto	l3316
  6159  09ED  01B4               	clrf	___lwdiv@counter
  6160  09EE  0AB4               	incf	___lwdiv@counter,f
  6161  09EF                     l3304:	
  6162  09EF  1BB0               	btfsc	___lwdiv@divisor+1,7
  6163  09F0  29FB               	goto	l3306
  6164  09F1  3001               	movlw	1
  6165  09F2                     u3145:	
  6166  09F2  35AF               	lslf	___lwdiv@divisor,f
  6167  09F3  0DB0               	rlf	___lwdiv@divisor+1,f
  6168  09F4  0B89               	decfsz	9,f
  6169  09F5  29F2               	goto	u3145
  6170  09F6  3001               	movlw	1
  6171  09F7  00B3               	movwf	??___lwdiv
  6172  09F8  0833               	movf	??___lwdiv,w
  6173  09F9  07B4               	addwf	___lwdiv@counter,f
  6174  09FA  29EF               	goto	l3304
  6175  09FB                     l3306:	
  6176  09FB  3001               	movlw	1
  6177  09FC                     u3165:	
  6178  09FC  35B5               	lslf	___lwdiv@quotient,f
  6179  09FD  0DB6               	rlf	___lwdiv@quotient+1,f
  6180  09FE  0B89               	decfsz	9,f
  6181  09FF  29FC               	goto	u3165
  6182  0A00  0830               	movf	___lwdiv@divisor+1,w
  6183  0A01  0232               	subwf	___lwdiv@dividend+1,w
  6184  0A02  1D03               	skipz
  6185  0A03  2A06               	goto	u3175
  6186  0A04  082F               	movf	___lwdiv@divisor,w
  6187  0A05  0231               	subwf	___lwdiv@dividend,w
  6188  0A06                     u3175:	
  6189  0A06  1C03               	skipc
  6190  0A07  2A0D               	goto	l3312
  6191  0A08  082F               	movf	___lwdiv@divisor,w
  6192  0A09  02B1               	subwf	___lwdiv@dividend,f
  6193  0A0A  0830               	movf	___lwdiv@divisor+1,w
  6194  0A0B  3BB2               	subwfb	___lwdiv@dividend+1,f
  6195  0A0C  1435               	bsf	___lwdiv@quotient,0
  6196  0A0D                     l3312:	
  6197  0A0D  3001               	movlw	1
  6198  0A0E                     u3185:	
  6199  0A0E  36B0               	lsrf	___lwdiv@divisor+1,f
  6200  0A0F  0CAF               	rrf	___lwdiv@divisor,f
  6201  0A10  0B89               	decfsz	9,f
  6202  0A11  2A0E               	goto	u3185
  6203  0A12  3001               	movlw	1
  6204  0A13  02B4               	subwf	___lwdiv@counter,f
  6205  0A14  1D03               	btfss	3,2
  6206  0A15  29FB               	goto	l3306
  6207  0A16                     l3316:	
  6208  0A16  0836               	movf	___lwdiv@quotient+1,w
  6209  0A17  00B0               	movwf	?___lwdiv+1
  6210  0A18  0835               	movf	___lwdiv@quotient,w
  6211  0A19  00AF               	movwf	?___lwdiv
  6212  0A1A  0008               	return
  6213  0A1B                     __end_of___lwdiv:	
  6214                           
  6215                           	psect	text8
  6216  0F13                     __ptext8:	
  6217 ;; *************** function _initMain *****************
  6218 ;; Defined at:
  6219 ;;		line 32 in file "setup.c"
  6220 ;; Parameters:    Size  Location     Type
  6221 ;;		None
  6222 ;; Auto vars:     Size  Location     Type
  6223 ;;  year            1   16[BANK1 ] unsigned char 
  6224 ;;  month           1   15[BANK1 ] unsigned char 
  6225 ;;  date            1   14[BANK1 ] unsigned char 
  6226 ;;  day             1   13[BANK1 ] unsigned char 
  6227 ;;  hr              1   12[BANK1 ] unsigned char 
  6228 ;;  min             1   11[BANK1 ] unsigned char 
  6229 ;;  sec             1   10[BANK1 ] unsigned char 
  6230 ;; Return value:  Size  Location     Type
  6231 ;;                  1    wreg      void 
  6232 ;; Registers used:
  6233 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6234 ;; Tracked objects:
  6235 ;;		On entry : 0/0
  6236 ;;		On exit  : 0/0
  6237 ;;		Unchanged: 0/0
  6238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6240 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  6241 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  6242 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  6243 ;;Total ram usage:       13 bytes
  6244 ;; Hardware stack levels used:    1
  6245 ;; Hardware stack levels required when called:    8
  6246 ;; This function calls:
  6247 ;;		_DS1302_Initialize
  6248 ;;		_EUSART_Initialize
  6249 ;;		_I2C_Init
  6250 ;;		_OLED_Clear
  6251 ;;		_OLED_Init
  6252 ;;		_OLED_Write_String
  6253 ;;		_OLED_YX
  6254 ;;		_internal_16
  6255 ;; This function is called by:
  6256 ;;		_main
  6257 ;; This function uses a non-reentrant model
  6258 ;;
  6259                           
  6260                           
  6261                           ;psect for function _initMain
  6262  0F13                     _initMain:	
  6263                           
  6264                           ;setup.c: 34: internal_16();
  6265                           
  6266                           ;incstack = 0
  6267                           ; Regs used in _initMain: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6268  0F13  3188  2003  318F   	fcall	_internal_16
  6269                           
  6270                           ;setup.c: 37: TRISBbits.TRISB2 = 0;
  6271  0F16  0021               	movlb	1	; select bank1
  6272  0F17  110D               	bcf	13,2	;volatile
  6273                           
  6274                           ;setup.c: 38: ANSELBbits.ANSB2 = 0;
  6275  0F18  0023               	movlb	3	; select bank3
  6276  0F19  110D               	bcf	13,2	;volatile
  6277                           
  6278                           ;setup.c: 40: TRISBbits.TRISB3 = 1;
  6279  0F1A  0021               	movlb	1	; select bank1
  6280  0F1B  158D               	bsf	13,3	;volatile
  6281                           
  6282                           ;setup.c: 41: ANSELBbits.ANSB3 = 0;
  6283  0F1C  0023               	movlb	3	; select bank3
  6284  0F1D  118D               	bcf	13,3	;volatile
  6285                           
  6286                           ;setup.c: 49: ANSELCbits.ANSC4 = 0;
  6287  0F1E  120E               	bcf	14,4	;volatile
  6288                           
  6289                           ;setup.c: 50: ANSELCbits.ANSC5 = 0;
  6290  0F1F  128E               	bcf	14,5	;volatile
  6291                           
  6292                           ;setup.c: 52: TRISCbits.TRISC4 = 1;
  6293  0F20  0021               	movlb	1	; select bank1
  6294  0F21  160E               	bsf	14,4	;volatile
  6295                           
  6296                           ;setup.c: 53: TRISCbits.TRISC5 = 1;
  6297  0F22  168E               	bsf	14,5	;volatile
  6298                           
  6299                           ;setup.c: 55: PPSLOCK = 0x55;
  6300  0F23  3055               	movlw	85
  6301  0F24  003C               	movlb	28	; select bank28
  6302  0F25  008F               	movwf	15	;volatile
  6303                           
  6304                           ;setup.c: 56: PPSLOCK = 0xAA;
  6305  0F26  30AA               	movlw	170
  6306  0F27  008F               	movwf	15	;volatile
  6307                           
  6308                           ;setup.c: 57: PPSLOCKbits.PPSLOCKED = 0x00;
  6309  0F28  100F               	bcf	15,0	;volatile
  6310                           
  6311                           ;setup.c: 59: RC4PPSbits.RC4PPS = 0x0011;
  6312  0F29  003D               	movlb	29	; select bank29
  6313  0F2A  0824               	movf	36,w	;volatile
  6314  0F2B  39E0               	andlw	-32
  6315  0F2C  3811               	iorlw	17
  6316  0F2D  00A4               	movwf	36	;volatile
  6317                           
  6318                           ;setup.c: 60: SSPDATPPSbits.SSPDATPPS = 0x0014;
  6319  0F2E  003C               	movlb	28	; select bank28
  6320  0F2F  0821               	movf	33,w	;volatile
  6321  0F30  39E0               	andlw	-32
  6322  0F31  3814               	iorlw	20
  6323  0F32  00A1               	movwf	33	;volatile
  6324                           
  6325                           ;setup.c: 61: SSPCLKPPSbits.SSPCLKPPS = 0x0015;
  6326  0F33  0820               	movf	32,w	;volatile
  6327  0F34  39E0               	andlw	-32
  6328  0F35  3815               	iorlw	21
  6329  0F36  00A0               	movwf	32	;volatile
  6330                           
  6331                           ;setup.c: 62: RC5PPSbits.RC5PPS = 0x0010;
  6332  0F37  003D               	movlb	29	; select bank29
  6333  0F38  0825               	movf	37,w	;volatile
  6334  0F39  39E0               	andlw	-32
  6335  0F3A  3810               	iorlw	16
  6336  0F3B  00A5               	movwf	37	;volatile
  6337                           
  6338                           ;setup.c: 64: RB2PPSbits.RB2PPS = 0x14;
  6339  0F3C  081A               	movf	26,w	;volatile
  6340  0F3D  39E0               	andlw	-32
  6341  0F3E  3814               	iorlw	20
  6342  0F3F  009A               	movwf	26	;volatile
  6343                           
  6344                           ;setup.c: 65: RXPPSbits.RXPPS = 0x0B;
  6345  0F40  003C               	movlb	28	; select bank28
  6346  0F41  0824               	movf	36,w	;volatile
  6347  0F42  39E0               	andlw	-32
  6348  0F43  380B               	iorlw	11
  6349  0F44  00A4               	movwf	36	;volatile
  6350                           
  6351                           ;setup.c: 67: PPSLOCK = 0x55;
  6352  0F45  3055               	movlw	85
  6353  0F46  008F               	movwf	15	;volatile
  6354                           
  6355                           ;setup.c: 68: PPSLOCK = 0xAA;
  6356  0F47  30AA               	movlw	170
  6357  0F48  008F               	movwf	15	;volatile
  6358                           
  6359                           ;setup.c: 69: PPSLOCKbits.PPSLOCKED = 0x01;
  6360  0F49  140F               	bsf	15,0	;volatile
  6361                           
  6362                           ;setup.c: 72: TRISD = 0;
  6363  0F4A  0021               	movlb	1	; select bank1
  6364  0F4B  018F               	clrf	15	;volatile
  6365                           
  6366                           ;setup.c: 73: ANSELD = 0;
  6367  0F4C  0023               	movlb	3	; select bank3
  6368  0F4D  018F               	clrf	15	;volatile
  6369                           
  6370                           ;setup.c: 76: I2C_Init();
  6371  0F4E  3196  2632  318F   	fcall	_I2C_Init
  6372                           
  6373                           ;setup.c: 78: _delay((unsigned long)((500)*(16000000/4000.0)));
  6374  0F51  300B               	movlw	11
  6375  0F52  0021               	movlb	1	; select bank1
  6376  0F53  00DD               	movwf	(??_initMain^(0+128)+1)
  6377  0F54  3026               	movlw	38
  6378  0F55  00DC               	movwf	??_initMain^(0+128)
  6379  0F56  305D               	movlw	93
  6380  0F57                     u3797:	
  6381  0F57  0B89               	decfsz	9,f
  6382  0F58  2F57               	goto	u3797
  6383  0F59  0BDC               	decfsz	??_initMain^(0+128),f
  6384  0F5A  2F57               	goto	u3797
  6385  0F5B  0BDD               	decfsz	(??_initMain^(0+128)+1),f
  6386  0F5C  2F57               	goto	u3797
  6387  0F5D  3200               	nop2
  6388                           
  6389                           ;setup.c: 81: OLED_Init();
  6390  0F5E  318A  22EF  318F   	fcall	_OLED_Init
  6391                           
  6392                           ;setup.c: 83: _delay((unsigned long)((500)*(16000000/4000.0)));
  6393  0F61  300B               	movlw	11
  6394  0F62  0021               	movlb	1	; select bank1
  6395  0F63  00DD               	movwf	(??_initMain^(0+128)+1)
  6396  0F64  3026               	movlw	38
  6397  0F65  00DC               	movwf	??_initMain^(0+128)
  6398  0F66  305D               	movlw	93
  6399  0F67                     u3807:	
  6400  0F67  0B89               	decfsz	9,f
  6401  0F68  2F67               	goto	u3807
  6402  0F69  0BDC               	decfsz	??_initMain^(0+128),f
  6403  0F6A  2F67               	goto	u3807
  6404  0F6B  0BDD               	decfsz	(??_initMain^(0+128)+1),f
  6405  0F6C  2F67               	goto	u3807
  6406  0F6D  3200               	nop2
  6407                           
  6408                           ;setup.c: 86: OLED_YX(0, 0);
  6409  0F6E  0020               	movlb	0	; select bank0
  6410  0F6F  01B4               	clrf	OLED_YX@Column
  6411  0F70  3000               	movlw	0
  6412  0F71  3188  20CE  318F   	fcall	_OLED_YX
  6413                           
  6414                           ;setup.c: 87: OLED_Write_String("Init");
  6415  0F74  307C               	movlw	low (STR_44| (0+32768))
  6416  0F75  0020               	movlb	0	; select bank0
  6417  0F76  00CF               	movwf	OLED_Write_String@s
  6418  0F77  3085               	movlw	high (STR_44| (0+32768))
  6419  0F78  00D0               	movwf	OLED_Write_String@s+1
  6420  0F79  3196  2680  318F   	fcall	_OLED_Write_String
  6421                           
  6422                           ;setup.c: 89: _delay((unsigned long)((1000)*(16000000/4000.0)));
  6423  0F7C  3015               	movlw	21
  6424  0F7D  0021               	movlb	1	; select bank1
  6425  0F7E  00DD               	movwf	(??_initMain^(0+128)+1)
  6426  0F7F  304B               	movlw	75
  6427  0F80  00DC               	movwf	??_initMain^(0+128)
  6428  0F81  30BE               	movlw	190
  6429  0F82                     u3817:	
  6430  0F82  0B89               	decfsz	9,f
  6431  0F83  2F82               	goto	u3817
  6432  0F84  0BDC               	decfsz	??_initMain^(0+128),f
  6433  0F85  2F82               	goto	u3817
  6434  0F86  0BDD               	decfsz	(??_initMain^(0+128)+1),f
  6435  0F87  2F82               	goto	u3817
  6436  0F88  0000               	nop
  6437                           
  6438                           ;setup.c: 92: OLED_Clear();
  6439  0F89  3189  2180  318F   	fcall	_OLED_Clear
  6440                           
  6441                           ;setup.c: 94: _delay((unsigned long)((500)*(16000000/4000.0)));
  6442  0F8C  300B               	movlw	11
  6443  0F8D  0021               	movlb	1	; select bank1
  6444  0F8E  00DD               	movwf	(??_initMain^(0+128)+1)
  6445  0F8F  3026               	movlw	38
  6446  0F90  00DC               	movwf	??_initMain^(0+128)
  6447  0F91  305D               	movlw	93
  6448  0F92                     u3827:	
  6449  0F92  0B89               	decfsz	9,f
  6450  0F93  2F92               	goto	u3827
  6451  0F94  0BDC               	decfsz	??_initMain^(0+128),f
  6452  0F95  2F92               	goto	u3827
  6453  0F96  0BDD               	decfsz	(??_initMain^(0+128)+1),f
  6454  0F97  2F92               	goto	u3827
  6455  0F98  3200               	nop2
  6456                           
  6457                           ;setup.c: 98: byte sec = 51;
  6458  0F99  3033               	movlw	51
  6459  0F9A  0021               	movlb	1	; select bank1
  6460  0F9B  00DC               	movwf	??_initMain^(0+128)
  6461  0F9C  085C               	movf	??_initMain^(0+128),w
  6462  0F9D  00E2               	movwf	initMain@sec^(0+128)
  6463                           
  6464                           ;setup.c: 99: byte min = 59;
  6465  0F9E  303B               	movlw	59
  6466  0F9F  00DC               	movwf	??_initMain^(0+128)
  6467  0FA0  085C               	movf	??_initMain^(0+128),w
  6468  0FA1  00E3               	movwf	initMain@min^(0+128)
  6469                           
  6470                           ;setup.c: 100: byte hr = 23;
  6471  0FA2  3017               	movlw	23
  6472  0FA3  00DC               	movwf	??_initMain^(0+128)
  6473  0FA4  085C               	movf	??_initMain^(0+128),w
  6474  0FA5  00E4               	movwf	initMain@hr^(0+128)
  6475                           
  6476                           ;setup.c: 101: byte day = 2;
  6477  0FA6  3002               	movlw	2
  6478  0FA7  00DC               	movwf	??_initMain^(0+128)
  6479  0FA8  085C               	movf	??_initMain^(0+128),w
  6480  0FA9  00E5               	movwf	initMain@day^(0+128)
  6481                           
  6482                           ;setup.c: 102: byte date = 30;
  6483  0FAA  301E               	movlw	30
  6484  0FAB  00DC               	movwf	??_initMain^(0+128)
  6485  0FAC  085C               	movf	??_initMain^(0+128),w
  6486  0FAD  00E6               	movwf	initMain@date^(0+128)
  6487                           
  6488                           ;setup.c: 103: byte month = 4;
  6489  0FAE  3004               	movlw	4
  6490  0FAF  00DC               	movwf	??_initMain^(0+128)
  6491  0FB0  085C               	movf	??_initMain^(0+128),w
  6492  0FB1  00E7               	movwf	initMain@month^(0+128)
  6493                           
  6494                           ;setup.c: 104: byte year = 17;
  6495  0FB2  3011               	movlw	17
  6496  0FB3  00DC               	movwf	??_initMain^(0+128)
  6497  0FB4  085C               	movf	??_initMain^(0+128),w
  6498  0FB5  00E8               	movwf	initMain@year^(0+128)
  6499                           
  6500                           ;setup.c: 107: DS1302_Initialize(sec, min, hr, day, date, month, year);
  6501  0FB6  0863               	movf	initMain@min^(0+128),w
  6502  0FB7  00DC               	movwf	??_initMain^(0+128)
  6503  0FB8  085C               	movf	??_initMain^(0+128),w
  6504  0FB9  0020               	movlb	0	; select bank0
  6505  0FBA  00BE               	movwf	DS1302_Initialize@min
  6506  0FBB  0021               	movlb	1	; select bank1
  6507  0FBC  0864               	movf	initMain@hr^(0+128),w
  6508  0FBD  00DD               	movwf	(??_initMain+1)^(0+128)
  6509  0FBE  085D               	movf	(??_initMain+1)^(0+128),w
  6510  0FBF  0020               	movlb	0	; select bank0
  6511  0FC0  00BF               	movwf	DS1302_Initialize@hr
  6512  0FC1  0021               	movlb	1	; select bank1
  6513  0FC2  0865               	movf	initMain@day^(0+128),w
  6514  0FC3  00DE               	movwf	(??_initMain+2)^(0+128)
  6515  0FC4  085E               	movf	(??_initMain+2)^(0+128),w
  6516  0FC5  0020               	movlb	0	; select bank0
  6517  0FC6  00C0               	movwf	DS1302_Initialize@day
  6518  0FC7  0021               	movlb	1	; select bank1
  6519  0FC8  0866               	movf	initMain@date^(0+128),w
  6520  0FC9  00DF               	movwf	(??_initMain+3)^(0+128)
  6521  0FCA  085F               	movf	(??_initMain+3)^(0+128),w
  6522  0FCB  0020               	movlb	0	; select bank0
  6523  0FCC  00C1               	movwf	DS1302_Initialize@date
  6524  0FCD  0021               	movlb	1	; select bank1
  6525  0FCE  0867               	movf	initMain@month^(0+128),w
  6526  0FCF  00E0               	movwf	(??_initMain+4)^(0+128)
  6527  0FD0  0860               	movf	(??_initMain+4)^(0+128),w
  6528  0FD1  0020               	movlb	0	; select bank0
  6529  0FD2  00C2               	movwf	DS1302_Initialize@mth
  6530  0FD3  0021               	movlb	1	; select bank1
  6531  0FD4  0868               	movf	initMain@year^(0+128),w
  6532  0FD5  00E1               	movwf	(??_initMain+5)^(0+128)
  6533  0FD6  0861               	movf	(??_initMain+5)^(0+128),w
  6534  0FD7  0020               	movlb	0	; select bank0
  6535  0FD8  00C3               	movwf	DS1302_Initialize@year
  6536  0FD9  0021               	movlb	1	; select bank1
  6537  0FDA  0862               	movf	initMain@sec^(0+128),w
  6538  0FDB  318D  2568  318F   	fcall	_DS1302_Initialize
  6539                           
  6540                           ;setup.c: 110: EUSART_Initialize(9600);
  6541  0FDE  3000               	movlw	0
  6542  0FDF  0020               	movlb	0	; select bank0
  6543  0FE0  00C1               	movwf	EUSART_Initialize@baudrate+3
  6544  0FE1  3000               	movlw	0
  6545  0FE2  00C0               	movwf	EUSART_Initialize@baudrate+2
  6546  0FE3  3025               	movlw	37
  6547  0FE4  00BF               	movwf	EUSART_Initialize@baudrate+1
  6548  0FE5  3080               	movlw	128
  6549  0FE6  00BE               	movwf	EUSART_Initialize@baudrate
  6550  0FE7  318E  266B  318F   	fcall	_EUSART_Initialize
  6551                           
  6552                           ;setup.c: 111: _delay((unsigned long)((2000)*(16000000/4000.0)));
  6553  0FEA  3029               	movlw	41
  6554  0FEB  0021               	movlb	1	; select bank1
  6555  0FEC  00DD               	movwf	(??_initMain^(0+128)+1)
  6556  0FED  3096               	movlw	150
  6557  0FEE  00DC               	movwf	??_initMain^(0+128)
  6558  0FEF  307F               	movlw	127
  6559  0FF0                     u3837:	
  6560  0FF0  0B89               	decfsz	9,f
  6561  0FF1  2FF0               	goto	u3837
  6562  0FF2  0BDC               	decfsz	??_initMain^(0+128),f
  6563  0FF3  2FF0               	goto	u3837
  6564  0FF4  0BDD               	decfsz	(??_initMain^(0+128)+1),f
  6565  0FF5  2FF0               	goto	u3837
  6566                           
  6567                           ;setup.c: 114: OLED_Clear();
  6568  0FF6  3189  2180         	fcall	_OLED_Clear
  6569                           
  6570                           ;setup.c: 121: OPTION_REGbits.TMR0CS = 0;
  6571  0FF8  0021               	movlb	1	; select bank1
  6572  0FF9  1295               	bcf	21,5	;volatile
  6573                           
  6574                           ;setup.c: 124: OPTION_REGbits.PSA = 0;
  6575  0FFA  1195               	bcf	21,3	;volatile
  6576                           
  6577                           ;setup.c: 127: OPTION_REGbits.PS = 0b111;
  6578  0FFB  3007               	movlw	7
  6579  0FFC  0495               	iorwf	21,f	;volatile
  6580                           
  6581                           ;setup.c: 130: INTCONbits.TMR0IE = 1;
  6582  0FFD  168B               	bsf	11,5	;volatile
  6583                           
  6584                           ;setup.c: 133: (GIE = 1);
  6585  0FFE  178B               	bsf	11,7	;volatile
  6586  0FFF  0008               	return
  6587  1000                     __end_of_initMain:	
  6588                           
  6589                           	psect	text9
  6590  0803                     __ptext9:	
  6591 ;; *************** function _internal_16 *****************
  6592 ;; Defined at:
  6593 ;;		line 56 in file "16F1717_Internal.c"
  6594 ;; Parameters:    Size  Location     Type
  6595 ;;		None
  6596 ;; Auto vars:     Size  Location     Type
  6597 ;;		None
  6598 ;; Return value:  Size  Location     Type
  6599 ;;                  1    wreg      void 
  6600 ;; Registers used:
  6601 ;;		None
  6602 ;; Tracked objects:
  6603 ;;		On entry : 0/0
  6604 ;;		On exit  : 0/0
  6605 ;;		Unchanged: 0/0
  6606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6611 ;;Total ram usage:        0 bytes
  6612 ;; Hardware stack levels used:    1
  6613 ;; Hardware stack levels required when called:    4
  6614 ;; This function calls:
  6615 ;;		Nothing
  6616 ;; This function is called by:
  6617 ;;		_initMain
  6618 ;; This function uses a non-reentrant model
  6619 ;;
  6620                           
  6621                           
  6622                           ;psect for function _internal_16
  6623  0803                     _internal_16:	
  6624                           
  6625                           ;16F1717_Internal.c: 58: SCS0 = 0;
  6626                           
  6627                           ;incstack = 0
  6628                           ; Regs used in _internal_16: []
  6629  0803  0021               	movlb	1	; select bank1
  6630  0804  1019               	bcf	25,0	;volatile
  6631                           
  6632                           ;16F1717_Internal.c: 59: SCS1 = 0;
  6633  0805  1099               	bcf	25,1	;volatile
  6634                           
  6635                           ;16F1717_Internal.c: 62: IRCF0 = 1;
  6636  0806  1599               	bsf	25,3	;volatile
  6637                           
  6638                           ;16F1717_Internal.c: 63: IRCF1 = 1;
  6639  0807  1619               	bsf	25,4	;volatile
  6640                           
  6641                           ;16F1717_Internal.c: 64: IRCF2 = 1;
  6642  0808  1699               	bsf	25,5	;volatile
  6643                           
  6644                           ;16F1717_Internal.c: 65: IRCF3 = 1;
  6645  0809  1719               	bsf	25,6	;volatile
  6646                           
  6647                           ;16F1717_Internal.c: 68: SPLLEN = 0;
  6648  080A  1399               	bcf	25,7	;volatile
  6649  080B  0008               	return
  6650  080C                     __end_of_internal_16:	
  6651                           
  6652                           	psect	text10
  6653  1680                     __ptext10:	
  6654 ;; *************** function _OLED_Write_String *****************
  6655 ;; Defined at:
  6656 ;;		line 284 in file "oled.c"
  6657 ;; Parameters:    Size  Location     Type
  6658 ;;  s               2   47[BANK0 ] PTR unsigned char 
  6659 ;;		 -> ftoa@buf(17), STR_44(5), STR_43(6), STR_42(6), 
  6660 ;;		 -> OLED_Write_Integer@s(20), 
  6661 ;; Auto vars:     Size  Location     Type
  6662 ;;		None
  6663 ;; Return value:  Size  Location     Type
  6664 ;;                  1    wreg      void 
  6665 ;; Registers used:
  6666 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6667 ;; Tracked objects:
  6668 ;;		On entry : 0/0
  6669 ;;		On exit  : 0/0
  6670 ;;		Unchanged: 0/0
  6671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6672 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6674 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6675 ;;      Totals:         0       2       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6676 ;;Total ram usage:        3 bytes
  6677 ;; Hardware stack levels used:    1
  6678 ;; Hardware stack levels required when called:    6
  6679 ;; This function calls:
  6680 ;;		_OLED_PutChar
  6681 ;; This function is called by:
  6682 ;;		_initMain
  6683 ;;		_OLED_Write_Integer
  6684 ;;		_OLED_Write_Float
  6685 ;; This function uses a non-reentrant model
  6686 ;;
  6687                           
  6688                           
  6689                           ;psect for function _OLED_Write_String
  6690  1680                     _OLED_Write_String:	
  6691  1680                     l3482:	
  6692                           ;oled.c: 286: while (*s) OLED_PutChar( *s++);
  6693                           
  6694                           ;incstack = 0
  6695                           ; Regs used in _OLED_Write_String: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6696                           
  6697  1680  0020               	movlb	0	; select bank0
  6698  1681  084F               	movf	OLED_Write_String@s,w
  6699  1682  0084               	movwf	4
  6700  1683  0850               	movf	OLED_Write_String@s+1,w
  6701  1684  0085               	movwf	5
  6702  1685  0012               	moviw fsr0++
  6703  1686  1903               	btfsc	3,2
  6704  1687  0008               	return
  6705  1688  0020               	movlb	0	; select bank0
  6706  1689  084F               	movf	OLED_Write_String@s,w
  6707  168A  0084               	movwf	4
  6708  168B  0850               	movf	OLED_Write_String@s+1,w
  6709  168C  0085               	movwf	5
  6710  168D  0800               	movf	0,w	;code access
  6711  168E  318C  24EC  3196   	fcall	_OLED_PutChar
  6712  1691  3001               	movlw	1
  6713  1692  0020               	movlb	0	; select bank0
  6714  1693  07CF               	addwf	OLED_Write_String@s,f
  6715  1694  3000               	movlw	0
  6716  1695  3DD0               	addwfc	OLED_Write_String@s+1,f
  6717  1696  2E80               	goto	l3482
  6718  1697                     __end_of_OLED_Write_String:	
  6719                           
  6720                           	psect	text11
  6721  0AEF                     __ptext11:	
  6722 ;; *************** function _OLED_Init *****************
  6723 ;; Defined at:
  6724 ;;		line 174 in file "oled.c"
  6725 ;; Parameters:    Size  Location     Type
  6726 ;;		None
  6727 ;; Auto vars:     Size  Location     Type
  6728 ;;		None
  6729 ;; Return value:  Size  Location     Type
  6730 ;;                  1    wreg      void 
  6731 ;; Registers used:
  6732 ;;		wreg, status,2, status,0, pclath, cstack
  6733 ;; Tracked objects:
  6734 ;;		On entry : 0/0
  6735 ;;		On exit  : 0/0
  6736 ;;		Unchanged: 0/0
  6737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6742 ;;Total ram usage:        0 bytes
  6743 ;; Hardware stack levels used:    1
  6744 ;; Hardware stack levels required when called:    6
  6745 ;; This function calls:
  6746 ;;		_OLED_Command
  6747 ;; This function is called by:
  6748 ;;		_initMain
  6749 ;; This function uses a non-reentrant model
  6750 ;;
  6751                           
  6752                           
  6753                           ;psect for function _OLED_Init
  6754  0AEF                     _OLED_Init:	
  6755                           
  6756                           ;oled.c: 176: OLED_Command(0xAE);
  6757                           
  6758                           ;incstack = 0
  6759                           ; Regs used in _OLED_Init: [wreg+status,2+status,0+pclath+cstack]
  6760  0AEF  30AE               	movlw	174
  6761  0AF0  3197  2794  318A   	fcall	_OLED_Command
  6762                           
  6763                           ;oled.c: 177: OLED_Command(0xD5);
  6764  0AF3  30D5               	movlw	213
  6765  0AF4  3197  2794  318A   	fcall	_OLED_Command
  6766                           
  6767                           ;oled.c: 178: OLED_Command(0x80);
  6768  0AF7  3080               	movlw	128
  6769  0AF8  3197  2794  318A   	fcall	_OLED_Command
  6770                           
  6771                           ;oled.c: 179: OLED_Command(0xA8);
  6772  0AFB  30A8               	movlw	168
  6773  0AFC  3197  2794  318A   	fcall	_OLED_Command
  6774                           
  6775                           ;oled.c: 180: OLED_Command(0x1F);
  6776  0AFF  301F               	movlw	31
  6777  0B00  3197  2794  318A   	fcall	_OLED_Command
  6778                           
  6779                           ;oled.c: 181: OLED_Command(0xD3);
  6780  0B03  30D3               	movlw	211
  6781  0B04  3197  2794  318A   	fcall	_OLED_Command
  6782                           
  6783                           ;oled.c: 182: OLED_Command(0x0);
  6784  0B07  3000               	movlw	0
  6785  0B08  3197  2794  318A   	fcall	_OLED_Command
  6786                           
  6787                           ;oled.c: 183: OLED_Command(0x40 | 0x0);
  6788  0B0B  3040               	movlw	64
  6789  0B0C  3197  2794  318A   	fcall	_OLED_Command
  6790                           
  6791                           ;oled.c: 184: OLED_Command(0x8D);
  6792  0B0F  308D               	movlw	141
  6793  0B10  3197  2794  318A   	fcall	_OLED_Command
  6794                           
  6795                           ;oled.c: 185: OLED_Command(0xAF);
  6796  0B13  30AF               	movlw	175
  6797  0B14  3197  2794  318A   	fcall	_OLED_Command
  6798                           
  6799                           ;oled.c: 186: OLED_Command(0x20);
  6800  0B17  3020               	movlw	32
  6801  0B18  3197  2794  318A   	fcall	_OLED_Command
  6802                           
  6803                           ;oled.c: 187: OLED_Command(0x00);
  6804  0B1B  3000               	movlw	0
  6805  0B1C  3197  2794  318A   	fcall	_OLED_Command
  6806                           
  6807                           ;oled.c: 188: OLED_Command(0xA0 | 0x1);
  6808  0B1F  30A1               	movlw	161
  6809  0B20  3197  2794  318A   	fcall	_OLED_Command
  6810                           
  6811                           ;oled.c: 189: OLED_Command(0xC8);
  6812  0B23  30C8               	movlw	200
  6813  0B24  3197  2794  318A   	fcall	_OLED_Command
  6814                           
  6815                           ;oled.c: 190: OLED_Command(0xDA);
  6816  0B27  30DA               	movlw	218
  6817  0B28  3197  2794  318A   	fcall	_OLED_Command
  6818                           
  6819                           ;oled.c: 191: OLED_Command(0x02);
  6820  0B2B  3002               	movlw	2
  6821  0B2C  3197  2794  318A   	fcall	_OLED_Command
  6822                           
  6823                           ;oled.c: 192: OLED_Command(0x81);
  6824  0B2F  3081               	movlw	129
  6825  0B30  3197  2794  318A   	fcall	_OLED_Command
  6826                           
  6827                           ;oled.c: 193: OLED_Command(0x8F);
  6828  0B33  308F               	movlw	143
  6829  0B34  3197  2794  318A   	fcall	_OLED_Command
  6830                           
  6831                           ;oled.c: 194: OLED_Command(0xD9);
  6832  0B37  30D9               	movlw	217
  6833  0B38  3197  2794  318A   	fcall	_OLED_Command
  6834                           
  6835                           ;oled.c: 195: OLED_Command(0xF1);
  6836  0B3B  30F1               	movlw	241
  6837  0B3C  3197  2794  318A   	fcall	_OLED_Command
  6838                           
  6839                           ;oled.c: 196: OLED_Command(0xDB);
  6840  0B3F  30DB               	movlw	219
  6841  0B40  3197  2794  318A   	fcall	_OLED_Command
  6842                           
  6843                           ;oled.c: 197: OLED_Command(0x40);
  6844  0B43  3040               	movlw	64
  6845  0B44  3197  2794  318A   	fcall	_OLED_Command
  6846                           
  6847                           ;oled.c: 198: OLED_Command(0xA4);
  6848  0B47  30A4               	movlw	164
  6849  0B48  3197  2794  318A   	fcall	_OLED_Command
  6850                           
  6851                           ;oled.c: 199: OLED_Command(0xA6);
  6852  0B4B  30A6               	movlw	166
  6853  0B4C  3197  2794  318A   	fcall	_OLED_Command
  6854                           
  6855                           ;oled.c: 200: OLED_Command(0xAF);
  6856  0B4F  30AF               	movlw	175
  6857  0B50  3197  2794         	fcall	_OLED_Command
  6858  0B52  0008               	return
  6859  0B53                     __end_of_OLED_Init:	
  6860                           
  6861                           	psect	text12
  6862  0980                     __ptext12:	
  6863 ;; *************** function _OLED_Clear *****************
  6864 ;; Defined at:
  6865 ;;		line 264 in file "oled.c"
  6866 ;; Parameters:    Size  Location     Type
  6867 ;;		None
  6868 ;; Auto vars:     Size  Location     Type
  6869 ;;  col             2    2[BANK1 ] unsigned int 
  6870 ;;  row             2    0[BANK1 ] unsigned int 
  6871 ;; Return value:  Size  Location     Type
  6872 ;;                  1    wreg      void 
  6873 ;; Registers used:
  6874 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6875 ;; Tracked objects:
  6876 ;;		On entry : 0/0
  6877 ;;		On exit  : 0/0
  6878 ;;		Unchanged: 0/0
  6879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6881 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6882 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6883 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6884 ;;Total ram usage:        5 bytes
  6885 ;; Hardware stack levels used:    1
  6886 ;; Hardware stack levels required when called:    7
  6887 ;; This function calls:
  6888 ;;		_OLED_PutChar
  6889 ;;		_OLED_YX
  6890 ;; This function is called by:
  6891 ;;		_initMain
  6892 ;; This function uses a non-reentrant model
  6893 ;;
  6894                           
  6895                           
  6896                           ;psect for function _OLED_Clear
  6897  0980                     _OLED_Clear:	
  6898                           
  6899                           ;oled.c: 266: for ( uint16_t row = 0; row < 8; row++ ) {
  6900                           
  6901                           ;incstack = 0
  6902                           ; Regs used in _OLED_Clear: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6903  0980  0021               	movlb	1	; select bank1
  6904  0981  01D8               	clrf	OLED_Clear@row^(0+128)
  6905  0982  01D9               	clrf	(OLED_Clear@row+1)^(0+128)
  6906  0983                     L1:	
  6907  0983  3000               	movlw	0
  6908  0984  0259               	subwf	(OLED_Clear@row+1)^(0+128),w
  6909  0985  3008               	movlw	8
  6910  0986  1903               	skipnz
  6911  0987  0258               	subwf	OLED_Clear@row^(0+128),w
  6912  0988  1803               	btfsc	3,0
  6913  0989  0008               	return
  6914                           
  6915                           ;oled.c: 267: for ( uint16_t col = 0; col < 16; col++ ) {
  6916  098A  01DA               	clrf	OLED_Clear@col^(0+128)
  6917  098B  01DB               	clrf	(OLED_Clear@col+1)^(0+128)
  6918  098C  3000               	movlw	0
  6919  098D  025B               	subwf	(OLED_Clear@col+1)^(0+128),w
  6920  098E  3010               	movlw	16
  6921  098F  1903               	skipnz
  6922  0990  025A               	subwf	OLED_Clear@col^(0+128),w
  6923  0991  1803               	btfsc	3,0
  6924  0992  29AD               	goto	l3474
  6925  0993                     l3466:	
  6926                           
  6927                           ;oled.c: 268: OLED_YX( row, col );
  6928  0993  085A               	movf	OLED_Clear@col^(0+128),w
  6929  0994  0020               	movlb	0	; select bank0
  6930  0995  00CF               	movwf	??_OLED_Clear
  6931  0996  084F               	movf	??_OLED_Clear,w
  6932  0997  00B4               	movwf	OLED_YX@Column
  6933  0998  0021               	movlb	1	; select bank1
  6934  0999  0858               	movf	OLED_Clear@row^(0+128),w
  6935  099A  3188  20CE  3189   	fcall	_OLED_YX
  6936                           
  6937                           ;oled.c: 269: OLED_PutChar(' ');
  6938  099D  3020               	movlw	32
  6939  099E  318C  24EC  3189   	fcall	_OLED_PutChar
  6940  09A1  3001               	movlw	1
  6941  09A2  0021               	movlb	1	; select bank1
  6942  09A3  07DA               	addwf	OLED_Clear@col^(0+128),f
  6943  09A4  3000               	movlw	0
  6944  09A5  3DDB               	addwfc	(OLED_Clear@col+1)^(0+128),f
  6945  09A6  3000               	movlw	0
  6946  09A7  025B               	subwf	(OLED_Clear@col+1)^(0+128),w
  6947  09A8  3010               	movlw	16
  6948  09A9  1903               	skipnz
  6949  09AA  025A               	subwf	OLED_Clear@col^(0+128),w
  6950  09AB  1C03               	skipc
  6951  09AC  2993               	goto	l3466
  6952  09AD                     l3474:	
  6953  09AD  3001               	movlw	1
  6954  09AE  07D8               	addwf	OLED_Clear@row^(0+128),f
  6955  09AF  3000               	movlw	0
  6956  09B0  3DD9               	addwfc	(OLED_Clear@row+1)^(0+128),f
  6957  09B1  2983               	goto	L1
  6958  09B2                     __end_of_OLED_Clear:	
  6959                           
  6960                           	psect	text13
  6961  08CE                     __ptext13:	
  6962 ;; *************** function _OLED_YX *****************
  6963 ;; Defined at:
  6964 ;;		line 213 in file "oled.c"
  6965 ;; Parameters:    Size  Location     Type
  6966 ;;  Row             1    wreg     unsigned char 
  6967 ;;  Column          1   20[BANK0 ] unsigned char 
  6968 ;; Auto vars:     Size  Location     Type
  6969 ;;  Row             1   24[BANK0 ] unsigned char 
  6970 ;; Return value:  Size  Location     Type
  6971 ;;                  1    wreg      void 
  6972 ;; Registers used:
  6973 ;;		wreg, status,2, status,0, pclath, cstack
  6974 ;; Tracked objects:
  6975 ;;		On entry : 0/0
  6976 ;;		On exit  : 0/0
  6977 ;;		Unchanged: 0/0
  6978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6979 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6980 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6981 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6982 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6983 ;;Total ram usage:        5 bytes
  6984 ;; Hardware stack levels used:    1
  6985 ;; Hardware stack levels required when called:    6
  6986 ;; This function calls:
  6987 ;;		_OLED_Command
  6988 ;; This function is called by:
  6989 ;;		_OLED_Clear
  6990 ;;		_initMain
  6991 ;; This function uses a non-reentrant model
  6992 ;;
  6993                           
  6994                           
  6995                           ;psect for function _OLED_YX
  6996  08CE                     _OLED_YX:	
  6997                           
  6998                           ;incstack = 0
  6999                           ; Regs used in _OLED_YX: [wreg+status,2+status,0+pclath+cstack]
  7000                           ;OLED_YX@Row stored from wreg
  7001  08CE  0020               	movlb	0	; select bank0
  7002  08CF  00B8               	movwf	OLED_YX@Row
  7003                           
  7004                           ;oled.c: 215: OLED_Command( 0xB0 + Row);
  7005  08D0  0838               	movf	OLED_YX@Row,w
  7006  08D1  3EB0               	addlw	176
  7007  08D2  3197  2794  3188   	fcall	_OLED_Command
  7008                           
  7009                           ;oled.c: 216: OLED_Command( 0x00 + (8*Column & 0x0F) );
  7010  08D5  0020               	movlb	0	; select bank0
  7011  08D6  0834               	movf	OLED_YX@Column,w
  7012  08D7  00B5               	movwf	??_OLED_YX
  7013  08D8  3002               	movlw	2
  7014  08D9                     u2965:	
  7015  08D9  35B5               	lslf	??_OLED_YX,f
  7016  08DA  3EFF               	addlw	-1
  7017  08DB  1D03               	skipz
  7018  08DC  28D9               	goto	u2965
  7019  08DD  3535               	lslf	??_OLED_YX,w
  7020  08DE  390F               	andlw	15
  7021  08DF  3197  2794  3188   	fcall	_OLED_Command
  7022                           
  7023                           ;oled.c: 217: OLED_Command( 0x10 + ((8*Column>>4)&0x0F) );
  7024  08E2  0020               	movlb	0	; select bank0
  7025  08E3  0834               	movf	OLED_YX@Column,w
  7026  08E4  00B5               	movwf	??_OLED_YX
  7027  08E5  01B6               	clrf	??_OLED_YX+1
  7028  08E6  35B5               	lslf	??_OLED_YX,f
  7029  08E7  0DB6               	rlf	??_OLED_YX+1,f
  7030  08E8  35B5               	lslf	??_OLED_YX,f
  7031  08E9  0DB6               	rlf	??_OLED_YX+1,f
  7032  08EA  35B5               	lslf	??_OLED_YX,f
  7033  08EB  0DB6               	rlf	??_OLED_YX+1,f
  7034  08EC  3004               	movlw	4
  7035  08ED  00B7               	movwf	??_OLED_YX+2
  7036  08EE                     u2975:	
  7037  08EE  0D36               	rlf	??_OLED_YX+1,w
  7038  08EF  0CB6               	rrf	??_OLED_YX+1,f
  7039  08F0  0CB5               	rrf	??_OLED_YX,f
  7040  08F1  0BB7               	decfsz	??_OLED_YX+2,f
  7041  08F2  28EE               	goto	u2975
  7042  08F3  0835               	movf	??_OLED_YX,w
  7043  08F4  390F               	andlw	15
  7044  08F5  3E10               	addlw	16
  7045  08F6  3197  2794         	fcall	_OLED_Command
  7046  08F8  0008               	return
  7047  08F9                     __end_of_OLED_YX:	
  7048                           
  7049                           	psect	text14
  7050  1794                     __ptext14:	
  7051 ;; *************** function _OLED_Command *****************
  7052 ;; Defined at:
  7053 ;;		line 138 in file "oled.c"
  7054 ;; Parameters:    Size  Location     Type
  7055 ;;  temp            1    wreg     unsigned char 
  7056 ;; Auto vars:     Size  Location     Type
  7057 ;;  temp            1   19[BANK0 ] unsigned char 
  7058 ;; Return value:  Size  Location     Type
  7059 ;;                  1    wreg      void 
  7060 ;; Registers used:
  7061 ;;		wreg, status,2, status,0, pclath, cstack
  7062 ;; Tracked objects:
  7063 ;;		On entry : 0/0
  7064 ;;		On exit  : 0/0
  7065 ;;		Unchanged: 0/0
  7066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7068 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7069 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7070 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7071 ;;Total ram usage:        3 bytes
  7072 ;; Hardware stack levels used:    1
  7073 ;; Hardware stack levels required when called:    5
  7074 ;; This function calls:
  7075 ;;		_Send_I2C_Data
  7076 ;;		_Send_I2C_StartBit
  7077 ;;		_Send_I2C_StopBit
  7078 ;; This function is called by:
  7079 ;;		_OLED_Init
  7080 ;;		_OLED_YX
  7081 ;; This function uses a non-reentrant model
  7082 ;;
  7083                           
  7084                           
  7085                           ;psect for function _OLED_Command
  7086  1794                     _OLED_Command:	
  7087                           
  7088                           ;incstack = 0
  7089                           ; Regs used in _OLED_Command: [wreg+status,2+status,0+pclath+cstack]
  7090                           ;OLED_Command@temp stored from wreg
  7091  1794  0020               	movlb	0	; select bank0
  7092  1795  00B3               	movwf	OLED_Command@temp
  7093                           
  7094                           ;oled.c: 140: Send_I2C_StartBit();
  7095  1796  3195  25F6  3197   	fcall	_Send_I2C_StartBit
  7096                           
  7097                           ;oled.c: 141: Send_I2C_Data(0x3C << 1);
  7098  1799  3078               	movlw	120
  7099  179A  0020               	movlb	0	; select bank0
  7100  179B  00AF               	movwf	Send_I2C_Data@databyte
  7101  179C  3000               	movlw	0
  7102  179D  00B0               	movwf	Send_I2C_Data@databyte+1
  7103  179E  3196  2606  3197   	fcall	_Send_I2C_Data
  7104                           
  7105                           ;oled.c: 142: Send_I2C_Data(0x00);
  7106  17A1  3000               	movlw	0
  7107  17A2  0020               	movlb	0	; select bank0
  7108  17A3  00AF               	movwf	Send_I2C_Data@databyte
  7109  17A4  00B0               	movwf	Send_I2C_Data@databyte+1
  7110  17A5  3196  2606  3197   	fcall	_Send_I2C_Data
  7111                           
  7112                           ;oled.c: 143: Send_I2C_Data(temp);
  7113  17A8  0020               	movlb	0	; select bank0
  7114  17A9  0833               	movf	OLED_Command@temp,w
  7115  17AA  00B1               	movwf	??_OLED_Command
  7116  17AB  01B2               	clrf	??_OLED_Command+1
  7117  17AC  0831               	movf	??_OLED_Command,w
  7118  17AD  00AF               	movwf	Send_I2C_Data@databyte
  7119  17AE  0832               	movf	??_OLED_Command+1,w
  7120  17AF  00B0               	movwf	Send_I2C_Data@databyte+1
  7121  17B0  3196  2606  3197   	fcall	_Send_I2C_Data
  7122                           
  7123                           ;oled.c: 144: Send_I2C_StopBit();
  7124  17B3  3195  25FE         	fcall	_Send_I2C_StopBit
  7125  17B5  0008               	return
  7126  17B6                     __end_of_OLED_Command:	
  7127                           
  7128                           	psect	text15
  7129  0CEC                     __ptext15:	
  7130 ;; *************** function _OLED_PutChar *****************
  7131 ;; Defined at:
  7132 ;;		line 229 in file "oled.c"
  7133 ;; Parameters:    Size  Location     Type
  7134 ;;  ch              1    wreg     unsigned char 
  7135 ;; Auto vars:     Size  Location     Type
  7136 ;;  ch              1   44[BANK0 ] unsigned char 
  7137 ;;  bytes           9   33[BANK0 ] unsigned char [9]
  7138 ;;  i               2   45[BANK0 ] int 
  7139 ;;  base            2   42[BANK0 ] PTR const unsigned char 
  7140 ;;		 -> OledFont(768), 
  7141 ;; Return value:  Size  Location     Type
  7142 ;;                  1    wreg      void 
  7143 ;; Registers used:
  7144 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7145 ;; Tracked objects:
  7146 ;;		On entry : 0/0
  7147 ;;		On exit  : 0/0
  7148 ;;		Unchanged: 0/0
  7149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7151 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7152 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7153 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7154 ;;Total ram usage:       20 bytes
  7155 ;; Hardware stack levels used:    1
  7156 ;; Hardware stack levels required when called:    5
  7157 ;; This function calls:
  7158 ;;		_Send_I2C_Data
  7159 ;;		_Send_I2C_StartBit
  7160 ;;		_Send_I2C_StopBit
  7161 ;;		_memmove
  7162 ;; This function is called by:
  7163 ;;		_OLED_Clear
  7164 ;;		_OLED_Write_String
  7165 ;; This function uses a non-reentrant model
  7166 ;;
  7167                           
  7168                           
  7169                           ;psect for function _OLED_PutChar
  7170  0CEC                     _OLED_PutChar:	
  7171                           
  7172                           ;incstack = 0
  7173                           ; Regs used in _OLED_PutChar: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7174                           ;OLED_PutChar@ch stored from wreg
  7175  0CEC  0020               	movlb	0	; select bank0
  7176  0CED  00CC               	movwf	OLED_PutChar@ch
  7177                           
  7178                           ;oled.c: 231: if ( ( ch < 32 ) || ( ch > 127 ) ){
  7179  0CEE  3020               	movlw	32
  7180  0CEF  024C               	subwf	OLED_PutChar@ch,w
  7181  0CF0  1C03               	skipc
  7182  0CF1  2CF6               	goto	l3218
  7183  0CF2  3080               	movlw	128
  7184  0CF3  024C               	subwf	OLED_PutChar@ch,w
  7185  0CF4  1C03               	skipc
  7186  0CF5  2CFA               	goto	l3220
  7187  0CF6                     l3218:	
  7188                           
  7189                           ;oled.c: 232: ch = ' ';
  7190  0CF6  3020               	movlw	32
  7191  0CF7  00BB               	movwf	??_OLED_PutChar
  7192  0CF8  083B               	movf	??_OLED_PutChar,w
  7193  0CF9  00CC               	movwf	OLED_PutChar@ch
  7194  0CFA                     l3220:	
  7195                           
  7196                           ;oled.c: 233: }
  7197                           ;oled.c: 235: const uint8_t *base = &OledFont[ch - 32][0];
  7198  0CFA  084C               	movf	OLED_PutChar@ch,w
  7199  0CFB  00BB               	movwf	??_OLED_PutChar
  7200  0CFC  01BC               	clrf	??_OLED_PutChar+1
  7201  0CFD  35BB               	lslf	??_OLED_PutChar,f
  7202  0CFE  0DBC               	rlf	??_OLED_PutChar+1,f
  7203  0CFF  35BB               	lslf	??_OLED_PutChar,f
  7204  0D00  0DBC               	rlf	??_OLED_PutChar+1,f
  7205  0D01  35BB               	lslf	??_OLED_PutChar,f
  7206  0D02  0DBC               	rlf	??_OLED_PutChar+1,f
  7207  0D03  083B               	movf	??_OLED_PutChar,w
  7208  0D04  3E00               	addlw	0
  7209  0D05  00BD               	movwf	??_OLED_PutChar+2
  7210  0D06  30FF               	movlw	255
  7211  0D07  3D3C               	addwfc	??_OLED_PutChar+1,w
  7212  0D08  00BE               	movwf	??_OLED_PutChar+3
  7213  0D09  30F7               	movlw	low (_OledFont| (0+32768))
  7214  0D0A  00BF               	movwf	??_OLED_PutChar+4
  7215  0D0B  3081               	movlw	high (_OledFont| (0+32768))
  7216  0D0C  00C0               	movwf	??_OLED_PutChar+5
  7217  0D0D  083D               	movf	??_OLED_PutChar+2,w
  7218  0D0E  073F               	addwf	??_OLED_PutChar+4,w
  7219  0D0F  00CA               	movwf	OLED_PutChar@base
  7220  0D10  083E               	movf	??_OLED_PutChar+3,w
  7221  0D11  3D40               	addwfc	??_OLED_PutChar+5,w
  7222  0D12  00CB               	movwf	OLED_PutChar@base+1
  7223                           
  7224                           ;oled.c: 237: uint8_t bytes[9];
  7225                           ;oled.c: 238: bytes[0] = 0x40;
  7226  0D13  3040               	movlw	64
  7227  0D14  00BB               	movwf	??_OLED_PutChar
  7228  0D15  083B               	movf	??_OLED_PutChar,w
  7229  0D16  00C1               	movwf	OLED_PutChar@bytes
  7230                           
  7231                           ;oled.c: 239: memmove( bytes + 1, base, 8 );
  7232  0D17  084B               	movf	OLED_PutChar@base+1,w
  7233  0D18  00B0               	movwf	memmove@s1+1
  7234  0D19  084A               	movf	OLED_PutChar@base,w
  7235  0D1A  00AF               	movwf	memmove@s1
  7236  0D1B  3008               	movlw	8
  7237  0D1C  00B1               	movwf	memmove@n
  7238  0D1D  3000               	movlw	0
  7239  0D1E  00B2               	movwf	memmove@n+1
  7240  0D1F  3042               	movlw	(low ((OLED_PutChar@bytes| 0+1)))& (0+255)
  7241  0D20  318C  241D  318C   	fcall	_memmove
  7242                           
  7243                           ;oled.c: 241: Send_I2C_StartBit();
  7244  0D23  3195  25F6  318C   	fcall	_Send_I2C_StartBit
  7245                           
  7246                           ;oled.c: 242: Send_I2C_Data(0x3C << 1);
  7247  0D26  3078               	movlw	120
  7248  0D27  0020               	movlb	0	; select bank0
  7249  0D28  00AF               	movwf	Send_I2C_Data@databyte
  7250  0D29  3000               	movlw	0
  7251  0D2A  00B0               	movwf	Send_I2C_Data@databyte+1
  7252  0D2B  3196  2606  318C   	fcall	_Send_I2C_Data
  7253                           
  7254                           ;oled.c: 243: Send_I2C_Data(0x40);
  7255  0D2E  3040               	movlw	64
  7256  0D2F  0020               	movlb	0	; select bank0
  7257  0D30  00AF               	movwf	Send_I2C_Data@databyte
  7258  0D31  3000               	movlw	0
  7259  0D32  00B0               	movwf	Send_I2C_Data@databyte+1
  7260  0D33  3196  2606  318C   	fcall	_Send_I2C_Data
  7261                           
  7262                           ;oled.c: 245: int i;
  7263                           ;oled.c: 247: for (i = 1; i <= 8; i++){
  7264  0D36  3001               	movlw	1
  7265  0D37  0020               	movlb	0	; select bank0
  7266  0D38  00CD               	movwf	OLED_PutChar@i
  7267  0D39  3000               	movlw	0
  7268  0D3A  00CE               	movwf	OLED_PutChar@i+1
  7269  0D3B  084E               	movf	OLED_PutChar@i+1,w
  7270  0D3C  3A80               	xorlw	128
  7271  0D3D  00BB               	movwf	??_OLED_PutChar
  7272  0D3E  3080               	movlw	128
  7273  0D3F  023B               	subwf	??_OLED_PutChar,w
  7274  0D40  1D03               	skipz
  7275  0D41  2D44               	goto	u3005
  7276  0D42  3009               	movlw	9
  7277  0D43  024D               	subwf	OLED_PutChar@i,w
  7278  0D44                     u3005:	
  7279  0D44  1803               	btfsc	3,0
  7280  0D45  2D65               	goto	l3244
  7281  0D46                     l3238:	
  7282                           
  7283                           ;oled.c: 248: Send_I2C_Data(bytes[i]);
  7284  0D46  0020               	movlb	0	; select bank0
  7285  0D47  084D               	movf	OLED_PutChar@i,w
  7286  0D48  3E41               	addlw	(low (OLED_PutChar@bytes| 0))& (0+255)
  7287  0D49  0086               	movwf	6
  7288  0D4A  0187               	clrf	7
  7289  0D4B  0801               	movf	1,w
  7290  0D4C  00BB               	movwf	??_OLED_PutChar
  7291  0D4D  01BC               	clrf	??_OLED_PutChar+1
  7292  0D4E  083B               	movf	??_OLED_PutChar,w
  7293  0D4F  00AF               	movwf	Send_I2C_Data@databyte
  7294  0D50  083C               	movf	??_OLED_PutChar+1,w
  7295  0D51  00B0               	movwf	Send_I2C_Data@databyte+1
  7296  0D52  3196  2606  318C   	fcall	_Send_I2C_Data
  7297  0D55  3001               	movlw	1
  7298  0D56  0020               	movlb	0	; select bank0
  7299  0D57  07CD               	addwf	OLED_PutChar@i,f
  7300  0D58  3000               	movlw	0
  7301  0D59  3DCE               	addwfc	OLED_PutChar@i+1,f
  7302  0D5A  084E               	movf	OLED_PutChar@i+1,w
  7303  0D5B  3A80               	xorlw	128
  7304  0D5C  00BB               	movwf	??_OLED_PutChar
  7305  0D5D  3080               	movlw	128
  7306  0D5E  023B               	subwf	??_OLED_PutChar,w
  7307  0D5F  1D03               	skipz
  7308  0D60  2D63               	goto	u3015
  7309  0D61  3009               	movlw	9
  7310  0D62  024D               	subwf	OLED_PutChar@i,w
  7311  0D63                     u3015:	
  7312  0D63  1C03               	skipc
  7313  0D64  2D46               	goto	l3238
  7314  0D65                     l3244:	
  7315                           
  7316                           ;oled.c: 249: }
  7317                           ;oled.c: 251: Send_I2C_StopBit();
  7318  0D65  3195  25FE         	fcall	_Send_I2C_StopBit
  7319  0D67  0008               	return
  7320  0D68                     __end_of_OLED_PutChar:	
  7321                           
  7322                           	psect	text16
  7323  0C1D                     __ptext16:	
  7324 ;; *************** function _memmove *****************
  7325 ;; Defined at:
  7326 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\memmove.c"
  7327 ;; Parameters:    Size  Location     Type
  7328 ;;  d1              1    wreg     PTR void 
  7329 ;;		 -> OLED_PutChar@bytes(9), 
  7330 ;;  s1              2   15[BANK0 ] PTR const void 
  7331 ;;		 -> OledFont(768), 
  7332 ;;  n               2   17[BANK0 ] unsigned int 
  7333 ;; Auto vars:     Size  Location     Type
  7334 ;;  d1              1   23[BANK0 ] PTR void 
  7335 ;;		 -> OLED_PutChar@bytes(9), 
  7336 ;;  s               2   24[BANK0 ] PTR const unsigned char 
  7337 ;;		 -> OledFont(768), 
  7338 ;;  d               1   26[BANK0 ] PTR unsigned char 
  7339 ;;		 -> OLED_PutChar@bytes(9), 
  7340 ;; Return value:  Size  Location     Type
  7341 ;;                  1    wreg      PTR void 
  7342 ;; Registers used:
  7343 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  7344 ;; Tracked objects:
  7345 ;;		On entry : 0/0
  7346 ;;		On exit  : 0/0
  7347 ;;		Unchanged: 0/0
  7348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7349 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7350 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7351 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7352 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7353 ;;Total ram usage:       12 bytes
  7354 ;; Hardware stack levels used:    1
  7355 ;; Hardware stack levels required when called:    4
  7356 ;; This function calls:
  7357 ;;		Nothing
  7358 ;; This function is called by:
  7359 ;;		_OLED_PutChar
  7360 ;; This function uses a non-reentrant model
  7361 ;;
  7362                           
  7363                           
  7364                           ;psect for function _memmove
  7365  0C1D                     _memmove:	
  7366                           
  7367                           ;incstack = 0
  7368                           ; Regs used in _memmove: [wreg-fsr1h+status,2+status,0+pclath]
  7369                           ;memmove@d1 stored from wreg
  7370  0C1D  0020               	movlb	0	; select bank0
  7371  0C1E  00B7               	movwf	memmove@d1
  7372  0C1F  0830               	movf	memmove@s1+1,w
  7373  0C20  00B9               	movwf	memmove@s+1
  7374  0C21  082F               	movf	memmove@s1,w
  7375  0C22  00B8               	movwf	memmove@s
  7376  0C23  0837               	movf	memmove@d1,w
  7377  0C24  00B3               	movwf	??_memmove
  7378  0C25  0833               	movf	??_memmove,w
  7379  0C26  00BA               	movwf	memmove@d
  7380  0C27  083A               	movf	memmove@d,w
  7381  0C28  00B3               	movwf	??_memmove
  7382  0C29  3000               	movlw	0
  7383  0C2A  00B4               	movwf	??_memmove+1
  7384  0C2B  0834               	movf	??_memmove+1,w
  7385  0C2C  0239               	subwf	memmove@s+1,w
  7386  0C2D  1D03               	skipz
  7387  0C2E  2C31               	goto	u2745
  7388  0C2F  0833               	movf	??_memmove,w
  7389  0C30  0238               	subwf	memmove@s,w
  7390  0C31                     u2745:	
  7391  0C31  1803               	skipnc
  7392  0C32  2C67               	goto	l3118
  7393  0C33  0831               	movf	memmove@n,w
  7394  0C34  0738               	addwf	memmove@s,w
  7395  0C35  00B3               	movwf	??_memmove
  7396  0C36  0832               	movf	memmove@n+1,w
  7397  0C37  3D39               	addwfc	memmove@s+1,w
  7398  0C38  00B4               	movwf	??_memmove+1
  7399  0C39  083A               	movf	memmove@d,w
  7400  0C3A  00B5               	movwf	??_memmove+2
  7401  0C3B  3000               	movlw	0
  7402  0C3C  00B6               	movwf	??_memmove+3
  7403  0C3D  0834               	movf	??_memmove+1,w
  7404  0C3E  0236               	subwf	??_memmove+3,w
  7405  0C3F  1D03               	skipz
  7406  0C40  2C43               	goto	u2755
  7407  0C41  0833               	movf	??_memmove,w
  7408  0C42  0235               	subwf	??_memmove+2,w
  7409  0C43                     u2755:	
  7410  0C43  1803               	skipnc
  7411  0C44  2C67               	goto	l3118
  7412  0C45  0831               	movf	memmove@n,w
  7413  0C46  07B8               	addwf	memmove@s,f
  7414  0C47  0832               	movf	memmove@n+1,w
  7415  0C48  3DB9               	addwfc	memmove@s+1,f
  7416  0C49  0831               	movf	memmove@n,w
  7417  0C4A  00B3               	movwf	??_memmove
  7418  0C4B  0833               	movf	??_memmove,w
  7419  0C4C  07BA               	addwf	memmove@d,f
  7420  0C4D                     l3114:	
  7421  0C4D  3001               	movlw	1
  7422  0C4E  02B8               	subwf	memmove@s,f
  7423  0C4F  3000               	movlw	0
  7424  0C50  3BB9               	subwfb	memmove@s+1,f
  7425  0C51  0838               	movf	memmove@s,w
  7426  0C52  0084               	movwf	4
  7427  0C53  0839               	movf	memmove@s+1,w
  7428  0C54  0085               	movwf	5
  7429  0C55  0800               	movf	0,w	;code access
  7430  0C56  00B3               	movwf	??_memmove
  7431  0C57  3001               	movlw	1
  7432  0C58  02BA               	subwf	memmove@d,f
  7433  0C59  083A               	movf	memmove@d,w
  7434  0C5A  0086               	movwf	6
  7435  0C5B  0187               	clrf	7
  7436  0C5C  0833               	movf	??_memmove,w
  7437  0C5D  0081               	movwf	1
  7438  0C5E  3001               	movlw	1
  7439  0C5F  02B1               	subwf	memmove@n,f
  7440  0C60  3000               	movlw	0
  7441  0C61  3BB2               	subwfb	memmove@n+1,f
  7442  0C62  0831               	movf	memmove@n,w
  7443  0C63  0432               	iorwf	memmove@n+1,w
  7444  0C64  1903               	btfsc	3,2
  7445  0C65  0008               	return
  7446  0C66  2C4D               	goto	l3114
  7447  0C67                     l3118:	
  7448  0C67  0831               	movf	memmove@n,w
  7449  0C68  0432               	iorwf	memmove@n+1,w
  7450  0C69  1903               	btfsc	3,2
  7451  0C6A  0008               	return
  7452  0C6B  0838               	movf	memmove@s,w
  7453  0C6C  0084               	movwf	4
  7454  0C6D  0839               	movf	memmove@s+1,w
  7455  0C6E  0085               	movwf	5
  7456  0C6F  0800               	movf	0,w	;code access
  7457  0C70  00B3               	movwf	??_memmove
  7458  0C71  083A               	movf	memmove@d,w
  7459  0C72  0086               	movwf	6
  7460  0C73  0187               	clrf	7
  7461  0C74  0833               	movf	??_memmove,w
  7462  0C75  0081               	movwf	1
  7463  0C76  3001               	movlw	1
  7464  0C77  07B8               	addwf	memmove@s,f
  7465  0C78  3000               	movlw	0
  7466  0C79  3DB9               	addwfc	memmove@s+1,f
  7467  0C7A  3001               	movlw	1
  7468  0C7B  00B3               	movwf	??_memmove
  7469  0C7C  0833               	movf	??_memmove,w
  7470  0C7D  07BA               	addwf	memmove@d,f
  7471  0C7E  3001               	movlw	1
  7472  0C7F  02B1               	subwf	memmove@n,f
  7473  0C80  3000               	movlw	0
  7474  0C81  3BB2               	subwfb	memmove@n+1,f
  7475  0C82  2C67               	goto	l3118
  7476  0C83                     __end_of_memmove:	
  7477                           ;	Return value of _memmove is never used
  7478                           
  7479                           
  7480                           	psect	text17
  7481  15FE                     __ptext17:	
  7482 ;; *************** function _Send_I2C_StopBit *****************
  7483 ;; Defined at:
  7484 ;;		line 106 in file "I2C.c"
  7485 ;; Parameters:    Size  Location     Type
  7486 ;;		None
  7487 ;; Auto vars:     Size  Location     Type
  7488 ;;		None
  7489 ;; Return value:  Size  Location     Type
  7490 ;;                  1    wreg      void 
  7491 ;; Registers used:
  7492 ;;		None
  7493 ;; Tracked objects:
  7494 ;;		On entry : 0/0
  7495 ;;		On exit  : 0/0
  7496 ;;		Unchanged: 0/0
  7497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7502 ;;Total ram usage:        0 bytes
  7503 ;; Hardware stack levels used:    1
  7504 ;; Hardware stack levels required when called:    4
  7505 ;; This function calls:
  7506 ;;		Nothing
  7507 ;; This function is called by:
  7508 ;;		_OLED_Command
  7509 ;;		_OLED_PutChar
  7510 ;;		_OLED_Data
  7511 ;; This function uses a non-reentrant model
  7512 ;;
  7513                           
  7514                           
  7515                           ;psect for function _Send_I2C_StopBit
  7516  15FE                     _Send_I2C_StopBit:	
  7517                           
  7518                           ;I2C.c: 108: PIR1bits.SSP1IF=0;
  7519                           
  7520                           ;incstack = 0
  7521                           ; Regs used in _Send_I2C_StopBit: []
  7522  15FE  0020               	movlb	0	; select bank0
  7523  15FF  1191               	bcf	17,3	;volatile
  7524                           
  7525                           ;I2C.c: 109: SSPCON2bits.PEN=1;
  7526  1600  0024               	movlb	4	; select bank4
  7527  1601  1516               	bsf	22,2	;volatile
  7528  1602                     l77:	
  7529                           ;I2C.c: 110: while(!PIR1bits.SSP1IF);
  7530                           
  7531  1602  0020               	movlb	0	; select bank0
  7532  1603  1991               	btfsc	17,3	;volatile
  7533  1604  0008               	return
  7534  1605  2E02               	goto	l77
  7535  1606                     __end_of_Send_I2C_StopBit:	
  7536                           
  7537                           	psect	text18
  7538  15F6                     __ptext18:	
  7539 ;; *************** function _Send_I2C_StartBit *****************
  7540 ;; Defined at:
  7541 ;;		line 96 in file "I2C.c"
  7542 ;; Parameters:    Size  Location     Type
  7543 ;;		None
  7544 ;; Auto vars:     Size  Location     Type
  7545 ;;		None
  7546 ;; Return value:  Size  Location     Type
  7547 ;;                  1    wreg      void 
  7548 ;; Registers used:
  7549 ;;		None
  7550 ;; Tracked objects:
  7551 ;;		On entry : 0/0
  7552 ;;		On exit  : 0/0
  7553 ;;		Unchanged: 0/0
  7554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7559 ;;Total ram usage:        0 bytes
  7560 ;; Hardware stack levels used:    1
  7561 ;; Hardware stack levels required when called:    4
  7562 ;; This function calls:
  7563 ;;		Nothing
  7564 ;; This function is called by:
  7565 ;;		_OLED_Command
  7566 ;;		_OLED_PutChar
  7567 ;;		_OLED_Data
  7568 ;; This function uses a non-reentrant model
  7569 ;;
  7570                           
  7571                           
  7572                           ;psect for function _Send_I2C_StartBit
  7573  15F6                     _Send_I2C_StartBit:	
  7574                           
  7575                           ;I2C.c: 98: PIR1bits.SSP1IF=0;
  7576                           
  7577                           ;incstack = 0
  7578                           ; Regs used in _Send_I2C_StartBit: []
  7579  15F6  0020               	movlb	0	; select bank0
  7580  15F7  1191               	bcf	17,3	;volatile
  7581                           
  7582                           ;I2C.c: 99: SSPCON2bits.SEN=1;
  7583  15F8  0024               	movlb	4	; select bank4
  7584  15F9  1416               	bsf	22,0	;volatile
  7585  15FA                     l71:	
  7586                           ;I2C.c: 100: while(!PIR1bits.SSP1IF);
  7587                           
  7588  15FA  0020               	movlb	0	; select bank0
  7589  15FB  1991               	btfsc	17,3	;volatile
  7590  15FC  0008               	return
  7591  15FD  2DFA               	goto	l71
  7592  15FE                     __end_of_Send_I2C_StartBit:	
  7593                           
  7594                           	psect	text19
  7595  1606                     __ptext19:	
  7596 ;; *************** function _Send_I2C_Data *****************
  7597 ;; Defined at:
  7598 ;;		line 48 in file "I2C.c"
  7599 ;; Parameters:    Size  Location     Type
  7600 ;;  databyte        2   15[BANK0 ] unsigned int 
  7601 ;; Auto vars:     Size  Location     Type
  7602 ;;		None
  7603 ;; Return value:  Size  Location     Type
  7604 ;;                  1    wreg      void 
  7605 ;; Registers used:
  7606 ;;		wreg
  7607 ;; Tracked objects:
  7608 ;;		On entry : 0/0
  7609 ;;		On exit  : 0/0
  7610 ;;		Unchanged: 0/0
  7611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7612 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7615 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7616 ;;Total ram usage:        2 bytes
  7617 ;; Hardware stack levels used:    1
  7618 ;; Hardware stack levels required when called:    4
  7619 ;; This function calls:
  7620 ;;		Nothing
  7621 ;; This function is called by:
  7622 ;;		_OLED_Command
  7623 ;;		_OLED_PutChar
  7624 ;;		_OLED_Data
  7625 ;; This function uses a non-reentrant model
  7626 ;;
  7627                           
  7628                           
  7629                           ;psect for function _Send_I2C_Data
  7630  1606                     _Send_I2C_Data:	
  7631                           
  7632                           ;I2C.c: 50: PIR1bits.SSP1IF=0;
  7633                           
  7634                           ;incstack = 0
  7635                           ; Regs used in _Send_I2C_Data: [wreg]
  7636  1606  0020               	movlb	0	; select bank0
  7637  1607  1191               	bcf	17,3	;volatile
  7638                           
  7639                           ;I2C.c: 51: SSPBUF = databyte;
  7640  1608  082F               	movf	Send_I2C_Data@databyte,w
  7641  1609  0024               	movlb	4	; select bank4
  7642  160A  0091               	movwf	17	;volatile
  7643  160B                     l53:	
  7644                           ;I2C.c: 52: while(!PIR1bits.SSP1IF);
  7645                           
  7646  160B  0020               	movlb	0	; select bank0
  7647  160C  1991               	btfsc	17,3	;volatile
  7648  160D  0008               	return
  7649  160E  2E0B               	goto	l53
  7650  160F                     __end_of_Send_I2C_Data:	
  7651                           
  7652                           	psect	text20
  7653  1632                     __ptext20:	
  7654 ;; *************** function _I2C_Init *****************
  7655 ;; Defined at:
  7656 ;;		line 19 in file "I2C.c"
  7657 ;; Parameters:    Size  Location     Type
  7658 ;;		None
  7659 ;; Auto vars:     Size  Location     Type
  7660 ;;		None
  7661 ;; Return value:  Size  Location     Type
  7662 ;;                  1    wreg      void 
  7663 ;; Registers used:
  7664 ;;		wreg, status,2, status,0
  7665 ;; Tracked objects:
  7666 ;;		On entry : 0/0
  7667 ;;		On exit  : 0/0
  7668 ;;		Unchanged: 0/0
  7669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7672 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7673 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7674 ;;Total ram usage:        1 bytes
  7675 ;; Hardware stack levels used:    1
  7676 ;; Hardware stack levels required when called:    4
  7677 ;; This function calls:
  7678 ;;		Nothing
  7679 ;; This function is called by:
  7680 ;;		_initMain
  7681 ;; This function uses a non-reentrant model
  7682 ;;
  7683                           
  7684                           
  7685                           ;psect for function _I2C_Init
  7686  1632                     _I2C_Init:	
  7687                           
  7688                           ;I2C.c: 25: SSPCONbits.SSPM=0x08;
  7689                           
  7690                           ;incstack = 0
  7691                           ; Regs used in _I2C_Init: [wreg+status,2+status,0]
  7692  1632  0024               	movlb	4	; select bank4
  7693  1633  0815               	movf	21,w	;volatile
  7694  1634  39F0               	andlw	-16
  7695  1635  3808               	iorlw	8
  7696  1636  0095               	movwf	21	;volatile
  7697                           
  7698                           ;I2C.c: 26: SSPCONbits.SSPEN=1;
  7699  1637  1695               	bsf	21,5	;volatile
  7700                           
  7701                           ;I2C.c: 38: SSPADD = 39;
  7702  1638  3027               	movlw	39
  7703  1639  0092               	movwf	18	;volatile
  7704                           
  7705                           ;I2C.c: 42: _delay((unsigned long)((10)*(16000000/4000.0)));
  7706  163A  3034               	movlw	52
  7707  163B  0020               	movlb	0	; select bank0
  7708  163C  00AF               	movwf	??_I2C_Init
  7709  163D  30F1               	movlw	241
  7710  163E                     u3847:	
  7711  163E  0B89               	decfsz	9,f
  7712  163F  2E3E               	goto	u3847
  7713  1640  0BAF               	decfsz	??_I2C_Init,f
  7714  1641  2E3E               	goto	u3847
  7715  1642  3200               	nop2
  7716  1643  0008               	return
  7717  1644                     __end_of_I2C_Init:	
  7718                           
  7719                           	psect	text21
  7720  0E6B                     __ptext21:	
  7721 ;; *************** function _EUSART_Initialize *****************
  7722 ;; Defined at:
  7723 ;;		line 34 in file "EUSART.c"
  7724 ;; Parameters:    Size  Location     Type
  7725 ;;  baudrate        4   30[BANK0 ] const long 
  7726 ;; Auto vars:     Size  Location     Type
  7727 ;;  x               2   42[BANK0 ] unsigned int 
  7728 ;; Return value:  Size  Location     Type
  7729 ;;                  1    wreg      unsigned char 
  7730 ;; Registers used:
  7731 ;;		wreg, status,2, status,0, pclath, cstack
  7732 ;; Tracked objects:
  7733 ;;		On entry : 0/0
  7734 ;;		On exit  : 0/0
  7735 ;;		Unchanged: 0/0
  7736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7737 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7738 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7739 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7740 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7741 ;;Total ram usage:       14 bytes
  7742 ;; Hardware stack levels used:    1
  7743 ;; Hardware stack levels required when called:    5
  7744 ;; This function calls:
  7745 ;;		___aldiv
  7746 ;; This function is called by:
  7747 ;;		_initMain
  7748 ;; This function uses a non-reentrant model
  7749 ;;
  7750                           
  7751                           
  7752                           ;psect for function _EUSART_Initialize
  7753  0E6B                     _EUSART_Initialize:	
  7754                           
  7755                           ;EUSART.c: 36: unsigned int x;
  7756                           ;EUSART.c: 37: x = (16000000 - baudrate*64)/(baudrate*64);
  7757                           
  7758                           ;incstack = 0
  7759                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7760  0E6B  0020               	movlb	0	; select bank0
  7761  0E6C  083E               	movf	EUSART_Initialize@baudrate,w
  7762  0E6D  00C2               	movwf	??_EUSART_Initialize
  7763  0E6E  083F               	movf	EUSART_Initialize@baudrate+1,w
  7764  0E6F  00C3               	movwf	??_EUSART_Initialize+1
  7765  0E70  0840               	movf	EUSART_Initialize@baudrate+2,w
  7766  0E71  00C4               	movwf	??_EUSART_Initialize+2
  7767  0E72  0841               	movf	EUSART_Initialize@baudrate+3,w
  7768  0E73  00C5               	movwf	??_EUSART_Initialize+3
  7769  0E74  3006               	movlw	6
  7770  0E75                     u3405:	
  7771  0E75  35C2               	lslf	??_EUSART_Initialize,f
  7772  0E76  0DC3               	rlf	??_EUSART_Initialize+1,f
  7773  0E77  0DC4               	rlf	??_EUSART_Initialize+2,f
  7774  0E78  0DC5               	rlf	??_EUSART_Initialize+3,f
  7775  0E79  0B89               	decfsz	9,f
  7776  0E7A  2E75               	goto	u3405
  7777  0E7B  0845               	movf	??_EUSART_Initialize+3,w
  7778  0E7C  00B2               	movwf	___aldiv@divisor+3
  7779  0E7D  0844               	movf	??_EUSART_Initialize+2,w
  7780  0E7E  00B1               	movwf	___aldiv@divisor+2
  7781  0E7F  0843               	movf	??_EUSART_Initialize+1,w
  7782  0E80  00B0               	movwf	___aldiv@divisor+1
  7783  0E81  0842               	movf	??_EUSART_Initialize,w
  7784  0E82  00AF               	movwf	___aldiv@divisor
  7785  0E83  083E               	movf	EUSART_Initialize@baudrate,w
  7786  0E84  00C6               	movwf	??_EUSART_Initialize+4
  7787  0E85  083F               	movf	EUSART_Initialize@baudrate+1,w
  7788  0E86  00C7               	movwf	??_EUSART_Initialize+5
  7789  0E87  0840               	movf	EUSART_Initialize@baudrate+2,w
  7790  0E88  00C8               	movwf	??_EUSART_Initialize+6
  7791  0E89  0841               	movf	EUSART_Initialize@baudrate+3,w
  7792  0E8A  00C9               	movwf	??_EUSART_Initialize+7
  7793  0E8B  3006               	movlw	6
  7794  0E8C                     u3415:	
  7795  0E8C  35C6               	lslf	??_EUSART_Initialize+4,f
  7796  0E8D  0DC7               	rlf	??_EUSART_Initialize+5,f
  7797  0E8E  0DC8               	rlf	??_EUSART_Initialize+6,f
  7798  0E8F  0DC9               	rlf	??_EUSART_Initialize+7,f
  7799  0E90  0B89               	decfsz	9,f
  7800  0E91  2E8C               	goto	u3415
  7801  0E92  09C6               	comf	??_EUSART_Initialize+4,f
  7802  0E93  09C7               	comf	??_EUSART_Initialize+5,f
  7803  0E94  09C8               	comf	??_EUSART_Initialize+6,f
  7804  0E95  09C9               	comf	??_EUSART_Initialize+7,f
  7805  0E96  0AC6               	incf	??_EUSART_Initialize+4,f
  7806  0E97  1903               	skipnz
  7807  0E98  0AC7               	incf	??_EUSART_Initialize+5,f
  7808  0E99  1903               	skipnz
  7809  0E9A  0AC8               	incf	??_EUSART_Initialize+6,f
  7810  0E9B  1903               	skipnz
  7811  0E9C  0AC9               	incf	??_EUSART_Initialize+7,f
  7812  0E9D  3000               	movlw	0
  7813  0E9E  0746               	addwf	??_EUSART_Initialize+4,w
  7814  0E9F  00B3               	movwf	___aldiv@dividend
  7815  0EA0  3024               	movlw	36
  7816  0EA1  3D47               	addwfc	??_EUSART_Initialize+5,w
  7817  0EA2  00B4               	movwf	___aldiv@dividend+1
  7818  0EA3  30F4               	movlw	244
  7819  0EA4  3D48               	addwfc	??_EUSART_Initialize+6,w
  7820  0EA5  00B5               	movwf	___aldiv@dividend+2
  7821  0EA6  3000               	movlw	0
  7822  0EA7  3D49               	addwfc	??_EUSART_Initialize+7,w
  7823  0EA8  00B6               	movwf	___aldiv@dividend+3
  7824  0EA9  318D  25E9  318E   	fcall	___aldiv
  7825  0EAC  0020               	movlb	0	; select bank0
  7826  0EAD  0830               	movf	?___aldiv+1,w
  7827  0EAE  00CB               	movwf	EUSART_Initialize@x+1
  7828  0EAF  082F               	movf	?___aldiv,w
  7829  0EB0  00CA               	movwf	EUSART_Initialize@x
  7830                           
  7831                           ;EUSART.c: 38: if(x>255)
  7832  0EB1  3001               	movlw	1
  7833  0EB2  024B               	subwf	EUSART_Initialize@x+1,w
  7834  0EB3  3000               	movlw	0
  7835  0EB4  1903               	skipnz
  7836  0EB5  024A               	subwf	EUSART_Initialize@x,w
  7837  0EB6  1C03               	skipc
  7838  0EB7  2EFF               	goto	l3492
  7839                           
  7840                           ;EUSART.c: 39: {
  7841                           ;EUSART.c: 40: x = (16000000 - baudrate*16)/(baudrate*16);
  7842  0EB8  083E               	movf	EUSART_Initialize@baudrate,w
  7843  0EB9  00C2               	movwf	??_EUSART_Initialize
  7844  0EBA  083F               	movf	EUSART_Initialize@baudrate+1,w
  7845  0EBB  00C3               	movwf	??_EUSART_Initialize+1
  7846  0EBC  0840               	movf	EUSART_Initialize@baudrate+2,w
  7847  0EBD  00C4               	movwf	??_EUSART_Initialize+2
  7848  0EBE  0841               	movf	EUSART_Initialize@baudrate+3,w
  7849  0EBF  00C5               	movwf	??_EUSART_Initialize+3
  7850  0EC0  3004               	movlw	4
  7851  0EC1                     u3435:	
  7852  0EC1  35C2               	lslf	??_EUSART_Initialize,f
  7853  0EC2  0DC3               	rlf	??_EUSART_Initialize+1,f
  7854  0EC3  0DC4               	rlf	??_EUSART_Initialize+2,f
  7855  0EC4  0DC5               	rlf	??_EUSART_Initialize+3,f
  7856  0EC5  0B89               	decfsz	9,f
  7857  0EC6  2EC1               	goto	u3435
  7858  0EC7  0845               	movf	??_EUSART_Initialize+3,w
  7859  0EC8  00B2               	movwf	___aldiv@divisor+3
  7860  0EC9  0844               	movf	??_EUSART_Initialize+2,w
  7861  0ECA  00B1               	movwf	___aldiv@divisor+2
  7862  0ECB  0843               	movf	??_EUSART_Initialize+1,w
  7863  0ECC  00B0               	movwf	___aldiv@divisor+1
  7864  0ECD  0842               	movf	??_EUSART_Initialize,w
  7865  0ECE  00AF               	movwf	___aldiv@divisor
  7866  0ECF  083E               	movf	EUSART_Initialize@baudrate,w
  7867  0ED0  00C6               	movwf	??_EUSART_Initialize+4
  7868  0ED1  083F               	movf	EUSART_Initialize@baudrate+1,w
  7869  0ED2  00C7               	movwf	??_EUSART_Initialize+5
  7870  0ED3  0840               	movf	EUSART_Initialize@baudrate+2,w
  7871  0ED4  00C8               	movwf	??_EUSART_Initialize+6
  7872  0ED5  0841               	movf	EUSART_Initialize@baudrate+3,w
  7873  0ED6  00C9               	movwf	??_EUSART_Initialize+7
  7874  0ED7  3004               	movlw	4
  7875  0ED8                     u3445:	
  7876  0ED8  35C6               	lslf	??_EUSART_Initialize+4,f
  7877  0ED9  0DC7               	rlf	??_EUSART_Initialize+5,f
  7878  0EDA  0DC8               	rlf	??_EUSART_Initialize+6,f
  7879  0EDB  0DC9               	rlf	??_EUSART_Initialize+7,f
  7880  0EDC  0B89               	decfsz	9,f
  7881  0EDD  2ED8               	goto	u3445
  7882  0EDE  09C6               	comf	??_EUSART_Initialize+4,f
  7883  0EDF  09C7               	comf	??_EUSART_Initialize+5,f
  7884  0EE0  09C8               	comf	??_EUSART_Initialize+6,f
  7885  0EE1  09C9               	comf	??_EUSART_Initialize+7,f
  7886  0EE2  0AC6               	incf	??_EUSART_Initialize+4,f
  7887  0EE3  1903               	skipnz
  7888  0EE4  0AC7               	incf	??_EUSART_Initialize+5,f
  7889  0EE5  1903               	skipnz
  7890  0EE6  0AC8               	incf	??_EUSART_Initialize+6,f
  7891  0EE7  1903               	skipnz
  7892  0EE8  0AC9               	incf	??_EUSART_Initialize+7,f
  7893  0EE9  3000               	movlw	0
  7894  0EEA  0746               	addwf	??_EUSART_Initialize+4,w
  7895  0EEB  00B3               	movwf	___aldiv@dividend
  7896  0EEC  3024               	movlw	36
  7897  0EED  3D47               	addwfc	??_EUSART_Initialize+5,w
  7898  0EEE  00B4               	movwf	___aldiv@dividend+1
  7899  0EEF  30F4               	movlw	244
  7900  0EF0  3D48               	addwfc	??_EUSART_Initialize+6,w
  7901  0EF1  00B5               	movwf	___aldiv@dividend+2
  7902  0EF2  3000               	movlw	0
  7903  0EF3  3D49               	addwfc	??_EUSART_Initialize+7,w
  7904  0EF4  00B6               	movwf	___aldiv@dividend+3
  7905  0EF5  318D  25E9  318E   	fcall	___aldiv
  7906  0EF8  0020               	movlb	0	; select bank0
  7907  0EF9  0830               	movf	?___aldiv+1,w
  7908  0EFA  00CB               	movwf	EUSART_Initialize@x+1
  7909  0EFB  082F               	movf	?___aldiv,w
  7910  0EFC  00CA               	movwf	EUSART_Initialize@x
  7911                           
  7912                           ;EUSART.c: 41: BRGH = 1;
  7913  0EFD  0023               	movlb	3	; select bank3
  7914  0EFE  151E               	bsf	30,2	;volatile
  7915  0EFF                     l3492:	
  7916                           
  7917                           ;EUSART.c: 42: }
  7918                           ;EUSART.c: 43: if(x<256)
  7919  0EFF  3001               	movlw	1
  7920  0F00  0020               	movlb	0	; select bank0
  7921  0F01  024B               	subwf	EUSART_Initialize@x+1,w
  7922  0F02  3000               	movlw	0
  7923  0F03  1903               	skipnz
  7924  0F04  024A               	subwf	EUSART_Initialize@x,w
  7925  0F05  1803               	skipnc
  7926  0F06  0008               	return
  7927                           
  7928                           ;EUSART.c: 44: {
  7929                           ;EUSART.c: 45: SPBRG = x;
  7930  0F07  084A               	movf	EUSART_Initialize@x,w
  7931  0F08  0023               	movlb	3	; select bank3
  7932  0F09  009B               	movwf	27	;volatile
  7933                           
  7934                           ;EUSART.c: 46: SYNC = 0;
  7935  0F0A  121E               	bcf	30,4	;volatile
  7936                           
  7937                           ;EUSART.c: 47: SPEN = 1;
  7938  0F0B  179D               	bsf	29,7	;volatile
  7939                           
  7940                           ;EUSART.c: 48: TRISC7 = 1;
  7941  0F0C  0021               	movlb	1	; select bank1
  7942  0F0D  178E               	bsf	14,7	;volatile
  7943                           
  7944                           ;EUSART.c: 49: TRISC6 = 1;
  7945  0F0E  170E               	bsf	14,6	;volatile
  7946                           
  7947                           ;EUSART.c: 50: CREN = 1;
  7948  0F0F  0023               	movlb	3	; select bank3
  7949  0F10  161D               	bsf	29,4	;volatile
  7950                           
  7951                           ;EUSART.c: 51: TXEN = 1;
  7952  0F11  169E               	bsf	30,5	;volatile
  7953                           
  7954                           ;EUSART.c: 52: return 1;
  7955                           ;	Return value of _EUSART_Initialize is never used
  7956  0F12  0008               	return
  7957  0F13                     __end_of_EUSART_Initialize:	
  7958                           ;EUSART.c: 53: }
  7959                           ;EUSART.c: 54: return 0;
  7960                           ;	Return value of _EUSART_Initialize is never used
  7961                           
  7962                           
  7963                           	psect	text22
  7964  0DE9                     __ptext22:	
  7965 ;; *************** function ___aldiv *****************
  7966 ;; Defined at:
  7967 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\aldiv.c"
  7968 ;; Parameters:    Size  Location     Type
  7969 ;;  divisor         4   15[BANK0 ] long 
  7970 ;;  dividend        4   19[BANK0 ] long 
  7971 ;; Auto vars:     Size  Location     Type
  7972 ;;  quotient        4   26[BANK0 ] long 
  7973 ;;  sign            1   25[BANK0 ] unsigned char 
  7974 ;;  counter         1   24[BANK0 ] unsigned char 
  7975 ;; Return value:  Size  Location     Type
  7976 ;;                  4   15[BANK0 ] long 
  7977 ;; Registers used:
  7978 ;;		wreg, status,2, status,0
  7979 ;; Tracked objects:
  7980 ;;		On entry : 0/0
  7981 ;;		On exit  : 0/0
  7982 ;;		Unchanged: 0/0
  7983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7984 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7985 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7986 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7987 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7988 ;;Total ram usage:       15 bytes
  7989 ;; Hardware stack levels used:    1
  7990 ;; Hardware stack levels required when called:    4
  7991 ;; This function calls:
  7992 ;;		Nothing
  7993 ;; This function is called by:
  7994 ;;		_EUSART_Initialize
  7995 ;; This function uses a non-reentrant model
  7996 ;;
  7997                           
  7998                           
  7999                           ;psect for function ___aldiv
  8000  0DE9                     ___aldiv:	
  8001                           
  8002                           ;incstack = 0
  8003                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  8004  0DE9  0020               	movlb	0	; select bank0
  8005  0DEA  01B9               	clrf	___aldiv@sign
  8006  0DEB  1FB2               	btfss	___aldiv@divisor+3,7
  8007  0DEC  2DFA               	goto	l569
  8008  0DED  09AF               	comf	___aldiv@divisor,f
  8009  0DEE  09B0               	comf	___aldiv@divisor+1,f
  8010  0DEF  09B1               	comf	___aldiv@divisor+2,f
  8011  0DF0  09B2               	comf	___aldiv@divisor+3,f
  8012  0DF1  0AAF               	incf	___aldiv@divisor,f
  8013  0DF2  1903               	skipnz
  8014  0DF3  0AB0               	incf	___aldiv@divisor+1,f
  8015  0DF4  1903               	skipnz
  8016  0DF5  0AB1               	incf	___aldiv@divisor+2,f
  8017  0DF6  1903               	skipnz
  8018  0DF7  0AB2               	incf	___aldiv@divisor+3,f
  8019  0DF8  01B9               	clrf	___aldiv@sign
  8020  0DF9  0AB9               	incf	___aldiv@sign,f
  8021  0DFA                     l569:	
  8022  0DFA  1FB6               	btfss	___aldiv@dividend+3,7
  8023  0DFB  2E0B               	goto	l3264
  8024  0DFC  09B3               	comf	___aldiv@dividend,f
  8025  0DFD  09B4               	comf	___aldiv@dividend+1,f
  8026  0DFE  09B5               	comf	___aldiv@dividend+2,f
  8027  0DFF  09B6               	comf	___aldiv@dividend+3,f
  8028  0E00  0AB3               	incf	___aldiv@dividend,f
  8029  0E01  1903               	skipnz
  8030  0E02  0AB4               	incf	___aldiv@dividend+1,f
  8031  0E03  1903               	skipnz
  8032  0E04  0AB5               	incf	___aldiv@dividend+2,f
  8033  0E05  1903               	skipnz
  8034  0E06  0AB6               	incf	___aldiv@dividend+3,f
  8035  0E07  3001               	movlw	1
  8036  0E08  00B7               	movwf	??___aldiv
  8037  0E09  0837               	movf	??___aldiv,w
  8038  0E0A  06B9               	xorwf	___aldiv@sign,f
  8039  0E0B                     l3264:	
  8040  0E0B  3000               	movlw	0
  8041  0E0C  00BD               	movwf	___aldiv@quotient+3
  8042  0E0D  3000               	movlw	0
  8043  0E0E  00BC               	movwf	___aldiv@quotient+2
  8044  0E0F  3000               	movlw	0
  8045  0E10  00BB               	movwf	___aldiv@quotient+1
  8046  0E11  3000               	movlw	0
  8047  0E12  00BA               	movwf	___aldiv@quotient
  8048  0E13  0832               	movf	___aldiv@divisor+3,w
  8049  0E14  0431               	iorwf	___aldiv@divisor+2,w
  8050  0E15  0430               	iorwf	___aldiv@divisor+1,w
  8051  0E16  042F               	iorwf	___aldiv@divisor,w
  8052  0E17  1903               	skipnz
  8053  0E18  2E54               	goto	l3286
  8054  0E19  01B8               	clrf	___aldiv@counter
  8055  0E1A  0AB8               	incf	___aldiv@counter,f
  8056  0E1B                     l3272:	
  8057  0E1B  1BB2               	btfsc	___aldiv@divisor+3,7
  8058  0E1C  2E29               	goto	l3274
  8059  0E1D  3001               	movlw	1
  8060  0E1E                     u3065:	
  8061  0E1E  35AF               	lslf	___aldiv@divisor,f
  8062  0E1F  0DB0               	rlf	___aldiv@divisor+1,f
  8063  0E20  0DB1               	rlf	___aldiv@divisor+2,f
  8064  0E21  0DB2               	rlf	___aldiv@divisor+3,f
  8065  0E22  0B89               	decfsz	9,f
  8066  0E23  2E1E               	goto	u3065
  8067  0E24  3001               	movlw	1
  8068  0E25  00B7               	movwf	??___aldiv
  8069  0E26  0837               	movf	??___aldiv,w
  8070  0E27  07B8               	addwf	___aldiv@counter,f
  8071  0E28  2E1B               	goto	l3272
  8072  0E29                     l3274:	
  8073  0E29  3001               	movlw	1
  8074  0E2A                     u3085:	
  8075  0E2A  35BA               	lslf	___aldiv@quotient,f
  8076  0E2B  0DBB               	rlf	___aldiv@quotient+1,f
  8077  0E2C  0DBC               	rlf	___aldiv@quotient+2,f
  8078  0E2D  0DBD               	rlf	___aldiv@quotient+3,f
  8079  0E2E  0B89               	decfsz	9,f
  8080  0E2F  2E2A               	goto	u3085
  8081  0E30  0832               	movf	___aldiv@divisor+3,w
  8082  0E31  0236               	subwf	___aldiv@dividend+3,w
  8083  0E32  1D03               	skipz
  8084  0E33  2E3E               	goto	u3095
  8085  0E34  0831               	movf	___aldiv@divisor+2,w
  8086  0E35  0235               	subwf	___aldiv@dividend+2,w
  8087  0E36  1D03               	skipz
  8088  0E37  2E3E               	goto	u3095
  8089  0E38  0830               	movf	___aldiv@divisor+1,w
  8090  0E39  0234               	subwf	___aldiv@dividend+1,w
  8091  0E3A  1D03               	skipz
  8092  0E3B  2E3E               	goto	u3095
  8093  0E3C  082F               	movf	___aldiv@divisor,w
  8094  0E3D  0233               	subwf	___aldiv@dividend,w
  8095  0E3E                     u3095:	
  8096  0E3E  1C03               	skipc
  8097  0E3F  2E49               	goto	l3282
  8098  0E40  082F               	movf	___aldiv@divisor,w
  8099  0E41  02B3               	subwf	___aldiv@dividend,f
  8100  0E42  0830               	movf	___aldiv@divisor+1,w
  8101  0E43  3BB4               	subwfb	___aldiv@dividend+1,f
  8102  0E44  0831               	movf	___aldiv@divisor+2,w
  8103  0E45  3BB5               	subwfb	___aldiv@dividend+2,f
  8104  0E46  0832               	movf	___aldiv@divisor+3,w
  8105  0E47  3BB6               	subwfb	___aldiv@dividend+3,f
  8106  0E48  143A               	bsf	___aldiv@quotient,0
  8107  0E49                     l3282:	
  8108  0E49  3001               	movlw	1
  8109  0E4A                     u3105:	
  8110  0E4A  36B2               	lsrf	___aldiv@divisor+3,f
  8111  0E4B  0CB1               	rrf	___aldiv@divisor+2,f
  8112  0E4C  0CB0               	rrf	___aldiv@divisor+1,f
  8113  0E4D  0CAF               	rrf	___aldiv@divisor,f
  8114  0E4E  0B89               	decfsz	9,f
  8115  0E4F  2E4A               	goto	u3105
  8116  0E50  3001               	movlw	1
  8117  0E51  02B8               	subwf	___aldiv@counter,f
  8118  0E52  1D03               	btfss	3,2
  8119  0E53  2E29               	goto	l3274
  8120  0E54                     l3286:	
  8121  0E54  0839               	movf	___aldiv@sign,w
  8122  0E55  1903               	btfsc	3,2
  8123  0E56  2E62               	goto	l3290
  8124  0E57  09BA               	comf	___aldiv@quotient,f
  8125  0E58  09BB               	comf	___aldiv@quotient+1,f
  8126  0E59  09BC               	comf	___aldiv@quotient+2,f
  8127  0E5A  09BD               	comf	___aldiv@quotient+3,f
  8128  0E5B  0ABA               	incf	___aldiv@quotient,f
  8129  0E5C  1903               	skipnz
  8130  0E5D  0ABB               	incf	___aldiv@quotient+1,f
  8131  0E5E  1903               	skipnz
  8132  0E5F  0ABC               	incf	___aldiv@quotient+2,f
  8133  0E60  1903               	skipnz
  8134  0E61  0ABD               	incf	___aldiv@quotient+3,f
  8135  0E62                     l3290:	
  8136  0E62  083D               	movf	___aldiv@quotient+3,w
  8137  0E63  00B2               	movwf	?___aldiv+3
  8138  0E64  083C               	movf	___aldiv@quotient+2,w
  8139  0E65  00B1               	movwf	?___aldiv+2
  8140  0E66  083B               	movf	___aldiv@quotient+1,w
  8141  0E67  00B0               	movwf	?___aldiv+1
  8142  0E68  083A               	movf	___aldiv@quotient,w
  8143  0E69  00AF               	movwf	?___aldiv
  8144  0E6A  0008               	return
  8145  0E6B                     __end_of___aldiv:	
  8146                           
  8147                           	psect	text23
  8148  0D68                     __ptext23:	
  8149 ;; *************** function _DS1302_Initialize *****************
  8150 ;; Defined at:
  8151 ;;		line 105 in file "ds1302.c"
  8152 ;; Parameters:    Size  Location     Type
  8153 ;;  sec             1    wreg     unsigned char 
  8154 ;;  min             1   30[BANK0 ] unsigned char 
  8155 ;;  hr              1   31[BANK0 ] unsigned char 
  8156 ;;  day             1   32[BANK0 ] unsigned char 
  8157 ;;  date            1   33[BANK0 ] unsigned char 
  8158 ;;  mth             1   34[BANK0 ] unsigned char 
  8159 ;;  year            1   35[BANK0 ] unsigned char 
  8160 ;; Auto vars:     Size  Location     Type
  8161 ;;  sec             1   37[BANK0 ] unsigned char 
  8162 ;;  year1           1   44[BANK0 ] unsigned char 
  8163 ;;  mth1            1   43[BANK0 ] unsigned char 
  8164 ;;  date1           1   42[BANK0 ] unsigned char 
  8165 ;;  day1            1   41[BANK0 ] unsigned char 
  8166 ;;  hr1             1   40[BANK0 ] unsigned char 
  8167 ;;  min1            1   39[BANK0 ] unsigned char 
  8168 ;;  sec1            1   38[BANK0 ] unsigned char 
  8169 ;; Return value:  Size  Location     Type
  8170 ;;                  1    wreg      void 
  8171 ;; Registers used:
  8172 ;;		wreg, status,2, status,0, pclath, cstack
  8173 ;; Tracked objects:
  8174 ;;		On entry : 0/0
  8175 ;;		On exit  : 0/0
  8176 ;;		Unchanged: 0/0
  8177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8178 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8179 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8180 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8181 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8182 ;;Total ram usage:       15 bytes
  8183 ;; Hardware stack levels used:    1
  8184 ;; Hardware stack levels required when called:    6
  8185 ;; This function calls:
  8186 ;;		_DS1302_Reset
  8187 ;;		_DS1302_WriteByte
  8188 ;;		_get_bcd
  8189 ;; This function is called by:
  8190 ;;		_main
  8191 ;;		_initMain
  8192 ;; This function uses a non-reentrant model
  8193 ;;
  8194                           
  8195                           
  8196                           ;psect for function _DS1302_Initialize
  8197  0D68                     _DS1302_Initialize:	
  8198                           
  8199                           ;incstack = 0
  8200                           ; Regs used in _DS1302_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8201                           ;DS1302_Initialize@sec stored from wreg
  8202  0D68  0020               	movlb	0	; select bank0
  8203  0D69  00C5               	movwf	DS1302_Initialize@sec
  8204                           
  8205                           ;ds1302.c: 109: byte sec1 = get_bcd(sec);
  8206  0D6A  0845               	movf	DS1302_Initialize@sec,w
  8207  0D6B  3189  2152  318D   	fcall	_get_bcd
  8208  0D6E  0020               	movlb	0	; select bank0
  8209  0D6F  00C4               	movwf	??_DS1302_Initialize
  8210  0D70  0844               	movf	??_DS1302_Initialize,w
  8211  0D71  00C6               	movwf	DS1302_Initialize@sec1
  8212                           
  8213                           ;ds1302.c: 110: byte min1 = get_bcd(min);
  8214  0D72  083E               	movf	DS1302_Initialize@min,w
  8215  0D73  3189  2152  318D   	fcall	_get_bcd
  8216  0D76  0020               	movlb	0	; select bank0
  8217  0D77  00C4               	movwf	??_DS1302_Initialize
  8218  0D78  0844               	movf	??_DS1302_Initialize,w
  8219  0D79  00C7               	movwf	DS1302_Initialize@min1
  8220                           
  8221                           ;ds1302.c: 111: byte hr1 = get_bcd(hr);
  8222  0D7A  083F               	movf	DS1302_Initialize@hr,w
  8223  0D7B  3189  2152  318D   	fcall	_get_bcd
  8224  0D7E  0020               	movlb	0	; select bank0
  8225  0D7F  00C4               	movwf	??_DS1302_Initialize
  8226  0D80  0844               	movf	??_DS1302_Initialize,w
  8227  0D81  00C8               	movwf	DS1302_Initialize@hr1
  8228                           
  8229                           ;ds1302.c: 112: byte day1 = get_bcd(day);
  8230  0D82  0840               	movf	DS1302_Initialize@day,w
  8231  0D83  3189  2152  318D   	fcall	_get_bcd
  8232  0D86  0020               	movlb	0	; select bank0
  8233  0D87  00C4               	movwf	??_DS1302_Initialize
  8234  0D88  0844               	movf	??_DS1302_Initialize,w
  8235  0D89  00C9               	movwf	DS1302_Initialize@day1
  8236                           
  8237                           ;ds1302.c: 113: byte date1 = get_bcd(date);
  8238  0D8A  0841               	movf	DS1302_Initialize@date,w
  8239  0D8B  3189  2152  318D   	fcall	_get_bcd
  8240  0D8E  0020               	movlb	0	; select bank0
  8241  0D8F  00C4               	movwf	??_DS1302_Initialize
  8242  0D90  0844               	movf	??_DS1302_Initialize,w
  8243  0D91  00CA               	movwf	DS1302_Initialize@date1
  8244                           
  8245                           ;ds1302.c: 114: byte mth1 = get_bcd(mth);
  8246  0D92  0842               	movf	DS1302_Initialize@mth,w
  8247  0D93  3189  2152  318D   	fcall	_get_bcd
  8248  0D96  0020               	movlb	0	; select bank0
  8249  0D97  00C4               	movwf	??_DS1302_Initialize
  8250  0D98  0844               	movf	??_DS1302_Initialize,w
  8251  0D99  00CB               	movwf	DS1302_Initialize@mth1
  8252                           
  8253                           ;ds1302.c: 115: byte year1 = get_bcd(year);
  8254  0D9A  0843               	movf	DS1302_Initialize@year,w
  8255  0D9B  3189  2152  318D   	fcall	_get_bcd
  8256  0D9E  0020               	movlb	0	; select bank0
  8257  0D9F  00C4               	movwf	??_DS1302_Initialize
  8258  0DA0  0844               	movf	??_DS1302_Initialize,w
  8259  0DA1  00CC               	movwf	DS1302_Initialize@year1
  8260                           
  8261                           ;ds1302.c: 118: DS1302_Reset();
  8262  0DA2  3195  25D5  318D   	fcall	_DS1302_Reset
  8263                           
  8264                           ;ds1302.c: 119: DS1302_WriteByte(0x8e);
  8265  0DA5  308E               	movlw	142
  8266  0DA6  3196  2657  318D   	fcall	_DS1302_WriteByte
  8267                           
  8268                           ;ds1302.c: 120: DS1302_WriteByte(0);
  8269  0DA9  3000               	movlw	0
  8270  0DAA  3196  2657  318D   	fcall	_DS1302_WriteByte
  8271                           
  8272                           ;ds1302.c: 121: DS1302_Reset();
  8273  0DAD  3195  25D5  318D   	fcall	_DS1302_Reset
  8274                           
  8275                           ;ds1302.c: 122: DS1302_WriteByte(0x90);
  8276  0DB0  3090               	movlw	144
  8277  0DB1  3196  2657  318D   	fcall	_DS1302_WriteByte
  8278                           
  8279                           ;ds1302.c: 123: DS1302_WriteByte(0xab);
  8280  0DB4  30AB               	movlw	171
  8281  0DB5  3196  2657  318D   	fcall	_DS1302_WriteByte
  8282                           
  8283                           ;ds1302.c: 124: DS1302_Reset();
  8284  0DB8  3195  25D5  318D   	fcall	_DS1302_Reset
  8285                           
  8286                           ;ds1302.c: 125: DS1302_WriteByte(0xbe);
  8287  0DBB  30BE               	movlw	190
  8288  0DBC  3196  2657  318D   	fcall	_DS1302_WriteByte
  8289                           
  8290                           ;ds1302.c: 126: DS1302_WriteByte(sec1);
  8291  0DBF  0020               	movlb	0	; select bank0
  8292  0DC0  0846               	movf	DS1302_Initialize@sec1,w
  8293  0DC1  3196  2657  318D   	fcall	_DS1302_WriteByte
  8294                           
  8295                           ;ds1302.c: 127: DS1302_WriteByte(min1);
  8296  0DC4  0020               	movlb	0	; select bank0
  8297  0DC5  0847               	movf	DS1302_Initialize@min1,w
  8298  0DC6  3196  2657  318D   	fcall	_DS1302_WriteByte
  8299                           
  8300                           ;ds1302.c: 128: DS1302_WriteByte(hr1);
  8301  0DC9  0020               	movlb	0	; select bank0
  8302  0DCA  0848               	movf	DS1302_Initialize@hr1,w
  8303  0DCB  3196  2657  318D   	fcall	_DS1302_WriteByte
  8304                           
  8305                           ;ds1302.c: 129: DS1302_WriteByte(date1);
  8306  0DCE  0020               	movlb	0	; select bank0
  8307  0DCF  084A               	movf	DS1302_Initialize@date1,w
  8308  0DD0  3196  2657  318D   	fcall	_DS1302_WriteByte
  8309                           
  8310                           ;ds1302.c: 130: DS1302_WriteByte(mth1);
  8311  0DD3  0020               	movlb	0	; select bank0
  8312  0DD4  084B               	movf	DS1302_Initialize@mth1,w
  8313  0DD5  3196  2657  318D   	fcall	_DS1302_WriteByte
  8314                           
  8315                           ;ds1302.c: 131: DS1302_WriteByte(day1);
  8316  0DD8  0020               	movlb	0	; select bank0
  8317  0DD9  0849               	movf	DS1302_Initialize@day1,w
  8318  0DDA  3196  2657  318D   	fcall	_DS1302_WriteByte
  8319                           
  8320                           ;ds1302.c: 132: DS1302_WriteByte(year1);
  8321  0DDD  0020               	movlb	0	; select bank0
  8322  0DDE  084C               	movf	DS1302_Initialize@year1,w
  8323  0DDF  3196  2657  318D   	fcall	_DS1302_WriteByte
  8324                           
  8325                           ;ds1302.c: 133: DS1302_WriteByte(0);
  8326  0DE2  3000               	movlw	0
  8327  0DE3  3196  2657  318D   	fcall	_DS1302_WriteByte
  8328                           
  8329                           ;ds1302.c: 134: DS1302_Reset();
  8330  0DE6  3195  25D5         	fcall	_DS1302_Reset
  8331  0DE8  0008               	return
  8332  0DE9                     __end_of_DS1302_Initialize:	
  8333                           
  8334                           	psect	text24
  8335  0952                     __ptext24:	
  8336 ;; *************** function _get_bcd *****************
  8337 ;; Defined at:
  8338 ;;		line 147 in file "ds1302.c"
  8339 ;; Parameters:    Size  Location     Type
  8340 ;;  data            1    wreg     unsigned char 
  8341 ;; Auto vars:     Size  Location     Type
  8342 ;;  data            1   28[BANK0 ] unsigned char 
  8343 ;;  nibh            1   29[BANK0 ] unsigned char 
  8344 ;;  nibl            1   27[BANK0 ] unsigned char 
  8345 ;; Return value:  Size  Location     Type
  8346 ;;                  1    wreg      unsigned char 
  8347 ;; Registers used:
  8348 ;;		wreg, status,2, status,0, pclath, cstack
  8349 ;; Tracked objects:
  8350 ;;		On entry : 0/0
  8351 ;;		On exit  : 0/0
  8352 ;;		Unchanged: 0/0
  8353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8355 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8356 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8357 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8358 ;;Total ram usage:        6 bytes
  8359 ;; Hardware stack levels used:    1
  8360 ;; Hardware stack levels required when called:    5
  8361 ;; This function calls:
  8362 ;;		___awdiv
  8363 ;;		___bmul
  8364 ;; This function is called by:
  8365 ;;		_DS1302_Initialize
  8366 ;; This function uses a non-reentrant model
  8367 ;;
  8368                           
  8369                           
  8370                           ;psect for function _get_bcd
  8371  0952                     _get_bcd:	
  8372                           
  8373                           ;incstack = 0
  8374                           ; Regs used in _get_bcd: [wreg+status,2+status,0+pclath+cstack]
  8375                           ;get_bcd@data stored from wreg
  8376  0952  0020               	movlb	0	; select bank0
  8377  0953  00BC               	movwf	get_bcd@data
  8378                           
  8379                           ;ds1302.c: 149: unsigned char nibh;
  8380                           ;ds1302.c: 150: unsigned char nibl;
  8381                           ;ds1302.c: 152: nibh=data/10;
  8382  0954  300A               	movlw	10
  8383  0955  00AF               	movwf	___awdiv@divisor
  8384  0956  3000               	movlw	0
  8385  0957  00B0               	movwf	___awdiv@divisor+1
  8386  0958  083C               	movf	get_bcd@data,w
  8387  0959  00B8               	movwf	??_get_bcd
  8388  095A  01B9               	clrf	??_get_bcd+1
  8389  095B  0838               	movf	??_get_bcd,w
  8390  095C  00B1               	movwf	___awdiv@dividend
  8391  095D  0839               	movf	??_get_bcd+1,w
  8392  095E  00B2               	movwf	___awdiv@dividend+1
  8393  095F  318A  229D  3189   	fcall	___awdiv
  8394  0962  0020               	movlb	0	; select bank0
  8395  0963  082F               	movf	?___awdiv,w
  8396  0964  00BA               	movwf	??_get_bcd+2
  8397  0965  083A               	movf	??_get_bcd+2,w
  8398  0966  00BD               	movwf	get_bcd@nibh
  8399                           
  8400                           ;ds1302.c: 153: nibl=data-(nibh*10);
  8401  0967  300A               	movlw	10
  8402  0968  00B8               	movwf	??_get_bcd
  8403  0969  0838               	movf	??_get_bcd,w
  8404  096A  00AF               	movwf	___bmul@multiplicand
  8405  096B  083D               	movf	get_bcd@nibh,w
  8406  096C  3196  2620  3189   	fcall	___bmul
  8407  096F  3AFF               	xorlw	255
  8408  0970  3E01               	addlw	1
  8409  0971  0020               	movlb	0	; select bank0
  8410  0972  073C               	addwf	get_bcd@data,w
  8411  0973  00B9               	movwf	??_get_bcd+1
  8412  0974  0839               	movf	??_get_bcd+1,w
  8413  0975  00BB               	movwf	get_bcd@nibl
  8414                           
  8415                           ;ds1302.c: 155: return((nibh<<4)|nibl);
  8416  0976  083D               	movf	get_bcd@nibh,w
  8417  0977  00B8               	movwf	??_get_bcd
  8418  0978  3003               	movlw	3
  8419  0979                     u2955:	
  8420  0979  35B8               	lslf	??_get_bcd,f
  8421  097A  3EFF               	addlw	-1
  8422  097B  1D03               	skipz
  8423  097C  2979               	goto	u2955
  8424  097D  3538               	lslf	??_get_bcd,w
  8425  097E  043B               	iorwf	get_bcd@nibl,w
  8426  097F  0008               	return
  8427  0980                     __end_of_get_bcd:	
  8428                           
  8429                           	psect	text25
  8430  1620                     __ptext25:	
  8431 ;; *************** function ___bmul *****************
  8432 ;; Defined at:
  8433 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul8.c"
  8434 ;; Parameters:    Size  Location     Type
  8435 ;;  multiplier      1    wreg     unsigned char 
  8436 ;;  multiplicand    1   15[BANK0 ] unsigned char 
  8437 ;; Auto vars:     Size  Location     Type
  8438 ;;  multiplier      1   18[BANK0 ] unsigned char 
  8439 ;;  product         1   17[BANK0 ] unsigned char 
  8440 ;; Return value:  Size  Location     Type
  8441 ;;                  1    wreg      unsigned char 
  8442 ;; Registers used:
  8443 ;;		wreg, status,2, status,0
  8444 ;; Tracked objects:
  8445 ;;		On entry : 0/0
  8446 ;;		On exit  : 0/0
  8447 ;;		Unchanged: 0/0
  8448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8449 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8450 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8451 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8452 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8453 ;;Total ram usage:        4 bytes
  8454 ;; Hardware stack levels used:    1
  8455 ;; Hardware stack levels required when called:    4
  8456 ;; This function calls:
  8457 ;;		Nothing
  8458 ;; This function is called by:
  8459 ;;		_get_bcd
  8460 ;; This function uses a non-reentrant model
  8461 ;;
  8462                           
  8463                           
  8464                           ;psect for function ___bmul
  8465  1620                     ___bmul:	
  8466                           
  8467                           ;incstack = 0
  8468                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  8469                           ;___bmul@multiplier stored from wreg
  8470  1620  0020               	movlb	0	; select bank0
  8471  1621  00B2               	movwf	___bmul@multiplier
  8472  1622  01B1               	clrf	___bmul@product
  8473  1623                     l3134:	
  8474  1623  1C32               	btfss	___bmul@multiplier,0
  8475  1624  2E29               	goto	l3138
  8476  1625  082F               	movf	___bmul@multiplicand,w
  8477  1626  00B0               	movwf	??___bmul
  8478  1627  0830               	movf	??___bmul,w
  8479  1628  07B1               	addwf	___bmul@product,f
  8480  1629                     l3138:	
  8481  1629  1003               	clrc
  8482  162A  0DAF               	rlf	___bmul@multiplicand,f
  8483  162B  1003               	clrc
  8484  162C  0CB2               	rrf	___bmul@multiplier,f
  8485  162D  0832               	movf	___bmul@multiplier,w
  8486  162E  1D03               	btfss	3,2
  8487  162F  2E23               	goto	l3134
  8488  1630  0831               	movf	___bmul@product,w
  8489  1631  0008               	return
  8490  1632                     __end_of___bmul:	
  8491                           
  8492                           	psect	text26
  8493  0A9D                     __ptext26:	
  8494 ;; *************** function ___awdiv *****************
  8495 ;; Defined at:
  8496 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awdiv.c"
  8497 ;; Parameters:    Size  Location     Type
  8498 ;;  divisor         2   15[BANK0 ] int 
  8499 ;;  dividend        2   17[BANK0 ] int 
  8500 ;; Auto vars:     Size  Location     Type
  8501 ;;  quotient        2   22[BANK0 ] int 
  8502 ;;  sign            1   21[BANK0 ] unsigned char 
  8503 ;;  counter         1   20[BANK0 ] unsigned char 
  8504 ;; Return value:  Size  Location     Type
  8505 ;;                  2   15[BANK0 ] int 
  8506 ;; Registers used:
  8507 ;;		wreg, status,2, status,0
  8508 ;; Tracked objects:
  8509 ;;		On entry : 0/0
  8510 ;;		On exit  : 0/0
  8511 ;;		Unchanged: 0/0
  8512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8513 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8514 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8515 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8516 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8517 ;;Total ram usage:        9 bytes
  8518 ;; Hardware stack levels used:    1
  8519 ;; Hardware stack levels required when called:    4
  8520 ;; This function calls:
  8521 ;;		Nothing
  8522 ;; This function is called by:
  8523 ;;		_get_bcd
  8524 ;; This function uses a non-reentrant model
  8525 ;;
  8526                           
  8527                           
  8528                           ;psect for function ___awdiv
  8529  0A9D                     ___awdiv:	
  8530                           
  8531                           ;incstack = 0
  8532                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  8533  0A9D  0020               	movlb	0	; select bank0
  8534  0A9E  01B5               	clrf	___awdiv@sign
  8535  0A9F  1FB0               	btfss	___awdiv@divisor+1,7
  8536  0AA0  2AA8               	goto	l3154
  8537  0AA1  09AF               	comf	___awdiv@divisor,f
  8538  0AA2  09B0               	comf	___awdiv@divisor+1,f
  8539  0AA3  0AAF               	incf	___awdiv@divisor,f
  8540  0AA4  1903               	skipnz
  8541  0AA5  0AB0               	incf	___awdiv@divisor+1,f
  8542  0AA6  01B5               	clrf	___awdiv@sign
  8543  0AA7  0AB5               	incf	___awdiv@sign,f
  8544  0AA8                     l3154:	
  8545  0AA8  1FB2               	btfss	___awdiv@dividend+1,7
  8546  0AA9  2AB3               	goto	l3160
  8547  0AAA  09B1               	comf	___awdiv@dividend,f
  8548  0AAB  09B2               	comf	___awdiv@dividend+1,f
  8549  0AAC  0AB1               	incf	___awdiv@dividend,f
  8550  0AAD  1903               	skipnz
  8551  0AAE  0AB2               	incf	___awdiv@dividend+1,f
  8552  0AAF  3001               	movlw	1
  8553  0AB0  00B3               	movwf	??___awdiv
  8554  0AB1  0833               	movf	??___awdiv,w
  8555  0AB2  06B5               	xorwf	___awdiv@sign,f
  8556  0AB3                     l3160:	
  8557  0AB3  01B6               	clrf	___awdiv@quotient
  8558  0AB4  01B7               	clrf	___awdiv@quotient+1
  8559  0AB5  082F               	movf	___awdiv@divisor,w
  8560  0AB6  0430               	iorwf	___awdiv@divisor+1,w
  8561  0AB7  1903               	btfsc	3,2
  8562  0AB8  2AE2               	goto	l3182
  8563  0AB9  01B4               	clrf	___awdiv@counter
  8564  0ABA  0AB4               	incf	___awdiv@counter,f
  8565  0ABB                     l3170:	
  8566  0ABB  1BB0               	btfsc	___awdiv@divisor+1,7
  8567  0ABC  2AC7               	goto	l3172
  8568  0ABD  3001               	movlw	1
  8569  0ABE                     u2855:	
  8570  0ABE  35AF               	lslf	___awdiv@divisor,f
  8571  0ABF  0DB0               	rlf	___awdiv@divisor+1,f
  8572  0AC0  0B89               	decfsz	9,f
  8573  0AC1  2ABE               	goto	u2855
  8574  0AC2  3001               	movlw	1
  8575  0AC3  00B3               	movwf	??___awdiv
  8576  0AC4  0833               	movf	??___awdiv,w
  8577  0AC5  07B4               	addwf	___awdiv@counter,f
  8578  0AC6  2ABB               	goto	l3170
  8579  0AC7                     l3172:	
  8580  0AC7  3001               	movlw	1
  8581  0AC8                     u2875:	
  8582  0AC8  35B6               	lslf	___awdiv@quotient,f
  8583  0AC9  0DB7               	rlf	___awdiv@quotient+1,f
  8584  0ACA  0B89               	decfsz	9,f
  8585  0ACB  2AC8               	goto	u2875
  8586  0ACC  0830               	movf	___awdiv@divisor+1,w
  8587  0ACD  0232               	subwf	___awdiv@dividend+1,w
  8588  0ACE  1D03               	skipz
  8589  0ACF  2AD2               	goto	u2885
  8590  0AD0  082F               	movf	___awdiv@divisor,w
  8591  0AD1  0231               	subwf	___awdiv@dividend,w
  8592  0AD2                     u2885:	
  8593  0AD2  1C03               	skipc
  8594  0AD3  2AD9               	goto	l3178
  8595  0AD4  082F               	movf	___awdiv@divisor,w
  8596  0AD5  02B1               	subwf	___awdiv@dividend,f
  8597  0AD6  0830               	movf	___awdiv@divisor+1,w
  8598  0AD7  3BB2               	subwfb	___awdiv@dividend+1,f
  8599  0AD8  1436               	bsf	___awdiv@quotient,0
  8600  0AD9                     l3178:	
  8601  0AD9  3001               	movlw	1
  8602  0ADA                     u2895:	
  8603  0ADA  36B0               	lsrf	___awdiv@divisor+1,f
  8604  0ADB  0CAF               	rrf	___awdiv@divisor,f
  8605  0ADC  0B89               	decfsz	9,f
  8606  0ADD  2ADA               	goto	u2895
  8607  0ADE  3001               	movlw	1
  8608  0ADF  02B4               	subwf	___awdiv@counter,f
  8609  0AE0  1D03               	btfss	3,2
  8610  0AE1  2AC7               	goto	l3172
  8611  0AE2                     l3182:	
  8612  0AE2  0835               	movf	___awdiv@sign,w
  8613  0AE3  1903               	btfsc	3,2
  8614  0AE4  2AEA               	goto	l3186
  8615  0AE5  09B6               	comf	___awdiv@quotient,f
  8616  0AE6  09B7               	comf	___awdiv@quotient+1,f
  8617  0AE7  0AB6               	incf	___awdiv@quotient,f
  8618  0AE8  1903               	skipnz
  8619  0AE9  0AB7               	incf	___awdiv@quotient+1,f
  8620  0AEA                     l3186:	
  8621  0AEA  0837               	movf	___awdiv@quotient+1,w
  8622  0AEB  00B0               	movwf	?___awdiv+1
  8623  0AEC  0836               	movf	___awdiv@quotient,w
  8624  0AED  00AF               	movwf	?___awdiv
  8625  0AEE  0008               	return
  8626  0AEF                     __end_of___awdiv:	
  8627                           
  8628                           	psect	text27
  8629  1657                     __ptext27:	
  8630 ;; *************** function _DS1302_WriteByte *****************
  8631 ;; Defined at:
  8632 ;;		line 43 in file "ds1302.c"
  8633 ;; Parameters:    Size  Location     Type
  8634 ;;  W_Byte          1    wreg     unsigned char 
  8635 ;; Auto vars:     Size  Location     Type
  8636 ;;  W_Byte          1   16[BANK0 ] unsigned char 
  8637 ;;  i               1   17[BANK0 ] unsigned char 
  8638 ;; Return value:  Size  Location     Type
  8639 ;;                  1    wreg      void 
  8640 ;; Registers used:
  8641 ;;		wreg, status,2, status,0
  8642 ;; Tracked objects:
  8643 ;;		On entry : 0/0
  8644 ;;		On exit  : 0/0
  8645 ;;		Unchanged: 0/0
  8646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8648 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8649 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8650 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8651 ;;Total ram usage:        3 bytes
  8652 ;; Hardware stack levels used:    1
  8653 ;; Hardware stack levels required when called:    4
  8654 ;; This function calls:
  8655 ;;		Nothing
  8656 ;; This function is called by:
  8657 ;;		_DS1302_Initialize
  8658 ;; This function uses a non-reentrant model
  8659 ;;
  8660                           
  8661                           
  8662                           ;psect for function _DS1302_WriteByte
  8663  1657                     _DS1302_WriteByte:	
  8664                           
  8665                           ;incstack = 0
  8666                           ; Regs used in _DS1302_WriteByte: [wreg+status,2+status,0]
  8667                           ;DS1302_WriteByte@W_Byte stored from wreg
  8668  1657  0020               	movlb	0	; select bank0
  8669  1658  00B0               	movwf	DS1302_WriteByte@W_Byte
  8670                           
  8671                           ;ds1302.c: 45: unsigned char i;
  8672                           ;ds1302.c: 47: for(i = 0; i < 8; ++i)
  8673  1659  01B1               	clrf	DS1302_WriteByte@i
  8674  165A                     L2:	
  8675  165A  3008               	movlw	8
  8676  165B  0231               	subwf	DS1302_WriteByte@i,w
  8677  165C  1803               	btfsc	3,0
  8678  165D  0008               	return
  8679                           
  8680                           ;ds1302.c: 48: {
  8681                           ;ds1302.c: 49: RD2 = 0;
  8682  165E  110F               	bcf	15,2	;volatile
  8683                           
  8684                           ;ds1302.c: 51: if(W_Byte & 0x01)
  8685  165F  1830               	btfsc	DS1302_WriteByte@W_Byte,0
  8686                           
  8687                           ;ds1302.c: 52: {
  8688                           ;ds1302.c: 53: RD2 = 1;
  8689  1660  150F               	bsf	15,2	;volatile
  8690                           
  8691                           ;ds1302.c: 54: }
  8692                           ;ds1302.c: 56: RD1 = 0;
  8693  1661  108F               	bcf	15,1	;volatile
  8694                           
  8695                           ;ds1302.c: 57: RD1 = 1;
  8696  1662  148F               	bsf	15,1	;volatile
  8697                           
  8698                           ;ds1302.c: 58: W_Byte >>= 1;
  8699  1663  1003               	clrc
  8700  1664  0CB0               	rrf	DS1302_WriteByte@W_Byte,f
  8701  1665  3001               	movlw	1
  8702  1666  00AF               	movwf	??_DS1302_WriteByte
  8703  1667  082F               	movf	??_DS1302_WriteByte,w
  8704  1668  07B1               	addwf	DS1302_WriteByte@i,f
  8705  1669  2E5A               	goto	L2
  8706  166A                     __end_of_DS1302_WriteByte:	
  8707                           
  8708                           	psect	text28
  8709  15D5                     __ptext28:	
  8710 ;; *************** function _DS1302_Reset *****************
  8711 ;; Defined at:
  8712 ;;		line 26 in file "ds1302.c"
  8713 ;; Parameters:    Size  Location     Type
  8714 ;;		None
  8715 ;; Auto vars:     Size  Location     Type
  8716 ;;		None
  8717 ;; Return value:  Size  Location     Type
  8718 ;;                  1    wreg      void 
  8719 ;; Registers used:
  8720 ;;		None
  8721 ;; Tracked objects:
  8722 ;;		On entry : 0/0
  8723 ;;		On exit  : 0/0
  8724 ;;		Unchanged: 0/0
  8725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8729 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8730 ;;Total ram usage:        0 bytes
  8731 ;; Hardware stack levels used:    1
  8732 ;; Hardware stack levels required when called:    4
  8733 ;; This function calls:
  8734 ;;		Nothing
  8735 ;; This function is called by:
  8736 ;;		_DS1302_Initialize
  8737 ;; This function uses a non-reentrant model
  8738 ;;
  8739                           
  8740                           
  8741                           ;psect for function _DS1302_Reset
  8742  15D5                     _DS1302_Reset:	
  8743                           
  8744                           ;ds1302.c: 28: RD1 = 0;
  8745                           
  8746                           ;incstack = 0
  8747                           ; Regs used in _DS1302_Reset: []
  8748  15D5  0020               	movlb	0	; select bank0
  8749  15D6  108F               	bcf	15,1	;volatile
  8750                           
  8751                           ;ds1302.c: 29: RD0 = 0;
  8752  15D7  100F               	bcf	15,0	;volatile
  8753                           
  8754                           ;ds1302.c: 30: RD0 = 1;
  8755  15D8  140F               	bsf	15,0	;volatile
  8756  15D9  0008               	return
  8757  15DA                     __end_of_DS1302_Reset:	
  8758                           
  8759                           	psect	text29
  8760  0C83                     __ptext29:	
  8761 ;; *************** function _green *****************
  8762 ;; Defined at:
  8763 ;;		line 273 in file "Main.c"
  8764 ;; Parameters:    Size  Location     Type
  8765 ;;  buf             1    wreg     PTR unsigned char 
  8766 ;;		 -> buf(50), 
  8767 ;; Auto vars:     Size  Location     Type
  8768 ;;  buf             1   36[BANK0 ] PTR unsigned char 
  8769 ;;		 -> buf(50), 
  8770 ;;  green1          1   37[BANK0 ] PTR unsigned char 
  8771 ;;		 -> NULL(0), buf(50), 
  8772 ;; Return value:  Size  Location     Type
  8773 ;;                  1    wreg      void 
  8774 ;; Registers used:
  8775 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8776 ;; Tracked objects:
  8777 ;;		On entry : 0/0
  8778 ;;		On exit  : 0/0
  8779 ;;		Unchanged: 0/0
  8780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8782 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8783 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8784 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8785 ;;Total ram usage:        4 bytes
  8786 ;; Hardware stack levels used:    1
  8787 ;; Hardware stack levels required when called:    7
  8788 ;; This function calls:
  8789 ;;		_strstr
  8790 ;;		_touchscreen_command
  8791 ;; This function is called by:
  8792 ;;		_main
  8793 ;; This function uses a non-reentrant model
  8794 ;;
  8795                           
  8796                           
  8797                           ;psect for function _green
  8798  0C83                     _green:	
  8799                           
  8800                           ;incstack = 0
  8801                           ; Regs used in _green: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8802                           ;green@buf stored from wreg
  8803  0C83  0020               	movlb	0	; select bank0
  8804  0C84  00C4               	movwf	green@buf
  8805                           
  8806                           ;Main.c: 275: char* green1;
  8807                           ;Main.c: 277: green1 = strstr(buf, "ener");
  8808  0C85  3086               	movlw	low (STR_29| (0+32768))
  8809  0C86  00BC               	movwf	strstr@s2
  8810  0C87  3085               	movlw	high (STR_29| (0+32768))
  8811  0C88  00BD               	movwf	strstr@s2+1
  8812  0C89  0844               	movf	green@buf,w
  8813  0C8A  318A  221B  318C   	fcall	_strstr
  8814  0C8D  0020               	movlb	0	; select bank0
  8815  0C8E  00C2               	movwf	??_green
  8816  0C8F  0842               	movf	??_green,w
  8817  0C90  00C5               	movwf	green@green1
  8818                           
  8819                           ;Main.c: 279: if (green1 == (0))
  8820  0C91  0845               	movf	green@green1,w
  8821  0C92  1903               	btfsc	3,2
  8822  0C93  0008               	return
  8823                           
  8824                           ;Main.c: 284: else
  8825                           ;Main.c: 285: {
  8826                           ;Main.c: 287: if (!on){
  8827                           
  8828                           ;Main.c: 282: }
  8829                           
  8830                           ;Main.c: 280: {
  8831                           ;Main.c: 281: return;
  8832  0C94  0860               	movf	_on,w
  8833  0C95  1D03               	btfss	3,2
  8834  0C96  2CC2               	goto	l3696
  8835                           
  8836                           ;Main.c: 288: touchscreen_command("t0.txt=\"ON\"");
  8837  0C97  3043               	movlw	low (STR_30| (0+32768))
  8838  0C98  00B5               	movwf	touchscreen_command@string
  8839  0C99  3085               	movlw	high (STR_30| (0+32768))
  8840  0C9A  00B6               	movwf	touchscreen_command@string+1
  8841  0C9B  3197  2772  318C   	fcall	_touchscreen_command
  8842                           
  8843                           ;Main.c: 289: _delay((unsigned long)((100)*(16000000/4000.0)));
  8844  0C9E  3003               	movlw	3
  8845  0C9F  0020               	movlb	0	; select bank0
  8846  0CA0  00C3               	movwf	??_green+1
  8847  0CA1  3008               	movlw	8
  8848  0CA2  00C2               	movwf	??_green
  8849  0CA3  3077               	movlw	119
  8850  0CA4                     u3857:	
  8851  0CA4  0B89               	decfsz	9,f
  8852  0CA5  2CA4               	goto	u3857
  8853  0CA6  0BC2               	decfsz	??_green,f
  8854  0CA7  2CA4               	goto	u3857
  8855  0CA8  0BC3               	decfsz	??_green+1,f
  8856  0CA9  2CA4               	goto	u3857
  8857                           
  8858                           ;Main.c: 290: touchscreen_command("dim=30");
  8859  0CAA  3069               	movlw	low (STR_31| (0+32768))
  8860  0CAB  0020               	movlb	0	; select bank0
  8861  0CAC  00B5               	movwf	touchscreen_command@string
  8862  0CAD  3085               	movlw	high (STR_31| (0+32768))
  8863  0CAE  00B6               	movwf	touchscreen_command@string+1
  8864  0CAF  3197  2772  318C   	fcall	_touchscreen_command
  8865                           
  8866                           ;Main.c: 291: _delay((unsigned long)((100)*(16000000/4000.0)));
  8867  0CB2  3003               	movlw	3
  8868  0CB3  0020               	movlb	0	; select bank0
  8869  0CB4  00C3               	movwf	??_green+1
  8870  0CB5  3008               	movlw	8
  8871  0CB6  00C2               	movwf	??_green
  8872  0CB7  3077               	movlw	119
  8873  0CB8                     u3867:	
  8874  0CB8  0B89               	decfsz	9,f
  8875  0CB9  2CB8               	goto	u3867
  8876  0CBA  0BC2               	decfsz	??_green,f
  8877  0CBB  2CB8               	goto	u3867
  8878  0CBC  0BC3               	decfsz	??_green+1,f
  8879  0CBD  2CB8               	goto	u3867
  8880                           
  8881                           ;Main.c: 293: on = 1;
  8882  0CBE  0020               	movlb	0	; select bank0
  8883  0CBF  01E0               	clrf	_on
  8884  0CC0  0AE0               	incf	_on,f
  8885                           
  8886                           ;Main.c: 294: }
  8887  0CC1  0008               	return
  8888  0CC2                     l3696:	
  8889                           
  8890                           ;Main.c: 296: else {
  8891                           ;Main.c: 297: touchscreen_command("t0.txt=\"OFF\"");
  8892  0CC2  3036               	movlw	low (STR_32| (0+32768))
  8893  0CC3  00B5               	movwf	touchscreen_command@string
  8894  0CC4  3085               	movlw	high (STR_32| (0+32768))
  8895  0CC5  00B6               	movwf	touchscreen_command@string+1
  8896  0CC6  3197  2772  318C   	fcall	_touchscreen_command
  8897                           
  8898                           ;Main.c: 298: _delay((unsigned long)((100)*(16000000/4000.0)));
  8899  0CC9  3003               	movlw	3
  8900  0CCA  0020               	movlb	0	; select bank0
  8901  0CCB  00C3               	movwf	??_green+1
  8902  0CCC  3008               	movlw	8
  8903  0CCD  00C2               	movwf	??_green
  8904  0CCE  3077               	movlw	119
  8905  0CCF                     u3877:	
  8906  0CCF  0B89               	decfsz	9,f
  8907  0CD0  2CCF               	goto	u3877
  8908  0CD1  0BC2               	decfsz	??_green,f
  8909  0CD2  2CCF               	goto	u3877
  8910  0CD3  0BC3               	decfsz	??_green+1,f
  8911  0CD4  2CCF               	goto	u3877
  8912                           
  8913                           ;Main.c: 299: touchscreen_command("dim=100");
  8914  0CD5  305A               	movlw	low (STR_33| (0+32768))
  8915  0CD6  0020               	movlb	0	; select bank0
  8916  0CD7  00B5               	movwf	touchscreen_command@string
  8917  0CD8  3085               	movlw	high (STR_33| (0+32768))
  8918  0CD9  00B6               	movwf	touchscreen_command@string+1
  8919  0CDA  3197  2772  318C   	fcall	_touchscreen_command
  8920                           
  8921                           ;Main.c: 300: _delay((unsigned long)((100)*(16000000/4000.0)));
  8922  0CDD  3003               	movlw	3
  8923  0CDE  0020               	movlb	0	; select bank0
  8924  0CDF  00C3               	movwf	??_green+1
  8925  0CE0  3008               	movlw	8
  8926  0CE1  00C2               	movwf	??_green
  8927  0CE2  3077               	movlw	119
  8928  0CE3                     u3887:	
  8929  0CE3  0B89               	decfsz	9,f
  8930  0CE4  2CE3               	goto	u3887
  8931  0CE5  0BC2               	decfsz	??_green,f
  8932  0CE6  2CE3               	goto	u3887
  8933  0CE7  0BC3               	decfsz	??_green+1,f
  8934  0CE8  2CE3               	goto	u3887
  8935                           
  8936                           ;Main.c: 302: on = 0;
  8937  0CE9  0020               	movlb	0	; select bank0
  8938  0CEA  01E0               	clrf	_on
  8939  0CEB  0008               	return
  8940  0CEC                     __end_of_green:	
  8941                           
  8942                           	psect	text30
  8943  1772                     __ptext30:	
  8944 ;; *************** function _touchscreen_command *****************
  8945 ;; Defined at:
  8946 ;;		line 22 in file "touchscreen.c"
  8947 ;; Parameters:    Size  Location     Type
  8948 ;;  string          2   21[BANK0 ] PTR unsigned char 
  8949 ;;		 -> STR_33(8), STR_32(13), STR_31(7), STR_30(12), 
  8950 ;;		 -> STR_28(7), 
  8951 ;; Auto vars:     Size  Location     Type
  8952 ;;		None
  8953 ;; Return value:  Size  Location     Type
  8954 ;;                  1    wreg      void 
  8955 ;; Registers used:
  8956 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8957 ;; Tracked objects:
  8958 ;;		On entry : 0/0
  8959 ;;		On exit  : 0/0
  8960 ;;		Unchanged: 0/0
  8961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8962 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8964 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8965 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8966 ;;Total ram usage:        4 bytes
  8967 ;; Hardware stack levels used:    1
  8968 ;; Hardware stack levels required when called:    6
  8969 ;; This function calls:
  8970 ;;		_EUSART_Write
  8971 ;;		_EUSART_Write_Text
  8972 ;; This function is called by:
  8973 ;;		_main
  8974 ;;		_green
  8975 ;; This function uses a non-reentrant model
  8976 ;;
  8977                           
  8978                           
  8979                           ;psect for function _touchscreen_command
  8980  1772                     _touchscreen_command:	
  8981                           
  8982                           ;touchscreen.c: 24: EUSART_Write_Text(string);
  8983                           
  8984                           ;incstack = 0
  8985                           ; Regs used in _touchscreen_command: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8986  1772  0020               	movlb	0	; select bank0
  8987  1773  0836               	movf	touchscreen_command@string+1,w
  8988  1774  00B1               	movwf	EUSART_Write_Text@text+1
  8989  1775  0835               	movf	touchscreen_command@string,w
  8990  1776  00B0               	movwf	EUSART_Write_Text@text
  8991  1777  3197  2718  3197   	fcall	_EUSART_Write_Text
  8992                           
  8993                           ;touchscreen.c: 25: EUSART_Write(0xFF);
  8994  177A  30FF               	movlw	255
  8995  177B  3195  25EE  3197   	fcall	_EUSART_Write
  8996                           
  8997                           ;touchscreen.c: 26: EUSART_Write(0xFF);
  8998  177E  30FF               	movlw	255
  8999  177F  3195  25EE  3197   	fcall	_EUSART_Write
  9000                           
  9001                           ;touchscreen.c: 27: EUSART_Write(0xFF);
  9002  1782  30FF               	movlw	255
  9003  1783  3195  25EE  3197   	fcall	_EUSART_Write
  9004                           
  9005                           ;touchscreen.c: 28: _delay((unsigned long)((1000)*(16000000/4000.0)));
  9006  1786  3015               	movlw	21
  9007  1787  0020               	movlb	0	; select bank0
  9008  1788  00B8               	movwf	??_touchscreen_command+1
  9009  1789  304B               	movlw	75
  9010  178A  00B7               	movwf	??_touchscreen_command
  9011  178B  30BE               	movlw	190
  9012  178C                     u3897:	
  9013  178C  0B89               	decfsz	9,f
  9014  178D  2F8C               	goto	u3897
  9015  178E  0BB7               	decfsz	??_touchscreen_command,f
  9016  178F  2F8C               	goto	u3897
  9017  1790  0BB8               	decfsz	??_touchscreen_command+1,f
  9018  1791  2F8C               	goto	u3897
  9019  1792  0000               	nop
  9020  1793  0008               	return
  9021  1794                     __end_of_touchscreen_command:	
  9022                           
  9023                           	psect	text31
  9024  1718                     __ptext31:	
  9025 ;; *************** function _EUSART_Write_Text *****************
  9026 ;; Defined at:
  9027 ;;		line 125 in file "EUSART.c"
  9028 ;; Parameters:    Size  Location     Type
  9029 ;;  text            2   16[BANK0 ] PTR unsigned char 
  9030 ;;		 -> screen_date(10), screen_mth(11), screen_time(10), time_string(10), 
  9031 ;;		 -> mth_string(10), date_string(10), STR_33(8), STR_32(13), 
  9032 ;;		 -> STR_31(7), STR_30(12), STR_28(7), screen_month(8), 
  9033 ;;		 -> month_string(10), screen_date1(8), date1_string(10), screen_hour(8), 
  9034 ;;		 -> hour_string(10), screen_mins(8), min_string(10), 
  9035 ;; Auto vars:     Size  Location     Type
  9036 ;;  i               2   19[BANK0 ] int 
  9037 ;; Return value:  Size  Location     Type
  9038 ;;                  1    wreg      void 
  9039 ;; Registers used:
  9040 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9041 ;; Tracked objects:
  9042 ;;		On entry : 0/0
  9043 ;;		On exit  : 0/0
  9044 ;;		Unchanged: 0/0
  9045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9046 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9047 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9048 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9049 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9050 ;;Total ram usage:        5 bytes
  9051 ;; Hardware stack levels used:    1
  9052 ;; Hardware stack levels required when called:    5
  9053 ;; This function calls:
  9054 ;;		_EUSART_Write
  9055 ;; This function is called by:
  9056 ;;		_touchscreen_command
  9057 ;;		_touchscreen_data
  9058 ;; This function uses a non-reentrant model
  9059 ;;
  9060                           
  9061                           
  9062                           ;psect for function _EUSART_Write_Text
  9063  1718                     _EUSART_Write_Text:	
  9064                           
  9065                           ;EUSART.c: 127: int i;
  9066                           ;EUSART.c: 128: for(i=0;text[i]!='\0';i++)
  9067                           
  9068                           ;incstack = 0
  9069                           ; Regs used in _EUSART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9070  1718  0020               	movlb	0	; select bank0
  9071  1719  01B3               	clrf	EUSART_Write_Text@i
  9072  171A  01B4               	clrf	EUSART_Write_Text@i+1
  9073  171B                     l3252:	
  9074  171B  0830               	movf	EUSART_Write_Text@text,w
  9075  171C  0733               	addwf	EUSART_Write_Text@i,w
  9076  171D  0084               	movwf	4
  9077  171E  0831               	movf	EUSART_Write_Text@text+1,w
  9078  171F  3D34               	addwfc	EUSART_Write_Text@i+1,w
  9079  1720  0085               	movwf	5
  9080  1721  0012               	moviw fsr0++
  9081  1722  1903               	btfsc	3,2
  9082  1723  0008               	return
  9083                           
  9084                           ;EUSART.c: 129: EUSART_Write(text[i]);
  9085  1724  0830               	movf	EUSART_Write_Text@text,w
  9086  1725  0733               	addwf	EUSART_Write_Text@i,w
  9087  1726  0084               	movwf	4
  9088  1727  0831               	movf	EUSART_Write_Text@text+1,w
  9089  1728  3D34               	addwfc	EUSART_Write_Text@i+1,w
  9090  1729  0085               	movwf	5
  9091  172A  0800               	movf	0,w	;code access
  9092  172B  3195  25EE  3197   	fcall	_EUSART_Write
  9093  172E  3001               	movlw	1
  9094  172F  0020               	movlb	0	; select bank0
  9095  1730  07B3               	addwf	EUSART_Write_Text@i,f
  9096  1731  3000               	movlw	0
  9097  1732  3DB4               	addwfc	EUSART_Write_Text@i+1,f
  9098  1733  2F1B               	goto	l3252
  9099  1734                     __end_of_EUSART_Write_Text:	
  9100                           
  9101                           	psect	text32
  9102  15EE                     __ptext32:	
  9103 ;; *************** function _EUSART_Write *****************
  9104 ;; Defined at:
  9105 ;;		line 98 in file "EUSART.c"
  9106 ;; Parameters:    Size  Location     Type
  9107 ;;  txData          1    wreg     unsigned char 
  9108 ;; Auto vars:     Size  Location     Type
  9109 ;;  txData          1   15[BANK0 ] unsigned char 
  9110 ;; Return value:  Size  Location     Type
  9111 ;;                  1    wreg      void 
  9112 ;; Registers used:
  9113 ;;		wreg
  9114 ;; Tracked objects:
  9115 ;;		On entry : 0/0
  9116 ;;		On exit  : 0/0
  9117 ;;		Unchanged: 0/0
  9118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9120 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9122 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9123 ;;Total ram usage:        1 bytes
  9124 ;; Hardware stack levels used:    1
  9125 ;; Hardware stack levels required when called:    4
  9126 ;; This function calls:
  9127 ;;		Nothing
  9128 ;; This function is called by:
  9129 ;;		_EUSART_Write_Text
  9130 ;;		_touchscreen_command
  9131 ;;		_touchscreen_data
  9132 ;; This function uses a non-reentrant model
  9133 ;;
  9134                           
  9135                           
  9136                           ;psect for function _EUSART_Write
  9137  15EE                     _EUSART_Write:	
  9138                           
  9139                           ;incstack = 0
  9140                           ; Regs used in _EUSART_Write: [wreg]
  9141                           ;EUSART_Write@txData stored from wreg
  9142  15EE  0020               	movlb	0	; select bank0
  9143  15EF  00AF               	movwf	EUSART_Write@txData
  9144  15F0                     l380:	
  9145                           ;EUSART.c: 101: {
  9146                           
  9147                           ;EUSART.c: 100: while(0 == PIR1bits.TXIF)
  9148                           
  9149  15F0  1E11               	btfss	17,4	;volatile
  9150  15F1  2DF0               	goto	l380
  9151                           
  9152                           ;EUSART.c: 102: }
  9153                           ;EUSART.c: 104: TX1REG = txData;
  9154  15F2  082F               	movf	EUSART_Write@txData,w
  9155  15F3  0023               	movlb	3	; select bank3
  9156  15F4  009A               	movwf	26	;volatile
  9157  15F5  0008               	return
  9158  15F6                     __end_of_EUSART_Write:	
  9159                           
  9160                           	psect	text33
  9161  0A1B                     __ptext33:	
  9162 ;; *************** function _strstr *****************
  9163 ;; Defined at:
  9164 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\strstr.c"
  9165 ;; Parameters:    Size  Location     Type
  9166 ;;  s1              1    wreg     PTR const unsigned char 
  9167 ;;		 -> NULL(0), buf(50), 
  9168 ;;  s2              2   28[BANK0 ] PTR const unsigned char 
  9169 ;;		 -> STR_29(5), STR_18(4), STR_17(6), STR_16(5), 
  9170 ;;		 -> STR_15(5), STR_14(5), 
  9171 ;; Auto vars:     Size  Location     Type
  9172 ;;  s1              1   33[BANK0 ] PTR const unsigned char 
  9173 ;;		 -> NULL(0), buf(50), 
  9174 ;; Return value:  Size  Location     Type
  9175 ;;                  1    wreg      PTR unsigned char 
  9176 ;; Registers used:
  9177 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9178 ;; Tracked objects:
  9179 ;;		On entry : 0/0
  9180 ;;		On exit  : 0/0
  9181 ;;		Unchanged: 0/0
  9182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9183 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9184 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9185 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9186 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9187 ;;Total ram usage:        6 bytes
  9188 ;; Hardware stack levels used:    1
  9189 ;; Hardware stack levels required when called:    5
  9190 ;; This function calls:
  9191 ;;		_strchr
  9192 ;;		_strlen
  9193 ;;		_strncmp
  9194 ;; This function is called by:
  9195 ;;		_main
  9196 ;;		_green
  9197 ;; This function uses a non-reentrant model
  9198 ;;
  9199                           
  9200                           
  9201                           ;psect for function _strstr
  9202  0A1B                     _strstr:	
  9203                           
  9204                           ;incstack = 0
  9205                           ; Regs used in _strstr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9206                           ;strstr@s1 stored from wreg
  9207  0A1B  0020               	movlb	0	; select bank0
  9208  0A1C  00C1               	movwf	strstr@s1
  9209  0A1D  2A4D               	goto	l3404
  9210  0A1E                     l3396:	
  9211  0A1E  083D               	movf	strstr@s2+1,w
  9212  0A1F  00B6               	movwf	strncmp@s2+1
  9213  0A20  083C               	movf	strstr@s2,w
  9214  0A21  00B5               	movwf	strncmp@s2
  9215  0A22  083D               	movf	strstr@s2+1,w
  9216  0A23  00B0               	movwf	strlen@s+1
  9217  0A24  083C               	movf	strstr@s2,w
  9218  0A25  00AF               	movwf	strlen@s
  9219  0A26  3197  2753  318A   	fcall	_strlen
  9220  0A29  0020               	movlb	0	; select bank0
  9221  0A2A  0830               	movf	?_strlen+1,w
  9222  0A2B  00B8               	movwf	strncmp@len+1
  9223  0A2C  082F               	movf	?_strlen,w
  9224  0A2D  00B7               	movwf	strncmp@len
  9225  0A2E  0841               	movf	strstr@s1,w
  9226  0A2F  318A  2259  318A   	fcall	_strncmp
  9227  0A32  0020               	movlb	0	; select bank0
  9228  0A33  0835               	movf	?_strncmp,w
  9229  0A34  0436               	iorwf	?_strncmp+1,w
  9230  0A35  1D03               	btfss	3,2
  9231  0A36  2A39               	goto	l3402
  9232  0A37  0841               	movf	strstr@s1,w
  9233  0A38  0008               	return
  9234  0A39                     l3402:	
  9235  0A39  083C               	movf	strstr@s2,w
  9236  0A3A  0084               	movwf	4
  9237  0A3B  083D               	movf	strstr@s2+1,w
  9238  0A3C  0085               	movwf	5
  9239  0A3D  0800               	movf	0,w	;code access
  9240  0A3E  00BE               	movwf	??_strstr
  9241  0A3F  01BF               	clrf	??_strstr+1
  9242  0A40  083E               	movf	??_strstr,w
  9243  0A41  00AF               	movwf	strchr@chr
  9244  0A42  083F               	movf	??_strstr+1,w
  9245  0A43  00B0               	movwf	strchr@chr+1
  9246  0A44  0841               	movf	strstr@s1,w
  9247  0A45  3E01               	addlw	1
  9248  0A46  3196  266A  318A   	fcall	_strchr
  9249  0A49  0020               	movlb	0	; select bank0
  9250  0A4A  00C0               	movwf	??_strstr+2
  9251  0A4B  0840               	movf	??_strstr+2,w
  9252  0A4C  00C1               	movwf	strstr@s1
  9253  0A4D                     l3404:	
  9254  0A4D  0841               	movf	strstr@s1,w
  9255  0A4E  1903               	btfsc	3,2
  9256  0A4F  2A57               	goto	l3408
  9257  0A50  0841               	movf	strstr@s1,w
  9258  0A51  0086               	movwf	6
  9259  0A52  3002               	movlw	2	; select bank4/5
  9260  0A53  0087               	movwf	7
  9261  0A54  0801               	movf	1,w
  9262  0A55  1D03               	btfss	3,2
  9263  0A56  2A1E               	goto	l3396
  9264  0A57                     l3408:	
  9265  0A57  3000               	movlw	0
  9266  0A58  0008               	return
  9267  0A59                     __end_of_strstr:	
  9268                           
  9269                           	psect	text34
  9270  0A59                     __ptext34:	
  9271 ;; *************** function _strncmp *****************
  9272 ;; Defined at:
  9273 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\strncmp.c"
  9274 ;; Parameters:    Size  Location     Type
  9275 ;;  s1              1    wreg     PTR const unsigned char 
  9276 ;;		 -> NULL(0), buf(50), 
  9277 ;;  s2              2   21[BANK0 ] PTR const unsigned char 
  9278 ;;		 -> STR_29(5), STR_18(4), STR_17(6), STR_16(5), 
  9279 ;;		 -> STR_15(5), STR_14(5), 
  9280 ;;  len             2   23[BANK0 ] unsigned int 
  9281 ;; Auto vars:     Size  Location     Type
  9282 ;;  s1              1   27[BANK0 ] PTR const unsigned char 
  9283 ;;		 -> NULL(0), buf(50), 
  9284 ;; Return value:  Size  Location     Type
  9285 ;;                  2   21[BANK0 ] int 
  9286 ;; Registers used:
  9287 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  9288 ;; Tracked objects:
  9289 ;;		On entry : 0/0
  9290 ;;		On exit  : 0/0
  9291 ;;		Unchanged: 0/0
  9292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9293 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9294 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9295 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9296 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9297 ;;Total ram usage:        7 bytes
  9298 ;; Hardware stack levels used:    1
  9299 ;; Hardware stack levels required when called:    4
  9300 ;; This function calls:
  9301 ;;		Nothing
  9302 ;; This function is called by:
  9303 ;;		_strstr
  9304 ;; This function uses a non-reentrant model
  9305 ;;
  9306                           
  9307                           
  9308                           ;psect for function _strncmp
  9309  0A59                     _strncmp:	
  9310                           
  9311                           ;incstack = 0
  9312                           ; Regs used in _strncmp: [wreg-fsr1h+status,2+status,0+pclath]
  9313                           ;strncmp@s1 stored from wreg
  9314  0A59  0020               	movlb	0	; select bank0
  9315  0A5A  00BB               	movwf	strncmp@s1
  9316  0A5B                     l3366:	
  9317  0A5B  3001               	movlw	1
  9318  0A5C  02B7               	subwf	strncmp@len,f
  9319  0A5D  3000               	movlw	0
  9320  0A5E  3BB8               	subwfb	strncmp@len+1,f
  9321  0A5F  0A37               	incf	strncmp@len,w
  9322  0A60  1903               	btfsc	3,2
  9323  0A61  0A38               	incf	strncmp@len+1,w
  9324  0A62  1903               	btfsc	3,2
  9325  0A63  2A9A               	goto	l3368
  9326  0A64  083B               	movf	strncmp@s1,w
  9327  0A65  0086               	movwf	6
  9328  0A66  3002               	movlw	2	; select bank4/5
  9329  0A67  0087               	movwf	7
  9330  0A68  0801               	movf	1,w
  9331  0A69  1903               	btfsc	3,2
  9332  0A6A  2A79               	goto	l3358
  9333  0A6B  0835               	movf	strncmp@s2,w
  9334  0A6C  0084               	movwf	4
  9335  0A6D  0836               	movf	strncmp@s2+1,w
  9336  0A6E  0085               	movwf	5
  9337  0A6F  0800               	movf	0,w	;code access
  9338  0A70  00B9               	movwf	??_strncmp
  9339  0A71  083B               	movf	strncmp@s1,w
  9340  0A72  0086               	movwf	6
  9341  0A73  3002               	movlw	2	; select bank4/5
  9342  0A74  0087               	movwf	7
  9343  0A75  0801               	movf	1,w
  9344  0A76  0639               	xorwf	??_strncmp,w
  9345  0A77  1903               	skipnz
  9346  0A78  2A91               	goto	l3362
  9347  0A79                     l3358:	
  9348  0A79  0835               	movf	strncmp@s2,w
  9349  0A7A  0084               	movwf	4
  9350  0A7B  0836               	movf	strncmp@s2+1,w
  9351  0A7C  0085               	movwf	5
  9352  0A7D  0800               	movf	0,w	;code access
  9353  0A7E  00B9               	movwf	??_strncmp
  9354  0A7F  01BA               	clrf	??_strncmp+1
  9355  0A80  09B9               	comf	??_strncmp,f
  9356  0A81  09BA               	comf	??_strncmp+1,f
  9357  0A82  0AB9               	incf	??_strncmp,f
  9358  0A83  1903               	skipnz
  9359  0A84  0ABA               	incf	??_strncmp+1,f
  9360  0A85  083B               	movf	strncmp@s1,w
  9361  0A86  0086               	movwf	6
  9362  0A87  3002               	movlw	2	; select bank4/5
  9363  0A88  0087               	movwf	7
  9364  0A89  0801               	movf	1,w
  9365  0A8A  0739               	addwf	??_strncmp,w
  9366  0A8B  00B5               	movwf	?_strncmp
  9367  0A8C  083A               	movf	??_strncmp+1,w
  9368  0A8D  1803               	skipnc
  9369  0A8E  0A3A               	incf	??_strncmp+1,w
  9370  0A8F  00B6               	movwf	?_strncmp+1
  9371  0A90  0008               	return
  9372  0A91                     l3362:	
  9373  0A91  3001               	movlw	1
  9374  0A92  00B9               	movwf	??_strncmp
  9375  0A93  0839               	movf	??_strncmp,w
  9376  0A94  07BB               	addwf	strncmp@s1,f
  9377  0A95  3001               	movlw	1
  9378  0A96  07B5               	addwf	strncmp@s2,f
  9379  0A97  3000               	movlw	0
  9380  0A98  3DB6               	addwfc	strncmp@s2+1,f
  9381  0A99  2A5B               	goto	l3366
  9382  0A9A                     l3368:	
  9383  0A9A  01B5               	clrf	?_strncmp
  9384  0A9B  01B6               	clrf	?_strncmp+1
  9385  0A9C  0008               	return
  9386  0A9D                     __end_of_strncmp:	
  9387                           
  9388                           	psect	text35
  9389  1753                     __ptext35:	
  9390 ;; *************** function _strlen *****************
  9391 ;; Defined at:
  9392 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\strlen.c"
  9393 ;; Parameters:    Size  Location     Type
  9394 ;;  s               2   15[BANK0 ] PTR const unsigned char 
  9395 ;;		 -> STR_29(5), STR_18(4), STR_17(6), STR_16(5), 
  9396 ;;		 -> STR_15(5), STR_14(5), 
  9397 ;; Auto vars:     Size  Location     Type
  9398 ;;  cp              2   19[BANK0 ] PTR const unsigned char 
  9399 ;;		 -> STR_29(5), STR_18(4), STR_17(6), STR_16(5), 
  9400 ;;		 -> STR_15(5), STR_14(5), 
  9401 ;; Return value:  Size  Location     Type
  9402 ;;                  2   15[BANK0 ] unsigned int 
  9403 ;; Registers used:
  9404 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9405 ;; Tracked objects:
  9406 ;;		On entry : 0/0
  9407 ;;		On exit  : 0/0
  9408 ;;		Unchanged: 0/0
  9409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9410 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9411 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9412 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9413 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9414 ;;Total ram usage:        6 bytes
  9415 ;; Hardware stack levels used:    1
  9416 ;; Hardware stack levels required when called:    4
  9417 ;; This function calls:
  9418 ;;		Nothing
  9419 ;; This function is called by:
  9420 ;;		_strstr
  9421 ;; This function uses a non-reentrant model
  9422 ;;
  9423                           
  9424                           
  9425                           ;psect for function _strlen
  9426  1753                     _strlen:	
  9427                           
  9428                           ;incstack = 0
  9429                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  9430  1753  0020               	movlb	0	; select bank0
  9431  1754  0830               	movf	strlen@s+1,w
  9432  1755  00B4               	movwf	strlen@cp+1
  9433  1756  082F               	movf	strlen@s,w
  9434  1757  00B3               	movwf	strlen@cp
  9435  1758                     l3346:	
  9436  1758  0833               	movf	strlen@cp,w
  9437  1759  0084               	movwf	4
  9438  175A  0834               	movf	strlen@cp+1,w
  9439  175B  0085               	movwf	5
  9440  175C  0012               	moviw fsr0++
  9441  175D  1903               	btfsc	3,2
  9442  175E  2F64               	goto	l3348
  9443  175F  3001               	movlw	1
  9444  1760  07B3               	addwf	strlen@cp,f
  9445  1761  3000               	movlw	0
  9446  1762  3DB4               	addwfc	strlen@cp+1,f
  9447  1763  2F58               	goto	l3346
  9448  1764                     l3348:	
  9449  1764  092F               	comf	strlen@s,w
  9450  1765  00B1               	movwf	??_strlen
  9451  1766  0930               	comf	strlen@s+1,w
  9452  1767  00B2               	movwf	??_strlen+1
  9453  1768  0AB1               	incf	??_strlen,f
  9454  1769  1903               	skipnz
  9455  176A  0AB2               	incf	??_strlen+1,f
  9456  176B  0833               	movf	strlen@cp,w
  9457  176C  0731               	addwf	??_strlen,w
  9458  176D  00AF               	movwf	?_strlen
  9459  176E  0834               	movf	strlen@cp+1,w
  9460  176F  3D32               	addwfc	??_strlen+1,w
  9461  1770  00B0               	movwf	?_strlen+1
  9462  1771  0008               	return
  9463  1772                     __end_of_strlen:	
  9464                           
  9465                           	psect	text36
  9466  166A                     __ptext36:	
  9467 ;; *************** function _strchr *****************
  9468 ;; Defined at:
  9469 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\strchr.c"
  9470 ;; Parameters:    Size  Location     Type
  9471 ;;  ptr             1    wreg     PTR const unsigned char 
  9472 ;;		 -> NULL(0), buf(50), 
  9473 ;;  chr             2   15[BANK0 ] int 
  9474 ;; Auto vars:     Size  Location     Type
  9475 ;;  ptr             1   17[BANK0 ] PTR const unsigned char 
  9476 ;;		 -> NULL(0), buf(50), 
  9477 ;; Return value:  Size  Location     Type
  9478 ;;                  1    wreg      PTR unsigned char 
  9479 ;; Registers used:
  9480 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9481 ;; Tracked objects:
  9482 ;;		On entry : 0/0
  9483 ;;		On exit  : 0/0
  9484 ;;		Unchanged: 0/0
  9485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9486 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9487 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9489 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9490 ;;Total ram usage:        3 bytes
  9491 ;; Hardware stack levels used:    1
  9492 ;; Hardware stack levels required when called:    4
  9493 ;; This function calls:
  9494 ;;		Nothing
  9495 ;; This function is called by:
  9496 ;;		_strstr
  9497 ;; This function uses a non-reentrant model
  9498 ;;
  9499                           
  9500                           
  9501                           ;psect for function _strchr
  9502  166A                     _strchr:	
  9503                           
  9504                           ;incstack = 0
  9505                           ; Regs used in _strchr: [wreg+fsr1l+fsr1h+status,2+status,0]
  9506                           ;strchr@ptr stored from wreg
  9507  166A  0020               	movlb	0	; select bank0
  9508  166B  00B1               	movwf	strchr@ptr
  9509  166C                     l938:	
  9510  166C  0831               	movf	strchr@ptr,w
  9511  166D  0086               	movwf	6
  9512  166E  3002               	movlw	2	; select bank4/5
  9513  166F  0087               	movwf	7
  9514  1670  0801               	movf	1,w
  9515  1671  062F               	xorwf	strchr@chr,w
  9516  1672  1D03               	skipz
  9517  1673  2E76               	goto	l3378
  9518  1674  0831               	movf	strchr@ptr,w
  9519  1675  0008               	return
  9520  1676                     l3378:	
  9521  1676  0831               	movf	strchr@ptr,w
  9522  1677  0086               	movwf	6
  9523  1678  3002               	movlw	2	; select bank4/5
  9524  1679  0087               	movwf	7
  9525  167A  0AB1               	incf	strchr@ptr,f
  9526  167B  0801               	movf	1,w
  9527  167C  1D03               	btfss	3,2
  9528  167D  2E6C               	goto	l938
  9529  167E  3000               	movlw	0
  9530  167F  0008               	return
  9531  1680                     __end_of_strchr:	
  9532                           
  9533                           	psect	text37
  9534  1734                     __ptext37:	
  9535 ;; *************** function _EUSART_Read_Text *****************
  9536 ;; Defined at:
  9537 ;;		line 107 in file "EUSART.c"
  9538 ;; Parameters:    Size  Location     Type
  9539 ;;  Output          1    wreg     PTR unsigned char 
  9540 ;;		 -> buf(50), 
  9541 ;;  length          2   15[BANK0 ] unsigned int 
  9542 ;; Auto vars:     Size  Location     Type
  9543 ;;  Output          1   19[BANK0 ] PTR unsigned char 
  9544 ;;		 -> buf(50), 
  9545 ;;  i               2   20[BANK0 ] int 
  9546 ;;  i               2    0        int 
  9547 ;; Return value:  Size  Location     Type
  9548 ;;                  1    wreg      void 
  9549 ;; Registers used:
  9550 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9551 ;; Tracked objects:
  9552 ;;		On entry : 0/0
  9553 ;;		On exit  : 0/0
  9554 ;;		Unchanged: 0/0
  9555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9556 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9557 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9558 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9559 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9560 ;;Total ram usage:        7 bytes
  9561 ;; Hardware stack levels used:    1
  9562 ;; Hardware stack levels required when called:    5
  9563 ;; This function calls:
  9564 ;;		_EUSART_Read
  9565 ;; This function is called by:
  9566 ;;		_main
  9567 ;; This function uses a non-reentrant model
  9568 ;;
  9569                           
  9570                           
  9571                           ;psect for function _EUSART_Read_Text
  9572  1734                     _EUSART_Read_Text:	
  9573                           
  9574                           ;incstack = 0
  9575                           ; Regs used in _EUSART_Read_Text: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9576                           ;EUSART_Read_Text@Output stored from wreg
  9577  1734  0020               	movlb	0	; select bank0
  9578  1735  00B3               	movwf	EUSART_Read_Text@Output
  9579                           
  9580                           ;EUSART.c: 109: int i;
  9581                           ;EUSART.c: 110: for(int i=0;i<length;i++)
  9582  1736  01B4               	clrf	EUSART_Read_Text@i_522
  9583  1737  01B5               	clrf	EUSART_Read_Text@i_522+1
  9584  1738                     l3676:	
  9585  1738  0830               	movf	EUSART_Read_Text@length+1,w
  9586  1739  0235               	subwf	EUSART_Read_Text@i_522+1,w
  9587  173A  1D03               	skipz
  9588  173B  2F3E               	goto	u3545
  9589  173C  082F               	movf	EUSART_Read_Text@length,w
  9590  173D  0234               	subwf	EUSART_Read_Text@i_522,w
  9591  173E                     u3545:	
  9592  173E  1803               	btfsc	3,0
  9593  173F  0008               	return
  9594                           
  9595                           ;EUSART.c: 111: Output[i] = EUSART_Read();
  9596  1740  3187  27F0  3197   	fcall	_EUSART_Read
  9597  1743  0020               	movlb	0	; select bank0
  9598  1744  00B1               	movwf	??_EUSART_Read_Text
  9599  1745  0834               	movf	EUSART_Read_Text@i_522,w
  9600  1746  0733               	addwf	EUSART_Read_Text@Output,w
  9601  1747  00B2               	movwf	??_EUSART_Read_Text+1
  9602  1748  0832               	movf	??_EUSART_Read_Text+1,w
  9603  1749  0086               	movwf	6
  9604  174A  3002               	movlw	2	; select bank4/5
  9605  174B  0087               	movwf	7
  9606  174C  0831               	movf	??_EUSART_Read_Text,w
  9607  174D  0081               	movwf	1
  9608  174E  3001               	movlw	1
  9609  174F  07B4               	addwf	EUSART_Read_Text@i_522,f
  9610  1750  3000               	movlw	0
  9611  1751  3DB5               	addwfc	EUSART_Read_Text@i_522+1,f
  9612  1752  2F38               	goto	l3676
  9613  1753                     __end_of_EUSART_Read_Text:	
  9614                           
  9615                           	psect	text38
  9616  07F0                     __ptext38:	
  9617 ;; *************** function _EUSART_Read *****************
  9618 ;; Defined at:
  9619 ;;		line 68 in file "EUSART.c"
  9620 ;; Parameters:    Size  Location     Type
  9621 ;;		None
  9622 ;; Auto vars:     Size  Location     Type
  9623 ;;		None
  9624 ;; Return value:  Size  Location     Type
  9625 ;;                  1    wreg      unsigned char 
  9626 ;; Registers used:
  9627 ;;		wreg
  9628 ;; Tracked objects:
  9629 ;;		On entry : 0/0
  9630 ;;		On exit  : 0/0
  9631 ;;		Unchanged: 0/0
  9632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9637 ;;Total ram usage:        0 bytes
  9638 ;; Hardware stack levels used:    1
  9639 ;; Hardware stack levels required when called:    4
  9640 ;; This function calls:
  9641 ;;		Nothing
  9642 ;; This function is called by:
  9643 ;;		_EUSART_Read_Text
  9644 ;; This function uses a non-reentrant model
  9645 ;;
  9646                           
  9647                           
  9648                           ;psect for function _EUSART_Read
  9649  07F0                     _EUSART_Read:	
  9650                           
  9651                           ;EUSART.c: 71: RC1STAbits.SREN = 1;
  9652                           
  9653                           ;incstack = 0
  9654                           ; Regs used in _EUSART_Read: [wreg]
  9655  07F0  0023               	movlb	3	; select bank3
  9656  07F1  169D               	bsf	29,5	;volatile
  9657  07F2                     l373:	
  9658                           ;EUSART.c: 73: {
  9659                           
  9660                           ;EUSART.c: 72: while(!PIR1bits.RCIF)
  9661                           
  9662  07F2  0020               	movlb	0	; select bank0
  9663  07F3  1E91               	btfss	17,5	;volatile
  9664  07F4  2FF2               	goto	l373
  9665                           
  9666                           ;EUSART.c: 74: }
  9667                           ;EUSART.c: 77: if(1 == RC1STAbits.OERR)
  9668  07F5  0023               	movlb	3	; select bank3
  9669  07F6  1C9D               	btfss	29,1	;volatile
  9670  07F7  2FFA               	goto	l3514
  9671                           
  9672                           ;EUSART.c: 78: {
  9673                           ;EUSART.c: 81: RC1STAbits.SPEN = 0;
  9674  07F8  139D               	bcf	29,7	;volatile
  9675                           
  9676                           ;EUSART.c: 82: RC1STAbits.SPEN = 1;
  9677  07F9  179D               	bsf	29,7	;volatile
  9678  07FA                     l3514:	
  9679                           
  9680                           ;EUSART.c: 83: }
  9681                           ;EUSART.c: 85: return RC1REG;
  9682  07FA  0819               	movf	25,w	;volatile
  9683  07FB  0008               	return
  9684  07FC                     __end_of_EUSART_Read:	
  9685                           
  9686                           	psect	intentry
  9687  0004                     __pintentry:	
  9688 ;; *************** function _isr *****************
  9689 ;; Defined at:
  9690 ;;		line 316 in file "Main.c"
  9691 ;; Parameters:    Size  Location     Type
  9692 ;;		None
  9693 ;; Auto vars:     Size  Location     Type
  9694 ;;		None
  9695 ;; Return value:  Size  Location     Type
  9696 ;;                  1    wreg      void 
  9697 ;; Registers used:
  9698 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9699 ;; Tracked objects:
  9700 ;;		On entry : 0/0
  9701 ;;		On exit  : 0/0
  9702 ;;		Unchanged: 0/0
  9703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9706 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9707 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9708 ;;Total ram usage:        3 bytes
  9709 ;; Hardware stack levels used:    1
  9710 ;; Hardware stack levels required when called:    3
  9711 ;; This function calls:
  9712 ;;		_DS1302_ReadByte
  9713 ;;		_get_dec
  9714 ;;		i1_DS1302_Reset
  9715 ;;		i1_DS1302_WriteByte
  9716 ;;		i1_itoa
  9717 ;;		i1_strcat
  9718 ;;		i1_strcpy
  9719 ;;		i1_touchscreen_data
  9720 ;; This function is called by:
  9721 ;;		Interrupt level 1
  9722 ;; This function uses a non-reentrant model
  9723 ;;
  9724                           
  9725  0004                     _isr:	
  9726                           
  9727                           ;incstack = 0
  9728  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  9729                           
  9730                           ; Regs used in _isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9731  0005  3180               	pagesel	$
  9732  0006  0020               	movlb	0	; select bank0
  9733  0007  087F               	movf	127,w
  9734  0008  00AE               	movwf	??_isr+2
  9735                           
  9736                           ;Main.c: 319: static int count = 0;
  9737                           ;Main.c: 322: INTCONbits.TMR0IF = 0;
  9738  0009  110B               	bcf	11,2	;volatile
  9739                           
  9740                           ;Main.c: 325: TMR0 = 0;
  9741  000A  0195               	clrf	21	;volatile
  9742                           
  9743                           ;Main.c: 328: count++;
  9744  000B  3001               	movlw	1
  9745  000C  0021               	movlb	1	; select bank1
  9746  000D  07A0               	addwf	isr@count^(0+128),f
  9747  000E  3000               	movlw	0
  9748  000F  3DA1               	addwfc	(isr@count+1)^(0+128),f
  9749                           
  9750                           ;Main.c: 336: if (count == 305){
  9751  0010  3031               	movlw	49
  9752  0011  0620               	xorwf	isr@count^(0+128),w
  9753  0012  1D03               	skipz
  9754  0013  2985               	goto	i1l255
  9755  0014  0321               	decf	(isr@count+1)^(0+128),w
  9756  0015  1D03               	btfss	3,2
  9757  0016  2985               	goto	i1l255
  9758                           
  9759                           ;Main.c: 342: DS1302_Reset();
  9760  0017  3195  25D0  3180   	fcall	i1_DS1302_Reset
  9761                           
  9762                           ;Main.c: 343: DS1302_WriteByte(0xBF);
  9763  001A  30BF               	movlw	191
  9764  001B  3196  2644  3180   	fcall	i1_DS1302_WriteByte
  9765                           
  9766                           ;Main.c: 345: sec1 = DS1302_ReadByte();
  9767  001E  3197  27B6  3180   	fcall	_DS1302_ReadByte
  9768  0021  0020               	movlb	0	; select bank0
  9769  0022  00AC               	movwf	??_isr
  9770  0023  082C               	movf	??_isr,w
  9771  0024  00D9               	movwf	_sec1
  9772                           
  9773                           ;Main.c: 346: min1 = DS1302_ReadByte();
  9774  0025  3197  27B6  3180   	fcall	_DS1302_ReadByte
  9775  0028  0020               	movlb	0	; select bank0
  9776  0029  00AC               	movwf	??_isr
  9777  002A  082C               	movf	??_isr,w
  9778  002B  00DA               	movwf	_min1
  9779                           
  9780                           ;Main.c: 347: hr1 = DS1302_ReadByte();
  9781  002C  3197  27B6  3180   	fcall	_DS1302_ReadByte
  9782  002F  0020               	movlb	0	; select bank0
  9783  0030  00AC               	movwf	??_isr
  9784  0031  082C               	movf	??_isr,w
  9785  0032  00DB               	movwf	_hr1
  9786                           
  9787                           ;Main.c: 348: date1 = DS1302_ReadByte();
  9788  0033  3197  27B6  3180   	fcall	_DS1302_ReadByte
  9789  0036  0020               	movlb	0	; select bank0
  9790  0037  00AC               	movwf	??_isr
  9791  0038  082C               	movf	??_isr,w
  9792  0039  00DD               	movwf	_date1
  9793                           
  9794                           ;Main.c: 349: mn1 = DS1302_ReadByte();
  9795  003A  3197  27B6  3180   	fcall	_DS1302_ReadByte
  9796  003D  0020               	movlb	0	; select bank0
  9797  003E  00AC               	movwf	??_isr
  9798  003F  082C               	movf	??_isr,w
  9799  0040  00DE               	movwf	_mn1
  9800                           
  9801                           ;Main.c: 350: dy1 = DS1302_ReadByte();
  9802  0041  3197  27B6  3180   	fcall	_DS1302_ReadByte
  9803  0044  0020               	movlb	0	; select bank0
  9804  0045  00AC               	movwf	??_isr
  9805  0046  082C               	movf	??_isr,w
  9806  0047  00DC               	movwf	_dy1
  9807                           
  9808                           ;Main.c: 351: yr1 = DS1302_ReadByte();
  9809  0048  3197  27B6  3180   	fcall	_DS1302_ReadByte
  9810  004B  0020               	movlb	0	; select bank0
  9811  004C  00AC               	movwf	??_isr
  9812  004D  082C               	movf	??_isr,w
  9813  004E  00DF               	movwf	_yr1
  9814                           
  9815                           ;Main.c: 353: DS1302_Reset();
  9816  004F  3195  25D0  3180   	fcall	i1_DS1302_Reset
  9817                           
  9818                           ;Main.c: 361: yr2 = get_dec(yr1);
  9819  0052  0020               	movlb	0	; select bank0
  9820  0053  085F               	movf	_yr1,w
  9821  0054  3196  2697  3180   	fcall	_get_dec
  9822  0057  0020               	movlb	0	; select bank0
  9823  0058  00AC               	movwf	??_isr
  9824  0059  082C               	movf	??_isr,w
  9825  005A  00D8               	movwf	_yr2
  9826                           
  9827                           ;Main.c: 364: mn2 = get_dec(mn1);
  9828  005B  085E               	movf	_mn1,w
  9829  005C  3196  2697  3180   	fcall	_get_dec
  9830  005F  0020               	movlb	0	; select bank0
  9831  0060  00AC               	movwf	??_isr
  9832  0061  082C               	movf	??_isr,w
  9833  0062  00D7               	movwf	_mn2
  9834                           
  9835                           ;Main.c: 367: date2 = get_dec(date1);
  9836  0063  085D               	movf	_date1,w
  9837  0064  3196  2697  3180   	fcall	_get_dec
  9838  0067  0020               	movlb	0	; select bank0
  9839  0068  00AC               	movwf	??_isr
  9840  0069  082C               	movf	??_isr,w
  9841  006A  00D6               	movwf	_date2
  9842                           
  9843                           ;Main.c: 370: hr2 = get_dec(hr1);
  9844  006B  085B               	movf	_hr1,w
  9845  006C  3196  2697  3180   	fcall	_get_dec
  9846  006F  0020               	movlb	0	; select bank0
  9847  0070  00AC               	movwf	??_isr
  9848  0071  082C               	movf	??_isr,w
  9849  0072  00D4               	movwf	_hr2
  9850                           
  9851                           ;Main.c: 373: min2 = get_dec(min1);
  9852  0073  085A               	movf	_min1,w
  9853  0074  3196  2697  3180   	fcall	_get_dec
  9854  0077  0020               	movlb	0	; select bank0
  9855  0078  00AC               	movwf	??_isr
  9856  0079  082C               	movf	??_isr,w
  9857  007A  00D2               	movwf	_min2
  9858                           
  9859                           ;Main.c: 376: sec2 = get_dec(sec1);
  9860  007B  0859               	movf	_sec1,w
  9861  007C  3196  2697  3180   	fcall	_get_dec
  9862  007F  0020               	movlb	0	; select bank0
  9863  0080  00AC               	movwf	??_isr
  9864  0081  082C               	movf	??_isr,w
  9865  0082  00D1               	movwf	_sec2
  9866                           
  9867                           ;Main.c: 383: if (hr2 <= 12 && hr2 > 0){
  9868  0083  300D               	movlw	13
  9869  0084  0254               	subwf	_hr2,w
  9870  0085  1803               	skipnc
  9871  0086  288C               	goto	i1l3908
  9872  0087  0854               	movf	_hr2,w
  9873  0088  1903               	btfsc	3,2
  9874  0089  288C               	goto	i1l3908
  9875                           
  9876                           ;Main.c: 384: hr3 = hr2;
  9877  008A  0854               	movf	_hr2,w
  9878  008B  2898               	goto	L4
  9879  008C                     i1l3908:	
  9880                           ;Main.c: 385: }
  9881                           
  9882                           
  9883                           ;Main.c: 387: else if (hr2 >= 13 && hr2 < 24)
  9884  008C  300D               	movlw	13
  9885  008D  0254               	subwf	_hr2,w
  9886  008E  1C03               	skipc
  9887  008F  2897               	goto	i1l3914
  9888  0090  3018               	movlw	24
  9889  0091  0254               	subwf	_hr2,w
  9890  0092  1803               	skipnc
  9891  0093  2897               	goto	i1l3914
  9892                           
  9893                           ;Main.c: 388: {
  9894                           ;Main.c: 389: hr3 = (hr2-12);
  9895  0094  0854               	movf	_hr2,w
  9896  0095  3EF4               	addlw	244
  9897  0096  2898               	goto	L4
  9898  0097                     i1l3914:	
  9899                           ;Main.c: 390: }
  9900                           
  9901                           
  9902                           ;Main.c: 392: else {
  9903                           ;Main.c: 393: hr3 = 12;
  9904  0097  300C               	movlw	12
  9905  0098                     L4:	
  9906  0098  00AC               	movwf	??_isr
  9907  0099  082C               	movf	??_isr,w
  9908  009A  00D3               	movwf	_hr3
  9909                           
  9910                           ;Main.c: 394: }
  9911                           ;Main.c: 401: itoa( min_arr, min2, 10 );
  9912  009B  30CB               	movlw	low _min_arr
  9913  009C  00A4               	movwf	i1itoa@buf
  9914  009D  3000               	movlw	high _min_arr
  9915  009E  00A5               	movwf	i1itoa@buf+1
  9916  009F  0852               	movf	_min2,w
  9917  00A0  00AC               	movwf	??_isr
  9918  00A1  01AD               	clrf	??_isr+1
  9919  00A2  082C               	movf	??_isr,w
  9920  00A3  00A6               	movwf	i1itoa@val
  9921  00A4  082D               	movf	??_isr+1,w
  9922  00A5  00A7               	movwf	i1itoa@val+1
  9923  00A6  300A               	movlw	10
  9924  00A7  00A8               	movwf	i1itoa@base
  9925  00A8  3000               	movlw	0
  9926  00A9  00A9               	movwf	i1itoa@base+1
  9927  00AA  3197  27DB  3180   	fcall	i1_itoa
  9928                           
  9929                           ;Main.c: 402: itoa( hr_arr, hr3, 10 );
  9930  00AD  3066               	movlw	low _hr_arr
  9931  00AE  0020               	movlb	0	; select bank0
  9932  00AF  00A4               	movwf	i1itoa@buf
  9933  00B0  3001               	movlw	high _hr_arr
  9934  00B1  00A5               	movwf	i1itoa@buf+1
  9935  00B2  0853               	movf	_hr3,w
  9936  00B3  00AC               	movwf	??_isr
  9937  00B4  01AD               	clrf	??_isr+1
  9938  00B5  082C               	movf	??_isr,w
  9939  00B6  00A6               	movwf	i1itoa@val
  9940  00B7  082D               	movf	??_isr+1,w
  9941  00B8  00A7               	movwf	i1itoa@val+1
  9942  00B9  300A               	movlw	10
  9943  00BA  00A8               	movwf	i1itoa@base
  9944  00BB  3000               	movlw	0
  9945  00BC  00A9               	movwf	i1itoa@base+1
  9946  00BD  3197  27DB  3180   	fcall	i1_itoa
  9947                           
  9948                           ;Main.c: 403: itoa( dt_arr, date2, 10);
  9949  00C0  30D3               	movlw	low _dt_arr
  9950  00C1  0020               	movlb	0	; select bank0
  9951  00C2  00A4               	movwf	i1itoa@buf
  9952  00C3  3000               	movlw	high _dt_arr
  9953  00C4  00A5               	movwf	i1itoa@buf+1
  9954  00C5  0856               	movf	_date2,w
  9955  00C6  00AC               	movwf	??_isr
  9956  00C7  01AD               	clrf	??_isr+1
  9957  00C8  082C               	movf	??_isr,w
  9958  00C9  00A6               	movwf	i1itoa@val
  9959  00CA  082D               	movf	??_isr+1,w
  9960  00CB  00A7               	movwf	i1itoa@val+1
  9961  00CC  300A               	movlw	10
  9962  00CD  00A8               	movwf	i1itoa@base
  9963  00CE  3000               	movlw	0
  9964  00CF  00A9               	movwf	i1itoa@base+1
  9965  00D0  3197  27DB  3180   	fcall	i1_itoa
  9966                           
  9967                           ;Main.c: 409: strcpy(date_string, "\"");
  9968  00D3  30B7               	movlw	low _date_string
  9969  00D4  00F0               	movwf	i1strcpy@to
  9970  00D5  3000               	movlw	high _date_string
  9971  00D6  00F1               	movwf	i1strcpy@to+1
  9972  00D7  3041               	movlw	low ((STR_32+11)| (0+32768))
  9973  00D8  00F2               	movwf	i1strcpy@from
  9974  00D9  3085               	movlw	high ((STR_32+11)| (0+32768))
  9975  00DA  00F3               	movwf	i1strcpy@from+1
  9976  00DB  3196  26AF  3180   	fcall	i1_strcpy
  9977                           
  9978                           ;Main.c: 410: strcat(date_string, dt_arr);
  9979  00DE  30B7               	movlw	low _date_string
  9980  00DF  00F0               	movwf	i1strcat@to
  9981  00E0  3000               	movlw	high _date_string
  9982  00E1  00F1               	movwf	i1strcat@to+1
  9983  00E2  30D3               	movlw	low _dt_arr
  9984  00E3  00F2               	movwf	i1strcat@from
  9985  00E4  3000               	movlw	high _dt_arr
  9986  00E5  00F3               	movwf	i1strcat@from+1
  9987  00E6  3188  2031  3180   	fcall	i1_strcat
  9988                           
  9989                           ;Main.c: 411: strcat(date_string, "\"");
  9990  00E9  30B7               	movlw	low _date_string
  9991  00EA  00F0               	movwf	i1strcat@to
  9992  00EB  3000               	movlw	high _date_string
  9993  00EC  00F1               	movwf	i1strcat@to+1
  9994  00ED  3041               	movlw	low ((STR_32+11)| (0+32768))
  9995  00EE  00F2               	movwf	i1strcat@from
  9996  00EF  3085               	movlw	high ((STR_32+11)| (0+32768))
  9997  00F0  00F3               	movwf	i1strcat@from+1
  9998  00F1  3188  2031  3180   	fcall	i1_strcat
  9999                           
 10000                           ;Main.c: 416: strcpy(mth_string, "\"");
 10001  00F4  3020               	movlw	low _mth_string
 10002  00F5  00F0               	movwf	i1strcpy@to
 10003  00F6  3001               	movlw	high _mth_string
 10004  00F7  00F1               	movwf	i1strcpy@to+1
 10005  00F8  3041               	movlw	low ((STR_32+11)| (0+32768))
 10006  00F9  00F2               	movwf	i1strcpy@from
 10007  00FA  3085               	movlw	high ((STR_32+11)| (0+32768))
 10008  00FB  00F3               	movwf	i1strcpy@from+1
 10009  00FC  3196  26AF  3180   	fcall	i1_strcpy
 10010                           
 10011                           ;Main.c: 417: strcat(mth_string, months[mn2]);
 10012  00FF  3020               	movlw	low _mth_string
 10013  0100  00F0               	movwf	i1strcat@to
 10014  0101  3001               	movlw	high _mth_string
 10015  0102  00F1               	movwf	i1strcat@to+1
 10016  0103  0020               	movlb	0	; select bank0
 10017  0104  3557               	lslf	_mn2,w
 10018  0105  3EBB               	addlw	(low (_months| (0+256)))& (0+255)
 10019  0106  0086               	movwf	6
 10020  0107  3001               	movlw	1	; select bank3/4
 10021  0108  0087               	movwf	7
 10022  0109  3F40               	moviw [0]fsr1
 10023  010A  00F2               	movwf	i1strcat@from
 10024  010B  3F41               	moviw [1]fsr1
 10025  010C  00F3               	movwf	i1strcat@from+1
 10026  010D  3188  2031  3180   	fcall	i1_strcat
 10027                           
 10028                           ;Main.c: 418: strcat(mth_string, "\"");
 10029  0110  3020               	movlw	low _mth_string
 10030  0111  00F0               	movwf	i1strcat@to
 10031  0112  3001               	movlw	high _mth_string
 10032  0113  00F1               	movwf	i1strcat@to+1
 10033  0114  3041               	movlw	low ((STR_32+11)| (0+32768))
 10034  0115  00F2               	movwf	i1strcat@from
 10035  0116  3085               	movlw	high ((STR_32+11)| (0+32768))
 10036  0117  00F3               	movwf	i1strcat@from+1
 10037  0118  3188  2031  3180   	fcall	i1_strcat
 10038                           
 10039                           ;Main.c: 424: strcpy(time_string, "\"");
 10040  011B  30C1               	movlw	low _time_string
 10041  011C  00F0               	movwf	i1strcpy@to
 10042  011D  3000               	movlw	high _time_string
 10043  011E  00F1               	movwf	i1strcpy@to+1
 10044  011F  3041               	movlw	low ((STR_32+11)| (0+32768))
 10045  0120  00F2               	movwf	i1strcpy@from
 10046  0121  3085               	movlw	high ((STR_32+11)| (0+32768))
 10047  0122  00F3               	movwf	i1strcpy@from+1
 10048  0123  3196  26AF  3180   	fcall	i1_strcpy
 10049                           
 10050                           ;Main.c: 425: strcat(time_string, hr_arr);
 10051  0126  30C1               	movlw	low _time_string
 10052  0127  00F0               	movwf	i1strcat@to
 10053  0128  3000               	movlw	high _time_string
 10054  0129  00F1               	movwf	i1strcat@to+1
 10055  012A  3066               	movlw	low _hr_arr
 10056  012B  00F2               	movwf	i1strcat@from
 10057  012C  3001               	movlw	high _hr_arr
 10058  012D  00F3               	movwf	i1strcat@from+1
 10059  012E  3188  2031  3180   	fcall	i1_strcat
 10060                           
 10061                           ;Main.c: 426: strcat(time_string, ":");
 10062  0131  30C1               	movlw	low _time_string
 10063  0132  00F0               	movwf	i1strcat@to
 10064  0133  3000               	movlw	high _time_string
 10065  0134  00F1               	movwf	i1strcat@to+1
 10066  0135  30CD               	movlw	low (STR_39| (0+32768))
 10067  0136  00F2               	movwf	i1strcat@from
 10068  0137  3085               	movlw	high (STR_39| (0+32768))
 10069  0138  00F3               	movwf	i1strcat@from+1
 10070  0139  3188  2031  3180   	fcall	i1_strcat
 10071                           
 10072                           ;Main.c: 429: if (min2 < 10){
 10073  013C  300A               	movlw	10
 10074  013D  0020               	movlb	0	; select bank0
 10075  013E  0252               	subwf	_min2,w
 10076  013F  1803               	skipnc
 10077  0140  294C               	goto	i1l3944
 10078                           
 10079                           ;Main.c: 430: strcat(time_string, "0");
 10080  0141  30C1               	movlw	low _time_string
 10081  0142  00F0               	movwf	i1strcat@to
 10082  0143  3000               	movlw	high _time_string
 10083  0144  00F1               	movwf	i1strcat@to+1
 10084  0145  3067               	movlw	low ((STR_28+5)| (0+32768))
 10085  0146  00F2               	movwf	i1strcat@from
 10086  0147  3085               	movlw	high ((STR_28+5)| (0+32768))
 10087  0148  00F3               	movwf	i1strcat@from+1
 10088  0149  3188  2031  3180   	fcall	i1_strcat
 10089  014C                     i1l3944:	
 10090                           ;Main.c: 432: }
 10091                           
 10092                           ;Main.c: 431: strcat(time_string, min_arr);
 10093                           
 10094                           
 10095                           ;Main.c: 434: else
 10096                           ;Main.c: 435: {
 10097                           ;Main.c: 436: strcat(time_string, min_arr);
 10098  014C  30C1               	movlw	low _time_string
 10099  014D  00F0               	movwf	i1strcat@to
 10100  014E  3000               	movlw	high _time_string
 10101  014F  00F1               	movwf	i1strcat@to+1
 10102  0150  30CB               	movlw	low _min_arr
 10103  0151  00F2               	movwf	i1strcat@from
 10104  0152  3000               	movlw	high _min_arr
 10105  0153  00F3               	movwf	i1strcat@from+1
 10106  0154  3188  2031  3180   	fcall	i1_strcat
 10107                           
 10108                           ;Main.c: 437: }
 10109                           ;Main.c: 439: strcat(time_string, "\"");
 10110  0157  30C1               	movlw	low _time_string
 10111  0158  00F0               	movwf	i1strcat@to
 10112  0159  3000               	movlw	high _time_string
 10113  015A  00F1               	movwf	i1strcat@to+1
 10114  015B  3041               	movlw	low ((STR_32+11)| (0+32768))
 10115  015C  00F2               	movwf	i1strcat@from
 10116  015D  3085               	movlw	high ((STR_32+11)| (0+32768))
 10117  015E  00F3               	movwf	i1strcat@from+1
 10118  015F  3188  2031  3180   	fcall	i1_strcat
 10119                           
 10120                           ;Main.c: 442: touchscreen_data(screen_time, time_string);
 10121  0162  300C               	movlw	low (_screen_time| (0+32768))
 10122  0163  00F6               	movwf	i1touchscreen_data@cmd
 10123  0164  3085               	movlw	high (_screen_time| (0+32768))
 10124  0165  00F7               	movwf	i1touchscreen_data@cmd+1
 10125  0166  30C1               	movlw	low _time_string
 10126  0167  00F8               	movwf	i1touchscreen_data@string2
 10127  0168  3000               	movlw	high _time_string
 10128  0169  00F9               	movwf	i1touchscreen_data@string2+1
 10129  016A  3188  2057  3180   	fcall	i1_touchscreen_data
 10130                           
 10131                           ;Main.c: 445: touchscreen_data(screen_mth, mth_string);
 10132  016D  30F7               	movlw	low (_screen_mth| (0+32768))
 10133  016E  00F6               	movwf	i1touchscreen_data@cmd
 10134  016F  3084               	movlw	high (_screen_mth| (0+32768))
 10135  0170  00F7               	movwf	i1touchscreen_data@cmd+1
 10136  0171  3020               	movlw	low _mth_string
 10137  0172  00F8               	movwf	i1touchscreen_data@string2
 10138  0173  3001               	movlw	high _mth_string
 10139  0174  00F9               	movwf	i1touchscreen_data@string2+1
 10140  0175  3188  2057  3180   	fcall	i1_touchscreen_data
 10141                           
 10142                           ;Main.c: 448: touchscreen_data(screen_date, date_string);
 10143  0178  3002               	movlw	low (_screen_date| (0+32768))
 10144  0179  00F6               	movwf	i1touchscreen_data@cmd
 10145  017A  3085               	movlw	high (_screen_date| (0+32768))
 10146  017B  00F7               	movwf	i1touchscreen_data@cmd+1
 10147  017C  30B7               	movlw	low _date_string
 10148  017D  00F8               	movwf	i1touchscreen_data@string2
 10149  017E  3000               	movlw	high _date_string
 10150  017F  00F9               	movwf	i1touchscreen_data@string2+1
 10151  0180  3188  2057         	fcall	i1_touchscreen_data
 10152                           
 10153                           ;Main.c: 451: count = 0;
 10154  0182  0021               	movlb	1	; select bank1
 10155  0183  01A0               	clrf	isr@count^(0+128)
 10156  0184  01A1               	clrf	(isr@count+1)^(0+128)
 10157  0185                     i1l255:	
 10158                           ;Main.c: 455: else {
 10159                           
 10160                           ;Main.c: 452: }
 10161                           
 10162  0185  0020               	movlb	0	; select bank0
 10163  0186  082E               	movf	??_isr+2,w
 10164  0187  00FF               	movwf	127
 10165  0188  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 10166  0189  0009               	retfie
 10167  018A                     __end_of_isr:	
 10168                           
 10169                           	psect	text40
 10170  0857                     __ptext40:	
 10171 ;; *************** function i1_touchscreen_data *****************
 10172 ;; Defined at:
 10173 ;;		line 31 in file "touchscreen.c"
 10174 ;; Parameters:    Size  Location     Type
 10175 ;;  cmd             2    6[COMMON] PTR unsigned char 
 10176 ;;		 -> screen_date(10), screen_mth(11), screen_time(10), screen_month(8), 
 10177 ;;		 -> screen_date1(8), screen_hour(8), screen_mins(8), 
 10178 ;;  string2         2    8[COMMON] PTR unsigned char 
 10179 ;;		 -> time_string(10), mth_string(10), date_string(10), month_string(10), 
 10180 ;;		 -> date1_string(10), hour_string(10), min_string(10), 
 10181 ;; Auto vars:     Size  Location     Type
 10182 ;;		None
 10183 ;; Return value:  Size  Location     Type
 10184 ;;                  1    wreg      void 
 10185 ;; Registers used:
 10186 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10187 ;; Tracked objects:
 10188 ;;		On entry : 0/0
 10189 ;;		On exit  : 0/0
 10190 ;;		Unchanged: 0/0
 10191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10192 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10194 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10195 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10196 ;;Total ram usage:        6 bytes
 10197 ;; Hardware stack levels used:    1
 10198 ;; Hardware stack levels required when called:    2
 10199 ;; This function calls:
 10200 ;;		i1_EUSART_Write
 10201 ;;		i1_EUSART_Write_Text
 10202 ;; This function is called by:
 10203 ;;		_isr
 10204 ;; This function uses a non-reentrant model
 10205 ;;
 10206                           
 10207                           
 10208                           ;psect for function i1_touchscreen_data
 10209  0857                     i1_touchscreen_data:	
 10210                           
 10211                           ;touchscreen.c: 33: EUSART_Write_Text(cmd);
 10212                           
 10213                           ;incstack = 0
 10214                           ; Regs used in i1_touchscreen_data: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10215  0857  0877               	movf	i1touchscreen_data@cmd+1,w
 10216  0858  00F2               	movwf	i1EUSART_Write_Text@text+1
 10217  0859  0876               	movf	i1touchscreen_data@cmd,w
 10218  085A  00F1               	movwf	i1EUSART_Write_Text@text
 10219  085B  3196  26C9  3188   	fcall	i1_EUSART_Write_Text
 10220                           
 10221                           ;touchscreen.c: 34: EUSART_Write_Text(string2);
 10222  085E  0879               	movf	i1touchscreen_data@string2+1,w
 10223  085F  00F2               	movwf	i1EUSART_Write_Text@text+1
 10224  0860  0878               	movf	i1touchscreen_data@string2,w
 10225  0861  00F1               	movwf	i1EUSART_Write_Text@text
 10226  0862  3196  26C9  3188   	fcall	i1_EUSART_Write_Text
 10227                           
 10228                           ;touchscreen.c: 35: EUSART_Write(0xFF);
 10229  0865  30FF               	movlw	255
 10230  0866  3195  25E6  3188   	fcall	i1_EUSART_Write
 10231                           
 10232                           ;touchscreen.c: 36: EUSART_Write(0xFF);
 10233  0869  30FF               	movlw	255
 10234  086A  3195  25E6  3188   	fcall	i1_EUSART_Write
 10235                           
 10236                           ;touchscreen.c: 37: EUSART_Write(0xFF);
 10237  086D  30FF               	movlw	255
 10238  086E  3195  25E6  3188   	fcall	i1_EUSART_Write
 10239                           
 10240                           ;touchscreen.c: 39: _delay((unsigned long)((100)*(16000000/4000.0)));
 10241  0871  3003               	movlw	3
 10242  0872  00FB               	movwf	??i1_touchscreen_data+1
 10243  0873  3008               	movlw	8
 10244  0874  00FA               	movwf	??i1_touchscreen_data
 10245  0875  3077               	movlw	119
 10246  0876                     u390_27:	
 10247  0876  0B89               	decfsz	9,f
 10248  0877  2876               	goto	u390_27
 10249  0878  0BFA               	decfsz	??i1_touchscreen_data,f
 10250  0879  2876               	goto	u390_27
 10251  087A  0BFB               	decfsz	??i1_touchscreen_data+1,f
 10252  087B  2876               	goto	u390_27
 10253  087C  0000               	nop
 10254  087D  0008               	return
 10255  087E                     __end_ofi1_touchscreen_data:	
 10256                           
 10257                           	psect	text41
 10258  16C9                     __ptext41:	
 10259 ;; *************** function i1_EUSART_Write_Text *****************
 10260 ;; Defined at:
 10261 ;;		line 125 in file "EUSART.c"
 10262 ;; Parameters:    Size  Location     Type
 10263 ;;  text            2    1[COMMON] PTR unsigned char 
 10264 ;;		 -> screen_date(10), screen_mth(11), screen_time(10), time_string(10), 
 10265 ;;		 -> mth_string(10), date_string(10), STR_33(8), STR_32(13), 
 10266 ;;		 -> STR_31(7), STR_30(12), STR_28(7), screen_month(8), 
 10267 ;;		 -> month_string(10), screen_date1(8), date1_string(10), screen_hour(8), 
 10268 ;;		 -> hour_string(10), screen_mins(8), min_string(10), 
 10269 ;; Auto vars:     Size  Location     Type
 10270 ;;  EUSART_Write    2    4[COMMON] int 
 10271 ;; Return value:  Size  Location     Type
 10272 ;;                  1    wreg      void 
 10273 ;; Registers used:
 10274 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10275 ;; Tracked objects:
 10276 ;;		On entry : 0/0
 10277 ;;		On exit  : 0/0
 10278 ;;		Unchanged: 0/0
 10279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10280 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10281 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10282 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10283 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10284 ;;Total ram usage:        5 bytes
 10285 ;; Hardware stack levels used:    1
 10286 ;; Hardware stack levels required when called:    1
 10287 ;; This function calls:
 10288 ;;		i1_EUSART_Write
 10289 ;; This function is called by:
 10290 ;;		i1_touchscreen_data
 10291 ;; This function uses a non-reentrant model
 10292 ;;
 10293                           
 10294                           
 10295                           ;psect for function i1_EUSART_Write_Text
 10296  16C9                     i1_EUSART_Write_Text:	
 10297                           
 10298                           ;EUSART.c: 127: int i;
 10299                           ;EUSART.c: 128: for(i=0;text[i]!='\0';i++)
 10300                           
 10301                           ;incstack = 0
 10302                           ; Regs used in i1_EUSART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10303  16C9  01F4               	clrf	i1EUSART_Write_Text@i
 10304  16CA  01F5               	clrf	i1EUSART_Write_Text@i+1
 10305  16CB                     i1l2568:	
 10306  16CB  0871               	movf	i1EUSART_Write_Text@text,w
 10307  16CC  0774               	addwf	i1EUSART_Write_Text@i,w
 10308  16CD  0084               	movwf	4
 10309  16CE  0872               	movf	i1EUSART_Write_Text@text+1,w
 10310  16CF  3D75               	addwfc	i1EUSART_Write_Text@i+1,w
 10311  16D0  0085               	movwf	5
 10312  16D1  0012               	moviw fsr0++
 10313  16D2  1903               	btfsc	3,2
 10314  16D3  0008               	return
 10315                           
 10316                           ;EUSART.c: 129: EUSART_Write(text[i]);
 10317  16D4  0871               	movf	i1EUSART_Write_Text@text,w
 10318  16D5  0774               	addwf	i1EUSART_Write_Text@i,w
 10319  16D6  0084               	movwf	4
 10320  16D7  0872               	movf	i1EUSART_Write_Text@text+1,w
 10321  16D8  3D75               	addwfc	i1EUSART_Write_Text@i+1,w
 10322  16D9  0085               	movwf	5
 10323  16DA  0800               	movf	0,w	;code access
 10324  16DB  3195  25E6  3196   	fcall	i1_EUSART_Write
 10325  16DE  3001               	movlw	1
 10326  16DF  07F4               	addwf	i1EUSART_Write_Text@i,f
 10327  16E0  3000               	movlw	0
 10328  16E1  3DF5               	addwfc	i1EUSART_Write_Text@i+1,f
 10329  16E2  2ECB               	goto	i1l2568
 10330  16E3                     __end_ofi1_EUSART_Write_Text:	
 10331                           
 10332                           	psect	text42
 10333  15E6                     __ptext42:	
 10334 ;; *************** function i1_EUSART_Write *****************
 10335 ;; Defined at:
 10336 ;;		line 98 in file "EUSART.c"
 10337 ;; Parameters:    Size  Location     Type
 10338 ;;  txData          1    wreg     unsigned char 
 10339 ;; Auto vars:     Size  Location     Type
 10340 ;;  txData          1    0[COMMON] unsigned char 
 10341 ;; Return value:  Size  Location     Type
 10342 ;;                  1    wreg      void 
 10343 ;; Registers used:
 10344 ;;		wreg
 10345 ;; Tracked objects:
 10346 ;;		On entry : 0/0
 10347 ;;		On exit  : 0/0
 10348 ;;		Unchanged: 0/0
 10349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10351 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10353 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10354 ;;Total ram usage:        1 bytes
 10355 ;; Hardware stack levels used:    1
 10356 ;; This function calls:
 10357 ;;		Nothing
 10358 ;; This function is called by:
 10359 ;;		i1_EUSART_Write_Text
 10360 ;;		i1_touchscreen_data
 10361 ;; This function uses a non-reentrant model
 10362 ;;
 10363                           
 10364                           
 10365                           ;psect for function i1_EUSART_Write
 10366  15E6                     i1_EUSART_Write:	
 10367                           
 10368                           ;incstack = 0
 10369                           ; Regs used in i1_EUSART_Write: [wreg]
 10370                           ;i1EUSART_Write@txData stored from wreg
 10371  15E6  00F0               	movwf	i1EUSART_Write@txData
 10372  15E7                     i1l380:	
 10373                           ;EUSART.c: 101: {
 10374                           
 10375                           ;EUSART.c: 100: while(0 == PIR1bits.TXIF)
 10376                           
 10377  15E7  0020               	movlb	0	; select bank0
 10378  15E8  1E11               	btfss	17,4	;volatile
 10379  15E9  2DE7               	goto	i1l380
 10380                           
 10381                           ;EUSART.c: 102: }
 10382                           ;EUSART.c: 104: TX1REG = txData;
 10383  15EA  0870               	movf	i1EUSART_Write@txData,w
 10384  15EB  0023               	movlb	3	; select bank3
 10385  15EC  009A               	movwf	26	;volatile
 10386  15ED  0008               	return
 10387  15EE                     __end_ofi1_EUSART_Write:	
 10388                           
 10389                           	psect	text43
 10390  16AF                     __ptext43:	
 10391 ;; *************** function i1_strcpy *****************
 10392 ;; Defined at:
 10393 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\strcpy.c"
 10394 ;; Parameters:    Size  Location     Type
 10395 ;;  to              2    0[COMMON] PTR unsigned char 
 10396 ;;		 -> time_string(10), mth_string(10), date_string(10), month_string(10), 
 10397 ;;		 -> date1_string(10), hour_string(10), min_string(10), 
 10398 ;;  from            2    2[COMMON] PTR const unsigned char 
 10399 ;;		 -> STR_38(2), STR_36(2), STR_34(2), STR_26(2), 
 10400 ;;		 -> STR_24(2), STR_22(2), STR_19(2), 
 10401 ;; Auto vars:     Size  Location     Type
 10402 ;;  strcpy          2    4[COMMON] PTR unsigned char 
 10403 ;;		 -> time_string(10), mth_string(10), date_string(10), month_string(10), 
 10404 ;;		 -> date1_string(10), hour_string(10), min_string(10), 
 10405 ;; Return value:  Size  Location     Type
 10406 ;;                  1    wreg      PTR unsigned char 
 10407 ;; Registers used:
 10408 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, pclath
 10409 ;; Tracked objects:
 10410 ;;		On entry : 0/0
 10411 ;;		On exit  : 0/0
 10412 ;;		Unchanged: 0/0
 10413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10414 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10415 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10417 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10418 ;;Total ram usage:        6 bytes
 10419 ;; Hardware stack levels used:    1
 10420 ;; This function calls:
 10421 ;;		Nothing
 10422 ;; This function is called by:
 10423 ;;		_isr
 10424 ;; This function uses a non-reentrant model
 10425 ;;
 10426                           
 10427                           
 10428                           ;psect for function i1_strcpy
 10429  16AF                     i1_strcpy:	
 10430                           
 10431                           ;incstack = 0
 10432                           ; Regs used in i1_strcpy: [wreg-fsr1h+pclath]
 10433  16AF  0871               	movf	i1strcpy@to+1,w
 10434  16B0  00F5               	movwf	i1strcpy@cp+1
 10435  16B1  0870               	movf	i1strcpy@to,w
 10436  16B2  00F4               	movwf	i1strcpy@cp
 10437  16B3                     i1l2868:	
 10438  16B3  0874               	movf	i1strcpy@cp,w
 10439  16B4  0086               	movwf	6
 10440  16B5  0875               	movf	i1strcpy@cp+1,w
 10441  16B6  0087               	movwf	7
 10442  16B7  0872               	movf	i1strcpy@from,w
 10443  16B8  0084               	movwf	4
 10444  16B9  0873               	movf	i1strcpy@from+1,w
 10445  16BA  0085               	movwf	5
 10446  16BB  0800               	movf	0,w	;code access
 10447  16BC  3FC0               	movwi [0]fsr1
 10448  16BD  0889               	movf	9,f
 10449  16BE  1903               	btfsc	3,2
 10450  16BF  0008               	return
 10451  16C0  3001               	movlw	1
 10452  16C1  07F4               	addwf	i1strcpy@cp,f
 10453  16C2  3000               	movlw	0
 10454  16C3  3DF5               	addwfc	i1strcpy@cp+1,f
 10455  16C4  3001               	movlw	1
 10456  16C5  07F2               	addwf	i1strcpy@from,f
 10457  16C6  3000               	movlw	0
 10458  16C7  3DF3               	addwfc	i1strcpy@from+1,f
 10459  16C8  2EB3               	goto	i1l2868
 10460  16C9                     __end_ofi1_strcpy:	
 10461                           ;	Return value of i1_strcpy is never used
 10462                           
 10463                           
 10464                           	psect	text44
 10465  0831                     __ptext44:	
 10466 ;; *************** function i1_strcat *****************
 10467 ;; Defined at:
 10468 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\strcat.c"
 10469 ;; Parameters:    Size  Location     Type
 10470 ;;  to              2    0[COMMON] PTR unsigned char 
 10471 ;;		 -> time_string(10), mth_string(10), date_string(10), month_string(10), 
 10472 ;;		 -> date1_string(10), hour_string(10), min_string(10), 
 10473 ;;  from            2    2[COMMON] PTR const unsigned char 
 10474 ;;		 -> STR_41(2), STR_40(2), STR_39(2), STR_37(2), 
 10475 ;;		 -> STR_35(2), dt_arr(5), hr_arr(8), min_arr(8), 
 10476 ;;		 -> STR_27(2), month_arr(10), STR_25(2), date_arr(10), 
 10477 ;;		 -> STR_23(2), hour_arr(10), STR_21(2), STR_20(2), 
 10478 ;;		 -> minute_arr(10), STR_13(4), STR_12(4), STR_11(4), 
 10479 ;;		 -> STR_10(4), STR_9(4), STR_8(4), STR_7(4), 
 10480 ;;		 -> STR_6(4), STR_5(4), STR_4(4), STR_3(4), 
 10481 ;;		 -> STR_2(4), STR_1(4), 
 10482 ;; Auto vars:     Size  Location     Type
 10483 ;;  strcat          2    4[COMMON] PTR unsigned char 
 10484 ;;		 -> time_string(10), mth_string(10), date_string(10), month_string(10), 
 10485 ;;		 -> date1_string(10), hour_string(10), min_string(10), 
 10486 ;; Return value:  Size  Location     Type
 10487 ;;                  1    wreg      PTR unsigned char 
 10488 ;; Registers used:
 10489 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 10490 ;; Tracked objects:
 10491 ;;		On entry : 0/0
 10492 ;;		On exit  : 0/0
 10493 ;;		Unchanged: 0/0
 10494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10495 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10496 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10498 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10499 ;;Total ram usage:        6 bytes
 10500 ;; Hardware stack levels used:    1
 10501 ;; This function calls:
 10502 ;;		Nothing
 10503 ;; This function is called by:
 10504 ;;		_isr
 10505 ;; This function uses a non-reentrant model
 10506 ;;
 10507                           
 10508                           
 10509                           ;psect for function i1_strcat
 10510  0831                     i1_strcat:	
 10511                           
 10512                           ;incstack = 0
 10513                           ; Regs used in i1_strcat: [wreg-fsr1h+status,2+status,0+pclath]
 10514  0831  0871               	movf	i1strcat@to+1,w
 10515  0832  00F5               	movwf	i1strcat@cp+1
 10516  0833  0870               	movf	i1strcat@to,w
 10517  0834  00F4               	movwf	i1strcat@cp
 10518  0835                     i1l2858:	
 10519  0835  0874               	movf	i1strcat@cp,w
 10520  0836  0086               	movwf	6
 10521  0837  0875               	movf	i1strcat@cp+1,w
 10522  0838  0087               	movwf	7
 10523  0839  0801               	movf	1,w
 10524  083A  1903               	btfsc	3,2
 10525  083B  2849               	goto	i1l2862
 10526  083C  3001               	movlw	1
 10527  083D  07F4               	addwf	i1strcat@cp,f
 10528  083E  3000               	movlw	0
 10529  083F  3DF5               	addwfc	i1strcat@cp+1,f
 10530  0840  2835               	goto	i1l2858
 10531  0841                     i1l2860:	
 10532  0841  3001               	movlw	1
 10533  0842  07F4               	addwf	i1strcat@cp,f
 10534  0843  3000               	movlw	0
 10535  0844  3DF5               	addwfc	i1strcat@cp+1,f
 10536  0845  3001               	movlw	1
 10537  0846  07F2               	addwf	i1strcat@from,f
 10538  0847  3000               	movlw	0
 10539  0848  3DF3               	addwfc	i1strcat@from+1,f
 10540  0849                     i1l2862:	
 10541  0849  0874               	movf	i1strcat@cp,w
 10542  084A  0086               	movwf	6
 10543  084B  0875               	movf	i1strcat@cp+1,w
 10544  084C  0087               	movwf	7
 10545  084D  0872               	movf	i1strcat@from,w
 10546  084E  0084               	movwf	4
 10547  084F  0873               	movf	i1strcat@from+1,w
 10548  0850  0085               	movwf	5
 10549  0851  0800               	movf	0,w	;code access
 10550  0852  3FC0               	movwi [0]fsr1
 10551  0853  0889               	movf	9,f
 10552  0854  1903               	btfsc	3,2
 10553  0855  0008               	return
 10554  0856  2841               	goto	i1l2860
 10555  0857                     __end_ofi1_strcat:	
 10556                           ;	Return value of i1_strcat is never used
 10557                           
 10558                           
 10559                           	psect	text45
 10560  17DB                     __ptext45:	
 10561 ;; *************** function i1_itoa *****************
 10562 ;; Defined at:
 10563 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\itoa.c"
 10564 ;; Parameters:    Size  Location     Type
 10565 ;;  buf             2    4[BANK0 ] PTR unsigned char 
 10566 ;;		 -> OLED_Write_Integer@s(20), dt_arr(5), hr_arr(8), min_arr(8), 
 10567 ;;		 -> month_arr(10), date_arr(10), hour_arr(10), minute_arr(10), 
 10568 ;;  val             2    6[BANK0 ] int 
 10569 ;;  base            2    8[BANK0 ] int 
 10570 ;; Auto vars:     Size  Location     Type
 10571 ;;  itoa            2   10[BANK0 ] PTR unsigned char 
 10572 ;;		 -> OLED_Write_Integer@s(20), dt_arr(5), hr_arr(8), min_arr(8), 
 10573 ;;		 -> month_arr(10), date_arr(10), hour_arr(10), minute_arr(10), 
 10574 ;; Return value:  Size  Location     Type
 10575 ;;                  1    wreg      PTR unsigned char 
 10576 ;; Registers used:
 10577 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10578 ;; Tracked objects:
 10579 ;;		On entry : 0/0
 10580 ;;		On exit  : 0/0
 10581 ;;		Unchanged: 0/0
 10582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10583 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10584 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10586 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10587 ;;Total ram usage:        8 bytes
 10588 ;; Hardware stack levels used:    1
 10589 ;; Hardware stack levels required when called:    2
 10590 ;; This function calls:
 10591 ;;		i1_utoa
 10592 ;; This function is called by:
 10593 ;;		_isr
 10594 ;; This function uses a non-reentrant model
 10595 ;;
 10596                           
 10597                           
 10598                           ;psect for function i1_itoa
 10599  17DB                     i1_itoa:	
 10600                           
 10601                           ;incstack = 0
 10602                           ; Regs used in i1_itoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10603  17DB  0020               	movlb	0	; select bank0
 10604  17DC  0825               	movf	i1itoa@buf+1,w
 10605  17DD  00AB               	movwf	i1itoa@cp+1
 10606  17DE  0824               	movf	i1itoa@buf,w
 10607  17DF  00AA               	movwf	i1itoa@cp
 10608  17E0  1FA7               	btfss	i1itoa@val+1,7
 10609  17E1  2FF1               	goto	i1l3754
 10610  17E2  0824               	movf	i1itoa@buf,w
 10611  17E3  0086               	movwf	6
 10612  17E4  0825               	movf	i1itoa@buf+1,w
 10613  17E5  0087               	movwf	7
 10614  17E6  302D               	movlw	45
 10615  17E7  0081               	movwf	1
 10616  17E8  3001               	movlw	1
 10617  17E9  07A4               	addwf	i1itoa@buf,f
 10618  17EA  3000               	movlw	0
 10619  17EB  3DA5               	addwfc	i1itoa@buf+1,f
 10620  17EC  09A6               	comf	i1itoa@val,f
 10621  17ED  09A7               	comf	i1itoa@val+1,f
 10622  17EE  0AA6               	incf	i1itoa@val,f
 10623  17EF  1903               	skipnz
 10624  17F0  0AA7               	incf	i1itoa@val+1,f
 10625  17F1                     i1l3754:	
 10626  17F1  0825               	movf	i1itoa@buf+1,w
 10627  17F2  00F9               	movwf	i1utoa@buf+1
 10628  17F3  0824               	movf	i1itoa@buf,w
 10629  17F4  00F8               	movwf	i1utoa@buf
 10630  17F5  0827               	movf	i1itoa@val+1,w
 10631  17F6  00FB               	movwf	i1utoa@val+1
 10632  17F7  0826               	movf	i1itoa@val,w
 10633  17F8  00FA               	movwf	i1utoa@val
 10634  17F9  0829               	movf	i1itoa@base+1,w
 10635  17FA  00FD               	movwf	i1utoa@base+1
 10636  17FB  0828               	movf	i1itoa@base,w
 10637  17FC  00FC               	movwf	i1utoa@base
 10638  17FD  318B  2353         	fcall	i1_utoa
 10639  17FF  0008               	return
 10640  1800                     __end_ofi1_itoa:	
 10641                           ;	Return value of i1_itoa is never used
 10642                           
 10643                           
 10644                           	psect	text46
 10645  0B53                     __ptext46:	
 10646 ;; *************** function i1_utoa *****************
 10647 ;; Defined at:
 10648 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\itoa.c"
 10649 ;; Parameters:    Size  Location     Type
 10650 ;;  buf             2    8[COMMON] PTR unsigned char 
 10651 ;;		 -> OLED_Write_Integer@s(20), dt_arr(5), hr_arr(8), min_arr(8), 
 10652 ;;		 -> month_arr(10), date_arr(10), hour_arr(10), minute_arr(10), 
 10653 ;;  val             2   10[COMMON] unsigned int 
 10654 ;;  base            2   12[COMMON] int 
 10655 ;; Auto vars:     Size  Location     Type
 10656 ;;  utoa            2    1[BANK0 ] unsigned int 
 10657 ;;  utoa            1    3[BANK0 ] unsigned char 
 10658 ;; Return value:  Size  Location     Type
 10659 ;;                  1    wreg      PTR unsigned char 
 10660 ;; Registers used:
 10661 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10662 ;; Tracked objects:
 10663 ;;		On entry : 0/0
 10664 ;;		On exit  : 0/0
 10665 ;;		Unchanged: 0/0
 10666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10667 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10668 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10669 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10670 ;;      Totals:         6       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10671 ;;Total ram usage:       10 bytes
 10672 ;; Hardware stack levels used:    1
 10673 ;; Hardware stack levels required when called:    1
 10674 ;; This function calls:
 10675 ;;		i1___lwdiv
 10676 ;;		i1___lwmod
 10677 ;; This function is called by:
 10678 ;;		i1_itoa
 10679 ;; This function uses a non-reentrant model
 10680 ;;
 10681                           
 10682                           
 10683                           ;psect for function i1_utoa
 10684  0B53                     i1_utoa:	
 10685                           
 10686                           ;incstack = 0
 10687                           ; Regs used in i1_utoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10688  0B53  087B               	movf	i1utoa@val+1,w
 10689  0B54  0020               	movlb	0	; select bank0
 10690  0B55  00A2               	movwf	i1utoa@v+1
 10691  0B56  087A               	movf	i1utoa@val,w
 10692  0B57  00A1               	movwf	i1utoa@v
 10693  0B58                     i1l3550:	
 10694  0B58  087D               	movf	i1utoa@base+1,w
 10695  0B59  00F1               	movwf	i1___lwdiv@divisor+1
 10696  0B5A  087C               	movf	i1utoa@base,w
 10697  0B5B  00F0               	movwf	i1___lwdiv@divisor
 10698  0B5C  0822               	movf	i1utoa@v+1,w
 10699  0B5D  00F3               	movwf	i1___lwdiv@dividend+1
 10700  0B5E  0821               	movf	i1utoa@v,w
 10701  0B5F  00F2               	movwf	i1___lwdiv@dividend
 10702  0B60  3189  21B2  318B   	fcall	i1___lwdiv
 10703  0B63  0871               	movf	?i1___lwdiv+1,w
 10704  0B64  0020               	movlb	0	; select bank0
 10705  0B65  00A2               	movwf	i1utoa@v+1
 10706  0B66  0870               	movf	?i1___lwdiv,w
 10707  0B67  00A1               	movwf	i1utoa@v
 10708  0B68  3001               	movlw	1
 10709  0B69  07F8               	addwf	i1utoa@buf,f
 10710  0B6A  3000               	movlw	0
 10711  0B6B  3DF9               	addwfc	i1utoa@buf+1,f
 10712  0B6C  0821               	movf	i1utoa@v,w
 10713  0B6D  0422               	iorwf	i1utoa@v+1,w
 10714  0B6E  1D03               	btfss	3,2
 10715  0B6F  2B58               	goto	i1l3550
 10716  0B70  0878               	movf	i1utoa@buf,w
 10717  0B71  0086               	movwf	6
 10718  0B72  0879               	movf	i1utoa@buf+1,w
 10719  0B73  0087               	movwf	7
 10720  0B74  0181               	clrf	1
 10721  0B75  3001               	movlw	1
 10722  0B76  02F8               	subwf	i1utoa@buf,f
 10723  0B77  3000               	movlw	0
 10724  0B78  3BF9               	subwfb	i1utoa@buf+1,f
 10725  0B79                     i1l3560:	
 10726  0B79  087D               	movf	i1utoa@base+1,w
 10727  0B7A  00F1               	movwf	i1___lwmod@divisor+1
 10728  0B7B  087C               	movf	i1utoa@base,w
 10729  0B7C  00F0               	movwf	i1___lwmod@divisor
 10730  0B7D  087B               	movf	i1utoa@val+1,w
 10731  0B7E  00F3               	movwf	i1___lwmod@dividend+1
 10732  0B7F  087A               	movf	i1utoa@val,w
 10733  0B80  00F2               	movwf	i1___lwmod@dividend
 10734  0B81  3188  20F9  318B   	fcall	i1___lwmod
 10735  0B84  0870               	movf	?i1___lwmod,w
 10736  0B85  0020               	movlb	0	; select bank0
 10737  0B86  00A0               	movwf	??i1_utoa
 10738  0B87  0820               	movf	??i1_utoa,w
 10739  0B88  00A3               	movwf	i1utoa@c
 10740  0B89  087D               	movf	i1utoa@base+1,w
 10741  0B8A  00F1               	movwf	i1___lwdiv@divisor+1
 10742  0B8B  087C               	movf	i1utoa@base,w
 10743  0B8C  00F0               	movwf	i1___lwdiv@divisor
 10744  0B8D  087B               	movf	i1utoa@val+1,w
 10745  0B8E  00F3               	movwf	i1___lwdiv@dividend+1
 10746  0B8F  087A               	movf	i1utoa@val,w
 10747  0B90  00F2               	movwf	i1___lwdiv@dividend
 10748  0B91  3189  21B2  318B   	fcall	i1___lwdiv
 10749  0B94  0871               	movf	?i1___lwdiv+1,w
 10750  0B95  00FB               	movwf	i1utoa@val+1
 10751  0B96  0870               	movf	?i1___lwdiv,w
 10752  0B97  00FA               	movwf	i1utoa@val
 10753  0B98  300A               	movlw	10
 10754  0B99  0020               	movlb	0	; select bank0
 10755  0B9A  0223               	subwf	i1utoa@c,w
 10756  0B9B  1C03               	skipc
 10757  0B9C  2BA1               	goto	i1l794
 10758  0B9D  3007               	movlw	7
 10759  0B9E  00A0               	movwf	??i1_utoa
 10760  0B9F  0820               	movf	??i1_utoa,w
 10761  0BA0  07A3               	addwf	i1utoa@c,f
 10762  0BA1                     i1l794:	
 10763  0BA1  3030               	movlw	48
 10764  0BA2  00A0               	movwf	??i1_utoa
 10765  0BA3  0820               	movf	??i1_utoa,w
 10766  0BA4  07A3               	addwf	i1utoa@c,f
 10767  0BA5  0878               	movf	i1utoa@buf,w
 10768  0BA6  0086               	movwf	6
 10769  0BA7  0879               	movf	i1utoa@buf+1,w
 10770  0BA8  0087               	movwf	7
 10771  0BA9  0823               	movf	i1utoa@c,w
 10772  0BAA  0081               	movwf	1
 10773  0BAB  3001               	movlw	1
 10774  0BAC  02F8               	subwf	i1utoa@buf,f
 10775  0BAD  3000               	movlw	0
 10776  0BAE  3BF9               	subwfb	i1utoa@buf+1,f
 10777  0BAF  087A               	movf	i1utoa@val,w
 10778  0BB0  047B               	iorwf	i1utoa@val+1,w
 10779  0BB1  1D03               	btfss	3,2
 10780  0BB2  2B79               	goto	i1l3560
 10781                           
 10782                           ;	Return value of i1_utoa is never used
 10783  0BB3  3001               	movlw	1
 10784  0BB4  07F8               	addwf	i1utoa@buf,f
 10785  0BB5  3000               	movlw	0
 10786  0BB6  3DF9               	addwfc	i1utoa@buf+1,f
 10787  0BB7  0008               	return
 10788  0BB8                     __end_ofi1_utoa:	
 10789                           
 10790                           	psect	text47
 10791  08F9                     __ptext47:	
 10792 ;; *************** function i1___lwmod *****************
 10793 ;; Defined at:
 10794 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
 10795 ;; Parameters:    Size  Location     Type
 10796 ;;  divisor         2    0[COMMON] unsigned int 
 10797 ;;  dividend        2    2[COMMON] unsigned int 
 10798 ;; Auto vars:     Size  Location     Type
 10799 ;;  __lwmod         1    5[COMMON] unsigned char 
 10800 ;; Return value:  Size  Location     Type
 10801 ;;                  2    0[COMMON] unsigned int 
 10802 ;; Registers used:
 10803 ;;		wreg, status,2, status,0
 10804 ;; Tracked objects:
 10805 ;;		On entry : 0/0
 10806 ;;		On exit  : 0/0
 10807 ;;		Unchanged: 0/0
 10808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10809 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10810 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10811 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10812 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10813 ;;Total ram usage:        6 bytes
 10814 ;; Hardware stack levels used:    1
 10815 ;; This function calls:
 10816 ;;		Nothing
 10817 ;; This function is called by:
 10818 ;;		i1_utoa
 10819 ;; This function uses a non-reentrant model
 10820 ;;
 10821                           
 10822                           
 10823                           ;psect for function i1___lwmod
 10824  08F9                     i1___lwmod:	
 10825                           
 10826                           ;incstack = 0
 10827                           ; Regs used in i1___lwmod: [wreg+status,2+status,0]
 10828  08F9  0870               	movf	i1___lwmod@divisor,w
 10829  08FA  0471               	iorwf	i1___lwmod@divisor+1,w
 10830  08FB  1903               	btfsc	3,2
 10831  08FC  2920               	goto	i1l2394
 10832  08FD  01F5               	clrf	i1___lwmod@counter
 10833  08FE  0AF5               	incf	i1___lwmod@counter,f
 10834  08FF                     i1l2384:	
 10835  08FF  1BF1               	btfsc	i1___lwmod@divisor+1,7
 10836  0900  290B               	goto	i1l2386
 10837  0901  3001               	movlw	1
 10838  0902                     u208_25:	
 10839  0902  35F0               	lslf	i1___lwmod@divisor,f
 10840  0903  0DF1               	rlf	i1___lwmod@divisor+1,f
 10841  0904  0B89               	decfsz	9,f
 10842  0905  2902               	goto	u208_25
 10843  0906  3001               	movlw	1
 10844  0907  00F4               	movwf	??i1___lwmod
 10845  0908  0874               	movf	??i1___lwmod,w
 10846  0909  07F5               	addwf	i1___lwmod@counter,f
 10847  090A  28FF               	goto	i1l2384
 10848  090B                     i1l2386:	
 10849  090B  0871               	movf	i1___lwmod@divisor+1,w
 10850  090C  0273               	subwf	i1___lwmod@dividend+1,w
 10851  090D  1D03               	skipz
 10852  090E  2911               	goto	u210_25
 10853  090F  0870               	movf	i1___lwmod@divisor,w
 10854  0910  0272               	subwf	i1___lwmod@dividend,w
 10855  0911                     u210_25:	
 10856  0911  1C03               	skipc
 10857  0912  2917               	goto	i1l2390
 10858  0913  0870               	movf	i1___lwmod@divisor,w
 10859  0914  02F2               	subwf	i1___lwmod@dividend,f
 10860  0915  0871               	movf	i1___lwmod@divisor+1,w
 10861  0916  3BF3               	subwfb	i1___lwmod@dividend+1,f
 10862  0917                     i1l2390:	
 10863  0917  3001               	movlw	1
 10864  0918                     u211_25:	
 10865  0918  36F1               	lsrf	i1___lwmod@divisor+1,f
 10866  0919  0CF0               	rrf	i1___lwmod@divisor,f
 10867  091A  0B89               	decfsz	9,f
 10868  091B  2918               	goto	u211_25
 10869  091C  3001               	movlw	1
 10870  091D  02F5               	subwf	i1___lwmod@counter,f
 10871  091E  1D03               	btfss	3,2
 10872  091F  290B               	goto	i1l2386
 10873  0920                     i1l2394:	
 10874  0920  0873               	movf	i1___lwmod@dividend+1,w
 10875  0921  00F1               	movwf	?i1___lwmod+1
 10876  0922  0872               	movf	i1___lwmod@dividend,w
 10877  0923  00F0               	movwf	?i1___lwmod
 10878  0924  0008               	return
 10879  0925                     __end_ofi1___lwmod:	
 10880                           
 10881                           	psect	text48
 10882  09B2                     __ptext48:	
 10883 ;; *************** function i1___lwdiv *****************
 10884 ;; Defined at:
 10885 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
 10886 ;; Parameters:    Size  Location     Type
 10887 ;;  divisor         2    0[COMMON] unsigned int 
 10888 ;;  dividend        2    2[COMMON] unsigned int 
 10889 ;; Auto vars:     Size  Location     Type
 10890 ;;  __lwdiv         2    5[COMMON] unsigned int 
 10891 ;;  __lwdiv         1    7[COMMON] unsigned char 
 10892 ;; Return value:  Size  Location     Type
 10893 ;;                  2    0[COMMON] unsigned int 
 10894 ;; Registers used:
 10895 ;;		wreg, status,2, status,0
 10896 ;; Tracked objects:
 10897 ;;		On entry : 0/0
 10898 ;;		On exit  : 0/0
 10899 ;;		Unchanged: 0/0
 10900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10901 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10902 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10903 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10904 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10905 ;;Total ram usage:        8 bytes
 10906 ;; Hardware stack levels used:    1
 10907 ;; This function calls:
 10908 ;;		Nothing
 10909 ;; This function is called by:
 10910 ;;		i1_utoa
 10911 ;; This function uses a non-reentrant model
 10912 ;;
 10913                           
 10914                           
 10915                           ;psect for function i1___lwdiv
 10916  09B2                     i1___lwdiv:	
 10917                           
 10918                           ;incstack = 0
 10919                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
 10920  09B2  01F5               	clrf	i1___lwdiv@quotient
 10921  09B3  01F6               	clrf	i1___lwdiv@quotient+1
 10922  09B4  0870               	movf	i1___lwdiv@divisor,w
 10923  09B5  0471               	iorwf	i1___lwdiv@divisor+1,w
 10924  09B6  1903               	btfsc	3,2
 10925  09B7  29E1               	goto	i1l2372
 10926  09B8  01F7               	clrf	i1___lwdiv@counter
 10927  09B9  0AF7               	incf	i1___lwdiv@counter,f
 10928  09BA                     i1l2360:	
 10929  09BA  1BF1               	btfsc	i1___lwdiv@divisor+1,7
 10930  09BB  29C6               	goto	i1l2362
 10931  09BC  3001               	movlw	1
 10932  09BD                     u201_25:	
 10933  09BD  35F0               	lslf	i1___lwdiv@divisor,f
 10934  09BE  0DF1               	rlf	i1___lwdiv@divisor+1,f
 10935  09BF  0B89               	decfsz	9,f
 10936  09C0  29BD               	goto	u201_25
 10937  09C1  3001               	movlw	1
 10938  09C2  00F4               	movwf	??i1___lwdiv
 10939  09C3  0874               	movf	??i1___lwdiv,w
 10940  09C4  07F7               	addwf	i1___lwdiv@counter,f
 10941  09C5  29BA               	goto	i1l2360
 10942  09C6                     i1l2362:	
 10943  09C6  3001               	movlw	1
 10944  09C7                     u203_25:	
 10945  09C7  35F5               	lslf	i1___lwdiv@quotient,f
 10946  09C8  0DF6               	rlf	i1___lwdiv@quotient+1,f
 10947  09C9  0B89               	decfsz	9,f
 10948  09CA  29C7               	goto	u203_25
 10949  09CB  0871               	movf	i1___lwdiv@divisor+1,w
 10950  09CC  0273               	subwf	i1___lwdiv@dividend+1,w
 10951  09CD  1D03               	skipz
 10952  09CE  29D1               	goto	u204_25
 10953  09CF  0870               	movf	i1___lwdiv@divisor,w
 10954  09D0  0272               	subwf	i1___lwdiv@dividend,w
 10955  09D1                     u204_25:	
 10956  09D1  1C03               	skipc
 10957  09D2  29D8               	goto	i1l2368
 10958  09D3  0870               	movf	i1___lwdiv@divisor,w
 10959  09D4  02F2               	subwf	i1___lwdiv@dividend,f
 10960  09D5  0871               	movf	i1___lwdiv@divisor+1,w
 10961  09D6  3BF3               	subwfb	i1___lwdiv@dividend+1,f
 10962  09D7  1475               	bsf	i1___lwdiv@quotient,0
 10963  09D8                     i1l2368:	
 10964  09D8  3001               	movlw	1
 10965  09D9                     u205_25:	
 10966  09D9  36F1               	lsrf	i1___lwdiv@divisor+1,f
 10967  09DA  0CF0               	rrf	i1___lwdiv@divisor,f
 10968  09DB  0B89               	decfsz	9,f
 10969  09DC  29D9               	goto	u205_25
 10970  09DD  3001               	movlw	1
 10971  09DE  02F7               	subwf	i1___lwdiv@counter,f
 10972  09DF  1D03               	btfss	3,2
 10973  09E0  29C6               	goto	i1l2362
 10974  09E1                     i1l2372:	
 10975  09E1  0876               	movf	i1___lwdiv@quotient+1,w
 10976  09E2  00F1               	movwf	?i1___lwdiv+1
 10977  09E3  0875               	movf	i1___lwdiv@quotient,w
 10978  09E4  00F0               	movwf	?i1___lwdiv
 10979  09E5  0008               	return
 10980  09E6                     __end_ofi1___lwdiv:	
 10981                           
 10982                           	psect	text49
 10983  1644                     __ptext49:	
 10984 ;; *************** function i1_DS1302_WriteByte *****************
 10985 ;; Defined at:
 10986 ;;		line 43 in file "ds1302.c"
 10987 ;; Parameters:    Size  Location     Type
 10988 ;;  W_Byte          1    wreg     unsigned char 
 10989 ;; Auto vars:     Size  Location     Type
 10990 ;;  W_Byte          1    1[COMMON] unsigned char 
 10991 ;;  DS1302_Write    1    2[COMMON] unsigned char 
 10992 ;; Return value:  Size  Location     Type
 10993 ;;                  1    wreg      void 
 10994 ;; Registers used:
 10995 ;;		wreg, status,2, status,0
 10996 ;; Tracked objects:
 10997 ;;		On entry : 0/0
 10998 ;;		On exit  : 0/0
 10999 ;;		Unchanged: 0/0
 11000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11002 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11003 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11004 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11005 ;;Total ram usage:        3 bytes
 11006 ;; Hardware stack levels used:    1
 11007 ;; This function calls:
 11008 ;;		Nothing
 11009 ;; This function is called by:
 11010 ;;		_isr
 11011 ;; This function uses a non-reentrant model
 11012 ;;
 11013                           
 11014                           
 11015                           ;psect for function i1_DS1302_WriteByte
 11016  1644                     i1_DS1302_WriteByte:	
 11017                           
 11018                           ;incstack = 0
 11019                           ; Regs used in i1_DS1302_WriteByte: [wreg+status,2+status,0]
 11020                           ;i1DS1302_WriteByte@W_Byte stored from wreg
 11021  1644  00F1               	movwf	i1DS1302_WriteByte@W_Byte
 11022                           
 11023                           ;ds1302.c: 45: unsigned char i;
 11024                           ;ds1302.c: 47: for(i = 0; i < 8; ++i)
 11025  1645  01F2               	clrf	i1DS1302_WriteByte@i
 11026  1646                     L5:	
 11027  1646  3008               	movlw	8
 11028  1647  0272               	subwf	i1DS1302_WriteByte@i,w
 11029  1648  1803               	btfsc	3,0
 11030  1649  0008               	return
 11031                           
 11032                           ;ds1302.c: 48: {
 11033                           ;ds1302.c: 49: RD2 = 0;
 11034  164A  0020               	movlb	0	; select bank0
 11035  164B  110F               	bcf	15,2	;volatile
 11036                           
 11037                           ;ds1302.c: 51: if(W_Byte & 0x01)
 11038  164C  1871               	btfsc	i1DS1302_WriteByte@W_Byte,0
 11039                           
 11040                           ;ds1302.c: 52: {
 11041                           ;ds1302.c: 53: RD2 = 1;
 11042  164D  150F               	bsf	15,2	;volatile
 11043                           
 11044                           ;ds1302.c: 54: }
 11045                           ;ds1302.c: 56: RD1 = 0;
 11046  164E  108F               	bcf	15,1	;volatile
 11047                           
 11048                           ;ds1302.c: 57: RD1 = 1;
 11049  164F  148F               	bsf	15,1	;volatile
 11050                           
 11051                           ;ds1302.c: 58: W_Byte >>= 1;
 11052  1650  1003               	clrc
 11053  1651  0CF1               	rrf	i1DS1302_WriteByte@W_Byte,f
 11054  1652  3001               	movlw	1
 11055  1653  00F0               	movwf	??i1_DS1302_WriteByte
 11056  1654  0870               	movf	??i1_DS1302_WriteByte,w
 11057  1655  07F2               	addwf	i1DS1302_WriteByte@i,f
 11058  1656  2E46               	goto	L5
 11059  1657                     __end_ofi1_DS1302_WriteByte:	
 11060                           
 11061                           	psect	text50
 11062  15D0                     __ptext50:	
 11063 ;; *************** function i1_DS1302_Reset *****************
 11064 ;; Defined at:
 11065 ;;		line 26 in file "ds1302.c"
 11066 ;; Parameters:    Size  Location     Type
 11067 ;;		None
 11068 ;; Auto vars:     Size  Location     Type
 11069 ;;		None
 11070 ;; Return value:  Size  Location     Type
 11071 ;;                  1    wreg      void 
 11072 ;; Registers used:
 11073 ;;		None
 11074 ;; Tracked objects:
 11075 ;;		On entry : 0/0
 11076 ;;		On exit  : 0/0
 11077 ;;		Unchanged: 0/0
 11078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11083 ;;Total ram usage:        0 bytes
 11084 ;; Hardware stack levels used:    1
 11085 ;; This function calls:
 11086 ;;		Nothing
 11087 ;; This function is called by:
 11088 ;;		_isr
 11089 ;; This function uses a non-reentrant model
 11090 ;;
 11091                           
 11092                           
 11093                           ;psect for function i1_DS1302_Reset
 11094  15D0                     i1_DS1302_Reset:	
 11095                           
 11096                           ;ds1302.c: 28: RD1 = 0;
 11097                           
 11098                           ;incstack = 0
 11099                           ; Regs used in i1_DS1302_Reset: []
 11100  15D0  0020               	movlb	0	; select bank0
 11101  15D1  108F               	bcf	15,1	;volatile
 11102                           
 11103                           ;ds1302.c: 29: RD0 = 0;
 11104  15D2  100F               	bcf	15,0	;volatile
 11105                           
 11106                           ;ds1302.c: 30: RD0 = 1;
 11107  15D3  140F               	bsf	15,0	;volatile
 11108  15D4  0008               	return
 11109  15D5                     __end_ofi1_DS1302_Reset:	
 11110                           
 11111                           	psect	text51
 11112  1697                     __ptext51:	
 11113 ;; *************** function _get_dec *****************
 11114 ;; Defined at:
 11115 ;;		line 159 in file "ds1302.c"
 11116 ;; Parameters:    Size  Location     Type
 11117 ;;  var             1    wreg     unsigned char 
 11118 ;; Auto vars:     Size  Location     Type
 11119 ;;  var             1    8[COMMON] unsigned char 
 11120 ;;  var2            1    7[COMMON] unsigned char 
 11121 ;; Return value:  Size  Location     Type
 11122 ;;                  1    wreg      unsigned char 
 11123 ;; Registers used:
 11124 ;;		wreg, status,2, status,0, pclath, cstack
 11125 ;; Tracked objects:
 11126 ;;		On entry : 0/0
 11127 ;;		On exit  : 0/0
 11128 ;;		Unchanged: 0/0
 11129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11131 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11132 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11133 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11134 ;;Total ram usage:        5 bytes
 11135 ;; Hardware stack levels used:    1
 11136 ;; Hardware stack levels required when called:    1
 11137 ;; This function calls:
 11138 ;;		i1___bmul
 11139 ;; This function is called by:
 11140 ;;		_isr
 11141 ;; This function uses a non-reentrant model
 11142 ;;
 11143                           
 11144                           
 11145                           ;psect for function _get_dec
 11146  1697                     _get_dec:	
 11147                           
 11148                           ;incstack = 0
 11149                           ; Regs used in _get_dec: [wreg+status,2+status,0+pclath+cstack]
 11150                           ;get_dec@var stored from wreg
 11151  1697  00F8               	movwf	get_dec@var
 11152                           
 11153                           ;ds1302.c: 161: unsigned char var2;
 11154                           ;ds1302.c: 163: var2 = (var >> 4) * 10;
 11155  1698  300A               	movlw	10
 11156  1699  00F4               	movwf	??_get_dec
 11157  169A  0874               	movf	??_get_dec,w
 11158  169B  00F0               	movwf	i1___bmul@multiplicand
 11159  169C  0878               	movf	get_dec@var,w
 11160  169D  00F5               	movwf	??_get_dec+1
 11161  169E  3004               	movlw	4
 11162  169F                     u247_25:	
 11163  169F  36F5               	lsrf	??_get_dec+1,f
 11164  16A0  0B89               	decfsz	9,f
 11165  16A1  2E9F               	goto	u247_25
 11166  16A2  0875               	movf	??_get_dec+1,w
 11167  16A3  3196  260F         	fcall	i1___bmul
 11168  16A5  00F6               	movwf	??_get_dec+2
 11169  16A6  0876               	movf	??_get_dec+2,w
 11170  16A7  00F7               	movwf	get_dec@var2
 11171                           
 11172                           ;ds1302.c: 164: var2 += (var & 15);
 11173  16A8  0878               	movf	get_dec@var,w
 11174  16A9  390F               	andlw	15
 11175  16AA  00F4               	movwf	??_get_dec
 11176  16AB  0874               	movf	??_get_dec,w
 11177  16AC  07F7               	addwf	get_dec@var2,f
 11178                           
 11179                           ;ds1302.c: 166: return var2;
 11180  16AD  0877               	movf	get_dec@var2,w
 11181  16AE  0008               	return
 11182  16AF                     __end_of_get_dec:	
 11183                           
 11184                           	psect	text52
 11185  160F                     __ptext52:	
 11186 ;; *************** function i1___bmul *****************
 11187 ;; Defined at:
 11188 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul8.c"
 11189 ;; Parameters:    Size  Location     Type
 11190 ;;  multiplier      1    wreg     unsigned char 
 11191 ;;  multiplicand    1    0[COMMON] unsigned char 
 11192 ;; Auto vars:     Size  Location     Type
 11193 ;;  multiplier      1    3[COMMON] unsigned char 
 11194 ;;  __bmul          1    2[COMMON] unsigned char 
 11195 ;; Return value:  Size  Location     Type
 11196 ;;                  1    wreg      unsigned char 
 11197 ;; Registers used:
 11198 ;;		wreg, status,2, status,0
 11199 ;; Tracked objects:
 11200 ;;		On entry : 0/0
 11201 ;;		On exit  : 0/0
 11202 ;;		Unchanged: 0/0
 11203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11204 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11205 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11206 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11207 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11208 ;;Total ram usage:        4 bytes
 11209 ;; Hardware stack levels used:    1
 11210 ;; This function calls:
 11211 ;;		Nothing
 11212 ;; This function is called by:
 11213 ;;		_get_dec
 11214 ;; This function uses a non-reentrant model
 11215 ;;
 11216                           
 11217                           
 11218                           ;psect for function i1___bmul
 11219  160F                     i1___bmul:	
 11220                           
 11221                           ;incstack = 0
 11222                           ; Regs used in i1___bmul: [wreg+status,2+status,0]
 11223                           ;i1___bmul@multiplier stored from wreg
 11224  160F  00F3               	movwf	i1___bmul@multiplier
 11225  1610  01F2               	clrf	i1___bmul@product
 11226  1611                     i1l2572:	
 11227  1611  1C73               	btfss	i1___bmul@multiplier,0
 11228  1612  2E17               	goto	i1l2576
 11229  1613  0870               	movf	i1___bmul@multiplicand,w
 11230  1614  00F1               	movwf	??i1___bmul
 11231  1615  0871               	movf	??i1___bmul,w
 11232  1616  07F2               	addwf	i1___bmul@product,f
 11233  1617                     i1l2576:	
 11234  1617  1003               	clrc
 11235  1618  0DF0               	rlf	i1___bmul@multiplicand,f
 11236  1619  1003               	clrc
 11237  161A  0CF3               	rrf	i1___bmul@multiplier,f
 11238  161B  0873               	movf	i1___bmul@multiplier,w
 11239  161C  1D03               	btfss	3,2
 11240  161D  2E11               	goto	i1l2572
 11241  161E  0872               	movf	i1___bmul@product,w
 11242  161F  0008               	return
 11243  1620                     __end_ofi1___bmul:	
 11244                           
 11245                           	psect	text53
 11246  17B6                     __ptext53:	
 11247 ;; *************** function _DS1302_ReadByte *****************
 11248 ;; Defined at:
 11249 ;;		line 71 in file "ds1302.c"
 11250 ;; Parameters:    Size  Location     Type
 11251 ;;		None
 11252 ;; Auto vars:     Size  Location     Type
 11253 ;;  i               1    3[COMMON] unsigned char 
 11254 ;;  R_Byte          1    2[COMMON] unsigned char 
 11255 ;;  TmpByte         1    1[COMMON] unsigned char 
 11256 ;; Return value:  Size  Location     Type
 11257 ;;                  1    wreg      unsigned char 
 11258 ;; Registers used:
 11259 ;;		wreg, status,2, status,0
 11260 ;; Tracked objects:
 11261 ;;		On entry : 0/0
 11262 ;;		On exit  : 0/0
 11263 ;;		Unchanged: 0/0
 11264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11266 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11267 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11268 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11269 ;;Total ram usage:        4 bytes
 11270 ;; Hardware stack levels used:    1
 11271 ;; This function calls:
 11272 ;;		Nothing
 11273 ;; This function is called by:
 11274 ;;		_isr
 11275 ;; This function uses a non-reentrant model
 11276 ;;
 11277                           
 11278                           
 11279                           ;psect for function _DS1302_ReadByte
 11280  17B6                     _DS1302_ReadByte:	
 11281                           
 11282                           ;ds1302.c: 73: unsigned char i;
 11283                           ;ds1302.c: 74: unsigned char R_Byte;
 11284                           ;ds1302.c: 75: unsigned char TmpByte;
 11285                           ;ds1302.c: 77: R_Byte = 0x00;
 11286                           
 11287                           ;incstack = 0
 11288                           ; Regs used in _DS1302_ReadByte: [wreg+status,2+status,0]
 11289  17B6  01F2               	clrf	DS1302_ReadByte@R_Byte
 11290                           
 11291                           ;ds1302.c: 79: TRISD2 = 1;
 11292  17B7  0021               	movlb	1	; select bank1
 11293  17B8  150F               	bsf	15,2	;volatile
 11294                           
 11295                           ;ds1302.c: 80: RD2 = 1;
 11296  17B9  0020               	movlb	0	; select bank0
 11297  17BA  150F               	bsf	15,2	;volatile
 11298                           
 11299                           ;ds1302.c: 82: for(i=0; i<8; ++i)
 11300  17BB  01F3               	clrf	DS1302_ReadByte@i
 11301  17BC  3008               	movlw	8
 11302  17BD  0273               	subwf	DS1302_ReadByte@i,w
 11303  17BE  1803               	btfsc	3,0
 11304  17BF  2FD7               	goto	i1l278
 11305  17C0                     i1l277:	
 11306                           
 11307                           ;ds1302.c: 83: {
 11308                           ;ds1302.c: 84: RD1 = 1;
 11309  17C0  148F               	bsf	15,1	;volatile
 11310                           
 11311                           ;ds1302.c: 85: RD1 = 0;
 11312  17C1  108F               	bcf	15,1	;volatile
 11313                           
 11314                           ;ds1302.c: 86: TmpByte = (unsigned char)RD2;
 11315  17C2  3000               	movlw	0
 11316  17C3  190F               	btfsc	15,2	;volatile
 11317  17C4  3001               	movlw	1
 11318  17C5  00F1               	movwf	DS1302_ReadByte@TmpByte
 11319                           
 11320                           ;ds1302.c: 87: TmpByte <<= 7;
 11321  17C6  0CF1               	rrf	DS1302_ReadByte@TmpByte,f
 11322  17C7  01F1               	clrf	DS1302_ReadByte@TmpByte
 11323  17C8  0CF1               	rrf	DS1302_ReadByte@TmpByte,f
 11324                           
 11325                           ;ds1302.c: 88: R_Byte >>= 1;
 11326  17C9  1003               	clrc
 11327  17CA  0CF2               	rrf	DS1302_ReadByte@R_Byte,f
 11328                           
 11329                           ;ds1302.c: 89: R_Byte |= TmpByte;
 11330  17CB  0871               	movf	DS1302_ReadByte@TmpByte,w
 11331  17CC  00F0               	movwf	??_DS1302_ReadByte
 11332  17CD  0870               	movf	??_DS1302_ReadByte,w
 11333  17CE  04F2               	iorwf	DS1302_ReadByte@R_Byte,f
 11334  17CF  3001               	movlw	1
 11335  17D0  00F0               	movwf	??_DS1302_ReadByte
 11336  17D1  0870               	movf	??_DS1302_ReadByte,w
 11337  17D2  07F3               	addwf	DS1302_ReadByte@i,f
 11338  17D3  3008               	movlw	8
 11339  17D4  0273               	subwf	DS1302_ReadByte@i,w
 11340  17D5  1C03               	skipc
 11341  17D6  2FC0               	goto	i1l277
 11342  17D7                     i1l278:	
 11343                           
 11344                           ;ds1302.c: 90: }
 11345                           ;ds1302.c: 91: TRISD2 = 0;
 11346  17D7  0021               	movlb	1	; select bank1
 11347  17D8  110F               	bcf	15,2	;volatile
 11348                           
 11349                           ;ds1302.c: 92: return R_Byte;
 11350  17D9  0872               	movf	DS1302_ReadByte@R_Byte,w
 11351  17DA  0008               	return
 11352  17DB                     __end_of_DS1302_ReadByte:	
 11353  007E                     btemp	set	126	;btemp
 11354  007E                     int$flags	set	126
 11355  007E                     wtemp0	set	126


Data Sizes:
    Strings     153
    Constant    871
    Data        29
    BSS         227
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     49      65
    BANK1            80     17      76
    BANK2            80      0      78
    BANK3            80     18      71
    BANK4            80      0      50
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_29(CODE[5]), STR_18(CODE[4]), STR_17(CODE[6]), STR_16(CODE[5]), 
		 -> STR_15(CODE[5]), STR_14(CODE[5]), 

    strncmp@s1	PTR const unsigned char  size(1) Largest target is 50
		 -> NULL(NULL[0]), buf(BANK4[50]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_29(CODE[5]), STR_18(CODE[4]), STR_17(CODE[6]), STR_16(CODE[5]), 
		 -> STR_15(CODE[5]), STR_14(CODE[5]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_29(CODE[5]), STR_18(CODE[4]), STR_17(CODE[6]), STR_16(CODE[5]), 
		 -> STR_15(CODE[5]), STR_14(CODE[5]), 

    strchr@ptr	PTR const unsigned char  size(1) Largest target is 50
		 -> NULL(NULL[0]), buf(BANK4[50]), 

    sp__strchr	PTR unsigned char  size(1) Largest target is 50
		 -> NULL(NULL[0]), buf(BANK4[50]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_29(CODE[5]), STR_18(CODE[4]), STR_17(CODE[6]), STR_16(CODE[5]), 
		 -> STR_15(CODE[5]), STR_14(CODE[5]), 

    strstr@s1	PTR const unsigned char  size(1) Largest target is 50
		 -> NULL(NULL[0]), buf(BANK4[50]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_38(CODE[2]), STR_36(CODE[2]), STR_34(CODE[2]), STR_26(CODE[2]), 
		 -> STR_24(CODE[2]), STR_22(CODE[2]), STR_19(CODE[2]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 10
		 -> time_string(BANK1[10]), mth_string(BANK2[10]), date_string(BANK1[10]), month_string(BANK2[10]), 
		 -> date1_string(BANK2[10]), hour_string(BANK1[10]), min_string(BANK1[10]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 10
		 -> time_string(BANK1[10]), mth_string(BANK2[10]), date_string(BANK1[10]), month_string(BANK2[10]), 
		 -> date1_string(BANK2[10]), hour_string(BANK1[10]), min_string(BANK1[10]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_41(CODE[2]), STR_40(CODE[2]), STR_39(CODE[2]), STR_37(CODE[2]), 
		 -> STR_35(CODE[2]), dt_arr(BANK1[5]), hr_arr(BANK2[8]), min_arr(BANK1[8]), 
		 -> STR_27(CODE[2]), month_arr(BANK2[10]), STR_25(CODE[2]), date_arr(BANK2[10]), 
		 -> STR_23(CODE[2]), hour_arr(BANK2[10]), STR_21(CODE[2]), STR_20(CODE[2]), 
		 -> minute_arr(BANK2[10]), STR_13(CODE[4]), STR_12(CODE[4]), STR_11(CODE[4]), 
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
		 -> STR_6(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> STR_2(CODE[4]), STR_1(CODE[4]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 10
		 -> time_string(BANK1[10]), mth_string(BANK2[10]), date_string(BANK1[10]), month_string(BANK2[10]), 
		 -> date1_string(BANK2[10]), hour_string(BANK1[10]), min_string(BANK1[10]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 10
		 -> time_string(BANK1[10]), mth_string(BANK2[10]), date_string(BANK1[10]), month_string(BANK2[10]), 
		 -> date1_string(BANK2[10]), hour_string(BANK1[10]), min_string(BANK1[10]), 

    memmove@d1	PTR void  size(1) Largest target is 9
		 -> OLED_PutChar@bytes(BANK0[9]), 

    memmove@d	PTR unsigned char  size(1) Largest target is 9
		 -> OLED_PutChar@bytes(BANK0[9]), 

    memmove@s1	PTR const void  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    memmove@s	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 20
		 -> OLED_Write_Integer@s(BANK0[20]), dt_arr(BANK1[5]), hr_arr(BANK2[8]), min_arr(BANK1[8]), 
		 -> month_arr(BANK2[10]), date_arr(BANK2[10]), hour_arr(BANK2[10]), minute_arr(BANK2[10]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 20
		 -> OLED_Write_Integer@s(BANK0[20]), dt_arr(BANK1[5]), hr_arr(BANK2[8]), min_arr(BANK1[8]), 
		 -> month_arr(BANK2[10]), date_arr(BANK2[10]), hour_arr(BANK2[10]), minute_arr(BANK2[10]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 20
		 -> OLED_Write_Integer@s(BANK0[20]), dt_arr(BANK1[5]), hr_arr(BANK2[8]), min_arr(BANK1[8]), 
		 -> month_arr(BANK2[10]), date_arr(BANK2[10]), hour_arr(BANK2[10]), minute_arr(BANK2[10]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 20
		 -> OLED_Write_Integer@s(BANK0[20]), dt_arr(BANK1[5]), hr_arr(BANK2[8]), min_arr(BANK1[8]), 
		 -> month_arr(BANK2[10]), date_arr(BANK2[10]), hour_arr(BANK2[10]), minute_arr(BANK2[10]), 

    touchscreen_data@string2	PTR unsigned char  size(2) Largest target is 10
		 -> time_string(BANK1[10]), mth_string(BANK2[10]), date_string(BANK1[10]), month_string(BANK2[10]), 
		 -> date1_string(BANK2[10]), hour_string(BANK1[10]), min_string(BANK1[10]), 

    touchscreen_data@cmd	PTR unsigned char  size(2) Largest target is 11
		 -> screen_date(CODE[10]), screen_mth(CODE[11]), screen_time(CODE[10]), screen_month(CODE[8]), 
		 -> screen_date1(CODE[8]), screen_hour(CODE[8]), screen_mins(CODE[8]), 

    touchscreen_command@string	PTR unsigned char  size(2) Largest target is 13
		 -> STR_33(CODE[8]), STR_32(CODE[13]), STR_31(CODE[7]), STR_30(CODE[12]), 
		 -> STR_28(CODE[7]), 

    EUSART_Write_Text@text	PTR unsigned char  size(2) Largest target is 13
		 -> screen_date(CODE[10]), screen_mth(CODE[11]), screen_time(CODE[10]), time_string(BANK1[10]), 
		 -> mth_string(BANK2[10]), date_string(BANK1[10]), STR_33(CODE[8]), STR_32(CODE[13]), 
		 -> STR_31(CODE[7]), STR_30(CODE[12]), STR_28(CODE[7]), screen_month(CODE[8]), 
		 -> month_string(BANK2[10]), screen_date1(CODE[8]), date1_string(BANK2[10]), screen_hour(CODE[8]), 
		 -> hour_string(BANK1[10]), screen_mins(CODE[8]), min_string(BANK1[10]), 

    EUSART_Read_Text@Output	PTR unsigned char  size(1) Largest target is 50
		 -> buf(BANK4[50]), 

    sp__ftoa	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK3[17]), 

    OLED_Write_String@s	PTR unsigned char  size(2) Largest target is 20
		 -> ftoa@buf(BANK3[17]), STR_44(CODE[5]), STR_43(CODE[6]), STR_42(CODE[6]), 
		 -> OLED_Write_Integer@s(BANK0[20]), 

    sp__memmove	PTR void  size(1) Largest target is 9
		 -> OLED_PutChar@bytes(BANK0[9]), 

    OLED_PutChar@base	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    green@buf	PTR unsigned char  size(1) Largest target is 50
		 -> buf(BANK4[50]), 

    green@green1	PTR unsigned char  size(1) Largest target is 50
		 -> NULL(NULL[0]), buf(BANK4[50]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 10
		 -> time_string(BANK1[10]), mth_string(BANK2[10]), date_string(BANK1[10]), month_string(BANK2[10]), 
		 -> date1_string(BANK2[10]), hour_string(BANK1[10]), min_string(BANK1[10]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 10
		 -> time_string(BANK1[10]), mth_string(BANK2[10]), date_string(BANK1[10]), month_string(BANK2[10]), 
		 -> date1_string(BANK2[10]), hour_string(BANK1[10]), min_string(BANK1[10]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 20
		 -> OLED_Write_Integer@s(BANK0[20]), dt_arr(BANK1[5]), hr_arr(BANK2[8]), min_arr(BANK1[8]), 
		 -> month_arr(BANK2[10]), date_arr(BANK2[10]), hour_arr(BANK2[10]), minute_arr(BANK2[10]), 

    main@set1	PTR unsigned char  size(1) Largest target is 50
		 -> NULL(NULL[0]), buf(BANK4[50]), 

    main@month1	PTR unsigned char  size(1) Largest target is 50
		 -> NULL(NULL[0]), buf(BANK4[50]), 

    main@date3	PTR unsigned char  size(1) Largest target is 50
		 -> NULL(NULL[0]), buf(BANK4[50]), 

    main@min1	PTR unsigned char  size(1) Largest target is 50
		 -> NULL(NULL[0]), buf(BANK4[50]), 

    sp__strstr	PTR unsigned char  size(1) Largest target is 50
		 -> NULL(NULL[0]), buf(BANK4[50]), 

    main@hour1	PTR unsigned char  size(1) Largest target is 50
		 -> NULL(NULL[0]), buf(BANK4[50]), 

    months	PTR const unsigned char [13] size(2) Largest target is 4
		 -> STR_13(CODE[4]), STR_12(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), 
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[4]), 
		 -> STR_5(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    i1_touchscreen_data->i1_EUSART_Write_Text
    i1_EUSART_Write_Text->i1_EUSART_Write
    i1_itoa->i1_utoa
    i1_utoa->i1___lwdiv
    _get_dec->i1___bmul

Critical Paths under _main in BANK0

    _touchscreen_data->_EUSART_Write_Text
    _itoa->_utoa
    _utoa->___lwdiv
    _initMain->_OLED_Write_String
    _OLED_Write_String->_OLED_PutChar
    _OLED_Init->_OLED_Command
    _OLED_Clear->_OLED_PutChar
    _OLED_YX->_OLED_Command
    _OLED_Command->_Send_I2C_Data
    _OLED_PutChar->_memmove
    _EUSART_Initialize->___aldiv
    _DS1302_Initialize->_get_bcd
    _get_bcd->___awdiv
    _green->_strstr
    _touchscreen_command->_EUSART_Write_Text
    _EUSART_Write_Text->_EUSART_Write
    _strstr->_strncmp
    _strncmp->_strlen

Critical Paths under _isr in BANK0

    _isr->i1_itoa
    i1_itoa->i1_utoa

Critical Paths under _main in BANK1

    _main->_initMain
    _initMain->_OLED_Clear

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0   23771
                                              0 BANK3     18    18      0
                  _DS1302_Initialize
                   _EUSART_Read_Text
                              _green
                           _initMain
                               _itoa
                             _strcat
                             _strcpy
                             _strstr
                _touchscreen_command
                   _touchscreen_data
 ---------------------------------------------------------------------------------
 (1) _touchscreen_data                                     6     2      4    1149
                                             21 BANK0      6     2      4
                       _EUSART_Write
                  _EUSART_Write_Text
 ---------------------------------------------------------------------------------
 (1) _strcpy                                               6     2      4     685
                                             15 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _strcat                                               6     2      4    1733
                                             15 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _itoa                                                 8     2      6    2790
                                             33 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (2) _utoa                                                10     4      6    1467
                                             23 BANK0     10     4      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     362
                                             15 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     501
                                             15 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _initMain                                            13    13      0    9722
                                              4 BANK1     13    13      0
                  _DS1302_Initialize
                  _EUSART_Initialize
                           _I2C_Init
                         _OLED_Clear
                          _OLED_Init
                  _OLED_Write_String
                            _OLED_YX
                        _internal_16
 ---------------------------------------------------------------------------------
 (2) _internal_16                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OLED_Write_String                                    3     1      2    1996
                                             47 BANK0      2     0      2
                                              0 BANK1      1     1      0
                       _OLED_PutChar
 ---------------------------------------------------------------------------------
 (2) _OLED_Init                                            0     0      0     647
                       _OLED_Command
 ---------------------------------------------------------------------------------
 (2) _OLED_Clear                                           5     5      0    2674
                                             47 BANK0      1     1      0
                                              0 BANK1      4     4      0
                       _OLED_PutChar
                            _OLED_YX
 ---------------------------------------------------------------------------------
 (2) _OLED_YX                                              5     4      1     870
                                             20 BANK0      5     4      1
                       _OLED_Command
 ---------------------------------------------------------------------------------
 (3) _OLED_Command                                         3     3      0     647
                                             17 BANK0      3     3      0
                      _Send_I2C_Data
                  _Send_I2C_StartBit
                   _Send_I2C_StopBit
 ---------------------------------------------------------------------------------
 (3) _OLED_PutChar                                        20    20      0    1606
                                             27 BANK0     20    20      0
                      _Send_I2C_Data
                  _Send_I2C_StartBit
                   _Send_I2C_StopBit
                            _memmove
 ---------------------------------------------------------------------------------
 (4) _memmove                                             12     8      4     681
                                             15 BANK0     12     8      4
 ---------------------------------------------------------------------------------
 (4) _Send_I2C_StopBit                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Send_I2C_StartBit                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Send_I2C_Data                                        2     0      2     616
                                             15 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             1     1      0       0
                                             15 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                   14    10      4     993
                                             30 BANK0     14    10      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             15     7      8     705
                                             15 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (2) _DS1302_Initialize                                   15     9      6    2304
                                             30 BANK0     15     9      6
                       _DS1302_Reset
                   _DS1302_WriteByte
                            _get_bcd
 ---------------------------------------------------------------------------------
 (3) _get_bcd                                              6     6      0     967
                                             24 BANK0      6     6      0
                            ___awdiv
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               4     3      1     231
                                             15 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     575
                                             15 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (3) _DS1302_WriteByte                                     3     3      0     102
                                             15 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _DS1302_Reset                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _green                                                4     4      0    2425
                                             34 BANK0      4     4      0
                             _strstr
                _touchscreen_command
 ---------------------------------------------------------------------------------
 (1) _touchscreen_command                                  4     2      2     743
                                             21 BANK0      4     2      2
                       _EUSART_Write
                  _EUSART_Write_Text
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write_Text                                    5     3      2     356
                                             16 BANK0      5     3      2
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         1     1      0      31
                                             15 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _strstr                                               6     4      2    1587
                                             28 BANK0      6     4      2
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (2) _strncmp                                              7     3      4     352
                                             21 BANK0      7     3      4
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     195
                                             15 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _strchr                                               3     1      2     219
                                             15 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read_Text                                     9     7      2     225
                                             15 BANK0      7     5      2
                        _EUSART_Read
 ---------------------------------------------------------------------------------
 (2) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  3     3      0    2706
                                             12 BANK0      3     3      0
                    _DS1302_ReadByte
                            _get_dec
                     i1_DS1302_Reset
                 i1_DS1302_WriteByte
                             i1_itoa
                           i1_strcat
                           i1_strcpy
                 i1_touchscreen_data
 ---------------------------------------------------------------------------------
 (7) i1_touchscreen_data                                   6     2      4     386
                                              6 COMMON     6     2      4
                     i1_EUSART_Write
                i1_EUSART_Write_Text
 ---------------------------------------------------------------------------------
 (8) i1_EUSART_Write_Text                                  5     3      2     164
                                              1 COMMON     5     3      2
                     i1_EUSART_Write
 ---------------------------------------------------------------------------------
 (9) i1_EUSART_Write                                       1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) i1_strcpy                                             6     2      4     156
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (7) i1_strcat                                             6     2      4     368
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (7) i1_itoa                                               8     2      6    1446
                                              4 BANK0      8     2      6
                             i1_utoa
 ---------------------------------------------------------------------------------
 (8) i1_utoa                                              10     4      6     991
                                              8 COMMON     6     0      6
                                              0 BANK0      4     4      0
                          i1___lwdiv
                          i1___lwmod
 ---------------------------------------------------------------------------------
 (9) i1___lwmod                                            6     2      4     211
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (9) i1___lwdiv                                            8     4      4     266
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (7) i1_DS1302_WriteByte                                   3     3      0      69
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (7) i1_DS1302_Reset                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _get_dec                                              5     5      0     186
                                              4 COMMON     5     5      0
                           i1___bmul
 ---------------------------------------------------------------------------------
 (8) i1___bmul                                             4     3      1     118
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (7) _DS1302_ReadByte                                      4     4      0      95
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DS1302_Initialize
     _DS1302_Reset
     _DS1302_WriteByte
     _get_bcd
       ___awdiv
       ___bmul
   _EUSART_Read_Text
     _EUSART_Read
   _green
     _strstr
       _strchr
       _strlen
       _strncmp
         _strlen (ARG)
     _touchscreen_command
       _EUSART_Write
       _EUSART_Write_Text
         _EUSART_Write
   _initMain
     _DS1302_Initialize
       _DS1302_Reset
       _DS1302_WriteByte
       _get_bcd
         ___awdiv
         ___bmul
     _EUSART_Initialize
       ___aldiv
     _I2C_Init
     _OLED_Clear
       _OLED_PutChar
         _Send_I2C_Data
         _Send_I2C_StartBit
         _Send_I2C_StopBit
         _memmove
       _OLED_YX
         _OLED_Command
           _Send_I2C_Data
           _Send_I2C_StartBit
           _Send_I2C_StopBit
     _OLED_Init
       _OLED_Command
         _Send_I2C_Data
         _Send_I2C_StartBit
         _Send_I2C_StopBit
     _OLED_Write_String
       _OLED_PutChar
         _Send_I2C_Data
         _Send_I2C_StartBit
         _Send_I2C_StopBit
         _memmove
     _OLED_YX
       _OLED_Command
         _Send_I2C_Data
         _Send_I2C_StartBit
         _Send_I2C_StopBit
     _internal_16
   _itoa
     _utoa
       ___lwdiv
       ___lwmod
   _strcat
   _strcpy
   _strstr
     _strchr
     _strlen
     _strncmp
       _strlen (ARG)
   _touchscreen_command
     _EUSART_Write
     _EUSART_Write_Text
       _EUSART_Write
   _touchscreen_data
     _EUSART_Write
     _EUSART_Write_Text
       _EUSART_Write

 _isr (ROOT)
   _DS1302_ReadByte
   _get_dec
     i1___bmul
   i1_DS1302_Reset
   i1_DS1302_WriteByte
   i1_itoa
     i1_utoa
       i1___lwdiv
       i1___lwmod
   i1_strcat
   i1_strcpy
   i1_touchscreen_data
     i1_EUSART_Write
     i1_EUSART_Write_Text
       i1_EUSART_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     31      41       5       81.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     11      4C       7       95.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      4E       9       97.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50     12      47      11       88.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      32      13       62.5%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     162      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     162      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Fri Apr 21 17:10:16 2017

            ??i1_EUSART_Write 0070                             _d 00E9                             _m 00EA  
                           _x 00EB                             _y 00A2                ___bmul@product 0031  
                 __CFG_CP$OFF 0000                            l53 160B                            l71 15FA  
                          l77 1602                  ___awdiv@sign 0035                            _on 0060  
          OLED_Write_String@s 004F                           l230 0788                           l224 06D5  
                         l380 15F0                           l373 07F2                           l569 0DFA  
                         l938 166C                           l794 0C06                           _GIE 005F  
                         _RD0 0078                           _RD1 0079                           _RD2 007A  
                _DS1302_Reset 15D5                           _dy1 005C                           _dy2 0055  
                         _hr1 005B                           _hr2 0054                           _hr3 0053  
                         _mn1 005E                           _mn2 0057                           _buf 0220  
                         _yr1 005F                           _yr2 0058                           _isr 0004  
                __CFG_BORV$LO 0000                           wreg 0009                  __CFG_IESO$ON 0000  
            OLED_Command@temp 0033                  ?_EUSART_Read 0070                  __CFG_LVP$OFF 0000  
                        l3114 0C4D                          l3220 0CFA                          l3134 1623  
                        l3118 0C67                          l3160 0AB3                          l3312 0A0D  
                        l3304 09EF                          l3402 0A39                          l3170 0ABB  
                        l3154 0AA8                          l3138 1629                          l3218 0CF6  
                        l3306 09FB                          l3330 0938                          l3404 0A4D  
                        l3252 171B                          l3172 0AC7                          l3244 0D65  
                        l3316 0A16                          l3182 0AE2                          l3238 0D46  
                        l3334 0944             DS1302_WriteByte@i 0031                          l3408 0A57  
                        l3272 0E1B                          l3264 0E0B                          l3328 092C  
                        l3520 0BBD                          l3514 07FA                          l3346 1758  
                        l3362 0A91                          l3186 0AEA                          l3178 0AD9  
                        l3290 0E62                          l3282 0E49                          l3274 0E29  
                        l3338 094D                          l3530 0BDE                          l3348 1764  
                        l3358 0A79                          l3366 0A5B                          l3286 0E54  
                        l3368 0A9A                          l3378 1676                          l3474 09AD  
                        l3466 0993                          l3482 1680                          l3714 0822  
                        l3730 088F                          l3722 1702                          l3810 06E3  
                        l3396 0A1E                          l3492 0EFF                          l3732 0897  
                        l3728 0883                          l3824 072F                          l3808 06D7  
                        l3760 05D2                          l3842 078A                          l3826 0730  
                        l3676 1738                          l3844 0796                          l3828 073C  
                        l3790 067C                          l3696 0CC2                          l3792 067D  
                        l3784 0658                          l3794 0689                          ?_isr 0070  
                        STR_1 05A5                          STR_2 05A9                          STR_3 0595  
                        STR_4 05B5                          STR_5 05B9                          STR_6 05C5  
                        STR_7 05AD                          STR_8 05A1                          STR_9 059D  
                        _BRGH 0CF2               __end_of_OLED_YX 08F9                          _CREN 0CEC  
                 ?_OLED_Clear 0070                          u3005 0D44                          u3015 0D63  
                        u3105 0E4A                          u3215 092F                          u3065 0E1E  
                        u3145 09F2                          u3235 093E                          u3085 0E2A  
                        u3405 0E75                          u3165 09FC                          u3245 0945  
                        u3095 0E3E                          u3415 0E8C                          u3175 0A06  
                        u3185 0A0E                          u3435 0EC1                          u3445 0ED8  
                        u3545 173E                          u2745 0C31                          u2755 0C43  
                        u2855 0ABE                          u3807 0F67                          u3817 0F82  
                        u2875 0AC8                          u2955 0979                          u3827 0F92  
                        u2885 0AD2                          u2965 08D9                          u3837 0FF0  
                        u2895 0ADA                          u3847 163E                          u2975 08EE  
                        u3857 0CA4                          _SCS0 04C8                          u3867 0CB8  
                        u3787 08C7                          _SCS1 04C9                          u3877 0CCF  
                        u3797 0F57                          u3887 0CE3                          u3897 178C  
                        _TMR0 0015                          _SPEN 0CEF                          _TXEN 0CF5  
                        _SYNC 0CF4                  __CFG_WRT$OFF 0000         ??i1_EUSART_Write_Text 0073  
                        _min1 005A                          _min2 0052                          _sec1 0059  
                        _sec2 0051                          _main 05CF                          _itoa 080C  
            __end_of_I2C_Init 1644                          fsr0h 0005                          fsr1h 0007  
                        indf0 0000                          fsr0l 0004                          indf1 0001  
                        fsr1l 0006                          btemp 007E                          _utoa 0BB8  
                        start 018A             ___bmul@multiplier 0032            __size_of_OLED_Init 0064  
    i1DS1302_WriteByte@W_Byte 0071                         ??_isr 002C                 ?_EUSART_Write 0070  
             __end_of___aldiv 0E6B                         ?_main 0070                         ?_itoa 0041  
             __end_of___awdiv 0AEF                         STR_10 05B1                         STR_11 05BD  
                       STR_20 0567                         STR_12 05C1                         STR_21 0541  
                       STR_13 0599                         STR_22 0541                         STR_14 058B  
                       STR_30 0543                         STR_23 0541                         STR_15 0590  
                       STR_31 0569                         STR_24 0541                         STR_40 0567  
                       STR_16 0581                         STR_32 0536                         STR_41 0541  
                       STR_25 0541                         STR_17 0576                         STR_33 055A  
               __CFG_WDTE$OFF 0000                         STR_34 0541                         STR_26 0541  
                       STR_18 05C9                         STR_42 0570                         STR_35 0541  
                       STR_27 0541                         STR_19 0541                         STR_36 0541  
                       STR_44 057C                         STR_28 0562                         STR_37 0541  
                       STR_29 0586                         STR_45 054F                         STR_38 0541  
                       STR_39 05CD             ?_touchscreen_data 0035                         ?_utoa 0037  
             ___awdiv@divisor 002F                         _IRCF0 04CB                         _IRCF1 04CC  
                       _IRCF2 04CD                         _IRCF3 04CE               __end_of___lwdiv 0A1B  
                       i1l255 0185               __end_of___lwmod 0952                         i1l380 15E7  
                       i1l277 17C0                         i1l278 17D7                         i1l794 0BA1  
             ___awdiv@counter 0034                         _SPBRG 019B                         _TRISD 008F  
                  i1itoa@base 0028         i1touchscreen_data@cmd 0076   __end_of_touchscreen_command 1794  
          ??_touchscreen_data 0039                i1_DS1302_Reset 15D0                __CFG_FCMEN$OFF 0000  
             __end_of_get_bcd 0980               __end_of_get_dec 16AF            i1___lwmod@dividend 0072  
                       _date1 005D                         _date2 0056       touchscreen_data@string2 0037  
             __end_of_dpowers 01F7                         _green 0C83               __end_of_memmove 0C83  
                 green@green1 0045              __end_ofi1___bmul 1620                __CFG_BOREN$OFF 0000  
                       utoa@c 0040                         utoa@v 003E                         status 0003  
                       wtemp0 007E    __size_of_Send_I2C_StartBit 0008               __end_of_strncmp 0A9D  
                ?_internal_16 0070            __size_ofi1___lwdiv 0034            __size_ofi1___lwmod 002C  
   i1touchscreen_data@string2 0078              __end_ofi1_strcat 0857              __end_ofi1_strcpy 16C9  
              __CFG_MCLRE$OFF 0000               __initialization 018C                  __end_of_main 07F0  
                __end_of_itoa 0831                  __end_of_utoa 0C1D                ??_EUSART_Write 002F  
                  i1utoa@base 007C                __CFG_LPBOR$OFF 0000              __end_of_OledFont 04F7  
                  i1strcat@cp 0074           __size_of_OLED_Clear 0032                    i1strcat@to 0070  
 __size_ofi1_touchscreen_data 0027                        ??_main 01D5                        ??_itoa 0047  
                  i1strcpy@cp 0074                    i1strcpy@to 0070                        ??_utoa 003D  
      __end_ofi1_DS1302_Reset 15D5                __CFG_PLLEN$OFF 0000           DS1302_Initialize@hr 003F  
                   ??_OLED_YX 0035                   initMain@day 00E5                   initMain@min 00E3  
                 initMain@sec 00E2                        ?_green 0070              ___awdiv@dividend 0031  
              __CFG_ZCDDIS$ON 0000                        _ANSELD 018F             __end_of_OLED_Init 0B53  
                      _RC1REG 0199                        i1l2360 09BA                        i1l2362 09C6  
                      i1l2372 09E1                        u201_25 09BD                        i1l2390 0917  
                      i1l2368 09D8                        i1l2384 08FF                        i1l2386 090B  
                      i1l2394 0920                        i1l2572 1611                        u210_25 0911  
                      i1l3550 0B58                        i1l2576 1617                        i1l3560 0B79  
                      i1l2568 16CB                        i1l2860 0841                        u203_25 09C7  
                      u211_25 0918                        i1l2862 0849                        i1l3754 17F1  
                      i1l2858 0835                        i1l3914 0097                        i1l2868 16B3  
                      i1l3908 008C                        u204_25 09D1                        i1l3944 014C  
                      u205_25 09D9                        u208_25 0902               _DS1302_ReadByte 17B6  
                      u247_25 169F                        u390_27 0876                 ?_OLED_Command 0070  
                      _TX1REG 019A                        _SPLLEN 04CF                        _SSPADD 0212  
                      _TRISD2 047A                        _TRISC6 0476                        _TRISC7 0477  
                      _SSPBUF 0211                        i1_itoa 17DB                        i1_utoa 0B53  
                _date1_string 0134                __CFG_PWRTE$OFF 0000                 ?_OLED_PutChar 0070  
                      ___bmul 1620                     ??___aldiv 0037        __size_of_Send_I2C_Data 0009  
                   ??___awdiv 0033                __CFG_STVREN$ON 0000                     ??___lwdiv 0033  
                   ??___lwmod 0033                        _dt_arr 00D3              __end_of_initMain 1000  
                      _hr_arr 0166              ___awdiv@quotient 0036                        _months 01BB  
                   ??_get_bcd 0038                     ??_get_dec 0074                        main@hr 01E2  
                      _strcat 087E                        _strchr 166A                        _strcpy 16FD  
                      _strlen 1753                        _strstr 0A1B               ?i1_DS1302_Reset 0070  
                      itoa@cp 0047             __end_ofi1___lwdiv 09E6             __end_ofi1___lwmod 0925  
                   ?_I2C_Init 0070                     ??_memmove 0033             ?_EUSART_Read_Text 002F  
   __size_of_DS1302_WriteByte 0013         Send_I2C_Data@databyte 002F            ??_EUSART_Read_Text 0031  
                   ??_strncmp 0039                ??_OLED_Command 0031          __size_of_EUSART_Read 000C  
     __end_of__initialization 01CB                ??_OLED_PutChar 003B           ___bmul@multiplicand 002F  
   __size_of_Send_I2C_StopBit 0008                __pcstackCOMMON 0070        DS1302_Initialize@date1 004A  
                __pidataBANK1 07FC                  __pidataBANK3 16E3         DS1302_ReadByte@R_Byte 0072  
               __end_of_green 0CEC        DS1302_Initialize@year1 004C                     ?i1___bmul 0070  
                  ??_I2C_Init 002F                _OPTION_REGbits 0095       __end_of_DS1302_ReadByte 17DB  
                   ?i1_strcat 0070                     ?i1_strcpy 0070              i1___bmul@product 0072  
               _Send_I2C_Data 1606                       ??_green 0042                  ??_OLED_Clear 004F  
                  __pbssBANK0 0051                    __pbssBANK1 00A0                    __pbssBANK2 0120  
                  __pbssBANK3 01A0                    __pbssBANK4 0220          __end_of_EUSART_Write 15F6  
      EUSART_Read_Text@Output 0033          DS1302_Initialize@hr1 0048          DS1302_Initialize@day 0040  
        DS1302_Initialize@min 003E          DS1302_Initialize@sec 0045          DS1302_Initialize@mth 0042  
  __end_ofi1_DS1302_WriteByte 1657                       ?i1_itoa 0024                       ?i1_utoa 0078  
      EUSART_Read_Text@length 002F                    __pmaintext 05CF          __size_of_internal_16 0009  
                     ?___bmul 002F                  initMain@date 00E6                  initMain@year 00E8  
             __CFG_PPS1WAY$ON 0000                    __pintentry 0004                    ??i1___bmul 0071  
          __end_of_OLED_Clear 09B2                       ?_strcat 002F                       ?_strchr 002F  
                     ?_strcpy 002F                       ?_strlen 002F                       ?_strstr 003C  
      DS1302_WriteByte@W_Byte 0030                       _OLED_YX 08CE                    ??i1_strcat 0074  
              ?_Send_I2C_Data 002F                    ??i1_strcpy 0074   __end_ofi1_EUSART_Write_Text 16E3  
                     _PPSLOCK 0E0F                     ?_initMain 0070     __size_of_touchscreen_data 0029  
             __size_ofi1_itoa 0025                       i1utoa@c 0023                       i1utoa@v 0021  
             __size_ofi1_utoa 0065                       ___aldiv 0DE9               __size_of___bmul 0012  
                     ___awdiv 0A9D           i1DS1302_WriteByte@i 0072                       ___lwdiv 09E6  
                     ___lwmod 0925          __end_of_OLED_Command 17B6                       __ptext1 08A5  
                     __ptext2 16FD                       __ptext3 087E                       __ptext4 080C  
                     __ptext5 0BB8                       __ptext6 0925                       __ptext7 09E6  
                     __ptext8 0F13                       __ptext9 0803                       _get_bcd 0952  
                     _get_dec 1697               __size_of_strcat 0027               __size_of_strchr 0016  
             __size_of_strcpy 001B               __size_of_strlen 001F               __size_of_strstr 003E  
                     _dpowers 01CF             i1___lwdiv@divisor 0070       __size_ofi1_EUSART_Write 0008  
                __size_of_isr 0186                       _min_arr 00CB             i1___lwdiv@counter 0077  
                     _memmove 0C1D                    _min_string 00A3              ___aldiv@dividend 0033  
        __end_of_OLED_PutChar 0D68              _DS1302_WriteByte 1657                       _mth_arr 01A0  
         i1___bmul@multiplier 0073              ?_DS1302_ReadByte 0070                       main@day 01E3  
                     main@min 01E1                       main@sec 01E0                       clrloop0 15DB  
                     _strncmp 0A59          end_of_initialization 01CB                       ftoa@buf 01AA  
                  _minute_arr 015C  __size_of_touchscreen_command 0022                    ??_initMain 00DC  
                     itoa@buf 0041                       init_ram 15E0                       itoa@val 0043  
                     initloop 15E1                     _OLED_Init 0AEF                    _screen_mth 04F7  
           _EUSART_Initialize 0E6B                    _mth_string 0120              OLED_PutChar@base 004A  
            _Send_I2C_StopBit 15FE            ?_EUSART_Initialize 003E              ___aldiv@quotient 003A  
  __end_ofi1_touchscreen_data 087E                  __pstringtext 01CF              ??i1_DS1302_Reset 0070  
                     utoa@buf 0037            EUSART_Initialize@x 004A                       utoa@val 0039  
                     strlen@s 002F           ??_EUSART_Initialize 0042               ??_Send_I2C_Data 0031  
            __CFG_FOSC$INTOSC 0000                    get_dec@var 0078                     _TRISBbits 008D  
                   _TRISCbits 008E         __size_of_EUSART_Write 0008             __size_of_I2C_Init 0012  
                   i1___lwdiv 09B2                     i1___lwmod 08F9                     _RXPPSbits 0E24  
   __end_of_EUSART_Initialize 0F13                    ?_OLED_Init 0070                    main@month1 01DE  
   __size_of_EUSART_Read_Text 001F                __end_ofi1_itoa 1800                __end_ofi1_utoa 0BB8  
              __end_of___bmul 1632                     i1itoa@buf 0024                     i1itoa@val 0026  
                _EUSART_Write 15EE             i1___lwmod@divisor 0070             i1___lwmod@counter 0075  
               ?_DS1302_Reset 0070                __end_of_strcat 08A5                __end_of_strchr 1680  
           __size_ofi1___bmul 0011                __end_of_strcpy 1718                __end_of_strlen 1772  
              __end_of_strstr 0A59        DS1302_ReadByte@TmpByte 0071           start_initialization 018C  
                 __end_of_isr 018A                 ??_EUSART_Read 002F                    ?i1___lwdiv 0070  
                  ?i1___lwmod 0070                     i1utoa@buf 0078                     i1utoa@val 007A  
           __size_ofi1_strcat 0026             __size_ofi1_strcpy 001A              _touchscreen_data 08A5  
                  initMain@hr 00E4             _EUSART_Write_Text 1718                      ??i1_itoa 007E  
        __end_of_screen_date1 0526                      ??i1_utoa 0020             _OLED_Write_String 1680  
          ?_EUSART_Write_Text 0030          __end_of_screen_month 051E                  i1strcat@from 0072  
          ?_OLED_Write_String 004F         __size_of_OLED_Command 0022                      ??___bmul 0030  
                  OLED_YX@Row 0038                   __pdataBANK1 00E9                   __pdataBANK3 01BB  
         ??_EUSART_Write_Text 0032            i1_DS1302_WriteByte 1644                  i1strcpy@from 0072  
       __size_of_OLED_PutChar 007C           ??_OLED_Write_String 00D8                ??_DS1302_Reset 002F  
                    ??_strcat 0033                      ??_strchr 0031                      ??_strcpy 0033  
                    ??_strlen 0031                      ??_strstr 003E                i1_EUSART_Write 15E6  
         ?i1_DS1302_WriteByte 0070           touchscreen_data@cmd 0035                     ___latbits 0002  
                    ?_OLED_YX 0034                 __pcstackBANK0 0020                 __pcstackBANK1 00D8  
               __pcstackBANK3 01D5         DS1302_Initialize@day1 0049         DS1302_Initialize@date 0041  
       DS1302_Initialize@min1 0047         DS1302_Initialize@sec1 0046         DS1302_Initialize@mth1 004B  
       DS1302_Initialize@year 0043     __end_of_EUSART_Write_Text 1734    __size_of_EUSART_Initialize 00A8  
                _OLED_Command 1794     __end_of_OLED_Write_String 1697         EUSART_Read_Text@i_522 0034  
         __end_of_EUSART_Read 07FC                   _date_string 00B7                 ??_internal_16 002F  
                 ??_OLED_Init 0034             __size_of_initMain 00ED          ??i1_DS1302_WriteByte 0070  
            ___lwdiv@dividend 0031      __end_of_DS1302_WriteByte 166A                  _OLED_PutChar 0CEC  
                    ?___aldiv 002F                      ?___awdiv 002F                      ?___lwdiv 002F  
                    ?___lwmod 002F                 initMain@month 00E7           _touchscreen_command 1772  
   EUSART_Initialize@baudrate 003E        __end_ofi1_EUSART_Write 15EE                      ?_get_bcd 0070  
                    ?_get_dec 0070                      _I2C_Init 1632                      ?_memmove 002F  
    __end_of_Send_I2C_StopBit 1606              ___lwdiv@quotient 0035                   ??i1___lwdiv 0074  
                 ??i1___lwmod 0074                __size_of_green 0069                      ?_strncmp 0035  
        i1EUSART_Write@txData 0070          ?_touchscreen_command 0035               ___aldiv@divisor 002F  
             ___aldiv@counter 0038  __size_ofi1_EUSART_Write_Text 001A                     clear_ram0 15DA  
            _EUSART_Read_Text 1734          i1EUSART_Write_Text@i 0074         i1___bmul@multiplicand 0070  
                   _month_arr 013E                      _PIR1bits 0011             _DS1302_Initialize 0D68  
         __end_of_internal_16 080C            ?_DS1302_Initialize 003E               ?i1_EUSART_Write 0070  
                    i1___bmul 160F                     main@date3 01DD           ??_DS1302_Initialize 0044  
                   main@hour1 01DB                     main@month 01E5            i1_touchscreen_data 0857  
                    i1_strcat 0831                      i1_strcpy 16AF              __size_of_OLED_YX 002B  
                 _EUSART_Read 07F0                      i1itoa@cp 002A         ??_touchscreen_command 0037  
  __size_of_EUSART_Write_Text 001C           ?i1_touchscreen_data 0076      __size_of_DS1302_ReadByte 0025  
  __size_of_OLED_Write_String 0017                      _OledFont 01F7          __end_of_DS1302_Reset 15DA  
   __end_of_DS1302_Initialize 0DE9           __end_of_screen_date 050C           __end_of_screen_hour 0536  
         __end_of_screen_mins 052E           __end_of_screen_time 0516                     memmove@d1 0037  
                   memmove@s1 002F              __size_of___aldiv 0082              __size_of___awdiv 0052  
            __size_of___lwdiv 0035              __size_of___lwmod 002D          ??i1_touchscreen_data 007A  
    __end_of_touchscreen_data 08CE                    _ANSELBbits 018D                    _ANSELCbits 018E  
     i1EUSART_Write_Text@text 0071              __size_of_get_bcd 002E              __size_of_get_dec 0018  
                _screen_date1 051E                    strcat@from 0031                      _date_arr 0148  
            __size_of_memmove 0066                  _screen_month 0516               ___lwdiv@divisor 002F  
       __end_of_Send_I2C_Data 160F               ___lwdiv@counter 0034                      __ptext10 1680  
                    __ptext11 0AEF                      __ptext20 1632                      __ptext12 0980  
                    __ptext21 0E6B                      __ptext13 08CE                      __ptext30 1772  
                    __ptext22 0DE9                      __ptext14 1794                      __ptext31 1718  
                    __ptext23 0D68                      __ptext15 0CEC                      __ptext40 0857  
                    __ptext32 15EE                      __ptext24 0952                      __ptext16 0C1D  
                    __ptext41 16C9                      __ptext33 0A1B                      __ptext25 1620  
                    __ptext17 15FE                      __ptext50 15D0                      __ptext42 15E6  
                    __ptext34 0A59                      __ptext26 0A9D                      __ptext18 15F6  
                    __ptext51 1697                      __ptext43 16AF                      __ptext35 1753  
                    __ptext27 1657                      __ptext19 1606                      __ptext52 160F  
                    __ptext44 0831                      __ptext36 166A                      __ptext28 15D5  
                    __ptext53 17B6                      __ptext45 17DB                      __ptext37 1734  
                    __ptext29 0C83                      __ptext46 0B53                      __ptext38 07F0  
                    __ptext47 08F9                      __ptext48 09B2                      __ptext49 1644  
            __size_of_strncmp 0044            i1___lwdiv@dividend 0072                    strcpy@from 0031  
                    _initMain 0F13                 __size_of_main 0221                 _SSPDATPPSbits 0E21  
               __size_of_itoa 0025                 __size_of_utoa 0065                 OLED_Clear@col 00DA  
                    _hour_arr 0152                    strncmp@len 0037                   _internal_16 0803  
               OLED_Clear@row 00D8                 OLED_YX@Column 0034                    _RB2PPSbits 0E9A  
                _month_string 012A                OLED_PutChar@ch 004C                    _RC1STAbits 019D  
                  _RC4PPSbits 0EA4                 _SSPCLKPPSbits 0E20                      int$flags 007E  
                 _hour_string 00AD                    _RC5PPSbits 0EA5                      main@date 01E4  
                    main@min1 01DC                      main@set1 01DF                      main@year 01E6  
            DS1302_ReadByte@i 0073            i1___lwdiv@quotient 0075                      green@buf 0044  
                  _INTCONbits 000B                      isr@count 00A0            __end_of_screen_mth 0502  
     __size_ofi1_DS1302_Reset 0005                      itoa@base 0045                      memmove@d 003A  
                    memmove@n 0031                      memmove@s 0038                      intlevel1 0000  
                  _OLED_Clear 0980                   _screen_date 0502                   _screen_hour 052E  
                 _screen_mins 0526                   _screen_time 050C                     strchr@chr 002F  
            ___lwmod@dividend 0031                     strchr@ptr 0031             __CFG_CLKOUTEN$OFF 0000  
                 _PPSLOCKbits 0E0F    __size_of_DS1302_Initialize 0081                     strncmp@s1 003B  
                   strncmp@s2 0035             _Send_I2C_StartBit 15F6             OLED_PutChar@bytes 0041  
               OLED_PutChar@i 004D             ?_DS1302_WriteByte 0070            ?_Send_I2C_StartBit 0070  
           ??_DS1302_ReadByte 0070            ??_DS1302_WriteByte 002F                      utoa@base 003B  
         ??_Send_I2C_StartBit 002F           i1_EUSART_Write_Text 16C9                      strcat@cp 0033  
                    strcat@to 002F               ___lwmod@divisor 002F      __end_of_EUSART_Read_Text 1753  
                    strcpy@cp 0033                      strlen@cp 0033                      strcpy@to 002F  
             ___lwmod@counter 0034                   _time_string 00C1         EUSART_Write_Text@text 0030  
                ___aldiv@sign 0039                   _SSPCON2bits 0216     touchscreen_command@string 0035  
                    strstr@s1 0041                      strstr@s2 003C             ?_Send_I2C_StopBit 0070  
       __size_of_DS1302_Reset 0005            EUSART_Write@txData 002F            ??_Send_I2C_StopBit 002F  
        ?i1_EUSART_Write_Text 0071     __end_of_Send_I2C_StartBit 15FE                   get_bcd@data 003C  
                 get_bcd@nibh 003D                   get_bcd@nibl 003B                    _SSPCONbits 0215  
          EUSART_Write_Text@i 0033                   get_dec@var2 0077   __size_ofi1_DS1302_WriteByte 0013  
