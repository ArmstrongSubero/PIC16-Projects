

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Mon Mar 27 18:55:51 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1717
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    24                           	dabs	1,0x7E,2
    25  0000                     
    26                           ; Version 1.41
    27                           ; Generated 25/01/2017 GMT
    28                           ; 
    29                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F1717 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0095                     	;# 
    98  0096                     	;# 
    99  0097                     	;# 
   100  0098                     	;# 
   101  0099                     	;# 
   102  009A                     	;# 
   103  009B                     	;# 
   104  009B                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  009E                     	;# 
   108  009F                     	;# 
   109  010C                     	;# 
   110  010D                     	;# 
   111  010E                     	;# 
   112  010F                     	;# 
   113  0110                     	;# 
   114  0111                     	;# 
   115  0112                     	;# 
   116  0113                     	;# 
   117  0114                     	;# 
   118  0115                     	;# 
   119  0116                     	;# 
   120  0117                     	;# 
   121  0118                     	;# 
   122  0119                     	;# 
   123  011A                     	;# 
   124  011B                     	;# 
   125  011B                     	;# 
   126  011C                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  018E                     	;# 
   130  018F                     	;# 
   131  0190                     	;# 
   132  0191                     	;# 
   133  0191                     	;# 
   134  0192                     	;# 
   135  0193                     	;# 
   136  0193                     	;# 
   137  0194                     	;# 
   138  0195                     	;# 
   139  0196                     	;# 
   140  0197                     	;# 
   141  0199                     	;# 
   142  0199                     	;# 
   143  0199                     	;# 
   144  019A                     	;# 
   145  019A                     	;# 
   146  019A                     	;# 
   147  019B                     	;# 
   148  019B                     	;# 
   149  019B                     	;# 
   150  019B                     	;# 
   151  019B                     	;# 
   152  019C                     	;# 
   153  019C                     	;# 
   154  019C                     	;# 
   155  019D                     	;# 
   156  019D                     	;# 
   157  019D                     	;# 
   158  019E                     	;# 
   159  019E                     	;# 
   160  019E                     	;# 
   161  019F                     	;# 
   162  019F                     	;# 
   163  019F                     	;# 
   164  019F                     	;# 
   165  019F                     	;# 
   166  020C                     	;# 
   167  020D                     	;# 
   168  020E                     	;# 
   169  020F                     	;# 
   170  0210                     	;# 
   171  0211                     	;# 
   172  0211                     	;# 
   173  0212                     	;# 
   174  0212                     	;# 
   175  0213                     	;# 
   176  0213                     	;# 
   177  0214                     	;# 
   178  0214                     	;# 
   179  0215                     	;# 
   180  0215                     	;# 
   181  0215                     	;# 
   182  0215                     	;# 
   183  0216                     	;# 
   184  0216                     	;# 
   185  0217                     	;# 
   186  0217                     	;# 
   187  028C                     	;# 
   188  028D                     	;# 
   189  028E                     	;# 
   190  028F                     	;# 
   191  0290                     	;# 
   192  0291                     	;# 
   193  0291                     	;# 
   194  0292                     	;# 
   195  0293                     	;# 
   196  0293                     	;# 
   197  0298                     	;# 
   198  0298                     	;# 
   199  0299                     	;# 
   200  029A                     	;# 
   201  029A                     	;# 
   202  029E                     	;# 
   203  030C                     	;# 
   204  030D                     	;# 
   205  030E                     	;# 
   206  030F                     	;# 
   207  0310                     	;# 
   208  038C                     	;# 
   209  038D                     	;# 
   210  038E                     	;# 
   211  038F                     	;# 
   212  0390                     	;# 
   213  0391                     	;# 
   214  0392                     	;# 
   215  0393                     	;# 
   216  0394                     	;# 
   217  0395                     	;# 
   218  0396                     	;# 
   219  0397                     	;# 
   220  0398                     	;# 
   221  0399                     	;# 
   222  039D                     	;# 
   223  039E                     	;# 
   224  039F                     	;# 
   225  0415                     	;# 
   226  0416                     	;# 
   227  0417                     	;# 
   228  041C                     	;# 
   229  041D                     	;# 
   230  041E                     	;# 
   231  0498                     	;# 
   232  0498                     	;# 
   233  0499                     	;# 
   234  049A                     	;# 
   235  049B                     	;# 
   236  049B                     	;# 
   237  049C                     	;# 
   238  049D                     	;# 
   239  049E                     	;# 
   240  049F                     	;# 
   241  0511                     	;# 
   242  0515                     	;# 
   243  0617                     	;# 
   244  0618                     	;# 
   245  0619                     	;# 
   246  0619                     	;# 
   247  061A                     	;# 
   248  061B                     	;# 
   249  061C                     	;# 
   250  061C                     	;# 
   251  0691                     	;# 
   252  0692                     	;# 
   253  0693                     	;# 
   254  0694                     	;# 
   255  0695                     	;# 
   256  0696                     	;# 
   257  0697                     	;# 
   258  0698                     	;# 
   259  0699                     	;# 
   260  069A                     	;# 
   261  069B                     	;# 
   262  069C                     	;# 
   263  069D                     	;# 
   264  069E                     	;# 
   265  069F                     	;# 
   266  0E0F                     	;# 
   267  0E10                     	;# 
   268  0E11                     	;# 
   269  0E12                     	;# 
   270  0E13                     	;# 
   271  0E14                     	;# 
   272  0E15                     	;# 
   273  0E17                     	;# 
   274  0E20                     	;# 
   275  0E21                     	;# 
   276  0E22                     	;# 
   277  0E24                     	;# 
   278  0E25                     	;# 
   279  0E28                     	;# 
   280  0E29                     	;# 
   281  0E2A                     	;# 
   282  0E2B                     	;# 
   283  0E90                     	;# 
   284  0E91                     	;# 
   285  0E92                     	;# 
   286  0E93                     	;# 
   287  0E94                     	;# 
   288  0E95                     	;# 
   289  0E96                     	;# 
   290  0E97                     	;# 
   291  0E98                     	;# 
   292  0E99                     	;# 
   293  0E9A                     	;# 
   294  0E9B                     	;# 
   295  0E9C                     	;# 
   296  0E9D                     	;# 
   297  0E9E                     	;# 
   298  0E9F                     	;# 
   299  0EA0                     	;# 
   300  0EA1                     	;# 
   301  0EA2                     	;# 
   302  0EA3                     	;# 
   303  0EA4                     	;# 
   304  0EA5                     	;# 
   305  0EA6                     	;# 
   306  0EA7                     	;# 
   307  0EA8                     	;# 
   308  0EA9                     	;# 
   309  0EAA                     	;# 
   310  0EAB                     	;# 
   311  0EAC                     	;# 
   312  0EAD                     	;# 
   313  0EAE                     	;# 
   314  0EAF                     	;# 
   315  0EB0                     	;# 
   316  0EB1                     	;# 
   317  0EB2                     	;# 
   318  0F0F                     	;# 
   319  0F10                     	;# 
   320  0F11                     	;# 
   321  0F12                     	;# 
   322  0F13                     	;# 
   323  0F14                     	;# 
   324  0F15                     	;# 
   325  0F16                     	;# 
   326  0F17                     	;# 
   327  0F18                     	;# 
   328  0F19                     	;# 
   329  0F1A                     	;# 
   330  0F1B                     	;# 
   331  0F1C                     	;# 
   332  0F1D                     	;# 
   333  0F1E                     	;# 
   334  0F1F                     	;# 
   335  0F20                     	;# 
   336  0F21                     	;# 
   337  0F22                     	;# 
   338  0F23                     	;# 
   339  0F24                     	;# 
   340  0F25                     	;# 
   341  0F26                     	;# 
   342  0F27                     	;# 
   343  0F28                     	;# 
   344  0F29                     	;# 
   345  0F2A                     	;# 
   346  0F2B                     	;# 
   347  0F2C                     	;# 
   348  0F2D                     	;# 
   349  0F2E                     	;# 
   350  0F2F                     	;# 
   351  0F30                     	;# 
   352  0F31                     	;# 
   353  0F32                     	;# 
   354  0F33                     	;# 
   355  0F34                     	;# 
   356  0F35                     	;# 
   357  0F36                     	;# 
   358  0F37                     	;# 
   359  0FE4                     	;# 
   360  0FE5                     	;# 
   361  0FE6                     	;# 
   362  0FE7                     	;# 
   363  0FE8                     	;# 
   364  0FE9                     	;# 
   365  0FEA                     	;# 
   366  0FEB                     	;# 
   367  0FED                     	;# 
   368  0FEE                     	;# 
   369  0FEF                     	;# 
   370  0000                     	;# 
   371  0001                     	;# 
   372  0002                     	;# 
   373  0003                     	;# 
   374  0004                     	;# 
   375  0005                     	;# 
   376  0006                     	;# 
   377  0007                     	;# 
   378  0008                     	;# 
   379  0009                     	;# 
   380  000A                     	;# 
   381  000B                     	;# 
   382  000C                     	;# 
   383  000D                     	;# 
   384  000E                     	;# 
   385  000F                     	;# 
   386  0010                     	;# 
   387  0011                     	;# 
   388  0012                     	;# 
   389  0013                     	;# 
   390  0015                     	;# 
   391  0016                     	;# 
   392  0016                     	;# 
   393  0017                     	;# 
   394  0018                     	;# 
   395  0019                     	;# 
   396  001A                     	;# 
   397  001B                     	;# 
   398  001C                     	;# 
   399  008C                     	;# 
   400  008D                     	;# 
   401  008E                     	;# 
   402  008F                     	;# 
   403  0090                     	;# 
   404  0091                     	;# 
   405  0092                     	;# 
   406  0093                     	;# 
   407  0095                     	;# 
   408  0096                     	;# 
   409  0097                     	;# 
   410  0098                     	;# 
   411  0099                     	;# 
   412  009A                     	;# 
   413  009B                     	;# 
   414  009B                     	;# 
   415  009C                     	;# 
   416  009D                     	;# 
   417  009E                     	;# 
   418  009F                     	;# 
   419  010C                     	;# 
   420  010D                     	;# 
   421  010E                     	;# 
   422  010F                     	;# 
   423  0110                     	;# 
   424  0111                     	;# 
   425  0112                     	;# 
   426  0113                     	;# 
   427  0114                     	;# 
   428  0115                     	;# 
   429  0116                     	;# 
   430  0117                     	;# 
   431  0118                     	;# 
   432  0119                     	;# 
   433  011A                     	;# 
   434  011B                     	;# 
   435  011B                     	;# 
   436  011C                     	;# 
   437  018C                     	;# 
   438  018D                     	;# 
   439  018E                     	;# 
   440  018F                     	;# 
   441  0190                     	;# 
   442  0191                     	;# 
   443  0191                     	;# 
   444  0192                     	;# 
   445  0193                     	;# 
   446  0193                     	;# 
   447  0194                     	;# 
   448  0195                     	;# 
   449  0196                     	;# 
   450  0197                     	;# 
   451  0199                     	;# 
   452  0199                     	;# 
   453  0199                     	;# 
   454  019A                     	;# 
   455  019A                     	;# 
   456  019A                     	;# 
   457  019B                     	;# 
   458  019B                     	;# 
   459  019B                     	;# 
   460  019B                     	;# 
   461  019B                     	;# 
   462  019C                     	;# 
   463  019C                     	;# 
   464  019C                     	;# 
   465  019D                     	;# 
   466  019D                     	;# 
   467  019D                     	;# 
   468  019E                     	;# 
   469  019E                     	;# 
   470  019E                     	;# 
   471  019F                     	;# 
   472  019F                     	;# 
   473  019F                     	;# 
   474  019F                     	;# 
   475  019F                     	;# 
   476  020C                     	;# 
   477  020D                     	;# 
   478  020E                     	;# 
   479  020F                     	;# 
   480  0210                     	;# 
   481  0211                     	;# 
   482  0211                     	;# 
   483  0212                     	;# 
   484  0212                     	;# 
   485  0213                     	;# 
   486  0213                     	;# 
   487  0214                     	;# 
   488  0214                     	;# 
   489  0215                     	;# 
   490  0215                     	;# 
   491  0215                     	;# 
   492  0215                     	;# 
   493  0216                     	;# 
   494  0216                     	;# 
   495  0217                     	;# 
   496  0217                     	;# 
   497  028C                     	;# 
   498  028D                     	;# 
   499  028E                     	;# 
   500  028F                     	;# 
   501  0290                     	;# 
   502  0291                     	;# 
   503  0291                     	;# 
   504  0292                     	;# 
   505  0293                     	;# 
   506  0293                     	;# 
   507  0298                     	;# 
   508  0298                     	;# 
   509  0299                     	;# 
   510  029A                     	;# 
   511  029A                     	;# 
   512  029E                     	;# 
   513  030C                     	;# 
   514  030D                     	;# 
   515  030E                     	;# 
   516  030F                     	;# 
   517  0310                     	;# 
   518  038C                     	;# 
   519  038D                     	;# 
   520  038E                     	;# 
   521  038F                     	;# 
   522  0390                     	;# 
   523  0391                     	;# 
   524  0392                     	;# 
   525  0393                     	;# 
   526  0394                     	;# 
   527  0395                     	;# 
   528  0396                     	;# 
   529  0397                     	;# 
   530  0398                     	;# 
   531  0399                     	;# 
   532  039D                     	;# 
   533  039E                     	;# 
   534  039F                     	;# 
   535  0415                     	;# 
   536  0416                     	;# 
   537  0417                     	;# 
   538  041C                     	;# 
   539  041D                     	;# 
   540  041E                     	;# 
   541  0498                     	;# 
   542  0498                     	;# 
   543  0499                     	;# 
   544  049A                     	;# 
   545  049B                     	;# 
   546  049B                     	;# 
   547  049C                     	;# 
   548  049D                     	;# 
   549  049E                     	;# 
   550  049F                     	;# 
   551  0511                     	;# 
   552  0515                     	;# 
   553  0617                     	;# 
   554  0618                     	;# 
   555  0619                     	;# 
   556  0619                     	;# 
   557  061A                     	;# 
   558  061B                     	;# 
   559  061C                     	;# 
   560  061C                     	;# 
   561  0691                     	;# 
   562  0692                     	;# 
   563  0693                     	;# 
   564  0694                     	;# 
   565  0695                     	;# 
   566  0696                     	;# 
   567  0697                     	;# 
   568  0698                     	;# 
   569  0699                     	;# 
   570  069A                     	;# 
   571  069B                     	;# 
   572  069C                     	;# 
   573  069D                     	;# 
   574  069E                     	;# 
   575  069F                     	;# 
   576  0E0F                     	;# 
   577  0E10                     	;# 
   578  0E11                     	;# 
   579  0E12                     	;# 
   580  0E13                     	;# 
   581  0E14                     	;# 
   582  0E15                     	;# 
   583  0E17                     	;# 
   584  0E20                     	;# 
   585  0E21                     	;# 
   586  0E22                     	;# 
   587  0E24                     	;# 
   588  0E25                     	;# 
   589  0E28                     	;# 
   590  0E29                     	;# 
   591  0E2A                     	;# 
   592  0E2B                     	;# 
   593  0E90                     	;# 
   594  0E91                     	;# 
   595  0E92                     	;# 
   596  0E93                     	;# 
   597  0E94                     	;# 
   598  0E95                     	;# 
   599  0E96                     	;# 
   600  0E97                     	;# 
   601  0E98                     	;# 
   602  0E99                     	;# 
   603  0E9A                     	;# 
   604  0E9B                     	;# 
   605  0E9C                     	;# 
   606  0E9D                     	;# 
   607  0E9E                     	;# 
   608  0E9F                     	;# 
   609  0EA0                     	;# 
   610  0EA1                     	;# 
   611  0EA2                     	;# 
   612  0EA3                     	;# 
   613  0EA4                     	;# 
   614  0EA5                     	;# 
   615  0EA6                     	;# 
   616  0EA7                     	;# 
   617  0EA8                     	;# 
   618  0EA9                     	;# 
   619  0EAA                     	;# 
   620  0EAB                     	;# 
   621  0EAC                     	;# 
   622  0EAD                     	;# 
   623  0EAE                     	;# 
   624  0EAF                     	;# 
   625  0EB0                     	;# 
   626  0EB1                     	;# 
   627  0EB2                     	;# 
   628  0F0F                     	;# 
   629  0F10                     	;# 
   630  0F11                     	;# 
   631  0F12                     	;# 
   632  0F13                     	;# 
   633  0F14                     	;# 
   634  0F15                     	;# 
   635  0F16                     	;# 
   636  0F17                     	;# 
   637  0F18                     	;# 
   638  0F19                     	;# 
   639  0F1A                     	;# 
   640  0F1B                     	;# 
   641  0F1C                     	;# 
   642  0F1D                     	;# 
   643  0F1E                     	;# 
   644  0F1F                     	;# 
   645  0F20                     	;# 
   646  0F21                     	;# 
   647  0F22                     	;# 
   648  0F23                     	;# 
   649  0F24                     	;# 
   650  0F25                     	;# 
   651  0F26                     	;# 
   652  0F27                     	;# 
   653  0F28                     	;# 
   654  0F29                     	;# 
   655  0F2A                     	;# 
   656  0F2B                     	;# 
   657  0F2C                     	;# 
   658  0F2D                     	;# 
   659  0F2E                     	;# 
   660  0F2F                     	;# 
   661  0F30                     	;# 
   662  0F31                     	;# 
   663  0F32                     	;# 
   664  0F33                     	;# 
   665  0F34                     	;# 
   666  0F35                     	;# 
   667  0F36                     	;# 
   668  0F37                     	;# 
   669  0FE4                     	;# 
   670  0FE5                     	;# 
   671  0FE6                     	;# 
   672  0FE7                     	;# 
   673  0FE8                     	;# 
   674  0FE9                     	;# 
   675  0FEA                     	;# 
   676  0FEB                     	;# 
   677  0FED                     	;# 
   678  0FEE                     	;# 
   679  0FEF                     	;# 
   680  0000                     	;# 
   681  0001                     	;# 
   682  0002                     	;# 
   683  0003                     	;# 
   684  0004                     	;# 
   685  0005                     	;# 
   686  0006                     	;# 
   687  0007                     	;# 
   688  0008                     	;# 
   689  0009                     	;# 
   690  000A                     	;# 
   691  000B                     	;# 
   692  000C                     	;# 
   693  000D                     	;# 
   694  000E                     	;# 
   695  000F                     	;# 
   696  0010                     	;# 
   697  0011                     	;# 
   698  0012                     	;# 
   699  0013                     	;# 
   700  0015                     	;# 
   701  0016                     	;# 
   702  0016                     	;# 
   703  0017                     	;# 
   704  0018                     	;# 
   705  0019                     	;# 
   706  001A                     	;# 
   707  001B                     	;# 
   708  001C                     	;# 
   709  008C                     	;# 
   710  008D                     	;# 
   711  008E                     	;# 
   712  008F                     	;# 
   713  0090                     	;# 
   714  0091                     	;# 
   715  0092                     	;# 
   716  0093                     	;# 
   717  0095                     	;# 
   718  0096                     	;# 
   719  0097                     	;# 
   720  0098                     	;# 
   721  0099                     	;# 
   722  009A                     	;# 
   723  009B                     	;# 
   724  009B                     	;# 
   725  009C                     	;# 
   726  009D                     	;# 
   727  009E                     	;# 
   728  009F                     	;# 
   729  010C                     	;# 
   730  010D                     	;# 
   731  010E                     	;# 
   732  010F                     	;# 
   733  0110                     	;# 
   734  0111                     	;# 
   735  0112                     	;# 
   736  0113                     	;# 
   737  0114                     	;# 
   738  0115                     	;# 
   739  0116                     	;# 
   740  0117                     	;# 
   741  0118                     	;# 
   742  0119                     	;# 
   743  011A                     	;# 
   744  011B                     	;# 
   745  011B                     	;# 
   746  011C                     	;# 
   747  018C                     	;# 
   748  018D                     	;# 
   749  018E                     	;# 
   750  018F                     	;# 
   751  0190                     	;# 
   752  0191                     	;# 
   753  0191                     	;# 
   754  0192                     	;# 
   755  0193                     	;# 
   756  0193                     	;# 
   757  0194                     	;# 
   758  0195                     	;# 
   759  0196                     	;# 
   760  0197                     	;# 
   761  0199                     	;# 
   762  0199                     	;# 
   763  0199                     	;# 
   764  019A                     	;# 
   765  019A                     	;# 
   766  019A                     	;# 
   767  019B                     	;# 
   768  019B                     	;# 
   769  019B                     	;# 
   770  019B                     	;# 
   771  019B                     	;# 
   772  019C                     	;# 
   773  019C                     	;# 
   774  019C                     	;# 
   775  019D                     	;# 
   776  019D                     	;# 
   777  019D                     	;# 
   778  019E                     	;# 
   779  019E                     	;# 
   780  019E                     	;# 
   781  019F                     	;# 
   782  019F                     	;# 
   783  019F                     	;# 
   784  019F                     	;# 
   785  019F                     	;# 
   786  020C                     	;# 
   787  020D                     	;# 
   788  020E                     	;# 
   789  020F                     	;# 
   790  0210                     	;# 
   791  0211                     	;# 
   792  0211                     	;# 
   793  0212                     	;# 
   794  0212                     	;# 
   795  0213                     	;# 
   796  0213                     	;# 
   797  0214                     	;# 
   798  0214                     	;# 
   799  0215                     	;# 
   800  0215                     	;# 
   801  0215                     	;# 
   802  0215                     	;# 
   803  0216                     	;# 
   804  0216                     	;# 
   805  0217                     	;# 
   806  0217                     	;# 
   807  028C                     	;# 
   808  028D                     	;# 
   809  028E                     	;# 
   810  028F                     	;# 
   811  0290                     	;# 
   812  0291                     	;# 
   813  0291                     	;# 
   814  0292                     	;# 
   815  0293                     	;# 
   816  0293                     	;# 
   817  0298                     	;# 
   818  0298                     	;# 
   819  0299                     	;# 
   820  029A                     	;# 
   821  029A                     	;# 
   822  029E                     	;# 
   823  030C                     	;# 
   824  030D                     	;# 
   825  030E                     	;# 
   826  030F                     	;# 
   827  0310                     	;# 
   828  038C                     	;# 
   829  038D                     	;# 
   830  038E                     	;# 
   831  038F                     	;# 
   832  0390                     	;# 
   833  0391                     	;# 
   834  0392                     	;# 
   835  0393                     	;# 
   836  0394                     	;# 
   837  0395                     	;# 
   838  0396                     	;# 
   839  0397                     	;# 
   840  0398                     	;# 
   841  0399                     	;# 
   842  039D                     	;# 
   843  039E                     	;# 
   844  039F                     	;# 
   845  0415                     	;# 
   846  0416                     	;# 
   847  0417                     	;# 
   848  041C                     	;# 
   849  041D                     	;# 
   850  041E                     	;# 
   851  0498                     	;# 
   852  0498                     	;# 
   853  0499                     	;# 
   854  049A                     	;# 
   855  049B                     	;# 
   856  049B                     	;# 
   857  049C                     	;# 
   858  049D                     	;# 
   859  049E                     	;# 
   860  049F                     	;# 
   861  0511                     	;# 
   862  0515                     	;# 
   863  0617                     	;# 
   864  0618                     	;# 
   865  0619                     	;# 
   866  0619                     	;# 
   867  061A                     	;# 
   868  061B                     	;# 
   869  061C                     	;# 
   870  061C                     	;# 
   871  0691                     	;# 
   872  0692                     	;# 
   873  0693                     	;# 
   874  0694                     	;# 
   875  0695                     	;# 
   876  0696                     	;# 
   877  0697                     	;# 
   878  0698                     	;# 
   879  0699                     	;# 
   880  069A                     	;# 
   881  069B                     	;# 
   882  069C                     	;# 
   883  069D                     	;# 
   884  069E                     	;# 
   885  069F                     	;# 
   886  0E0F                     	;# 
   887  0E10                     	;# 
   888  0E11                     	;# 
   889  0E12                     	;# 
   890  0E13                     	;# 
   891  0E14                     	;# 
   892  0E15                     	;# 
   893  0E17                     	;# 
   894  0E20                     	;# 
   895  0E21                     	;# 
   896  0E22                     	;# 
   897  0E24                     	;# 
   898  0E25                     	;# 
   899  0E28                     	;# 
   900  0E29                     	;# 
   901  0E2A                     	;# 
   902  0E2B                     	;# 
   903  0E90                     	;# 
   904  0E91                     	;# 
   905  0E92                     	;# 
   906  0E93                     	;# 
   907  0E94                     	;# 
   908  0E95                     	;# 
   909  0E96                     	;# 
   910  0E97                     	;# 
   911  0E98                     	;# 
   912  0E99                     	;# 
   913  0E9A                     	;# 
   914  0E9B                     	;# 
   915  0E9C                     	;# 
   916  0E9D                     	;# 
   917  0E9E                     	;# 
   918  0E9F                     	;# 
   919  0EA0                     	;# 
   920  0EA1                     	;# 
   921  0EA2                     	;# 
   922  0EA3                     	;# 
   923  0EA4                     	;# 
   924  0EA5                     	;# 
   925  0EA6                     	;# 
   926  0EA7                     	;# 
   927  0EA8                     	;# 
   928  0EA9                     	;# 
   929  0EAA                     	;# 
   930  0EAB                     	;# 
   931  0EAC                     	;# 
   932  0EAD                     	;# 
   933  0EAE                     	;# 
   934  0EAF                     	;# 
   935  0EB0                     	;# 
   936  0EB1                     	;# 
   937  0EB2                     	;# 
   938  0F0F                     	;# 
   939  0F10                     	;# 
   940  0F11                     	;# 
   941  0F12                     	;# 
   942  0F13                     	;# 
   943  0F14                     	;# 
   944  0F15                     	;# 
   945  0F16                     	;# 
   946  0F17                     	;# 
   947  0F18                     	;# 
   948  0F19                     	;# 
   949  0F1A                     	;# 
   950  0F1B                     	;# 
   951  0F1C                     	;# 
   952  0F1D                     	;# 
   953  0F1E                     	;# 
   954  0F1F                     	;# 
   955  0F20                     	;# 
   956  0F21                     	;# 
   957  0F22                     	;# 
   958  0F23                     	;# 
   959  0F24                     	;# 
   960  0F25                     	;# 
   961  0F26                     	;# 
   962  0F27                     	;# 
   963  0F28                     	;# 
   964  0F29                     	;# 
   965  0F2A                     	;# 
   966  0F2B                     	;# 
   967  0F2C                     	;# 
   968  0F2D                     	;# 
   969  0F2E                     	;# 
   970  0F2F                     	;# 
   971  0F30                     	;# 
   972  0F31                     	;# 
   973  0F32                     	;# 
   974  0F33                     	;# 
   975  0F34                     	;# 
   976  0F35                     	;# 
   977  0F36                     	;# 
   978  0F37                     	;# 
   979  0FE4                     	;# 
   980  0FE5                     	;# 
   981  0FE6                     	;# 
   982  0FE7                     	;# 
   983  0FE8                     	;# 
   984  0FE9                     	;# 
   985  0FEA                     	;# 
   986  0FEB                     	;# 
   987  0FED                     	;# 
   988  0FEE                     	;# 
   989  0FEF                     	;# 
   990  0000                     	;# 
   991  0001                     	;# 
   992  0002                     	;# 
   993  0003                     	;# 
   994  0004                     	;# 
   995  0005                     	;# 
   996  0006                     	;# 
   997  0007                     	;# 
   998  0008                     	;# 
   999  0009                     	;# 
  1000  000A                     	;# 
  1001  000B                     	;# 
  1002  000C                     	;# 
  1003  000D                     	;# 
  1004  000E                     	;# 
  1005  000F                     	;# 
  1006  0010                     	;# 
  1007  0011                     	;# 
  1008  0012                     	;# 
  1009  0013                     	;# 
  1010  0015                     	;# 
  1011  0016                     	;# 
  1012  0016                     	;# 
  1013  0017                     	;# 
  1014  0018                     	;# 
  1015  0019                     	;# 
  1016  001A                     	;# 
  1017  001B                     	;# 
  1018  001C                     	;# 
  1019  008C                     	;# 
  1020  008D                     	;# 
  1021  008E                     	;# 
  1022  008F                     	;# 
  1023  0090                     	;# 
  1024  0091                     	;# 
  1025  0092                     	;# 
  1026  0093                     	;# 
  1027  0095                     	;# 
  1028  0096                     	;# 
  1029  0097                     	;# 
  1030  0098                     	;# 
  1031  0099                     	;# 
  1032  009A                     	;# 
  1033  009B                     	;# 
  1034  009B                     	;# 
  1035  009C                     	;# 
  1036  009D                     	;# 
  1037  009E                     	;# 
  1038  009F                     	;# 
  1039  010C                     	;# 
  1040  010D                     	;# 
  1041  010E                     	;# 
  1042  010F                     	;# 
  1043  0110                     	;# 
  1044  0111                     	;# 
  1045  0112                     	;# 
  1046  0113                     	;# 
  1047  0114                     	;# 
  1048  0115                     	;# 
  1049  0116                     	;# 
  1050  0117                     	;# 
  1051  0118                     	;# 
  1052  0119                     	;# 
  1053  011A                     	;# 
  1054  011B                     	;# 
  1055  011B                     	;# 
  1056  011C                     	;# 
  1057  018C                     	;# 
  1058  018D                     	;# 
  1059  018E                     	;# 
  1060  018F                     	;# 
  1061  0190                     	;# 
  1062  0191                     	;# 
  1063  0191                     	;# 
  1064  0192                     	;# 
  1065  0193                     	;# 
  1066  0193                     	;# 
  1067  0194                     	;# 
  1068  0195                     	;# 
  1069  0196                     	;# 
  1070  0197                     	;# 
  1071  0199                     	;# 
  1072  0199                     	;# 
  1073  0199                     	;# 
  1074  019A                     	;# 
  1075  019A                     	;# 
  1076  019A                     	;# 
  1077  019B                     	;# 
  1078  019B                     	;# 
  1079  019B                     	;# 
  1080  019B                     	;# 
  1081  019B                     	;# 
  1082  019C                     	;# 
  1083  019C                     	;# 
  1084  019C                     	;# 
  1085  019D                     	;# 
  1086  019D                     	;# 
  1087  019D                     	;# 
  1088  019E                     	;# 
  1089  019E                     	;# 
  1090  019E                     	;# 
  1091  019F                     	;# 
  1092  019F                     	;# 
  1093  019F                     	;# 
  1094  019F                     	;# 
  1095  019F                     	;# 
  1096  020C                     	;# 
  1097  020D                     	;# 
  1098  020E                     	;# 
  1099  020F                     	;# 
  1100  0210                     	;# 
  1101  0211                     	;# 
  1102  0211                     	;# 
  1103  0212                     	;# 
  1104  0212                     	;# 
  1105  0213                     	;# 
  1106  0213                     	;# 
  1107  0214                     	;# 
  1108  0214                     	;# 
  1109  0215                     	;# 
  1110  0215                     	;# 
  1111  0215                     	;# 
  1112  0215                     	;# 
  1113  0216                     	;# 
  1114  0216                     	;# 
  1115  0217                     	;# 
  1116  0217                     	;# 
  1117  028C                     	;# 
  1118  028D                     	;# 
  1119  028E                     	;# 
  1120  028F                     	;# 
  1121  0290                     	;# 
  1122  0291                     	;# 
  1123  0291                     	;# 
  1124  0292                     	;# 
  1125  0293                     	;# 
  1126  0293                     	;# 
  1127  0298                     	;# 
  1128  0298                     	;# 
  1129  0299                     	;# 
  1130  029A                     	;# 
  1131  029A                     	;# 
  1132  029E                     	;# 
  1133  030C                     	;# 
  1134  030D                     	;# 
  1135  030E                     	;# 
  1136  030F                     	;# 
  1137  0310                     	;# 
  1138  038C                     	;# 
  1139  038D                     	;# 
  1140  038E                     	;# 
  1141  038F                     	;# 
  1142  0390                     	;# 
  1143  0391                     	;# 
  1144  0392                     	;# 
  1145  0393                     	;# 
  1146  0394                     	;# 
  1147  0395                     	;# 
  1148  0396                     	;# 
  1149  0397                     	;# 
  1150  0398                     	;# 
  1151  0399                     	;# 
  1152  039D                     	;# 
  1153  039E                     	;# 
  1154  039F                     	;# 
  1155  0415                     	;# 
  1156  0416                     	;# 
  1157  0417                     	;# 
  1158  041C                     	;# 
  1159  041D                     	;# 
  1160  041E                     	;# 
  1161  0498                     	;# 
  1162  0498                     	;# 
  1163  0499                     	;# 
  1164  049A                     	;# 
  1165  049B                     	;# 
  1166  049B                     	;# 
  1167  049C                     	;# 
  1168  049D                     	;# 
  1169  049E                     	;# 
  1170  049F                     	;# 
  1171  0511                     	;# 
  1172  0515                     	;# 
  1173  0617                     	;# 
  1174  0618                     	;# 
  1175  0619                     	;# 
  1176  0619                     	;# 
  1177  061A                     	;# 
  1178  061B                     	;# 
  1179  061C                     	;# 
  1180  061C                     	;# 
  1181  0691                     	;# 
  1182  0692                     	;# 
  1183  0693                     	;# 
  1184  0694                     	;# 
  1185  0695                     	;# 
  1186  0696                     	;# 
  1187  0697                     	;# 
  1188  0698                     	;# 
  1189  0699                     	;# 
  1190  069A                     	;# 
  1191  069B                     	;# 
  1192  069C                     	;# 
  1193  069D                     	;# 
  1194  069E                     	;# 
  1195  069F                     	;# 
  1196  0E0F                     	;# 
  1197  0E10                     	;# 
  1198  0E11                     	;# 
  1199  0E12                     	;# 
  1200  0E13                     	;# 
  1201  0E14                     	;# 
  1202  0E15                     	;# 
  1203  0E17                     	;# 
  1204  0E20                     	;# 
  1205  0E21                     	;# 
  1206  0E22                     	;# 
  1207  0E24                     	;# 
  1208  0E25                     	;# 
  1209  0E28                     	;# 
  1210  0E29                     	;# 
  1211  0E2A                     	;# 
  1212  0E2B                     	;# 
  1213  0E90                     	;# 
  1214  0E91                     	;# 
  1215  0E92                     	;# 
  1216  0E93                     	;# 
  1217  0E94                     	;# 
  1218  0E95                     	;# 
  1219  0E96                     	;# 
  1220  0E97                     	;# 
  1221  0E98                     	;# 
  1222  0E99                     	;# 
  1223  0E9A                     	;# 
  1224  0E9B                     	;# 
  1225  0E9C                     	;# 
  1226  0E9D                     	;# 
  1227  0E9E                     	;# 
  1228  0E9F                     	;# 
  1229  0EA0                     	;# 
  1230  0EA1                     	;# 
  1231  0EA2                     	;# 
  1232  0EA3                     	;# 
  1233  0EA4                     	;# 
  1234  0EA5                     	;# 
  1235  0EA6                     	;# 
  1236  0EA7                     	;# 
  1237  0EA8                     	;# 
  1238  0EA9                     	;# 
  1239  0EAA                     	;# 
  1240  0EAB                     	;# 
  1241  0EAC                     	;# 
  1242  0EAD                     	;# 
  1243  0EAE                     	;# 
  1244  0EAF                     	;# 
  1245  0EB0                     	;# 
  1246  0EB1                     	;# 
  1247  0EB2                     	;# 
  1248  0F0F                     	;# 
  1249  0F10                     	;# 
  1250  0F11                     	;# 
  1251  0F12                     	;# 
  1252  0F13                     	;# 
  1253  0F14                     	;# 
  1254  0F15                     	;# 
  1255  0F16                     	;# 
  1256  0F17                     	;# 
  1257  0F18                     	;# 
  1258  0F19                     	;# 
  1259  0F1A                     	;# 
  1260  0F1B                     	;# 
  1261  0F1C                     	;# 
  1262  0F1D                     	;# 
  1263  0F1E                     	;# 
  1264  0F1F                     	;# 
  1265  0F20                     	;# 
  1266  0F21                     	;# 
  1267  0F22                     	;# 
  1268  0F23                     	;# 
  1269  0F24                     	;# 
  1270  0F25                     	;# 
  1271  0F26                     	;# 
  1272  0F27                     	;# 
  1273  0F28                     	;# 
  1274  0F29                     	;# 
  1275  0F2A                     	;# 
  1276  0F2B                     	;# 
  1277  0F2C                     	;# 
  1278  0F2D                     	;# 
  1279  0F2E                     	;# 
  1280  0F2F                     	;# 
  1281  0F30                     	;# 
  1282  0F31                     	;# 
  1283  0F32                     	;# 
  1284  0F33                     	;# 
  1285  0F34                     	;# 
  1286  0F35                     	;# 
  1287  0F36                     	;# 
  1288  0F37                     	;# 
  1289  0FE4                     	;# 
  1290  0FE5                     	;# 
  1291  0FE6                     	;# 
  1292  0FE7                     	;# 
  1293  0FE8                     	;# 
  1294  0FE9                     	;# 
  1295  0FEA                     	;# 
  1296  0FEB                     	;# 
  1297  0FED                     	;# 
  1298  0FEE                     	;# 
  1299  0FEF                     	;# 
  1300                           
  1301                           	psect	stringtext
  1302  0800                     __pstringtext:	
  1303  0800                     _dpowers:	
  1304  0800  3401               	retlw	1
  1305  0801  3400               	retlw	0
  1306  0802  3400               	retlw	0
  1307  0803  3400               	retlw	0
  1308  0804  340A               	retlw	10
  1309  0805  3400               	retlw	0
  1310  0806  3400               	retlw	0
  1311  0807  3400               	retlw	0
  1312  0808  3464               	retlw	100
  1313  0809  3400               	retlw	0
  1314  080A  3400               	retlw	0
  1315  080B  3400               	retlw	0
  1316  080C  34E8               	retlw	232
  1317  080D  3403               	retlw	3
  1318  080E  3400               	retlw	0
  1319  080F  3400               	retlw	0
  1320  0810  3410               	retlw	16
  1321  0811  3427               	retlw	39
  1322  0812  3400               	retlw	0
  1323  0813  3400               	retlw	0
  1324  0814  34A0               	retlw	160
  1325  0815  3486               	retlw	134
  1326  0816  3401               	retlw	1
  1327  0817  3400               	retlw	0
  1328  0818  3440               	retlw	64
  1329  0819  3442               	retlw	66
  1330  081A  340F               	retlw	15
  1331  081B  3400               	retlw	0
  1332  081C  3480               	retlw	128
  1333  081D  3496               	retlw	150
  1334  081E  3498               	retlw	152
  1335  081F  3400               	retlw	0
  1336  0820  3400               	retlw	0
  1337  0821  34E1               	retlw	225
  1338  0822  34F5               	retlw	245
  1339  0823  3405               	retlw	5
  1340  0824  3400               	retlw	0
  1341  0825  34CA               	retlw	202
  1342  0826  349A               	retlw	154
  1343  0827  343B               	retlw	59
  1344  0828                     __end_of_dpowers:	
  1345  0011                     _PIR1bits	set	17
  1346  007B                     _RD3	set	123
  1347  007A                     _RD2	set	122
  1348  007F                     _RD7	set	127
  1349  007E                     _RD6	set	126
  1350  007D                     _RD5	set	125
  1351  007C                     _RD4	set	124
  1352  008D                     _TRISBbits	set	141
  1353  008F                     _TRISD	set	143
  1354  008F                     _TRISDbits	set	143
  1355  0476                     _TRISC6	set	1142
  1356  0477                     _TRISC7	set	1143
  1357  04CF                     _SPLLEN	set	1231
  1358  04CE                     _IRCF3	set	1230
  1359  04CD                     _IRCF2	set	1229
  1360  04CC                     _IRCF1	set	1228
  1361  04CB                     _IRCF0	set	1227
  1362  04C9                     _SCS1	set	1225
  1363  04C8                     _SCS0	set	1224
  1364  010F                     _LATDbits	set	271
  1365  019A                     _TX1REG	set	410
  1366  0199                     _RC1REG	set	409
  1367  019D                     _RC1STAbits	set	413
  1368  019B                     _SPBRG	set	411
  1369  018D                     _ANSELBbits	set	397
  1370  018F                     _ANSELD	set	399
  1371  0CF5                     _TXEN	set	3317
  1372  0CEC                     _CREN	set	3308
  1373  0CEF                     _SPEN	set	3311
  1374  0CF4                     _SYNC	set	3316
  1375  0CF2                     _BRGH	set	3314
  1376  0E24                     _RXPPSbits	set	3620
  1377  0E0F                     _PPSLOCKbits	set	3599
  1378  0E0F                     _PPSLOCK	set	3599
  1379  0E9A                     _RB2PPSbits	set	3738
  1380  0828                     STR_3:	
  1381  0828  3425               	retlw	37	;'%'
  1382  0829  346C               	retlw	108	;'l'
  1383  082A  3475               	retlw	117	;'u'
  1384  082B  342E               	retlw	46	;'.'
  1385  082C  3425               	retlw	37	;'%'
  1386  082D  3436               	retlw	54	;'6'
  1387  082E  342E               	retlw	46	;'.'
  1388  082F  3436               	retlw	54	;'6'
  1389  0830  346C               	retlw	108	;'l'
  1390  0831  3475               	retlw	117	;'u'
  1391  0832  3400               	retlw	0
  1392  0833                     STR_2:	
  1393  0833  3448               	retlw	72	;'H'
  1394  0834  3465               	retlw	101	;'e'
  1395  0835  346C               	retlw	108	;'l'
  1396  0836  346C               	retlw	108	;'l'
  1397  0837  346F               	retlw	111	;'o'
  1398  0838  3400               	retlw	0
  1399  0839                     STR_1:	
  1400  0839  3452               	retlw	82	;'R'
  1401  083A  3465               	retlw	101	;'e'
  1402  083B  3461               	retlw	97	;'a'
  1403  083C  3464               	retlw	100	;'d'
  1404  083D  3479               	retlw	121	;'y'
  1405  083E  3400               	retlw	0
  1406                           
  1407                           ; #config settings
  1408  0000                     
  1409                           	psect	cinit
  1410  07F6                     start_initialization:	
  1411  07F6                     __initialization:	
  1412                           
  1413                           ; Clear objects allocated to BANK0
  1414  07F6  3032               	movlw	low __pbssBANK0
  1415  07F7  0084               	movwf	4
  1416  07F8  3000               	movlw	high __pbssBANK0
  1417  07F9  0085               	movwf	5
  1418  07FA  3011               	movlw	17
  1419  07FB  3185  252A         	fcall	clear_ram0
  1420  07FD                     end_of_initialization:	
  1421                           ;End of C runtime variable initialization code
  1422                           
  1423  07FD                     __end_of__initialization:	
  1424  07FD  0020               	movlb	0
  1425  07FE  3186  2E0B         	ljmp	_main	;jump to C main() function
  1426                           
  1427                           	psect	bssBANK0
  1428  0032                     __pbssBANK0:	
  1429  0032                     ftoa@buf:	
  1430  0032                     	ds	17
  1431                           
  1432                           	psect	clrtext
  1433  052A                     clear_ram0:	
  1434                           ;	Called with FSR0 containing the base address, and
  1435                           ;	WREG with the size to clear
  1436                           
  1437  052A  0064               	clrwdt	;clear the watchdog before getting into this loop
  1438  052B                     clrloop0:	
  1439  052B  0180               	clrf	0	;clear RAM location pointed to by FSR
  1440  052C  3101               	addfsr 0,1
  1441  052D  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1442  052E  2D2B               	goto	clrloop0	;have we reached the end yet?
  1443  052F  3400               	retlw	0	;all done for this memory range, return
  1444                           
  1445                           	psect	cstackCOMMON
  1446  0070                     __pcstackCOMMON:	
  1447  0070                     ?_EUSART_Write:	
  1448  0070                     ??_EUSART_Write:	
  1449                           ; 1 bytes @ 0x0
  1450                           
  1451  0070                     ?_internal_16:	
  1452                           ; 1 bytes @ 0x0
  1453                           
  1454  0070                     ??_internal_16:	
  1455                           ; 1 bytes @ 0x0
  1456                           
  1457  0070                     ?_Lcd_Port:	
  1458                           ; 1 bytes @ 0x0
  1459                           
  1460  0070                     ??_Lcd_Port:	
  1461                           ; 1 bytes @ 0x0
  1462                           
  1463  0070                     ?_Lcd_Cmd:	
  1464                           ; 1 bytes @ 0x0
  1465                           
  1466  0070                     ?_Lcd_Clear:	
  1467                           ; 1 bytes @ 0x0
  1468                           
  1469  0070                     ?_Lcd_Init:	
  1470                           ; 1 bytes @ 0x0
  1471                           
  1472  0070                     ?_Lcd_Write_Char:	
  1473                           ; 1 bytes @ 0x0
  1474                           
  1475  0070                     ?_initMain:	
  1476                           ; 1 bytes @ 0x0
  1477                           
  1478  0070                     ?_main:	
  1479                           ; 1 bytes @ 0x0
  1480                           
  1481  0070                     ?___aldiv:	
  1482                           ; 1 bytes @ 0x0
  1483                           
  1484  0070                     Lcd_Port@a:	
  1485                           ; 4 bytes @ 0x0
  1486                           
  1487  0070                     EUSART_Write@txData:	
  1488                           ; 1 bytes @ 0x0
  1489                           
  1490  0070                     ___aldiv@divisor:	
  1491                           ; 1 bytes @ 0x0
  1492                           
  1493                           
  1494                           ; 4 bytes @ 0x0
  1495  0070                     	ds	1
  1496  0071                     ?_EUSART_Write_Text:	
  1497  0071                     ??_Lcd_Cmd:	
  1498                           ; 1 bytes @ 0x1
  1499                           
  1500  0071                     ??_Lcd_Write_Char:	
  1501                           ; 1 bytes @ 0x1
  1502                           
  1503  0071                     EUSART_Write_Text@text:	
  1504                           ; 1 bytes @ 0x1
  1505                           
  1506                           
  1507                           ; 2 bytes @ 0x1
  1508  0071                     	ds	1
  1509  0072                     Lcd_Cmd@a:	
  1510  0072                     Lcd_Write_Char@temp:	
  1511                           ; 1 bytes @ 0x2
  1512                           
  1513                           
  1514                           ; 1 bytes @ 0x2
  1515  0072                     	ds	1
  1516  0073                     ??_EUSART_Write_Text:	
  1517  0073                     ??_Lcd_Clear:	
  1518                           ; 1 bytes @ 0x3
  1519                           
  1520  0073                     ?_Lcd_Set_Cursor:	
  1521                           ; 1 bytes @ 0x3
  1522                           
  1523  0073                     ??_Lcd_Init:	
  1524                           ; 1 bytes @ 0x3
  1525                           
  1526  0073                     Lcd_Set_Cursor@b:	
  1527                           ; 1 bytes @ 0x3
  1528                           
  1529  0073                     Lcd_Write_Char@y:	
  1530                           ; 1 bytes @ 0x3
  1531                           
  1532                           
  1533                           ; 1 bytes @ 0x3
  1534  0073                     	ds	1
  1535  0074                     ??_Lcd_Set_Cursor:	
  1536  0074                     ??_initMain:	
  1537                           ; 1 bytes @ 0x4
  1538                           
  1539  0074                     Lcd_Write_Char@a:	
  1540                           ; 1 bytes @ 0x4
  1541                           
  1542  0074                     EUSART_Write_Text@i:	
  1543                           ; 1 bytes @ 0x4
  1544                           
  1545  0074                     ___aldiv@dividend:	
  1546                           ; 2 bytes @ 0x4
  1547                           
  1548                           
  1549                           ; 4 bytes @ 0x4
  1550  0074                     	ds	1
  1551  0075                     ?_Lcd_Write_String:	
  1552  0075                     Lcd_Write_String@a:	
  1553                           ; 1 bytes @ 0x5
  1554                           
  1555                           
  1556                           ; 2 bytes @ 0x5
  1557  0075                     	ds	1
  1558  0076                     Lcd_Set_Cursor@a:	
  1559                           
  1560                           ; 1 bytes @ 0x6
  1561  0076                     	ds	1
  1562  0077                     ??_Lcd_Write_String:	
  1563  0077                     Lcd_Set_Cursor@z:	
  1564                           ; 1 bytes @ 0x7
  1565                           
  1566                           
  1567                           ; 1 bytes @ 0x7
  1568  0077                     	ds	1
  1569  0078                     ??___aldiv:	
  1570  0078                     Lcd_Set_Cursor@y:	
  1571                           ; 1 bytes @ 0x8
  1572                           
  1573  0078                     Lcd_Write_String@i:	
  1574                           ; 1 bytes @ 0x8
  1575                           
  1576                           
  1577                           ; 2 bytes @ 0x8
  1578  0078                     	ds	1
  1579  0079                     Lcd_Set_Cursor@temp:	
  1580  0079                     EUSART_Initialize@x:	
  1581                           ; 1 bytes @ 0x9
  1582                           
  1583                           
  1584                           ; 2 bytes @ 0x9
  1585  0079                     	ds	2
  1586  007B                     ??_main:	
  1587                           
  1588                           ; 1 bytes @ 0xB
  1589  007B                     	ds	2
  1590                           
  1591                           	psect	cstackBANK0
  1592  0020                     __pcstackBANK0:	
  1593  0020                     ___aldiv@counter:	
  1594                           
  1595                           ; 1 bytes @ 0x0
  1596  0020                     	ds	1
  1597  0021                     ___aldiv@sign:	
  1598                           
  1599                           ; 1 bytes @ 0x1
  1600  0021                     	ds	1
  1601  0022                     ___aldiv@quotient:	
  1602                           
  1603                           ; 4 bytes @ 0x2
  1604  0022                     	ds	4
  1605  0026                     ?_EUSART_Initialize:	
  1606  0026                     EUSART_Initialize@baudrate:	
  1607                           ; 1 bytes @ 0x6
  1608                           
  1609                           
  1610                           ; 4 bytes @ 0x6
  1611  0026                     	ds	4
  1612  002A                     ??_EUSART_Initialize:	
  1613                           
  1614                           ; 1 bytes @ 0xA
  1615  002A                     	ds	8
  1616                           
  1617                           	psect	maintext
  1618  060B                     __pmaintext:	
  1619 ;;
  1620 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1621 ;;
  1622 ;; *************** function _main *****************
  1623 ;; Defined at:
  1624 ;;		line 86 in file "Main.c"
  1625 ;; Parameters:    Size  Location     Type
  1626 ;;		None
  1627 ;; Auto vars:     Size  Location     Type
  1628 ;;		None
  1629 ;; Return value:  Size  Location     Type
  1630 ;;                  1    wreg      void 
  1631 ;; Registers used:
  1632 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1633 ;; Tracked objects:
  1634 ;;		On entry : B1F/0
  1635 ;;		On exit  : 0/0
  1636 ;;		Unchanged: 0/0
  1637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1640 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1641 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1642 ;;Total ram usage:        2 bytes
  1643 ;; Hardware stack levels required when called:    4
  1644 ;; This function calls:
  1645 ;;		_EUSART_Initialize
  1646 ;;		_EUSART_Write
  1647 ;;		_EUSART_Write_Text
  1648 ;;		_Lcd_Clear
  1649 ;;		_Lcd_Set_Cursor
  1650 ;;		_Lcd_Write_String
  1651 ;;		_initMain
  1652 ;; This function is called by:
  1653 ;;		Startup code after reset
  1654 ;; This function uses a non-reentrant model
  1655 ;;
  1656                           
  1657                           
  1658                           ;psect for function _main
  1659  060B                     _main:	
  1660                           
  1661                           ;Main.c: 87: initMain();
  1662                           
  1663                           ;incstack = 0
  1664                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1665  060B  3185  25D5  3186   	fcall	_initMain
  1666                           
  1667                           ;Main.c: 90: EUSART_Initialize(19200);
  1668  060E  3000               	movlw	0
  1669  060F  0020               	movlb	0	; select bank0
  1670  0610  00A9               	movwf	EUSART_Initialize@baudrate+3
  1671  0611  3000               	movlw	0
  1672  0612  00A8               	movwf	EUSART_Initialize@baudrate+2
  1673  0613  304B               	movlw	75
  1674  0614  00A7               	movwf	EUSART_Initialize@baudrate+1
  1675  0615  3000               	movlw	0
  1676  0616  00A6               	movwf	EUSART_Initialize@baudrate
  1677  0617  3187  2750  3186   	fcall	_EUSART_Initialize
  1678  061A                     l144:	
  1679                           ;Main.c: 92: while(1){
  1680                           
  1681                           
  1682                           ;Main.c: 94: Lcd_Set_Cursor(1,1);
  1683  061A  01F3               	clrf	Lcd_Set_Cursor@b
  1684  061B  0AF3               	incf	Lcd_Set_Cursor@b,f
  1685  061C  3001               	movlw	1
  1686  061D  3186  264A  3186   	fcall	_Lcd_Set_Cursor
  1687                           
  1688                           ;Main.c: 95: _delay((unsigned long)((5)*(16000000/4000.0)));
  1689  0620  301A               	movlw	26
  1690  0621  00FB               	movwf	??_main
  1691  0622  30F8               	movlw	248
  1692  0623                     u547:	
  1693  0623  0B89               	decfsz	9,f
  1694  0624  2E23               	goto	u547
  1695  0625  0BFB               	decfsz	??_main,f
  1696  0626  2E23               	goto	u547
  1697  0627  3200               	nop2
  1698                           
  1699                           ;Main.c: 96: Lcd_Write_String("Ready");
  1700  0628  3039               	movlw	low (STR_1| (0+32768))
  1701  0629  00F5               	movwf	Lcd_Write_String@a
  1702  062A  3088               	movlw	high (STR_1| (0+32768))
  1703  062B  00F6               	movwf	Lcd_Write_String@a+1
  1704  062C  3185  258F  3186   	fcall	_Lcd_Write_String
  1705                           
  1706                           ;Main.c: 99: EUSART_Write(17);
  1707  062F  3011               	movlw	17
  1708  0630  3185  2530  3186   	fcall	_EUSART_Write
  1709                           
  1710                           ;Main.c: 102: EUSART_Write_Text("Hello");
  1711  0633  3033               	movlw	low (STR_2| (0+32768))
  1712  0634  00F1               	movwf	EUSART_Write_Text@text
  1713  0635  3088               	movlw	high (STR_2| (0+32768))
  1714  0636  00F2               	movwf	EUSART_Write_Text@text+1
  1715  0637  3185  2575  3186   	fcall	_EUSART_Write_Text
  1716                           
  1717                           ;Main.c: 104: _delay((unsigned long)((2000)*(16000000/4000.0)));
  1718  063A  3029               	movlw	41
  1719  063B  00FC               	movwf	??_main+1
  1720  063C  3096               	movlw	150
  1721  063D  00FB               	movwf	??_main
  1722  063E  307F               	movlw	127
  1723  063F                     u557:	
  1724  063F  0B89               	decfsz	9,f
  1725  0640  2E3F               	goto	u557
  1726  0641  0BFB               	decfsz	??_main,f
  1727  0642  2E3F               	goto	u557
  1728  0643  0BFC               	decfsz	??_main+1,f
  1729  0644  2E3F               	goto	u557
  1730  0645  0000               	nop
  1731                           
  1732                           ;Main.c: 105: Lcd_Clear();
  1733  0646  3185  2538  3186   	fcall	_Lcd_Clear
  1734  0649  2E1A               	goto	l144
  1735  064A                     __end_of_main:	
  1736                           ;Main.c: 106: }
  1737                           ;Main.c: 108: return;
  1738                           
  1739                           
  1740                           	psect	text1
  1741  05D5                     __ptext1:	
  1742 ;; *************** function _initMain *****************
  1743 ;; Defined at:
  1744 ;;		line 41 in file "Main.c"
  1745 ;; Parameters:    Size  Location     Type
  1746 ;;		None
  1747 ;; Auto vars:     Size  Location     Type
  1748 ;;		None
  1749 ;; Return value:  Size  Location     Type
  1750 ;;                  1    wreg      void 
  1751 ;; Registers used:
  1752 ;;		wreg, status,2, status,0, pclath, cstack
  1753 ;; Tracked objects:
  1754 ;;		On entry : 0/0
  1755 ;;		On exit  : 0/0
  1756 ;;		Unchanged: 0/0
  1757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1760 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1761 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1762 ;;Total ram usage:        2 bytes
  1763 ;; Hardware stack levels used:    1
  1764 ;; Hardware stack levels required when called:    3
  1765 ;; This function calls:
  1766 ;;		_Lcd_Clear
  1767 ;;		_Lcd_Init
  1768 ;;		_internal_16
  1769 ;; This function is called by:
  1770 ;;		_main
  1771 ;; This function uses a non-reentrant model
  1772 ;;
  1773                           
  1774                           
  1775                           ;psect for function _initMain
  1776  05D5                     _initMain:	
  1777                           
  1778                           ;Main.c: 43: internal_16();
  1779                           
  1780                           ;incstack = 0
  1781                           ; Regs used in _initMain: [wreg+status,2+status,0+pclath+cstack]
  1782  05D5  3185  2540  3185   	fcall	_internal_16
  1783                           
  1784                           ;Main.c: 46: TRISDbits.TRISD1 = 0;
  1785  05D8  0021               	movlb	1	; select bank1
  1786  05D9  108F               	bcf	15,1	;volatile
  1787                           
  1788                           ;Main.c: 49: LATDbits.LATD1 = 0;
  1789  05DA  0022               	movlb	2	; select bank2
  1790  05DB  108F               	bcf	15,1	;volatile
  1791                           
  1792                           ;Main.c: 52: TRISD = 0;
  1793  05DC  0021               	movlb	1	; select bank1
  1794  05DD  018F               	clrf	15	;volatile
  1795                           
  1796                           ;Main.c: 53: ANSELD = 0;
  1797  05DE  0023               	movlb	3	; select bank3
  1798  05DF  018F               	clrf	15	;volatile
  1799                           
  1800                           ;Main.c: 56: Lcd_Init();
  1801  05E0  3186  268A  3185   	fcall	_Lcd_Init
  1802                           
  1803                           ;Main.c: 57: _delay((unsigned long)((100)*(16000000/4000.0)));
  1804  05E3  3003               	movlw	3
  1805  05E4  00F5               	movwf	??_initMain+1
  1806  05E5  3008               	movlw	8
  1807  05E6  00F4               	movwf	??_initMain
  1808  05E7  3077               	movlw	119
  1809  05E8                     u567:	
  1810  05E8  0B89               	decfsz	9,f
  1811  05E9  2DE8               	goto	u567
  1812  05EA  0BF4               	decfsz	??_initMain,f
  1813  05EB  2DE8               	goto	u567
  1814  05EC  0BF5               	decfsz	??_initMain+1,f
  1815  05ED  2DE8               	goto	u567
  1816  05EE  0000               	nop
  1817                           
  1818                           ;Main.c: 58: Lcd_Clear();
  1819  05EF  3185  2538         	fcall	_Lcd_Clear
  1820                           
  1821                           ;Main.c: 60: TRISBbits.TRISB2 = 0;
  1822  05F1  0021               	movlb	1	; select bank1
  1823  05F2  110D               	bcf	13,2	;volatile
  1824                           
  1825                           ;Main.c: 61: ANSELBbits.ANSB2 = 0;
  1826  05F3  0023               	movlb	3	; select bank3
  1827  05F4  110D               	bcf	13,2	;volatile
  1828                           
  1829                           ;Main.c: 66: PPSLOCK = 0x55;
  1830  05F5  3055               	movlw	85
  1831  05F6  003C               	movlb	28	; select bank28
  1832  05F7  008F               	movwf	15	;volatile
  1833                           
  1834                           ;Main.c: 67: PPSLOCK = 0xAA;
  1835  05F8  30AA               	movlw	170
  1836  05F9  008F               	movwf	15	;volatile
  1837                           
  1838                           ;Main.c: 68: PPSLOCKbits.PPSLOCKED = 0x00;
  1839  05FA  100F               	bcf	15,0	;volatile
  1840                           
  1841                           ;Main.c: 70: RB2PPSbits.RB2PPS = 0x14;
  1842  05FB  003D               	movlb	29	; select bank29
  1843  05FC  081A               	movf	26,w	;volatile
  1844  05FD  39E0               	andlw	-32
  1845  05FE  3814               	iorlw	20
  1846  05FF  009A               	movwf	26	;volatile
  1847                           
  1848                           ;Main.c: 71: RXPPSbits.RXPPS = 0x0B;
  1849  0600  003C               	movlb	28	; select bank28
  1850  0601  0824               	movf	36,w	;volatile
  1851  0602  39E0               	andlw	-32
  1852  0603  380B               	iorlw	11
  1853  0604  00A4               	movwf	36	;volatile
  1854                           
  1855                           ;Main.c: 73: PPSLOCK = 0x55;
  1856  0605  3055               	movlw	85
  1857  0606  008F               	movwf	15	;volatile
  1858                           
  1859                           ;Main.c: 74: PPSLOCK = 0xAA;
  1860  0607  30AA               	movlw	170
  1861  0608  008F               	movwf	15	;volatile
  1862                           
  1863                           ;Main.c: 75: PPSLOCKbits.PPSLOCKED = 0x01;
  1864  0609  140F               	bsf	15,0	;volatile
  1865  060A  0008               	return
  1866  060B                     __end_of_initMain:	
  1867                           
  1868                           	psect	text2
  1869  0540                     __ptext2:	
  1870 ;; *************** function _internal_16 *****************
  1871 ;; Defined at:
  1872 ;;		line 56 in file "16F1717_Internal.c"
  1873 ;; Parameters:    Size  Location     Type
  1874 ;;		None
  1875 ;; Auto vars:     Size  Location     Type
  1876 ;;		None
  1877 ;; Return value:  Size  Location     Type
  1878 ;;                  1    wreg      void 
  1879 ;; Registers used:
  1880 ;;		None
  1881 ;; Tracked objects:
  1882 ;;		On entry : 0/0
  1883 ;;		On exit  : 0/0
  1884 ;;		Unchanged: 0/0
  1885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1890 ;;Total ram usage:        0 bytes
  1891 ;; Hardware stack levels used:    1
  1892 ;; This function calls:
  1893 ;;		Nothing
  1894 ;; This function is called by:
  1895 ;;		_initMain
  1896 ;; This function uses a non-reentrant model
  1897 ;;
  1898                           
  1899                           
  1900                           ;psect for function _internal_16
  1901  0540                     _internal_16:	
  1902                           
  1903                           ;16F1717_Internal.c: 58: SCS0 = 0;
  1904                           
  1905                           ;incstack = 0
  1906                           ; Regs used in _internal_16: []
  1907  0540  0021               	movlb	1	; select bank1
  1908  0541  1019               	bcf	25,0	;volatile
  1909                           
  1910                           ;16F1717_Internal.c: 59: SCS1 = 0;
  1911  0542  1099               	bcf	25,1	;volatile
  1912                           
  1913                           ;16F1717_Internal.c: 62: IRCF0 = 1;
  1914  0543  1599               	bsf	25,3	;volatile
  1915                           
  1916                           ;16F1717_Internal.c: 63: IRCF1 = 1;
  1917  0544  1619               	bsf	25,4	;volatile
  1918                           
  1919                           ;16F1717_Internal.c: 64: IRCF2 = 1;
  1920  0545  1699               	bsf	25,5	;volatile
  1921                           
  1922                           ;16F1717_Internal.c: 65: IRCF3 = 1;
  1923  0546  1719               	bsf	25,6	;volatile
  1924                           
  1925                           ;16F1717_Internal.c: 68: SPLLEN = 0;
  1926  0547  1399               	bcf	25,7	;volatile
  1927  0548  0008               	return
  1928  0549                     __end_of_internal_16:	
  1929                           
  1930                           	psect	text3
  1931  068A                     __ptext3:	
  1932 ;; *************** function _Lcd_Init *****************
  1933 ;; Defined at:
  1934 ;;		line 122 in file "LCD.c"
  1935 ;; Parameters:    Size  Location     Type
  1936 ;;		None
  1937 ;; Auto vars:     Size  Location     Type
  1938 ;;		None
  1939 ;; Return value:  Size  Location     Type
  1940 ;;                  1    wreg      void 
  1941 ;; Registers used:
  1942 ;;		wreg, status,2, status,0, pclath, cstack
  1943 ;; Tracked objects:
  1944 ;;		On entry : 0/0
  1945 ;;		On exit  : 0/0
  1946 ;;		Unchanged: 0/0
  1947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1950 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1951 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1952 ;;Total ram usage:        1 bytes
  1953 ;; Hardware stack levels used:    1
  1954 ;; Hardware stack levels required when called:    2
  1955 ;; This function calls:
  1956 ;;		_Lcd_Cmd
  1957 ;;		_Lcd_Port
  1958 ;; This function is called by:
  1959 ;;		_initMain
  1960 ;; This function uses a non-reentrant model
  1961 ;;
  1962                           
  1963                           
  1964                           ;psect for function _Lcd_Init
  1965  068A                     _Lcd_Init:	
  1966                           
  1967                           ;LCD.c: 124: Lcd_Port(0x00);
  1968                           
  1969                           ;incstack = 0
  1970                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1971  068A  3000               	movlw	0
  1972  068B  3185  255D  3186   	fcall	_Lcd_Port
  1973                           
  1974                           ;LCD.c: 125: _delay((unsigned long)((20)*(16000000/4000.0)));
  1975  068E  3068               	movlw	104
  1976  068F  00F3               	movwf	??_Lcd_Init
  1977  0690  30E4               	movlw	228
  1978  0691                     u577:	
  1979  0691  0B89               	decfsz	9,f
  1980  0692  2E91               	goto	u577
  1981  0693  0BF3               	decfsz	??_Lcd_Init,f
  1982  0694  2E91               	goto	u577
  1983  0695  3200               	nop2
  1984                           
  1985                           ;LCD.c: 126: Lcd_Cmd(0x03);
  1986  0696  3003               	movlw	3
  1987  0697  3185  2549  3186   	fcall	_Lcd_Cmd
  1988                           
  1989                           ;LCD.c: 127: _delay((unsigned long)((5)*(16000000/4000.0)));
  1990  069A  301A               	movlw	26
  1991  069B  00F3               	movwf	??_Lcd_Init
  1992  069C  30F8               	movlw	248
  1993  069D                     u587:	
  1994  069D  0B89               	decfsz	9,f
  1995  069E  2E9D               	goto	u587
  1996  069F  0BF3               	decfsz	??_Lcd_Init,f
  1997  06A0  2E9D               	goto	u587
  1998  06A1  3200               	nop2
  1999                           
  2000                           ;LCD.c: 128: Lcd_Cmd(0x03);
  2001  06A2  3003               	movlw	3
  2002  06A3  3185  2549  3186   	fcall	_Lcd_Cmd
  2003                           
  2004                           ;LCD.c: 129: _delay((unsigned long)((11)*(16000000/4000.0)));
  2005  06A6  303A               	movlw	58
  2006  06A7  00F3               	movwf	??_Lcd_Init
  2007  06A8  3023               	movlw	35
  2008  06A9                     u597:	
  2009  06A9  0B89               	decfsz	9,f
  2010  06AA  2EA9               	goto	u597
  2011  06AB  0BF3               	decfsz	??_Lcd_Init,f
  2012  06AC  2EA9               	goto	u597
  2013  06AD  0000               	nop
  2014                           
  2015                           ;LCD.c: 130: Lcd_Cmd(0x03);
  2016  06AE  3003               	movlw	3
  2017  06AF  3185  2549  3186   	fcall	_Lcd_Cmd
  2018                           
  2019                           ;LCD.c: 132: Lcd_Cmd(0x02);
  2020  06B2  3002               	movlw	2
  2021  06B3  3185  2549  3186   	fcall	_Lcd_Cmd
  2022                           
  2023                           ;LCD.c: 133: Lcd_Cmd(0x02);
  2024  06B6  3002               	movlw	2
  2025  06B7  3185  2549  3186   	fcall	_Lcd_Cmd
  2026                           
  2027                           ;LCD.c: 134: Lcd_Cmd(0x08);
  2028  06BA  3008               	movlw	8
  2029  06BB  3185  2549  3186   	fcall	_Lcd_Cmd
  2030                           
  2031                           ;LCD.c: 135: Lcd_Cmd(0x00);
  2032  06BE  3000               	movlw	0
  2033  06BF  3185  2549  3186   	fcall	_Lcd_Cmd
  2034                           
  2035                           ;LCD.c: 136: Lcd_Cmd(0x0C);
  2036  06C2  300C               	movlw	12
  2037  06C3  3185  2549  3186   	fcall	_Lcd_Cmd
  2038                           
  2039                           ;LCD.c: 137: Lcd_Cmd(0x00);
  2040  06C6  3000               	movlw	0
  2041  06C7  3185  2549  3186   	fcall	_Lcd_Cmd
  2042                           
  2043                           ;LCD.c: 138: Lcd_Cmd(0x06);
  2044  06CA  3006               	movlw	6
  2045  06CB  3185  2549         	fcall	_Lcd_Cmd
  2046  06CD  0008               	return
  2047  06CE                     __end_of_Lcd_Init:	
  2048                           
  2049                           	psect	text4
  2050  0538                     __ptext4:	
  2051 ;; *************** function _Lcd_Clear *****************
  2052 ;; Defined at:
  2053 ;;		line 79 in file "LCD.c"
  2054 ;; Parameters:    Size  Location     Type
  2055 ;;		None
  2056 ;; Auto vars:     Size  Location     Type
  2057 ;;		None
  2058 ;; Return value:  Size  Location     Type
  2059 ;;                  1    wreg      void 
  2060 ;; Registers used:
  2061 ;;		wreg, status,2, status,0, pclath, cstack
  2062 ;; Tracked objects:
  2063 ;;		On entry : 0/0
  2064 ;;		On exit  : 0/0
  2065 ;;		Unchanged: 0/0
  2066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2071 ;;Total ram usage:        0 bytes
  2072 ;; Hardware stack levels used:    1
  2073 ;; Hardware stack levels required when called:    2
  2074 ;; This function calls:
  2075 ;;		_Lcd_Cmd
  2076 ;; This function is called by:
  2077 ;;		_initMain
  2078 ;;		_main
  2079 ;; This function uses a non-reentrant model
  2080 ;;
  2081                           
  2082                           
  2083                           ;psect for function _Lcd_Clear
  2084  0538                     _Lcd_Clear:	
  2085                           
  2086                           ;LCD.c: 81: Lcd_Cmd(0);
  2087                           
  2088                           ;incstack = 0
  2089                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2090  0538  3000               	movlw	0
  2091  0539  3185  2549  3185   	fcall	_Lcd_Cmd
  2092                           
  2093                           ;LCD.c: 82: Lcd_Cmd(1);
  2094  053C  3001               	movlw	1
  2095  053D  3185  2549         	fcall	_Lcd_Cmd
  2096  053F  0008               	return
  2097  0540                     __end_of_Lcd_Clear:	
  2098                           
  2099                           	psect	text5
  2100  058F                     __ptext5:	
  2101 ;; *************** function _Lcd_Write_String *****************
  2102 ;; Defined at:
  2103 ;;		line 173 in file "LCD.c"
  2104 ;; Parameters:    Size  Location     Type
  2105 ;;  a               2    5[COMMON] PTR const unsigned char 
  2106 ;;		 -> ftoa@buf(17), STR_1(6), Lcd_Write_Integer@buf(8), 
  2107 ;; Auto vars:     Size  Location     Type
  2108 ;;  i               2    8[COMMON] int 
  2109 ;; Return value:  Size  Location     Type
  2110 ;;                  1    wreg      void 
  2111 ;; Registers used:
  2112 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2113 ;; Tracked objects:
  2114 ;;		On entry : 0/0
  2115 ;;		On exit  : 0/0
  2116 ;;		Unchanged: 0/0
  2117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2118 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2119 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2120 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2121 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2122 ;;Total ram usage:        5 bytes
  2123 ;; Hardware stack levels used:    1
  2124 ;; Hardware stack levels required when called:    2
  2125 ;; This function calls:
  2126 ;;		_Lcd_Write_Char
  2127 ;; This function is called by:
  2128 ;;		_main
  2129 ;;		_Lcd_Write_Integer
  2130 ;;		_Lcd_Write_Float
  2131 ;; This function uses a non-reentrant model
  2132 ;;
  2133                           
  2134                           
  2135                           ;psect for function _Lcd_Write_String
  2136  058F                     _Lcd_Write_String:	
  2137                           
  2138                           ;LCD.c: 175: int i;
  2139                           ;LCD.c: 176: for(i=0;a[i]!='\0';i++)
  2140                           
  2141                           ;incstack = 0
  2142                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2143  058F  01F8               	clrf	Lcd_Write_String@i
  2144  0590  01F9               	clrf	Lcd_Write_String@i+1
  2145  0591                     l972:	
  2146  0591  0875               	movf	Lcd_Write_String@a,w
  2147  0592  0778               	addwf	Lcd_Write_String@i,w
  2148  0593  0084               	movwf	4
  2149  0594  0876               	movf	Lcd_Write_String@a+1,w
  2150  0595  3D79               	addwfc	Lcd_Write_String@i+1,w
  2151  0596  0085               	movwf	5
  2152  0597  0012               	moviw fsr0++
  2153  0598  1903               	btfsc	3,2
  2154  0599  0008               	return
  2155                           
  2156                           ;LCD.c: 177: Lcd_Write_Char(a[i]);
  2157  059A  0875               	movf	Lcd_Write_String@a,w
  2158  059B  0778               	addwf	Lcd_Write_String@i,w
  2159  059C  0084               	movwf	4
  2160  059D  0876               	movf	Lcd_Write_String@a+1,w
  2161  059E  3D79               	addwfc	Lcd_Write_String@i+1,w
  2162  059F  0085               	movwf	5
  2163  05A0  0800               	movf	0,w	;code access
  2164  05A1  3185  25A9  3185   	fcall	_Lcd_Write_Char
  2165  05A4  3001               	movlw	1
  2166  05A5  07F8               	addwf	Lcd_Write_String@i,f
  2167  05A6  3000               	movlw	0
  2168  05A7  3DF9               	addwfc	Lcd_Write_String@i+1,f
  2169  05A8  2D91               	goto	l972
  2170  05A9                     __end_of_Lcd_Write_String:	
  2171                           
  2172                           	psect	text6
  2173  05A9                     __ptext6:	
  2174 ;; *************** function _Lcd_Write_Char *****************
  2175 ;; Defined at:
  2176 ;;		line 149 in file "LCD.c"
  2177 ;; Parameters:    Size  Location     Type
  2178 ;;  a               1    wreg     unsigned char 
  2179 ;; Auto vars:     Size  Location     Type
  2180 ;;  a               1    4[COMMON] unsigned char 
  2181 ;;  y               1    3[COMMON] unsigned char 
  2182 ;;  temp            1    2[COMMON] unsigned char 
  2183 ;; Return value:  Size  Location     Type
  2184 ;;                  1    wreg      void 
  2185 ;; Registers used:
  2186 ;;		wreg, status,2, status,0, pclath, cstack
  2187 ;; Tracked objects:
  2188 ;;		On entry : 0/0
  2189 ;;		On exit  : 0/0
  2190 ;;		Unchanged: 0/0
  2191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2193 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2194 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2195 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2196 ;;Total ram usage:        4 bytes
  2197 ;; Hardware stack levels used:    1
  2198 ;; Hardware stack levels required when called:    1
  2199 ;; This function calls:
  2200 ;;		_Lcd_Port
  2201 ;; This function is called by:
  2202 ;;		_Lcd_Write_String
  2203 ;; This function uses a non-reentrant model
  2204 ;;
  2205                           
  2206                           
  2207                           ;psect for function _Lcd_Write_Char
  2208  05A9                     _Lcd_Write_Char:	
  2209                           
  2210                           ;incstack = 0
  2211                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2212                           ;Lcd_Write_Char@a stored from wreg
  2213  05A9  00F4               	movwf	Lcd_Write_Char@a
  2214                           
  2215                           ;LCD.c: 151: char temp,y;
  2216                           ;LCD.c: 152: temp = a&0x0F;
  2217  05AA  0874               	movf	Lcd_Write_Char@a,w
  2218  05AB  390F               	andlw	15
  2219  05AC  00F1               	movwf	??_Lcd_Write_Char
  2220  05AD  0871               	movf	??_Lcd_Write_Char,w
  2221  05AE  00F2               	movwf	Lcd_Write_Char@temp
  2222                           
  2223                           ;LCD.c: 153: y = a&0xF0;
  2224  05AF  0874               	movf	Lcd_Write_Char@a,w
  2225  05B0  39F0               	andlw	240
  2226  05B1  00F1               	movwf	??_Lcd_Write_Char
  2227  05B2  0871               	movf	??_Lcd_Write_Char,w
  2228  05B3  00F3               	movwf	Lcd_Write_Char@y
  2229                           
  2230                           ;LCD.c: 154: RD2 = 1;
  2231  05B4  0020               	movlb	0	; select bank0
  2232  05B5  150F               	bsf	15,2	;volatile
  2233                           
  2234                           ;LCD.c: 155: Lcd_Port(y>>4);
  2235  05B6  0873               	movf	Lcd_Write_Char@y,w
  2236  05B7  00F1               	movwf	??_Lcd_Write_Char
  2237  05B8  3004               	movlw	4
  2238  05B9                     u55:	
  2239  05B9  36F1               	lsrf	??_Lcd_Write_Char,f
  2240  05BA  0B89               	decfsz	9,f
  2241  05BB  2DB9               	goto	u55
  2242  05BC  0871               	movf	??_Lcd_Write_Char,w
  2243  05BD  3185  255D  3185   	fcall	_Lcd_Port
  2244                           
  2245                           ;LCD.c: 156: RD3 = 1;
  2246  05C0  0020               	movlb	0	; select bank0
  2247  05C1  158F               	bsf	15,3	;volatile
  2248                           
  2249                           ;LCD.c: 157: _delay((unsigned long)((40)*(16000000/4000000.0)));
  2250  05C2  3035               	movlw	53
  2251  05C3                     u607:	
  2252  05C3  0B89               	decfsz	9,f
  2253  05C4  2DC3               	goto	u607
  2254  05C5  0000               	nop
  2255                           
  2256                           ;LCD.c: 158: RD3 = 0;
  2257  05C6  0020               	movlb	0	; select bank0
  2258  05C7  118F               	bcf	15,3	;volatile
  2259                           
  2260                           ;LCD.c: 159: Lcd_Port(temp);
  2261  05C8  0872               	movf	Lcd_Write_Char@temp,w
  2262  05C9  3185  255D  3185   	fcall	_Lcd_Port
  2263                           
  2264                           ;LCD.c: 160: RD3 = 1;
  2265  05CC  0020               	movlb	0	; select bank0
  2266  05CD  158F               	bsf	15,3	;volatile
  2267                           
  2268                           ;LCD.c: 161: _delay((unsigned long)((40)*(16000000/4000000.0)));
  2269  05CE  3035               	movlw	53
  2270  05CF                     u617:	
  2271  05CF  0B89               	decfsz	9,f
  2272  05D0  2DCF               	goto	u617
  2273  05D1  0000               	nop
  2274                           
  2275                           ;LCD.c: 162: RD3 = 0;
  2276  05D2  0020               	movlb	0	; select bank0
  2277  05D3  118F               	bcf	15,3	;volatile
  2278  05D4  0008               	return
  2279  05D5                     __end_of_Lcd_Write_Char:	
  2280                           
  2281                           	psect	text7
  2282  064A                     __ptext7:	
  2283 ;; *************** function _Lcd_Set_Cursor *****************
  2284 ;; Defined at:
  2285 ;;		line 93 in file "LCD.c"
  2286 ;; Parameters:    Size  Location     Type
  2287 ;;  a               1    wreg     unsigned char 
  2288 ;;  b               1    3[COMMON] unsigned char 
  2289 ;; Auto vars:     Size  Location     Type
  2290 ;;  a               1    6[COMMON] unsigned char 
  2291 ;;  temp            1    9[COMMON] unsigned char 
  2292 ;;  y               1    8[COMMON] unsigned char 
  2293 ;;  z               1    7[COMMON] unsigned char 
  2294 ;; Return value:  Size  Location     Type
  2295 ;;                  1    wreg      void 
  2296 ;; Registers used:
  2297 ;;		wreg, status,2, status,0, pclath, cstack
  2298 ;; Tracked objects:
  2299 ;;		On entry : 0/0
  2300 ;;		On exit  : 0/0
  2301 ;;		Unchanged: 0/0
  2302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2303 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2304 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2305 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2306 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2307 ;;Total ram usage:        7 bytes
  2308 ;; Hardware stack levels used:    1
  2309 ;; Hardware stack levels required when called:    2
  2310 ;; This function calls:
  2311 ;;		_Lcd_Cmd
  2312 ;; This function is called by:
  2313 ;;		_main
  2314 ;; This function uses a non-reentrant model
  2315 ;;
  2316                           
  2317                           
  2318                           ;psect for function _Lcd_Set_Cursor
  2319  064A                     _Lcd_Set_Cursor:	
  2320                           
  2321                           ;incstack = 0
  2322                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2323                           ;Lcd_Set_Cursor@a stored from wreg
  2324  064A  00F6               	movwf	Lcd_Set_Cursor@a
  2325                           
  2326                           ;LCD.c: 95: char temp,z,y;
  2327                           ;LCD.c: 96: if(a == 1)
  2328  064B  0376               	decf	Lcd_Set_Cursor@a,w
  2329  064C  1D03               	btfss	3,2
  2330  064D  2E6A               	goto	l956
  2331                           
  2332                           ;LCD.c: 97: {
  2333                           ;LCD.c: 98: temp = 0x80 + b - 1;
  2334  064E  0873               	movf	Lcd_Set_Cursor@b,w
  2335  064F  3E7F               	addlw	127
  2336  0650  00F4               	movwf	??_Lcd_Set_Cursor
  2337  0651  0874               	movf	??_Lcd_Set_Cursor,w
  2338  0652  00F9               	movwf	Lcd_Set_Cursor@temp
  2339                           
  2340                           ;LCD.c: 99: z = temp>>4;
  2341  0653  0879               	movf	Lcd_Set_Cursor@temp,w
  2342  0654  00F4               	movwf	??_Lcd_Set_Cursor
  2343  0655  3004               	movlw	4
  2344  0656                     u435:	
  2345  0656  36F4               	lsrf	??_Lcd_Set_Cursor,f
  2346  0657  0B89               	decfsz	9,f
  2347  0658  2E56               	goto	u435
  2348  0659  0874               	movf	??_Lcd_Set_Cursor,w
  2349  065A  00F5               	movwf	??_Lcd_Set_Cursor+1
  2350  065B  0875               	movf	??_Lcd_Set_Cursor+1,w
  2351  065C  00F7               	movwf	Lcd_Set_Cursor@z
  2352                           
  2353                           ;LCD.c: 100: y = temp & 0x0F;
  2354  065D  0879               	movf	Lcd_Set_Cursor@temp,w
  2355  065E  390F               	andlw	15
  2356  065F  00F4               	movwf	??_Lcd_Set_Cursor
  2357  0660  0874               	movf	??_Lcd_Set_Cursor,w
  2358  0661  00F8               	movwf	Lcd_Set_Cursor@y
  2359                           
  2360                           ;LCD.c: 101: Lcd_Cmd(z);
  2361  0662  0877               	movf	Lcd_Set_Cursor@z,w
  2362  0663  3185  2549  3186   	fcall	_Lcd_Cmd
  2363                           
  2364                           ;LCD.c: 102: Lcd_Cmd(y);
  2365  0666  0878               	movf	Lcd_Set_Cursor@y,w
  2366  0667  3185  2549         	fcall	_Lcd_Cmd
  2367                           
  2368                           ;LCD.c: 103: }
  2369  0669  0008               	return
  2370  066A                     l956:	
  2371                           
  2372                           ;LCD.c: 104: else if(a == 2)
  2373  066A  3002               	movlw	2
  2374  066B  0676               	xorwf	Lcd_Set_Cursor@a,w
  2375  066C  1D03               	btfss	3,2
  2376  066D  0008               	return
  2377                           
  2378                           ;LCD.c: 105: {
  2379                           ;LCD.c: 106: temp = 0xC0 + b - 1;
  2380  066E  0873               	movf	Lcd_Set_Cursor@b,w
  2381  066F  3EBF               	addlw	191
  2382  0670  00F4               	movwf	??_Lcd_Set_Cursor
  2383  0671  0874               	movf	??_Lcd_Set_Cursor,w
  2384  0672  00F9               	movwf	Lcd_Set_Cursor@temp
  2385                           
  2386                           ;LCD.c: 107: z = temp>>4;
  2387  0673  0879               	movf	Lcd_Set_Cursor@temp,w
  2388  0674  00F4               	movwf	??_Lcd_Set_Cursor
  2389  0675  3004               	movlw	4
  2390  0676                     u455:	
  2391  0676  36F4               	lsrf	??_Lcd_Set_Cursor,f
  2392  0677  0B89               	decfsz	9,f
  2393  0678  2E76               	goto	u455
  2394  0679  0874               	movf	??_Lcd_Set_Cursor,w
  2395  067A  00F5               	movwf	??_Lcd_Set_Cursor+1
  2396  067B  0875               	movf	??_Lcd_Set_Cursor+1,w
  2397  067C  00F7               	movwf	Lcd_Set_Cursor@z
  2398                           
  2399                           ;LCD.c: 108: y = temp & 0x0F;
  2400  067D  0879               	movf	Lcd_Set_Cursor@temp,w
  2401  067E  390F               	andlw	15
  2402  067F  00F4               	movwf	??_Lcd_Set_Cursor
  2403  0680  0874               	movf	??_Lcd_Set_Cursor,w
  2404  0681  00F8               	movwf	Lcd_Set_Cursor@y
  2405                           
  2406                           ;LCD.c: 109: Lcd_Cmd(z);
  2407  0682  0877               	movf	Lcd_Set_Cursor@z,w
  2408  0683  3185  2549  3186   	fcall	_Lcd_Cmd
  2409                           
  2410                           ;LCD.c: 110: Lcd_Cmd(y);
  2411  0686  0878               	movf	Lcd_Set_Cursor@y,w
  2412  0687  3185  2549         	fcall	_Lcd_Cmd
  2413  0689  0008               	return
  2414  068A                     __end_of_Lcd_Set_Cursor:	
  2415                           
  2416                           	psect	text8
  2417  0549                     __ptext8:	
  2418 ;; *************** function _Lcd_Cmd *****************
  2419 ;; Defined at:
  2420 ;;		line 62 in file "LCD.c"
  2421 ;; Parameters:    Size  Location     Type
  2422 ;;  a               1    wreg     unsigned char 
  2423 ;; Auto vars:     Size  Location     Type
  2424 ;;  a               1    2[COMMON] unsigned char 
  2425 ;; Return value:  Size  Location     Type
  2426 ;;                  1    wreg      void 
  2427 ;; Registers used:
  2428 ;;		wreg, status,2, status,0, pclath, cstack
  2429 ;; Tracked objects:
  2430 ;;		On entry : 0/0
  2431 ;;		On exit  : 0/0
  2432 ;;		Unchanged: 0/0
  2433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2435 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2436 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2437 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2438 ;;Total ram usage:        2 bytes
  2439 ;; Hardware stack levels used:    1
  2440 ;; Hardware stack levels required when called:    1
  2441 ;; This function calls:
  2442 ;;		_Lcd_Port
  2443 ;; This function is called by:
  2444 ;;		_Lcd_Clear
  2445 ;;		_Lcd_Set_Cursor
  2446 ;;		_Lcd_Init
  2447 ;;		_Lcd_Shift_Right
  2448 ;;		_Lcd_Shift_Left
  2449 ;; This function uses a non-reentrant model
  2450 ;;
  2451                           
  2452                           
  2453                           ;psect for function _Lcd_Cmd
  2454  0549                     _Lcd_Cmd:	
  2455                           
  2456                           ;incstack = 0
  2457                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2458                           ;Lcd_Cmd@a stored from wreg
  2459  0549  00F2               	movwf	Lcd_Cmd@a
  2460                           
  2461                           ;LCD.c: 64: RD2 = 0;
  2462  054A  0020               	movlb	0	; select bank0
  2463  054B  110F               	bcf	15,2	;volatile
  2464                           
  2465                           ;LCD.c: 65: Lcd_Port(a);
  2466  054C  0872               	movf	Lcd_Cmd@a,w
  2467  054D  3185  255D  3185   	fcall	_Lcd_Port
  2468                           
  2469                           ;LCD.c: 66: RD3 = 1;
  2470  0550  0020               	movlb	0	; select bank0
  2471  0551  158F               	bsf	15,3	;volatile
  2472                           
  2473                           ;LCD.c: 67: _delay((unsigned long)((4)*(16000000/4000.0)));
  2474  0552  3015               	movlw	21
  2475  0553  00F1               	movwf	??_Lcd_Cmd
  2476  0554  30C6               	movlw	198
  2477  0555                     u627:	
  2478  0555  0B89               	decfsz	9,f
  2479  0556  2D55               	goto	u627
  2480  0557  0BF1               	decfsz	??_Lcd_Cmd,f
  2481  0558  2D55               	goto	u627
  2482  0559  3200               	nop2
  2483                           
  2484                           ;LCD.c: 68: RD3 = 0;
  2485  055A  0020               	movlb	0	; select bank0
  2486  055B  118F               	bcf	15,3	;volatile
  2487  055C  0008               	return
  2488  055D                     __end_of_Lcd_Cmd:	
  2489                           
  2490                           	psect	text9
  2491  055D                     __ptext9:	
  2492 ;; *************** function _Lcd_Port *****************
  2493 ;; Defined at:
  2494 ;;		line 31 in file "LCD.c"
  2495 ;; Parameters:    Size  Location     Type
  2496 ;;  a               1    wreg     unsigned char 
  2497 ;; Auto vars:     Size  Location     Type
  2498 ;;  a               1    0[COMMON] unsigned char 
  2499 ;; Return value:  Size  Location     Type
  2500 ;;                  1    wreg      void 
  2501 ;; Registers used:
  2502 ;;		wreg
  2503 ;; Tracked objects:
  2504 ;;		On entry : 0/0
  2505 ;;		On exit  : 0/0
  2506 ;;		Unchanged: 0/0
  2507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2509 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2511 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2512 ;;Total ram usage:        1 bytes
  2513 ;; Hardware stack levels used:    1
  2514 ;; This function calls:
  2515 ;;		Nothing
  2516 ;; This function is called by:
  2517 ;;		_Lcd_Cmd
  2518 ;;		_Lcd_Init
  2519 ;;		_Lcd_Write_Char
  2520 ;; This function uses a non-reentrant model
  2521 ;;
  2522                           
  2523                           
  2524                           ;psect for function _Lcd_Port
  2525  055D                     _Lcd_Port:	
  2526                           
  2527                           ;incstack = 0
  2528                           ; Regs used in _Lcd_Port: [wreg]
  2529                           ;Lcd_Port@a stored from wreg
  2530  055D  00F0               	movwf	Lcd_Port@a
  2531                           
  2532                           ;LCD.c: 33: if(a & 1)
  2533  055E  1C70               	btfss	Lcd_Port@a,0
  2534  055F  2D63               	goto	l56
  2535                           
  2536                           ;LCD.c: 34: RD4 = 1;
  2537  0560  0020               	movlb	0	; select bank0
  2538  0561  160F               	bsf	15,4	;volatile
  2539  0562  2D65               	goto	l660
  2540  0563                     l56:	
  2541                           
  2542                           ;LCD.c: 35: else
  2543                           ;LCD.c: 36: RD4 = 0;
  2544  0563  0020               	movlb	0	; select bank0
  2545  0564  120F               	bcf	15,4	;volatile
  2546  0565                     l660:	
  2547                           
  2548                           ;LCD.c: 38: if(a & 2)
  2549  0565  1CF0               	btfss	Lcd_Port@a,1
  2550  0566  2D69               	goto	l58
  2551                           
  2552                           ;LCD.c: 39: RD5 = 1;
  2553  0567  168F               	bsf	15,5	;volatile
  2554  0568  2D6A               	goto	l664
  2555  0569                     l58:	
  2556                           
  2557                           ;LCD.c: 40: else
  2558                           ;LCD.c: 41: RD5 = 0;
  2559  0569  128F               	bcf	15,5	;volatile
  2560  056A                     l664:	
  2561                           
  2562                           ;LCD.c: 43: if(a & 4)
  2563  056A  1D70               	btfss	Lcd_Port@a,2
  2564  056B  2D6E               	goto	l60
  2565                           
  2566                           ;LCD.c: 44: RD6 = 1;
  2567  056C  170F               	bsf	15,6	;volatile
  2568  056D  2D6F               	goto	l668
  2569  056E                     l60:	
  2570                           
  2571                           ;LCD.c: 45: else
  2572                           ;LCD.c: 46: RD6 = 0;
  2573  056E  130F               	bcf	15,6	;volatile
  2574  056F                     l668:	
  2575                           
  2576                           ;LCD.c: 48: if(a & 8)
  2577  056F  1DF0               	btfss	Lcd_Port@a,3
  2578  0570  2D73               	goto	l62
  2579                           
  2580                           ;LCD.c: 49: RD7 = 1;
  2581  0571  178F               	bsf	15,7	;volatile
  2582  0572  0008               	return
  2583  0573                     l62:	
  2584                           
  2585                           ;LCD.c: 50: else
  2586                           ;LCD.c: 51: RD7 = 0;
  2587  0573  138F               	bcf	15,7	;volatile
  2588  0574  0008               	return
  2589  0575                     __end_of_Lcd_Port:	
  2590                           
  2591                           	psect	text10
  2592  0575                     __ptext10:	
  2593 ;; *************** function _EUSART_Write_Text *****************
  2594 ;; Defined at:
  2595 ;;		line 125 in file "EUSART.c"
  2596 ;; Parameters:    Size  Location     Type
  2597 ;;  text            2    1[COMMON] PTR unsigned char 
  2598 ;;		 -> STR_2(6), 
  2599 ;; Auto vars:     Size  Location     Type
  2600 ;;  i               2    4[COMMON] int 
  2601 ;; Return value:  Size  Location     Type
  2602 ;;                  1    wreg      void 
  2603 ;; Registers used:
  2604 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2605 ;; Tracked objects:
  2606 ;;		On entry : 0/0
  2607 ;;		On exit  : 0/0
  2608 ;;		Unchanged: 0/0
  2609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2610 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2611 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2612 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2613 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2614 ;;Total ram usage:        5 bytes
  2615 ;; Hardware stack levels used:    1
  2616 ;; Hardware stack levels required when called:    1
  2617 ;; This function calls:
  2618 ;;		_EUSART_Write
  2619 ;; This function is called by:
  2620 ;;		_main
  2621 ;; This function uses a non-reentrant model
  2622 ;;
  2623                           
  2624                           
  2625                           ;psect for function _EUSART_Write_Text
  2626  0575                     _EUSART_Write_Text:	
  2627                           
  2628                           ;EUSART.c: 127: int i;
  2629                           ;EUSART.c: 128: for(i=0;text[i]!='\0';i++)
  2630                           
  2631                           ;incstack = 0
  2632                           ; Regs used in _EUSART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2633  0575  01F4               	clrf	EUSART_Write_Text@i
  2634  0576  01F5               	clrf	EUSART_Write_Text@i+1
  2635  0577                     l1006:	
  2636  0577  0871               	movf	EUSART_Write_Text@text,w
  2637  0578  0774               	addwf	EUSART_Write_Text@i,w
  2638  0579  0084               	movwf	4
  2639  057A  0872               	movf	EUSART_Write_Text@text+1,w
  2640  057B  3D75               	addwfc	EUSART_Write_Text@i+1,w
  2641  057C  0085               	movwf	5
  2642  057D  0012               	moviw fsr0++
  2643  057E  1903               	btfsc	3,2
  2644  057F  0008               	return
  2645                           
  2646                           ;EUSART.c: 129: EUSART_Write(text[i]);
  2647  0580  0871               	movf	EUSART_Write_Text@text,w
  2648  0581  0774               	addwf	EUSART_Write_Text@i,w
  2649  0582  0084               	movwf	4
  2650  0583  0872               	movf	EUSART_Write_Text@text+1,w
  2651  0584  3D75               	addwfc	EUSART_Write_Text@i+1,w
  2652  0585  0085               	movwf	5
  2653  0586  0800               	movf	0,w	;code access
  2654  0587  3185  2530  3185   	fcall	_EUSART_Write
  2655  058A  3001               	movlw	1
  2656  058B  07F4               	addwf	EUSART_Write_Text@i,f
  2657  058C  3000               	movlw	0
  2658  058D  3DF5               	addwfc	EUSART_Write_Text@i+1,f
  2659  058E  2D77               	goto	l1006
  2660  058F                     __end_of_EUSART_Write_Text:	
  2661                           
  2662                           	psect	text11
  2663  0530                     __ptext11:	
  2664 ;; *************** function _EUSART_Write *****************
  2665 ;; Defined at:
  2666 ;;		line 98 in file "EUSART.c"
  2667 ;; Parameters:    Size  Location     Type
  2668 ;;  txData          1    wreg     unsigned char 
  2669 ;; Auto vars:     Size  Location     Type
  2670 ;;  txData          1    0[COMMON] unsigned char 
  2671 ;; Return value:  Size  Location     Type
  2672 ;;                  1    wreg      void 
  2673 ;; Registers used:
  2674 ;;		wreg
  2675 ;; Tracked objects:
  2676 ;;		On entry : 0/0
  2677 ;;		On exit  : 0/0
  2678 ;;		Unchanged: 0/0
  2679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2681 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2683 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2684 ;;Total ram usage:        1 bytes
  2685 ;; Hardware stack levels used:    1
  2686 ;; This function calls:
  2687 ;;		Nothing
  2688 ;; This function is called by:
  2689 ;;		_main
  2690 ;;		_EUSART_Write_Text
  2691 ;; This function uses a non-reentrant model
  2692 ;;
  2693                           
  2694                           
  2695                           ;psect for function _EUSART_Write
  2696  0530                     _EUSART_Write:	
  2697                           
  2698                           ;incstack = 0
  2699                           ; Regs used in _EUSART_Write: [wreg]
  2700                           ;EUSART_Write@txData stored from wreg
  2701  0530  00F0               	movwf	EUSART_Write@txData
  2702  0531                     l186:	
  2703                           ;EUSART.c: 101: {
  2704                           
  2705                           ;EUSART.c: 100: while(0 == PIR1bits.TXIF)
  2706                           
  2707  0531  0020               	movlb	0	; select bank0
  2708  0532  1E11               	btfss	17,4	;volatile
  2709  0533  2D31               	goto	l186
  2710                           
  2711                           ;EUSART.c: 102: }
  2712                           ;EUSART.c: 104: TX1REG = txData;
  2713  0534  0870               	movf	EUSART_Write@txData,w
  2714  0535  0023               	movlb	3	; select bank3
  2715  0536  009A               	movwf	26	;volatile
  2716  0537  0008               	return
  2717  0538                     __end_of_EUSART_Write:	
  2718                           
  2719                           	psect	text12
  2720  0750                     __ptext12:	
  2721 ;; *************** function _EUSART_Initialize *****************
  2722 ;; Defined at:
  2723 ;;		line 34 in file "EUSART.c"
  2724 ;; Parameters:    Size  Location     Type
  2725 ;;  baudrate        4    6[BANK0 ] const long 
  2726 ;; Auto vars:     Size  Location     Type
  2727 ;;  x               2    9[COMMON] unsigned int 
  2728 ;; Return value:  Size  Location     Type
  2729 ;;                  1    wreg      unsigned char 
  2730 ;; Registers used:
  2731 ;;		wreg, status,2, status,0, pclath, cstack
  2732 ;; Tracked objects:
  2733 ;;		On entry : 0/0
  2734 ;;		On exit  : 0/0
  2735 ;;		Unchanged: 0/0
  2736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2737 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2738 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2739 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2740 ;;      Totals:         2      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2741 ;;Total ram usage:       14 bytes
  2742 ;; Hardware stack levels used:    1
  2743 ;; Hardware stack levels required when called:    1
  2744 ;; This function calls:
  2745 ;;		___aldiv
  2746 ;; This function is called by:
  2747 ;;		_main
  2748 ;; This function uses a non-reentrant model
  2749 ;;
  2750                           
  2751                           
  2752                           ;psect for function _EUSART_Initialize
  2753  0750                     _EUSART_Initialize:	
  2754                           
  2755                           ;EUSART.c: 36: unsigned int x;
  2756                           ;EUSART.c: 37: x = (16000000 - baudrate*64)/(baudrate*64);
  2757                           
  2758                           ;incstack = 0
  2759                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2760  0750  0020               	movlb	0	; select bank0
  2761  0751  0826               	movf	EUSART_Initialize@baudrate,w
  2762  0752  00AA               	movwf	??_EUSART_Initialize
  2763  0753  0827               	movf	EUSART_Initialize@baudrate+1,w
  2764  0754  00AB               	movwf	??_EUSART_Initialize+1
  2765  0755  0828               	movf	EUSART_Initialize@baudrate+2,w
  2766  0756  00AC               	movwf	??_EUSART_Initialize+2
  2767  0757  0829               	movf	EUSART_Initialize@baudrate+3,w
  2768  0758  00AD               	movwf	??_EUSART_Initialize+3
  2769  0759  3006               	movlw	6
  2770  075A                     u475:	
  2771  075A  35AA               	lslf	??_EUSART_Initialize,f
  2772  075B  0DAB               	rlf	??_EUSART_Initialize+1,f
  2773  075C  0DAC               	rlf	??_EUSART_Initialize+2,f
  2774  075D  0DAD               	rlf	??_EUSART_Initialize+3,f
  2775  075E  0B89               	decfsz	9,f
  2776  075F  2F5A               	goto	u475
  2777  0760  082D               	movf	??_EUSART_Initialize+3,w
  2778  0761  00F3               	movwf	___aldiv@divisor+3
  2779  0762  082C               	movf	??_EUSART_Initialize+2,w
  2780  0763  00F2               	movwf	___aldiv@divisor+2
  2781  0764  082B               	movf	??_EUSART_Initialize+1,w
  2782  0765  00F1               	movwf	___aldiv@divisor+1
  2783  0766  082A               	movf	??_EUSART_Initialize,w
  2784  0767  00F0               	movwf	___aldiv@divisor
  2785  0768  0826               	movf	EUSART_Initialize@baudrate,w
  2786  0769  00AE               	movwf	??_EUSART_Initialize+4
  2787  076A  0827               	movf	EUSART_Initialize@baudrate+1,w
  2788  076B  00AF               	movwf	??_EUSART_Initialize+5
  2789  076C  0828               	movf	EUSART_Initialize@baudrate+2,w
  2790  076D  00B0               	movwf	??_EUSART_Initialize+6
  2791  076E  0829               	movf	EUSART_Initialize@baudrate+3,w
  2792  076F  00B1               	movwf	??_EUSART_Initialize+7
  2793  0770  3006               	movlw	6
  2794  0771                     u485:	
  2795  0771  35AE               	lslf	??_EUSART_Initialize+4,f
  2796  0772  0DAF               	rlf	??_EUSART_Initialize+5,f
  2797  0773  0DB0               	rlf	??_EUSART_Initialize+6,f
  2798  0774  0DB1               	rlf	??_EUSART_Initialize+7,f
  2799  0775  0B89               	decfsz	9,f
  2800  0776  2F71               	goto	u485
  2801  0777  09AE               	comf	??_EUSART_Initialize+4,f
  2802  0778  09AF               	comf	??_EUSART_Initialize+5,f
  2803  0779  09B0               	comf	??_EUSART_Initialize+6,f
  2804  077A  09B1               	comf	??_EUSART_Initialize+7,f
  2805  077B  0AAE               	incf	??_EUSART_Initialize+4,f
  2806  077C  1903               	skipnz
  2807  077D  0AAF               	incf	??_EUSART_Initialize+5,f
  2808  077E  1903               	skipnz
  2809  077F  0AB0               	incf	??_EUSART_Initialize+6,f
  2810  0780  1903               	skipnz
  2811  0781  0AB1               	incf	??_EUSART_Initialize+7,f
  2812  0782  3000               	movlw	0
  2813  0783  072E               	addwf	??_EUSART_Initialize+4,w
  2814  0784  00F4               	movwf	___aldiv@dividend
  2815  0785  3024               	movlw	36
  2816  0786  3D2F               	addwfc	??_EUSART_Initialize+5,w
  2817  0787  00F5               	movwf	___aldiv@dividend+1
  2818  0788  30F4               	movlw	244
  2819  0789  3D30               	addwfc	??_EUSART_Initialize+6,w
  2820  078A  00F6               	movwf	___aldiv@dividend+2
  2821  078B  3000               	movlw	0
  2822  078C  3D31               	addwfc	??_EUSART_Initialize+7,w
  2823  078D  00F7               	movwf	___aldiv@dividend+3
  2824  078E  3186  26CE  3187   	fcall	___aldiv
  2825  0791  0871               	movf	?___aldiv+1,w
  2826  0792  00FA               	movwf	EUSART_Initialize@x+1
  2827  0793  0870               	movf	?___aldiv,w
  2828  0794  00F9               	movwf	EUSART_Initialize@x
  2829                           
  2830                           ;EUSART.c: 38: if(x>255)
  2831  0795  3001               	movlw	1
  2832  0796  027A               	subwf	EUSART_Initialize@x+1,w
  2833  0797  3000               	movlw	0
  2834  0798  1903               	skipnz
  2835  0799  0279               	subwf	EUSART_Initialize@x,w
  2836  079A  1C03               	skipc
  2837  079B  2FE3               	goto	l982
  2838                           
  2839                           ;EUSART.c: 39: {
  2840                           ;EUSART.c: 40: x = (16000000 - baudrate*16)/(baudrate*16);
  2841  079C  0020               	movlb	0	; select bank0
  2842  079D  0826               	movf	EUSART_Initialize@baudrate,w
  2843  079E  00AA               	movwf	??_EUSART_Initialize
  2844  079F  0827               	movf	EUSART_Initialize@baudrate+1,w
  2845  07A0  00AB               	movwf	??_EUSART_Initialize+1
  2846  07A1  0828               	movf	EUSART_Initialize@baudrate+2,w
  2847  07A2  00AC               	movwf	??_EUSART_Initialize+2
  2848  07A3  0829               	movf	EUSART_Initialize@baudrate+3,w
  2849  07A4  00AD               	movwf	??_EUSART_Initialize+3
  2850  07A5  3004               	movlw	4
  2851  07A6                     u505:	
  2852  07A6  35AA               	lslf	??_EUSART_Initialize,f
  2853  07A7  0DAB               	rlf	??_EUSART_Initialize+1,f
  2854  07A8  0DAC               	rlf	??_EUSART_Initialize+2,f
  2855  07A9  0DAD               	rlf	??_EUSART_Initialize+3,f
  2856  07AA  0B89               	decfsz	9,f
  2857  07AB  2FA6               	goto	u505
  2858  07AC  082D               	movf	??_EUSART_Initialize+3,w
  2859  07AD  00F3               	movwf	___aldiv@divisor+3
  2860  07AE  082C               	movf	??_EUSART_Initialize+2,w
  2861  07AF  00F2               	movwf	___aldiv@divisor+2
  2862  07B0  082B               	movf	??_EUSART_Initialize+1,w
  2863  07B1  00F1               	movwf	___aldiv@divisor+1
  2864  07B2  082A               	movf	??_EUSART_Initialize,w
  2865  07B3  00F0               	movwf	___aldiv@divisor
  2866  07B4  0826               	movf	EUSART_Initialize@baudrate,w
  2867  07B5  00AE               	movwf	??_EUSART_Initialize+4
  2868  07B6  0827               	movf	EUSART_Initialize@baudrate+1,w
  2869  07B7  00AF               	movwf	??_EUSART_Initialize+5
  2870  07B8  0828               	movf	EUSART_Initialize@baudrate+2,w
  2871  07B9  00B0               	movwf	??_EUSART_Initialize+6
  2872  07BA  0829               	movf	EUSART_Initialize@baudrate+3,w
  2873  07BB  00B1               	movwf	??_EUSART_Initialize+7
  2874  07BC  3004               	movlw	4
  2875  07BD                     u515:	
  2876  07BD  35AE               	lslf	??_EUSART_Initialize+4,f
  2877  07BE  0DAF               	rlf	??_EUSART_Initialize+5,f
  2878  07BF  0DB0               	rlf	??_EUSART_Initialize+6,f
  2879  07C0  0DB1               	rlf	??_EUSART_Initialize+7,f
  2880  07C1  0B89               	decfsz	9,f
  2881  07C2  2FBD               	goto	u515
  2882  07C3  09AE               	comf	??_EUSART_Initialize+4,f
  2883  07C4  09AF               	comf	??_EUSART_Initialize+5,f
  2884  07C5  09B0               	comf	??_EUSART_Initialize+6,f
  2885  07C6  09B1               	comf	??_EUSART_Initialize+7,f
  2886  07C7  0AAE               	incf	??_EUSART_Initialize+4,f
  2887  07C8  1903               	skipnz
  2888  07C9  0AAF               	incf	??_EUSART_Initialize+5,f
  2889  07CA  1903               	skipnz
  2890  07CB  0AB0               	incf	??_EUSART_Initialize+6,f
  2891  07CC  1903               	skipnz
  2892  07CD  0AB1               	incf	??_EUSART_Initialize+7,f
  2893  07CE  3000               	movlw	0
  2894  07CF  072E               	addwf	??_EUSART_Initialize+4,w
  2895  07D0  00F4               	movwf	___aldiv@dividend
  2896  07D1  3024               	movlw	36
  2897  07D2  3D2F               	addwfc	??_EUSART_Initialize+5,w
  2898  07D3  00F5               	movwf	___aldiv@dividend+1
  2899  07D4  30F4               	movlw	244
  2900  07D5  3D30               	addwfc	??_EUSART_Initialize+6,w
  2901  07D6  00F6               	movwf	___aldiv@dividend+2
  2902  07D7  3000               	movlw	0
  2903  07D8  3D31               	addwfc	??_EUSART_Initialize+7,w
  2904  07D9  00F7               	movwf	___aldiv@dividend+3
  2905  07DA  3186  26CE  3187   	fcall	___aldiv
  2906  07DD  0871               	movf	?___aldiv+1,w
  2907  07DE  00FA               	movwf	EUSART_Initialize@x+1
  2908  07DF  0870               	movf	?___aldiv,w
  2909  07E0  00F9               	movwf	EUSART_Initialize@x
  2910                           
  2911                           ;EUSART.c: 41: BRGH = 1;
  2912  07E1  0023               	movlb	3	; select bank3
  2913  07E2  151E               	bsf	30,2	;volatile
  2914  07E3                     l982:	
  2915                           
  2916                           ;EUSART.c: 42: }
  2917                           ;EUSART.c: 43: if(x<256)
  2918  07E3  3001               	movlw	1
  2919  07E4  027A               	subwf	EUSART_Initialize@x+1,w
  2920  07E5  3000               	movlw	0
  2921  07E6  1903               	skipnz
  2922  07E7  0279               	subwf	EUSART_Initialize@x,w
  2923  07E8  1803               	skipnc
  2924  07E9  0008               	return
  2925                           
  2926                           ;EUSART.c: 44: {
  2927                           ;EUSART.c: 45: SPBRG = x;
  2928  07EA  0879               	movf	EUSART_Initialize@x,w
  2929  07EB  0023               	movlb	3	; select bank3
  2930  07EC  009B               	movwf	27	;volatile
  2931                           
  2932                           ;EUSART.c: 46: SYNC = 0;
  2933  07ED  121E               	bcf	30,4	;volatile
  2934                           
  2935                           ;EUSART.c: 47: SPEN = 1;
  2936  07EE  179D               	bsf	29,7	;volatile
  2937                           
  2938                           ;EUSART.c: 48: TRISC7 = 1;
  2939  07EF  0021               	movlb	1	; select bank1
  2940  07F0  178E               	bsf	14,7	;volatile
  2941                           
  2942                           ;EUSART.c: 49: TRISC6 = 1;
  2943  07F1  170E               	bsf	14,6	;volatile
  2944                           
  2945                           ;EUSART.c: 50: CREN = 1;
  2946  07F2  0023               	movlb	3	; select bank3
  2947  07F3  161D               	bsf	29,4	;volatile
  2948                           
  2949                           ;EUSART.c: 51: TXEN = 1;
  2950  07F4  169E               	bsf	30,5	;volatile
  2951                           
  2952                           ;EUSART.c: 52: return 1;
  2953                           ;	Return value of _EUSART_Initialize is never used
  2954  07F5  0008               	return
  2955  07F6                     __end_of_EUSART_Initialize:	
  2956                           ;EUSART.c: 53: }
  2957                           ;EUSART.c: 54: return 0;
  2958                           ;	Return value of _EUSART_Initialize is never used
  2959                           
  2960                           
  2961                           	psect	text13
  2962  06CE                     __ptext13:	
  2963 ;; *************** function ___aldiv *****************
  2964 ;; Defined at:
  2965 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\aldiv.c"
  2966 ;; Parameters:    Size  Location     Type
  2967 ;;  divisor         4    0[COMMON] long 
  2968 ;;  dividend        4    4[COMMON] long 
  2969 ;; Auto vars:     Size  Location     Type
  2970 ;;  quotient        4    2[BANK0 ] long 
  2971 ;;  sign            1    1[BANK0 ] unsigned char 
  2972 ;;  counter         1    0[BANK0 ] unsigned char 
  2973 ;; Return value:  Size  Location     Type
  2974 ;;                  4    0[COMMON] long 
  2975 ;; Registers used:
  2976 ;;		wreg, status,2, status,0
  2977 ;; Tracked objects:
  2978 ;;		On entry : 0/0
  2979 ;;		On exit  : 0/0
  2980 ;;		Unchanged: 0/0
  2981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2982 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2983 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2984 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2985 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2986 ;;Total ram usage:       15 bytes
  2987 ;; Hardware stack levels used:    1
  2988 ;; This function calls:
  2989 ;;		Nothing
  2990 ;; This function is called by:
  2991 ;;		_EUSART_Initialize
  2992 ;; This function uses a non-reentrant model
  2993 ;;
  2994                           
  2995                           
  2996                           ;psect for function ___aldiv
  2997  06CE                     ___aldiv:	
  2998                           
  2999                           ;incstack = 0
  3000                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3001  06CE  0020               	movlb	0	; select bank0
  3002  06CF  01A1               	clrf	___aldiv@sign
  3003  06D0  1FF3               	btfss	___aldiv@divisor+3,7
  3004  06D1  2EDF               	goto	l308
  3005  06D2  09F0               	comf	___aldiv@divisor,f
  3006  06D3  09F1               	comf	___aldiv@divisor+1,f
  3007  06D4  09F2               	comf	___aldiv@divisor+2,f
  3008  06D5  09F3               	comf	___aldiv@divisor+3,f
  3009  06D6  0AF0               	incf	___aldiv@divisor,f
  3010  06D7  1903               	skipnz
  3011  06D8  0AF1               	incf	___aldiv@divisor+1,f
  3012  06D9  1903               	skipnz
  3013  06DA  0AF2               	incf	___aldiv@divisor+2,f
  3014  06DB  1903               	skipnz
  3015  06DC  0AF3               	incf	___aldiv@divisor+3,f
  3016  06DD  01A1               	clrf	___aldiv@sign
  3017  06DE  0AA1               	incf	___aldiv@sign,f
  3018  06DF                     l308:	
  3019  06DF  1FF7               	btfss	___aldiv@dividend+3,7
  3020  06E0  2EF0               	goto	l916
  3021  06E1  09F4               	comf	___aldiv@dividend,f
  3022  06E2  09F5               	comf	___aldiv@dividend+1,f
  3023  06E3  09F6               	comf	___aldiv@dividend+2,f
  3024  06E4  09F7               	comf	___aldiv@dividend+3,f
  3025  06E5  0AF4               	incf	___aldiv@dividend,f
  3026  06E6  1903               	skipnz
  3027  06E7  0AF5               	incf	___aldiv@dividend+1,f
  3028  06E8  1903               	skipnz
  3029  06E9  0AF6               	incf	___aldiv@dividend+2,f
  3030  06EA  1903               	skipnz
  3031  06EB  0AF7               	incf	___aldiv@dividend+3,f
  3032  06EC  3001               	movlw	1
  3033  06ED  00F8               	movwf	??___aldiv
  3034  06EE  0878               	movf	??___aldiv,w
  3035  06EF  06A1               	xorwf	___aldiv@sign,f
  3036  06F0                     l916:	
  3037  06F0  3000               	movlw	0
  3038  06F1  00A5               	movwf	___aldiv@quotient+3
  3039  06F2  3000               	movlw	0
  3040  06F3  00A4               	movwf	___aldiv@quotient+2
  3041  06F4  3000               	movlw	0
  3042  06F5  00A3               	movwf	___aldiv@quotient+1
  3043  06F6  3000               	movlw	0
  3044  06F7  00A2               	movwf	___aldiv@quotient
  3045  06F8  0873               	movf	___aldiv@divisor+3,w
  3046  06F9  0472               	iorwf	___aldiv@divisor+2,w
  3047  06FA  0471               	iorwf	___aldiv@divisor+1,w
  3048  06FB  0470               	iorwf	___aldiv@divisor,w
  3049  06FC  1903               	skipnz
  3050  06FD  2F39               	goto	l938
  3051  06FE  01A0               	clrf	___aldiv@counter
  3052  06FF  0AA0               	incf	___aldiv@counter,f
  3053  0700                     l924:	
  3054  0700  1BF3               	btfsc	___aldiv@divisor+3,7
  3055  0701  2F0E               	goto	l926
  3056  0702  3001               	movlw	1
  3057  0703                     u355:	
  3058  0703  35F0               	lslf	___aldiv@divisor,f
  3059  0704  0DF1               	rlf	___aldiv@divisor+1,f
  3060  0705  0DF2               	rlf	___aldiv@divisor+2,f
  3061  0706  0DF3               	rlf	___aldiv@divisor+3,f
  3062  0707  0B89               	decfsz	9,f
  3063  0708  2F03               	goto	u355
  3064  0709  3001               	movlw	1
  3065  070A  00F8               	movwf	??___aldiv
  3066  070B  0878               	movf	??___aldiv,w
  3067  070C  07A0               	addwf	___aldiv@counter,f
  3068  070D  2F00               	goto	l924
  3069  070E                     l926:	
  3070  070E  3001               	movlw	1
  3071  070F                     u375:	
  3072  070F  35A2               	lslf	___aldiv@quotient,f
  3073  0710  0DA3               	rlf	___aldiv@quotient+1,f
  3074  0711  0DA4               	rlf	___aldiv@quotient+2,f
  3075  0712  0DA5               	rlf	___aldiv@quotient+3,f
  3076  0713  0B89               	decfsz	9,f
  3077  0714  2F0F               	goto	u375
  3078  0715  0873               	movf	___aldiv@divisor+3,w
  3079  0716  0277               	subwf	___aldiv@dividend+3,w
  3080  0717  1D03               	skipz
  3081  0718  2F23               	goto	u385
  3082  0719  0872               	movf	___aldiv@divisor+2,w
  3083  071A  0276               	subwf	___aldiv@dividend+2,w
  3084  071B  1D03               	skipz
  3085  071C  2F23               	goto	u385
  3086  071D  0871               	movf	___aldiv@divisor+1,w
  3087  071E  0275               	subwf	___aldiv@dividend+1,w
  3088  071F  1D03               	skipz
  3089  0720  2F23               	goto	u385
  3090  0721  0870               	movf	___aldiv@divisor,w
  3091  0722  0274               	subwf	___aldiv@dividend,w
  3092  0723                     u385:	
  3093  0723  1C03               	skipc
  3094  0724  2F2E               	goto	l934
  3095  0725  0870               	movf	___aldiv@divisor,w
  3096  0726  02F4               	subwf	___aldiv@dividend,f
  3097  0727  0871               	movf	___aldiv@divisor+1,w
  3098  0728  3BF5               	subwfb	___aldiv@dividend+1,f
  3099  0729  0872               	movf	___aldiv@divisor+2,w
  3100  072A  3BF6               	subwfb	___aldiv@dividend+2,f
  3101  072B  0873               	movf	___aldiv@divisor+3,w
  3102  072C  3BF7               	subwfb	___aldiv@dividend+3,f
  3103  072D  1422               	bsf	___aldiv@quotient,0
  3104  072E                     l934:	
  3105  072E  3001               	movlw	1
  3106  072F                     u395:	
  3107  072F  36F3               	lsrf	___aldiv@divisor+3,f
  3108  0730  0CF2               	rrf	___aldiv@divisor+2,f
  3109  0731  0CF1               	rrf	___aldiv@divisor+1,f
  3110  0732  0CF0               	rrf	___aldiv@divisor,f
  3111  0733  0B89               	decfsz	9,f
  3112  0734  2F2F               	goto	u395
  3113  0735  3001               	movlw	1
  3114  0736  02A0               	subwf	___aldiv@counter,f
  3115  0737  1D03               	btfss	3,2
  3116  0738  2F0E               	goto	l926
  3117  0739                     l938:	
  3118  0739  0821               	movf	___aldiv@sign,w
  3119  073A  1903               	btfsc	3,2
  3120  073B  2F47               	goto	l942
  3121  073C  09A2               	comf	___aldiv@quotient,f
  3122  073D  09A3               	comf	___aldiv@quotient+1,f
  3123  073E  09A4               	comf	___aldiv@quotient+2,f
  3124  073F  09A5               	comf	___aldiv@quotient+3,f
  3125  0740  0AA2               	incf	___aldiv@quotient,f
  3126  0741  1903               	skipnz
  3127  0742  0AA3               	incf	___aldiv@quotient+1,f
  3128  0743  1903               	skipnz
  3129  0744  0AA4               	incf	___aldiv@quotient+2,f
  3130  0745  1903               	skipnz
  3131  0746  0AA5               	incf	___aldiv@quotient+3,f
  3132  0747                     l942:	
  3133  0747  0825               	movf	___aldiv@quotient+3,w
  3134  0748  00F3               	movwf	?___aldiv+3
  3135  0749  0824               	movf	___aldiv@quotient+2,w
  3136  074A  00F2               	movwf	?___aldiv+2
  3137  074B  0823               	movf	___aldiv@quotient+1,w
  3138  074C  00F1               	movwf	?___aldiv+1
  3139  074D  0822               	movf	___aldiv@quotient,w
  3140  074E  00F0               	movwf	?___aldiv
  3141  074F  0008               	return
  3142  0750                     __end_of___aldiv:	
  3143  007E                     btemp	set	126	;btemp
  3144  007E                     wtemp0	set	126


Data Sizes:
    Strings     23
    Constant    40
    Data        0
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     18      35
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    sp__utoa	PTR unsigned char  size(1) Largest target is 8
		 -> Lcd_Write_Integer@buf(COMMON[8]), 

    EUSART_Write_Text@text	PTR unsigned char  size(2) Largest target is 6
		 -> STR_2(CODE[6]), 

    sp__ftoa	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK0[17]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 8
		 -> Lcd_Write_Integer@buf(COMMON[8]), 

    Lcd_Write_String@a	PTR const unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK0[17]), STR_1(CODE[6]), Lcd_Write_Integer@buf(COMMON[8]), 


Critical Paths under _main in COMMON

    _main->_EUSART_Initialize
    _initMain->_Lcd_Init
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _EUSART_Write_Text->_EUSART_Write
    _EUSART_Initialize->___aldiv

Critical Paths under _main in BANK0

    _main->_EUSART_Initialize
    _EUSART_Initialize->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1946
                                             11 COMMON     2     2      0
                  _EUSART_Initialize
                       _EUSART_Write
                  _EUSART_Write_Text
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                           _initMain
 ---------------------------------------------------------------------------------
 (1) _initMain                                             2     2      0     210
                                              4 COMMON     2     2      0
                          _Lcd_Clear
                           _Lcd_Init
                        _internal_16
 ---------------------------------------------------------------------------------
 (2) _internal_16                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             1     1      0     135
                                              3 COMMON     1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0      75
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     5     3      2     369
                                              5 COMMON     5     3      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     120
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     398
                                              3 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              2     2      0      75
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      60
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Write_Text                                    5     3      2     158
                                              1 COMMON     5     3      2
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write                                         1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Initialize                                   14    10      4     721
                                              9 COMMON     2     2      0
                                              6 BANK0     12     8      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     512
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Initialize
     ___aldiv
   _EUSART_Write
   _EUSART_Write_Text
     _EUSART_Write
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _initMain
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Init
       _Lcd_Cmd
         _Lcd_Port
       _Lcd_Port
     _internal_16

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     12      23       5       43.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      30      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      30      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Mon Mar 27 18:55:51 2017

               __CFG_CP$OFF 0000                          l60 056E                          l62 0573  
                        l56 0563                          l58 0569                          u55 05B9  
                       l144 061A                         l308 06DF                         l186 0531  
                       l660 0565                         l664 056A                         l924 0700  
                       l916 06F0                         l668 056F                         l942 0747  
                       l934 072E                         l926 070E                         l938 0739  
                       l956 066A                         l972 0591                         l982 07E3  
                       _RD2 007A                         _RD3 007B                         _RD4 007C  
                       _RD5 007D                         _RD6 007E                         _RD7 007F  
                       u505 07A6                         u355 0703                         u515 07BD  
                       u435 0656                         u375 070F                         u455 0676  
                       u607 05C3                         u385 0723                         u617 05CF  
                       u395 072F                         u475 075A                         u627 0555  
                       u547 0623                         u485 0771                         u557 063F  
                       u567 05E8                         u577 0691                         u587 069D  
                       u597 06A9                __CFG_BORV$LO 0000                         wreg 0009  
              __CFG_IESO$ON 0000                __CFG_LVP$OFF 0000                        l1006 0577  
                      STR_1 0839                        STR_2 0833                        STR_3 0828  
                      _BRGH 0CF2                        _CREN 0CEC                        _SCS0 04C8  
                      _SCS1 04C9                        _SPEN 0CEF                        _TXEN 0CF5  
                      _SYNC 0CF4                __CFG_WRT$OFF 0000           ?_Lcd_Write_String 0075  
                      _main 060B                        fsr0h 0005                        indf0 0000  
                      fsr0l 0004                        btemp 007E                        start 0002  
        ??_Lcd_Write_String 0077             __end_of_Lcd_Cmd 055D               ?_EUSART_Write 0070  
           __end_of___aldiv 0750                       ?_main 0070               __CFG_WDTE$OFF 0000  
                     _IRCF0 04CB                       _IRCF1 04CC                       _IRCF2 04CD  
                     _IRCF3 04CE                       _SPBRG 019B     __size_of_Lcd_Set_Cursor 0040  
                     _TRISD 008F              __CFG_FCMEN$OFF 0000             __end_of_dpowers 0828  
            __CFG_BOREN$OFF 0000                       status 0003                       wtemp0 007E  
              ?_internal_16 0070            __end_of_Lcd_Init 06CE            __end_of_Lcd_Port 0575  
            __CFG_MCLRE$OFF 0000             __initialization 07F6                __end_of_main 064A  
            ??_EUSART_Write 0070              __CFG_LPBOR$OFF 0000                      ??_main 007B  
        __size_of_Lcd_Clear 0008              __CFG_PLLEN$OFF 0000              __CFG_ZCDDIS$ON 0000  
                    _ANSELD 018F                      _RC1REG 0199                   ??_Lcd_Cmd 0071  
                    _TX1REG 019A                      _SPLLEN 04CF     __size_of_Lcd_Write_Char 002C  
                    _TRISC6 0476                      _TRISC7 0477              __CFG_PWRTE$OFF 0000  
                 ??___aldiv 0078              __CFG_STVREN$ON 0000            __end_of_initMain 060B  
           Lcd_Set_Cursor@a 0076             Lcd_Set_Cursor@b 0073             Lcd_Set_Cursor@y 0078  
           Lcd_Set_Cursor@z 0077     __end_of__initialization 07FD           __end_of_Lcd_Clear 0540  
            __pcstackCOMMON 0070              _Lcd_Set_Cursor 064A                   ?_Lcd_Init 0070  
                 ?_Lcd_Port 0070                  __pbssBANK0 0032        __end_of_EUSART_Write 0538  
                __pmaintext 060B        __size_of_internal_16 0009             __CFG_PPS1WAY$ON 0000  
 __size_of_Lcd_Write_String 001A      __end_of_Lcd_Set_Cursor 068A                  ??_Lcd_Init 0073  
                   _PPSLOCK 0E0F                  ??_Lcd_Port 0070                   ?_initMain 0070  
            _Lcd_Write_Char 05A9                     _Lcd_Cmd 0549                     ___aldiv 06CE  
           ?_Lcd_Set_Cursor 0073                     __ptext1 05D5                     __ptext2 0540  
                   __ptext3 068A                     __ptext4 0538                     __ptext5 058F  
                   __ptext6 05A9                     __ptext7 064A                     __ptext8 0549  
                   __ptext9 055D                     _dpowers 0800            ___aldiv@dividend 0074  
                   clrloop0 052B      __end_of_Lcd_Write_Char 05D5        end_of_initialization 07FD  
                   ftoa@buf 0032                  ??_initMain 0074           _EUSART_Initialize 0750  
        ?_EUSART_Initialize 0026            ___aldiv@quotient 0022                   Lcd_Port@a 0070  
              __pstringtext 0800          EUSART_Initialize@x 0079         ??_EUSART_Initialize 002A  
          __CFG_FOSC$INTOSC 0000                   _TRISBbits 008D                   _TRISDbits 008F  
     __size_of_EUSART_Write 0008             ?_Lcd_Write_Char 0070           Lcd_Write_String@a 0075  
         Lcd_Write_String@i 0078                   _RXPPSbits 0E24   __end_of_EUSART_Initialize 07F6  
                 _Lcd_Clear 0538            _Lcd_Write_String 058F                _EUSART_Write 0530  
       start_initialization 07F6           __size_of_Lcd_Init 0044           __size_of_Lcd_Port 0018  
         _EUSART_Write_Text 0575          ?_EUSART_Write_Text 0071                  ?_Lcd_Clear 0070  
       ??_EUSART_Write_Text 0073             Lcd_Write_Char@a 0074             Lcd_Write_Char@y 0073  
                 ___latbits 0002               __pcstackBANK0 0020   __end_of_EUSART_Write_Text 058F  
__size_of_EUSART_Initialize 00A6                    ?_Lcd_Cmd 0070               ??_internal_16 0070  
         __size_of_initMain 0036            ??_Lcd_Set_Cursor 0074                    ?___aldiv 0070  
 EUSART_Initialize@baudrate 0026             ___aldiv@divisor 0070             ___aldiv@counter 0020  
                  _LATDbits 010F                   clear_ram0 052A                    Lcd_Cmd@a 0072  
                  _PIR1bits 0011                 ??_Lcd_Clear 0073         __end_of_internal_16 0549  
          ??_Lcd_Write_Char 0071                    _Lcd_Init 068A                    _Lcd_Port 055D  
__size_of_EUSART_Write_Text 001A    __end_of_Lcd_Write_String 05A9            __size_of_Lcd_Cmd 0014  
          __size_of___aldiv 0082                  _ANSELBbits 018D                    __ptext10 0575  
                  __ptext11 0530                    __ptext12 0750                    __ptext13 06CE  
                  _initMain 05D5               __size_of_main 003F                 _internal_16 0540  
                _RB2PPSbits 0E9A                  _RC1STAbits 019D          Lcd_Write_Char@temp 0072  
         __CFG_CLKOUTEN$OFF 0000                 _PPSLOCKbits 0E0F          Lcd_Set_Cursor@temp 0079  
     EUSART_Write_Text@text 0071                ___aldiv@sign 0021          EUSART_Write@txData 0070  
        EUSART_Write_Text@i 0074  
