

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Tue Apr 18 11:28:30 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1717
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	dabs	1,0x7E,2
    31  0000                     
    32                           ; Version 1.41
    33                           ; Generated 25/01/2017 GMT
    34                           ; 
    35                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F1717 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  0008                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000D                     	;# 
    80  000E                     	;# 
    81  000F                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  0110                     	;# 
   120  0111                     	;# 
   121  0112                     	;# 
   122  0113                     	;# 
   123  0114                     	;# 
   124  0115                     	;# 
   125  0116                     	;# 
   126  0117                     	;# 
   127  0118                     	;# 
   128  0119                     	;# 
   129  011A                     	;# 
   130  011B                     	;# 
   131  011B                     	;# 
   132  011C                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  018E                     	;# 
   136  018F                     	;# 
   137  0190                     	;# 
   138  0191                     	;# 
   139  0191                     	;# 
   140  0192                     	;# 
   141  0193                     	;# 
   142  0193                     	;# 
   143  0194                     	;# 
   144  0195                     	;# 
   145  0196                     	;# 
   146  0197                     	;# 
   147  0199                     	;# 
   148  0199                     	;# 
   149  0199                     	;# 
   150  019A                     	;# 
   151  019A                     	;# 
   152  019A                     	;# 
   153  019B                     	;# 
   154  019B                     	;# 
   155  019B                     	;# 
   156  019B                     	;# 
   157  019B                     	;# 
   158  019C                     	;# 
   159  019C                     	;# 
   160  019C                     	;# 
   161  019D                     	;# 
   162  019D                     	;# 
   163  019D                     	;# 
   164  019E                     	;# 
   165  019E                     	;# 
   166  019E                     	;# 
   167  019F                     	;# 
   168  019F                     	;# 
   169  019F                     	;# 
   170  019F                     	;# 
   171  019F                     	;# 
   172  020C                     	;# 
   173  020D                     	;# 
   174  020E                     	;# 
   175  020F                     	;# 
   176  0210                     	;# 
   177  0211                     	;# 
   178  0211                     	;# 
   179  0212                     	;# 
   180  0212                     	;# 
   181  0213                     	;# 
   182  0213                     	;# 
   183  0214                     	;# 
   184  0214                     	;# 
   185  0215                     	;# 
   186  0215                     	;# 
   187  0215                     	;# 
   188  0215                     	;# 
   189  0216                     	;# 
   190  0216                     	;# 
   191  0217                     	;# 
   192  0217                     	;# 
   193  028C                     	;# 
   194  028D                     	;# 
   195  028E                     	;# 
   196  028F                     	;# 
   197  0290                     	;# 
   198  0291                     	;# 
   199  0291                     	;# 
   200  0292                     	;# 
   201  0293                     	;# 
   202  0293                     	;# 
   203  0298                     	;# 
   204  0298                     	;# 
   205  0299                     	;# 
   206  029A                     	;# 
   207  029A                     	;# 
   208  029E                     	;# 
   209  030C                     	;# 
   210  030D                     	;# 
   211  030E                     	;# 
   212  030F                     	;# 
   213  0310                     	;# 
   214  038C                     	;# 
   215  038D                     	;# 
   216  038E                     	;# 
   217  038F                     	;# 
   218  0390                     	;# 
   219  0391                     	;# 
   220  0392                     	;# 
   221  0393                     	;# 
   222  0394                     	;# 
   223  0395                     	;# 
   224  0396                     	;# 
   225  0397                     	;# 
   226  0398                     	;# 
   227  0399                     	;# 
   228  039D                     	;# 
   229  039E                     	;# 
   230  039F                     	;# 
   231  0415                     	;# 
   232  0416                     	;# 
   233  0417                     	;# 
   234  041C                     	;# 
   235  041D                     	;# 
   236  041E                     	;# 
   237  0498                     	;# 
   238  0498                     	;# 
   239  0499                     	;# 
   240  049A                     	;# 
   241  049B                     	;# 
   242  049B                     	;# 
   243  049C                     	;# 
   244  049D                     	;# 
   245  049E                     	;# 
   246  049F                     	;# 
   247  0511                     	;# 
   248  0515                     	;# 
   249  0617                     	;# 
   250  0618                     	;# 
   251  0619                     	;# 
   252  0619                     	;# 
   253  061A                     	;# 
   254  061B                     	;# 
   255  061C                     	;# 
   256  061C                     	;# 
   257  0691                     	;# 
   258  0692                     	;# 
   259  0693                     	;# 
   260  0694                     	;# 
   261  0695                     	;# 
   262  0696                     	;# 
   263  0697                     	;# 
   264  0698                     	;# 
   265  0699                     	;# 
   266  069A                     	;# 
   267  069B                     	;# 
   268  069C                     	;# 
   269  069D                     	;# 
   270  069E                     	;# 
   271  069F                     	;# 
   272  0E0F                     	;# 
   273  0E10                     	;# 
   274  0E11                     	;# 
   275  0E12                     	;# 
   276  0E13                     	;# 
   277  0E14                     	;# 
   278  0E15                     	;# 
   279  0E17                     	;# 
   280  0E20                     	;# 
   281  0E21                     	;# 
   282  0E22                     	;# 
   283  0E24                     	;# 
   284  0E25                     	;# 
   285  0E28                     	;# 
   286  0E29                     	;# 
   287  0E2A                     	;# 
   288  0E2B                     	;# 
   289  0E90                     	;# 
   290  0E91                     	;# 
   291  0E92                     	;# 
   292  0E93                     	;# 
   293  0E94                     	;# 
   294  0E95                     	;# 
   295  0E96                     	;# 
   296  0E97                     	;# 
   297  0E98                     	;# 
   298  0E99                     	;# 
   299  0E9A                     	;# 
   300  0E9B                     	;# 
   301  0E9C                     	;# 
   302  0E9D                     	;# 
   303  0E9E                     	;# 
   304  0E9F                     	;# 
   305  0EA0                     	;# 
   306  0EA1                     	;# 
   307  0EA2                     	;# 
   308  0EA3                     	;# 
   309  0EA4                     	;# 
   310  0EA5                     	;# 
   311  0EA6                     	;# 
   312  0EA7                     	;# 
   313  0EA8                     	;# 
   314  0EA9                     	;# 
   315  0EAA                     	;# 
   316  0EAB                     	;# 
   317  0EAC                     	;# 
   318  0EAD                     	;# 
   319  0EAE                     	;# 
   320  0EAF                     	;# 
   321  0EB0                     	;# 
   322  0EB1                     	;# 
   323  0EB2                     	;# 
   324  0F0F                     	;# 
   325  0F10                     	;# 
   326  0F11                     	;# 
   327  0F12                     	;# 
   328  0F13                     	;# 
   329  0F14                     	;# 
   330  0F15                     	;# 
   331  0F16                     	;# 
   332  0F17                     	;# 
   333  0F18                     	;# 
   334  0F19                     	;# 
   335  0F1A                     	;# 
   336  0F1B                     	;# 
   337  0F1C                     	;# 
   338  0F1D                     	;# 
   339  0F1E                     	;# 
   340  0F1F                     	;# 
   341  0F20                     	;# 
   342  0F21                     	;# 
   343  0F22                     	;# 
   344  0F23                     	;# 
   345  0F24                     	;# 
   346  0F25                     	;# 
   347  0F26                     	;# 
   348  0F27                     	;# 
   349  0F28                     	;# 
   350  0F29                     	;# 
   351  0F2A                     	;# 
   352  0F2B                     	;# 
   353  0F2C                     	;# 
   354  0F2D                     	;# 
   355  0F2E                     	;# 
   356  0F2F                     	;# 
   357  0F30                     	;# 
   358  0F31                     	;# 
   359  0F32                     	;# 
   360  0F33                     	;# 
   361  0F34                     	;# 
   362  0F35                     	;# 
   363  0F36                     	;# 
   364  0F37                     	;# 
   365  0FE4                     	;# 
   366  0FE5                     	;# 
   367  0FE6                     	;# 
   368  0FE7                     	;# 
   369  0FE8                     	;# 
   370  0FE9                     	;# 
   371  0FEA                     	;# 
   372  0FEB                     	;# 
   373  0FED                     	;# 
   374  0FEE                     	;# 
   375  0FEF                     	;# 
   376  0000                     	;# 
   377  0001                     	;# 
   378  0002                     	;# 
   379  0003                     	;# 
   380  0004                     	;# 
   381  0005                     	;# 
   382  0006                     	;# 
   383  0007                     	;# 
   384  0008                     	;# 
   385  0009                     	;# 
   386  000A                     	;# 
   387  000B                     	;# 
   388  000C                     	;# 
   389  000D                     	;# 
   390  000E                     	;# 
   391  000F                     	;# 
   392  0010                     	;# 
   393  0011                     	;# 
   394  0012                     	;# 
   395  0013                     	;# 
   396  0015                     	;# 
   397  0016                     	;# 
   398  0016                     	;# 
   399  0017                     	;# 
   400  0018                     	;# 
   401  0019                     	;# 
   402  001A                     	;# 
   403  001B                     	;# 
   404  001C                     	;# 
   405  008C                     	;# 
   406  008D                     	;# 
   407  008E                     	;# 
   408  008F                     	;# 
   409  0090                     	;# 
   410  0091                     	;# 
   411  0092                     	;# 
   412  0093                     	;# 
   413  0095                     	;# 
   414  0096                     	;# 
   415  0097                     	;# 
   416  0098                     	;# 
   417  0099                     	;# 
   418  009A                     	;# 
   419  009B                     	;# 
   420  009B                     	;# 
   421  009C                     	;# 
   422  009D                     	;# 
   423  009E                     	;# 
   424  009F                     	;# 
   425  010C                     	;# 
   426  010D                     	;# 
   427  010E                     	;# 
   428  010F                     	;# 
   429  0110                     	;# 
   430  0111                     	;# 
   431  0112                     	;# 
   432  0113                     	;# 
   433  0114                     	;# 
   434  0115                     	;# 
   435  0116                     	;# 
   436  0117                     	;# 
   437  0118                     	;# 
   438  0119                     	;# 
   439  011A                     	;# 
   440  011B                     	;# 
   441  011B                     	;# 
   442  011C                     	;# 
   443  018C                     	;# 
   444  018D                     	;# 
   445  018E                     	;# 
   446  018F                     	;# 
   447  0190                     	;# 
   448  0191                     	;# 
   449  0191                     	;# 
   450  0192                     	;# 
   451  0193                     	;# 
   452  0193                     	;# 
   453  0194                     	;# 
   454  0195                     	;# 
   455  0196                     	;# 
   456  0197                     	;# 
   457  0199                     	;# 
   458  0199                     	;# 
   459  0199                     	;# 
   460  019A                     	;# 
   461  019A                     	;# 
   462  019A                     	;# 
   463  019B                     	;# 
   464  019B                     	;# 
   465  019B                     	;# 
   466  019B                     	;# 
   467  019B                     	;# 
   468  019C                     	;# 
   469  019C                     	;# 
   470  019C                     	;# 
   471  019D                     	;# 
   472  019D                     	;# 
   473  019D                     	;# 
   474  019E                     	;# 
   475  019E                     	;# 
   476  019E                     	;# 
   477  019F                     	;# 
   478  019F                     	;# 
   479  019F                     	;# 
   480  019F                     	;# 
   481  019F                     	;# 
   482  020C                     	;# 
   483  020D                     	;# 
   484  020E                     	;# 
   485  020F                     	;# 
   486  0210                     	;# 
   487  0211                     	;# 
   488  0211                     	;# 
   489  0212                     	;# 
   490  0212                     	;# 
   491  0213                     	;# 
   492  0213                     	;# 
   493  0214                     	;# 
   494  0214                     	;# 
   495  0215                     	;# 
   496  0215                     	;# 
   497  0215                     	;# 
   498  0215                     	;# 
   499  0216                     	;# 
   500  0216                     	;# 
   501  0217                     	;# 
   502  0217                     	;# 
   503  028C                     	;# 
   504  028D                     	;# 
   505  028E                     	;# 
   506  028F                     	;# 
   507  0290                     	;# 
   508  0291                     	;# 
   509  0291                     	;# 
   510  0292                     	;# 
   511  0293                     	;# 
   512  0293                     	;# 
   513  0298                     	;# 
   514  0298                     	;# 
   515  0299                     	;# 
   516  029A                     	;# 
   517  029A                     	;# 
   518  029E                     	;# 
   519  030C                     	;# 
   520  030D                     	;# 
   521  030E                     	;# 
   522  030F                     	;# 
   523  0310                     	;# 
   524  038C                     	;# 
   525  038D                     	;# 
   526  038E                     	;# 
   527  038F                     	;# 
   528  0390                     	;# 
   529  0391                     	;# 
   530  0392                     	;# 
   531  0393                     	;# 
   532  0394                     	;# 
   533  0395                     	;# 
   534  0396                     	;# 
   535  0397                     	;# 
   536  0398                     	;# 
   537  0399                     	;# 
   538  039D                     	;# 
   539  039E                     	;# 
   540  039F                     	;# 
   541  0415                     	;# 
   542  0416                     	;# 
   543  0417                     	;# 
   544  041C                     	;# 
   545  041D                     	;# 
   546  041E                     	;# 
   547  0498                     	;# 
   548  0498                     	;# 
   549  0499                     	;# 
   550  049A                     	;# 
   551  049B                     	;# 
   552  049B                     	;# 
   553  049C                     	;# 
   554  049D                     	;# 
   555  049E                     	;# 
   556  049F                     	;# 
   557  0511                     	;# 
   558  0515                     	;# 
   559  0617                     	;# 
   560  0618                     	;# 
   561  0619                     	;# 
   562  0619                     	;# 
   563  061A                     	;# 
   564  061B                     	;# 
   565  061C                     	;# 
   566  061C                     	;# 
   567  0691                     	;# 
   568  0692                     	;# 
   569  0693                     	;# 
   570  0694                     	;# 
   571  0695                     	;# 
   572  0696                     	;# 
   573  0697                     	;# 
   574  0698                     	;# 
   575  0699                     	;# 
   576  069A                     	;# 
   577  069B                     	;# 
   578  069C                     	;# 
   579  069D                     	;# 
   580  069E                     	;# 
   581  069F                     	;# 
   582  0E0F                     	;# 
   583  0E10                     	;# 
   584  0E11                     	;# 
   585  0E12                     	;# 
   586  0E13                     	;# 
   587  0E14                     	;# 
   588  0E15                     	;# 
   589  0E17                     	;# 
   590  0E20                     	;# 
   591  0E21                     	;# 
   592  0E22                     	;# 
   593  0E24                     	;# 
   594  0E25                     	;# 
   595  0E28                     	;# 
   596  0E29                     	;# 
   597  0E2A                     	;# 
   598  0E2B                     	;# 
   599  0E90                     	;# 
   600  0E91                     	;# 
   601  0E92                     	;# 
   602  0E93                     	;# 
   603  0E94                     	;# 
   604  0E95                     	;# 
   605  0E96                     	;# 
   606  0E97                     	;# 
   607  0E98                     	;# 
   608  0E99                     	;# 
   609  0E9A                     	;# 
   610  0E9B                     	;# 
   611  0E9C                     	;# 
   612  0E9D                     	;# 
   613  0E9E                     	;# 
   614  0E9F                     	;# 
   615  0EA0                     	;# 
   616  0EA1                     	;# 
   617  0EA2                     	;# 
   618  0EA3                     	;# 
   619  0EA4                     	;# 
   620  0EA5                     	;# 
   621  0EA6                     	;# 
   622  0EA7                     	;# 
   623  0EA8                     	;# 
   624  0EA9                     	;# 
   625  0EAA                     	;# 
   626  0EAB                     	;# 
   627  0EAC                     	;# 
   628  0EAD                     	;# 
   629  0EAE                     	;# 
   630  0EAF                     	;# 
   631  0EB0                     	;# 
   632  0EB1                     	;# 
   633  0EB2                     	;# 
   634  0F0F                     	;# 
   635  0F10                     	;# 
   636  0F11                     	;# 
   637  0F12                     	;# 
   638  0F13                     	;# 
   639  0F14                     	;# 
   640  0F15                     	;# 
   641  0F16                     	;# 
   642  0F17                     	;# 
   643  0F18                     	;# 
   644  0F19                     	;# 
   645  0F1A                     	;# 
   646  0F1B                     	;# 
   647  0F1C                     	;# 
   648  0F1D                     	;# 
   649  0F1E                     	;# 
   650  0F1F                     	;# 
   651  0F20                     	;# 
   652  0F21                     	;# 
   653  0F22                     	;# 
   654  0F23                     	;# 
   655  0F24                     	;# 
   656  0F25                     	;# 
   657  0F26                     	;# 
   658  0F27                     	;# 
   659  0F28                     	;# 
   660  0F29                     	;# 
   661  0F2A                     	;# 
   662  0F2B                     	;# 
   663  0F2C                     	;# 
   664  0F2D                     	;# 
   665  0F2E                     	;# 
   666  0F2F                     	;# 
   667  0F30                     	;# 
   668  0F31                     	;# 
   669  0F32                     	;# 
   670  0F33                     	;# 
   671  0F34                     	;# 
   672  0F35                     	;# 
   673  0F36                     	;# 
   674  0F37                     	;# 
   675  0FE4                     	;# 
   676  0FE5                     	;# 
   677  0FE6                     	;# 
   678  0FE7                     	;# 
   679  0FE8                     	;# 
   680  0FE9                     	;# 
   681  0FEA                     	;# 
   682  0FEB                     	;# 
   683  0FED                     	;# 
   684  0FEE                     	;# 
   685  0FEF                     	;# 
   686  0000                     	;# 
   687  0001                     	;# 
   688  0002                     	;# 
   689  0003                     	;# 
   690  0004                     	;# 
   691  0005                     	;# 
   692  0006                     	;# 
   693  0007                     	;# 
   694  0008                     	;# 
   695  0009                     	;# 
   696  000A                     	;# 
   697  000B                     	;# 
   698  000C                     	;# 
   699  000D                     	;# 
   700  000E                     	;# 
   701  000F                     	;# 
   702  0010                     	;# 
   703  0011                     	;# 
   704  0012                     	;# 
   705  0013                     	;# 
   706  0015                     	;# 
   707  0016                     	;# 
   708  0016                     	;# 
   709  0017                     	;# 
   710  0018                     	;# 
   711  0019                     	;# 
   712  001A                     	;# 
   713  001B                     	;# 
   714  001C                     	;# 
   715  008C                     	;# 
   716  008D                     	;# 
   717  008E                     	;# 
   718  008F                     	;# 
   719  0090                     	;# 
   720  0091                     	;# 
   721  0092                     	;# 
   722  0093                     	;# 
   723  0095                     	;# 
   724  0096                     	;# 
   725  0097                     	;# 
   726  0098                     	;# 
   727  0099                     	;# 
   728  009A                     	;# 
   729  009B                     	;# 
   730  009B                     	;# 
   731  009C                     	;# 
   732  009D                     	;# 
   733  009E                     	;# 
   734  009F                     	;# 
   735  010C                     	;# 
   736  010D                     	;# 
   737  010E                     	;# 
   738  010F                     	;# 
   739  0110                     	;# 
   740  0111                     	;# 
   741  0112                     	;# 
   742  0113                     	;# 
   743  0114                     	;# 
   744  0115                     	;# 
   745  0116                     	;# 
   746  0117                     	;# 
   747  0118                     	;# 
   748  0119                     	;# 
   749  011A                     	;# 
   750  011B                     	;# 
   751  011B                     	;# 
   752  011C                     	;# 
   753  018C                     	;# 
   754  018D                     	;# 
   755  018E                     	;# 
   756  018F                     	;# 
   757  0190                     	;# 
   758  0191                     	;# 
   759  0191                     	;# 
   760  0192                     	;# 
   761  0193                     	;# 
   762  0193                     	;# 
   763  0194                     	;# 
   764  0195                     	;# 
   765  0196                     	;# 
   766  0197                     	;# 
   767  0199                     	;# 
   768  0199                     	;# 
   769  0199                     	;# 
   770  019A                     	;# 
   771  019A                     	;# 
   772  019A                     	;# 
   773  019B                     	;# 
   774  019B                     	;# 
   775  019B                     	;# 
   776  019B                     	;# 
   777  019B                     	;# 
   778  019C                     	;# 
   779  019C                     	;# 
   780  019C                     	;# 
   781  019D                     	;# 
   782  019D                     	;# 
   783  019D                     	;# 
   784  019E                     	;# 
   785  019E                     	;# 
   786  019E                     	;# 
   787  019F                     	;# 
   788  019F                     	;# 
   789  019F                     	;# 
   790  019F                     	;# 
   791  019F                     	;# 
   792  020C                     	;# 
   793  020D                     	;# 
   794  020E                     	;# 
   795  020F                     	;# 
   796  0210                     	;# 
   797  0211                     	;# 
   798  0211                     	;# 
   799  0212                     	;# 
   800  0212                     	;# 
   801  0213                     	;# 
   802  0213                     	;# 
   803  0214                     	;# 
   804  0214                     	;# 
   805  0215                     	;# 
   806  0215                     	;# 
   807  0215                     	;# 
   808  0215                     	;# 
   809  0216                     	;# 
   810  0216                     	;# 
   811  0217                     	;# 
   812  0217                     	;# 
   813  028C                     	;# 
   814  028D                     	;# 
   815  028E                     	;# 
   816  028F                     	;# 
   817  0290                     	;# 
   818  0291                     	;# 
   819  0291                     	;# 
   820  0292                     	;# 
   821  0293                     	;# 
   822  0293                     	;# 
   823  0298                     	;# 
   824  0298                     	;# 
   825  0299                     	;# 
   826  029A                     	;# 
   827  029A                     	;# 
   828  029E                     	;# 
   829  030C                     	;# 
   830  030D                     	;# 
   831  030E                     	;# 
   832  030F                     	;# 
   833  0310                     	;# 
   834  038C                     	;# 
   835  038D                     	;# 
   836  038E                     	;# 
   837  038F                     	;# 
   838  0390                     	;# 
   839  0391                     	;# 
   840  0392                     	;# 
   841  0393                     	;# 
   842  0394                     	;# 
   843  0395                     	;# 
   844  0396                     	;# 
   845  0397                     	;# 
   846  0398                     	;# 
   847  0399                     	;# 
   848  039D                     	;# 
   849  039E                     	;# 
   850  039F                     	;# 
   851  0415                     	;# 
   852  0416                     	;# 
   853  0417                     	;# 
   854  041C                     	;# 
   855  041D                     	;# 
   856  041E                     	;# 
   857  0498                     	;# 
   858  0498                     	;# 
   859  0499                     	;# 
   860  049A                     	;# 
   861  049B                     	;# 
   862  049B                     	;# 
   863  049C                     	;# 
   864  049D                     	;# 
   865  049E                     	;# 
   866  049F                     	;# 
   867  0511                     	;# 
   868  0515                     	;# 
   869  0617                     	;# 
   870  0618                     	;# 
   871  0619                     	;# 
   872  0619                     	;# 
   873  061A                     	;# 
   874  061B                     	;# 
   875  061C                     	;# 
   876  061C                     	;# 
   877  0691                     	;# 
   878  0692                     	;# 
   879  0693                     	;# 
   880  0694                     	;# 
   881  0695                     	;# 
   882  0696                     	;# 
   883  0697                     	;# 
   884  0698                     	;# 
   885  0699                     	;# 
   886  069A                     	;# 
   887  069B                     	;# 
   888  069C                     	;# 
   889  069D                     	;# 
   890  069E                     	;# 
   891  069F                     	;# 
   892  0E0F                     	;# 
   893  0E10                     	;# 
   894  0E11                     	;# 
   895  0E12                     	;# 
   896  0E13                     	;# 
   897  0E14                     	;# 
   898  0E15                     	;# 
   899  0E17                     	;# 
   900  0E20                     	;# 
   901  0E21                     	;# 
   902  0E22                     	;# 
   903  0E24                     	;# 
   904  0E25                     	;# 
   905  0E28                     	;# 
   906  0E29                     	;# 
   907  0E2A                     	;# 
   908  0E2B                     	;# 
   909  0E90                     	;# 
   910  0E91                     	;# 
   911  0E92                     	;# 
   912  0E93                     	;# 
   913  0E94                     	;# 
   914  0E95                     	;# 
   915  0E96                     	;# 
   916  0E97                     	;# 
   917  0E98                     	;# 
   918  0E99                     	;# 
   919  0E9A                     	;# 
   920  0E9B                     	;# 
   921  0E9C                     	;# 
   922  0E9D                     	;# 
   923  0E9E                     	;# 
   924  0E9F                     	;# 
   925  0EA0                     	;# 
   926  0EA1                     	;# 
   927  0EA2                     	;# 
   928  0EA3                     	;# 
   929  0EA4                     	;# 
   930  0EA5                     	;# 
   931  0EA6                     	;# 
   932  0EA7                     	;# 
   933  0EA8                     	;# 
   934  0EA9                     	;# 
   935  0EAA                     	;# 
   936  0EAB                     	;# 
   937  0EAC                     	;# 
   938  0EAD                     	;# 
   939  0EAE                     	;# 
   940  0EAF                     	;# 
   941  0EB0                     	;# 
   942  0EB1                     	;# 
   943  0EB2                     	;# 
   944  0F0F                     	;# 
   945  0F10                     	;# 
   946  0F11                     	;# 
   947  0F12                     	;# 
   948  0F13                     	;# 
   949  0F14                     	;# 
   950  0F15                     	;# 
   951  0F16                     	;# 
   952  0F17                     	;# 
   953  0F18                     	;# 
   954  0F19                     	;# 
   955  0F1A                     	;# 
   956  0F1B                     	;# 
   957  0F1C                     	;# 
   958  0F1D                     	;# 
   959  0F1E                     	;# 
   960  0F1F                     	;# 
   961  0F20                     	;# 
   962  0F21                     	;# 
   963  0F22                     	;# 
   964  0F23                     	;# 
   965  0F24                     	;# 
   966  0F25                     	;# 
   967  0F26                     	;# 
   968  0F27                     	;# 
   969  0F28                     	;# 
   970  0F29                     	;# 
   971  0F2A                     	;# 
   972  0F2B                     	;# 
   973  0F2C                     	;# 
   974  0F2D                     	;# 
   975  0F2E                     	;# 
   976  0F2F                     	;# 
   977  0F30                     	;# 
   978  0F31                     	;# 
   979  0F32                     	;# 
   980  0F33                     	;# 
   981  0F34                     	;# 
   982  0F35                     	;# 
   983  0F36                     	;# 
   984  0F37                     	;# 
   985  0FE4                     	;# 
   986  0FE5                     	;# 
   987  0FE6                     	;# 
   988  0FE7                     	;# 
   989  0FE8                     	;# 
   990  0FE9                     	;# 
   991  0FEA                     	;# 
   992  0FEB                     	;# 
   993  0FED                     	;# 
   994  0FEE                     	;# 
   995  0FEF                     	;# 
   996                           
   997                           	psect	stringtext
   998  0800                     __pstringtext:	
   999  0800                     _dpowers:	
  1000  0800  3401               	retlw	1
  1001  0801  3400               	retlw	0
  1002  0802  3400               	retlw	0
  1003  0803  3400               	retlw	0
  1004  0804  340A               	retlw	10
  1005  0805  3400               	retlw	0
  1006  0806  3400               	retlw	0
  1007  0807  3400               	retlw	0
  1008  0808  3464               	retlw	100
  1009  0809  3400               	retlw	0
  1010  080A  3400               	retlw	0
  1011  080B  3400               	retlw	0
  1012  080C  34E8               	retlw	232
  1013  080D  3403               	retlw	3
  1014  080E  3400               	retlw	0
  1015  080F  3400               	retlw	0
  1016  0810  3410               	retlw	16
  1017  0811  3427               	retlw	39
  1018  0812  3400               	retlw	0
  1019  0813  3400               	retlw	0
  1020  0814  34A0               	retlw	160
  1021  0815  3486               	retlw	134
  1022  0816  3401               	retlw	1
  1023  0817  3400               	retlw	0
  1024  0818  3440               	retlw	64
  1025  0819  3442               	retlw	66
  1026  081A  340F               	retlw	15
  1027  081B  3400               	retlw	0
  1028  081C  3480               	retlw	128
  1029  081D  3496               	retlw	150
  1030  081E  3498               	retlw	152
  1031  081F  3400               	retlw	0
  1032  0820  3400               	retlw	0
  1033  0821  34E1               	retlw	225
  1034  0822  34F5               	retlw	245
  1035  0823  3405               	retlw	5
  1036  0824  3400               	retlw	0
  1037  0825  34CA               	retlw	202
  1038  0826  349A               	retlw	154
  1039  0827  343B               	retlw	59
  1040  0828                     __end_of_dpowers:	
  1041  0018                     _T1CONbits	set	24
  1042  0016                     _TMR1L	set	22
  1043  0017                     _TMR1H	set	23
  1044  0018                     _T1CON	set	24
  1045  000F                     _PORTD	set	15
  1046  0074                     _RC4	set	116
  1047  0075                     _RC5	set	117
  1048  007B                     _RD3	set	123
  1049  007A                     _RD2	set	122
  1050  007F                     _RD7	set	127
  1051  007E                     _RD6	set	126
  1052  007D                     _RD5	set	125
  1053  007C                     _RD4	set	124
  1054  008E                     _TRISCbits	set	142
  1055  008F                     _TRISD	set	143
  1056  04CF                     _SPLLEN	set	1231
  1057  04CE                     _IRCF3	set	1230
  1058  04CD                     _IRCF2	set	1229
  1059  04CC                     _IRCF1	set	1228
  1060  04CB                     _IRCF0	set	1227
  1061  04C9                     _SCS1	set	1225
  1062  04C8                     _SCS0	set	1224
  1063  018E                     _ANSELC	set	398
  1064  018F                     _ANSELD	set	399
  1065  0828                     STR_1:	
  1066  0828  3425               	retlw	37	;'%'
  1067  0829  346C               	retlw	108	;'l'
  1068  082A  3475               	retlw	117	;'u'
  1069  082B  342E               	retlw	46	;'.'
  1070  082C  3425               	retlw	37	;'%'
  1071  082D  3436               	retlw	54	;'6'
  1072  082E  342E               	retlw	46	;'.'
  1073  082F  3436               	retlw	54	;'6'
  1074  0830  346C               	retlw	108	;'l'
  1075  0831  3475               	retlw	117	;'u'
  1076  0832  3400               	retlw	0
  1077                           
  1078                           ; #config settings
  1079  0000                     
  1080                           	psect	cinit
  1081  07F6                     start_initialization:	
  1082  07F6                     __initialization:	
  1083                           
  1084                           ; Clear objects allocated to BANK0
  1085  07F6  3048               	movlw	low __pbssBANK0
  1086  07F7  0084               	movwf	4
  1087  07F8  3000               	movlw	high __pbssBANK0
  1088  07F9  0085               	movwf	5
  1089  07FA  3011               	movlw	17
  1090  07FB  3182  22F8         	fcall	clear_ram0
  1091  07FD                     end_of_initialization:	
  1092                           ;End of C runtime variable initialization code
  1093                           
  1094  07FD                     __end_of__initialization:	
  1095  07FD  0020               	movlb	0
  1096  07FE  3187  2F28         	ljmp	_main	;jump to C main() function
  1097                           
  1098                           	psect	bssBANK0
  1099  0048                     __pbssBANK0:	
  1100  0048                     ftoa@buf:	
  1101  0048                     	ds	17
  1102                           
  1103                           	psect	clrtext
  1104  02F8                     clear_ram0:	
  1105                           ;	Called with FSR0 containing the base address, and
  1106                           ;	WREG with the size to clear
  1107                           
  1108  02F8  0064               	clrwdt	;clear the watchdog before getting into this loop
  1109  02F9                     clrloop0:	
  1110  02F9  0180               	clrf	0	;clear RAM location pointed to by FSR
  1111  02FA  3101               	addfsr 0,1
  1112  02FB  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1113  02FC  2AF9               	goto	clrloop0	;have we reached the end yet?
  1114  02FD  3400               	retlw	0	;all done for this memory range, return
  1115                           
  1116                           	psect	cstackCOMMON
  1117  0070                     __pcstackCOMMON:	
  1118  0070                     ?_internal_16:	
  1119  0070                     ??_internal_16:	
  1120                           ; 1 bytes @ 0x0
  1121                           
  1122  0070                     ?_Lcd_Port:	
  1123                           ; 1 bytes @ 0x0
  1124                           
  1125  0070                     ??_Lcd_Port:	
  1126                           ; 1 bytes @ 0x0
  1127                           
  1128  0070                     ?_Lcd_Cmd:	
  1129                           ; 1 bytes @ 0x0
  1130                           
  1131  0070                     ?_Lcd_Clear:	
  1132                           ; 1 bytes @ 0x0
  1133                           
  1134  0070                     ?_Lcd_Init:	
  1135                           ; 1 bytes @ 0x0
  1136                           
  1137  0070                     ?_Lcd_Write_Char:	
  1138                           ; 1 bytes @ 0x0
  1139                           
  1140  0070                     ?_Lcd_Write_String:	
  1141                           ; 1 bytes @ 0x0
  1142                           
  1143  0070                     ?_initMain:	
  1144                           ; 1 bytes @ 0x0
  1145                           
  1146  0070                     ?_main:	
  1147                           ; 1 bytes @ 0x0
  1148                           
  1149  0070                     ?___awdiv:	
  1150                           ; 1 bytes @ 0x0
  1151                           
  1152  0070                     ?___awmod:	
  1153                           ; 2 bytes @ 0x0
  1154                           
  1155  0070                     ?___lwdiv:	
  1156                           ; 2 bytes @ 0x0
  1157                           
  1158  0070                     ?___lwmod:	
  1159                           ; 2 bytes @ 0x0
  1160                           
  1161  0070                     ?___ftpack:	
  1162                           ; 2 bytes @ 0x0
  1163                           
  1164  0070                     Lcd_Port@a:	
  1165                           ; 3 bytes @ 0x0
  1166                           
  1167  0070                     ___awdiv@divisor:	
  1168                           ; 1 bytes @ 0x0
  1169                           
  1170  0070                     ___awmod@divisor:	
  1171                           ; 2 bytes @ 0x0
  1172                           
  1173  0070                     ___lwdiv@divisor:	
  1174                           ; 2 bytes @ 0x0
  1175                           
  1176  0070                     ___lwmod@divisor:	
  1177                           ; 2 bytes @ 0x0
  1178                           
  1179  0070                     ___ftpack@arg:	
  1180                           ; 2 bytes @ 0x0
  1181                           
  1182                           
  1183                           ; 3 bytes @ 0x0
  1184  0070                     	ds	1
  1185  0071                     ??_Lcd_Cmd:	
  1186  0071                     ??_Lcd_Write_Char:	
  1187                           ; 1 bytes @ 0x1
  1188                           
  1189                           
  1190                           ; 1 bytes @ 0x1
  1191  0071                     	ds	1
  1192  0072                     Lcd_Cmd@a:	
  1193  0072                     Lcd_Write_Char@temp:	
  1194                           ; 1 bytes @ 0x2
  1195                           
  1196  0072                     ___awdiv@dividend:	
  1197                           ; 1 bytes @ 0x2
  1198                           
  1199  0072                     ___awmod@dividend:	
  1200                           ; 2 bytes @ 0x2
  1201                           
  1202  0072                     ___lwdiv@dividend:	
  1203                           ; 2 bytes @ 0x2
  1204                           
  1205  0072                     ___lwmod@dividend:	
  1206                           ; 2 bytes @ 0x2
  1207                           
  1208                           
  1209                           ; 2 bytes @ 0x2
  1210  0072                     	ds	1
  1211  0073                     ??_Lcd_Clear:	
  1212  0073                     ??_Lcd_Init:	
  1213                           ; 1 bytes @ 0x3
  1214                           
  1215  0073                     Lcd_Write_Char@y:	
  1216                           ; 1 bytes @ 0x3
  1217                           
  1218  0073                     ___ftpack@exp:	
  1219                           ; 1 bytes @ 0x3
  1220                           
  1221                           
  1222                           ; 1 bytes @ 0x3
  1223  0073                     	ds	1
  1224  0074                     ??_initMain:	
  1225  0074                     ??___awdiv:	
  1226                           ; 1 bytes @ 0x4
  1227                           
  1228  0074                     ??___awmod:	
  1229                           ; 1 bytes @ 0x4
  1230                           
  1231  0074                     ??___lwdiv:	
  1232                           ; 1 bytes @ 0x4
  1233                           
  1234  0074                     ??___lwmod:	
  1235                           ; 1 bytes @ 0x4
  1236                           
  1237  0074                     Lcd_Write_Char@a:	
  1238                           ; 1 bytes @ 0x4
  1239                           
  1240  0074                     ___ftpack@sign:	
  1241                           ; 1 bytes @ 0x4
  1242                           
  1243                           
  1244                           ; 1 bytes @ 0x4
  1245  0074                     	ds	1
  1246  0075                     ??___ftpack:	
  1247  0075                     ??_Lcd_Write_String:	
  1248                           ; 1 bytes @ 0x5
  1249                           
  1250  0075                     ___awdiv@counter:	
  1251                           ; 1 bytes @ 0x5
  1252                           
  1253  0075                     ___awmod@counter:	
  1254                           ; 1 bytes @ 0x5
  1255                           
  1256  0075                     ___lwmod@counter:	
  1257                           ; 1 bytes @ 0x5
  1258                           
  1259  0075                     ___lwdiv@quotient:	
  1260                           ; 1 bytes @ 0x5
  1261                           
  1262                           
  1263                           ; 2 bytes @ 0x5
  1264  0075                     	ds	1
  1265  0076                     ___awdiv@sign:	
  1266  0076                     ___awmod@sign:	
  1267                           ; 1 bytes @ 0x6
  1268                           
  1269  0076                     Lcd_Write_String@i:	
  1270                           ; 1 bytes @ 0x6
  1271                           
  1272                           
  1273                           ; 2 bytes @ 0x6
  1274  0076                     	ds	1
  1275  0077                     ___lwdiv@counter:	
  1276  0077                     ___awdiv@quotient:	
  1277                           ; 1 bytes @ 0x7
  1278                           
  1279                           
  1280                           ; 2 bytes @ 0x7
  1281  0077                     	ds	1
  1282  0078                     ?_utoa:	
  1283  0078                     ?___awtoft:	
  1284                           ; 1 bytes @ 0x8
  1285                           
  1286  0078                     Lcd_Write_String@a:	
  1287                           ; 3 bytes @ 0x8
  1288                           
  1289  0078                     ___awtoft@c:	
  1290                           ; 1 bytes @ 0x8
  1291                           
  1292  0078                     utoa@val:	
  1293                           ; 2 bytes @ 0x8
  1294                           
  1295                           
  1296                           ; 2 bytes @ 0x8
  1297  0078                     	ds	2
  1298  007A                     utoa@base:	
  1299                           
  1300                           ; 2 bytes @ 0xA
  1301  007A                     	ds	1
  1302  007B                     ??___awtoft:	
  1303                           
  1304                           ; 1 bytes @ 0xB
  1305  007B                     	ds	1
  1306  007C                     ??_utoa:	
  1307                           
  1308                           ; 1 bytes @ 0xC
  1309  007C                     	ds	1
  1310  007D                     ??_itoa:	
  1311  007D                     ___awtoft@sign:	
  1312                           ; 1 bytes @ 0xD
  1313                           
  1314                           
  1315                           ; 1 bytes @ 0xD
  1316  007D                     	ds	1
  1317  007E                     ??_Lcd_Write_Integer:	
  1318                           
  1319                           	psect	cstackBANK0
  1320  0020                     __pcstackBANK0:	
  1321                           ; 1 bytes @ 0xE
  1322                           
  1323  0020                     ?___ftdiv:	
  1324  0020                     utoa@v:	
  1325                           ; 3 bytes @ 0x0
  1326                           
  1327  0020                     ___ftdiv@f2:	
  1328                           ; 2 bytes @ 0x0
  1329                           
  1330                           
  1331                           ; 3 bytes @ 0x0
  1332  0020                     	ds	2
  1333  0022                     utoa@c:	
  1334                           
  1335                           ; 1 bytes @ 0x2
  1336  0022                     	ds	1
  1337  0023                     utoa@buf:	
  1338  0023                     ___ftdiv@f1:	
  1339                           ; 1 bytes @ 0x3
  1340                           
  1341                           
  1342                           ; 3 bytes @ 0x3
  1343  0023                     	ds	1
  1344  0024                     ?_itoa:	
  1345  0024                     itoa@val:	
  1346                           ; 1 bytes @ 0x4
  1347                           
  1348                           
  1349                           ; 2 bytes @ 0x4
  1350  0024                     	ds	2
  1351  0026                     ??___ftdiv:	
  1352  0026                     itoa@base:	
  1353                           ; 1 bytes @ 0x6
  1354                           
  1355                           
  1356                           ; 2 bytes @ 0x6
  1357  0026                     	ds	2
  1358  0028                     itoa@cp:	
  1359                           
  1360                           ; 1 bytes @ 0x8
  1361  0028                     	ds	1
  1362  0029                     itoa@buf:	
  1363                           
  1364                           ; 1 bytes @ 0x9
  1365  0029                     	ds	1
  1366  002A                     ?_Lcd_Write_Integer:	
  1367  002A                     ___ftdiv@cntr:	
  1368                           ; 1 bytes @ 0xA
  1369                           
  1370  002A                     Lcd_Write_Integer@v:	
  1371                           ; 1 bytes @ 0xA
  1372                           
  1373                           
  1374                           ; 2 bytes @ 0xA
  1375  002A                     	ds	1
  1376  002B                     ___ftdiv@f3:	
  1377                           
  1378                           ; 3 bytes @ 0xB
  1379  002B                     	ds	1
  1380  002C                     Lcd_Write_Integer@buf:	
  1381                           
  1382                           ; 8 bytes @ 0xC
  1383  002C                     	ds	2
  1384  002E                     ___ftdiv@exp:	
  1385                           
  1386                           ; 1 bytes @ 0xE
  1387  002E                     	ds	1
  1388  002F                     ___ftdiv@sign:	
  1389                           
  1390                           ; 1 bytes @ 0xF
  1391  002F                     	ds	1
  1392  0030                     ?___fttol:	
  1393  0030                     ___fttol@f1:	
  1394                           ; 4 bytes @ 0x10
  1395                           
  1396                           
  1397                           ; 3 bytes @ 0x10
  1398  0030                     	ds	4
  1399  0034                     ??___fttol:	
  1400                           
  1401                           ; 1 bytes @ 0x14
  1402  0034                     	ds	4
  1403  0038                     ___fttol@sign1:	
  1404                           
  1405                           ; 1 bytes @ 0x18
  1406  0038                     	ds	1
  1407  0039                     ___fttol@lval:	
  1408                           
  1409                           ; 4 bytes @ 0x19
  1410  0039                     	ds	4
  1411  003D                     ___fttol@exp1:	
  1412                           
  1413                           ; 1 bytes @ 0x1D
  1414  003D                     	ds	1
  1415  003E                     ??_main:	
  1416                           
  1417                           ; 1 bytes @ 0x1E
  1418  003E                     	ds	2
  1419  0040                     main@ones:	
  1420                           
  1421                           ; 2 bytes @ 0x20
  1422  0040                     	ds	2
  1423  0042                     main@tens:	
  1424                           
  1425                           ; 2 bytes @ 0x22
  1426  0042                     	ds	2
  1427  0044                     main@hundreds:	
  1428                           
  1429                           ; 2 bytes @ 0x24
  1430  0044                     	ds	2
  1431  0046                     main@a:	
  1432                           
  1433                           ; 2 bytes @ 0x26
  1434  0046                     	ds	2
  1435                           
  1436                           	psect	maintext
  1437  0728                     __pmaintext:	
  1438 ;;
  1439 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1440 ;;
  1441 ;; *************** function _main *****************
  1442 ;; Defined at:
  1443 ;;		line 75 in file "Main.c"
  1444 ;; Parameters:    Size  Location     Type
  1445 ;;		None
  1446 ;; Auto vars:     Size  Location     Type
  1447 ;;  a               2   38[BANK0 ] int 
  1448 ;;  hundreds        2   36[BANK0 ] int 
  1449 ;;  tens            2   34[BANK0 ] int 
  1450 ;;  ones            2   32[BANK0 ] int 
  1451 ;; Return value:  Size  Location     Type
  1452 ;;                  1    wreg      void 
  1453 ;; Registers used:
  1454 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1455 ;; Tracked objects:
  1456 ;;		On entry : B1F/0
  1457 ;;		On exit  : 0/0
  1458 ;;		Unchanged: 0/0
  1459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1461 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1462 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1463 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1464 ;;Total ram usage:       10 bytes
  1465 ;; Hardware stack levels required when called:    4
  1466 ;; This function calls:
  1467 ;;		_Lcd_Clear
  1468 ;;		_Lcd_Write_Integer
  1469 ;;		___awdiv
  1470 ;;		___awmod
  1471 ;;		___awtoft
  1472 ;;		___ftdiv
  1473 ;;		___fttol
  1474 ;;		_initMain
  1475 ;; This function is called by:
  1476 ;;		Startup code after reset
  1477 ;; This function uses a non-reentrant model
  1478 ;;
  1479                           
  1480                           
  1481                           ;psect for function _main
  1482  0728                     _main:	
  1483                           
  1484                           ;Main.c: 76: initMain();
  1485                           
  1486                           ;incstack = 0
  1487                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1488  0728  3183  2386  3187   	fcall	_initMain
  1489                           
  1490                           ;Main.c: 79: T1CON = 0x10;
  1491  072B  3010               	movlw	16
  1492  072C  0020               	movlb	0	; select bank0
  1493  072D  0098               	movwf	24	;volatile
  1494  072E                     l1500:	
  1495                           ;Main.c: 82: int a;
  1496                           ;Main.c: 83: int ones;
  1497                           ;Main.c: 84: int tens;
  1498                           ;Main.c: 85: int hundreds;
  1499                           ;Main.c: 87: while(1){
  1500                           
  1501                           
  1502                           ;Main.c: 88: TMR1H = 0;
  1503  072E  0020               	movlb	0	; select bank0
  1504  072F  0197               	clrf	23	;volatile
  1505                           
  1506                           ;Main.c: 89: TMR1L = 0;
  1507  0730  0196               	clrf	22	;volatile
  1508                           
  1509                           ;Main.c: 91: RC5 = 1;
  1510  0731  168E               	bsf	14,5	;volatile
  1511                           
  1512                           ;Main.c: 92: _delay((unsigned long)((10)*(16000000/4000000.0)));
  1513  0732  300D               	movlw	13
  1514  0733                     u1597:	
  1515  0733  0B89               	decfsz	9,f
  1516  0734  2F33               	goto	u1597
  1517  0735  0000               	nop
  1518                           
  1519                           ;Main.c: 93: RC5 = 0;
  1520  0736  0020               	movlb	0	; select bank0
  1521  0737  128E               	bcf	14,5	;volatile
  1522  0738                     l139:	
  1523                           ;Main.c: 95: while(!RC4);
  1524                           
  1525  0738  1E0E               	btfss	14,4	;volatile
  1526  0739  2F38               	goto	l139
  1527                           
  1528                           ;Main.c: 96: T1CONbits.TMR1ON = 1;
  1529  073A  1418               	bsf	24,0	;volatile
  1530  073B                     l142:	
  1531                           ;Main.c: 97: while(RC4);
  1532                           
  1533  073B  1A0E               	btfsc	14,4	;volatile
  1534  073C  2F3B               	goto	l142
  1535                           
  1536                           ;Main.c: 98: T1CONbits.TMR1ON = 0;
  1537  073D  1018               	bcf	24,0	;volatile
  1538                           
  1539                           ;Main.c: 100: a = (TMR1L | (TMR1H<<8));
  1540  073E  0817               	movf	23,w	;volatile
  1541  073F  00C7               	movwf	main@a+1
  1542  0740  0816               	movf	22,w	;volatile
  1543  0741  00C6               	movwf	main@a
  1544                           
  1545                           ;Main.c: 101: a = a/58.8;
  1546  0742  0847               	movf	main@a+1,w
  1547  0743  00F9               	movwf	___awtoft@c+1
  1548  0744  0846               	movf	main@a,w
  1549  0745  00F8               	movwf	___awtoft@c
  1550  0746  3183  2366  3187   	fcall	___awtoft
  1551  0749  0878               	movf	?___awtoft,w
  1552  074A  0020               	movlb	0	; select bank0
  1553  074B  00A3               	movwf	___ftdiv@f1
  1554  074C  0879               	movf	?___awtoft+1,w
  1555  074D  00A4               	movwf	___ftdiv@f1+1
  1556  074E  087A               	movf	?___awtoft+2,w
  1557  074F  00A5               	movwf	___ftdiv@f1+2
  1558  0750  3033               	movlw	51
  1559  0751  00A0               	movwf	___ftdiv@f2
  1560  0752  306B               	movlw	107
  1561  0753  00A1               	movwf	___ftdiv@f2+1
  1562  0754  3042               	movlw	66
  1563  0755  00A2               	movwf	___ftdiv@f2+2
  1564  0756  3186  267F  3187   	fcall	___ftdiv
  1565  0759  0020               	movlb	0	; select bank0
  1566  075A  0820               	movf	?___ftdiv,w
  1567  075B  00B0               	movwf	___fttol@f1
  1568  075C  0821               	movf	?___ftdiv+1,w
  1569  075D  00B1               	movwf	___fttol@f1+1
  1570  075E  0822               	movf	?___ftdiv+2,w
  1571  075F  00B2               	movwf	___fttol@f1+2
  1572  0760  3185  25F8  3187   	fcall	___fttol
  1573  0763  0020               	movlb	0	; select bank0
  1574  0764  0831               	movf	?___fttol+1,w
  1575  0765  00C7               	movwf	main@a+1
  1576  0766  0830               	movf	?___fttol,w
  1577  0767  00C6               	movwf	main@a
  1578                           
  1579                           ;Main.c: 102: a = a/2;
  1580  0768  3002               	movlw	2
  1581  0769  00F0               	movwf	___awdiv@divisor
  1582  076A  3000               	movlw	0
  1583  076B  00F1               	movwf	___awdiv@divisor+1
  1584  076C  0847               	movf	main@a+1,w
  1585  076D  00F3               	movwf	___awdiv@dividend+1
  1586  076E  0846               	movf	main@a,w
  1587  076F  00F2               	movwf	___awdiv@dividend
  1588  0770  3184  24E1  3187   	fcall	___awdiv
  1589  0773  0871               	movf	?___awdiv+1,w
  1590  0774  0020               	movlb	0	; select bank0
  1591  0775  00C7               	movwf	main@a+1
  1592  0776  0870               	movf	?___awdiv,w
  1593  0777  00C6               	movwf	main@a
  1594                           
  1595                           ;Main.c: 103: a = a + 1;
  1596  0778  0846               	movf	main@a,w
  1597  0779  3E01               	addlw	1
  1598  077A  00C6               	movwf	main@a
  1599  077B  3000               	movlw	0
  1600  077C  3D47               	addwfc	main@a+1,w
  1601  077D  00C7               	movwf	main@a+1
  1602                           
  1603                           ;Main.c: 106: ones = a % 10;
  1604  077E  300A               	movlw	10
  1605  077F  00F0               	movwf	___awmod@divisor
  1606  0780  3000               	movlw	0
  1607  0781  00F1               	movwf	___awmod@divisor+1
  1608  0782  0847               	movf	main@a+1,w
  1609  0783  00F3               	movwf	___awmod@dividend+1
  1610  0784  0846               	movf	main@a,w
  1611  0785  00F2               	movwf	___awmod@dividend
  1612  0786  3184  249C  3187   	fcall	___awmod
  1613  0789  0871               	movf	?___awmod+1,w
  1614  078A  0020               	movlb	0	; select bank0
  1615  078B  00C1               	movwf	main@ones+1
  1616  078C  0870               	movf	?___awmod,w
  1617  078D  00C0               	movwf	main@ones
  1618                           
  1619                           ;Main.c: 109: a = a/10;
  1620  078E  300A               	movlw	10
  1621  078F  00F0               	movwf	___awdiv@divisor
  1622  0790  3000               	movlw	0
  1623  0791  00F1               	movwf	___awdiv@divisor+1
  1624  0792  0847               	movf	main@a+1,w
  1625  0793  00F3               	movwf	___awdiv@dividend+1
  1626  0794  0846               	movf	main@a,w
  1627  0795  00F2               	movwf	___awdiv@dividend
  1628  0796  3184  24E1  3187   	fcall	___awdiv
  1629  0799  0871               	movf	?___awdiv+1,w
  1630  079A  0020               	movlb	0	; select bank0
  1631  079B  00C7               	movwf	main@a+1
  1632  079C  0870               	movf	?___awdiv,w
  1633  079D  00C6               	movwf	main@a
  1634                           
  1635                           ;Main.c: 110: tens = a%10;
  1636  079E  300A               	movlw	10
  1637  079F  00F0               	movwf	___awmod@divisor
  1638  07A0  3000               	movlw	0
  1639  07A1  00F1               	movwf	___awmod@divisor+1
  1640  07A2  0847               	movf	main@a+1,w
  1641  07A3  00F3               	movwf	___awmod@dividend+1
  1642  07A4  0846               	movf	main@a,w
  1643  07A5  00F2               	movwf	___awmod@dividend
  1644  07A6  3184  249C  3187   	fcall	___awmod
  1645  07A9  0871               	movf	?___awmod+1,w
  1646  07AA  0020               	movlb	0	; select bank0
  1647  07AB  00C3               	movwf	main@tens+1
  1648  07AC  0870               	movf	?___awmod,w
  1649  07AD  00C2               	movwf	main@tens
  1650                           
  1651                           ;Main.c: 113: a = a/10;
  1652  07AE  300A               	movlw	10
  1653  07AF  00F0               	movwf	___awdiv@divisor
  1654  07B0  3000               	movlw	0
  1655  07B1  00F1               	movwf	___awdiv@divisor+1
  1656  07B2  0847               	movf	main@a+1,w
  1657  07B3  00F3               	movwf	___awdiv@dividend+1
  1658  07B4  0846               	movf	main@a,w
  1659  07B5  00F2               	movwf	___awdiv@dividend
  1660  07B6  3184  24E1  3187   	fcall	___awdiv
  1661  07B9  0871               	movf	?___awdiv+1,w
  1662  07BA  0020               	movlb	0	; select bank0
  1663  07BB  00C7               	movwf	main@a+1
  1664  07BC  0870               	movf	?___awdiv,w
  1665  07BD  00C6               	movwf	main@a
  1666                           
  1667                           ;Main.c: 114: hundreds = a%10;
  1668  07BE  300A               	movlw	10
  1669  07BF  00F0               	movwf	___awmod@divisor
  1670  07C0  3000               	movlw	0
  1671  07C1  00F1               	movwf	___awmod@divisor+1
  1672  07C2  0847               	movf	main@a+1,w
  1673  07C3  00F3               	movwf	___awmod@dividend+1
  1674  07C4  0846               	movf	main@a,w
  1675  07C5  00F2               	movwf	___awmod@dividend
  1676  07C6  3184  249C  3187   	fcall	___awmod
  1677  07C9  0871               	movf	?___awmod+1,w
  1678  07CA  0020               	movlb	0	; select bank0
  1679  07CB  00C5               	movwf	main@hundreds+1
  1680  07CC  0870               	movf	?___awmod,w
  1681  07CD  00C4               	movwf	main@hundreds
  1682                           
  1683                           ;Main.c: 116: Lcd_Write_Integer(hundreds);
  1684  07CE  0845               	movf	main@hundreds+1,w
  1685  07CF  00AB               	movwf	Lcd_Write_Integer@v+1
  1686  07D0  0844               	movf	main@hundreds,w
  1687  07D1  00AA               	movwf	Lcd_Write_Integer@v
  1688  07D2  3183  230F  3187   	fcall	_Lcd_Write_Integer
  1689                           
  1690                           ;Main.c: 117: Lcd_Write_Integer(tens);
  1691  07D5  0020               	movlb	0	; select bank0
  1692  07D6  0843               	movf	main@tens+1,w
  1693  07D7  00AB               	movwf	Lcd_Write_Integer@v+1
  1694  07D8  0842               	movf	main@tens,w
  1695  07D9  00AA               	movwf	Lcd_Write_Integer@v
  1696  07DA  3183  230F  3187   	fcall	_Lcd_Write_Integer
  1697                           
  1698                           ;Main.c: 118: Lcd_Write_Integer(ones);
  1699  07DD  0020               	movlb	0	; select bank0
  1700  07DE  0841               	movf	main@ones+1,w
  1701  07DF  00AB               	movwf	Lcd_Write_Integer@v+1
  1702  07E0  0840               	movf	main@ones,w
  1703  07E1  00AA               	movwf	Lcd_Write_Integer@v
  1704  07E2  3183  230F  3187   	fcall	_Lcd_Write_Integer
  1705                           
  1706                           ;Main.c: 121: _delay((unsigned long)((1000)*(16000000/4000.0)));
  1707  07E5  3015               	movlw	21
  1708  07E6  0020               	movlb	0	; select bank0
  1709  07E7  00BF               	movwf	??_main+1
  1710  07E8  304B               	movlw	75
  1711  07E9  00BE               	movwf	??_main
  1712  07EA  30BE               	movlw	190
  1713  07EB                     u1607:	
  1714  07EB  0B89               	decfsz	9,f
  1715  07EC  2FEB               	goto	u1607
  1716  07ED  0BBE               	decfsz	??_main,f
  1717  07EE  2FEB               	goto	u1607
  1718  07EF  0BBF               	decfsz	??_main+1,f
  1719  07F0  2FEB               	goto	u1607
  1720  07F1  0000               	nop
  1721                           
  1722                           ;Main.c: 122: Lcd_Clear();
  1723  07F2  3182  22FE  3187   	fcall	_Lcd_Clear
  1724  07F5  2F2E               	goto	l1500
  1725  07F6                     __end_of_main:	
  1726                           ;Main.c: 123: }
  1727                           ;Main.c: 124: return;
  1728                           
  1729                           
  1730                           	psect	text1
  1731  0386                     __ptext1:	
  1732 ;; *************** function _initMain *****************
  1733 ;; Defined at:
  1734 ;;		line 39 in file "Main.c"
  1735 ;; Parameters:    Size  Location     Type
  1736 ;;		None
  1737 ;; Auto vars:     Size  Location     Type
  1738 ;;		None
  1739 ;; Return value:  Size  Location     Type
  1740 ;;                  1    wreg      void 
  1741 ;; Registers used:
  1742 ;;		wreg, status,2, status,0, pclath, cstack
  1743 ;; Tracked objects:
  1744 ;;		On entry : 0/0
  1745 ;;		On exit  : 0/0
  1746 ;;		Unchanged: 0/0
  1747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1750 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1751 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1752 ;;Total ram usage:        2 bytes
  1753 ;; Hardware stack levels used:    1
  1754 ;; Hardware stack levels required when called:    3
  1755 ;; This function calls:
  1756 ;;		_Lcd_Clear
  1757 ;;		_Lcd_Init
  1758 ;;		_internal_16
  1759 ;; This function is called by:
  1760 ;;		_main
  1761 ;; This function uses a non-reentrant model
  1762 ;;
  1763                           
  1764                           
  1765                           ;psect for function _initMain
  1766  0386                     _initMain:	
  1767                           
  1768                           ;Main.c: 41: internal_16();
  1769                           
  1770                           ;incstack = 0
  1771                           ; Regs used in _initMain: [wreg+status,2+status,0+pclath+cstack]
  1772  0386  3183  2306  3183   	fcall	_internal_16
  1773                           
  1774                           ;Main.c: 46: TRISD = 0;
  1775  0389  0021               	movlb	1	; select bank1
  1776  038A  018F               	clrf	15	;volatile
  1777                           
  1778                           ;Main.c: 47: PORTD = 0;
  1779  038B  0020               	movlb	0	; select bank0
  1780  038C  018F               	clrf	15	;volatile
  1781                           
  1782                           ;Main.c: 48: ANSELD = 0;
  1783  038D  0023               	movlb	3	; select bank3
  1784  038E  018F               	clrf	15	;volatile
  1785                           
  1786                           ;Main.c: 55: TRISCbits.TRISC4 = 1;
  1787  038F  0021               	movlb	1	; select bank1
  1788  0390  160E               	bsf	14,4	;volatile
  1789                           
  1790                           ;Main.c: 56: TRISCbits.TRISC5 = 0;
  1791  0391  128E               	bcf	14,5	;volatile
  1792                           
  1793                           ;Main.c: 59: ANSELC = 0;
  1794  0392  0023               	movlb	3	; select bank3
  1795  0393  018E               	clrf	14	;volatile
  1796                           
  1797                           ;Main.c: 62: Lcd_Init();
  1798  0394  3184  2458  3183   	fcall	_Lcd_Init
  1799                           
  1800                           ;Main.c: 63: _delay((unsigned long)((100)*(16000000/4000.0)));
  1801  0397  3003               	movlw	3
  1802  0398  00F5               	movwf	??_initMain+1
  1803  0399  3008               	movlw	8
  1804  039A  00F4               	movwf	??_initMain
  1805  039B  3077               	movlw	119
  1806  039C                     u1617:	
  1807  039C  0B89               	decfsz	9,f
  1808  039D  2B9C               	goto	u1617
  1809  039E  0BF4               	decfsz	??_initMain,f
  1810  039F  2B9C               	goto	u1617
  1811  03A0  0BF5               	decfsz	??_initMain+1,f
  1812  03A1  2B9C               	goto	u1617
  1813  03A2  0000               	nop
  1814                           
  1815                           ;Main.c: 64: Lcd_Clear();
  1816  03A3  3182  22FE         	fcall	_Lcd_Clear
  1817  03A5  0008               	return
  1818  03A6                     __end_of_initMain:	
  1819                           
  1820                           	psect	text2
  1821  0306                     __ptext2:	
  1822 ;; *************** function _internal_16 *****************
  1823 ;; Defined at:
  1824 ;;		line 56 in file "16F1717_Internal.c"
  1825 ;; Parameters:    Size  Location     Type
  1826 ;;		None
  1827 ;; Auto vars:     Size  Location     Type
  1828 ;;		None
  1829 ;; Return value:  Size  Location     Type
  1830 ;;                  1    wreg      void 
  1831 ;; Registers used:
  1832 ;;		None
  1833 ;; Tracked objects:
  1834 ;;		On entry : 0/0
  1835 ;;		On exit  : 0/0
  1836 ;;		Unchanged: 0/0
  1837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1842 ;;Total ram usage:        0 bytes
  1843 ;; Hardware stack levels used:    1
  1844 ;; This function calls:
  1845 ;;		Nothing
  1846 ;; This function is called by:
  1847 ;;		_initMain
  1848 ;; This function uses a non-reentrant model
  1849 ;;
  1850                           
  1851                           
  1852                           ;psect for function _internal_16
  1853  0306                     _internal_16:	
  1854                           
  1855                           ;16F1717_Internal.c: 58: SCS0 = 0;
  1856                           
  1857                           ;incstack = 0
  1858                           ; Regs used in _internal_16: []
  1859  0306  0021               	movlb	1	; select bank1
  1860  0307  1019               	bcf	25,0	;volatile
  1861                           
  1862                           ;16F1717_Internal.c: 59: SCS1 = 0;
  1863  0308  1099               	bcf	25,1	;volatile
  1864                           
  1865                           ;16F1717_Internal.c: 62: IRCF0 = 1;
  1866  0309  1599               	bsf	25,3	;volatile
  1867                           
  1868                           ;16F1717_Internal.c: 63: IRCF1 = 1;
  1869  030A  1619               	bsf	25,4	;volatile
  1870                           
  1871                           ;16F1717_Internal.c: 64: IRCF2 = 1;
  1872  030B  1699               	bsf	25,5	;volatile
  1873                           
  1874                           ;16F1717_Internal.c: 65: IRCF3 = 1;
  1875  030C  1719               	bsf	25,6	;volatile
  1876                           
  1877                           ;16F1717_Internal.c: 68: SPLLEN = 0;
  1878  030D  1399               	bcf	25,7	;volatile
  1879  030E  0008               	return
  1880  030F                     __end_of_internal_16:	
  1881                           
  1882                           	psect	text3
  1883  0458                     __ptext3:	
  1884 ;; *************** function _Lcd_Init *****************
  1885 ;; Defined at:
  1886 ;;		line 119 in file "LCD.c"
  1887 ;; Parameters:    Size  Location     Type
  1888 ;;		None
  1889 ;; Auto vars:     Size  Location     Type
  1890 ;;		None
  1891 ;; Return value:  Size  Location     Type
  1892 ;;                  1    wreg      void 
  1893 ;; Registers used:
  1894 ;;		wreg, status,2, status,0, pclath, cstack
  1895 ;; Tracked objects:
  1896 ;;		On entry : 0/0
  1897 ;;		On exit  : 0/0
  1898 ;;		Unchanged: 0/0
  1899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1902 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1903 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1904 ;;Total ram usage:        1 bytes
  1905 ;; Hardware stack levels used:    1
  1906 ;; Hardware stack levels required when called:    2
  1907 ;; This function calls:
  1908 ;;		_Lcd_Cmd
  1909 ;;		_Lcd_Port
  1910 ;; This function is called by:
  1911 ;;		_initMain
  1912 ;; This function uses a non-reentrant model
  1913 ;;
  1914                           
  1915                           
  1916                           ;psect for function _Lcd_Init
  1917  0458                     _Lcd_Init:	
  1918                           
  1919                           ;LCD.c: 121: Lcd_Port(0x00);
  1920                           
  1921                           ;incstack = 0
  1922                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1923  0458  3000               	movlw	0
  1924  0459  3183  2333  3184   	fcall	_Lcd_Port
  1925                           
  1926                           ;LCD.c: 122: _delay((unsigned long)((20)*(16000000/4000.0)));
  1927  045C  3068               	movlw	104
  1928  045D  00F3               	movwf	??_Lcd_Init
  1929  045E  30E4               	movlw	228
  1930  045F                     u1627:	
  1931  045F  0B89               	decfsz	9,f
  1932  0460  2C5F               	goto	u1627
  1933  0461  0BF3               	decfsz	??_Lcd_Init,f
  1934  0462  2C5F               	goto	u1627
  1935  0463  3200               	nop2
  1936                           
  1937                           ;LCD.c: 123: Lcd_Cmd(0x03);
  1938  0464  3003               	movlw	3
  1939  0465  3183  231F  3184   	fcall	_Lcd_Cmd
  1940                           
  1941                           ;LCD.c: 124: _delay((unsigned long)((5)*(16000000/4000.0)));
  1942  0468  301A               	movlw	26
  1943  0469  00F3               	movwf	??_Lcd_Init
  1944  046A  30F8               	movlw	248
  1945  046B                     u1637:	
  1946  046B  0B89               	decfsz	9,f
  1947  046C  2C6B               	goto	u1637
  1948  046D  0BF3               	decfsz	??_Lcd_Init,f
  1949  046E  2C6B               	goto	u1637
  1950  046F  3200               	nop2
  1951                           
  1952                           ;LCD.c: 125: Lcd_Cmd(0x03);
  1953  0470  3003               	movlw	3
  1954  0471  3183  231F  3184   	fcall	_Lcd_Cmd
  1955                           
  1956                           ;LCD.c: 126: _delay((unsigned long)((11)*(16000000/4000.0)));
  1957  0474  303A               	movlw	58
  1958  0475  00F3               	movwf	??_Lcd_Init
  1959  0476  3023               	movlw	35
  1960  0477                     u1647:	
  1961  0477  0B89               	decfsz	9,f
  1962  0478  2C77               	goto	u1647
  1963  0479  0BF3               	decfsz	??_Lcd_Init,f
  1964  047A  2C77               	goto	u1647
  1965  047B  0000               	nop
  1966                           
  1967                           ;LCD.c: 127: Lcd_Cmd(0x03);
  1968  047C  3003               	movlw	3
  1969  047D  3183  231F  3184   	fcall	_Lcd_Cmd
  1970                           
  1971                           ;LCD.c: 129: Lcd_Cmd(0x02);
  1972  0480  3002               	movlw	2
  1973  0481  3183  231F  3184   	fcall	_Lcd_Cmd
  1974                           
  1975                           ;LCD.c: 130: Lcd_Cmd(0x02);
  1976  0484  3002               	movlw	2
  1977  0485  3183  231F  3184   	fcall	_Lcd_Cmd
  1978                           
  1979                           ;LCD.c: 131: Lcd_Cmd(0x08);
  1980  0488  3008               	movlw	8
  1981  0489  3183  231F  3184   	fcall	_Lcd_Cmd
  1982                           
  1983                           ;LCD.c: 132: Lcd_Cmd(0x00);
  1984  048C  3000               	movlw	0
  1985  048D  3183  231F  3184   	fcall	_Lcd_Cmd
  1986                           
  1987                           ;LCD.c: 133: Lcd_Cmd(0x0C);
  1988  0490  300C               	movlw	12
  1989  0491  3183  231F  3184   	fcall	_Lcd_Cmd
  1990                           
  1991                           ;LCD.c: 134: Lcd_Cmd(0x00);
  1992  0494  3000               	movlw	0
  1993  0495  3183  231F  3184   	fcall	_Lcd_Cmd
  1994                           
  1995                           ;LCD.c: 135: Lcd_Cmd(0x06);
  1996  0498  3006               	movlw	6
  1997  0499  3183  231F         	fcall	_Lcd_Cmd
  1998  049B  0008               	return
  1999  049C                     __end_of_Lcd_Init:	
  2000                           
  2001                           	psect	text4
  2002  02FE                     __ptext4:	
  2003 ;; *************** function _Lcd_Clear *****************
  2004 ;; Defined at:
  2005 ;;		line 76 in file "LCD.c"
  2006 ;; Parameters:    Size  Location     Type
  2007 ;;		None
  2008 ;; Auto vars:     Size  Location     Type
  2009 ;;		None
  2010 ;; Return value:  Size  Location     Type
  2011 ;;                  1    wreg      void 
  2012 ;; Registers used:
  2013 ;;		wreg, status,2, status,0, pclath, cstack
  2014 ;; Tracked objects:
  2015 ;;		On entry : 0/0
  2016 ;;		On exit  : 0/0
  2017 ;;		Unchanged: 0/0
  2018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2023 ;;Total ram usage:        0 bytes
  2024 ;; Hardware stack levels used:    1
  2025 ;; Hardware stack levels required when called:    2
  2026 ;; This function calls:
  2027 ;;		_Lcd_Cmd
  2028 ;; This function is called by:
  2029 ;;		_initMain
  2030 ;;		_main
  2031 ;; This function uses a non-reentrant model
  2032 ;;
  2033                           
  2034                           
  2035                           ;psect for function _Lcd_Clear
  2036  02FE                     _Lcd_Clear:	
  2037                           
  2038                           ;LCD.c: 78: Lcd_Cmd(0);
  2039                           
  2040                           ;incstack = 0
  2041                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2042  02FE  3000               	movlw	0
  2043  02FF  3183  231F  3182   	fcall	_Lcd_Cmd
  2044                           
  2045                           ;LCD.c: 79: Lcd_Cmd(1);
  2046  0302  3001               	movlw	1
  2047  0303  3183  231F         	fcall	_Lcd_Cmd
  2048  0305  0008               	return
  2049  0306                     __end_of_Lcd_Clear:	
  2050                           
  2051                           	psect	text5
  2052  031F                     __ptext5:	
  2053 ;; *************** function _Lcd_Cmd *****************
  2054 ;; Defined at:
  2055 ;;		line 59 in file "LCD.c"
  2056 ;; Parameters:    Size  Location     Type
  2057 ;;  a               1    wreg     unsigned char 
  2058 ;; Auto vars:     Size  Location     Type
  2059 ;;  a               1    2[COMMON] unsigned char 
  2060 ;; Return value:  Size  Location     Type
  2061 ;;                  1    wreg      void 
  2062 ;; Registers used:
  2063 ;;		wreg, status,2, status,0, pclath, cstack
  2064 ;; Tracked objects:
  2065 ;;		On entry : 0/0
  2066 ;;		On exit  : 0/0
  2067 ;;		Unchanged: 0/0
  2068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2070 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2071 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2072 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2073 ;;Total ram usage:        2 bytes
  2074 ;; Hardware stack levels used:    1
  2075 ;; Hardware stack levels required when called:    1
  2076 ;; This function calls:
  2077 ;;		_Lcd_Port
  2078 ;; This function is called by:
  2079 ;;		_Lcd_Clear
  2080 ;;		_Lcd_Init
  2081 ;;		_Lcd_Set_Cursor
  2082 ;;		_Lcd_Shift_Right
  2083 ;;		_Lcd_Shift_Left
  2084 ;; This function uses a non-reentrant model
  2085 ;;
  2086                           
  2087                           
  2088                           ;psect for function _Lcd_Cmd
  2089  031F                     _Lcd_Cmd:	
  2090                           
  2091                           ;incstack = 0
  2092                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2093                           ;Lcd_Cmd@a stored from wreg
  2094  031F  00F2               	movwf	Lcd_Cmd@a
  2095                           
  2096                           ;LCD.c: 61: RD2 = 0;
  2097  0320  0020               	movlb	0	; select bank0
  2098  0321  110F               	bcf	15,2	;volatile
  2099                           
  2100                           ;LCD.c: 62: Lcd_Port(a);
  2101  0322  0872               	movf	Lcd_Cmd@a,w
  2102  0323  3183  2333  3183   	fcall	_Lcd_Port
  2103                           
  2104                           ;LCD.c: 63: RD3 = 1;
  2105  0326  0020               	movlb	0	; select bank0
  2106  0327  158F               	bsf	15,3	;volatile
  2107                           
  2108                           ;LCD.c: 64: _delay((unsigned long)((4)*(16000000/4000.0)));
  2109  0328  3015               	movlw	21
  2110  0329  00F1               	movwf	??_Lcd_Cmd
  2111  032A  30C6               	movlw	198
  2112  032B                     u1657:	
  2113  032B  0B89               	decfsz	9,f
  2114  032C  2B2B               	goto	u1657
  2115  032D  0BF1               	decfsz	??_Lcd_Cmd,f
  2116  032E  2B2B               	goto	u1657
  2117  032F  3200               	nop2
  2118                           
  2119                           ;LCD.c: 65: RD3 = 0;
  2120  0330  0020               	movlb	0	; select bank0
  2121  0331  118F               	bcf	15,3	;volatile
  2122  0332  0008               	return
  2123  0333                     __end_of_Lcd_Cmd:	
  2124                           
  2125                           	psect	text6
  2126  05F8                     __ptext6:	
  2127 ;; *************** function ___fttol *****************
  2128 ;; Defined at:
  2129 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\fttol.c"
  2130 ;; Parameters:    Size  Location     Type
  2131 ;;  f1              3   16[BANK0 ] float 
  2132 ;; Auto vars:     Size  Location     Type
  2133 ;;  lval            4   25[BANK0 ] unsigned long 
  2134 ;;  exp1            1   29[BANK0 ] unsigned char 
  2135 ;;  sign1           1   24[BANK0 ] unsigned char 
  2136 ;; Return value:  Size  Location     Type
  2137 ;;                  4   16[BANK0 ] long 
  2138 ;; Registers used:
  2139 ;;		wreg, status,2, status,0
  2140 ;; Tracked objects:
  2141 ;;		On entry : 0/0
  2142 ;;		On exit  : 0/0
  2143 ;;		Unchanged: 0/0
  2144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2145 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2146 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2147 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2148 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2149 ;;Total ram usage:       14 bytes
  2150 ;; Hardware stack levels used:    1
  2151 ;; This function calls:
  2152 ;;		Nothing
  2153 ;; This function is called by:
  2154 ;;		_main
  2155 ;; This function uses a non-reentrant model
  2156 ;;
  2157                           
  2158                           
  2159                           ;psect for function ___fttol
  2160  05F8                     ___fttol:	
  2161                           
  2162                           ;incstack = 0
  2163                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  2164  05F8  0020               	movlb	0	; select bank0
  2165  05F9  0830               	movf	___fttol@f1,w
  2166  05FA  00B4               	movwf	??___fttol
  2167  05FB  0831               	movf	___fttol@f1+1,w
  2168  05FC  00B5               	movwf	??___fttol+1
  2169  05FD  0832               	movf	___fttol@f1+2,w
  2170  05FE  00B6               	movwf	??___fttol+2
  2171  05FF  1003               	clrc
  2172  0600  0D35               	rlf	??___fttol+1,w
  2173  0601  0D36               	rlf	??___fttol+2,w
  2174  0602  00B7               	movwf	??___fttol+3
  2175  0603  0837               	movf	??___fttol+3,w
  2176  0604  00BD               	movwf	___fttol@exp1
  2177  0605  083D               	movf	___fttol@exp1,w
  2178  0606  1D03               	btfss	3,2
  2179  0607  2E11               	goto	l1432
  2180  0608  3000               	movlw	0
  2181  0609  00B3               	movwf	?___fttol+3
  2182  060A  3000               	movlw	0
  2183  060B  00B2               	movwf	?___fttol+2
  2184  060C  3000               	movlw	0
  2185  060D  00B1               	movwf	?___fttol+1
  2186  060E  3000               	movlw	0
  2187  060F  00B0               	movwf	?___fttol
  2188  0610  0008               	return
  2189  0611                     l1432:	
  2190  0611  0830               	movf	___fttol@f1,w
  2191  0612  00B4               	movwf	??___fttol
  2192  0613  0831               	movf	___fttol@f1+1,w
  2193  0614  00B5               	movwf	??___fttol+1
  2194  0615  0832               	movf	___fttol@f1+2,w
  2195  0616  00B6               	movwf	??___fttol+2
  2196  0617  3017               	movlw	23
  2197  0618                     u1445:	
  2198  0618  36B6               	lsrf	??___fttol+2,f
  2199  0619  0CB5               	rrf	??___fttol+1,f
  2200  061A  0CB4               	rrf	??___fttol,f
  2201  061B  0B89               	decfsz	9,f
  2202  061C  2E18               	goto	u1445
  2203  061D  0834               	movf	??___fttol,w
  2204  061E  00B7               	movwf	??___fttol+3
  2205  061F  0837               	movf	??___fttol+3,w
  2206  0620  00B8               	movwf	___fttol@sign1
  2207  0621  17B1               	bsf	___fttol@f1+1,7
  2208  0622  30FF               	movlw	255
  2209  0623  05B0               	andwf	___fttol@f1,f
  2210  0624  30FF               	movlw	255
  2211  0625  05B1               	andwf	___fttol@f1+1,f
  2212  0626  3000               	movlw	0
  2213  0627  05B2               	andwf	___fttol@f1+2,f
  2214  0628  0830               	movf	___fttol@f1,w
  2215  0629  00B9               	movwf	___fttol@lval
  2216  062A  0831               	movf	___fttol@f1+1,w
  2217  062B  00BA               	movwf	___fttol@lval+1
  2218  062C  0832               	movf	___fttol@f1+2,w
  2219  062D  00BB               	movwf	___fttol@lval+2
  2220  062E  01BC               	clrf	___fttol@lval+3
  2221  062F  308E               	movlw	142
  2222  0630  02BD               	subwf	___fttol@exp1,f
  2223  0631  1FBD               	btfss	___fttol@exp1,7
  2224  0632  2E4F               	goto	l1452
  2225  0633  083D               	movf	___fttol@exp1,w
  2226  0634  3A80               	xorlw	128
  2227  0635  3E8F               	addlw	143
  2228  0636  1803               	skipnc
  2229  0637  2E41               	goto	l1450
  2230  0638  3000               	movlw	0
  2231  0639  00B3               	movwf	?___fttol+3
  2232  063A  3000               	movlw	0
  2233  063B  00B2               	movwf	?___fttol+2
  2234  063C  3000               	movlw	0
  2235  063D  00B1               	movwf	?___fttol+1
  2236  063E  3000               	movlw	0
  2237  063F  00B0               	movwf	?___fttol
  2238  0640  0008               	return
  2239  0641                     l1450:	
  2240  0641  3001               	movlw	1
  2241  0642                     u1475:	
  2242  0642  36BC               	lsrf	___fttol@lval+3,f
  2243  0643  0CBB               	rrf	___fttol@lval+2,f
  2244  0644  0CBA               	rrf	___fttol@lval+1,f
  2245  0645  0CB9               	rrf	___fttol@lval,f
  2246  0646  0B89               	decfsz	9,f
  2247  0647  2E42               	goto	u1475
  2248  0648  3001               	movlw	1
  2249  0649  00B4               	movwf	??___fttol
  2250  064A  0834               	movf	??___fttol,w
  2251  064B  07BD               	addwf	___fttol@exp1,f
  2252  064C  1903               	btfsc	3,2
  2253  064D  2E68               	goto	l1460
  2254  064E  2E41               	goto	l1450
  2255  064F                     l1452:	
  2256  064F  3018               	movlw	24
  2257  0650  023D               	subwf	___fttol@exp1,w
  2258  0651  1C03               	skipc
  2259  0652  2E65               	goto	l459
  2260  0653  3000               	movlw	0
  2261  0654  00B3               	movwf	?___fttol+3
  2262  0655  3000               	movlw	0
  2263  0656  00B2               	movwf	?___fttol+2
  2264  0657  3000               	movlw	0
  2265  0658  00B1               	movwf	?___fttol+1
  2266  0659  3000               	movlw	0
  2267  065A  00B0               	movwf	?___fttol
  2268  065B  0008               	return
  2269  065C                     l1458:	
  2270  065C  3001               	movlw	1
  2271  065D                     u1505:	
  2272  065D  35B9               	lslf	___fttol@lval,f
  2273  065E  0DBA               	rlf	___fttol@lval+1,f
  2274  065F  0DBB               	rlf	___fttol@lval+2,f
  2275  0660  0DBC               	rlf	___fttol@lval+3,f
  2276  0661  0B89               	decfsz	9,f
  2277  0662  2E5D               	goto	u1505
  2278  0663  3001               	movlw	1
  2279  0664  02BD               	subwf	___fttol@exp1,f
  2280  0665                     l459:	
  2281  0665  083D               	movf	___fttol@exp1,w
  2282  0666  1D03               	btfss	3,2
  2283  0667  2E5C               	goto	l1458
  2284  0668                     l1460:	
  2285  0668  0838               	movf	___fttol@sign1,w
  2286  0669  1903               	btfsc	3,2
  2287  066A  2E76               	goto	l1464
  2288  066B  09B9               	comf	___fttol@lval,f
  2289  066C  09BA               	comf	___fttol@lval+1,f
  2290  066D  09BB               	comf	___fttol@lval+2,f
  2291  066E  09BC               	comf	___fttol@lval+3,f
  2292  066F  0AB9               	incf	___fttol@lval,f
  2293  0670  1903               	skipnz
  2294  0671  0ABA               	incf	___fttol@lval+1,f
  2295  0672  1903               	skipnz
  2296  0673  0ABB               	incf	___fttol@lval+2,f
  2297  0674  1903               	skipnz
  2298  0675  0ABC               	incf	___fttol@lval+3,f
  2299  0676                     l1464:	
  2300  0676  083C               	movf	___fttol@lval+3,w
  2301  0677  00B3               	movwf	?___fttol+3
  2302  0678  083B               	movf	___fttol@lval+2,w
  2303  0679  00B2               	movwf	?___fttol+2
  2304  067A  083A               	movf	___fttol@lval+1,w
  2305  067B  00B1               	movwf	?___fttol+1
  2306  067C  0839               	movf	___fttol@lval,w
  2307  067D  00B0               	movwf	?___fttol
  2308  067E  0008               	return
  2309  067F                     __end_of___fttol:	
  2310                           
  2311                           	psect	text7
  2312  067F                     __ptext7:	
  2313 ;; *************** function ___ftdiv *****************
  2314 ;; Defined at:
  2315 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftdiv.c"
  2316 ;; Parameters:    Size  Location     Type
  2317 ;;  f2              3    0[BANK0 ] float 
  2318 ;;  f1              3    3[BANK0 ] float 
  2319 ;; Auto vars:     Size  Location     Type
  2320 ;;  f3              3   11[BANK0 ] float 
  2321 ;;  sign            1   15[BANK0 ] unsigned char 
  2322 ;;  exp             1   14[BANK0 ] unsigned char 
  2323 ;;  cntr            1   10[BANK0 ] unsigned char 
  2324 ;; Return value:  Size  Location     Type
  2325 ;;                  3    0[BANK0 ] float 
  2326 ;; Registers used:
  2327 ;;		wreg, status,2, status,0, pclath, cstack
  2328 ;; Tracked objects:
  2329 ;;		On entry : 0/0
  2330 ;;		On exit  : 0/0
  2331 ;;		Unchanged: 0/0
  2332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2333 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2334 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2335 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2336 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2337 ;;Total ram usage:       16 bytes
  2338 ;; Hardware stack levels used:    1
  2339 ;; Hardware stack levels required when called:    1
  2340 ;; This function calls:
  2341 ;;		___ftpack
  2342 ;; This function is called by:
  2343 ;;		_main
  2344 ;; This function uses a non-reentrant model
  2345 ;;
  2346                           
  2347                           
  2348                           ;psect for function ___ftdiv
  2349  067F                     ___ftdiv:	
  2350                           
  2351                           ;incstack = 0
  2352                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  2353  067F  0020               	movlb	0	; select bank0
  2354  0680  0823               	movf	___ftdiv@f1,w
  2355  0681  00A6               	movwf	??___ftdiv
  2356  0682  0824               	movf	___ftdiv@f1+1,w
  2357  0683  00A7               	movwf	??___ftdiv+1
  2358  0684  0825               	movf	___ftdiv@f1+2,w
  2359  0685  00A8               	movwf	??___ftdiv+2
  2360  0686  1003               	clrc
  2361  0687  0D27               	rlf	??___ftdiv+1,w
  2362  0688  0D28               	rlf	??___ftdiv+2,w
  2363  0689  00A9               	movwf	??___ftdiv+3
  2364  068A  0829               	movf	??___ftdiv+3,w
  2365  068B  00AE               	movwf	___ftdiv@exp
  2366  068C  082E               	movf	___ftdiv@exp,w
  2367  068D  1D03               	btfss	3,2
  2368  068E  2E96               	goto	l1390
  2369  068F  3000               	movlw	0
  2370  0690  00A0               	movwf	?___ftdiv
  2371  0691  3000               	movlw	0
  2372  0692  00A1               	movwf	?___ftdiv+1
  2373  0693  3000               	movlw	0
  2374  0694  00A2               	movwf	?___ftdiv+2
  2375  0695  0008               	return
  2376  0696                     l1390:	
  2377  0696  0820               	movf	___ftdiv@f2,w
  2378  0697  00A6               	movwf	??___ftdiv
  2379  0698  0821               	movf	___ftdiv@f2+1,w
  2380  0699  00A7               	movwf	??___ftdiv+1
  2381  069A  0822               	movf	___ftdiv@f2+2,w
  2382  069B  00A8               	movwf	??___ftdiv+2
  2383  069C  1003               	clrc
  2384  069D  0D27               	rlf	??___ftdiv+1,w
  2385  069E  0D28               	rlf	??___ftdiv+2,w
  2386  069F  00A9               	movwf	??___ftdiv+3
  2387  06A0  0829               	movf	??___ftdiv+3,w
  2388  06A1  00AF               	movwf	___ftdiv@sign
  2389  06A2  082F               	movf	___ftdiv@sign,w
  2390  06A3  1D03               	btfss	3,2
  2391  06A4  2EAC               	goto	l1396
  2392  06A5  3000               	movlw	0
  2393  06A6  00A0               	movwf	?___ftdiv
  2394  06A7  3000               	movlw	0
  2395  06A8  00A1               	movwf	?___ftdiv+1
  2396  06A9  3000               	movlw	0
  2397  06AA  00A2               	movwf	?___ftdiv+2
  2398  06AB  0008               	return
  2399  06AC                     l1396:	
  2400  06AC  3000               	movlw	0
  2401  06AD  00AB               	movwf	___ftdiv@f3
  2402  06AE  3000               	movlw	0
  2403  06AF  00AC               	movwf	___ftdiv@f3+1
  2404  06B0  3000               	movlw	0
  2405  06B1  00AD               	movwf	___ftdiv@f3+2
  2406  06B2  3089               	movlw	137
  2407  06B3  072F               	addwf	___ftdiv@sign,w
  2408  06B4  00A6               	movwf	??___ftdiv
  2409  06B5  0826               	movf	??___ftdiv,w
  2410  06B6  02AE               	subwf	___ftdiv@exp,f
  2411  06B7  0823               	movf	___ftdiv@f1,w
  2412  06B8  00A6               	movwf	??___ftdiv
  2413  06B9  0824               	movf	___ftdiv@f1+1,w
  2414  06BA  00A7               	movwf	??___ftdiv+1
  2415  06BB  0825               	movf	___ftdiv@f1+2,w
  2416  06BC  00A8               	movwf	??___ftdiv+2
  2417  06BD  3010               	movlw	16
  2418  06BE                     u1375:	
  2419  06BE  36A8               	lsrf	??___ftdiv+2,f
  2420  06BF  0CA7               	rrf	??___ftdiv+1,f
  2421  06C0  0CA6               	rrf	??___ftdiv,f
  2422  06C1  0B89               	decfsz	9,f
  2423  06C2  2EBE               	goto	u1375
  2424  06C3  0826               	movf	??___ftdiv,w
  2425  06C4  00A9               	movwf	??___ftdiv+3
  2426  06C5  0829               	movf	??___ftdiv+3,w
  2427  06C6  00AF               	movwf	___ftdiv@sign
  2428  06C7  0820               	movf	___ftdiv@f2,w
  2429  06C8  00A6               	movwf	??___ftdiv
  2430  06C9  0821               	movf	___ftdiv@f2+1,w
  2431  06CA  00A7               	movwf	??___ftdiv+1
  2432  06CB  0822               	movf	___ftdiv@f2+2,w
  2433  06CC  00A8               	movwf	??___ftdiv+2
  2434  06CD  3010               	movlw	16
  2435  06CE                     u1385:	
  2436  06CE  36A8               	lsrf	??___ftdiv+2,f
  2437  06CF  0CA7               	rrf	??___ftdiv+1,f
  2438  06D0  0CA6               	rrf	??___ftdiv,f
  2439  06D1  0B89               	decfsz	9,f
  2440  06D2  2ECE               	goto	u1385
  2441  06D3  0826               	movf	??___ftdiv,w
  2442  06D4  00A9               	movwf	??___ftdiv+3
  2443  06D5  0829               	movf	??___ftdiv+3,w
  2444  06D6  06AF               	xorwf	___ftdiv@sign,f
  2445  06D7  3080               	movlw	128
  2446  06D8  00A6               	movwf	??___ftdiv
  2447  06D9  0826               	movf	??___ftdiv,w
  2448  06DA  05AF               	andwf	___ftdiv@sign,f
  2449  06DB  17A4               	bsf	___ftdiv@f1+1,7
  2450  06DC  30FF               	movlw	255
  2451  06DD  05A3               	andwf	___ftdiv@f1,f
  2452  06DE  30FF               	movlw	255
  2453  06DF  05A4               	andwf	___ftdiv@f1+1,f
  2454  06E0  3000               	movlw	0
  2455  06E1  05A5               	andwf	___ftdiv@f1+2,f
  2456  06E2  17A1               	bsf	___ftdiv@f2+1,7
  2457  06E3  30FF               	movlw	255
  2458  06E4  05A0               	andwf	___ftdiv@f2,f
  2459  06E5  30FF               	movlw	255
  2460  06E6  05A1               	andwf	___ftdiv@f2+1,f
  2461  06E7  3000               	movlw	0
  2462  06E8  05A2               	andwf	___ftdiv@f2+2,f
  2463  06E9  3018               	movlw	24
  2464  06EA  00A6               	movwf	??___ftdiv
  2465  06EB  0826               	movf	??___ftdiv,w
  2466  06EC  00AA               	movwf	___ftdiv@cntr
  2467  06ED                     l1410:	
  2468  06ED  3001               	movlw	1
  2469  06EE                     u1395:	
  2470  06EE  35AB               	lslf	___ftdiv@f3,f
  2471  06EF  0DAC               	rlf	___ftdiv@f3+1,f
  2472  06F0  0DAD               	rlf	___ftdiv@f3+2,f
  2473  06F1  0B89               	decfsz	9,f
  2474  06F2  2EEE               	goto	u1395
  2475  06F3  0822               	movf	___ftdiv@f2+2,w
  2476  06F4  0225               	subwf	___ftdiv@f1+2,w
  2477  06F5  1D03               	skipz
  2478  06F6  2EFD               	goto	u1405
  2479  06F7  0821               	movf	___ftdiv@f2+1,w
  2480  06F8  0224               	subwf	___ftdiv@f1+1,w
  2481  06F9  1D03               	skipz
  2482  06FA  2EFD               	goto	u1405
  2483  06FB  0820               	movf	___ftdiv@f2,w
  2484  06FC  0223               	subwf	___ftdiv@f1,w
  2485  06FD                     u1405:	
  2486  06FD  1C03               	skipc
  2487  06FE  2F06               	goto	l1418
  2488  06FF  0820               	movf	___ftdiv@f2,w
  2489  0700  02A3               	subwf	___ftdiv@f1,f
  2490  0701  0821               	movf	___ftdiv@f2+1,w
  2491  0702  3BA4               	subwfb	___ftdiv@f1+1,f
  2492  0703  0822               	movf	___ftdiv@f2+2,w
  2493  0704  3BA5               	subwfb	___ftdiv@f1+2,f
  2494  0705  142B               	bsf	___ftdiv@f3,0
  2495  0706                     l1418:	
  2496  0706  3001               	movlw	1
  2497  0707                     u1415:	
  2498  0707  35A3               	lslf	___ftdiv@f1,f
  2499  0708  0DA4               	rlf	___ftdiv@f1+1,f
  2500  0709  0DA5               	rlf	___ftdiv@f1+2,f
  2501  070A  0B89               	decfsz	9,f
  2502  070B  2F07               	goto	u1415
  2503  070C  3001               	movlw	1
  2504  070D  02AA               	subwf	___ftdiv@cntr,f
  2505  070E  1D03               	btfss	3,2
  2506  070F  2EED               	goto	l1410
  2507  0710  082B               	movf	___ftdiv@f3,w
  2508  0711  00F0               	movwf	___ftpack@arg
  2509  0712  082C               	movf	___ftdiv@f3+1,w
  2510  0713  00F1               	movwf	___ftpack@arg+1
  2511  0714  082D               	movf	___ftdiv@f3+2,w
  2512  0715  00F2               	movwf	___ftpack@arg+2
  2513  0716  082E               	movf	___ftdiv@exp,w
  2514  0717  00A6               	movwf	??___ftdiv
  2515  0718  0826               	movf	??___ftdiv,w
  2516  0719  00F3               	movwf	___ftpack@exp
  2517  071A  082F               	movf	___ftdiv@sign,w
  2518  071B  00A7               	movwf	??___ftdiv+1
  2519  071C  0827               	movf	??___ftdiv+1,w
  2520  071D  00F4               	movwf	___ftpack@sign
  2521  071E  3185  2594         	fcall	___ftpack
  2522  0720  0870               	movf	?___ftpack,w
  2523  0721  0020               	movlb	0	; select bank0
  2524  0722  00A0               	movwf	?___ftdiv
  2525  0723  0871               	movf	?___ftpack+1,w
  2526  0724  00A1               	movwf	?___ftdiv+1
  2527  0725  0872               	movf	?___ftpack+2,w
  2528  0726  00A2               	movwf	?___ftdiv+2
  2529  0727  0008               	return
  2530  0728                     __end_of___ftdiv:	
  2531                           
  2532                           	psect	text8
  2533  0366                     __ptext8:	
  2534 ;; *************** function ___awtoft *****************
  2535 ;; Defined at:
  2536 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awtoft.c"
  2537 ;; Parameters:    Size  Location     Type
  2538 ;;  c               2    8[COMMON] int 
  2539 ;; Auto vars:     Size  Location     Type
  2540 ;;  sign            1   13[COMMON] unsigned char 
  2541 ;; Return value:  Size  Location     Type
  2542 ;;                  3    8[COMMON] float 
  2543 ;; Registers used:
  2544 ;;		wreg, status,2, status,0, pclath, cstack
  2545 ;; Tracked objects:
  2546 ;;		On entry : 0/0
  2547 ;;		On exit  : 0/0
  2548 ;;		Unchanged: 0/0
  2549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2550 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2551 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2552 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2553 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2554 ;;Total ram usage:        6 bytes
  2555 ;; Hardware stack levels used:    1
  2556 ;; Hardware stack levels required when called:    1
  2557 ;; This function calls:
  2558 ;;		___ftpack
  2559 ;; This function is called by:
  2560 ;;		_main
  2561 ;; This function uses a non-reentrant model
  2562 ;;
  2563                           
  2564                           
  2565                           ;psect for function ___awtoft
  2566  0366                     ___awtoft:	
  2567                           
  2568                           ;incstack = 0
  2569                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  2570  0366  01FD               	clrf	___awtoft@sign
  2571  0367  1FF9               	btfss	___awtoft@c+1,7
  2572  0368  2B70               	goto	l1380
  2573  0369  09F8               	comf	___awtoft@c,f
  2574  036A  09F9               	comf	___awtoft@c+1,f
  2575  036B  0AF8               	incf	___awtoft@c,f
  2576  036C  1903               	skipnz
  2577  036D  0AF9               	incf	___awtoft@c+1,f
  2578  036E  01FD               	clrf	___awtoft@sign
  2579  036F  0AFD               	incf	___awtoft@sign,f
  2580  0370                     l1380:	
  2581  0370  0878               	movf	___awtoft@c,w
  2582  0371  00F0               	movwf	___ftpack@arg
  2583  0372  0879               	movf	___awtoft@c+1,w
  2584  0373  00F1               	movwf	___ftpack@arg+1
  2585  0374  01F2               	clrf	___ftpack@arg+2
  2586  0375  308E               	movlw	142
  2587  0376  00FB               	movwf	??___awtoft
  2588  0377  087B               	movf	??___awtoft,w
  2589  0378  00F3               	movwf	___ftpack@exp
  2590  0379  087D               	movf	___awtoft@sign,w
  2591  037A  00FC               	movwf	??___awtoft+1
  2592  037B  087C               	movf	??___awtoft+1,w
  2593  037C  00F4               	movwf	___ftpack@sign
  2594  037D  3185  2594         	fcall	___ftpack
  2595  037F  0870               	movf	?___ftpack,w
  2596  0380  00F8               	movwf	?___awtoft
  2597  0381  0871               	movf	?___ftpack+1,w
  2598  0382  00F9               	movwf	?___awtoft+1
  2599  0383  0872               	movf	?___ftpack+2,w
  2600  0384  00FA               	movwf	?___awtoft+2
  2601  0385  0008               	return
  2602  0386                     __end_of___awtoft:	
  2603                           
  2604                           	psect	text9
  2605  0594                     __ptext9:	
  2606 ;; *************** function ___ftpack *****************
  2607 ;; Defined at:
  2608 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\float.c"
  2609 ;; Parameters:    Size  Location     Type
  2610 ;;  arg             3    0[COMMON] unsigned um
  2611 ;;  exp             1    3[COMMON] unsigned char 
  2612 ;;  sign            1    4[COMMON] unsigned char 
  2613 ;; Auto vars:     Size  Location     Type
  2614 ;;		None
  2615 ;; Return value:  Size  Location     Type
  2616 ;;                  3    0[COMMON] float 
  2617 ;; Registers used:
  2618 ;;		wreg, status,2, status,0
  2619 ;; Tracked objects:
  2620 ;;		On entry : 0/0
  2621 ;;		On exit  : 0/0
  2622 ;;		Unchanged: 0/0
  2623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2624 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2626 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2627 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2628 ;;Total ram usage:        8 bytes
  2629 ;; Hardware stack levels used:    1
  2630 ;; This function calls:
  2631 ;;		Nothing
  2632 ;; This function is called by:
  2633 ;;		___awtoft
  2634 ;;		___ftdiv
  2635 ;; This function uses a non-reentrant model
  2636 ;;
  2637                           
  2638                           
  2639                           ;psect for function ___ftpack
  2640  0594                     ___ftpack:	
  2641                           
  2642                           ;incstack = 0
  2643                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  2644  0594  0873               	movf	___ftpack@exp,w
  2645  0595  1903               	btfsc	3,2
  2646  0596  2D9C               	goto	l1242
  2647  0597  0872               	movf	___ftpack@arg+2,w
  2648  0598  0471               	iorwf	___ftpack@arg+1,w
  2649  0599  0470               	iorwf	___ftpack@arg,w
  2650  059A  1D03               	skipz
  2651  059B  2DAD               	goto	l1248
  2652  059C                     l1242:	
  2653  059C  3000               	movlw	0
  2654  059D  00F0               	movwf	?___ftpack
  2655  059E  3000               	movlw	0
  2656  059F  00F1               	movwf	?___ftpack+1
  2657  05A0  3000               	movlw	0
  2658  05A1  00F2               	movwf	?___ftpack+2
  2659  05A2  0008               	return
  2660  05A3                     l1246:	
  2661  05A3  3001               	movlw	1
  2662  05A4  00F5               	movwf	??___ftpack
  2663  05A5  0875               	movf	??___ftpack,w
  2664  05A6  07F3               	addwf	___ftpack@exp,f
  2665  05A7  3001               	movlw	1
  2666  05A8                     u1055:	
  2667  05A8  36F2               	lsrf	___ftpack@arg+2,f
  2668  05A9  0CF1               	rrf	___ftpack@arg+1,f
  2669  05AA  0CF0               	rrf	___ftpack@arg,f
  2670  05AB  0B89               	decfsz	9,f
  2671  05AC  2DA8               	goto	u1055
  2672  05AD                     l1248:	
  2673  05AD  30FE               	movlw	254
  2674  05AE  0572               	andwf	___ftpack@arg+2,w
  2675  05AF  1903               	btfsc	3,2
  2676  05B0  2DC6               	goto	l360
  2677  05B1  2DA3               	goto	l1246
  2678  05B2                     l1250:	
  2679  05B2  3001               	movlw	1
  2680  05B3  00F5               	movwf	??___ftpack
  2681  05B4  0875               	movf	??___ftpack,w
  2682  05B5  07F3               	addwf	___ftpack@exp,f
  2683  05B6  3001               	movlw	1
  2684  05B7  07F0               	addwf	___ftpack@arg,f
  2685  05B8  3000               	movlw	0
  2686  05B9  1803               	skipnc
  2687  05BA  3001               	movlw	1
  2688  05BB  07F1               	addwf	___ftpack@arg+1,f
  2689  05BC  3000               	movlw	0
  2690  05BD  1803               	skipnc
  2691  05BE  3001               	movlw	1
  2692  05BF  07F2               	addwf	___ftpack@arg+2,f
  2693  05C0  3001               	movlw	1
  2694  05C1                     u1075:	
  2695  05C1  36F2               	lsrf	___ftpack@arg+2,f
  2696  05C2  0CF1               	rrf	___ftpack@arg+1,f
  2697  05C3  0CF0               	rrf	___ftpack@arg,f
  2698  05C4  0B89               	decfsz	9,f
  2699  05C5  2DC1               	goto	u1075
  2700  05C6                     l360:	
  2701  05C6  30FF               	movlw	255
  2702  05C7  0572               	andwf	___ftpack@arg+2,w
  2703  05C8  1903               	btfsc	3,2
  2704  05C9  2DD3               	goto	l1258
  2705  05CA  2DB2               	goto	l1250
  2706  05CB                     l1256:	
  2707  05CB  3001               	movlw	1
  2708  05CC  02F3               	subwf	___ftpack@exp,f
  2709  05CD  3001               	movlw	1
  2710  05CE                     u1095:	
  2711  05CE  35F0               	lslf	___ftpack@arg,f
  2712  05CF  0DF1               	rlf	___ftpack@arg+1,f
  2713  05D0  0DF2               	rlf	___ftpack@arg+2,f
  2714  05D1  0B89               	decfsz	9,f
  2715  05D2  2DCE               	goto	u1095
  2716  05D3                     l1258:	
  2717  05D3  1BF1               	btfsc	___ftpack@arg+1,7
  2718  05D4  2DD9               	goto	l367
  2719  05D5  3002               	movlw	2
  2720  05D6  0273               	subwf	___ftpack@exp,w
  2721  05D7  1803               	skipnc
  2722  05D8  2DCB               	goto	l1256
  2723  05D9                     l367:	
  2724  05D9  1873               	btfsc	___ftpack@exp,0
  2725  05DA  2DE1               	goto	l368
  2726  05DB  30FF               	movlw	255
  2727  05DC  05F0               	andwf	___ftpack@arg,f
  2728  05DD  307F               	movlw	127
  2729  05DE  05F1               	andwf	___ftpack@arg+1,f
  2730  05DF  30FF               	movlw	255
  2731  05E0  05F2               	andwf	___ftpack@arg+2,f
  2732  05E1                     l368:	
  2733  05E1  1003               	clrc
  2734  05E2  0CF3               	rrf	___ftpack@exp,f
  2735  05E3  0873               	movf	___ftpack@exp,w
  2736  05E4  00F5               	movwf	??___ftpack
  2737  05E5  01F6               	clrf	??___ftpack+1
  2738  05E6  01F7               	clrf	??___ftpack+2
  2739  05E7  3010               	movlw	16
  2740  05E8                     u1135:	
  2741  05E8  35F5               	lslf	??___ftpack,f
  2742  05E9  0DF6               	rlf	??___ftpack+1,f
  2743  05EA  0DF7               	rlf	??___ftpack+2,f
  2744  05EB  0B89               	decfsz	9,f
  2745  05EC  2DE8               	goto	u1135
  2746  05ED  0875               	movf	??___ftpack,w
  2747  05EE  04F0               	iorwf	___ftpack@arg,f
  2748  05EF  0876               	movf	??___ftpack+1,w
  2749  05F0  04F1               	iorwf	___ftpack@arg+1,f
  2750  05F1  0877               	movf	??___ftpack+2,w
  2751  05F2  04F2               	iorwf	___ftpack@arg+2,f
  2752  05F3  0874               	movf	___ftpack@sign,w
  2753  05F4  1903               	btfsc	3,2
  2754  05F5  0008               	return
  2755  05F6  17F2               	bsf	___ftpack@arg+2,7
  2756  05F7  0008               	return
  2757  05F8                     __end_of___ftpack:	
  2758                           
  2759                           	psect	text10
  2760  049C                     __ptext10:	
  2761 ;; *************** function ___awmod *****************
  2762 ;; Defined at:
  2763 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awmod.c"
  2764 ;; Parameters:    Size  Location     Type
  2765 ;;  divisor         2    0[COMMON] int 
  2766 ;;  dividend        2    2[COMMON] int 
  2767 ;; Auto vars:     Size  Location     Type
  2768 ;;  sign            1    6[COMMON] unsigned char 
  2769 ;;  counter         1    5[COMMON] unsigned char 
  2770 ;; Return value:  Size  Location     Type
  2771 ;;                  2    0[COMMON] int 
  2772 ;; Registers used:
  2773 ;;		wreg, status,2, status,0
  2774 ;; Tracked objects:
  2775 ;;		On entry : 0/0
  2776 ;;		On exit  : 0/0
  2777 ;;		Unchanged: 0/0
  2778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2779 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2780 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2781 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2782 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2783 ;;Total ram usage:        7 bytes
  2784 ;; Hardware stack levels used:    1
  2785 ;; This function calls:
  2786 ;;		Nothing
  2787 ;; This function is called by:
  2788 ;;		_main
  2789 ;; This function uses a non-reentrant model
  2790 ;;
  2791                           
  2792                           
  2793                           ;psect for function ___awmod
  2794  049C                     ___awmod:	
  2795                           
  2796                           ;incstack = 0
  2797                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2798  049C  01F6               	clrf	___awmod@sign
  2799  049D  1FF3               	btfss	___awmod@dividend+1,7
  2800  049E  2CA6               	goto	l1342
  2801  049F  09F2               	comf	___awmod@dividend,f
  2802  04A0  09F3               	comf	___awmod@dividend+1,f
  2803  04A1  0AF2               	incf	___awmod@dividend,f
  2804  04A2  1903               	skipnz
  2805  04A3  0AF3               	incf	___awmod@dividend+1,f
  2806  04A4  01F6               	clrf	___awmod@sign
  2807  04A5  0AF6               	incf	___awmod@sign,f
  2808  04A6                     l1342:	
  2809  04A6  1FF1               	btfss	___awmod@divisor+1,7
  2810  04A7  2CAD               	goto	l1346
  2811  04A8  09F0               	comf	___awmod@divisor,f
  2812  04A9  09F1               	comf	___awmod@divisor+1,f
  2813  04AA  0AF0               	incf	___awmod@divisor,f
  2814  04AB  1903               	skipnz
  2815  04AC  0AF1               	incf	___awmod@divisor+1,f
  2816  04AD                     l1346:	
  2817  04AD  0870               	movf	___awmod@divisor,w
  2818  04AE  0471               	iorwf	___awmod@divisor+1,w
  2819  04AF  1903               	btfsc	3,2
  2820  04B0  2CD4               	goto	l1364
  2821  04B1  01F5               	clrf	___awmod@counter
  2822  04B2  0AF5               	incf	___awmod@counter,f
  2823  04B3                     l1354:	
  2824  04B3  1BF1               	btfsc	___awmod@divisor+1,7
  2825  04B4  2CBF               	goto	l1356
  2826  04B5  3001               	movlw	1
  2827  04B6                     u1285:	
  2828  04B6  35F0               	lslf	___awmod@divisor,f
  2829  04B7  0DF1               	rlf	___awmod@divisor+1,f
  2830  04B8  0B89               	decfsz	9,f
  2831  04B9  2CB6               	goto	u1285
  2832  04BA  3001               	movlw	1
  2833  04BB  00F4               	movwf	??___awmod
  2834  04BC  0874               	movf	??___awmod,w
  2835  04BD  07F5               	addwf	___awmod@counter,f
  2836  04BE  2CB3               	goto	l1354
  2837  04BF                     l1356:	
  2838  04BF  0871               	movf	___awmod@divisor+1,w
  2839  04C0  0273               	subwf	___awmod@dividend+1,w
  2840  04C1  1D03               	skipz
  2841  04C2  2CC5               	goto	u1305
  2842  04C3  0870               	movf	___awmod@divisor,w
  2843  04C4  0272               	subwf	___awmod@dividend,w
  2844  04C5                     u1305:	
  2845  04C5  1C03               	skipc
  2846  04C6  2CCB               	goto	l1360
  2847  04C7  0870               	movf	___awmod@divisor,w
  2848  04C8  02F2               	subwf	___awmod@dividend,f
  2849  04C9  0871               	movf	___awmod@divisor+1,w
  2850  04CA  3BF3               	subwfb	___awmod@dividend+1,f
  2851  04CB                     l1360:	
  2852  04CB  3001               	movlw	1
  2853  04CC                     u1315:	
  2854  04CC  36F1               	lsrf	___awmod@divisor+1,f
  2855  04CD  0CF0               	rrf	___awmod@divisor,f
  2856  04CE  0B89               	decfsz	9,f
  2857  04CF  2CCC               	goto	u1315
  2858  04D0  3001               	movlw	1
  2859  04D1  02F5               	subwf	___awmod@counter,f
  2860  04D2  1D03               	btfss	3,2
  2861  04D3  2CBF               	goto	l1356
  2862  04D4                     l1364:	
  2863  04D4  0876               	movf	___awmod@sign,w
  2864  04D5  1903               	btfsc	3,2
  2865  04D6  2CDC               	goto	l1368
  2866  04D7  09F2               	comf	___awmod@dividend,f
  2867  04D8  09F3               	comf	___awmod@dividend+1,f
  2868  04D9  0AF2               	incf	___awmod@dividend,f
  2869  04DA  1903               	skipnz
  2870  04DB  0AF3               	incf	___awmod@dividend+1,f
  2871  04DC                     l1368:	
  2872  04DC  0873               	movf	___awmod@dividend+1,w
  2873  04DD  00F1               	movwf	?___awmod+1
  2874  04DE  0872               	movf	___awmod@dividend,w
  2875  04DF  00F0               	movwf	?___awmod
  2876  04E0  0008               	return
  2877  04E1                     __end_of___awmod:	
  2878                           
  2879                           	psect	text11
  2880  04E1                     __ptext11:	
  2881 ;; *************** function ___awdiv *****************
  2882 ;; Defined at:
  2883 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awdiv.c"
  2884 ;; Parameters:    Size  Location     Type
  2885 ;;  divisor         2    0[COMMON] int 
  2886 ;;  dividend        2    2[COMMON] int 
  2887 ;; Auto vars:     Size  Location     Type
  2888 ;;  quotient        2    7[COMMON] int 
  2889 ;;  sign            1    6[COMMON] unsigned char 
  2890 ;;  counter         1    5[COMMON] unsigned char 
  2891 ;; Return value:  Size  Location     Type
  2892 ;;                  2    0[COMMON] int 
  2893 ;; Registers used:
  2894 ;;		wreg, status,2, status,0
  2895 ;; Tracked objects:
  2896 ;;		On entry : 0/0
  2897 ;;		On exit  : 0/0
  2898 ;;		Unchanged: 0/0
  2899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2900 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2901 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2902 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2903 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2904 ;;Total ram usage:        9 bytes
  2905 ;; Hardware stack levels used:    1
  2906 ;; This function calls:
  2907 ;;		Nothing
  2908 ;; This function is called by:
  2909 ;;		_main
  2910 ;; This function uses a non-reentrant model
  2911 ;;
  2912                           
  2913                           
  2914                           ;psect for function ___awdiv
  2915  04E1                     ___awdiv:	
  2916                           
  2917                           ;incstack = 0
  2918                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2919  04E1  01F6               	clrf	___awdiv@sign
  2920  04E2  1FF1               	btfss	___awdiv@divisor+1,7
  2921  04E3  2CEB               	goto	l1298
  2922  04E4  09F0               	comf	___awdiv@divisor,f
  2923  04E5  09F1               	comf	___awdiv@divisor+1,f
  2924  04E6  0AF0               	incf	___awdiv@divisor,f
  2925  04E7  1903               	skipnz
  2926  04E8  0AF1               	incf	___awdiv@divisor+1,f
  2927  04E9  01F6               	clrf	___awdiv@sign
  2928  04EA  0AF6               	incf	___awdiv@sign,f
  2929  04EB                     l1298:	
  2930  04EB  1FF3               	btfss	___awdiv@dividend+1,7
  2931  04EC  2CF6               	goto	l1304
  2932  04ED  09F2               	comf	___awdiv@dividend,f
  2933  04EE  09F3               	comf	___awdiv@dividend+1,f
  2934  04EF  0AF2               	incf	___awdiv@dividend,f
  2935  04F0  1903               	skipnz
  2936  04F1  0AF3               	incf	___awdiv@dividend+1,f
  2937  04F2  3001               	movlw	1
  2938  04F3  00F4               	movwf	??___awdiv
  2939  04F4  0874               	movf	??___awdiv,w
  2940  04F5  06F6               	xorwf	___awdiv@sign,f
  2941  04F6                     l1304:	
  2942  04F6  01F7               	clrf	___awdiv@quotient
  2943  04F7  01F8               	clrf	___awdiv@quotient+1
  2944  04F8  0870               	movf	___awdiv@divisor,w
  2945  04F9  0471               	iorwf	___awdiv@divisor+1,w
  2946  04FA  1903               	btfsc	3,2
  2947  04FB  2D25               	goto	l1326
  2948  04FC  01F5               	clrf	___awdiv@counter
  2949  04FD  0AF5               	incf	___awdiv@counter,f
  2950  04FE                     l1314:	
  2951  04FE  1BF1               	btfsc	___awdiv@divisor+1,7
  2952  04FF  2D0A               	goto	l1316
  2953  0500  3001               	movlw	1
  2954  0501                     u1185:	
  2955  0501  35F0               	lslf	___awdiv@divisor,f
  2956  0502  0DF1               	rlf	___awdiv@divisor+1,f
  2957  0503  0B89               	decfsz	9,f
  2958  0504  2D01               	goto	u1185
  2959  0505  3001               	movlw	1
  2960  0506  00F4               	movwf	??___awdiv
  2961  0507  0874               	movf	??___awdiv,w
  2962  0508  07F5               	addwf	___awdiv@counter,f
  2963  0509  2CFE               	goto	l1314
  2964  050A                     l1316:	
  2965  050A  3001               	movlw	1
  2966  050B                     u1205:	
  2967  050B  35F7               	lslf	___awdiv@quotient,f
  2968  050C  0DF8               	rlf	___awdiv@quotient+1,f
  2969  050D  0B89               	decfsz	9,f
  2970  050E  2D0B               	goto	u1205
  2971  050F  0871               	movf	___awdiv@divisor+1,w
  2972  0510  0273               	subwf	___awdiv@dividend+1,w
  2973  0511  1D03               	skipz
  2974  0512  2D15               	goto	u1215
  2975  0513  0870               	movf	___awdiv@divisor,w
  2976  0514  0272               	subwf	___awdiv@dividend,w
  2977  0515                     u1215:	
  2978  0515  1C03               	skipc
  2979  0516  2D1C               	goto	l1322
  2980  0517  0870               	movf	___awdiv@divisor,w
  2981  0518  02F2               	subwf	___awdiv@dividend,f
  2982  0519  0871               	movf	___awdiv@divisor+1,w
  2983  051A  3BF3               	subwfb	___awdiv@dividend+1,f
  2984  051B  1477               	bsf	___awdiv@quotient,0
  2985  051C                     l1322:	
  2986  051C  3001               	movlw	1
  2987  051D                     u1225:	
  2988  051D  36F1               	lsrf	___awdiv@divisor+1,f
  2989  051E  0CF0               	rrf	___awdiv@divisor,f
  2990  051F  0B89               	decfsz	9,f
  2991  0520  2D1D               	goto	u1225
  2992  0521  3001               	movlw	1
  2993  0522  02F5               	subwf	___awdiv@counter,f
  2994  0523  1D03               	btfss	3,2
  2995  0524  2D0A               	goto	l1316
  2996  0525                     l1326:	
  2997  0525  0876               	movf	___awdiv@sign,w
  2998  0526  1903               	btfsc	3,2
  2999  0527  2D2D               	goto	l1330
  3000  0528  09F7               	comf	___awdiv@quotient,f
  3001  0529  09F8               	comf	___awdiv@quotient+1,f
  3002  052A  0AF7               	incf	___awdiv@quotient,f
  3003  052B  1903               	skipnz
  3004  052C  0AF8               	incf	___awdiv@quotient+1,f
  3005  052D                     l1330:	
  3006  052D  0878               	movf	___awdiv@quotient+1,w
  3007  052E  00F1               	movwf	?___awdiv+1
  3008  052F  0877               	movf	___awdiv@quotient,w
  3009  0530  00F0               	movwf	?___awdiv
  3010  0531  0008               	return
  3011  0532                     __end_of___awdiv:	
  3012                           
  3013                           	psect	text12
  3014  030F                     __ptext12:	
  3015 ;; *************** function _Lcd_Write_Integer *****************
  3016 ;; Defined at:
  3017 ;;		line 213 in file "LCD.c"
  3018 ;; Parameters:    Size  Location     Type
  3019 ;;  v               2   10[BANK0 ] int 
  3020 ;; Auto vars:     Size  Location     Type
  3021 ;;  buf             8   12[BANK0 ] unsigned char [8]
  3022 ;; Return value:  Size  Location     Type
  3023 ;;                  1    wreg      void 
  3024 ;; Registers used:
  3025 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3026 ;; Tracked objects:
  3027 ;;		On entry : 0/0
  3028 ;;		On exit  : 0/0
  3029 ;;		Unchanged: 0/0
  3030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3031 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3032 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3034 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3035 ;;Total ram usage:       10 bytes
  3036 ;; Hardware stack levels used:    1
  3037 ;; Hardware stack levels required when called:    3
  3038 ;; This function calls:
  3039 ;;		_Lcd_Write_String
  3040 ;;		_itoa
  3041 ;; This function is called by:
  3042 ;;		_main
  3043 ;; This function uses a non-reentrant model
  3044 ;;
  3045                           
  3046                           
  3047                           ;psect for function _Lcd_Write_Integer
  3048  030F                     _Lcd_Write_Integer:	
  3049                           
  3050                           ;LCD.c: 215: unsigned char buf[8];
  3051                           ;LCD.c: 217: Lcd_Write_String(itoa(buf, v, 10));
  3052                           
  3053                           ;incstack = 0
  3054                           ; Regs used in _Lcd_Write_Integer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3055  030F  0020               	movlb	0	; select bank0
  3056  0310  082B               	movf	Lcd_Write_Integer@v+1,w
  3057  0311  00A5               	movwf	itoa@val+1
  3058  0312  082A               	movf	Lcd_Write_Integer@v,w
  3059  0313  00A4               	movwf	itoa@val
  3060  0314  300A               	movlw	10
  3061  0315  00A6               	movwf	itoa@base
  3062  0316  3000               	movlw	0
  3063  0317  00A7               	movwf	itoa@base+1
  3064  0318  302C               	movlw	(low (Lcd_Write_Integer@buf| 0))& (0+255)
  3065  0319  3183  23A6  3183   	fcall	_itoa
  3066  031C  3183  234B         	fcall	_Lcd_Write_String
  3067  031E  0008               	return
  3068  031F                     __end_of_Lcd_Write_Integer:	
  3069                           
  3070                           	psect	text13
  3071  03A6                     __ptext13:	
  3072 ;; *************** function _itoa *****************
  3073 ;; Defined at:
  3074 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\itoa.c"
  3075 ;; Parameters:    Size  Location     Type
  3076 ;;  buf             1    wreg     PTR unsigned char 
  3077 ;;		 -> Lcd_Write_Integer@buf(8), 
  3078 ;;  val             2    4[BANK0 ] int 
  3079 ;;  base            2    6[BANK0 ] int 
  3080 ;; Auto vars:     Size  Location     Type
  3081 ;;  buf             1    9[BANK0 ] PTR unsigned char 
  3082 ;;		 -> Lcd_Write_Integer@buf(8), 
  3083 ;;  cp              1    8[BANK0 ] PTR unsigned char 
  3084 ;;		 -> Lcd_Write_Integer@buf(8), 
  3085 ;; Return value:  Size  Location     Type
  3086 ;;                  1    wreg      PTR unsigned char 
  3087 ;; Registers used:
  3088 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3089 ;; Tracked objects:
  3090 ;;		On entry : 0/0
  3091 ;;		On exit  : 0/0
  3092 ;;		Unchanged: 0/0
  3093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3094 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3095 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3096 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3097 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3098 ;;Total ram usage:        7 bytes
  3099 ;; Hardware stack levels used:    1
  3100 ;; Hardware stack levels required when called:    2
  3101 ;; This function calls:
  3102 ;;		_utoa
  3103 ;; This function is called by:
  3104 ;;		_Lcd_Write_Integer
  3105 ;; This function uses a non-reentrant model
  3106 ;;
  3107                           
  3108                           
  3109                           ;psect for function _itoa
  3110  03A6                     _itoa:	
  3111                           
  3112                           ;incstack = 0
  3113                           ; Regs used in _itoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3114                           ;itoa@buf stored from wreg
  3115  03A6  0020               	movlb	0	; select bank0
  3116  03A7  00A9               	movwf	itoa@buf
  3117  03A8  0829               	movf	itoa@buf,w
  3118  03A9  00FD               	movwf	??_itoa
  3119  03AA  087D               	movf	??_itoa,w
  3120  03AB  00A8               	movwf	itoa@cp
  3121  03AC  1FA5               	btfss	itoa@val+1,7
  3122  03AD  2BBE               	goto	l1232
  3123  03AE  302D               	movlw	45
  3124  03AF  00FD               	movwf	??_itoa
  3125  03B0  0829               	movf	itoa@buf,w
  3126  03B1  0086               	movwf	6
  3127  03B2  0187               	clrf	7
  3128  03B3  087D               	movf	??_itoa,w
  3129  03B4  0081               	movwf	1
  3130  03B5  3001               	movlw	1
  3131  03B6  00FD               	movwf	??_itoa
  3132  03B7  087D               	movf	??_itoa,w
  3133  03B8  07A9               	addwf	itoa@buf,f
  3134  03B9  09A4               	comf	itoa@val,f
  3135  03BA  09A5               	comf	itoa@val+1,f
  3136  03BB  0AA4               	incf	itoa@val,f
  3137  03BC  1903               	skipnz
  3138  03BD  0AA5               	incf	itoa@val+1,f
  3139  03BE                     l1232:	
  3140  03BE  0825               	movf	itoa@val+1,w
  3141  03BF  00F9               	movwf	utoa@val+1
  3142  03C0  0824               	movf	itoa@val,w
  3143  03C1  00F8               	movwf	utoa@val
  3144  03C2  0827               	movf	itoa@base+1,w
  3145  03C3  00FB               	movwf	utoa@base+1
  3146  03C4  0826               	movf	itoa@base,w
  3147  03C5  00FA               	movwf	utoa@base
  3148  03C6  0829               	movf	itoa@buf,w
  3149  03C7  3185  2532         	fcall	_utoa
  3150  03C9  0020               	movlb	0	; select bank0
  3151  03CA  0828               	movf	itoa@cp,w
  3152  03CB  0008               	return
  3153  03CC                     __end_of_itoa:	
  3154                           
  3155                           	psect	text14
  3156  0532                     __ptext14:	
  3157 ;; *************** function _utoa *****************
  3158 ;; Defined at:
  3159 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\itoa.c"
  3160 ;; Parameters:    Size  Location     Type
  3161 ;;  buf             1    wreg     PTR unsigned char 
  3162 ;;		 -> Lcd_Write_Integer@buf(8), 
  3163 ;;  val             2    8[COMMON] unsigned int 
  3164 ;;  base            2   10[COMMON] int 
  3165 ;; Auto vars:     Size  Location     Type
  3166 ;;  buf             1    3[BANK0 ] PTR unsigned char 
  3167 ;;		 -> Lcd_Write_Integer@buf(8), 
  3168 ;;  v               2    0[BANK0 ] unsigned int 
  3169 ;;  c               1    2[BANK0 ] unsigned char 
  3170 ;; Return value:  Size  Location     Type
  3171 ;;                  1    wreg      PTR unsigned char 
  3172 ;; Registers used:
  3173 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3174 ;; Tracked objects:
  3175 ;;		On entry : 0/0
  3176 ;;		On exit  : 0/0
  3177 ;;		Unchanged: 0/0
  3178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3179 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3180 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3181 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3182 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3183 ;;Total ram usage:        9 bytes
  3184 ;; Hardware stack levels used:    1
  3185 ;; Hardware stack levels required when called:    1
  3186 ;; This function calls:
  3187 ;;		___lwdiv
  3188 ;;		___lwmod
  3189 ;; This function is called by:
  3190 ;;		_itoa
  3191 ;; This function uses a non-reentrant model
  3192 ;;
  3193                           
  3194                           
  3195                           ;psect for function _utoa
  3196  0532                     _utoa:	
  3197                           
  3198                           ;incstack = 0
  3199                           ; Regs used in _utoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3200                           ;utoa@buf stored from wreg
  3201  0532  0020               	movlb	0	; select bank0
  3202  0533  00A3               	movwf	utoa@buf
  3203  0534  0879               	movf	utoa@val+1,w
  3204  0535  00A1               	movwf	utoa@v+1
  3205  0536  0878               	movf	utoa@val,w
  3206  0537  00A0               	movwf	utoa@v
  3207  0538                     l1172:	
  3208  0538  087B               	movf	utoa@base+1,w
  3209  0539  00F1               	movwf	___lwdiv@divisor+1
  3210  053A  087A               	movf	utoa@base,w
  3211  053B  00F0               	movwf	___lwdiv@divisor
  3212  053C  0821               	movf	utoa@v+1,w
  3213  053D  00F3               	movwf	___lwdiv@dividend+1
  3214  053E  0820               	movf	utoa@v,w
  3215  053F  00F2               	movwf	___lwdiv@dividend
  3216  0540  3184  2424  3185   	fcall	___lwdiv
  3217  0543  0871               	movf	?___lwdiv+1,w
  3218  0544  0020               	movlb	0	; select bank0
  3219  0545  00A1               	movwf	utoa@v+1
  3220  0546  0870               	movf	?___lwdiv,w
  3221  0547  00A0               	movwf	utoa@v
  3222  0548  3001               	movlw	1
  3223  0549  00FC               	movwf	??_utoa
  3224  054A  087C               	movf	??_utoa,w
  3225  054B  07A3               	addwf	utoa@buf,f
  3226  054C  0820               	movf	utoa@v,w
  3227  054D  0421               	iorwf	utoa@v+1,w
  3228  054E  1D03               	btfss	3,2
  3229  054F  2D38               	goto	l1172
  3230  0550  0823               	movf	utoa@buf,w
  3231  0551  0086               	movwf	6
  3232  0552  0187               	clrf	7
  3233  0553  0181               	clrf	1
  3234  0554  3001               	movlw	1
  3235  0555  02A3               	subwf	utoa@buf,f
  3236  0556                     l1182:	
  3237  0556  087B               	movf	utoa@base+1,w
  3238  0557  00F1               	movwf	___lwmod@divisor+1
  3239  0558  087A               	movf	utoa@base,w
  3240  0559  00F0               	movwf	___lwmod@divisor
  3241  055A  0879               	movf	utoa@val+1,w
  3242  055B  00F3               	movwf	___lwmod@dividend+1
  3243  055C  0878               	movf	utoa@val,w
  3244  055D  00F2               	movwf	___lwmod@dividend
  3245  055E  3183  23F8  3185   	fcall	___lwmod
  3246  0561  0870               	movf	?___lwmod,w
  3247  0562  00FC               	movwf	??_utoa
  3248  0563  087C               	movf	??_utoa,w
  3249  0564  0020               	movlb	0	; select bank0
  3250  0565  00A2               	movwf	utoa@c
  3251  0566  087B               	movf	utoa@base+1,w
  3252  0567  00F1               	movwf	___lwdiv@divisor+1
  3253  0568  087A               	movf	utoa@base,w
  3254  0569  00F0               	movwf	___lwdiv@divisor
  3255  056A  0879               	movf	utoa@val+1,w
  3256  056B  00F3               	movwf	___lwdiv@dividend+1
  3257  056C  0878               	movf	utoa@val,w
  3258  056D  00F2               	movwf	___lwdiv@dividend
  3259  056E  3184  2424  3185   	fcall	___lwdiv
  3260  0571  0871               	movf	?___lwdiv+1,w
  3261  0572  00F9               	movwf	utoa@val+1
  3262  0573  0870               	movf	?___lwdiv,w
  3263  0574  00F8               	movwf	utoa@val
  3264  0575  300A               	movlw	10
  3265  0576  0020               	movlb	0	; select bank0
  3266  0577  0222               	subwf	utoa@c,w
  3267  0578  1C03               	skipc
  3268  0579  2D7E               	goto	l479
  3269  057A  3007               	movlw	7
  3270  057B  00FC               	movwf	??_utoa
  3271  057C  087C               	movf	??_utoa,w
  3272  057D  07A2               	addwf	utoa@c,f
  3273  057E                     l479:	
  3274  057E  3030               	movlw	48
  3275  057F  00FC               	movwf	??_utoa
  3276  0580  087C               	movf	??_utoa,w
  3277  0581  07A2               	addwf	utoa@c,f
  3278  0582  0822               	movf	utoa@c,w
  3279  0583  00FC               	movwf	??_utoa
  3280  0584  0823               	movf	utoa@buf,w
  3281  0585  0086               	movwf	6
  3282  0586  0187               	clrf	7
  3283  0587  087C               	movf	??_utoa,w
  3284  0588  0081               	movwf	1
  3285  0589  3001               	movlw	1
  3286  058A  02A3               	subwf	utoa@buf,f
  3287  058B  0878               	movf	utoa@val,w
  3288  058C  0479               	iorwf	utoa@val+1,w
  3289  058D  1D03               	btfss	3,2
  3290  058E  2D56               	goto	l1182
  3291                           
  3292                           ;	Return value of _utoa is never used
  3293  058F  3001               	movlw	1
  3294  0590  00FC               	movwf	??_utoa
  3295  0591  087C               	movf	??_utoa,w
  3296  0592  07A3               	addwf	utoa@buf,f
  3297  0593  0008               	return
  3298  0594                     __end_of_utoa:	
  3299                           
  3300                           	psect	text15
  3301  03F8                     __ptext15:	
  3302 ;; *************** function ___lwmod *****************
  3303 ;; Defined at:
  3304 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
  3305 ;; Parameters:    Size  Location     Type
  3306 ;;  divisor         2    0[COMMON] unsigned int 
  3307 ;;  dividend        2    2[COMMON] unsigned int 
  3308 ;; Auto vars:     Size  Location     Type
  3309 ;;  counter         1    5[COMMON] unsigned char 
  3310 ;; Return value:  Size  Location     Type
  3311 ;;                  2    0[COMMON] unsigned int 
  3312 ;; Registers used:
  3313 ;;		wreg, status,2, status,0
  3314 ;; Tracked objects:
  3315 ;;		On entry : 0/0
  3316 ;;		On exit  : 0/0
  3317 ;;		Unchanged: 0/0
  3318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3319 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3320 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3321 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3322 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3323 ;;Total ram usage:        6 bytes
  3324 ;; Hardware stack levels used:    1
  3325 ;; This function calls:
  3326 ;;		Nothing
  3327 ;; This function is called by:
  3328 ;;		_utoa
  3329 ;; This function uses a non-reentrant model
  3330 ;;
  3331                           
  3332                           
  3333                           ;psect for function ___lwmod
  3334  03F8                     ___lwmod:	
  3335                           
  3336                           ;incstack = 0
  3337                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3338  03F8  0870               	movf	___lwmod@divisor,w
  3339  03F9  0471               	iorwf	___lwmod@divisor+1,w
  3340  03FA  1903               	btfsc	3,2
  3341  03FB  2C1F               	goto	l1136
  3342  03FC  01F5               	clrf	___lwmod@counter
  3343  03FD  0AF5               	incf	___lwmod@counter,f
  3344  03FE                     l1126:	
  3345  03FE  1BF1               	btfsc	___lwmod@divisor+1,7
  3346  03FF  2C0A               	goto	l1128
  3347  0400  3001               	movlw	1
  3348  0401                     u925:	
  3349  0401  35F0               	lslf	___lwmod@divisor,f
  3350  0402  0DF1               	rlf	___lwmod@divisor+1,f
  3351  0403  0B89               	decfsz	9,f
  3352  0404  2C01               	goto	u925
  3353  0405  3001               	movlw	1
  3354  0406  00F4               	movwf	??___lwmod
  3355  0407  0874               	movf	??___lwmod,w
  3356  0408  07F5               	addwf	___lwmod@counter,f
  3357  0409  2BFE               	goto	l1126
  3358  040A                     l1128:	
  3359  040A  0871               	movf	___lwmod@divisor+1,w
  3360  040B  0273               	subwf	___lwmod@dividend+1,w
  3361  040C  1D03               	skipz
  3362  040D  2C10               	goto	u945
  3363  040E  0870               	movf	___lwmod@divisor,w
  3364  040F  0272               	subwf	___lwmod@dividend,w
  3365  0410                     u945:	
  3366  0410  1C03               	skipc
  3367  0411  2C16               	goto	l1132
  3368  0412  0870               	movf	___lwmod@divisor,w
  3369  0413  02F2               	subwf	___lwmod@dividend,f
  3370  0414  0871               	movf	___lwmod@divisor+1,w
  3371  0415  3BF3               	subwfb	___lwmod@dividend+1,f
  3372  0416                     l1132:	
  3373  0416  3001               	movlw	1
  3374  0417                     u955:	
  3375  0417  36F1               	lsrf	___lwmod@divisor+1,f
  3376  0418  0CF0               	rrf	___lwmod@divisor,f
  3377  0419  0B89               	decfsz	9,f
  3378  041A  2C17               	goto	u955
  3379  041B  3001               	movlw	1
  3380  041C  02F5               	subwf	___lwmod@counter,f
  3381  041D  1D03               	btfss	3,2
  3382  041E  2C0A               	goto	l1128
  3383  041F                     l1136:	
  3384  041F  0873               	movf	___lwmod@dividend+1,w
  3385  0420  00F1               	movwf	?___lwmod+1
  3386  0421  0872               	movf	___lwmod@dividend,w
  3387  0422  00F0               	movwf	?___lwmod
  3388  0423  0008               	return
  3389  0424                     __end_of___lwmod:	
  3390                           
  3391                           	psect	text16
  3392  0424                     __ptext16:	
  3393 ;; *************** function ___lwdiv *****************
  3394 ;; Defined at:
  3395 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  3396 ;; Parameters:    Size  Location     Type
  3397 ;;  divisor         2    0[COMMON] unsigned int 
  3398 ;;  dividend        2    2[COMMON] unsigned int 
  3399 ;; Auto vars:     Size  Location     Type
  3400 ;;  quotient        2    5[COMMON] unsigned int 
  3401 ;;  counter         1    7[COMMON] unsigned char 
  3402 ;; Return value:  Size  Location     Type
  3403 ;;                  2    0[COMMON] unsigned int 
  3404 ;; Registers used:
  3405 ;;		wreg, status,2, status,0
  3406 ;; Tracked objects:
  3407 ;;		On entry : 0/0
  3408 ;;		On exit  : 0/0
  3409 ;;		Unchanged: 0/0
  3410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3411 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3412 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3413 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3414 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3415 ;;Total ram usage:        8 bytes
  3416 ;; Hardware stack levels used:    1
  3417 ;; This function calls:
  3418 ;;		Nothing
  3419 ;; This function is called by:
  3420 ;;		_utoa
  3421 ;; This function uses a non-reentrant model
  3422 ;;
  3423                           
  3424                           
  3425                           ;psect for function ___lwdiv
  3426  0424                     ___lwdiv:	
  3427                           
  3428                           ;incstack = 0
  3429                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3430  0424  01F5               	clrf	___lwdiv@quotient
  3431  0425  01F6               	clrf	___lwdiv@quotient+1
  3432  0426  0870               	movf	___lwdiv@divisor,w
  3433  0427  0471               	iorwf	___lwdiv@divisor+1,w
  3434  0428  1903               	btfsc	3,2
  3435  0429  2C53               	goto	l1114
  3436  042A  01F7               	clrf	___lwdiv@counter
  3437  042B  0AF7               	incf	___lwdiv@counter,f
  3438  042C                     l1102:	
  3439  042C  1BF1               	btfsc	___lwdiv@divisor+1,7
  3440  042D  2C38               	goto	l1104
  3441  042E  3001               	movlw	1
  3442  042F                     u855:	
  3443  042F  35F0               	lslf	___lwdiv@divisor,f
  3444  0430  0DF1               	rlf	___lwdiv@divisor+1,f
  3445  0431  0B89               	decfsz	9,f
  3446  0432  2C2F               	goto	u855
  3447  0433  3001               	movlw	1
  3448  0434  00F4               	movwf	??___lwdiv
  3449  0435  0874               	movf	??___lwdiv,w
  3450  0436  07F7               	addwf	___lwdiv@counter,f
  3451  0437  2C2C               	goto	l1102
  3452  0438                     l1104:	
  3453  0438  3001               	movlw	1
  3454  0439                     u875:	
  3455  0439  35F5               	lslf	___lwdiv@quotient,f
  3456  043A  0DF6               	rlf	___lwdiv@quotient+1,f
  3457  043B  0B89               	decfsz	9,f
  3458  043C  2C39               	goto	u875
  3459  043D  0871               	movf	___lwdiv@divisor+1,w
  3460  043E  0273               	subwf	___lwdiv@dividend+1,w
  3461  043F  1D03               	skipz
  3462  0440  2C43               	goto	u885
  3463  0441  0870               	movf	___lwdiv@divisor,w
  3464  0442  0272               	subwf	___lwdiv@dividend,w
  3465  0443                     u885:	
  3466  0443  1C03               	skipc
  3467  0444  2C4A               	goto	l1110
  3468  0445  0870               	movf	___lwdiv@divisor,w
  3469  0446  02F2               	subwf	___lwdiv@dividend,f
  3470  0447  0871               	movf	___lwdiv@divisor+1,w
  3471  0448  3BF3               	subwfb	___lwdiv@dividend+1,f
  3472  0449  1475               	bsf	___lwdiv@quotient,0
  3473  044A                     l1110:	
  3474  044A  3001               	movlw	1
  3475  044B                     u895:	
  3476  044B  36F1               	lsrf	___lwdiv@divisor+1,f
  3477  044C  0CF0               	rrf	___lwdiv@divisor,f
  3478  044D  0B89               	decfsz	9,f
  3479  044E  2C4B               	goto	u895
  3480  044F  3001               	movlw	1
  3481  0450  02F7               	subwf	___lwdiv@counter,f
  3482  0451  1D03               	btfss	3,2
  3483  0452  2C38               	goto	l1104
  3484  0453                     l1114:	
  3485  0453  0876               	movf	___lwdiv@quotient+1,w
  3486  0454  00F1               	movwf	?___lwdiv+1
  3487  0455  0875               	movf	___lwdiv@quotient,w
  3488  0456  00F0               	movwf	?___lwdiv
  3489  0457  0008               	return
  3490  0458                     __end_of___lwdiv:	
  3491                           
  3492                           	psect	text17
  3493  034B                     __ptext17:	
  3494 ;; *************** function _Lcd_Write_String *****************
  3495 ;; Defined at:
  3496 ;;		line 170 in file "LCD.c"
  3497 ;; Parameters:    Size  Location     Type
  3498 ;;  a               1    wreg     PTR const unsigned char 
  3499 ;;		 -> ftoa@buf(17), Lcd_Write_Integer@buf(8), 
  3500 ;; Auto vars:     Size  Location     Type
  3501 ;;  a               1    8[COMMON] PTR const unsigned char 
  3502 ;;		 -> ftoa@buf(17), Lcd_Write_Integer@buf(8), 
  3503 ;;  i               2    6[COMMON] int 
  3504 ;; Return value:  Size  Location     Type
  3505 ;;                  1    wreg      void 
  3506 ;; Registers used:
  3507 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3508 ;; Tracked objects:
  3509 ;;		On entry : 0/0
  3510 ;;		On exit  : 0/0
  3511 ;;		Unchanged: 0/0
  3512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3514 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3515 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3516 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3517 ;;Total ram usage:        4 bytes
  3518 ;; Hardware stack levels used:    1
  3519 ;; Hardware stack levels required when called:    2
  3520 ;; This function calls:
  3521 ;;		_Lcd_Write_Char
  3522 ;; This function is called by:
  3523 ;;		_Lcd_Write_Integer
  3524 ;;		_Lcd_Write_Float
  3525 ;; This function uses a non-reentrant model
  3526 ;;
  3527                           
  3528                           
  3529                           ;psect for function _Lcd_Write_String
  3530  034B                     _Lcd_Write_String:	
  3531                           
  3532                           ;incstack = 0
  3533                           ; Regs used in _Lcd_Write_String: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3534                           ;Lcd_Write_String@a stored from wreg
  3535  034B  00F8               	movwf	Lcd_Write_String@a
  3536                           
  3537                           ;LCD.c: 172: int i;
  3538                           ;LCD.c: 173: for(i=0;a[i]!='\0';i++)
  3539  034C  01F6               	clrf	Lcd_Write_String@i
  3540  034D  01F7               	clrf	Lcd_Write_String@i+1
  3541  034E                     l1220:	
  3542  034E  0876               	movf	Lcd_Write_String@i,w
  3543  034F  0778               	addwf	Lcd_Write_String@a,w
  3544  0350  00F5               	movwf	??_Lcd_Write_String
  3545  0351  0875               	movf	??_Lcd_Write_String,w
  3546  0352  0086               	movwf	6
  3547  0353  0187               	clrf	7
  3548  0354  0801               	movf	1,w
  3549  0355  1903               	btfsc	3,2
  3550  0356  0008               	return
  3551                           
  3552                           ;LCD.c: 174: Lcd_Write_Char(a[i]);
  3553  0357  0876               	movf	Lcd_Write_String@i,w
  3554  0358  0778               	addwf	Lcd_Write_String@a,w
  3555  0359  00F5               	movwf	??_Lcd_Write_String
  3556  035A  0875               	movf	??_Lcd_Write_String,w
  3557  035B  0086               	movwf	6
  3558  035C  0187               	clrf	7
  3559  035D  0801               	movf	1,w
  3560  035E  3183  23CC  3183   	fcall	_Lcd_Write_Char
  3561  0361  3001               	movlw	1
  3562  0362  07F6               	addwf	Lcd_Write_String@i,f
  3563  0363  3000               	movlw	0
  3564  0364  3DF7               	addwfc	Lcd_Write_String@i+1,f
  3565  0365  2B4E               	goto	l1220
  3566  0366                     __end_of_Lcd_Write_String:	
  3567                           
  3568                           	psect	text18
  3569  03CC                     __ptext18:	
  3570 ;; *************** function _Lcd_Write_Char *****************
  3571 ;; Defined at:
  3572 ;;		line 146 in file "LCD.c"
  3573 ;; Parameters:    Size  Location     Type
  3574 ;;  a               1    wreg     unsigned char 
  3575 ;; Auto vars:     Size  Location     Type
  3576 ;;  a               1    4[COMMON] unsigned char 
  3577 ;;  y               1    3[COMMON] unsigned char 
  3578 ;;  temp            1    2[COMMON] unsigned char 
  3579 ;; Return value:  Size  Location     Type
  3580 ;;                  1    wreg      void 
  3581 ;; Registers used:
  3582 ;;		wreg, status,2, status,0, pclath, cstack
  3583 ;; Tracked objects:
  3584 ;;		On entry : 0/0
  3585 ;;		On exit  : 0/0
  3586 ;;		Unchanged: 0/0
  3587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3589 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3590 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3591 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3592 ;;Total ram usage:        4 bytes
  3593 ;; Hardware stack levels used:    1
  3594 ;; Hardware stack levels required when called:    1
  3595 ;; This function calls:
  3596 ;;		_Lcd_Port
  3597 ;; This function is called by:
  3598 ;;		_Lcd_Write_String
  3599 ;; This function uses a non-reentrant model
  3600 ;;
  3601                           
  3602                           
  3603                           ;psect for function _Lcd_Write_Char
  3604  03CC                     _Lcd_Write_Char:	
  3605                           
  3606                           ;incstack = 0
  3607                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3608                           ;Lcd_Write_Char@a stored from wreg
  3609  03CC  00F4               	movwf	Lcd_Write_Char@a
  3610                           
  3611                           ;LCD.c: 148: char temp,y;
  3612                           ;LCD.c: 149: temp = a&0x0F;
  3613  03CD  0874               	movf	Lcd_Write_Char@a,w
  3614  03CE  390F               	andlw	15
  3615  03CF  00F1               	movwf	??_Lcd_Write_Char
  3616  03D0  0871               	movf	??_Lcd_Write_Char,w
  3617  03D1  00F2               	movwf	Lcd_Write_Char@temp
  3618                           
  3619                           ;LCD.c: 150: y = a&0xF0;
  3620  03D2  0874               	movf	Lcd_Write_Char@a,w
  3621  03D3  39F0               	andlw	240
  3622  03D4  00F1               	movwf	??_Lcd_Write_Char
  3623  03D5  0871               	movf	??_Lcd_Write_Char,w
  3624  03D6  00F3               	movwf	Lcd_Write_Char@y
  3625                           
  3626                           ;LCD.c: 151: RD2 = 1;
  3627  03D7  0020               	movlb	0	; select bank0
  3628  03D8  150F               	bsf	15,2	;volatile
  3629                           
  3630                           ;LCD.c: 152: Lcd_Port(y>>4);
  3631  03D9  0873               	movf	Lcd_Write_Char@y,w
  3632  03DA  00F1               	movwf	??_Lcd_Write_Char
  3633  03DB  3004               	movlw	4
  3634  03DC                     u975:	
  3635  03DC  36F1               	lsrf	??_Lcd_Write_Char,f
  3636  03DD  0B89               	decfsz	9,f
  3637  03DE  2BDC               	goto	u975
  3638  03DF  0871               	movf	??_Lcd_Write_Char,w
  3639  03E0  3183  2333  3183   	fcall	_Lcd_Port
  3640                           
  3641                           ;LCD.c: 153: RD3 = 1;
  3642  03E3  0020               	movlb	0	; select bank0
  3643  03E4  158F               	bsf	15,3	;volatile
  3644                           
  3645                           ;LCD.c: 154: _delay((unsigned long)((40)*(16000000/4000000.0)));
  3646  03E5  3035               	movlw	53
  3647  03E6                     u1667:	
  3648  03E6  0B89               	decfsz	9,f
  3649  03E7  2BE6               	goto	u1667
  3650  03E8  0000               	nop
  3651                           
  3652                           ;LCD.c: 155: RD3 = 0;
  3653  03E9  0020               	movlb	0	; select bank0
  3654  03EA  118F               	bcf	15,3	;volatile
  3655                           
  3656                           ;LCD.c: 156: Lcd_Port(temp);
  3657  03EB  0872               	movf	Lcd_Write_Char@temp,w
  3658  03EC  3183  2333  3183   	fcall	_Lcd_Port
  3659                           
  3660                           ;LCD.c: 157: RD3 = 1;
  3661  03EF  0020               	movlb	0	; select bank0
  3662  03F0  158F               	bsf	15,3	;volatile
  3663                           
  3664                           ;LCD.c: 158: _delay((unsigned long)((40)*(16000000/4000000.0)));
  3665  03F1  3035               	movlw	53
  3666  03F2                     u1677:	
  3667  03F2  0B89               	decfsz	9,f
  3668  03F3  2BF2               	goto	u1677
  3669  03F4  0000               	nop
  3670                           
  3671                           ;LCD.c: 159: RD3 = 0;
  3672  03F5  0020               	movlb	0	; select bank0
  3673  03F6  118F               	bcf	15,3	;volatile
  3674  03F7  0008               	return
  3675  03F8                     __end_of_Lcd_Write_Char:	
  3676                           
  3677                           	psect	text19
  3678  0333                     __ptext19:	
  3679 ;; *************** function _Lcd_Port *****************
  3680 ;; Defined at:
  3681 ;;		line 28 in file "LCD.c"
  3682 ;; Parameters:    Size  Location     Type
  3683 ;;  a               1    wreg     unsigned char 
  3684 ;; Auto vars:     Size  Location     Type
  3685 ;;  a               1    0[COMMON] unsigned char 
  3686 ;; Return value:  Size  Location     Type
  3687 ;;                  1    wreg      void 
  3688 ;; Registers used:
  3689 ;;		wreg
  3690 ;; Tracked objects:
  3691 ;;		On entry : 0/0
  3692 ;;		On exit  : 0/0
  3693 ;;		Unchanged: 0/0
  3694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3696 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3698 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3699 ;;Total ram usage:        1 bytes
  3700 ;; Hardware stack levels used:    1
  3701 ;; This function calls:
  3702 ;;		Nothing
  3703 ;; This function is called by:
  3704 ;;		_Lcd_Cmd
  3705 ;;		_Lcd_Init
  3706 ;;		_Lcd_Write_Char
  3707 ;; This function uses a non-reentrant model
  3708 ;;
  3709                           
  3710                           
  3711                           ;psect for function _Lcd_Port
  3712  0333                     _Lcd_Port:	
  3713                           
  3714                           ;incstack = 0
  3715                           ; Regs used in _Lcd_Port: [wreg]
  3716                           ;Lcd_Port@a stored from wreg
  3717  0333  00F0               	movwf	Lcd_Port@a
  3718                           
  3719                           ;LCD.c: 30: if(a & 1)
  3720  0334  1C70               	btfss	Lcd_Port@a,0
  3721  0335  2B39               	goto	l56
  3722                           
  3723                           ;LCD.c: 31: RD4 = 1;
  3724  0336  0020               	movlb	0	; select bank0
  3725  0337  160F               	bsf	15,4	;volatile
  3726  0338  2B3B               	goto	l1080
  3727  0339                     l56:	
  3728                           
  3729                           ;LCD.c: 32: else
  3730                           ;LCD.c: 33: RD4 = 0;
  3731  0339  0020               	movlb	0	; select bank0
  3732  033A  120F               	bcf	15,4	;volatile
  3733  033B                     l1080:	
  3734                           
  3735                           ;LCD.c: 35: if(a & 2)
  3736  033B  1CF0               	btfss	Lcd_Port@a,1
  3737  033C  2B3F               	goto	l58
  3738                           
  3739                           ;LCD.c: 36: RD5 = 1;
  3740  033D  168F               	bsf	15,5	;volatile
  3741  033E  2B40               	goto	l1084
  3742  033F                     l58:	
  3743                           
  3744                           ;LCD.c: 37: else
  3745                           ;LCD.c: 38: RD5 = 0;
  3746  033F  128F               	bcf	15,5	;volatile
  3747  0340                     l1084:	
  3748                           
  3749                           ;LCD.c: 40: if(a & 4)
  3750  0340  1D70               	btfss	Lcd_Port@a,2
  3751  0341  2B44               	goto	l60
  3752                           
  3753                           ;LCD.c: 41: RD6 = 1;
  3754  0342  170F               	bsf	15,6	;volatile
  3755  0343  2B45               	goto	l1088
  3756  0344                     l60:	
  3757                           
  3758                           ;LCD.c: 42: else
  3759                           ;LCD.c: 43: RD6 = 0;
  3760  0344  130F               	bcf	15,6	;volatile
  3761  0345                     l1088:	
  3762                           
  3763                           ;LCD.c: 45: if(a & 8)
  3764  0345  1DF0               	btfss	Lcd_Port@a,3
  3765  0346  2B49               	goto	l62
  3766                           
  3767                           ;LCD.c: 46: RD7 = 1;
  3768  0347  178F               	bsf	15,7	;volatile
  3769  0348  0008               	return
  3770  0349                     l62:	
  3771                           
  3772                           ;LCD.c: 47: else
  3773                           ;LCD.c: 48: RD7 = 0;
  3774  0349  138F               	bcf	15,7	;volatile
  3775  034A  0008               	return
  3776  034B                     __end_of_Lcd_Port:	
  3777  007E                     btemp	set	126	;btemp
  3778  007E                     wtemp0	set	126


Data Sizes:
    Strings     11
    Constant    40
    Data        0
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     40      57
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(1) Largest target is 8
		 -> Lcd_Write_Integer@buf(BANK0[8]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 8
		 -> Lcd_Write_Integer@buf(BANK0[8]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 8
		 -> Lcd_Write_Integer@buf(BANK0[8]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 8
		 -> Lcd_Write_Integer@buf(BANK0[8]), 

    sp__ftoa	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK0[17]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 8
		 -> Lcd_Write_Integer@buf(BANK0[8]), 

    Lcd_Write_String@a	PTR const unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK0[17]), Lcd_Write_Integer@buf(BANK0[8]), 


Critical Paths under _main in COMMON

    _main->___awtoft
    _initMain->_Lcd_Init
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    ___fttol->___awtoft
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _Lcd_Write_Integer->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port

Critical Paths under _main in BANK0

    _main->___fttol
    ___fttol->___ftdiv
    _Lcd_Write_Integer->_itoa
    _itoa->_utoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0    7993
                                             30 BANK0     10    10      0
                          _Lcd_Clear
                  _Lcd_Write_Integer
                            ___awdiv
                            ___awmod
                           ___awtoft
                            ___ftdiv
                            ___fttol
                           _initMain
 ---------------------------------------------------------------------------------
 (1) _initMain                                             2     2      0     308
                                              4 COMMON     2     2      0
                          _Lcd_Clear
                           _Lcd_Init
                        _internal_16
 ---------------------------------------------------------------------------------
 (2) _internal_16                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             1     1      0     198
                                              3 COMMON     1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              2     2      0     110
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     385
                                             16 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    2015
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             6     3      3    1773
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    1629
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     614
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     618
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_Integer                                   10     8      2    1919
                                             10 BANK0     10     8      2
                   _Lcd_Write_String
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 7     3      4    1386
                                             13 COMMON     1     1      0
                                              4 BANK0      6     2      4
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     5      4    1074
                                              8 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     265
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     374
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     4     4      0     322
                                              5 COMMON     4     4      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Integer
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
   ___awdiv
   ___awmod
   ___awtoft
     ___ftpack
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___fttol
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
   _initMain
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Init
       _Lcd_Cmd
         _Lcd_Port
       _Lcd_Port
     _internal_16

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     28      39       5       71.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      47      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      47      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Tue Apr 18 11:28:30 2017

               __CFG_CP$OFF 0000                          l60 0344                          l62 0349  
                        l56 0339                          l58 033F                ___awdiv@sign 0076  
                       l142 073B                         l139 0738                         l360 05C6  
                       l367 05D9                         l368 05E1                         l459 0665  
                       l479 057E                         _RD2 007A                         _RC4 0074  
                       _RD3 007B                         _RC5 0075                         _RD4 007C  
                       _RD5 007D                         _RD6 007E                         _RD7 007F  
                       u925 0401                         u855 042F                         u945 0410  
                       u875 0439                         u955 0417                         u885 0443  
                       u975 03DC                         u895 044B                ___awmod@sign 0076  
              __CFG_BORV$LO 0000                         wreg 0009                __CFG_IESO$ON 0000  
              __CFG_LVP$OFF 0000                ___ftdiv@cntr 002A                ___ftdiv@sign 002F  
                      l1110 044A                        l1102 042C                        l1104 0438  
                      l1114 0453                        l1220 034E                        l1132 0416  
                      l1126 03FE                        l1080 033B                        l1128 040A  
                      l1136 041F                        l1232 03BE                        l1304 04F6  
                      l1330 052D                        l1322 051C                        l1314 04FE  
                      l1250 05B2                        l1242 059C                        l1410 06ED  
                      l1084 0340                        l1172 0538                        l1316 050A  
                      l1500 072E                        l1182 0556                        l1326 0525  
                      l1342 04A6                        l1246 05A3                        l1088 0345  
                      l1360 04CB                        l1256 05CB                        l1248 05AD  
                      l1432 0611                        l1354 04B3                        l1346 04AD  
                      l1258 05D3                        l1418 0706                        l1450 0641  
                      l1356 04BF                        l1364 04D4                        l1380 0370  
                      l1460 0668                        l1452 064F                        l1390 0696  
                      l1368 04DC                        l1464 0676                        l1298 04EB  
                      l1458 065C                        l1396 06AC                        STR_1 0828  
                      u1205 050B                        u1215 0515                        u1135 05E8  
                      u1055 05A8                        u1225 051D                        u1305 04C5  
                      u1315 04CC                        u1075 05C1                        u1405 06FD  
                      u1095 05CE                        u1415 0707                        u1185 0501  
                      u1505 065D                        u1285 04B6                        u1445 0618  
                      u1375 06BE                        u1607 07EB                        u1385 06CE  
                      u1617 039C                        u1395 06EE                        u1475 0642  
                      u1627 045F                        u1637 046B                        u1647 0477  
                      u1657 032B                        u1667 03E6                        u1677 03F2  
                      u1597 0733                        _SCS0 04C8                        _SCS1 04C9  
              __CFG_WRT$OFF 0000           ?_Lcd_Write_String 0070                        _main 0728  
              ___ftpack@arg 0070                        _itoa 03A6                ___ftpack@exp 0073  
                      fsr0h 0005                        fsr1h 0007                        indf0 0000  
                      fsr0l 0004                        indf1 0001                        fsr1l 0006  
                      btemp 007E                        _utoa 0532                        start 0002  
        ??_Lcd_Write_String 0075             __end_of_Lcd_Cmd 0333                ___fttol@exp1 003D  
              ___fttol@lval 0039           _Lcd_Write_Integer 030F                       ?_main 0070  
                     ?_itoa 0024             __end_of___awdiv 0532               __CFG_WDTE$OFF 0000  
           __end_of___awmod 04E1             __end_of___ftdiv 0728                       ?_utoa 0078  
           ___awdiv@divisor 0070                       _T1CON 0018             __end_of___fttol 067F  
                     _IRCF0 04CB                       _IRCF1 04CC                       _IRCF2 04CD  
                     _IRCF3 04CE          ?_Lcd_Write_Integer 002A             __end_of___lwdiv 0458  
           __end_of___lwmod 0424             ___awdiv@counter 0075                       _TMR1H 0017  
                     _TMR1L 0016                       _PORTD 000F                       _TRISD 008F  
            __CFG_FCMEN$OFF 0000                main@hundreds 0044               ___awtoft@sign 007D  
           __end_of_dpowers 0828         ??_Lcd_Write_Integer 007E               ___ftpack@sign 0074  
                     main@a 0046              __CFG_BOREN$OFF 0000                       utoa@c 0022  
                     utoa@v 0020                       status 0003                       wtemp0 007E  
              ?_internal_16 0070            __end_of_Lcd_Init 049C            __end_of_Lcd_Port 034B  
            __CFG_MCLRE$OFF 0000             __initialization 07F6                __end_of_main 07F6  
              __end_of_itoa 03CC                __end_of_utoa 0594   __end_of_Lcd_Write_Integer 031F  
            __CFG_LPBOR$OFF 0000                      ??_main 003E               ___fttol@sign1 0038  
                    ??_itoa 007D                      ??_utoa 007C          __size_of_Lcd_Clear 0008  
            __CFG_PLLEN$OFF 0000            ___awdiv@dividend 0072              __CFG_ZCDDIS$ON 0000  
          __end_of___awtoft 0386                      _ANSELC 018E                      _ANSELD 018F  
          __end_of___ftpack 05F8                   ??_Lcd_Cmd 0071                      _SPLLEN 04CF  
   __size_of_Lcd_Write_Char 002C              __CFG_PWRTE$OFF 0000                   ??___awdiv 0074  
            __CFG_STVREN$ON 0000                   ??___awmod 0074                   ??___ftdiv 0026  
                 ??___fttol 0034                   ??___lwdiv 0074                   ??___lwmod 0074  
          __end_of_initMain 03A6            ___awdiv@quotient 0077             ___awmod@divisor 0070  
           ___awmod@counter 0075                      itoa@cp 0028     __end_of__initialization 07FD  
         __end_of_Lcd_Clear 0306                  ___ftdiv@f1 0023                  ___ftdiv@f2 0020  
                ___ftdiv@f3 002B                  ___awtoft@c 0078                  ___fttol@f1 0030  
            __pcstackCOMMON 0070  __size_of_Lcd_Write_Integer 0010                   ?_Lcd_Init 0070  
                 ?_Lcd_Port 0070                  __pbssBANK0 0048                  __pmaintext 0728  
      __size_of_internal_16 0009             __CFG_PPS1WAY$ON 0000   __size_of_Lcd_Write_String 001B  
                 ?___awtoft 0078                   ?___ftpack 0070                  ??_Lcd_Init 0073  
                ??_Lcd_Port 0070                   ?_initMain 0070              _Lcd_Write_Char 03CC  
                   _Lcd_Cmd 031F                     ___awdiv 04E1                     ___awmod 049C  
                   ___ftdiv 067F                     ___fttol 05F8                     ___lwdiv 0424  
                   ___lwmod 03F8                  ??___awtoft 007B                  ??___ftpack 0075  
                   __ptext1 0386                     __ptext2 0306                     __ptext3 0458  
                   __ptext4 02FE                     __ptext5 031F                     __ptext6 05F8  
                   __ptext7 067F                     __ptext8 0366                     __ptext9 0594  
                 _T1CONbits 0018                     _dpowers 0800            ___awmod@dividend 0072  
                   clrloop0 02F9      __end_of_Lcd_Write_Char 03F8        end_of_initialization 07FD  
                   ftoa@buf 0048                  ??_initMain 0074                     itoa@buf 0029  
                   itoa@val 0024                   Lcd_Port@a 0070                __pstringtext 0800  
                   utoa@buf 0023                     utoa@val 0078            __CFG_FOSC$INTOSC 0000  
                 _TRISCbits 008E             ?_Lcd_Write_Char 0070           Lcd_Write_String@a 0078  
         Lcd_Write_String@i 0076                 ___ftdiv@exp 002E                   _Lcd_Clear 02FE  
          _Lcd_Write_String 034B         start_initialization 07F6           __size_of_Lcd_Init 0044  
         __size_of_Lcd_Port 0018                  ?_Lcd_Clear 0070             Lcd_Write_Char@a 0074  
           Lcd_Write_Char@y 0073           __size_of___awtoft 0020           __size_of___ftpack 0064  
                 ___latbits 0002               __pcstackBANK0 0020                    ?_Lcd_Cmd 0070  
             ??_internal_16 0070           __size_of_initMain 0020            ___lwdiv@dividend 0072  
                  ?___awdiv 0070                    ?___awmod 0070                    ?___ftdiv 0020  
                  ?___fttol 0030                    ?___lwdiv 0070                    ?___lwmod 0070  
          ___lwdiv@quotient 0075                   clear_ram0 02F8                    Lcd_Cmd@a 0072  
               ??_Lcd_Clear 0073         __end_of_internal_16 030F            ??_Lcd_Write_Char 0071  
                  _Lcd_Init 0458                    _Lcd_Port 0333    __end_of_Lcd_Write_String 0366  
          __size_of_Lcd_Cmd 0014            __size_of___awdiv 0051            __size_of___awmod 0045  
          __size_of___ftdiv 00A9            __size_of___fttol 0087            __size_of___lwdiv 0034  
          __size_of___lwmod 002C                    ___awtoft 0366                    ___ftpack 0594  
           ___lwdiv@divisor 0070             ___lwdiv@counter 0077                    __ptext10 049C  
                  __ptext11 04E1                    __ptext12 030F                    __ptext13 03A6  
                  __ptext14 0532                    __ptext15 03F8                    __ptext16 0424  
                  __ptext17 034B                    __ptext18 03CC                    __ptext19 0333  
                  _initMain 0386               __size_of_main 00CE               __size_of_itoa 0026  
             __size_of_utoa 0062                 _internal_16 0306        Lcd_Write_Integer@buf 002C  
                  main@ones 0040                    main@tens 0042                    itoa@base 0026  
        Lcd_Write_Char@temp 0072            ___lwmod@dividend 0072           __CFG_CLKOUTEN$OFF 0000  
                  utoa@base 007A             ___lwmod@divisor 0070             ___lwmod@counter 0075  
        Lcd_Write_Integer@v 002A  
