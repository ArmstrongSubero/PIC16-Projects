

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat May 11 23:45:23 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1717
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	text8,local,class=CODE,merge=1,delta=2
    16                           	psect	text9,local,class=CODE,merge=1,delta=2
    17                           	psect	text10,local,class=CODE,merge=1,delta=2
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.05
    21                           ; Generated 20/12/2018 GMT
    22                           ; 
    23                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F1717 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  008C                     	;# 
    84  008D                     	;# 
    85  008E                     	;# 
    86  008F                     	;# 
    87  0090                     	;# 
    88  0091                     	;# 
    89  0092                     	;# 
    90  0093                     	;# 
    91  0095                     	;# 
    92  0096                     	;# 
    93  0097                     	;# 
    94  0098                     	;# 
    95  0099                     	;# 
    96  009A                     	;# 
    97  009B                     	;# 
    98  009B                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009E                     	;# 
   102  009F                     	;# 
   103  010C                     	;# 
   104  010D                     	;# 
   105  010E                     	;# 
   106  010F                     	;# 
   107  0110                     	;# 
   108  0111                     	;# 
   109  0112                     	;# 
   110  0113                     	;# 
   111  0114                     	;# 
   112  0115                     	;# 
   113  0116                     	;# 
   114  0117                     	;# 
   115  0118                     	;# 
   116  0119                     	;# 
   117  011A                     	;# 
   118  011B                     	;# 
   119  011B                     	;# 
   120  011C                     	;# 
   121  018C                     	;# 
   122  018D                     	;# 
   123  018E                     	;# 
   124  018F                     	;# 
   125  0190                     	;# 
   126  0191                     	;# 
   127  0191                     	;# 
   128  0192                     	;# 
   129  0193                     	;# 
   130  0193                     	;# 
   131  0194                     	;# 
   132  0195                     	;# 
   133  0196                     	;# 
   134  0197                     	;# 
   135  0199                     	;# 
   136  0199                     	;# 
   137  0199                     	;# 
   138  019A                     	;# 
   139  019A                     	;# 
   140  019A                     	;# 
   141  019B                     	;# 
   142  019B                     	;# 
   143  019B                     	;# 
   144  019B                     	;# 
   145  019B                     	;# 
   146  019C                     	;# 
   147  019C                     	;# 
   148  019C                     	;# 
   149  019D                     	;# 
   150  019D                     	;# 
   151  019D                     	;# 
   152  019E                     	;# 
   153  019E                     	;# 
   154  019E                     	;# 
   155  019F                     	;# 
   156  019F                     	;# 
   157  019F                     	;# 
   158  019F                     	;# 
   159  019F                     	;# 
   160  020C                     	;# 
   161  020D                     	;# 
   162  020E                     	;# 
   163  020F                     	;# 
   164  0210                     	;# 
   165  0211                     	;# 
   166  0211                     	;# 
   167  0212                     	;# 
   168  0212                     	;# 
   169  0213                     	;# 
   170  0213                     	;# 
   171  0214                     	;# 
   172  0214                     	;# 
   173  0215                     	;# 
   174  0215                     	;# 
   175  0215                     	;# 
   176  0215                     	;# 
   177  0216                     	;# 
   178  0216                     	;# 
   179  0217                     	;# 
   180  0217                     	;# 
   181  028C                     	;# 
   182  028D                     	;# 
   183  028E                     	;# 
   184  028F                     	;# 
   185  0290                     	;# 
   186  0291                     	;# 
   187  0291                     	;# 
   188  0292                     	;# 
   189  0293                     	;# 
   190  0293                     	;# 
   191  0298                     	;# 
   192  0298                     	;# 
   193  0299                     	;# 
   194  029A                     	;# 
   195  029A                     	;# 
   196  029E                     	;# 
   197  030C                     	;# 
   198  030D                     	;# 
   199  030E                     	;# 
   200  030F                     	;# 
   201  0310                     	;# 
   202  038C                     	;# 
   203  038D                     	;# 
   204  038E                     	;# 
   205  038F                     	;# 
   206  0390                     	;# 
   207  0391                     	;# 
   208  0392                     	;# 
   209  0393                     	;# 
   210  0394                     	;# 
   211  0395                     	;# 
   212  0396                     	;# 
   213  0397                     	;# 
   214  0398                     	;# 
   215  0399                     	;# 
   216  039D                     	;# 
   217  039E                     	;# 
   218  039F                     	;# 
   219  0415                     	;# 
   220  0416                     	;# 
   221  0417                     	;# 
   222  041C                     	;# 
   223  041D                     	;# 
   224  041E                     	;# 
   225  0498                     	;# 
   226  0498                     	;# 
   227  0499                     	;# 
   228  049A                     	;# 
   229  049B                     	;# 
   230  049B                     	;# 
   231  049C                     	;# 
   232  049D                     	;# 
   233  049E                     	;# 
   234  049F                     	;# 
   235  0511                     	;# 
   236  0515                     	;# 
   237  0617                     	;# 
   238  0618                     	;# 
   239  0619                     	;# 
   240  0619                     	;# 
   241  061A                     	;# 
   242  061B                     	;# 
   243  061C                     	;# 
   244  061C                     	;# 
   245  0691                     	;# 
   246  0692                     	;# 
   247  0693                     	;# 
   248  0694                     	;# 
   249  0695                     	;# 
   250  0696                     	;# 
   251  0697                     	;# 
   252  0698                     	;# 
   253  0699                     	;# 
   254  069A                     	;# 
   255  069B                     	;# 
   256  069C                     	;# 
   257  069D                     	;# 
   258  069E                     	;# 
   259  069F                     	;# 
   260  0E0F                     	;# 
   261  0E10                     	;# 
   262  0E11                     	;# 
   263  0E12                     	;# 
   264  0E13                     	;# 
   265  0E14                     	;# 
   266  0E15                     	;# 
   267  0E17                     	;# 
   268  0E20                     	;# 
   269  0E21                     	;# 
   270  0E22                     	;# 
   271  0E24                     	;# 
   272  0E25                     	;# 
   273  0E28                     	;# 
   274  0E29                     	;# 
   275  0E2A                     	;# 
   276  0E2B                     	;# 
   277  0E90                     	;# 
   278  0E91                     	;# 
   279  0E92                     	;# 
   280  0E93                     	;# 
   281  0E94                     	;# 
   282  0E95                     	;# 
   283  0E96                     	;# 
   284  0E97                     	;# 
   285  0E98                     	;# 
   286  0E99                     	;# 
   287  0E9A                     	;# 
   288  0E9B                     	;# 
   289  0E9C                     	;# 
   290  0E9D                     	;# 
   291  0E9E                     	;# 
   292  0E9F                     	;# 
   293  0EA0                     	;# 
   294  0EA1                     	;# 
   295  0EA2                     	;# 
   296  0EA3                     	;# 
   297  0EA4                     	;# 
   298  0EA5                     	;# 
   299  0EA6                     	;# 
   300  0EA7                     	;# 
   301  0EA8                     	;# 
   302  0EA9                     	;# 
   303  0EAA                     	;# 
   304  0EAB                     	;# 
   305  0EAC                     	;# 
   306  0EAD                     	;# 
   307  0EAE                     	;# 
   308  0EAF                     	;# 
   309  0EB0                     	;# 
   310  0EB1                     	;# 
   311  0EB2                     	;# 
   312  0F0F                     	;# 
   313  0F10                     	;# 
   314  0F11                     	;# 
   315  0F12                     	;# 
   316  0F13                     	;# 
   317  0F14                     	;# 
   318  0F15                     	;# 
   319  0F16                     	;# 
   320  0F17                     	;# 
   321  0F18                     	;# 
   322  0F19                     	;# 
   323  0F1A                     	;# 
   324  0F1B                     	;# 
   325  0F1C                     	;# 
   326  0F1D                     	;# 
   327  0F1E                     	;# 
   328  0F1F                     	;# 
   329  0F20                     	;# 
   330  0F21                     	;# 
   331  0F22                     	;# 
   332  0F23                     	;# 
   333  0F24                     	;# 
   334  0F25                     	;# 
   335  0F26                     	;# 
   336  0F27                     	;# 
   337  0F28                     	;# 
   338  0F29                     	;# 
   339  0F2A                     	;# 
   340  0F2B                     	;# 
   341  0F2C                     	;# 
   342  0F2D                     	;# 
   343  0F2E                     	;# 
   344  0F2F                     	;# 
   345  0F30                     	;# 
   346  0F31                     	;# 
   347  0F32                     	;# 
   348  0F33                     	;# 
   349  0F34                     	;# 
   350  0F35                     	;# 
   351  0F36                     	;# 
   352  0F37                     	;# 
   353  0FE4                     	;# 
   354  0FE5                     	;# 
   355  0FE6                     	;# 
   356  0FE7                     	;# 
   357  0FE8                     	;# 
   358  0FE9                     	;# 
   359  0FEA                     	;# 
   360  0FEB                     	;# 
   361  0FED                     	;# 
   362  0FEE                     	;# 
   363  0FEF                     	;# 
   364  0000                     	;# 
   365  0001                     	;# 
   366  0002                     	;# 
   367  0003                     	;# 
   368  0004                     	;# 
   369  0005                     	;# 
   370  0006                     	;# 
   371  0007                     	;# 
   372  0008                     	;# 
   373  0009                     	;# 
   374  000A                     	;# 
   375  000B                     	;# 
   376  000C                     	;# 
   377  000D                     	;# 
   378  000E                     	;# 
   379  000F                     	;# 
   380  0010                     	;# 
   381  0011                     	;# 
   382  0012                     	;# 
   383  0013                     	;# 
   384  0015                     	;# 
   385  0016                     	;# 
   386  0016                     	;# 
   387  0017                     	;# 
   388  0018                     	;# 
   389  0019                     	;# 
   390  001A                     	;# 
   391  001B                     	;# 
   392  001C                     	;# 
   393  008C                     	;# 
   394  008D                     	;# 
   395  008E                     	;# 
   396  008F                     	;# 
   397  0090                     	;# 
   398  0091                     	;# 
   399  0092                     	;# 
   400  0093                     	;# 
   401  0095                     	;# 
   402  0096                     	;# 
   403  0097                     	;# 
   404  0098                     	;# 
   405  0099                     	;# 
   406  009A                     	;# 
   407  009B                     	;# 
   408  009B                     	;# 
   409  009C                     	;# 
   410  009D                     	;# 
   411  009E                     	;# 
   412  009F                     	;# 
   413  010C                     	;# 
   414  010D                     	;# 
   415  010E                     	;# 
   416  010F                     	;# 
   417  0110                     	;# 
   418  0111                     	;# 
   419  0112                     	;# 
   420  0113                     	;# 
   421  0114                     	;# 
   422  0115                     	;# 
   423  0116                     	;# 
   424  0117                     	;# 
   425  0118                     	;# 
   426  0119                     	;# 
   427  011A                     	;# 
   428  011B                     	;# 
   429  011B                     	;# 
   430  011C                     	;# 
   431  018C                     	;# 
   432  018D                     	;# 
   433  018E                     	;# 
   434  018F                     	;# 
   435  0190                     	;# 
   436  0191                     	;# 
   437  0191                     	;# 
   438  0192                     	;# 
   439  0193                     	;# 
   440  0193                     	;# 
   441  0194                     	;# 
   442  0195                     	;# 
   443  0196                     	;# 
   444  0197                     	;# 
   445  0199                     	;# 
   446  0199                     	;# 
   447  0199                     	;# 
   448  019A                     	;# 
   449  019A                     	;# 
   450  019A                     	;# 
   451  019B                     	;# 
   452  019B                     	;# 
   453  019B                     	;# 
   454  019B                     	;# 
   455  019B                     	;# 
   456  019C                     	;# 
   457  019C                     	;# 
   458  019C                     	;# 
   459  019D                     	;# 
   460  019D                     	;# 
   461  019D                     	;# 
   462  019E                     	;# 
   463  019E                     	;# 
   464  019E                     	;# 
   465  019F                     	;# 
   466  019F                     	;# 
   467  019F                     	;# 
   468  019F                     	;# 
   469  019F                     	;# 
   470  020C                     	;# 
   471  020D                     	;# 
   472  020E                     	;# 
   473  020F                     	;# 
   474  0210                     	;# 
   475  0211                     	;# 
   476  0211                     	;# 
   477  0212                     	;# 
   478  0212                     	;# 
   479  0213                     	;# 
   480  0213                     	;# 
   481  0214                     	;# 
   482  0214                     	;# 
   483  0215                     	;# 
   484  0215                     	;# 
   485  0215                     	;# 
   486  0215                     	;# 
   487  0216                     	;# 
   488  0216                     	;# 
   489  0217                     	;# 
   490  0217                     	;# 
   491  028C                     	;# 
   492  028D                     	;# 
   493  028E                     	;# 
   494  028F                     	;# 
   495  0290                     	;# 
   496  0291                     	;# 
   497  0291                     	;# 
   498  0292                     	;# 
   499  0293                     	;# 
   500  0293                     	;# 
   501  0298                     	;# 
   502  0298                     	;# 
   503  0299                     	;# 
   504  029A                     	;# 
   505  029A                     	;# 
   506  029E                     	;# 
   507  030C                     	;# 
   508  030D                     	;# 
   509  030E                     	;# 
   510  030F                     	;# 
   511  0310                     	;# 
   512  038C                     	;# 
   513  038D                     	;# 
   514  038E                     	;# 
   515  038F                     	;# 
   516  0390                     	;# 
   517  0391                     	;# 
   518  0392                     	;# 
   519  0393                     	;# 
   520  0394                     	;# 
   521  0395                     	;# 
   522  0396                     	;# 
   523  0397                     	;# 
   524  0398                     	;# 
   525  0399                     	;# 
   526  039D                     	;# 
   527  039E                     	;# 
   528  039F                     	;# 
   529  0415                     	;# 
   530  0416                     	;# 
   531  0417                     	;# 
   532  041C                     	;# 
   533  041D                     	;# 
   534  041E                     	;# 
   535  0498                     	;# 
   536  0498                     	;# 
   537  0499                     	;# 
   538  049A                     	;# 
   539  049B                     	;# 
   540  049B                     	;# 
   541  049C                     	;# 
   542  049D                     	;# 
   543  049E                     	;# 
   544  049F                     	;# 
   545  0511                     	;# 
   546  0515                     	;# 
   547  0617                     	;# 
   548  0618                     	;# 
   549  0619                     	;# 
   550  0619                     	;# 
   551  061A                     	;# 
   552  061B                     	;# 
   553  061C                     	;# 
   554  061C                     	;# 
   555  0691                     	;# 
   556  0692                     	;# 
   557  0693                     	;# 
   558  0694                     	;# 
   559  0695                     	;# 
   560  0696                     	;# 
   561  0697                     	;# 
   562  0698                     	;# 
   563  0699                     	;# 
   564  069A                     	;# 
   565  069B                     	;# 
   566  069C                     	;# 
   567  069D                     	;# 
   568  069E                     	;# 
   569  069F                     	;# 
   570  0E0F                     	;# 
   571  0E10                     	;# 
   572  0E11                     	;# 
   573  0E12                     	;# 
   574  0E13                     	;# 
   575  0E14                     	;# 
   576  0E15                     	;# 
   577  0E17                     	;# 
   578  0E20                     	;# 
   579  0E21                     	;# 
   580  0E22                     	;# 
   581  0E24                     	;# 
   582  0E25                     	;# 
   583  0E28                     	;# 
   584  0E29                     	;# 
   585  0E2A                     	;# 
   586  0E2B                     	;# 
   587  0E90                     	;# 
   588  0E91                     	;# 
   589  0E92                     	;# 
   590  0E93                     	;# 
   591  0E94                     	;# 
   592  0E95                     	;# 
   593  0E96                     	;# 
   594  0E97                     	;# 
   595  0E98                     	;# 
   596  0E99                     	;# 
   597  0E9A                     	;# 
   598  0E9B                     	;# 
   599  0E9C                     	;# 
   600  0E9D                     	;# 
   601  0E9E                     	;# 
   602  0E9F                     	;# 
   603  0EA0                     	;# 
   604  0EA1                     	;# 
   605  0EA2                     	;# 
   606  0EA3                     	;# 
   607  0EA4                     	;# 
   608  0EA5                     	;# 
   609  0EA6                     	;# 
   610  0EA7                     	;# 
   611  0EA8                     	;# 
   612  0EA9                     	;# 
   613  0EAA                     	;# 
   614  0EAB                     	;# 
   615  0EAC                     	;# 
   616  0EAD                     	;# 
   617  0EAE                     	;# 
   618  0EAF                     	;# 
   619  0EB0                     	;# 
   620  0EB1                     	;# 
   621  0EB2                     	;# 
   622  0F0F                     	;# 
   623  0F10                     	;# 
   624  0F11                     	;# 
   625  0F12                     	;# 
   626  0F13                     	;# 
   627  0F14                     	;# 
   628  0F15                     	;# 
   629  0F16                     	;# 
   630  0F17                     	;# 
   631  0F18                     	;# 
   632  0F19                     	;# 
   633  0F1A                     	;# 
   634  0F1B                     	;# 
   635  0F1C                     	;# 
   636  0F1D                     	;# 
   637  0F1E                     	;# 
   638  0F1F                     	;# 
   639  0F20                     	;# 
   640  0F21                     	;# 
   641  0F22                     	;# 
   642  0F23                     	;# 
   643  0F24                     	;# 
   644  0F25                     	;# 
   645  0F26                     	;# 
   646  0F27                     	;# 
   647  0F28                     	;# 
   648  0F29                     	;# 
   649  0F2A                     	;# 
   650  0F2B                     	;# 
   651  0F2C                     	;# 
   652  0F2D                     	;# 
   653  0F2E                     	;# 
   654  0F2F                     	;# 
   655  0F30                     	;# 
   656  0F31                     	;# 
   657  0F32                     	;# 
   658  0F33                     	;# 
   659  0F34                     	;# 
   660  0F35                     	;# 
   661  0F36                     	;# 
   662  0F37                     	;# 
   663  0FE4                     	;# 
   664  0FE5                     	;# 
   665  0FE6                     	;# 
   666  0FE7                     	;# 
   667  0FE8                     	;# 
   668  0FE9                     	;# 
   669  0FEA                     	;# 
   670  0FEB                     	;# 
   671  0FED                     	;# 
   672  0FEE                     	;# 
   673  0FEF                     	;# 
   674  0000                     	;# 
   675  0001                     	;# 
   676  0002                     	;# 
   677  0003                     	;# 
   678  0004                     	;# 
   679  0005                     	;# 
   680  0006                     	;# 
   681  0007                     	;# 
   682  0008                     	;# 
   683  0009                     	;# 
   684  000A                     	;# 
   685  000B                     	;# 
   686  000C                     	;# 
   687  000D                     	;# 
   688  000E                     	;# 
   689  000F                     	;# 
   690  0010                     	;# 
   691  0011                     	;# 
   692  0012                     	;# 
   693  0013                     	;# 
   694  0015                     	;# 
   695  0016                     	;# 
   696  0016                     	;# 
   697  0017                     	;# 
   698  0018                     	;# 
   699  0019                     	;# 
   700  001A                     	;# 
   701  001B                     	;# 
   702  001C                     	;# 
   703  008C                     	;# 
   704  008D                     	;# 
   705  008E                     	;# 
   706  008F                     	;# 
   707  0090                     	;# 
   708  0091                     	;# 
   709  0092                     	;# 
   710  0093                     	;# 
   711  0095                     	;# 
   712  0096                     	;# 
   713  0097                     	;# 
   714  0098                     	;# 
   715  0099                     	;# 
   716  009A                     	;# 
   717  009B                     	;# 
   718  009B                     	;# 
   719  009C                     	;# 
   720  009D                     	;# 
   721  009E                     	;# 
   722  009F                     	;# 
   723  010C                     	;# 
   724  010D                     	;# 
   725  010E                     	;# 
   726  010F                     	;# 
   727  0110                     	;# 
   728  0111                     	;# 
   729  0112                     	;# 
   730  0113                     	;# 
   731  0114                     	;# 
   732  0115                     	;# 
   733  0116                     	;# 
   734  0117                     	;# 
   735  0118                     	;# 
   736  0119                     	;# 
   737  011A                     	;# 
   738  011B                     	;# 
   739  011B                     	;# 
   740  011C                     	;# 
   741  018C                     	;# 
   742  018D                     	;# 
   743  018E                     	;# 
   744  018F                     	;# 
   745  0190                     	;# 
   746  0191                     	;# 
   747  0191                     	;# 
   748  0192                     	;# 
   749  0193                     	;# 
   750  0193                     	;# 
   751  0194                     	;# 
   752  0195                     	;# 
   753  0196                     	;# 
   754  0197                     	;# 
   755  0199                     	;# 
   756  0199                     	;# 
   757  0199                     	;# 
   758  019A                     	;# 
   759  019A                     	;# 
   760  019A                     	;# 
   761  019B                     	;# 
   762  019B                     	;# 
   763  019B                     	;# 
   764  019B                     	;# 
   765  019B                     	;# 
   766  019C                     	;# 
   767  019C                     	;# 
   768  019C                     	;# 
   769  019D                     	;# 
   770  019D                     	;# 
   771  019D                     	;# 
   772  019E                     	;# 
   773  019E                     	;# 
   774  019E                     	;# 
   775  019F                     	;# 
   776  019F                     	;# 
   777  019F                     	;# 
   778  019F                     	;# 
   779  019F                     	;# 
   780  020C                     	;# 
   781  020D                     	;# 
   782  020E                     	;# 
   783  020F                     	;# 
   784  0210                     	;# 
   785  0211                     	;# 
   786  0211                     	;# 
   787  0212                     	;# 
   788  0212                     	;# 
   789  0213                     	;# 
   790  0213                     	;# 
   791  0214                     	;# 
   792  0214                     	;# 
   793  0215                     	;# 
   794  0215                     	;# 
   795  0215                     	;# 
   796  0215                     	;# 
   797  0216                     	;# 
   798  0216                     	;# 
   799  0217                     	;# 
   800  0217                     	;# 
   801  028C                     	;# 
   802  028D                     	;# 
   803  028E                     	;# 
   804  028F                     	;# 
   805  0290                     	;# 
   806  0291                     	;# 
   807  0291                     	;# 
   808  0292                     	;# 
   809  0293                     	;# 
   810  0293                     	;# 
   811  0298                     	;# 
   812  0298                     	;# 
   813  0299                     	;# 
   814  029A                     	;# 
   815  029A                     	;# 
   816  029E                     	;# 
   817  030C                     	;# 
   818  030D                     	;# 
   819  030E                     	;# 
   820  030F                     	;# 
   821  0310                     	;# 
   822  038C                     	;# 
   823  038D                     	;# 
   824  038E                     	;# 
   825  038F                     	;# 
   826  0390                     	;# 
   827  0391                     	;# 
   828  0392                     	;# 
   829  0393                     	;# 
   830  0394                     	;# 
   831  0395                     	;# 
   832  0396                     	;# 
   833  0397                     	;# 
   834  0398                     	;# 
   835  0399                     	;# 
   836  039D                     	;# 
   837  039E                     	;# 
   838  039F                     	;# 
   839  0415                     	;# 
   840  0416                     	;# 
   841  0417                     	;# 
   842  041C                     	;# 
   843  041D                     	;# 
   844  041E                     	;# 
   845  0498                     	;# 
   846  0498                     	;# 
   847  0499                     	;# 
   848  049A                     	;# 
   849  049B                     	;# 
   850  049B                     	;# 
   851  049C                     	;# 
   852  049D                     	;# 
   853  049E                     	;# 
   854  049F                     	;# 
   855  0511                     	;# 
   856  0515                     	;# 
   857  0617                     	;# 
   858  0618                     	;# 
   859  0619                     	;# 
   860  0619                     	;# 
   861  061A                     	;# 
   862  061B                     	;# 
   863  061C                     	;# 
   864  061C                     	;# 
   865  0691                     	;# 
   866  0692                     	;# 
   867  0693                     	;# 
   868  0694                     	;# 
   869  0695                     	;# 
   870  0696                     	;# 
   871  0697                     	;# 
   872  0698                     	;# 
   873  0699                     	;# 
   874  069A                     	;# 
   875  069B                     	;# 
   876  069C                     	;# 
   877  069D                     	;# 
   878  069E                     	;# 
   879  069F                     	;# 
   880  0E0F                     	;# 
   881  0E10                     	;# 
   882  0E11                     	;# 
   883  0E12                     	;# 
   884  0E13                     	;# 
   885  0E14                     	;# 
   886  0E15                     	;# 
   887  0E17                     	;# 
   888  0E20                     	;# 
   889  0E21                     	;# 
   890  0E22                     	;# 
   891  0E24                     	;# 
   892  0E25                     	;# 
   893  0E28                     	;# 
   894  0E29                     	;# 
   895  0E2A                     	;# 
   896  0E2B                     	;# 
   897  0E90                     	;# 
   898  0E91                     	;# 
   899  0E92                     	;# 
   900  0E93                     	;# 
   901  0E94                     	;# 
   902  0E95                     	;# 
   903  0E96                     	;# 
   904  0E97                     	;# 
   905  0E98                     	;# 
   906  0E99                     	;# 
   907  0E9A                     	;# 
   908  0E9B                     	;# 
   909  0E9C                     	;# 
   910  0E9D                     	;# 
   911  0E9E                     	;# 
   912  0E9F                     	;# 
   913  0EA0                     	;# 
   914  0EA1                     	;# 
   915  0EA2                     	;# 
   916  0EA3                     	;# 
   917  0EA4                     	;# 
   918  0EA5                     	;# 
   919  0EA6                     	;# 
   920  0EA7                     	;# 
   921  0EA8                     	;# 
   922  0EA9                     	;# 
   923  0EAA                     	;# 
   924  0EAB                     	;# 
   925  0EAC                     	;# 
   926  0EAD                     	;# 
   927  0EAE                     	;# 
   928  0EAF                     	;# 
   929  0EB0                     	;# 
   930  0EB1                     	;# 
   931  0EB2                     	;# 
   932  0F0F                     	;# 
   933  0F10                     	;# 
   934  0F11                     	;# 
   935  0F12                     	;# 
   936  0F13                     	;# 
   937  0F14                     	;# 
   938  0F15                     	;# 
   939  0F16                     	;# 
   940  0F17                     	;# 
   941  0F18                     	;# 
   942  0F19                     	;# 
   943  0F1A                     	;# 
   944  0F1B                     	;# 
   945  0F1C                     	;# 
   946  0F1D                     	;# 
   947  0F1E                     	;# 
   948  0F1F                     	;# 
   949  0F20                     	;# 
   950  0F21                     	;# 
   951  0F22                     	;# 
   952  0F23                     	;# 
   953  0F24                     	;# 
   954  0F25                     	;# 
   955  0F26                     	;# 
   956  0F27                     	;# 
   957  0F28                     	;# 
   958  0F29                     	;# 
   959  0F2A                     	;# 
   960  0F2B                     	;# 
   961  0F2C                     	;# 
   962  0F2D                     	;# 
   963  0F2E                     	;# 
   964  0F2F                     	;# 
   965  0F30                     	;# 
   966  0F31                     	;# 
   967  0F32                     	;# 
   968  0F33                     	;# 
   969  0F34                     	;# 
   970  0F35                     	;# 
   971  0F36                     	;# 
   972  0F37                     	;# 
   973  0FE4                     	;# 
   974  0FE5                     	;# 
   975  0FE6                     	;# 
   976  0FE7                     	;# 
   977  0FE8                     	;# 
   978  0FE9                     	;# 
   979  0FEA                     	;# 
   980  0FEB                     	;# 
   981  0FED                     	;# 
   982  0FEE                     	;# 
   983  0FEF                     	;# 
   984  007B                     _RD3	set	123
   985  007A                     _RD2	set	122
   986  007F                     _RD7	set	127
   987  007E                     _RD6	set	126
   988  007D                     _RD5	set	125
   989  007C                     _RD4	set	124
   990  009C                     _ADRESH	set	156
   991  009B                     _ADRESL	set	155
   992  009D                     _ADCON0bits	set	157
   993  009E                     _ADCON1bits	set	158
   994  008C                     _TRISAbits	set	140
   995  008D                     _TRISBbits	set	141
   996  008F                     _TRISD	set	143
   997  008F                     _TRISDbits	set	143
   998  04CF                     _SPLLEN	set	1231
   999  04CE                     _IRCF3	set	1230
  1000  04CD                     _IRCF2	set	1229
  1001  04CC                     _IRCF1	set	1228
  1002  04CB                     _IRCF0	set	1227
  1003  04C9                     _SCS1	set	1225
  1004  04C8                     _SCS0	set	1224
  1005  010F                     _LATDbits	set	271
  1006  018C                     _ANSELAbits	set	396
  1007  018D                     _ANSELBbits	set	397
  1008  018F                     _ANSELD	set	399
  1009                           
  1010                           ; #config settings
  1011  0000                     
  1012                           	psect	cinit
  1013  0000'                    start_initialization:	
  1014  0000'                    __initialization:	
  1015  0000'                    end_of_initialization:	
  1016                           ;End of C runtime variable initialization code
  1017                           
  1018  0000'                    __end_of__initialization:	
  1019  0000' 0020               	movlb	0
  1020  0001' 3180' 2800'        	ljmp	_main	;jump to C main() function
  1021                           
  1022                           	psect	cstackCOMMON
  1023  0000'                    __pcstackCOMMON:	
  1024  0000'                    ??_itoa:	
  1025  0000'                    ?_internal_16:	
  1026                           ; 1 bytes @ 0x0
  1027                           
  1028  0000'                    ??_internal_16:	
  1029                           ; 1 bytes @ 0x0
  1030                           
  1031  0000'                    ?_Lcd_Port:	
  1032                           ; 1 bytes @ 0x0
  1033                           
  1034  0000'                    ??_Lcd_Port:	
  1035                           ; 1 bytes @ 0x0
  1036                           
  1037  0000'                    ?_Lcd_Cmd:	
  1038                           ; 1 bytes @ 0x0
  1039                           
  1040  0000'                    ?_Lcd_Clear:	
  1041                           ; 1 bytes @ 0x0
  1042                           
  1043  0000'                    ?_Lcd_Init:	
  1044                           ; 1 bytes @ 0x0
  1045                           
  1046  0000'                    ?_Lcd_Write_Char:	
  1047                           ; 1 bytes @ 0x0
  1048                           
  1049  0000'                    ?_initMain:	
  1050                           ; 1 bytes @ 0x0
  1051                           
  1052  0000'                    ?_main:	
  1053                           ; 1 bytes @ 0x0
  1054                           
  1055  0000'                    ?_itoa:	
  1056                           ; 1 bytes @ 0x0
  1057                           
  1058  0000'                    Lcd_Port@a:	
  1059                           ; 2 bytes @ 0x0
  1060                           
  1061                           
  1062                           ; 1 bytes @ 0x0
  1063  0000'                    	ds	1
  1064  0001'                    ??_Lcd_Cmd:	
  1065  0001'                    ??_Lcd_Write_Char:	
  1066                           ; 1 bytes @ 0x1
  1067                           
  1068                           
  1069                           ; 1 bytes @ 0x1
  1070  0001'                    	ds	1
  1071  0002'                    Lcd_Cmd@a:	
  1072  0002'                    Lcd_Write_Char@temp:	
  1073                           ; 1 bytes @ 0x2
  1074                           
  1075                           
  1076                           ; 1 bytes @ 0x2
  1077  0002'                    	ds	1
  1078  0003'                    ??_Lcd_Clear:	
  1079  0003'                    ?_Lcd_Set_Cursor:	
  1080                           ; 1 bytes @ 0x3
  1081                           
  1082  0003'                    ??_Lcd_Init:	
  1083                           ; 1 bytes @ 0x3
  1084                           
  1085  0003'                    Lcd_Set_Cursor@b:	
  1086                           ; 1 bytes @ 0x3
  1087                           
  1088  0003'                    Lcd_Write_Char@y:	
  1089                           ; 1 bytes @ 0x3
  1090                           
  1091                           
  1092                           ; 1 bytes @ 0x3
  1093  0003'                    	ds	1
  1094  0004'                    ??_Lcd_Set_Cursor:	
  1095  0004'                    ??_initMain:	
  1096                           ; 1 bytes @ 0x4
  1097                           
  1098  0004'                    Lcd_Write_Char@a:	
  1099                           ; 1 bytes @ 0x4
  1100                           
  1101                           
  1102                           ; 1 bytes @ 0x4
  1103  0004'                    	ds	1
  1104  0005'                    ?_Lcd_Write_String:	
  1105  0005'                    Lcd_Write_String@a:	
  1106                           ; 1 bytes @ 0x5
  1107                           
  1108                           
  1109                           ; 2 bytes @ 0x5
  1110  0005'                    	ds	1
  1111  0006'                    Lcd_Set_Cursor@a:	
  1112                           
  1113                           ; 1 bytes @ 0x6
  1114  0006'                    	ds	1
  1115  0007'                    ??_Lcd_Write_String:	
  1116  0007'                    Lcd_Set_Cursor@z:	
  1117                           ; 1 bytes @ 0x7
  1118                           
  1119                           
  1120                           ; 1 bytes @ 0x7
  1121  0007'                    	ds	1
  1122  0008'                    Lcd_Set_Cursor@y:	
  1123  0008'                    Lcd_Write_String@i:	
  1124                           ; 1 bytes @ 0x8
  1125                           
  1126                           
  1127                           ; 2 bytes @ 0x8
  1128  0008'                    	ds	1
  1129  0009'                    Lcd_Set_Cursor@temp:	
  1130                           
  1131                           ; 1 bytes @ 0x9
  1132  0009'                    	ds	1
  1133  000A'                    ?_Lcd_Write_Integer:	
  1134  000A'                    Lcd_Write_Integer@v:	
  1135                           ; 1 bytes @ 0xA
  1136                           
  1137                           
  1138                           ; 2 bytes @ 0xA
  1139  000A'                    	ds	2
  1140  000C'                    ??_Lcd_Write_Integer:	
  1141                           
  1142                           ; 1 bytes @ 0xC
  1143  000C'                    	ds	1
  1144                           
  1145                           	psect	cstackBANK0
  1146  0000'                    __pcstackBANK0:	
  1147  0000'                    Lcd_Write_Integer@buf:	
  1148                           
  1149                           ; 8 bytes @ 0x0
  1150  0000'                    	ds	8
  1151  0008'                    ??_main:	
  1152                           
  1153                           ; 1 bytes @ 0x8
  1154  0008'                    	ds	2
  1155  000A'                    main@result:	
  1156                           
  1157                           ; 2 bytes @ 0xA
  1158  000A'                    	ds	2
  1159                           
  1160                           	psect	maintext
  1161  0000'                    __pmaintext:	
  1162 ;;
  1163 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1164 ;;
  1165 ;; *************** function _main *****************
  1166 ;; Defined at:
  1167 ;;		line 115 in file "Main.c"
  1168 ;; Parameters:    Size  Location     Type
  1169 ;;		None
  1170 ;; Auto vars:     Size  Location     Type
  1171 ;;  result          2   10[BANK0 ] int 
  1172 ;; Return value:  Size  Location     Type
  1173 ;;                  1    wreg      void 
  1174 ;; Registers used:
  1175 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1176 ;; Tracked objects:
  1177 ;;		On entry : B1F/0
  1178 ;;		On exit  : 0/0
  1179 ;;		Unchanged: 0/0
  1180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1182 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1183 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1184 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1185 ;;Total ram usage:        4 bytes
  1186 ;; Hardware stack levels required when called:    4
  1187 ;; This function calls:
  1188 ;;		_Lcd_Clear
  1189 ;;		_Lcd_Set_Cursor
  1190 ;;		_Lcd_Write_Integer
  1191 ;;		_initMain
  1192 ;; This function is called by:
  1193 ;;		Startup code after reset
  1194 ;; This function uses a non-reentrant model
  1195 ;;
  1196                           
  1197                           
  1198                           ;psect for function _main
  1199  0000'                    _main:	
  1200                           
  1201                           ;Main.c: 116:     initMain();
  1202                           
  1203                           ;incstack = 0
  1204                           ; Regs used in _main: [allreg]
  1205  0000' 3180' 2000' 3180'  	fcall	_initMain
  1206  0003'                    l982:	
  1207                           
  1208                           ;Main.c: 124:       ADCON0bits.ADON = 1;
  1209  0003' 0021               	movlb	1	; select bank1
  1210  0004' 141D               	bsf	29,0	;volatile
  1211                           
  1212                           ;Main.c: 127:       _delay((unsigned long)((10)*(16000000/4000000.0)));
  1213  0005' 300D               	movlw	13
  1214  0006'                    u237:	
  1215  0006' 0B89               	decfsz	9,f
  1216  0007' 2800'              	goto	u237
  1217  0008' 0000               	nop
  1218                           
  1219                           ;Main.c: 128:       ADCON0bits.GO = 1;
  1220  0009' 0021               	movlb	1	; select bank1
  1221  000A' 149D               	bsf	29,1	;volatile
  1222  000B'                    l145:	
  1223                           ;Main.c: 129:       while (ADCON0bits.GO_nDONE);
  1224                           
  1225  000B' 189D               	btfsc	29,1	;volatile
  1226  000C' 2800'              	goto	l145
  1227                           
  1228                           ;Main.c: 132:       result = ((ADRESH<<8)+ADRESL);
  1229  000D' 081C               	movf	28,w	;volatile
  1230  000E' 0020               	movlb	0	; select bank0
  1231  000F' 008B'              	movwf	main@result+1
  1232  0010' 0021               	movlb	1	; select bank1
  1233  0011' 081B               	movf	27,w	;volatile
  1234  0012' 0020               	movlb	0	; select bank0
  1235  0013' 008A'              	movwf	main@result
  1236                           
  1237                           ;Main.c: 135:       Lcd_Set_Cursor(1,1);
  1238  0014' 0183'              	clrf	Lcd_Set_Cursor@b
  1239  0015' 0A83'              	incf	Lcd_Set_Cursor@b,f
  1240  0016' 3001               	movlw	1
  1241  0017' 3180' 2000' 3180'  	fcall	_Lcd_Set_Cursor
  1242                           
  1243                           ;Main.c: 136:       _delay((unsigned long)((5)*(16000000/4000.0)));
  1244  001A' 301A               	movlw	26
  1245  001B' 0020               	movlb	0	; select bank0
  1246  001C' 0088'              	movwf	??_main
  1247  001D' 30F8               	movlw	248
  1248  001E'                    u247:	
  1249  001E' 0B89               	decfsz	9,f
  1250  001F' 2800'              	goto	u247
  1251  0020' 0B88'              	decfsz	??_main,f
  1252  0021' 2800'              	goto	u247
  1253  0022' 0000               	nop
  1254                           
  1255                           ;Main.c: 137:       Lcd_Write_Integer(result);
  1256  0023' 0020               	movlb	0	; select bank0
  1257  0024' 080B'              	movf	main@result+1,w
  1258  0025' 008B'              	movwf	Lcd_Write_Integer@v+1
  1259  0026' 080A'              	movf	main@result,w
  1260  0027' 008A'              	movwf	Lcd_Write_Integer@v
  1261  0028' 3180' 2000' 3180'  	fcall	_Lcd_Write_Integer
  1262                           
  1263                           ;Main.c: 140:       _delay((unsigned long)((1000)*(16000000/4000.0)));
  1264  002B' 3015               	movlw	21
  1265  002C' 0020               	movlb	0	; select bank0
  1266  002D' 0089'              	movwf	??_main+1
  1267  002E' 304B               	movlw	75
  1268  002F' 0088'              	movwf	??_main
  1269  0030' 30BE               	movlw	190
  1270  0031'                    u257:	
  1271  0031' 0B89               	decfsz	9,f
  1272  0032' 2800'              	goto	u257
  1273  0033' 0B88'              	decfsz	??_main,f
  1274  0034' 2800'              	goto	u257
  1275  0035' 0B89'              	decfsz	??_main+1,f
  1276  0036' 2800'              	goto	u257
  1277  0037' 0000               	nop
  1278                           
  1279                           ;Main.c: 141:       Lcd_Clear();
  1280  0038' 3180' 2000' 3180'  	fcall	_Lcd_Clear
  1281  003B' 2800'              	goto	l982
  1282  003C'                    __end_of_main:	
  1283                           
  1284                           	psect	text1
  1285  0000'                    __ptext1:	
  1286 ;; *************** function _initMain *****************
  1287 ;; Defined at:
  1288 ;;		line 52 in file "Main.c"
  1289 ;; Parameters:    Size  Location     Type
  1290 ;;		None
  1291 ;; Auto vars:     Size  Location     Type
  1292 ;;		None
  1293 ;; Return value:  Size  Location     Type
  1294 ;;                  1    wreg      void 
  1295 ;; Registers used:
  1296 ;;		wreg, status,2, status,0, pclath, cstack
  1297 ;; Tracked objects:
  1298 ;;		On entry : 0/0
  1299 ;;		On exit  : 0/0
  1300 ;;		Unchanged: 0/0
  1301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1304 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1305 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1306 ;;Total ram usage:        2 bytes
  1307 ;; Hardware stack levels used:    1
  1308 ;; Hardware stack levels required when called:    3
  1309 ;; This function calls:
  1310 ;;		_Lcd_Clear
  1311 ;;		_Lcd_Init
  1312 ;;		_internal_16
  1313 ;; This function is called by:
  1314 ;;		_main
  1315 ;; This function uses a non-reentrant model
  1316 ;;
  1317                           
  1318                           
  1319                           ;psect for function _initMain
  1320  0000'                    _initMain:	
  1321                           
  1322                           ;Main.c: 54:     internal_16();
  1323                           
  1324                           ;incstack = 0
  1325                           ; Regs used in _initMain: [wreg+status,2+status,0+pclath+cstack]
  1326  0000' 3180' 2000' 3180'  	fcall	_internal_16
  1327                           
  1328                           ;Main.c: 57:     TRISDbits.TRISD1 = 0;
  1329  0003' 0021               	movlb	1	; select bank1
  1330  0004' 108F               	bcf	15,1	;volatile
  1331                           
  1332                           ;Main.c: 60:     LATDbits.LATD1 = 0;
  1333  0005' 0022               	movlb	2	; select bank2
  1334  0006' 108F               	bcf	15,1	;volatile
  1335                           
  1336                           ;Main.c: 63:     TRISD = 0;
  1337  0007' 0021               	movlb	1	; select bank1
  1338  0008' 018F               	clrf	15	;volatile
  1339                           
  1340                           ;Main.c: 64:     ANSELD = 0;
  1341  0009' 0023               	movlb	3	; select bank3
  1342  000A' 018F               	clrf	15	;volatile
  1343                           
  1344                           ;Main.c: 67:     TRISBbits.TRISB0 = 1;
  1345  000B' 0021               	movlb	1	; select bank1
  1346  000C' 140D               	bsf	13,0	;volatile
  1347                           
  1348                           ;Main.c: 70:     ANSELBbits.ANSB0 = 0;
  1349  000D' 0023               	movlb	3	; select bank3
  1350  000E' 100D               	bcf	13,0	;volatile
  1351                           
  1352                           ;Main.c: 73:     TRISAbits.TRISA0 = 1;
  1353  000F' 0021               	movlb	1	; select bank1
  1354  0010' 140C               	bsf	12,0	;volatile
  1355                           
  1356                           ;Main.c: 76:     ANSELAbits.ANSA0 = 1;
  1357  0011' 0023               	movlb	3	; select bank3
  1358  0012' 140C               	bsf	12,0	;volatile
  1359                           
  1360                           ;Main.c: 83:     ADCON1bits.ADCS = 0b010;
  1361  0013' 0021               	movlb	1	; select bank1
  1362  0014' 081E               	movf	30,w	;volatile
  1363  0015' 398F               	andlw	-113
  1364  0016' 3820               	iorlw	32
  1365  0017' 009E               	movwf	30	;volatile
  1366                           
  1367                           ;Main.c: 86:     ADCON1bits.ADFM = 1;
  1368  0018' 179E               	bsf	30,7	;volatile
  1369                           
  1370                           ;Main.c: 89:     ADCON1bits.ADNREF = 0;
  1371  0019' 111E               	bcf	30,2	;volatile
  1372                           
  1373                           ;Main.c: 92:     ADCON1bits.ADPREF = 0b00;
  1374  001A' 30FC               	movlw	-4
  1375  001B' 059E               	andwf	30,f	;volatile
  1376                           
  1377                           ;Main.c: 95:     ADCON0bits.CHS = 0b00000;
  1378  001C' 3083               	movlw	-125
  1379  001D' 059D               	andwf	29,f	;volatile
  1380                           
  1381                           ;Main.c: 98:     ADRESL = 0;
  1382  001E' 019B               	clrf	27	;volatile
  1383                           
  1384                           ;Main.c: 99:     ADRESH = 0;
  1385  001F' 019C               	clrf	28	;volatile
  1386                           
  1387                           ;Main.c: 102:     Lcd_Init();
  1388  0020' 3180' 2000' 3180'  	fcall	_Lcd_Init
  1389                           
  1390                           ;Main.c: 103:     _delay((unsigned long)((100)*(16000000/4000.0)));
  1391  0023' 3003               	movlw	3
  1392  0024' 0085'              	movwf	??_initMain+1
  1393  0025' 3008               	movlw	8
  1394  0026' 0084'              	movwf	??_initMain
  1395  0027' 3077               	movlw	119
  1396  0028'                    u267:	
  1397  0028' 0B89               	decfsz	9,f
  1398  0029' 2800'              	goto	u267
  1399  002A' 0B84'              	decfsz	??_initMain,f
  1400  002B' 2800'              	goto	u267
  1401  002C' 0B85'              	decfsz	??_initMain+1,f
  1402  002D' 2800'              	goto	u267
  1403  002E' 0000               	nop
  1404                           
  1405                           ;Main.c: 104:     Lcd_Clear();
  1406  002F' 3180' 2000'        	fcall	_Lcd_Clear
  1407  0031' 0008               	return
  1408  0032'                    __end_of_initMain:	
  1409                           
  1410                           	psect	text2
  1411  0000'                    __ptext2:	
  1412 ;; *************** function _internal_16 *****************
  1413 ;; Defined at:
  1414 ;;		line 56 in file "16F1717_Internal.c"
  1415 ;; Parameters:    Size  Location     Type
  1416 ;;		None
  1417 ;; Auto vars:     Size  Location     Type
  1418 ;;		None
  1419 ;; Return value:  Size  Location     Type
  1420 ;;                  1    wreg      void 
  1421 ;; Registers used:
  1422 ;;		None
  1423 ;; Tracked objects:
  1424 ;;		On entry : 0/0
  1425 ;;		On exit  : 0/0
  1426 ;;		Unchanged: 0/0
  1427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1432 ;;Total ram usage:        0 bytes
  1433 ;; Hardware stack levels used:    1
  1434 ;; This function calls:
  1435 ;;		Nothing
  1436 ;; This function is called by:
  1437 ;;		_initMain
  1438 ;; This function uses a non-reentrant model
  1439 ;;
  1440                           
  1441                           
  1442                           ;psect for function _internal_16
  1443  0000'                    _internal_16:	
  1444                           
  1445                           ;incstack = 0
  1446                           ; Regs used in _internal_16: []
  1447  0000' 0021               	movlb	1	; select bank1
  1448  0001' 1019               	bcf	25,0	;volatile
  1449  0002' 1099               	bcf	25,1	;volatile
  1450  0003' 1599               	bsf	25,3	;volatile
  1451  0004' 1619               	bsf	25,4	;volatile
  1452  0005' 1699               	bsf	25,5	;volatile
  1453  0006' 1719               	bsf	25,6	;volatile
  1454  0007' 1399               	bcf	25,7	;volatile
  1455  0008' 0008               	return
  1456  0009'                    __end_of_internal_16:	
  1457                           
  1458                           	psect	text3
  1459  0000'                    __ptext3:	
  1460 ;; *************** function _Lcd_Init *****************
  1461 ;; Defined at:
  1462 ;;		line 119 in file "LCD.c"
  1463 ;; Parameters:    Size  Location     Type
  1464 ;;		None
  1465 ;; Auto vars:     Size  Location     Type
  1466 ;;		None
  1467 ;; Return value:  Size  Location     Type
  1468 ;;                  1    wreg      void 
  1469 ;; Registers used:
  1470 ;;		wreg, status,2, status,0, pclath, cstack
  1471 ;; Tracked objects:
  1472 ;;		On entry : 0/0
  1473 ;;		On exit  : 0/0
  1474 ;;		Unchanged: 0/0
  1475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1478 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1479 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1480 ;;Total ram usage:        1 bytes
  1481 ;; Hardware stack levels used:    1
  1482 ;; Hardware stack levels required when called:    2
  1483 ;; This function calls:
  1484 ;;		_Lcd_Cmd
  1485 ;;		_Lcd_Port
  1486 ;; This function is called by:
  1487 ;;		_initMain
  1488 ;; This function uses a non-reentrant model
  1489 ;;
  1490                           
  1491                           
  1492                           ;psect for function _Lcd_Init
  1493  0000'                    _Lcd_Init:	
  1494                           
  1495                           ;LCD.c: 121:   Lcd_Port(0x00);
  1496                           
  1497                           ;incstack = 0
  1498                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1499  0000' 3000               	movlw	0
  1500  0001' 3180' 2000' 3180'  	fcall	_Lcd_Port
  1501                           
  1502                           ;LCD.c: 122:    _delay((unsigned long)((20)*(16000000/4000.0)));
  1503  0004' 3068               	movlw	104
  1504  0005' 0083'              	movwf	??_Lcd_Init
  1505  0006' 30E4               	movlw	228
  1506  0007'                    u277:	
  1507  0007' 0B89               	decfsz	9,f
  1508  0008' 2800'              	goto	u277
  1509  0009' 0B83'              	decfsz	??_Lcd_Init,f
  1510  000A' 2800'              	goto	u277
  1511  000B' 3200               	nop2
  1512                           
  1513                           ;LCD.c: 123:   Lcd_Cmd(0x03);
  1514  000C' 3003               	movlw	3
  1515  000D' 3180' 2000' 3180'  	fcall	_Lcd_Cmd
  1516                           
  1517                           ;LCD.c: 124:    _delay((unsigned long)((5)*(16000000/4000.0)));
  1518  0010' 301A               	movlw	26
  1519  0011' 0083'              	movwf	??_Lcd_Init
  1520  0012' 30F8               	movlw	248
  1521  0013'                    u287:	
  1522  0013' 0B89               	decfsz	9,f
  1523  0014' 2800'              	goto	u287
  1524  0015' 0B83'              	decfsz	??_Lcd_Init,f
  1525  0016' 2800'              	goto	u287
  1526  0017' 3200               	nop2
  1527                           
  1528                           ;LCD.c: 125:   Lcd_Cmd(0x03);
  1529  0018' 3003               	movlw	3
  1530  0019' 3180' 2000' 3180'  	fcall	_Lcd_Cmd
  1531                           
  1532                           ;LCD.c: 126:    _delay((unsigned long)((11)*(16000000/4000.0)));
  1533  001C' 303A               	movlw	58
  1534  001D' 0083'              	movwf	??_Lcd_Init
  1535  001E' 3023               	movlw	35
  1536  001F'                    u297:	
  1537  001F' 0B89               	decfsz	9,f
  1538  0020' 2800'              	goto	u297
  1539  0021' 0B83'              	decfsz	??_Lcd_Init,f
  1540  0022' 2800'              	goto	u297
  1541  0023' 0000               	nop
  1542                           
  1543                           ;LCD.c: 127:   Lcd_Cmd(0x03);
  1544  0024' 3003               	movlw	3
  1545  0025' 3180' 2000' 3180'  	fcall	_Lcd_Cmd
  1546                           
  1547                           ;LCD.c: 129:   Lcd_Cmd(0x02);
  1548  0028' 3002               	movlw	2
  1549  0029' 3180' 2000' 3180'  	fcall	_Lcd_Cmd
  1550                           
  1551                           ;LCD.c: 130:   Lcd_Cmd(0x02);
  1552  002C' 3002               	movlw	2
  1553  002D' 3180' 2000' 3180'  	fcall	_Lcd_Cmd
  1554                           
  1555                           ;LCD.c: 131:   Lcd_Cmd(0x08);
  1556  0030' 3008               	movlw	8
  1557  0031' 3180' 2000' 3180'  	fcall	_Lcd_Cmd
  1558                           
  1559                           ;LCD.c: 132:   Lcd_Cmd(0x00);
  1560  0034' 3000               	movlw	0
  1561  0035' 3180' 2000' 3180'  	fcall	_Lcd_Cmd
  1562                           
  1563                           ;LCD.c: 133:   Lcd_Cmd(0x0C);
  1564  0038' 300C               	movlw	12
  1565  0039' 3180' 2000' 3180'  	fcall	_Lcd_Cmd
  1566                           
  1567                           ;LCD.c: 134:   Lcd_Cmd(0x00);
  1568  003C' 3000               	movlw	0
  1569  003D' 3180' 2000' 3180'  	fcall	_Lcd_Cmd
  1570                           
  1571                           ;LCD.c: 135:   Lcd_Cmd(0x06);
  1572  0040' 3006               	movlw	6
  1573  0041' 3180' 2000'        	fcall	_Lcd_Cmd
  1574  0043' 0008               	return
  1575  0044'                    __end_of_Lcd_Init:	
  1576                           
  1577                           	psect	text4
  1578  0000'                    __ptext4:	
  1579 ;; *************** function _Lcd_Clear *****************
  1580 ;; Defined at:
  1581 ;;		line 76 in file "LCD.c"
  1582 ;; Parameters:    Size  Location     Type
  1583 ;;		None
  1584 ;; Auto vars:     Size  Location     Type
  1585 ;;		None
  1586 ;; Return value:  Size  Location     Type
  1587 ;;                  1    wreg      void 
  1588 ;; Registers used:
  1589 ;;		wreg, status,2, status,0, pclath, cstack
  1590 ;; Tracked objects:
  1591 ;;		On entry : 0/0
  1592 ;;		On exit  : 0/0
  1593 ;;		Unchanged: 0/0
  1594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1599 ;;Total ram usage:        0 bytes
  1600 ;; Hardware stack levels used:    1
  1601 ;; Hardware stack levels required when called:    2
  1602 ;; This function calls:
  1603 ;;		_Lcd_Cmd
  1604 ;; This function is called by:
  1605 ;;		_initMain
  1606 ;;		_main
  1607 ;; This function uses a non-reentrant model
  1608 ;;
  1609                           
  1610                           
  1611                           ;psect for function _Lcd_Clear
  1612  0000'                    _Lcd_Clear:	
  1613                           
  1614                           ;LCD.c: 78:    Lcd_Cmd(0);
  1615                           
  1616                           ;incstack = 0
  1617                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1618  0000' 3000               	movlw	0
  1619  0001' 3180' 2000' 3180'  	fcall	_Lcd_Cmd
  1620                           
  1621                           ;LCD.c: 79:    Lcd_Cmd(1);
  1622  0004' 3001               	movlw	1
  1623  0005' 3180' 2000'        	fcall	_Lcd_Cmd
  1624  0007' 0008               	return
  1625  0008'                    __end_of_Lcd_Clear:	
  1626                           
  1627                           	psect	text5
  1628  0000'                    __ptext5:	
  1629 ;; *************** function _Lcd_Write_Integer *****************
  1630 ;; Defined at:
  1631 ;;		line 213 in file "LCD.c"
  1632 ;; Parameters:    Size  Location     Type
  1633 ;;  v               2   10[COMMON] int 
  1634 ;; Auto vars:     Size  Location     Type
  1635 ;;  buf             8    0[BANK0 ] unsigned char [8]
  1636 ;; Return value:  Size  Location     Type
  1637 ;;                  1    wreg      void 
  1638 ;; Registers used:
  1639 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1640 ;; Tracked objects:
  1641 ;;		On entry : 0/0
  1642 ;;		On exit  : 0/0
  1643 ;;		Unchanged: 0/0
  1644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1645 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1646 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1647 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1648 ;;      Totals:         3       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1649 ;;Total ram usage:       11 bytes
  1650 ;; Hardware stack levels used:    1
  1651 ;; Hardware stack levels required when called:    3
  1652 ;; This function calls:
  1653 ;;		_Lcd_Write_String
  1654 ;;		_itoa
  1655 ;; This function is called by:
  1656 ;;		_main
  1657 ;; This function uses a non-reentrant model
  1658 ;;
  1659                           
  1660                           
  1661                           ;psect for function _Lcd_Write_Integer
  1662  0000'                    _Lcd_Write_Integer:	
  1663                           
  1664                           ;LCD.c: 213: void Lcd_Write_Integer(int v);LCD.c: 214: {;LCD.c: 215:     unsigned char b
      +                          uf[8];;LCD.c: 217:     Lcd_Write_String(itoa(buf, v, 10));
  1665                           
  1666                           ;incstack = 0
  1667                           ; Regs used in _Lcd_Write_Integer: [allreg]
  1668  0000' 3000'              	movlw	(low (Lcd_Write_Integer@buf| 0))& (0+255)
  1669  0001' 008C'              	movwf	??_Lcd_Write_Integer
  1670  0002' 080C'              	movf	??_Lcd_Write_Integer,w
  1671  0003' 0080'              	movwf	?_itoa
  1672  0004' 080B'              	movf	Lcd_Write_Integer@v+1,w
  1673  0005' 0082'              	movwf	?_itoa+2
  1674  0006' 080A'              	movf	Lcd_Write_Integer@v,w
  1675  0007' 0081'              	movwf	?_itoa+1
  1676  0008' 300A               	movlw	10
  1677  0009' 0083'              	movwf	?_itoa+3
  1678  000A' 3000               	movlw	0
  1679  000B' 0084'              	movwf	?_itoa+4
  1680  000C' 3180' 2000' 3180'  	fcall	_itoa
  1681  000F' 0801'              	movf	?_itoa+1,w
  1682  0010' 0086'              	movwf	Lcd_Write_String@a+1
  1683  0011' 0800'              	movf	?_itoa,w
  1684  0012' 0085'              	movwf	Lcd_Write_String@a
  1685  0013' 3180' 2000'        	fcall	_Lcd_Write_String
  1686  0015' 0008               	return
  1687  0016'                    __end_of_Lcd_Write_Integer:	
  1688                           
  1689                           	psect	text6
  1690  0000'                    __ptext6:	
  1691 ;; *************** function _Lcd_Write_String *****************
  1692 ;; Defined at:
  1693 ;;		line 170 in file "LCD.c"
  1694 ;; Parameters:    Size  Location     Type
  1695 ;;  a               2    5[COMMON] PTR const unsigned char 
  1696 ;;		 -> RAM(4096), ROM(8192), 
  1697 ;; Auto vars:     Size  Location     Type
  1698 ;;  i               2    8[COMMON] int 
  1699 ;; Return value:  Size  Location     Type
  1700 ;;                  1    wreg      void 
  1701 ;; Registers used:
  1702 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1703 ;; Tracked objects:
  1704 ;;		On entry : 0/0
  1705 ;;		On exit  : 0/0
  1706 ;;		Unchanged: 0/0
  1707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1708 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1709 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1710 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1711 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1712 ;;Total ram usage:        5 bytes
  1713 ;; Hardware stack levels used:    1
  1714 ;; Hardware stack levels required when called:    2
  1715 ;; This function calls:
  1716 ;;		_Lcd_Write_Char
  1717 ;; This function is called by:
  1718 ;;		_Lcd_Write_Integer
  1719 ;;		_Lcd_Write_Float
  1720 ;; This function uses a non-reentrant model
  1721 ;;
  1722                           
  1723                           
  1724                           ;psect for function _Lcd_Write_String
  1725  0000'                    _Lcd_Write_String:	
  1726                           
  1727                           ;LCD.c: 170: void Lcd_Write_String(const char *a);LCD.c: 171: {;LCD.c: 172:    int i;;LC
      +                          D.c: 173:    for(i=0;a[i]!='\0';i++)
  1728                           
  1729                           ;incstack = 0
  1730                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1731  0000' 0188'              	clrf	Lcd_Write_String@i
  1732  0001' 0189'              	clrf	Lcd_Write_String@i+1
  1733  0002'                    l910:	
  1734  0002' 0805'              	movf	Lcd_Write_String@a,w
  1735  0003' 0708'              	addwf	Lcd_Write_String@i,w
  1736  0004' 0084               	movwf	4
  1737  0005' 0806'              	movf	Lcd_Write_String@a+1,w
  1738  0006' 3D09'              	addwfc	Lcd_Write_String@i+1,w
  1739  0007' 0085               	movwf	5
  1740  0008' 0012               	moviw fsr0++
  1741  0009' 1903               	btfsc	3,2
  1742  000A' 0008               	return
  1743                           
  1744                           ;LCD.c: 174:       Lcd_Write_Char(a[i]);
  1745  000B' 0805'              	movf	Lcd_Write_String@a,w
  1746  000C' 0708'              	addwf	Lcd_Write_String@i,w
  1747  000D' 0084               	movwf	4
  1748  000E' 0806'              	movf	Lcd_Write_String@a+1,w
  1749  000F' 3D09'              	addwfc	Lcd_Write_String@i+1,w
  1750  0010' 0085               	movwf	5
  1751  0011' 0800               	movf	0,w	;code access
  1752  0012' 3180' 2000' 3180'  	fcall	_Lcd_Write_Char
  1753  0015' 3001               	movlw	1
  1754  0016' 0788'              	addwf	Lcd_Write_String@i,f
  1755  0017' 3000               	movlw	0
  1756  0018' 3D89'              	addwfc	Lcd_Write_String@i+1,f
  1757  0019' 2800'              	goto	l910
  1758  001A'                    __end_of_Lcd_Write_String:	
  1759                           
  1760                           	psect	text7
  1761  0000'                    __ptext7:	
  1762 ;; *************** function _Lcd_Write_Char *****************
  1763 ;; Defined at:
  1764 ;;		line 146 in file "LCD.c"
  1765 ;; Parameters:    Size  Location     Type
  1766 ;;  a               1    wreg     unsigned char 
  1767 ;; Auto vars:     Size  Location     Type
  1768 ;;  a               1    4[COMMON] unsigned char 
  1769 ;;  y               1    3[COMMON] unsigned char 
  1770 ;;  temp            1    2[COMMON] unsigned char 
  1771 ;; Return value:  Size  Location     Type
  1772 ;;                  1    wreg      void 
  1773 ;; Registers used:
  1774 ;;		wreg, status,2, status,0, pclath, cstack
  1775 ;; Tracked objects:
  1776 ;;		On entry : 0/0
  1777 ;;		On exit  : 0/0
  1778 ;;		Unchanged: 0/0
  1779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1781 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1782 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1783 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1784 ;;Total ram usage:        4 bytes
  1785 ;; Hardware stack levels used:    1
  1786 ;; Hardware stack levels required when called:    1
  1787 ;; This function calls:
  1788 ;;		_Lcd_Port
  1789 ;; This function is called by:
  1790 ;;		_Lcd_Write_String
  1791 ;; This function uses a non-reentrant model
  1792 ;;
  1793                           
  1794                           
  1795                           ;psect for function _Lcd_Write_Char
  1796  0000'                    _Lcd_Write_Char:	
  1797                           
  1798                           ;incstack = 0
  1799                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1800                           ;Lcd_Write_Char@a stored from wreg
  1801  0000' 0084'              	movwf	Lcd_Write_Char@a
  1802                           
  1803                           ;LCD.c: 146: void Lcd_Write_Char(char a);LCD.c: 147: {;LCD.c: 148:    char temp,y;;LCD.c
      +                          : 149:    temp = a&0x0F;
  1804  0001' 0804'              	movf	Lcd_Write_Char@a,w
  1805  0002' 390F               	andlw	15
  1806  0003' 0081'              	movwf	??_Lcd_Write_Char
  1807  0004' 0801'              	movf	??_Lcd_Write_Char,w
  1808  0005' 0082'              	movwf	Lcd_Write_Char@temp
  1809                           
  1810                           ;LCD.c: 150:    y = a&0xF0;
  1811  0006' 0804'              	movf	Lcd_Write_Char@a,w
  1812  0007' 39F0               	andlw	240
  1813  0008' 0081'              	movwf	??_Lcd_Write_Char
  1814  0009' 0801'              	movf	??_Lcd_Write_Char,w
  1815  000A' 0083'              	movwf	Lcd_Write_Char@y
  1816                           
  1817                           ;LCD.c: 151:    RD2 = 1;
  1818  000B' 0020               	movlb	0	; select bank0
  1819  000C' 150F               	bsf	15,2	;volatile
  1820                           
  1821                           ;LCD.c: 152:    Lcd_Port(y>>4);
  1822  000D' 0803'              	movf	Lcd_Write_Char@y,w
  1823  000E' 0081'              	movwf	??_Lcd_Write_Char
  1824  000F' 3004               	movlw	4
  1825  0010'                    u165:	
  1826  0010' 3681'              	lsrf	??_Lcd_Write_Char,f
  1827  0011' 0B89               	decfsz	9,f
  1828  0012' 2800'              	goto	u165
  1829  0013' 0801'              	movf	??_Lcd_Write_Char,w
  1830  0014' 3180' 2000' 3180'  	fcall	_Lcd_Port
  1831                           
  1832                           ;LCD.c: 153:    RD3 = 1;
  1833  0017' 0020               	movlb	0	; select bank0
  1834  0018' 158F               	bsf	15,3	;volatile
  1835                           
  1836                           ;LCD.c: 154:    _delay((unsigned long)((40)*(16000000/4000000.0)));
  1837  0019' 3035               	movlw	53
  1838  001A'                    u307:	
  1839  001A' 0B89               	decfsz	9,f
  1840  001B' 2800'              	goto	u307
  1841  001C' 0000               	nop
  1842                           
  1843                           ;LCD.c: 155:    RD3 = 0;
  1844  001D' 0020               	movlb	0	; select bank0
  1845  001E' 118F               	bcf	15,3	;volatile
  1846                           
  1847                           ;LCD.c: 156:    Lcd_Port(temp);
  1848  001F' 0802'              	movf	Lcd_Write_Char@temp,w
  1849  0020' 3180' 2000' 3180'  	fcall	_Lcd_Port
  1850                           
  1851                           ;LCD.c: 157:    RD3 = 1;
  1852  0023' 0020               	movlb	0	; select bank0
  1853  0024' 158F               	bsf	15,3	;volatile
  1854                           
  1855                           ;LCD.c: 158:    _delay((unsigned long)((40)*(16000000/4000000.0)));
  1856  0025' 3035               	movlw	53
  1857  0026'                    u317:	
  1858  0026' 0B89               	decfsz	9,f
  1859  0027' 2800'              	goto	u317
  1860  0028' 0000               	nop
  1861                           
  1862                           ;LCD.c: 159:    RD3 = 0;
  1863  0029' 0020               	movlb	0	; select bank0
  1864  002A' 118F               	bcf	15,3	;volatile
  1865  002B' 0008               	return
  1866  002C'                    __end_of_Lcd_Write_Char:	
  1867                           
  1868                           	psect	text8
  1869  0000'                    __ptext8:	
  1870 ;; *************** function _Lcd_Set_Cursor *****************
  1871 ;; Defined at:
  1872 ;;		line 90 in file "LCD.c"
  1873 ;; Parameters:    Size  Location     Type
  1874 ;;  a               1    wreg     unsigned char 
  1875 ;;  b               1    3[COMMON] unsigned char 
  1876 ;; Auto vars:     Size  Location     Type
  1877 ;;  a               1    6[COMMON] unsigned char 
  1878 ;;  temp            1    9[COMMON] unsigned char 
  1879 ;;  y               1    8[COMMON] unsigned char 
  1880 ;;  z               1    7[COMMON] unsigned char 
  1881 ;; Return value:  Size  Location     Type
  1882 ;;                  1    wreg      void 
  1883 ;; Registers used:
  1884 ;;		wreg, status,2, status,0, pclath, cstack
  1885 ;; Tracked objects:
  1886 ;;		On entry : 0/0
  1887 ;;		On exit  : 0/0
  1888 ;;		Unchanged: 0/0
  1889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1890 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1891 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1892 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1893 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1894 ;;Total ram usage:        7 bytes
  1895 ;; Hardware stack levels used:    1
  1896 ;; Hardware stack levels required when called:    2
  1897 ;; This function calls:
  1898 ;;		_Lcd_Cmd
  1899 ;; This function is called by:
  1900 ;;		_main
  1901 ;; This function uses a non-reentrant model
  1902 ;;
  1903                           
  1904                           
  1905                           ;psect for function _Lcd_Set_Cursor
  1906  0000'                    _Lcd_Set_Cursor:	
  1907                           
  1908                           ;incstack = 0
  1909                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1910                           ;Lcd_Set_Cursor@a stored from wreg
  1911  0000' 0086'              	movwf	Lcd_Set_Cursor@a
  1912                           
  1913                           ;LCD.c: 90: void Lcd_Set_Cursor(char a, char b);LCD.c: 91: {;LCD.c: 92:    char temp,z,y
      +                          ;;LCD.c: 93:    if(a == 1)
  1914  0001' 0306'              	decf	Lcd_Set_Cursor@a,w
  1915  0002' 1D03               	btfss	3,2
  1916  0003' 2800'              	goto	l922
  1917                           
  1918                           ;LCD.c: 94:    {;LCD.c: 95:      temp = 0x80 + b - 1;
  1919  0004' 0803'              	movf	Lcd_Set_Cursor@b,w
  1920  0005' 3E7F               	addlw	127
  1921  0006' 0084'              	movwf	??_Lcd_Set_Cursor
  1922  0007' 0804'              	movf	??_Lcd_Set_Cursor,w
  1923  0008' 0089'              	movwf	Lcd_Set_Cursor@temp
  1924                           
  1925                           ;LCD.c: 96:       z = temp>>4;
  1926  0009' 0809'              	movf	Lcd_Set_Cursor@temp,w
  1927  000A' 0084'              	movwf	??_Lcd_Set_Cursor
  1928  000B' 3004               	movlw	4
  1929  000C'                    u195:	
  1930  000C' 3684'              	lsrf	??_Lcd_Set_Cursor,f
  1931  000D' 0B89               	decfsz	9,f
  1932  000E' 2800'              	goto	u195
  1933  000F' 0804'              	movf	??_Lcd_Set_Cursor,w
  1934  0010' 0085'              	movwf	??_Lcd_Set_Cursor+1
  1935  0011' 0805'              	movf	??_Lcd_Set_Cursor+1,w
  1936  0012' 0087'              	movwf	Lcd_Set_Cursor@z
  1937                           
  1938                           ;LCD.c: 97:       y = temp & 0x0F;
  1939  0013' 0809'              	movf	Lcd_Set_Cursor@temp,w
  1940  0014' 390F               	andlw	15
  1941  0015' 0084'              	movwf	??_Lcd_Set_Cursor
  1942  0016' 0804'              	movf	??_Lcd_Set_Cursor,w
  1943  0017' 0088'              	movwf	Lcd_Set_Cursor@y
  1944                           
  1945                           ;LCD.c: 98:       Lcd_Cmd(z);
  1946  0018' 0807'              	movf	Lcd_Set_Cursor@z,w
  1947  0019' 3180' 2000' 3180'  	fcall	_Lcd_Cmd
  1948                           
  1949                           ;LCD.c: 99:       Lcd_Cmd(y);
  1950  001C' 0808'              	movf	Lcd_Set_Cursor@y,w
  1951  001D' 3180' 2000'        	fcall	_Lcd_Cmd
  1952                           
  1953                           ;LCD.c: 100:    }
  1954  001F' 0008               	return
  1955  0020'                    l922:	
  1956  0020' 3002               	movlw	2
  1957  0021' 0606'              	xorwf	Lcd_Set_Cursor@a,w
  1958  0022' 1D03               	btfss	3,2
  1959  0023' 0008               	return
  1960                           
  1961                           ;LCD.c: 102:    {;LCD.c: 103:       temp = 0xC0 + b - 1;
  1962  0024' 0803'              	movf	Lcd_Set_Cursor@b,w
  1963  0025' 3EBF               	addlw	191
  1964  0026' 0084'              	movwf	??_Lcd_Set_Cursor
  1965  0027' 0804'              	movf	??_Lcd_Set_Cursor,w
  1966  0028' 0089'              	movwf	Lcd_Set_Cursor@temp
  1967                           
  1968                           ;LCD.c: 104:       z = temp>>4;
  1969  0029' 0809'              	movf	Lcd_Set_Cursor@temp,w
  1970  002A' 0084'              	movwf	??_Lcd_Set_Cursor
  1971  002B' 3004               	movlw	4
  1972  002C'                    u215:	
  1973  002C' 3684'              	lsrf	??_Lcd_Set_Cursor,f
  1974  002D' 0B89               	decfsz	9,f
  1975  002E' 2800'              	goto	u215
  1976  002F' 0804'              	movf	??_Lcd_Set_Cursor,w
  1977  0030' 0085'              	movwf	??_Lcd_Set_Cursor+1
  1978  0031' 0805'              	movf	??_Lcd_Set_Cursor+1,w
  1979  0032' 0087'              	movwf	Lcd_Set_Cursor@z
  1980                           
  1981                           ;LCD.c: 105:       y = temp & 0x0F;
  1982  0033' 0809'              	movf	Lcd_Set_Cursor@temp,w
  1983  0034' 390F               	andlw	15
  1984  0035' 0084'              	movwf	??_Lcd_Set_Cursor
  1985  0036' 0804'              	movf	??_Lcd_Set_Cursor,w
  1986  0037' 0088'              	movwf	Lcd_Set_Cursor@y
  1987                           
  1988                           ;LCD.c: 106:       Lcd_Cmd(z);
  1989  0038' 0807'              	movf	Lcd_Set_Cursor@z,w
  1990  0039' 3180' 2000' 3180'  	fcall	_Lcd_Cmd
  1991                           
  1992                           ;LCD.c: 107:       Lcd_Cmd(y);
  1993  003C' 0808'              	movf	Lcd_Set_Cursor@y,w
  1994  003D' 3180' 2000'        	fcall	_Lcd_Cmd
  1995  003F' 0008               	return
  1996  0040'                    __end_of_Lcd_Set_Cursor:	
  1997                           
  1998                           	psect	text9
  1999  0000'                    __ptext9:	
  2000 ;; *************** function _Lcd_Cmd *****************
  2001 ;; Defined at:
  2002 ;;		line 59 in file "LCD.c"
  2003 ;; Parameters:    Size  Location     Type
  2004 ;;  a               1    wreg     unsigned char 
  2005 ;; Auto vars:     Size  Location     Type
  2006 ;;  a               1    2[COMMON] unsigned char 
  2007 ;; Return value:  Size  Location     Type
  2008 ;;                  1    wreg      void 
  2009 ;; Registers used:
  2010 ;;		wreg, status,2, status,0, pclath, cstack
  2011 ;; Tracked objects:
  2012 ;;		On entry : 0/0
  2013 ;;		On exit  : 0/0
  2014 ;;		Unchanged: 0/0
  2015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2017 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2018 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2019 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2020 ;;Total ram usage:        2 bytes
  2021 ;; Hardware stack levels used:    1
  2022 ;; Hardware stack levels required when called:    1
  2023 ;; This function calls:
  2024 ;;		_Lcd_Port
  2025 ;; This function is called by:
  2026 ;;		_Lcd_Clear
  2027 ;;		_Lcd_Set_Cursor
  2028 ;;		_Lcd_Init
  2029 ;;		_Lcd_Shift_Right
  2030 ;;		_Lcd_Shift_Left
  2031 ;; This function uses a non-reentrant model
  2032 ;;
  2033                           
  2034                           
  2035                           ;psect for function _Lcd_Cmd
  2036  0000'                    _Lcd_Cmd:	
  2037                           
  2038                           ;incstack = 0
  2039                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2040                           ;Lcd_Cmd@a stored from wreg
  2041  0000' 0082'              	movwf	Lcd_Cmd@a
  2042                           
  2043                           ;LCD.c: 59: void Lcd_Cmd(char a);LCD.c: 60: {;LCD.c: 61:    RD2 = 0;
  2044  0001' 0020               	movlb	0	; select bank0
  2045  0002' 110F               	bcf	15,2	;volatile
  2046                           
  2047                           ;LCD.c: 62:    Lcd_Port(a);
  2048  0003' 0802'              	movf	Lcd_Cmd@a,w
  2049  0004' 3180' 2000' 3180'  	fcall	_Lcd_Port
  2050                           
  2051                           ;LCD.c: 63:    RD3 = 1;
  2052  0007' 0020               	movlb	0	; select bank0
  2053  0008' 158F               	bsf	15,3	;volatile
  2054                           
  2055                           ;LCD.c: 64:         _delay((unsigned long)((4)*(16000000/4000.0)));
  2056  0009' 3015               	movlw	21
  2057  000A' 0081'              	movwf	??_Lcd_Cmd
  2058  000B' 30C6               	movlw	198
  2059  000C'                    u327:	
  2060  000C' 0B89               	decfsz	9,f
  2061  000D' 2800'              	goto	u327
  2062  000E' 0B81'              	decfsz	??_Lcd_Cmd,f
  2063  000F' 2800'              	goto	u327
  2064  0010' 3200               	nop2
  2065                           
  2066                           ;LCD.c: 65:         RD3 = 0;
  2067  0011' 0020               	movlb	0	; select bank0
  2068  0012' 118F               	bcf	15,3	;volatile
  2069  0013' 0008               	return
  2070  0014'                    __end_of_Lcd_Cmd:	
  2071                           
  2072                           	psect	text10
  2073  0000'                    __ptext10:	
  2074 ;; *************** function _Lcd_Port *****************
  2075 ;; Defined at:
  2076 ;;		line 28 in file "LCD.c"
  2077 ;; Parameters:    Size  Location     Type
  2078 ;;  a               1    wreg     unsigned char 
  2079 ;; Auto vars:     Size  Location     Type
  2080 ;;  a               1    0[COMMON] unsigned char 
  2081 ;; Return value:  Size  Location     Type
  2082 ;;                  1    wreg      void 
  2083 ;; Registers used:
  2084 ;;		wreg
  2085 ;; Tracked objects:
  2086 ;;		On entry : 0/0
  2087 ;;		On exit  : 0/0
  2088 ;;		Unchanged: 0/0
  2089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2091 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2093 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2094 ;;Total ram usage:        1 bytes
  2095 ;; Hardware stack levels used:    1
  2096 ;; This function calls:
  2097 ;;		Nothing
  2098 ;; This function is called by:
  2099 ;;		_Lcd_Cmd
  2100 ;;		_Lcd_Init
  2101 ;;		_Lcd_Write_Char
  2102 ;; This function uses a non-reentrant model
  2103 ;;
  2104                           
  2105                           
  2106                           ;psect for function _Lcd_Port
  2107  0000'                    _Lcd_Port:	
  2108                           
  2109                           ;incstack = 0
  2110                           ; Regs used in _Lcd_Port: [wreg]
  2111                           ;Lcd_Port@a stored from wreg
  2112  0000' 0080'              	movwf	Lcd_Port@a
  2113                           
  2114                           ;LCD.c: 28: void Lcd_Port(char a);LCD.c: 29: {;LCD.c: 30:    if(a & 1)
  2115  0001' 1C00'              	btfss	Lcd_Port@a,0
  2116  0002' 2800'              	goto	l56
  2117                           
  2118                           ;LCD.c: 31:       RD4 = 1;
  2119  0003' 0020               	movlb	0	; select bank0
  2120  0004' 160F               	bsf	15,4	;volatile
  2121  0005' 2800'              	goto	l848
  2122  0006'                    l56:	
  2123                           ;LCD.c: 32:    else
  2124                           
  2125                           
  2126                           ;LCD.c: 33:       RD4 = 0;
  2127  0006' 0020               	movlb	0	; select bank0
  2128  0007' 120F               	bcf	15,4	;volatile
  2129  0008'                    l848:	
  2130                           
  2131                           ;LCD.c: 35:    if(a & 2)
  2132  0008' 1C80'              	btfss	Lcd_Port@a,1
  2133  0009' 2800'              	goto	l58
  2134                           
  2135                           ;LCD.c: 36:       RD5 = 1;
  2136  000A' 168F               	bsf	15,5	;volatile
  2137  000B' 2800'              	goto	l852
  2138  000C'                    l58:	
  2139                           ;LCD.c: 37:    else
  2140                           
  2141                           
  2142                           ;LCD.c: 38:       RD5 = 0;
  2143  000C' 128F               	bcf	15,5	;volatile
  2144  000D'                    l852:	
  2145                           
  2146                           ;LCD.c: 40:    if(a & 4)
  2147  000D' 1D00'              	btfss	Lcd_Port@a,2
  2148  000E' 2800'              	goto	l60
  2149                           
  2150                           ;LCD.c: 41:       RD6 = 1;
  2151  000F' 170F               	bsf	15,6	;volatile
  2152  0010' 2800'              	goto	l856
  2153  0011'                    l60:	
  2154                           ;LCD.c: 42:    else
  2155                           
  2156                           
  2157                           ;LCD.c: 43:       RD6 = 0;
  2158  0011' 130F               	bcf	15,6	;volatile
  2159  0012'                    l856:	
  2160                           
  2161                           ;LCD.c: 45:    if(a & 8)
  2162  0012' 1D80'              	btfss	Lcd_Port@a,3
  2163  0013' 2800'              	goto	l62
  2164                           
  2165                           ;LCD.c: 46:       RD7 = 1;
  2166  0014' 178F               	bsf	15,7	;volatile
  2167  0015' 0008               	return
  2168  0016'                    l62:	
  2169                           ;LCD.c: 47:    else
  2170                           
  2171                           
  2172                           ;LCD.c: 48:       RD7 = 0;
  2173  0016' 138F               	bcf	15,7	;volatile
  2174  0017' 0008               	return
  2175  0018'                    __end_of_Lcd_Port:	
  2176  007E                     btemp	set	126	;btemp
  2177  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     12      12
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR const unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[4096]), ROM(CODE[8192]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Write_Integer
    _initMain->_Lcd_Init
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Write_Integer->_Lcd_Write_String
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_Lcd_Write_Integer

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1437
                                              8 BANK0      4     4      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                  _Lcd_Write_Integer
                           _initMain
 ---------------------------------------------------------------------------------
 (1) _initMain                                             2     2      0     308
                                              4 COMMON     2     2      0
                          _Lcd_Clear
                           _Lcd_Init
                        _internal_16
 ---------------------------------------------------------------------------------
 (2) _internal_16                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             1     1      0     198
                                              3 COMMON     1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_Integer                                   11     9      2     540
                                             10 COMMON     3     1      2
                                              0 BANK0      8     8      0
                   _Lcd_Write_String
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 5     0      5       0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     5     3      2     420
                                              5 COMMON     5     3      2
                     _Lcd_Write_Char
                               _itoa (ARG)
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     456
                                              3 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              2     2      0     110
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Integer
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
       _itoa (ARG)
     _itoa
   _initMain
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Init
       _Lcd_Cmd
         _Lcd_Port
       _Lcd_Port
     _internal_16

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      C       C       5       15.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat May 11 23:45:23 2019

               __CFG_CP$OFF 0000                          l60 0011                          l62 0016  
                        l56 0006                          l58 000C                         l145 000B  
                       l910 0002                         l922 0020                         l852 000D  
                       l856 0012                         l848 0008                         l982 0003  
                       _RD2 007A                         _RD3 007B                         _RD4 007C  
                       _RD5 007D                         _RD6 007E                         _RD7 007F  
                       u215 002C                         u307 001A                         u317 0026  
                       u165 0010                         u237 0006                         u327 000C  
                       u247 001E                         u257 0031                         u195 000C  
                       u267 0028                         u277 0007                         u287 0013  
                       u297 001F                __CFG_BORV$LO 0000                         wreg 0009  
              __CFG_IESO$ON 0000                __CFG_LVP$OFF 0000                        _SCS0 04C8  
                      _SCS1 04C9                __CFG_WRT$OFF 0000           ?_Lcd_Write_String 0005  
                      _main 0000                        _itoa 0000*                       fsr0h 0005  
                      indf0 0000                        fsr0l 0004                        btemp 007E  
                      start 0000*         ??_Lcd_Write_String 0007             __end_of_Lcd_Cmd 0014  
         _Lcd_Write_Integer 0000                       ?_main 0000                       ?_itoa 0000  
             __CFG_WDTE$OFF 0000                       _IRCF0 04CB                       _IRCF1 04CC  
                     _IRCF2 04CD                       _IRCF3 04CE          ?_Lcd_Write_Integer 000A  
   __size_of_Lcd_Set_Cursor 0040                       _TRISD 008F              __CFG_FCMEN$OFF 0000  
       ??_Lcd_Write_Integer 000C              __CFG_BOREN$OFF 0000                       status 0003  
                     wtemp0 007E                ?_internal_16 0000            __end_of_Lcd_Init 0044  
          __end_of_Lcd_Port 0018              __CFG_MCLRE$OFF 0000             __initialization 0000  
              __end_of_main 003C   __end_of_Lcd_Write_Integer 0016              __CFG_LPBOR$OFF 0000  
                    ??_main 0008                      ??_itoa 0000          __size_of_Lcd_Clear 0008  
            __CFG_PLLEN$OFF 0000                      _ADRESH 009C                      _ADRESL 009B  
            __CFG_ZCDDIS$ON 0000                      _ANSELD 018F                   ??_Lcd_Cmd 0001  
                    _SPLLEN 04CF     __size_of_Lcd_Write_Char 002C              __CFG_PWRTE$OFF 0000  
            __CFG_STVREN$ON 0000            __end_of_initMain 0032             Lcd_Set_Cursor@a 0006  
           Lcd_Set_Cursor@b 0003             Lcd_Set_Cursor@y 0008             Lcd_Set_Cursor@z 0007  
   __end_of__initialization 0000           __end_of_Lcd_Clear 0008              __pcstackCOMMON 0000  
__size_of_Lcd_Write_Integer 0016              _Lcd_Set_Cursor 0000                   ?_Lcd_Init 0000  
                 ?_Lcd_Port 0000                  __pmaintext 0000        __size_of_internal_16 0009  
           __CFG_PPS1WAY$ON 0000   __size_of_Lcd_Write_String 001A      __end_of_Lcd_Set_Cursor 0040  
                ??_Lcd_Init 0003                  ??_Lcd_Port 0000                   ?_initMain 0000  
            _Lcd_Write_Char 0000                     _Lcd_Cmd 0000             ?_Lcd_Set_Cursor 0003  
                   __ptext1 0000                     __ptext2 0000                     __ptext3 0000  
                   __ptext4 0000                     __ptext5 0000                     __ptext6 0000  
                   __ptext7 0000                     __ptext8 0000                     __ptext9 0000  
    __end_of_Lcd_Write_Char 002C        end_of_initialization 0000                  ??_initMain 0004  
                 Lcd_Port@a 0000            __CFG_FOSC$INTOSC 0000                   _TRISAbits 008C  
                 _TRISBbits 008D                   _TRISDbits 008F             ?_Lcd_Write_Char 0000  
         Lcd_Write_String@a 0005           Lcd_Write_String@i 0008                  main@result 000A  
                 _Lcd_Clear 0000            _Lcd_Write_String 0000         start_initialization 0000  
         __size_of_Lcd_Init 0044           __size_of_Lcd_Port 0018                  ?_Lcd_Clear 0000  
           Lcd_Write_Char@a 0004             Lcd_Write_Char@y 0003                   ___latbits 0002  
             __pcstackBANK0 0000                    ?_Lcd_Cmd 0000               ??_internal_16 0000  
         __size_of_initMain 0032            ??_Lcd_Set_Cursor 0004                    _LATDbits 010F  
                  Lcd_Cmd@a 0002                 ??_Lcd_Clear 0003         __end_of_internal_16 0009  
                _ADCON0bits 009D                  _ADCON1bits 009E            ??_Lcd_Write_Char 0001  
                  _Lcd_Init 0000                    _Lcd_Port 0000    __end_of_Lcd_Write_String 001A  
          __size_of_Lcd_Cmd 0014                  _ANSELAbits 018C                  _ANSELBbits 018D  
                  __ptext10 0000                    _initMain 0000               __size_of_main 003C  
               _internal_16 0000        Lcd_Write_Integer@buf 0000          Lcd_Write_Char@temp 0002  
         __CFG_CLKOUTEN$OFF 0000          Lcd_Set_Cursor@temp 0009          Lcd_Write_Integer@v 000A  
