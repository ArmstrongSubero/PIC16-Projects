

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Wed Mar 22 15:33:18 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1717
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	dabs	1,0x7E,2
    26  0000                     
    27                           ; Version 1.41
    28                           ; Generated 25/01/2017 GMT
    29                           ; 
    30                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F1717 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000F                     	;# 
    77  0010                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0095                     	;# 
    99  0096                     	;# 
   100  0097                     	;# 
   101  0098                     	;# 
   102  0099                     	;# 
   103  009A                     	;# 
   104  009B                     	;# 
   105  009B                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  009F                     	;# 
   110  010C                     	;# 
   111  010D                     	;# 
   112  010E                     	;# 
   113  010F                     	;# 
   114  0110                     	;# 
   115  0111                     	;# 
   116  0112                     	;# 
   117  0113                     	;# 
   118  0114                     	;# 
   119  0115                     	;# 
   120  0116                     	;# 
   121  0117                     	;# 
   122  0118                     	;# 
   123  0119                     	;# 
   124  011A                     	;# 
   125  011B                     	;# 
   126  011B                     	;# 
   127  011C                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  018E                     	;# 
   131  018F                     	;# 
   132  0190                     	;# 
   133  0191                     	;# 
   134  0191                     	;# 
   135  0192                     	;# 
   136  0193                     	;# 
   137  0193                     	;# 
   138  0194                     	;# 
   139  0195                     	;# 
   140  0196                     	;# 
   141  0197                     	;# 
   142  0199                     	;# 
   143  0199                     	;# 
   144  0199                     	;# 
   145  019A                     	;# 
   146  019A                     	;# 
   147  019A                     	;# 
   148  019B                     	;# 
   149  019B                     	;# 
   150  019B                     	;# 
   151  019B                     	;# 
   152  019B                     	;# 
   153  019C                     	;# 
   154  019C                     	;# 
   155  019C                     	;# 
   156  019D                     	;# 
   157  019D                     	;# 
   158  019D                     	;# 
   159  019E                     	;# 
   160  019E                     	;# 
   161  019E                     	;# 
   162  019F                     	;# 
   163  019F                     	;# 
   164  019F                     	;# 
   165  019F                     	;# 
   166  019F                     	;# 
   167  020C                     	;# 
   168  020D                     	;# 
   169  020E                     	;# 
   170  020F                     	;# 
   171  0210                     	;# 
   172  0211                     	;# 
   173  0211                     	;# 
   174  0212                     	;# 
   175  0212                     	;# 
   176  0213                     	;# 
   177  0213                     	;# 
   178  0214                     	;# 
   179  0214                     	;# 
   180  0215                     	;# 
   181  0215                     	;# 
   182  0215                     	;# 
   183  0215                     	;# 
   184  0216                     	;# 
   185  0216                     	;# 
   186  0217                     	;# 
   187  0217                     	;# 
   188  028C                     	;# 
   189  028D                     	;# 
   190  028E                     	;# 
   191  028F                     	;# 
   192  0290                     	;# 
   193  0291                     	;# 
   194  0291                     	;# 
   195  0292                     	;# 
   196  0293                     	;# 
   197  0293                     	;# 
   198  0298                     	;# 
   199  0298                     	;# 
   200  0299                     	;# 
   201  029A                     	;# 
   202  029A                     	;# 
   203  029E                     	;# 
   204  030C                     	;# 
   205  030D                     	;# 
   206  030E                     	;# 
   207  030F                     	;# 
   208  0310                     	;# 
   209  038C                     	;# 
   210  038D                     	;# 
   211  038E                     	;# 
   212  038F                     	;# 
   213  0390                     	;# 
   214  0391                     	;# 
   215  0392                     	;# 
   216  0393                     	;# 
   217  0394                     	;# 
   218  0395                     	;# 
   219  0396                     	;# 
   220  0397                     	;# 
   221  0398                     	;# 
   222  0399                     	;# 
   223  039D                     	;# 
   224  039E                     	;# 
   225  039F                     	;# 
   226  0415                     	;# 
   227  0416                     	;# 
   228  0417                     	;# 
   229  041C                     	;# 
   230  041D                     	;# 
   231  041E                     	;# 
   232  0498                     	;# 
   233  0498                     	;# 
   234  0499                     	;# 
   235  049A                     	;# 
   236  049B                     	;# 
   237  049B                     	;# 
   238  049C                     	;# 
   239  049D                     	;# 
   240  049E                     	;# 
   241  049F                     	;# 
   242  0511                     	;# 
   243  0515                     	;# 
   244  0617                     	;# 
   245  0618                     	;# 
   246  0619                     	;# 
   247  0619                     	;# 
   248  061A                     	;# 
   249  061B                     	;# 
   250  061C                     	;# 
   251  061C                     	;# 
   252  0691                     	;# 
   253  0692                     	;# 
   254  0693                     	;# 
   255  0694                     	;# 
   256  0695                     	;# 
   257  0696                     	;# 
   258  0697                     	;# 
   259  0698                     	;# 
   260  0699                     	;# 
   261  069A                     	;# 
   262  069B                     	;# 
   263  069C                     	;# 
   264  069D                     	;# 
   265  069E                     	;# 
   266  069F                     	;# 
   267  0E0F                     	;# 
   268  0E10                     	;# 
   269  0E11                     	;# 
   270  0E12                     	;# 
   271  0E13                     	;# 
   272  0E14                     	;# 
   273  0E15                     	;# 
   274  0E17                     	;# 
   275  0E20                     	;# 
   276  0E21                     	;# 
   277  0E22                     	;# 
   278  0E24                     	;# 
   279  0E25                     	;# 
   280  0E28                     	;# 
   281  0E29                     	;# 
   282  0E2A                     	;# 
   283  0E2B                     	;# 
   284  0E90                     	;# 
   285  0E91                     	;# 
   286  0E92                     	;# 
   287  0E93                     	;# 
   288  0E94                     	;# 
   289  0E95                     	;# 
   290  0E96                     	;# 
   291  0E97                     	;# 
   292  0E98                     	;# 
   293  0E99                     	;# 
   294  0E9A                     	;# 
   295  0E9B                     	;# 
   296  0E9C                     	;# 
   297  0E9D                     	;# 
   298  0E9E                     	;# 
   299  0E9F                     	;# 
   300  0EA0                     	;# 
   301  0EA1                     	;# 
   302  0EA2                     	;# 
   303  0EA3                     	;# 
   304  0EA4                     	;# 
   305  0EA5                     	;# 
   306  0EA6                     	;# 
   307  0EA7                     	;# 
   308  0EA8                     	;# 
   309  0EA9                     	;# 
   310  0EAA                     	;# 
   311  0EAB                     	;# 
   312  0EAC                     	;# 
   313  0EAD                     	;# 
   314  0EAE                     	;# 
   315  0EAF                     	;# 
   316  0EB0                     	;# 
   317  0EB1                     	;# 
   318  0EB2                     	;# 
   319  0F0F                     	;# 
   320  0F10                     	;# 
   321  0F11                     	;# 
   322  0F12                     	;# 
   323  0F13                     	;# 
   324  0F14                     	;# 
   325  0F15                     	;# 
   326  0F16                     	;# 
   327  0F17                     	;# 
   328  0F18                     	;# 
   329  0F19                     	;# 
   330  0F1A                     	;# 
   331  0F1B                     	;# 
   332  0F1C                     	;# 
   333  0F1D                     	;# 
   334  0F1E                     	;# 
   335  0F1F                     	;# 
   336  0F20                     	;# 
   337  0F21                     	;# 
   338  0F22                     	;# 
   339  0F23                     	;# 
   340  0F24                     	;# 
   341  0F25                     	;# 
   342  0F26                     	;# 
   343  0F27                     	;# 
   344  0F28                     	;# 
   345  0F29                     	;# 
   346  0F2A                     	;# 
   347  0F2B                     	;# 
   348  0F2C                     	;# 
   349  0F2D                     	;# 
   350  0F2E                     	;# 
   351  0F2F                     	;# 
   352  0F30                     	;# 
   353  0F31                     	;# 
   354  0F32                     	;# 
   355  0F33                     	;# 
   356  0F34                     	;# 
   357  0F35                     	;# 
   358  0F36                     	;# 
   359  0F37                     	;# 
   360  0FE4                     	;# 
   361  0FE5                     	;# 
   362  0FE6                     	;# 
   363  0FE7                     	;# 
   364  0FE8                     	;# 
   365  0FE9                     	;# 
   366  0FEA                     	;# 
   367  0FEB                     	;# 
   368  0FED                     	;# 
   369  0FEE                     	;# 
   370  0FEF                     	;# 
   371  0000                     	;# 
   372  0001                     	;# 
   373  0002                     	;# 
   374  0003                     	;# 
   375  0004                     	;# 
   376  0005                     	;# 
   377  0006                     	;# 
   378  0007                     	;# 
   379  0008                     	;# 
   380  0009                     	;# 
   381  000A                     	;# 
   382  000B                     	;# 
   383  000C                     	;# 
   384  000D                     	;# 
   385  000E                     	;# 
   386  000F                     	;# 
   387  0010                     	;# 
   388  0011                     	;# 
   389  0012                     	;# 
   390  0013                     	;# 
   391  0015                     	;# 
   392  0016                     	;# 
   393  0016                     	;# 
   394  0017                     	;# 
   395  0018                     	;# 
   396  0019                     	;# 
   397  001A                     	;# 
   398  001B                     	;# 
   399  001C                     	;# 
   400  008C                     	;# 
   401  008D                     	;# 
   402  008E                     	;# 
   403  008F                     	;# 
   404  0090                     	;# 
   405  0091                     	;# 
   406  0092                     	;# 
   407  0093                     	;# 
   408  0095                     	;# 
   409  0096                     	;# 
   410  0097                     	;# 
   411  0098                     	;# 
   412  0099                     	;# 
   413  009A                     	;# 
   414  009B                     	;# 
   415  009B                     	;# 
   416  009C                     	;# 
   417  009D                     	;# 
   418  009E                     	;# 
   419  009F                     	;# 
   420  010C                     	;# 
   421  010D                     	;# 
   422  010E                     	;# 
   423  010F                     	;# 
   424  0110                     	;# 
   425  0111                     	;# 
   426  0112                     	;# 
   427  0113                     	;# 
   428  0114                     	;# 
   429  0115                     	;# 
   430  0116                     	;# 
   431  0117                     	;# 
   432  0118                     	;# 
   433  0119                     	;# 
   434  011A                     	;# 
   435  011B                     	;# 
   436  011B                     	;# 
   437  011C                     	;# 
   438  018C                     	;# 
   439  018D                     	;# 
   440  018E                     	;# 
   441  018F                     	;# 
   442  0190                     	;# 
   443  0191                     	;# 
   444  0191                     	;# 
   445  0192                     	;# 
   446  0193                     	;# 
   447  0193                     	;# 
   448  0194                     	;# 
   449  0195                     	;# 
   450  0196                     	;# 
   451  0197                     	;# 
   452  0199                     	;# 
   453  0199                     	;# 
   454  0199                     	;# 
   455  019A                     	;# 
   456  019A                     	;# 
   457  019A                     	;# 
   458  019B                     	;# 
   459  019B                     	;# 
   460  019B                     	;# 
   461  019B                     	;# 
   462  019B                     	;# 
   463  019C                     	;# 
   464  019C                     	;# 
   465  019C                     	;# 
   466  019D                     	;# 
   467  019D                     	;# 
   468  019D                     	;# 
   469  019E                     	;# 
   470  019E                     	;# 
   471  019E                     	;# 
   472  019F                     	;# 
   473  019F                     	;# 
   474  019F                     	;# 
   475  019F                     	;# 
   476  019F                     	;# 
   477  020C                     	;# 
   478  020D                     	;# 
   479  020E                     	;# 
   480  020F                     	;# 
   481  0210                     	;# 
   482  0211                     	;# 
   483  0211                     	;# 
   484  0212                     	;# 
   485  0212                     	;# 
   486  0213                     	;# 
   487  0213                     	;# 
   488  0214                     	;# 
   489  0214                     	;# 
   490  0215                     	;# 
   491  0215                     	;# 
   492  0215                     	;# 
   493  0215                     	;# 
   494  0216                     	;# 
   495  0216                     	;# 
   496  0217                     	;# 
   497  0217                     	;# 
   498  028C                     	;# 
   499  028D                     	;# 
   500  028E                     	;# 
   501  028F                     	;# 
   502  0290                     	;# 
   503  0291                     	;# 
   504  0291                     	;# 
   505  0292                     	;# 
   506  0293                     	;# 
   507  0293                     	;# 
   508  0298                     	;# 
   509  0298                     	;# 
   510  0299                     	;# 
   511  029A                     	;# 
   512  029A                     	;# 
   513  029E                     	;# 
   514  030C                     	;# 
   515  030D                     	;# 
   516  030E                     	;# 
   517  030F                     	;# 
   518  0310                     	;# 
   519  038C                     	;# 
   520  038D                     	;# 
   521  038E                     	;# 
   522  038F                     	;# 
   523  0390                     	;# 
   524  0391                     	;# 
   525  0392                     	;# 
   526  0393                     	;# 
   527  0394                     	;# 
   528  0395                     	;# 
   529  0396                     	;# 
   530  0397                     	;# 
   531  0398                     	;# 
   532  0399                     	;# 
   533  039D                     	;# 
   534  039E                     	;# 
   535  039F                     	;# 
   536  0415                     	;# 
   537  0416                     	;# 
   538  0417                     	;# 
   539  041C                     	;# 
   540  041D                     	;# 
   541  041E                     	;# 
   542  0498                     	;# 
   543  0498                     	;# 
   544  0499                     	;# 
   545  049A                     	;# 
   546  049B                     	;# 
   547  049B                     	;# 
   548  049C                     	;# 
   549  049D                     	;# 
   550  049E                     	;# 
   551  049F                     	;# 
   552  0511                     	;# 
   553  0515                     	;# 
   554  0617                     	;# 
   555  0618                     	;# 
   556  0619                     	;# 
   557  0619                     	;# 
   558  061A                     	;# 
   559  061B                     	;# 
   560  061C                     	;# 
   561  061C                     	;# 
   562  0691                     	;# 
   563  0692                     	;# 
   564  0693                     	;# 
   565  0694                     	;# 
   566  0695                     	;# 
   567  0696                     	;# 
   568  0697                     	;# 
   569  0698                     	;# 
   570  0699                     	;# 
   571  069A                     	;# 
   572  069B                     	;# 
   573  069C                     	;# 
   574  069D                     	;# 
   575  069E                     	;# 
   576  069F                     	;# 
   577  0E0F                     	;# 
   578  0E10                     	;# 
   579  0E11                     	;# 
   580  0E12                     	;# 
   581  0E13                     	;# 
   582  0E14                     	;# 
   583  0E15                     	;# 
   584  0E17                     	;# 
   585  0E20                     	;# 
   586  0E21                     	;# 
   587  0E22                     	;# 
   588  0E24                     	;# 
   589  0E25                     	;# 
   590  0E28                     	;# 
   591  0E29                     	;# 
   592  0E2A                     	;# 
   593  0E2B                     	;# 
   594  0E90                     	;# 
   595  0E91                     	;# 
   596  0E92                     	;# 
   597  0E93                     	;# 
   598  0E94                     	;# 
   599  0E95                     	;# 
   600  0E96                     	;# 
   601  0E97                     	;# 
   602  0E98                     	;# 
   603  0E99                     	;# 
   604  0E9A                     	;# 
   605  0E9B                     	;# 
   606  0E9C                     	;# 
   607  0E9D                     	;# 
   608  0E9E                     	;# 
   609  0E9F                     	;# 
   610  0EA0                     	;# 
   611  0EA1                     	;# 
   612  0EA2                     	;# 
   613  0EA3                     	;# 
   614  0EA4                     	;# 
   615  0EA5                     	;# 
   616  0EA6                     	;# 
   617  0EA7                     	;# 
   618  0EA8                     	;# 
   619  0EA9                     	;# 
   620  0EAA                     	;# 
   621  0EAB                     	;# 
   622  0EAC                     	;# 
   623  0EAD                     	;# 
   624  0EAE                     	;# 
   625  0EAF                     	;# 
   626  0EB0                     	;# 
   627  0EB1                     	;# 
   628  0EB2                     	;# 
   629  0F0F                     	;# 
   630  0F10                     	;# 
   631  0F11                     	;# 
   632  0F12                     	;# 
   633  0F13                     	;# 
   634  0F14                     	;# 
   635  0F15                     	;# 
   636  0F16                     	;# 
   637  0F17                     	;# 
   638  0F18                     	;# 
   639  0F19                     	;# 
   640  0F1A                     	;# 
   641  0F1B                     	;# 
   642  0F1C                     	;# 
   643  0F1D                     	;# 
   644  0F1E                     	;# 
   645  0F1F                     	;# 
   646  0F20                     	;# 
   647  0F21                     	;# 
   648  0F22                     	;# 
   649  0F23                     	;# 
   650  0F24                     	;# 
   651  0F25                     	;# 
   652  0F26                     	;# 
   653  0F27                     	;# 
   654  0F28                     	;# 
   655  0F29                     	;# 
   656  0F2A                     	;# 
   657  0F2B                     	;# 
   658  0F2C                     	;# 
   659  0F2D                     	;# 
   660  0F2E                     	;# 
   661  0F2F                     	;# 
   662  0F30                     	;# 
   663  0F31                     	;# 
   664  0F32                     	;# 
   665  0F33                     	;# 
   666  0F34                     	;# 
   667  0F35                     	;# 
   668  0F36                     	;# 
   669  0F37                     	;# 
   670  0FE4                     	;# 
   671  0FE5                     	;# 
   672  0FE6                     	;# 
   673  0FE7                     	;# 
   674  0FE8                     	;# 
   675  0FE9                     	;# 
   676  0FEA                     	;# 
   677  0FEB                     	;# 
   678  0FED                     	;# 
   679  0FEE                     	;# 
   680  0FEF                     	;# 
   681  0000                     	;# 
   682  0001                     	;# 
   683  0002                     	;# 
   684  0003                     	;# 
   685  0004                     	;# 
   686  0005                     	;# 
   687  0006                     	;# 
   688  0007                     	;# 
   689  0008                     	;# 
   690  0009                     	;# 
   691  000A                     	;# 
   692  000B                     	;# 
   693  000C                     	;# 
   694  000D                     	;# 
   695  000E                     	;# 
   696  000F                     	;# 
   697  0010                     	;# 
   698  0011                     	;# 
   699  0012                     	;# 
   700  0013                     	;# 
   701  0015                     	;# 
   702  0016                     	;# 
   703  0016                     	;# 
   704  0017                     	;# 
   705  0018                     	;# 
   706  0019                     	;# 
   707  001A                     	;# 
   708  001B                     	;# 
   709  001C                     	;# 
   710  008C                     	;# 
   711  008D                     	;# 
   712  008E                     	;# 
   713  008F                     	;# 
   714  0090                     	;# 
   715  0091                     	;# 
   716  0092                     	;# 
   717  0093                     	;# 
   718  0095                     	;# 
   719  0096                     	;# 
   720  0097                     	;# 
   721  0098                     	;# 
   722  0099                     	;# 
   723  009A                     	;# 
   724  009B                     	;# 
   725  009B                     	;# 
   726  009C                     	;# 
   727  009D                     	;# 
   728  009E                     	;# 
   729  009F                     	;# 
   730  010C                     	;# 
   731  010D                     	;# 
   732  010E                     	;# 
   733  010F                     	;# 
   734  0110                     	;# 
   735  0111                     	;# 
   736  0112                     	;# 
   737  0113                     	;# 
   738  0114                     	;# 
   739  0115                     	;# 
   740  0116                     	;# 
   741  0117                     	;# 
   742  0118                     	;# 
   743  0119                     	;# 
   744  011A                     	;# 
   745  011B                     	;# 
   746  011B                     	;# 
   747  011C                     	;# 
   748  018C                     	;# 
   749  018D                     	;# 
   750  018E                     	;# 
   751  018F                     	;# 
   752  0190                     	;# 
   753  0191                     	;# 
   754  0191                     	;# 
   755  0192                     	;# 
   756  0193                     	;# 
   757  0193                     	;# 
   758  0194                     	;# 
   759  0195                     	;# 
   760  0196                     	;# 
   761  0197                     	;# 
   762  0199                     	;# 
   763  0199                     	;# 
   764  0199                     	;# 
   765  019A                     	;# 
   766  019A                     	;# 
   767  019A                     	;# 
   768  019B                     	;# 
   769  019B                     	;# 
   770  019B                     	;# 
   771  019B                     	;# 
   772  019B                     	;# 
   773  019C                     	;# 
   774  019C                     	;# 
   775  019C                     	;# 
   776  019D                     	;# 
   777  019D                     	;# 
   778  019D                     	;# 
   779  019E                     	;# 
   780  019E                     	;# 
   781  019E                     	;# 
   782  019F                     	;# 
   783  019F                     	;# 
   784  019F                     	;# 
   785  019F                     	;# 
   786  019F                     	;# 
   787  020C                     	;# 
   788  020D                     	;# 
   789  020E                     	;# 
   790  020F                     	;# 
   791  0210                     	;# 
   792  0211                     	;# 
   793  0211                     	;# 
   794  0212                     	;# 
   795  0212                     	;# 
   796  0213                     	;# 
   797  0213                     	;# 
   798  0214                     	;# 
   799  0214                     	;# 
   800  0215                     	;# 
   801  0215                     	;# 
   802  0215                     	;# 
   803  0215                     	;# 
   804  0216                     	;# 
   805  0216                     	;# 
   806  0217                     	;# 
   807  0217                     	;# 
   808  028C                     	;# 
   809  028D                     	;# 
   810  028E                     	;# 
   811  028F                     	;# 
   812  0290                     	;# 
   813  0291                     	;# 
   814  0291                     	;# 
   815  0292                     	;# 
   816  0293                     	;# 
   817  0293                     	;# 
   818  0298                     	;# 
   819  0298                     	;# 
   820  0299                     	;# 
   821  029A                     	;# 
   822  029A                     	;# 
   823  029E                     	;# 
   824  030C                     	;# 
   825  030D                     	;# 
   826  030E                     	;# 
   827  030F                     	;# 
   828  0310                     	;# 
   829  038C                     	;# 
   830  038D                     	;# 
   831  038E                     	;# 
   832  038F                     	;# 
   833  0390                     	;# 
   834  0391                     	;# 
   835  0392                     	;# 
   836  0393                     	;# 
   837  0394                     	;# 
   838  0395                     	;# 
   839  0396                     	;# 
   840  0397                     	;# 
   841  0398                     	;# 
   842  0399                     	;# 
   843  039D                     	;# 
   844  039E                     	;# 
   845  039F                     	;# 
   846  0415                     	;# 
   847  0416                     	;# 
   848  0417                     	;# 
   849  041C                     	;# 
   850  041D                     	;# 
   851  041E                     	;# 
   852  0498                     	;# 
   853  0498                     	;# 
   854  0499                     	;# 
   855  049A                     	;# 
   856  049B                     	;# 
   857  049B                     	;# 
   858  049C                     	;# 
   859  049D                     	;# 
   860  049E                     	;# 
   861  049F                     	;# 
   862  0511                     	;# 
   863  0515                     	;# 
   864  0617                     	;# 
   865  0618                     	;# 
   866  0619                     	;# 
   867  0619                     	;# 
   868  061A                     	;# 
   869  061B                     	;# 
   870  061C                     	;# 
   871  061C                     	;# 
   872  0691                     	;# 
   873  0692                     	;# 
   874  0693                     	;# 
   875  0694                     	;# 
   876  0695                     	;# 
   877  0696                     	;# 
   878  0697                     	;# 
   879  0698                     	;# 
   880  0699                     	;# 
   881  069A                     	;# 
   882  069B                     	;# 
   883  069C                     	;# 
   884  069D                     	;# 
   885  069E                     	;# 
   886  069F                     	;# 
   887  0E0F                     	;# 
   888  0E10                     	;# 
   889  0E11                     	;# 
   890  0E12                     	;# 
   891  0E13                     	;# 
   892  0E14                     	;# 
   893  0E15                     	;# 
   894  0E17                     	;# 
   895  0E20                     	;# 
   896  0E21                     	;# 
   897  0E22                     	;# 
   898  0E24                     	;# 
   899  0E25                     	;# 
   900  0E28                     	;# 
   901  0E29                     	;# 
   902  0E2A                     	;# 
   903  0E2B                     	;# 
   904  0E90                     	;# 
   905  0E91                     	;# 
   906  0E92                     	;# 
   907  0E93                     	;# 
   908  0E94                     	;# 
   909  0E95                     	;# 
   910  0E96                     	;# 
   911  0E97                     	;# 
   912  0E98                     	;# 
   913  0E99                     	;# 
   914  0E9A                     	;# 
   915  0E9B                     	;# 
   916  0E9C                     	;# 
   917  0E9D                     	;# 
   918  0E9E                     	;# 
   919  0E9F                     	;# 
   920  0EA0                     	;# 
   921  0EA1                     	;# 
   922  0EA2                     	;# 
   923  0EA3                     	;# 
   924  0EA4                     	;# 
   925  0EA5                     	;# 
   926  0EA6                     	;# 
   927  0EA7                     	;# 
   928  0EA8                     	;# 
   929  0EA9                     	;# 
   930  0EAA                     	;# 
   931  0EAB                     	;# 
   932  0EAC                     	;# 
   933  0EAD                     	;# 
   934  0EAE                     	;# 
   935  0EAF                     	;# 
   936  0EB0                     	;# 
   937  0EB1                     	;# 
   938  0EB2                     	;# 
   939  0F0F                     	;# 
   940  0F10                     	;# 
   941  0F11                     	;# 
   942  0F12                     	;# 
   943  0F13                     	;# 
   944  0F14                     	;# 
   945  0F15                     	;# 
   946  0F16                     	;# 
   947  0F17                     	;# 
   948  0F18                     	;# 
   949  0F19                     	;# 
   950  0F1A                     	;# 
   951  0F1B                     	;# 
   952  0F1C                     	;# 
   953  0F1D                     	;# 
   954  0F1E                     	;# 
   955  0F1F                     	;# 
   956  0F20                     	;# 
   957  0F21                     	;# 
   958  0F22                     	;# 
   959  0F23                     	;# 
   960  0F24                     	;# 
   961  0F25                     	;# 
   962  0F26                     	;# 
   963  0F27                     	;# 
   964  0F28                     	;# 
   965  0F29                     	;# 
   966  0F2A                     	;# 
   967  0F2B                     	;# 
   968  0F2C                     	;# 
   969  0F2D                     	;# 
   970  0F2E                     	;# 
   971  0F2F                     	;# 
   972  0F30                     	;# 
   973  0F31                     	;# 
   974  0F32                     	;# 
   975  0F33                     	;# 
   976  0F34                     	;# 
   977  0F35                     	;# 
   978  0F36                     	;# 
   979  0F37                     	;# 
   980  0FE4                     	;# 
   981  0FE5                     	;# 
   982  0FE6                     	;# 
   983  0FE7                     	;# 
   984  0FE8                     	;# 
   985  0FE9                     	;# 
   986  0FEA                     	;# 
   987  0FEB                     	;# 
   988  0FED                     	;# 
   989  0FEE                     	;# 
   990  0FEF                     	;# 
   991                           
   992                           	psect	stringtext
   993  0800                     __pstringtext:	
   994  0800                     _dpowers:	
   995  0800  3401               	retlw	1
   996  0801  3400               	retlw	0
   997  0802  3400               	retlw	0
   998  0803  3400               	retlw	0
   999  0804  340A               	retlw	10
  1000  0805  3400               	retlw	0
  1001  0806  3400               	retlw	0
  1002  0807  3400               	retlw	0
  1003  0808  3464               	retlw	100
  1004  0809  3400               	retlw	0
  1005  080A  3400               	retlw	0
  1006  080B  3400               	retlw	0
  1007  080C  34E8               	retlw	232
  1008  080D  3403               	retlw	3
  1009  080E  3400               	retlw	0
  1010  080F  3400               	retlw	0
  1011  0810  3410               	retlw	16
  1012  0811  3427               	retlw	39
  1013  0812  3400               	retlw	0
  1014  0813  3400               	retlw	0
  1015  0814  34A0               	retlw	160
  1016  0815  3486               	retlw	134
  1017  0816  3401               	retlw	1
  1018  0817  3400               	retlw	0
  1019  0818  3440               	retlw	64
  1020  0819  3442               	retlw	66
  1021  081A  340F               	retlw	15
  1022  081B  3400               	retlw	0
  1023  081C  3480               	retlw	128
  1024  081D  3496               	retlw	150
  1025  081E  3498               	retlw	152
  1026  081F  3400               	retlw	0
  1027  0820  3400               	retlw	0
  1028  0821  34E1               	retlw	225
  1029  0822  34F5               	retlw	245
  1030  0823  3405               	retlw	5
  1031  0824  3400               	retlw	0
  1032  0825  34CA               	retlw	202
  1033  0826  349A               	retlw	154
  1034  0827  343B               	retlw	59
  1035  0828                     __end_of_dpowers:	
  1036  007B                     _RD3	set	123
  1037  007A                     _RD2	set	122
  1038  007F                     _RD7	set	127
  1039  007E                     _RD6	set	126
  1040  007D                     _RD5	set	125
  1041  007C                     _RD4	set	124
  1042  009C                     _ADRESH	set	156
  1043  009B                     _ADRESL	set	155
  1044  009D                     _ADCON0bits	set	157
  1045  009E                     _ADCON1bits	set	158
  1046  008C                     _TRISAbits	set	140
  1047  008D                     _TRISBbits	set	141
  1048  008F                     _TRISD	set	143
  1049  008F                     _TRISDbits	set	143
  1050  04CF                     _SPLLEN	set	1231
  1051  04CE                     _IRCF3	set	1230
  1052  04CD                     _IRCF2	set	1229
  1053  04CC                     _IRCF1	set	1228
  1054  04CB                     _IRCF0	set	1227
  1055  04C9                     _SCS1	set	1225
  1056  04C8                     _SCS0	set	1224
  1057  010F                     _LATDbits	set	271
  1058  018C                     _ANSELAbits	set	396
  1059  018D                     _ANSELBbits	set	397
  1060  018F                     _ANSELD	set	399
  1061  0828                     STR_1:	
  1062  0828  3425               	retlw	37	;'%'
  1063  0829  346C               	retlw	108	;'l'
  1064  082A  3475               	retlw	117	;'u'
  1065  082B  342E               	retlw	46	;'.'
  1066  082C  3425               	retlw	37	;'%'
  1067  082D  3436               	retlw	54	;'6'
  1068  082E  342E               	retlw	46	;'.'
  1069  082F  3436               	retlw	54	;'6'
  1070  0830  346C               	retlw	108	;'l'
  1071  0831  3475               	retlw	117	;'u'
  1072  0832  3400               	retlw	0
  1073                           
  1074                           ; #config settings
  1075  0000                     
  1076                           	psect	cinit
  1077  07F6                     start_initialization:	
  1078  07F6                     __initialization:	
  1079                           
  1080                           ; Clear objects allocated to BANK0
  1081  07F6  3038               	movlw	low __pbssBANK0
  1082  07F7  0084               	movwf	4
  1083  07F8  3000               	movlw	high __pbssBANK0
  1084  07F9  0085               	movwf	5
  1085  07FA  3011               	movlw	17
  1086  07FB  3185  2582         	fcall	clear_ram0
  1087  07FD                     end_of_initialization:	
  1088                           ;End of C runtime variable initialization code
  1089                           
  1090  07FD                     __end_of__initialization:	
  1091  07FD  0020               	movlb	0
  1092  07FE  3186  2ED4         	ljmp	_main	;jump to C main() function
  1093                           
  1094                           	psect	bssBANK0
  1095  0038                     __pbssBANK0:	
  1096  0038                     ftoa@buf:	
  1097  0038                     	ds	17
  1098                           
  1099                           	psect	clrtext
  1100  0582                     clear_ram0:	
  1101                           ;	Called with FSR0 containing the base address, and
  1102                           ;	WREG with the size to clear
  1103                           
  1104  0582  0064               	clrwdt	;clear the watchdog before getting into this loop
  1105  0583                     clrloop0:	
  1106  0583  0180               	clrf	0	;clear RAM location pointed to by FSR
  1107  0584  3101               	addfsr 0,1
  1108  0585  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1109  0586  2D83               	goto	clrloop0	;have we reached the end yet?
  1110  0587  3400               	retlw	0	;all done for this memory range, return
  1111                           
  1112                           	psect	cstackCOMMON
  1113  0070                     __pcstackCOMMON:	
  1114  0070                     ?_internal_16:	
  1115  0070                     ??_internal_16:	
  1116                           ; 1 bytes @ 0x0
  1117                           
  1118  0070                     ?_Lcd_Port:	
  1119                           ; 1 bytes @ 0x0
  1120                           
  1121  0070                     ??_Lcd_Port:	
  1122                           ; 1 bytes @ 0x0
  1123                           
  1124  0070                     ?_Lcd_Cmd:	
  1125                           ; 1 bytes @ 0x0
  1126                           
  1127  0070                     ?_Lcd_Clear:	
  1128                           ; 1 bytes @ 0x0
  1129                           
  1130  0070                     ?_Lcd_Init:	
  1131                           ; 1 bytes @ 0x0
  1132                           
  1133  0070                     ?_Lcd_Write_Char:	
  1134                           ; 1 bytes @ 0x0
  1135                           
  1136  0070                     ?_Lcd_Write_String:	
  1137                           ; 1 bytes @ 0x0
  1138                           
  1139  0070                     ?_initMain:	
  1140                           ; 1 bytes @ 0x0
  1141                           
  1142  0070                     ?_main:	
  1143                           ; 1 bytes @ 0x0
  1144                           
  1145  0070                     ?___lwdiv:	
  1146                           ; 1 bytes @ 0x0
  1147                           
  1148  0070                     ?___lwmod:	
  1149                           ; 2 bytes @ 0x0
  1150                           
  1151  0070                     Lcd_Port@a:	
  1152                           ; 2 bytes @ 0x0
  1153                           
  1154  0070                     ___lwdiv@divisor:	
  1155                           ; 1 bytes @ 0x0
  1156                           
  1157  0070                     ___lwmod@divisor:	
  1158                           ; 2 bytes @ 0x0
  1159                           
  1160                           
  1161                           ; 2 bytes @ 0x0
  1162  0070                     	ds	1
  1163  0071                     ??_Lcd_Cmd:	
  1164  0071                     ??_Lcd_Write_Char:	
  1165                           ; 1 bytes @ 0x1
  1166                           
  1167                           
  1168                           ; 1 bytes @ 0x1
  1169  0071                     	ds	1
  1170  0072                     Lcd_Cmd@a:	
  1171  0072                     Lcd_Write_Char@temp:	
  1172                           ; 1 bytes @ 0x2
  1173                           
  1174  0072                     ___lwdiv@dividend:	
  1175                           ; 1 bytes @ 0x2
  1176                           
  1177  0072                     ___lwmod@dividend:	
  1178                           ; 2 bytes @ 0x2
  1179                           
  1180                           
  1181                           ; 2 bytes @ 0x2
  1182  0072                     	ds	1
  1183  0073                     ??_Lcd_Clear:	
  1184  0073                     ?_Lcd_Set_Cursor:	
  1185                           ; 1 bytes @ 0x3
  1186                           
  1187  0073                     ??_Lcd_Init:	
  1188                           ; 1 bytes @ 0x3
  1189                           
  1190  0073                     Lcd_Set_Cursor@b:	
  1191                           ; 1 bytes @ 0x3
  1192                           
  1193  0073                     Lcd_Write_Char@y:	
  1194                           ; 1 bytes @ 0x3
  1195                           
  1196                           
  1197                           ; 1 bytes @ 0x3
  1198  0073                     	ds	1
  1199  0074                     ??_Lcd_Set_Cursor:	
  1200  0074                     ??_initMain:	
  1201                           ; 1 bytes @ 0x4
  1202                           
  1203  0074                     ??___lwdiv:	
  1204                           ; 1 bytes @ 0x4
  1205                           
  1206  0074                     ??___lwmod:	
  1207                           ; 1 bytes @ 0x4
  1208                           
  1209  0074                     Lcd_Write_Char@a:	
  1210                           ; 1 bytes @ 0x4
  1211                           
  1212                           
  1213                           ; 1 bytes @ 0x4
  1214  0074                     	ds	1
  1215  0075                     ??_Lcd_Write_String:	
  1216  0075                     ___lwmod@counter:	
  1217                           ; 1 bytes @ 0x5
  1218                           
  1219  0075                     ___lwdiv@quotient:	
  1220                           ; 1 bytes @ 0x5
  1221                           
  1222                           
  1223                           ; 2 bytes @ 0x5
  1224  0075                     	ds	1
  1225  0076                     Lcd_Set_Cursor@a:	
  1226  0076                     Lcd_Write_String@i:	
  1227                           ; 1 bytes @ 0x6
  1228                           
  1229                           
  1230                           ; 2 bytes @ 0x6
  1231  0076                     	ds	1
  1232  0077                     Lcd_Set_Cursor@z:	
  1233  0077                     ___lwdiv@counter:	
  1234                           ; 1 bytes @ 0x7
  1235                           
  1236                           
  1237                           ; 1 bytes @ 0x7
  1238  0077                     	ds	1
  1239  0078                     ?_utoa:	
  1240  0078                     Lcd_Set_Cursor@y:	
  1241                           ; 1 bytes @ 0x8
  1242                           
  1243  0078                     Lcd_Write_String@a:	
  1244                           ; 1 bytes @ 0x8
  1245                           
  1246  0078                     utoa@val:	
  1247                           ; 1 bytes @ 0x8
  1248                           
  1249                           
  1250                           ; 2 bytes @ 0x8
  1251  0078                     	ds	1
  1252  0079                     Lcd_Set_Cursor@temp:	
  1253                           
  1254                           ; 1 bytes @ 0x9
  1255  0079                     	ds	1
  1256  007A                     utoa@base:	
  1257                           
  1258                           ; 2 bytes @ 0xA
  1259  007A                     	ds	2
  1260  007C                     ??_utoa:	
  1261                           
  1262                           ; 1 bytes @ 0xC
  1263  007C                     	ds	1
  1264  007D                     ??_itoa:	
  1265                           
  1266                           ; 1 bytes @ 0xD
  1267  007D                     	ds	1
  1268  007E                     ??_Lcd_Write_Integer:	
  1269                           
  1270                           	psect	cstackBANK0
  1271  0020                     __pcstackBANK0:	
  1272                           ; 1 bytes @ 0xE
  1273                           
  1274  0020                     utoa@v:	
  1275                           
  1276                           ; 2 bytes @ 0x0
  1277  0020                     	ds	2
  1278  0022                     utoa@c:	
  1279                           
  1280                           ; 1 bytes @ 0x2
  1281  0022                     	ds	1
  1282  0023                     utoa@buf:	
  1283                           
  1284                           ; 1 bytes @ 0x3
  1285  0023                     	ds	1
  1286  0024                     ?_itoa:	
  1287  0024                     itoa@val:	
  1288                           ; 1 bytes @ 0x4
  1289                           
  1290                           
  1291                           ; 2 bytes @ 0x4
  1292  0024                     	ds	2
  1293  0026                     itoa@base:	
  1294                           
  1295                           ; 2 bytes @ 0x6
  1296  0026                     	ds	2
  1297  0028                     itoa@cp:	
  1298                           
  1299                           ; 1 bytes @ 0x8
  1300  0028                     	ds	1
  1301  0029                     itoa@buf:	
  1302                           
  1303                           ; 1 bytes @ 0x9
  1304  0029                     	ds	1
  1305  002A                     ?_Lcd_Write_Integer:	
  1306  002A                     Lcd_Write_Integer@v:	
  1307                           ; 1 bytes @ 0xA
  1308                           
  1309                           
  1310                           ; 2 bytes @ 0xA
  1311  002A                     	ds	2
  1312  002C                     Lcd_Write_Integer@buf:	
  1313                           
  1314                           ; 8 bytes @ 0xC
  1315  002C                     	ds	8
  1316  0034                     ??_main:	
  1317                           
  1318                           ; 1 bytes @ 0x14
  1319  0034                     	ds	2
  1320  0036                     main@result:	
  1321                           
  1322                           ; 2 bytes @ 0x16
  1323  0036                     	ds	2
  1324                           
  1325                           	psect	maintext
  1326  06D4                     __pmaintext:	
  1327 ;;
  1328 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1329 ;;
  1330 ;; *************** function _main *****************
  1331 ;; Defined at:
  1332 ;;		line 115 in file "Main.c"
  1333 ;; Parameters:    Size  Location     Type
  1334 ;;		None
  1335 ;; Auto vars:     Size  Location     Type
  1336 ;;  result          2   22[BANK0 ] int 
  1337 ;; Return value:  Size  Location     Type
  1338 ;;                  1    wreg      void 
  1339 ;; Registers used:
  1340 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1341 ;; Tracked objects:
  1342 ;;		On entry : B1F/0
  1343 ;;		On exit  : 0/0
  1344 ;;		Unchanged: 0/0
  1345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1347 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1348 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1349 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1350 ;;Total ram usage:        4 bytes
  1351 ;; Hardware stack levels required when called:    4
  1352 ;; This function calls:
  1353 ;;		_Lcd_Clear
  1354 ;;		_Lcd_Set_Cursor
  1355 ;;		_Lcd_Write_Integer
  1356 ;;		_initMain
  1357 ;; This function is called by:
  1358 ;;		Startup code after reset
  1359 ;; This function uses a non-reentrant model
  1360 ;;
  1361                           
  1362                           
  1363                           ;psect for function _main
  1364  06D4                     _main:	
  1365                           
  1366                           ;Main.c: 116: initMain();
  1367                           
  1368                           ;incstack = 0
  1369                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1370  06D4  3186  266E  3186   	fcall	_initMain
  1371  06D7                     l1097:	
  1372                           ;Main.c: 119: int result;
  1373                           ;Main.c: 121: while(1){
  1374                           
  1375                           
  1376                           ;Main.c: 124: ADCON0bits.ADON = 1;
  1377  06D7  0021               	movlb	1	; select bank1
  1378  06D8  141D               	bsf	29,0	;volatile
  1379                           
  1380                           ;Main.c: 127: _delay((unsigned long)((10)*(16000000/4000000.0)));
  1381  06D9  300D               	movlw	13
  1382  06DA                     u577:	
  1383  06DA  0B89               	decfsz	9,f
  1384  06DB  2EDA               	goto	u577
  1385  06DC  0000               	nop
  1386                           
  1387                           ;Main.c: 128: ADCON0bits.GO = 1;
  1388  06DD  0021               	movlb	1	; select bank1
  1389  06DE  149D               	bsf	29,1	;volatile
  1390  06DF                     l143:	
  1391                           ;Main.c: 129: while (ADCON0bits.GO_nDONE);
  1392                           
  1393  06DF  189D               	btfsc	29,1	;volatile
  1394  06E0  2EDF               	goto	l143
  1395                           
  1396                           ;Main.c: 132: result = ((ADRESH<<8)+ADRESL);
  1397  06E1  081C               	movf	28,w	;volatile
  1398  06E2  0020               	movlb	0	; select bank0
  1399  06E3  00B7               	movwf	main@result+1
  1400  06E4  0021               	movlb	1	; select bank1
  1401  06E5  081B               	movf	27,w	;volatile
  1402  06E6  0020               	movlb	0	; select bank0
  1403  06E7  00B6               	movwf	main@result
  1404                           
  1405                           ;Main.c: 135: Lcd_Set_Cursor(1,1);
  1406  06E8  01F3               	clrf	Lcd_Set_Cursor@b
  1407  06E9  0AF3               	incf	Lcd_Set_Cursor@b,f
  1408  06EA  3001               	movlw	1
  1409  06EB  3187  2710  3186   	fcall	_Lcd_Set_Cursor
  1410                           
  1411                           ;Main.c: 136: _delay((unsigned long)((5)*(16000000/4000.0)));
  1412  06EE  301A               	movlw	26
  1413  06EF  0020               	movlb	0	; select bank0
  1414  06F0  00B4               	movwf	??_main
  1415  06F1  30F8               	movlw	248
  1416  06F2                     u587:	
  1417  06F2  0B89               	decfsz	9,f
  1418  06F3  2EF2               	goto	u587
  1419  06F4  0BB4               	decfsz	??_main,f
  1420  06F5  2EF2               	goto	u587
  1421  06F6  0000               	nop
  1422                           
  1423                           ;Main.c: 137: Lcd_Write_Integer(result);
  1424  06F7  0020               	movlb	0	; select bank0
  1425  06F8  0837               	movf	main@result+1,w
  1426  06F9  00AB               	movwf	Lcd_Write_Integer@v+1
  1427  06FA  0836               	movf	main@result,w
  1428  06FB  00AA               	movwf	Lcd_Write_Integer@v
  1429  06FC  3185  2599  3186   	fcall	_Lcd_Write_Integer
  1430                           
  1431                           ;Main.c: 140: _delay((unsigned long)((1000)*(16000000/4000.0)));
  1432  06FF  3015               	movlw	21
  1433  0700  0020               	movlb	0	; select bank0
  1434  0701  00B5               	movwf	??_main+1
  1435  0702  304B               	movlw	75
  1436  0703  00B4               	movwf	??_main
  1437  0704  30BE               	movlw	190
  1438  0705                     u597:	
  1439  0705  0B89               	decfsz	9,f
  1440  0706  2F05               	goto	u597
  1441  0707  0BB4               	decfsz	??_main,f
  1442  0708  2F05               	goto	u597
  1443  0709  0BB5               	decfsz	??_main+1,f
  1444  070A  2F05               	goto	u597
  1445  070B  0000               	nop
  1446                           
  1447                           ;Main.c: 141: Lcd_Clear();
  1448  070C  3185  2588  3186   	fcall	_Lcd_Clear
  1449  070F  2ED7               	goto	l1097
  1450  0710                     __end_of_main:	
  1451                           ;Main.c: 142: }
  1452                           ;Main.c: 144: return;
  1453                           
  1454                           
  1455                           	psect	text1
  1456  066E                     __ptext1:	
  1457 ;; *************** function _initMain *****************
  1458 ;; Defined at:
  1459 ;;		line 52 in file "Main.c"
  1460 ;; Parameters:    Size  Location     Type
  1461 ;;		None
  1462 ;; Auto vars:     Size  Location     Type
  1463 ;;		None
  1464 ;; Return value:  Size  Location     Type
  1465 ;;                  1    wreg      void 
  1466 ;; Registers used:
  1467 ;;		wreg, status,2, status,0, pclath, cstack
  1468 ;; Tracked objects:
  1469 ;;		On entry : 0/0
  1470 ;;		On exit  : 0/0
  1471 ;;		Unchanged: 0/0
  1472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1475 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1476 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1477 ;;Total ram usage:        2 bytes
  1478 ;; Hardware stack levels used:    1
  1479 ;; Hardware stack levels required when called:    3
  1480 ;; This function calls:
  1481 ;;		_Lcd_Clear
  1482 ;;		_Lcd_Init
  1483 ;;		_internal_16
  1484 ;; This function is called by:
  1485 ;;		_main
  1486 ;; This function uses a non-reentrant model
  1487 ;;
  1488                           
  1489                           
  1490                           ;psect for function _initMain
  1491  066E                     _initMain:	
  1492                           
  1493                           ;Main.c: 54: internal_16();
  1494                           
  1495                           ;incstack = 0
  1496                           ; Regs used in _initMain: [wreg+status,2+status,0+pclath+cstack]
  1497  066E  3185  2590  3186   	fcall	_internal_16
  1498                           
  1499                           ;Main.c: 57: TRISDbits.TRISD1 = 0;
  1500  0671  0021               	movlb	1	; select bank1
  1501  0672  108F               	bcf	15,1	;volatile
  1502                           
  1503                           ;Main.c: 60: LATDbits.LATD1 = 0;
  1504  0673  0022               	movlb	2	; select bank2
  1505  0674  108F               	bcf	15,1	;volatile
  1506                           
  1507                           ;Main.c: 63: TRISD = 0;
  1508  0675  0021               	movlb	1	; select bank1
  1509  0676  018F               	clrf	15	;volatile
  1510                           
  1511                           ;Main.c: 64: ANSELD = 0;
  1512  0677  0023               	movlb	3	; select bank3
  1513  0678  018F               	clrf	15	;volatile
  1514                           
  1515                           ;Main.c: 67: TRISBbits.TRISB0 = 1;
  1516  0679  0021               	movlb	1	; select bank1
  1517  067A  140D               	bsf	13,0	;volatile
  1518                           
  1519                           ;Main.c: 70: ANSELBbits.ANSB0 = 0;
  1520  067B  0023               	movlb	3	; select bank3
  1521  067C  100D               	bcf	13,0	;volatile
  1522                           
  1523                           ;Main.c: 73: TRISAbits.TRISA0 = 1;
  1524  067D  0021               	movlb	1	; select bank1
  1525  067E  140C               	bsf	12,0	;volatile
  1526                           
  1527                           ;Main.c: 76: ANSELAbits.ANSA0 = 1;
  1528  067F  0023               	movlb	3	; select bank3
  1529  0680  140C               	bsf	12,0	;volatile
  1530                           
  1531                           ;Main.c: 83: ADCON1bits.ADCS = 0b010;
  1532  0681  0021               	movlb	1	; select bank1
  1533  0682  081E               	movf	30,w	;volatile
  1534  0683  398F               	andlw	-113
  1535  0684  3820               	iorlw	32
  1536  0685  009E               	movwf	30	;volatile
  1537                           
  1538                           ;Main.c: 86: ADCON1bits.ADFM = 1;
  1539  0686  179E               	bsf	30,7	;volatile
  1540                           
  1541                           ;Main.c: 89: ADCON1bits.ADNREF = 0;
  1542  0687  111E               	bcf	30,2	;volatile
  1543                           
  1544                           ;Main.c: 92: ADCON1bits.ADPREF = 0b00;
  1545  0688  30FC               	movlw	-4
  1546  0689  059E               	andwf	30,f	;volatile
  1547                           
  1548                           ;Main.c: 95: ADCON0bits.CHS = 0b00000;
  1549  068A  3083               	movlw	-125
  1550  068B  059D               	andwf	29,f	;volatile
  1551                           
  1552                           ;Main.c: 98: ADRESL = 0;
  1553  068C  019B               	clrf	27	;volatile
  1554                           
  1555                           ;Main.c: 99: ADRESH = 0;
  1556  068D  019C               	clrf	28	;volatile
  1557                           
  1558                           ;Main.c: 102: Lcd_Init();
  1559  068E  3187  2750  3186   	fcall	_Lcd_Init
  1560                           
  1561                           ;Main.c: 103: _delay((unsigned long)((100)*(16000000/4000.0)));
  1562  0691  3003               	movlw	3
  1563  0692  00F5               	movwf	??_initMain+1
  1564  0693  3008               	movlw	8
  1565  0694  00F4               	movwf	??_initMain
  1566  0695  3077               	movlw	119
  1567  0696                     u607:	
  1568  0696  0B89               	decfsz	9,f
  1569  0697  2E96               	goto	u607
  1570  0698  0BF4               	decfsz	??_initMain,f
  1571  0699  2E96               	goto	u607
  1572  069A  0BF5               	decfsz	??_initMain+1,f
  1573  069B  2E96               	goto	u607
  1574  069C  0000               	nop
  1575                           
  1576                           ;Main.c: 104: Lcd_Clear();
  1577  069D  3185  2588         	fcall	_Lcd_Clear
  1578  069F  0008               	return
  1579  06A0                     __end_of_initMain:	
  1580                           
  1581                           	psect	text2
  1582  0590                     __ptext2:	
  1583 ;; *************** function _internal_16 *****************
  1584 ;; Defined at:
  1585 ;;		line 56 in file "16F1717_Internal.c"
  1586 ;; Parameters:    Size  Location     Type
  1587 ;;		None
  1588 ;; Auto vars:     Size  Location     Type
  1589 ;;		None
  1590 ;; Return value:  Size  Location     Type
  1591 ;;                  1    wreg      void 
  1592 ;; Registers used:
  1593 ;;		None
  1594 ;; Tracked objects:
  1595 ;;		On entry : 0/0
  1596 ;;		On exit  : 0/0
  1597 ;;		Unchanged: 0/0
  1598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1603 ;;Total ram usage:        0 bytes
  1604 ;; Hardware stack levels used:    1
  1605 ;; This function calls:
  1606 ;;		Nothing
  1607 ;; This function is called by:
  1608 ;;		_initMain
  1609 ;; This function uses a non-reentrant model
  1610 ;;
  1611                           
  1612                           
  1613                           ;psect for function _internal_16
  1614  0590                     _internal_16:	
  1615                           
  1616                           ;16F1717_Internal.c: 58: SCS0 = 0;
  1617                           
  1618                           ;incstack = 0
  1619                           ; Regs used in _internal_16: []
  1620  0590  0021               	movlb	1	; select bank1
  1621  0591  1019               	bcf	25,0	;volatile
  1622                           
  1623                           ;16F1717_Internal.c: 59: SCS1 = 0;
  1624  0592  1099               	bcf	25,1	;volatile
  1625                           
  1626                           ;16F1717_Internal.c: 62: IRCF0 = 1;
  1627  0593  1599               	bsf	25,3	;volatile
  1628                           
  1629                           ;16F1717_Internal.c: 63: IRCF1 = 1;
  1630  0594  1619               	bsf	25,4	;volatile
  1631                           
  1632                           ;16F1717_Internal.c: 64: IRCF2 = 1;
  1633  0595  1699               	bsf	25,5	;volatile
  1634                           
  1635                           ;16F1717_Internal.c: 65: IRCF3 = 1;
  1636  0596  1719               	bsf	25,6	;volatile
  1637                           
  1638                           ;16F1717_Internal.c: 68: SPLLEN = 0;
  1639  0597  1399               	bcf	25,7	;volatile
  1640  0598  0008               	return
  1641  0599                     __end_of_internal_16:	
  1642                           
  1643                           	psect	text3
  1644  0750                     __ptext3:	
  1645 ;; *************** function _Lcd_Init *****************
  1646 ;; Defined at:
  1647 ;;		line 119 in file "LCD.c"
  1648 ;; Parameters:    Size  Location     Type
  1649 ;;		None
  1650 ;; Auto vars:     Size  Location     Type
  1651 ;;		None
  1652 ;; Return value:  Size  Location     Type
  1653 ;;                  1    wreg      void 
  1654 ;; Registers used:
  1655 ;;		wreg, status,2, status,0, pclath, cstack
  1656 ;; Tracked objects:
  1657 ;;		On entry : 0/0
  1658 ;;		On exit  : 0/0
  1659 ;;		Unchanged: 0/0
  1660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1663 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1664 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1665 ;;Total ram usage:        1 bytes
  1666 ;; Hardware stack levels used:    1
  1667 ;; Hardware stack levels required when called:    2
  1668 ;; This function calls:
  1669 ;;		_Lcd_Cmd
  1670 ;;		_Lcd_Port
  1671 ;; This function is called by:
  1672 ;;		_initMain
  1673 ;; This function uses a non-reentrant model
  1674 ;;
  1675                           
  1676                           
  1677                           ;psect for function _Lcd_Init
  1678  0750                     _Lcd_Init:	
  1679                           
  1680                           ;LCD.c: 121: Lcd_Port(0x00);
  1681                           
  1682                           ;incstack = 0
  1683                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1684  0750  3000               	movlw	0
  1685  0751  3185  25BD  3187   	fcall	_Lcd_Port
  1686                           
  1687                           ;LCD.c: 122: _delay((unsigned long)((20)*(16000000/4000.0)));
  1688  0754  3068               	movlw	104
  1689  0755  00F3               	movwf	??_Lcd_Init
  1690  0756  30E4               	movlw	228
  1691  0757                     u617:	
  1692  0757  0B89               	decfsz	9,f
  1693  0758  2F57               	goto	u617
  1694  0759  0BF3               	decfsz	??_Lcd_Init,f
  1695  075A  2F57               	goto	u617
  1696  075B  3200               	nop2
  1697                           
  1698                           ;LCD.c: 123: Lcd_Cmd(0x03);
  1699  075C  3003               	movlw	3
  1700  075D  3185  25A9  3187   	fcall	_Lcd_Cmd
  1701                           
  1702                           ;LCD.c: 124: _delay((unsigned long)((5)*(16000000/4000.0)));
  1703  0760  301A               	movlw	26
  1704  0761  00F3               	movwf	??_Lcd_Init
  1705  0762  30F8               	movlw	248
  1706  0763                     u627:	
  1707  0763  0B89               	decfsz	9,f
  1708  0764  2F63               	goto	u627
  1709  0765  0BF3               	decfsz	??_Lcd_Init,f
  1710  0766  2F63               	goto	u627
  1711  0767  3200               	nop2
  1712                           
  1713                           ;LCD.c: 125: Lcd_Cmd(0x03);
  1714  0768  3003               	movlw	3
  1715  0769  3185  25A9  3187   	fcall	_Lcd_Cmd
  1716                           
  1717                           ;LCD.c: 126: _delay((unsigned long)((11)*(16000000/4000.0)));
  1718  076C  303A               	movlw	58
  1719  076D  00F3               	movwf	??_Lcd_Init
  1720  076E  3023               	movlw	35
  1721  076F                     u637:	
  1722  076F  0B89               	decfsz	9,f
  1723  0770  2F6F               	goto	u637
  1724  0771  0BF3               	decfsz	??_Lcd_Init,f
  1725  0772  2F6F               	goto	u637
  1726  0773  0000               	nop
  1727                           
  1728                           ;LCD.c: 127: Lcd_Cmd(0x03);
  1729  0774  3003               	movlw	3
  1730  0775  3185  25A9  3187   	fcall	_Lcd_Cmd
  1731                           
  1732                           ;LCD.c: 129: Lcd_Cmd(0x02);
  1733  0778  3002               	movlw	2
  1734  0779  3185  25A9  3187   	fcall	_Lcd_Cmd
  1735                           
  1736                           ;LCD.c: 130: Lcd_Cmd(0x02);
  1737  077C  3002               	movlw	2
  1738  077D  3185  25A9  3187   	fcall	_Lcd_Cmd
  1739                           
  1740                           ;LCD.c: 131: Lcd_Cmd(0x08);
  1741  0780  3008               	movlw	8
  1742  0781  3185  25A9  3187   	fcall	_Lcd_Cmd
  1743                           
  1744                           ;LCD.c: 132: Lcd_Cmd(0x00);
  1745  0784  3000               	movlw	0
  1746  0785  3185  25A9  3187   	fcall	_Lcd_Cmd
  1747                           
  1748                           ;LCD.c: 133: Lcd_Cmd(0x0C);
  1749  0788  300C               	movlw	12
  1750  0789  3185  25A9  3187   	fcall	_Lcd_Cmd
  1751                           
  1752                           ;LCD.c: 134: Lcd_Cmd(0x00);
  1753  078C  3000               	movlw	0
  1754  078D  3185  25A9  3187   	fcall	_Lcd_Cmd
  1755                           
  1756                           ;LCD.c: 135: Lcd_Cmd(0x06);
  1757  0790  3006               	movlw	6
  1758  0791  3185  25A9         	fcall	_Lcd_Cmd
  1759  0793  0008               	return
  1760  0794                     __end_of_Lcd_Init:	
  1761                           
  1762                           	psect	text4
  1763  0588                     __ptext4:	
  1764 ;; *************** function _Lcd_Clear *****************
  1765 ;; Defined at:
  1766 ;;		line 76 in file "LCD.c"
  1767 ;; Parameters:    Size  Location     Type
  1768 ;;		None
  1769 ;; Auto vars:     Size  Location     Type
  1770 ;;		None
  1771 ;; Return value:  Size  Location     Type
  1772 ;;                  1    wreg      void 
  1773 ;; Registers used:
  1774 ;;		wreg, status,2, status,0, pclath, cstack
  1775 ;; Tracked objects:
  1776 ;;		On entry : 0/0
  1777 ;;		On exit  : 0/0
  1778 ;;		Unchanged: 0/0
  1779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1784 ;;Total ram usage:        0 bytes
  1785 ;; Hardware stack levels used:    1
  1786 ;; Hardware stack levels required when called:    2
  1787 ;; This function calls:
  1788 ;;		_Lcd_Cmd
  1789 ;; This function is called by:
  1790 ;;		_initMain
  1791 ;;		_main
  1792 ;; This function uses a non-reentrant model
  1793 ;;
  1794                           
  1795                           
  1796                           ;psect for function _Lcd_Clear
  1797  0588                     _Lcd_Clear:	
  1798                           
  1799                           ;LCD.c: 78: Lcd_Cmd(0);
  1800                           
  1801                           ;incstack = 0
  1802                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1803  0588  3000               	movlw	0
  1804  0589  3185  25A9  3185   	fcall	_Lcd_Cmd
  1805                           
  1806                           ;LCD.c: 79: Lcd_Cmd(1);
  1807  058C  3001               	movlw	1
  1808  058D  3185  25A9         	fcall	_Lcd_Cmd
  1809  058F  0008               	return
  1810  0590                     __end_of_Lcd_Clear:	
  1811                           
  1812                           	psect	text5
  1813  0599                     __ptext5:	
  1814 ;; *************** function _Lcd_Write_Integer *****************
  1815 ;; Defined at:
  1816 ;;		line 213 in file "LCD.c"
  1817 ;; Parameters:    Size  Location     Type
  1818 ;;  v               2   10[BANK0 ] int 
  1819 ;; Auto vars:     Size  Location     Type
  1820 ;;  buf             8   12[BANK0 ] unsigned char [8]
  1821 ;; Return value:  Size  Location     Type
  1822 ;;                  1    wreg      void 
  1823 ;; Registers used:
  1824 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1825 ;; Tracked objects:
  1826 ;;		On entry : 0/0
  1827 ;;		On exit  : 0/0
  1828 ;;		Unchanged: 0/0
  1829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1830 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1831 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1833 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1834 ;;Total ram usage:       10 bytes
  1835 ;; Hardware stack levels used:    1
  1836 ;; Hardware stack levels required when called:    3
  1837 ;; This function calls:
  1838 ;;		_Lcd_Write_String
  1839 ;;		_itoa
  1840 ;; This function is called by:
  1841 ;;		_main
  1842 ;; This function uses a non-reentrant model
  1843 ;;
  1844                           
  1845                           
  1846                           ;psect for function _Lcd_Write_Integer
  1847  0599                     _Lcd_Write_Integer:	
  1848                           
  1849                           ;LCD.c: 215: unsigned char buf[8];
  1850                           ;LCD.c: 217: Lcd_Write_String(itoa(buf, v, 10));
  1851                           
  1852                           ;incstack = 0
  1853                           ; Regs used in _Lcd_Write_Integer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1854  0599  0020               	movlb	0	; select bank0
  1855  059A  082B               	movf	Lcd_Write_Integer@v+1,w
  1856  059B  00A5               	movwf	itoa@val+1
  1857  059C  082A               	movf	Lcd_Write_Integer@v,w
  1858  059D  00A4               	movwf	itoa@val
  1859  059E  300A               	movlw	10
  1860  059F  00A6               	movwf	itoa@base
  1861  05A0  3000               	movlw	0
  1862  05A1  00A7               	movwf	itoa@base+1
  1863  05A2  302C               	movlw	(low (Lcd_Write_Integer@buf| 0))& (0+255)
  1864  05A3  3185  25F0  3185   	fcall	_itoa
  1865  05A6  3185  25D5         	fcall	_Lcd_Write_String
  1866  05A8  0008               	return
  1867  05A9                     __end_of_Lcd_Write_Integer:	
  1868                           
  1869                           	psect	text6
  1870  05F0                     __ptext6:	
  1871 ;; *************** function _itoa *****************
  1872 ;; Defined at:
  1873 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\itoa.c"
  1874 ;; Parameters:    Size  Location     Type
  1875 ;;  buf             1    wreg     PTR unsigned char 
  1876 ;;		 -> Lcd_Write_Integer@buf(8), 
  1877 ;;  val             2    4[BANK0 ] int 
  1878 ;;  base            2    6[BANK0 ] int 
  1879 ;; Auto vars:     Size  Location     Type
  1880 ;;  buf             1    9[BANK0 ] PTR unsigned char 
  1881 ;;		 -> Lcd_Write_Integer@buf(8), 
  1882 ;;  cp              1    8[BANK0 ] PTR unsigned char 
  1883 ;;		 -> Lcd_Write_Integer@buf(8), 
  1884 ;; Return value:  Size  Location     Type
  1885 ;;                  1    wreg      PTR unsigned char 
  1886 ;; Registers used:
  1887 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1888 ;; Tracked objects:
  1889 ;;		On entry : 0/0
  1890 ;;		On exit  : 0/0
  1891 ;;		Unchanged: 0/0
  1892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1893 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1894 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1895 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1896 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1897 ;;Total ram usage:        7 bytes
  1898 ;; Hardware stack levels used:    1
  1899 ;; Hardware stack levels required when called:    2
  1900 ;; This function calls:
  1901 ;;		_utoa
  1902 ;; This function is called by:
  1903 ;;		_Lcd_Write_Integer
  1904 ;; This function uses a non-reentrant model
  1905 ;;
  1906                           
  1907                           
  1908                           ;psect for function _itoa
  1909  05F0                     _itoa:	
  1910                           
  1911                           ;incstack = 0
  1912                           ; Regs used in _itoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1913                           ;itoa@buf stored from wreg
  1914  05F0  0020               	movlb	0	; select bank0
  1915  05F1  00A9               	movwf	itoa@buf
  1916  05F2  0829               	movf	itoa@buf,w
  1917  05F3  00FD               	movwf	??_itoa
  1918  05F4  087D               	movf	??_itoa,w
  1919  05F5  00A8               	movwf	itoa@cp
  1920  05F6  1FA5               	btfss	itoa@val+1,7
  1921  05F7  2E08               	goto	l1021
  1922  05F8  302D               	movlw	45
  1923  05F9  00FD               	movwf	??_itoa
  1924  05FA  0829               	movf	itoa@buf,w
  1925  05FB  0086               	movwf	6
  1926  05FC  0187               	clrf	7
  1927  05FD  087D               	movf	??_itoa,w
  1928  05FE  0081               	movwf	1
  1929  05FF  3001               	movlw	1
  1930  0600  00FD               	movwf	??_itoa
  1931  0601  087D               	movf	??_itoa,w
  1932  0602  07A9               	addwf	itoa@buf,f
  1933  0603  09A4               	comf	itoa@val,f
  1934  0604  09A5               	comf	itoa@val+1,f
  1935  0605  0AA4               	incf	itoa@val,f
  1936  0606  1903               	skipnz
  1937  0607  0AA5               	incf	itoa@val+1,f
  1938  0608                     l1021:	
  1939  0608  0825               	movf	itoa@val+1,w
  1940  0609  00F9               	movwf	utoa@val+1
  1941  060A  0824               	movf	itoa@val,w
  1942  060B  00F8               	movwf	utoa@val
  1943  060C  0827               	movf	itoa@base+1,w
  1944  060D  00FB               	movwf	utoa@base+1
  1945  060E  0826               	movf	itoa@base,w
  1946  060F  00FA               	movwf	utoa@base
  1947  0610  0829               	movf	itoa@buf,w
  1948  0611  3187  2794         	fcall	_utoa
  1949  0613  0020               	movlb	0	; select bank0
  1950  0614  0828               	movf	itoa@cp,w
  1951  0615  0008               	return
  1952  0616                     __end_of_itoa:	
  1953                           
  1954                           	psect	text7
  1955  0794                     __ptext7:	
  1956 ;; *************** function _utoa *****************
  1957 ;; Defined at:
  1958 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\itoa.c"
  1959 ;; Parameters:    Size  Location     Type
  1960 ;;  buf             1    wreg     PTR unsigned char 
  1961 ;;		 -> Lcd_Write_Integer@buf(8), 
  1962 ;;  val             2    8[COMMON] unsigned int 
  1963 ;;  base            2   10[COMMON] int 
  1964 ;; Auto vars:     Size  Location     Type
  1965 ;;  buf             1    3[BANK0 ] PTR unsigned char 
  1966 ;;		 -> Lcd_Write_Integer@buf(8), 
  1967 ;;  v               2    0[BANK0 ] unsigned int 
  1968 ;;  c               1    2[BANK0 ] unsigned char 
  1969 ;; Return value:  Size  Location     Type
  1970 ;;                  1    wreg      PTR unsigned char 
  1971 ;; Registers used:
  1972 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1973 ;; Tracked objects:
  1974 ;;		On entry : 0/0
  1975 ;;		On exit  : 0/0
  1976 ;;		Unchanged: 0/0
  1977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1978 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1979 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1980 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1981 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1982 ;;Total ram usage:        9 bytes
  1983 ;; Hardware stack levels used:    1
  1984 ;; Hardware stack levels required when called:    1
  1985 ;; This function calls:
  1986 ;;		___lwdiv
  1987 ;;		___lwmod
  1988 ;; This function is called by:
  1989 ;;		_itoa
  1990 ;; This function uses a non-reentrant model
  1991 ;;
  1992                           
  1993                           
  1994                           ;psect for function _utoa
  1995  0794                     _utoa:	
  1996                           
  1997                           ;incstack = 0
  1998                           ; Regs used in _utoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1999                           ;utoa@buf stored from wreg
  2000  0794  0020               	movlb	0	; select bank0
  2001  0795  00A3               	movwf	utoa@buf
  2002  0796  0879               	movf	utoa@val+1,w
  2003  0797  00A1               	movwf	utoa@v+1
  2004  0798  0878               	movf	utoa@val,w
  2005  0799  00A0               	movwf	utoa@v
  2006  079A                     l961:	
  2007  079A  087B               	movf	utoa@base+1,w
  2008  079B  00F1               	movwf	___lwdiv@divisor+1
  2009  079C  087A               	movf	utoa@base,w
  2010  079D  00F0               	movwf	___lwdiv@divisor
  2011  079E  0821               	movf	utoa@v+1,w
  2012  079F  00F3               	movwf	___lwdiv@dividend+1
  2013  07A0  0820               	movf	utoa@v,w
  2014  07A1  00F2               	movwf	___lwdiv@dividend
  2015  07A2  3186  26A0  3187   	fcall	___lwdiv
  2016  07A5  0871               	movf	?___lwdiv+1,w
  2017  07A6  0020               	movlb	0	; select bank0
  2018  07A7  00A1               	movwf	utoa@v+1
  2019  07A8  0870               	movf	?___lwdiv,w
  2020  07A9  00A0               	movwf	utoa@v
  2021  07AA  3001               	movlw	1
  2022  07AB  00FC               	movwf	??_utoa
  2023  07AC  087C               	movf	??_utoa,w
  2024  07AD  07A3               	addwf	utoa@buf,f
  2025  07AE  0820               	movf	utoa@v,w
  2026  07AF  0421               	iorwf	utoa@v+1,w
  2027  07B0  1D03               	btfss	3,2
  2028  07B1  2F9A               	goto	l961
  2029  07B2  0823               	movf	utoa@buf,w
  2030  07B3  0086               	movwf	6
  2031  07B4  0187               	clrf	7
  2032  07B5  0181               	clrf	1
  2033  07B6  3001               	movlw	1
  2034  07B7  02A3               	subwf	utoa@buf,f
  2035  07B8                     l971:	
  2036  07B8  087B               	movf	utoa@base+1,w
  2037  07B9  00F1               	movwf	___lwmod@divisor+1
  2038  07BA  087A               	movf	utoa@base,w
  2039  07BB  00F0               	movwf	___lwmod@divisor
  2040  07BC  0879               	movf	utoa@val+1,w
  2041  07BD  00F3               	movwf	___lwmod@dividend+1
  2042  07BE  0878               	movf	utoa@val,w
  2043  07BF  00F2               	movwf	___lwmod@dividend
  2044  07C0  3186  2642  3187   	fcall	___lwmod
  2045  07C3  0870               	movf	?___lwmod,w
  2046  07C4  00FC               	movwf	??_utoa
  2047  07C5  087C               	movf	??_utoa,w
  2048  07C6  0020               	movlb	0	; select bank0
  2049  07C7  00A2               	movwf	utoa@c
  2050  07C8  087B               	movf	utoa@base+1,w
  2051  07C9  00F1               	movwf	___lwdiv@divisor+1
  2052  07CA  087A               	movf	utoa@base,w
  2053  07CB  00F0               	movwf	___lwdiv@divisor
  2054  07CC  0879               	movf	utoa@val+1,w
  2055  07CD  00F3               	movwf	___lwdiv@dividend+1
  2056  07CE  0878               	movf	utoa@val,w
  2057  07CF  00F2               	movwf	___lwdiv@dividend
  2058  07D0  3186  26A0  3187   	fcall	___lwdiv
  2059  07D3  0871               	movf	?___lwdiv+1,w
  2060  07D4  00F9               	movwf	utoa@val+1
  2061  07D5  0870               	movf	?___lwdiv,w
  2062  07D6  00F8               	movwf	utoa@val
  2063  07D7  300A               	movlw	10
  2064  07D8  0020               	movlb	0	; select bank0
  2065  07D9  0222               	subwf	utoa@c,w
  2066  07DA  1C03               	skipc
  2067  07DB  2FE0               	goto	l480
  2068  07DC  3007               	movlw	7
  2069  07DD  00FC               	movwf	??_utoa
  2070  07DE  087C               	movf	??_utoa,w
  2071  07DF  07A2               	addwf	utoa@c,f
  2072  07E0                     l480:	
  2073  07E0  3030               	movlw	48
  2074  07E1  00FC               	movwf	??_utoa
  2075  07E2  087C               	movf	??_utoa,w
  2076  07E3  07A2               	addwf	utoa@c,f
  2077  07E4  0822               	movf	utoa@c,w
  2078  07E5  00FC               	movwf	??_utoa
  2079  07E6  0823               	movf	utoa@buf,w
  2080  07E7  0086               	movwf	6
  2081  07E8  0187               	clrf	7
  2082  07E9  087C               	movf	??_utoa,w
  2083  07EA  0081               	movwf	1
  2084  07EB  3001               	movlw	1
  2085  07EC  02A3               	subwf	utoa@buf,f
  2086  07ED  0878               	movf	utoa@val,w
  2087  07EE  0479               	iorwf	utoa@val+1,w
  2088  07EF  1D03               	btfss	3,2
  2089  07F0  2FB8               	goto	l971
  2090                           
  2091                           ;	Return value of _utoa is never used
  2092  07F1  3001               	movlw	1
  2093  07F2  00FC               	movwf	??_utoa
  2094  07F3  087C               	movf	??_utoa,w
  2095  07F4  07A3               	addwf	utoa@buf,f
  2096  07F5  0008               	return
  2097  07F6                     __end_of_utoa:	
  2098                           
  2099                           	psect	text8
  2100  0642                     __ptext8:	
  2101 ;; *************** function ___lwmod *****************
  2102 ;; Defined at:
  2103 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
  2104 ;; Parameters:    Size  Location     Type
  2105 ;;  divisor         2    0[COMMON] unsigned int 
  2106 ;;  dividend        2    2[COMMON] unsigned int 
  2107 ;; Auto vars:     Size  Location     Type
  2108 ;;  counter         1    5[COMMON] unsigned char 
  2109 ;; Return value:  Size  Location     Type
  2110 ;;                  2    0[COMMON] unsigned int 
  2111 ;; Registers used:
  2112 ;;		wreg, status,2, status,0
  2113 ;; Tracked objects:
  2114 ;;		On entry : 0/0
  2115 ;;		On exit  : 0/0
  2116 ;;		Unchanged: 0/0
  2117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2118 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2119 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2120 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2121 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2122 ;;Total ram usage:        6 bytes
  2123 ;; Hardware stack levels used:    1
  2124 ;; This function calls:
  2125 ;;		Nothing
  2126 ;; This function is called by:
  2127 ;;		_utoa
  2128 ;; This function uses a non-reentrant model
  2129 ;;
  2130                           
  2131                           
  2132                           ;psect for function ___lwmod
  2133  0642                     ___lwmod:	
  2134                           
  2135                           ;incstack = 0
  2136                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2137  0642  0870               	movf	___lwmod@divisor,w
  2138  0643  0471               	iorwf	___lwmod@divisor+1,w
  2139  0644  1903               	btfsc	3,2
  2140  0645  2E69               	goto	l925
  2141  0646  01F5               	clrf	___lwmod@counter
  2142  0647  0AF5               	incf	___lwmod@counter,f
  2143  0648                     l915:	
  2144  0648  1BF1               	btfsc	___lwmod@divisor+1,7
  2145  0649  2E54               	goto	l917
  2146  064A  3001               	movlw	1
  2147  064B                     u415:	
  2148  064B  35F0               	lslf	___lwmod@divisor,f
  2149  064C  0DF1               	rlf	___lwmod@divisor+1,f
  2150  064D  0B89               	decfsz	9,f
  2151  064E  2E4B               	goto	u415
  2152  064F  3001               	movlw	1
  2153  0650  00F4               	movwf	??___lwmod
  2154  0651  0874               	movf	??___lwmod,w
  2155  0652  07F5               	addwf	___lwmod@counter,f
  2156  0653  2E48               	goto	l915
  2157  0654                     l917:	
  2158  0654  0871               	movf	___lwmod@divisor+1,w
  2159  0655  0273               	subwf	___lwmod@dividend+1,w
  2160  0656  1D03               	skipz
  2161  0657  2E5A               	goto	u435
  2162  0658  0870               	movf	___lwmod@divisor,w
  2163  0659  0272               	subwf	___lwmod@dividend,w
  2164  065A                     u435:	
  2165  065A  1C03               	skipc
  2166  065B  2E60               	goto	l921
  2167  065C  0870               	movf	___lwmod@divisor,w
  2168  065D  02F2               	subwf	___lwmod@dividend,f
  2169  065E  0871               	movf	___lwmod@divisor+1,w
  2170  065F  3BF3               	subwfb	___lwmod@dividend+1,f
  2171  0660                     l921:	
  2172  0660  3001               	movlw	1
  2173  0661                     u445:	
  2174  0661  36F1               	lsrf	___lwmod@divisor+1,f
  2175  0662  0CF0               	rrf	___lwmod@divisor,f
  2176  0663  0B89               	decfsz	9,f
  2177  0664  2E61               	goto	u445
  2178  0665  3001               	movlw	1
  2179  0666  02F5               	subwf	___lwmod@counter,f
  2180  0667  1D03               	btfss	3,2
  2181  0668  2E54               	goto	l917
  2182  0669                     l925:	
  2183  0669  0873               	movf	___lwmod@dividend+1,w
  2184  066A  00F1               	movwf	?___lwmod+1
  2185  066B  0872               	movf	___lwmod@dividend,w
  2186  066C  00F0               	movwf	?___lwmod
  2187  066D  0008               	return
  2188  066E                     __end_of___lwmod:	
  2189                           
  2190                           	psect	text9
  2191  06A0                     __ptext9:	
  2192 ;; *************** function ___lwdiv *****************
  2193 ;; Defined at:
  2194 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  2195 ;; Parameters:    Size  Location     Type
  2196 ;;  divisor         2    0[COMMON] unsigned int 
  2197 ;;  dividend        2    2[COMMON] unsigned int 
  2198 ;; Auto vars:     Size  Location     Type
  2199 ;;  quotient        2    5[COMMON] unsigned int 
  2200 ;;  counter         1    7[COMMON] unsigned char 
  2201 ;; Return value:  Size  Location     Type
  2202 ;;                  2    0[COMMON] unsigned int 
  2203 ;; Registers used:
  2204 ;;		wreg, status,2, status,0
  2205 ;; Tracked objects:
  2206 ;;		On entry : 0/0
  2207 ;;		On exit  : 0/0
  2208 ;;		Unchanged: 0/0
  2209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2210 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2211 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2212 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2213 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2214 ;;Total ram usage:        8 bytes
  2215 ;; Hardware stack levels used:    1
  2216 ;; This function calls:
  2217 ;;		Nothing
  2218 ;; This function is called by:
  2219 ;;		_utoa
  2220 ;; This function uses a non-reentrant model
  2221 ;;
  2222                           
  2223                           
  2224                           ;psect for function ___lwdiv
  2225  06A0                     ___lwdiv:	
  2226                           
  2227                           ;incstack = 0
  2228                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2229  06A0  01F5               	clrf	___lwdiv@quotient
  2230  06A1  01F6               	clrf	___lwdiv@quotient+1
  2231  06A2  0870               	movf	___lwdiv@divisor,w
  2232  06A3  0471               	iorwf	___lwdiv@divisor+1,w
  2233  06A4  1903               	btfsc	3,2
  2234  06A5  2ECF               	goto	l903
  2235  06A6  01F7               	clrf	___lwdiv@counter
  2236  06A7  0AF7               	incf	___lwdiv@counter,f
  2237  06A8                     l891:	
  2238  06A8  1BF1               	btfsc	___lwdiv@divisor+1,7
  2239  06A9  2EB4               	goto	l893
  2240  06AA  3001               	movlw	1
  2241  06AB                     u345:	
  2242  06AB  35F0               	lslf	___lwdiv@divisor,f
  2243  06AC  0DF1               	rlf	___lwdiv@divisor+1,f
  2244  06AD  0B89               	decfsz	9,f
  2245  06AE  2EAB               	goto	u345
  2246  06AF  3001               	movlw	1
  2247  06B0  00F4               	movwf	??___lwdiv
  2248  06B1  0874               	movf	??___lwdiv,w
  2249  06B2  07F7               	addwf	___lwdiv@counter,f
  2250  06B3  2EA8               	goto	l891
  2251  06B4                     l893:	
  2252  06B4  3001               	movlw	1
  2253  06B5                     u365:	
  2254  06B5  35F5               	lslf	___lwdiv@quotient,f
  2255  06B6  0DF6               	rlf	___lwdiv@quotient+1,f
  2256  06B7  0B89               	decfsz	9,f
  2257  06B8  2EB5               	goto	u365
  2258  06B9  0871               	movf	___lwdiv@divisor+1,w
  2259  06BA  0273               	subwf	___lwdiv@dividend+1,w
  2260  06BB  1D03               	skipz
  2261  06BC  2EBF               	goto	u375
  2262  06BD  0870               	movf	___lwdiv@divisor,w
  2263  06BE  0272               	subwf	___lwdiv@dividend,w
  2264  06BF                     u375:	
  2265  06BF  1C03               	skipc
  2266  06C0  2EC6               	goto	l899
  2267  06C1  0870               	movf	___lwdiv@divisor,w
  2268  06C2  02F2               	subwf	___lwdiv@dividend,f
  2269  06C3  0871               	movf	___lwdiv@divisor+1,w
  2270  06C4  3BF3               	subwfb	___lwdiv@dividend+1,f
  2271  06C5  1475               	bsf	___lwdiv@quotient,0
  2272  06C6                     l899:	
  2273  06C6  3001               	movlw	1
  2274  06C7                     u385:	
  2275  06C7  36F1               	lsrf	___lwdiv@divisor+1,f
  2276  06C8  0CF0               	rrf	___lwdiv@divisor,f
  2277  06C9  0B89               	decfsz	9,f
  2278  06CA  2EC7               	goto	u385
  2279  06CB  3001               	movlw	1
  2280  06CC  02F7               	subwf	___lwdiv@counter,f
  2281  06CD  1D03               	btfss	3,2
  2282  06CE  2EB4               	goto	l893
  2283  06CF                     l903:	
  2284  06CF  0876               	movf	___lwdiv@quotient+1,w
  2285  06D0  00F1               	movwf	?___lwdiv+1
  2286  06D1  0875               	movf	___lwdiv@quotient,w
  2287  06D2  00F0               	movwf	?___lwdiv
  2288  06D3  0008               	return
  2289  06D4                     __end_of___lwdiv:	
  2290                           
  2291                           	psect	text10
  2292  05D5                     __ptext10:	
  2293 ;; *************** function _Lcd_Write_String *****************
  2294 ;; Defined at:
  2295 ;;		line 170 in file "LCD.c"
  2296 ;; Parameters:    Size  Location     Type
  2297 ;;  a               1    wreg     PTR const unsigned char 
  2298 ;;		 -> ftoa@buf(17), Lcd_Write_Integer@buf(8), 
  2299 ;; Auto vars:     Size  Location     Type
  2300 ;;  a               1    8[COMMON] PTR const unsigned char 
  2301 ;;		 -> ftoa@buf(17), Lcd_Write_Integer@buf(8), 
  2302 ;;  i               2    6[COMMON] int 
  2303 ;; Return value:  Size  Location     Type
  2304 ;;                  1    wreg      void 
  2305 ;; Registers used:
  2306 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2307 ;; Tracked objects:
  2308 ;;		On entry : 0/0
  2309 ;;		On exit  : 0/0
  2310 ;;		Unchanged: 0/0
  2311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2313 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2314 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2315 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2316 ;;Total ram usage:        4 bytes
  2317 ;; Hardware stack levels used:    1
  2318 ;; Hardware stack levels required when called:    2
  2319 ;; This function calls:
  2320 ;;		_Lcd_Write_Char
  2321 ;; This function is called by:
  2322 ;;		_Lcd_Write_Integer
  2323 ;;		_Lcd_Write_Float
  2324 ;; This function uses a non-reentrant model
  2325 ;;
  2326                           
  2327                           
  2328                           ;psect for function _Lcd_Write_String
  2329  05D5                     _Lcd_Write_String:	
  2330                           
  2331                           ;incstack = 0
  2332                           ; Regs used in _Lcd_Write_String: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2333                           ;Lcd_Write_String@a stored from wreg
  2334  05D5  00F8               	movwf	Lcd_Write_String@a
  2335                           
  2336                           ;LCD.c: 172: int i;
  2337                           ;LCD.c: 173: for(i=0;a[i]!='\0';i++)
  2338  05D6  01F6               	clrf	Lcd_Write_String@i
  2339  05D7  01F7               	clrf	Lcd_Write_String@i+1
  2340  05D8                     l1009:	
  2341  05D8  0876               	movf	Lcd_Write_String@i,w
  2342  05D9  0778               	addwf	Lcd_Write_String@a,w
  2343  05DA  00F5               	movwf	??_Lcd_Write_String
  2344  05DB  0875               	movf	??_Lcd_Write_String,w
  2345  05DC  0086               	movwf	6
  2346  05DD  0187               	clrf	7
  2347  05DE  0801               	movf	1,w
  2348  05DF  1903               	btfsc	3,2
  2349  05E0  0008               	return
  2350                           
  2351                           ;LCD.c: 174: Lcd_Write_Char(a[i]);
  2352  05E1  0876               	movf	Lcd_Write_String@i,w
  2353  05E2  0778               	addwf	Lcd_Write_String@a,w
  2354  05E3  00F5               	movwf	??_Lcd_Write_String
  2355  05E4  0875               	movf	??_Lcd_Write_String,w
  2356  05E5  0086               	movwf	6
  2357  05E6  0187               	clrf	7
  2358  05E7  0801               	movf	1,w
  2359  05E8  3186  2616  3185   	fcall	_Lcd_Write_Char
  2360  05EB  3001               	movlw	1
  2361  05EC  07F6               	addwf	Lcd_Write_String@i,f
  2362  05ED  3000               	movlw	0
  2363  05EE  3DF7               	addwfc	Lcd_Write_String@i+1,f
  2364  05EF  2DD8               	goto	l1009
  2365  05F0                     __end_of_Lcd_Write_String:	
  2366                           
  2367                           	psect	text11
  2368  0616                     __ptext11:	
  2369 ;; *************** function _Lcd_Write_Char *****************
  2370 ;; Defined at:
  2371 ;;		line 146 in file "LCD.c"
  2372 ;; Parameters:    Size  Location     Type
  2373 ;;  a               1    wreg     unsigned char 
  2374 ;; Auto vars:     Size  Location     Type
  2375 ;;  a               1    4[COMMON] unsigned char 
  2376 ;;  y               1    3[COMMON] unsigned char 
  2377 ;;  temp            1    2[COMMON] unsigned char 
  2378 ;; Return value:  Size  Location     Type
  2379 ;;                  1    wreg      void 
  2380 ;; Registers used:
  2381 ;;		wreg, status,2, status,0, pclath, cstack
  2382 ;; Tracked objects:
  2383 ;;		On entry : 0/0
  2384 ;;		On exit  : 0/0
  2385 ;;		Unchanged: 0/0
  2386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2388 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2389 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2390 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2391 ;;Total ram usage:        4 bytes
  2392 ;; Hardware stack levels used:    1
  2393 ;; Hardware stack levels required when called:    1
  2394 ;; This function calls:
  2395 ;;		_Lcd_Port
  2396 ;; This function is called by:
  2397 ;;		_Lcd_Write_String
  2398 ;; This function uses a non-reentrant model
  2399 ;;
  2400                           
  2401                           
  2402                           ;psect for function _Lcd_Write_Char
  2403  0616                     _Lcd_Write_Char:	
  2404                           
  2405                           ;incstack = 0
  2406                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2407                           ;Lcd_Write_Char@a stored from wreg
  2408  0616  00F4               	movwf	Lcd_Write_Char@a
  2409                           
  2410                           ;LCD.c: 148: char temp,y;
  2411                           ;LCD.c: 149: temp = a&0x0F;
  2412  0617  0874               	movf	Lcd_Write_Char@a,w
  2413  0618  390F               	andlw	15
  2414  0619  00F1               	movwf	??_Lcd_Write_Char
  2415  061A  0871               	movf	??_Lcd_Write_Char,w
  2416  061B  00F2               	movwf	Lcd_Write_Char@temp
  2417                           
  2418                           ;LCD.c: 150: y = a&0xF0;
  2419  061C  0874               	movf	Lcd_Write_Char@a,w
  2420  061D  39F0               	andlw	240
  2421  061E  00F1               	movwf	??_Lcd_Write_Char
  2422  061F  0871               	movf	??_Lcd_Write_Char,w
  2423  0620  00F3               	movwf	Lcd_Write_Char@y
  2424                           
  2425                           ;LCD.c: 151: RD2 = 1;
  2426  0621  0020               	movlb	0	; select bank0
  2427  0622  150F               	bsf	15,2	;volatile
  2428                           
  2429                           ;LCD.c: 152: Lcd_Port(y>>4);
  2430  0623  0873               	movf	Lcd_Write_Char@y,w
  2431  0624  00F1               	movwf	??_Lcd_Write_Char
  2432  0625  3004               	movlw	4
  2433  0626                     u465:	
  2434  0626  36F1               	lsrf	??_Lcd_Write_Char,f
  2435  0627  0B89               	decfsz	9,f
  2436  0628  2E26               	goto	u465
  2437  0629  0871               	movf	??_Lcd_Write_Char,w
  2438  062A  3185  25BD  3186   	fcall	_Lcd_Port
  2439                           
  2440                           ;LCD.c: 153: RD3 = 1;
  2441  062D  0020               	movlb	0	; select bank0
  2442  062E  158F               	bsf	15,3	;volatile
  2443                           
  2444                           ;LCD.c: 154: _delay((unsigned long)((40)*(16000000/4000000.0)));
  2445  062F  3035               	movlw	53
  2446  0630                     u647:	
  2447  0630  0B89               	decfsz	9,f
  2448  0631  2E30               	goto	u647
  2449  0632  0000               	nop
  2450                           
  2451                           ;LCD.c: 155: RD3 = 0;
  2452  0633  0020               	movlb	0	; select bank0
  2453  0634  118F               	bcf	15,3	;volatile
  2454                           
  2455                           ;LCD.c: 156: Lcd_Port(temp);
  2456  0635  0872               	movf	Lcd_Write_Char@temp,w
  2457  0636  3185  25BD  3186   	fcall	_Lcd_Port
  2458                           
  2459                           ;LCD.c: 157: RD3 = 1;
  2460  0639  0020               	movlb	0	; select bank0
  2461  063A  158F               	bsf	15,3	;volatile
  2462                           
  2463                           ;LCD.c: 158: _delay((unsigned long)((40)*(16000000/4000000.0)));
  2464  063B  3035               	movlw	53
  2465  063C                     u657:	
  2466  063C  0B89               	decfsz	9,f
  2467  063D  2E3C               	goto	u657
  2468  063E  0000               	nop
  2469                           
  2470                           ;LCD.c: 159: RD3 = 0;
  2471  063F  0020               	movlb	0	; select bank0
  2472  0640  118F               	bcf	15,3	;volatile
  2473  0641  0008               	return
  2474  0642                     __end_of_Lcd_Write_Char:	
  2475                           
  2476                           	psect	text12
  2477  0710                     __ptext12:	
  2478 ;; *************** function _Lcd_Set_Cursor *****************
  2479 ;; Defined at:
  2480 ;;		line 90 in file "LCD.c"
  2481 ;; Parameters:    Size  Location     Type
  2482 ;;  a               1    wreg     unsigned char 
  2483 ;;  b               1    3[COMMON] unsigned char 
  2484 ;; Auto vars:     Size  Location     Type
  2485 ;;  a               1    6[COMMON] unsigned char 
  2486 ;;  temp            1    9[COMMON] unsigned char 
  2487 ;;  y               1    8[COMMON] unsigned char 
  2488 ;;  z               1    7[COMMON] unsigned char 
  2489 ;; Return value:  Size  Location     Type
  2490 ;;                  1    wreg      void 
  2491 ;; Registers used:
  2492 ;;		wreg, status,2, status,0, pclath, cstack
  2493 ;; Tracked objects:
  2494 ;;		On entry : 0/0
  2495 ;;		On exit  : 0/0
  2496 ;;		Unchanged: 0/0
  2497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2498 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2499 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2500 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2501 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2502 ;;Total ram usage:        7 bytes
  2503 ;; Hardware stack levels used:    1
  2504 ;; Hardware stack levels required when called:    2
  2505 ;; This function calls:
  2506 ;;		_Lcd_Cmd
  2507 ;; This function is called by:
  2508 ;;		_main
  2509 ;; This function uses a non-reentrant model
  2510 ;;
  2511                           
  2512                           
  2513                           ;psect for function _Lcd_Set_Cursor
  2514  0710                     _Lcd_Set_Cursor:	
  2515                           
  2516                           ;incstack = 0
  2517                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2518                           ;Lcd_Set_Cursor@a stored from wreg
  2519  0710  00F6               	movwf	Lcd_Set_Cursor@a
  2520                           
  2521                           ;LCD.c: 92: char temp,z,y;
  2522                           ;LCD.c: 93: if(a == 1)
  2523  0711  0376               	decf	Lcd_Set_Cursor@a,w
  2524  0712  1D03               	btfss	3,2
  2525  0713  2F30               	goto	l1037
  2526                           
  2527                           ;LCD.c: 94: {
  2528                           ;LCD.c: 95: temp = 0x80 + b - 1;
  2529  0714  0873               	movf	Lcd_Set_Cursor@b,w
  2530  0715  3E7F               	addlw	127
  2531  0716  00F4               	movwf	??_Lcd_Set_Cursor
  2532  0717  0874               	movf	??_Lcd_Set_Cursor,w
  2533  0718  00F9               	movwf	Lcd_Set_Cursor@temp
  2534                           
  2535                           ;LCD.c: 96: z = temp>>4;
  2536  0719  0879               	movf	Lcd_Set_Cursor@temp,w
  2537  071A  00F4               	movwf	??_Lcd_Set_Cursor
  2538  071B  3004               	movlw	4
  2539  071C                     u535:	
  2540  071C  36F4               	lsrf	??_Lcd_Set_Cursor,f
  2541  071D  0B89               	decfsz	9,f
  2542  071E  2F1C               	goto	u535
  2543  071F  0874               	movf	??_Lcd_Set_Cursor,w
  2544  0720  00F5               	movwf	??_Lcd_Set_Cursor+1
  2545  0721  0875               	movf	??_Lcd_Set_Cursor+1,w
  2546  0722  00F7               	movwf	Lcd_Set_Cursor@z
  2547                           
  2548                           ;LCD.c: 97: y = temp & 0x0F;
  2549  0723  0879               	movf	Lcd_Set_Cursor@temp,w
  2550  0724  390F               	andlw	15
  2551  0725  00F4               	movwf	??_Lcd_Set_Cursor
  2552  0726  0874               	movf	??_Lcd_Set_Cursor,w
  2553  0727  00F8               	movwf	Lcd_Set_Cursor@y
  2554                           
  2555                           ;LCD.c: 98: Lcd_Cmd(z);
  2556  0728  0877               	movf	Lcd_Set_Cursor@z,w
  2557  0729  3185  25A9  3187   	fcall	_Lcd_Cmd
  2558                           
  2559                           ;LCD.c: 99: Lcd_Cmd(y);
  2560  072C  0878               	movf	Lcd_Set_Cursor@y,w
  2561  072D  3185  25A9         	fcall	_Lcd_Cmd
  2562                           
  2563                           ;LCD.c: 100: }
  2564  072F  0008               	return
  2565  0730                     l1037:	
  2566                           
  2567                           ;LCD.c: 101: else if(a == 2)
  2568  0730  3002               	movlw	2
  2569  0731  0676               	xorwf	Lcd_Set_Cursor@a,w
  2570  0732  1D03               	btfss	3,2
  2571  0733  0008               	return
  2572                           
  2573                           ;LCD.c: 102: {
  2574                           ;LCD.c: 103: temp = 0xC0 + b - 1;
  2575  0734  0873               	movf	Lcd_Set_Cursor@b,w
  2576  0735  3EBF               	addlw	191
  2577  0736  00F4               	movwf	??_Lcd_Set_Cursor
  2578  0737  0874               	movf	??_Lcd_Set_Cursor,w
  2579  0738  00F9               	movwf	Lcd_Set_Cursor@temp
  2580                           
  2581                           ;LCD.c: 104: z = temp>>4;
  2582  0739  0879               	movf	Lcd_Set_Cursor@temp,w
  2583  073A  00F4               	movwf	??_Lcd_Set_Cursor
  2584  073B  3004               	movlw	4
  2585  073C                     u555:	
  2586  073C  36F4               	lsrf	??_Lcd_Set_Cursor,f
  2587  073D  0B89               	decfsz	9,f
  2588  073E  2F3C               	goto	u555
  2589  073F  0874               	movf	??_Lcd_Set_Cursor,w
  2590  0740  00F5               	movwf	??_Lcd_Set_Cursor+1
  2591  0741  0875               	movf	??_Lcd_Set_Cursor+1,w
  2592  0742  00F7               	movwf	Lcd_Set_Cursor@z
  2593                           
  2594                           ;LCD.c: 105: y = temp & 0x0F;
  2595  0743  0879               	movf	Lcd_Set_Cursor@temp,w
  2596  0744  390F               	andlw	15
  2597  0745  00F4               	movwf	??_Lcd_Set_Cursor
  2598  0746  0874               	movf	??_Lcd_Set_Cursor,w
  2599  0747  00F8               	movwf	Lcd_Set_Cursor@y
  2600                           
  2601                           ;LCD.c: 106: Lcd_Cmd(z);
  2602  0748  0877               	movf	Lcd_Set_Cursor@z,w
  2603  0749  3185  25A9  3187   	fcall	_Lcd_Cmd
  2604                           
  2605                           ;LCD.c: 107: Lcd_Cmd(y);
  2606  074C  0878               	movf	Lcd_Set_Cursor@y,w
  2607  074D  3185  25A9         	fcall	_Lcd_Cmd
  2608  074F  0008               	return
  2609  0750                     __end_of_Lcd_Set_Cursor:	
  2610                           
  2611                           	psect	text13
  2612  05A9                     __ptext13:	
  2613 ;; *************** function _Lcd_Cmd *****************
  2614 ;; Defined at:
  2615 ;;		line 59 in file "LCD.c"
  2616 ;; Parameters:    Size  Location     Type
  2617 ;;  a               1    wreg     unsigned char 
  2618 ;; Auto vars:     Size  Location     Type
  2619 ;;  a               1    2[COMMON] unsigned char 
  2620 ;; Return value:  Size  Location     Type
  2621 ;;                  1    wreg      void 
  2622 ;; Registers used:
  2623 ;;		wreg, status,2, status,0, pclath, cstack
  2624 ;; Tracked objects:
  2625 ;;		On entry : 0/0
  2626 ;;		On exit  : 0/0
  2627 ;;		Unchanged: 0/0
  2628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2630 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2631 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2632 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2633 ;;Total ram usage:        2 bytes
  2634 ;; Hardware stack levels used:    1
  2635 ;; Hardware stack levels required when called:    1
  2636 ;; This function calls:
  2637 ;;		_Lcd_Port
  2638 ;; This function is called by:
  2639 ;;		_Lcd_Clear
  2640 ;;		_Lcd_Set_Cursor
  2641 ;;		_Lcd_Init
  2642 ;;		_Lcd_Shift_Right
  2643 ;;		_Lcd_Shift_Left
  2644 ;; This function uses a non-reentrant model
  2645 ;;
  2646                           
  2647                           
  2648                           ;psect for function _Lcd_Cmd
  2649  05A9                     _Lcd_Cmd:	
  2650                           
  2651                           ;incstack = 0
  2652                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2653                           ;Lcd_Cmd@a stored from wreg
  2654  05A9  00F2               	movwf	Lcd_Cmd@a
  2655                           
  2656                           ;LCD.c: 61: RD2 = 0;
  2657  05AA  0020               	movlb	0	; select bank0
  2658  05AB  110F               	bcf	15,2	;volatile
  2659                           
  2660                           ;LCD.c: 62: Lcd_Port(a);
  2661  05AC  0872               	movf	Lcd_Cmd@a,w
  2662  05AD  3185  25BD  3185   	fcall	_Lcd_Port
  2663                           
  2664                           ;LCD.c: 63: RD3 = 1;
  2665  05B0  0020               	movlb	0	; select bank0
  2666  05B1  158F               	bsf	15,3	;volatile
  2667                           
  2668                           ;LCD.c: 64: _delay((unsigned long)((4)*(16000000/4000.0)));
  2669  05B2  3015               	movlw	21
  2670  05B3  00F1               	movwf	??_Lcd_Cmd
  2671  05B4  30C6               	movlw	198
  2672  05B5                     u667:	
  2673  05B5  0B89               	decfsz	9,f
  2674  05B6  2DB5               	goto	u667
  2675  05B7  0BF1               	decfsz	??_Lcd_Cmd,f
  2676  05B8  2DB5               	goto	u667
  2677  05B9  3200               	nop2
  2678                           
  2679                           ;LCD.c: 65: RD3 = 0;
  2680  05BA  0020               	movlb	0	; select bank0
  2681  05BB  118F               	bcf	15,3	;volatile
  2682  05BC  0008               	return
  2683  05BD                     __end_of_Lcd_Cmd:	
  2684                           
  2685                           	psect	text14
  2686  05BD                     __ptext14:	
  2687 ;; *************** function _Lcd_Port *****************
  2688 ;; Defined at:
  2689 ;;		line 28 in file "LCD.c"
  2690 ;; Parameters:    Size  Location     Type
  2691 ;;  a               1    wreg     unsigned char 
  2692 ;; Auto vars:     Size  Location     Type
  2693 ;;  a               1    0[COMMON] unsigned char 
  2694 ;; Return value:  Size  Location     Type
  2695 ;;                  1    wreg      void 
  2696 ;; Registers used:
  2697 ;;		wreg
  2698 ;; Tracked objects:
  2699 ;;		On entry : 0/0
  2700 ;;		On exit  : 0/0
  2701 ;;		Unchanged: 0/0
  2702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2704 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2706 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2707 ;;Total ram usage:        1 bytes
  2708 ;; Hardware stack levels used:    1
  2709 ;; This function calls:
  2710 ;;		Nothing
  2711 ;; This function is called by:
  2712 ;;		_Lcd_Cmd
  2713 ;;		_Lcd_Init
  2714 ;;		_Lcd_Write_Char
  2715 ;; This function uses a non-reentrant model
  2716 ;;
  2717                           
  2718                           
  2719                           ;psect for function _Lcd_Port
  2720  05BD                     _Lcd_Port:	
  2721                           
  2722                           ;incstack = 0
  2723                           ; Regs used in _Lcd_Port: [wreg]
  2724                           ;Lcd_Port@a stored from wreg
  2725  05BD  00F0               	movwf	Lcd_Port@a
  2726                           
  2727                           ;LCD.c: 30: if(a & 1)
  2728  05BE  1C70               	btfss	Lcd_Port@a,0
  2729  05BF  2DC3               	goto	l56
  2730                           
  2731                           ;LCD.c: 31: RD4 = 1;
  2732  05C0  0020               	movlb	0	; select bank0
  2733  05C1  160F               	bsf	15,4	;volatile
  2734  05C2  2DC5               	goto	l869
  2735  05C3                     l56:	
  2736                           
  2737                           ;LCD.c: 32: else
  2738                           ;LCD.c: 33: RD4 = 0;
  2739  05C3  0020               	movlb	0	; select bank0
  2740  05C4  120F               	bcf	15,4	;volatile
  2741  05C5                     l869:	
  2742                           
  2743                           ;LCD.c: 35: if(a & 2)
  2744  05C5  1CF0               	btfss	Lcd_Port@a,1
  2745  05C6  2DC9               	goto	l58
  2746                           
  2747                           ;LCD.c: 36: RD5 = 1;
  2748  05C7  168F               	bsf	15,5	;volatile
  2749  05C8  2DCA               	goto	l873
  2750  05C9                     l58:	
  2751                           
  2752                           ;LCD.c: 37: else
  2753                           ;LCD.c: 38: RD5 = 0;
  2754  05C9  128F               	bcf	15,5	;volatile
  2755  05CA                     l873:	
  2756                           
  2757                           ;LCD.c: 40: if(a & 4)
  2758  05CA  1D70               	btfss	Lcd_Port@a,2
  2759  05CB  2DCE               	goto	l60
  2760                           
  2761                           ;LCD.c: 41: RD6 = 1;
  2762  05CC  170F               	bsf	15,6	;volatile
  2763  05CD  2DCF               	goto	l877
  2764  05CE                     l60:	
  2765                           
  2766                           ;LCD.c: 42: else
  2767                           ;LCD.c: 43: RD6 = 0;
  2768  05CE  130F               	bcf	15,6	;volatile
  2769  05CF                     l877:	
  2770                           
  2771                           ;LCD.c: 45: if(a & 8)
  2772  05CF  1DF0               	btfss	Lcd_Port@a,3
  2773  05D0  2DD3               	goto	l62
  2774                           
  2775                           ;LCD.c: 46: RD7 = 1;
  2776  05D1  178F               	bsf	15,7	;volatile
  2777  05D2  0008               	return
  2778  05D3                     l62:	
  2779                           
  2780                           ;LCD.c: 47: else
  2781                           ;LCD.c: 48: RD7 = 0;
  2782  05D3  138F               	bcf	15,7	;volatile
  2783  05D4  0008               	return
  2784  05D5                     __end_of_Lcd_Port:	
  2785  007E                     btemp	set	126	;btemp
  2786  007E                     wtemp0	set	126


Data Sizes:
    Strings     11
    Constant    40
    Data        0
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     24      41
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(1) Largest target is 8
		 -> Lcd_Write_Integer@buf(BANK0[8]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 8
		 -> Lcd_Write_Integer@buf(BANK0[8]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 8
		 -> Lcd_Write_Integer@buf(BANK0[8]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 8
		 -> Lcd_Write_Integer@buf(BANK0[8]), 

    sp__ftoa	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK0[17]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 8
		 -> Lcd_Write_Integer@buf(BANK0[8]), 

    Lcd_Write_String@a	PTR const unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK0[17]), Lcd_Write_Integer@buf(BANK0[8]), 


Critical Paths under _main in COMMON

    _initMain->_Lcd_Init
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Write_Integer->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_Lcd_Write_Integer
    _Lcd_Write_Integer->_itoa
    _itoa->_utoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    2687
                                             20 BANK0      4     4      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                  _Lcd_Write_Integer
                           _initMain
 ---------------------------------------------------------------------------------
 (1) _initMain                                             2     2      0     308
                                              4 COMMON     2     2      0
                          _Lcd_Clear
                           _Lcd_Init
                        _internal_16
 ---------------------------------------------------------------------------------
 (2) _internal_16                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             1     1      0     198
                                              3 COMMON     1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_Integer                                   10     8      2    1813
                                             10 BANK0     10     8      2
                   _Lcd_Write_String
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 7     3      4    1386
                                             13 COMMON     1     1      0
                                              4 BANK0      6     2      4
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     5      4    1074
                                              8 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     265
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     374
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     4     4      0     322
                                              5 COMMON     4     4      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     433
                                              3 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              2     2      0     110
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Integer
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
   _initMain
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Init
       _Lcd_Cmd
         _Lcd_Port
       _Lcd_Port
     _internal_16

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     18      29       5       51.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      37      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      37      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Wed Mar 22 15:33:18 2017

               __CFG_CP$OFF 0000                          l60 05CE                          l62 05D3  
                        l56 05C3                          l58 05C9                         l143 06DF  
                       l480 07E0                         l903 06CF                         l921 0660  
                       l915 0648                         l917 0654                         l925 0669  
                       l873 05CA                         l961 079A                         l891 06A8  
                       l971 07B8                         l877 05CF                         l869 05C5  
                       l893 06B4                         l899 06C6                         _RD2 007A  
                       _RD3 007B                         _RD4 007C                         _RD5 007D  
                       _RD6 007E                         _RD7 007F                         u415 064B  
                       u345 06AB                         u435 065A                         u365 06B5  
                       u445 0661                         u535 071C                         u375 06BF  
                       u607 0696                         u465 0626                         u385 06C7  
                       u617 0757                         u555 073C                         u627 0763  
                       u637 076F                         u647 0630                         u657 063C  
                       u577 06DA                         u667 05B5                         u587 06F2  
                       u597 0705                __CFG_BORV$LO 0000                         wreg 0009  
              __CFG_IESO$ON 0000                __CFG_LVP$OFF 0000                        l1021 0608  
                      l1009 05D8                        l1037 0730                        l1097 06D7  
                      STR_1 0828                        _SCS0 04C8                        _SCS1 04C9  
              __CFG_WRT$OFF 0000           ?_Lcd_Write_String 0070                        _main 06D4  
                      _itoa 05F0                        fsr0h 0005                        fsr1h 0007  
                      indf0 0000                        fsr0l 0004                        indf1 0001  
                      fsr1l 0006                        btemp 007E                        _utoa 0794  
                      start 0002          ??_Lcd_Write_String 0075             __end_of_Lcd_Cmd 05BD  
         _Lcd_Write_Integer 0599                       ?_main 0070                       ?_itoa 0024  
             __CFG_WDTE$OFF 0000                       ?_utoa 0078                       _IRCF0 04CB  
                     _IRCF1 04CC                       _IRCF2 04CD                       _IRCF3 04CE  
        ?_Lcd_Write_Integer 002A             __end_of___lwdiv 06D4             __end_of___lwmod 066E  
   __size_of_Lcd_Set_Cursor 0040                       _TRISD 008F              __CFG_FCMEN$OFF 0000  
           __end_of_dpowers 0828         ??_Lcd_Write_Integer 007E              __CFG_BOREN$OFF 0000  
                     utoa@c 0022                       utoa@v 0020                       status 0003  
                     wtemp0 007E                ?_internal_16 0070            __end_of_Lcd_Init 0794  
          __end_of_Lcd_Port 05D5              __CFG_MCLRE$OFF 0000             __initialization 07F6  
              __end_of_main 0710                __end_of_itoa 0616                __end_of_utoa 07F6  
 __end_of_Lcd_Write_Integer 05A9              __CFG_LPBOR$OFF 0000                      ??_main 0034  
                    ??_itoa 007D                      ??_utoa 007C          __size_of_Lcd_Clear 0008  
            __CFG_PLLEN$OFF 0000                      _ADRESH 009C                      _ADRESL 009B  
            __CFG_ZCDDIS$ON 0000                      _ANSELD 018F                   ??_Lcd_Cmd 0071  
                    _SPLLEN 04CF     __size_of_Lcd_Write_Char 002C              __CFG_PWRTE$OFF 0000  
            __CFG_STVREN$ON 0000                   ??___lwdiv 0074                   ??___lwmod 0074  
          __end_of_initMain 06A0                      itoa@cp 0028             Lcd_Set_Cursor@a 0076  
           Lcd_Set_Cursor@b 0073             Lcd_Set_Cursor@y 0078             Lcd_Set_Cursor@z 0077  
   __end_of__initialization 07FD           __end_of_Lcd_Clear 0590              __pcstackCOMMON 0070  
__size_of_Lcd_Write_Integer 0010              _Lcd_Set_Cursor 0710                   ?_Lcd_Init 0070  
                 ?_Lcd_Port 0070                  __pbssBANK0 0038                  __pmaintext 06D4  
      __size_of_internal_16 0009             __CFG_PPS1WAY$ON 0000   __size_of_Lcd_Write_String 001B  
    __end_of_Lcd_Set_Cursor 0750                  ??_Lcd_Init 0073                  ??_Lcd_Port 0070  
                 ?_initMain 0070              _Lcd_Write_Char 0616                     _Lcd_Cmd 05A9  
                   ___lwdiv 06A0                     ___lwmod 0642             ?_Lcd_Set_Cursor 0073  
                   __ptext1 066E                     __ptext2 0590                     __ptext3 0750  
                   __ptext4 0588                     __ptext5 0599                     __ptext6 05F0  
                   __ptext7 0794                     __ptext8 0642                     __ptext9 06A0  
                   _dpowers 0800                     clrloop0 0583      __end_of_Lcd_Write_Char 0642  
      end_of_initialization 07FD                     ftoa@buf 0038                  ??_initMain 0074  
                   itoa@buf 0029                     itoa@val 0024                   Lcd_Port@a 0070  
              __pstringtext 0800                     utoa@buf 0023                     utoa@val 0078  
          __CFG_FOSC$INTOSC 0000                   _TRISAbits 008C                   _TRISBbits 008D  
                 _TRISDbits 008F             ?_Lcd_Write_Char 0070           Lcd_Write_String@a 0078  
         Lcd_Write_String@i 0076                  main@result 0036                   _Lcd_Clear 0588  
          _Lcd_Write_String 05D5         start_initialization 07F6           __size_of_Lcd_Init 0044  
         __size_of_Lcd_Port 0018                  ?_Lcd_Clear 0070             Lcd_Write_Char@a 0074  
           Lcd_Write_Char@y 0073                   ___latbits 0002               __pcstackBANK0 0020  
                  ?_Lcd_Cmd 0070               ??_internal_16 0070           __size_of_initMain 0032  
          ___lwdiv@dividend 0072            ??_Lcd_Set_Cursor 0074                    ?___lwdiv 0070  
                  ?___lwmod 0070            ___lwdiv@quotient 0075                    _LATDbits 010F  
                 clear_ram0 0582                    Lcd_Cmd@a 0072                 ??_Lcd_Clear 0073  
       __end_of_internal_16 0599                  _ADCON0bits 009D                  _ADCON1bits 009E  
          ??_Lcd_Write_Char 0071                    _Lcd_Init 0750                    _Lcd_Port 05BD  
  __end_of_Lcd_Write_String 05F0            __size_of_Lcd_Cmd 0014            __size_of___lwdiv 0034  
          __size_of___lwmod 002C                  _ANSELAbits 018C                  _ANSELBbits 018D  
           ___lwdiv@divisor 0070             ___lwdiv@counter 0077                    __ptext10 05D5  
                  __ptext11 0616                    __ptext12 0710                    __ptext13 05A9  
                  __ptext14 05BD                    _initMain 066E               __size_of_main 003C  
             __size_of_itoa 0026               __size_of_utoa 0062                 _internal_16 0590  
      Lcd_Write_Integer@buf 002C                    itoa@base 0026          Lcd_Write_Char@temp 0072  
          ___lwmod@dividend 0072           __CFG_CLKOUTEN$OFF 0000          Lcd_Set_Cursor@temp 0079  
                  utoa@base 007A             ___lwmod@divisor 0070             ___lwmod@counter 0075  
        Lcd_Write_Integer@v 002A  
