

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Apr 20 23:47:36 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1719
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	stringtext4,global,class=STRCODE,delta=2
     8                           	psect	stringtext5,global,class=STRCODE,delta=2
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    33                           	dabs	1,0x7E,2
    34  0000                     
    35                           ; Version 2.05
    36                           ; Generated 20/12/2018 GMT
    37                           ; 
    38                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F1719 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  0007                     	;# 
    77  0008                     	;# 
    78  0009                     	;# 
    79  000A                     	;# 
    80  000B                     	;# 
    81  000C                     	;# 
    82  000D                     	;# 
    83  000E                     	;# 
    84  000F                     	;# 
    85  0010                     	;# 
    86  0011                     	;# 
    87  0012                     	;# 
    88  0013                     	;# 
    89  0015                     	;# 
    90  0016                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  0019                     	;# 
    95  001A                     	;# 
    96  001B                     	;# 
    97  001C                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  008F                     	;# 
   102  0090                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0110                     	;# 
   123  0111                     	;# 
   124  0112                     	;# 
   125  0113                     	;# 
   126  0114                     	;# 
   127  0115                     	;# 
   128  0116                     	;# 
   129  0117                     	;# 
   130  0118                     	;# 
   131  0119                     	;# 
   132  011A                     	;# 
   133  011B                     	;# 
   134  011B                     	;# 
   135  011C                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  018E                     	;# 
   139  018F                     	;# 
   140  0190                     	;# 
   141  0191                     	;# 
   142  0191                     	;# 
   143  0192                     	;# 
   144  0193                     	;# 
   145  0193                     	;# 
   146  0194                     	;# 
   147  0195                     	;# 
   148  0196                     	;# 
   149  0197                     	;# 
   150  0199                     	;# 
   151  0199                     	;# 
   152  0199                     	;# 
   153  019A                     	;# 
   154  019A                     	;# 
   155  019A                     	;# 
   156  019B                     	;# 
   157  019B                     	;# 
   158  019B                     	;# 
   159  019B                     	;# 
   160  019B                     	;# 
   161  019C                     	;# 
   162  019C                     	;# 
   163  019C                     	;# 
   164  019D                     	;# 
   165  019D                     	;# 
   166  019D                     	;# 
   167  019E                     	;# 
   168  019E                     	;# 
   169  019E                     	;# 
   170  019F                     	;# 
   171  019F                     	;# 
   172  019F                     	;# 
   173  019F                     	;# 
   174  019F                     	;# 
   175  020C                     	;# 
   176  020D                     	;# 
   177  020E                     	;# 
   178  020F                     	;# 
   179  0210                     	;# 
   180  0211                     	;# 
   181  0211                     	;# 
   182  0212                     	;# 
   183  0212                     	;# 
   184  0213                     	;# 
   185  0213                     	;# 
   186  0214                     	;# 
   187  0214                     	;# 
   188  0215                     	;# 
   189  0215                     	;# 
   190  0215                     	;# 
   191  0215                     	;# 
   192  0216                     	;# 
   193  0216                     	;# 
   194  0217                     	;# 
   195  0217                     	;# 
   196  028C                     	;# 
   197  028D                     	;# 
   198  028E                     	;# 
   199  028F                     	;# 
   200  0290                     	;# 
   201  0291                     	;# 
   202  0291                     	;# 
   203  0292                     	;# 
   204  0293                     	;# 
   205  0293                     	;# 
   206  0298                     	;# 
   207  0298                     	;# 
   208  0299                     	;# 
   209  029A                     	;# 
   210  029A                     	;# 
   211  029E                     	;# 
   212  030C                     	;# 
   213  030D                     	;# 
   214  030E                     	;# 
   215  030F                     	;# 
   216  0310                     	;# 
   217  038C                     	;# 
   218  038D                     	;# 
   219  038E                     	;# 
   220  038F                     	;# 
   221  0390                     	;# 
   222  0391                     	;# 
   223  0392                     	;# 
   224  0393                     	;# 
   225  0394                     	;# 
   226  0395                     	;# 
   227  0396                     	;# 
   228  0397                     	;# 
   229  0398                     	;# 
   230  0399                     	;# 
   231  039D                     	;# 
   232  039E                     	;# 
   233  039F                     	;# 
   234  0415                     	;# 
   235  0416                     	;# 
   236  0417                     	;# 
   237  041C                     	;# 
   238  041D                     	;# 
   239  041E                     	;# 
   240  0498                     	;# 
   241  0498                     	;# 
   242  0499                     	;# 
   243  049A                     	;# 
   244  049B                     	;# 
   245  049B                     	;# 
   246  049C                     	;# 
   247  049D                     	;# 
   248  049E                     	;# 
   249  049F                     	;# 
   250  0511                     	;# 
   251  0515                     	;# 
   252  0617                     	;# 
   253  0618                     	;# 
   254  0619                     	;# 
   255  0619                     	;# 
   256  061A                     	;# 
   257  061B                     	;# 
   258  061C                     	;# 
   259  061C                     	;# 
   260  0691                     	;# 
   261  0692                     	;# 
   262  0693                     	;# 
   263  0694                     	;# 
   264  0695                     	;# 
   265  0696                     	;# 
   266  0697                     	;# 
   267  0698                     	;# 
   268  0699                     	;# 
   269  069A                     	;# 
   270  069B                     	;# 
   271  069C                     	;# 
   272  069D                     	;# 
   273  069E                     	;# 
   274  069F                     	;# 
   275  0E0F                     	;# 
   276  0E10                     	;# 
   277  0E11                     	;# 
   278  0E12                     	;# 
   279  0E13                     	;# 
   280  0E14                     	;# 
   281  0E15                     	;# 
   282  0E17                     	;# 
   283  0E20                     	;# 
   284  0E21                     	;# 
   285  0E22                     	;# 
   286  0E24                     	;# 
   287  0E25                     	;# 
   288  0E28                     	;# 
   289  0E29                     	;# 
   290  0E2A                     	;# 
   291  0E2B                     	;# 
   292  0E90                     	;# 
   293  0E91                     	;# 
   294  0E92                     	;# 
   295  0E93                     	;# 
   296  0E94                     	;# 
   297  0E95                     	;# 
   298  0E96                     	;# 
   299  0E97                     	;# 
   300  0E98                     	;# 
   301  0E99                     	;# 
   302  0E9A                     	;# 
   303  0E9B                     	;# 
   304  0E9C                     	;# 
   305  0E9D                     	;# 
   306  0E9E                     	;# 
   307  0E9F                     	;# 
   308  0EA0                     	;# 
   309  0EA1                     	;# 
   310  0EA2                     	;# 
   311  0EA3                     	;# 
   312  0EA4                     	;# 
   313  0EA5                     	;# 
   314  0EA6                     	;# 
   315  0EA7                     	;# 
   316  0EA8                     	;# 
   317  0EA9                     	;# 
   318  0EAA                     	;# 
   319  0EAB                     	;# 
   320  0EAC                     	;# 
   321  0EAD                     	;# 
   322  0EAE                     	;# 
   323  0EAF                     	;# 
   324  0EB0                     	;# 
   325  0EB1                     	;# 
   326  0EB2                     	;# 
   327  0F0F                     	;# 
   328  0F10                     	;# 
   329  0F11                     	;# 
   330  0F12                     	;# 
   331  0F13                     	;# 
   332  0F14                     	;# 
   333  0F15                     	;# 
   334  0F16                     	;# 
   335  0F17                     	;# 
   336  0F18                     	;# 
   337  0F19                     	;# 
   338  0F1A                     	;# 
   339  0F1B                     	;# 
   340  0F1C                     	;# 
   341  0F1D                     	;# 
   342  0F1E                     	;# 
   343  0F1F                     	;# 
   344  0F20                     	;# 
   345  0F21                     	;# 
   346  0F22                     	;# 
   347  0F23                     	;# 
   348  0F24                     	;# 
   349  0F25                     	;# 
   350  0F26                     	;# 
   351  0F27                     	;# 
   352  0F28                     	;# 
   353  0F29                     	;# 
   354  0F2A                     	;# 
   355  0F2B                     	;# 
   356  0F2C                     	;# 
   357  0F2D                     	;# 
   358  0F2E                     	;# 
   359  0F2F                     	;# 
   360  0F30                     	;# 
   361  0F31                     	;# 
   362  0F32                     	;# 
   363  0F33                     	;# 
   364  0F34                     	;# 
   365  0F35                     	;# 
   366  0F36                     	;# 
   367  0F37                     	;# 
   368  0FE4                     	;# 
   369  0FE5                     	;# 
   370  0FE6                     	;# 
   371  0FE7                     	;# 
   372  0FE8                     	;# 
   373  0FE9                     	;# 
   374  0FEA                     	;# 
   375  0FEB                     	;# 
   376  0FED                     	;# 
   377  0FEE                     	;# 
   378  0FEF                     	;# 
   379  0000                     	;# 
   380  0001                     	;# 
   381  0002                     	;# 
   382  0003                     	;# 
   383  0004                     	;# 
   384  0005                     	;# 
   385  0006                     	;# 
   386  0007                     	;# 
   387  0008                     	;# 
   388  0009                     	;# 
   389  000A                     	;# 
   390  000B                     	;# 
   391  000C                     	;# 
   392  000D                     	;# 
   393  000E                     	;# 
   394  000F                     	;# 
   395  0010                     	;# 
   396  0011                     	;# 
   397  0012                     	;# 
   398  0013                     	;# 
   399  0015                     	;# 
   400  0016                     	;# 
   401  0016                     	;# 
   402  0017                     	;# 
   403  0018                     	;# 
   404  0019                     	;# 
   405  001A                     	;# 
   406  001B                     	;# 
   407  001C                     	;# 
   408  008C                     	;# 
   409  008D                     	;# 
   410  008E                     	;# 
   411  008F                     	;# 
   412  0090                     	;# 
   413  0091                     	;# 
   414  0092                     	;# 
   415  0093                     	;# 
   416  0095                     	;# 
   417  0096                     	;# 
   418  0097                     	;# 
   419  0098                     	;# 
   420  0099                     	;# 
   421  009A                     	;# 
   422  009B                     	;# 
   423  009B                     	;# 
   424  009C                     	;# 
   425  009D                     	;# 
   426  009E                     	;# 
   427  009F                     	;# 
   428  010C                     	;# 
   429  010D                     	;# 
   430  010E                     	;# 
   431  010F                     	;# 
   432  0110                     	;# 
   433  0111                     	;# 
   434  0112                     	;# 
   435  0113                     	;# 
   436  0114                     	;# 
   437  0115                     	;# 
   438  0116                     	;# 
   439  0117                     	;# 
   440  0118                     	;# 
   441  0119                     	;# 
   442  011A                     	;# 
   443  011B                     	;# 
   444  011B                     	;# 
   445  011C                     	;# 
   446  018C                     	;# 
   447  018D                     	;# 
   448  018E                     	;# 
   449  018F                     	;# 
   450  0190                     	;# 
   451  0191                     	;# 
   452  0191                     	;# 
   453  0192                     	;# 
   454  0193                     	;# 
   455  0193                     	;# 
   456  0194                     	;# 
   457  0195                     	;# 
   458  0196                     	;# 
   459  0197                     	;# 
   460  0199                     	;# 
   461  0199                     	;# 
   462  0199                     	;# 
   463  019A                     	;# 
   464  019A                     	;# 
   465  019A                     	;# 
   466  019B                     	;# 
   467  019B                     	;# 
   468  019B                     	;# 
   469  019B                     	;# 
   470  019B                     	;# 
   471  019C                     	;# 
   472  019C                     	;# 
   473  019C                     	;# 
   474  019D                     	;# 
   475  019D                     	;# 
   476  019D                     	;# 
   477  019E                     	;# 
   478  019E                     	;# 
   479  019E                     	;# 
   480  019F                     	;# 
   481  019F                     	;# 
   482  019F                     	;# 
   483  019F                     	;# 
   484  019F                     	;# 
   485  020C                     	;# 
   486  020D                     	;# 
   487  020E                     	;# 
   488  020F                     	;# 
   489  0210                     	;# 
   490  0211                     	;# 
   491  0211                     	;# 
   492  0212                     	;# 
   493  0212                     	;# 
   494  0213                     	;# 
   495  0213                     	;# 
   496  0214                     	;# 
   497  0214                     	;# 
   498  0215                     	;# 
   499  0215                     	;# 
   500  0215                     	;# 
   501  0215                     	;# 
   502  0216                     	;# 
   503  0216                     	;# 
   504  0217                     	;# 
   505  0217                     	;# 
   506  028C                     	;# 
   507  028D                     	;# 
   508  028E                     	;# 
   509  028F                     	;# 
   510  0290                     	;# 
   511  0291                     	;# 
   512  0291                     	;# 
   513  0292                     	;# 
   514  0293                     	;# 
   515  0293                     	;# 
   516  0298                     	;# 
   517  0298                     	;# 
   518  0299                     	;# 
   519  029A                     	;# 
   520  029A                     	;# 
   521  029E                     	;# 
   522  030C                     	;# 
   523  030D                     	;# 
   524  030E                     	;# 
   525  030F                     	;# 
   526  0310                     	;# 
   527  038C                     	;# 
   528  038D                     	;# 
   529  038E                     	;# 
   530  038F                     	;# 
   531  0390                     	;# 
   532  0391                     	;# 
   533  0392                     	;# 
   534  0393                     	;# 
   535  0394                     	;# 
   536  0395                     	;# 
   537  0396                     	;# 
   538  0397                     	;# 
   539  0398                     	;# 
   540  0399                     	;# 
   541  039D                     	;# 
   542  039E                     	;# 
   543  039F                     	;# 
   544  0415                     	;# 
   545  0416                     	;# 
   546  0417                     	;# 
   547  041C                     	;# 
   548  041D                     	;# 
   549  041E                     	;# 
   550  0498                     	;# 
   551  0498                     	;# 
   552  0499                     	;# 
   553  049A                     	;# 
   554  049B                     	;# 
   555  049B                     	;# 
   556  049C                     	;# 
   557  049D                     	;# 
   558  049E                     	;# 
   559  049F                     	;# 
   560  0511                     	;# 
   561  0515                     	;# 
   562  0617                     	;# 
   563  0618                     	;# 
   564  0619                     	;# 
   565  0619                     	;# 
   566  061A                     	;# 
   567  061B                     	;# 
   568  061C                     	;# 
   569  061C                     	;# 
   570  0691                     	;# 
   571  0692                     	;# 
   572  0693                     	;# 
   573  0694                     	;# 
   574  0695                     	;# 
   575  0696                     	;# 
   576  0697                     	;# 
   577  0698                     	;# 
   578  0699                     	;# 
   579  069A                     	;# 
   580  069B                     	;# 
   581  069C                     	;# 
   582  069D                     	;# 
   583  069E                     	;# 
   584  069F                     	;# 
   585  0E0F                     	;# 
   586  0E10                     	;# 
   587  0E11                     	;# 
   588  0E12                     	;# 
   589  0E13                     	;# 
   590  0E14                     	;# 
   591  0E15                     	;# 
   592  0E17                     	;# 
   593  0E20                     	;# 
   594  0E21                     	;# 
   595  0E22                     	;# 
   596  0E24                     	;# 
   597  0E25                     	;# 
   598  0E28                     	;# 
   599  0E29                     	;# 
   600  0E2A                     	;# 
   601  0E2B                     	;# 
   602  0E90                     	;# 
   603  0E91                     	;# 
   604  0E92                     	;# 
   605  0E93                     	;# 
   606  0E94                     	;# 
   607  0E95                     	;# 
   608  0E96                     	;# 
   609  0E97                     	;# 
   610  0E98                     	;# 
   611  0E99                     	;# 
   612  0E9A                     	;# 
   613  0E9B                     	;# 
   614  0E9C                     	;# 
   615  0E9D                     	;# 
   616  0E9E                     	;# 
   617  0E9F                     	;# 
   618  0EA0                     	;# 
   619  0EA1                     	;# 
   620  0EA2                     	;# 
   621  0EA3                     	;# 
   622  0EA4                     	;# 
   623  0EA5                     	;# 
   624  0EA6                     	;# 
   625  0EA7                     	;# 
   626  0EA8                     	;# 
   627  0EA9                     	;# 
   628  0EAA                     	;# 
   629  0EAB                     	;# 
   630  0EAC                     	;# 
   631  0EAD                     	;# 
   632  0EAE                     	;# 
   633  0EAF                     	;# 
   634  0EB0                     	;# 
   635  0EB1                     	;# 
   636  0EB2                     	;# 
   637  0F0F                     	;# 
   638  0F10                     	;# 
   639  0F11                     	;# 
   640  0F12                     	;# 
   641  0F13                     	;# 
   642  0F14                     	;# 
   643  0F15                     	;# 
   644  0F16                     	;# 
   645  0F17                     	;# 
   646  0F18                     	;# 
   647  0F19                     	;# 
   648  0F1A                     	;# 
   649  0F1B                     	;# 
   650  0F1C                     	;# 
   651  0F1D                     	;# 
   652  0F1E                     	;# 
   653  0F1F                     	;# 
   654  0F20                     	;# 
   655  0F21                     	;# 
   656  0F22                     	;# 
   657  0F23                     	;# 
   658  0F24                     	;# 
   659  0F25                     	;# 
   660  0F26                     	;# 
   661  0F27                     	;# 
   662  0F28                     	;# 
   663  0F29                     	;# 
   664  0F2A                     	;# 
   665  0F2B                     	;# 
   666  0F2C                     	;# 
   667  0F2D                     	;# 
   668  0F2E                     	;# 
   669  0F2F                     	;# 
   670  0F30                     	;# 
   671  0F31                     	;# 
   672  0F32                     	;# 
   673  0F33                     	;# 
   674  0F34                     	;# 
   675  0F35                     	;# 
   676  0F36                     	;# 
   677  0F37                     	;# 
   678  0FE4                     	;# 
   679  0FE5                     	;# 
   680  0FE6                     	;# 
   681  0FE7                     	;# 
   682  0FE8                     	;# 
   683  0FE9                     	;# 
   684  0FEA                     	;# 
   685  0FEB                     	;# 
   686  0FED                     	;# 
   687  0FEE                     	;# 
   688  0FEF                     	;# 
   689  0000                     	;# 
   690  0001                     	;# 
   691  0002                     	;# 
   692  0003                     	;# 
   693  0004                     	;# 
   694  0005                     	;# 
   695  0006                     	;# 
   696  0007                     	;# 
   697  0008                     	;# 
   698  0009                     	;# 
   699  000A                     	;# 
   700  000B                     	;# 
   701  000C                     	;# 
   702  000D                     	;# 
   703  000E                     	;# 
   704  000F                     	;# 
   705  0010                     	;# 
   706  0011                     	;# 
   707  0012                     	;# 
   708  0013                     	;# 
   709  0015                     	;# 
   710  0016                     	;# 
   711  0016                     	;# 
   712  0017                     	;# 
   713  0018                     	;# 
   714  0019                     	;# 
   715  001A                     	;# 
   716  001B                     	;# 
   717  001C                     	;# 
   718  008C                     	;# 
   719  008D                     	;# 
   720  008E                     	;# 
   721  008F                     	;# 
   722  0090                     	;# 
   723  0091                     	;# 
   724  0092                     	;# 
   725  0093                     	;# 
   726  0095                     	;# 
   727  0096                     	;# 
   728  0097                     	;# 
   729  0098                     	;# 
   730  0099                     	;# 
   731  009A                     	;# 
   732  009B                     	;# 
   733  009B                     	;# 
   734  009C                     	;# 
   735  009D                     	;# 
   736  009E                     	;# 
   737  009F                     	;# 
   738  010C                     	;# 
   739  010D                     	;# 
   740  010E                     	;# 
   741  010F                     	;# 
   742  0110                     	;# 
   743  0111                     	;# 
   744  0112                     	;# 
   745  0113                     	;# 
   746  0114                     	;# 
   747  0115                     	;# 
   748  0116                     	;# 
   749  0117                     	;# 
   750  0118                     	;# 
   751  0119                     	;# 
   752  011A                     	;# 
   753  011B                     	;# 
   754  011B                     	;# 
   755  011C                     	;# 
   756  018C                     	;# 
   757  018D                     	;# 
   758  018E                     	;# 
   759  018F                     	;# 
   760  0190                     	;# 
   761  0191                     	;# 
   762  0191                     	;# 
   763  0192                     	;# 
   764  0193                     	;# 
   765  0193                     	;# 
   766  0194                     	;# 
   767  0195                     	;# 
   768  0196                     	;# 
   769  0197                     	;# 
   770  0199                     	;# 
   771  0199                     	;# 
   772  0199                     	;# 
   773  019A                     	;# 
   774  019A                     	;# 
   775  019A                     	;# 
   776  019B                     	;# 
   777  019B                     	;# 
   778  019B                     	;# 
   779  019B                     	;# 
   780  019B                     	;# 
   781  019C                     	;# 
   782  019C                     	;# 
   783  019C                     	;# 
   784  019D                     	;# 
   785  019D                     	;# 
   786  019D                     	;# 
   787  019E                     	;# 
   788  019E                     	;# 
   789  019E                     	;# 
   790  019F                     	;# 
   791  019F                     	;# 
   792  019F                     	;# 
   793  019F                     	;# 
   794  019F                     	;# 
   795  020C                     	;# 
   796  020D                     	;# 
   797  020E                     	;# 
   798  020F                     	;# 
   799  0210                     	;# 
   800  0211                     	;# 
   801  0211                     	;# 
   802  0212                     	;# 
   803  0212                     	;# 
   804  0213                     	;# 
   805  0213                     	;# 
   806  0214                     	;# 
   807  0214                     	;# 
   808  0215                     	;# 
   809  0215                     	;# 
   810  0215                     	;# 
   811  0215                     	;# 
   812  0216                     	;# 
   813  0216                     	;# 
   814  0217                     	;# 
   815  0217                     	;# 
   816  028C                     	;# 
   817  028D                     	;# 
   818  028E                     	;# 
   819  028F                     	;# 
   820  0290                     	;# 
   821  0291                     	;# 
   822  0291                     	;# 
   823  0292                     	;# 
   824  0293                     	;# 
   825  0293                     	;# 
   826  0298                     	;# 
   827  0298                     	;# 
   828  0299                     	;# 
   829  029A                     	;# 
   830  029A                     	;# 
   831  029E                     	;# 
   832  030C                     	;# 
   833  030D                     	;# 
   834  030E                     	;# 
   835  030F                     	;# 
   836  0310                     	;# 
   837  038C                     	;# 
   838  038D                     	;# 
   839  038E                     	;# 
   840  038F                     	;# 
   841  0390                     	;# 
   842  0391                     	;# 
   843  0392                     	;# 
   844  0393                     	;# 
   845  0394                     	;# 
   846  0395                     	;# 
   847  0396                     	;# 
   848  0397                     	;# 
   849  0398                     	;# 
   850  0399                     	;# 
   851  039D                     	;# 
   852  039E                     	;# 
   853  039F                     	;# 
   854  0415                     	;# 
   855  0416                     	;# 
   856  0417                     	;# 
   857  041C                     	;# 
   858  041D                     	;# 
   859  041E                     	;# 
   860  0498                     	;# 
   861  0498                     	;# 
   862  0499                     	;# 
   863  049A                     	;# 
   864  049B                     	;# 
   865  049B                     	;# 
   866  049C                     	;# 
   867  049D                     	;# 
   868  049E                     	;# 
   869  049F                     	;# 
   870  0511                     	;# 
   871  0515                     	;# 
   872  0617                     	;# 
   873  0618                     	;# 
   874  0619                     	;# 
   875  0619                     	;# 
   876  061A                     	;# 
   877  061B                     	;# 
   878  061C                     	;# 
   879  061C                     	;# 
   880  0691                     	;# 
   881  0692                     	;# 
   882  0693                     	;# 
   883  0694                     	;# 
   884  0695                     	;# 
   885  0696                     	;# 
   886  0697                     	;# 
   887  0698                     	;# 
   888  0699                     	;# 
   889  069A                     	;# 
   890  069B                     	;# 
   891  069C                     	;# 
   892  069D                     	;# 
   893  069E                     	;# 
   894  069F                     	;# 
   895  0E0F                     	;# 
   896  0E10                     	;# 
   897  0E11                     	;# 
   898  0E12                     	;# 
   899  0E13                     	;# 
   900  0E14                     	;# 
   901  0E15                     	;# 
   902  0E17                     	;# 
   903  0E20                     	;# 
   904  0E21                     	;# 
   905  0E22                     	;# 
   906  0E24                     	;# 
   907  0E25                     	;# 
   908  0E28                     	;# 
   909  0E29                     	;# 
   910  0E2A                     	;# 
   911  0E2B                     	;# 
   912  0E90                     	;# 
   913  0E91                     	;# 
   914  0E92                     	;# 
   915  0E93                     	;# 
   916  0E94                     	;# 
   917  0E95                     	;# 
   918  0E96                     	;# 
   919  0E97                     	;# 
   920  0E98                     	;# 
   921  0E99                     	;# 
   922  0E9A                     	;# 
   923  0E9B                     	;# 
   924  0E9C                     	;# 
   925  0E9D                     	;# 
   926  0E9E                     	;# 
   927  0E9F                     	;# 
   928  0EA0                     	;# 
   929  0EA1                     	;# 
   930  0EA2                     	;# 
   931  0EA3                     	;# 
   932  0EA4                     	;# 
   933  0EA5                     	;# 
   934  0EA6                     	;# 
   935  0EA7                     	;# 
   936  0EA8                     	;# 
   937  0EA9                     	;# 
   938  0EAA                     	;# 
   939  0EAB                     	;# 
   940  0EAC                     	;# 
   941  0EAD                     	;# 
   942  0EAE                     	;# 
   943  0EAF                     	;# 
   944  0EB0                     	;# 
   945  0EB1                     	;# 
   946  0EB2                     	;# 
   947  0F0F                     	;# 
   948  0F10                     	;# 
   949  0F11                     	;# 
   950  0F12                     	;# 
   951  0F13                     	;# 
   952  0F14                     	;# 
   953  0F15                     	;# 
   954  0F16                     	;# 
   955  0F17                     	;# 
   956  0F18                     	;# 
   957  0F19                     	;# 
   958  0F1A                     	;# 
   959  0F1B                     	;# 
   960  0F1C                     	;# 
   961  0F1D                     	;# 
   962  0F1E                     	;# 
   963  0F1F                     	;# 
   964  0F20                     	;# 
   965  0F21                     	;# 
   966  0F22                     	;# 
   967  0F23                     	;# 
   968  0F24                     	;# 
   969  0F25                     	;# 
   970  0F26                     	;# 
   971  0F27                     	;# 
   972  0F28                     	;# 
   973  0F29                     	;# 
   974  0F2A                     	;# 
   975  0F2B                     	;# 
   976  0F2C                     	;# 
   977  0F2D                     	;# 
   978  0F2E                     	;# 
   979  0F2F                     	;# 
   980  0F30                     	;# 
   981  0F31                     	;# 
   982  0F32                     	;# 
   983  0F33                     	;# 
   984  0F34                     	;# 
   985  0F35                     	;# 
   986  0F36                     	;# 
   987  0F37                     	;# 
   988  0FE4                     	;# 
   989  0FE5                     	;# 
   990  0FE6                     	;# 
   991  0FE7                     	;# 
   992  0FE8                     	;# 
   993  0FE9                     	;# 
   994  0FEA                     	;# 
   995  0FEB                     	;# 
   996  0FED                     	;# 
   997  0FEE                     	;# 
   998  0FEF                     	;# 
   999  0000                     	;# 
  1000  0001                     	;# 
  1001  0002                     	;# 
  1002  0003                     	;# 
  1003  0004                     	;# 
  1004  0005                     	;# 
  1005  0006                     	;# 
  1006  0007                     	;# 
  1007  0008                     	;# 
  1008  0009                     	;# 
  1009  000A                     	;# 
  1010  000B                     	;# 
  1011  000C                     	;# 
  1012  000D                     	;# 
  1013  000E                     	;# 
  1014  000F                     	;# 
  1015  0010                     	;# 
  1016  0011                     	;# 
  1017  0012                     	;# 
  1018  0013                     	;# 
  1019  0015                     	;# 
  1020  0016                     	;# 
  1021  0016                     	;# 
  1022  0017                     	;# 
  1023  0018                     	;# 
  1024  0019                     	;# 
  1025  001A                     	;# 
  1026  001B                     	;# 
  1027  001C                     	;# 
  1028  008C                     	;# 
  1029  008D                     	;# 
  1030  008E                     	;# 
  1031  008F                     	;# 
  1032  0090                     	;# 
  1033  0091                     	;# 
  1034  0092                     	;# 
  1035  0093                     	;# 
  1036  0095                     	;# 
  1037  0096                     	;# 
  1038  0097                     	;# 
  1039  0098                     	;# 
  1040  0099                     	;# 
  1041  009A                     	;# 
  1042  009B                     	;# 
  1043  009B                     	;# 
  1044  009C                     	;# 
  1045  009D                     	;# 
  1046  009E                     	;# 
  1047  009F                     	;# 
  1048  010C                     	;# 
  1049  010D                     	;# 
  1050  010E                     	;# 
  1051  010F                     	;# 
  1052  0110                     	;# 
  1053  0111                     	;# 
  1054  0112                     	;# 
  1055  0113                     	;# 
  1056  0114                     	;# 
  1057  0115                     	;# 
  1058  0116                     	;# 
  1059  0117                     	;# 
  1060  0118                     	;# 
  1061  0119                     	;# 
  1062  011A                     	;# 
  1063  011B                     	;# 
  1064  011B                     	;# 
  1065  011C                     	;# 
  1066  018C                     	;# 
  1067  018D                     	;# 
  1068  018E                     	;# 
  1069  018F                     	;# 
  1070  0190                     	;# 
  1071  0191                     	;# 
  1072  0191                     	;# 
  1073  0192                     	;# 
  1074  0193                     	;# 
  1075  0193                     	;# 
  1076  0194                     	;# 
  1077  0195                     	;# 
  1078  0196                     	;# 
  1079  0197                     	;# 
  1080  0199                     	;# 
  1081  0199                     	;# 
  1082  0199                     	;# 
  1083  019A                     	;# 
  1084  019A                     	;# 
  1085  019A                     	;# 
  1086  019B                     	;# 
  1087  019B                     	;# 
  1088  019B                     	;# 
  1089  019B                     	;# 
  1090  019B                     	;# 
  1091  019C                     	;# 
  1092  019C                     	;# 
  1093  019C                     	;# 
  1094  019D                     	;# 
  1095  019D                     	;# 
  1096  019D                     	;# 
  1097  019E                     	;# 
  1098  019E                     	;# 
  1099  019E                     	;# 
  1100  019F                     	;# 
  1101  019F                     	;# 
  1102  019F                     	;# 
  1103  019F                     	;# 
  1104  019F                     	;# 
  1105  020C                     	;# 
  1106  020D                     	;# 
  1107  020E                     	;# 
  1108  020F                     	;# 
  1109  0210                     	;# 
  1110  0211                     	;# 
  1111  0211                     	;# 
  1112  0212                     	;# 
  1113  0212                     	;# 
  1114  0213                     	;# 
  1115  0213                     	;# 
  1116  0214                     	;# 
  1117  0214                     	;# 
  1118  0215                     	;# 
  1119  0215                     	;# 
  1120  0215                     	;# 
  1121  0215                     	;# 
  1122  0216                     	;# 
  1123  0216                     	;# 
  1124  0217                     	;# 
  1125  0217                     	;# 
  1126  028C                     	;# 
  1127  028D                     	;# 
  1128  028E                     	;# 
  1129  028F                     	;# 
  1130  0290                     	;# 
  1131  0291                     	;# 
  1132  0291                     	;# 
  1133  0292                     	;# 
  1134  0293                     	;# 
  1135  0293                     	;# 
  1136  0298                     	;# 
  1137  0298                     	;# 
  1138  0299                     	;# 
  1139  029A                     	;# 
  1140  029A                     	;# 
  1141  029E                     	;# 
  1142  030C                     	;# 
  1143  030D                     	;# 
  1144  030E                     	;# 
  1145  030F                     	;# 
  1146  0310                     	;# 
  1147  038C                     	;# 
  1148  038D                     	;# 
  1149  038E                     	;# 
  1150  038F                     	;# 
  1151  0390                     	;# 
  1152  0391                     	;# 
  1153  0392                     	;# 
  1154  0393                     	;# 
  1155  0394                     	;# 
  1156  0395                     	;# 
  1157  0396                     	;# 
  1158  0397                     	;# 
  1159  0398                     	;# 
  1160  0399                     	;# 
  1161  039D                     	;# 
  1162  039E                     	;# 
  1163  039F                     	;# 
  1164  0415                     	;# 
  1165  0416                     	;# 
  1166  0417                     	;# 
  1167  041C                     	;# 
  1168  041D                     	;# 
  1169  041E                     	;# 
  1170  0498                     	;# 
  1171  0498                     	;# 
  1172  0499                     	;# 
  1173  049A                     	;# 
  1174  049B                     	;# 
  1175  049B                     	;# 
  1176  049C                     	;# 
  1177  049D                     	;# 
  1178  049E                     	;# 
  1179  049F                     	;# 
  1180  0511                     	;# 
  1181  0515                     	;# 
  1182  0617                     	;# 
  1183  0618                     	;# 
  1184  0619                     	;# 
  1185  0619                     	;# 
  1186  061A                     	;# 
  1187  061B                     	;# 
  1188  061C                     	;# 
  1189  061C                     	;# 
  1190  0691                     	;# 
  1191  0692                     	;# 
  1192  0693                     	;# 
  1193  0694                     	;# 
  1194  0695                     	;# 
  1195  0696                     	;# 
  1196  0697                     	;# 
  1197  0698                     	;# 
  1198  0699                     	;# 
  1199  069A                     	;# 
  1200  069B                     	;# 
  1201  069C                     	;# 
  1202  069D                     	;# 
  1203  069E                     	;# 
  1204  069F                     	;# 
  1205  0E0F                     	;# 
  1206  0E10                     	;# 
  1207  0E11                     	;# 
  1208  0E12                     	;# 
  1209  0E13                     	;# 
  1210  0E14                     	;# 
  1211  0E15                     	;# 
  1212  0E17                     	;# 
  1213  0E20                     	;# 
  1214  0E21                     	;# 
  1215  0E22                     	;# 
  1216  0E24                     	;# 
  1217  0E25                     	;# 
  1218  0E28                     	;# 
  1219  0E29                     	;# 
  1220  0E2A                     	;# 
  1221  0E2B                     	;# 
  1222  0E90                     	;# 
  1223  0E91                     	;# 
  1224  0E92                     	;# 
  1225  0E93                     	;# 
  1226  0E94                     	;# 
  1227  0E95                     	;# 
  1228  0E96                     	;# 
  1229  0E97                     	;# 
  1230  0E98                     	;# 
  1231  0E99                     	;# 
  1232  0E9A                     	;# 
  1233  0E9B                     	;# 
  1234  0E9C                     	;# 
  1235  0E9D                     	;# 
  1236  0E9E                     	;# 
  1237  0E9F                     	;# 
  1238  0EA0                     	;# 
  1239  0EA1                     	;# 
  1240  0EA2                     	;# 
  1241  0EA3                     	;# 
  1242  0EA4                     	;# 
  1243  0EA5                     	;# 
  1244  0EA6                     	;# 
  1245  0EA7                     	;# 
  1246  0EA8                     	;# 
  1247  0EA9                     	;# 
  1248  0EAA                     	;# 
  1249  0EAB                     	;# 
  1250  0EAC                     	;# 
  1251  0EAD                     	;# 
  1252  0EAE                     	;# 
  1253  0EAF                     	;# 
  1254  0EB0                     	;# 
  1255  0EB1                     	;# 
  1256  0EB2                     	;# 
  1257  0F0F                     	;# 
  1258  0F10                     	;# 
  1259  0F11                     	;# 
  1260  0F12                     	;# 
  1261  0F13                     	;# 
  1262  0F14                     	;# 
  1263  0F15                     	;# 
  1264  0F16                     	;# 
  1265  0F17                     	;# 
  1266  0F18                     	;# 
  1267  0F19                     	;# 
  1268  0F1A                     	;# 
  1269  0F1B                     	;# 
  1270  0F1C                     	;# 
  1271  0F1D                     	;# 
  1272  0F1E                     	;# 
  1273  0F1F                     	;# 
  1274  0F20                     	;# 
  1275  0F21                     	;# 
  1276  0F22                     	;# 
  1277  0F23                     	;# 
  1278  0F24                     	;# 
  1279  0F25                     	;# 
  1280  0F26                     	;# 
  1281  0F27                     	;# 
  1282  0F28                     	;# 
  1283  0F29                     	;# 
  1284  0F2A                     	;# 
  1285  0F2B                     	;# 
  1286  0F2C                     	;# 
  1287  0F2D                     	;# 
  1288  0F2E                     	;# 
  1289  0F2F                     	;# 
  1290  0F30                     	;# 
  1291  0F31                     	;# 
  1292  0F32                     	;# 
  1293  0F33                     	;# 
  1294  0F34                     	;# 
  1295  0F35                     	;# 
  1296  0F36                     	;# 
  1297  0F37                     	;# 
  1298  0FE4                     	;# 
  1299  0FE5                     	;# 
  1300  0FE6                     	;# 
  1301  0FE7                     	;# 
  1302  0FE8                     	;# 
  1303  0FE9                     	;# 
  1304  0FEA                     	;# 
  1305  0FEB                     	;# 
  1306  0FED                     	;# 
  1307  0FEE                     	;# 
  1308  0FEF                     	;# 
  1309  0011                     _PIR1bits	set	17
  1310  000D                     _PORTBbits	set	13
  1311  008D                     _TRISBbits	set	141
  1312  0476                     _TRISC6	set	1142
  1313  0477                     _TRISC7	set	1143
  1314  04CF                     _SPLLEN	set	1231
  1315  04CE                     _IRCF3	set	1230
  1316  04CD                     _IRCF2	set	1229
  1317  04CC                     _IRCF1	set	1228
  1318  04CB                     _IRCF0	set	1227
  1319  04C9                     _SCS1	set	1225
  1320  04C8                     _SCS0	set	1224
  1321  019A                     _TX1REG	set	410
  1322  0199                     _RC1REG	set	409
  1323  019D                     _RC1STAbits	set	413
  1324  019B                     _SPBRG	set	411
  1325  018D                     _ANSELBbits	set	397
  1326  0CF5                     _TXEN	set	3317
  1327  0CEC                     _CREN	set	3308
  1328  0CEF                     _SPEN	set	3311
  1329  0CF4                     _SYNC	set	3316
  1330  0CF2                     _BRGH	set	3314
  1331  0E24                     _RXPPSbits	set	3620
  1332  0E0F                     _PPSLOCKbits	set	3599
  1333  0E0F                     _PPSLOCK	set	3599
  1334  0E9A                     _RB2PPSbits	set	3738
  1335                           
  1336                           	psect	stringtext1
  1337  0800                     __pstringtext1:	
  1338  0800                     STR_3:	
  1339  0800  340A               	retlw	10
  1340  0801  3454               	retlw	84	;'T'
  1341  0802  3465               	retlw	101	;'e'
  1342  0803  346D               	retlw	109	;'m'
  1343  0804  3470               	retlw	112	;'p'
  1344  0805  3443               	retlw	67	;'C'
  1345  0806  3420               	retlw	32	;' '
  1346  0807  3464               	retlw	100	;'d'
  1347  0808  3465               	retlw	101	;'e'
  1348  0809  3467               	retlw	103	;'g'
  1349  080A  3472               	retlw	114	;'r'
  1350  080B  3465               	retlw	101	;'e'
  1351  080C  3465               	retlw	101	;'e'
  1352  080D  3473               	retlw	115	;'s'
  1353  080E  3420               	retlw	32	;' '
  1354  080F  3443               	retlw	67	;'C'
  1355  0810  3409               	retlw	9
  1356  0811  343A               	retlw	58	;':'
  1357  0812  3400               	retlw	0
  1358                           
  1359                           	psect	stringtext2
  1360  0813                     __pstringtext2:	
  1361  0813                     STR_4:	
  1362  0813  340A               	retlw	10
  1363  0814  3454               	retlw	84	;'T'
  1364  0815  3465               	retlw	101	;'e'
  1365  0816  346D               	retlw	109	;'m'
  1366  0817  3470               	retlw	112	;'p'
  1367  0818  3446               	retlw	70	;'F'
  1368  0819  3420               	retlw	32	;' '
  1369  081A  3464               	retlw	100	;'d'
  1370  081B  3465               	retlw	101	;'e'
  1371  081C  3467               	retlw	103	;'g'
  1372  081D  3472               	retlw	114	;'r'
  1373  081E  3465               	retlw	101	;'e'
  1374  081F  3465               	retlw	101	;'e'
  1375  0820  3473               	retlw	115	;'s'
  1376  0821  3420               	retlw	32	;' '
  1377  0822  3446               	retlw	70	;'F'
  1378  0823  3409               	retlw	9
  1379  0824  343A               	retlw	58	;':'
  1380  0825  3400               	retlw	0
  1381                           
  1382                           	psect	stringtext3
  1383  0826                     __pstringtext3:	
  1384  0826                     STR_2:	
  1385  0826  3444               	retlw	68	;'D'
  1386  0827  3465               	retlw	101	;'e'
  1387  0828  3476               	retlw	118	;'v'
  1388  0829  3469               	retlw	105	;'i'
  1389  082A  3463               	retlw	99	;'c'
  1390  082B  3465               	retlw	101	;'e'
  1391  082C  3420               	retlw	32	;' '
  1392  082D  346E               	retlw	110	;'n'
  1393  082E  346F               	retlw	111	;'o'
  1394  082F  3474               	retlw	116	;'t'
  1395  0830  3420               	retlw	32	;' '
  1396  0831  3470               	retlw	112	;'p'
  1397  0832  3472               	retlw	114	;'r'
  1398  0833  3465               	retlw	101	;'e'
  1399  0834  3473               	retlw	115	;'s'
  1400  0835  3465               	retlw	101	;'e'
  1401  0836  346E               	retlw	110	;'n'
  1402  0837  3474               	retlw	116	;'t'
  1403  0838  3400               	retlw	0
  1404                           
  1405                           	psect	stringtext4
  1406  0839                     __pstringtext4:	
  1407  0839                     STR_1:	
  1408  0839  3444               	retlw	68	;'D'
  1409  083A  3465               	retlw	101	;'e'
  1410  083B  3476               	retlw	118	;'v'
  1411  083C  3469               	retlw	105	;'i'
  1412  083D  3463               	retlw	99	;'c'
  1413  083E  3465               	retlw	101	;'e'
  1414  083F  3420               	retlw	32	;' '
  1415  0840  3469               	retlw	105	;'i'
  1416  0841  3473               	retlw	115	;'s'
  1417  0842  3420               	retlw	32	;' '
  1418  0843  3450               	retlw	80	;'P'
  1419  0844  3472               	retlw	114	;'r'
  1420  0845  3465               	retlw	101	;'e'
  1421  0846  3473               	retlw	115	;'s'
  1422  0847  3465               	retlw	101	;'e'
  1423  0848  346E               	retlw	110	;'n'
  1424  0849  3474               	retlw	116	;'t'
  1425  084A  3400               	retlw	0
  1426                           
  1427                           	psect	stringtext5
  1428  0000                     __pstringtext5:	
  1429                           
  1430                           ; #config settings
  1431  0000                     
  1432                           	psect	cinit
  1433  07F6                     start_initialization:	
  1434  07F6                     __initialization:	
  1435                           
  1436                           ; Clear objects allocated to BANK0
  1437  07F6  3043               	movlw	low __pbssBANK0
  1438  07F7  0084               	movwf	4
  1439  07F8  3000               	movlw	high __pbssBANK0
  1440  07F9  0085               	movwf	5
  1441  07FA  3010               	movlw	16
  1442  07FB  3183  2333         	fcall	clear_ram0
  1443  07FD                     end_of_initialization:	
  1444                           ;End of C runtime variable initialization code
  1445                           
  1446  07FD                     __end_of__initialization:	
  1447  07FD  0020               	movlb	0
  1448  07FE  3186  2EBB         	ljmp	_main	;jump to C main() function
  1449                           
  1450                           	psect	bssBANK0
  1451  0043                     __pbssBANK0:	
  1452  0043                     _getDat:	
  1453  0043                     	ds	10
  1454  004D                     _loop_var:	
  1455  004D                     	ds	2
  1456  004F                     _cel_temp:	
  1457  004F                     	ds	1
  1458  0050                     _far_temp:	
  1459  0050                     	ds	1
  1460  0051                     _TEMP_MSB:	
  1461  0051                     	ds	1
  1462  0052                     _TEMP_LSB:	
  1463  0052                     	ds	1
  1464                           
  1465                           	psect	clrtext
  1466  0333                     clear_ram0:	
  1467                           ;	Called with FSR0 containing the base address, and
  1468                           ;	WREG with the size to clear
  1469                           
  1470  0333  0064               	clrwdt	;clear the watchdog before getting into this loop
  1471  0334                     clrloop0:	
  1472  0334  0180               	clrf	0	;clear RAM location pointed to by FSR
  1473  0335  3101               	addfsr 0,1
  1474  0336  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1475  0337  2B34               	goto	clrloop0	;have we reached the end yet?
  1476  0338  3400               	retlw	0	;all done for this memory range, return
  1477                           
  1478                           	psect	cstackCOMMON
  1479  0070                     __pcstackCOMMON:	
  1480  0070                     ?_OW_Init:	
  1481  0070                     ??_OW_Init:	
  1482                           ; 1 bytes @ 0x0
  1483                           
  1484  0070                     ?_OW_Reset:	
  1485                           ; 1 bytes @ 0x0
  1486                           
  1487  0070                     ??_OW_Reset:	
  1488                           ; 1 bytes @ 0x0
  1489                           
  1490  0070                     ?_OW_WriteByte:	
  1491                           ; 1 bytes @ 0x0
  1492                           
  1493  0070                     ?_OW_ReadByte:	
  1494                           ; 1 bytes @ 0x0
  1495                           
  1496  0070                     ?_internal_16:	
  1497                           ; 1 bytes @ 0x0
  1498                           
  1499  0070                     ??_internal_16:	
  1500                           ; 1 bytes @ 0x0
  1501                           
  1502  0070                     ?_initMain:	
  1503                           ; 1 bytes @ 0x0
  1504                           
  1505  0070                     ??_initMain:	
  1506                           ; 1 bytes @ 0x0
  1507                           
  1508  0070                     ?_main:	
  1509                           ; 1 bytes @ 0x0
  1510                           
  1511  0070                     ?_OW_ReadBit:	
  1512                           ; 1 bytes @ 0x0
  1513                           
  1514  0070                     ??_OW_ReadBit:	
  1515                           ; 1 bytes @ 0x0
  1516                           
  1517  0070                     ?_OW_WriteBit:	
  1518                           ; 1 bytes @ 0x0
  1519                           
  1520  0070                     ?_EUSART_Write:	
  1521                           ; 1 bytes @ 0x0
  1522                           
  1523  0070                     ??_EUSART_Write:	
  1524                           ; 1 bytes @ 0x0
  1525                           
  1526  0070                     ?___wmul:	
  1527                           ; 1 bytes @ 0x0
  1528                           
  1529  0070                     ?___lwdiv:	
  1530                           ; 2 bytes @ 0x0
  1531                           
  1532  0070                     ?___lwmod:	
  1533                           ; 2 bytes @ 0x0
  1534                           
  1535  0070                     ?___aldiv:	
  1536                           ; 2 bytes @ 0x0
  1537                           
  1538  0070                     OW_ReadBit@result:	
  1539                           ; 4 bytes @ 0x0
  1540                           
  1541  0070                     EUSART_Write@txData:	
  1542                           ; 1 bytes @ 0x0
  1543                           
  1544  0070                     OW_WriteBit@b:	
  1545                           ; 1 bytes @ 0x0
  1546                           
  1547  0070                     ___wmul@multiplier:	
  1548                           ; 2 bytes @ 0x0
  1549                           
  1550  0070                     ___lwdiv@divisor:	
  1551                           ; 2 bytes @ 0x0
  1552                           
  1553  0070                     ___lwmod@divisor:	
  1554                           ; 2 bytes @ 0x0
  1555                           
  1556  0070                     ___aldiv@divisor:	
  1557                           ; 2 bytes @ 0x0
  1558                           
  1559                           
  1560                           ; 4 bytes @ 0x0
  1561  0070                     	ds	1
  1562  0071                     ??_OW_ReadByte:	
  1563                           
  1564                           ; 1 bytes @ 0x1
  1565  0071                     	ds	1
  1566  0072                     ??_OW_WriteByte:	
  1567  0072                     ??_OW_WriteBit:	
  1568                           ; 1 bytes @ 0x2
  1569                           
  1570  0072                     ___wmul@multiplicand:	
  1571                           ; 1 bytes @ 0x2
  1572                           
  1573  0072                     ___lwdiv@dividend:	
  1574                           ; 2 bytes @ 0x2
  1575                           
  1576  0072                     ___lwmod@dividend:	
  1577                           ; 2 bytes @ 0x2
  1578                           
  1579                           
  1580                           ; 2 bytes @ 0x2
  1581  0072                     	ds	1
  1582  0073                     OW_ReadByte@value:	
  1583                           
  1584                           ; 1 bytes @ 0x3
  1585  0073                     	ds	1
  1586  0074                     ??___wmul:	
  1587  0074                     ??___lwdiv:	
  1588                           ; 1 bytes @ 0x4
  1589                           
  1590  0074                     ??___lwmod:	
  1591                           ; 1 bytes @ 0x4
  1592                           
  1593  0074                     OW_ReadByte@i:	
  1594                           ; 1 bytes @ 0x4
  1595                           
  1596  0074                     OW_WriteByte@val:	
  1597                           ; 1 bytes @ 0x4
  1598                           
  1599  0074                     ___wmul@product:	
  1600                           ; 1 bytes @ 0x4
  1601                           
  1602  0074                     ___aldiv@dividend:	
  1603                           ; 2 bytes @ 0x4
  1604                           
  1605                           
  1606                           ; 4 bytes @ 0x4
  1607  0074                     	ds	1
  1608  0075                     OW_WriteByte@temp:	
  1609  0075                     ___lwmod@counter:	
  1610                           ; 1 bytes @ 0x5
  1611                           
  1612  0075                     ___lwdiv@quotient:	
  1613                           ; 1 bytes @ 0x5
  1614                           
  1615                           
  1616                           ; 2 bytes @ 0x5
  1617  0075                     	ds	1
  1618  0076                     ?___awdiv:	
  1619  0076                     OW_WriteByte@i:	
  1620                           ; 2 bytes @ 0x6
  1621                           
  1622  0076                     ___awdiv@divisor:	
  1623                           ; 1 bytes @ 0x6
  1624                           
  1625                           
  1626                           ; 2 bytes @ 0x6
  1627  0076                     	ds	1
  1628  0077                     ___lwdiv@counter:	
  1629                           
  1630                           ; 1 bytes @ 0x7
  1631  0077                     	ds	1
  1632  0078                     ?_utoa:	
  1633  0078                     ??___aldiv:	
  1634                           ; 1 bytes @ 0x8
  1635                           
  1636  0078                     ___awdiv@dividend:	
  1637                           ; 1 bytes @ 0x8
  1638                           
  1639  0078                     utoa@val:	
  1640                           ; 2 bytes @ 0x8
  1641                           
  1642                           
  1643                           ; 2 bytes @ 0x8
  1644  0078                     	ds	1
  1645  0079                     EUSART_Initialize@x:	
  1646                           
  1647                           ; 2 bytes @ 0x9
  1648  0079                     	ds	1
  1649  007A                     ??___awdiv:	
  1650  007A                     utoa@base:	
  1651                           ; 1 bytes @ 0xA
  1652                           
  1653                           
  1654                           ; 2 bytes @ 0xA
  1655  007A                     	ds	2
  1656  007C                     ??_utoa:	
  1657                           
  1658                           ; 1 bytes @ 0xC
  1659  007C                     	ds	1
  1660  007D                     ??_itoa:	
  1661                           
  1662                           ; 1 bytes @ 0xD
  1663  007D                     	ds	1
  1664                           
  1665                           	psect	cstackBANK0
  1666  0020                     __pcstackBANK0:	
  1667  0020                     ___aldiv@counter:	
  1668  0020                     ___awdiv@counter:	
  1669                           ; 1 bytes @ 0x0
  1670                           
  1671  0020                     utoa@v:	
  1672                           ; 1 bytes @ 0x0
  1673                           
  1674                           
  1675                           ; 2 bytes @ 0x0
  1676  0020                     	ds	1
  1677  0021                     ___aldiv@sign:	
  1678  0021                     ___awdiv@sign:	
  1679                           ; 1 bytes @ 0x1
  1680                           
  1681                           
  1682                           ; 1 bytes @ 0x1
  1683  0021                     	ds	1
  1684  0022                     utoa@c:	
  1685  0022                     ___awdiv@quotient:	
  1686                           ; 1 bytes @ 0x2
  1687                           
  1688  0022                     ___aldiv@quotient:	
  1689                           ; 2 bytes @ 0x2
  1690                           
  1691                           
  1692                           ; 4 bytes @ 0x2
  1693  0022                     	ds	1
  1694  0023                     utoa@buf:	
  1695                           
  1696                           ; 1 bytes @ 0x3
  1697  0023                     	ds	1
  1698  0024                     ?_itoa:	
  1699  0024                     itoa@val:	
  1700                           ; 1 bytes @ 0x4
  1701                           
  1702                           
  1703                           ; 2 bytes @ 0x4
  1704  0024                     	ds	2
  1705  0026                     ?_EUSART_Initialize:	
  1706  0026                     itoa@base:	
  1707                           ; 1 bytes @ 0x6
  1708                           
  1709  0026                     EUSART_Initialize@baudrate:	
  1710                           ; 2 bytes @ 0x6
  1711                           
  1712                           
  1713                           ; 4 bytes @ 0x6
  1714  0026                     	ds	2
  1715  0028                     itoa@cp:	
  1716                           
  1717                           ; 1 bytes @ 0x8
  1718  0028                     	ds	1
  1719  0029                     itoa@buf:	
  1720                           
  1721                           ; 1 bytes @ 0x9
  1722  0029                     	ds	1
  1723  002A                     ??_EUSART_Initialize:	
  1724  002A                     ?_EUSART_Write_Text:	
  1725                           ; 1 bytes @ 0xA
  1726                           
  1727  002A                     EUSART_Write_Text@text:	
  1728                           ; 1 bytes @ 0xA
  1729                           
  1730                           
  1731                           ; 2 bytes @ 0xA
  1732  002A                     	ds	2
  1733  002C                     ??_EUSART_Write_Text:	
  1734                           
  1735                           ; 1 bytes @ 0xC
  1736  002C                     	ds	1
  1737  002D                     EUSART_Write_Text@i:	
  1738                           
  1739                           ; 2 bytes @ 0xD
  1740  002D                     	ds	9
  1741  0036                     ??_main:	
  1742                           
  1743                           ; 1 bytes @ 0x16
  1744  0036                     	ds	3
  1745  0039                     main@buf:	
  1746                           
  1747                           ; 8 bytes @ 0x19
  1748  0039                     	ds	8
  1749  0041                     main@present:	
  1750                           
  1751                           ; 2 bytes @ 0x21
  1752  0041                     	ds	2
  1753                           
  1754                           	psect	maintext
  1755  06BB                     __pmaintext:	
  1756 ;;
  1757 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1758 ;;
  1759 ;; *************** function _main *****************
  1760 ;; Defined at:
  1761 ;;		line 84 in file "Main.c"
  1762 ;; Parameters:    Size  Location     Type
  1763 ;;		None
  1764 ;; Auto vars:     Size  Location     Type
  1765 ;;  buf             8   25[BANK0 ] unsigned char [8]
  1766 ;;  present         2   33[BANK0 ] int 
  1767 ;; Return value:  Size  Location     Type
  1768 ;;                  1    wreg      void 
  1769 ;; Registers used:
  1770 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1771 ;; Tracked objects:
  1772 ;;		On entry : B1F/0
  1773 ;;		On exit  : 0/0
  1774 ;;		Unchanged: 0/0
  1775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1777 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1778 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1779 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1780 ;;Total ram usage:       13 bytes
  1781 ;; Hardware stack levels required when called:    3
  1782 ;; This function calls:
  1783 ;;		_EUSART_Initialize
  1784 ;;		_EUSART_Write_Text
  1785 ;;		_OW_Init
  1786 ;;		_OW_ReadByte
  1787 ;;		_OW_Reset
  1788 ;;		_OW_WriteByte
  1789 ;;		___awdiv
  1790 ;;		___wmul
  1791 ;;		_initMain
  1792 ;;		_itoa
  1793 ;; This function is called by:
  1794 ;;		Startup code after reset
  1795 ;; This function uses a non-reentrant model
  1796 ;;
  1797                           
  1798                           
  1799                           ;psect for function _main
  1800  06BB                     _main:	
  1801                           
  1802                           ;Main.c: 85: initMain();
  1803                           
  1804                           ;incstack = 0
  1805                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1806  06BB  3183  2398  3186   	fcall	_initMain
  1807                           
  1808                           ;Main.c: 87: int present;;Main.c: 91: EUSART_Initialize(19200);
  1809  06BE  3000               	movlw	0
  1810  06BF  0020               	movlb	0	; select bank0
  1811  06C0  00A9               	movwf	EUSART_Initialize@baudrate+3
  1812  06C1  3000               	movlw	0
  1813  06C2  00A8               	movwf	EUSART_Initialize@baudrate+2
  1814  06C3  304B               	movlw	75
  1815  06C4  00A7               	movwf	EUSART_Initialize@baudrate+1
  1816  06C5  3000               	movlw	0
  1817  06C6  00A6               	movwf	EUSART_Initialize@baudrate
  1818  06C7  3186  2613  3186   	fcall	_EUSART_Initialize
  1819                           
  1820                           ;Main.c: 95: unsigned char buf[8];;Main.c: 96: OW_Init();
  1821  06CA  3183  2330  3186   	fcall	_OW_Init
  1822                           
  1823                           ;Main.c: 98: present = OW_Reset();
  1824  06CD  3184  2429  3186   	fcall	_OW_Reset
  1825  06D0  0020               	movlb	0	; select bank0
  1826  06D1  00B6               	movwf	??_main
  1827  06D2  01B7               	clrf	??_main+1
  1828  06D3  0836               	movf	??_main,w
  1829  06D4  00C1               	movwf	main@present
  1830  06D5  0837               	movf	??_main+1,w
  1831  06D6  00C2               	movwf	main@present+1
  1832                           
  1833                           ;Main.c: 100: if (present == 0)
  1834  06D7  0841               	movf	main@present,w
  1835  06D8  0442               	iorwf	main@present+1,w
  1836  06D9  1D03               	btfss	3,2
  1837  06DA  2EE3               	goto	l1559
  1838                           
  1839                           ;Main.c: 101: {;Main.c: 102: EUSART_Write_Text("Device is Present");
  1840  06DB  3039               	movlw	low (STR_1| (0+32768))
  1841  06DC  00AA               	movwf	EUSART_Write_Text@text
  1842  06DD  3088               	movlw	high (STR_1| (0+32768))
  1843  06DE  00AB               	movwf	EUSART_Write_Text@text+1
  1844  06DF  3183  237C  3186   	fcall	_EUSART_Write_Text
  1845                           
  1846                           ;Main.c: 103: }
  1847  06E2  2EEB               	goto	l1563
  1848  06E3                     l1559:	
  1849                           
  1850                           ;Main.c: 105: else;Main.c: 106: {;Main.c: 107: EUSART_Write_Text("Device not present");
  1851  06E3  3026               	movlw	low (STR_2| (0+32768))
  1852  06E4  00AA               	movwf	EUSART_Write_Text@text
  1853  06E5  3088               	movlw	high (STR_2| (0+32768))
  1854  06E6  00AB               	movwf	EUSART_Write_Text@text+1
  1855  06E7  3183  237C  3186   	fcall	_EUSART_Write_Text
  1856  06EA  2FF4               	goto	l87
  1857  06EB                     l1563:	
  1858                           
  1859                           ;Main.c: 113: OW_Reset();
  1860  06EB  3184  2429  3186   	fcall	_OW_Reset
  1861                           
  1862                           ;Main.c: 114: OW_WriteByte(0xCC);
  1863  06EE  30CC               	movlw	204
  1864  06EF  3184  2451  3186   	fcall	_OW_WriteByte
  1865                           
  1866                           ;Main.c: 115: OW_WriteByte(0x44);
  1867  06F2  3044               	movlw	68
  1868  06F3  3184  2451  3186   	fcall	_OW_WriteByte
  1869                           
  1870                           ;Main.c: 116: _delay((unsigned long)((5)*(16000000/4000.0)));
  1871  06F6  301A               	movlw	26
  1872  06F7  0020               	movlb	0	; select bank0
  1873  06F8  00B6               	movwf	??_main
  1874  06F9  30F8               	movlw	248
  1875  06FA                     u1287:	
  1876  06FA  0B89               	decfsz	9,f
  1877  06FB  2EFA               	goto	u1287
  1878  06FC  0BB6               	decfsz	??_main,f
  1879  06FD  2EFA               	goto	u1287
  1880  06FE  0000               	nop
  1881                           
  1882                           ;Main.c: 118: OW_Reset();
  1883  06FF  3184  2429  3186   	fcall	_OW_Reset
  1884                           
  1885                           ;Main.c: 119: OW_WriteByte(0xCC);
  1886  0702  30CC               	movlw	204
  1887  0703  3184  2451  3186   	fcall	_OW_WriteByte
  1888                           
  1889                           ;Main.c: 120: OW_WriteByte(0xBE);
  1890  0706  30BE               	movlw	190
  1891  0707  3184  2451  3186   	fcall	_OW_WriteByte
  1892                           
  1893                           ;Main.c: 123: for(loop_var=0;loop_var<9;loop_var++)
  1894  070A  0020               	movlb	0	; select bank0
  1895  070B  01CD               	clrf	_loop_var
  1896  070C  01CE               	clrf	_loop_var+1
  1897  070D                     l1579:	
  1898                           
  1899                           ;Main.c: 124: {;Main.c: 125: getDat[loop_var] = OW_ReadByte();
  1900  070D  3183  23B8  3186   	fcall	_OW_ReadByte
  1901  0710  0020               	movlb	0	; select bank0
  1902  0711  00B6               	movwf	??_main
  1903  0712  084D               	movf	_loop_var,w
  1904  0713  3E43               	addlw	(low (_getDat| 0))& (0+255)
  1905  0714  0086               	movwf	6
  1906  0715  0187               	clrf	7
  1907  0716  0836               	movf	??_main,w
  1908  0717  0081               	movwf	1
  1909  0718  3001               	movlw	1
  1910  0719  07CD               	addwf	_loop_var,f
  1911  071A  3000               	movlw	0
  1912  071B  3DCE               	addwfc	_loop_var+1,f
  1913  071C  084E               	movf	_loop_var+1,w
  1914  071D  3A80               	xorlw	128
  1915  071E  00B6               	movwf	??_main
  1916  071F  3080               	movlw	128
  1917  0720  0236               	subwf	??_main,w
  1918  0721  1D03               	skipz
  1919  0722  2F25               	goto	u1235
  1920  0723  3009               	movlw	9
  1921  0724  024D               	subwf	_loop_var,w
  1922  0725                     u1235:	
  1923  0725  1C03               	skipc
  1924  0726  2F0D               	goto	l1579
  1925                           
  1926                           ;Main.c: 126: };Main.c: 129: TEMP_MSB = getDat[1];
  1927  0727  0020               	movlb	0	; select bank0
  1928  0728  0844               	movf	_getDat+1,w
  1929  0729  00B6               	movwf	??_main
  1930  072A  0836               	movf	??_main,w
  1931  072B  00D1               	movwf	_TEMP_MSB
  1932                           
  1933                           ;Main.c: 130: TEMP_LSB = getDat[0];
  1934  072C  0843               	movf	_getDat,w
  1935  072D  00B6               	movwf	??_main
  1936  072E  0836               	movf	??_main,w
  1937  072F  00D2               	movwf	_TEMP_LSB
  1938                           
  1939                           ;Main.c: 132: EUSART_Write_Text(itoa(buf, (int)TEMP_MSB, 10));
  1940  0730  0851               	movf	_TEMP_MSB,w
  1941  0731  00B6               	movwf	??_main
  1942  0732  01B7               	clrf	??_main+1
  1943  0733  0836               	movf	??_main,w
  1944  0734  00A4               	movwf	itoa@val
  1945  0735  0837               	movf	??_main+1,w
  1946  0736  00A5               	movwf	itoa@val+1
  1947  0737  300A               	movlw	10
  1948  0738  00A6               	movwf	itoa@base
  1949  0739  3000               	movlw	0
  1950  073A  00A7               	movwf	itoa@base+1
  1951  073B  3039               	movlw	(low (main@buf| 0))& (0+255)
  1952  073C  3183  23DC  3186   	fcall	_itoa
  1953  073F  0020               	movlb	0	; select bank0
  1954  0740  00AA               	movwf	EUSART_Write_Text@text
  1955  0741  3000               	movlw	0
  1956  0742  00AB               	movwf	EUSART_Write_Text@text+1
  1957  0743  3183  237C  3186   	fcall	_EUSART_Write_Text
  1958                           
  1959                           ;Main.c: 133: if (TEMP_MSB <= 0x80)
  1960  0746  3081               	movlw	129
  1961  0747  0020               	movlb	0	; select bank0
  1962  0748  0251               	subwf	_TEMP_MSB,w
  1963  0749  1803               	skipnc
  1964  074A  2F5E               	goto	l1593
  1965                           
  1966                           ;Main.c: 134: {;Main.c: 135: TEMP_LSB = (TEMP_LSB/2);
  1967  074B  3002               	movlw	2
  1968  074C  00F6               	movwf	___awdiv@divisor
  1969  074D  3000               	movlw	0
  1970  074E  00F7               	movwf	___awdiv@divisor+1
  1971  074F  0852               	movf	_TEMP_LSB,w
  1972  0750  00B6               	movwf	??_main
  1973  0751  01B7               	clrf	??_main+1
  1974  0752  0836               	movf	??_main,w
  1975  0753  00F8               	movwf	___awdiv@dividend
  1976  0754  0837               	movf	??_main+1,w
  1977  0755  00F9               	movwf	___awdiv@dividend+1
  1978  0756  3184  24DD  3186   	fcall	___awdiv
  1979  0759  0876               	movf	?___awdiv,w
  1980  075A  0020               	movlb	0	; select bank0
  1981  075B  00B8               	movwf	??_main+2
  1982  075C  0838               	movf	??_main+2,w
  1983  075D  00D2               	movwf	_TEMP_LSB
  1984  075E                     l1593:	
  1985                           
  1986                           ;Main.c: 136: };Main.c: 138: TEMP_MSB = TEMP_MSB & 0x80;
  1987  075E  0851               	movf	_TEMP_MSB,w
  1988  075F  3980               	andlw	128
  1989  0760  00B6               	movwf	??_main
  1990  0761  0836               	movf	??_main,w
  1991  0762  00D1               	movwf	_TEMP_MSB
  1992                           
  1993                           ;Main.c: 140: if (TEMP_MSB >= 0x80)
  1994  0763  3080               	movlw	128
  1995  0764  0251               	subwf	_TEMP_MSB,w
  1996  0765  1C03               	skipc
  1997  0766  2F69               	goto	l1599
  1998                           
  1999                           ;Main.c: 141: {;Main.c: 142: TEMP_LSB = (~TEMP_LSB)+1;
  2000  0767  09D2               	comf	_TEMP_LSB,f
  2001  0768  0AD2               	incf	_TEMP_LSB,f
  2002  0769                     l1599:	
  2003                           
  2004                           ;Main.c: 143: };Main.c: 145: if (TEMP_MSB >= 0x80)
  2005  0769  3080               	movlw	128
  2006  076A  0251               	subwf	_TEMP_MSB,w
  2007  076B  1C03               	skipc
  2008  076C  2F80               	goto	l1603
  2009                           
  2010                           ;Main.c: 146: {;Main.c: 147: TEMP_LSB = (TEMP_LSB/2);
  2011  076D  3002               	movlw	2
  2012  076E  00F6               	movwf	___awdiv@divisor
  2013  076F  3000               	movlw	0
  2014  0770  00F7               	movwf	___awdiv@divisor+1
  2015  0771  0852               	movf	_TEMP_LSB,w
  2016  0772  00B6               	movwf	??_main
  2017  0773  01B7               	clrf	??_main+1
  2018  0774  0836               	movf	??_main,w
  2019  0775  00F8               	movwf	___awdiv@dividend
  2020  0776  0837               	movf	??_main+1,w
  2021  0777  00F9               	movwf	___awdiv@dividend+1
  2022  0778  3184  24DD  3186   	fcall	___awdiv
  2023  077B  0876               	movf	?___awdiv,w
  2024  077C  0020               	movlb	0	; select bank0
  2025  077D  00B8               	movwf	??_main+2
  2026  077E  0838               	movf	??_main+2,w
  2027  077F  00D2               	movwf	_TEMP_LSB
  2028  0780                     l1603:	
  2029                           
  2030                           ;Main.c: 148: };Main.c: 150: if (TEMP_MSB >= 0x80)
  2031  0780  3080               	movlw	128
  2032  0781  0251               	subwf	_TEMP_MSB,w
  2033  0782  1C03               	skipc
  2034  0783  2F86               	goto	l1607
  2035                           
  2036                           ;Main.c: 151: {;Main.c: 152: TEMP_LSB = ((-1)*TEMP_LSB);
  2037  0784  09D2               	comf	_TEMP_LSB,f
  2038  0785  0AD2               	incf	_TEMP_LSB,f
  2039  0786                     l1607:	
  2040                           
  2041                           ;Main.c: 153: };Main.c: 156: EUSART_Write_Text( "\nTempC degrees C\t:");
  2042  0786  3000               	movlw	low (STR_3| (0+32768))
  2043  0787  00AA               	movwf	EUSART_Write_Text@text
  2044  0788  3088               	movlw	high (STR_3| (0+32768))
  2045  0789  00AB               	movwf	EUSART_Write_Text@text+1
  2046  078A  3183  237C  3186   	fcall	_EUSART_Write_Text
  2047                           
  2048                           ;Main.c: 157: EUSART_Write_Text(itoa(buf, (int)TEMP_LSB, 10));
  2049  078D  0020               	movlb	0	; select bank0
  2050  078E  0852               	movf	_TEMP_LSB,w
  2051  078F  00B6               	movwf	??_main
  2052  0790  01B7               	clrf	??_main+1
  2053  0791  0836               	movf	??_main,w
  2054  0792  00A4               	movwf	itoa@val
  2055  0793  0837               	movf	??_main+1,w
  2056  0794  00A5               	movwf	itoa@val+1
  2057  0795  300A               	movlw	10
  2058  0796  00A6               	movwf	itoa@base
  2059  0797  3000               	movlw	0
  2060  0798  00A7               	movwf	itoa@base+1
  2061  0799  3039               	movlw	(low (main@buf| 0))& (0+255)
  2062  079A  3183  23DC  3186   	fcall	_itoa
  2063  079D  0020               	movlb	0	; select bank0
  2064  079E  00AA               	movwf	EUSART_Write_Text@text
  2065  079F  3000               	movlw	0
  2066  07A0  00AB               	movwf	EUSART_Write_Text@text+1
  2067  07A1  3183  237C  3186   	fcall	_EUSART_Write_Text
  2068                           
  2069                           ;Main.c: 161: cel_temp = TEMP_LSB;
  2070  07A4  0020               	movlb	0	; select bank0
  2071  07A5  0852               	movf	_TEMP_LSB,w
  2072  07A6  00B6               	movwf	??_main
  2073  07A7  0836               	movf	??_main,w
  2074  07A8  00CF               	movwf	_cel_temp
  2075                           
  2076                           ;Main.c: 162: far_temp = (((int)cel_temp)* 9)/5 + 32;
  2077  07A9  3005               	movlw	5
  2078  07AA  00F6               	movwf	___awdiv@divisor
  2079  07AB  3000               	movlw	0
  2080  07AC  00F7               	movwf	___awdiv@divisor+1
  2081  07AD  084F               	movf	_cel_temp,w
  2082  07AE  00B6               	movwf	??_main
  2083  07AF  01B7               	clrf	??_main+1
  2084  07B0  0836               	movf	??_main,w
  2085  07B1  00F0               	movwf	___wmul@multiplier
  2086  07B2  0837               	movf	??_main+1,w
  2087  07B3  00F1               	movwf	___wmul@multiplier+1
  2088  07B4  3009               	movlw	9
  2089  07B5  00F2               	movwf	___wmul@multiplicand
  2090  07B6  3000               	movlw	0
  2091  07B7  00F3               	movwf	___wmul@multiplicand+1
  2092  07B8  3183  2361  3186   	fcall	___wmul
  2093  07BB  0871               	movf	?___wmul+1,w
  2094  07BC  00F9               	movwf	___awdiv@dividend+1
  2095  07BD  0870               	movf	?___wmul,w
  2096  07BE  00F8               	movwf	___awdiv@dividend
  2097  07BF  3184  24DD  3186   	fcall	___awdiv
  2098  07C2  0876               	movf	?___awdiv,w
  2099  07C3  3E20               	addlw	32
  2100  07C4  0020               	movlb	0	; select bank0
  2101  07C5  00B8               	movwf	??_main+2
  2102  07C6  0838               	movf	??_main+2,w
  2103  07C7  00D0               	movwf	_far_temp
  2104                           
  2105                           ;Main.c: 165: EUSART_Write_Text( "\nTempF degrees F\t:");
  2106  07C8  3013               	movlw	low (STR_4| (0+32768))
  2107  07C9  00AA               	movwf	EUSART_Write_Text@text
  2108  07CA  3088               	movlw	high (STR_4| (0+32768))
  2109  07CB  00AB               	movwf	EUSART_Write_Text@text+1
  2110  07CC  3183  237C  3186   	fcall	_EUSART_Write_Text
  2111                           
  2112                           ;Main.c: 166: EUSART_Write_Text(itoa(buf, (int)far_temp, 10));
  2113  07CF  0020               	movlb	0	; select bank0
  2114  07D0  0850               	movf	_far_temp,w
  2115  07D1  00B6               	movwf	??_main
  2116  07D2  01B7               	clrf	??_main+1
  2117  07D3  0836               	movf	??_main,w
  2118  07D4  00A4               	movwf	itoa@val
  2119  07D5  0837               	movf	??_main+1,w
  2120  07D6  00A5               	movwf	itoa@val+1
  2121  07D7  300A               	movlw	10
  2122  07D8  00A6               	movwf	itoa@base
  2123  07D9  3000               	movlw	0
  2124  07DA  00A7               	movwf	itoa@base+1
  2125  07DB  3039               	movlw	(low (main@buf| 0))& (0+255)
  2126  07DC  3183  23DC  3186   	fcall	_itoa
  2127  07DF  0020               	movlb	0	; select bank0
  2128  07E0  00AA               	movwf	EUSART_Write_Text@text
  2129  07E1  3000               	movlw	0
  2130  07E2  00AB               	movwf	EUSART_Write_Text@text+1
  2131  07E3  3183  237C  3186   	fcall	_EUSART_Write_Text
  2132                           
  2133                           ;Main.c: 167: _delay((unsigned long)((1000)*(16000000/4000.0)));
  2134  07E6  3015               	movlw	21
  2135  07E7  0020               	movlb	0	; select bank0
  2136  07E8  00B7               	movwf	??_main+1
  2137  07E9  304B               	movlw	75
  2138  07EA  00B6               	movwf	??_main
  2139  07EB  30BE               	movlw	190
  2140  07EC                     u1297:	
  2141  07EC  0B89               	decfsz	9,f
  2142  07ED  2FEC               	goto	u1297
  2143  07EE  0BB6               	decfsz	??_main,f
  2144  07EF  2FEC               	goto	u1297
  2145  07F0  0BB7               	decfsz	??_main+1,f
  2146  07F1  2FEC               	goto	u1297
  2147  07F2  0000               	nop
  2148  07F3  2EEB               	goto	l1563
  2149  07F4                     l87:	
  2150  07F4  3180  2802         	ljmp	start
  2151  07F6                     __end_of_main:	
  2152                           
  2153                           	psect	text1
  2154  03DC                     __ptext1:	
  2155 ;; *************** function _itoa *****************
  2156 ;; Defined at:
  2157 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\itoa.c"
  2158 ;; Parameters:    Size  Location     Type
  2159 ;;  buf             1    wreg     PTR unsigned char 
  2160 ;;		 -> main@buf(8), 
  2161 ;;  val             2    4[BANK0 ] int 
  2162 ;;  base            2    6[BANK0 ] int 
  2163 ;; Auto vars:     Size  Location     Type
  2164 ;;  buf             1    9[BANK0 ] PTR unsigned char 
  2165 ;;		 -> main@buf(8), 
  2166 ;;  cp              1    8[BANK0 ] PTR unsigned char 
  2167 ;;		 -> main@buf(8), 
  2168 ;; Return value:  Size  Location     Type
  2169 ;;                  1    wreg      PTR unsigned char 
  2170 ;; Registers used:
  2171 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2172 ;; Tracked objects:
  2173 ;;		On entry : 0/0
  2174 ;;		On exit  : 0/0
  2175 ;;		Unchanged: 0/0
  2176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2177 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2178 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2179 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2180 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2181 ;;Total ram usage:        7 bytes
  2182 ;; Hardware stack levels used:    1
  2183 ;; Hardware stack levels required when called:    2
  2184 ;; This function calls:
  2185 ;;		_utoa
  2186 ;; This function is called by:
  2187 ;;		_main
  2188 ;; This function uses a non-reentrant model
  2189 ;;
  2190                           
  2191                           
  2192                           ;psect for function _itoa
  2193  03DC                     _itoa:	
  2194                           
  2195                           ;incstack = 0
  2196                           ; Regs used in _itoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2197                           ;itoa@buf stored from wreg
  2198  03DC  0020               	movlb	0	; select bank0
  2199  03DD  00A9               	movwf	itoa@buf
  2200  03DE  0829               	movf	itoa@buf,w
  2201  03DF  00FD               	movwf	??_itoa
  2202  03E0  087D               	movf	??_itoa,w
  2203  03E1  00A8               	movwf	itoa@cp
  2204  03E2  1FA5               	btfss	itoa@val+1,7
  2205  03E3  2BF4               	goto	l1485
  2206  03E4  302D               	movlw	45
  2207  03E5  00FD               	movwf	??_itoa
  2208  03E6  0829               	movf	itoa@buf,w
  2209  03E7  0086               	movwf	6
  2210  03E8  0187               	clrf	7
  2211  03E9  087D               	movf	??_itoa,w
  2212  03EA  0081               	movwf	1
  2213  03EB  3001               	movlw	1
  2214  03EC  00FD               	movwf	??_itoa
  2215  03ED  087D               	movf	??_itoa,w
  2216  03EE  07A9               	addwf	itoa@buf,f
  2217  03EF  09A4               	comf	itoa@val,f
  2218  03F0  09A5               	comf	itoa@val+1,f
  2219  03F1  0AA4               	incf	itoa@val,f
  2220  03F2  1903               	skipnz
  2221  03F3  0AA5               	incf	itoa@val+1,f
  2222  03F4                     l1485:	
  2223  03F4  0825               	movf	itoa@val+1,w
  2224  03F5  00F9               	movwf	utoa@val+1
  2225  03F6  0824               	movf	itoa@val,w
  2226  03F7  00F8               	movwf	utoa@val
  2227  03F8  0827               	movf	itoa@base+1,w
  2228  03F9  00FB               	movwf	utoa@base+1
  2229  03FA  0826               	movf	itoa@base,w
  2230  03FB  00FA               	movwf	utoa@base
  2231  03FC  0829               	movf	itoa@buf,w
  2232  03FD  3185  252F         	fcall	_utoa
  2233  03FF  0020               	movlb	0	; select bank0
  2234  0400  0828               	movf	itoa@cp,w
  2235  0401  0008               	return
  2236  0402                     __end_of_itoa:	
  2237                           
  2238                           	psect	text2
  2239  052F                     __ptext2:	
  2240 ;; *************** function _utoa *****************
  2241 ;; Defined at:
  2242 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\itoa.c"
  2243 ;; Parameters:    Size  Location     Type
  2244 ;;  buf             1    wreg     PTR unsigned char 
  2245 ;;		 -> main@buf(8), 
  2246 ;;  val             2    8[COMMON] unsigned int 
  2247 ;;  base            2   10[COMMON] int 
  2248 ;; Auto vars:     Size  Location     Type
  2249 ;;  buf             1    3[BANK0 ] PTR unsigned char 
  2250 ;;		 -> main@buf(8), 
  2251 ;;  v               2    0[BANK0 ] unsigned int 
  2252 ;;  c               1    2[BANK0 ] unsigned char 
  2253 ;; Return value:  Size  Location     Type
  2254 ;;                  1    wreg      PTR unsigned char 
  2255 ;; Registers used:
  2256 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2257 ;; Tracked objects:
  2258 ;;		On entry : 0/0
  2259 ;;		On exit  : 0/0
  2260 ;;		Unchanged: 0/0
  2261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2262 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2263 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2264 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2265 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2266 ;;Total ram usage:        9 bytes
  2267 ;; Hardware stack levels used:    1
  2268 ;; Hardware stack levels required when called:    1
  2269 ;; This function calls:
  2270 ;;		___lwdiv
  2271 ;;		___lwmod
  2272 ;; This function is called by:
  2273 ;;		_itoa
  2274 ;; This function uses a non-reentrant model
  2275 ;;
  2276                           
  2277                           
  2278                           ;psect for function _utoa
  2279  052F                     _utoa:	
  2280                           
  2281                           ;incstack = 0
  2282                           ; Regs used in _utoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2283                           ;utoa@buf stored from wreg
  2284  052F  0020               	movlb	0	; select bank0
  2285  0530  00A3               	movwf	utoa@buf
  2286  0531  0879               	movf	utoa@val+1,w
  2287  0532  00A1               	movwf	utoa@v+1
  2288  0533  0878               	movf	utoa@val,w
  2289  0534  00A0               	movwf	utoa@v
  2290  0535                     l1335:	
  2291  0535  087B               	movf	utoa@base+1,w
  2292  0536  00F1               	movwf	___lwdiv@divisor+1
  2293  0537  087A               	movf	utoa@base,w
  2294  0538  00F0               	movwf	___lwdiv@divisor
  2295  0539  0821               	movf	utoa@v+1,w
  2296  053A  00F3               	movwf	___lwdiv@dividend+1
  2297  053B  0820               	movf	utoa@v,w
  2298  053C  00F2               	movwf	___lwdiv@dividend
  2299  053D  3184  24A9  3185   	fcall	___lwdiv
  2300  0540  0871               	movf	?___lwdiv+1,w
  2301  0541  0020               	movlb	0	; select bank0
  2302  0542  00A1               	movwf	utoa@v+1
  2303  0543  0870               	movf	?___lwdiv,w
  2304  0544  00A0               	movwf	utoa@v
  2305  0545  3001               	movlw	1
  2306  0546  00FC               	movwf	??_utoa
  2307  0547  087C               	movf	??_utoa,w
  2308  0548  07A3               	addwf	utoa@buf,f
  2309  0549  0820               	movf	utoa@v,w
  2310  054A  0421               	iorwf	utoa@v+1,w
  2311  054B  1D03               	btfss	3,2
  2312  054C  2D35               	goto	l1335
  2313  054D  0823               	movf	utoa@buf,w
  2314  054E  0086               	movwf	6
  2315  054F  0187               	clrf	7
  2316  0550  0181               	clrf	1
  2317  0551  3001               	movlw	1
  2318  0552  02A3               	subwf	utoa@buf,f
  2319  0553                     l1345:	
  2320  0553  087B               	movf	utoa@base+1,w
  2321  0554  00F1               	movwf	___lwmod@divisor+1
  2322  0555  087A               	movf	utoa@base,w
  2323  0556  00F0               	movwf	___lwmod@divisor
  2324  0557  0879               	movf	utoa@val+1,w
  2325  0558  00F3               	movwf	___lwmod@dividend+1
  2326  0559  0878               	movf	utoa@val,w
  2327  055A  00F2               	movwf	___lwmod@dividend
  2328  055B  3184  247D  3185   	fcall	___lwmod
  2329  055E  0870               	movf	?___lwmod,w
  2330  055F  00FC               	movwf	??_utoa
  2331  0560  087C               	movf	??_utoa,w
  2332  0561  0020               	movlb	0	; select bank0
  2333  0562  00A2               	movwf	utoa@c
  2334  0563  087B               	movf	utoa@base+1,w
  2335  0564  00F1               	movwf	___lwdiv@divisor+1
  2336  0565  087A               	movf	utoa@base,w
  2337  0566  00F0               	movwf	___lwdiv@divisor
  2338  0567  0879               	movf	utoa@val+1,w
  2339  0568  00F3               	movwf	___lwdiv@dividend+1
  2340  0569  0878               	movf	utoa@val,w
  2341  056A  00F2               	movwf	___lwdiv@dividend
  2342  056B  3184  24A9  3185   	fcall	___lwdiv
  2343  056E  0871               	movf	?___lwdiv+1,w
  2344  056F  00F9               	movwf	utoa@val+1
  2345  0570  0870               	movf	?___lwdiv,w
  2346  0571  00F8               	movwf	utoa@val
  2347  0572  300A               	movlw	10
  2348  0573  0020               	movlb	0	; select bank0
  2349  0574  0222               	subwf	utoa@c,w
  2350  0575  1C03               	skipc
  2351  0576  2D7B               	goto	l707
  2352  0577  3007               	movlw	7
  2353  0578  00FC               	movwf	??_utoa
  2354  0579  087C               	movf	??_utoa,w
  2355  057A  07A2               	addwf	utoa@c,f
  2356  057B                     l707:	
  2357  057B  3030               	movlw	48
  2358  057C  00FC               	movwf	??_utoa
  2359  057D  087C               	movf	??_utoa,w
  2360  057E  07A2               	addwf	utoa@c,f
  2361  057F  0822               	movf	utoa@c,w
  2362  0580  00FC               	movwf	??_utoa
  2363  0581  0823               	movf	utoa@buf,w
  2364  0582  0086               	movwf	6
  2365  0583  0187               	clrf	7
  2366  0584  087C               	movf	??_utoa,w
  2367  0585  0081               	movwf	1
  2368  0586  3001               	movlw	1
  2369  0587  02A3               	subwf	utoa@buf,f
  2370  0588  0878               	movf	utoa@val,w
  2371  0589  0479               	iorwf	utoa@val+1,w
  2372  058A  1D03               	btfss	3,2
  2373  058B  2D53               	goto	l1345
  2374                           
  2375                           ;	Return value of _utoa is never used
  2376  058C  3001               	movlw	1
  2377  058D  00FC               	movwf	??_utoa
  2378  058E  087C               	movf	??_utoa,w
  2379  058F  07A3               	addwf	utoa@buf,f
  2380  0590  0008               	return
  2381  0591                     __end_of_utoa:	
  2382                           
  2383                           	psect	text3
  2384  047D                     __ptext3:	
  2385 ;; *************** function ___lwmod *****************
  2386 ;; Defined at:
  2387 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
  2388 ;; Parameters:    Size  Location     Type
  2389 ;;  divisor         2    0[COMMON] unsigned int 
  2390 ;;  dividend        2    2[COMMON] unsigned int 
  2391 ;; Auto vars:     Size  Location     Type
  2392 ;;  counter         1    5[COMMON] unsigned char 
  2393 ;; Return value:  Size  Location     Type
  2394 ;;                  2    0[COMMON] unsigned int 
  2395 ;; Registers used:
  2396 ;;		wreg, status,2, status,0
  2397 ;; Tracked objects:
  2398 ;;		On entry : 0/0
  2399 ;;		On exit  : 0/0
  2400 ;;		Unchanged: 0/0
  2401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2402 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2403 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2404 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2405 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2406 ;;Total ram usage:        6 bytes
  2407 ;; Hardware stack levels used:    1
  2408 ;; This function calls:
  2409 ;;		Nothing
  2410 ;; This function is called by:
  2411 ;;		_utoa
  2412 ;; This function uses a non-reentrant model
  2413 ;;
  2414                           
  2415                           
  2416                           ;psect for function ___lwmod
  2417  047D                     ___lwmod:	
  2418                           
  2419                           ;incstack = 0
  2420                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2421  047D  0870               	movf	___lwmod@divisor,w
  2422  047E  0471               	iorwf	___lwmod@divisor+1,w
  2423  047F  1903               	btfsc	3,2
  2424  0480  2CA4               	goto	l1255
  2425  0481  01F5               	clrf	___lwmod@counter
  2426  0482  0AF5               	incf	___lwmod@counter,f
  2427  0483                     l1245:	
  2428  0483  1BF1               	btfsc	___lwmod@divisor+1,7
  2429  0484  2C8F               	goto	l1247
  2430  0485  3001               	movlw	1
  2431  0486                     u745:	
  2432  0486  35F0               	lslf	___lwmod@divisor,f
  2433  0487  0DF1               	rlf	___lwmod@divisor+1,f
  2434  0488  0B89               	decfsz	9,f
  2435  0489  2C86               	goto	u745
  2436  048A  3001               	movlw	1
  2437  048B  00F4               	movwf	??___lwmod
  2438  048C  0874               	movf	??___lwmod,w
  2439  048D  07F5               	addwf	___lwmod@counter,f
  2440  048E  2C83               	goto	l1245
  2441  048F                     l1247:	
  2442  048F  0871               	movf	___lwmod@divisor+1,w
  2443  0490  0273               	subwf	___lwmod@dividend+1,w
  2444  0491  1D03               	skipz
  2445  0492  2C95               	goto	u765
  2446  0493  0870               	movf	___lwmod@divisor,w
  2447  0494  0272               	subwf	___lwmod@dividend,w
  2448  0495                     u765:	
  2449  0495  1C03               	skipc
  2450  0496  2C9B               	goto	l1251
  2451  0497  0870               	movf	___lwmod@divisor,w
  2452  0498  02F2               	subwf	___lwmod@dividend,f
  2453  0499  0871               	movf	___lwmod@divisor+1,w
  2454  049A  3BF3               	subwfb	___lwmod@dividend+1,f
  2455  049B                     l1251:	
  2456  049B  3001               	movlw	1
  2457  049C                     u775:	
  2458  049C  36F1               	lsrf	___lwmod@divisor+1,f
  2459  049D  0CF0               	rrf	___lwmod@divisor,f
  2460  049E  0B89               	decfsz	9,f
  2461  049F  2C9C               	goto	u775
  2462  04A0  3001               	movlw	1
  2463  04A1  02F5               	subwf	___lwmod@counter,f
  2464  04A2  1D03               	btfss	3,2
  2465  04A3  2C8F               	goto	l1247
  2466  04A4                     l1255:	
  2467  04A4  0873               	movf	___lwmod@dividend+1,w
  2468  04A5  00F1               	movwf	?___lwmod+1
  2469  04A6  0872               	movf	___lwmod@dividend,w
  2470  04A7  00F0               	movwf	?___lwmod
  2471  04A8  0008               	return
  2472  04A9                     __end_of___lwmod:	
  2473                           
  2474                           	psect	text4
  2475  04A9                     __ptext4:	
  2476 ;; *************** function ___lwdiv *****************
  2477 ;; Defined at:
  2478 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  2479 ;; Parameters:    Size  Location     Type
  2480 ;;  divisor         2    0[COMMON] unsigned int 
  2481 ;;  dividend        2    2[COMMON] unsigned int 
  2482 ;; Auto vars:     Size  Location     Type
  2483 ;;  quotient        2    5[COMMON] unsigned int 
  2484 ;;  counter         1    7[COMMON] unsigned char 
  2485 ;; Return value:  Size  Location     Type
  2486 ;;                  2    0[COMMON] unsigned int 
  2487 ;; Registers used:
  2488 ;;		wreg, status,2, status,0
  2489 ;; Tracked objects:
  2490 ;;		On entry : 0/0
  2491 ;;		On exit  : 0/0
  2492 ;;		Unchanged: 0/0
  2493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2494 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2495 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2496 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2497 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2498 ;;Total ram usage:        8 bytes
  2499 ;; Hardware stack levels used:    1
  2500 ;; This function calls:
  2501 ;;		Nothing
  2502 ;; This function is called by:
  2503 ;;		_utoa
  2504 ;; This function uses a non-reentrant model
  2505 ;;
  2506                           
  2507                           
  2508                           ;psect for function ___lwdiv
  2509  04A9                     ___lwdiv:	
  2510                           
  2511                           ;incstack = 0
  2512                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2513  04A9  01F5               	clrf	___lwdiv@quotient
  2514  04AA  01F6               	clrf	___lwdiv@quotient+1
  2515  04AB  0870               	movf	___lwdiv@divisor,w
  2516  04AC  0471               	iorwf	___lwdiv@divisor+1,w
  2517  04AD  1903               	btfsc	3,2
  2518  04AE  2CD8               	goto	l1233
  2519  04AF  01F7               	clrf	___lwdiv@counter
  2520  04B0  0AF7               	incf	___lwdiv@counter,f
  2521  04B1                     l1221:	
  2522  04B1  1BF1               	btfsc	___lwdiv@divisor+1,7
  2523  04B2  2CBD               	goto	l1223
  2524  04B3  3001               	movlw	1
  2525  04B4                     u675:	
  2526  04B4  35F0               	lslf	___lwdiv@divisor,f
  2527  04B5  0DF1               	rlf	___lwdiv@divisor+1,f
  2528  04B6  0B89               	decfsz	9,f
  2529  04B7  2CB4               	goto	u675
  2530  04B8  3001               	movlw	1
  2531  04B9  00F4               	movwf	??___lwdiv
  2532  04BA  0874               	movf	??___lwdiv,w
  2533  04BB  07F7               	addwf	___lwdiv@counter,f
  2534  04BC  2CB1               	goto	l1221
  2535  04BD                     l1223:	
  2536  04BD  3001               	movlw	1
  2537  04BE                     u695:	
  2538  04BE  35F5               	lslf	___lwdiv@quotient,f
  2539  04BF  0DF6               	rlf	___lwdiv@quotient+1,f
  2540  04C0  0B89               	decfsz	9,f
  2541  04C1  2CBE               	goto	u695
  2542  04C2  0871               	movf	___lwdiv@divisor+1,w
  2543  04C3  0273               	subwf	___lwdiv@dividend+1,w
  2544  04C4  1D03               	skipz
  2545  04C5  2CC8               	goto	u705
  2546  04C6  0870               	movf	___lwdiv@divisor,w
  2547  04C7  0272               	subwf	___lwdiv@dividend,w
  2548  04C8                     u705:	
  2549  04C8  1C03               	skipc
  2550  04C9  2CCF               	goto	l1229
  2551  04CA  0870               	movf	___lwdiv@divisor,w
  2552  04CB  02F2               	subwf	___lwdiv@dividend,f
  2553  04CC  0871               	movf	___lwdiv@divisor+1,w
  2554  04CD  3BF3               	subwfb	___lwdiv@dividend+1,f
  2555  04CE  1475               	bsf	___lwdiv@quotient,0
  2556  04CF                     l1229:	
  2557  04CF  3001               	movlw	1
  2558  04D0                     u715:	
  2559  04D0  36F1               	lsrf	___lwdiv@divisor+1,f
  2560  04D1  0CF0               	rrf	___lwdiv@divisor,f
  2561  04D2  0B89               	decfsz	9,f
  2562  04D3  2CD0               	goto	u715
  2563  04D4  3001               	movlw	1
  2564  04D5  02F7               	subwf	___lwdiv@counter,f
  2565  04D6  1D03               	btfss	3,2
  2566  04D7  2CBD               	goto	l1223
  2567  04D8                     l1233:	
  2568  04D8  0876               	movf	___lwdiv@quotient+1,w
  2569  04D9  00F1               	movwf	?___lwdiv+1
  2570  04DA  0875               	movf	___lwdiv@quotient,w
  2571  04DB  00F0               	movwf	?___lwdiv
  2572  04DC  0008               	return
  2573  04DD                     __end_of___lwdiv:	
  2574                           
  2575                           	psect	text5
  2576  0398                     __ptext5:	
  2577 ;; *************** function _initMain *****************
  2578 ;; Defined at:
  2579 ;;		line 50 in file "Main.c"
  2580 ;; Parameters:    Size  Location     Type
  2581 ;;		None
  2582 ;; Auto vars:     Size  Location     Type
  2583 ;;		None
  2584 ;; Return value:  Size  Location     Type
  2585 ;;                  1    wreg      void 
  2586 ;; Registers used:
  2587 ;;		wreg, status,2, status,0, pclath, cstack
  2588 ;; Tracked objects:
  2589 ;;		On entry : 0/0
  2590 ;;		On exit  : 0/0
  2591 ;;		Unchanged: 0/0
  2592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2597 ;;Total ram usage:        0 bytes
  2598 ;; Hardware stack levels used:    1
  2599 ;; Hardware stack levels required when called:    1
  2600 ;; This function calls:
  2601 ;;		_internal_16
  2602 ;; This function is called by:
  2603 ;;		_main
  2604 ;; This function uses a non-reentrant model
  2605 ;;
  2606                           
  2607                           
  2608                           ;psect for function _initMain
  2609  0398                     _initMain:	
  2610                           
  2611                           ;Main.c: 52: internal_16();
  2612                           
  2613                           ;incstack = 0
  2614                           ; Regs used in _initMain: [wreg+status,2+status,0+pclath+cstack]
  2615  0398  3183  2341         	fcall	_internal_16
  2616                           
  2617                           ;Main.c: 55: TRISBbits.TRISB2 = 0;
  2618  039A  0021               	movlb	1	; select bank1
  2619  039B  110D               	bcf	13,2	;volatile
  2620                           
  2621                           ;Main.c: 56: ANSELBbits.ANSB2 = 0;
  2622  039C  0023               	movlb	3	; select bank3
  2623  039D  110D               	bcf	13,2	;volatile
  2624                           
  2625                           ;Main.c: 58: TRISBbits.TRISB0 = 0;
  2626  039E  0021               	movlb	1	; select bank1
  2627  039F  100D               	bcf	13,0	;volatile
  2628                           
  2629                           ;Main.c: 59: ANSELBbits.ANSB0 = 0;
  2630  03A0  0023               	movlb	3	; select bank3
  2631  03A1  100D               	bcf	13,0	;volatile
  2632                           
  2633                           ;Main.c: 64: PPSLOCK = 0x55;
  2634  03A2  3055               	movlw	85
  2635  03A3  003C               	movlb	28	; select bank28
  2636  03A4  008F               	movwf	15	;volsfr
  2637                           
  2638                           ;Main.c: 65: PPSLOCK = 0xAA;
  2639  03A5  30AA               	movlw	170
  2640  03A6  008F               	movwf	15	;volsfr
  2641                           
  2642                           ;Main.c: 66: PPSLOCKbits.PPSLOCKED = 0x00;
  2643  03A7  100F               	bcf	15,0	;volsfr
  2644                           
  2645                           ;Main.c: 68: RB2PPSbits.RB2PPS = 0x14;
  2646  03A8  003D               	movlb	29	; select bank29
  2647  03A9  081A               	movf	26,w	;volatile
  2648  03AA  39E0               	andlw	-32
  2649  03AB  3814               	iorlw	20
  2650  03AC  009A               	movwf	26	;volatile
  2651                           
  2652                           ;Main.c: 69: RXPPSbits.RXPPS = 0x0B;
  2653  03AD  003C               	movlb	28	; select bank28
  2654  03AE  0824               	movf	36,w	;volatile
  2655  03AF  39E0               	andlw	-32
  2656  03B0  380B               	iorlw	11
  2657  03B1  00A4               	movwf	36	;volatile
  2658                           
  2659                           ;Main.c: 71: PPSLOCK = 0x55;
  2660  03B2  3055               	movlw	85
  2661  03B3  008F               	movwf	15	;volsfr
  2662                           
  2663                           ;Main.c: 72: PPSLOCK = 0xAA;
  2664  03B4  30AA               	movlw	170
  2665  03B5  008F               	movwf	15	;volsfr
  2666                           
  2667                           ;Main.c: 73: PPSLOCKbits.PPSLOCKED = 0x01;
  2668  03B6  140F               	bsf	15,0	;volsfr
  2669  03B7  0008               	return
  2670  03B8                     __end_of_initMain:	
  2671                           
  2672                           	psect	text6
  2673  0341                     __ptext6:	
  2674 ;; *************** function _internal_16 *****************
  2675 ;; Defined at:
  2676 ;;		line 56 in file "16F1717_Internal.c"
  2677 ;; Parameters:    Size  Location     Type
  2678 ;;		None
  2679 ;; Auto vars:     Size  Location     Type
  2680 ;;		None
  2681 ;; Return value:  Size  Location     Type
  2682 ;;                  1    wreg      void 
  2683 ;; Registers used:
  2684 ;;		None
  2685 ;; Tracked objects:
  2686 ;;		On entry : 0/0
  2687 ;;		On exit  : 0/0
  2688 ;;		Unchanged: 0/0
  2689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2694 ;;Total ram usage:        0 bytes
  2695 ;; Hardware stack levels used:    1
  2696 ;; This function calls:
  2697 ;;		Nothing
  2698 ;; This function is called by:
  2699 ;;		_initMain
  2700 ;; This function uses a non-reentrant model
  2701 ;;
  2702                           
  2703                           
  2704                           ;psect for function _internal_16
  2705  0341                     _internal_16:	
  2706                           
  2707                           ;16F1717_Internal.c: 58: SCS0 = 0;
  2708                           
  2709                           ;incstack = 0
  2710                           ; Regs used in _internal_16: []
  2711  0341  0021               	movlb	1	; select bank1
  2712  0342  1019               	bcf	25,0	;volatile
  2713                           
  2714                           ;16F1717_Internal.c: 59: SCS1 = 0;
  2715  0343  1099               	bcf	25,1	;volatile
  2716                           
  2717                           ;16F1717_Internal.c: 62: IRCF0 = 1;
  2718  0344  1599               	bsf	25,3	;volatile
  2719                           
  2720                           ;16F1717_Internal.c: 63: IRCF1 = 1;
  2721  0345  1619               	bsf	25,4	;volatile
  2722                           
  2723                           ;16F1717_Internal.c: 64: IRCF2 = 1;
  2724  0346  1699               	bsf	25,5	;volatile
  2725                           
  2726                           ;16F1717_Internal.c: 65: IRCF3 = 1;
  2727  0347  1719               	bsf	25,6	;volatile
  2728                           
  2729                           ;16F1717_Internal.c: 68: SPLLEN = 0;
  2730  0348  1399               	bcf	25,7	;volatile
  2731  0349  0008               	return
  2732  034A                     __end_of_internal_16:	
  2733                           
  2734                           	psect	text7
  2735  0361                     __ptext7:	
  2736 ;; *************** function ___wmul *****************
  2737 ;; Defined at:
  2738 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
  2739 ;; Parameters:    Size  Location     Type
  2740 ;;  multiplier      2    0[COMMON] unsigned int 
  2741 ;;  multiplicand    2    2[COMMON] unsigned int 
  2742 ;; Auto vars:     Size  Location     Type
  2743 ;;  product         2    4[COMMON] unsigned int 
  2744 ;; Return value:  Size  Location     Type
  2745 ;;                  2    0[COMMON] unsigned int 
  2746 ;; Registers used:
  2747 ;;		wreg, status,2, status,0
  2748 ;; Tracked objects:
  2749 ;;		On entry : 0/0
  2750 ;;		On exit  : 0/0
  2751 ;;		Unchanged: 0/0
  2752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2753 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2754 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2756 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2757 ;;Total ram usage:        6 bytes
  2758 ;; Hardware stack levels used:    1
  2759 ;; This function calls:
  2760 ;;		Nothing
  2761 ;; This function is called by:
  2762 ;;		_main
  2763 ;; This function uses a non-reentrant model
  2764 ;;
  2765                           
  2766                           
  2767                           ;psect for function ___wmul
  2768  0361                     ___wmul:	
  2769                           
  2770                           ;incstack = 0
  2771                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2772  0361  01F4               	clrf	___wmul@product
  2773  0362  01F5               	clrf	___wmul@product+1
  2774  0363                     l1493:	
  2775  0363  1C70               	btfss	___wmul@multiplier,0
  2776  0364  2B69               	goto	l253
  2777  0365  0872               	movf	___wmul@multiplicand,w
  2778  0366  07F4               	addwf	___wmul@product,f
  2779  0367  0873               	movf	___wmul@multiplicand+1,w
  2780  0368  3DF5               	addwfc	___wmul@product+1,f
  2781  0369                     l253:	
  2782  0369  3001               	movlw	1
  2783  036A                     u1095:	
  2784  036A  35F2               	lslf	___wmul@multiplicand,f
  2785  036B  0DF3               	rlf	___wmul@multiplicand+1,f
  2786  036C  0B89               	decfsz	9,f
  2787  036D  2B6A               	goto	u1095
  2788  036E  3001               	movlw	1
  2789  036F                     u1105:	
  2790  036F  36F1               	lsrf	___wmul@multiplier+1,f
  2791  0370  0CF0               	rrf	___wmul@multiplier,f
  2792  0371  0B89               	decfsz	9,f
  2793  0372  2B6F               	goto	u1105
  2794  0373  0870               	movf	___wmul@multiplier,w
  2795  0374  0471               	iorwf	___wmul@multiplier+1,w
  2796  0375  1D03               	btfss	3,2
  2797  0376  2B63               	goto	l1493
  2798  0377  0875               	movf	___wmul@product+1,w
  2799  0378  00F1               	movwf	?___wmul+1
  2800  0379  0874               	movf	___wmul@product,w
  2801  037A  00F0               	movwf	?___wmul
  2802  037B  0008               	return
  2803  037C                     __end_of___wmul:	
  2804                           
  2805                           	psect	text8
  2806  04DD                     __ptext8:	
  2807 ;; *************** function ___awdiv *****************
  2808 ;; Defined at:
  2809 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
  2810 ;; Parameters:    Size  Location     Type
  2811 ;;  divisor         2    6[COMMON] int 
  2812 ;;  dividend        2    8[COMMON] int 
  2813 ;; Auto vars:     Size  Location     Type
  2814 ;;  quotient        2    2[BANK0 ] int 
  2815 ;;  sign            1    1[BANK0 ] unsigned char 
  2816 ;;  counter         1    0[BANK0 ] unsigned char 
  2817 ;; Return value:  Size  Location     Type
  2818 ;;                  2    6[COMMON] int 
  2819 ;; Registers used:
  2820 ;;		wreg, status,2, status,0
  2821 ;; Tracked objects:
  2822 ;;		On entry : 0/0
  2823 ;;		On exit  : 0/0
  2824 ;;		Unchanged: 0/0
  2825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2826 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2827 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2828 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2829 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2830 ;;Total ram usage:        9 bytes
  2831 ;; Hardware stack levels used:    1
  2832 ;; This function calls:
  2833 ;;		Nothing
  2834 ;; This function is called by:
  2835 ;;		_main
  2836 ;; This function uses a non-reentrant model
  2837 ;;
  2838                           
  2839                           
  2840                           ;psect for function ___awdiv
  2841  04DD                     ___awdiv:	
  2842                           
  2843                           ;incstack = 0
  2844                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2845  04DD  0020               	movlb	0	; select bank0
  2846  04DE  01A1               	clrf	___awdiv@sign
  2847  04DF  1FF7               	btfss	___awdiv@divisor+1,7
  2848  04E0  2CE8               	goto	l1513
  2849  04E1  09F6               	comf	___awdiv@divisor,f
  2850  04E2  09F7               	comf	___awdiv@divisor+1,f
  2851  04E3  0AF6               	incf	___awdiv@divisor,f
  2852  04E4  1903               	skipnz
  2853  04E5  0AF7               	incf	___awdiv@divisor+1,f
  2854  04E6  01A1               	clrf	___awdiv@sign
  2855  04E7  0AA1               	incf	___awdiv@sign,f
  2856  04E8                     l1513:	
  2857  04E8  1FF9               	btfss	___awdiv@dividend+1,7
  2858  04E9  2CF3               	goto	l1519
  2859  04EA  09F8               	comf	___awdiv@dividend,f
  2860  04EB  09F9               	comf	___awdiv@dividend+1,f
  2861  04EC  0AF8               	incf	___awdiv@dividend,f
  2862  04ED  1903               	skipnz
  2863  04EE  0AF9               	incf	___awdiv@dividend+1,f
  2864  04EF  3001               	movlw	1
  2865  04F0  00FA               	movwf	??___awdiv
  2866  04F1  087A               	movf	??___awdiv,w
  2867  04F2  06A1               	xorwf	___awdiv@sign,f
  2868  04F3                     l1519:	
  2869  04F3  01A2               	clrf	___awdiv@quotient
  2870  04F4  01A3               	clrf	___awdiv@quotient+1
  2871  04F5  0876               	movf	___awdiv@divisor,w
  2872  04F6  0477               	iorwf	___awdiv@divisor+1,w
  2873  04F7  1903               	btfsc	3,2
  2874  04F8  2D22               	goto	l1541
  2875  04F9  01A0               	clrf	___awdiv@counter
  2876  04FA  0AA0               	incf	___awdiv@counter,f
  2877  04FB                     l1529:	
  2878  04FB  1BF7               	btfsc	___awdiv@divisor+1,7
  2879  04FC  2D07               	goto	l1531
  2880  04FD  3001               	movlw	1
  2881  04FE                     u1155:	
  2882  04FE  35F6               	lslf	___awdiv@divisor,f
  2883  04FF  0DF7               	rlf	___awdiv@divisor+1,f
  2884  0500  0B89               	decfsz	9,f
  2885  0501  2CFE               	goto	u1155
  2886  0502  3001               	movlw	1
  2887  0503  00FA               	movwf	??___awdiv
  2888  0504  087A               	movf	??___awdiv,w
  2889  0505  07A0               	addwf	___awdiv@counter,f
  2890  0506  2CFB               	goto	l1529
  2891  0507                     l1531:	
  2892  0507  3001               	movlw	1
  2893  0508                     u1175:	
  2894  0508  35A2               	lslf	___awdiv@quotient,f
  2895  0509  0DA3               	rlf	___awdiv@quotient+1,f
  2896  050A  0B89               	decfsz	9,f
  2897  050B  2D08               	goto	u1175
  2898  050C  0877               	movf	___awdiv@divisor+1,w
  2899  050D  0279               	subwf	___awdiv@dividend+1,w
  2900  050E  1D03               	skipz
  2901  050F  2D12               	goto	u1185
  2902  0510  0876               	movf	___awdiv@divisor,w
  2903  0511  0278               	subwf	___awdiv@dividend,w
  2904  0512                     u1185:	
  2905  0512  1C03               	skipc
  2906  0513  2D19               	goto	l1537
  2907  0514  0876               	movf	___awdiv@divisor,w
  2908  0515  02F8               	subwf	___awdiv@dividend,f
  2909  0516  0877               	movf	___awdiv@divisor+1,w
  2910  0517  3BF9               	subwfb	___awdiv@dividend+1,f
  2911  0518  1422               	bsf	___awdiv@quotient,0
  2912  0519                     l1537:	
  2913  0519  3001               	movlw	1
  2914  051A                     u1195:	
  2915  051A  36F7               	lsrf	___awdiv@divisor+1,f
  2916  051B  0CF6               	rrf	___awdiv@divisor,f
  2917  051C  0B89               	decfsz	9,f
  2918  051D  2D1A               	goto	u1195
  2919  051E  3001               	movlw	1
  2920  051F  02A0               	subwf	___awdiv@counter,f
  2921  0520  1D03               	btfss	3,2
  2922  0521  2D07               	goto	l1531
  2923  0522                     l1541:	
  2924  0522  0821               	movf	___awdiv@sign,w
  2925  0523  1903               	btfsc	3,2
  2926  0524  2D2A               	goto	l1545
  2927  0525  09A2               	comf	___awdiv@quotient,f
  2928  0526  09A3               	comf	___awdiv@quotient+1,f
  2929  0527  0AA2               	incf	___awdiv@quotient,f
  2930  0528  1903               	skipnz
  2931  0529  0AA3               	incf	___awdiv@quotient+1,f
  2932  052A                     l1545:	
  2933  052A  0823               	movf	___awdiv@quotient+1,w
  2934  052B  00F7               	movwf	?___awdiv+1
  2935  052C  0822               	movf	___awdiv@quotient,w
  2936  052D  00F6               	movwf	?___awdiv
  2937  052E  0008               	return
  2938  052F                     __end_of___awdiv:	
  2939                           
  2940                           	psect	text9
  2941  0451                     __ptext9:	
  2942 ;; *************** function _OW_WriteByte *****************
  2943 ;; Defined at:
  2944 ;;		line 158 in file "onewire.c"
  2945 ;; Parameters:    Size  Location     Type
  2946 ;;  val             1    wreg     unsigned char 
  2947 ;; Auto vars:     Size  Location     Type
  2948 ;;  val             1    4[COMMON] unsigned char 
  2949 ;;  i               1    6[COMMON] unsigned char 
  2950 ;;  temp            1    5[COMMON] unsigned char 
  2951 ;; Return value:  Size  Location     Type
  2952 ;;                  1    wreg      void 
  2953 ;; Registers used:
  2954 ;;		wreg, status,2, status,0, pclath, cstack
  2955 ;; Tracked objects:
  2956 ;;		On entry : 0/0
  2957 ;;		On exit  : 0/0
  2958 ;;		Unchanged: 0/0
  2959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2961 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2962 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2963 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2964 ;;Total ram usage:        5 bytes
  2965 ;; Hardware stack levels used:    1
  2966 ;; Hardware stack levels required when called:    1
  2967 ;; This function calls:
  2968 ;;		_OW_WriteBit
  2969 ;; This function is called by:
  2970 ;;		_main
  2971 ;; This function uses a non-reentrant model
  2972 ;;
  2973                           
  2974                           
  2975                           ;psect for function _OW_WriteByte
  2976  0451                     _OW_WriteByte:	
  2977                           
  2978                           ;incstack = 0
  2979                           ; Regs used in _OW_WriteByte: [wreg+status,2+status,0+pclath+cstack]
  2980                           ;OW_WriteByte@val stored from wreg
  2981  0451  00F4               	movwf	OW_WriteByte@val
  2982                           
  2983                           ;onewire.c: 160: unsigned char i;;onewire.c: 161: unsigned char temp;;onewire.c: 164: fo
      +                          r (i=0; i<8; i++)
  2984  0452  01F6               	clrf	OW_WriteByte@i
  2985  0453                     l1449:	
  2986                           
  2987                           ;onewire.c: 165: {;onewire.c: 166: temp = val>>i;
  2988  0453  0874               	movf	OW_WriteByte@val,w
  2989  0454  00F2               	movwf	??_OW_WriteByte
  2990  0455  0A76               	incf	OW_WriteByte@i,w
  2991  0456  2C58               	goto	u1024
  2992  0457                     u1025:	
  2993  0457  36F2               	lsrf	??_OW_WriteByte,f
  2994  0458                     u1024:	
  2995  0458  0B89               	decfsz	9,f
  2996  0459  2C57               	goto	u1025
  2997  045A  0872               	movf	??_OW_WriteByte,w
  2998  045B  00F3               	movwf	??_OW_WriteByte+1
  2999  045C  0873               	movf	??_OW_WriteByte+1,w
  3000  045D  00F5               	movwf	OW_WriteByte@temp
  3001                           
  3002                           ;onewire.c: 167: temp &= 0x01;
  3003  045E  3001               	movlw	1
  3004  045F  00F2               	movwf	??_OW_WriteByte
  3005  0460  0872               	movf	??_OW_WriteByte,w
  3006  0461  05F5               	andwf	OW_WriteByte@temp,f
  3007                           
  3008                           ;onewire.c: 168: OW_WriteBit(temp);
  3009  0462  0875               	movf	OW_WriteByte@temp,w
  3010  0463  00F2               	movwf	??_OW_WriteByte
  3011  0464  01F3               	clrf	??_OW_WriteByte+1
  3012  0465  0872               	movf	??_OW_WriteByte,w
  3013  0466  00F0               	movwf	OW_WriteBit@b
  3014  0467  0873               	movf	??_OW_WriteByte+1,w
  3015  0468  00F1               	movwf	OW_WriteBit@b+1
  3016  0469  3184  2402  3184   	fcall	_OW_WriteBit
  3017  046C  3001               	movlw	1
  3018  046D  00F2               	movwf	??_OW_WriteByte
  3019  046E  0872               	movf	??_OW_WriteByte,w
  3020  046F  07F6               	addwf	OW_WriteByte@i,f
  3021  0470  3008               	movlw	8
  3022  0471  0276               	subwf	OW_WriteByte@i,w
  3023  0472  1C03               	skipc
  3024  0473  2C53               	goto	l1449
  3025                           
  3026                           ;onewire.c: 169: };onewire.c: 170: _delay((unsigned long)((5)*(16000000/4000.0)));
  3027  0474  301A               	movlw	26
  3028  0475  00F2               	movwf	??_OW_WriteByte
  3029  0476  30F8               	movlw	248
  3030  0477                     u1307:	
  3031  0477  0B89               	decfsz	9,f
  3032  0478  2C77               	goto	u1307
  3033  0479  0BF2               	decfsz	??_OW_WriteByte,f
  3034  047A  2C77               	goto	u1307
  3035  047B  3200               	nop2
  3036  047C  0008               	return
  3037  047D                     __end_of_OW_WriteByte:	
  3038                           
  3039                           	psect	text10
  3040  0402                     __ptext10:	
  3041 ;; *************** function _OW_WriteBit *****************
  3042 ;; Defined at:
  3043 ;;		line 99 in file "onewire.c"
  3044 ;; Parameters:    Size  Location     Type
  3045 ;;  b               2    0[COMMON] int 
  3046 ;; Auto vars:     Size  Location     Type
  3047 ;;		None
  3048 ;; Return value:  Size  Location     Type
  3049 ;;                  1    wreg      void 
  3050 ;; Registers used:
  3051 ;;		wreg, status,2, status,0
  3052 ;; Tracked objects:
  3053 ;;		On entry : 0/0
  3054 ;;		On exit  : 0/0
  3055 ;;		Unchanged: 0/0
  3056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3057 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3060 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3061 ;;Total ram usage:        2 bytes
  3062 ;; Hardware stack levels used:    1
  3063 ;; This function calls:
  3064 ;;		Nothing
  3065 ;; This function is called by:
  3066 ;;		_OW_WriteByte
  3067 ;; This function uses a non-reentrant model
  3068 ;;
  3069                           
  3070                           
  3071                           ;psect for function _OW_WriteBit
  3072  0402                     _OW_WriteBit:	
  3073                           
  3074                           ;onewire.c: 101: b = b & 0x01;
  3075                           
  3076                           ;incstack = 0
  3077                           ; Regs used in _OW_WriteBit: [wreg+status,2+status,0]
  3078  0402  3001               	movlw	1
  3079  0403  0570               	andwf	OW_WriteBit@b,w
  3080  0404  00F0               	movwf	OW_WriteBit@b
  3081  0405  3000               	movlw	0
  3082  0406  0571               	andwf	OW_WriteBit@b+1,w
  3083  0407  00F1               	movwf	OW_WriteBit@b+1
  3084                           
  3085                           ;onewire.c: 103: if (b)
  3086  0408  0870               	movf	OW_WriteBit@b,w
  3087  0409  0471               	iorwf	OW_WriteBit@b+1,w
  3088  040A  1903               	btfsc	3,2
  3089  040B  2C1A               	goto	l118
  3090                           
  3091                           ;onewire.c: 104: {;onewire.c: 105: TRISBbits.TRISB0 = 0;
  3092  040C  0021               	movlb	1	; select bank1
  3093  040D  100D               	bcf	13,0	;volatile
  3094                           
  3095                           ;onewire.c: 106: PORTBbits.RB0 = 0;
  3096  040E  0020               	movlb	0	; select bank0
  3097  040F  100D               	bcf	13,0	;volatile
  3098                           
  3099                           ;onewire.c: 107: _delay((unsigned long)((5)*(16000000/4000000.0)));
  3100  0410  3006               	movlw	6
  3101  0411                     u1317:	
  3102  0411  0B89               	decfsz	9,f
  3103  0412  2C11               	goto	u1317
  3104  0413  3200               	nop2
  3105                           
  3106                           ;onewire.c: 109: TRISBbits.TRISB0 = 1;
  3107  0414  0021               	movlb	1	; select bank1
  3108  0415  140D               	bsf	13,0	;volatile
  3109                           
  3110                           ;onewire.c: 110: _delay((unsigned long)((60)*(16000000/4000000.0)));
  3111  0416  3050               	movlw	80
  3112  0417                     u1327:	
  3113  0417  0B89               	decfsz	9,f
  3114  0418  2C17               	goto	u1327
  3115                           
  3116                           ;onewire.c: 111: }
  3117  0419  0008               	return
  3118  041A                     l118:	
  3119                           
  3120                           ;onewire.c: 112: else;onewire.c: 113: {;onewire.c: 114: TRISBbits.TRISB0 = 0;
  3121  041A  0021               	movlb	1	; select bank1
  3122  041B  100D               	bcf	13,0	;volatile
  3123                           
  3124                           ;onewire.c: 115: PORTBbits.RB0 = 0;
  3125  041C  0020               	movlb	0	; select bank0
  3126  041D  100D               	bcf	13,0	;volatile
  3127                           
  3128                           ;onewire.c: 116: _delay((unsigned long)((70)*(16000000/4000000.0)));
  3129  041E  305D               	movlw	93
  3130  041F                     u1337:	
  3131  041F  0B89               	decfsz	9,f
  3132  0420  2C1F               	goto	u1337
  3133  0421  0000               	nop
  3134                           
  3135                           ;onewire.c: 118: TRISBbits.TRISB0 = 1;
  3136  0422  0021               	movlb	1	; select bank1
  3137  0423  140D               	bsf	13,0	;volatile
  3138                           
  3139                           ;onewire.c: 119: _delay((unsigned long)((2)*(16000000/4000000.0)));
  3140  0424  3200               	nop2	;2 cycle nop
  3141  0425  3200               	nop2	;2 cycle nop
  3142  0426  3200               	nop2	;2 cycle nop
  3143  0427  3200               	nop2	;2 cycle nop
  3144  0428  0008               	return
  3145  0429                     __end_of_OW_WriteBit:	
  3146                           
  3147                           	psect	text11
  3148  0429                     __ptext11:	
  3149 ;; *************** function _OW_Reset *****************
  3150 ;; Defined at:
  3151 ;;		line 42 in file "onewire.c"
  3152 ;; Parameters:    Size  Location     Type
  3153 ;;		None
  3154 ;; Auto vars:     Size  Location     Type
  3155 ;;		None
  3156 ;; Return value:  Size  Location     Type
  3157 ;;                  1    wreg      unsigned char 
  3158 ;; Registers used:
  3159 ;;		wreg
  3160 ;; Tracked objects:
  3161 ;;		On entry : 0/0
  3162 ;;		On exit  : 0/0
  3163 ;;		Unchanged: 0/0
  3164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3167 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3168 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3169 ;;Total ram usage:        1 bytes
  3170 ;; Hardware stack levels used:    1
  3171 ;; This function calls:
  3172 ;;		Nothing
  3173 ;; This function is called by:
  3174 ;;		_main
  3175 ;; This function uses a non-reentrant model
  3176 ;;
  3177                           
  3178                           
  3179                           ;psect for function _OW_Reset
  3180  0429                     _OW_Reset:	
  3181                           
  3182                           ;onewire.c: 44: TRISBbits.TRISB0 = 0;
  3183                           
  3184                           ;incstack = 0
  3185                           ; Regs used in _OW_Reset: [wreg]
  3186  0429  0021               	movlb	1	; select bank1
  3187  042A  100D               	bcf	13,0	;volatile
  3188                           
  3189                           ;onewire.c: 45: PORTBbits.RB0 = 0;
  3190  042B  0020               	movlb	0	; select bank0
  3191  042C  100D               	bcf	13,0	;volatile
  3192                           
  3193                           ;onewire.c: 46: _delay((unsigned long)((480)*(16000000/4000000.0)));
  3194  042D  3003               	movlw	3
  3195  042E  00F0               	movwf	??_OW_Reset
  3196  042F  307D               	movlw	125
  3197  0430                     u1347:	
  3198  0430  0B89               	decfsz	9,f
  3199  0431  2C30               	goto	u1347
  3200  0432  0BF0               	decfsz	??_OW_Reset,f
  3201  0433  2C30               	goto	u1347
  3202  0434  0000               	nop
  3203                           
  3204                           ;onewire.c: 48: TRISBbits.TRISB0 = 1;
  3205  0435  0021               	movlb	1	; select bank1
  3206  0436  140D               	bsf	13,0	;volatile
  3207                           
  3208                           ;onewire.c: 50: _delay((unsigned long)((60)*(16000000/4000000.0)));
  3209  0437  3050               	movlw	80
  3210  0438                     u1357:	
  3211  0438  0B89               	decfsz	9,f
  3212  0439  2C38               	goto	u1357
  3213                           
  3214                           ;onewire.c: 52: if (PORTBbits.RB0 == 0)
  3215  043A  0020               	movlb	0	; select bank0
  3216  043B  180D               	btfsc	13,0	;volatile
  3217  043C  2C47               	goto	l1431
  3218                           
  3219                           ;onewire.c: 53: {;onewire.c: 54: _delay((unsigned long)((480)*(16000000/4000000.0)));
  3220  043D  3003               	movlw	3
  3221  043E  00F0               	movwf	??_OW_Reset
  3222  043F  307D               	movlw	125
  3223  0440                     u1367:	
  3224  0440  0B89               	decfsz	9,f
  3225  0441  2C40               	goto	u1367
  3226  0442  0BF0               	decfsz	??_OW_Reset,f
  3227  0443  2C40               	goto	u1367
  3228  0444  0000               	nop
  3229                           
  3230                           ;onewire.c: 55: return 0;
  3231  0445  3000               	movlw	0
  3232  0446  0008               	return
  3233  0447                     l1431:	
  3234                           
  3235                           ;onewire.c: 58: else;onewire.c: 59: {;onewire.c: 60: _delay((unsigned long)((480)*(16000
      +                          000/4000000.0)));
  3236  0447  3003               	movlw	3
  3237  0448  00F0               	movwf	??_OW_Reset
  3238  0449  307D               	movlw	125
  3239  044A                     u1377:	
  3240  044A  0B89               	decfsz	9,f
  3241  044B  2C4A               	goto	u1377
  3242  044C  0BF0               	decfsz	??_OW_Reset,f
  3243  044D  2C4A               	goto	u1377
  3244  044E  0000               	nop
  3245                           
  3246                           ;onewire.c: 61: return 1;
  3247  044F  3001               	movlw	1
  3248  0450  0008               	return
  3249  0451                     __end_of_OW_Reset:	
  3250                           
  3251                           	psect	text12
  3252  03B8                     __ptext12:	
  3253 ;; *************** function _OW_ReadByte *****************
  3254 ;; Defined at:
  3255 ;;		line 131 in file "onewire.c"
  3256 ;; Parameters:    Size  Location     Type
  3257 ;;		None
  3258 ;; Auto vars:     Size  Location     Type
  3259 ;;  i               1    4[COMMON] unsigned char 
  3260 ;;  value           1    3[COMMON] unsigned char 
  3261 ;; Return value:  Size  Location     Type
  3262 ;;                  1    wreg      unsigned char 
  3263 ;; Registers used:
  3264 ;;		wreg, status,2, status,0, pclath, cstack
  3265 ;; Tracked objects:
  3266 ;;		On entry : 0/0
  3267 ;;		On exit  : 0/0
  3268 ;;		Unchanged: 0/0
  3269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3271 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3272 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3273 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3274 ;;Total ram usage:        4 bytes
  3275 ;; Hardware stack levels used:    1
  3276 ;; Hardware stack levels required when called:    1
  3277 ;; This function calls:
  3278 ;;		_OW_ReadBit
  3279 ;; This function is called by:
  3280 ;;		_main
  3281 ;; This function uses a non-reentrant model
  3282 ;;
  3283                           
  3284                           
  3285                           ;psect for function _OW_ReadByte
  3286  03B8                     _OW_ReadByte:	
  3287                           
  3288                           ;onewire.c: 133: unsigned char i;;onewire.c: 134: unsigned char value = 0;
  3289                           
  3290                           ;incstack = 0
  3291                           ; Regs used in _OW_ReadByte: [wreg+status,2+status,0+pclath+cstack]
  3292  03B8  01F3               	clrf	OW_ReadByte@value
  3293                           
  3294                           ;onewire.c: 136: for (i=0;i<8;i++)
  3295  03B9  01F4               	clrf	OW_ReadByte@i
  3296  03BA                     l1465:	
  3297                           
  3298                           ;onewire.c: 137: {;onewire.c: 139: if(OW_ReadBit())
  3299  03BA  3183  234A  3183   	fcall	_OW_ReadBit
  3300  03BD  3A00               	xorlw	0
  3301  03BE  1903               	skipnz
  3302  03BF  2BCB               	goto	l125
  3303                           
  3304                           ;onewire.c: 140: {;onewire.c: 141: value|=0x01<<i;
  3305  03C0  3001               	movlw	1
  3306  03C1  00F1               	movwf	??_OW_ReadByte
  3307  03C2  0A74               	incf	OW_ReadByte@i,w
  3308  03C3  2BC5               	goto	u1054
  3309  03C4                     u1055:	
  3310  03C4  35F1               	lslf	??_OW_ReadByte,f
  3311  03C5                     u1054:	
  3312  03C5  0B89               	decfsz	9,f
  3313  03C6  2BC4               	goto	u1055
  3314  03C7  0871               	movf	??_OW_ReadByte,w
  3315  03C8  00F2               	movwf	??_OW_ReadByte+1
  3316  03C9  0872               	movf	??_OW_ReadByte+1,w
  3317  03CA  04F3               	iorwf	OW_ReadByte@value,f
  3318  03CB                     l125:	
  3319  03CB  3001               	movlw	1
  3320  03CC  00F1               	movwf	??_OW_ReadByte
  3321  03CD  0871               	movf	??_OW_ReadByte,w
  3322  03CE  07F4               	addwf	OW_ReadByte@i,f
  3323  03CF  3008               	movlw	8
  3324  03D0  0274               	subwf	OW_ReadByte@i,w
  3325  03D1  1C03               	skipc
  3326  03D2  2BBA               	goto	l1465
  3327                           
  3328                           ;onewire.c: 142: };onewire.c: 143: };onewire.c: 145: _delay((unsigned long)((6)*(1600000
      +                          0/4000.0)));
  3329  03D3  3020               	movlw	32
  3330  03D4  00F1               	movwf	??_OW_ReadByte
  3331  03D5  302A               	movlw	42
  3332  03D6                     u1387:	
  3333  03D6  0B89               	decfsz	9,f
  3334  03D7  2BD6               	goto	u1387
  3335  03D8  0BF1               	decfsz	??_OW_ReadByte,f
  3336  03D9  2BD6               	goto	u1387
  3337                           
  3338                           ;onewire.c: 147: return(value);
  3339  03DA  0873               	movf	OW_ReadByte@value,w
  3340  03DB  0008               	return
  3341  03DC                     __end_of_OW_ReadByte:	
  3342                           
  3343                           	psect	text13
  3344  034A                     __ptext13:	
  3345 ;; *************** function _OW_ReadBit *****************
  3346 ;; Defined at:
  3347 ;;		line 73 in file "onewire.c"
  3348 ;; Parameters:    Size  Location     Type
  3349 ;;		None
  3350 ;; Auto vars:     Size  Location     Type
  3351 ;;  result          1    0[COMMON] unsigned char 
  3352 ;; Return value:  Size  Location     Type
  3353 ;;                  1    wreg      unsigned char 
  3354 ;; Registers used:
  3355 ;;		wreg, status,2
  3356 ;; Tracked objects:
  3357 ;;		On entry : 0/0
  3358 ;;		On exit  : 0/0
  3359 ;;		Unchanged: 0/0
  3360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3362 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3364 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3365 ;;Total ram usage:        1 bytes
  3366 ;; Hardware stack levels used:    1
  3367 ;; This function calls:
  3368 ;;		Nothing
  3369 ;; This function is called by:
  3370 ;;		_OW_ReadByte
  3371 ;; This function uses a non-reentrant model
  3372 ;;
  3373                           
  3374                           
  3375                           ;psect for function _OW_ReadBit
  3376  034A                     _OW_ReadBit:	
  3377                           
  3378                           ;onewire.c: 75: unsigned char result;;onewire.c: 77: TRISBbits.TRISB0 = 0;
  3379                           
  3380                           ;incstack = 0
  3381                           ; Regs used in _OW_ReadBit: [wreg+status,2]
  3382  034A  0021               	movlb	1	; select bank1
  3383  034B  100D               	bcf	13,0	;volatile
  3384                           
  3385                           ;onewire.c: 78: PORTBbits.RB0 = 0;
  3386  034C  0020               	movlb	0	; select bank0
  3387  034D  100D               	bcf	13,0	;volatile
  3388                           
  3389                           ;onewire.c: 79: _delay((unsigned long)((1)*(16000000/4000000.0)));
  3390  034E  3200               	nop2	;2 cycle nop
  3391  034F  3200               	nop2	;2 cycle nop
  3392                           
  3393                           ;onewire.c: 81: TRISBbits.TRISB0 = 1;
  3394  0350  0021               	movlb	1	; select bank1
  3395  0351  140D               	bsf	13,0	;volatile
  3396                           
  3397                           ;onewire.c: 82: _delay((unsigned long)((5)*(16000000/4000000.0)));
  3398  0352  3006               	movlw	6
  3399  0353                     u1397:	
  3400  0353  0B89               	decfsz	9,f
  3401  0354  2B53               	goto	u1397
  3402  0355  3200               	nop2
  3403                           
  3404                           ;onewire.c: 84: result = PORTBbits.RB0;
  3405  0356  3000               	movlw	0
  3406  0357  0020               	movlb	0	; select bank0
  3407  0358  180D               	btfsc	13,0	;volatile
  3408  0359  3001               	movlw	1
  3409  035A  00F0               	movwf	OW_ReadBit@result
  3410                           
  3411                           ;onewire.c: 85: _delay((unsigned long)((55)*(16000000/4000000.0)));
  3412  035B  3049               	movlw	73
  3413  035C                     u1407:	
  3414  035C  0B89               	decfsz	9,f
  3415  035D  2B5C               	goto	u1407
  3416  035E  0000               	nop
  3417                           
  3418                           ;onewire.c: 87: return result;
  3419  035F  0870               	movf	OW_ReadBit@result,w
  3420  0360  0008               	return
  3421  0361                     __end_of_OW_ReadBit:	
  3422                           
  3423                           	psect	text14
  3424  0330                     __ptext14:	
  3425 ;; *************** function _OW_Init *****************
  3426 ;; Defined at:
  3427 ;;		line 29 in file "onewire.c"
  3428 ;; Parameters:    Size  Location     Type
  3429 ;;		None
  3430 ;; Auto vars:     Size  Location     Type
  3431 ;;		None
  3432 ;; Return value:  Size  Location     Type
  3433 ;;                  1    wreg      void 
  3434 ;; Registers used:
  3435 ;;		None
  3436 ;; Tracked objects:
  3437 ;;		On entry : 0/0
  3438 ;;		On exit  : 0/0
  3439 ;;		Unchanged: 0/0
  3440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3445 ;;Total ram usage:        0 bytes
  3446 ;; Hardware stack levels used:    1
  3447 ;; This function calls:
  3448 ;;		Nothing
  3449 ;; This function is called by:
  3450 ;;		_main
  3451 ;; This function uses a non-reentrant model
  3452 ;;
  3453                           
  3454                           
  3455                           ;psect for function _OW_Init
  3456  0330                     _OW_Init:	
  3457                           
  3458                           ;onewire.c: 31: ANSELBbits.ANSB0 = 0;
  3459                           
  3460                           ;incstack = 0
  3461                           ; Regs used in _OW_Init: []
  3462  0330  0023               	movlb	3	; select bank3
  3463  0331  100D               	bcf	13,0	;volatile
  3464  0332  0008               	return
  3465  0333                     __end_of_OW_Init:	
  3466                           
  3467                           	psect	text15
  3468  037C                     __ptext15:	
  3469 ;; *************** function _EUSART_Write_Text *****************
  3470 ;; Defined at:
  3471 ;;		line 125 in file "EUSART.c"
  3472 ;; Parameters:    Size  Location     Type
  3473 ;;  text            2   10[BANK0 ] PTR unsigned char 
  3474 ;;		 -> STR_4(19), STR_3(19), main@buf(8), STR_2(19), 
  3475 ;;		 -> STR_1(18), 
  3476 ;; Auto vars:     Size  Location     Type
  3477 ;;  i               2   13[BANK0 ] int 
  3478 ;; Return value:  Size  Location     Type
  3479 ;;                  1    wreg      void 
  3480 ;; Registers used:
  3481 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3482 ;; Tracked objects:
  3483 ;;		On entry : 0/0
  3484 ;;		On exit  : 0/0
  3485 ;;		Unchanged: 0/0
  3486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3487 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3488 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3489 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3490 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3491 ;;Total ram usage:        5 bytes
  3492 ;; Hardware stack levels used:    1
  3493 ;; Hardware stack levels required when called:    1
  3494 ;; This function calls:
  3495 ;;		_EUSART_Write
  3496 ;; This function is called by:
  3497 ;;		_main
  3498 ;; This function uses a non-reentrant model
  3499 ;;
  3500                           
  3501                           
  3502                           ;psect for function _EUSART_Write_Text
  3503  037C                     _EUSART_Write_Text:	
  3504                           
  3505                           ;EUSART.c: 127: int i;;EUSART.c: 128: for(i=0;text[i]!='\0';i++)
  3506                           
  3507                           ;incstack = 0
  3508                           ; Regs used in _EUSART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3509  037C  0020               	movlb	0	; select bank0
  3510  037D  01AD               	clrf	EUSART_Write_Text@i
  3511  037E  01AE               	clrf	EUSART_Write_Text@i+1
  3512  037F                     l1441:	
  3513  037F  082A               	movf	EUSART_Write_Text@text,w
  3514  0380  072D               	addwf	EUSART_Write_Text@i,w
  3515  0381  0084               	movwf	4
  3516  0382  082B               	movf	EUSART_Write_Text@text+1,w
  3517  0383  3D2E               	addwfc	EUSART_Write_Text@i+1,w
  3518  0384  0085               	movwf	5
  3519  0385  0012               	moviw fsr0++
  3520  0386  1903               	btfsc	3,2
  3521  0387  0008               	return
  3522                           
  3523                           ;EUSART.c: 129: EUSART_Write(text[i]);
  3524  0388  082A               	movf	EUSART_Write_Text@text,w
  3525  0389  072D               	addwf	EUSART_Write_Text@i,w
  3526  038A  0084               	movwf	4
  3527  038B  082B               	movf	EUSART_Write_Text@text+1,w
  3528  038C  3D2E               	addwfc	EUSART_Write_Text@i+1,w
  3529  038D  0085               	movwf	5
  3530  038E  0800               	movf	0,w	;code access
  3531  038F  3183  2339  3183   	fcall	_EUSART_Write
  3532  0392  3001               	movlw	1
  3533  0393  0020               	movlb	0	; select bank0
  3534  0394  07AD               	addwf	EUSART_Write_Text@i,f
  3535  0395  3000               	movlw	0
  3536  0396  3DAE               	addwfc	EUSART_Write_Text@i+1,f
  3537  0397  2B7F               	goto	l1441
  3538  0398                     __end_of_EUSART_Write_Text:	
  3539                           
  3540                           	psect	text16
  3541  0339                     __ptext16:	
  3542 ;; *************** function _EUSART_Write *****************
  3543 ;; Defined at:
  3544 ;;		line 98 in file "EUSART.c"
  3545 ;; Parameters:    Size  Location     Type
  3546 ;;  txData          1    wreg     unsigned char 
  3547 ;; Auto vars:     Size  Location     Type
  3548 ;;  txData          1    0[COMMON] unsigned char 
  3549 ;; Return value:  Size  Location     Type
  3550 ;;                  1    wreg      void 
  3551 ;; Registers used:
  3552 ;;		wreg
  3553 ;; Tracked objects:
  3554 ;;		On entry : 0/0
  3555 ;;		On exit  : 0/0
  3556 ;;		Unchanged: 0/0
  3557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3559 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3561 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3562 ;;Total ram usage:        1 bytes
  3563 ;; Hardware stack levels used:    1
  3564 ;; This function calls:
  3565 ;;		Nothing
  3566 ;; This function is called by:
  3567 ;;		_EUSART_Write_Text
  3568 ;; This function uses a non-reentrant model
  3569 ;;
  3570                           
  3571                           
  3572                           ;psect for function _EUSART_Write
  3573  0339                     _EUSART_Write:	
  3574                           
  3575                           ;incstack = 0
  3576                           ; Regs used in _EUSART_Write: [wreg]
  3577                           ;EUSART_Write@txData stored from wreg
  3578  0339  00F0               	movwf	EUSART_Write@txData
  3579  033A                     l170:	
  3580                           ;EUSART.c: 101: {
  3581                           
  3582  033A  0020               	movlb	0	; select bank0
  3583  033B  1E11               	btfss	17,4	;volatile
  3584  033C  2B3A               	goto	l170
  3585                           
  3586                           ;EUSART.c: 102: };EUSART.c: 104: TX1REG = txData;
  3587  033D  0870               	movf	EUSART_Write@txData,w
  3588  033E  0023               	movlb	3	; select bank3
  3589  033F  009A               	movwf	26	;volatile
  3590  0340  0008               	return
  3591  0341                     __end_of_EUSART_Write:	
  3592                           
  3593                           	psect	text17
  3594  0613                     __ptext17:	
  3595 ;; *************** function _EUSART_Initialize *****************
  3596 ;; Defined at:
  3597 ;;		line 34 in file "EUSART.c"
  3598 ;; Parameters:    Size  Location     Type
  3599 ;;  baudrate        4    6[BANK0 ] const long 
  3600 ;; Auto vars:     Size  Location     Type
  3601 ;;  x               2    9[COMMON] unsigned int 
  3602 ;; Return value:  Size  Location     Type
  3603 ;;                  1    wreg      unsigned char 
  3604 ;; Registers used:
  3605 ;;		wreg, status,2, status,0, pclath, cstack
  3606 ;; Tracked objects:
  3607 ;;		On entry : 0/0
  3608 ;;		On exit  : 0/0
  3609 ;;		Unchanged: 0/0
  3610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3611 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3612 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3613 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3614 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3615 ;;Total ram usage:       18 bytes
  3616 ;; Hardware stack levels used:    1
  3617 ;; Hardware stack levels required when called:    1
  3618 ;; This function calls:
  3619 ;;		___aldiv
  3620 ;; This function is called by:
  3621 ;;		_main
  3622 ;; This function uses a non-reentrant model
  3623 ;;
  3624                           
  3625                           
  3626                           ;psect for function _EUSART_Initialize
  3627  0613                     _EUSART_Initialize:	
  3628                           
  3629                           ;EUSART.c: 36: unsigned int x;;EUSART.c: 37: x = (16000000 - baudrate*64)/(baudrate*64);
  3630                           
  3631                           ;incstack = 0
  3632                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3633  0613  0020               	movlb	0	; select bank0
  3634  0614  0826               	movf	EUSART_Initialize@baudrate,w
  3635  0615  00AA               	movwf	??_EUSART_Initialize
  3636  0616  0827               	movf	EUSART_Initialize@baudrate+1,w
  3637  0617  00AB               	movwf	??_EUSART_Initialize+1
  3638  0618  0828               	movf	EUSART_Initialize@baudrate+2,w
  3639  0619  00AC               	movwf	??_EUSART_Initialize+2
  3640  061A  0829               	movf	EUSART_Initialize@baudrate+3,w
  3641  061B  00AD               	movwf	??_EUSART_Initialize+3
  3642  061C  3006               	movlw	6
  3643  061D                     u945:	
  3644  061D  35AA               	lslf	??_EUSART_Initialize,f
  3645  061E  0DAB               	rlf	??_EUSART_Initialize+1,f
  3646  061F  0DAC               	rlf	??_EUSART_Initialize+2,f
  3647  0620  0DAD               	rlf	??_EUSART_Initialize+3,f
  3648  0621  0B89               	decfsz	9,f
  3649  0622  2E1D               	goto	u945
  3650  0623  082D               	movf	??_EUSART_Initialize+3,w
  3651  0624  00F3               	movwf	___aldiv@divisor+3
  3652  0625  082C               	movf	??_EUSART_Initialize+2,w
  3653  0626  00F2               	movwf	___aldiv@divisor+2
  3654  0627  082B               	movf	??_EUSART_Initialize+1,w
  3655  0628  00F1               	movwf	___aldiv@divisor+1
  3656  0629  082A               	movf	??_EUSART_Initialize,w
  3657  062A  00F0               	movwf	___aldiv@divisor
  3658  062B  0826               	movf	EUSART_Initialize@baudrate,w
  3659  062C  00AE               	movwf	??_EUSART_Initialize+4
  3660  062D  0827               	movf	EUSART_Initialize@baudrate+1,w
  3661  062E  00AF               	movwf	??_EUSART_Initialize+5
  3662  062F  0828               	movf	EUSART_Initialize@baudrate+2,w
  3663  0630  00B0               	movwf	??_EUSART_Initialize+6
  3664  0631  0829               	movf	EUSART_Initialize@baudrate+3,w
  3665  0632  00B1               	movwf	??_EUSART_Initialize+7
  3666  0633  3006               	movlw	6
  3667  0634                     u955:	
  3668  0634  35AE               	lslf	??_EUSART_Initialize+4,f
  3669  0635  0DAF               	rlf	??_EUSART_Initialize+5,f
  3670  0636  0DB0               	rlf	??_EUSART_Initialize+6,f
  3671  0637  0DB1               	rlf	??_EUSART_Initialize+7,f
  3672  0638  0B89               	decfsz	9,f
  3673  0639  2E34               	goto	u955
  3674  063A  3000               	movlw	0
  3675  063B  00B2               	movwf	??_EUSART_Initialize+8
  3676  063C  3024               	movlw	36
  3677  063D  00B3               	movwf	??_EUSART_Initialize+9
  3678  063E  30F4               	movlw	244
  3679  063F  00B4               	movwf	??_EUSART_Initialize+10
  3680  0640  3000               	movlw	0
  3681  0641  00B5               	movwf	??_EUSART_Initialize+11
  3682  0642  082E               	movf	??_EUSART_Initialize+4,w
  3683  0643  02B2               	subwf	??_EUSART_Initialize+8,f
  3684  0644  082F               	movf	??_EUSART_Initialize+5,w
  3685  0645  3BB3               	subwfb	??_EUSART_Initialize+9,f
  3686  0646  0830               	movf	??_EUSART_Initialize+6,w
  3687  0647  3BB4               	subwfb	??_EUSART_Initialize+10,f
  3688  0648  0831               	movf	??_EUSART_Initialize+7,w
  3689  0649  3BB5               	subwfb	??_EUSART_Initialize+11,f
  3690  064A  0835               	movf	??_EUSART_Initialize+11,w
  3691  064B  00F7               	movwf	___aldiv@dividend+3
  3692  064C  0834               	movf	??_EUSART_Initialize+10,w
  3693  064D  00F6               	movwf	___aldiv@dividend+2
  3694  064E  0833               	movf	??_EUSART_Initialize+9,w
  3695  064F  00F5               	movwf	___aldiv@dividend+1
  3696  0650  0832               	movf	??_EUSART_Initialize+8,w
  3697  0651  00F4               	movwf	___aldiv@dividend
  3698  0652  3185  2591  3186   	fcall	___aldiv
  3699  0655  0871               	movf	?___aldiv+1,w
  3700  0656  00FA               	movwf	EUSART_Initialize@x+1
  3701  0657  0870               	movf	?___aldiv,w
  3702  0658  00F9               	movwf	EUSART_Initialize@x
  3703                           
  3704                           ;EUSART.c: 38: if(x>255)
  3705  0659  3001               	movlw	1
  3706  065A  027A               	subwf	EUSART_Initialize@x+1,w
  3707  065B  3000               	movlw	0
  3708  065C  1903               	skipnz
  3709  065D  0279               	subwf	EUSART_Initialize@x,w
  3710  065E  1C03               	skipc
  3711  065F  2EA8               	goto	l1397
  3712                           
  3713                           ;EUSART.c: 39: {;EUSART.c: 40: x = (16000000 - baudrate*16)/(baudrate*16);
  3714  0660  0020               	movlb	0	; select bank0
  3715  0661  0826               	movf	EUSART_Initialize@baudrate,w
  3716  0662  00AA               	movwf	??_EUSART_Initialize
  3717  0663  0827               	movf	EUSART_Initialize@baudrate+1,w
  3718  0664  00AB               	movwf	??_EUSART_Initialize+1
  3719  0665  0828               	movf	EUSART_Initialize@baudrate+2,w
  3720  0666  00AC               	movwf	??_EUSART_Initialize+2
  3721  0667  0829               	movf	EUSART_Initialize@baudrate+3,w
  3722  0668  00AD               	movwf	??_EUSART_Initialize+3
  3723  0669  3004               	movlw	4
  3724  066A                     u975:	
  3725  066A  35AA               	lslf	??_EUSART_Initialize,f
  3726  066B  0DAB               	rlf	??_EUSART_Initialize+1,f
  3727  066C  0DAC               	rlf	??_EUSART_Initialize+2,f
  3728  066D  0DAD               	rlf	??_EUSART_Initialize+3,f
  3729  066E  0B89               	decfsz	9,f
  3730  066F  2E6A               	goto	u975
  3731  0670  082D               	movf	??_EUSART_Initialize+3,w
  3732  0671  00F3               	movwf	___aldiv@divisor+3
  3733  0672  082C               	movf	??_EUSART_Initialize+2,w
  3734  0673  00F2               	movwf	___aldiv@divisor+2
  3735  0674  082B               	movf	??_EUSART_Initialize+1,w
  3736  0675  00F1               	movwf	___aldiv@divisor+1
  3737  0676  082A               	movf	??_EUSART_Initialize,w
  3738  0677  00F0               	movwf	___aldiv@divisor
  3739  0678  0826               	movf	EUSART_Initialize@baudrate,w
  3740  0679  00AE               	movwf	??_EUSART_Initialize+4
  3741  067A  0827               	movf	EUSART_Initialize@baudrate+1,w
  3742  067B  00AF               	movwf	??_EUSART_Initialize+5
  3743  067C  0828               	movf	EUSART_Initialize@baudrate+2,w
  3744  067D  00B0               	movwf	??_EUSART_Initialize+6
  3745  067E  0829               	movf	EUSART_Initialize@baudrate+3,w
  3746  067F  00B1               	movwf	??_EUSART_Initialize+7
  3747  0680  3004               	movlw	4
  3748  0681                     u985:	
  3749  0681  35AE               	lslf	??_EUSART_Initialize+4,f
  3750  0682  0DAF               	rlf	??_EUSART_Initialize+5,f
  3751  0683  0DB0               	rlf	??_EUSART_Initialize+6,f
  3752  0684  0DB1               	rlf	??_EUSART_Initialize+7,f
  3753  0685  0B89               	decfsz	9,f
  3754  0686  2E81               	goto	u985
  3755  0687  3000               	movlw	0
  3756  0688  00B2               	movwf	??_EUSART_Initialize+8
  3757  0689  3024               	movlw	36
  3758  068A  00B3               	movwf	??_EUSART_Initialize+9
  3759  068B  30F4               	movlw	244
  3760  068C  00B4               	movwf	??_EUSART_Initialize+10
  3761  068D  3000               	movlw	0
  3762  068E  00B5               	movwf	??_EUSART_Initialize+11
  3763  068F  082E               	movf	??_EUSART_Initialize+4,w
  3764  0690  02B2               	subwf	??_EUSART_Initialize+8,f
  3765  0691  082F               	movf	??_EUSART_Initialize+5,w
  3766  0692  3BB3               	subwfb	??_EUSART_Initialize+9,f
  3767  0693  0830               	movf	??_EUSART_Initialize+6,w
  3768  0694  3BB4               	subwfb	??_EUSART_Initialize+10,f
  3769  0695  0831               	movf	??_EUSART_Initialize+7,w
  3770  0696  3BB5               	subwfb	??_EUSART_Initialize+11,f
  3771  0697  0835               	movf	??_EUSART_Initialize+11,w
  3772  0698  00F7               	movwf	___aldiv@dividend+3
  3773  0699  0834               	movf	??_EUSART_Initialize+10,w
  3774  069A  00F6               	movwf	___aldiv@dividend+2
  3775  069B  0833               	movf	??_EUSART_Initialize+9,w
  3776  069C  00F5               	movwf	___aldiv@dividend+1
  3777  069D  0832               	movf	??_EUSART_Initialize+8,w
  3778  069E  00F4               	movwf	___aldiv@dividend
  3779  069F  3185  2591  3186   	fcall	___aldiv
  3780  06A2  0871               	movf	?___aldiv+1,w
  3781  06A3  00FA               	movwf	EUSART_Initialize@x+1
  3782  06A4  0870               	movf	?___aldiv,w
  3783  06A5  00F9               	movwf	EUSART_Initialize@x
  3784                           
  3785                           ;EUSART.c: 41: BRGH = 1;
  3786  06A6  0023               	movlb	3	; select bank3
  3787  06A7  151E               	bsf	30,2	;volatile
  3788  06A8                     l1397:	
  3789                           
  3790                           ;EUSART.c: 42: };EUSART.c: 43: if(x<256)
  3791  06A8  3001               	movlw	1
  3792  06A9  027A               	subwf	EUSART_Initialize@x+1,w
  3793  06AA  3000               	movlw	0
  3794  06AB  1903               	skipnz
  3795  06AC  0279               	subwf	EUSART_Initialize@x,w
  3796  06AD  1803               	skipnc
  3797  06AE  0008               	return
  3798                           
  3799                           ;EUSART.c: 44: {;EUSART.c: 45: SPBRG = x;
  3800  06AF  0879               	movf	EUSART_Initialize@x,w
  3801  06B0  0023               	movlb	3	; select bank3
  3802  06B1  009B               	movwf	27	;volatile
  3803                           
  3804                           ;EUSART.c: 46: SYNC = 0;
  3805  06B2  121E               	bcf	30,4	;volatile
  3806                           
  3807                           ;EUSART.c: 47: SPEN = 1;
  3808  06B3  179D               	bsf	29,7	;volatile
  3809                           
  3810                           ;EUSART.c: 48: TRISC7 = 1;
  3811  06B4  0021               	movlb	1	; select bank1
  3812  06B5  178E               	bsf	14,7	;volatile
  3813                           
  3814                           ;EUSART.c: 49: TRISC6 = 1;
  3815  06B6  170E               	bsf	14,6	;volatile
  3816                           
  3817                           ;EUSART.c: 50: CREN = 1;
  3818  06B7  0023               	movlb	3	; select bank3
  3819  06B8  161D               	bsf	29,4	;volatile
  3820                           
  3821                           ;EUSART.c: 51: TXEN = 1;
  3822  06B9  169E               	bsf	30,5	;volatile
  3823  06BA  0008               	return
  3824  06BB                     __end_of_EUSART_Initialize:	
  3825                           
  3826                           	psect	text18
  3827  0591                     __ptext18:	
  3828 ;; *************** function ___aldiv *****************
  3829 ;; Defined at:
  3830 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\aldiv.c"
  3831 ;; Parameters:    Size  Location     Type
  3832 ;;  divisor         4    0[COMMON] long 
  3833 ;;  dividend        4    4[COMMON] long 
  3834 ;; Auto vars:     Size  Location     Type
  3835 ;;  quotient        4    2[BANK0 ] long 
  3836 ;;  sign            1    1[BANK0 ] unsigned char 
  3837 ;;  counter         1    0[BANK0 ] unsigned char 
  3838 ;; Return value:  Size  Location     Type
  3839 ;;                  4    0[COMMON] long 
  3840 ;; Registers used:
  3841 ;;		wreg, status,2, status,0
  3842 ;; Tracked objects:
  3843 ;;		On entry : 0/0
  3844 ;;		On exit  : 0/0
  3845 ;;		Unchanged: 0/0
  3846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3847 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3848 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3849 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3850 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3851 ;;Total ram usage:       15 bytes
  3852 ;; Hardware stack levels used:    1
  3853 ;; This function calls:
  3854 ;;		Nothing
  3855 ;; This function is called by:
  3856 ;;		_EUSART_Initialize
  3857 ;; This function uses a non-reentrant model
  3858 ;;
  3859                           
  3860                           
  3861                           ;psect for function ___aldiv
  3862  0591                     ___aldiv:	
  3863                           
  3864                           ;incstack = 0
  3865                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3866  0591  0020               	movlb	0	; select bank0
  3867  0592  01A1               	clrf	___aldiv@sign
  3868  0593  1FF3               	btfss	___aldiv@divisor+3,7
  3869  0594  2DA2               	goto	l318
  3870  0595  09F0               	comf	___aldiv@divisor,f
  3871  0596  09F1               	comf	___aldiv@divisor+1,f
  3872  0597  09F2               	comf	___aldiv@divisor+2,f
  3873  0598  09F3               	comf	___aldiv@divisor+3,f
  3874  0599  0AF0               	incf	___aldiv@divisor,f
  3875  059A  1903               	skipnz
  3876  059B  0AF1               	incf	___aldiv@divisor+1,f
  3877  059C  1903               	skipnz
  3878  059D  0AF2               	incf	___aldiv@divisor+2,f
  3879  059E  1903               	skipnz
  3880  059F  0AF3               	incf	___aldiv@divisor+3,f
  3881  05A0  01A1               	clrf	___aldiv@sign
  3882  05A1  0AA1               	incf	___aldiv@sign,f
  3883  05A2                     l318:	
  3884  05A2  1FF7               	btfss	___aldiv@dividend+3,7
  3885  05A3  2DB3               	goto	l1303
  3886  05A4  09F4               	comf	___aldiv@dividend,f
  3887  05A5  09F5               	comf	___aldiv@dividend+1,f
  3888  05A6  09F6               	comf	___aldiv@dividend+2,f
  3889  05A7  09F7               	comf	___aldiv@dividend+3,f
  3890  05A8  0AF4               	incf	___aldiv@dividend,f
  3891  05A9  1903               	skipnz
  3892  05AA  0AF5               	incf	___aldiv@dividend+1,f
  3893  05AB  1903               	skipnz
  3894  05AC  0AF6               	incf	___aldiv@dividend+2,f
  3895  05AD  1903               	skipnz
  3896  05AE  0AF7               	incf	___aldiv@dividend+3,f
  3897  05AF  3001               	movlw	1
  3898  05B0  00F8               	movwf	??___aldiv
  3899  05B1  0878               	movf	??___aldiv,w
  3900  05B2  06A1               	xorwf	___aldiv@sign,f
  3901  05B3                     l1303:	
  3902  05B3  3000               	movlw	0
  3903  05B4  00A5               	movwf	___aldiv@quotient+3
  3904  05B5  3000               	movlw	0
  3905  05B6  00A4               	movwf	___aldiv@quotient+2
  3906  05B7  3000               	movlw	0
  3907  05B8  00A3               	movwf	___aldiv@quotient+1
  3908  05B9  3000               	movlw	0
  3909  05BA  00A2               	movwf	___aldiv@quotient
  3910  05BB  0873               	movf	___aldiv@divisor+3,w
  3911  05BC  0472               	iorwf	___aldiv@divisor+2,w
  3912  05BD  0471               	iorwf	___aldiv@divisor+1,w
  3913  05BE  0470               	iorwf	___aldiv@divisor,w
  3914  05BF  1903               	skipnz
  3915  05C0  2DFC               	goto	l1325
  3916  05C1  01A0               	clrf	___aldiv@counter
  3917  05C2  0AA0               	incf	___aldiv@counter,f
  3918  05C3                     l1311:	
  3919  05C3  1BF3               	btfsc	___aldiv@divisor+3,7
  3920  05C4  2DD1               	goto	l1313
  3921  05C5  3001               	movlw	1
  3922  05C6                     u845:	
  3923  05C6  35F0               	lslf	___aldiv@divisor,f
  3924  05C7  0DF1               	rlf	___aldiv@divisor+1,f
  3925  05C8  0DF2               	rlf	___aldiv@divisor+2,f
  3926  05C9  0DF3               	rlf	___aldiv@divisor+3,f
  3927  05CA  0B89               	decfsz	9,f
  3928  05CB  2DC6               	goto	u845
  3929  05CC  3001               	movlw	1
  3930  05CD  00F8               	movwf	??___aldiv
  3931  05CE  0878               	movf	??___aldiv,w
  3932  05CF  07A0               	addwf	___aldiv@counter,f
  3933  05D0  2DC3               	goto	l1311
  3934  05D1                     l1313:	
  3935  05D1  3001               	movlw	1
  3936  05D2                     u865:	
  3937  05D2  35A2               	lslf	___aldiv@quotient,f
  3938  05D3  0DA3               	rlf	___aldiv@quotient+1,f
  3939  05D4  0DA4               	rlf	___aldiv@quotient+2,f
  3940  05D5  0DA5               	rlf	___aldiv@quotient+3,f
  3941  05D6  0B89               	decfsz	9,f
  3942  05D7  2DD2               	goto	u865
  3943  05D8  0873               	movf	___aldiv@divisor+3,w
  3944  05D9  0277               	subwf	___aldiv@dividend+3,w
  3945  05DA  1D03               	skipz
  3946  05DB  2DE6               	goto	u875
  3947  05DC  0872               	movf	___aldiv@divisor+2,w
  3948  05DD  0276               	subwf	___aldiv@dividend+2,w
  3949  05DE  1D03               	skipz
  3950  05DF  2DE6               	goto	u875
  3951  05E0  0871               	movf	___aldiv@divisor+1,w
  3952  05E1  0275               	subwf	___aldiv@dividend+1,w
  3953  05E2  1D03               	skipz
  3954  05E3  2DE6               	goto	u875
  3955  05E4  0870               	movf	___aldiv@divisor,w
  3956  05E5  0274               	subwf	___aldiv@dividend,w
  3957  05E6                     u875:	
  3958  05E6  1C03               	skipc
  3959  05E7  2DF1               	goto	l1321
  3960  05E8  0870               	movf	___aldiv@divisor,w
  3961  05E9  02F4               	subwf	___aldiv@dividend,f
  3962  05EA  0871               	movf	___aldiv@divisor+1,w
  3963  05EB  3BF5               	subwfb	___aldiv@dividend+1,f
  3964  05EC  0872               	movf	___aldiv@divisor+2,w
  3965  05ED  3BF6               	subwfb	___aldiv@dividend+2,f
  3966  05EE  0873               	movf	___aldiv@divisor+3,w
  3967  05EF  3BF7               	subwfb	___aldiv@dividend+3,f
  3968  05F0  1422               	bsf	___aldiv@quotient,0
  3969  05F1                     l1321:	
  3970  05F1  3001               	movlw	1
  3971  05F2                     u885:	
  3972  05F2  36F3               	lsrf	___aldiv@divisor+3,f
  3973  05F3  0CF2               	rrf	___aldiv@divisor+2,f
  3974  05F4  0CF1               	rrf	___aldiv@divisor+1,f
  3975  05F5  0CF0               	rrf	___aldiv@divisor,f
  3976  05F6  0B89               	decfsz	9,f
  3977  05F7  2DF2               	goto	u885
  3978  05F8  3001               	movlw	1
  3979  05F9  02A0               	subwf	___aldiv@counter,f
  3980  05FA  1D03               	btfss	3,2
  3981  05FB  2DD1               	goto	l1313
  3982  05FC                     l1325:	
  3983  05FC  0821               	movf	___aldiv@sign,w
  3984  05FD  1903               	btfsc	3,2
  3985  05FE  2E0A               	goto	l1329
  3986  05FF  09A2               	comf	___aldiv@quotient,f
  3987  0600  09A3               	comf	___aldiv@quotient+1,f
  3988  0601  09A4               	comf	___aldiv@quotient+2,f
  3989  0602  09A5               	comf	___aldiv@quotient+3,f
  3990  0603  0AA2               	incf	___aldiv@quotient,f
  3991  0604  1903               	skipnz
  3992  0605  0AA3               	incf	___aldiv@quotient+1,f
  3993  0606  1903               	skipnz
  3994  0607  0AA4               	incf	___aldiv@quotient+2,f
  3995  0608  1903               	skipnz
  3996  0609  0AA5               	incf	___aldiv@quotient+3,f
  3997  060A                     l1329:	
  3998  060A  0825               	movf	___aldiv@quotient+3,w
  3999  060B  00F3               	movwf	?___aldiv+3
  4000  060C  0824               	movf	___aldiv@quotient+2,w
  4001  060D  00F2               	movwf	?___aldiv+2
  4002  060E  0823               	movf	___aldiv@quotient+1,w
  4003  060F  00F1               	movwf	?___aldiv+1
  4004  0610  0822               	movf	___aldiv@quotient,w
  4005  0611  00F0               	movwf	?___aldiv
  4006  0612  0008               	return
  4007  0613                     __end_of___aldiv:	
  4008  007E                     btemp	set	126	;btemp
  4009  007E                     wtemp0	set	126


Data Sizes:
    Strings     75
    Constant    0
    Data        0
    BSS         16
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     35      51
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(1) Largest target is 8
		 -> main@buf(BANK0[8]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 8
		 -> main@buf(BANK0[8]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 8
		 -> main@buf(BANK0[8]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 8
		 -> main@buf(BANK0[8]), 

    EUSART_Write_Text@text	PTR unsigned char  size(2) Largest target is 19
		 -> STR_4(CODE[19]), STR_3(CODE[19]), main@buf(BANK0[8]), STR_2(CODE[19]), 
		 -> STR_1(CODE[18]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 8
		 -> main@buf(BANK0[8]), 


Critical Paths under _main in COMMON

    _main->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    ___awdiv->___wmul
    _OW_WriteByte->_OW_WriteBit
    _OW_ReadByte->_OW_ReadBit
    _EUSART_Write_Text->_itoa
    _EUSART_Initialize->___aldiv

Critical Paths under _main in BANK0

    _main->_EUSART_Initialize
    _itoa->_utoa
    _EUSART_Write_Text->_itoa
    _EUSART_Initialize->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0    4925
                                             22 BANK0     13    13      0
                  _EUSART_Initialize
                  _EUSART_Write_Text
                            _OW_Init
                        _OW_ReadByte
                           _OW_Reset
                       _OW_WriteByte
                            ___awdiv
                             ___wmul
                           _initMain
                               _itoa
 ---------------------------------------------------------------------------------
 (1) _itoa                                                 7     3      4    1998
                                             13 COMMON     1     1      0
                                              4 BANK0      6     2      4
                               _utoa
 ---------------------------------------------------------------------------------
 (2) _utoa                                                 9     5      4    1264
                                              8 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     466
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _initMain                                             0     0      0       0
                        _internal_16
 ---------------------------------------------------------------------------------
 (2) _internal_16                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     756
                                              6 COMMON     5     1      4
                                              0 BANK0      4     4      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _OW_WriteByte                                         5     5      0     235
                                              2 COMMON     5     5      0
                        _OW_WriteBit
 ---------------------------------------------------------------------------------
 (2) _OW_WriteBit                                          2     0      2     121
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _OW_Reset                                             1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _OW_ReadByte                                          4     4      0     115
                                              1 COMMON     4     4      0
                         _OW_ReadBit
 ---------------------------------------------------------------------------------
 (2) _OW_ReadBit                                           1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _OW_Init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Write_Text                                    5     3      2     644
                                             10 BANK0      5     3      2
                       _EUSART_Write
                               _itoa (ARG)
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Initialize                                   18    14      4     836
                                              9 COMMON     2     2      0
                                              6 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     604
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Initialize
     ___aldiv
   _EUSART_Write_Text
     _EUSART_Write
     _itoa (ARG)
       _utoa
         ___lwdiv
         ___lwmod
   _OW_Init
   _OW_ReadByte
     _OW_ReadBit
   _OW_Reset
   _OW_WriteByte
     _OW_WriteBit
   ___awdiv
     ___wmul (ARG)
   ___wmul
   _initMain
     _internal_16
   _itoa
     _utoa
       ___lwdiv
       ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     23      33       5       63.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0      41      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      41      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              50      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24              50      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25              20      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Apr 20 23:47:36 2019

               __CFG_CP$OFF 0000                          l87 07F4                ___awdiv@sign 0021  
       ___wmul@multiplicand 0072                         l125 03CB                         l118 041A  
                       l170 033A                         l253 0369                         l318 05A2  
                       l707 057B                         u705 04C8                         u715 04D0  
                       u745 0486                         u675 04B4                         u845 05C6  
                       u765 0495                         u695 04BE                         u775 049C  
                       u865 05D2                         u945 061D                         u875 05E6  
                       u955 0634                         u885 05F2                         u975 066A  
                       u985 0681                __CFG_BORV$LO 0000                         wreg 0009  
              __CFG_IESO$ON 0000                  _OW_ReadBit 034A                __CFG_LVP$OFF 0000  
                      l1221 04B1                        l1311 05C3                        l1303 05B3  
                      l1223 04BD                        l1321 05F1                        l1313 05D1  
                      l1233 04D8                        l1251 049B                        l1325 05FC  
                      l1229 04CF                        l1245 0483                        l1431 0447  
                      l1247 048F                        l1255 04A4                        l1335 0535  
                      l1329 060A                        l1441 037F                        l1513 04E8  
                      l1345 0553                        l1531 0507                        l1603 0780  
                      l1541 0522                        l1519 04F3                        l1607 0786  
                      l1465 03BA                        l1449 0453                        l1545 052A  
                      l1537 0519                        l1529 04FB                        l1563 06EB  
                      l1397 06A8                        l1493 0363                        l1485 03F4  
                      l1559 06E3                        l1593 075E                        l1579 070D  
                      l1599 0769                        STR_1 0839                        STR_2 0826  
                      STR_3 0800                        STR_4 0813                        _BRGH 0CF2  
                      _CREN 0CEC                        u1024 0458                        u1025 0457  
                      u1105 036F                        u1054 03C5                        u1055 03C4  
                      u1307 0477                        u1155 04FE                        u1235 0725  
                      u1317 0411                        u1407 035C                        u1327 0417  
                      u1175 0508                        u1095 036A                        u1337 041F  
                      u1185 0512                        u1347 0430                        u1195 051A  
                      u1357 0438                        u1367 0440                        u1287 06FA  
                      u1377 044A                        u1297 07EC                        u1387 03D6  
                      u1397 0353                        _SCS0 04C8                        _SCS1 04C9  
                      _SPEN 0CEF                        _TXEN 0CF5                        _SYNC 0CF4  
              __CFG_WRT$OFF 0000                        _main 06BB                        _itoa 03DC  
                      fsr0h 0005                        fsr1h 0007                        indf0 0000  
                      fsr0l 0004                        indf1 0001                        fsr1l 0006  
                      btemp 007E                        _utoa 052F                 main@present 0041  
                      start 0002             __end_of_OW_Init 0333            OW_WriteByte@temp 0075  
               _OW_ReadByte 03B8               ?_EUSART_Write 0070             __end_of___aldiv 0613  
                     ?_main 0070                       ?_itoa 0024             __end_of___awdiv 052F  
             __CFG_WDTE$OFF 0000                       ?_utoa 0078             ___awdiv@divisor 0076  
                     _IRCF0 04CB                       _IRCF1 04CC                       _IRCF2 04CD  
                     _IRCF3 04CE             __end_of___lwdiv 04DD             __end_of___lwmod 04A9  
           ___awdiv@counter 0020                       _SPBRG 019B              __CFG_FCMEN$OFF 0000  
               _OW_WriteBit 0402              __CFG_BOREN$OFF 0000                       utoa@c 0022  
                     utoa@v 0020                       status 0003                       wtemp0 007E  
          __end_of_OW_Reset 0451                ?_internal_16 0070              __CFG_MCLRE$OFF 0000  
           __initialization 07F6               OW_WriteByte@i 0076                __end_of_main 07F6  
              __end_of_itoa 0402                __end_of_utoa 0591              ??_EUSART_Write 0070  
            __CFG_LPBOR$OFF 0000                      ??_main 0036                      ??_itoa 007D  
                    ??_utoa 007C              __CFG_PLLEN$OFF 0000       __size_of_OW_WriteByte 002C  
               ?_OW_ReadBit 0070            ___awdiv@dividend 0078              __CFG_ZCDDIS$ON 0000  
                    _RC1REG 0199                   ??_OW_Init 0070                      _TX1REG 019A  
                    _SPLLEN 04CF                      _TRISC6 0476                      _TRISC7 0477  
            __CFG_PWRTE$OFF 0000                   ??___aldiv 0078                      ___wmul 0361  
                 ??___awdiv 007A              __CFG_STVREN$ON 0000                      _getDat 0043  
                 ??___lwdiv 0074                   ??___lwmod 0074            __end_of_initMain 03B8  
          ___awdiv@quotient 0022                _OW_WriteByte 0451                      itoa@cp 0028  
   __end_of__initialization 07FD              __pcstackCOMMON 0070         __size_of_OW_ReadBit 0017  
                 ?_OW_Reset 0070                  __pbssBANK0 0043        __end_of_EUSART_Write 0341  
                __pmaintext 06BB        __size_of_internal_16 0009                     ?___wmul 0070  
              ?_OW_ReadByte 0070             __CFG_PPS1WAY$ON 0000                  ??_OW_Reset 0070  
                   _PPSLOCK 0E0F                ?_OW_WriteBit 0070                     _OW_Init 0330  
                 ?_initMain 0070                     ___aldiv 0591                     ___awdiv 04DD  
           __size_of___wmul 001B                     ___lwdiv 04A9                     ___lwmod 047D  
                   __ptext1 03DC                     __ptext2 052F                     __ptext3 047D  
                   __ptext4 04A9                     __ptext5 0398                     __ptext6 0341  
                   __ptext7 0361                     __ptext8 04DD                     __ptext9 0451  
              OW_ReadByte@i 0074            ___aldiv@dividend 0074                ??_OW_ReadBit 0070  
                   main@buf 0039                     clrloop0 0334        end_of_initialization 07FD  
                ??_initMain 0070                     itoa@buf 0029                     itoa@val 0024  
         _EUSART_Initialize 0613          ?_EUSART_Initialize 0026            ___aldiv@quotient 0022  
                   utoa@buf 0023          __end_of_OW_ReadBit 0361          EUSART_Initialize@x 0079  
                   utoa@val 0078         ??_EUSART_Initialize 002A                   _PORTBbits 000D  
          __CFG_FOSC$INTOSC 0000                   _TRISBbits 008D       __size_of_EUSART_Write 0008  
                 _RXPPSbits 0E24   __end_of_EUSART_Initialize 06BB             OW_WriteByte@val 0074  
            __end_of___wmul 037C        __size_of_OW_ReadByte 0024                _EUSART_Write 0339  
       start_initialization 07F6                OW_WriteBit@b 0070           __size_of_OW_Reset 0028  
      __size_of_OW_WriteBit 0027           _EUSART_Write_Text 037C          ?_EUSART_Write_Text 002A  
                  ??___wmul 0074         ??_EUSART_Write_Text 002C                   ___latbits 0003  
             __pcstackBANK0 0020                    ?_OW_Init 0070   __end_of_EUSART_Write_Text 0398  
__size_of_EUSART_Initialize 00A8               ??_internal_16 0070           __size_of_initMain 0020  
          ___lwdiv@dividend 0072                    ?___aldiv 0070                    ?___awdiv 0076  
                  ?___lwdiv 0070                    ?___lwmod 0070   EUSART_Initialize@baudrate 0026  
          ___lwdiv@quotient 0075             ___aldiv@divisor 0070             ___aldiv@counter 0020  
            ___wmul@product 0074                   clear_ram0 0333                    _PIR1bits 0011  
                  _TEMP_LSB 0052                    _TEMP_MSB 0051         __end_of_internal_16 034A  
             ?_OW_WriteByte 0070           ___wmul@multiplier 0070                    _OW_Reset 0429  
__size_of_EUSART_Write_Text 001C            __size_of_OW_Init 0003            OW_ReadBit@result 0070  
          __size_of___aldiv 0082              ??_OW_WriteByte 0072            __size_of___awdiv 0052  
          __size_of___lwdiv 0034            __size_of___lwmod 002C                  _ANSELBbits 018D  
                  _cel_temp 004F             ___lwdiv@divisor 0070                    _far_temp 0050  
           ___lwdiv@counter 0077                    __ptext10 0402                    __ptext11 0429  
                  __ptext12 03B8                    __ptext13 034A                    __ptext14 0330  
                  __ptext15 037C                    __ptext16 0339                    __ptext17 0613  
                  __ptext18 0591                    _initMain 0398               __size_of_main 013B  
             __size_of_itoa 0026               __size_of_utoa 0062                 _internal_16 0341  
                  _loop_var 004D                  _RB2PPSbits 0E9A                  _RC1STAbits 019D  
             ??_OW_ReadByte 0071            OW_ReadByte@value 0073                    itoa@base 0026  
             ??_OW_WriteBit 0072            ___lwmod@dividend 0072           __CFG_CLKOUTEN$OFF 0000  
               _PPSLOCKbits 0E0F               __pstringtext1 0800               __pstringtext2 0813  
             __pstringtext3 0826               __pstringtext4 0839               __pstringtext5 0000  
                  utoa@base 007A         __end_of_OW_ReadByte 03DC             ___lwmod@divisor 0070  
           ___lwmod@counter 0075       EUSART_Write_Text@text 002A                ___aldiv@sign 0021  
        EUSART_Write@txData 0070        __end_of_OW_WriteByte 047D         __end_of_OW_WriteBit 0429  
        EUSART_Write_Text@i 002D  
