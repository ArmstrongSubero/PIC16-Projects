

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Sat Feb 25 21:31:47 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F1717
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2
    35                           	psect	text25,local,class=CODE,merge=1,delta=2
    36                           	psect	text26,local,class=CODE,merge=1,delta=2
    37                           	psect	text27,local,class=CODE,merge=1,delta=2
    38                           	psect	text28,local,class=CODE,merge=1,delta=2
    39                           	psect	text29,local,class=CODE,merge=1,delta=2
    40                           	psect	text30,local,class=CODE,merge=1,delta=2
    41                           	psect	text31,local,class=CODE,merge=1,delta=2
    42                           	dabs	1,0x7E,2
    43  0000                     	;# 
    44  0001                     	;# 
    45  0002                     	;# 
    46  0003                     	;# 
    47  0004                     	;# 
    48  0005                     	;# 
    49  0006                     	;# 
    50  0007                     	;# 
    51  0008                     	;# 
    52  0009                     	;# 
    53  000A                     	;# 
    54  000B                     	;# 
    55  000C                     	;# 
    56  000D                     	;# 
    57  000E                     	;# 
    58  000F                     	;# 
    59  0010                     	;# 
    60  0011                     	;# 
    61  0012                     	;# 
    62  0013                     	;# 
    63  0015                     	;# 
    64  0016                     	;# 
    65  0016                     	;# 
    66  0017                     	;# 
    67  0018                     	;# 
    68  0019                     	;# 
    69  001A                     	;# 
    70  001B                     	;# 
    71  001C                     	;# 
    72  008C                     	;# 
    73  008D                     	;# 
    74  008E                     	;# 
    75  008F                     	;# 
    76  0090                     	;# 
    77  0091                     	;# 
    78  0092                     	;# 
    79  0093                     	;# 
    80  0095                     	;# 
    81  0096                     	;# 
    82  0097                     	;# 
    83  0098                     	;# 
    84  0099                     	;# 
    85  009A                     	;# 
    86  009B                     	;# 
    87  009B                     	;# 
    88  009C                     	;# 
    89  009D                     	;# 
    90  009E                     	;# 
    91  009F                     	;# 
    92  010C                     	;# 
    93  010D                     	;# 
    94  010E                     	;# 
    95  010F                     	;# 
    96  0110                     	;# 
    97  0111                     	;# 
    98  0112                     	;# 
    99  0113                     	;# 
   100  0114                     	;# 
   101  0115                     	;# 
   102  0116                     	;# 
   103  0117                     	;# 
   104  0118                     	;# 
   105  0119                     	;# 
   106  011A                     	;# 
   107  011B                     	;# 
   108  011B                     	;# 
   109  011C                     	;# 
   110  018C                     	;# 
   111  018D                     	;# 
   112  018E                     	;# 
   113  018F                     	;# 
   114  0190                     	;# 
   115  0191                     	;# 
   116  0191                     	;# 
   117  0192                     	;# 
   118  0193                     	;# 
   119  0193                     	;# 
   120  0194                     	;# 
   121  0195                     	;# 
   122  0196                     	;# 
   123  0197                     	;# 
   124  0199                     	;# 
   125  0199                     	;# 
   126  0199                     	;# 
   127  019A                     	;# 
   128  019A                     	;# 
   129  019A                     	;# 
   130  019B                     	;# 
   131  019B                     	;# 
   132  019B                     	;# 
   133  019B                     	;# 
   134  019B                     	;# 
   135  019C                     	;# 
   136  019C                     	;# 
   137  019C                     	;# 
   138  019D                     	;# 
   139  019D                     	;# 
   140  019D                     	;# 
   141  019E                     	;# 
   142  019E                     	;# 
   143  019E                     	;# 
   144  019F                     	;# 
   145  019F                     	;# 
   146  019F                     	;# 
   147  019F                     	;# 
   148  019F                     	;# 
   149  020C                     	;# 
   150  020D                     	;# 
   151  020E                     	;# 
   152  020F                     	;# 
   153  0210                     	;# 
   154  0211                     	;# 
   155  0211                     	;# 
   156  0212                     	;# 
   157  0212                     	;# 
   158  0213                     	;# 
   159  0213                     	;# 
   160  0214                     	;# 
   161  0214                     	;# 
   162  0215                     	;# 
   163  0215                     	;# 
   164  0215                     	;# 
   165  0215                     	;# 
   166  0216                     	;# 
   167  0216                     	;# 
   168  0217                     	;# 
   169  0217                     	;# 
   170  028C                     	;# 
   171  028D                     	;# 
   172  028E                     	;# 
   173  028F                     	;# 
   174  0290                     	;# 
   175  0291                     	;# 
   176  0291                     	;# 
   177  0292                     	;# 
   178  0293                     	;# 
   179  0293                     	;# 
   180  0298                     	;# 
   181  0298                     	;# 
   182  0299                     	;# 
   183  029A                     	;# 
   184  029A                     	;# 
   185  029E                     	;# 
   186  030C                     	;# 
   187  030D                     	;# 
   188  030E                     	;# 
   189  030F                     	;# 
   190  0310                     	;# 
   191  038C                     	;# 
   192  038D                     	;# 
   193  038E                     	;# 
   194  038F                     	;# 
   195  0390                     	;# 
   196  0391                     	;# 
   197  0392                     	;# 
   198  0393                     	;# 
   199  0394                     	;# 
   200  0395                     	;# 
   201  0396                     	;# 
   202  0397                     	;# 
   203  0398                     	;# 
   204  0399                     	;# 
   205  039D                     	;# 
   206  039E                     	;# 
   207  039F                     	;# 
   208  0415                     	;# 
   209  0416                     	;# 
   210  0417                     	;# 
   211  041C                     	;# 
   212  041D                     	;# 
   213  041E                     	;# 
   214  0498                     	;# 
   215  0498                     	;# 
   216  0499                     	;# 
   217  049A                     	;# 
   218  049B                     	;# 
   219  049B                     	;# 
   220  049C                     	;# 
   221  049D                     	;# 
   222  049E                     	;# 
   223  049F                     	;# 
   224  0511                     	;# 
   225  0515                     	;# 
   226  0617                     	;# 
   227  0618                     	;# 
   228  0619                     	;# 
   229  0619                     	;# 
   230  061A                     	;# 
   231  061B                     	;# 
   232  061C                     	;# 
   233  061C                     	;# 
   234  0691                     	;# 
   235  0692                     	;# 
   236  0693                     	;# 
   237  0694                     	;# 
   238  0695                     	;# 
   239  0696                     	;# 
   240  0697                     	;# 
   241  0698                     	;# 
   242  0699                     	;# 
   243  069A                     	;# 
   244  069B                     	;# 
   245  069C                     	;# 
   246  069D                     	;# 
   247  069E                     	;# 
   248  069F                     	;# 
   249  0E0F                     	;# 
   250  0E10                     	;# 
   251  0E11                     	;# 
   252  0E12                     	;# 
   253  0E13                     	;# 
   254  0E14                     	;# 
   255  0E15                     	;# 
   256  0E17                     	;# 
   257  0E20                     	;# 
   258  0E21                     	;# 
   259  0E22                     	;# 
   260  0E24                     	;# 
   261  0E25                     	;# 
   262  0E28                     	;# 
   263  0E29                     	;# 
   264  0E2A                     	;# 
   265  0E2B                     	;# 
   266  0E90                     	;# 
   267  0E91                     	;# 
   268  0E92                     	;# 
   269  0E93                     	;# 
   270  0E94                     	;# 
   271  0E95                     	;# 
   272  0E96                     	;# 
   273  0E97                     	;# 
   274  0E98                     	;# 
   275  0E99                     	;# 
   276  0E9A                     	;# 
   277  0E9B                     	;# 
   278  0E9C                     	;# 
   279  0E9D                     	;# 
   280  0E9E                     	;# 
   281  0E9F                     	;# 
   282  0EA0                     	;# 
   283  0EA1                     	;# 
   284  0EA2                     	;# 
   285  0EA3                     	;# 
   286  0EA4                     	;# 
   287  0EA5                     	;# 
   288  0EA6                     	;# 
   289  0EA7                     	;# 
   290  0EA8                     	;# 
   291  0EA9                     	;# 
   292  0EAA                     	;# 
   293  0EAB                     	;# 
   294  0EAC                     	;# 
   295  0EAD                     	;# 
   296  0EAE                     	;# 
   297  0EAF                     	;# 
   298  0EB0                     	;# 
   299  0EB1                     	;# 
   300  0EB2                     	;# 
   301  0F0F                     	;# 
   302  0F10                     	;# 
   303  0F11                     	;# 
   304  0F12                     	;# 
   305  0F13                     	;# 
   306  0F14                     	;# 
   307  0F15                     	;# 
   308  0F16                     	;# 
   309  0F17                     	;# 
   310  0F18                     	;# 
   311  0F19                     	;# 
   312  0F1A                     	;# 
   313  0F1B                     	;# 
   314  0F1C                     	;# 
   315  0F1D                     	;# 
   316  0F1E                     	;# 
   317  0F1F                     	;# 
   318  0F20                     	;# 
   319  0F21                     	;# 
   320  0F22                     	;# 
   321  0F23                     	;# 
   322  0F24                     	;# 
   323  0F25                     	;# 
   324  0F26                     	;# 
   325  0F27                     	;# 
   326  0F28                     	;# 
   327  0F29                     	;# 
   328  0F2A                     	;# 
   329  0F2B                     	;# 
   330  0F2C                     	;# 
   331  0F2D                     	;# 
   332  0F2E                     	;# 
   333  0F2F                     	;# 
   334  0F30                     	;# 
   335  0F31                     	;# 
   336  0F32                     	;# 
   337  0F33                     	;# 
   338  0F34                     	;# 
   339  0F35                     	;# 
   340  0F36                     	;# 
   341  0F37                     	;# 
   342  0FE4                     	;# 
   343  0FE5                     	;# 
   344  0FE6                     	;# 
   345  0FE7                     	;# 
   346  0FE8                     	;# 
   347  0FE9                     	;# 
   348  0FEA                     	;# 
   349  0FEB                     	;# 
   350  0FED                     	;# 
   351  0FEE                     	;# 
   352  0FEF                     	;# 
   353  0000                     	;# 
   354  0001                     	;# 
   355  0002                     	;# 
   356  0003                     	;# 
   357  0004                     	;# 
   358  0005                     	;# 
   359  0006                     	;# 
   360  0007                     	;# 
   361  0008                     	;# 
   362  0009                     	;# 
   363  000A                     	;# 
   364  000B                     	;# 
   365  000C                     	;# 
   366  000D                     	;# 
   367  000E                     	;# 
   368  000F                     	;# 
   369  0010                     	;# 
   370  0011                     	;# 
   371  0012                     	;# 
   372  0013                     	;# 
   373  0015                     	;# 
   374  0016                     	;# 
   375  0016                     	;# 
   376  0017                     	;# 
   377  0018                     	;# 
   378  0019                     	;# 
   379  001A                     	;# 
   380  001B                     	;# 
   381  001C                     	;# 
   382  008C                     	;# 
   383  008D                     	;# 
   384  008E                     	;# 
   385  008F                     	;# 
   386  0090                     	;# 
   387  0091                     	;# 
   388  0092                     	;# 
   389  0093                     	;# 
   390  0095                     	;# 
   391  0096                     	;# 
   392  0097                     	;# 
   393  0098                     	;# 
   394  0099                     	;# 
   395  009A                     	;# 
   396  009B                     	;# 
   397  009B                     	;# 
   398  009C                     	;# 
   399  009D                     	;# 
   400  009E                     	;# 
   401  009F                     	;# 
   402  010C                     	;# 
   403  010D                     	;# 
   404  010E                     	;# 
   405  010F                     	;# 
   406  0110                     	;# 
   407  0111                     	;# 
   408  0112                     	;# 
   409  0113                     	;# 
   410  0114                     	;# 
   411  0115                     	;# 
   412  0116                     	;# 
   413  0117                     	;# 
   414  0118                     	;# 
   415  0119                     	;# 
   416  011A                     	;# 
   417  011B                     	;# 
   418  011B                     	;# 
   419  011C                     	;# 
   420  018C                     	;# 
   421  018D                     	;# 
   422  018E                     	;# 
   423  018F                     	;# 
   424  0190                     	;# 
   425  0191                     	;# 
   426  0191                     	;# 
   427  0192                     	;# 
   428  0193                     	;# 
   429  0193                     	;# 
   430  0194                     	;# 
   431  0195                     	;# 
   432  0196                     	;# 
   433  0197                     	;# 
   434  0199                     	;# 
   435  0199                     	;# 
   436  0199                     	;# 
   437  019A                     	;# 
   438  019A                     	;# 
   439  019A                     	;# 
   440  019B                     	;# 
   441  019B                     	;# 
   442  019B                     	;# 
   443  019B                     	;# 
   444  019B                     	;# 
   445  019C                     	;# 
   446  019C                     	;# 
   447  019C                     	;# 
   448  019D                     	;# 
   449  019D                     	;# 
   450  019D                     	;# 
   451  019E                     	;# 
   452  019E                     	;# 
   453  019E                     	;# 
   454  019F                     	;# 
   455  019F                     	;# 
   456  019F                     	;# 
   457  019F                     	;# 
   458  019F                     	;# 
   459  020C                     	;# 
   460  020D                     	;# 
   461  020E                     	;# 
   462  020F                     	;# 
   463  0210                     	;# 
   464  0211                     	;# 
   465  0211                     	;# 
   466  0212                     	;# 
   467  0212                     	;# 
   468  0213                     	;# 
   469  0213                     	;# 
   470  0214                     	;# 
   471  0214                     	;# 
   472  0215                     	;# 
   473  0215                     	;# 
   474  0215                     	;# 
   475  0215                     	;# 
   476  0216                     	;# 
   477  0216                     	;# 
   478  0217                     	;# 
   479  0217                     	;# 
   480  028C                     	;# 
   481  028D                     	;# 
   482  028E                     	;# 
   483  028F                     	;# 
   484  0290                     	;# 
   485  0291                     	;# 
   486  0291                     	;# 
   487  0292                     	;# 
   488  0293                     	;# 
   489  0293                     	;# 
   490  0298                     	;# 
   491  0298                     	;# 
   492  0299                     	;# 
   493  029A                     	;# 
   494  029A                     	;# 
   495  029E                     	;# 
   496  030C                     	;# 
   497  030D                     	;# 
   498  030E                     	;# 
   499  030F                     	;# 
   500  0310                     	;# 
   501  038C                     	;# 
   502  038D                     	;# 
   503  038E                     	;# 
   504  038F                     	;# 
   505  0390                     	;# 
   506  0391                     	;# 
   507  0392                     	;# 
   508  0393                     	;# 
   509  0394                     	;# 
   510  0395                     	;# 
   511  0396                     	;# 
   512  0397                     	;# 
   513  0398                     	;# 
   514  0399                     	;# 
   515  039D                     	;# 
   516  039E                     	;# 
   517  039F                     	;# 
   518  0415                     	;# 
   519  0416                     	;# 
   520  0417                     	;# 
   521  041C                     	;# 
   522  041D                     	;# 
   523  041E                     	;# 
   524  0498                     	;# 
   525  0498                     	;# 
   526  0499                     	;# 
   527  049A                     	;# 
   528  049B                     	;# 
   529  049B                     	;# 
   530  049C                     	;# 
   531  049D                     	;# 
   532  049E                     	;# 
   533  049F                     	;# 
   534  0511                     	;# 
   535  0515                     	;# 
   536  0617                     	;# 
   537  0618                     	;# 
   538  0619                     	;# 
   539  0619                     	;# 
   540  061A                     	;# 
   541  061B                     	;# 
   542  061C                     	;# 
   543  061C                     	;# 
   544  0691                     	;# 
   545  0692                     	;# 
   546  0693                     	;# 
   547  0694                     	;# 
   548  0695                     	;# 
   549  0696                     	;# 
   550  0697                     	;# 
   551  0698                     	;# 
   552  0699                     	;# 
   553  069A                     	;# 
   554  069B                     	;# 
   555  069C                     	;# 
   556  069D                     	;# 
   557  069E                     	;# 
   558  069F                     	;# 
   559  0E0F                     	;# 
   560  0E10                     	;# 
   561  0E11                     	;# 
   562  0E12                     	;# 
   563  0E13                     	;# 
   564  0E14                     	;# 
   565  0E15                     	;# 
   566  0E17                     	;# 
   567  0E20                     	;# 
   568  0E21                     	;# 
   569  0E22                     	;# 
   570  0E24                     	;# 
   571  0E25                     	;# 
   572  0E28                     	;# 
   573  0E29                     	;# 
   574  0E2A                     	;# 
   575  0E2B                     	;# 
   576  0E90                     	;# 
   577  0E91                     	;# 
   578  0E92                     	;# 
   579  0E93                     	;# 
   580  0E94                     	;# 
   581  0E95                     	;# 
   582  0E96                     	;# 
   583  0E97                     	;# 
   584  0E98                     	;# 
   585  0E99                     	;# 
   586  0E9A                     	;# 
   587  0E9B                     	;# 
   588  0E9C                     	;# 
   589  0E9D                     	;# 
   590  0E9E                     	;# 
   591  0E9F                     	;# 
   592  0EA0                     	;# 
   593  0EA1                     	;# 
   594  0EA2                     	;# 
   595  0EA3                     	;# 
   596  0EA4                     	;# 
   597  0EA5                     	;# 
   598  0EA6                     	;# 
   599  0EA7                     	;# 
   600  0EA8                     	;# 
   601  0EA9                     	;# 
   602  0EAA                     	;# 
   603  0EAB                     	;# 
   604  0EAC                     	;# 
   605  0EAD                     	;# 
   606  0EAE                     	;# 
   607  0EAF                     	;# 
   608  0EB0                     	;# 
   609  0EB1                     	;# 
   610  0EB2                     	;# 
   611  0F0F                     	;# 
   612  0F10                     	;# 
   613  0F11                     	;# 
   614  0F12                     	;# 
   615  0F13                     	;# 
   616  0F14                     	;# 
   617  0F15                     	;# 
   618  0F16                     	;# 
   619  0F17                     	;# 
   620  0F18                     	;# 
   621  0F19                     	;# 
   622  0F1A                     	;# 
   623  0F1B                     	;# 
   624  0F1C                     	;# 
   625  0F1D                     	;# 
   626  0F1E                     	;# 
   627  0F1F                     	;# 
   628  0F20                     	;# 
   629  0F21                     	;# 
   630  0F22                     	;# 
   631  0F23                     	;# 
   632  0F24                     	;# 
   633  0F25                     	;# 
   634  0F26                     	;# 
   635  0F27                     	;# 
   636  0F28                     	;# 
   637  0F29                     	;# 
   638  0F2A                     	;# 
   639  0F2B                     	;# 
   640  0F2C                     	;# 
   641  0F2D                     	;# 
   642  0F2E                     	;# 
   643  0F2F                     	;# 
   644  0F30                     	;# 
   645  0F31                     	;# 
   646  0F32                     	;# 
   647  0F33                     	;# 
   648  0F34                     	;# 
   649  0F35                     	;# 
   650  0F36                     	;# 
   651  0F37                     	;# 
   652  0FE4                     	;# 
   653  0FE5                     	;# 
   654  0FE6                     	;# 
   655  0FE7                     	;# 
   656  0FE8                     	;# 
   657  0FE9                     	;# 
   658  0FEA                     	;# 
   659  0FEB                     	;# 
   660  0FED                     	;# 
   661  0FEE                     	;# 
   662  0FEF                     	;# 
   663  0000                     	;# 
   664  0001                     	;# 
   665  0002                     	;# 
   666  0003                     	;# 
   667  0004                     	;# 
   668  0005                     	;# 
   669  0006                     	;# 
   670  0007                     	;# 
   671  0008                     	;# 
   672  0009                     	;# 
   673  000A                     	;# 
   674  000B                     	;# 
   675  000C                     	;# 
   676  000D                     	;# 
   677  000E                     	;# 
   678  000F                     	;# 
   679  0010                     	;# 
   680  0011                     	;# 
   681  0012                     	;# 
   682  0013                     	;# 
   683  0015                     	;# 
   684  0016                     	;# 
   685  0016                     	;# 
   686  0017                     	;# 
   687  0018                     	;# 
   688  0019                     	;# 
   689  001A                     	;# 
   690  001B                     	;# 
   691  001C                     	;# 
   692  008C                     	;# 
   693  008D                     	;# 
   694  008E                     	;# 
   695  008F                     	;# 
   696  0090                     	;# 
   697  0091                     	;# 
   698  0092                     	;# 
   699  0093                     	;# 
   700  0095                     	;# 
   701  0096                     	;# 
   702  0097                     	;# 
   703  0098                     	;# 
   704  0099                     	;# 
   705  009A                     	;# 
   706  009B                     	;# 
   707  009B                     	;# 
   708  009C                     	;# 
   709  009D                     	;# 
   710  009E                     	;# 
   711  009F                     	;# 
   712  010C                     	;# 
   713  010D                     	;# 
   714  010E                     	;# 
   715  010F                     	;# 
   716  0110                     	;# 
   717  0111                     	;# 
   718  0112                     	;# 
   719  0113                     	;# 
   720  0114                     	;# 
   721  0115                     	;# 
   722  0116                     	;# 
   723  0117                     	;# 
   724  0118                     	;# 
   725  0119                     	;# 
   726  011A                     	;# 
   727  011B                     	;# 
   728  011B                     	;# 
   729  011C                     	;# 
   730  018C                     	;# 
   731  018D                     	;# 
   732  018E                     	;# 
   733  018F                     	;# 
   734  0190                     	;# 
   735  0191                     	;# 
   736  0191                     	;# 
   737  0192                     	;# 
   738  0193                     	;# 
   739  0193                     	;# 
   740  0194                     	;# 
   741  0195                     	;# 
   742  0196                     	;# 
   743  0197                     	;# 
   744  0199                     	;# 
   745  0199                     	;# 
   746  0199                     	;# 
   747  019A                     	;# 
   748  019A                     	;# 
   749  019A                     	;# 
   750  019B                     	;# 
   751  019B                     	;# 
   752  019B                     	;# 
   753  019B                     	;# 
   754  019B                     	;# 
   755  019C                     	;# 
   756  019C                     	;# 
   757  019C                     	;# 
   758  019D                     	;# 
   759  019D                     	;# 
   760  019D                     	;# 
   761  019E                     	;# 
   762  019E                     	;# 
   763  019E                     	;# 
   764  019F                     	;# 
   765  019F                     	;# 
   766  019F                     	;# 
   767  019F                     	;# 
   768  019F                     	;# 
   769  020C                     	;# 
   770  020D                     	;# 
   771  020E                     	;# 
   772  020F                     	;# 
   773  0210                     	;# 
   774  0211                     	;# 
   775  0211                     	;# 
   776  0212                     	;# 
   777  0212                     	;# 
   778  0213                     	;# 
   779  0213                     	;# 
   780  0214                     	;# 
   781  0214                     	;# 
   782  0215                     	;# 
   783  0215                     	;# 
   784  0215                     	;# 
   785  0215                     	;# 
   786  0216                     	;# 
   787  0216                     	;# 
   788  0217                     	;# 
   789  0217                     	;# 
   790  028C                     	;# 
   791  028D                     	;# 
   792  028E                     	;# 
   793  028F                     	;# 
   794  0290                     	;# 
   795  0291                     	;# 
   796  0291                     	;# 
   797  0292                     	;# 
   798  0293                     	;# 
   799  0293                     	;# 
   800  0298                     	;# 
   801  0298                     	;# 
   802  0299                     	;# 
   803  029A                     	;# 
   804  029A                     	;# 
   805  029E                     	;# 
   806  030C                     	;# 
   807  030D                     	;# 
   808  030E                     	;# 
   809  030F                     	;# 
   810  0310                     	;# 
   811  038C                     	;# 
   812  038D                     	;# 
   813  038E                     	;# 
   814  038F                     	;# 
   815  0390                     	;# 
   816  0391                     	;# 
   817  0392                     	;# 
   818  0393                     	;# 
   819  0394                     	;# 
   820  0395                     	;# 
   821  0396                     	;# 
   822  0397                     	;# 
   823  0398                     	;# 
   824  0399                     	;# 
   825  039D                     	;# 
   826  039E                     	;# 
   827  039F                     	;# 
   828  0415                     	;# 
   829  0416                     	;# 
   830  0417                     	;# 
   831  041C                     	;# 
   832  041D                     	;# 
   833  041E                     	;# 
   834  0498                     	;# 
   835  0498                     	;# 
   836  0499                     	;# 
   837  049A                     	;# 
   838  049B                     	;# 
   839  049B                     	;# 
   840  049C                     	;# 
   841  049D                     	;# 
   842  049E                     	;# 
   843  049F                     	;# 
   844  0511                     	;# 
   845  0515                     	;# 
   846  0617                     	;# 
   847  0618                     	;# 
   848  0619                     	;# 
   849  0619                     	;# 
   850  061A                     	;# 
   851  061B                     	;# 
   852  061C                     	;# 
   853  061C                     	;# 
   854  0691                     	;# 
   855  0692                     	;# 
   856  0693                     	;# 
   857  0694                     	;# 
   858  0695                     	;# 
   859  0696                     	;# 
   860  0697                     	;# 
   861  0698                     	;# 
   862  0699                     	;# 
   863  069A                     	;# 
   864  069B                     	;# 
   865  069C                     	;# 
   866  069D                     	;# 
   867  069E                     	;# 
   868  069F                     	;# 
   869  0E0F                     	;# 
   870  0E10                     	;# 
   871  0E11                     	;# 
   872  0E12                     	;# 
   873  0E13                     	;# 
   874  0E14                     	;# 
   875  0E15                     	;# 
   876  0E17                     	;# 
   877  0E20                     	;# 
   878  0E21                     	;# 
   879  0E22                     	;# 
   880  0E24                     	;# 
   881  0E25                     	;# 
   882  0E28                     	;# 
   883  0E29                     	;# 
   884  0E2A                     	;# 
   885  0E2B                     	;# 
   886  0E90                     	;# 
   887  0E91                     	;# 
   888  0E92                     	;# 
   889  0E93                     	;# 
   890  0E94                     	;# 
   891  0E95                     	;# 
   892  0E96                     	;# 
   893  0E97                     	;# 
   894  0E98                     	;# 
   895  0E99                     	;# 
   896  0E9A                     	;# 
   897  0E9B                     	;# 
   898  0E9C                     	;# 
   899  0E9D                     	;# 
   900  0E9E                     	;# 
   901  0E9F                     	;# 
   902  0EA0                     	;# 
   903  0EA1                     	;# 
   904  0EA2                     	;# 
   905  0EA3                     	;# 
   906  0EA4                     	;# 
   907  0EA5                     	;# 
   908  0EA6                     	;# 
   909  0EA7                     	;# 
   910  0EA8                     	;# 
   911  0EA9                     	;# 
   912  0EAA                     	;# 
   913  0EAB                     	;# 
   914  0EAC                     	;# 
   915  0EAD                     	;# 
   916  0EAE                     	;# 
   917  0EAF                     	;# 
   918  0EB0                     	;# 
   919  0EB1                     	;# 
   920  0EB2                     	;# 
   921  0F0F                     	;# 
   922  0F10                     	;# 
   923  0F11                     	;# 
   924  0F12                     	;# 
   925  0F13                     	;# 
   926  0F14                     	;# 
   927  0F15                     	;# 
   928  0F16                     	;# 
   929  0F17                     	;# 
   930  0F18                     	;# 
   931  0F19                     	;# 
   932  0F1A                     	;# 
   933  0F1B                     	;# 
   934  0F1C                     	;# 
   935  0F1D                     	;# 
   936  0F1E                     	;# 
   937  0F1F                     	;# 
   938  0F20                     	;# 
   939  0F21                     	;# 
   940  0F22                     	;# 
   941  0F23                     	;# 
   942  0F24                     	;# 
   943  0F25                     	;# 
   944  0F26                     	;# 
   945  0F27                     	;# 
   946  0F28                     	;# 
   947  0F29                     	;# 
   948  0F2A                     	;# 
   949  0F2B                     	;# 
   950  0F2C                     	;# 
   951  0F2D                     	;# 
   952  0F2E                     	;# 
   953  0F2F                     	;# 
   954  0F30                     	;# 
   955  0F31                     	;# 
   956  0F32                     	;# 
   957  0F33                     	;# 
   958  0F34                     	;# 
   959  0F35                     	;# 
   960  0F36                     	;# 
   961  0F37                     	;# 
   962  0FE4                     	;# 
   963  0FE5                     	;# 
   964  0FE6                     	;# 
   965  0FE7                     	;# 
   966  0FE8                     	;# 
   967  0FE9                     	;# 
   968  0FEA                     	;# 
   969  0FEB                     	;# 
   970  0FED                     	;# 
   971  0FEE                     	;# 
   972  0FEF                     	;# 
   973                           
   974                           	psect	stringtext
   975  0800                     __pstringtext:	
   976  0800                     _dpowers:	
   977  0800  3401               	retlw	1
   978  0801  3400               	retlw	0
   979  0802  3400               	retlw	0
   980  0803  3400               	retlw	0
   981  0804  340A               	retlw	10
   982  0805  3400               	retlw	0
   983  0806  3400               	retlw	0
   984  0807  3400               	retlw	0
   985  0808  3464               	retlw	100
   986  0809  3400               	retlw	0
   987  080A  3400               	retlw	0
   988  080B  3400               	retlw	0
   989  080C  34E8               	retlw	232
   990  080D  3403               	retlw	3
   991  080E  3400               	retlw	0
   992  080F  3400               	retlw	0
   993  0810  3410               	retlw	16
   994  0811  3427               	retlw	39
   995  0812  3400               	retlw	0
   996  0813  3400               	retlw	0
   997  0814  34A0               	retlw	160
   998  0815  3486               	retlw	134
   999  0816  3401               	retlw	1
  1000  0817  3400               	retlw	0
  1001  0818  3440               	retlw	64
  1002  0819  3442               	retlw	66
  1003  081A  340F               	retlw	15
  1004  081B  3400               	retlw	0
  1005  081C  3480               	retlw	128
  1006  081D  3496               	retlw	150
  1007  081E  3498               	retlw	152
  1008  081F  3400               	retlw	0
  1009  0820  3400               	retlw	0
  1010  0821  34E1               	retlw	225
  1011  0822  34F5               	retlw	245
  1012  0823  3405               	retlw	5
  1013  0824  3400               	retlw	0
  1014  0825  34CA               	retlw	202
  1015  0826  349A               	retlw	154
  1016  0827  343B               	retlw	59
  1017  0828                     __end_of_dpowers:	
  1018  000F                     _PORTD	set	15
  1019  007A                     _RD2	set	122
  1020  007B                     _RD3	set	123
  1021  007C                     _RD4	set	124
  1022  007D                     _RD5	set	125
  1023  007E                     _RD6	set	126
  1024  007F                     _RD7	set	127
  1025  008F                     _TRISD	set	143
  1026  04CB                     _IRCF0	set	1227
  1027  04CC                     _IRCF1	set	1228
  1028  04CD                     _IRCF2	set	1229
  1029  04CE                     _IRCF3	set	1230
  1030  04C8                     _SCS0	set	1224
  1031  04C9                     _SCS1	set	1225
  1032  04CF                     _SPLLEN	set	1231
  1033  018F                     _ANSELD	set	399
  1034  0828                     STR_2:	
  1035  0828  3425               	retlw	37	;'%'
  1036  0829  346C               	retlw	108	;'l'
  1037  082A  3475               	retlw	117	;'u'
  1038  082B  342E               	retlw	46	;'.'
  1039  082C  3425               	retlw	37	;'%'
  1040  082D  3436               	retlw	54	;'6'
  1041  082E  342E               	retlw	46	;'.'
  1042  082F  3436               	retlw	54	;'6'
  1043  0830  346C               	retlw	108	;'l'
  1044  0831  3475               	retlw	117	;'u'
  1045  0832  3400               	retlw	0
  1046  0833                     STR_1:	
  1047  0833  3450               	retlw	80	;'P'
  1048  0834  3449               	retlw	73	;'I'
  1049  0835  3443               	retlw	67	;'C'
  1050  0836  3431               	retlw	49	;'1'
  1051  0837  3436               	retlw	54	;'6'
  1052  0838  3446               	retlw	70	;'F'
  1053  0839  3431               	retlw	49	;'1'
  1054  083A  3437               	retlw	55	;'7'
  1055  083B  3431               	retlw	49	;'1'
  1056  083C  3437               	retlw	55	;'7'
  1057  083D  3400               	retlw	0
  1058                           
  1059                           ; #config settings
  1060  0000                     
  1061                           	psect	cinit
  1062  07F6                     start_initialization:	
  1063  07F6                     __initialization:	
  1064                           
  1065                           ; Clear objects allocated to BANK1
  1066  07F6  30A0               	movlw	low __pbssBANK1
  1067  07F7  0084               	movwf	4
  1068  07F8  3000               	movlw	high __pbssBANK1
  1069  07F9  0085               	movwf	5
  1070  07FA  3011               	movlw	17
  1071  07FB  318D  25FD         	fcall	clear_ram0
  1072  07FD                     end_of_initialization:	
  1073                           ;End of C runtime variable initialization code
  1074                           
  1075  07FD                     __end_of__initialization:	
  1076  07FD  0020               	movlb	0
  1077  07FE  3184  2CC1         	ljmp	_main	;jump to C main() function
  1078                           
  1079                           	psect	bssBANK1
  1080  00A0                     __pbssBANK1:	
  1081  00A0                     ftoa@buf:	
  1082  00A0                     	ds	17
  1083                           
  1084                           	psect	clrtext
  1085  0DFD                     clear_ram0:	
  1086                           ;	Called with FSR0 containing the base address, and
  1087                           ;	WREG with the size to clear
  1088                           
  1089  0DFD  0064               	clrwdt	;clear the watchdog before getting into this loop
  1090  0DFE                     clrloop0:	
  1091  0DFE  0180               	clrf	0	;clear RAM location pointed to by FSR
  1092  0DFF  3101               	addfsr 0,1
  1093  0E00  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1094  0E01  2DFE               	goto	clrloop0	;have we reached the end yet?
  1095  0E02  3400               	retlw	0	;all done for this memory range, return
  1096                           
  1097                           	psect	cstackCOMMON
  1098  0070                     __pcstackCOMMON:	
  1099  0070                     ?_isdigit:	
  1100  0070                     ?___ftge:	
  1101                           ; 1 bit 
  1102                           
  1103  0070                     ?_Lcd_Init:	
  1104                           ; 1 bit 
  1105                           
  1106  0070                     ?_Lcd_Clear:	
  1107                           ; 1 bytes @ 0x0
  1108                           
  1109  0070                     ?_Lcd_Shift_Left:	
  1110                           ; 1 bytes @ 0x0
  1111                           
  1112  0070                     ?_Lcd_Shift_Right:	
  1113                           ; 1 bytes @ 0x0
  1114                           
  1115  0070                     ??_isdigit:	
  1116                           ; 1 bytes @ 0x0
  1117                           
  1118  0070                     ?_internal_16:	
  1119                           ; 1 bytes @ 0x0
  1120                           
  1121  0070                     ??_internal_16:	
  1122                           ; 1 bytes @ 0x0
  1123                           
  1124  0070                     ?_initMain:	
  1125                           ; 1 bytes @ 0x0
  1126                           
  1127  0070                     ??_initMain:	
  1128                           ; 1 bytes @ 0x0
  1129                           
  1130  0070                     ?_main:	
  1131                           ; 1 bytes @ 0x0
  1132                           
  1133  0070                     ?_Lcd_Port:	
  1134                           ; 1 bytes @ 0x0
  1135                           
  1136  0070                     ??_Lcd_Port:	
  1137                           ; 1 bytes @ 0x0
  1138                           
  1139  0070                     ?_Lcd_Cmd:	
  1140                           ; 1 bytes @ 0x0
  1141                           
  1142  0070                     ?_Lcd_Write_Char:	
  1143                           ; 1 bytes @ 0x0
  1144                           
  1145  0070                     ?___wmul:	
  1146                           ; 1 bytes @ 0x0
  1147                           
  1148  0070                     ?___lwdiv:	
  1149                           ; 2 bytes @ 0x0
  1150                           
  1151  0070                     ?___lwmod:	
  1152                           ; 2 bytes @ 0x0
  1153                           
  1154  0070                     ?___ftpack:	
  1155                           ; 2 bytes @ 0x0
  1156                           
  1157  0070                     ?___ftneg:	
  1158                           ; 3 bytes @ 0x0
  1159                           
  1160  0070                     ?___lldiv:	
  1161                           ; 3 bytes @ 0x0
  1162                           
  1163  0070                     Lcd_Port@a:	
  1164                           ; 4 bytes @ 0x0
  1165                           
  1166  0070                     _isdigit$312:	
  1167                           ; 1 bytes @ 0x0
  1168                           
  1169  0070                     ___wmul@multiplier:	
  1170                           ; 1 bytes @ 0x0
  1171                           
  1172  0070                     ___lwdiv@divisor:	
  1173                           ; 2 bytes @ 0x0
  1174                           
  1175  0070                     ___lwmod@divisor:	
  1176                           ; 2 bytes @ 0x0
  1177                           
  1178  0070                     ___ftpack@arg:	
  1179                           ; 2 bytes @ 0x0
  1180                           
  1181  0070                     ___ftge@ff1:	
  1182                           ; 3 bytes @ 0x0
  1183                           
  1184  0070                     ___ftneg@f1:	
  1185                           ; 3 bytes @ 0x0
  1186                           
  1187  0070                     ___lldiv@divisor:	
  1188                           ; 3 bytes @ 0x0
  1189                           
  1190                           
  1191                           ; 4 bytes @ 0x0
  1192  0070                     	ds	1
  1193  0071                     ??_Lcd_Cmd:	
  1194  0071                     ??_Lcd_Write_Char:	
  1195                           ; 1 bytes @ 0x1
  1196                           
  1197  0071                     isdigit@c:	
  1198                           ; 1 bytes @ 0x1
  1199                           
  1200                           
  1201                           ; 1 bytes @ 0x1
  1202  0071                     	ds	1
  1203  0072                     Lcd_Write_Char@temp:	
  1204  0072                     ___wmul@multiplicand:	
  1205                           ; 1 bytes @ 0x2
  1206                           
  1207  0072                     ___lwdiv@dividend:	
  1208                           ; 2 bytes @ 0x2
  1209                           
  1210  0072                     ___lwmod@dividend:	
  1211                           ; 2 bytes @ 0x2
  1212                           
  1213                           
  1214                           ; 2 bytes @ 0x2
  1215  0072                     	ds	1
  1216  0073                     ??___ftneg:	
  1217  0073                     Lcd_Cmd@a:	
  1218                           ; 1 bytes @ 0x3
  1219                           
  1220  0073                     Lcd_Write_Char@y:	
  1221                           ; 1 bytes @ 0x3
  1222                           
  1223  0073                     ___ftpack@exp:	
  1224                           ; 1 bytes @ 0x3
  1225                           
  1226  0073                     ___ftge@ff2:	
  1227                           ; 1 bytes @ 0x3
  1228                           
  1229                           
  1230                           ; 3 bytes @ 0x3
  1231  0073                     	ds	1
  1232  0074                     ??_Lcd_Init:	
  1233  0074                     ??_Lcd_Clear:	
  1234                           ; 1 bytes @ 0x4
  1235                           
  1236  0074                     ?_Lcd_Set_Cursor:	
  1237                           ; 1 bytes @ 0x4
  1238                           
  1239  0074                     ??_Lcd_Shift_Left:	
  1240                           ; 1 bytes @ 0x4
  1241                           
  1242  0074                     ??_Lcd_Shift_Right:	
  1243                           ; 1 bytes @ 0x4
  1244                           
  1245  0074                     ??___wmul:	
  1246                           ; 1 bytes @ 0x4
  1247                           
  1248  0074                     ??___lwdiv:	
  1249                           ; 1 bytes @ 0x4
  1250                           
  1251  0074                     ??___lwmod:	
  1252                           ; 1 bytes @ 0x4
  1253                           
  1254  0074                     Lcd_Set_Cursor@b:	
  1255                           ; 1 bytes @ 0x4
  1256                           
  1257  0074                     Lcd_Write_Char@a:	
  1258                           ; 1 bytes @ 0x4
  1259                           
  1260  0074                     ___ftpack@sign:	
  1261                           ; 1 bytes @ 0x4
  1262                           
  1263  0074                     ___wmul@product:	
  1264                           ; 1 bytes @ 0x4
  1265                           
  1266  0074                     ___lldiv@dividend:	
  1267                           ; 2 bytes @ 0x4
  1268                           
  1269                           
  1270                           ; 4 bytes @ 0x4
  1271  0074                     	ds	1
  1272  0075                     ??_Lcd_Set_Cursor:	
  1273  0075                     ??___ftpack:	
  1274                           ; 1 bytes @ 0x5
  1275                           
  1276  0075                     ___lwmod@counter:	
  1277                           ; 1 bytes @ 0x5
  1278                           
  1279  0075                     ___lwdiv@quotient:	
  1280                           ; 1 bytes @ 0x5
  1281                           
  1282                           
  1283                           ; 2 bytes @ 0x5
  1284  0075                     	ds	1
  1285  0076                     ??___ftge:	
  1286                           
  1287                           ; 1 bytes @ 0x6
  1288  0076                     	ds	1
  1289  0077                     Lcd_Set_Cursor@a:	
  1290  0077                     ___lwdiv@counter:	
  1291                           ; 1 bytes @ 0x7
  1292                           
  1293                           
  1294                           ; 1 bytes @ 0x7
  1295  0077                     	ds	1
  1296  0078                     ?_utoa:	
  1297  0078                     ??___lldiv:	
  1298                           ; 1 bytes @ 0x8
  1299                           
  1300  0078                     ?___ftadd:	
  1301                           ; 1 bytes @ 0x8
  1302                           
  1303  0078                     ?___ftmul:	
  1304                           ; 3 bytes @ 0x8
  1305                           
  1306  0078                     ?___lltoft:	
  1307                           ; 3 bytes @ 0x8
  1308                           
  1309  0078                     Lcd_Set_Cursor@z:	
  1310                           ; 3 bytes @ 0x8
  1311                           
  1312  0078                     utoa@val:	
  1313                           ; 1 bytes @ 0x8
  1314                           
  1315  0078                     ___ftadd@f1:	
  1316                           ; 2 bytes @ 0x8
  1317                           
  1318  0078                     ___ftmul@f1:	
  1319                           ; 3 bytes @ 0x8
  1320                           
  1321  0078                     ___lltoft@c:	
  1322                           ; 3 bytes @ 0x8
  1323                           
  1324                           
  1325                           ; 4 bytes @ 0x8
  1326  0078                     	ds	1
  1327  0079                     Lcd_Set_Cursor@y:	
  1328  0079                     ___lldiv@quotient:	
  1329                           ; 1 bytes @ 0x9
  1330                           
  1331                           
  1332                           ; 4 bytes @ 0x9
  1333  0079                     	ds	1
  1334  007A                     Lcd_Set_Cursor@temp:	
  1335  007A                     utoa@base:	
  1336                           ; 1 bytes @ 0xA
  1337                           
  1338                           
  1339                           ; 2 bytes @ 0xA
  1340  007A                     	ds	1
  1341  007B                     ___ftadd@f2:	
  1342  007B                     ___ftmul@f2:	
  1343                           ; 3 bytes @ 0xB
  1344                           
  1345                           
  1346                           ; 3 bytes @ 0xB
  1347  007B                     	ds	1
  1348  007C                     ??_utoa:	
  1349  007C                     ??___lltoft:	
  1350                           ; 1 bytes @ 0xC
  1351                           
  1352                           
  1353                           ; 1 bytes @ 0xC
  1354  007C                     	ds	1
  1355  007D                     ??_itoa:	
  1356  007D                     ___lldiv@counter:	
  1357                           ; 1 bytes @ 0xD
  1358                           
  1359  007D                     ___lltoft@exp:	
  1360                           ; 1 bytes @ 0xD
  1361                           
  1362                           
  1363                           ; 1 bytes @ 0xD
  1364  007D                     	ds	1
  1365  007E                     ??_Lcd_Write_Integer:	
  1366  007E                     ??___ftsub:	
  1367                           ; 1 bytes @ 0xE
  1368                           
  1369                           
  1370                           	psect	cstackBANK0
  1371  0020                     __pcstackBANK0:	
  1372                           ; 1 bytes @ 0xE
  1373                           
  1374  0020                     ??___ftadd:	
  1375  0020                     ??___ftmul:	
  1376                           ; 1 bytes @ 0x0
  1377                           
  1378  0020                     ?___llmod:	
  1379                           ; 1 bytes @ 0x0
  1380                           
  1381  0020                     utoa@v:	
  1382                           ; 4 bytes @ 0x0
  1383                           
  1384  0020                     ___llmod@divisor:	
  1385                           ; 2 bytes @ 0x0
  1386                           
  1387                           
  1388                           ; 4 bytes @ 0x0
  1389  0020                     	ds	2
  1390  0022                     utoa@c:	
  1391                           
  1392                           ; 1 bytes @ 0x2
  1393  0022                     	ds	1
  1394  0023                     utoa@buf:	
  1395                           
  1396                           ; 1 bytes @ 0x3
  1397  0023                     	ds	1
  1398  0024                     ?_itoa:	
  1399  0024                     ___ftadd@sign:	
  1400                           ; 1 bytes @ 0x4
  1401                           
  1402  0024                     ___ftmul@exp:	
  1403                           ; 1 bytes @ 0x4
  1404                           
  1405  0024                     itoa@val:	
  1406                           ; 1 bytes @ 0x4
  1407                           
  1408  0024                     ___llmod@dividend:	
  1409                           ; 2 bytes @ 0x4
  1410                           
  1411                           
  1412                           ; 4 bytes @ 0x4
  1413  0024                     	ds	1
  1414  0025                     ___ftadd@exp2:	
  1415  0025                     ___ftmul@f3_as_product:	
  1416                           ; 1 bytes @ 0x5
  1417                           
  1418                           
  1419                           ; 3 bytes @ 0x5
  1420  0025                     	ds	1
  1421  0026                     ___ftadd@exp1:	
  1422  0026                     itoa@base:	
  1423                           ; 1 bytes @ 0x6
  1424                           
  1425                           
  1426                           ; 2 bytes @ 0x6
  1427  0026                     	ds	1
  1428  0027                     ?___ftsub:	
  1429  0027                     ___ftsub@f2:	
  1430                           ; 3 bytes @ 0x7
  1431                           
  1432                           
  1433                           ; 3 bytes @ 0x7
  1434  0027                     	ds	1
  1435  0028                     ??___llmod:	
  1436  0028                     ___ftmul@cntr:	
  1437                           ; 1 bytes @ 0x8
  1438                           
  1439  0028                     itoa@cp:	
  1440                           ; 1 bytes @ 0x8
  1441                           
  1442                           
  1443                           ; 1 bytes @ 0x8
  1444  0028                     	ds	1
  1445  0029                     ___ftmul@sign:	
  1446  0029                     itoa@buf:	
  1447                           ; 1 bytes @ 0x9
  1448                           
  1449  0029                     ___llmod@counter:	
  1450                           ; 1 bytes @ 0x9
  1451                           
  1452                           
  1453                           ; 1 bytes @ 0x9
  1454  0029                     	ds	1
  1455  002A                     ?_Lcd_Write_String:	
  1456  002A                     ?_sprintf:	
  1457                           ; 1 bytes @ 0xA
  1458                           
  1459  002A                     ?___fttol:	
  1460                           ; 2 bytes @ 0xA
  1461                           
  1462  002A                     Lcd_Write_String@a:	
  1463                           ; 4 bytes @ 0xA
  1464                           
  1465  002A                     sprintf@f:	
  1466                           ; 2 bytes @ 0xA
  1467                           
  1468  002A                     ___ftsub@f1:	
  1469                           ; 2 bytes @ 0xA
  1470                           
  1471  002A                     ___fttol@f1:	
  1472                           ; 3 bytes @ 0xA
  1473                           
  1474                           
  1475                           ; 3 bytes @ 0xA
  1476  002A                     	ds	2
  1477  002C                     ??_Lcd_Write_String:	
  1478                           
  1479                           ; 1 bytes @ 0xC
  1480  002C                     	ds	1
  1481  002D                     Lcd_Write_String@i:	
  1482                           
  1483                           ; 2 bytes @ 0xD
  1484  002D                     	ds	1
  1485  002E                     ??___fttol:	
  1486                           
  1487                           ; 1 bytes @ 0xE
  1488  002E                     	ds	1
  1489  002F                     ?_Lcd_Write_Integer:	
  1490  002F                     Lcd_Write_Integer@v:	
  1491                           ; 1 bytes @ 0xF
  1492                           
  1493                           
  1494                           ; 2 bytes @ 0xF
  1495  002F                     	ds	2
  1496  0031                     Lcd_Write_Integer@buf:	
  1497                           
  1498                           ; 8 bytes @ 0x11
  1499  0031                     	ds	1
  1500  0032                     ___fttol@sign1:	
  1501                           
  1502                           ; 1 bytes @ 0x12
  1503  0032                     	ds	1
  1504  0033                     ___fttol@lval:	
  1505                           
  1506                           ; 4 bytes @ 0x13
  1507  0033                     	ds	1
  1508  0034                     ??_sprintf:	
  1509                           
  1510                           ; 1 bytes @ 0x14
  1511  0034                     	ds	3
  1512  0037                     ___fttol@exp1:	
  1513                           
  1514                           ; 1 bytes @ 0x17
  1515  0037                     	ds	3
  1516  003A                     sprintf@flag:	
  1517                           
  1518                           ; 1 bytes @ 0x1A
  1519  003A                     	ds	1
  1520  003B                     sprintf@ap:	
  1521                           
  1522                           ; 1 bytes @ 0x1B
  1523  003B                     	ds	1
  1524  003C                     sprintf@val:	
  1525                           
  1526                           ; 4 bytes @ 0x1C
  1527  003C                     	ds	4
  1528  0040                     sprintf@sp:	
  1529                           
  1530                           ; 1 bytes @ 0x20
  1531  0040                     	ds	1
  1532  0041                     sprintf@width:	
  1533                           
  1534                           ; 2 bytes @ 0x21
  1535  0041                     	ds	2
  1536  0043                     sprintf@prec:	
  1537                           
  1538                           ; 2 bytes @ 0x23
  1539  0043                     	ds	2
  1540  0045                     sprintf@c:	
  1541                           
  1542                           ; 1 bytes @ 0x25
  1543  0045                     	ds	1
  1544  0046                     ?_ftoa:	
  1545  0046                     ftoa@f:	
  1546                           ; 1 bytes @ 0x26
  1547                           
  1548                           
  1549                           ; 3 bytes @ 0x26
  1550  0046                     	ds	3
  1551  0049                     ftoa@status:	
  1552                           
  1553                           ; 1 bytes @ 0x29
  1554  0049                     	ds	1
  1555  004A                     ??_ftoa:	
  1556                           
  1557                           ; 1 bytes @ 0x2A
  1558  004A                     	ds	1
  1559  004B                     ftoa@rem:	
  1560                           
  1561                           ; 4 bytes @ 0x2B
  1562  004B                     	ds	4
  1563  004F                     ftoa@l:	
  1564                           
  1565                           ; 4 bytes @ 0x2F
  1566  004F                     	ds	4
  1567  0053                     ftoa@cp:	
  1568                           
  1569                           ; 1 bytes @ 0x33
  1570  0053                     	ds	1
  1571  0054                     ?_Lcd_Write_Float:	
  1572  0054                     Lcd_Write_Float@f:	
  1573                           ; 1 bytes @ 0x34
  1574                           
  1575                           
  1576                           ; 3 bytes @ 0x34
  1577  0054                     	ds	3
  1578  0057                     ??_Lcd_Write_Float:	
  1579                           
  1580                           ; 1 bytes @ 0x37
  1581  0057                     	ds	2
  1582  0059                     Lcd_Write_Float@status:	
  1583                           
  1584                           ; 2 bytes @ 0x39
  1585  0059                     	ds	2
  1586  005B                     Lcd_Write_Float@buf11:	
  1587                           
  1588                           ; 1 bytes @ 0x3B
  1589  005B                     	ds	1
  1590  005C                     ??_main:	
  1591                           
  1592                           ; 1 bytes @ 0x3C
  1593  005C                     	ds	3
  1594  005F                     main@c:	
  1595                           
  1596                           ; 2 bytes @ 0x3F
  1597  005F                     	ds	2
  1598  0061                     main@b:	
  1599                           
  1600                           ; 3 bytes @ 0x41
  1601  0061                     	ds	3
  1602  0064                     main@a:	
  1603                           
  1604                           ; 2 bytes @ 0x44
  1605  0064                     	ds	2
  1606                           
  1607                           	psect	maintext
  1608  04C1                     __pmaintext:	
  1609 ;;
  1610 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1611 ;;
  1612 ;; *************** function _main *****************
  1613 ;; Defined at:
  1614 ;;		line 66 in file "Main.c"
  1615 ;; Parameters:    Size  Location     Type
  1616 ;;		None
  1617 ;; Auto vars:     Size  Location     Type
  1618 ;;  b               3   65[BANK0 ] float 
  1619 ;;  a               2   68[BANK0 ] int 
  1620 ;;  c               2   63[BANK0 ] int 
  1621 ;; Return value:  Size  Location     Type
  1622 ;;                  1    wreg      void 
  1623 ;; Registers used:
  1624 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1625 ;; Tracked objects:
  1626 ;;		On entry : B1F/0
  1627 ;;		On exit  : 0/0
  1628 ;;		Unchanged: 0/0
  1629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1631 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1632 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1633 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1634 ;;Total ram usage:       10 bytes
  1635 ;; Hardware stack levels required when called:    5
  1636 ;; This function calls:
  1637 ;;		_Lcd_Clear
  1638 ;;		_Lcd_Init
  1639 ;;		_Lcd_Set_Cursor
  1640 ;;		_Lcd_Shift_Left
  1641 ;;		_Lcd_Shift_Right
  1642 ;;		_Lcd_Write_Float
  1643 ;;		_Lcd_Write_Integer
  1644 ;;		_Lcd_Write_String
  1645 ;;		___ftadd
  1646 ;;		___ftge
  1647 ;;		_initMain
  1648 ;; This function is called by:
  1649 ;;		Startup code after reset
  1650 ;; This function uses a non-reentrant model
  1651 ;;
  1652                           
  1653                           
  1654                           ;psect for function _main
  1655  04C1                     _main:	
  1656                           
  1657                           ;Main.c: 67: initMain();
  1658                           
  1659                           ;incstack = 0
  1660                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1661  04C1  3180  2005  3184   	fcall	_initMain
  1662                           
  1663                           ;Main.c: 68: Lcd_Init();
  1664  04C4  3180  2091  3184   	fcall	_Lcd_Init
  1665                           
  1666                           ;Main.c: 69: _delay((unsigned long)((1000)*(16000000/4000.0)));
  1667  04C7  3015               	movlw	21
  1668  04C8  0020               	movlb	0	; select bank0
  1669  04C9  00DE               	movwf	??_main+2
  1670  04CA  304B               	movlw	75
  1671  04CB  00DD               	movwf	??_main+1
  1672  04CC  30D1               	movlw	209
  1673  04CD  00DC               	movwf	??_main
  1674  04CE                     u2757:	
  1675  04CE  0BDC               	decfsz	??_main,f
  1676  04CF  2CCE               	goto	u2757
  1677  04D0  0BDD               	decfsz	??_main+1,f
  1678  04D1  2CCE               	goto	u2757
  1679  04D2  0BDE               	decfsz	??_main+2,f
  1680  04D3  2CCE               	goto	u2757
  1681  04D4  0000               	nop
  1682  04D5                     l1982:	
  1683                           ;Main.c: 71: int a;
  1684                           ;Main.c: 72: int c;
  1685                           ;Main.c: 73: float b;
  1686                           ;Main.c: 75: while(1){
  1687                           
  1688                           
  1689                           ;Main.c: 76: Lcd_Clear();
  1690  04D5  318E  2603  3184   	fcall	_Lcd_Clear
  1691                           
  1692                           ;Main.c: 77: Lcd_Set_Cursor(1,1);
  1693  04D8  01F4               	clrf	Lcd_Set_Cursor@b
  1694  04D9  0AF4               	incf	Lcd_Set_Cursor@b,f
  1695  04DA  3001               	movlw	1
  1696  04DB  3180  200E  3184   	fcall	_Lcd_Set_Cursor
  1697                           
  1698                           ;Main.c: 78: _delay((unsigned long)((100)*(16000000/4000.0)));
  1699  04DE  3003               	movlw	3
  1700  04DF  0020               	movlb	0	; select bank0
  1701  04E0  00DE               	movwf	??_main+2
  1702  04E1  3008               	movlw	8
  1703  04E2  00DD               	movwf	??_main+1
  1704  04E3  3078               	movlw	120
  1705  04E4  00DC               	movwf	??_main
  1706  04E5                     u2767:	
  1707  04E5  0BDC               	decfsz	??_main,f
  1708  04E6  2CE5               	goto	u2767
  1709  04E7  0BDD               	decfsz	??_main+1,f
  1710  04E8  2CE5               	goto	u2767
  1711  04E9  0BDE               	decfsz	??_main+2,f
  1712  04EA  2CE5               	goto	u2767
  1713                           
  1714                           ;Main.c: 81: Lcd_Write_String("PIC16F1717");
  1715  04EB  3033               	movlw	low (STR_1| (0+32768))
  1716  04EC  0020               	movlb	0	; select bank0
  1717  04ED  00AA               	movwf	Lcd_Write_String@a
  1718  04EE  3088               	movlw	high (STR_1| (0+32768))
  1719  04EF  00AB               	movwf	Lcd_Write_String@a+1
  1720  04F0  318E  26AF  3184   	fcall	_Lcd_Write_String
  1721                           
  1722                           ;Main.c: 82: _delay((unsigned long)((10)*(16000000/4000.0)));
  1723  04F3  3034               	movlw	52
  1724  04F4  0020               	movlb	0	; select bank0
  1725  04F5  00DD               	movwf	??_main+1
  1726  04F6  30F1               	movlw	241
  1727  04F7  00DC               	movwf	??_main
  1728  04F8                     u2777:	
  1729  04F8  0BDC               	decfsz	??_main,f
  1730  04F9  2CF8               	goto	u2777
  1731  04FA  0BDD               	decfsz	??_main+1,f
  1732  04FB  2CF8               	goto	u2777
  1733  04FC  3200               	nop2
  1734                           
  1735                           ;Main.c: 85: for(a=0;a<15;a++)
  1736  04FD  0020               	movlb	0	; select bank0
  1737  04FE  01E4               	clrf	main@a
  1738  04FF  01E5               	clrf	main@a+1
  1739  0500  0865               	movf	main@a+1,w
  1740  0501  3A80               	xorlw	128
  1741  0502  00DC               	movwf	??_main
  1742  0503  3080               	movlw	128
  1743  0504  025C               	subwf	??_main,w
  1744  0505  1D03               	skipz
  1745  0506  2D09               	goto	u2675
  1746  0507  300F               	movlw	15
  1747  0508  0264               	subwf	main@a,w
  1748  0509                     u2675:	
  1749  0509  1803               	btfsc	3,0
  1750  050A  2D2C               	goto	l2004
  1751  050B                     l1996:	
  1752                           
  1753                           ;Main.c: 86: {
  1754                           ;Main.c: 87: _delay((unsigned long)((500)*(16000000/4000.0)));
  1755  050B  300B               	movlw	11
  1756  050C  0020               	movlb	0	; select bank0
  1757  050D  00DE               	movwf	??_main+2
  1758  050E  3026               	movlw	38
  1759  050F  00DD               	movwf	??_main+1
  1760  0510  3066               	movlw	102
  1761  0511  00DC               	movwf	??_main
  1762  0512                     u2787:	
  1763  0512  0BDC               	decfsz	??_main,f
  1764  0513  2D12               	goto	u2787
  1765  0514  0BDD               	decfsz	??_main+1,f
  1766  0515  2D12               	goto	u2787
  1767  0516  0BDE               	decfsz	??_main+2,f
  1768  0517  2D12               	goto	u2787
  1769  0518  3200               	nop2
  1770                           
  1771                           ;Main.c: 88: Lcd_Shift_Left();
  1772  0519  318E  260B  3184   	fcall	_Lcd_Shift_Left
  1773  051C  3001               	movlw	1
  1774  051D  0020               	movlb	0	; select bank0
  1775  051E  07E4               	addwf	main@a,f
  1776  051F  3000               	movlw	0
  1777  0520  3DE5               	addwfc	main@a+1,f
  1778  0521  0865               	movf	main@a+1,w
  1779  0522  3A80               	xorlw	128
  1780  0523  00DC               	movwf	??_main
  1781  0524  3080               	movlw	128
  1782  0525  025C               	subwf	??_main,w
  1783  0526  1D03               	skipz
  1784  0527  2D2A               	goto	u2685
  1785  0528  300F               	movlw	15
  1786  0529  0264               	subwf	main@a,w
  1787  052A                     u2685:	
  1788  052A  1C03               	skipc
  1789  052B  2D0B               	goto	l1996
  1790  052C                     l2004:	
  1791                           
  1792                           ;Main.c: 89: }
  1793                           ;Main.c: 92: for(a=0;a<15;a++)
  1794  052C  0020               	movlb	0	; select bank0
  1795  052D  01E4               	clrf	main@a
  1796  052E  01E5               	clrf	main@a+1
  1797  052F  0865               	movf	main@a+1,w
  1798  0530  3A80               	xorlw	128
  1799  0531  00DC               	movwf	??_main
  1800  0532  3080               	movlw	128
  1801  0533  025C               	subwf	??_main,w
  1802  0534  1D03               	skipz
  1803  0535  2D38               	goto	u2695
  1804  0536  300F               	movlw	15
  1805  0537  0264               	subwf	main@a,w
  1806  0538                     u2695:	
  1807  0538  1803               	btfsc	3,0
  1808  0539  2D5B               	goto	l2018
  1809  053A                     l2010:	
  1810                           
  1811                           ;Main.c: 93: {
  1812                           ;Main.c: 94: _delay((unsigned long)((500)*(16000000/4000.0)));
  1813  053A  300B               	movlw	11
  1814  053B  0020               	movlb	0	; select bank0
  1815  053C  00DE               	movwf	??_main+2
  1816  053D  3026               	movlw	38
  1817  053E  00DD               	movwf	??_main+1
  1818  053F  3066               	movlw	102
  1819  0540  00DC               	movwf	??_main
  1820  0541                     u2797:	
  1821  0541  0BDC               	decfsz	??_main,f
  1822  0542  2D41               	goto	u2797
  1823  0543  0BDD               	decfsz	??_main+1,f
  1824  0544  2D41               	goto	u2797
  1825  0545  0BDE               	decfsz	??_main+2,f
  1826  0546  2D41               	goto	u2797
  1827  0547  3200               	nop2
  1828                           
  1829                           ;Main.c: 95: Lcd_Shift_Right();
  1830  0548  318E  2613  3184   	fcall	_Lcd_Shift_Right
  1831  054B  3001               	movlw	1
  1832  054C  0020               	movlb	0	; select bank0
  1833  054D  07E4               	addwf	main@a,f
  1834  054E  3000               	movlw	0
  1835  054F  3DE5               	addwfc	main@a+1,f
  1836  0550  0865               	movf	main@a+1,w
  1837  0551  3A80               	xorlw	128
  1838  0552  00DC               	movwf	??_main
  1839  0553  3080               	movlw	128
  1840  0554  025C               	subwf	??_main,w
  1841  0555  1D03               	skipz
  1842  0556  2D59               	goto	u2705
  1843  0557  300F               	movlw	15
  1844  0558  0264               	subwf	main@a,w
  1845  0559                     u2705:	
  1846  0559  1C03               	skipc
  1847  055A  2D3A               	goto	l2010
  1848  055B                     l2018:	
  1849                           
  1850                           ;Main.c: 96: }
  1851                           ;Main.c: 98: Lcd_Clear();
  1852  055B  318E  2603  3184   	fcall	_Lcd_Clear
  1853                           
  1854                           ;Main.c: 99: Lcd_Set_Cursor(1,1);
  1855  055E  01F4               	clrf	Lcd_Set_Cursor@b
  1856  055F  0AF4               	incf	Lcd_Set_Cursor@b,f
  1857  0560  3001               	movlw	1
  1858  0561  3180  200E  3184   	fcall	_Lcd_Set_Cursor
  1859                           
  1860                           ;Main.c: 102: for (c = 0; c < 100; c++){
  1861  0564  0020               	movlb	0	; select bank0
  1862  0565  01DF               	clrf	main@c
  1863  0566  01E0               	clrf	main@c+1
  1864  0567  0860               	movf	main@c+1,w
  1865  0568  3A80               	xorlw	128
  1866  0569  00DC               	movwf	??_main
  1867  056A  3080               	movlw	128
  1868  056B  025C               	subwf	??_main,w
  1869  056C  1D03               	skipz
  1870  056D  2D70               	goto	u2715
  1871  056E  3064               	movlw	100
  1872  056F  025F               	subwf	main@c,w
  1873  0570                     u2715:	
  1874  0570  1803               	btfsc	3,0
  1875  0571  2DA4               	goto	l2038
  1876  0572                     l2026:	
  1877                           
  1878                           ;Main.c: 103: Lcd_Write_Integer(c);
  1879  0572  0020               	movlb	0	; select bank0
  1880  0573  0860               	movf	main@c+1,w
  1881  0574  00B0               	movwf	Lcd_Write_Integer@v+1
  1882  0575  085F               	movf	main@c,w
  1883  0576  00AF               	movwf	Lcd_Write_Integer@v
  1884  0577  318E  263A  3184   	fcall	_Lcd_Write_Integer
  1885                           
  1886                           ;Main.c: 104: _delay((unsigned long)((300)*(16000000/4000.0)));
  1887  057A  3007               	movlw	7
  1888  057B  0020               	movlb	0	; select bank0
  1889  057C  00DE               	movwf	??_main+2
  1890  057D  3017               	movlw	23
  1891  057E  00DD               	movwf	??_main+1
  1892  057F  306F               	movlw	111
  1893  0580  00DC               	movwf	??_main
  1894  0581                     u2807:	
  1895  0581  0BDC               	decfsz	??_main,f
  1896  0582  2D81               	goto	u2807
  1897  0583  0BDD               	decfsz	??_main+1,f
  1898  0584  2D81               	goto	u2807
  1899  0585  0BDE               	decfsz	??_main+2,f
  1900  0586  2D81               	goto	u2807
  1901  0587  0000               	nop
  1902                           
  1903                           ;Main.c: 105: Lcd_Clear();
  1904  0588  318E  2603  3184   	fcall	_Lcd_Clear
  1905                           
  1906                           ;Main.c: 106: _delay((unsigned long)((15)*(16000000/4000.0)));
  1907  058B  304E               	movlw	78
  1908  058C  0020               	movlb	0	; select bank0
  1909  058D  00DD               	movwf	??_main+1
  1910  058E  30EB               	movlw	235
  1911  058F  00DC               	movwf	??_main
  1912  0590                     u2817:	
  1913  0590  0BDC               	decfsz	??_main,f
  1914  0591  2D90               	goto	u2817
  1915  0592  0BDD               	decfsz	??_main+1,f
  1916  0593  2D90               	goto	u2817
  1917  0594  3001               	movlw	1
  1918  0595  0020               	movlb	0	; select bank0
  1919  0596  07DF               	addwf	main@c,f
  1920  0597  3000               	movlw	0
  1921  0598  3DE0               	addwfc	main@c+1,f
  1922  0599  0860               	movf	main@c+1,w
  1923  059A  3A80               	xorlw	128
  1924  059B  00DC               	movwf	??_main
  1925  059C  3080               	movlw	128
  1926  059D  025C               	subwf	??_main,w
  1927  059E  1D03               	skipz
  1928  059F  2DA2               	goto	u2725
  1929  05A0  3064               	movlw	100
  1930  05A1  025F               	subwf	main@c,w
  1931  05A2                     u2725:	
  1932  05A2  1C03               	skipc
  1933  05A3  2D72               	goto	l2026
  1934  05A4                     l2038:	
  1935                           
  1936                           ;Main.c: 108: }
  1937                           ;Main.c: 111: for (b = 0.0; b <= 5; b+= 0.5)
  1938  05A4  3000               	movlw	0
  1939  05A5  0020               	movlb	0	; select bank0
  1940  05A6  00E1               	movwf	main@b
  1941  05A7  3000               	movlw	0
  1942  05A8  00E2               	movwf	main@b+1
  1943  05A9  3000               	movlw	0
  1944  05AA  00E3               	movwf	main@b+2
  1945  05AB  3000               	movlw	0
  1946  05AC  00F0               	movwf	___ftge@ff1
  1947  05AD  30A0               	movlw	160
  1948  05AE  00F1               	movwf	___ftge@ff1+1
  1949  05AF  3040               	movlw	64
  1950  05B0  00F2               	movwf	___ftge@ff1+2
  1951  05B1  0861               	movf	main@b,w
  1952  05B2  00F3               	movwf	___ftge@ff2
  1953  05B3  0862               	movf	main@b+1,w
  1954  05B4  00F4               	movwf	___ftge@ff2+1
  1955  05B5  0863               	movf	main@b+2,w
  1956  05B6  00F5               	movwf	___ftge@ff2+2
  1957  05B7  318F  27C5  3184   	fcall	___ftge
  1958  05BA  1C03               	btfss	3,0
  1959  05BB  2E08               	goto	l2056
  1960  05BC                     l2044:	
  1961                           
  1962                           ;Main.c: 112: {
  1963                           ;Main.c: 113: Lcd_Write_Float(b);
  1964  05BC  0020               	movlb	0	; select bank0
  1965  05BD  0861               	movf	main@b,w
  1966  05BE  00D4               	movwf	Lcd_Write_Float@f
  1967  05BF  0862               	movf	main@b+1,w
  1968  05C0  00D5               	movwf	Lcd_Write_Float@f+1
  1969  05C1  0863               	movf	main@b+2,w
  1970  05C2  00D6               	movwf	Lcd_Write_Float@f+2
  1971  05C3  318E  267B  3184   	fcall	_Lcd_Write_Float
  1972                           
  1973                           ;Main.c: 114: _delay((unsigned long)((300)*(16000000/4000.0)));
  1974  05C6  3007               	movlw	7
  1975  05C7  0020               	movlb	0	; select bank0
  1976  05C8  00DE               	movwf	??_main+2
  1977  05C9  3017               	movlw	23
  1978  05CA  00DD               	movwf	??_main+1
  1979  05CB  306F               	movlw	111
  1980  05CC  00DC               	movwf	??_main
  1981  05CD                     u2827:	
  1982  05CD  0BDC               	decfsz	??_main,f
  1983  05CE  2DCD               	goto	u2827
  1984  05CF  0BDD               	decfsz	??_main+1,f
  1985  05D0  2DCD               	goto	u2827
  1986  05D1  0BDE               	decfsz	??_main+2,f
  1987  05D2  2DCD               	goto	u2827
  1988  05D3  0000               	nop
  1989                           
  1990                           ;Main.c: 115: Lcd_Clear();
  1991  05D4  318E  2603  3184   	fcall	_Lcd_Clear
  1992                           
  1993                           ;Main.c: 116: _delay((unsigned long)((15)*(16000000/4000.0)));
  1994  05D7  304E               	movlw	78
  1995  05D8  0020               	movlb	0	; select bank0
  1996  05D9  00DD               	movwf	??_main+1
  1997  05DA  30EB               	movlw	235
  1998  05DB  00DC               	movwf	??_main
  1999  05DC                     u2837:	
  2000  05DC  0BDC               	decfsz	??_main,f
  2001  05DD  2DDC               	goto	u2837
  2002  05DE  0BDD               	decfsz	??_main+1,f
  2003  05DF  2DDC               	goto	u2837
  2004  05E0  3000               	movlw	0
  2005  05E1  00F8               	movwf	___ftadd@f1
  2006  05E2  3000               	movlw	0
  2007  05E3  00F9               	movwf	___ftadd@f1+1
  2008  05E4  303F               	movlw	63
  2009  05E5  00FA               	movwf	___ftadd@f1+2
  2010  05E6  0020               	movlb	0	; select bank0
  2011  05E7  0861               	movf	main@b,w
  2012  05E8  00FB               	movwf	___ftadd@f2
  2013  05E9  0862               	movf	main@b+1,w
  2014  05EA  00FC               	movwf	___ftadd@f2+1
  2015  05EB  0863               	movf	main@b+2,w
  2016  05EC  00FD               	movwf	___ftadd@f2+2
  2017  05ED  3183  23CC  3184   	fcall	___ftadd
  2018  05F0  0878               	movf	?___ftadd,w
  2019  05F1  0020               	movlb	0	; select bank0
  2020  05F2  00E1               	movwf	main@b
  2021  05F3  0879               	movf	?___ftadd+1,w
  2022  05F4  00E2               	movwf	main@b+1
  2023  05F5  087A               	movf	?___ftadd+2,w
  2024  05F6  00E3               	movwf	main@b+2
  2025  05F7  3000               	movlw	0
  2026  05F8  00F0               	movwf	___ftge@ff1
  2027  05F9  30A0               	movlw	160
  2028  05FA  00F1               	movwf	___ftge@ff1+1
  2029  05FB  3040               	movlw	64
  2030  05FC  00F2               	movwf	___ftge@ff1+2
  2031  05FD  0861               	movf	main@b,w
  2032  05FE  00F3               	movwf	___ftge@ff2
  2033  05FF  0862               	movf	main@b+1,w
  2034  0600  00F4               	movwf	___ftge@ff2+1
  2035  0601  0863               	movf	main@b+2,w
  2036  0602  00F5               	movwf	___ftge@ff2+2
  2037  0603  318F  27C5  3184   	fcall	___ftge
  2038  0606  1803               	btfsc	3,0
  2039  0607  2DBC               	goto	l2044
  2040  0608                     l2056:	
  2041                           
  2042                           ;Main.c: 117: }
  2043                           ;Main.c: 119: _delay((unsigned long)((1000)*(16000000/4000.0)));
  2044  0608  3015               	movlw	21
  2045  0609  0020               	movlb	0	; select bank0
  2046  060A  00DE               	movwf	??_main+2
  2047  060B  304B               	movlw	75
  2048  060C  00DD               	movwf	??_main+1
  2049  060D  30D1               	movlw	209
  2050  060E  00DC               	movwf	??_main
  2051  060F                     u2847:	
  2052  060F  0BDC               	decfsz	??_main,f
  2053  0610  2E0F               	goto	u2847
  2054  0611  0BDD               	decfsz	??_main+1,f
  2055  0612  2E0F               	goto	u2847
  2056  0613  0BDE               	decfsz	??_main+2,f
  2057  0614  2E0F               	goto	u2847
  2058  0615  0000               	nop
  2059  0616  2CD5               	goto	l1982
  2060  0617                     __end_of_main:	
  2061                           ;Main.c: 120: }
  2062                           ;Main.c: 122: return;
  2063                           
  2064                           
  2065                           	psect	text1
  2066  0005                     __ptext1:	
  2067 ;; *************** function _initMain *****************
  2068 ;; Defined at:
  2069 ;;		line 48 in file "Main.c"
  2070 ;; Parameters:    Size  Location     Type
  2071 ;;		None
  2072 ;; Auto vars:     Size  Location     Type
  2073 ;;		None
  2074 ;; Return value:  Size  Location     Type
  2075 ;;                  1    wreg      void 
  2076 ;; Registers used:
  2077 ;;		status,2, status,0, pclath, cstack
  2078 ;; Tracked objects:
  2079 ;;		On entry : 0/0
  2080 ;;		On exit  : 0/0
  2081 ;;		Unchanged: 0/0
  2082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2087 ;;Total ram usage:        0 bytes
  2088 ;; Hardware stack levels used:    1
  2089 ;; Hardware stack levels required when called:    1
  2090 ;; This function calls:
  2091 ;;		_internal_16
  2092 ;; This function is called by:
  2093 ;;		_main
  2094 ;; This function uses a non-reentrant model
  2095 ;;
  2096                           
  2097                           
  2098                           ;psect for function _initMain
  2099  0005                     _initMain:	
  2100                           
  2101                           ;Main.c: 50: internal_16();
  2102                           
  2103                           ;incstack = 0
  2104                           ; Regs used in _initMain: [status,2+status,0+pclath+cstack]
  2105  0005  318E  2623         	fcall	_internal_16
  2106                           
  2107                           ;Main.c: 52: TRISD = 0x00;
  2108  0007  0021               	movlb	1	; select bank1
  2109  0008  018F               	clrf	15	;volatile
  2110                           
  2111                           ;Main.c: 53: ANSELD = 0x00;
  2112  0009  0023               	movlb	3	; select bank3
  2113  000A  018F               	clrf	15	;volatile
  2114                           
  2115                           ;Main.c: 54: PORTD = 0x00;
  2116  000B  0020               	movlb	0	; select bank0
  2117  000C  018F               	clrf	15	;volatile
  2118  000D  0008               	return
  2119  000E                     __end_of_initMain:	
  2120                           
  2121                           	psect	text2
  2122  0E23                     __ptext2:	
  2123 ;; *************** function _internal_16 *****************
  2124 ;; Defined at:
  2125 ;;		line 56 in file "16F1717_Internal.c"
  2126 ;; Parameters:    Size  Location     Type
  2127 ;;		None
  2128 ;; Auto vars:     Size  Location     Type
  2129 ;;		None
  2130 ;; Return value:  Size  Location     Type
  2131 ;;                  1    wreg      void 
  2132 ;; Registers used:
  2133 ;;		None
  2134 ;; Tracked objects:
  2135 ;;		On entry : 0/0
  2136 ;;		On exit  : 0/0
  2137 ;;		Unchanged: 0/0
  2138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2142 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2143 ;;Total ram usage:        0 bytes
  2144 ;; Hardware stack levels used:    1
  2145 ;; This function calls:
  2146 ;;		Nothing
  2147 ;; This function is called by:
  2148 ;;		_initMain
  2149 ;; This function uses a non-reentrant model
  2150 ;;
  2151                           
  2152                           
  2153                           ;psect for function _internal_16
  2154  0E23                     _internal_16:	
  2155                           
  2156                           ;16F1717_Internal.c: 58: SCS0 = 0;
  2157                           
  2158                           ;incstack = 0
  2159                           ; Regs used in _internal_16: []
  2160  0E23  0021               	movlb	1	; select bank1
  2161  0E24  1019               	bcf	25,0	;volatile
  2162                           
  2163                           ;16F1717_Internal.c: 59: SCS1 = 0;
  2164  0E25  1099               	bcf	25,1	;volatile
  2165                           
  2166                           ;16F1717_Internal.c: 62: IRCF0 = 1;
  2167  0E26  1599               	bsf	25,3	;volatile
  2168                           
  2169                           ;16F1717_Internal.c: 63: IRCF1 = 1;
  2170  0E27  1619               	bsf	25,4	;volatile
  2171                           
  2172                           ;16F1717_Internal.c: 64: IRCF2 = 1;
  2173  0E28  1699               	bsf	25,5	;volatile
  2174                           
  2175                           ;16F1717_Internal.c: 65: IRCF3 = 1;
  2176  0E29  1719               	bsf	25,6	;volatile
  2177                           
  2178                           ;16F1717_Internal.c: 68: SPLLEN = 0;
  2179  0E2A  1399               	bcf	25,7	;volatile
  2180  0E2B  0008               	return
  2181  0E2C                     __end_of_internal_16:	
  2182                           
  2183                           	psect	text3
  2184  0E3A                     __ptext3:	
  2185 ;; *************** function _Lcd_Write_Integer *****************
  2186 ;; Defined at:
  2187 ;;		line 213 in file "LCD.c"
  2188 ;; Parameters:    Size  Location     Type
  2189 ;;  v               2   15[BANK0 ] int 
  2190 ;; Auto vars:     Size  Location     Type
  2191 ;;  buf             8   17[BANK0 ] unsigned char [8]
  2192 ;; Return value:  Size  Location     Type
  2193 ;;                  1    wreg      void 
  2194 ;; Registers used:
  2195 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2196 ;; Tracked objects:
  2197 ;;		On entry : 0/0
  2198 ;;		On exit  : 0/0
  2199 ;;		Unchanged: 0/0
  2200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2201 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2202 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2204 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2205 ;;Total ram usage:       10 bytes
  2206 ;; Hardware stack levels used:    1
  2207 ;; Hardware stack levels required when called:    3
  2208 ;; This function calls:
  2209 ;;		_Lcd_Write_String
  2210 ;;		_itoa
  2211 ;; This function is called by:
  2212 ;;		_main
  2213 ;; This function uses a non-reentrant model
  2214 ;;
  2215                           
  2216                           
  2217                           ;psect for function _Lcd_Write_Integer
  2218  0E3A                     _Lcd_Write_Integer:	
  2219                           
  2220                           ;LCD.c: 215: unsigned char buf[8];
  2221                           ;LCD.c: 217: Lcd_Write_String(itoa(buf, v, 10));
  2222                           
  2223                           ;incstack = 0
  2224                           ; Regs used in _Lcd_Write_Integer: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2225  0E3A  0020               	movlb	0	; select bank0
  2226  0E3B  0830               	movf	Lcd_Write_Integer@v+1,w
  2227  0E3C  00A5               	movwf	itoa@val+1
  2228  0E3D  082F               	movf	Lcd_Write_Integer@v,w
  2229  0E3E  00A4               	movwf	itoa@val
  2230  0E3F  300A               	movlw	10
  2231  0E40  00A6               	movwf	itoa@base
  2232  0E41  3000               	movlw	0
  2233  0E42  00A7               	movwf	itoa@base+1
  2234  0E43  3031               	movlw	(low (Lcd_Write_Integer@buf| 0))& (0+255)
  2235  0E44  318E  26E9  318E   	fcall	_itoa
  2236  0E47  0020               	movlb	0	; select bank0
  2237  0E48  00AA               	movwf	Lcd_Write_String@a
  2238  0E49  3000               	movlw	0
  2239  0E4A  00AB               	movwf	Lcd_Write_String@a+1
  2240  0E4B  318E  26AF         	fcall	_Lcd_Write_String
  2241  0E4D  0008               	return
  2242  0E4E                     __end_of_Lcd_Write_Integer:	
  2243                           
  2244                           	psect	text4
  2245  0EE9                     __ptext4:	
  2246 ;; *************** function _itoa *****************
  2247 ;; Defined at:
  2248 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\itoa.c"
  2249 ;; Parameters:    Size  Location     Type
  2250 ;;  buf             1    wreg     PTR unsigned char 
  2251 ;;		 -> Lcd_Write_Integer@buf(8), 
  2252 ;;  val             2    4[BANK0 ] int 
  2253 ;;  base            2    6[BANK0 ] int 
  2254 ;; Auto vars:     Size  Location     Type
  2255 ;;  buf             1    9[BANK0 ] PTR unsigned char 
  2256 ;;		 -> Lcd_Write_Integer@buf(8), 
  2257 ;;  cp              1    8[BANK0 ] PTR unsigned char 
  2258 ;;		 -> Lcd_Write_Integer@buf(8), 
  2259 ;; Return value:  Size  Location     Type
  2260 ;;                  1    wreg      PTR unsigned char 
  2261 ;; Registers used:
  2262 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2263 ;; Tracked objects:
  2264 ;;		On entry : 0/0
  2265 ;;		On exit  : 0/0
  2266 ;;		Unchanged: 0/0
  2267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2268 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2269 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2270 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2271 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2272 ;;Total ram usage:        7 bytes
  2273 ;; Hardware stack levels used:    1
  2274 ;; Hardware stack levels required when called:    2
  2275 ;; This function calls:
  2276 ;;		_utoa
  2277 ;; This function is called by:
  2278 ;;		_Lcd_Write_Integer
  2279 ;; This function uses a non-reentrant model
  2280 ;;
  2281                           
  2282                           
  2283                           ;psect for function _itoa
  2284  0EE9                     _itoa:	
  2285                           
  2286                           ;incstack = 0
  2287                           ; Regs used in _itoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2288                           ;itoa@buf stored from wreg
  2289  0EE9  0020               	movlb	0	; select bank0
  2290  0EEA  00A9               	movwf	itoa@buf
  2291  0EEB  0829               	movf	itoa@buf,w
  2292  0EEC  00FD               	movwf	??_itoa
  2293  0EED  087D               	movf	??_itoa,w
  2294  0EEE  00A8               	movwf	itoa@cp
  2295  0EEF  1FA5               	btfss	itoa@val+1,7
  2296  0EF0  2F01               	goto	l1900
  2297  0EF1  302D               	movlw	45
  2298  0EF2  00FD               	movwf	??_itoa
  2299  0EF3  0829               	movf	itoa@buf,w
  2300  0EF4  0086               	movwf	6
  2301  0EF5  0187               	clrf	7
  2302  0EF6  087D               	movf	??_itoa,w
  2303  0EF7  0081               	movwf	1
  2304  0EF8  3001               	movlw	1
  2305  0EF9  00FD               	movwf	??_itoa
  2306  0EFA  087D               	movf	??_itoa,w
  2307  0EFB  07A9               	addwf	itoa@buf,f
  2308  0EFC  09A4               	comf	itoa@val,f
  2309  0EFD  09A5               	comf	itoa@val+1,f
  2310  0EFE  0AA4               	incf	itoa@val,f
  2311  0EFF  1903               	skipnz
  2312  0F00  0AA5               	incf	itoa@val+1,f
  2313  0F01                     l1900:	
  2314  0F01  0825               	movf	itoa@val+1,w
  2315  0F02  00F9               	movwf	utoa@val+1
  2316  0F03  0824               	movf	itoa@val,w
  2317  0F04  00F8               	movwf	utoa@val
  2318  0F05  0827               	movf	itoa@base+1,w
  2319  0F06  00FB               	movwf	utoa@base+1
  2320  0F07  0826               	movf	itoa@base,w
  2321  0F08  00FA               	movwf	utoa@base
  2322  0F09  0829               	movf	itoa@buf,w
  2323  0F0A  3181  212A         	fcall	_utoa
  2324  0F0C  0020               	movlb	0	; select bank0
  2325  0F0D  0828               	movf	itoa@cp,w
  2326  0F0E  0008               	return
  2327  0F0F                     __end_of_itoa:	
  2328                           
  2329                           	psect	text5
  2330  012A                     __ptext5:	
  2331 ;; *************** function _utoa *****************
  2332 ;; Defined at:
  2333 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\itoa.c"
  2334 ;; Parameters:    Size  Location     Type
  2335 ;;  buf             1    wreg     PTR unsigned char 
  2336 ;;		 -> Lcd_Write_Integer@buf(8), 
  2337 ;;  val             2    8[COMMON] unsigned int 
  2338 ;;  base            2   10[COMMON] int 
  2339 ;; Auto vars:     Size  Location     Type
  2340 ;;  buf             1    3[BANK0 ] PTR unsigned char 
  2341 ;;		 -> Lcd_Write_Integer@buf(8), 
  2342 ;;  v               2    0[BANK0 ] unsigned int 
  2343 ;;  c               1    2[BANK0 ] unsigned char 
  2344 ;; Return value:  Size  Location     Type
  2345 ;;                  1    wreg      PTR unsigned char 
  2346 ;; Registers used:
  2347 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2348 ;; Tracked objects:
  2349 ;;		On entry : 0/0
  2350 ;;		On exit  : 0/0
  2351 ;;		Unchanged: 0/0
  2352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2353 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2354 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2355 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2356 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2357 ;;Total ram usage:        9 bytes
  2358 ;; Hardware stack levels used:    1
  2359 ;; Hardware stack levels required when called:    1
  2360 ;; This function calls:
  2361 ;;		___lwdiv
  2362 ;;		___lwmod
  2363 ;; This function is called by:
  2364 ;;		_itoa
  2365 ;; This function uses a non-reentrant model
  2366 ;;
  2367                           
  2368                           
  2369                           ;psect for function _utoa
  2370  012A                     _utoa:	
  2371                           
  2372                           ;incstack = 0
  2373                           ; Regs used in _utoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2374                           ;utoa@buf stored from wreg
  2375  012A  0020               	movlb	0	; select bank0
  2376  012B  00A3               	movwf	utoa@buf
  2377  012C  0879               	movf	utoa@val+1,w
  2378  012D  00A1               	movwf	utoa@v+1
  2379  012E  0878               	movf	utoa@val,w
  2380  012F  00A0               	movwf	utoa@v
  2381  0130                     l1832:	
  2382  0130  087B               	movf	utoa@base+1,w
  2383  0131  00F1               	movwf	___lwdiv@divisor+1
  2384  0132  087A               	movf	utoa@base,w
  2385  0133  00F0               	movwf	___lwdiv@divisor
  2386  0134  0821               	movf	utoa@v+1,w
  2387  0135  00F3               	movwf	___lwdiv@dividend+1
  2388  0136  0820               	movf	utoa@v,w
  2389  0137  00F2               	movwf	___lwdiv@dividend
  2390  0138  318F  2791  3181   	fcall	___lwdiv
  2391  013B  0871               	movf	?___lwdiv+1,w
  2392  013C  0020               	movlb	0	; select bank0
  2393  013D  00A1               	movwf	utoa@v+1
  2394  013E  0870               	movf	?___lwdiv,w
  2395  013F  00A0               	movwf	utoa@v
  2396  0140  3001               	movlw	1
  2397  0141  00FC               	movwf	??_utoa
  2398  0142  087C               	movf	??_utoa,w
  2399  0143  07A3               	addwf	utoa@buf,f
  2400  0144  0820               	movf	utoa@v,w
  2401  0145  0421               	iorwf	utoa@v+1,w
  2402  0146  1D03               	btfss	3,2
  2403  0147  2930               	goto	l1832
  2404  0148  0823               	movf	utoa@buf,w
  2405  0149  0086               	movwf	6
  2406  014A  0187               	clrf	7
  2407  014B  0181               	clrf	1
  2408  014C  3001               	movlw	1
  2409  014D  02A3               	subwf	utoa@buf,f
  2410  014E                     l1842:	
  2411  014E  087B               	movf	utoa@base+1,w
  2412  014F  00F1               	movwf	___lwmod@divisor+1
  2413  0150  087A               	movf	utoa@base,w
  2414  0151  00F0               	movwf	___lwmod@divisor
  2415  0152  0879               	movf	utoa@val+1,w
  2416  0153  00F3               	movwf	___lwmod@dividend+1
  2417  0154  0878               	movf	utoa@val,w
  2418  0155  00F2               	movwf	___lwmod@dividend
  2419  0156  318F  2737  3181   	fcall	___lwmod
  2420  0159  0870               	movf	?___lwmod,w
  2421  015A  00FC               	movwf	??_utoa
  2422  015B  087C               	movf	??_utoa,w
  2423  015C  0020               	movlb	0	; select bank0
  2424  015D  00A2               	movwf	utoa@c
  2425  015E  087B               	movf	utoa@base+1,w
  2426  015F  00F1               	movwf	___lwdiv@divisor+1
  2427  0160  087A               	movf	utoa@base,w
  2428  0161  00F0               	movwf	___lwdiv@divisor
  2429  0162  0879               	movf	utoa@val+1,w
  2430  0163  00F3               	movwf	___lwdiv@dividend+1
  2431  0164  0878               	movf	utoa@val,w
  2432  0165  00F2               	movwf	___lwdiv@dividend
  2433  0166  318F  2791  3181   	fcall	___lwdiv
  2434  0169  0871               	movf	?___lwdiv+1,w
  2435  016A  00F9               	movwf	utoa@val+1
  2436  016B  0870               	movf	?___lwdiv,w
  2437  016C  00F8               	movwf	utoa@val
  2438  016D  300A               	movlw	10
  2439  016E  0020               	movlb	0	; select bank0
  2440  016F  0222               	subwf	utoa@c,w
  2441  0170  1C03               	skipc
  2442  0171  2976               	goto	l475
  2443  0172  3007               	movlw	7
  2444  0173  00FC               	movwf	??_utoa
  2445  0174  087C               	movf	??_utoa,w
  2446  0175  07A2               	addwf	utoa@c,f
  2447  0176                     l475:	
  2448  0176  3030               	movlw	48
  2449  0177  00FC               	movwf	??_utoa
  2450  0178  087C               	movf	??_utoa,w
  2451  0179  07A2               	addwf	utoa@c,f
  2452  017A  0822               	movf	utoa@c,w
  2453  017B  00FC               	movwf	??_utoa
  2454  017C  0823               	movf	utoa@buf,w
  2455  017D  0086               	movwf	6
  2456  017E  0187               	clrf	7
  2457  017F  087C               	movf	??_utoa,w
  2458  0180  0081               	movwf	1
  2459  0181  3001               	movlw	1
  2460  0182  02A3               	subwf	utoa@buf,f
  2461  0183  0878               	movf	utoa@val,w
  2462  0184  0479               	iorwf	utoa@val+1,w
  2463  0185  1D03               	btfss	3,2
  2464  0186  294E               	goto	l1842
  2465                           
  2466                           ;	Return value of _utoa is never used
  2467  0187  3001               	movlw	1
  2468  0188  00FC               	movwf	??_utoa
  2469  0189  087C               	movf	??_utoa,w
  2470  018A  07A3               	addwf	utoa@buf,f
  2471  018B  0008               	return
  2472  018C                     __end_of_utoa:	
  2473                           
  2474                           	psect	text6
  2475  0F37                     __ptext6:	
  2476 ;; *************** function ___lwmod *****************
  2477 ;; Defined at:
  2478 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwmod.c"
  2479 ;; Parameters:    Size  Location     Type
  2480 ;;  divisor         2    0[COMMON] unsigned int 
  2481 ;;  dividend        2    2[COMMON] unsigned int 
  2482 ;; Auto vars:     Size  Location     Type
  2483 ;;  counter         1    5[COMMON] unsigned char 
  2484 ;; Return value:  Size  Location     Type
  2485 ;;                  2    0[COMMON] unsigned int 
  2486 ;; Registers used:
  2487 ;;		wreg, status,2, status,0
  2488 ;; Tracked objects:
  2489 ;;		On entry : 0/0
  2490 ;;		On exit  : 0/0
  2491 ;;		Unchanged: 0/0
  2492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2493 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2494 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2495 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2496 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2497 ;;Total ram usage:        6 bytes
  2498 ;; Hardware stack levels used:    1
  2499 ;; This function calls:
  2500 ;;		Nothing
  2501 ;; This function is called by:
  2502 ;;		_utoa
  2503 ;; This function uses a non-reentrant model
  2504 ;;
  2505                           
  2506                           
  2507                           ;psect for function ___lwmod
  2508  0F37                     ___lwmod:	
  2509                           
  2510                           ;incstack = 0
  2511                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2512  0F37  0870               	movf	___lwmod@divisor,w
  2513  0F38  0471               	iorwf	___lwmod@divisor+1,w
  2514  0F39  1903               	btfsc	3,2
  2515  0F3A  2F5E               	goto	l1574
  2516  0F3B  01F5               	clrf	___lwmod@counter
  2517  0F3C  0AF5               	incf	___lwmod@counter,f
  2518  0F3D                     l1564:	
  2519  0F3D  1BF1               	btfsc	___lwmod@divisor+1,7
  2520  0F3E  2F49               	goto	l1566
  2521  0F3F  3001               	movlw	1
  2522  0F40                     u2045:	
  2523  0F40  35F0               	lslf	___lwmod@divisor,f
  2524  0F41  0DF1               	rlf	___lwmod@divisor+1,f
  2525  0F42  0B89               	decfsz	9,f
  2526  0F43  2F40               	goto	u2045
  2527  0F44  3001               	movlw	1
  2528  0F45  00F4               	movwf	??___lwmod
  2529  0F46  0874               	movf	??___lwmod,w
  2530  0F47  07F5               	addwf	___lwmod@counter,f
  2531  0F48  2F3D               	goto	l1564
  2532  0F49                     l1566:	
  2533  0F49  0871               	movf	___lwmod@divisor+1,w
  2534  0F4A  0273               	subwf	___lwmod@dividend+1,w
  2535  0F4B  1D03               	skipz
  2536  0F4C  2F4F               	goto	u2065
  2537  0F4D  0870               	movf	___lwmod@divisor,w
  2538  0F4E  0272               	subwf	___lwmod@dividend,w
  2539  0F4F                     u2065:	
  2540  0F4F  1C03               	skipc
  2541  0F50  2F55               	goto	l1570
  2542  0F51  0870               	movf	___lwmod@divisor,w
  2543  0F52  02F2               	subwf	___lwmod@dividend,f
  2544  0F53  0871               	movf	___lwmod@divisor+1,w
  2545  0F54  3BF3               	subwfb	___lwmod@dividend+1,f
  2546  0F55                     l1570:	
  2547  0F55  3001               	movlw	1
  2548  0F56                     u2075:	
  2549  0F56  36F1               	lsrf	___lwmod@divisor+1,f
  2550  0F57  0CF0               	rrf	___lwmod@divisor,f
  2551  0F58  0B89               	decfsz	9,f
  2552  0F59  2F56               	goto	u2075
  2553  0F5A  3001               	movlw	1
  2554  0F5B  02F5               	subwf	___lwmod@counter,f
  2555  0F5C  1D03               	btfss	3,2
  2556  0F5D  2F49               	goto	l1566
  2557  0F5E                     l1574:	
  2558  0F5E  0873               	movf	___lwmod@dividend+1,w
  2559  0F5F  00F1               	movwf	?___lwmod+1
  2560  0F60  0872               	movf	___lwmod@dividend,w
  2561  0F61  00F0               	movwf	?___lwmod
  2562  0F62  0008               	return
  2563  0F63                     __end_of___lwmod:	
  2564                           
  2565                           	psect	text7
  2566  0F91                     __ptext7:	
  2567 ;; *************** function ___lwdiv *****************
  2568 ;; Defined at:
  2569 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c"
  2570 ;; Parameters:    Size  Location     Type
  2571 ;;  divisor         2    0[COMMON] unsigned int 
  2572 ;;  dividend        2    2[COMMON] unsigned int 
  2573 ;; Auto vars:     Size  Location     Type
  2574 ;;  quotient        2    5[COMMON] unsigned int 
  2575 ;;  counter         1    7[COMMON] unsigned char 
  2576 ;; Return value:  Size  Location     Type
  2577 ;;                  2    0[COMMON] unsigned int 
  2578 ;; Registers used:
  2579 ;;		wreg, status,2, status,0
  2580 ;; Tracked objects:
  2581 ;;		On entry : 0/0
  2582 ;;		On exit  : 0/0
  2583 ;;		Unchanged: 0/0
  2584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2585 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2586 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2587 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2588 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2589 ;;Total ram usage:        8 bytes
  2590 ;; Hardware stack levels used:    1
  2591 ;; This function calls:
  2592 ;;		Nothing
  2593 ;; This function is called by:
  2594 ;;		_utoa
  2595 ;; This function uses a non-reentrant model
  2596 ;;
  2597                           
  2598                           
  2599                           ;psect for function ___lwdiv
  2600  0F91                     ___lwdiv:	
  2601                           
  2602                           ;incstack = 0
  2603                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2604  0F91  01F5               	clrf	___lwdiv@quotient
  2605  0F92  01F6               	clrf	___lwdiv@quotient+1
  2606  0F93  0870               	movf	___lwdiv@divisor,w
  2607  0F94  0471               	iorwf	___lwdiv@divisor+1,w
  2608  0F95  1903               	btfsc	3,2
  2609  0F96  2FC0               	goto	l1552
  2610  0F97  01F7               	clrf	___lwdiv@counter
  2611  0F98  0AF7               	incf	___lwdiv@counter,f
  2612  0F99                     l1540:	
  2613  0F99  1BF1               	btfsc	___lwdiv@divisor+1,7
  2614  0F9A  2FA5               	goto	l1542
  2615  0F9B  3001               	movlw	1
  2616  0F9C                     u1975:	
  2617  0F9C  35F0               	lslf	___lwdiv@divisor,f
  2618  0F9D  0DF1               	rlf	___lwdiv@divisor+1,f
  2619  0F9E  0B89               	decfsz	9,f
  2620  0F9F  2F9C               	goto	u1975
  2621  0FA0  3001               	movlw	1
  2622  0FA1  00F4               	movwf	??___lwdiv
  2623  0FA2  0874               	movf	??___lwdiv,w
  2624  0FA3  07F7               	addwf	___lwdiv@counter,f
  2625  0FA4  2F99               	goto	l1540
  2626  0FA5                     l1542:	
  2627  0FA5  3001               	movlw	1
  2628  0FA6                     u1995:	
  2629  0FA6  35F5               	lslf	___lwdiv@quotient,f
  2630  0FA7  0DF6               	rlf	___lwdiv@quotient+1,f
  2631  0FA8  0B89               	decfsz	9,f
  2632  0FA9  2FA6               	goto	u1995
  2633  0FAA  0871               	movf	___lwdiv@divisor+1,w
  2634  0FAB  0273               	subwf	___lwdiv@dividend+1,w
  2635  0FAC  1D03               	skipz
  2636  0FAD  2FB0               	goto	u2005
  2637  0FAE  0870               	movf	___lwdiv@divisor,w
  2638  0FAF  0272               	subwf	___lwdiv@dividend,w
  2639  0FB0                     u2005:	
  2640  0FB0  1C03               	skipc
  2641  0FB1  2FB7               	goto	l1548
  2642  0FB2  0870               	movf	___lwdiv@divisor,w
  2643  0FB3  02F2               	subwf	___lwdiv@dividend,f
  2644  0FB4  0871               	movf	___lwdiv@divisor+1,w
  2645  0FB5  3BF3               	subwfb	___lwdiv@dividend+1,f
  2646  0FB6  1475               	bsf	___lwdiv@quotient,0
  2647  0FB7                     l1548:	
  2648  0FB7  3001               	movlw	1
  2649  0FB8                     u2015:	
  2650  0FB8  36F1               	lsrf	___lwdiv@divisor+1,f
  2651  0FB9  0CF0               	rrf	___lwdiv@divisor,f
  2652  0FBA  0B89               	decfsz	9,f
  2653  0FBB  2FB8               	goto	u2015
  2654  0FBC  3001               	movlw	1
  2655  0FBD  02F7               	subwf	___lwdiv@counter,f
  2656  0FBE  1D03               	btfss	3,2
  2657  0FBF  2FA5               	goto	l1542
  2658  0FC0                     l1552:	
  2659  0FC0  0876               	movf	___lwdiv@quotient+1,w
  2660  0FC1  00F1               	movwf	?___lwdiv+1
  2661  0FC2  0875               	movf	___lwdiv@quotient,w
  2662  0FC3  00F0               	movwf	?___lwdiv
  2663  0FC4  0008               	return
  2664  0FC5                     __end_of___lwdiv:	
  2665                           
  2666                           	psect	text8
  2667  0E7B                     __ptext8:	
  2668 ;; *************** function _Lcd_Write_Float *****************
  2669 ;; Defined at:
  2670 ;;		line 229 in file "LCD.c"
  2671 ;; Parameters:    Size  Location     Type
  2672 ;;  f               3   52[BANK0 ] float 
  2673 ;; Auto vars:     Size  Location     Type
  2674 ;;  status          2   57[BANK0 ] int 
  2675 ;;  buf11           1   59[BANK0 ] PTR unsigned char 
  2676 ;;		 -> ftoa@buf(17), 
  2677 ;; Return value:  Size  Location     Type
  2678 ;;                  1    wreg      void 
  2679 ;; Registers used:
  2680 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2681 ;; Tracked objects:
  2682 ;;		On entry : 0/0
  2683 ;;		On exit  : 0/0
  2684 ;;		Unchanged: 0/0
  2685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2686 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2687 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2688 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2689 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2690 ;;Total ram usage:        8 bytes
  2691 ;; Hardware stack levels used:    1
  2692 ;; Hardware stack levels required when called:    4
  2693 ;; This function calls:
  2694 ;;		_Lcd_Write_String
  2695 ;;		_ftoa
  2696 ;; This function is called by:
  2697 ;;		_main
  2698 ;; This function uses a non-reentrant model
  2699 ;;
  2700                           
  2701                           
  2702                           ;psect for function _Lcd_Write_Float
  2703  0E7B                     _Lcd_Write_Float:	
  2704                           
  2705                           ;LCD.c: 231: char* buf11;
  2706                           ;LCD.c: 232: int status;
  2707                           ;LCD.c: 234: buf11 = ftoa(f, &status);
  2708                           
  2709                           ;incstack = 0
  2710                           ; Regs used in _Lcd_Write_Float: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2711  0E7B  0020               	movlb	0	; select bank0
  2712  0E7C  0854               	movf	Lcd_Write_Float@f,w
  2713  0E7D  00C6               	movwf	ftoa@f
  2714  0E7E  0855               	movf	Lcd_Write_Float@f+1,w
  2715  0E7F  00C7               	movwf	ftoa@f+1
  2716  0E80  0856               	movf	Lcd_Write_Float@f+2,w
  2717  0E81  00C8               	movwf	ftoa@f+2
  2718  0E82  3059               	movlw	(low (Lcd_Write_Float@status| 0))& (0+255)
  2719  0E83  00D7               	movwf	??_Lcd_Write_Float
  2720  0E84  0857               	movf	??_Lcd_Write_Float,w
  2721  0E85  00C9               	movwf	ftoa@status
  2722  0E86  3182  2277  318E   	fcall	_ftoa
  2723  0E89  0020               	movlb	0	; select bank0
  2724  0E8A  00D8               	movwf	??_Lcd_Write_Float+1
  2725  0E8B  0858               	movf	??_Lcd_Write_Float+1,w
  2726  0E8C  00DB               	movwf	Lcd_Write_Float@buf11
  2727                           
  2728                           ;LCD.c: 236: Lcd_Write_String(buf11);
  2729  0E8D  085B               	movf	Lcd_Write_Float@buf11,w
  2730  0E8E  00AA               	movwf	Lcd_Write_String@a
  2731  0E8F  3000               	movlw	0
  2732  0E90  00AB               	movwf	Lcd_Write_String@a+1
  2733  0E91  318E  26AF         	fcall	_Lcd_Write_String
  2734  0E93  0008               	return
  2735  0E94                     __end_of_Lcd_Write_Float:	
  2736                           
  2737                           	psect	text9
  2738  0277                     __ptext9:	
  2739 ;; *************** function _ftoa *****************
  2740 ;; Defined at:
  2741 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftoa.c"
  2742 ;; Parameters:    Size  Location     Type
  2743 ;;  f               3   38[BANK0 ] float 
  2744 ;;  status          1   41[BANK0 ] PTR int 
  2745 ;;		 -> Lcd_Write_Float@status(2), 
  2746 ;; Auto vars:     Size  Location     Type
  2747 ;;  l               4   47[BANK0 ] unsigned long 
  2748 ;;  rem             4   43[BANK0 ] unsigned long 
  2749 ;;  cp              1   51[BANK0 ] PTR unsigned char 
  2750 ;;		 -> ftoa@buf(17), 
  2751 ;; Return value:  Size  Location     Type
  2752 ;;                  1    wreg      PTR unsigned char 
  2753 ;; Registers used:
  2754 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2755 ;; Tracked objects:
  2756 ;;		On entry : 0/0
  2757 ;;		On exit  : 0/0
  2758 ;;		Unchanged: 0/0
  2759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2760 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2761 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2762 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2763 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2764 ;;Total ram usage:       14 bytes
  2765 ;; Hardware stack levels used:    1
  2766 ;; Hardware stack levels required when called:    3
  2767 ;; This function calls:
  2768 ;;		___ftge
  2769 ;;		___ftmul
  2770 ;;		___ftneg
  2771 ;;		___ftsub
  2772 ;;		___fttol
  2773 ;;		___lltoft
  2774 ;;		_sprintf
  2775 ;; This function is called by:
  2776 ;;		_Lcd_Write_Float
  2777 ;; This function uses a non-reentrant model
  2778 ;;
  2779                           
  2780                           
  2781                           ;psect for function _ftoa
  2782  0277                     _ftoa:	
  2783                           
  2784                           ;incstack = 0
  2785                           ; Regs used in _ftoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2786  0277  30A0               	movlw	(low (ftoa@buf| 0))& (0+255)
  2787  0278  0020               	movlb	0	; select bank0
  2788  0279  00CA               	movwf	??_ftoa
  2789  027A  084A               	movf	??_ftoa,w
  2790  027B  00D3               	movwf	ftoa@cp
  2791  027C  0846               	movf	ftoa@f,w
  2792  027D  00F0               	movwf	___ftge@ff1
  2793  027E  0847               	movf	ftoa@f+1,w
  2794  027F  00F1               	movwf	___ftge@ff1+1
  2795  0280  0848               	movf	ftoa@f+2,w
  2796  0281  00F2               	movwf	___ftge@ff1+2
  2797  0282  3000               	movlw	0
  2798  0283  00F3               	movwf	___ftge@ff2
  2799  0284  3000               	movlw	0
  2800  0285  00F4               	movwf	___ftge@ff2+1
  2801  0286  3000               	movlw	0
  2802  0287  00F5               	movwf	___ftge@ff2+2
  2803  0288  318F  27C5  3182   	fcall	___ftge
  2804  028B  1803               	btfsc	3,0
  2805  028C  2AA9               	goto	l1916
  2806  028D  302D               	movlw	45
  2807  028E  0020               	movlb	0	; select bank0
  2808  028F  00CA               	movwf	??_ftoa
  2809  0290  0853               	movf	ftoa@cp,w
  2810  0291  0086               	movwf	6
  2811  0292  0187               	clrf	7
  2812  0293  084A               	movf	??_ftoa,w
  2813  0294  0081               	movwf	1
  2814  0295  3001               	movlw	1
  2815  0296  00CA               	movwf	??_ftoa
  2816  0297  084A               	movf	??_ftoa,w
  2817  0298  07D3               	addwf	ftoa@cp,f
  2818  0299  0846               	movf	ftoa@f,w
  2819  029A  00F0               	movwf	___ftneg@f1
  2820  029B  0847               	movf	ftoa@f+1,w
  2821  029C  00F1               	movwf	___ftneg@f1+1
  2822  029D  0848               	movf	ftoa@f+2,w
  2823  029E  00F2               	movwf	___ftneg@f1+2
  2824  029F  318E  261B  3182   	fcall	___ftneg
  2825  02A2  0870               	movf	?___ftneg,w
  2826  02A3  0020               	movlb	0	; select bank0
  2827  02A4  00C6               	movwf	ftoa@f
  2828  02A5  0871               	movf	?___ftneg+1,w
  2829  02A6  00C7               	movwf	ftoa@f+1
  2830  02A7  0872               	movf	?___ftneg+2,w
  2831  02A8  00C8               	movwf	ftoa@f+2
  2832  02A9                     l1916:	
  2833  02A9  0020               	movlb	0	; select bank0
  2834  02AA  0846               	movf	ftoa@f,w
  2835  02AB  00AA               	movwf	___fttol@f1
  2836  02AC  0847               	movf	ftoa@f+1,w
  2837  02AD  00AB               	movwf	___fttol@f1+1
  2838  02AE  0848               	movf	ftoa@f+2,w
  2839  02AF  00AC               	movwf	___fttol@f1+2
  2840  02B0  3181  21F0  3182   	fcall	___fttol
  2841  02B3  0020               	movlb	0	; select bank0
  2842  02B4  082D               	movf	?___fttol+3,w
  2843  02B5  00D2               	movwf	ftoa@l+3
  2844  02B6  082C               	movf	?___fttol+2,w
  2845  02B7  00D1               	movwf	ftoa@l+2
  2846  02B8  082B               	movf	?___fttol+1,w
  2847  02B9  00D0               	movwf	ftoa@l+1
  2848  02BA  082A               	movf	?___fttol,w
  2849  02BB  00CF               	movwf	ftoa@l
  2850  02BC  0852               	movf	ftoa@l+3,w
  2851  02BD  00FB               	movwf	___lltoft@c+3
  2852  02BE  0851               	movf	ftoa@l+2,w
  2853  02BF  00FA               	movwf	___lltoft@c+2
  2854  02C0  0850               	movf	ftoa@l+1,w
  2855  02C1  00F9               	movwf	___lltoft@c+1
  2856  02C2  084F               	movf	ftoa@l,w
  2857  02C3  00F8               	movwf	___lltoft@c
  2858  02C4  318F  270F  3182   	fcall	___lltoft
  2859  02C7  0878               	movf	?___lltoft,w
  2860  02C8  0020               	movlb	0	; select bank0
  2861  02C9  00A7               	movwf	___ftsub@f2
  2862  02CA  0879               	movf	?___lltoft+1,w
  2863  02CB  00A8               	movwf	___ftsub@f2+1
  2864  02CC  087A               	movf	?___lltoft+2,w
  2865  02CD  00A9               	movwf	___ftsub@f2+2
  2866  02CE  0846               	movf	ftoa@f,w
  2867  02CF  00AA               	movwf	___ftsub@f1
  2868  02D0  0847               	movf	ftoa@f+1,w
  2869  02D1  00AB               	movwf	___ftsub@f1+1
  2870  02D2  0848               	movf	ftoa@f+2,w
  2871  02D3  00AC               	movwf	___ftsub@f1+2
  2872  02D4  318E  26CB  3182   	fcall	___ftsub
  2873  02D7  0020               	movlb	0	; select bank0
  2874  02D8  0827               	movf	?___ftsub,w
  2875  02D9  00C6               	movwf	ftoa@f
  2876  02DA  0828               	movf	?___ftsub+1,w
  2877  02DB  00C7               	movwf	ftoa@f+1
  2878  02DC  0829               	movf	?___ftsub+2,w
  2879  02DD  00C8               	movwf	ftoa@f+2
  2880  02DE  0846               	movf	ftoa@f,w
  2881  02DF  00FB               	movwf	___ftmul@f2
  2882  02E0  0847               	movf	ftoa@f+1,w
  2883  02E1  00FC               	movwf	___ftmul@f2+1
  2884  02E2  0848               	movf	ftoa@f+2,w
  2885  02E3  00FD               	movwf	___ftmul@f2+2
  2886  02E4  3024               	movlw	36
  2887  02E5  00F8               	movwf	___ftmul@f1
  2888  02E6  3074               	movlw	116
  2889  02E7  00F9               	movwf	___ftmul@f1+1
  2890  02E8  3049               	movlw	73
  2891  02E9  00FA               	movwf	___ftmul@f1+2
  2892  02EA  3183  2319  3182   	fcall	___ftmul
  2893  02ED  0878               	movf	?___ftmul,w
  2894  02EE  0020               	movlb	0	; select bank0
  2895  02EF  00AA               	movwf	___fttol@f1
  2896  02F0  0879               	movf	?___ftmul+1,w
  2897  02F1  00AB               	movwf	___fttol@f1+1
  2898  02F2  087A               	movf	?___ftmul+2,w
  2899  02F3  00AC               	movwf	___fttol@f1+2
  2900  02F4  3181  21F0  3182   	fcall	___fttol
  2901  02F7  0020               	movlb	0	; select bank0
  2902  02F8  082D               	movf	?___fttol+3,w
  2903  02F9  00CE               	movwf	ftoa@rem+3
  2904  02FA  082C               	movf	?___fttol+2,w
  2905  02FB  00CD               	movwf	ftoa@rem+2
  2906  02FC  082B               	movf	?___fttol+1,w
  2907  02FD  00CC               	movwf	ftoa@rem+1
  2908  02FE  082A               	movf	?___fttol,w
  2909  02FF  00CB               	movwf	ftoa@rem
  2910  0300  3028               	movlw	low (STR_2| (0+32768))
  2911  0301  00AA               	movwf	sprintf@f
  2912  0302  3088               	movlw	high (STR_2| (0+32768))
  2913  0303  00AB               	movwf	sprintf@f+1
  2914  0304  0852               	movf	ftoa@l+3,w
  2915  0305  00AF               	movwf	?_sprintf+5
  2916  0306  0851               	movf	ftoa@l+2,w
  2917  0307  00AE               	movwf	?_sprintf+4
  2918  0308  0850               	movf	ftoa@l+1,w
  2919  0309  00AD               	movwf	?_sprintf+3
  2920  030A  084F               	movf	ftoa@l,w
  2921  030B  00AC               	movwf	?_sprintf+2
  2922  030C  084E               	movf	ftoa@rem+3,w
  2923  030D  00B3               	movwf	?_sprintf+9
  2924  030E  084D               	movf	ftoa@rem+2,w
  2925  030F  00B2               	movwf	?_sprintf+8
  2926  0310  084C               	movf	ftoa@rem+1,w
  2927  0311  00B1               	movwf	?_sprintf+7
  2928  0312  084B               	movf	ftoa@rem,w
  2929  0313  00B0               	movwf	?_sprintf+6
  2930  0314  0853               	movf	ftoa@cp,w
  2931  0315  3186  2617         	fcall	_sprintf
  2932  0317  30A0               	movlw	(low (ftoa@buf| 0))& (0+255)
  2933  0318  0008               	return
  2934  0319                     __end_of_ftoa:	
  2935                           
  2936                           	psect	text10
  2937  0617                     __ptext10:	
  2938 ;; *************** function _sprintf *****************
  2939 ;; Defined at:
  2940 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
  2941 ;; Parameters:    Size  Location     Type
  2942 ;;  sp              1    wreg     PTR unsigned char 
  2943 ;;		 -> ftoa@buf(17), 
  2944 ;;  f               2   10[BANK0 ] PTR const unsigned char 
  2945 ;;		 -> STR_2(11), 
  2946 ;; Auto vars:     Size  Location     Type
  2947 ;;  sp              1   32[BANK0 ] PTR unsigned char 
  2948 ;;		 -> ftoa@buf(17), 
  2949 ;;  val             4   28[BANK0 ] unsigned long 
  2950 ;;  tmpval          4    0        struct .
  2951 ;;  prec            2   35[BANK0 ] int 
  2952 ;;  width           2   33[BANK0 ] int 
  2953 ;;  cp              2    0        PTR const unsigned char 
  2954 ;;  len             2    0        unsigned int 
  2955 ;;  c               1   37[BANK0 ] char 
  2956 ;;  ap              1   27[BANK0 ] PTR void [1]
  2957 ;;		 -> ?_sprintf(2), 
  2958 ;;  flag            1   26[BANK0 ] unsigned char 
  2959 ;; Return value:  Size  Location     Type
  2960 ;;                  2   10[BANK0 ] int 
  2961 ;; Registers used:
  2962 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2963 ;; Tracked objects:
  2964 ;;		On entry : 0/0
  2965 ;;		On exit  : 0/0
  2966 ;;		Unchanged: 0/0
  2967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2968 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2969 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2970 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2971 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2972 ;;Total ram usage:       28 bytes
  2973 ;; Hardware stack levels used:    1
  2974 ;; Hardware stack levels required when called:    1
  2975 ;; This function calls:
  2976 ;;		___lldiv
  2977 ;;		___llmod
  2978 ;;		___wmul
  2979 ;;		_isdigit
  2980 ;; This function is called by:
  2981 ;;		_ftoa
  2982 ;; This function uses a non-reentrant model
  2983 ;;
  2984                           
  2985                           
  2986                           ;psect for function _sprintf
  2987  0617                     _sprintf:	
  2988                           
  2989                           ;incstack = 0
  2990                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2991                           ;sprintf@sp stored from wreg
  2992  0617  0020               	movlb	0	; select bank0
  2993  0618  00C0               	movwf	sprintf@sp
  2994                           
  2995                           ;doprnt.c: 494: va_list ap;
  2996                           ;doprnt.c: 499: signed char c;
  2997                           ;doprnt.c: 501: int width;
  2998                           ;doprnt.c: 504: int prec;
  2999                           ;doprnt.c: 508: unsigned char flag;
  3000                           ;doprnt.c: 523: union {
  3001                           ;doprnt.c: 524: unsigned long vd;
  3002                           ;doprnt.c: 525: double integ;
  3003                           ;doprnt.c: 526: } tmpval;
  3004                           ;doprnt.c: 528: unsigned long val;
  3005                           ;doprnt.c: 529: unsigned len;
  3006                           ;doprnt.c: 530: const char * cp;
  3007                           ;doprnt.c: 533: *ap = __va_start();
  3008  0619  302C               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  3009  061A  00B4               	movwf	??_sprintf
  3010  061B  0834               	movf	??_sprintf,w
  3011  061C  00BB               	movwf	sprintf@ap
  3012  061D                     l1696:	
  3013                           ;doprnt.c: 536: while(c = *f++) {
  3014                           
  3015  061D  082B               	movf	sprintf@f+1,w
  3016  061E  00B5               	movwf	??_sprintf+1
  3017  061F  082A               	movf	sprintf@f,w
  3018  0620  00B4               	movwf	??_sprintf
  3019  0621  0AAA               	incf	sprintf@f,f
  3020  0622  1903               	skipnz
  3021  0623  0AAB               	incf	sprintf@f+1,f
  3022  0624  0834               	movf	??_sprintf,w
  3023  0625  0084               	movwf	4
  3024  0626  0835               	movf	??_sprintf+1,w
  3025  0627  0085               	movwf	5
  3026  0628  0800               	movf	0,w	;code access
  3027  0629  00B6               	movwf	??_sprintf+2
  3028  062A  0836               	movf	??_sprintf+2,w
  3029  062B  00C5               	movwf	sprintf@c
  3030  062C  0845               	movf	sprintf@c,w
  3031  062D  1903               	btfsc	3,2
  3032  062E  2FF1               	goto	l1698
  3033                           
  3034                           ;doprnt.c: 538: if(c != '%')
  3035  062F  3025               	movlw	37
  3036  0630  0645               	xorwf	sprintf@c,w
  3037  0631  1903               	btfsc	3,2
  3038  0632  2E3F               	goto	l1606
  3039                           
  3040                           ;doprnt.c: 540: {
  3041                           ;doprnt.c: 541: ((*sp++ = (c)));
  3042  0633  0845               	movf	sprintf@c,w
  3043  0634  00B4               	movwf	??_sprintf
  3044  0635  0840               	movf	sprintf@sp,w
  3045  0636  0086               	movwf	6
  3046  0637  0187               	clrf	7
  3047  0638  0834               	movf	??_sprintf,w
  3048  0639  0081               	movwf	1
  3049  063A  3001               	movlw	1
  3050  063B  00B4               	movwf	??_sprintf
  3051  063C  0834               	movf	??_sprintf,w
  3052  063D  07C0               	addwf	sprintf@sp,f
  3053                           
  3054                           ;doprnt.c: 542: continue;
  3055  063E  2E1D               	goto	l1696
  3056  063F                     l1606:	
  3057                           
  3058                           ;doprnt.c: 543: }
  3059                           ;doprnt.c: 546: width = 0;
  3060  063F  01C1               	clrf	sprintf@width
  3061  0640  01C2               	clrf	sprintf@width+1
  3062                           
  3063                           ;doprnt.c: 548: flag = 0;
  3064  0641  01BA               	clrf	sprintf@flag
  3065                           
  3066                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  3067  0642  082A               	movf	sprintf@f,w
  3068  0643  0084               	movwf	4
  3069  0644  082B               	movf	sprintf@f+1,w
  3070  0645  0085               	movwf	5
  3071  0646  0800               	movf	0,w	;code access
  3072  0647  318E  262C  3186   	fcall	_isdigit
  3073  064A  1C03               	btfss	3,0
  3074  064B  2E7D               	goto	l1620
  3075                           
  3076                           ;doprnt.c: 598: width = 0;
  3077  064C  0020               	movlb	0	; select bank0
  3078  064D  01C1               	clrf	sprintf@width
  3079  064E  01C2               	clrf	sprintf@width+1
  3080  064F                     l1612:	
  3081                           ;doprnt.c: 599: do {
  3082                           
  3083                           
  3084                           ;doprnt.c: 600: width *= 10;
  3085  064F  300A               	movlw	10
  3086  0650  00F0               	movwf	___wmul@multiplier
  3087  0651  3000               	movlw	0
  3088  0652  00F1               	movwf	___wmul@multiplier+1
  3089  0653  0020               	movlb	0	; select bank0
  3090  0654  0842               	movf	sprintf@width+1,w
  3091  0655  00F3               	movwf	___wmul@multiplicand+1
  3092  0656  0841               	movf	sprintf@width,w
  3093  0657  00F2               	movwf	___wmul@multiplicand
  3094  0658  318E  2694  3186   	fcall	___wmul
  3095  065B  0871               	movf	?___wmul+1,w
  3096  065C  0020               	movlb	0	; select bank0
  3097  065D  00C2               	movwf	sprintf@width+1
  3098  065E  0870               	movf	?___wmul,w
  3099  065F  00C1               	movwf	sprintf@width
  3100                           
  3101                           ;doprnt.c: 601: width += *f++ - '0';
  3102  0660  082A               	movf	sprintf@f,w
  3103  0661  0084               	movwf	4
  3104  0662  082B               	movf	sprintf@f+1,w
  3105  0663  0085               	movwf	5
  3106  0664  0800               	movf	0,w	;code access
  3107  0665  3ED0               	addlw	208
  3108  0666  00B4               	movwf	??_sprintf
  3109  0667  30FF               	movlw	255
  3110  0668  1803               	skipnc
  3111  0669  3000               	movlw	0
  3112  066A  00B5               	movwf	??_sprintf+1
  3113  066B  0834               	movf	??_sprintf,w
  3114  066C  07C1               	addwf	sprintf@width,f
  3115  066D  0835               	movf	??_sprintf+1,w
  3116  066E  3DC2               	addwfc	sprintf@width+1,f
  3117  066F  3001               	movlw	1
  3118  0670  07AA               	addwf	sprintf@f,f
  3119  0671  3000               	movlw	0
  3120  0672  3DAB               	addwfc	sprintf@f+1,f
  3121                           
  3122                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  3123  0673  082A               	movf	sprintf@f,w
  3124  0674  0084               	movwf	4
  3125  0675  082B               	movf	sprintf@f+1,w
  3126  0676  0085               	movwf	5
  3127  0677  0800               	movf	0,w	;code access
  3128  0678  318E  262C  3186   	fcall	_isdigit
  3129  067B  1803               	btfsc	3,0
  3130  067C  2E4F               	goto	l1612
  3131  067D                     l1620:	
  3132                           
  3133                           ;doprnt.c: 608: }
  3134                           ;doprnt.c: 611: if(*f == '.') {
  3135  067D  0020               	movlb	0	; select bank0
  3136  067E  082A               	movf	sprintf@f,w
  3137  067F  0084               	movwf	4
  3138  0680  082B               	movf	sprintf@f+1,w
  3139  0681  0085               	movwf	5
  3140  0682  0012               	moviw fsr0++
  3141  0683  3A2E               	xorlw	46
  3142  0684  1D03               	btfss	3,2
  3143  0685  2EBB               	goto	l1632
  3144                           
  3145                           ;doprnt.c: 613: f++;
  3146  0686  3001               	movlw	1
  3147  0687  07AA               	addwf	sprintf@f,f
  3148  0688  3000               	movlw	0
  3149  0689  3DAB               	addwfc	sprintf@f+1,f
  3150                           
  3151                           ;doprnt.c: 620: {
  3152                           ;doprnt.c: 621: prec = 0;
  3153  068A  01C3               	clrf	sprintf@prec
  3154  068B  01C4               	clrf	sprintf@prec+1
  3155  068C                     l1630:	
  3156                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  3157                           
  3158  068C  082A               	movf	sprintf@f,w
  3159  068D  0084               	movwf	4
  3160  068E  082B               	movf	sprintf@f+1,w
  3161  068F  0085               	movwf	5
  3162  0690  0800               	movf	0,w	;code access
  3163  0691  318E  262C  3186   	fcall	_isdigit
  3164  0694  1C03               	btfss	3,0
  3165  0695  2EC6               	goto	l1638
  3166                           
  3167                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  3168  0696  0020               	movlb	0	; select bank0
  3169  0697  082A               	movf	sprintf@f,w
  3170  0698  0084               	movwf	4
  3171  0699  082B               	movf	sprintf@f+1,w
  3172  069A  0085               	movwf	5
  3173  069B  0800               	movf	0,w	;code access
  3174  069C  00B4               	movwf	??_sprintf
  3175  069D  01B5               	clrf	??_sprintf+1
  3176  069E  0844               	movf	sprintf@prec+1,w
  3177  069F  00F1               	movwf	___wmul@multiplier+1
  3178  06A0  0843               	movf	sprintf@prec,w
  3179  06A1  00F0               	movwf	___wmul@multiplier
  3180  06A2  300A               	movlw	10
  3181  06A3  00F2               	movwf	___wmul@multiplicand
  3182  06A4  3000               	movlw	0
  3183  06A5  00F3               	movwf	___wmul@multiplicand+1
  3184  06A6  318E  2694  3186   	fcall	___wmul
  3185  06A9  0020               	movlb	0	; select bank0
  3186  06AA  0834               	movf	??_sprintf,w
  3187  06AB  0770               	addwf	?___wmul,w
  3188  06AC  00B6               	movwf	??_sprintf+2
  3189  06AD  0835               	movf	??_sprintf+1,w
  3190  06AE  3D71               	addwfc	?___wmul+1,w
  3191  06AF  00B7               	movwf	??_sprintf+3
  3192  06B0  0836               	movf	??_sprintf+2,w
  3193  06B1  3ED0               	addlw	208
  3194  06B2  00C3               	movwf	sprintf@prec
  3195  06B3  30FF               	movlw	255
  3196  06B4  3D37               	addwfc	??_sprintf+3,w
  3197  06B5  00C4               	movwf	sprintf@prec+1
  3198  06B6  3001               	movlw	1
  3199  06B7  07AA               	addwf	sprintf@f,f
  3200  06B8  3000               	movlw	0
  3201  06B9  3DAB               	addwfc	sprintf@f+1,f
  3202  06BA  2E8C               	goto	l1630
  3203  06BB                     l1632:	
  3204                           ;doprnt.c: 624: }
  3205                           ;doprnt.c: 625: } else {
  3206                           
  3207                           
  3208                           ;doprnt.c: 626: prec = 0;
  3209  06BB  0020               	movlb	0	; select bank0
  3210  06BC  01C3               	clrf	sprintf@prec
  3211  06BD  01C4               	clrf	sprintf@prec+1
  3212                           
  3213                           ;doprnt.c: 635: switch(c = *f++) {
  3214                           
  3215                           ;doprnt.c: 630: }
  3216                           ;doprnt.c: 633: loop:
  3217  06BE  2EC6               	goto	l1638
  3218  06BF                     l169:	
  3219                           ;doprnt.c: 641: case 'l':
  3220                           
  3221                           ;doprnt.c: 638: goto alldone;
  3222                           
  3223                           ;doprnt.c: 637: case 0:
  3224                           
  3225                           
  3226                           ;doprnt.c: 643: flag |= 0x10;
  3227  06BF  163A               	bsf	sprintf@flag,4
  3228                           
  3229                           ;doprnt.c: 644: goto loop;
  3230  06C0  2EC6               	goto	l1638
  3231  06C1                     l1634:	
  3232                           ;doprnt.c: 817: case 'u':
  3233                           
  3234                           ;doprnt.c: 813: continue;
  3235                           
  3236                           ;doprnt.c: 802: default:
  3237                           
  3238                           
  3239                           ;doprnt.c: 818: flag |= 0xC0;
  3240  06C1  30C0               	movlw	192
  3241  06C2  00B4               	movwf	??_sprintf
  3242  06C3  0834               	movf	??_sprintf,w
  3243  06C4  04BA               	iorwf	sprintf@flag,f
  3244                           
  3245                           ;doprnt.c: 822: }
  3246                           
  3247                           ;doprnt.c: 819: break;
  3248  06C5  2EDE               	goto	l172
  3249  06C6                     l1638:	
  3250  06C6  0020               	movlb	0	; select bank0
  3251  06C7  082B               	movf	sprintf@f+1,w
  3252  06C8  00B5               	movwf	??_sprintf+1
  3253  06C9  082A               	movf	sprintf@f,w
  3254  06CA  00B4               	movwf	??_sprintf
  3255  06CB  0AAA               	incf	sprintf@f,f
  3256  06CC  1903               	skipnz
  3257  06CD  0AAB               	incf	sprintf@f+1,f
  3258  06CE  0834               	movf	??_sprintf,w
  3259  06CF  0084               	movwf	4
  3260  06D0  0835               	movf	??_sprintf+1,w
  3261  06D1  0085               	movwf	5
  3262  06D2  0800               	movf	0,w	;code access
  3263  06D3  00C5               	movwf	sprintf@c
  3264                           
  3265                           ; Switch size 1, requested type "space"
  3266                           ; Number of cases is 3, Range of values is 0 to 117
  3267                           ; switch strategies available:
  3268                           ; Name         Instructions Cycles
  3269                           ; simple_byte           10     6 (average)
  3270                           ; direct_byte          242     6 (fixed)
  3271                           ; jumptable            260     6 (fixed)
  3272                           ;	Chosen strategy is simple_byte
  3273  06D4  3A00               	xorlw	0	; case 0
  3274  06D5  1903               	skipnz
  3275  06D6  2FF1               	goto	l1698
  3276  06D7  3A6C               	xorlw	108	; case 108
  3277  06D8  1903               	skipnz
  3278  06D9  2EBF               	goto	l169
  3279  06DA  3A19               	xorlw	25	; case 117
  3280  06DB  1903               	skipnz
  3281  06DC  2EC1               	goto	l1634
  3282  06DD  2E1D               	goto	l1696
  3283  06DE                     l172:	
  3284                           
  3285                           ;doprnt.c: 1273: {
  3286                           ;doprnt.c: 1281: if(flag & 0x10)
  3287  06DE  1E3A               	btfss	sprintf@flag,4
  3288  06DF  2EED               	goto	l1644
  3289                           
  3290                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  3291  06E0  083B               	movf	sprintf@ap,w
  3292  06E1  0086               	movwf	6
  3293  06E2  0187               	clrf	7
  3294  06E3  3F40               	moviw [0]fsr1
  3295  06E4  00BC               	movwf	sprintf@val
  3296  06E5  3F41               	moviw [1]fsr1
  3297  06E6  00BD               	movwf	sprintf@val+1
  3298  06E7  3F42               	moviw [2]fsr1
  3299  06E8  00BE               	movwf	sprintf@val+2
  3300  06E9  3F43               	moviw [3]fsr1
  3301  06EA  00BF               	movwf	sprintf@val+3
  3302  06EB  3004               	movlw	4
  3303  06EC  2EFB               	goto	L1
  3304  06ED                     l1644:	
  3305                           
  3306                           ;doprnt.c: 1283: else
  3307                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  3308  06ED  083B               	movf	sprintf@ap,w
  3309  06EE  0086               	movwf	6
  3310  06EF  0187               	clrf	7
  3311  06F0  3F40               	moviw [0]fsr1
  3312  06F1  00B4               	movwf	??_sprintf
  3313  06F2  3F41               	moviw [1]fsr1
  3314  06F3  00B5               	movwf	??_sprintf+1
  3315  06F4  0834               	movf	??_sprintf,w
  3316  06F5  00BC               	movwf	sprintf@val
  3317  06F6  0835               	movf	??_sprintf+1,w
  3318  06F7  00BD               	movwf	sprintf@val+1
  3319  06F8  01BE               	clrf	sprintf@val+2
  3320  06F9  01BF               	clrf	sprintf@val+3
  3321  06FA  3002               	movlw	2
  3322  06FB                     L1:	
  3323  06FB  00B4               	movwf	??_sprintf
  3324  06FC  0834               	movf	??_sprintf,w
  3325  06FD  07BB               	addwf	sprintf@ap,f
  3326                           
  3327                           ;doprnt.c: 1287: }
  3328                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  3329  06FE  0843               	movf	sprintf@prec,w
  3330  06FF  0444               	iorwf	sprintf@prec+1,w
  3331  0700  1D03               	btfss	3,2
  3332  0701  2F0C               	goto	l1654
  3333  0702  083F               	movf	sprintf@val+3,w
  3334  0703  043E               	iorwf	sprintf@val+2,w
  3335  0704  043D               	iorwf	sprintf@val+1,w
  3336  0705  043C               	iorwf	sprintf@val,w
  3337  0706  1D03               	skipz
  3338  0707  2F0C               	goto	l1654
  3339                           
  3340                           ;doprnt.c: 1291: prec++;
  3341  0708  3001               	movlw	1
  3342  0709  07C3               	addwf	sprintf@prec,f
  3343  070A  3000               	movlw	0
  3344  070B  3DC4               	addwfc	sprintf@prec+1,f
  3345  070C                     l1654:	
  3346                           
  3347                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3348  070C  01C5               	clrf	sprintf@c
  3349  070D  0AC5               	incf	sprintf@c,f
  3350  070E  300A               	movlw	10
  3351  070F  0645               	xorwf	sprintf@c,w
  3352  0710  1903               	btfsc	3,2
  3353  0711  2F3F               	goto	l1666
  3354  0712                     l1660:	
  3355                           
  3356                           ;doprnt.c: 1306: if(val < dpowers[c])
  3357  0712  0845               	movf	sprintf@c,w
  3358  0713  00B4               	movwf	??_sprintf
  3359  0714  01B5               	clrf	??_sprintf+1
  3360  0715  35B4               	lslf	??_sprintf,f
  3361  0716  0DB5               	rlf	??_sprintf+1,f
  3362  0717  35B4               	lslf	??_sprintf,f
  3363  0718  0DB5               	rlf	??_sprintf+1,f
  3364  0719  3000               	movlw	low (_dpowers| (0+32768))
  3365  071A  0734               	addwf	??_sprintf,w
  3366  071B  0084               	movwf	4
  3367  071C  3088               	movlw	high (_dpowers| (0+32768))
  3368  071D  3D35               	addwfc	??_sprintf+1,w
  3369  071E  0085               	movwf	5
  3370  071F  3F00               	moviw [0]fsr0
  3371  0720  00B6               	movwf	??_sprintf+2
  3372  0721  3F01               	moviw [1]fsr0
  3373  0722  00B7               	movwf	??_sprintf+3
  3374  0723  3F02               	moviw [2]fsr0
  3375  0724  00B8               	movwf	??_sprintf+4
  3376  0725  3F03               	moviw [3]fsr0
  3377  0726  00B9               	movwf	??_sprintf+5
  3378  0727  0839               	movf	??_sprintf+5,w
  3379  0728  023F               	subwf	sprintf@val+3,w
  3380  0729  1D03               	skipz
  3381  072A  2F35               	goto	u2195
  3382  072B  0838               	movf	??_sprintf+4,w
  3383  072C  023E               	subwf	sprintf@val+2,w
  3384  072D  1D03               	skipz
  3385  072E  2F35               	goto	u2195
  3386  072F  0837               	movf	??_sprintf+3,w
  3387  0730  023D               	subwf	sprintf@val+1,w
  3388  0731  1D03               	skipz
  3389  0732  2F35               	goto	u2195
  3390  0733  0836               	movf	??_sprintf+2,w
  3391  0734  023C               	subwf	sprintf@val,w
  3392  0735                     u2195:	
  3393  0735  1C03               	btfss	3,0
  3394  0736  2F3F               	goto	l1666
  3395                           
  3396                           ;doprnt.c: 1307: break;
  3397  0737  3001               	movlw	1
  3398  0738  00B4               	movwf	??_sprintf
  3399  0739  0834               	movf	??_sprintf,w
  3400  073A  07C5               	addwf	sprintf@c,f
  3401  073B  300A               	movlw	10
  3402  073C  0645               	xorwf	sprintf@c,w
  3403  073D  1D03               	btfss	3,2
  3404  073E  2F12               	goto	l1660
  3405  073F                     l1666:	
  3406                           
  3407                           ;doprnt.c: 1339: if(c < prec)
  3408  073F  0845               	movf	sprintf@c,w
  3409  0740  00B4               	movwf	??_sprintf
  3410  0741  01B5               	clrf	??_sprintf+1
  3411  0742  1BB4               	btfsc	??_sprintf,7
  3412  0743  03B5               	decf	??_sprintf+1,f
  3413  0744  0835               	movf	??_sprintf+1,w
  3414  0745  3A80               	xorlw	128
  3415  0746  00B6               	movwf	??_sprintf+2
  3416  0747  0844               	movf	sprintf@prec+1,w
  3417  0748  3A80               	xorlw	128
  3418  0749  0236               	subwf	??_sprintf+2,w
  3419  074A  1D03               	skipz
  3420  074B  2F4E               	goto	u2215
  3421  074C  0843               	movf	sprintf@prec,w
  3422  074D  0234               	subwf	??_sprintf,w
  3423  074E                     u2215:	
  3424  074E  1803               	skipnc
  3425  074F  2F56               	goto	l1670
  3426                           
  3427                           ;doprnt.c: 1340: c = prec;
  3428  0750  0020               	movlb	0	; select bank0
  3429  0751  0843               	movf	sprintf@prec,w
  3430  0752  00B4               	movwf	??_sprintf
  3431  0753  0834               	movf	??_sprintf,w
  3432  0754  00C5               	movwf	sprintf@c
  3433  0755  2F6E               	goto	l1674
  3434  0756                     l1670:	
  3435                           
  3436                           ;doprnt.c: 1341: else if(prec < c)
  3437  0756  0020               	movlb	0	; select bank0
  3438  0757  0845               	movf	sprintf@c,w
  3439  0758  00B4               	movwf	??_sprintf
  3440  0759  01B5               	clrf	??_sprintf+1
  3441  075A  1BB4               	btfsc	??_sprintf,7
  3442  075B  03B5               	decf	??_sprintf+1,f
  3443  075C  0844               	movf	sprintf@prec+1,w
  3444  075D  3A80               	xorlw	128
  3445  075E  00B6               	movwf	??_sprintf+2
  3446  075F  0835               	movf	??_sprintf+1,w
  3447  0760  3A80               	xorlw	128
  3448  0761  0236               	subwf	??_sprintf+2,w
  3449  0762  1D03               	skipz
  3450  0763  2F66               	goto	u2225
  3451  0764  0834               	movf	??_sprintf,w
  3452  0765  0243               	subwf	sprintf@prec,w
  3453  0766                     u2225:	
  3454  0766  1803               	skipnc
  3455  0767  2F6E               	goto	l1674
  3456                           
  3457                           ;doprnt.c: 1342: prec = c;
  3458  0768  0020               	movlb	0	; select bank0
  3459  0769  0845               	movf	sprintf@c,w
  3460  076A  00C3               	movwf	sprintf@prec
  3461  076B  01C4               	clrf	sprintf@prec+1
  3462  076C  1BC3               	btfsc	sprintf@prec,7
  3463  076D  03C4               	decf	sprintf@prec+1,f
  3464  076E                     l1674:	
  3465                           
  3466                           ;doprnt.c: 1381: if(width > c)
  3467  076E  0020               	movlb	0	; select bank0
  3468  076F  0845               	movf	sprintf@c,w
  3469  0770  00B4               	movwf	??_sprintf
  3470  0771  01B5               	clrf	??_sprintf+1
  3471  0772  1BB4               	btfsc	??_sprintf,7
  3472  0773  03B5               	decf	??_sprintf+1,f
  3473  0774  0835               	movf	??_sprintf+1,w
  3474  0775  3A80               	xorlw	128
  3475  0776  00B6               	movwf	??_sprintf+2
  3476  0777  0842               	movf	sprintf@width+1,w
  3477  0778  3A80               	xorlw	128
  3478  0779  0236               	subwf	??_sprintf+2,w
  3479  077A  1D03               	skipz
  3480  077B  2F7E               	goto	u2235
  3481  077C  0841               	movf	sprintf@width,w
  3482  077D  0234               	subwf	??_sprintf,w
  3483  077E                     u2235:	
  3484  077E  1803               	skipnc
  3485  077F  2F8B               	goto	l1678
  3486                           
  3487                           ;doprnt.c: 1382: width -= c;
  3488  0780  0020               	movlb	0	; select bank0
  3489  0781  0845               	movf	sprintf@c,w
  3490  0782  00B4               	movwf	??_sprintf
  3491  0783  01B5               	clrf	??_sprintf+1
  3492  0784  1BB4               	btfsc	??_sprintf,7
  3493  0785  03B5               	decf	??_sprintf+1,f
  3494  0786  0834               	movf	??_sprintf,w
  3495  0787  02C1               	subwf	sprintf@width,f
  3496  0788  0835               	movf	??_sprintf+1,w
  3497  0789  3BC2               	subwfb	sprintf@width+1,f
  3498  078A  2F8E               	goto	l1680
  3499  078B                     l1678:	
  3500                           
  3501                           ;doprnt.c: 1383: else
  3502                           ;doprnt.c: 1384: width = 0;
  3503  078B  0020               	movlb	0	; select bank0
  3504  078C  01C1               	clrf	sprintf@width
  3505  078D  01C2               	clrf	sprintf@width+1
  3506  078E                     l1680:	
  3507                           
  3508                           ;doprnt.c: 1422: {
  3509                           ;doprnt.c: 1424: if(width
  3510                           ;doprnt.c: 1428: )
  3511  078E  0841               	movf	sprintf@width,w
  3512  078F  0442               	iorwf	sprintf@width+1,w
  3513  0790  1903               	btfsc	3,2
  3514  0791  2FE6               	goto	l1694
  3515                           
  3516                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  3517                           
  3518                           ;doprnt.c: 1429: do
  3519  0792  3020               	movlw	32
  3520  0793  00B4               	movwf	??_sprintf
  3521  0794  0840               	movf	sprintf@sp,w
  3522  0795  0086               	movwf	6
  3523  0796  0187               	clrf	7
  3524  0797  0834               	movf	??_sprintf,w
  3525  0798  0081               	movwf	1
  3526  0799  3001               	movlw	1
  3527  079A  00B4               	movwf	??_sprintf
  3528  079B  0834               	movf	??_sprintf,w
  3529  079C  07C0               	addwf	sprintf@sp,f
  3530                           
  3531                           ;doprnt.c: 1431: while(--width);
  3532  079D  30FF               	movlw	255
  3533  079E  07C1               	addwf	sprintf@width,f
  3534  079F  30FF               	movlw	255
  3535  07A0  3DC2               	addwfc	sprintf@width+1,f
  3536  07A1  2F8E               	goto	l1680
  3537  07A2                     l1688:	
  3538                           ;doprnt.c: 1469: }
  3539                           ;doprnt.c: 1474: while(prec--) {
  3540                           
  3541                           
  3542                           ;doprnt.c: 1478: {
  3543                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  3544  07A2  3000               	movlw	0
  3545  07A3  00A3               	movwf	___llmod@divisor+3
  3546  07A4  3000               	movlw	0
  3547  07A5  00A2               	movwf	___llmod@divisor+2
  3548  07A6  3000               	movlw	0
  3549  07A7  00A1               	movwf	___llmod@divisor+1
  3550  07A8  300A               	movlw	10
  3551  07A9  00A0               	movwf	___llmod@divisor
  3552  07AA  0844               	movf	sprintf@prec+1,w
  3553  07AB  0085               	movwf	5
  3554  07AC  0843               	movf	sprintf@prec,w
  3555  07AD  0084               	movwf	4
  3556  07AE  3584               	lslf	4,f
  3557  07AF  0D85               	rlf	5,f
  3558  07B0  3584               	lslf	4,f
  3559  07B1  0D85               	rlf	5,f
  3560  07B2  3000               	movlw	low (_dpowers| (0+32768))
  3561  07B3  0784               	addwf	4,f
  3562  07B4  3088               	movlw	high (_dpowers| (0+32768))
  3563  07B5  3D85               	addwfc	5,f
  3564  07B6  3F00               	moviw [0]fsr0
  3565  07B7  00F0               	movwf	___lldiv@divisor
  3566  07B8  3F01               	moviw [1]fsr0
  3567  07B9  00F1               	movwf	___lldiv@divisor+1
  3568  07BA  3F02               	moviw [2]fsr0
  3569  07BB  00F2               	movwf	___lldiv@divisor+2
  3570  07BC  3F03               	moviw [3]fsr0
  3571  07BD  00F3               	movwf	___lldiv@divisor+3
  3572  07BE  083F               	movf	sprintf@val+3,w
  3573  07BF  00F7               	movwf	___lldiv@dividend+3
  3574  07C0  083E               	movf	sprintf@val+2,w
  3575  07C1  00F6               	movwf	___lldiv@dividend+2
  3576  07C2  083D               	movf	sprintf@val+1,w
  3577  07C3  00F5               	movwf	___lldiv@dividend+1
  3578  07C4  083C               	movf	sprintf@val,w
  3579  07C5  00F4               	movwf	___lldiv@dividend
  3580  07C6  3180  20D8  3186   	fcall	___lldiv
  3581  07C9  0873               	movf	?___lldiv+3,w
  3582  07CA  0020               	movlb	0	; select bank0
  3583  07CB  00A7               	movwf	___llmod@dividend+3
  3584  07CC  0872               	movf	?___lldiv+2,w
  3585  07CD  00A6               	movwf	___llmod@dividend+2
  3586  07CE  0871               	movf	?___lldiv+1,w
  3587  07CF  00A5               	movwf	___llmod@dividend+1
  3588  07D0  0870               	movf	?___lldiv,w
  3589  07D1  00A4               	movwf	___llmod@dividend
  3590  07D2  3180  204E  3186   	fcall	___llmod
  3591  07D5  0020               	movlb	0	; select bank0
  3592  07D6  0820               	movf	?___llmod,w
  3593  07D7  3E30               	addlw	48
  3594  07D8  00B4               	movwf	??_sprintf
  3595  07D9  0834               	movf	??_sprintf,w
  3596  07DA  00C5               	movwf	sprintf@c
  3597                           
  3598                           ;doprnt.c: 1523: }
  3599                           ;doprnt.c: 1524: ((*sp++ = (c)));
  3600  07DB  0845               	movf	sprintf@c,w
  3601  07DC  00B4               	movwf	??_sprintf
  3602  07DD  0840               	movf	sprintf@sp,w
  3603  07DE  0086               	movwf	6
  3604  07DF  0187               	clrf	7
  3605  07E0  0834               	movf	??_sprintf,w
  3606  07E1  0081               	movwf	1
  3607  07E2  3001               	movlw	1
  3608  07E3  00B4               	movwf	??_sprintf
  3609  07E4  0834               	movf	??_sprintf,w
  3610  07E5  07C0               	addwf	sprintf@sp,f
  3611  07E6                     l1694:	
  3612  07E6  30FF               	movlw	255
  3613  07E7  07C3               	addwf	sprintf@prec,f
  3614  07E8  30FF               	movlw	255
  3615  07E9  3DC4               	addwfc	sprintf@prec+1,f
  3616  07EA  0A43               	incf	sprintf@prec,w
  3617  07EB  1D03               	skipz
  3618  07EC  2FA2               	goto	l1688
  3619  07ED  0A44               	incf	sprintf@prec+1,w
  3620  07EE  1903               	btfsc	3,2
  3621  07EF  2E1D               	goto	l1696
  3622  07F0  2FA2               	goto	l1688
  3623  07F1                     l1698:	
  3624                           ;doprnt.c: 1525: }
  3625                           ;doprnt.c: 1533: }
  3626                           ;doprnt.c: 1535: alldone:
  3627                           
  3628                           
  3629                           ;doprnt.c: 1538: *sp = 0;
  3630  07F1  0840               	movf	sprintf@sp,w
  3631  07F2  0086               	movwf	6
  3632  07F3  0187               	clrf	7
  3633  07F4  0181               	clrf	1
  3634  07F5  0008               	return
  3635  07F6                     __end_of_sprintf:	
  3636                           ;doprnt.c: 1540: return 0;
  3637                           ;	Return value of _sprintf is never used
  3638                           
  3639                           
  3640                           	psect	text11
  3641  0E2C                     __ptext11:	
  3642 ;; *************** function _isdigit *****************
  3643 ;; Defined at:
  3644 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\isdigit.c"
  3645 ;; Parameters:    Size  Location     Type
  3646 ;;  c               1    wreg     unsigned char 
  3647 ;; Auto vars:     Size  Location     Type
  3648 ;;  c               1    1[COMMON] unsigned char 
  3649 ;; Return value:  Size  Location     Type
  3650 ;;		None               void
  3651 ;; Registers used:
  3652 ;;		wreg, status,2, status,0
  3653 ;; Tracked objects:
  3654 ;;		On entry : 0/0
  3655 ;;		On exit  : 0/0
  3656 ;;		Unchanged: 0/0
  3657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3659 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3661 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3662 ;;Total ram usage:        2 bytes
  3663 ;; Hardware stack levels used:    1
  3664 ;; This function calls:
  3665 ;;		Nothing
  3666 ;; This function is called by:
  3667 ;;		_sprintf
  3668 ;; This function uses a non-reentrant model
  3669 ;;
  3670                           
  3671                           
  3672                           ;psect for function _isdigit
  3673  0E2C                     _isdigit:	
  3674                           
  3675                           ;incstack = 0
  3676                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3677                           ;isdigit@c stored from wreg
  3678  0E2C  00F1               	movwf	isdigit@c
  3679  0E2D  01F0               	clrf	_isdigit$312
  3680  0E2E  303A               	movlw	58
  3681  0E2F  0271               	subwf	isdigit@c,w
  3682  0E30  1803               	skipnc
  3683  0E31  2E38               	goto	l1398
  3684  0E32  3030               	movlw	48
  3685  0E33  0271               	subwf	isdigit@c,w
  3686  0E34  1C03               	skipc
  3687  0E35  2E38               	goto	l1398
  3688  0E36  01F0               	clrf	_isdigit$312
  3689  0E37  0AF0               	incf	_isdigit$312,f
  3690  0E38                     l1398:	
  3691  0E38  0C70               	rrf	_isdigit$312,w
  3692  0E39  0008               	return
  3693  0E3A                     __end_of_isdigit:	
  3694                           
  3695                           	psect	text12
  3696  0E94                     __ptext12:	
  3697 ;; *************** function ___wmul *****************
  3698 ;; Defined at:
  3699 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  3700 ;; Parameters:    Size  Location     Type
  3701 ;;  multiplier      2    0[COMMON] unsigned int 
  3702 ;;  multiplicand    2    2[COMMON] unsigned int 
  3703 ;; Auto vars:     Size  Location     Type
  3704 ;;  product         2    4[COMMON] unsigned int 
  3705 ;; Return value:  Size  Location     Type
  3706 ;;                  2    0[COMMON] unsigned int 
  3707 ;; Registers used:
  3708 ;;		wreg, status,2, status,0
  3709 ;; Tracked objects:
  3710 ;;		On entry : 0/0
  3711 ;;		On exit  : 0/0
  3712 ;;		Unchanged: 0/0
  3713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3714 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3715 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3717 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3718 ;;Total ram usage:        6 bytes
  3719 ;; Hardware stack levels used:    1
  3720 ;; This function calls:
  3721 ;;		Nothing
  3722 ;; This function is called by:
  3723 ;;		_sprintf
  3724 ;; This function uses a non-reentrant model
  3725 ;;
  3726                           
  3727                           
  3728                           ;psect for function ___wmul
  3729  0E94                     ___wmul:	
  3730                           
  3731                           ;incstack = 0
  3732                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3733  0E94  01F4               	clrf	___wmul@product
  3734  0E95  01F5               	clrf	___wmul@product+1
  3735  0E96                     l1404:	
  3736  0E96  1C70               	btfss	___wmul@multiplier,0
  3737  0E97  2E9C               	goto	l195
  3738  0E98  0872               	movf	___wmul@multiplicand,w
  3739  0E99  07F4               	addwf	___wmul@product,f
  3740  0E9A  0873               	movf	___wmul@multiplicand+1,w
  3741  0E9B  3DF5               	addwfc	___wmul@product+1,f
  3742  0E9C                     l195:	
  3743  0E9C  3001               	movlw	1
  3744  0E9D                     u1575:	
  3745  0E9D  35F2               	lslf	___wmul@multiplicand,f
  3746  0E9E  0DF3               	rlf	___wmul@multiplicand+1,f
  3747  0E9F  0B89               	decfsz	9,f
  3748  0EA0  2E9D               	goto	u1575
  3749  0EA1  3001               	movlw	1
  3750  0EA2                     u1585:	
  3751  0EA2  36F1               	lsrf	___wmul@multiplier+1,f
  3752  0EA3  0CF0               	rrf	___wmul@multiplier,f
  3753  0EA4  0B89               	decfsz	9,f
  3754  0EA5  2EA2               	goto	u1585
  3755  0EA6  0870               	movf	___wmul@multiplier,w
  3756  0EA7  0471               	iorwf	___wmul@multiplier+1,w
  3757  0EA8  1D03               	btfss	3,2
  3758  0EA9  2E96               	goto	l1404
  3759  0EAA  0875               	movf	___wmul@product+1,w
  3760  0EAB  00F1               	movwf	?___wmul+1
  3761  0EAC  0874               	movf	___wmul@product,w
  3762  0EAD  00F0               	movwf	?___wmul
  3763  0EAE  0008               	return
  3764  0EAF                     __end_of___wmul:	
  3765                           
  3766                           	psect	text13
  3767  004E                     __ptext13:	
  3768 ;; *************** function ___llmod *****************
  3769 ;; Defined at:
  3770 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\llmod.c"
  3771 ;; Parameters:    Size  Location     Type
  3772 ;;  divisor         4    0[BANK0 ] unsigned long 
  3773 ;;  dividend        4    4[BANK0 ] unsigned long 
  3774 ;; Auto vars:     Size  Location     Type
  3775 ;;  counter         1    9[BANK0 ] unsigned char 
  3776 ;; Return value:  Size  Location     Type
  3777 ;;                  4    0[BANK0 ] unsigned long 
  3778 ;; Registers used:
  3779 ;;		wreg, status,2, status,0
  3780 ;; Tracked objects:
  3781 ;;		On entry : 0/0
  3782 ;;		On exit  : 0/0
  3783 ;;		Unchanged: 0/0
  3784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3785 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3786 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3787 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3788 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3789 ;;Total ram usage:       10 bytes
  3790 ;; Hardware stack levels used:    1
  3791 ;; This function calls:
  3792 ;;		Nothing
  3793 ;; This function is called by:
  3794 ;;		_sprintf
  3795 ;; This function uses a non-reentrant model
  3796 ;;
  3797                           
  3798                           
  3799                           ;psect for function ___llmod
  3800  004E                     ___llmod:	
  3801                           
  3802                           ;incstack = 0
  3803                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  3804  004E  0020               	movlb	0	; select bank0
  3805  004F  0823               	movf	___llmod@divisor+3,w
  3806  0050  0422               	iorwf	___llmod@divisor+2,w
  3807  0051  0421               	iorwf	___llmod@divisor+1,w
  3808  0052  0420               	iorwf	___llmod@divisor,w
  3809  0053  1903               	skipnz
  3810  0054  2888               	goto	l1526
  3811  0055  01A9               	clrf	___llmod@counter
  3812  0056  0AA9               	incf	___llmod@counter,f
  3813  0057                     l1516:	
  3814  0057  1BA3               	btfsc	___llmod@divisor+3,7
  3815  0058  2865               	goto	l1518
  3816  0059  3001               	movlw	1
  3817  005A                     u1915:	
  3818  005A  35A0               	lslf	___llmod@divisor,f
  3819  005B  0DA1               	rlf	___llmod@divisor+1,f
  3820  005C  0DA2               	rlf	___llmod@divisor+2,f
  3821  005D  0DA3               	rlf	___llmod@divisor+3,f
  3822  005E  0B89               	decfsz	9,f
  3823  005F  285A               	goto	u1915
  3824  0060  3001               	movlw	1
  3825  0061  00A8               	movwf	??___llmod
  3826  0062  0828               	movf	??___llmod,w
  3827  0063  07A9               	addwf	___llmod@counter,f
  3828  0064  2857               	goto	l1516
  3829  0065                     l1518:	
  3830  0065  0823               	movf	___llmod@divisor+3,w
  3831  0066  0227               	subwf	___llmod@dividend+3,w
  3832  0067  1D03               	skipz
  3833  0068  2873               	goto	u1935
  3834  0069  0822               	movf	___llmod@divisor+2,w
  3835  006A  0226               	subwf	___llmod@dividend+2,w
  3836  006B  1D03               	skipz
  3837  006C  2873               	goto	u1935
  3838  006D  0821               	movf	___llmod@divisor+1,w
  3839  006E  0225               	subwf	___llmod@dividend+1,w
  3840  006F  1D03               	skipz
  3841  0070  2873               	goto	u1935
  3842  0071  0820               	movf	___llmod@divisor,w
  3843  0072  0224               	subwf	___llmod@dividend,w
  3844  0073                     u1935:	
  3845  0073  1C03               	skipc
  3846  0074  287D               	goto	l1522
  3847  0075  0820               	movf	___llmod@divisor,w
  3848  0076  02A4               	subwf	___llmod@dividend,f
  3849  0077  0821               	movf	___llmod@divisor+1,w
  3850  0078  3BA5               	subwfb	___llmod@dividend+1,f
  3851  0079  0822               	movf	___llmod@divisor+2,w
  3852  007A  3BA6               	subwfb	___llmod@dividend+2,f
  3853  007B  0823               	movf	___llmod@divisor+3,w
  3854  007C  3BA7               	subwfb	___llmod@dividend+3,f
  3855  007D                     l1522:	
  3856  007D  3001               	movlw	1
  3857  007E                     u1945:	
  3858  007E  36A3               	lsrf	___llmod@divisor+3,f
  3859  007F  0CA2               	rrf	___llmod@divisor+2,f
  3860  0080  0CA1               	rrf	___llmod@divisor+1,f
  3861  0081  0CA0               	rrf	___llmod@divisor,f
  3862  0082  0B89               	decfsz	9,f
  3863  0083  287E               	goto	u1945
  3864  0084  3001               	movlw	1
  3865  0085  02A9               	subwf	___llmod@counter,f
  3866  0086  1D03               	btfss	3,2
  3867  0087  2865               	goto	l1518
  3868  0088                     l1526:	
  3869  0088  0827               	movf	___llmod@dividend+3,w
  3870  0089  00A3               	movwf	?___llmod+3
  3871  008A  0826               	movf	___llmod@dividend+2,w
  3872  008B  00A2               	movwf	?___llmod+2
  3873  008C  0825               	movf	___llmod@dividend+1,w
  3874  008D  00A1               	movwf	?___llmod+1
  3875  008E  0824               	movf	___llmod@dividend,w
  3876  008F  00A0               	movwf	?___llmod
  3877  0090  0008               	return
  3878  0091                     __end_of___llmod:	
  3879                           
  3880                           	psect	text14
  3881  00D8                     __ptext14:	
  3882 ;; *************** function ___lldiv *****************
  3883 ;; Defined at:
  3884 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lldiv.c"
  3885 ;; Parameters:    Size  Location     Type
  3886 ;;  divisor         4    0[COMMON] unsigned long 
  3887 ;;  dividend        4    4[COMMON] unsigned long 
  3888 ;; Auto vars:     Size  Location     Type
  3889 ;;  quotient        4    9[COMMON] unsigned long 
  3890 ;;  counter         1   13[COMMON] unsigned char 
  3891 ;; Return value:  Size  Location     Type
  3892 ;;                  4    0[COMMON] unsigned long 
  3893 ;; Registers used:
  3894 ;;		wreg, status,2, status,0
  3895 ;; Tracked objects:
  3896 ;;		On entry : 0/0
  3897 ;;		On exit  : 0/0
  3898 ;;		Unchanged: 0/0
  3899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3900 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3901 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3902 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3903 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3904 ;;Total ram usage:       14 bytes
  3905 ;; Hardware stack levels used:    1
  3906 ;; This function calls:
  3907 ;;		Nothing
  3908 ;; This function is called by:
  3909 ;;		_sprintf
  3910 ;; This function uses a non-reentrant model
  3911 ;;
  3912                           
  3913                           
  3914                           ;psect for function ___lldiv
  3915  00D8                     ___lldiv:	
  3916                           
  3917                           ;incstack = 0
  3918                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3919  00D8  3000               	movlw	0
  3920  00D9  00FC               	movwf	___lldiv@quotient+3
  3921  00DA  3000               	movlw	0
  3922  00DB  00FB               	movwf	___lldiv@quotient+2
  3923  00DC  3000               	movlw	0
  3924  00DD  00FA               	movwf	___lldiv@quotient+1
  3925  00DE  3000               	movlw	0
  3926  00DF  00F9               	movwf	___lldiv@quotient
  3927  00E0  0873               	movf	___lldiv@divisor+3,w
  3928  00E1  0472               	iorwf	___lldiv@divisor+2,w
  3929  00E2  0471               	iorwf	___lldiv@divisor+1,w
  3930  00E3  0470               	iorwf	___lldiv@divisor,w
  3931  00E4  1903               	skipnz
  3932  00E5  2921               	goto	l1506
  3933  00E6  01FD               	clrf	___lldiv@counter
  3934  00E7  0AFD               	incf	___lldiv@counter,f
  3935  00E8                     l1492:	
  3936  00E8  1BF3               	btfsc	___lldiv@divisor+3,7
  3937  00E9  28F6               	goto	l1494
  3938  00EA  3001               	movlw	1
  3939  00EB                     u1845:	
  3940  00EB  35F0               	lslf	___lldiv@divisor,f
  3941  00EC  0DF1               	rlf	___lldiv@divisor+1,f
  3942  00ED  0DF2               	rlf	___lldiv@divisor+2,f
  3943  00EE  0DF3               	rlf	___lldiv@divisor+3,f
  3944  00EF  0B89               	decfsz	9,f
  3945  00F0  28EB               	goto	u1845
  3946  00F1  3001               	movlw	1
  3947  00F2  00F8               	movwf	??___lldiv
  3948  00F3  0878               	movf	??___lldiv,w
  3949  00F4  07FD               	addwf	___lldiv@counter,f
  3950  00F5  28E8               	goto	l1492
  3951  00F6                     l1494:	
  3952  00F6  3001               	movlw	1
  3953  00F7                     u1865:	
  3954  00F7  35F9               	lslf	___lldiv@quotient,f
  3955  00F8  0DFA               	rlf	___lldiv@quotient+1,f
  3956  00F9  0DFB               	rlf	___lldiv@quotient+2,f
  3957  00FA  0DFC               	rlf	___lldiv@quotient+3,f
  3958  00FB  0B89               	decfsz	9,f
  3959  00FC  28F7               	goto	u1865
  3960  00FD  0873               	movf	___lldiv@divisor+3,w
  3961  00FE  0277               	subwf	___lldiv@dividend+3,w
  3962  00FF  1D03               	skipz
  3963  0100  290B               	goto	u1875
  3964  0101  0872               	movf	___lldiv@divisor+2,w
  3965  0102  0276               	subwf	___lldiv@dividend+2,w
  3966  0103  1D03               	skipz
  3967  0104  290B               	goto	u1875
  3968  0105  0871               	movf	___lldiv@divisor+1,w
  3969  0106  0275               	subwf	___lldiv@dividend+1,w
  3970  0107  1D03               	skipz
  3971  0108  290B               	goto	u1875
  3972  0109  0870               	movf	___lldiv@divisor,w
  3973  010A  0274               	subwf	___lldiv@dividend,w
  3974  010B                     u1875:	
  3975  010B  1C03               	skipc
  3976  010C  2916               	goto	l1502
  3977  010D  0870               	movf	___lldiv@divisor,w
  3978  010E  02F4               	subwf	___lldiv@dividend,f
  3979  010F  0871               	movf	___lldiv@divisor+1,w
  3980  0110  3BF5               	subwfb	___lldiv@dividend+1,f
  3981  0111  0872               	movf	___lldiv@divisor+2,w
  3982  0112  3BF6               	subwfb	___lldiv@dividend+2,f
  3983  0113  0873               	movf	___lldiv@divisor+3,w
  3984  0114  3BF7               	subwfb	___lldiv@dividend+3,f
  3985  0115  1479               	bsf	___lldiv@quotient,0
  3986  0116                     l1502:	
  3987  0116  3001               	movlw	1
  3988  0117                     u1885:	
  3989  0117  36F3               	lsrf	___lldiv@divisor+3,f
  3990  0118  0CF2               	rrf	___lldiv@divisor+2,f
  3991  0119  0CF1               	rrf	___lldiv@divisor+1,f
  3992  011A  0CF0               	rrf	___lldiv@divisor,f
  3993  011B  0B89               	decfsz	9,f
  3994  011C  2917               	goto	u1885
  3995  011D  3001               	movlw	1
  3996  011E  02FD               	subwf	___lldiv@counter,f
  3997  011F  1D03               	btfss	3,2
  3998  0120  28F6               	goto	l1494
  3999  0121                     l1506:	
  4000  0121  087C               	movf	___lldiv@quotient+3,w
  4001  0122  00F3               	movwf	?___lldiv+3
  4002  0123  087B               	movf	___lldiv@quotient+2,w
  4003  0124  00F2               	movwf	?___lldiv+2
  4004  0125  087A               	movf	___lldiv@quotient+1,w
  4005  0126  00F1               	movwf	?___lldiv+1
  4006  0127  0879               	movf	___lldiv@quotient,w
  4007  0128  00F0               	movwf	?___lldiv
  4008  0129  0008               	return
  4009  012A                     __end_of___lldiv:	
  4010                           
  4011                           	psect	text15
  4012  0F0F                     __ptext15:	
  4013 ;; *************** function ___lltoft *****************
  4014 ;; Defined at:
  4015 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lltoft.c"
  4016 ;; Parameters:    Size  Location     Type
  4017 ;;  c               4    8[COMMON] unsigned long 
  4018 ;; Auto vars:     Size  Location     Type
  4019 ;;  exp             1   13[COMMON] unsigned char 
  4020 ;; Return value:  Size  Location     Type
  4021 ;;                  3    8[COMMON] float 
  4022 ;; Registers used:
  4023 ;;		wreg, status,2, status,0, pclath, cstack
  4024 ;; Tracked objects:
  4025 ;;		On entry : 0/0
  4026 ;;		On exit  : 0/0
  4027 ;;		Unchanged: 0/0
  4028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4029 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4030 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4031 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4032 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4033 ;;Total ram usage:        6 bytes
  4034 ;; Hardware stack levels used:    1
  4035 ;; Hardware stack levels required when called:    1
  4036 ;; This function calls:
  4037 ;;		___ftpack
  4038 ;; This function is called by:
  4039 ;;		_ftoa
  4040 ;; This function uses a non-reentrant model
  4041 ;;
  4042                           
  4043                           
  4044                           ;psect for function ___lltoft
  4045  0F0F                     ___lltoft:	
  4046                           
  4047                           ;incstack = 0
  4048                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  4049  0F0F  308E               	movlw	142
  4050  0F10  00FC               	movwf	??___lltoft
  4051  0F11  087C               	movf	??___lltoft,w
  4052  0F12  00FD               	movwf	___lltoft@exp
  4053  0F13                     l1864:	
  4054  0F13  30FF               	movlw	255
  4055  0F14  057B               	andwf	___lltoft@c+3,w
  4056  0F15  1903               	btfsc	3,2
  4057  0F16  2F23               	goto	l1866
  4058  0F17  3001               	movlw	1
  4059  0F18                     u2585:	
  4060  0F18  36FB               	lsrf	___lltoft@c+3,f
  4061  0F19  0CFA               	rrf	___lltoft@c+2,f
  4062  0F1A  0CF9               	rrf	___lltoft@c+1,f
  4063  0F1B  0CF8               	rrf	___lltoft@c,f
  4064  0F1C  0B89               	decfsz	9,f
  4065  0F1D  2F18               	goto	u2585
  4066  0F1E  3001               	movlw	1
  4067  0F1F  00FC               	movwf	??___lltoft
  4068  0F20  087C               	movf	??___lltoft,w
  4069  0F21  07FD               	addwf	___lltoft@exp,f
  4070  0F22  2F13               	goto	l1864
  4071  0F23                     l1866:	
  4072  0F23  0878               	movf	___lltoft@c,w
  4073  0F24  00F0               	movwf	___ftpack@arg
  4074  0F25  0879               	movf	___lltoft@c+1,w
  4075  0F26  00F1               	movwf	___ftpack@arg+1
  4076  0F27  087A               	movf	___lltoft@c+2,w
  4077  0F28  00F2               	movwf	___ftpack@arg+2
  4078  0F29  087D               	movf	___lltoft@exp,w
  4079  0F2A  00FC               	movwf	??___lltoft
  4080  0F2B  087C               	movf	??___lltoft,w
  4081  0F2C  00F3               	movwf	___ftpack@exp
  4082  0F2D  01F4               	clrf	___ftpack@sign
  4083  0F2E  3181  218C         	fcall	___ftpack
  4084  0F30  0870               	movf	?___ftpack,w
  4085  0F31  00F8               	movwf	?___lltoft
  4086  0F32  0871               	movf	?___ftpack+1,w
  4087  0F33  00F9               	movwf	?___lltoft+1
  4088  0F34  0872               	movf	?___ftpack+2,w
  4089  0F35  00FA               	movwf	?___lltoft+2
  4090  0F36  0008               	return
  4091  0F37                     __end_of___lltoft:	
  4092                           
  4093                           	psect	text16
  4094  01F0                     __ptext16:	
  4095 ;; *************** function ___fttol *****************
  4096 ;; Defined at:
  4097 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  4098 ;; Parameters:    Size  Location     Type
  4099 ;;  f1              3   10[BANK0 ] float 
  4100 ;; Auto vars:     Size  Location     Type
  4101 ;;  lval            4   19[BANK0 ] unsigned long 
  4102 ;;  exp1            1   23[BANK0 ] unsigned char 
  4103 ;;  sign1           1   18[BANK0 ] unsigned char 
  4104 ;; Return value:  Size  Location     Type
  4105 ;;                  4   10[BANK0 ] long 
  4106 ;; Registers used:
  4107 ;;		wreg, status,2, status,0
  4108 ;; Tracked objects:
  4109 ;;		On entry : 0/0
  4110 ;;		On exit  : 0/0
  4111 ;;		Unchanged: 0/0
  4112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4113 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4114 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4115 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4116 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4117 ;;Total ram usage:       14 bytes
  4118 ;; Hardware stack levels used:    1
  4119 ;; This function calls:
  4120 ;;		Nothing
  4121 ;; This function is called by:
  4122 ;;		_ftoa
  4123 ;; This function uses a non-reentrant model
  4124 ;;
  4125                           
  4126                           
  4127                           ;psect for function ___fttol
  4128  01F0                     ___fttol:	
  4129                           
  4130                           ;incstack = 0
  4131                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  4132  01F0  0020               	movlb	0	; select bank0
  4133  01F1  082A               	movf	___fttol@f1,w
  4134  01F2  00AE               	movwf	??___fttol
  4135  01F3  082B               	movf	___fttol@f1+1,w
  4136  01F4  00AF               	movwf	??___fttol+1
  4137  01F5  082C               	movf	___fttol@f1+2,w
  4138  01F6  00B0               	movwf	??___fttol+2
  4139  01F7  1003               	clrc
  4140  01F8  0D2F               	rlf	??___fttol+1,w
  4141  01F9  0D30               	rlf	??___fttol+2,w
  4142  01FA  00B1               	movwf	??___fttol+3
  4143  01FB  0831               	movf	??___fttol+3,w
  4144  01FC  00B7               	movwf	___fttol@exp1
  4145  01FD  0837               	movf	___fttol@exp1,w
  4146  01FE  1D03               	btfss	3,2
  4147  01FF  2A09               	goto	l1794
  4148  0200  3000               	movlw	0
  4149  0201  00AD               	movwf	?___fttol+3
  4150  0202  3000               	movlw	0
  4151  0203  00AC               	movwf	?___fttol+2
  4152  0204  3000               	movlw	0
  4153  0205  00AB               	movwf	?___fttol+1
  4154  0206  3000               	movlw	0
  4155  0207  00AA               	movwf	?___fttol
  4156  0208  0008               	return
  4157  0209                     l1794:	
  4158  0209  082A               	movf	___fttol@f1,w
  4159  020A  00AE               	movwf	??___fttol
  4160  020B  082B               	movf	___fttol@f1+1,w
  4161  020C  00AF               	movwf	??___fttol+1
  4162  020D  082C               	movf	___fttol@f1+2,w
  4163  020E  00B0               	movwf	??___fttol+2
  4164  020F  3017               	movlw	23
  4165  0210                     u2465:	
  4166  0210  36B0               	lsrf	??___fttol+2,f
  4167  0211  0CAF               	rrf	??___fttol+1,f
  4168  0212  0CAE               	rrf	??___fttol,f
  4169  0213  0B89               	decfsz	9,f
  4170  0214  2A10               	goto	u2465
  4171  0215  082E               	movf	??___fttol,w
  4172  0216  00B1               	movwf	??___fttol+3
  4173  0217  0831               	movf	??___fttol+3,w
  4174  0218  00B2               	movwf	___fttol@sign1
  4175  0219  17AB               	bsf	___fttol@f1+1,7
  4176  021A  30FF               	movlw	255
  4177  021B  05AA               	andwf	___fttol@f1,f
  4178  021C  30FF               	movlw	255
  4179  021D  05AB               	andwf	___fttol@f1+1,f
  4180  021E  3000               	movlw	0
  4181  021F  05AC               	andwf	___fttol@f1+2,f
  4182  0220  082A               	movf	___fttol@f1,w
  4183  0221  00B3               	movwf	___fttol@lval
  4184  0222  082B               	movf	___fttol@f1+1,w
  4185  0223  00B4               	movwf	___fttol@lval+1
  4186  0224  082C               	movf	___fttol@f1+2,w
  4187  0225  00B5               	movwf	___fttol@lval+2
  4188  0226  01B6               	clrf	___fttol@lval+3
  4189  0227  308E               	movlw	142
  4190  0228  02B7               	subwf	___fttol@exp1,f
  4191  0229  1FB7               	btfss	___fttol@exp1,7
  4192  022A  2A47               	goto	l1814
  4193  022B  0837               	movf	___fttol@exp1,w
  4194  022C  3A80               	xorlw	128
  4195  022D  3E8F               	addlw	143
  4196  022E  1803               	skipnc
  4197  022F  2A39               	goto	l1812
  4198  0230  3000               	movlw	0
  4199  0231  00AD               	movwf	?___fttol+3
  4200  0232  3000               	movlw	0
  4201  0233  00AC               	movwf	?___fttol+2
  4202  0234  3000               	movlw	0
  4203  0235  00AB               	movwf	?___fttol+1
  4204  0236  3000               	movlw	0
  4205  0237  00AA               	movwf	?___fttol
  4206  0238  0008               	return
  4207  0239                     l1812:	
  4208  0239  3001               	movlw	1
  4209  023A                     u2495:	
  4210  023A  36B6               	lsrf	___fttol@lval+3,f
  4211  023B  0CB5               	rrf	___fttol@lval+2,f
  4212  023C  0CB4               	rrf	___fttol@lval+1,f
  4213  023D  0CB3               	rrf	___fttol@lval,f
  4214  023E  0B89               	decfsz	9,f
  4215  023F  2A3A               	goto	u2495
  4216  0240  3001               	movlw	1
  4217  0241  00AE               	movwf	??___fttol
  4218  0242  082E               	movf	??___fttol,w
  4219  0243  07B7               	addwf	___fttol@exp1,f
  4220  0244  1903               	btfsc	3,2
  4221  0245  2A60               	goto	l1822
  4222  0246  2A39               	goto	l1812
  4223  0247                     l1814:	
  4224  0247  3018               	movlw	24
  4225  0248  0237               	subwf	___fttol@exp1,w
  4226  0249  1C03               	skipc
  4227  024A  2A5D               	goto	l455
  4228  024B  3000               	movlw	0
  4229  024C  00AD               	movwf	?___fttol+3
  4230  024D  3000               	movlw	0
  4231  024E  00AC               	movwf	?___fttol+2
  4232  024F  3000               	movlw	0
  4233  0250  00AB               	movwf	?___fttol+1
  4234  0251  3000               	movlw	0
  4235  0252  00AA               	movwf	?___fttol
  4236  0253  0008               	return
  4237  0254                     l1820:	
  4238  0254  3001               	movlw	1
  4239  0255                     u2525:	
  4240  0255  35B3               	lslf	___fttol@lval,f
  4241  0256  0DB4               	rlf	___fttol@lval+1,f
  4242  0257  0DB5               	rlf	___fttol@lval+2,f
  4243  0258  0DB6               	rlf	___fttol@lval+3,f
  4244  0259  0B89               	decfsz	9,f
  4245  025A  2A55               	goto	u2525
  4246  025B  3001               	movlw	1
  4247  025C  02B7               	subwf	___fttol@exp1,f
  4248  025D                     l455:	
  4249  025D  0837               	movf	___fttol@exp1,w
  4250  025E  1D03               	btfss	3,2
  4251  025F  2A54               	goto	l1820
  4252  0260                     l1822:	
  4253  0260  0832               	movf	___fttol@sign1,w
  4254  0261  1903               	btfsc	3,2
  4255  0262  2A6E               	goto	l1826
  4256  0263  09B3               	comf	___fttol@lval,f
  4257  0264  09B4               	comf	___fttol@lval+1,f
  4258  0265  09B5               	comf	___fttol@lval+2,f
  4259  0266  09B6               	comf	___fttol@lval+3,f
  4260  0267  0AB3               	incf	___fttol@lval,f
  4261  0268  1903               	skipnz
  4262  0269  0AB4               	incf	___fttol@lval+1,f
  4263  026A  1903               	skipnz
  4264  026B  0AB5               	incf	___fttol@lval+2,f
  4265  026C  1903               	skipnz
  4266  026D  0AB6               	incf	___fttol@lval+3,f
  4267  026E                     l1826:	
  4268  026E  0836               	movf	___fttol@lval+3,w
  4269  026F  00AD               	movwf	?___fttol+3
  4270  0270  0835               	movf	___fttol@lval+2,w
  4271  0271  00AC               	movwf	?___fttol+2
  4272  0272  0834               	movf	___fttol@lval+1,w
  4273  0273  00AB               	movwf	?___fttol+1
  4274  0274  0833               	movf	___fttol@lval,w
  4275  0275  00AA               	movwf	?___fttol
  4276  0276  0008               	return
  4277  0277                     __end_of___fttol:	
  4278                           
  4279                           	psect	text17
  4280  0ECB                     __ptext17:	
  4281 ;; *************** function ___ftsub *****************
  4282 ;; Defined at:
  4283 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
  4284 ;; Parameters:    Size  Location     Type
  4285 ;;  f2              3    7[BANK0 ] float 
  4286 ;;  f1              3   10[BANK0 ] float 
  4287 ;; Auto vars:     Size  Location     Type
  4288 ;;		None
  4289 ;; Return value:  Size  Location     Type
  4290 ;;                  3    7[BANK0 ] float 
  4291 ;; Registers used:
  4292 ;;		wreg, status,2, status,0, pclath, cstack
  4293 ;; Tracked objects:
  4294 ;;		On entry : 0/0
  4295 ;;		On exit  : 0/0
  4296 ;;		Unchanged: 0/0
  4297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4298 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4301 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4302 ;;Total ram usage:        6 bytes
  4303 ;; Hardware stack levels used:    1
  4304 ;; Hardware stack levels required when called:    2
  4305 ;; This function calls:
  4306 ;;		___ftadd
  4307 ;; This function is called by:
  4308 ;;		_ftoa
  4309 ;; This function uses a non-reentrant model
  4310 ;;
  4311                           
  4312                           
  4313                           ;psect for function ___ftsub
  4314  0ECB                     ___ftsub:	
  4315                           
  4316                           ;incstack = 0
  4317                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  4318  0ECB  0020               	movlb	0	; select bank0
  4319  0ECC  0829               	movf	___ftsub@f2+2,w
  4320  0ECD  0428               	iorwf	___ftsub@f2+1,w
  4321  0ECE  0427               	iorwf	___ftsub@f2,w
  4322  0ECF  1903               	skipnz
  4323  0ED0  2ED3               	goto	l1784
  4324  0ED1  3080               	movlw	128
  4325  0ED2  06A9               	xorwf	___ftsub@f2+2,f
  4326  0ED3                     l1784:	
  4327  0ED3  082A               	movf	___ftsub@f1,w
  4328  0ED4  00F8               	movwf	___ftadd@f1
  4329  0ED5  082B               	movf	___ftsub@f1+1,w
  4330  0ED6  00F9               	movwf	___ftadd@f1+1
  4331  0ED7  082C               	movf	___ftsub@f1+2,w
  4332  0ED8  00FA               	movwf	___ftadd@f1+2
  4333  0ED9  0827               	movf	___ftsub@f2,w
  4334  0EDA  00FB               	movwf	___ftadd@f2
  4335  0EDB  0828               	movf	___ftsub@f2+1,w
  4336  0EDC  00FC               	movwf	___ftadd@f2+1
  4337  0EDD  0829               	movf	___ftsub@f2+2,w
  4338  0EDE  00FD               	movwf	___ftadd@f2+2
  4339  0EDF  3183  23CC         	fcall	___ftadd
  4340  0EE1  0878               	movf	?___ftadd,w
  4341  0EE2  0020               	movlb	0	; select bank0
  4342  0EE3  00A7               	movwf	?___ftsub
  4343  0EE4  0879               	movf	?___ftadd+1,w
  4344  0EE5  00A8               	movwf	?___ftsub+1
  4345  0EE6  087A               	movf	?___ftadd+2,w
  4346  0EE7  00A9               	movwf	?___ftsub+2
  4347  0EE8  0008               	return
  4348  0EE9                     __end_of___ftsub:	
  4349                           
  4350                           	psect	text18
  4351  03CC                     __ptext18:	
  4352 ;; *************** function ___ftadd *****************
  4353 ;; Defined at:
  4354 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
  4355 ;; Parameters:    Size  Location     Type
  4356 ;;  f1              3    8[COMMON] float 
  4357 ;;  f2              3   11[COMMON] float 
  4358 ;; Auto vars:     Size  Location     Type
  4359 ;;  exp1            1    6[BANK0 ] unsigned char 
  4360 ;;  exp2            1    5[BANK0 ] unsigned char 
  4361 ;;  sign            1    4[BANK0 ] unsigned char 
  4362 ;; Return value:  Size  Location     Type
  4363 ;;                  3    8[COMMON] float 
  4364 ;; Registers used:
  4365 ;;		wreg, status,2, status,0, pclath, cstack
  4366 ;; Tracked objects:
  4367 ;;		On entry : 0/0
  4368 ;;		On exit  : 0/0
  4369 ;;		Unchanged: 0/0
  4370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4371 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4372 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4373 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4374 ;;      Totals:         6       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4375 ;;Total ram usage:       13 bytes
  4376 ;; Hardware stack levels used:    1
  4377 ;; Hardware stack levels required when called:    1
  4378 ;; This function calls:
  4379 ;;		___ftpack
  4380 ;; This function is called by:
  4381 ;;		_main
  4382 ;;		___ftsub
  4383 ;; This function uses a non-reentrant model
  4384 ;;
  4385                           
  4386                           
  4387                           ;psect for function ___ftadd
  4388  03CC                     ___ftadd:	
  4389                           
  4390                           ;incstack = 0
  4391                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  4392  03CC  0878               	movf	___ftadd@f1,w
  4393  03CD  0020               	movlb	0	; select bank0
  4394  03CE  00A0               	movwf	??___ftadd
  4395  03CF  0879               	movf	___ftadd@f1+1,w
  4396  03D0  00A1               	movwf	??___ftadd+1
  4397  03D1  087A               	movf	___ftadd@f1+2,w
  4398  03D2  00A2               	movwf	??___ftadd+2
  4399  03D3  1003               	clrc
  4400  03D4  0D21               	rlf	??___ftadd+1,w
  4401  03D5  0D22               	rlf	??___ftadd+2,w
  4402  03D6  00A3               	movwf	??___ftadd+3
  4403  03D7  0823               	movf	??___ftadd+3,w
  4404  03D8  00A6               	movwf	___ftadd@exp1
  4405  03D9  087B               	movf	___ftadd@f2,w
  4406  03DA  00A0               	movwf	??___ftadd
  4407  03DB  087C               	movf	___ftadd@f2+1,w
  4408  03DC  00A1               	movwf	??___ftadd+1
  4409  03DD  087D               	movf	___ftadd@f2+2,w
  4410  03DE  00A2               	movwf	??___ftadd+2
  4411  03DF  1003               	clrc
  4412  03E0  0D21               	rlf	??___ftadd+1,w
  4413  03E1  0D22               	rlf	??___ftadd+2,w
  4414  03E2  00A3               	movwf	??___ftadd+3
  4415  03E3  0823               	movf	??___ftadd+3,w
  4416  03E4  00A5               	movwf	___ftadd@exp2
  4417  03E5  0826               	movf	___ftadd@exp1,w
  4418  03E6  1903               	btfsc	3,2
  4419  03E7  2BF4               	goto	l1422
  4420  03E8  0825               	movf	___ftadd@exp2,w
  4421  03E9  0226               	subwf	___ftadd@exp1,w
  4422  03EA  1803               	skipnc
  4423  03EB  2BFB               	goto	l1426
  4424  03EC  0326               	decf	___ftadd@exp1,w
  4425  03ED  3AFF               	xorlw	255
  4426  03EE  0725               	addwf	___ftadd@exp2,w
  4427  03EF  00A0               	movwf	??___ftadd
  4428  03F0  3019               	movlw	25
  4429  03F1  0220               	subwf	??___ftadd,w
  4430  03F2  1C03               	skipc
  4431  03F3  2BFB               	goto	l1426
  4432  03F4                     l1422:	
  4433  03F4  087B               	movf	___ftadd@f2,w
  4434  03F5  00F8               	movwf	?___ftadd
  4435  03F6  087C               	movf	___ftadd@f2+1,w
  4436  03F7  00F9               	movwf	?___ftadd+1
  4437  03F8  087D               	movf	___ftadd@f2+2,w
  4438  03F9  00FA               	movwf	?___ftadd+2
  4439  03FA  0008               	return
  4440  03FB                     l1426:	
  4441  03FB  0825               	movf	___ftadd@exp2,w
  4442  03FC  1903               	btfsc	3,2
  4443  03FD  0008               	return
  4444  03FE  0826               	movf	___ftadd@exp1,w
  4445  03FF  0225               	subwf	___ftadd@exp2,w
  4446  0400  1803               	skipnc
  4447  0401  2C0A               	goto	l1432
  4448  0402  0325               	decf	___ftadd@exp2,w
  4449  0403  3AFF               	xorlw	255
  4450  0404  0726               	addwf	___ftadd@exp1,w
  4451  0405  00A0               	movwf	??___ftadd
  4452  0406  3019               	movlw	25
  4453  0407  0220               	subwf	??___ftadd,w
  4454  0408  1803               	btfsc	3,0
  4455  0409  0008               	return
  4456  040A                     l1432:	
  4457  040A  3006               	movlw	6
  4458  040B  00A0               	movwf	??___ftadd
  4459  040C  0820               	movf	??___ftadd,w
  4460  040D  00A4               	movwf	___ftadd@sign
  4461  040E  1BFA               	btfsc	___ftadd@f1+2,7
  4462  040F  17A4               	bsf	___ftadd@sign,7
  4463  0410  1BFD               	btfsc	___ftadd@f2+2,7
  4464  0411  1724               	bsf	___ftadd@sign,6
  4465  0412  17F9               	bsf	___ftadd@f1+1,7
  4466  0413  30FF               	movlw	255
  4467  0414  05F8               	andwf	___ftadd@f1,f
  4468  0415  30FF               	movlw	255
  4469  0416  05F9               	andwf	___ftadd@f1+1,f
  4470  0417  3000               	movlw	0
  4471  0418  05FA               	andwf	___ftadd@f1+2,f
  4472  0419  17FC               	bsf	___ftadd@f2+1,7
  4473  041A  30FF               	movlw	255
  4474  041B  05FB               	andwf	___ftadd@f2,f
  4475  041C  30FF               	movlw	255
  4476  041D  05FC               	andwf	___ftadd@f2+1,f
  4477  041E  3000               	movlw	0
  4478  041F  05FD               	andwf	___ftadd@f2+2,f
  4479  0420  0825               	movf	___ftadd@exp2,w
  4480  0421  0226               	subwf	___ftadd@exp1,w
  4481  0422  1803               	skipnc
  4482  0423  2C46               	goto	l1454
  4483  0424                     l1444:	
  4484  0424  3001               	movlw	1
  4485  0425                     u1695:	
  4486  0425  35FB               	lslf	___ftadd@f2,f
  4487  0426  0DFC               	rlf	___ftadd@f2+1,f
  4488  0427  0DFD               	rlf	___ftadd@f2+2,f
  4489  0428  0B89               	decfsz	9,f
  4490  0429  2C25               	goto	u1695
  4491  042A  3001               	movlw	1
  4492  042B  02A5               	subwf	___ftadd@exp2,f
  4493  042C  0825               	movf	___ftadd@exp2,w
  4494  042D  0626               	xorwf	___ftadd@exp1,w
  4495  042E  1903               	skipnz
  4496  042F  2C41               	goto	l1452
  4497  0430  3001               	movlw	1
  4498  0431  02A4               	subwf	___ftadd@sign,f
  4499  0432  0824               	movf	___ftadd@sign,w
  4500  0433  3907               	andlw	7
  4501  0434  1903               	btfsc	3,2
  4502  0435  2C41               	goto	l1452
  4503  0436  2C24               	goto	l1444
  4504  0437                     l1450:	
  4505  0437  3001               	movlw	1
  4506  0438                     u1725:	
  4507  0438  36FA               	lsrf	___ftadd@f1+2,f
  4508  0439  0CF9               	rrf	___ftadd@f1+1,f
  4509  043A  0CF8               	rrf	___ftadd@f1,f
  4510  043B  0B89               	decfsz	9,f
  4511  043C  2C38               	goto	u1725
  4512  043D  3001               	movlw	1
  4513  043E  00A0               	movwf	??___ftadd
  4514  043F  0820               	movf	??___ftadd,w
  4515  0440  07A6               	addwf	___ftadd@exp1,f
  4516  0441                     l1452:	
  4517  0441  0826               	movf	___ftadd@exp1,w
  4518  0442  0625               	xorwf	___ftadd@exp2,w
  4519  0443  1903               	btfsc	3,2
  4520  0444  2C6B               	goto	l387
  4521  0445  2C37               	goto	l1450
  4522  0446                     l1454:	
  4523  0446  0826               	movf	___ftadd@exp1,w
  4524  0447  0225               	subwf	___ftadd@exp2,w
  4525  0448  1803               	skipnc
  4526  0449  2C6B               	goto	l387
  4527  044A                     l1456:	
  4528  044A  3001               	movlw	1
  4529  044B                     u1755:	
  4530  044B  35F8               	lslf	___ftadd@f1,f
  4531  044C  0DF9               	rlf	___ftadd@f1+1,f
  4532  044D  0DFA               	rlf	___ftadd@f1+2,f
  4533  044E  0B89               	decfsz	9,f
  4534  044F  2C4B               	goto	u1755
  4535  0450  3001               	movlw	1
  4536  0451  02A6               	subwf	___ftadd@exp1,f
  4537  0452  0825               	movf	___ftadd@exp2,w
  4538  0453  0626               	xorwf	___ftadd@exp1,w
  4539  0454  1903               	skipnz
  4540  0455  2C67               	goto	l1464
  4541  0456  3001               	movlw	1
  4542  0457  02A4               	subwf	___ftadd@sign,f
  4543  0458  0824               	movf	___ftadd@sign,w
  4544  0459  3907               	andlw	7
  4545  045A  1903               	btfsc	3,2
  4546  045B  2C67               	goto	l1464
  4547  045C  2C4A               	goto	l1456
  4548  045D                     l1462:	
  4549  045D  3001               	movlw	1
  4550  045E                     u1785:	
  4551  045E  36FD               	lsrf	___ftadd@f2+2,f
  4552  045F  0CFC               	rrf	___ftadd@f2+1,f
  4553  0460  0CFB               	rrf	___ftadd@f2,f
  4554  0461  0B89               	decfsz	9,f
  4555  0462  2C5E               	goto	u1785
  4556  0463  3001               	movlw	1
  4557  0464  00A0               	movwf	??___ftadd
  4558  0465  0820               	movf	??___ftadd,w
  4559  0466  07A5               	addwf	___ftadd@exp2,f
  4560  0467                     l1464:	
  4561  0467  0826               	movf	___ftadd@exp1,w
  4562  0468  0625               	xorwf	___ftadd@exp2,w
  4563  0469  1D03               	skipz
  4564  046A  2C5D               	goto	l1462
  4565  046B                     l387:	
  4566  046B  1FA4               	btfss	___ftadd@sign,7
  4567  046C  2C7D               	goto	l1468
  4568  046D  30FF               	movlw	255
  4569  046E  06F8               	xorwf	___ftadd@f1,f
  4570  046F  30FF               	movlw	255
  4571  0470  06F9               	xorwf	___ftadd@f1+1,f
  4572  0471  30FF               	movlw	255
  4573  0472  06FA               	xorwf	___ftadd@f1+2,f
  4574  0473  3001               	movlw	1
  4575  0474  07F8               	addwf	___ftadd@f1,f
  4576  0475  3000               	movlw	0
  4577  0476  1803               	skipnc
  4578  0477  3001               	movlw	1
  4579  0478  07F9               	addwf	___ftadd@f1+1,f
  4580  0479  3000               	movlw	0
  4581  047A  1803               	skipnc
  4582  047B  3001               	movlw	1
  4583  047C  07FA               	addwf	___ftadd@f1+2,f
  4584  047D                     l1468:	
  4585  047D  1F24               	btfss	___ftadd@sign,6
  4586  047E  2C8F               	goto	l1472
  4587  047F  30FF               	movlw	255
  4588  0480  06FB               	xorwf	___ftadd@f2,f
  4589  0481  30FF               	movlw	255
  4590  0482  06FC               	xorwf	___ftadd@f2+1,f
  4591  0483  30FF               	movlw	255
  4592  0484  06FD               	xorwf	___ftadd@f2+2,f
  4593  0485  3001               	movlw	1
  4594  0486  07FB               	addwf	___ftadd@f2,f
  4595  0487  3000               	movlw	0
  4596  0488  1803               	skipnc
  4597  0489  3001               	movlw	1
  4598  048A  07FC               	addwf	___ftadd@f2+1,f
  4599  048B  3000               	movlw	0
  4600  048C  1803               	skipnc
  4601  048D  3001               	movlw	1
  4602  048E  07FD               	addwf	___ftadd@f2+2,f
  4603  048F                     l1472:	
  4604  048F  01A4               	clrf	___ftadd@sign
  4605  0490  0878               	movf	___ftadd@f1,w
  4606  0491  07FB               	addwf	___ftadd@f2,f
  4607  0492  0879               	movf	___ftadd@f1+1,w
  4608  0493  3DFC               	addwfc	___ftadd@f2+1,f
  4609  0494  087A               	movf	___ftadd@f1+2,w
  4610  0495  3DFD               	addwfc	___ftadd@f2+2,f
  4611  0496  1FFD               	btfss	___ftadd@f2+2,7
  4612  0497  2CAA               	goto	l1482
  4613  0498  30FF               	movlw	255
  4614  0499  06FB               	xorwf	___ftadd@f2,f
  4615  049A  30FF               	movlw	255
  4616  049B  06FC               	xorwf	___ftadd@f2+1,f
  4617  049C  30FF               	movlw	255
  4618  049D  06FD               	xorwf	___ftadd@f2+2,f
  4619  049E  3001               	movlw	1
  4620  049F  07FB               	addwf	___ftadd@f2,f
  4621  04A0  3000               	movlw	0
  4622  04A1  1803               	skipnc
  4623  04A2  3001               	movlw	1
  4624  04A3  07FC               	addwf	___ftadd@f2+1,f
  4625  04A4  3000               	movlw	0
  4626  04A5  1803               	skipnc
  4627  04A6  3001               	movlw	1
  4628  04A7  07FD               	addwf	___ftadd@f2+2,f
  4629  04A8  01A4               	clrf	___ftadd@sign
  4630  04A9  0AA4               	incf	___ftadd@sign,f
  4631  04AA                     l1482:	
  4632  04AA  087B               	movf	___ftadd@f2,w
  4633  04AB  00F0               	movwf	___ftpack@arg
  4634  04AC  087C               	movf	___ftadd@f2+1,w
  4635  04AD  00F1               	movwf	___ftpack@arg+1
  4636  04AE  087D               	movf	___ftadd@f2+2,w
  4637  04AF  00F2               	movwf	___ftpack@arg+2
  4638  04B0  0826               	movf	___ftadd@exp1,w
  4639  04B1  00A0               	movwf	??___ftadd
  4640  04B2  0820               	movf	??___ftadd,w
  4641  04B3  00F3               	movwf	___ftpack@exp
  4642  04B4  0824               	movf	___ftadd@sign,w
  4643  04B5  00A1               	movwf	??___ftadd+1
  4644  04B6  0821               	movf	??___ftadd+1,w
  4645  04B7  00F4               	movwf	___ftpack@sign
  4646  04B8  3181  218C         	fcall	___ftpack
  4647  04BA  0870               	movf	?___ftpack,w
  4648  04BB  00F8               	movwf	?___ftadd
  4649  04BC  0871               	movf	?___ftpack+1,w
  4650  04BD  00F9               	movwf	?___ftadd+1
  4651  04BE  0872               	movf	?___ftpack+2,w
  4652  04BF  00FA               	movwf	?___ftadd+2
  4653  04C0  0008               	return
  4654  04C1                     __end_of___ftadd:	
  4655                           
  4656                           	psect	text19
  4657  0E1B                     __ptext19:	
  4658 ;; *************** function ___ftneg *****************
  4659 ;; Defined at:
  4660 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftneg.c"
  4661 ;; Parameters:    Size  Location     Type
  4662 ;;  f1              3    0[COMMON] float 
  4663 ;; Auto vars:     Size  Location     Type
  4664 ;;		None
  4665 ;; Return value:  Size  Location     Type
  4666 ;;                  3    0[COMMON] float 
  4667 ;; Registers used:
  4668 ;;		wreg
  4669 ;; Tracked objects:
  4670 ;;		On entry : 0/0
  4671 ;;		On exit  : 0/0
  4672 ;;		Unchanged: 0/0
  4673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4674 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4677 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4678 ;;Total ram usage:        3 bytes
  4679 ;; Hardware stack levels used:    1
  4680 ;; This function calls:
  4681 ;;		Nothing
  4682 ;; This function is called by:
  4683 ;;		_ftoa
  4684 ;; This function uses a non-reentrant model
  4685 ;;
  4686                           
  4687                           
  4688                           ;psect for function ___ftneg
  4689  0E1B                     ___ftneg:	
  4690                           
  4691                           ;incstack = 0
  4692                           ; Regs used in ___ftneg: [wreg]
  4693  0E1B  0872               	movf	___ftneg@f1+2,w
  4694  0E1C  0471               	iorwf	___ftneg@f1+1,w
  4695  0E1D  0470               	iorwf	___ftneg@f1,w
  4696  0E1E  1903               	skipnz
  4697  0E1F  0008               	return
  4698  0E20  3080               	movlw	128
  4699  0E21  06F2               	xorwf	___ftneg@f1+2,f
  4700  0E22  0008               	return
  4701  0E23                     __end_of___ftneg:	
  4702                           
  4703                           	psect	text20
  4704  0319                     __ptext20:	
  4705 ;; *************** function ___ftmul *****************
  4706 ;; Defined at:
  4707 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  4708 ;; Parameters:    Size  Location     Type
  4709 ;;  f1              3    8[COMMON] float 
  4710 ;;  f2              3   11[COMMON] float 
  4711 ;; Auto vars:     Size  Location     Type
  4712 ;;  f3_as_produc    3    5[BANK0 ] unsigned um
  4713 ;;  sign            1    9[BANK0 ] unsigned char 
  4714 ;;  cntr            1    8[BANK0 ] unsigned char 
  4715 ;;  exp             1    4[BANK0 ] unsigned char 
  4716 ;; Return value:  Size  Location     Type
  4717 ;;                  3    8[COMMON] float 
  4718 ;; Registers used:
  4719 ;;		wreg, status,2, status,0, pclath, cstack
  4720 ;; Tracked objects:
  4721 ;;		On entry : 0/0
  4722 ;;		On exit  : 0/0
  4723 ;;		Unchanged: 0/0
  4724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4725 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4726 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4727 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4728 ;;      Totals:         6      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4729 ;;Total ram usage:       16 bytes
  4730 ;; Hardware stack levels used:    1
  4731 ;; Hardware stack levels required when called:    1
  4732 ;; This function calls:
  4733 ;;		___ftpack
  4734 ;; This function is called by:
  4735 ;;		_ftoa
  4736 ;; This function uses a non-reentrant model
  4737 ;;
  4738                           
  4739                           
  4740                           ;psect for function ___ftmul
  4741  0319                     ___ftmul:	
  4742                           
  4743                           ;incstack = 0
  4744                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  4745  0319  0878               	movf	___ftmul@f1,w
  4746  031A  0020               	movlb	0	; select bank0
  4747  031B  00A0               	movwf	??___ftmul
  4748  031C  0879               	movf	___ftmul@f1+1,w
  4749  031D  00A1               	movwf	??___ftmul+1
  4750  031E  087A               	movf	___ftmul@f1+2,w
  4751  031F  00A2               	movwf	??___ftmul+2
  4752  0320  1003               	clrc
  4753  0321  0D21               	rlf	??___ftmul+1,w
  4754  0322  0D22               	rlf	??___ftmul+2,w
  4755  0323  00A3               	movwf	??___ftmul+3
  4756  0324  0823               	movf	??___ftmul+3,w
  4757  0325  00A4               	movwf	___ftmul@exp
  4758  0326  0824               	movf	___ftmul@exp,w
  4759  0327  1D03               	btfss	3,2
  4760  0328  2B30               	goto	l1728
  4761  0329  3000               	movlw	0
  4762  032A  00F8               	movwf	?___ftmul
  4763  032B  3000               	movlw	0
  4764  032C  00F9               	movwf	?___ftmul+1
  4765  032D  3000               	movlw	0
  4766  032E  00FA               	movwf	?___ftmul+2
  4767  032F  0008               	return
  4768  0330                     l1728:	
  4769  0330  087B               	movf	___ftmul@f2,w
  4770  0331  00A0               	movwf	??___ftmul
  4771  0332  087C               	movf	___ftmul@f2+1,w
  4772  0333  00A1               	movwf	??___ftmul+1
  4773  0334  087D               	movf	___ftmul@f2+2,w
  4774  0335  00A2               	movwf	??___ftmul+2
  4775  0336  1003               	clrc
  4776  0337  0D21               	rlf	??___ftmul+1,w
  4777  0338  0D22               	rlf	??___ftmul+2,w
  4778  0339  00A3               	movwf	??___ftmul+3
  4779  033A  0823               	movf	??___ftmul+3,w
  4780  033B  00A9               	movwf	___ftmul@sign
  4781  033C  0829               	movf	___ftmul@sign,w
  4782  033D  1D03               	btfss	3,2
  4783  033E  2B46               	goto	l1734
  4784  033F  3000               	movlw	0
  4785  0340  00F8               	movwf	?___ftmul
  4786  0341  3000               	movlw	0
  4787  0342  00F9               	movwf	?___ftmul+1
  4788  0343  3000               	movlw	0
  4789  0344  00FA               	movwf	?___ftmul+2
  4790  0345  0008               	return
  4791  0346                     l1734:	
  4792  0346  0829               	movf	___ftmul@sign,w
  4793  0347  3E7B               	addlw	123
  4794  0348  00A0               	movwf	??___ftmul
  4795  0349  0820               	movf	??___ftmul,w
  4796  034A  07A4               	addwf	___ftmul@exp,f
  4797  034B  0878               	movf	___ftmul@f1,w
  4798  034C  00A0               	movwf	??___ftmul
  4799  034D  0879               	movf	___ftmul@f1+1,w
  4800  034E  00A1               	movwf	??___ftmul+1
  4801  034F  087A               	movf	___ftmul@f1+2,w
  4802  0350  00A2               	movwf	??___ftmul+2
  4803  0351  3010               	movlw	16
  4804  0352                     u2335:	
  4805  0352  36A2               	lsrf	??___ftmul+2,f
  4806  0353  0CA1               	rrf	??___ftmul+1,f
  4807  0354  0CA0               	rrf	??___ftmul,f
  4808  0355  0B89               	decfsz	9,f
  4809  0356  2B52               	goto	u2335
  4810  0357  0820               	movf	??___ftmul,w
  4811  0358  00A3               	movwf	??___ftmul+3
  4812  0359  0823               	movf	??___ftmul+3,w
  4813  035A  00A9               	movwf	___ftmul@sign
  4814  035B  087B               	movf	___ftmul@f2,w
  4815  035C  00A0               	movwf	??___ftmul
  4816  035D  087C               	movf	___ftmul@f2+1,w
  4817  035E  00A1               	movwf	??___ftmul+1
  4818  035F  087D               	movf	___ftmul@f2+2,w
  4819  0360  00A2               	movwf	??___ftmul+2
  4820  0361  3010               	movlw	16
  4821  0362                     u2345:	
  4822  0362  36A2               	lsrf	??___ftmul+2,f
  4823  0363  0CA1               	rrf	??___ftmul+1,f
  4824  0364  0CA0               	rrf	??___ftmul,f
  4825  0365  0B89               	decfsz	9,f
  4826  0366  2B62               	goto	u2345
  4827  0367  0820               	movf	??___ftmul,w
  4828  0368  00A3               	movwf	??___ftmul+3
  4829  0369  0823               	movf	??___ftmul+3,w
  4830  036A  06A9               	xorwf	___ftmul@sign,f
  4831  036B  3080               	movlw	128
  4832  036C  00A0               	movwf	??___ftmul
  4833  036D  0820               	movf	??___ftmul,w
  4834  036E  05A9               	andwf	___ftmul@sign,f
  4835  036F  17F9               	bsf	___ftmul@f1+1,7
  4836  0370  17FC               	bsf	___ftmul@f2+1,7
  4837  0371  30FF               	movlw	255
  4838  0372  05FB               	andwf	___ftmul@f2,f
  4839  0373  30FF               	movlw	255
  4840  0374  05FC               	andwf	___ftmul@f2+1,f
  4841  0375  3000               	movlw	0
  4842  0376  05FD               	andwf	___ftmul@f2+2,f
  4843  0377  3000               	movlw	0
  4844  0378  00A5               	movwf	___ftmul@f3_as_product
  4845  0379  3000               	movlw	0
  4846  037A  00A6               	movwf	___ftmul@f3_as_product+1
  4847  037B  3000               	movlw	0
  4848  037C  00A7               	movwf	___ftmul@f3_as_product+2
  4849  037D  3007               	movlw	7
  4850  037E  00A0               	movwf	??___ftmul
  4851  037F  0820               	movf	??___ftmul,w
  4852  0380  00A8               	movwf	___ftmul@cntr
  4853  0381                     l1746:	
  4854  0381  1C78               	btfss	___ftmul@f1,0
  4855  0382  2B89               	goto	l1750
  4856  0383  087B               	movf	___ftmul@f2,w
  4857  0384  07A5               	addwf	___ftmul@f3_as_product,f
  4858  0385  087C               	movf	___ftmul@f2+1,w
  4859  0386  3DA6               	addwfc	___ftmul@f3_as_product+1,f
  4860  0387  087D               	movf	___ftmul@f2+2,w
  4861  0388  3DA7               	addwfc	___ftmul@f3_as_product+2,f
  4862  0389                     l1750:	
  4863  0389  3001               	movlw	1
  4864  038A                     u2365:	
  4865  038A  36FA               	lsrf	___ftmul@f1+2,f
  4866  038B  0CF9               	rrf	___ftmul@f1+1,f
  4867  038C  0CF8               	rrf	___ftmul@f1,f
  4868  038D  0B89               	decfsz	9,f
  4869  038E  2B8A               	goto	u2365
  4870  038F  3001               	movlw	1
  4871  0390                     u2375:	
  4872  0390  35FB               	lslf	___ftmul@f2,f
  4873  0391  0DFC               	rlf	___ftmul@f2+1,f
  4874  0392  0DFD               	rlf	___ftmul@f2+2,f
  4875  0393  0B89               	decfsz	9,f
  4876  0394  2B90               	goto	u2375
  4877  0395  3001               	movlw	1
  4878  0396  02A8               	subwf	___ftmul@cntr,f
  4879  0397  1D03               	btfss	3,2
  4880  0398  2B81               	goto	l1746
  4881  0399  3009               	movlw	9
  4882  039A  00A0               	movwf	??___ftmul
  4883  039B  0820               	movf	??___ftmul,w
  4884  039C  00A8               	movwf	___ftmul@cntr
  4885  039D                     l1758:	
  4886  039D  1C78               	btfss	___ftmul@f1,0
  4887  039E  2BA5               	goto	l1762
  4888  039F  087B               	movf	___ftmul@f2,w
  4889  03A0  07A5               	addwf	___ftmul@f3_as_product,f
  4890  03A1  087C               	movf	___ftmul@f2+1,w
  4891  03A2  3DA6               	addwfc	___ftmul@f3_as_product+1,f
  4892  03A3  087D               	movf	___ftmul@f2+2,w
  4893  03A4  3DA7               	addwfc	___ftmul@f3_as_product+2,f
  4894  03A5                     l1762:	
  4895  03A5  3001               	movlw	1
  4896  03A6                     u2405:	
  4897  03A6  36FA               	lsrf	___ftmul@f1+2,f
  4898  03A7  0CF9               	rrf	___ftmul@f1+1,f
  4899  03A8  0CF8               	rrf	___ftmul@f1,f
  4900  03A9  0B89               	decfsz	9,f
  4901  03AA  2BA6               	goto	u2405
  4902  03AB  3001               	movlw	1
  4903  03AC                     u2415:	
  4904  03AC  36A7               	lsrf	___ftmul@f3_as_product+2,f
  4905  03AD  0CA6               	rrf	___ftmul@f3_as_product+1,f
  4906  03AE  0CA5               	rrf	___ftmul@f3_as_product,f
  4907  03AF  0B89               	decfsz	9,f
  4908  03B0  2BAC               	goto	u2415
  4909  03B1  3001               	movlw	1
  4910  03B2  02A8               	subwf	___ftmul@cntr,f
  4911  03B3  1D03               	btfss	3,2
  4912  03B4  2B9D               	goto	l1758
  4913  03B5  0825               	movf	___ftmul@f3_as_product,w
  4914  03B6  00F0               	movwf	___ftpack@arg
  4915  03B7  0826               	movf	___ftmul@f3_as_product+1,w
  4916  03B8  00F1               	movwf	___ftpack@arg+1
  4917  03B9  0827               	movf	___ftmul@f3_as_product+2,w
  4918  03BA  00F2               	movwf	___ftpack@arg+2
  4919  03BB  0824               	movf	___ftmul@exp,w
  4920  03BC  00A0               	movwf	??___ftmul
  4921  03BD  0820               	movf	??___ftmul,w
  4922  03BE  00F3               	movwf	___ftpack@exp
  4923  03BF  0829               	movf	___ftmul@sign,w
  4924  03C0  00A1               	movwf	??___ftmul+1
  4925  03C1  0821               	movf	??___ftmul+1,w
  4926  03C2  00F4               	movwf	___ftpack@sign
  4927  03C3  3181  218C         	fcall	___ftpack
  4928  03C5  0870               	movf	?___ftpack,w
  4929  03C6  00F8               	movwf	?___ftmul
  4930  03C7  0871               	movf	?___ftpack+1,w
  4931  03C8  00F9               	movwf	?___ftmul+1
  4932  03C9  0872               	movf	?___ftpack+2,w
  4933  03CA  00FA               	movwf	?___ftmul+2
  4934  03CB  0008               	return
  4935  03CC                     __end_of___ftmul:	
  4936                           
  4937                           	psect	text21
  4938  018C                     __ptext21:	
  4939 ;; *************** function ___ftpack *****************
  4940 ;; Defined at:
  4941 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  4942 ;; Parameters:    Size  Location     Type
  4943 ;;  arg             3    0[COMMON] unsigned um
  4944 ;;  exp             1    3[COMMON] unsigned char 
  4945 ;;  sign            1    4[COMMON] unsigned char 
  4946 ;; Auto vars:     Size  Location     Type
  4947 ;;		None
  4948 ;; Return value:  Size  Location     Type
  4949 ;;                  3    0[COMMON] float 
  4950 ;; Registers used:
  4951 ;;		wreg, status,2, status,0
  4952 ;; Tracked objects:
  4953 ;;		On entry : 0/0
  4954 ;;		On exit  : 0/0
  4955 ;;		Unchanged: 0/0
  4956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4957 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4959 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4960 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4961 ;;Total ram usage:        8 bytes
  4962 ;; Hardware stack levels used:    1
  4963 ;; This function calls:
  4964 ;;		Nothing
  4965 ;; This function is called by:
  4966 ;;		___ftadd
  4967 ;;		___ftmul
  4968 ;;		___lltoft
  4969 ;; This function uses a non-reentrant model
  4970 ;;
  4971                           
  4972                           
  4973                           ;psect for function ___ftpack
  4974  018C                     ___ftpack:	
  4975                           
  4976                           ;incstack = 0
  4977                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  4978  018C  0873               	movf	___ftpack@exp,w
  4979  018D  1903               	btfsc	3,2
  4980  018E  2994               	goto	l1346
  4981  018F  0872               	movf	___ftpack@arg+2,w
  4982  0190  0471               	iorwf	___ftpack@arg+1,w
  4983  0191  0470               	iorwf	___ftpack@arg,w
  4984  0192  1D03               	skipz
  4985  0193  29A5               	goto	l1352
  4986  0194                     l1346:	
  4987  0194  3000               	movlw	0
  4988  0195  00F0               	movwf	?___ftpack
  4989  0196  3000               	movlw	0
  4990  0197  00F1               	movwf	?___ftpack+1
  4991  0198  3000               	movlw	0
  4992  0199  00F2               	movwf	?___ftpack+2
  4993  019A  0008               	return
  4994  019B                     l1350:	
  4995  019B  3001               	movlw	1
  4996  019C  00F5               	movwf	??___ftpack
  4997  019D  0875               	movf	??___ftpack,w
  4998  019E  07F3               	addwf	___ftpack@exp,f
  4999  019F  3001               	movlw	1
  5000  01A0                     u1405:	
  5001  01A0  36F2               	lsrf	___ftpack@arg+2,f
  5002  01A1  0CF1               	rrf	___ftpack@arg+1,f
  5003  01A2  0CF0               	rrf	___ftpack@arg,f
  5004  01A3  0B89               	decfsz	9,f
  5005  01A4  29A0               	goto	u1405
  5006  01A5                     l1352:	
  5007  01A5  30FE               	movlw	254
  5008  01A6  0572               	andwf	___ftpack@arg+2,w
  5009  01A7  1903               	btfsc	3,2
  5010  01A8  29BE               	goto	l356
  5011  01A9  299B               	goto	l1350
  5012  01AA                     l1354:	
  5013  01AA  3001               	movlw	1
  5014  01AB  00F5               	movwf	??___ftpack
  5015  01AC  0875               	movf	??___ftpack,w
  5016  01AD  07F3               	addwf	___ftpack@exp,f
  5017  01AE  3001               	movlw	1
  5018  01AF  07F0               	addwf	___ftpack@arg,f
  5019  01B0  3000               	movlw	0
  5020  01B1  1803               	skipnc
  5021  01B2  3001               	movlw	1
  5022  01B3  07F1               	addwf	___ftpack@arg+1,f
  5023  01B4  3000               	movlw	0
  5024  01B5  1803               	skipnc
  5025  01B6  3001               	movlw	1
  5026  01B7  07F2               	addwf	___ftpack@arg+2,f
  5027  01B8  3001               	movlw	1
  5028  01B9                     u1425:	
  5029  01B9  36F2               	lsrf	___ftpack@arg+2,f
  5030  01BA  0CF1               	rrf	___ftpack@arg+1,f
  5031  01BB  0CF0               	rrf	___ftpack@arg,f
  5032  01BC  0B89               	decfsz	9,f
  5033  01BD  29B9               	goto	u1425
  5034  01BE                     l356:	
  5035  01BE  30FF               	movlw	255
  5036  01BF  0572               	andwf	___ftpack@arg+2,w
  5037  01C0  1903               	btfsc	3,2
  5038  01C1  29CB               	goto	l1362
  5039  01C2  29AA               	goto	l1354
  5040  01C3                     l1360:	
  5041  01C3  3001               	movlw	1
  5042  01C4  02F3               	subwf	___ftpack@exp,f
  5043  01C5  3001               	movlw	1
  5044  01C6                     u1445:	
  5045  01C6  35F0               	lslf	___ftpack@arg,f
  5046  01C7  0DF1               	rlf	___ftpack@arg+1,f
  5047  01C8  0DF2               	rlf	___ftpack@arg+2,f
  5048  01C9  0B89               	decfsz	9,f
  5049  01CA  29C6               	goto	u1445
  5050  01CB                     l1362:	
  5051  01CB  1BF1               	btfsc	___ftpack@arg+1,7
  5052  01CC  29D1               	goto	l363
  5053  01CD  3002               	movlw	2
  5054  01CE  0273               	subwf	___ftpack@exp,w
  5055  01CF  1803               	skipnc
  5056  01D0  29C3               	goto	l1360
  5057  01D1                     l363:	
  5058  01D1  1873               	btfsc	___ftpack@exp,0
  5059  01D2  29D9               	goto	l364
  5060  01D3  30FF               	movlw	255
  5061  01D4  05F0               	andwf	___ftpack@arg,f
  5062  01D5  307F               	movlw	127
  5063  01D6  05F1               	andwf	___ftpack@arg+1,f
  5064  01D7  30FF               	movlw	255
  5065  01D8  05F2               	andwf	___ftpack@arg+2,f
  5066  01D9                     l364:	
  5067  01D9  1003               	clrc
  5068  01DA  0CF3               	rrf	___ftpack@exp,f
  5069  01DB  0873               	movf	___ftpack@exp,w
  5070  01DC  00F5               	movwf	??___ftpack
  5071  01DD  01F6               	clrf	??___ftpack+1
  5072  01DE  01F7               	clrf	??___ftpack+2
  5073  01DF  3010               	movlw	16
  5074  01E0                     u1485:	
  5075  01E0  35F5               	lslf	??___ftpack,f
  5076  01E1  0DF6               	rlf	??___ftpack+1,f
  5077  01E2  0DF7               	rlf	??___ftpack+2,f
  5078  01E3  0B89               	decfsz	9,f
  5079  01E4  29E0               	goto	u1485
  5080  01E5  0875               	movf	??___ftpack,w
  5081  01E6  04F0               	iorwf	___ftpack@arg,f
  5082  01E7  0876               	movf	??___ftpack+1,w
  5083  01E8  04F1               	iorwf	___ftpack@arg+1,f
  5084  01E9  0877               	movf	??___ftpack+2,w
  5085  01EA  04F2               	iorwf	___ftpack@arg+2,f
  5086  01EB  0874               	movf	___ftpack@sign,w
  5087  01EC  1903               	btfsc	3,2
  5088  01ED  0008               	return
  5089  01EE  17F2               	bsf	___ftpack@arg+2,7
  5090  01EF  0008               	return
  5091  01F0                     __end_of___ftpack:	
  5092                           
  5093                           	psect	text22
  5094  0FC5                     __ptext22:	
  5095 ;; *************** function ___ftge *****************
  5096 ;; Defined at:
  5097 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
  5098 ;; Parameters:    Size  Location     Type
  5099 ;;  ff1             3    0[COMMON] float 
  5100 ;;  ff2             3    3[COMMON] float 
  5101 ;; Auto vars:     Size  Location     Type
  5102 ;;		None
  5103 ;; Return value:  Size  Location     Type
  5104 ;;		None               void
  5105 ;; Registers used:
  5106 ;;		wreg, status,2, status,0
  5107 ;; Tracked objects:
  5108 ;;		On entry : 0/0
  5109 ;;		On exit  : 0/0
  5110 ;;		Unchanged: 0/0
  5111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5112 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5114 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5115 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5116 ;;Total ram usage:        9 bytes
  5117 ;; Hardware stack levels used:    1
  5118 ;; This function calls:
  5119 ;;		Nothing
  5120 ;; This function is called by:
  5121 ;;		_main
  5122 ;;		_ftoa
  5123 ;; This function uses a non-reentrant model
  5124 ;;
  5125                           
  5126                           
  5127                           ;psect for function ___ftge
  5128  0FC5                     ___ftge:	
  5129                           
  5130                           ;incstack = 0
  5131                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  5132  0FC5  1FF2               	btfss	___ftge@ff1+2,7
  5133  0FC6  2FDB               	goto	l1706
  5134  0FC7  0970               	comf	___ftge@ff1,w
  5135  0FC8  00F6               	movwf	??___ftge
  5136  0FC9  0971               	comf	___ftge@ff1+1,w
  5137  0FCA  00F7               	movwf	??___ftge+1
  5138  0FCB  0972               	comf	___ftge@ff1+2,w
  5139  0FCC  00F8               	movwf	??___ftge+2
  5140  0FCD  0AF6               	incf	??___ftge,f
  5141  0FCE  1903               	skipnz
  5142  0FCF  0AF7               	incf	??___ftge+1,f
  5143  0FD0  1903               	skipnz
  5144  0FD1  0AF8               	incf	??___ftge+2,f
  5145  0FD2  3000               	movlw	0
  5146  0FD3  0776               	addwf	??___ftge,w
  5147  0FD4  00F0               	movwf	___ftge@ff1
  5148  0FD5  3000               	movlw	0
  5149  0FD6  3D77               	addwfc	??___ftge+1,w
  5150  0FD7  00F1               	movwf	___ftge@ff1+1
  5151  0FD8  3080               	movlw	128
  5152  0FD9  3D78               	addwfc	??___ftge+2,w
  5153  0FDA  00F2               	movwf	___ftge@ff1+2
  5154  0FDB                     l1706:	
  5155  0FDB  1FF5               	btfss	___ftge@ff2+2,7
  5156  0FDC  2FF1               	goto	l1710
  5157  0FDD  0973               	comf	___ftge@ff2,w
  5158  0FDE  00F6               	movwf	??___ftge
  5159  0FDF  0974               	comf	___ftge@ff2+1,w
  5160  0FE0  00F7               	movwf	??___ftge+1
  5161  0FE1  0975               	comf	___ftge@ff2+2,w
  5162  0FE2  00F8               	movwf	??___ftge+2
  5163  0FE3  0AF6               	incf	??___ftge,f
  5164  0FE4  1903               	skipnz
  5165  0FE5  0AF7               	incf	??___ftge+1,f
  5166  0FE6  1903               	skipnz
  5167  0FE7  0AF8               	incf	??___ftge+2,f
  5168  0FE8  3000               	movlw	0
  5169  0FE9  0776               	addwf	??___ftge,w
  5170  0FEA  00F3               	movwf	___ftge@ff2
  5171  0FEB  3000               	movlw	0
  5172  0FEC  3D77               	addwfc	??___ftge+1,w
  5173  0FED  00F4               	movwf	___ftge@ff2+1
  5174  0FEE  3080               	movlw	128
  5175  0FEF  3D78               	addwfc	??___ftge+2,w
  5176  0FF0  00F5               	movwf	___ftge@ff2+2
  5177  0FF1                     l1710:	
  5178  0FF1  3080               	movlw	128
  5179  0FF2  06F2               	xorwf	___ftge@ff1+2,f
  5180  0FF3  3080               	movlw	128
  5181  0FF4  06F5               	xorwf	___ftge@ff2+2,f
  5182  0FF5  0875               	movf	___ftge@ff2+2,w
  5183  0FF6  0272               	subwf	___ftge@ff1+2,w
  5184  0FF7  1D03               	skipz
  5185  0FF8  0008               	return
  5186  0FF9  0874               	movf	___ftge@ff2+1,w
  5187  0FFA  0271               	subwf	___ftge@ff1+1,w
  5188  0FFB  1D03               	skipz
  5189  0FFC  0008               	return
  5190  0FFD  0873               	movf	___ftge@ff2,w
  5191  0FFE  0270               	subwf	___ftge@ff1,w
  5192  0FFF  0008               	return
  5193  1000                     __end_of___ftge:	
  5194                           
  5195                           	psect	text23
  5196  0EAF                     __ptext23:	
  5197 ;; *************** function _Lcd_Write_String *****************
  5198 ;; Defined at:
  5199 ;;		line 170 in file "LCD.c"
  5200 ;; Parameters:    Size  Location     Type
  5201 ;;  a               2   10[BANK0 ] PTR const unsigned char 
  5202 ;;		 -> ftoa@buf(17), Lcd_Write_Integer@buf(8), STR_1(11), 
  5203 ;; Auto vars:     Size  Location     Type
  5204 ;;  i               2   13[BANK0 ] int 
  5205 ;; Return value:  Size  Location     Type
  5206 ;;                  1    wreg      void 
  5207 ;; Registers used:
  5208 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5209 ;; Tracked objects:
  5210 ;;		On entry : 0/0
  5211 ;;		On exit  : 0/0
  5212 ;;		Unchanged: 0/0
  5213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5214 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5215 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5216 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5217 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5218 ;;Total ram usage:        5 bytes
  5219 ;; Hardware stack levels used:    1
  5220 ;; Hardware stack levels required when called:    2
  5221 ;; This function calls:
  5222 ;;		_Lcd_Write_Char
  5223 ;; This function is called by:
  5224 ;;		_main
  5225 ;;		_Lcd_Write_Integer
  5226 ;;		_Lcd_Write_Float
  5227 ;; This function uses a non-reentrant model
  5228 ;;
  5229                           
  5230                           
  5231                           ;psect for function _Lcd_Write_String
  5232  0EAF                     _Lcd_Write_String:	
  5233                           
  5234                           ;LCD.c: 172: int i;
  5235                           ;LCD.c: 173: for(i=0;a[i]!='\0';i++)
  5236                           
  5237                           ;incstack = 0
  5238                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5239  0EAF  0020               	movlb	0	; select bank0
  5240  0EB0  01AD               	clrf	Lcd_Write_String@i
  5241  0EB1  01AE               	clrf	Lcd_Write_String@i+1
  5242  0EB2                     l1878:	
  5243  0EB2  082A               	movf	Lcd_Write_String@a,w
  5244  0EB3  072D               	addwf	Lcd_Write_String@i,w
  5245  0EB4  0084               	movwf	4
  5246  0EB5  082B               	movf	Lcd_Write_String@a+1,w
  5247  0EB6  3D2E               	addwfc	Lcd_Write_String@i+1,w
  5248  0EB7  0085               	movwf	5
  5249  0EB8  0012               	moviw fsr0++
  5250  0EB9  1903               	btfsc	3,2
  5251  0EBA  0008               	return
  5252                           
  5253                           ;LCD.c: 174: Lcd_Write_Char(a[i]);
  5254  0EBB  082A               	movf	Lcd_Write_String@a,w
  5255  0EBC  072D               	addwf	Lcd_Write_String@i,w
  5256  0EBD  0084               	movwf	4
  5257  0EBE  082B               	movf	Lcd_Write_String@a+1,w
  5258  0EBF  3D2E               	addwfc	Lcd_Write_String@i+1,w
  5259  0EC0  0085               	movwf	5
  5260  0EC1  0800               	movf	0,w	;code access
  5261  0EC2  318F  2763  318E   	fcall	_Lcd_Write_Char
  5262  0EC5  3001               	movlw	1
  5263  0EC6  0020               	movlb	0	; select bank0
  5264  0EC7  07AD               	addwf	Lcd_Write_String@i,f
  5265  0EC8  3000               	movlw	0
  5266  0EC9  3DAE               	addwfc	Lcd_Write_String@i+1,f
  5267  0ECA  2EB2               	goto	l1878
  5268  0ECB                     __end_of_Lcd_Write_String:	
  5269                           
  5270                           	psect	text24
  5271  0F63                     __ptext24:	
  5272 ;; *************** function _Lcd_Write_Char *****************
  5273 ;; Defined at:
  5274 ;;		line 146 in file "LCD.c"
  5275 ;; Parameters:    Size  Location     Type
  5276 ;;  a               1    wreg     unsigned char 
  5277 ;; Auto vars:     Size  Location     Type
  5278 ;;  a               1    4[COMMON] unsigned char 
  5279 ;;  y               1    3[COMMON] unsigned char 
  5280 ;;  temp            1    2[COMMON] unsigned char 
  5281 ;; Return value:  Size  Location     Type
  5282 ;;                  1    wreg      void 
  5283 ;; Registers used:
  5284 ;;		wreg, status,2, status,0, pclath, cstack
  5285 ;; Tracked objects:
  5286 ;;		On entry : 0/0
  5287 ;;		On exit  : 0/0
  5288 ;;		Unchanged: 0/0
  5289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5291 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5292 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5293 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5294 ;;Total ram usage:        4 bytes
  5295 ;; Hardware stack levels used:    1
  5296 ;; Hardware stack levels required when called:    1
  5297 ;; This function calls:
  5298 ;;		_Lcd_Port
  5299 ;; This function is called by:
  5300 ;;		_Lcd_Write_String
  5301 ;; This function uses a non-reentrant model
  5302 ;;
  5303                           
  5304                           
  5305                           ;psect for function _Lcd_Write_Char
  5306  0F63                     _Lcd_Write_Char:	
  5307                           
  5308                           ;incstack = 0
  5309                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  5310                           ;Lcd_Write_Char@a stored from wreg
  5311  0F63  00F4               	movwf	Lcd_Write_Char@a
  5312                           
  5313                           ;LCD.c: 148: char temp,y;
  5314                           ;LCD.c: 149: temp = a&0x0F;
  5315  0F64  0874               	movf	Lcd_Write_Char@a,w
  5316  0F65  390F               	andlw	15
  5317  0F66  00F1               	movwf	??_Lcd_Write_Char
  5318  0F67  0871               	movf	??_Lcd_Write_Char,w
  5319  0F68  00F2               	movwf	Lcd_Write_Char@temp
  5320                           
  5321                           ;LCD.c: 150: y = a&0xF0;
  5322  0F69  0874               	movf	Lcd_Write_Char@a,w
  5323  0F6A  39F0               	andlw	240
  5324  0F6B  00F1               	movwf	??_Lcd_Write_Char
  5325  0F6C  0871               	movf	??_Lcd_Write_Char,w
  5326  0F6D  00F3               	movwf	Lcd_Write_Char@y
  5327                           
  5328                           ;LCD.c: 151: RD2 = 1;
  5329  0F6E  0020               	movlb	0	; select bank0
  5330  0F6F  150F               	bsf	15,2	;volatile
  5331                           
  5332                           ;LCD.c: 152: Lcd_Port(y>>4);
  5333  0F70  0873               	movf	Lcd_Write_Char@y,w
  5334  0F71  00F1               	movwf	??_Lcd_Write_Char
  5335  0F72  3004               	movlw	4
  5336  0F73                     u2095:	
  5337  0F73  36F1               	lsrf	??_Lcd_Write_Char,f
  5338  0F74  0B89               	decfsz	9,f
  5339  0F75  2F73               	goto	u2095
  5340  0F76  0871               	movf	??_Lcd_Write_Char,w
  5341  0F77  318E  2663  318F   	fcall	_Lcd_Port
  5342                           
  5343                           ;LCD.c: 153: RD3 = 1;
  5344  0F7A  0020               	movlb	0	; select bank0
  5345  0F7B  158F               	bsf	15,3	;volatile
  5346                           
  5347                           ;LCD.c: 154: _delay((unsigned long)((20)*(16000000/4000000.0)));
  5348  0F7C  301A               	movlw	26
  5349  0F7D  00F1               	movwf	??_Lcd_Write_Char
  5350  0F7E                     u2857:	
  5351  0F7E  0BF1               	decfsz	??_Lcd_Write_Char,f
  5352  0F7F  2F7E               	goto	u2857
  5353  0F80  0000               	nop
  5354                           
  5355                           ;LCD.c: 155: RD3 = 0;
  5356  0F81  0020               	movlb	0	; select bank0
  5357  0F82  118F               	bcf	15,3	;volatile
  5358                           
  5359                           ;LCD.c: 156: Lcd_Port(temp);
  5360  0F83  0872               	movf	Lcd_Write_Char@temp,w
  5361  0F84  318E  2663  318F   	fcall	_Lcd_Port
  5362                           
  5363                           ;LCD.c: 157: RD3 = 1;
  5364  0F87  0020               	movlb	0	; select bank0
  5365  0F88  158F               	bsf	15,3	;volatile
  5366                           
  5367                           ;LCD.c: 158: _delay((unsigned long)((20)*(16000000/4000000.0)));
  5368  0F89  301A               	movlw	26
  5369  0F8A  00F1               	movwf	??_Lcd_Write_Char
  5370  0F8B                     u2867:	
  5371  0F8B  0BF1               	decfsz	??_Lcd_Write_Char,f
  5372  0F8C  2F8B               	goto	u2867
  5373  0F8D  0000               	nop
  5374                           
  5375                           ;LCD.c: 159: RD3 = 0;
  5376  0F8E  0020               	movlb	0	; select bank0
  5377  0F8F  118F               	bcf	15,3	;volatile
  5378  0F90  0008               	return
  5379  0F91                     __end_of_Lcd_Write_Char:	
  5380                           
  5381                           	psect	text25
  5382  0E13                     __ptext25:	
  5383 ;; *************** function _Lcd_Shift_Right *****************
  5384 ;; Defined at:
  5385 ;;		line 185 in file "LCD.c"
  5386 ;; Parameters:    Size  Location     Type
  5387 ;;		None
  5388 ;; Auto vars:     Size  Location     Type
  5389 ;;		None
  5390 ;; Return value:  Size  Location     Type
  5391 ;;                  1    wreg      void 
  5392 ;; Registers used:
  5393 ;;		wreg, status,2, status,0, pclath, cstack
  5394 ;; Tracked objects:
  5395 ;;		On entry : 0/0
  5396 ;;		On exit  : 0/0
  5397 ;;		Unchanged: 0/0
  5398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5403 ;;Total ram usage:        0 bytes
  5404 ;; Hardware stack levels used:    1
  5405 ;; Hardware stack levels required when called:    2
  5406 ;; This function calls:
  5407 ;;		_Lcd_Cmd
  5408 ;; This function is called by:
  5409 ;;		_main
  5410 ;; This function uses a non-reentrant model
  5411 ;;
  5412                           
  5413                           
  5414                           ;psect for function _Lcd_Shift_Right
  5415  0E13                     _Lcd_Shift_Right:	
  5416                           
  5417                           ;LCD.c: 187: Lcd_Cmd(0x01);
  5418                           
  5419                           ;incstack = 0
  5420                           ; Regs used in _Lcd_Shift_Right: [wreg+status,2+status,0+pclath+cstack]
  5421  0E13  3001               	movlw	1
  5422  0E14  318E  264E  318E   	fcall	_Lcd_Cmd
  5423                           
  5424                           ;LCD.c: 188: Lcd_Cmd(0x0C);
  5425  0E17  300C               	movlw	12
  5426  0E18  318E  264E         	fcall	_Lcd_Cmd
  5427  0E1A  0008               	return
  5428  0E1B                     __end_of_Lcd_Shift_Right:	
  5429                           
  5430                           	psect	text26
  5431  0E0B                     __ptext26:	
  5432 ;; *************** function _Lcd_Shift_Left *****************
  5433 ;; Defined at:
  5434 ;;		line 199 in file "LCD.c"
  5435 ;; Parameters:    Size  Location     Type
  5436 ;;		None
  5437 ;; Auto vars:     Size  Location     Type
  5438 ;;		None
  5439 ;; Return value:  Size  Location     Type
  5440 ;;                  1    wreg      void 
  5441 ;; Registers used:
  5442 ;;		wreg, status,2, status,0, pclath, cstack
  5443 ;; Tracked objects:
  5444 ;;		On entry : 0/0
  5445 ;;		On exit  : 0/0
  5446 ;;		Unchanged: 0/0
  5447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5452 ;;Total ram usage:        0 bytes
  5453 ;; Hardware stack levels used:    1
  5454 ;; Hardware stack levels required when called:    2
  5455 ;; This function calls:
  5456 ;;		_Lcd_Cmd
  5457 ;; This function is called by:
  5458 ;;		_main
  5459 ;; This function uses a non-reentrant model
  5460 ;;
  5461                           
  5462                           
  5463                           ;psect for function _Lcd_Shift_Left
  5464  0E0B                     _Lcd_Shift_Left:	
  5465                           
  5466                           ;LCD.c: 201: Lcd_Cmd(0x01);
  5467                           
  5468                           ;incstack = 0
  5469                           ; Regs used in _Lcd_Shift_Left: [wreg+status,2+status,0+pclath+cstack]
  5470  0E0B  3001               	movlw	1
  5471  0E0C  318E  264E  318E   	fcall	_Lcd_Cmd
  5472                           
  5473                           ;LCD.c: 202: Lcd_Cmd(0x08);
  5474  0E0F  3008               	movlw	8
  5475  0E10  318E  264E         	fcall	_Lcd_Cmd
  5476  0E12  0008               	return
  5477  0E13                     __end_of_Lcd_Shift_Left:	
  5478                           
  5479                           	psect	text27
  5480  000E                     __ptext27:	
  5481 ;; *************** function _Lcd_Set_Cursor *****************
  5482 ;; Defined at:
  5483 ;;		line 90 in file "LCD.c"
  5484 ;; Parameters:    Size  Location     Type
  5485 ;;  a               1    wreg     unsigned char 
  5486 ;;  b               1    4[COMMON] unsigned char 
  5487 ;; Auto vars:     Size  Location     Type
  5488 ;;  a               1    7[COMMON] unsigned char 
  5489 ;;  temp            1   10[COMMON] unsigned char 
  5490 ;;  y               1    9[COMMON] unsigned char 
  5491 ;;  z               1    8[COMMON] unsigned char 
  5492 ;; Return value:  Size  Location     Type
  5493 ;;                  1    wreg      void 
  5494 ;; Registers used:
  5495 ;;		wreg, status,2, status,0, pclath, cstack
  5496 ;; Tracked objects:
  5497 ;;		On entry : 0/0
  5498 ;;		On exit  : 0/0
  5499 ;;		Unchanged: 0/0
  5500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5501 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5502 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5503 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5504 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5505 ;;Total ram usage:        7 bytes
  5506 ;; Hardware stack levels used:    1
  5507 ;; Hardware stack levels required when called:    2
  5508 ;; This function calls:
  5509 ;;		_Lcd_Cmd
  5510 ;; This function is called by:
  5511 ;;		_main
  5512 ;; This function uses a non-reentrant model
  5513 ;;
  5514                           
  5515                           
  5516                           ;psect for function _Lcd_Set_Cursor
  5517  000E                     _Lcd_Set_Cursor:	
  5518                           
  5519                           ;incstack = 0
  5520                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  5521                           ;Lcd_Set_Cursor@a stored from wreg
  5522  000E  00F7               	movwf	Lcd_Set_Cursor@a
  5523                           
  5524                           ;LCD.c: 92: char temp,z,y;
  5525                           ;LCD.c: 93: if(a == 1)
  5526  000F  0377               	decf	Lcd_Set_Cursor@a,w
  5527  0010  1D03               	btfss	3,2
  5528  0011  282E               	goto	l1958
  5529                           
  5530                           ;LCD.c: 94: {
  5531                           ;LCD.c: 95: temp = 0x80 + b - 1;
  5532  0012  0874               	movf	Lcd_Set_Cursor@b,w
  5533  0013  3E7F               	addlw	127
  5534  0014  00F5               	movwf	??_Lcd_Set_Cursor
  5535  0015  0875               	movf	??_Lcd_Set_Cursor,w
  5536  0016  00FA               	movwf	Lcd_Set_Cursor@temp
  5537                           
  5538                           ;LCD.c: 96: z = temp>>4;
  5539  0017  087A               	movf	Lcd_Set_Cursor@temp,w
  5540  0018  00F5               	movwf	??_Lcd_Set_Cursor
  5541  0019  3004               	movlw	4
  5542  001A                     u2645:	
  5543  001A  36F5               	lsrf	??_Lcd_Set_Cursor,f
  5544  001B  0B89               	decfsz	9,f
  5545  001C  281A               	goto	u2645
  5546  001D  0875               	movf	??_Lcd_Set_Cursor,w
  5547  001E  00F6               	movwf	??_Lcd_Set_Cursor+1
  5548  001F  0876               	movf	??_Lcd_Set_Cursor+1,w
  5549  0020  00F8               	movwf	Lcd_Set_Cursor@z
  5550                           
  5551                           ;LCD.c: 97: y = temp & 0x0F;
  5552  0021  087A               	movf	Lcd_Set_Cursor@temp,w
  5553  0022  390F               	andlw	15
  5554  0023  00F5               	movwf	??_Lcd_Set_Cursor
  5555  0024  0875               	movf	??_Lcd_Set_Cursor,w
  5556  0025  00F9               	movwf	Lcd_Set_Cursor@y
  5557                           
  5558                           ;LCD.c: 98: Lcd_Cmd(z);
  5559  0026  0878               	movf	Lcd_Set_Cursor@z,w
  5560  0027  318E  264E  3180   	fcall	_Lcd_Cmd
  5561                           
  5562                           ;LCD.c: 99: Lcd_Cmd(y);
  5563  002A  0879               	movf	Lcd_Set_Cursor@y,w
  5564  002B  318E  264E         	fcall	_Lcd_Cmd
  5565                           
  5566                           ;LCD.c: 100: }
  5567  002D  0008               	return
  5568  002E                     l1958:	
  5569                           
  5570                           ;LCD.c: 101: else if(a == 2)
  5571  002E  3002               	movlw	2
  5572  002F  0677               	xorwf	Lcd_Set_Cursor@a,w
  5573  0030  1D03               	btfss	3,2
  5574  0031  0008               	return
  5575                           
  5576                           ;LCD.c: 102: {
  5577                           ;LCD.c: 103: temp = 0xC0 + b - 1;
  5578  0032  0874               	movf	Lcd_Set_Cursor@b,w
  5579  0033  3EBF               	addlw	191
  5580  0034  00F5               	movwf	??_Lcd_Set_Cursor
  5581  0035  0875               	movf	??_Lcd_Set_Cursor,w
  5582  0036  00FA               	movwf	Lcd_Set_Cursor@temp
  5583                           
  5584                           ;LCD.c: 104: z = temp>>4;
  5585  0037  087A               	movf	Lcd_Set_Cursor@temp,w
  5586  0038  00F5               	movwf	??_Lcd_Set_Cursor
  5587  0039  3004               	movlw	4
  5588  003A                     u2665:	
  5589  003A  36F5               	lsrf	??_Lcd_Set_Cursor,f
  5590  003B  0B89               	decfsz	9,f
  5591  003C  283A               	goto	u2665
  5592  003D  0875               	movf	??_Lcd_Set_Cursor,w
  5593  003E  00F6               	movwf	??_Lcd_Set_Cursor+1
  5594  003F  0876               	movf	??_Lcd_Set_Cursor+1,w
  5595  0040  00F8               	movwf	Lcd_Set_Cursor@z
  5596                           
  5597                           ;LCD.c: 105: y = temp & 0x0F;
  5598  0041  087A               	movf	Lcd_Set_Cursor@temp,w
  5599  0042  390F               	andlw	15
  5600  0043  00F5               	movwf	??_Lcd_Set_Cursor
  5601  0044  0875               	movf	??_Lcd_Set_Cursor,w
  5602  0045  00F9               	movwf	Lcd_Set_Cursor@y
  5603                           
  5604                           ;LCD.c: 106: Lcd_Cmd(z);
  5605  0046  0878               	movf	Lcd_Set_Cursor@z,w
  5606  0047  318E  264E  3180   	fcall	_Lcd_Cmd
  5607                           
  5608                           ;LCD.c: 107: Lcd_Cmd(y);
  5609  004A  0879               	movf	Lcd_Set_Cursor@y,w
  5610  004B  318E  264E         	fcall	_Lcd_Cmd
  5611  004D  0008               	return
  5612  004E                     __end_of_Lcd_Set_Cursor:	
  5613                           
  5614                           	psect	text28
  5615  0091                     __ptext28:	
  5616 ;; *************** function _Lcd_Init *****************
  5617 ;; Defined at:
  5618 ;;		line 119 in file "LCD.c"
  5619 ;; Parameters:    Size  Location     Type
  5620 ;;		None
  5621 ;; Auto vars:     Size  Location     Type
  5622 ;;		None
  5623 ;; Return value:  Size  Location     Type
  5624 ;;                  1    wreg      void 
  5625 ;; Registers used:
  5626 ;;		wreg, status,2, status,0, pclath, cstack
  5627 ;; Tracked objects:
  5628 ;;		On entry : 0/0
  5629 ;;		On exit  : 0/0
  5630 ;;		Unchanged: 0/0
  5631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5634 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5635 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5636 ;;Total ram usage:        2 bytes
  5637 ;; Hardware stack levels used:    1
  5638 ;; Hardware stack levels required when called:    2
  5639 ;; This function calls:
  5640 ;;		_Lcd_Cmd
  5641 ;;		_Lcd_Port
  5642 ;; This function is called by:
  5643 ;;		_main
  5644 ;; This function uses a non-reentrant model
  5645 ;;
  5646                           
  5647                           
  5648                           ;psect for function _Lcd_Init
  5649  0091                     _Lcd_Init:	
  5650                           
  5651                           ;LCD.c: 121: Lcd_Port(0x00);
  5652                           
  5653                           ;incstack = 0
  5654                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  5655  0091  3000               	movlw	0
  5656  0092  318E  2663  3180   	fcall	_Lcd_Port
  5657                           
  5658                           ;LCD.c: 122: _delay((unsigned long)((10)*(16000000/4000.0)));
  5659  0095  3034               	movlw	52
  5660  0096  00F5               	movwf	??_Lcd_Init+1
  5661  0097  30F1               	movlw	241
  5662  0098  00F4               	movwf	??_Lcd_Init
  5663  0099                     u2877:	
  5664  0099  0BF4               	decfsz	??_Lcd_Init,f
  5665  009A  2899               	goto	u2877
  5666  009B  0BF5               	decfsz	??_Lcd_Init+1,f
  5667  009C  2899               	goto	u2877
  5668  009D  3200               	nop2
  5669                           
  5670                           ;LCD.c: 123: Lcd_Cmd(0x03);
  5671  009E  3003               	movlw	3
  5672  009F  318E  264E  3180   	fcall	_Lcd_Cmd
  5673                           
  5674                           ;LCD.c: 124: _delay((unsigned long)((3)*(16000000/4000.0)));
  5675  00A2  3010               	movlw	16
  5676  00A3  00F5               	movwf	??_Lcd_Init+1
  5677  00A4  3094               	movlw	148
  5678  00A5  00F4               	movwf	??_Lcd_Init
  5679  00A6                     u2887:	
  5680  00A6  0BF4               	decfsz	??_Lcd_Init,f
  5681  00A7  28A6               	goto	u2887
  5682  00A8  0BF5               	decfsz	??_Lcd_Init+1,f
  5683  00A9  28A6               	goto	u2887
  5684  00AA  0000               	nop
  5685                           
  5686                           ;LCD.c: 125: Lcd_Cmd(0x03);
  5687  00AB  3003               	movlw	3
  5688  00AC  318E  264E  3180   	fcall	_Lcd_Cmd
  5689                           
  5690                           ;LCD.c: 126: _delay((unsigned long)((10)*(16000000/4000.0)));
  5691  00AF  3034               	movlw	52
  5692  00B0  00F5               	movwf	??_Lcd_Init+1
  5693  00B1  30F1               	movlw	241
  5694  00B2  00F4               	movwf	??_Lcd_Init
  5695  00B3                     u2897:	
  5696  00B3  0BF4               	decfsz	??_Lcd_Init,f
  5697  00B4  28B3               	goto	u2897
  5698  00B5  0BF5               	decfsz	??_Lcd_Init+1,f
  5699  00B6  28B3               	goto	u2897
  5700  00B7  3200               	nop2
  5701                           
  5702                           ;LCD.c: 127: Lcd_Cmd(0x03);
  5703  00B8  3003               	movlw	3
  5704  00B9  318E  264E  3180   	fcall	_Lcd_Cmd
  5705                           
  5706                           ;LCD.c: 129: Lcd_Cmd(0x02);
  5707  00BC  3002               	movlw	2
  5708  00BD  318E  264E  3180   	fcall	_Lcd_Cmd
  5709                           
  5710                           ;LCD.c: 130: Lcd_Cmd(0x02);
  5711  00C0  3002               	movlw	2
  5712  00C1  318E  264E  3180   	fcall	_Lcd_Cmd
  5713                           
  5714                           ;LCD.c: 131: Lcd_Cmd(0x08);
  5715  00C4  3008               	movlw	8
  5716  00C5  318E  264E  3180   	fcall	_Lcd_Cmd
  5717                           
  5718                           ;LCD.c: 132: Lcd_Cmd(0x00);
  5719  00C8  3000               	movlw	0
  5720  00C9  318E  264E  3180   	fcall	_Lcd_Cmd
  5721                           
  5722                           ;LCD.c: 133: Lcd_Cmd(0x0C);
  5723  00CC  300C               	movlw	12
  5724  00CD  318E  264E  3180   	fcall	_Lcd_Cmd
  5725                           
  5726                           ;LCD.c: 134: Lcd_Cmd(0x00);
  5727  00D0  3000               	movlw	0
  5728  00D1  318E  264E  3180   	fcall	_Lcd_Cmd
  5729                           
  5730                           ;LCD.c: 135: Lcd_Cmd(0x06);
  5731  00D4  3006               	movlw	6
  5732  00D5  318E  264E         	fcall	_Lcd_Cmd
  5733  00D7  0008               	return
  5734  00D8                     __end_of_Lcd_Init:	
  5735                           
  5736                           	psect	text29
  5737  0E03                     __ptext29:	
  5738 ;; *************** function _Lcd_Clear *****************
  5739 ;; Defined at:
  5740 ;;		line 76 in file "LCD.c"
  5741 ;; Parameters:    Size  Location     Type
  5742 ;;		None
  5743 ;; Auto vars:     Size  Location     Type
  5744 ;;		None
  5745 ;; Return value:  Size  Location     Type
  5746 ;;                  1    wreg      void 
  5747 ;; Registers used:
  5748 ;;		wreg, status,2, status,0, pclath, cstack
  5749 ;; Tracked objects:
  5750 ;;		On entry : 0/0
  5751 ;;		On exit  : 0/0
  5752 ;;		Unchanged: 0/0
  5753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5758 ;;Total ram usage:        0 bytes
  5759 ;; Hardware stack levels used:    1
  5760 ;; Hardware stack levels required when called:    2
  5761 ;; This function calls:
  5762 ;;		_Lcd_Cmd
  5763 ;; This function is called by:
  5764 ;;		_main
  5765 ;; This function uses a non-reentrant model
  5766 ;;
  5767                           
  5768                           
  5769                           ;psect for function _Lcd_Clear
  5770  0E03                     _Lcd_Clear:	
  5771                           
  5772                           ;LCD.c: 78: Lcd_Cmd(0);
  5773                           
  5774                           ;incstack = 0
  5775                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  5776  0E03  3000               	movlw	0
  5777  0E04  318E  264E  318E   	fcall	_Lcd_Cmd
  5778                           
  5779                           ;LCD.c: 79: Lcd_Cmd(1);
  5780  0E07  3001               	movlw	1
  5781  0E08  318E  264E         	fcall	_Lcd_Cmd
  5782  0E0A  0008               	return
  5783  0E0B                     __end_of_Lcd_Clear:	
  5784                           
  5785                           	psect	text30
  5786  0E4E                     __ptext30:	
  5787 ;; *************** function _Lcd_Cmd *****************
  5788 ;; Defined at:
  5789 ;;		line 59 in file "LCD.c"
  5790 ;; Parameters:    Size  Location     Type
  5791 ;;  a               1    wreg     unsigned char 
  5792 ;; Auto vars:     Size  Location     Type
  5793 ;;  a               1    3[COMMON] unsigned char 
  5794 ;; Return value:  Size  Location     Type
  5795 ;;                  1    wreg      void 
  5796 ;; Registers used:
  5797 ;;		wreg, status,2, status,0, pclath, cstack
  5798 ;; Tracked objects:
  5799 ;;		On entry : 0/0
  5800 ;;		On exit  : 0/0
  5801 ;;		Unchanged: 0/0
  5802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5804 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5805 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5806 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5807 ;;Total ram usage:        3 bytes
  5808 ;; Hardware stack levels used:    1
  5809 ;; Hardware stack levels required when called:    1
  5810 ;; This function calls:
  5811 ;;		_Lcd_Port
  5812 ;; This function is called by:
  5813 ;;		_Lcd_Clear
  5814 ;;		_Lcd_Set_Cursor
  5815 ;;		_Lcd_Init
  5816 ;;		_Lcd_Shift_Right
  5817 ;;		_Lcd_Shift_Left
  5818 ;; This function uses a non-reentrant model
  5819 ;;
  5820                           
  5821                           
  5822                           ;psect for function _Lcd_Cmd
  5823  0E4E                     _Lcd_Cmd:	
  5824                           
  5825                           ;incstack = 0
  5826                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  5827                           ;Lcd_Cmd@a stored from wreg
  5828  0E4E  00F3               	movwf	Lcd_Cmd@a
  5829                           
  5830                           ;LCD.c: 61: RD2 = 0;
  5831  0E4F  0020               	movlb	0	; select bank0
  5832  0E50  110F               	bcf	15,2	;volatile
  5833                           
  5834                           ;LCD.c: 62: Lcd_Port(a);
  5835  0E51  0873               	movf	Lcd_Cmd@a,w
  5836  0E52  318E  2663  318E   	fcall	_Lcd_Port
  5837                           
  5838                           ;LCD.c: 63: RD3 = 1;
  5839  0E55  0020               	movlb	0	; select bank0
  5840  0E56  158F               	bsf	15,3	;volatile
  5841                           
  5842                           ;LCD.c: 64: _delay((unsigned long)((1)*(16000000/4000.0)));
  5843  0E57  3006               	movlw	6
  5844  0E58  00F2               	movwf	??_Lcd_Cmd+1
  5845  0E59  3030               	movlw	48
  5846  0E5A  00F1               	movwf	??_Lcd_Cmd
  5847  0E5B                     u2907:	
  5848  0E5B  0BF1               	decfsz	??_Lcd_Cmd,f
  5849  0E5C  2E5B               	goto	u2907
  5850  0E5D  0BF2               	decfsz	??_Lcd_Cmd+1,f
  5851  0E5E  2E5B               	goto	u2907
  5852  0E5F  0000               	nop
  5853                           
  5854                           ;LCD.c: 65: RD3 = 0;
  5855  0E60  0020               	movlb	0	; select bank0
  5856  0E61  118F               	bcf	15,3	;volatile
  5857  0E62  0008               	return
  5858  0E63                     __end_of_Lcd_Cmd:	
  5859                           
  5860                           	psect	text31
  5861  0E63                     __ptext31:	
  5862 ;; *************** function _Lcd_Port *****************
  5863 ;; Defined at:
  5864 ;;		line 28 in file "LCD.c"
  5865 ;; Parameters:    Size  Location     Type
  5866 ;;  a               1    wreg     unsigned char 
  5867 ;; Auto vars:     Size  Location     Type
  5868 ;;  a               1    0[COMMON] unsigned char 
  5869 ;; Return value:  Size  Location     Type
  5870 ;;                  1    wreg      void 
  5871 ;; Registers used:
  5872 ;;		wreg
  5873 ;; Tracked objects:
  5874 ;;		On entry : 0/0
  5875 ;;		On exit  : 0/0
  5876 ;;		Unchanged: 0/0
  5877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5879 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5881 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5882 ;;Total ram usage:        1 bytes
  5883 ;; Hardware stack levels used:    1
  5884 ;; This function calls:
  5885 ;;		Nothing
  5886 ;; This function is called by:
  5887 ;;		_Lcd_Cmd
  5888 ;;		_Lcd_Init
  5889 ;;		_Lcd_Write_Char
  5890 ;; This function uses a non-reentrant model
  5891 ;;
  5892                           
  5893                           
  5894                           ;psect for function _Lcd_Port
  5895  0E63                     _Lcd_Port:	
  5896                           
  5897                           ;incstack = 0
  5898                           ; Regs used in _Lcd_Port: [wreg]
  5899                           ;Lcd_Port@a stored from wreg
  5900  0E63  00F0               	movwf	Lcd_Port@a
  5901                           
  5902                           ;LCD.c: 30: if(a & 1)
  5903  0E64  1C70               	btfss	Lcd_Port@a,0
  5904  0E65  2E69               	goto	l99
  5905                           
  5906                           ;LCD.c: 31: RD4 = 1;
  5907  0E66  0020               	movlb	0	; select bank0
  5908  0E67  160F               	bsf	15,4	;volatile
  5909  0E68  2E6B               	goto	l1378
  5910  0E69                     l99:	
  5911                           
  5912                           ;LCD.c: 32: else
  5913                           ;LCD.c: 33: RD4 = 0;
  5914  0E69  0020               	movlb	0	; select bank0
  5915  0E6A  120F               	bcf	15,4	;volatile
  5916  0E6B                     l1378:	
  5917                           
  5918                           ;LCD.c: 35: if(a & 2)
  5919  0E6B  1CF0               	btfss	Lcd_Port@a,1
  5920  0E6C  2E6F               	goto	l101
  5921                           
  5922                           ;LCD.c: 36: RD5 = 1;
  5923  0E6D  168F               	bsf	15,5	;volatile
  5924  0E6E  2E70               	goto	l1382
  5925  0E6F                     l101:	
  5926                           
  5927                           ;LCD.c: 37: else
  5928                           ;LCD.c: 38: RD5 = 0;
  5929  0E6F  128F               	bcf	15,5	;volatile
  5930  0E70                     l1382:	
  5931                           
  5932                           ;LCD.c: 40: if(a & 4)
  5933  0E70  1D70               	btfss	Lcd_Port@a,2
  5934  0E71  2E74               	goto	l103
  5935                           
  5936                           ;LCD.c: 41: RD6 = 1;
  5937  0E72  170F               	bsf	15,6	;volatile
  5938  0E73  2E75               	goto	l1386
  5939  0E74                     l103:	
  5940                           
  5941                           ;LCD.c: 42: else
  5942                           ;LCD.c: 43: RD6 = 0;
  5943  0E74  130F               	bcf	15,6	;volatile
  5944  0E75                     l1386:	
  5945                           
  5946                           ;LCD.c: 45: if(a & 8)
  5947  0E75  1DF0               	btfss	Lcd_Port@a,3
  5948  0E76  2E79               	goto	l105
  5949                           
  5950                           ;LCD.c: 46: RD7 = 1;
  5951  0E77  178F               	bsf	15,7	;volatile
  5952  0E78  0008               	return
  5953  0E79                     l105:	
  5954                           
  5955                           ;LCD.c: 47: else
  5956                           ;LCD.c: 48: RD7 = 0;
  5957  0E79  138F               	bcf	15,7	;volatile
  5958  0E7A  0008               	return
  5959  0E7B                     __end_of_Lcd_Port:	
  5960  007E                     btemp	set	126	;btemp
  5961  007E                     wtemp	set	126
  5962  007E                     wtemp0	set	126
  5963  0080                     wtemp1	set	128
  5964  0082                     wtemp2	set	130
  5965  0084                     wtemp3	set	132
  5966  0086                     wtemp4	set	134
  5967  0088                     wtemp5	set	136
  5968  007F                     wtemp6	set	127
  5969  007E                     ttemp	set	126
  5970  007E                     ttemp0	set	126
  5971  0081                     ttemp1	set	129
  5972  0084                     ttemp2	set	132
  5973  0087                     ttemp3	set	135
  5974  007F                     ttemp4	set	127
  5975  007E                     ltemp	set	126
  5976  007E                     ltemp0	set	126
  5977  0082                     ltemp1	set	130
  5978  0086                     ltemp2	set	134
  5979  0080                     ltemp3	set	128


Data Sizes:
    Strings     22
    Constant    40
    Data        0
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     70      70
    BANK1            80      0      17
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    ftoa@status	PTR int  size(1) Largest target is 2
		 -> Lcd_Write_Float@status(BANK0[2]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 8
		 -> Lcd_Write_Integer@buf(BANK0[8]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 8
		 -> Lcd_Write_Integer@buf(BANK0[8]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 8
		 -> Lcd_Write_Integer@buf(BANK0[8]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 8
		 -> Lcd_Write_Integer@buf(BANK0[8]), 

    ftoa@cp	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_2(CODE[11]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__ftoa	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    Lcd_Write_Float@buf11	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 8
		 -> Lcd_Write_Integer@buf(BANK0[8]), 

    Lcd_Write_String@a	PTR const unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK1[17]), Lcd_Write_Integer@buf(BANK0[8]), STR_1(CODE[11]), 


Critical Paths under _main in COMMON

    _main->___ftadd
    _Lcd_Write_Integer->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _ftoa->___ftmul
    _ftoa->___lltoft
    _sprintf->___lldiv
    ___llmod->___lldiv
    ___lltoft->___ftpack
    ___fttol->___ftmul
    ___ftsub->___ftadd
    ___ftsub->___lltoft
    ___ftadd->___ftpack
    ___ftmul->___ftpack
    _Lcd_Write_String->_itoa
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Shift_Right->_Lcd_Cmd
    _Lcd_Shift_Left->_Lcd_Cmd
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_Lcd_Write_Float
    _Lcd_Write_Integer->_Lcd_Write_String
    _itoa->_utoa
    _Lcd_Write_Float->_ftoa
    _ftoa->_sprintf
    _sprintf->___llmod
    ___fttol->___ftmul
    ___ftsub->___ftadd
    _Lcd_Write_String->_itoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0   17251
                                             60 BANK0     10    10      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Shift_Left
                    _Lcd_Shift_Right
                    _Lcd_Write_Float
                  _Lcd_Write_Integer
                   _Lcd_Write_String
                            ___ftadd
                             ___ftge
                           _initMain
 ---------------------------------------------------------------------------------
 (1) _initMain                                             0     0      0       0
                        _internal_16
 ---------------------------------------------------------------------------------
 (2) _internal_16                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_Integer                                   10     8      2    1918
                                             15 BANK0     10     8      2
                   _Lcd_Write_String
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 7     3      4    1386
                                             13 COMMON     1     1      0
                                              4 BANK0      6     2      4
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     5      4    1074
                                              8 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     265
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     374
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_Float                                      8     5      3   10468
                                             52 BANK0      8     5      3
                   _Lcd_Write_String
                               _ftoa
 ---------------------------------------------------------------------------------
 (2) _ftoa                                                14    10      4    9921
                                             38 BANK0     14    10      4
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                           ___lltoft
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             36    26     10    1896
                                             10 BANK0     28    18     10
                            ___lldiv
                            ___llmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     304
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___llmod                                             10     2      8     265
                                              0 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             14     6      8     268
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             6     2      4    1790
                                              8 COMMON     6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     358
                                             10 BANK0     14    10      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftsub                                              6     0      6    2893
                                              7 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftadd                                             13     7      6    2720
                                              8 COMMON     6     0      6
                                              0 BANK0      7     7      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3      98
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    2100
                                              8 COMMON     6     0      6
                                              0 BANK0     10    10      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    1668
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) ___ftge                                               9     3      6     454
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     5     3      2     427
                                             10 BANK0      5     3      2
                     _Lcd_Write_Char
                               _itoa (ARG)
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Shift_Right                                      0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Shift_Left                                       0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     486
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Shift_Left
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Shift_Right
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Float
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
       _itoa (ARG)
         _utoa
           ___lwdiv
           ___lwmod
     _ftoa
       ___ftge
       ___ftmul
         ___ftpack
       ___ftneg
       ___ftsub
         ___ftadd
           ___ftpack
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___ftpack
       ___lltoft
         ___ftpack
       _sprintf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         _isdigit
   _Lcd_Write_Integer
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
       _itoa (ARG)
         _utoa
           ___lwdiv
           ___lwmod
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
     _itoa (ARG)
       _utoa
         ___lwdiv
         ___lwmod
   ___ftadd
     ___ftpack
   ___ftge
   _initMain
     _internal_16

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     46      46       5       87.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      11       7       21.3%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      65      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      65      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Sat Feb 25 21:31:47 2017

               __CFG_CP$OFF 0000                          l99 0E69         ___wmul@multiplicand 0072  
              ___ftadd@exp1 0026                ___ftadd@exp2 0025                ___ftadd@sign 0024  
          ?_Lcd_Write_Float 0054                         l101 0E6F                         l103 0E74  
                       l105 0E79                         l172 06DE                         l169 06BF  
                       l363 01D1                         l195 0E9C                         l364 01D9  
                       l356 01BE                         l455 025D                         l387 046B  
                       l475 0176                         _RD2 007A                         _RD3 007B  
                       _RD4 007C                         _RD5 007D                         _RD6 007E  
                       _RD7 007F                __CFG_BORV$LO 0000                         wreg 0009  
              __CFG_IESO$ON 0000                __CFG_LVP$OFF 0000                        l2010 053A  
                      l2004 052C                        l2026 0572                        l2018 055B  
                      l1404 0E96                        l2044 05BC                        l1350 019B  
                      l1422 03F4                        l1502 0116                        l2038 05A4  
                      l1360 01C3                        l1352 01A5                        l1432 040A  
                      l2056 0608                        l1362 01CB                        l1354 01AA  
                      l1346 0194                        l1450 0437                        l1426 03FB  
                      l1506 0121                        l1522 007D                        l1452 0441  
                      l1444 0424                        l1516 0057                        l1612 064F  
                      l1620 067D                        l1540 0F99                        l1382 0E70  
                      l1710 0FF1                        l1462 045D                        l1454 0446  
                      l1518 0065                        l1526 0088                        l1630 068C  
                      l1606 063F                        l1542 0FA5                        l1472 048F  
                      l1464 0467                        l1456 044A                        l1632 06BB  
                      l1552 0FC0                        l1386 0E75                        l1378 0E6B  
                      l1706 0FDB                        l1482 04AA                        l1634 06C1  
                      l1570 0F55                        l1468 047D                        l1820 0254  
                      l1812 0239                        l1492 00E8                        l1660 0712  
                      l1644 06ED                        l1548 0FB7                        l1564 0F3D  
                      l1900 0F01                        l1750 0389                        l1734 0346  
                      l1822 0260                        l1814 0247                        l1494 00F6  
                      l1398 0E38                        l1670 0756                        l1654 070C  
                      l1638 06C6                        l1566 0F49                        l1574 0F5E  
                      l1728 0330                        l1680 078E                        l1832 0130  
                      l1762 03A5                        l1746 0381                        l1826 026E  
                      l1674 076E                        l1666 073F                        l1842 014E  
                      l1916 02A9                        l1758 039D                        l1694 07E6  
                      l1678 078B                        l1784 0ED3                        l1864 0F13  
                      l1688 07A2                        l1696 061D                        l1794 0209  
                      l1866 0F23                        l1698 07F1                        l1958 002E  
                      l1878 0EB2                        l1982 04D5                        l1996 050B  
                      STR_1 0833                        STR_2 0828                        u2005 0FB0  
                      u2015 0FB8                        u1405 01A0                        u2045 0F40  
                      u2215 074E                        u1425 01B9                        u2225 0766  
                      u2065 0F4F                        u2235 077E                        u2075 0F56  
                      u1445 01C6                        u2405 03A6                        u2095 0F73  
                      u2415 03AC                        u2335 0352                        u2345 0362  
                      u2195 0735                        u1485 01E0                        u2365 038A  
                      u1725 0438                        u2525 0255                        u2375 0390  
                      u1575 0E9D                        u2465 0210                        u1585 0EA2  
                      u2705 0559                        u1755 044B                        u1915 005A  
                      u2715 0570                        u2645 001A                        u1845 00EB  
                      u2725 05A2                        u1695 0425                        u2495 023A  
                      u1935 0073                        u2807 0581                        u2665 003A  
                      u1785 045E                        u2585 0F18                        u1865 00F7  
                      u1945 007E                        u2817 0590                        u2907 0E5B  
                      u1875 010B                        u2827 05CD                        u2675 0509  
                      u1885 0117                        u2837 05DC                        u2685 052A  
                      u2757 04CE                        u1975 0F9C                        u2847 060F  
                      u2695 0538                        u2767 04E5                        u2857 0F7E  
                      u2777 04F8                        u2867 0F8B                        u1995 0FA6  
                      u2787 0512                        u2877 0099                        u2797 0541  
                      u2887 00A6                        u2897 00B3                        _SCS0 04C8  
                      _SCS1 04C9                __CFG_WRT$OFF 0000           ?_Lcd_Write_String 002A  
                      _main 04C1                        _ftoa 0277                ___ftpack@arg 0070  
                      _itoa 0EE9                ___ftpack@exp 0073                        fsr0h 0005  
                      fsr1h 0007                        fsr0l 0004                        indf0 0000  
                      indf1 0001                        fsr1l 0006                        btemp 007E  
                      _utoa 012A                        ltemp 007E                        start 0002  
                      ttemp 007E          ??_Lcd_Write_String 002C                        wtemp 007E  
           __end_of_Lcd_Cmd 0E63                ___ftmul@cntr 0028                ___ftmul@sign 0029  
              ___fttol@exp1 0037                ___fttol@lval 0033           _Lcd_Write_Integer 0E3A  
                     ?_main 0070                       ?_ftoa 0046                       ?_itoa 0024  
           __end_of___ftadd 04C1               __CFG_WDTE$OFF 0000             __end_of___ftneg 0E23  
           __end_of___lldiv 012A                       ?_utoa 0078             __end_of___ftmul 03CC  
           __end_of___llmod 0091             __end_of___ftsub 0EE9             __end_of___fttol 0277  
                     _IRCF0 04CB                       _IRCF1 04CC                       _IRCF2 04CD  
                     _IRCF3 04CE          ?_Lcd_Write_Integer 002F             __end_of___lwdiv 0FC5  
           __end_of___lwmod 0F63                       _PORTD 000F     __size_of_Lcd_Set_Cursor 0040  
                     _TRISD 008F                ___lltoft@exp 007D              __CFG_FCMEN$OFF 0000  
   __size_of_Lcd_Shift_Left 0008             __end_of_dpowers 0828         ??_Lcd_Write_Integer 007E  
           __end_of_isdigit 0E3A               ___ftpack@sign 0074                       main@a 0064  
                     main@b 0061                       main@c 005F                       ftoa@f 0046  
                     ftoa@l 004F              __CFG_BOREN$OFF 0000                       ltemp0 007E  
                     ltemp1 0082                       ltemp2 0086                       ltemp3 0080  
                     ttemp0 007E                       ttemp1 0081                       ttemp2 0084  
                     ttemp3 0087                       ttemp4 007F                       utoa@c 0022  
                     utoa@v 0020                       status 0003                       wtemp0 007E  
                     wtemp1 0080                       wtemp2 0082                       wtemp3 0084  
                     wtemp4 0086                       wtemp5 0088                       wtemp6 007F  
           __end_of_sprintf 07F6                ?_internal_16 0070            __end_of_Lcd_Init 00D8  
          __end_of_Lcd_Port 0E7B              __CFG_MCLRE$OFF 0000             __initialization 07F6  
              __end_of_main 0617                __end_of_ftoa 0319                __end_of_itoa 0F0F  
              __end_of_utoa 018C   __end_of_Lcd_Write_Integer 0E4E              __CFG_LPBOR$OFF 0000  
                    ??_main 005C                      ??_ftoa 004A               ___fttol@sign1 0032  
                    ??_itoa 007D                      ??_utoa 007C          __size_of_Lcd_Clear 0008  
            __CFG_PLLEN$OFF 0000            ___llmod@dividend 0024              __CFG_ZCDDIS$ON 0000  
                    _ANSELD 018F            __end_of___ftpack 01F0            __end_of___lltoft 0F37  
                 ??_Lcd_Cmd 0071                      _SPLLEN 04CF     __size_of_Lcd_Write_Char 002E  
            __CFG_PWRTE$OFF 0000                      ___ftge 0FC5                      ___wmul 0E94  
                 ??___ftadd 0020              __CFG_STVREN$ON 0000                   ??___ftneg 0073  
                 ??___lldiv 0078                   ??___ftmul 0020                   ??___llmod 0028  
                 ??___ftsub 007E                   ??___fttol 002E                   ??___lwdiv 0074  
                 ??___lwmod 0074            __end_of_initMain 000E    __size_of_Lcd_Shift_Right 0008  
                    ftoa@cp 0053       ___ftmul@f3_as_product 0025                      itoa@cp 0028  
                 ??_isdigit 0070            Lcd_Write_Float@f 0054                   ??_sprintf 0034  
           Lcd_Set_Cursor@a 0077             Lcd_Set_Cursor@b 0074             Lcd_Set_Cursor@y 0079  
           Lcd_Set_Cursor@z 0078     __end_of__initialization 07FD                  ___ftadd@f1 0078  
                ___ftadd@f2 007B                  ___ftge@ff1 0070                  ___ftge@ff2 0073  
         __end_of_Lcd_Clear 0E0B                  ___ftneg@f1 0070                  ___ftmul@f1 0078  
                ___ftmul@f2 007B                  ___ftsub@f1 002A                  ___ftsub@f2 0027  
                ___fttol@f1 002A              __pcstackCOMMON 0070  __size_of_Lcd_Write_Integer 0014  
                ___lltoft@c 0078              _Lcd_Set_Cursor 000E              _Lcd_Shift_Left 0E0B  
                 ?_Lcd_Init 0070                   ?_Lcd_Port 0070                sprintf@width 0041  
                __pbssBANK1 00A0                  __pmaintext 04C1        __size_of_internal_16 0009  
                   ?___ftge 0070                     ?___wmul 0070             __CFG_PPS1WAY$ON 0000  
 __size_of_Lcd_Write_String 001C                   ?___ftpack 0070      __end_of_Lcd_Set_Cursor 004E  
                 ?___lltoft 0078      __end_of_Lcd_Shift_Left 0E13           ??_Lcd_Shift_Right 0074  
                ??_Lcd_Init 0074                  ??_Lcd_Port 0070    __size_of_Lcd_Write_Float 0019  
                 ?_initMain 0070              _Lcd_Write_Char 0F63                     _Lcd_Cmd 0E4E  
           __size_of___ftge 003B                     ___ftadd 03CC                     ___ftneg 0E1B  
                   ___lldiv 00D8             __size_of___wmul 001B                     ___ftmul 0319  
                   ___llmod 004E                     ___ftsub 0ECB                     ___fttol 01F0  
                   ___lwdiv 0F91                     ___lwmod 0F37                  ??___ftpack 0075  
           ?_Lcd_Set_Cursor 0074                  ??___lltoft 007C                     __ptext1 0005  
                   __ptext2 0E23                     __ptext3 0E3A                     __ptext4 0EE9  
                   __ptext5 012A                     __ptext6 0F37                     __ptext7 0F91  
                   __ptext8 0E7B                     __ptext9 0277                     _dpowers 0800  
                   _isdigit 0E2C             ?_Lcd_Shift_Left 0070                     _sprintf 0617  
                   clrloop0 0DFE      __end_of_Lcd_Write_Char 0F91        end_of_initialization 07FD  
                   ftoa@buf 00A0                     ftoa@rem 004B                  ??_initMain 0070  
                   itoa@buf 0029                     itoa@val 0024             ___lldiv@divisor 0070  
           ___lldiv@counter 007D                   Lcd_Port@a 0070                __pstringtext 0800  
                   utoa@buf 0023                     utoa@val 0078            __CFG_FOSC$INTOSC 0000  
           ?_Lcd_Write_Char 0070           Lcd_Write_String@a 002A           Lcd_Write_String@i 002D  
         ??_Lcd_Write_Float 0057                 ___ftmul@exp 0024                   _Lcd_Clear 0E03  
            __end_of___ftge 1000              __end_of___wmul 0EAF            _Lcd_Write_String 0EAF  
     Lcd_Write_Float@status 0059         start_initialization 07F6                  ftoa@status 0049  
         __size_of_Lcd_Init 0047           __size_of_Lcd_Port 0018             ___llmod@divisor 0020  
           ___llmod@counter 0029                  ?_Lcd_Clear 0070                    ??___ftge 0076  
           _Lcd_Shift_Right 0E13                    ??___wmul 0074             Lcd_Write_Char@a 0074  
           Lcd_Write_Char@y 0073           __size_of___ftpack 0064           __size_of___lltoft 0028  
                 ___latbits 0002               __pcstackBANK0 0020                    ?_Lcd_Cmd 0070  
               sprintf@flag 003A                 sprintf@prec 0043               ??_internal_16 0070  
         __size_of_initMain 0009            ___lwdiv@dividend 0072            ??_Lcd_Set_Cursor 0075  
                  ?___ftadd 0078                    ?___ftneg 0070                    ?___lldiv 0070  
                  ?___ftmul 0078                    ?___llmod 0020                    ?___ftsub 0027  
                  ?___fttol 002A                    ?___lwdiv 0070                    ?___lwmod 0070  
          ??_Lcd_Shift_Left 0074                    ?_isdigit 0070            ___lwdiv@quotient 0075  
                  ?_sprintf 002A              ___wmul@product 0074     __end_of_Lcd_Shift_Right 0E1B  
                 clear_ram0 0DFD                    Lcd_Cmd@a 0073                 ??_Lcd_Clear 0074  
       __end_of_internal_16 0E2C           ___wmul@multiplier 0070            ??_Lcd_Write_Char 0071  
           _Lcd_Write_Float 0E7B                    _Lcd_Init 0091                    _Lcd_Port 0E63  
      Lcd_Write_Float@buf11 005B    __end_of_Lcd_Write_String 0ECB            __size_of_Lcd_Cmd 0015  
          __size_of___ftadd 00F5            __size_of___ftneg 0008            __size_of___lldiv 0052  
          __size_of___ftmul 00B3            __size_of___llmod 0043            __size_of___ftsub 001E  
          __size_of___fttol 0087            __size_of___lwdiv 0034            __size_of___lwmod 002C  
                  ___ftpack 018C                    ___lltoft 0F0F                 _isdigit$312 0070  
                sprintf@val 003C            __size_of_isdigit 000E             ___lwdiv@divisor 0070  
           ___lwdiv@counter 0077                    __ptext10 0617                    __ptext11 0E2C  
                  __ptext20 0319                    __ptext12 0E94                    __ptext21 018C  
                  __ptext13 004E                    __ptext30 0E4E                    __ptext22 0FC5  
                  __ptext14 00D8                    __ptext31 0E63                    __ptext23 0EAF  
                  __ptext15 0F0F                    __ptext24 0F63                    __ptext16 01F0  
                  __ptext25 0E13                    __ptext17 0ECB                    __ptext26 0E0B  
                  __ptext18 03CC                    __ptext27 000E                    __ptext19 0E1B  
                  __ptext28 0091                    __ptext29 0E03            __size_of_sprintf 01DF  
                  _initMain 0005               __size_of_main 0156               __size_of_ftoa 00A2  
             __size_of_itoa 0026               __size_of_utoa 0062            ?_Lcd_Shift_Right 0070  
               _internal_16 0E23        Lcd_Write_Integer@buf 0031     __end_of_Lcd_Write_Float 0E94  
                  itoa@base 0026                    isdigit@c 0071          Lcd_Write_Char@temp 0072  
                 sprintf@ap 003B                   sprintf@sp 0040            ___lwmod@dividend 0072  
          ___lldiv@dividend 0074           __CFG_CLKOUTEN$OFF 0000          Lcd_Set_Cursor@temp 007A  
                  utoa@base 007A                    sprintf@c 0045                    sprintf@f 002A  
          ___lldiv@quotient 0079             ___lwmod@divisor 0070             ___lwmod@counter 0075  
        Lcd_Write_Integer@v 002F  
