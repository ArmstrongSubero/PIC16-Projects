

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Feb 26 23:17:34 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F1719
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	psect	text5,local,class=CODE,merge=1,delta=2
    12                           	psect	text6,local,class=CODE,merge=1,delta=2
    13                           	psect	text7,local,class=CODE,merge=1,delta=2
    14                           	psect	text8,local,class=CODE,merge=1,delta=2
    15                           	psect	text9,local,class=CODE,merge=1,delta=2
    16                           	psect	text10,local,class=CODE,merge=1,delta=2
    17                           	psect	text11,local,class=CODE,merge=1,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20     0000                     
    21                           ; Generated 06/07/2023 GMT
    22                           ; 
    23                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F1719 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55     0000                     	;# 
    56     0001                     	;# 
    57     0002                     	;# 
    58     0003                     	;# 
    59     0004                     	;# 
    60     0005                     	;# 
    61     0006                     	;# 
    62     0007                     	;# 
    63     0008                     	;# 
    64     0009                     	;# 
    65     000A                     	;# 
    66     000B                     	;# 
    67     000C                     	;# 
    68     000D                     	;# 
    69     000E                     	;# 
    70     000F                     	;# 
    71     0010                     	;# 
    72     0011                     	;# 
    73     0012                     	;# 
    74     0013                     	;# 
    75     0015                     	;# 
    76     0016                     	;# 
    77     0016                     	;# 
    78     0017                     	;# 
    79     0018                     	;# 
    80     0019                     	;# 
    81     001A                     	;# 
    82     001B                     	;# 
    83     001C                     	;# 
    84     008C                     	;# 
    85     008D                     	;# 
    86     008E                     	;# 
    87     008F                     	;# 
    88     0090                     	;# 
    89     0091                     	;# 
    90     0092                     	;# 
    91     0093                     	;# 
    92     0095                     	;# 
    93     0096                     	;# 
    94     0097                     	;# 
    95     0098                     	;# 
    96     0099                     	;# 
    97     009A                     	;# 
    98     009B                     	;# 
    99     009B                     	;# 
   100     009C                     	;# 
   101     009D                     	;# 
   102     009E                     	;# 
   103     009F                     	;# 
   104     010C                     	;# 
   105     010D                     	;# 
   106     010E                     	;# 
   107     010F                     	;# 
   108     0110                     	;# 
   109     0111                     	;# 
   110     0112                     	;# 
   111     0113                     	;# 
   112     0114                     	;# 
   113     0115                     	;# 
   114     0116                     	;# 
   115     0117                     	;# 
   116     0118                     	;# 
   117     0119                     	;# 
   118     011A                     	;# 
   119     011B                     	;# 
   120     011B                     	;# 
   121     011C                     	;# 
   122     018C                     	;# 
   123     018D                     	;# 
   124     018E                     	;# 
   125     018F                     	;# 
   126     0190                     	;# 
   127     0191                     	;# 
   128     0191                     	;# 
   129     0192                     	;# 
   130     0193                     	;# 
   131     0193                     	;# 
   132     0194                     	;# 
   133     0195                     	;# 
   134     0196                     	;# 
   135     0197                     	;# 
   136     0199                     	;# 
   137     0199                     	;# 
   138     0199                     	;# 
   139     019A                     	;# 
   140     019A                     	;# 
   141     019A                     	;# 
   142     019B                     	;# 
   143     019B                     	;# 
   144     019B                     	;# 
   145     019B                     	;# 
   146     019B                     	;# 
   147     019C                     	;# 
   148     019C                     	;# 
   149     019C                     	;# 
   150     019D                     	;# 
   151     019D                     	;# 
   152     019D                     	;# 
   153     019E                     	;# 
   154     019E                     	;# 
   155     019E                     	;# 
   156     019F                     	;# 
   157     019F                     	;# 
   158     019F                     	;# 
   159     019F                     	;# 
   160     019F                     	;# 
   161     020C                     	;# 
   162     020D                     	;# 
   163     020E                     	;# 
   164     020F                     	;# 
   165     0210                     	;# 
   166     0211                     	;# 
   167     0211                     	;# 
   168     0212                     	;# 
   169     0212                     	;# 
   170     0213                     	;# 
   171     0213                     	;# 
   172     0214                     	;# 
   173     0214                     	;# 
   174     0215                     	;# 
   175     0215                     	;# 
   176     0215                     	;# 
   177     0215                     	;# 
   178     0216                     	;# 
   179     0216                     	;# 
   180     0217                     	;# 
   181     0217                     	;# 
   182     028C                     	;# 
   183     028D                     	;# 
   184     028E                     	;# 
   185     028F                     	;# 
   186     0290                     	;# 
   187     0291                     	;# 
   188     0291                     	;# 
   189     0292                     	;# 
   190     0293                     	;# 
   191     0293                     	;# 
   192     0298                     	;# 
   193     0298                     	;# 
   194     0299                     	;# 
   195     029A                     	;# 
   196     029A                     	;# 
   197     029E                     	;# 
   198     030C                     	;# 
   199     030D                     	;# 
   200     030E                     	;# 
   201     030F                     	;# 
   202     0310                     	;# 
   203     038C                     	;# 
   204     038D                     	;# 
   205     038E                     	;# 
   206     038F                     	;# 
   207     0390                     	;# 
   208     0391                     	;# 
   209     0392                     	;# 
   210     0393                     	;# 
   211     0394                     	;# 
   212     0395                     	;# 
   213     0396                     	;# 
   214     0397                     	;# 
   215     0398                     	;# 
   216     0399                     	;# 
   217     039D                     	;# 
   218     039E                     	;# 
   219     039F                     	;# 
   220     0415                     	;# 
   221     0416                     	;# 
   222     0417                     	;# 
   223     041C                     	;# 
   224     041D                     	;# 
   225     041E                     	;# 
   226     0498                     	;# 
   227     0498                     	;# 
   228     0499                     	;# 
   229     049A                     	;# 
   230     049B                     	;# 
   231     049B                     	;# 
   232     049C                     	;# 
   233     049D                     	;# 
   234     049E                     	;# 
   235     049F                     	;# 
   236     0511                     	;# 
   237     0515                     	;# 
   238     0617                     	;# 
   239     0618                     	;# 
   240     0619                     	;# 
   241     0619                     	;# 
   242     061A                     	;# 
   243     061B                     	;# 
   244     061C                     	;# 
   245     061C                     	;# 
   246     0691                     	;# 
   247     0692                     	;# 
   248     0693                     	;# 
   249     0694                     	;# 
   250     0695                     	;# 
   251     0696                     	;# 
   252     0697                     	;# 
   253     0698                     	;# 
   254     0699                     	;# 
   255     069A                     	;# 
   256     069B                     	;# 
   257     069C                     	;# 
   258     069D                     	;# 
   259     069E                     	;# 
   260     069F                     	;# 
   261     0E0F                     	;# 
   262     0E10                     	;# 
   263     0E11                     	;# 
   264     0E12                     	;# 
   265     0E13                     	;# 
   266     0E14                     	;# 
   267     0E15                     	;# 
   268     0E17                     	;# 
   269     0E20                     	;# 
   270     0E21                     	;# 
   271     0E22                     	;# 
   272     0E24                     	;# 
   273     0E25                     	;# 
   274     0E28                     	;# 
   275     0E29                     	;# 
   276     0E2A                     	;# 
   277     0E2B                     	;# 
   278     0E90                     	;# 
   279     0E91                     	;# 
   280     0E92                     	;# 
   281     0E93                     	;# 
   282     0E94                     	;# 
   283     0E95                     	;# 
   284     0E96                     	;# 
   285     0E97                     	;# 
   286     0E98                     	;# 
   287     0E99                     	;# 
   288     0E9A                     	;# 
   289     0E9B                     	;# 
   290     0E9C                     	;# 
   291     0E9D                     	;# 
   292     0E9E                     	;# 
   293     0E9F                     	;# 
   294     0EA0                     	;# 
   295     0EA1                     	;# 
   296     0EA2                     	;# 
   297     0EA3                     	;# 
   298     0EA4                     	;# 
   299     0EA5                     	;# 
   300     0EA6                     	;# 
   301     0EA7                     	;# 
   302     0EA8                     	;# 
   303     0EA9                     	;# 
   304     0EAA                     	;# 
   305     0EAB                     	;# 
   306     0EAC                     	;# 
   307     0EAD                     	;# 
   308     0EAE                     	;# 
   309     0EAF                     	;# 
   310     0EB0                     	;# 
   311     0EB1                     	;# 
   312     0EB2                     	;# 
   313     0F0F                     	;# 
   314     0F10                     	;# 
   315     0F11                     	;# 
   316     0F12                     	;# 
   317     0F13                     	;# 
   318     0F14                     	;# 
   319     0F15                     	;# 
   320     0F16                     	;# 
   321     0F17                     	;# 
   322     0F18                     	;# 
   323     0F19                     	;# 
   324     0F1A                     	;# 
   325     0F1B                     	;# 
   326     0F1C                     	;# 
   327     0F1D                     	;# 
   328     0F1E                     	;# 
   329     0F1F                     	;# 
   330     0F20                     	;# 
   331     0F21                     	;# 
   332     0F22                     	;# 
   333     0F23                     	;# 
   334     0F24                     	;# 
   335     0F25                     	;# 
   336     0F26                     	;# 
   337     0F27                     	;# 
   338     0F28                     	;# 
   339     0F29                     	;# 
   340     0F2A                     	;# 
   341     0F2B                     	;# 
   342     0F2C                     	;# 
   343     0F2D                     	;# 
   344     0F2E                     	;# 
   345     0F2F                     	;# 
   346     0F30                     	;# 
   347     0F31                     	;# 
   348     0F32                     	;# 
   349     0F33                     	;# 
   350     0F34                     	;# 
   351     0F35                     	;# 
   352     0F36                     	;# 
   353     0F37                     	;# 
   354     0FE4                     	;# 
   355     0FE5                     	;# 
   356     0FE6                     	;# 
   357     0FE7                     	;# 
   358     0FE8                     	;# 
   359     0FE9                     	;# 
   360     0FEA                     	;# 
   361     0FEB                     	;# 
   362     0FED                     	;# 
   363     0FEE                     	;# 
   364     0FEF                     	;# 
   365     0000                     	;# 
   366     0001                     	;# 
   367     0002                     	;# 
   368     0003                     	;# 
   369     0004                     	;# 
   370     0005                     	;# 
   371     0006                     	;# 
   372     0007                     	;# 
   373     0008                     	;# 
   374     0009                     	;# 
   375     000A                     	;# 
   376     000B                     	;# 
   377     000C                     	;# 
   378     000D                     	;# 
   379     000E                     	;# 
   380     000F                     	;# 
   381     0010                     	;# 
   382     0011                     	;# 
   383     0012                     	;# 
   384     0013                     	;# 
   385     0015                     	;# 
   386     0016                     	;# 
   387     0016                     	;# 
   388     0017                     	;# 
   389     0018                     	;# 
   390     0019                     	;# 
   391     001A                     	;# 
   392     001B                     	;# 
   393     001C                     	;# 
   394     008C                     	;# 
   395     008D                     	;# 
   396     008E                     	;# 
   397     008F                     	;# 
   398     0090                     	;# 
   399     0091                     	;# 
   400     0092                     	;# 
   401     0093                     	;# 
   402     0095                     	;# 
   403     0096                     	;# 
   404     0097                     	;# 
   405     0098                     	;# 
   406     0099                     	;# 
   407     009A                     	;# 
   408     009B                     	;# 
   409     009B                     	;# 
   410     009C                     	;# 
   411     009D                     	;# 
   412     009E                     	;# 
   413     009F                     	;# 
   414     010C                     	;# 
   415     010D                     	;# 
   416     010E                     	;# 
   417     010F                     	;# 
   418     0110                     	;# 
   419     0111                     	;# 
   420     0112                     	;# 
   421     0113                     	;# 
   422     0114                     	;# 
   423     0115                     	;# 
   424     0116                     	;# 
   425     0117                     	;# 
   426     0118                     	;# 
   427     0119                     	;# 
   428     011A                     	;# 
   429     011B                     	;# 
   430     011B                     	;# 
   431     011C                     	;# 
   432     018C                     	;# 
   433     018D                     	;# 
   434     018E                     	;# 
   435     018F                     	;# 
   436     0190                     	;# 
   437     0191                     	;# 
   438     0191                     	;# 
   439     0192                     	;# 
   440     0193                     	;# 
   441     0193                     	;# 
   442     0194                     	;# 
   443     0195                     	;# 
   444     0196                     	;# 
   445     0197                     	;# 
   446     0199                     	;# 
   447     0199                     	;# 
   448     0199                     	;# 
   449     019A                     	;# 
   450     019A                     	;# 
   451     019A                     	;# 
   452     019B                     	;# 
   453     019B                     	;# 
   454     019B                     	;# 
   455     019B                     	;# 
   456     019B                     	;# 
   457     019C                     	;# 
   458     019C                     	;# 
   459     019C                     	;# 
   460     019D                     	;# 
   461     019D                     	;# 
   462     019D                     	;# 
   463     019E                     	;# 
   464     019E                     	;# 
   465     019E                     	;# 
   466     019F                     	;# 
   467     019F                     	;# 
   468     019F                     	;# 
   469     019F                     	;# 
   470     019F                     	;# 
   471     020C                     	;# 
   472     020D                     	;# 
   473     020E                     	;# 
   474     020F                     	;# 
   475     0210                     	;# 
   476     0211                     	;# 
   477     0211                     	;# 
   478     0212                     	;# 
   479     0212                     	;# 
   480     0213                     	;# 
   481     0213                     	;# 
   482     0214                     	;# 
   483     0214                     	;# 
   484     0215                     	;# 
   485     0215                     	;# 
   486     0215                     	;# 
   487     0215                     	;# 
   488     0216                     	;# 
   489     0216                     	;# 
   490     0217                     	;# 
   491     0217                     	;# 
   492     028C                     	;# 
   493     028D                     	;# 
   494     028E                     	;# 
   495     028F                     	;# 
   496     0290                     	;# 
   497     0291                     	;# 
   498     0291                     	;# 
   499     0292                     	;# 
   500     0293                     	;# 
   501     0293                     	;# 
   502     0298                     	;# 
   503     0298                     	;# 
   504     0299                     	;# 
   505     029A                     	;# 
   506     029A                     	;# 
   507     029E                     	;# 
   508     030C                     	;# 
   509     030D                     	;# 
   510     030E                     	;# 
   511     030F                     	;# 
   512     0310                     	;# 
   513     038C                     	;# 
   514     038D                     	;# 
   515     038E                     	;# 
   516     038F                     	;# 
   517     0390                     	;# 
   518     0391                     	;# 
   519     0392                     	;# 
   520     0393                     	;# 
   521     0394                     	;# 
   522     0395                     	;# 
   523     0396                     	;# 
   524     0397                     	;# 
   525     0398                     	;# 
   526     0399                     	;# 
   527     039D                     	;# 
   528     039E                     	;# 
   529     039F                     	;# 
   530     0415                     	;# 
   531     0416                     	;# 
   532     0417                     	;# 
   533     041C                     	;# 
   534     041D                     	;# 
   535     041E                     	;# 
   536     0498                     	;# 
   537     0498                     	;# 
   538     0499                     	;# 
   539     049A                     	;# 
   540     049B                     	;# 
   541     049B                     	;# 
   542     049C                     	;# 
   543     049D                     	;# 
   544     049E                     	;# 
   545     049F                     	;# 
   546     0511                     	;# 
   547     0515                     	;# 
   548     0617                     	;# 
   549     0618                     	;# 
   550     0619                     	;# 
   551     0619                     	;# 
   552     061A                     	;# 
   553     061B                     	;# 
   554     061C                     	;# 
   555     061C                     	;# 
   556     0691                     	;# 
   557     0692                     	;# 
   558     0693                     	;# 
   559     0694                     	;# 
   560     0695                     	;# 
   561     0696                     	;# 
   562     0697                     	;# 
   563     0698                     	;# 
   564     0699                     	;# 
   565     069A                     	;# 
   566     069B                     	;# 
   567     069C                     	;# 
   568     069D                     	;# 
   569     069E                     	;# 
   570     069F                     	;# 
   571     0E0F                     	;# 
   572     0E10                     	;# 
   573     0E11                     	;# 
   574     0E12                     	;# 
   575     0E13                     	;# 
   576     0E14                     	;# 
   577     0E15                     	;# 
   578     0E17                     	;# 
   579     0E20                     	;# 
   580     0E21                     	;# 
   581     0E22                     	;# 
   582     0E24                     	;# 
   583     0E25                     	;# 
   584     0E28                     	;# 
   585     0E29                     	;# 
   586     0E2A                     	;# 
   587     0E2B                     	;# 
   588     0E90                     	;# 
   589     0E91                     	;# 
   590     0E92                     	;# 
   591     0E93                     	;# 
   592     0E94                     	;# 
   593     0E95                     	;# 
   594     0E96                     	;# 
   595     0E97                     	;# 
   596     0E98                     	;# 
   597     0E99                     	;# 
   598     0E9A                     	;# 
   599     0E9B                     	;# 
   600     0E9C                     	;# 
   601     0E9D                     	;# 
   602     0E9E                     	;# 
   603     0E9F                     	;# 
   604     0EA0                     	;# 
   605     0EA1                     	;# 
   606     0EA2                     	;# 
   607     0EA3                     	;# 
   608     0EA4                     	;# 
   609     0EA5                     	;# 
   610     0EA6                     	;# 
   611     0EA7                     	;# 
   612     0EA8                     	;# 
   613     0EA9                     	;# 
   614     0EAA                     	;# 
   615     0EAB                     	;# 
   616     0EAC                     	;# 
   617     0EAD                     	;# 
   618     0EAE                     	;# 
   619     0EAF                     	;# 
   620     0EB0                     	;# 
   621     0EB1                     	;# 
   622     0EB2                     	;# 
   623     0F0F                     	;# 
   624     0F10                     	;# 
   625     0F11                     	;# 
   626     0F12                     	;# 
   627     0F13                     	;# 
   628     0F14                     	;# 
   629     0F15                     	;# 
   630     0F16                     	;# 
   631     0F17                     	;# 
   632     0F18                     	;# 
   633     0F19                     	;# 
   634     0F1A                     	;# 
   635     0F1B                     	;# 
   636     0F1C                     	;# 
   637     0F1D                     	;# 
   638     0F1E                     	;# 
   639     0F1F                     	;# 
   640     0F20                     	;# 
   641     0F21                     	;# 
   642     0F22                     	;# 
   643     0F23                     	;# 
   644     0F24                     	;# 
   645     0F25                     	;# 
   646     0F26                     	;# 
   647     0F27                     	;# 
   648     0F28                     	;# 
   649     0F29                     	;# 
   650     0F2A                     	;# 
   651     0F2B                     	;# 
   652     0F2C                     	;# 
   653     0F2D                     	;# 
   654     0F2E                     	;# 
   655     0F2F                     	;# 
   656     0F30                     	;# 
   657     0F31                     	;# 
   658     0F32                     	;# 
   659     0F33                     	;# 
   660     0F34                     	;# 
   661     0F35                     	;# 
   662     0F36                     	;# 
   663     0F37                     	;# 
   664     0FE4                     	;# 
   665     0FE5                     	;# 
   666     0FE6                     	;# 
   667     0FE7                     	;# 
   668     0FE8                     	;# 
   669     0FE9                     	;# 
   670     0FEA                     	;# 
   671     0FEB                     	;# 
   672     0FED                     	;# 
   673     0FEE                     	;# 
   674     0FEF                     	;# 
   675     008D                     _TRISBbits	set	141
   676     008F                     _TRISDbits	set	143
   677     04CF                     _SPLLEN	set	1231
   678     04CE                     _IRCF3	set	1230
   679     04CD                     _IRCF2	set	1229
   680     04CC                     _IRCF1	set	1228
   681     04CB                     _IRCF0	set	1227
   682     04C9                     _SCS1	set	1225
   683     04C8                     _SCS0	set	1224
   684     010F                     _LATDbits	set	271
   685     018D                     _ANSELB	set	397
   686     0298                     _CCPR2L	set	664
   687     0291                     _CCPR1L	set	657
   688     029A                     _CCP2CONbits	set	666
   689     0293                     _CCP1CONbits	set	659
   690     029E                     _CCPTMRSbits	set	670
   691     041D                     _PR6	set	1053
   692     041E                     _T6CONbits	set	1054
   693     0E0F                     _PPSLOCKbits	set	3599
   694     0E0F                     _PPSLOCK	set	3599
   695     0E99                     _RB1PPSbits	set	3737
   696     0E98                     _RB0PPSbits	set	3736
   697                           
   698                           	psect	cinit
   699     07FD                     start_initialization:	
   700                           ; #config settings
   701                           
   702     07FD                     __initialization:
   703     07FD                     end_of_initialization:	
   704                           ;End of C runtime variable initialization code
   705                           
   706     07FD                     __end_of__initialization:
   707     07FD  0020               	movlb	0
   708     07FE  3187  2FB7         	ljmp	_main	;jump to C main() function
   709                           
   710                           	psect	cstackCOMMON
   711     0070                     __pcstackCOMMON:
   712     0070                     ?_internal_32:
   713     0070                     ??_internal_32:	
   714                           ; 1 bytes @ 0x0
   715                           
   716     0070                     ?_initMain:	
   717                           ; 1 bytes @ 0x0
   718                           
   719     0070                     ??_initMain:	
   720                           ; 1 bytes @ 0x0
   721                           
   722     0070                     ?_leftEnable:	
   723                           ; 1 bytes @ 0x0
   724                           
   725     0070                     ??_leftEnable:	
   726                           ; 1 bytes @ 0x0
   727                           
   728     0070                     ?_leftDisable:	
   729                           ; 1 bytes @ 0x0
   730                           
   731     0070                     ??_leftDisable:	
   732                           ; 1 bytes @ 0x0
   733                           
   734     0070                     ?_rightEnable:	
   735                           ; 1 bytes @ 0x0
   736                           
   737     0070                     ??_rightEnable:	
   738                           ; 1 bytes @ 0x0
   739                           
   740     0070                     ?_rightDisable:	
   741                           ; 1 bytes @ 0x0
   742                           
   743     0070                     ??_rightDisable:	
   744                           ; 1 bytes @ 0x0
   745                           
   746     0070                     ?_rightPWMDuty:	
   747                           ; 1 bytes @ 0x0
   748                           
   749     0070                     ?_leftPWMDuty:	
   750                           ; 1 bytes @ 0x0
   751                           
   752     0070                     ?_motorStop:	
   753                           ; 1 bytes @ 0x0
   754                           
   755     0070                     ?_main:	
   756                           ; 1 bytes @ 0x0
   757                           
   758     0070                     rightPWMDuty@duty:	
   759                           ; 1 bytes @ 0x0
   760                           
   761     0070                     leftPWMDuty@duty:	
   762                           ; 2 bytes @ 0x0
   763                           
   764                           
   765                           ; 2 bytes @ 0x0
   766     0070                     	ds	2
   767     0072                     ??_rightPWMDuty:
   768     0072                     ??_leftPWMDuty:	
   769                           ; 1 bytes @ 0x2
   770                           
   771     0072                     ?_motorTurnLeft:	
   772                           ; 1 bytes @ 0x2
   773                           
   774     0072                     ?_motorTurnRight:	
   775                           ; 1 bytes @ 0x2
   776                           
   777     0072                     ??_motorStop:	
   778                           ; 1 bytes @ 0x2
   779                           
   780     0072                     motorTurnLeft@motorSpeed:	
   781                           ; 1 bytes @ 0x2
   782                           
   783     0072                     motorTurnRight@motorSpeed:	
   784                           ; 2 bytes @ 0x2
   785                           
   786                           
   787                           ; 2 bytes @ 0x2
   788     0072                     	ds	2
   789     0074                     ??_motorTurnLeft:
   790     0074                     ??_motorTurnRight:	
   791                           ; 1 bytes @ 0x4
   792                           
   793     0074                     ??_main:	
   794                           ; 1 bytes @ 0x4
   795                           
   796                           
   797                           ; 1 bytes @ 0x4
   798     0074                     	ds	2
   799                           
   800                           	psect	maintext
   801     07B7                     __pmaintext:	
   802 ;;
   803 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   804 ;;
   805 ;; *************** function _main *****************
   806 ;; Defined at:
   807 ;;		line 198 in file "main.c"
   808 ;; Parameters:    Size  Location     Type
   809 ;;		None
   810 ;; Auto vars:     Size  Location     Type
   811 ;;		None
   812 ;; Return value:  Size  Location     Type
   813 ;;                  1    wreg      void 
   814 ;; Registers used:
   815 ;;		wreg, status,2, status,0, pclath, cstack
   816 ;; Tracked objects:
   817 ;;		On entry : B1F/0
   818 ;;		On exit  : 0/0
   819 ;;		Unchanged: 0/0
   820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   823 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   824 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   825 ;;Total ram usage:        2 bytes
   826 ;; Hardware stack levels required when called: 2
   827 ;; This function calls:
   828 ;;		_initMain
   829 ;;		_motorStop
   830 ;;		_motorTurnLeft
   831 ;;		_motorTurnRight
   832 ;; This function is called by:
   833 ;;		Startup code after reset
   834 ;; This function uses a non-reentrant model
   835 ;;
   836                           
   837     07B7                     _main:	
   838                           ;psect for function _main
   839                           
   840     07B7                     l759:	
   841                           ;incstack = 0
   842                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   843                           
   844                           
   845                           ;main.c: 199:     initMain();
   846     07B7  3187  2779  3187   	fcall	_initMain
   847     07BA                     l104:	
   848                           ;main.c: 201:     while(1)
   849                           
   850                           
   851                           ;main.c: 202:     {;main.c: 203:         motorTurnLeft(192);
   852     07BA  30C0               	movlw	192
   853     07BB  00F2               	movwf	motorTurnLeft@motorSpeed
   854     07BC  3000               	movlw	0
   855     07BD  00F3               	movwf	motorTurnLeft@motorSpeed+1
   856     07BE  3187  2751  3187   	fcall	_motorTurnLeft
   857     07C1                     l761:
   858                           
   859                           ;main.c: 204:         _delay((unsigned long)((3000)*(32000000/4000.0)));
   860     07C1  307A               	movlw	122
   861     07C2  00F5               	movwf	??_main+1
   862     07C3  30C1               	movlw	193
   863     07C4  00F4               	movwf	??_main
   864     07C5  3082               	movlw	130
   865     07C6                     u17:
   866     07C6  0B89               	decfsz	9,f
   867     07C7  2FC6               	goto	u17
   868     07C8  0BF4               	decfsz	??_main,f
   869     07C9  2FC6               	goto	u17
   870     07CA  0BF5               	decfsz	??_main+1,f
   871     07CB  2FC6               	goto	u17
   872     07CC                     l763:
   873                           
   874                           ;main.c: 206:         motorStop();
   875     07CC  3187  273E  3187   	fcall	_motorStop
   876                           
   877                           ;main.c: 207:         _delay((unsigned long)((3000)*(32000000/4000.0)));
   878     07CF  307A               	movlw	122
   879     07D0  00F5               	movwf	??_main+1
   880     07D1  30C1               	movlw	193
   881     07D2  00F4               	movwf	??_main
   882     07D3  3082               	movlw	130
   883     07D4                     u27:
   884     07D4  0B89               	decfsz	9,f
   885     07D5  2FD4               	goto	u27
   886     07D6  0BF4               	decfsz	??_main,f
   887     07D7  2FD4               	goto	u27
   888     07D8  0BF5               	decfsz	??_main+1,f
   889     07D9  2FD4               	goto	u27
   890     07DA                     l765:
   891                           
   892                           ;main.c: 209:         motorTurnRight(192);
   893     07DA  30C0               	movlw	192
   894     07DB  00F2               	movwf	motorTurnRight@motorSpeed
   895     07DC  3000               	movlw	0
   896     07DD  00F3               	movwf	motorTurnRight@motorSpeed+1
   897     07DE  3187  2765  3187   	fcall	_motorTurnRight
   898     07E1                     l767:
   899                           
   900                           ;main.c: 210:         _delay((unsigned long)((3000)*(32000000/4000.0)));
   901     07E1  307A               	movlw	122
   902     07E2  00F5               	movwf	??_main+1
   903     07E3  30C1               	movlw	193
   904     07E4  00F4               	movwf	??_main
   905     07E5  3082               	movlw	130
   906     07E6                     u37:
   907     07E6  0B89               	decfsz	9,f
   908     07E7  2FE6               	goto	u37
   909     07E8  0BF4               	decfsz	??_main,f
   910     07E9  2FE6               	goto	u37
   911     07EA  0BF5               	decfsz	??_main+1,f
   912     07EB  2FE6               	goto	u37
   913                           
   914                           ;main.c: 212:         motorStop();
   915     07EC  3187  273E  3187   	fcall	_motorStop
   916     07EF                     l769:
   917                           
   918                           ;main.c: 213:         _delay((unsigned long)((3000)*(32000000/4000.0)));
   919     07EF  307A               	movlw	122
   920     07F0  00F5               	movwf	??_main+1
   921     07F1  30C1               	movlw	193
   922     07F2  00F4               	movwf	??_main
   923     07F3  3082               	movlw	130
   924     07F4                     u47:
   925     07F4  0B89               	decfsz	9,f
   926     07F5  2FF4               	goto	u47
   927     07F6  0BF4               	decfsz	??_main,f
   928     07F7  2FF4               	goto	u47
   929     07F8  0BF5               	decfsz	??_main+1,f
   930     07F9  2FF4               	goto	u47
   931     07FA  2FBA               	goto	l104
   932     07FB  3180  2802         	ljmp	start
   933     07FD                     __end_of_main:
   934                           
   935                           	psect	text1
   936     0765                     __ptext1:	
   937 ;; *************** function _motorTurnRight *****************
   938 ;; Defined at:
   939 ;;		line 164 in file "main.c"
   940 ;; Parameters:    Size  Location     Type
   941 ;;  motorSpeed      2    2[COMMON] unsigned short 
   942 ;; Auto vars:     Size  Location     Type
   943 ;;		None
   944 ;; Return value:  Size  Location     Type
   945 ;;                  1    wreg      void 
   946 ;; Registers used:
   947 ;;		wreg, status,2, status,0, pclath, cstack
   948 ;; Tracked objects:
   949 ;;		On entry : 0/0
   950 ;;		On exit  : 0/0
   951 ;;		Unchanged: 0/0
   952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   953 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   956 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   957 ;;Total ram usage:        2 bytes
   958 ;; Hardware stack levels used: 1
   959 ;; Hardware stack levels required when called: 1
   960 ;; This function calls:
   961 ;;		_leftEnable
   962 ;;		_leftPWMDuty
   963 ;;		_rightEnable
   964 ;;		_rightPWMDuty
   965 ;; This function is called by:
   966 ;;		_main
   967 ;; This function uses a non-reentrant model
   968 ;;
   969                           
   970     0765                     _motorTurnRight:	
   971                           ;psect for function _motorTurnRight
   972                           
   973     0765                     l747:	
   974                           ;incstack = 0
   975                           ; Regs used in _motorTurnRight: [wreg+status,2+status,0+pclath+cstack]
   976                           
   977                           
   978                           ;main.c: 164: void motorTurnRight(uint16_t motorSpeed);main.c: 165: {;main.c: 166:    le
      +                          ftEnable();
   979     0765  3187  2727  3187   	fcall	_leftEnable
   980                           
   981                           ;main.c: 167:    rightEnable();
   982     0768  3187  272A  3187   	fcall	_rightEnable
   983     076B                     l749:
   984                           
   985                           ;main.c: 170:    leftPWMDuty(motorSpeed);
   986     076B  0873               	movf	motorTurnRight@motorSpeed+1,w
   987     076C  00F1               	movwf	leftPWMDuty@duty+1
   988     076D  0872               	movf	motorTurnRight@motorSpeed,w
   989     076E  00F0               	movwf	leftPWMDuty@duty
   990     076F  3187  272D  3187   	fcall	_leftPWMDuty
   991     0772                     l751:
   992                           
   993                           ;main.c: 173:    rightPWMDuty(0);
   994     0772  3000               	movlw	0
   995     0773  00F0               	movwf	rightPWMDuty@duty
   996     0774  00F1               	movwf	rightPWMDuty@duty+1
   997     0775  3187  2731  3187   	fcall	_rightPWMDuty
   998     0778                     l96:
   999     0778  0008               	return
  1000     0779                     __end_of_motorTurnRight:
  1001                           
  1002                           	psect	text2
  1003     0751                     __ptext2:	
  1004 ;; *************** function _motorTurnLeft *****************
  1005 ;; Defined at:
  1006 ;;		line 152 in file "main.c"
  1007 ;; Parameters:    Size  Location     Type
  1008 ;;  motorSpeed      2    2[COMMON] unsigned short 
  1009 ;; Auto vars:     Size  Location     Type
  1010 ;;		None
  1011 ;; Return value:  Size  Location     Type
  1012 ;;                  1    wreg      void 
  1013 ;; Registers used:
  1014 ;;		wreg, status,2, status,0, pclath, cstack
  1015 ;; Tracked objects:
  1016 ;;		On entry : 0/0
  1017 ;;		On exit  : 0/0
  1018 ;;		Unchanged: 0/0
  1019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1020 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1023 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1024 ;;Total ram usage:        2 bytes
  1025 ;; Hardware stack levels used: 1
  1026 ;; Hardware stack levels required when called: 1
  1027 ;; This function calls:
  1028 ;;		_leftEnable
  1029 ;;		_leftPWMDuty
  1030 ;;		_rightEnable
  1031 ;;		_rightPWMDuty
  1032 ;; This function is called by:
  1033 ;;		_main
  1034 ;; This function uses a non-reentrant model
  1035 ;;
  1036                           
  1037     0751                     _motorTurnLeft:	
  1038                           ;psect for function _motorTurnLeft
  1039                           
  1040     0751                     l741:	
  1041                           ;incstack = 0
  1042                           ; Regs used in _motorTurnLeft: [wreg+status,2+status,0+pclath+cstack]
  1043                           
  1044                           
  1045                           ;main.c: 152: void motorTurnLeft(uint16_t motorSpeed);main.c: 153: {;main.c: 154:    lef
      +                          tEnable();
  1046     0751  3187  2727  3187   	fcall	_leftEnable
  1047                           
  1048                           ;main.c: 155:    rightEnable();
  1049     0754  3187  272A  3187   	fcall	_rightEnable
  1050     0757                     l743:
  1051                           
  1052                           ;main.c: 158:    leftPWMDuty(0);
  1053     0757  3000               	movlw	0
  1054     0758  00F0               	movwf	leftPWMDuty@duty
  1055     0759  00F1               	movwf	leftPWMDuty@duty+1
  1056     075A  3187  272D  3187   	fcall	_leftPWMDuty
  1057     075D                     l745:
  1058                           
  1059                           ;main.c: 161:    rightPWMDuty(motorSpeed);
  1060     075D  0873               	movf	motorTurnLeft@motorSpeed+1,w
  1061     075E  00F1               	movwf	rightPWMDuty@duty+1
  1062     075F  0872               	movf	motorTurnLeft@motorSpeed,w
  1063     0760  00F0               	movwf	rightPWMDuty@duty
  1064     0761  3187  2731  3187   	fcall	_rightPWMDuty
  1065     0764                     l93:
  1066     0764  0008               	return
  1067     0765                     __end_of_motorTurnLeft:
  1068                           
  1069                           	psect	text3
  1070     072A                     __ptext3:	
  1071 ;; *************** function _rightEnable *****************
  1072 ;; Defined at:
  1073 ;;		line 132 in file "main.c"
  1074 ;; Parameters:    Size  Location     Type
  1075 ;;		None
  1076 ;; Auto vars:     Size  Location     Type
  1077 ;;		None
  1078 ;; Return value:  Size  Location     Type
  1079 ;;                  1    wreg      void 
  1080 ;; Registers used:
  1081 ;;		None
  1082 ;; Tracked objects:
  1083 ;;		On entry : 0/0
  1084 ;;		On exit  : 0/0
  1085 ;;		Unchanged: 0/0
  1086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1091 ;;Total ram usage:        0 bytes
  1092 ;; Hardware stack levels used: 1
  1093 ;; This function calls:
  1094 ;;		Nothing
  1095 ;; This function is called by:
  1096 ;;		_motorTurnLeft
  1097 ;;		_motorTurnRight
  1098 ;; This function uses a non-reentrant model
  1099 ;;
  1100                           
  1101     072A                     _rightEnable:	
  1102                           ;psect for function _rightEnable
  1103                           
  1104     072A                     l639:	
  1105                           ;incstack = 0
  1106                           ; Regs used in _rightEnable: []
  1107                           
  1108                           
  1109                           ;main.c: 134:     LATDbits.LATD1 = 1;
  1110     072A  0022               	movlb	2	; select bank2
  1111     072B  148F               	bsf	15,1	;volatile
  1112     072C                     l81:
  1113     072C  0008               	return
  1114     072D                     __end_of_rightEnable:
  1115                           
  1116                           	psect	text4
  1117     0727                     __ptext4:	
  1118 ;; *************** function _leftEnable *****************
  1119 ;; Defined at:
  1120 ;;		line 122 in file "main.c"
  1121 ;; Parameters:    Size  Location     Type
  1122 ;;		None
  1123 ;; Auto vars:     Size  Location     Type
  1124 ;;		None
  1125 ;; Return value:  Size  Location     Type
  1126 ;;                  1    wreg      void 
  1127 ;; Registers used:
  1128 ;;		None
  1129 ;; Tracked objects:
  1130 ;;		On entry : 0/0
  1131 ;;		On exit  : 0/0
  1132 ;;		Unchanged: 0/0
  1133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1138 ;;Total ram usage:        0 bytes
  1139 ;; Hardware stack levels used: 1
  1140 ;; This function calls:
  1141 ;;		Nothing
  1142 ;; This function is called by:
  1143 ;;		_motorTurnLeft
  1144 ;;		_motorTurnRight
  1145 ;; This function uses a non-reentrant model
  1146 ;;
  1147                           
  1148     0727                     _leftEnable:	
  1149                           ;psect for function _leftEnable
  1150                           
  1151     0727                     l635:	
  1152                           ;incstack = 0
  1153                           ; Regs used in _leftEnable: []
  1154                           
  1155                           
  1156                           ;main.c: 124:    LATDbits.LATD0 = 1;
  1157     0727  0022               	movlb	2	; select bank2
  1158     0728  140F               	bsf	15,0	;volatile
  1159     0729                     l75:
  1160     0729  0008               	return
  1161     072A                     __end_of_leftEnable:
  1162                           
  1163                           	psect	text5
  1164     073E                     __ptext5:	
  1165 ;; *************** function _motorStop *****************
  1166 ;; Defined at:
  1167 ;;		line 177 in file "main.c"
  1168 ;; Parameters:    Size  Location     Type
  1169 ;;		None
  1170 ;; Auto vars:     Size  Location     Type
  1171 ;;		None
  1172 ;; Return value:  Size  Location     Type
  1173 ;;                  1    wreg      void 
  1174 ;; Registers used:
  1175 ;;		wreg, status,2, status,0, pclath, cstack
  1176 ;; Tracked objects:
  1177 ;;		On entry : 0/0
  1178 ;;		On exit  : 0/0
  1179 ;;		Unchanged: 0/0
  1180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1185 ;;Total ram usage:        0 bytes
  1186 ;; Hardware stack levels used: 1
  1187 ;; Hardware stack levels required when called: 1
  1188 ;; This function calls:
  1189 ;;		_leftDisable
  1190 ;;		_leftPWMDuty
  1191 ;;		_rightDisable
  1192 ;;		_rightPWMDuty
  1193 ;; This function is called by:
  1194 ;;		_main
  1195 ;; This function uses a non-reentrant model
  1196 ;;
  1197                           
  1198     073E                     _motorStop:	
  1199                           ;psect for function _motorStop
  1200                           
  1201     073E                     l753:	
  1202                           ;incstack = 0
  1203                           ; Regs used in _motorStop: [wreg+status,2+status,0+pclath+cstack]
  1204                           
  1205                           
  1206                           ;main.c: 179:    leftDisable();
  1207     073E  3187  2721  3187   	fcall	_leftDisable
  1208                           
  1209                           ;main.c: 180:    rightDisable();
  1210     0741  3187  2724  3187   	fcall	_rightDisable
  1211     0744                     l755:
  1212                           
  1213                           ;main.c: 183:    leftPWMDuty(0);
  1214     0744  3000               	movlw	0
  1215     0745  00F0               	movwf	leftPWMDuty@duty
  1216     0746  00F1               	movwf	leftPWMDuty@duty+1
  1217     0747  3187  272D  3187   	fcall	_leftPWMDuty
  1218     074A                     l757:
  1219                           
  1220                           ;main.c: 186:    rightPWMDuty(0);
  1221     074A  3000               	movlw	0
  1222     074B  00F0               	movwf	rightPWMDuty@duty
  1223     074C  00F1               	movwf	rightPWMDuty@duty+1
  1224     074D  3187  2731  3187   	fcall	_rightPWMDuty
  1225     0750                     l99:
  1226     0750  0008               	return
  1227     0751                     __end_of_motorStop:
  1228                           
  1229                           	psect	text6
  1230     0731                     __ptext6:	
  1231 ;; *************** function _rightPWMDuty *****************
  1232 ;; Defined at:
  1233 ;;		line 142 in file "main.c"
  1234 ;; Parameters:    Size  Location     Type
  1235 ;;  duty            2    0[COMMON] unsigned short 
  1236 ;; Auto vars:     Size  Location     Type
  1237 ;;		None
  1238 ;; Return value:  Size  Location     Type
  1239 ;;                  1    wreg      void 
  1240 ;; Registers used:
  1241 ;;		wreg
  1242 ;; Tracked objects:
  1243 ;;		On entry : 0/0
  1244 ;;		On exit  : 0/0
  1245 ;;		Unchanged: 0/0
  1246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1247 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1250 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1251 ;;Total ram usage:        2 bytes
  1252 ;; Hardware stack levels used: 1
  1253 ;; This function calls:
  1254 ;;		Nothing
  1255 ;; This function is called by:
  1256 ;;		_motorTurnLeft
  1257 ;;		_motorTurnRight
  1258 ;;		_motorStop
  1259 ;; This function uses a non-reentrant model
  1260 ;;
  1261                           
  1262     0731                     _rightPWMDuty:	
  1263                           ;psect for function _rightPWMDuty
  1264                           
  1265     0731                     l737:	
  1266                           ;incstack = 0
  1267                           ; Regs used in _rightPWMDuty: [wreg]
  1268                           
  1269                           
  1270                           ;main.c: 142: void rightPWMDuty(uint16_t duty);main.c: 143: {;main.c: 144:     CCPR1L = 
      +                          duty;
  1271     0731  0870               	movf	rightPWMDuty@duty,w
  1272     0732  0025               	movlb	5	; select bank5
  1273     0733  0091               	movwf	17	;volatile
  1274     0734                     l87:
  1275     0734  0008               	return
  1276     0735                     __end_of_rightPWMDuty:
  1277                           
  1278                           	psect	text7
  1279     0724                     __ptext7:	
  1280 ;; *************** function _rightDisable *****************
  1281 ;; Defined at:
  1282 ;;		line 137 in file "main.c"
  1283 ;; Parameters:    Size  Location     Type
  1284 ;;		None
  1285 ;; Auto vars:     Size  Location     Type
  1286 ;;		None
  1287 ;; Return value:  Size  Location     Type
  1288 ;;                  1    wreg      void 
  1289 ;; Registers used:
  1290 ;;		None
  1291 ;; Tracked objects:
  1292 ;;		On entry : 0/0
  1293 ;;		On exit  : 0/0
  1294 ;;		Unchanged: 0/0
  1295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1300 ;;Total ram usage:        0 bytes
  1301 ;; Hardware stack levels used: 1
  1302 ;; This function calls:
  1303 ;;		Nothing
  1304 ;; This function is called by:
  1305 ;;		_motorStop
  1306 ;; This function uses a non-reentrant model
  1307 ;;
  1308                           
  1309     0724                     _rightDisable:	
  1310                           ;psect for function _rightDisable
  1311                           
  1312     0724                     l641:	
  1313                           ;incstack = 0
  1314                           ; Regs used in _rightDisable: []
  1315                           
  1316                           
  1317                           ;main.c: 139:     LATDbits.LATD1 = 0;
  1318     0724  0022               	movlb	2	; select bank2
  1319     0725  108F               	bcf	15,1	;volatile
  1320     0726                     l84:
  1321     0726  0008               	return
  1322     0727                     __end_of_rightDisable:
  1323                           
  1324                           	psect	text8
  1325     072D                     __ptext8:	
  1326 ;; *************** function _leftPWMDuty *****************
  1327 ;; Defined at:
  1328 ;;		line 147 in file "main.c"
  1329 ;; Parameters:    Size  Location     Type
  1330 ;;  duty            2    0[COMMON] unsigned short 
  1331 ;; Auto vars:     Size  Location     Type
  1332 ;;		None
  1333 ;; Return value:  Size  Location     Type
  1334 ;;                  1    wreg      void 
  1335 ;; Registers used:
  1336 ;;		wreg
  1337 ;; Tracked objects:
  1338 ;;		On entry : 0/0
  1339 ;;		On exit  : 0/0
  1340 ;;		Unchanged: 0/0
  1341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1342 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1345 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1346 ;;Total ram usage:        2 bytes
  1347 ;; Hardware stack levels used: 1
  1348 ;; This function calls:
  1349 ;;		Nothing
  1350 ;; This function is called by:
  1351 ;;		_motorTurnLeft
  1352 ;;		_motorTurnRight
  1353 ;;		_motorStop
  1354 ;; This function uses a non-reentrant model
  1355 ;;
  1356                           
  1357     072D                     _leftPWMDuty:	
  1358                           ;psect for function _leftPWMDuty
  1359                           
  1360     072D                     l739:	
  1361                           ;incstack = 0
  1362                           ; Regs used in _leftPWMDuty: [wreg]
  1363                           
  1364                           
  1365                           ;main.c: 147: void leftPWMDuty(uint16_t duty);main.c: 148: {;main.c: 149:     CCPR2L = d
      +                          uty;
  1366     072D  0870               	movf	leftPWMDuty@duty,w
  1367     072E  0025               	movlb	5	; select bank5
  1368     072F  0098               	movwf	24	;volatile
  1369     0730                     l90:
  1370     0730  0008               	return
  1371     0731                     __end_of_leftPWMDuty:
  1372                           
  1373                           	psect	text9
  1374     0721                     __ptext9:	
  1375 ;; *************** function _leftDisable *****************
  1376 ;; Defined at:
  1377 ;;		line 127 in file "main.c"
  1378 ;; Parameters:    Size  Location     Type
  1379 ;;		None
  1380 ;; Auto vars:     Size  Location     Type
  1381 ;;		None
  1382 ;; Return value:  Size  Location     Type
  1383 ;;                  1    wreg      void 
  1384 ;; Registers used:
  1385 ;;		None
  1386 ;; Tracked objects:
  1387 ;;		On entry : 0/0
  1388 ;;		On exit  : 0/0
  1389 ;;		Unchanged: 0/0
  1390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1395 ;;Total ram usage:        0 bytes
  1396 ;; Hardware stack levels used: 1
  1397 ;; This function calls:
  1398 ;;		Nothing
  1399 ;; This function is called by:
  1400 ;;		_motorStop
  1401 ;; This function uses a non-reentrant model
  1402 ;;
  1403                           
  1404     0721                     _leftDisable:	
  1405                           ;psect for function _leftDisable
  1406                           
  1407     0721                     l637:	
  1408                           ;incstack = 0
  1409                           ; Regs used in _leftDisable: []
  1410                           
  1411                           
  1412                           ;main.c: 129:     LATDbits.LATD0 = 0;
  1413     0721  0022               	movlb	2	; select bank2
  1414     0722  100F               	bcf	15,0	;volatile
  1415     0723                     l78:
  1416     0723  0008               	return
  1417     0724                     __end_of_leftDisable:
  1418                           
  1419                           	psect	text10
  1420     0779                     __ptext10:	
  1421 ;; *************** function _initMain *****************
  1422 ;; Defined at:
  1423 ;;		line 33 in file "main.c"
  1424 ;; Parameters:    Size  Location     Type
  1425 ;;		None
  1426 ;; Auto vars:     Size  Location     Type
  1427 ;;		None
  1428 ;; Return value:  Size  Location     Type
  1429 ;;                  1    wreg      void 
  1430 ;; Registers used:
  1431 ;;		wreg, status,2, status,0, pclath, cstack
  1432 ;; Tracked objects:
  1433 ;;		On entry : 0/0
  1434 ;;		On exit  : 0/0
  1435 ;;		Unchanged: 0/0
  1436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1441 ;;Total ram usage:        0 bytes
  1442 ;; Hardware stack levels used: 1
  1443 ;; Hardware stack levels required when called: 1
  1444 ;; This function calls:
  1445 ;;		_internal_32
  1446 ;; This function is called by:
  1447 ;;		_main
  1448 ;; This function uses a non-reentrant model
  1449 ;;
  1450                           
  1451     0779                     _initMain:	
  1452                           ;psect for function _initMain
  1453                           
  1454     0779                     l647:	
  1455                           ;incstack = 0
  1456                           ; Regs used in _initMain: [wreg+status,2+status,0+pclath+cstack]
  1457                           
  1458                           
  1459                           ;main.c: 35:     internal_32();
  1460     0779  3187  2735  3187   	fcall	_internal_32
  1461     077C                     l649:
  1462                           
  1463                           ;main.c: 40:     TRISDbits.TRISD1 = 0;
  1464     077C  0021               	movlb	1	; select bank1
  1465     077D  108F               	bcf	15,1	;volatile
  1466     077E                     l651:
  1467                           
  1468                           ;main.c: 43:     TRISBbits.TRISB0 = 0;
  1469     077E  100D               	bcf	13,0	;volatile
  1470     077F                     l653:
  1471                           
  1472                           ;main.c: 46:     TRISBbits.TRISB1 = 0;
  1473     077F  108D               	bcf	13,1	;volatile
  1474     0780                     l655:
  1475                           
  1476                           ;main.c: 49:     ANSELB = 0;
  1477     0780  0023               	movlb	3	; select bank3
  1478     0781  018D               	clrf	13	;volatile
  1479     0782                     l657:
  1480                           
  1481                           ;main.c: 56:     CCPTMRSbits.C1TSEL = 0b10;
  1482     0782  0025               	movlb	5	; select bank5
  1483     0783  081E               	movf	30,w	;volatile
  1484     0784  39FC               	andlw	-4
  1485     0785  3802               	iorlw	2
  1486     0786  009E               	movwf	30	;volatile
  1487     0787                     l659:
  1488                           
  1489                           ;main.c: 57:     CCPTMRSbits.C2TSEL = 0b10;
  1490     0787  081E               	movf	30,w	;volatile
  1491     0788  39F3               	andlw	-13
  1492     0789  3808               	iorlw	8
  1493     078A  009E               	movwf	30	;volatile
  1494     078B                     l661:
  1495                           
  1496                           ;main.c: 71:     T6CONbits.T6CKPS = 0b00;
  1497     078B  30FC               	movlw	-4
  1498     078C  0028               	movlb	8	; select bank8
  1499     078D  059E               	andwf	30,f	;volatile
  1500     078E                     l663:
  1501                           
  1502                           ;main.c: 74:     T6CONbits.TMR6ON = 1;
  1503     078E  151E               	bsf	30,2	;volatile
  1504     078F                     l665:
  1505                           
  1506                           ;main.c: 77:     PR6 = 255;
  1507     078F  30FF               	movlw	255
  1508     0790  009D               	movwf	29	;volatile
  1509     0791                     l667:
  1510                           
  1511                           ;main.c: 86:     CCP1CONbits.DC1B = 00;
  1512     0791  30CF               	movlw	-49
  1513     0792  0025               	movlb	5	; select bank5
  1514     0793  0593               	andwf	19,f	;volatile
  1515     0794                     l669:
  1516                           
  1517                           ;main.c: 89:     CCP1CONbits.CCP1M = 0b1100;
  1518     0794  0813               	movf	19,w	;volatile
  1519     0795  39F0               	andlw	-16
  1520     0796  380C               	iorlw	12
  1521     0797  0093               	movwf	19	;volatile
  1522     0798                     l671:
  1523                           
  1524                           ;main.c: 94:     CCP2CONbits.DC2B = 00;
  1525     0798  30CF               	movlw	-49
  1526     0799  059A               	andwf	26,f	;volatile
  1527     079A                     l673:
  1528                           
  1529                           ;main.c: 97:     CCP2CONbits.CCP2M = 0b1100;
  1530     079A  081A               	movf	26,w	;volatile
  1531     079B  39F0               	andlw	-16
  1532     079C  380C               	iorlw	12
  1533     079D  009A               	movwf	26	;volatile
  1534     079E                     l675:
  1535                           
  1536                           ;main.c: 104:     PPSLOCK = 0x55;
  1537     079E  3055               	movlw	85
  1538     079F  003C               	movlb	28	; select bank28
  1539     07A0  008F               	movwf	15	;volsfr
  1540     07A1                     l677:
  1541                           
  1542                           ;main.c: 105:     PPSLOCK = 0xAA;
  1543     07A1  30AA               	movlw	170
  1544     07A2  008F               	movwf	15	;volsfr
  1545     07A3                     l679:
  1546                           
  1547                           ;main.c: 106:     PPSLOCKbits.PPSLOCKED = 0x00;
  1548     07A3  100F               	bcf	15,0	;volsfr
  1549     07A4                     l681:
  1550                           
  1551                           ;main.c: 109:     RB0PPSbits.RB0PPS = 0b01100;
  1552     07A4  003D               	movlb	29	; select bank29
  1553     07A5  0818               	movf	24,w	;volatile
  1554     07A6  39E0               	andlw	-32
  1555     07A7  380C               	iorlw	12
  1556     07A8  0098               	movwf	24	;volatile
  1557     07A9                     l683:
  1558                           
  1559                           ;main.c: 112:     RB1PPSbits.RB1PPS = 0b01101;
  1560     07A9  0819               	movf	25,w	;volatile
  1561     07AA  39E0               	andlw	-32
  1562     07AB  380D               	iorlw	13
  1563     07AC  0099               	movwf	25	;volatile
  1564     07AD                     l685:
  1565                           
  1566                           ;main.c: 114:     PPSLOCK = 0x55;
  1567     07AD  3055               	movlw	85
  1568     07AE  003C               	movlb	28	; select bank28
  1569     07AF  008F               	movwf	15	;volsfr
  1570     07B0                     l687:
  1571                           
  1572                           ;main.c: 115:     PPSLOCK = 0xAA;
  1573     07B0  30AA               	movlw	170
  1574     07B1  008F               	movwf	15	;volsfr
  1575     07B2                     l689:
  1576                           
  1577                           ;main.c: 116:     PPSLOCKbits.PPSLOCKED = 0x01;
  1578     07B2  140F               	bsf	15,0	;volsfr
  1579     07B3                     l691:
  1580                           
  1581                           ;main.c: 118:     TRISDbits.TRISD0 = 0;
  1582     07B3  0021               	movlb	1	; select bank1
  1583     07B4  100F               	bcf	15,0	;volatile
  1584     07B5                     l693:
  1585                           
  1586                           ;main.c: 119:     TRISDbits.TRISD1 = 0;
  1587     07B5  108F               	bcf	15,1	;volatile
  1588     07B6                     l72:
  1589     07B6  0008               	return
  1590     07B7                     __end_of_initMain:
  1591                           
  1592                           	psect	text11
  1593     0735                     __ptext11:	
  1594 ;; *************** function _internal_32 *****************
  1595 ;; Defined at:
  1596 ;;		line 32 in file "PIC16F1719_Internal.c"
  1597 ;; Parameters:    Size  Location     Type
  1598 ;;		None
  1599 ;; Auto vars:     Size  Location     Type
  1600 ;;		None
  1601 ;; Return value:  Size  Location     Type
  1602 ;;                  1    wreg      void 
  1603 ;; Registers used:
  1604 ;;		None
  1605 ;; Tracked objects:
  1606 ;;		On entry : 0/0
  1607 ;;		On exit  : 0/0
  1608 ;;		Unchanged: 0/0
  1609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1614 ;;Total ram usage:        0 bytes
  1615 ;; Hardware stack levels used: 1
  1616 ;; This function calls:
  1617 ;;		Nothing
  1618 ;; This function is called by:
  1619 ;;		_initMain
  1620 ;; This function uses a non-reentrant model
  1621 ;;
  1622                           
  1623     0735                     _internal_32:	
  1624                           ;psect for function _internal_32
  1625                           
  1626     0735                     l633:	
  1627                           ;incstack = 0
  1628                           ; Regs used in _internal_32: []
  1629                           
  1630                           
  1631                           ;PIC16F1719_Internal.c: 34:     SCS0 = 0;
  1632     0735  0021               	movlb	1	; select bank1
  1633     0736  1019               	bcf	25,0	;volatile
  1634                           
  1635                           ;PIC16F1719_Internal.c: 35:     SCS1 = 0;
  1636     0737  1099               	bcf	25,1	;volatile
  1637                           
  1638                           ;PIC16F1719_Internal.c: 38:     IRCF0 = 0;
  1639     0738  1199               	bcf	25,3	;volatile
  1640                           
  1641                           ;PIC16F1719_Internal.c: 39:     IRCF1 = 1;
  1642     0739  1619               	bsf	25,4	;volatile
  1643                           
  1644                           ;PIC16F1719_Internal.c: 40:     IRCF2 = 1;
  1645     073A  1699               	bsf	25,5	;volatile
  1646                           
  1647                           ;PIC16F1719_Internal.c: 41:     IRCF3 = 1;
  1648     073B  1719               	bsf	25,6	;volatile
  1649                           
  1650                           ;PIC16F1719_Internal.c: 44:     SPLLEN = 1;
  1651     073C  1799               	bsf	25,7	;volatile
  1652     073D                     l17:
  1653     073D  0008               	return
  1654     073E                     __end_of_internal_32:
  1655     007E                     btemp	set	126	;btemp
  1656     007E                     wtemp0	set	126
  1657                           
  1658                           	psect	config
  1659                           
  1660                           ;Config register CONFIG1 @ 0x8007
  1661                           ;	Oscillator Selection Bits
  1662                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  1663                           ;	Watchdog Timer Enable
  1664                           ;	WDTE = OFF, WDT disabled
  1665                           ;	Power-up Timer Enable
  1666                           ;	PWRTE = OFF, PWRT disabled
  1667                           ;	MCLR Pin Function Select
  1668                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input if LVP bit is also 0.
  1669                           ;	Flash Program Memory Code Protection
  1670                           ;	CP = OFF, Program memory code protection is disabled
  1671                           ;	Brown-out Reset Enable
  1672                           ;	BOREN = OFF, Brown-out Reset disabled
  1673                           ;	Clock Out Enable
  1674                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  1675                           ;	Internal/External Switchover Mode
  1676                           ;	IESO = ON, Internal/External Switchover Mode is enabled
  1677                           ;	Fail-Safe Clock Monitor Enable
  1678                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1679     8007                     	org	32775
  1680     8007  19A4               	dw	6564
  1681                           
  1682                           ;Config register CONFIG2 @ 0x8008
  1683                           ;	Flash Memory Self-Write Protection
  1684                           ;	WRT = OFF, Write protection off
  1685                           ;	Peripheral Pin Select one-way control
  1686                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
  1687                           ;	Zero-cross detect disable
  1688                           ;	ZCDDIS = ON, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  1689                           ;	Phase Lock Loop enable
  1690                           ;	PLLEN = OFF, 4x PLL is disabled
  1691                           ;	Stack Overflow/Underflow Reset Enable
  1692                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  1693                           ;	Brown-out Reset Voltage Selection
  1694                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  1695                           ;	Low-Power Brown Out Reset
  1696                           ;	LPBOR = OFF, Low-Power BOR is disabled
  1697                           ;	In-Circuit Debugger Mode
  1698                           ;	DEBUG = 0x1, unprogrammed default
  1699                           ;	Low-Voltage Programming Enable
  1700                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  1701     8008                     	org	32776
  1702     8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_motorTurnLeft
    _main->_motorTurnRight
    _motorTurnRight->_leftPWMDuty
    _motorTurnRight->_rightPWMDuty
    _motorTurnLeft->_leftPWMDuty
    _motorTurnLeft->_rightPWMDuty
    _motorStop->_leftPWMDuty
    _motorStop->_rightPWMDuty

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1696
                                              4 COMMON     2     2      0
                           _initMain
                          _motorStop
                      _motorTurnLeft
                     _motorTurnRight
 ---------------------------------------------------------------------------------
 (1) _motorTurnRight                                       2     0      2     598
                                              2 COMMON     2     0      2
                         _leftEnable
                        _leftPWMDuty
                        _rightEnable
                       _rightPWMDuty
 ---------------------------------------------------------------------------------
 (1) _motorTurnLeft                                        2     0      2     598
                                              2 COMMON     2     0      2
                         _leftEnable
                        _leftPWMDuty
                        _rightEnable
                       _rightPWMDuty
 ---------------------------------------------------------------------------------
 (2) _rightEnable                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _leftEnable                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorStop                                            0     0      0     500
                        _leftDisable
                        _leftPWMDuty
                       _rightDisable
                       _rightPWMDuty
 ---------------------------------------------------------------------------------
 (2) _rightPWMDuty                                         2     0      2     250
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _rightDisable                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _leftPWMDuty                                          2     0      2     250
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _leftDisable                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initMain                                             0     0      0       0
                        _internal_32
 ---------------------------------------------------------------------------------
 (2) _internal_32                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initMain
     _internal_32
   _motorStop
     _leftDisable
     _leftPWMDuty
     _rightDisable
     _rightPWMDuty
   _motorTurnLeft
     _leftEnable
     _leftPWMDuty
     _rightEnable
     _rightPWMDuty
   _motorTurnRight
     _leftEnable
     _leftPWMDuty
     _rightEnable
     _rightPWMDuty

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       6       2       42.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0       0      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              50      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24              50      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25              20      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Feb 26 23:17:34 2024

                      l17 073D                        l72 07B6                        l81 072C  
                      l90 0730                        l75 0729                        l84 0726  
                      l93 0764                        l78 0723                        l87 0734  
                      l96 0778                        l99 0750                        u17 07C6  
                      u27 07D4                        u37 07E6                        u47 07F4  
            ?_leftPWMDuty 0070                       l104 07BA                       l633 0735  
                     l641 0724                       l651 077E                       l635 0727  
                     l661 078B                       l653 077F                       l637 0721  
                     l741 0751                       l671 0798                       l663 078E  
                     l655 0780                       l647 0779                       l639 072A  
                     l743 0757                       l751 0772                       l681 07A4  
                     l673 079A                       l665 078F                       l657 0782  
                     l649 077C                       l737 0731                       l753 073E  
                     l745 075D                       l761 07C1                       l691 07B3  
                     l683 07A9                       l675 079E                       l667 0791  
                     l659 0787                       l739 072D                       l755 0744  
                     l747 0765                       l763 07CC                       l693 07B5  
                     l685 07AD                       l677 07A1                       l669 0794  
                     l757 074A                       l749 076B                       l765 07DA  
                     l687 07B0                       l679 07A3                       l767 07E1  
                     l759 07B7                       l689 07B2                       l769 07EF  
                     _PR6 041D              ?_leftDisable 0070                       wreg 0009  
                    _SCS0 04C8                      _SCS1 04C9                      _main 07B7  
                    btemp 007E                      start 0002                     ?_main 0070  
                   _IRCF0 04CB                     _IRCF1 04CC                     _IRCF2 04CD  
                   _IRCF3 04CE                     wtemp0 007E              ?_internal_32 0070  
         leftPWMDuty@duty 0070           __initialization 07FD              __end_of_main 07FD  
                  ??_main 0074              ?_rightEnable 0070                    _CCPR1L 0291  
                  _CCPR2L 0298                    _ANSELB 018D                    _SPLLEN 04CF  
        __end_of_initMain 07B7   __end_of__initialization 07FD            __pcstackCOMMON 0070  
   __end_of_motorTurnLeft 0765             ?_rightPWMDuty 0070                __pmaintext 07B7  
           ?_rightDisable 0070                   _PPSLOCK 0E0F                _leftEnable 0727  
               ?_initMain 0070            ??_rightPWMDuty 0072            ??_rightDisable 0070  
                 __ptext1 0765                   __ptext2 0751                   __ptext3 072A  
                 __ptext4 0727                   __ptext5 073E                   __ptext6 0731  
                 __ptext7 0724                   __ptext8 072D                   __ptext9 0721  
               _T6CONbits 041E      end_of_initialization 07FD                ??_initMain 0070  
       __end_of_motorStop 0751                 _TRISBbits 008D                 _TRISDbits 008F  
             ?_leftEnable 0070               _CCP1CONbits 0293   motorTurnLeft@motorSpeed 0072  
             _CCP2CONbits 029A             ??_leftPWMDuty 0072             ??_leftDisable 0070  
     start_initialization 07FD      __end_of_rightPWMDuty 0735      __end_of_rightDisable 0727  
             _CCPTMRSbits 029E            _motorTurnRight 0765                 ___latbits 0003  
     __end_of_leftPWMDuty 0731       __end_of_leftDisable 0724             ??_internal_32 0070  
  __end_of_motorTurnRight 0779  motorTurnRight@motorSpeed 0072             ??_rightEnable 0070  
                _LATDbits 010F           ?_motorTurnRight 0072                 _motorStop 073E  
     __end_of_internal_32 073E               _leftPWMDuty 072D               _leftDisable 0721  
            ??_leftEnable 0070       __end_of_rightEnable 072D              _rightPWMDuty 0731  
           _motorTurnLeft 0751                ?_motorStop 0070              _rightDisable 0724  
        rightPWMDuty@duty 0070        __end_of_leftEnable 072A                  __ptext10 0779  
                __ptext11 0735                  _initMain 0779               _internal_32 0735  
              _RB0PPSbits 0E98                _RB1PPSbits 0E99            ?_motorTurnLeft 0072  
             _rightEnable 072A               _PPSLOCKbits 0E0F               ??_motorStop 0072  
        ??_motorTurnRight 0074           ??_motorTurnLeft 0074  
