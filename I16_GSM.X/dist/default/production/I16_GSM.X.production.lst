

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Tue Apr 18 11:31:12 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1717
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 1.41
    25                           ; Generated 25/01/2017 GMT
    26                           ; 
    27                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F1717 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  008C                     	;# 
    88  008D                     	;# 
    89  008E                     	;# 
    90  008F                     	;# 
    91  0090                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0095                     	;# 
    96  0096                     	;# 
    97  0097                     	;# 
    98  0098                     	;# 
    99  0099                     	;# 
   100  009A                     	;# 
   101  009B                     	;# 
   102  009B                     	;# 
   103  009C                     	;# 
   104  009D                     	;# 
   105  009E                     	;# 
   106  009F                     	;# 
   107  010C                     	;# 
   108  010D                     	;# 
   109  010E                     	;# 
   110  010F                     	;# 
   111  0110                     	;# 
   112  0111                     	;# 
   113  0112                     	;# 
   114  0113                     	;# 
   115  0114                     	;# 
   116  0115                     	;# 
   117  0116                     	;# 
   118  0117                     	;# 
   119  0118                     	;# 
   120  0119                     	;# 
   121  011A                     	;# 
   122  011B                     	;# 
   123  011B                     	;# 
   124  011C                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  018E                     	;# 
   128  018F                     	;# 
   129  0190                     	;# 
   130  0191                     	;# 
   131  0191                     	;# 
   132  0192                     	;# 
   133  0193                     	;# 
   134  0193                     	;# 
   135  0194                     	;# 
   136  0195                     	;# 
   137  0196                     	;# 
   138  0197                     	;# 
   139  0199                     	;# 
   140  0199                     	;# 
   141  0199                     	;# 
   142  019A                     	;# 
   143  019A                     	;# 
   144  019A                     	;# 
   145  019B                     	;# 
   146  019B                     	;# 
   147  019B                     	;# 
   148  019B                     	;# 
   149  019B                     	;# 
   150  019C                     	;# 
   151  019C                     	;# 
   152  019C                     	;# 
   153  019D                     	;# 
   154  019D                     	;# 
   155  019D                     	;# 
   156  019E                     	;# 
   157  019E                     	;# 
   158  019E                     	;# 
   159  019F                     	;# 
   160  019F                     	;# 
   161  019F                     	;# 
   162  019F                     	;# 
   163  019F                     	;# 
   164  020C                     	;# 
   165  020D                     	;# 
   166  020E                     	;# 
   167  020F                     	;# 
   168  0210                     	;# 
   169  0211                     	;# 
   170  0211                     	;# 
   171  0212                     	;# 
   172  0212                     	;# 
   173  0213                     	;# 
   174  0213                     	;# 
   175  0214                     	;# 
   176  0214                     	;# 
   177  0215                     	;# 
   178  0215                     	;# 
   179  0215                     	;# 
   180  0215                     	;# 
   181  0216                     	;# 
   182  0216                     	;# 
   183  0217                     	;# 
   184  0217                     	;# 
   185  028C                     	;# 
   186  028D                     	;# 
   187  028E                     	;# 
   188  028F                     	;# 
   189  0290                     	;# 
   190  0291                     	;# 
   191  0291                     	;# 
   192  0292                     	;# 
   193  0293                     	;# 
   194  0293                     	;# 
   195  0298                     	;# 
   196  0298                     	;# 
   197  0299                     	;# 
   198  029A                     	;# 
   199  029A                     	;# 
   200  029E                     	;# 
   201  030C                     	;# 
   202  030D                     	;# 
   203  030E                     	;# 
   204  030F                     	;# 
   205  0310                     	;# 
   206  038C                     	;# 
   207  038D                     	;# 
   208  038E                     	;# 
   209  038F                     	;# 
   210  0390                     	;# 
   211  0391                     	;# 
   212  0392                     	;# 
   213  0393                     	;# 
   214  0394                     	;# 
   215  0395                     	;# 
   216  0396                     	;# 
   217  0397                     	;# 
   218  0398                     	;# 
   219  0399                     	;# 
   220  039D                     	;# 
   221  039E                     	;# 
   222  039F                     	;# 
   223  0415                     	;# 
   224  0416                     	;# 
   225  0417                     	;# 
   226  041C                     	;# 
   227  041D                     	;# 
   228  041E                     	;# 
   229  0498                     	;# 
   230  0498                     	;# 
   231  0499                     	;# 
   232  049A                     	;# 
   233  049B                     	;# 
   234  049B                     	;# 
   235  049C                     	;# 
   236  049D                     	;# 
   237  049E                     	;# 
   238  049F                     	;# 
   239  0511                     	;# 
   240  0515                     	;# 
   241  0617                     	;# 
   242  0618                     	;# 
   243  0619                     	;# 
   244  0619                     	;# 
   245  061A                     	;# 
   246  061B                     	;# 
   247  061C                     	;# 
   248  061C                     	;# 
   249  0691                     	;# 
   250  0692                     	;# 
   251  0693                     	;# 
   252  0694                     	;# 
   253  0695                     	;# 
   254  0696                     	;# 
   255  0697                     	;# 
   256  0698                     	;# 
   257  0699                     	;# 
   258  069A                     	;# 
   259  069B                     	;# 
   260  069C                     	;# 
   261  069D                     	;# 
   262  069E                     	;# 
   263  069F                     	;# 
   264  0E0F                     	;# 
   265  0E10                     	;# 
   266  0E11                     	;# 
   267  0E12                     	;# 
   268  0E13                     	;# 
   269  0E14                     	;# 
   270  0E15                     	;# 
   271  0E17                     	;# 
   272  0E20                     	;# 
   273  0E21                     	;# 
   274  0E22                     	;# 
   275  0E24                     	;# 
   276  0E25                     	;# 
   277  0E28                     	;# 
   278  0E29                     	;# 
   279  0E2A                     	;# 
   280  0E2B                     	;# 
   281  0E90                     	;# 
   282  0E91                     	;# 
   283  0E92                     	;# 
   284  0E93                     	;# 
   285  0E94                     	;# 
   286  0E95                     	;# 
   287  0E96                     	;# 
   288  0E97                     	;# 
   289  0E98                     	;# 
   290  0E99                     	;# 
   291  0E9A                     	;# 
   292  0E9B                     	;# 
   293  0E9C                     	;# 
   294  0E9D                     	;# 
   295  0E9E                     	;# 
   296  0E9F                     	;# 
   297  0EA0                     	;# 
   298  0EA1                     	;# 
   299  0EA2                     	;# 
   300  0EA3                     	;# 
   301  0EA4                     	;# 
   302  0EA5                     	;# 
   303  0EA6                     	;# 
   304  0EA7                     	;# 
   305  0EA8                     	;# 
   306  0EA9                     	;# 
   307  0EAA                     	;# 
   308  0EAB                     	;# 
   309  0EAC                     	;# 
   310  0EAD                     	;# 
   311  0EAE                     	;# 
   312  0EAF                     	;# 
   313  0EB0                     	;# 
   314  0EB1                     	;# 
   315  0EB2                     	;# 
   316  0F0F                     	;# 
   317  0F10                     	;# 
   318  0F11                     	;# 
   319  0F12                     	;# 
   320  0F13                     	;# 
   321  0F14                     	;# 
   322  0F15                     	;# 
   323  0F16                     	;# 
   324  0F17                     	;# 
   325  0F18                     	;# 
   326  0F19                     	;# 
   327  0F1A                     	;# 
   328  0F1B                     	;# 
   329  0F1C                     	;# 
   330  0F1D                     	;# 
   331  0F1E                     	;# 
   332  0F1F                     	;# 
   333  0F20                     	;# 
   334  0F21                     	;# 
   335  0F22                     	;# 
   336  0F23                     	;# 
   337  0F24                     	;# 
   338  0F25                     	;# 
   339  0F26                     	;# 
   340  0F27                     	;# 
   341  0F28                     	;# 
   342  0F29                     	;# 
   343  0F2A                     	;# 
   344  0F2B                     	;# 
   345  0F2C                     	;# 
   346  0F2D                     	;# 
   347  0F2E                     	;# 
   348  0F2F                     	;# 
   349  0F30                     	;# 
   350  0F31                     	;# 
   351  0F32                     	;# 
   352  0F33                     	;# 
   353  0F34                     	;# 
   354  0F35                     	;# 
   355  0F36                     	;# 
   356  0F37                     	;# 
   357  0FE4                     	;# 
   358  0FE5                     	;# 
   359  0FE6                     	;# 
   360  0FE7                     	;# 
   361  0FE8                     	;# 
   362  0FE9                     	;# 
   363  0FEA                     	;# 
   364  0FEB                     	;# 
   365  0FED                     	;# 
   366  0FEE                     	;# 
   367  0FEF                     	;# 
   368  0000                     	;# 
   369  0001                     	;# 
   370  0002                     	;# 
   371  0003                     	;# 
   372  0004                     	;# 
   373  0005                     	;# 
   374  0006                     	;# 
   375  0007                     	;# 
   376  0008                     	;# 
   377  0009                     	;# 
   378  000A                     	;# 
   379  000B                     	;# 
   380  000C                     	;# 
   381  000D                     	;# 
   382  000E                     	;# 
   383  000F                     	;# 
   384  0010                     	;# 
   385  0011                     	;# 
   386  0012                     	;# 
   387  0013                     	;# 
   388  0015                     	;# 
   389  0016                     	;# 
   390  0016                     	;# 
   391  0017                     	;# 
   392  0018                     	;# 
   393  0019                     	;# 
   394  001A                     	;# 
   395  001B                     	;# 
   396  001C                     	;# 
   397  008C                     	;# 
   398  008D                     	;# 
   399  008E                     	;# 
   400  008F                     	;# 
   401  0090                     	;# 
   402  0091                     	;# 
   403  0092                     	;# 
   404  0093                     	;# 
   405  0095                     	;# 
   406  0096                     	;# 
   407  0097                     	;# 
   408  0098                     	;# 
   409  0099                     	;# 
   410  009A                     	;# 
   411  009B                     	;# 
   412  009B                     	;# 
   413  009C                     	;# 
   414  009D                     	;# 
   415  009E                     	;# 
   416  009F                     	;# 
   417  010C                     	;# 
   418  010D                     	;# 
   419  010E                     	;# 
   420  010F                     	;# 
   421  0110                     	;# 
   422  0111                     	;# 
   423  0112                     	;# 
   424  0113                     	;# 
   425  0114                     	;# 
   426  0115                     	;# 
   427  0116                     	;# 
   428  0117                     	;# 
   429  0118                     	;# 
   430  0119                     	;# 
   431  011A                     	;# 
   432  011B                     	;# 
   433  011B                     	;# 
   434  011C                     	;# 
   435  018C                     	;# 
   436  018D                     	;# 
   437  018E                     	;# 
   438  018F                     	;# 
   439  0190                     	;# 
   440  0191                     	;# 
   441  0191                     	;# 
   442  0192                     	;# 
   443  0193                     	;# 
   444  0193                     	;# 
   445  0194                     	;# 
   446  0195                     	;# 
   447  0196                     	;# 
   448  0197                     	;# 
   449  0199                     	;# 
   450  0199                     	;# 
   451  0199                     	;# 
   452  019A                     	;# 
   453  019A                     	;# 
   454  019A                     	;# 
   455  019B                     	;# 
   456  019B                     	;# 
   457  019B                     	;# 
   458  019B                     	;# 
   459  019B                     	;# 
   460  019C                     	;# 
   461  019C                     	;# 
   462  019C                     	;# 
   463  019D                     	;# 
   464  019D                     	;# 
   465  019D                     	;# 
   466  019E                     	;# 
   467  019E                     	;# 
   468  019E                     	;# 
   469  019F                     	;# 
   470  019F                     	;# 
   471  019F                     	;# 
   472  019F                     	;# 
   473  019F                     	;# 
   474  020C                     	;# 
   475  020D                     	;# 
   476  020E                     	;# 
   477  020F                     	;# 
   478  0210                     	;# 
   479  0211                     	;# 
   480  0211                     	;# 
   481  0212                     	;# 
   482  0212                     	;# 
   483  0213                     	;# 
   484  0213                     	;# 
   485  0214                     	;# 
   486  0214                     	;# 
   487  0215                     	;# 
   488  0215                     	;# 
   489  0215                     	;# 
   490  0215                     	;# 
   491  0216                     	;# 
   492  0216                     	;# 
   493  0217                     	;# 
   494  0217                     	;# 
   495  028C                     	;# 
   496  028D                     	;# 
   497  028E                     	;# 
   498  028F                     	;# 
   499  0290                     	;# 
   500  0291                     	;# 
   501  0291                     	;# 
   502  0292                     	;# 
   503  0293                     	;# 
   504  0293                     	;# 
   505  0298                     	;# 
   506  0298                     	;# 
   507  0299                     	;# 
   508  029A                     	;# 
   509  029A                     	;# 
   510  029E                     	;# 
   511  030C                     	;# 
   512  030D                     	;# 
   513  030E                     	;# 
   514  030F                     	;# 
   515  0310                     	;# 
   516  038C                     	;# 
   517  038D                     	;# 
   518  038E                     	;# 
   519  038F                     	;# 
   520  0390                     	;# 
   521  0391                     	;# 
   522  0392                     	;# 
   523  0393                     	;# 
   524  0394                     	;# 
   525  0395                     	;# 
   526  0396                     	;# 
   527  0397                     	;# 
   528  0398                     	;# 
   529  0399                     	;# 
   530  039D                     	;# 
   531  039E                     	;# 
   532  039F                     	;# 
   533  0415                     	;# 
   534  0416                     	;# 
   535  0417                     	;# 
   536  041C                     	;# 
   537  041D                     	;# 
   538  041E                     	;# 
   539  0498                     	;# 
   540  0498                     	;# 
   541  0499                     	;# 
   542  049A                     	;# 
   543  049B                     	;# 
   544  049B                     	;# 
   545  049C                     	;# 
   546  049D                     	;# 
   547  049E                     	;# 
   548  049F                     	;# 
   549  0511                     	;# 
   550  0515                     	;# 
   551  0617                     	;# 
   552  0618                     	;# 
   553  0619                     	;# 
   554  0619                     	;# 
   555  061A                     	;# 
   556  061B                     	;# 
   557  061C                     	;# 
   558  061C                     	;# 
   559  0691                     	;# 
   560  0692                     	;# 
   561  0693                     	;# 
   562  0694                     	;# 
   563  0695                     	;# 
   564  0696                     	;# 
   565  0697                     	;# 
   566  0698                     	;# 
   567  0699                     	;# 
   568  069A                     	;# 
   569  069B                     	;# 
   570  069C                     	;# 
   571  069D                     	;# 
   572  069E                     	;# 
   573  069F                     	;# 
   574  0E0F                     	;# 
   575  0E10                     	;# 
   576  0E11                     	;# 
   577  0E12                     	;# 
   578  0E13                     	;# 
   579  0E14                     	;# 
   580  0E15                     	;# 
   581  0E17                     	;# 
   582  0E20                     	;# 
   583  0E21                     	;# 
   584  0E22                     	;# 
   585  0E24                     	;# 
   586  0E25                     	;# 
   587  0E28                     	;# 
   588  0E29                     	;# 
   589  0E2A                     	;# 
   590  0E2B                     	;# 
   591  0E90                     	;# 
   592  0E91                     	;# 
   593  0E92                     	;# 
   594  0E93                     	;# 
   595  0E94                     	;# 
   596  0E95                     	;# 
   597  0E96                     	;# 
   598  0E97                     	;# 
   599  0E98                     	;# 
   600  0E99                     	;# 
   601  0E9A                     	;# 
   602  0E9B                     	;# 
   603  0E9C                     	;# 
   604  0E9D                     	;# 
   605  0E9E                     	;# 
   606  0E9F                     	;# 
   607  0EA0                     	;# 
   608  0EA1                     	;# 
   609  0EA2                     	;# 
   610  0EA3                     	;# 
   611  0EA4                     	;# 
   612  0EA5                     	;# 
   613  0EA6                     	;# 
   614  0EA7                     	;# 
   615  0EA8                     	;# 
   616  0EA9                     	;# 
   617  0EAA                     	;# 
   618  0EAB                     	;# 
   619  0EAC                     	;# 
   620  0EAD                     	;# 
   621  0EAE                     	;# 
   622  0EAF                     	;# 
   623  0EB0                     	;# 
   624  0EB1                     	;# 
   625  0EB2                     	;# 
   626  0F0F                     	;# 
   627  0F10                     	;# 
   628  0F11                     	;# 
   629  0F12                     	;# 
   630  0F13                     	;# 
   631  0F14                     	;# 
   632  0F15                     	;# 
   633  0F16                     	;# 
   634  0F17                     	;# 
   635  0F18                     	;# 
   636  0F19                     	;# 
   637  0F1A                     	;# 
   638  0F1B                     	;# 
   639  0F1C                     	;# 
   640  0F1D                     	;# 
   641  0F1E                     	;# 
   642  0F1F                     	;# 
   643  0F20                     	;# 
   644  0F21                     	;# 
   645  0F22                     	;# 
   646  0F23                     	;# 
   647  0F24                     	;# 
   648  0F25                     	;# 
   649  0F26                     	;# 
   650  0F27                     	;# 
   651  0F28                     	;# 
   652  0F29                     	;# 
   653  0F2A                     	;# 
   654  0F2B                     	;# 
   655  0F2C                     	;# 
   656  0F2D                     	;# 
   657  0F2E                     	;# 
   658  0F2F                     	;# 
   659  0F30                     	;# 
   660  0F31                     	;# 
   661  0F32                     	;# 
   662  0F33                     	;# 
   663  0F34                     	;# 
   664  0F35                     	;# 
   665  0F36                     	;# 
   666  0F37                     	;# 
   667  0FE4                     	;# 
   668  0FE5                     	;# 
   669  0FE6                     	;# 
   670  0FE7                     	;# 
   671  0FE8                     	;# 
   672  0FE9                     	;# 
   673  0FEA                     	;# 
   674  0FEB                     	;# 
   675  0FED                     	;# 
   676  0FEE                     	;# 
   677  0FEF                     	;# 
   678  0000                     	;# 
   679  0001                     	;# 
   680  0002                     	;# 
   681  0003                     	;# 
   682  0004                     	;# 
   683  0005                     	;# 
   684  0006                     	;# 
   685  0007                     	;# 
   686  0008                     	;# 
   687  0009                     	;# 
   688  000A                     	;# 
   689  000B                     	;# 
   690  000C                     	;# 
   691  000D                     	;# 
   692  000E                     	;# 
   693  000F                     	;# 
   694  0010                     	;# 
   695  0011                     	;# 
   696  0012                     	;# 
   697  0013                     	;# 
   698  0015                     	;# 
   699  0016                     	;# 
   700  0016                     	;# 
   701  0017                     	;# 
   702  0018                     	;# 
   703  0019                     	;# 
   704  001A                     	;# 
   705  001B                     	;# 
   706  001C                     	;# 
   707  008C                     	;# 
   708  008D                     	;# 
   709  008E                     	;# 
   710  008F                     	;# 
   711  0090                     	;# 
   712  0091                     	;# 
   713  0092                     	;# 
   714  0093                     	;# 
   715  0095                     	;# 
   716  0096                     	;# 
   717  0097                     	;# 
   718  0098                     	;# 
   719  0099                     	;# 
   720  009A                     	;# 
   721  009B                     	;# 
   722  009B                     	;# 
   723  009C                     	;# 
   724  009D                     	;# 
   725  009E                     	;# 
   726  009F                     	;# 
   727  010C                     	;# 
   728  010D                     	;# 
   729  010E                     	;# 
   730  010F                     	;# 
   731  0110                     	;# 
   732  0111                     	;# 
   733  0112                     	;# 
   734  0113                     	;# 
   735  0114                     	;# 
   736  0115                     	;# 
   737  0116                     	;# 
   738  0117                     	;# 
   739  0118                     	;# 
   740  0119                     	;# 
   741  011A                     	;# 
   742  011B                     	;# 
   743  011B                     	;# 
   744  011C                     	;# 
   745  018C                     	;# 
   746  018D                     	;# 
   747  018E                     	;# 
   748  018F                     	;# 
   749  0190                     	;# 
   750  0191                     	;# 
   751  0191                     	;# 
   752  0192                     	;# 
   753  0193                     	;# 
   754  0193                     	;# 
   755  0194                     	;# 
   756  0195                     	;# 
   757  0196                     	;# 
   758  0197                     	;# 
   759  0199                     	;# 
   760  0199                     	;# 
   761  0199                     	;# 
   762  019A                     	;# 
   763  019A                     	;# 
   764  019A                     	;# 
   765  019B                     	;# 
   766  019B                     	;# 
   767  019B                     	;# 
   768  019B                     	;# 
   769  019B                     	;# 
   770  019C                     	;# 
   771  019C                     	;# 
   772  019C                     	;# 
   773  019D                     	;# 
   774  019D                     	;# 
   775  019D                     	;# 
   776  019E                     	;# 
   777  019E                     	;# 
   778  019E                     	;# 
   779  019F                     	;# 
   780  019F                     	;# 
   781  019F                     	;# 
   782  019F                     	;# 
   783  019F                     	;# 
   784  020C                     	;# 
   785  020D                     	;# 
   786  020E                     	;# 
   787  020F                     	;# 
   788  0210                     	;# 
   789  0211                     	;# 
   790  0211                     	;# 
   791  0212                     	;# 
   792  0212                     	;# 
   793  0213                     	;# 
   794  0213                     	;# 
   795  0214                     	;# 
   796  0214                     	;# 
   797  0215                     	;# 
   798  0215                     	;# 
   799  0215                     	;# 
   800  0215                     	;# 
   801  0216                     	;# 
   802  0216                     	;# 
   803  0217                     	;# 
   804  0217                     	;# 
   805  028C                     	;# 
   806  028D                     	;# 
   807  028E                     	;# 
   808  028F                     	;# 
   809  0290                     	;# 
   810  0291                     	;# 
   811  0291                     	;# 
   812  0292                     	;# 
   813  0293                     	;# 
   814  0293                     	;# 
   815  0298                     	;# 
   816  0298                     	;# 
   817  0299                     	;# 
   818  029A                     	;# 
   819  029A                     	;# 
   820  029E                     	;# 
   821  030C                     	;# 
   822  030D                     	;# 
   823  030E                     	;# 
   824  030F                     	;# 
   825  0310                     	;# 
   826  038C                     	;# 
   827  038D                     	;# 
   828  038E                     	;# 
   829  038F                     	;# 
   830  0390                     	;# 
   831  0391                     	;# 
   832  0392                     	;# 
   833  0393                     	;# 
   834  0394                     	;# 
   835  0395                     	;# 
   836  0396                     	;# 
   837  0397                     	;# 
   838  0398                     	;# 
   839  0399                     	;# 
   840  039D                     	;# 
   841  039E                     	;# 
   842  039F                     	;# 
   843  0415                     	;# 
   844  0416                     	;# 
   845  0417                     	;# 
   846  041C                     	;# 
   847  041D                     	;# 
   848  041E                     	;# 
   849  0498                     	;# 
   850  0498                     	;# 
   851  0499                     	;# 
   852  049A                     	;# 
   853  049B                     	;# 
   854  049B                     	;# 
   855  049C                     	;# 
   856  049D                     	;# 
   857  049E                     	;# 
   858  049F                     	;# 
   859  0511                     	;# 
   860  0515                     	;# 
   861  0617                     	;# 
   862  0618                     	;# 
   863  0619                     	;# 
   864  0619                     	;# 
   865  061A                     	;# 
   866  061B                     	;# 
   867  061C                     	;# 
   868  061C                     	;# 
   869  0691                     	;# 
   870  0692                     	;# 
   871  0693                     	;# 
   872  0694                     	;# 
   873  0695                     	;# 
   874  0696                     	;# 
   875  0697                     	;# 
   876  0698                     	;# 
   877  0699                     	;# 
   878  069A                     	;# 
   879  069B                     	;# 
   880  069C                     	;# 
   881  069D                     	;# 
   882  069E                     	;# 
   883  069F                     	;# 
   884  0E0F                     	;# 
   885  0E10                     	;# 
   886  0E11                     	;# 
   887  0E12                     	;# 
   888  0E13                     	;# 
   889  0E14                     	;# 
   890  0E15                     	;# 
   891  0E17                     	;# 
   892  0E20                     	;# 
   893  0E21                     	;# 
   894  0E22                     	;# 
   895  0E24                     	;# 
   896  0E25                     	;# 
   897  0E28                     	;# 
   898  0E29                     	;# 
   899  0E2A                     	;# 
   900  0E2B                     	;# 
   901  0E90                     	;# 
   902  0E91                     	;# 
   903  0E92                     	;# 
   904  0E93                     	;# 
   905  0E94                     	;# 
   906  0E95                     	;# 
   907  0E96                     	;# 
   908  0E97                     	;# 
   909  0E98                     	;# 
   910  0E99                     	;# 
   911  0E9A                     	;# 
   912  0E9B                     	;# 
   913  0E9C                     	;# 
   914  0E9D                     	;# 
   915  0E9E                     	;# 
   916  0E9F                     	;# 
   917  0EA0                     	;# 
   918  0EA1                     	;# 
   919  0EA2                     	;# 
   920  0EA3                     	;# 
   921  0EA4                     	;# 
   922  0EA5                     	;# 
   923  0EA6                     	;# 
   924  0EA7                     	;# 
   925  0EA8                     	;# 
   926  0EA9                     	;# 
   927  0EAA                     	;# 
   928  0EAB                     	;# 
   929  0EAC                     	;# 
   930  0EAD                     	;# 
   931  0EAE                     	;# 
   932  0EAF                     	;# 
   933  0EB0                     	;# 
   934  0EB1                     	;# 
   935  0EB2                     	;# 
   936  0F0F                     	;# 
   937  0F10                     	;# 
   938  0F11                     	;# 
   939  0F12                     	;# 
   940  0F13                     	;# 
   941  0F14                     	;# 
   942  0F15                     	;# 
   943  0F16                     	;# 
   944  0F17                     	;# 
   945  0F18                     	;# 
   946  0F19                     	;# 
   947  0F1A                     	;# 
   948  0F1B                     	;# 
   949  0F1C                     	;# 
   950  0F1D                     	;# 
   951  0F1E                     	;# 
   952  0F1F                     	;# 
   953  0F20                     	;# 
   954  0F21                     	;# 
   955  0F22                     	;# 
   956  0F23                     	;# 
   957  0F24                     	;# 
   958  0F25                     	;# 
   959  0F26                     	;# 
   960  0F27                     	;# 
   961  0F28                     	;# 
   962  0F29                     	;# 
   963  0F2A                     	;# 
   964  0F2B                     	;# 
   965  0F2C                     	;# 
   966  0F2D                     	;# 
   967  0F2E                     	;# 
   968  0F2F                     	;# 
   969  0F30                     	;# 
   970  0F31                     	;# 
   971  0F32                     	;# 
   972  0F33                     	;# 
   973  0F34                     	;# 
   974  0F35                     	;# 
   975  0F36                     	;# 
   976  0F37                     	;# 
   977  0FE4                     	;# 
   978  0FE5                     	;# 
   979  0FE6                     	;# 
   980  0FE7                     	;# 
   981  0FE8                     	;# 
   982  0FE9                     	;# 
   983  0FEA                     	;# 
   984  0FEB                     	;# 
   985  0FED                     	;# 
   986  0FEE                     	;# 
   987  0FEF                     	;# 
   988                           
   989                           	psect	stringtext
   990  0800                     __pstringtext:	
   991  0800                     _dpowers:	
   992  0800  3401               	retlw	1
   993  0801  3400               	retlw	0
   994  0802  3400               	retlw	0
   995  0803  3400               	retlw	0
   996  0804  340A               	retlw	10
   997  0805  3400               	retlw	0
   998  0806  3400               	retlw	0
   999  0807  3400               	retlw	0
  1000  0808  3464               	retlw	100
  1001  0809  3400               	retlw	0
  1002  080A  3400               	retlw	0
  1003  080B  3400               	retlw	0
  1004  080C  34E8               	retlw	232
  1005  080D  3403               	retlw	3
  1006  080E  3400               	retlw	0
  1007  080F  3400               	retlw	0
  1008  0810  3410               	retlw	16
  1009  0811  3427               	retlw	39
  1010  0812  3400               	retlw	0
  1011  0813  3400               	retlw	0
  1012  0814  34A0               	retlw	160
  1013  0815  3486               	retlw	134
  1014  0816  3401               	retlw	1
  1015  0817  3400               	retlw	0
  1016  0818  3440               	retlw	64
  1017  0819  3442               	retlw	66
  1018  081A  340F               	retlw	15
  1019  081B  3400               	retlw	0
  1020  081C  3480               	retlw	128
  1021  081D  3496               	retlw	150
  1022  081E  3498               	retlw	152
  1023  081F  3400               	retlw	0
  1024  0820  3400               	retlw	0
  1025  0821  34E1               	retlw	225
  1026  0822  34F5               	retlw	245
  1027  0823  3405               	retlw	5
  1028  0824  3400               	retlw	0
  1029  0825  34CA               	retlw	202
  1030  0826  349A               	retlw	154
  1031  0827  343B               	retlw	59
  1032  0828                     __end_of_dpowers:	
  1033  000F                     _PORTD	set	15
  1034  007B                     _RD3	set	123
  1035  007A                     _RD2	set	122
  1036  007F                     _RD7	set	127
  1037  007E                     _RD6	set	126
  1038  007D                     _RD5	set	125
  1039  007C                     _RD4	set	124
  1040  0090                     _TRISE	set	144
  1041  008F                     _TRISD	set	143
  1042  04CF                     _SPLLEN	set	1231
  1043  04CE                     _IRCF3	set	1230
  1044  04CD                     _IRCF2	set	1229
  1045  04CC                     _IRCF1	set	1228
  1046  04CB                     _IRCF0	set	1227
  1047  04C9                     _SCS1	set	1225
  1048  04C8                     _SCS0	set	1224
  1049  0481                     _TRISE1	set	1153
  1050  0480                     _TRISE0	set	1152
  1051  0110                     _LATEbits	set	272
  1052  0190                     _ANSELE	set	400
  1053  018F                     _ANSELD	set	399
  1054  0828                     STR_2:	
  1055  0828  3441               	retlw	65	;'A'
  1056  0829  3454               	retlw	84	;'T'
  1057  082A  342B               	retlw	43	;'+'
  1058  082B  3443               	retlw	67	;'C'
  1059  082C  344D               	retlw	77	;'M'
  1060  082D  3447               	retlw	71	;'G'
  1061  082E  3453               	retlw	83	;'S'
  1062  082F  343D               	retlw	61	;'='
  1063  0830  3422               	retlw	34	;'"'
  1064  0831  3433               	retlw	51	;'3'
  1065  0832  3436               	retlw	54	;'6'
  1066  0833  3430               	retlw	48	;'0'
  1067  0834  3433               	retlw	51	;'3'
  1068  0835  3439               	retlw	57	;'9'
  1069  0836  3435               	retlw	53	;'5'
  1070  0837  3431               	retlw	49	;'1'
  1071  0838  3422               	retlw	34	;'"'
  1072  0839  340D               	retlw	13
  1073  083A  340A               	retlw	10
  1074  083B  3400               	retlw	0
  1075  083C                     STR_1:	
  1076  083C  3441               	retlw	65	;'A'
  1077  083D  3454               	retlw	84	;'T'
  1078  083E  342B               	retlw	43	;'+'
  1079  083F  3443               	retlw	67	;'C'
  1080  0840  344D               	retlw	77	;'M'
  1081  0841  3447               	retlw	71	;'G'
  1082  0842  3446               	retlw	70	;'F'
  1083  0843  343D               	retlw	61	;'='
  1084  0844  3431               	retlw	49	;'1'
  1085  0845  340D               	retlw	13
  1086  0846  340A               	retlw	10
  1087  0847  3400               	retlw	0
  1088  0848                     STR_5:	
  1089  0848  3425               	retlw	37	;'%'
  1090  0849  346C               	retlw	108	;'l'
  1091  084A  3475               	retlw	117	;'u'
  1092  084B  342E               	retlw	46	;'.'
  1093  084C  3425               	retlw	37	;'%'
  1094  084D  3436               	retlw	54	;'6'
  1095  084E  342E               	retlw	46	;'.'
  1096  084F  3436               	retlw	54	;'6'
  1097  0850  346C               	retlw	108	;'l'
  1098  0851  3475               	retlw	117	;'u'
  1099  0852  3400               	retlw	0
  1100  0853                     STR_4:	
  1101  0853  3453               	retlw	83	;'S'
  1102  0854  3465               	retlw	101	;'e'
  1103  0855  346E               	retlw	110	;'n'
  1104  0856  3474               	retlw	116	;'t'
  1105  0857  3400               	retlw	0
  1106  0858                     STR_3:	
  1107  0858  3454               	retlw	84	;'T'
  1108  0859  3465               	retlw	101	;'e'
  1109  085A  3473               	retlw	115	;'s'
  1110  085B  3474               	retlw	116	;'t'
  1111  085C  3400               	retlw	0
  1112                           
  1113                           ; #config settings
  1114  0000                     
  1115                           	psect	cinit
  1116  07F6                     start_initialization:	
  1117  07F6                     __initialization:	
  1118                           
  1119                           ; Clear objects allocated to BANK0
  1120  07F6  3020               	movlw	low __pbssBANK0
  1121  07F7  0084               	movwf	4
  1122  07F8  3000               	movlw	high __pbssBANK0
  1123  07F9  0085               	movwf	5
  1124  07FA  3011               	movlw	17
  1125  07FB  3185  25F8         	fcall	clear_ram0
  1126  07FD                     end_of_initialization:	
  1127                           ;End of C runtime variable initialization code
  1128                           
  1129  07FD                     __end_of__initialization:	
  1130  07FD  0020               	movlb	0
  1131  07FE  3187  2F63         	ljmp	_main	;jump to C main() function
  1132                           
  1133                           	psect	bssBANK0
  1134  0020                     __pbssBANK0:	
  1135  0020                     ftoa@buf:	
  1136  0020                     	ds	17
  1137                           
  1138                           	psect	clrtext
  1139  05F8                     clear_ram0:	
  1140                           ;	Called with FSR0 containing the base address, and
  1141                           ;	WREG with the size to clear
  1142                           
  1143  05F8  0064               	clrwdt	;clear the watchdog before getting into this loop
  1144  05F9                     clrloop0:	
  1145  05F9  0180               	clrf	0	;clear RAM location pointed to by FSR
  1146  05FA  3101               	addfsr 0,1
  1147  05FB  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1148  05FC  2DF9               	goto	clrloop0	;have we reached the end yet?
  1149  05FD  3400               	retlw	0	;all done for this memory range, return
  1150                           
  1151                           	psect	cstackCOMMON
  1152  0070                     __pcstackCOMMON:	
  1153  0070                     ?_internal_16:	
  1154  0070                     ??_internal_16:	
  1155                           ; 1 bytes @ 0x0
  1156                           
  1157  0070                     ?_InitSoftUART:	
  1158                           ; 1 bytes @ 0x0
  1159                           
  1160  0070                     ??_InitSoftUART:	
  1161                           ; 1 bytes @ 0x0
  1162                           
  1163  0070                     ?_UART_Transmit:	
  1164                           ; 1 bytes @ 0x0
  1165                           
  1166  0070                     ??_UART_Transmit:	
  1167                           ; 1 bytes @ 0x0
  1168                           
  1169  0070                     ?_Lcd_Port:	
  1170                           ; 1 bytes @ 0x0
  1171                           
  1172  0070                     ??_Lcd_Port:	
  1173                           ; 1 bytes @ 0x0
  1174                           
  1175  0070                     ?_Lcd_Cmd:	
  1176                           ; 1 bytes @ 0x0
  1177                           
  1178  0070                     ?_Lcd_Clear:	
  1179                           ; 1 bytes @ 0x0
  1180                           
  1181  0070                     ?_Lcd_Init:	
  1182                           ; 1 bytes @ 0x0
  1183                           
  1184  0070                     ?_Lcd_Write_Char:	
  1185                           ; 1 bytes @ 0x0
  1186                           
  1187  0070                     ?_initMain:	
  1188                           ; 1 bytes @ 0x0
  1189                           
  1190  0070                     ??_initMain:	
  1191                           ; 1 bytes @ 0x0
  1192                           
  1193  0070                     ?_main:	
  1194                           ; 1 bytes @ 0x0
  1195                           
  1196  0070                     Lcd_Port@a:	
  1197                           ; 1 bytes @ 0x0
  1198                           
  1199                           
  1200                           ; 1 bytes @ 0x0
  1201  0070                     	ds	1
  1202  0071                     ??_Lcd_Cmd:	
  1203  0071                     ??_Lcd_Write_Char:	
  1204                           ; 1 bytes @ 0x1
  1205                           
  1206  0071                     UART_Transmit@DataValue:	
  1207                           ; 1 bytes @ 0x1
  1208                           
  1209                           
  1210                           ; 1 bytes @ 0x1
  1211  0071                     	ds	1
  1212  0072                     Lcd_Cmd@a:	
  1213  0072                     Lcd_Write_Char@temp:	
  1214                           ; 1 bytes @ 0x2
  1215                           
  1216  0072                     UART_Transmit@i:	
  1217                           ; 1 bytes @ 0x2
  1218                           
  1219                           
  1220                           ; 1 bytes @ 0x2
  1221  0072                     	ds	1
  1222  0073                     ?_SUART_Write_Text:	
  1223  0073                     ??_Lcd_Clear:	
  1224                           ; 1 bytes @ 0x3
  1225                           
  1226  0073                     ?_Lcd_Set_Cursor:	
  1227                           ; 1 bytes @ 0x3
  1228                           
  1229  0073                     ??_Lcd_Init:	
  1230                           ; 1 bytes @ 0x3
  1231                           
  1232  0073                     Lcd_Set_Cursor@b:	
  1233                           ; 1 bytes @ 0x3
  1234                           
  1235  0073                     Lcd_Write_Char@y:	
  1236                           ; 1 bytes @ 0x3
  1237                           
  1238  0073                     SUART_Write_Text@text:	
  1239                           ; 1 bytes @ 0x3
  1240                           
  1241                           
  1242                           ; 2 bytes @ 0x3
  1243  0073                     	ds	1
  1244  0074                     ??_Lcd_Set_Cursor:	
  1245  0074                     Lcd_Write_Char@a:	
  1246                           ; 1 bytes @ 0x4
  1247                           
  1248                           
  1249                           ; 1 bytes @ 0x4
  1250  0074                     	ds	1
  1251  0075                     ??_SUART_Write_Text:	
  1252  0075                     ?_Lcd_Write_String:	
  1253                           ; 1 bytes @ 0x5
  1254                           
  1255  0075                     Lcd_Write_String@a:	
  1256                           ; 1 bytes @ 0x5
  1257                           
  1258                           
  1259                           ; 2 bytes @ 0x5
  1260  0075                     	ds	1
  1261  0076                     Lcd_Set_Cursor@a:	
  1262  0076                     SUART_Write_Text@i:	
  1263                           ; 1 bytes @ 0x6
  1264                           
  1265                           
  1266                           ; 2 bytes @ 0x6
  1267  0076                     	ds	1
  1268  0077                     ??_Lcd_Write_String:	
  1269  0077                     Lcd_Set_Cursor@z:	
  1270                           ; 1 bytes @ 0x7
  1271                           
  1272                           
  1273                           ; 1 bytes @ 0x7
  1274  0077                     	ds	1
  1275  0078                     Lcd_Set_Cursor@y:	
  1276  0078                     Lcd_Write_String@i:	
  1277                           ; 1 bytes @ 0x8
  1278                           
  1279                           
  1280                           ; 2 bytes @ 0x8
  1281  0078                     	ds	1
  1282  0079                     Lcd_Set_Cursor@temp:	
  1283                           
  1284                           ; 1 bytes @ 0x9
  1285  0079                     	ds	1
  1286  007A                     ??_main:	
  1287                           
  1288                           ; 1 bytes @ 0xA
  1289  007A                     	ds	2
  1290                           
  1291                           	psect	maintext
  1292  0763                     __pmaintext:	
  1293 ;;
  1294 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1295 ;;
  1296 ;; *************** function _main *****************
  1297 ;; Defined at:
  1298 ;;		line 87 in file "Main.c"
  1299 ;; Parameters:    Size  Location     Type
  1300 ;;		None
  1301 ;; Auto vars:     Size  Location     Type
  1302 ;;		None
  1303 ;; Return value:  Size  Location     Type
  1304 ;;                  1    wreg      void 
  1305 ;; Registers used:
  1306 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1307 ;; Tracked objects:
  1308 ;;		On entry : B1F/0
  1309 ;;		On exit  : 0/0
  1310 ;;		Unchanged: 0/0
  1311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1314 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1315 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1316 ;;Total ram usage:        2 bytes
  1317 ;; Hardware stack levels required when called:    3
  1318 ;; This function calls:
  1319 ;;		_InitSoftUART
  1320 ;;		_Lcd_Clear
  1321 ;;		_Lcd_Init
  1322 ;;		_Lcd_Set_Cursor
  1323 ;;		_Lcd_Write_String
  1324 ;;		_SUART_Write_Text
  1325 ;;		_UART_Transmit
  1326 ;;		_initMain
  1327 ;; This function is called by:
  1328 ;;		Startup code after reset
  1329 ;; This function uses a non-reentrant model
  1330 ;;
  1331                           
  1332                           
  1333                           ;psect for function _main
  1334  0763                     _main:	
  1335                           
  1336                           ;Main.c: 88: initMain();
  1337                           
  1338                           ;incstack = 0
  1339                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1340  0763  3186  260F  3187   	fcall	_initMain
  1341                           
  1342                           ;Main.c: 90: Lcd_Init();
  1343  0766  3187  2721  3187   	fcall	_Lcd_Init
  1344                           
  1345                           ;Main.c: 91: _delay((unsigned long)((1000)*(16000000/4000.0)));
  1346  0769  3015               	movlw	21
  1347  076A  00FB               	movwf	??_main+1
  1348  076B  304B               	movlw	75
  1349  076C  00FA               	movwf	??_main
  1350  076D  30BE               	movlw	190
  1351  076E                     u297:	
  1352  076E  0B89               	decfsz	9,f
  1353  076F  2F6E               	goto	u297
  1354  0770  0BFA               	decfsz	??_main,f
  1355  0771  2F6E               	goto	u297
  1356  0772  0BFB               	decfsz	??_main+1,f
  1357  0773  2F6E               	goto	u297
  1358  0774  3200               	nop2
  1359                           
  1360                           ;Main.c: 94: InitSoftUART();
  1361  0775  3185  25F2  3187   	fcall	_InitSoftUART
  1362                           
  1363                           ;Main.c: 95: _delay((unsigned long)((1000)*(16000000/4000.0)));
  1364  0778  3015               	movlw	21
  1365  0779  00FB               	movwf	??_main+1
  1366  077A  304B               	movlw	75
  1367  077B  00FA               	movwf	??_main
  1368  077C  30BE               	movlw	190
  1369  077D                     u307:	
  1370  077D  0B89               	decfsz	9,f
  1371  077E  2F7D               	goto	u307
  1372  077F  0BFA               	decfsz	??_main,f
  1373  0780  2F7D               	goto	u307
  1374  0781  0BFB               	decfsz	??_main+1,f
  1375  0782  2F7D               	goto	u307
  1376  0783  3200               	nop2
  1377  0784                     l906:	
  1378                           ;Main.c: 97: while(1){
  1379                           
  1380                           
  1381                           ;Main.c: 100: SUART_Write_Text("AT+CMGF=1\r\n");
  1382  0784  303C               	movlw	low (STR_1| (0+32768))
  1383  0785  00F3               	movwf	SUART_Write_Text@text
  1384  0786  3088               	movlw	high (STR_1| (0+32768))
  1385  0787  00F4               	movwf	SUART_Write_Text@text+1
  1386  0788  3186  2662  3187   	fcall	_SUART_Write_Text
  1387                           
  1388                           ;Main.c: 101: _delay((unsigned long)((1000)*(16000000/4000.0)));
  1389  078B  3015               	movlw	21
  1390  078C  00FB               	movwf	??_main+1
  1391  078D  304B               	movlw	75
  1392  078E  00FA               	movwf	??_main
  1393  078F  30BE               	movlw	190
  1394  0790                     u317:	
  1395  0790  0B89               	decfsz	9,f
  1396  0791  2F90               	goto	u317
  1397  0792  0BFA               	decfsz	??_main,f
  1398  0793  2F90               	goto	u317
  1399  0794  0BFB               	decfsz	??_main+1,f
  1400  0795  2F90               	goto	u317
  1401  0796  3200               	nop2
  1402                           
  1403                           ;Main.c: 103: SUART_Write_Text("AT+CMGS=\"3603951\"\r\n");
  1404  0797  3028               	movlw	low (STR_2| (0+32768))
  1405  0798  00F3               	movwf	SUART_Write_Text@text
  1406  0799  3088               	movlw	high (STR_2| (0+32768))
  1407  079A  00F4               	movwf	SUART_Write_Text@text+1
  1408  079B  3186  2662  3187   	fcall	_SUART_Write_Text
  1409                           
  1410                           ;Main.c: 104: _delay((unsigned long)((1000)*(16000000/4000.0)));
  1411  079E  3015               	movlw	21
  1412  079F  00FB               	movwf	??_main+1
  1413  07A0  304B               	movlw	75
  1414  07A1  00FA               	movwf	??_main
  1415  07A2  30BE               	movlw	190
  1416  07A3                     u327:	
  1417  07A3  0B89               	decfsz	9,f
  1418  07A4  2FA3               	goto	u327
  1419  07A5  0BFA               	decfsz	??_main,f
  1420  07A6  2FA3               	goto	u327
  1421  07A7  0BFB               	decfsz	??_main+1,f
  1422  07A8  2FA3               	goto	u327
  1423  07A9  3200               	nop2
  1424                           
  1425                           ;Main.c: 107: SUART_Write_Text("Test");
  1426  07AA  3058               	movlw	low (STR_3| (0+32768))
  1427  07AB  00F3               	movwf	SUART_Write_Text@text
  1428  07AC  3088               	movlw	high (STR_3| (0+32768))
  1429  07AD  00F4               	movwf	SUART_Write_Text@text+1
  1430  07AE  3186  2662  3187   	fcall	_SUART_Write_Text
  1431                           
  1432                           ;Main.c: 108: _delay((unsigned long)((1000)*(16000000/4000.0)));
  1433  07B1  3015               	movlw	21
  1434  07B2  00FB               	movwf	??_main+1
  1435  07B3  304B               	movlw	75
  1436  07B4  00FA               	movwf	??_main
  1437  07B5  30BE               	movlw	190
  1438  07B6                     u337:	
  1439  07B6  0B89               	decfsz	9,f
  1440  07B7  2FB6               	goto	u337
  1441  07B8  0BFA               	decfsz	??_main,f
  1442  07B9  2FB6               	goto	u337
  1443  07BA  0BFB               	decfsz	??_main+1,f
  1444  07BB  2FB6               	goto	u337
  1445  07BC  3200               	nop2
  1446                           
  1447                           ;Main.c: 110: UART_Transmit((char)26);
  1448  07BD  301A               	movlw	26
  1449  07BE  3186  26A8  3187   	fcall	_UART_Transmit
  1450                           
  1451                           ;Main.c: 111: _delay((unsigned long)((1000)*(16000000/4000.0)));
  1452  07C1  3015               	movlw	21
  1453  07C2  00FB               	movwf	??_main+1
  1454  07C3  304B               	movlw	75
  1455  07C4  00FA               	movwf	??_main
  1456  07C5  30BE               	movlw	190
  1457  07C6                     u347:	
  1458  07C6  0B89               	decfsz	9,f
  1459  07C7  2FC6               	goto	u347
  1460  07C8  0BFA               	decfsz	??_main,f
  1461  07C9  2FC6               	goto	u347
  1462  07CA  0BFB               	decfsz	??_main+1,f
  1463  07CB  2FC6               	goto	u347
  1464  07CC  3200               	nop2
  1465                           
  1466                           ;Main.c: 114: Lcd_Clear();
  1467  07CD  3185  25FE  3187   	fcall	_Lcd_Clear
  1468                           
  1469                           ;Main.c: 115: Lcd_Set_Cursor(1,1);
  1470  07D0  01F3               	clrf	Lcd_Set_Cursor@b
  1471  07D1  0AF3               	incf	Lcd_Set_Cursor@b,f
  1472  07D2  3001               	movlw	1
  1473  07D3  3186  26E1  3187   	fcall	_Lcd_Set_Cursor
  1474                           
  1475                           ;Main.c: 116: _delay((unsigned long)((100)*(16000000/4000.0)));
  1476  07D6  3003               	movlw	3
  1477  07D7  00FB               	movwf	??_main+1
  1478  07D8  3008               	movlw	8
  1479  07D9  00FA               	movwf	??_main
  1480  07DA  3077               	movlw	119
  1481  07DB                     u357:	
  1482  07DB  0B89               	decfsz	9,f
  1483  07DC  2FDB               	goto	u357
  1484  07DD  0BFA               	decfsz	??_main,f
  1485  07DE  2FDB               	goto	u357
  1486  07DF  0BFB               	decfsz	??_main+1,f
  1487  07E0  2FDB               	goto	u357
  1488  07E1  0000               	nop
  1489                           
  1490                           ;Main.c: 119: Lcd_Write_String("Sent");
  1491  07E2  3053               	movlw	low (STR_4| (0+32768))
  1492  07E3  00F5               	movwf	Lcd_Write_String@a
  1493  07E4  3088               	movlw	high (STR_4| (0+32768))
  1494  07E5  00F6               	movwf	Lcd_Write_String@a+1
  1495  07E6  3186  2648  3187   	fcall	_Lcd_Write_String
  1496                           
  1497                           ;Main.c: 121: _delay((unsigned long)((2000)*(16000000/4000.0)));
  1498  07E9  3029               	movlw	41
  1499  07EA  00FB               	movwf	??_main+1
  1500  07EB  3096               	movlw	150
  1501  07EC  00FA               	movwf	??_main
  1502  07ED  307F               	movlw	127
  1503  07EE                     u367:	
  1504  07EE  0B89               	decfsz	9,f
  1505  07EF  2FEE               	goto	u367
  1506  07F0  0BFA               	decfsz	??_main,f
  1507  07F1  2FEE               	goto	u367
  1508  07F2  0BFB               	decfsz	??_main+1,f
  1509  07F3  2FEE               	goto	u367
  1510  07F4  0000               	nop
  1511  07F5  2F84               	goto	l906
  1512  07F6                     __end_of_main:	
  1513                           ;Main.c: 123: }
  1514                           ;Main.c: 125: return;
  1515                           
  1516                           
  1517                           	psect	text1
  1518  060F                     __ptext1:	
  1519 ;; *************** function _initMain *****************
  1520 ;; Defined at:
  1521 ;;		line 64 in file "Main.c"
  1522 ;; Parameters:    Size  Location     Type
  1523 ;;		None
  1524 ;; Auto vars:     Size  Location     Type
  1525 ;;		None
  1526 ;; Return value:  Size  Location     Type
  1527 ;;                  1    wreg      void 
  1528 ;; Registers used:
  1529 ;;		status,2, status,0, pclath, cstack
  1530 ;; Tracked objects:
  1531 ;;		On entry : 0/0
  1532 ;;		On exit  : 0/0
  1533 ;;		Unchanged: 0/0
  1534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1539 ;;Total ram usage:        0 bytes
  1540 ;; Hardware stack levels used:    1
  1541 ;; Hardware stack levels required when called:    1
  1542 ;; This function calls:
  1543 ;;		_internal_16
  1544 ;; This function is called by:
  1545 ;;		_main
  1546 ;; This function uses a non-reentrant model
  1547 ;;
  1548                           
  1549                           
  1550                           ;psect for function _initMain
  1551  060F                     _initMain:	
  1552                           
  1553                           ;Main.c: 66: internal_16();
  1554                           
  1555                           ;incstack = 0
  1556                           ; Regs used in _initMain: [status,2+status,0+pclath+cstack]
  1557  060F  3186  2606         	fcall	_internal_16
  1558                           
  1559                           ;Main.c: 70: TRISD = 0x00;
  1560  0611  0021               	movlb	1	; select bank1
  1561  0612  018F               	clrf	15	;volatile
  1562                           
  1563                           ;Main.c: 71: ANSELD = 0x00;
  1564  0613  0023               	movlb	3	; select bank3
  1565  0614  018F               	clrf	15	;volatile
  1566                           
  1567                           ;Main.c: 72: PORTD = 0x00;
  1568  0615  0020               	movlb	0	; select bank0
  1569  0616  018F               	clrf	15	;volatile
  1570                           
  1571                           ;Main.c: 74: TRISE = 0;
  1572  0617  0021               	movlb	1	; select bank1
  1573  0618  0190               	clrf	16	;volatile
  1574                           
  1575                           ;Main.c: 75: ANSELE = 0;
  1576  0619  0023               	movlb	3	; select bank3
  1577  061A  0190               	clrf	16	;volatile
  1578  061B  0008               	return
  1579  061C                     __end_of_initMain:	
  1580                           
  1581                           	psect	text2
  1582  0606                     __ptext2:	
  1583 ;; *************** function _internal_16 *****************
  1584 ;; Defined at:
  1585 ;;		line 56 in file "16F1717_Internal.c"
  1586 ;; Parameters:    Size  Location     Type
  1587 ;;		None
  1588 ;; Auto vars:     Size  Location     Type
  1589 ;;		None
  1590 ;; Return value:  Size  Location     Type
  1591 ;;                  1    wreg      void 
  1592 ;; Registers used:
  1593 ;;		None
  1594 ;; Tracked objects:
  1595 ;;		On entry : 0/0
  1596 ;;		On exit  : 0/0
  1597 ;;		Unchanged: 0/0
  1598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1603 ;;Total ram usage:        0 bytes
  1604 ;; Hardware stack levels used:    1
  1605 ;; This function calls:
  1606 ;;		Nothing
  1607 ;; This function is called by:
  1608 ;;		_initMain
  1609 ;; This function uses a non-reentrant model
  1610 ;;
  1611                           
  1612                           
  1613                           ;psect for function _internal_16
  1614  0606                     _internal_16:	
  1615                           
  1616                           ;16F1717_Internal.c: 58: SCS0 = 0;
  1617                           
  1618                           ;incstack = 0
  1619                           ; Regs used in _internal_16: []
  1620  0606  0021               	movlb	1	; select bank1
  1621  0607  1019               	bcf	25,0	;volatile
  1622                           
  1623                           ;16F1717_Internal.c: 59: SCS1 = 0;
  1624  0608  1099               	bcf	25,1	;volatile
  1625                           
  1626                           ;16F1717_Internal.c: 62: IRCF0 = 1;
  1627  0609  1599               	bsf	25,3	;volatile
  1628                           
  1629                           ;16F1717_Internal.c: 63: IRCF1 = 1;
  1630  060A  1619               	bsf	25,4	;volatile
  1631                           
  1632                           ;16F1717_Internal.c: 64: IRCF2 = 1;
  1633  060B  1699               	bsf	25,5	;volatile
  1634                           
  1635                           ;16F1717_Internal.c: 65: IRCF3 = 1;
  1636  060C  1719               	bsf	25,6	;volatile
  1637                           
  1638                           ;16F1717_Internal.c: 68: SPLLEN = 0;
  1639  060D  1399               	bcf	25,7	;volatile
  1640  060E  0008               	return
  1641  060F                     __end_of_internal_16:	
  1642                           
  1643                           	psect	text3
  1644  0662                     __ptext3:	
  1645 ;; *************** function _SUART_Write_Text *****************
  1646 ;; Defined at:
  1647 ;;		line 218 in file "Main.c"
  1648 ;; Parameters:    Size  Location     Type
  1649 ;;  text            2    3[COMMON] PTR unsigned char 
  1650 ;;		 -> STR_3(5), STR_2(20), STR_1(12), 
  1651 ;; Auto vars:     Size  Location     Type
  1652 ;;  i               2    6[COMMON] int 
  1653 ;; Return value:  Size  Location     Type
  1654 ;;                  1    wreg      void 
  1655 ;; Registers used:
  1656 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1657 ;; Tracked objects:
  1658 ;;		On entry : 0/0
  1659 ;;		On exit  : 0/0
  1660 ;;		Unchanged: 0/0
  1661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1662 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1663 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1664 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1665 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1666 ;;Total ram usage:        5 bytes
  1667 ;; Hardware stack levels used:    1
  1668 ;; Hardware stack levels required when called:    1
  1669 ;; This function calls:
  1670 ;;		_UART_Transmit
  1671 ;; This function is called by:
  1672 ;;		_main
  1673 ;; This function uses a non-reentrant model
  1674 ;;
  1675                           
  1676                           
  1677                           ;psect for function _SUART_Write_Text
  1678  0662                     _SUART_Write_Text:	
  1679                           
  1680                           ;Main.c: 220: int i;
  1681                           ;Main.c: 222: for(i=0;text[i]!='\0';i++)
  1682                           
  1683                           ;incstack = 0
  1684                           ; Regs used in _SUART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1685  0662  01F6               	clrf	SUART_Write_Text@i
  1686  0663  01F7               	clrf	SUART_Write_Text@i+1
  1687  0664                     l890:	
  1688  0664  0873               	movf	SUART_Write_Text@text,w
  1689  0665  0776               	addwf	SUART_Write_Text@i,w
  1690  0666  0084               	movwf	4
  1691  0667  0874               	movf	SUART_Write_Text@text+1,w
  1692  0668  3D77               	addwfc	SUART_Write_Text@i+1,w
  1693  0669  0085               	movwf	5
  1694  066A  0012               	moviw fsr0++
  1695  066B  1903               	btfsc	3,2
  1696  066C  0008               	return
  1697                           
  1698                           ;Main.c: 223: UART_Transmit(text[i]);
  1699  066D  0873               	movf	SUART_Write_Text@text,w
  1700  066E  0776               	addwf	SUART_Write_Text@i,w
  1701  066F  0084               	movwf	4
  1702  0670  0874               	movf	SUART_Write_Text@text+1,w
  1703  0671  3D77               	addwfc	SUART_Write_Text@i+1,w
  1704  0672  0085               	movwf	5
  1705  0673  0800               	movf	0,w	;code access
  1706  0674  3186  26A8  3186   	fcall	_UART_Transmit
  1707  0677  3001               	movlw	1
  1708  0678  07F6               	addwf	SUART_Write_Text@i,f
  1709  0679  3000               	movlw	0
  1710  067A  3DF7               	addwfc	SUART_Write_Text@i+1,f
  1711  067B  2E64               	goto	l890
  1712  067C                     __end_of_SUART_Write_Text:	
  1713                           
  1714                           	psect	text4
  1715  06A8                     __ptext4:	
  1716 ;; *************** function _UART_Transmit *****************
  1717 ;; Defined at:
  1718 ;;		line 181 in file "Main.c"
  1719 ;; Parameters:    Size  Location     Type
  1720 ;;  DataValue       1    wreg     const unsigned char 
  1721 ;; Auto vars:     Size  Location     Type
  1722 ;;  DataValue       1    1[COMMON] const unsigned char 
  1723 ;;  i               1    2[COMMON] unsigned char 
  1724 ;; Return value:  Size  Location     Type
  1725 ;;                  1    wreg      void 
  1726 ;; Registers used:
  1727 ;;		wreg, status,2, status,0
  1728 ;; Tracked objects:
  1729 ;;		On entry : 0/0
  1730 ;;		On exit  : 0/0
  1731 ;;		Unchanged: 0/0
  1732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1734 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1735 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1736 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1737 ;;Total ram usage:        3 bytes
  1738 ;; Hardware stack levels used:    1
  1739 ;; This function calls:
  1740 ;;		Nothing
  1741 ;; This function is called by:
  1742 ;;		_main
  1743 ;;		_SUART_Write_Text
  1744 ;;		_SUART_Write_Char
  1745 ;; This function uses a non-reentrant model
  1746 ;;
  1747                           
  1748                           
  1749                           ;psect for function _UART_Transmit
  1750  06A8                     _UART_Transmit:	
  1751                           
  1752                           ;incstack = 0
  1753                           ; Regs used in _UART_Transmit: [wreg+status,2+status,0]
  1754                           ;UART_Transmit@DataValue stored from wreg
  1755  06A8  00F1               	movwf	UART_Transmit@DataValue
  1756                           
  1757                           ;Main.c: 192: LATEbits.LATE1 = 0;
  1758  06A9  0022               	movlb	2	; select bank2
  1759  06AA  1090               	bcf	16,1	;volatile
  1760                           
  1761                           ;Main.c: 193: _delay((unsigned long)(((1000000/2400))*(16000000/4000000.0)));
  1762  06AB  30ED               	movlw	237
  1763  06AC                     u377:	
  1764  06AC  3200               	nop2
  1765  06AD  3200               	nop2
  1766  06AE  0B89               	decfsz	9,f
  1767  06AF  2EAC               	goto	u377
  1768  06B0  3200               	nop2
  1769  06B1  3200               	nop2
  1770  06B2  0000               	nop
  1771                           
  1772                           ;Main.c: 195: for ( unsigned char i = 0; i < 8; i++ )
  1773  06B3  01F2               	clrf	UART_Transmit@i
  1774  06B4  3008               	movlw	8
  1775  06B5  0272               	subwf	UART_Transmit@i,w
  1776  06B6  1803               	btfsc	3,0
  1777  06B7  2ED6               	goto	l126
  1778  06B8                     l692:	
  1779                           
  1780                           ;Main.c: 196: {
  1781                           ;Main.c: 198: if(((DataValue>>i)&0x1) == 0x1 )
  1782  06B8  0871               	movf	UART_Transmit@DataValue,w
  1783  06B9  00F0               	movwf	??_UART_Transmit
  1784  06BA  0A72               	incf	UART_Transmit@i,w
  1785  06BB  2EBD               	goto	u74
  1786  06BC                     u75:	
  1787  06BC  36F0               	lsrf	??_UART_Transmit,f
  1788  06BD                     u74:	
  1789  06BD  0B89               	decfsz	9,f
  1790  06BE  2EBC               	goto	u75
  1791  06BF  1C70               	btfss	??_UART_Transmit,0
  1792  06C0  2EC4               	goto	l127
  1793                           
  1794                           ;Main.c: 199: {
  1795                           ;Main.c: 200: LATEbits.LATE1 = 1;
  1796  06C1  0022               	movlb	2	; select bank2
  1797  06C2  1490               	bsf	16,1	;volatile
  1798                           
  1799                           ;Main.c: 201: }
  1800  06C3  2EC6               	goto	l696
  1801  06C4                     l127:	
  1802                           
  1803                           ;Main.c: 202: else
  1804                           ;Main.c: 203: {
  1805                           ;Main.c: 204: LATEbits.LATE1 = 0;
  1806  06C4  0022               	movlb	2	; select bank2
  1807  06C5  1090               	bcf	16,1	;volatile
  1808  06C6                     l696:	
  1809                           
  1810                           ;Main.c: 205: }
  1811                           ;Main.c: 207: _delay((unsigned long)(((1000000/2400))*(16000000/4000000.0)));
  1812  06C6  30ED               	movlw	237
  1813  06C7                     u387:	
  1814  06C7  3200               	nop2
  1815  06C8  3200               	nop2
  1816  06C9  0B89               	decfsz	9,f
  1817  06CA  2EC7               	goto	u387
  1818  06CB  3200               	nop2
  1819  06CC  3200               	nop2
  1820  06CD  0000               	nop
  1821  06CE  3001               	movlw	1
  1822  06CF  00F0               	movwf	??_UART_Transmit
  1823  06D0  0870               	movf	??_UART_Transmit,w
  1824  06D1  07F2               	addwf	UART_Transmit@i,f
  1825  06D2  3008               	movlw	8
  1826  06D3  0272               	subwf	UART_Transmit@i,w
  1827  06D4  1C03               	skipc
  1828  06D5  2EB8               	goto	l692
  1829  06D6                     l126:	
  1830                           
  1831                           ;Main.c: 208: }
  1832                           ;Main.c: 211: LATEbits.LATE1 = 1;
  1833  06D6  0022               	movlb	2	; select bank2
  1834  06D7  1490               	bsf	16,1	;volatile
  1835                           
  1836                           ;Main.c: 212: _delay((unsigned long)(((1000000/2400))*(16000000/4000000.0)));
  1837  06D8  30ED               	movlw	237
  1838  06D9                     u397:	
  1839  06D9  3200               	nop2
  1840  06DA  3200               	nop2
  1841  06DB  0B89               	decfsz	9,f
  1842  06DC  2ED9               	goto	u397
  1843  06DD  3200               	nop2
  1844  06DE  3200               	nop2
  1845  06DF  0000               	nop
  1846  06E0  0008               	return
  1847  06E1                     __end_of_UART_Transmit:	
  1848                           
  1849                           	psect	text5
  1850  0648                     __ptext5:	
  1851 ;; *************** function _Lcd_Write_String *****************
  1852 ;; Defined at:
  1853 ;;		line 170 in file "LCD.c"
  1854 ;; Parameters:    Size  Location     Type
  1855 ;;  a               2    5[COMMON] PTR const unsigned char 
  1856 ;;		 -> ftoa@buf(17), STR_4(5), Lcd_Write_Integer@buf(8), 
  1857 ;; Auto vars:     Size  Location     Type
  1858 ;;  i               2    8[COMMON] int 
  1859 ;; Return value:  Size  Location     Type
  1860 ;;                  1    wreg      void 
  1861 ;; Registers used:
  1862 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1863 ;; Tracked objects:
  1864 ;;		On entry : 0/0
  1865 ;;		On exit  : 0/0
  1866 ;;		Unchanged: 0/0
  1867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1868 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1869 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1870 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1871 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1872 ;;Total ram usage:        5 bytes
  1873 ;; Hardware stack levels used:    1
  1874 ;; Hardware stack levels required when called:    2
  1875 ;; This function calls:
  1876 ;;		_Lcd_Write_Char
  1877 ;; This function is called by:
  1878 ;;		_main
  1879 ;;		_Lcd_Write_Integer
  1880 ;;		_Lcd_Write_Float
  1881 ;; This function uses a non-reentrant model
  1882 ;;
  1883                           
  1884                           
  1885                           ;psect for function _Lcd_Write_String
  1886  0648                     _Lcd_Write_String:	
  1887                           
  1888                           ;LCD.c: 172: int i;
  1889                           ;LCD.c: 173: for(i=0;a[i]!='\0';i++)
  1890                           
  1891                           ;incstack = 0
  1892                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1893  0648  01F8               	clrf	Lcd_Write_String@i
  1894  0649  01F9               	clrf	Lcd_Write_String@i+1
  1895  064A                     l882:	
  1896  064A  0875               	movf	Lcd_Write_String@a,w
  1897  064B  0778               	addwf	Lcd_Write_String@i,w
  1898  064C  0084               	movwf	4
  1899  064D  0876               	movf	Lcd_Write_String@a+1,w
  1900  064E  3D79               	addwfc	Lcd_Write_String@i+1,w
  1901  064F  0085               	movwf	5
  1902  0650  0012               	moviw fsr0++
  1903  0651  1903               	btfsc	3,2
  1904  0652  0008               	return
  1905                           
  1906                           ;LCD.c: 174: Lcd_Write_Char(a[i]);
  1907  0653  0875               	movf	Lcd_Write_String@a,w
  1908  0654  0778               	addwf	Lcd_Write_String@i,w
  1909  0655  0084               	movwf	4
  1910  0656  0876               	movf	Lcd_Write_String@a+1,w
  1911  0657  3D79               	addwfc	Lcd_Write_String@i+1,w
  1912  0658  0085               	movwf	5
  1913  0659  0800               	movf	0,w	;code access
  1914  065A  3186  267C  3186   	fcall	_Lcd_Write_Char
  1915  065D  3001               	movlw	1
  1916  065E  07F8               	addwf	Lcd_Write_String@i,f
  1917  065F  3000               	movlw	0
  1918  0660  3DF9               	addwfc	Lcd_Write_String@i+1,f
  1919  0661  2E4A               	goto	l882
  1920  0662                     __end_of_Lcd_Write_String:	
  1921                           
  1922                           	psect	text6
  1923  067C                     __ptext6:	
  1924 ;; *************** function _Lcd_Write_Char *****************
  1925 ;; Defined at:
  1926 ;;		line 146 in file "LCD.c"
  1927 ;; Parameters:    Size  Location     Type
  1928 ;;  a               1    wreg     unsigned char 
  1929 ;; Auto vars:     Size  Location     Type
  1930 ;;  a               1    4[COMMON] unsigned char 
  1931 ;;  y               1    3[COMMON] unsigned char 
  1932 ;;  temp            1    2[COMMON] unsigned char 
  1933 ;; Return value:  Size  Location     Type
  1934 ;;                  1    wreg      void 
  1935 ;; Registers used:
  1936 ;;		wreg, status,2, status,0, pclath, cstack
  1937 ;; Tracked objects:
  1938 ;;		On entry : 0/0
  1939 ;;		On exit  : 0/0
  1940 ;;		Unchanged: 0/0
  1941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1943 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1944 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1945 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1946 ;;Total ram usage:        4 bytes
  1947 ;; Hardware stack levels used:    1
  1948 ;; Hardware stack levels required when called:    1
  1949 ;; This function calls:
  1950 ;;		_Lcd_Port
  1951 ;; This function is called by:
  1952 ;;		_Lcd_Write_String
  1953 ;; This function uses a non-reentrant model
  1954 ;;
  1955                           
  1956                           
  1957                           ;psect for function _Lcd_Write_Char
  1958  067C                     _Lcd_Write_Char:	
  1959                           
  1960                           ;incstack = 0
  1961                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1962                           ;Lcd_Write_Char@a stored from wreg
  1963  067C  00F4               	movwf	Lcd_Write_Char@a
  1964                           
  1965                           ;LCD.c: 148: char temp,y;
  1966                           ;LCD.c: 149: temp = a&0x0F;
  1967  067D  0874               	movf	Lcd_Write_Char@a,w
  1968  067E  390F               	andlw	15
  1969  067F  00F1               	movwf	??_Lcd_Write_Char
  1970  0680  0871               	movf	??_Lcd_Write_Char,w
  1971  0681  00F2               	movwf	Lcd_Write_Char@temp
  1972                           
  1973                           ;LCD.c: 150: y = a&0xF0;
  1974  0682  0874               	movf	Lcd_Write_Char@a,w
  1975  0683  39F0               	andlw	240
  1976  0684  00F1               	movwf	??_Lcd_Write_Char
  1977  0685  0871               	movf	??_Lcd_Write_Char,w
  1978  0686  00F3               	movwf	Lcd_Write_Char@y
  1979                           
  1980                           ;LCD.c: 151: RD2 = 1;
  1981  0687  0020               	movlb	0	; select bank0
  1982  0688  150F               	bsf	15,2	;volatile
  1983                           
  1984                           ;LCD.c: 152: Lcd_Port(y>>4);
  1985  0689  0873               	movf	Lcd_Write_Char@y,w
  1986  068A  00F1               	movwf	??_Lcd_Write_Char
  1987  068B  3004               	movlw	4
  1988  068C                     u55:	
  1989  068C  36F1               	lsrf	??_Lcd_Write_Char,f
  1990  068D  0B89               	decfsz	9,f
  1991  068E  2E8C               	goto	u55
  1992  068F  0871               	movf	??_Lcd_Write_Char,w
  1993  0690  3186  2630  3186   	fcall	_Lcd_Port
  1994                           
  1995                           ;LCD.c: 153: RD3 = 1;
  1996  0693  0020               	movlb	0	; select bank0
  1997  0694  158F               	bsf	15,3	;volatile
  1998                           
  1999                           ;LCD.c: 154: _delay((unsigned long)((20)*(16000000/4000000.0)));
  2000  0695  301A               	movlw	26
  2001  0696                     u407:	
  2002  0696  0B89               	decfsz	9,f
  2003  0697  2E96               	goto	u407
  2004  0698  3200               	nop2
  2005                           
  2006                           ;LCD.c: 155: RD3 = 0;
  2007  0699  0020               	movlb	0	; select bank0
  2008  069A  118F               	bcf	15,3	;volatile
  2009                           
  2010                           ;LCD.c: 156: Lcd_Port(temp);
  2011  069B  0872               	movf	Lcd_Write_Char@temp,w
  2012  069C  3186  2630  3186   	fcall	_Lcd_Port
  2013                           
  2014                           ;LCD.c: 157: RD3 = 1;
  2015  069F  0020               	movlb	0	; select bank0
  2016  06A0  158F               	bsf	15,3	;volatile
  2017                           
  2018                           ;LCD.c: 158: _delay((unsigned long)((20)*(16000000/4000000.0)));
  2019  06A1  301A               	movlw	26
  2020  06A2                     u417:	
  2021  06A2  0B89               	decfsz	9,f
  2022  06A3  2EA2               	goto	u417
  2023  06A4  3200               	nop2
  2024                           
  2025                           ;LCD.c: 159: RD3 = 0;
  2026  06A5  0020               	movlb	0	; select bank0
  2027  06A6  118F               	bcf	15,3	;volatile
  2028  06A7  0008               	return
  2029  06A8                     __end_of_Lcd_Write_Char:	
  2030                           
  2031                           	psect	text7
  2032  06E1                     __ptext7:	
  2033 ;; *************** function _Lcd_Set_Cursor *****************
  2034 ;; Defined at:
  2035 ;;		line 90 in file "LCD.c"
  2036 ;; Parameters:    Size  Location     Type
  2037 ;;  a               1    wreg     unsigned char 
  2038 ;;  b               1    3[COMMON] unsigned char 
  2039 ;; Auto vars:     Size  Location     Type
  2040 ;;  a               1    6[COMMON] unsigned char 
  2041 ;;  temp            1    9[COMMON] unsigned char 
  2042 ;;  y               1    8[COMMON] unsigned char 
  2043 ;;  z               1    7[COMMON] unsigned char 
  2044 ;; Return value:  Size  Location     Type
  2045 ;;                  1    wreg      void 
  2046 ;; Registers used:
  2047 ;;		wreg, status,2, status,0, pclath, cstack
  2048 ;; Tracked objects:
  2049 ;;		On entry : 0/0
  2050 ;;		On exit  : 0/0
  2051 ;;		Unchanged: 0/0
  2052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2053 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2054 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2055 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2056 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2057 ;;Total ram usage:        7 bytes
  2058 ;; Hardware stack levels used:    1
  2059 ;; Hardware stack levels required when called:    2
  2060 ;; This function calls:
  2061 ;;		_Lcd_Cmd
  2062 ;; This function is called by:
  2063 ;;		_main
  2064 ;; This function uses a non-reentrant model
  2065 ;;
  2066                           
  2067                           
  2068                           ;psect for function _Lcd_Set_Cursor
  2069  06E1                     _Lcd_Set_Cursor:	
  2070                           
  2071                           ;incstack = 0
  2072                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2073                           ;Lcd_Set_Cursor@a stored from wreg
  2074  06E1  00F6               	movwf	Lcd_Set_Cursor@a
  2075                           
  2076                           ;LCD.c: 92: char temp,z,y;
  2077                           ;LCD.c: 93: if(a == 1)
  2078  06E2  0376               	decf	Lcd_Set_Cursor@a,w
  2079  06E3  1D03               	btfss	3,2
  2080  06E4  2F01               	goto	l866
  2081                           
  2082                           ;LCD.c: 94: {
  2083                           ;LCD.c: 95: temp = 0x80 + b - 1;
  2084  06E5  0873               	movf	Lcd_Set_Cursor@b,w
  2085  06E6  3E7F               	addlw	127
  2086  06E7  00F4               	movwf	??_Lcd_Set_Cursor
  2087  06E8  0874               	movf	??_Lcd_Set_Cursor,w
  2088  06E9  00F9               	movwf	Lcd_Set_Cursor@temp
  2089                           
  2090                           ;LCD.c: 96: z = temp>>4;
  2091  06EA  0879               	movf	Lcd_Set_Cursor@temp,w
  2092  06EB  00F4               	movwf	??_Lcd_Set_Cursor
  2093  06EC  3004               	movlw	4
  2094  06ED                     u245:	
  2095  06ED  36F4               	lsrf	??_Lcd_Set_Cursor,f
  2096  06EE  0B89               	decfsz	9,f
  2097  06EF  2EED               	goto	u245
  2098  06F0  0874               	movf	??_Lcd_Set_Cursor,w
  2099  06F1  00F5               	movwf	??_Lcd_Set_Cursor+1
  2100  06F2  0875               	movf	??_Lcd_Set_Cursor+1,w
  2101  06F3  00F7               	movwf	Lcd_Set_Cursor@z
  2102                           
  2103                           ;LCD.c: 97: y = temp & 0x0F;
  2104  06F4  0879               	movf	Lcd_Set_Cursor@temp,w
  2105  06F5  390F               	andlw	15
  2106  06F6  00F4               	movwf	??_Lcd_Set_Cursor
  2107  06F7  0874               	movf	??_Lcd_Set_Cursor,w
  2108  06F8  00F8               	movwf	Lcd_Set_Cursor@y
  2109                           
  2110                           ;LCD.c: 98: Lcd_Cmd(z);
  2111  06F9  0877               	movf	Lcd_Set_Cursor@z,w
  2112  06FA  3186  261C  3186   	fcall	_Lcd_Cmd
  2113                           
  2114                           ;LCD.c: 99: Lcd_Cmd(y);
  2115  06FD  0878               	movf	Lcd_Set_Cursor@y,w
  2116  06FE  3186  261C         	fcall	_Lcd_Cmd
  2117                           
  2118                           ;LCD.c: 100: }
  2119  0700  0008               	return
  2120  0701                     l866:	
  2121                           
  2122                           ;LCD.c: 101: else if(a == 2)
  2123  0701  3002               	movlw	2
  2124  0702  0676               	xorwf	Lcd_Set_Cursor@a,w
  2125  0703  1D03               	btfss	3,2
  2126  0704  0008               	return
  2127                           
  2128                           ;LCD.c: 102: {
  2129                           ;LCD.c: 103: temp = 0xC0 + b - 1;
  2130  0705  0873               	movf	Lcd_Set_Cursor@b,w
  2131  0706  3EBF               	addlw	191
  2132  0707  00F4               	movwf	??_Lcd_Set_Cursor
  2133  0708  0874               	movf	??_Lcd_Set_Cursor,w
  2134  0709  00F9               	movwf	Lcd_Set_Cursor@temp
  2135                           
  2136                           ;LCD.c: 104: z = temp>>4;
  2137  070A  0879               	movf	Lcd_Set_Cursor@temp,w
  2138  070B  00F4               	movwf	??_Lcd_Set_Cursor
  2139  070C  3004               	movlw	4
  2140  070D                     u265:	
  2141  070D  36F4               	lsrf	??_Lcd_Set_Cursor,f
  2142  070E  0B89               	decfsz	9,f
  2143  070F  2F0D               	goto	u265
  2144  0710  0874               	movf	??_Lcd_Set_Cursor,w
  2145  0711  00F5               	movwf	??_Lcd_Set_Cursor+1
  2146  0712  0875               	movf	??_Lcd_Set_Cursor+1,w
  2147  0713  00F7               	movwf	Lcd_Set_Cursor@z
  2148                           
  2149                           ;LCD.c: 105: y = temp & 0x0F;
  2150  0714  0879               	movf	Lcd_Set_Cursor@temp,w
  2151  0715  390F               	andlw	15
  2152  0716  00F4               	movwf	??_Lcd_Set_Cursor
  2153  0717  0874               	movf	??_Lcd_Set_Cursor,w
  2154  0718  00F8               	movwf	Lcd_Set_Cursor@y
  2155                           
  2156                           ;LCD.c: 106: Lcd_Cmd(z);
  2157  0719  0877               	movf	Lcd_Set_Cursor@z,w
  2158  071A  3186  261C  3186   	fcall	_Lcd_Cmd
  2159                           
  2160                           ;LCD.c: 107: Lcd_Cmd(y);
  2161  071D  0878               	movf	Lcd_Set_Cursor@y,w
  2162  071E  3186  261C         	fcall	_Lcd_Cmd
  2163  0720  0008               	return
  2164  0721                     __end_of_Lcd_Set_Cursor:	
  2165                           
  2166                           	psect	text8
  2167  0721                     __ptext8:	
  2168 ;; *************** function _Lcd_Init *****************
  2169 ;; Defined at:
  2170 ;;		line 119 in file "LCD.c"
  2171 ;; Parameters:    Size  Location     Type
  2172 ;;		None
  2173 ;; Auto vars:     Size  Location     Type
  2174 ;;		None
  2175 ;; Return value:  Size  Location     Type
  2176 ;;                  1    wreg      void 
  2177 ;; Registers used:
  2178 ;;		wreg, status,2, status,0, pclath, cstack
  2179 ;; Tracked objects:
  2180 ;;		On entry : 0/0
  2181 ;;		On exit  : 0/0
  2182 ;;		Unchanged: 0/0
  2183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2186 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2187 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2188 ;;Total ram usage:        1 bytes
  2189 ;; Hardware stack levels used:    1
  2190 ;; Hardware stack levels required when called:    2
  2191 ;; This function calls:
  2192 ;;		_Lcd_Cmd
  2193 ;;		_Lcd_Port
  2194 ;; This function is called by:
  2195 ;;		_main
  2196 ;; This function uses a non-reentrant model
  2197 ;;
  2198                           
  2199                           
  2200                           ;psect for function _Lcd_Init
  2201  0721                     _Lcd_Init:	
  2202                           
  2203                           ;LCD.c: 121: Lcd_Port(0x00);
  2204                           
  2205                           ;incstack = 0
  2206                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2207  0721  3000               	movlw	0
  2208  0722  3186  2630  3187   	fcall	_Lcd_Port
  2209                           
  2210                           ;LCD.c: 122: _delay((unsigned long)((10)*(16000000/4000.0)));
  2211  0725  3034               	movlw	52
  2212  0726  00F3               	movwf	??_Lcd_Init
  2213  0727  30F2               	movlw	242
  2214  0728                     u427:	
  2215  0728  0B89               	decfsz	9,f
  2216  0729  2F28               	goto	u427
  2217  072A  0BF3               	decfsz	??_Lcd_Init,f
  2218  072B  2F28               	goto	u427
  2219                           
  2220                           ;LCD.c: 123: Lcd_Cmd(0x03);
  2221  072C  3003               	movlw	3
  2222  072D  3186  261C  3187   	fcall	_Lcd_Cmd
  2223                           
  2224                           ;LCD.c: 124: _delay((unsigned long)((3)*(16000000/4000.0)));
  2225  0730  3010               	movlw	16
  2226  0731  00F3               	movwf	??_Lcd_Init
  2227  0732  3094               	movlw	148
  2228  0733                     u437:	
  2229  0733  0B89               	decfsz	9,f
  2230  0734  2F33               	goto	u437
  2231  0735  0BF3               	decfsz	??_Lcd_Init,f
  2232  0736  2F33               	goto	u437
  2233  0737  3200               	nop2
  2234                           
  2235                           ;LCD.c: 125: Lcd_Cmd(0x03);
  2236  0738  3003               	movlw	3
  2237  0739  3186  261C  3187   	fcall	_Lcd_Cmd
  2238                           
  2239                           ;LCD.c: 126: _delay((unsigned long)((10)*(16000000/4000.0)));
  2240  073C  3034               	movlw	52
  2241  073D  00F3               	movwf	??_Lcd_Init
  2242  073E  30F2               	movlw	242
  2243  073F                     u447:	
  2244  073F  0B89               	decfsz	9,f
  2245  0740  2F3F               	goto	u447
  2246  0741  0BF3               	decfsz	??_Lcd_Init,f
  2247  0742  2F3F               	goto	u447
  2248                           
  2249                           ;LCD.c: 127: Lcd_Cmd(0x03);
  2250  0743  3003               	movlw	3
  2251  0744  3186  261C  3187   	fcall	_Lcd_Cmd
  2252                           
  2253                           ;LCD.c: 129: Lcd_Cmd(0x02);
  2254  0747  3002               	movlw	2
  2255  0748  3186  261C  3187   	fcall	_Lcd_Cmd
  2256                           
  2257                           ;LCD.c: 130: Lcd_Cmd(0x02);
  2258  074B  3002               	movlw	2
  2259  074C  3186  261C  3187   	fcall	_Lcd_Cmd
  2260                           
  2261                           ;LCD.c: 131: Lcd_Cmd(0x08);
  2262  074F  3008               	movlw	8
  2263  0750  3186  261C  3187   	fcall	_Lcd_Cmd
  2264                           
  2265                           ;LCD.c: 132: Lcd_Cmd(0x00);
  2266  0753  3000               	movlw	0
  2267  0754  3186  261C  3187   	fcall	_Lcd_Cmd
  2268                           
  2269                           ;LCD.c: 133: Lcd_Cmd(0x0C);
  2270  0757  300C               	movlw	12
  2271  0758  3186  261C  3187   	fcall	_Lcd_Cmd
  2272                           
  2273                           ;LCD.c: 134: Lcd_Cmd(0x00);
  2274  075B  3000               	movlw	0
  2275  075C  3186  261C  3187   	fcall	_Lcd_Cmd
  2276                           
  2277                           ;LCD.c: 135: Lcd_Cmd(0x06);
  2278  075F  3006               	movlw	6
  2279  0760  3186  261C         	fcall	_Lcd_Cmd
  2280  0762  0008               	return
  2281  0763                     __end_of_Lcd_Init:	
  2282                           
  2283                           	psect	text9
  2284  05FE                     __ptext9:	
  2285 ;; *************** function _Lcd_Clear *****************
  2286 ;; Defined at:
  2287 ;;		line 76 in file "LCD.c"
  2288 ;; Parameters:    Size  Location     Type
  2289 ;;		None
  2290 ;; Auto vars:     Size  Location     Type
  2291 ;;		None
  2292 ;; Return value:  Size  Location     Type
  2293 ;;                  1    wreg      void 
  2294 ;; Registers used:
  2295 ;;		wreg, status,2, status,0, pclath, cstack
  2296 ;; Tracked objects:
  2297 ;;		On entry : 0/0
  2298 ;;		On exit  : 0/0
  2299 ;;		Unchanged: 0/0
  2300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2305 ;;Total ram usage:        0 bytes
  2306 ;; Hardware stack levels used:    1
  2307 ;; Hardware stack levels required when called:    2
  2308 ;; This function calls:
  2309 ;;		_Lcd_Cmd
  2310 ;; This function is called by:
  2311 ;;		_main
  2312 ;; This function uses a non-reentrant model
  2313 ;;
  2314                           
  2315                           
  2316                           ;psect for function _Lcd_Clear
  2317  05FE                     _Lcd_Clear:	
  2318                           
  2319                           ;LCD.c: 78: Lcd_Cmd(0);
  2320                           
  2321                           ;incstack = 0
  2322                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2323  05FE  3000               	movlw	0
  2324  05FF  3186  261C  3185   	fcall	_Lcd_Cmd
  2325                           
  2326                           ;LCD.c: 79: Lcd_Cmd(1);
  2327  0602  3001               	movlw	1
  2328  0603  3186  261C         	fcall	_Lcd_Cmd
  2329  0605  0008               	return
  2330  0606                     __end_of_Lcd_Clear:	
  2331                           
  2332                           	psect	text10
  2333  061C                     __ptext10:	
  2334 ;; *************** function _Lcd_Cmd *****************
  2335 ;; Defined at:
  2336 ;;		line 59 in file "LCD.c"
  2337 ;; Parameters:    Size  Location     Type
  2338 ;;  a               1    wreg     unsigned char 
  2339 ;; Auto vars:     Size  Location     Type
  2340 ;;  a               1    2[COMMON] unsigned char 
  2341 ;; Return value:  Size  Location     Type
  2342 ;;                  1    wreg      void 
  2343 ;; Registers used:
  2344 ;;		wreg, status,2, status,0, pclath, cstack
  2345 ;; Tracked objects:
  2346 ;;		On entry : 0/0
  2347 ;;		On exit  : 0/0
  2348 ;;		Unchanged: 0/0
  2349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2351 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2352 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2353 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2354 ;;Total ram usage:        2 bytes
  2355 ;; Hardware stack levels used:    1
  2356 ;; Hardware stack levels required when called:    1
  2357 ;; This function calls:
  2358 ;;		_Lcd_Port
  2359 ;; This function is called by:
  2360 ;;		_Lcd_Clear
  2361 ;;		_Lcd_Set_Cursor
  2362 ;;		_Lcd_Init
  2363 ;;		_Lcd_Shift_Right
  2364 ;;		_Lcd_Shift_Left
  2365 ;; This function uses a non-reentrant model
  2366 ;;
  2367                           
  2368                           
  2369                           ;psect for function _Lcd_Cmd
  2370  061C                     _Lcd_Cmd:	
  2371                           
  2372                           ;incstack = 0
  2373                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2374                           ;Lcd_Cmd@a stored from wreg
  2375  061C  00F2               	movwf	Lcd_Cmd@a
  2376                           
  2377                           ;LCD.c: 61: RD2 = 0;
  2378  061D  0020               	movlb	0	; select bank0
  2379  061E  110F               	bcf	15,2	;volatile
  2380                           
  2381                           ;LCD.c: 62: Lcd_Port(a);
  2382  061F  0872               	movf	Lcd_Cmd@a,w
  2383  0620  3186  2630  3186   	fcall	_Lcd_Port
  2384                           
  2385                           ;LCD.c: 63: RD3 = 1;
  2386  0623  0020               	movlb	0	; select bank0
  2387  0624  158F               	bsf	15,3	;volatile
  2388                           
  2389                           ;LCD.c: 64: _delay((unsigned long)((1)*(16000000/4000.0)));
  2390  0625  3006               	movlw	6
  2391  0626  00F1               	movwf	??_Lcd_Cmd
  2392  0627  3030               	movlw	48
  2393  0628                     u457:	
  2394  0628  0B89               	decfsz	9,f
  2395  0629  2E28               	goto	u457
  2396  062A  0BF1               	decfsz	??_Lcd_Cmd,f
  2397  062B  2E28               	goto	u457
  2398  062C  3200               	nop2
  2399                           
  2400                           ;LCD.c: 65: RD3 = 0;
  2401  062D  0020               	movlb	0	; select bank0
  2402  062E  118F               	bcf	15,3	;volatile
  2403  062F  0008               	return
  2404  0630                     __end_of_Lcd_Cmd:	
  2405                           
  2406                           	psect	text11
  2407  0630                     __ptext11:	
  2408 ;; *************** function _Lcd_Port *****************
  2409 ;; Defined at:
  2410 ;;		line 28 in file "LCD.c"
  2411 ;; Parameters:    Size  Location     Type
  2412 ;;  a               1    wreg     unsigned char 
  2413 ;; Auto vars:     Size  Location     Type
  2414 ;;  a               1    0[COMMON] unsigned char 
  2415 ;; Return value:  Size  Location     Type
  2416 ;;                  1    wreg      void 
  2417 ;; Registers used:
  2418 ;;		wreg
  2419 ;; Tracked objects:
  2420 ;;		On entry : 0/0
  2421 ;;		On exit  : 0/0
  2422 ;;		Unchanged: 0/0
  2423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2425 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2427 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2428 ;;Total ram usage:        1 bytes
  2429 ;; Hardware stack levels used:    1
  2430 ;; This function calls:
  2431 ;;		Nothing
  2432 ;; This function is called by:
  2433 ;;		_Lcd_Cmd
  2434 ;;		_Lcd_Init
  2435 ;;		_Lcd_Write_Char
  2436 ;; This function uses a non-reentrant model
  2437 ;;
  2438                           
  2439                           
  2440                           ;psect for function _Lcd_Port
  2441  0630                     _Lcd_Port:	
  2442                           
  2443                           ;incstack = 0
  2444                           ; Regs used in _Lcd_Port: [wreg]
  2445                           ;Lcd_Port@a stored from wreg
  2446  0630  00F0               	movwf	Lcd_Port@a
  2447                           
  2448                           ;LCD.c: 30: if(a & 1)
  2449  0631  1C70               	btfss	Lcd_Port@a,0
  2450  0632  2E36               	goto	l21
  2451                           
  2452                           ;LCD.c: 31: RD4 = 1;
  2453  0633  0020               	movlb	0	; select bank0
  2454  0634  160F               	bsf	15,4	;volatile
  2455  0635  2E38               	goto	l638
  2456  0636                     l21:	
  2457                           
  2458                           ;LCD.c: 32: else
  2459                           ;LCD.c: 33: RD4 = 0;
  2460  0636  0020               	movlb	0	; select bank0
  2461  0637  120F               	bcf	15,4	;volatile
  2462  0638                     l638:	
  2463                           
  2464                           ;LCD.c: 35: if(a & 2)
  2465  0638  1CF0               	btfss	Lcd_Port@a,1
  2466  0639  2E3C               	goto	l23
  2467                           
  2468                           ;LCD.c: 36: RD5 = 1;
  2469  063A  168F               	bsf	15,5	;volatile
  2470  063B  2E3D               	goto	l642
  2471  063C                     l23:	
  2472                           
  2473                           ;LCD.c: 37: else
  2474                           ;LCD.c: 38: RD5 = 0;
  2475  063C  128F               	bcf	15,5	;volatile
  2476  063D                     l642:	
  2477                           
  2478                           ;LCD.c: 40: if(a & 4)
  2479  063D  1D70               	btfss	Lcd_Port@a,2
  2480  063E  2E41               	goto	l25
  2481                           
  2482                           ;LCD.c: 41: RD6 = 1;
  2483  063F  170F               	bsf	15,6	;volatile
  2484  0640  2E42               	goto	l646
  2485  0641                     l25:	
  2486                           
  2487                           ;LCD.c: 42: else
  2488                           ;LCD.c: 43: RD6 = 0;
  2489  0641  130F               	bcf	15,6	;volatile
  2490  0642                     l646:	
  2491                           
  2492                           ;LCD.c: 45: if(a & 8)
  2493  0642  1DF0               	btfss	Lcd_Port@a,3
  2494  0643  2E46               	goto	l27
  2495                           
  2496                           ;LCD.c: 46: RD7 = 1;
  2497  0644  178F               	bsf	15,7	;volatile
  2498  0645  0008               	return
  2499  0646                     l27:	
  2500                           
  2501                           ;LCD.c: 47: else
  2502                           ;LCD.c: 48: RD7 = 0;
  2503  0646  138F               	bcf	15,7	;volatile
  2504  0647  0008               	return
  2505  0648                     __end_of_Lcd_Port:	
  2506                           
  2507                           	psect	text12
  2508  05F2                     __ptext12:	
  2509 ;; *************** function _InitSoftUART *****************
  2510 ;; Defined at:
  2511 ;;		line 131 in file "Main.c"
  2512 ;; Parameters:    Size  Location     Type
  2513 ;;		None
  2514 ;; Auto vars:     Size  Location     Type
  2515 ;;		None
  2516 ;; Return value:  Size  Location     Type
  2517 ;;                  1    wreg      void 
  2518 ;; Registers used:
  2519 ;;		None
  2520 ;; Tracked objects:
  2521 ;;		On entry : 0/0
  2522 ;;		On exit  : 0/0
  2523 ;;		Unchanged: 0/0
  2524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2529 ;;Total ram usage:        0 bytes
  2530 ;; Hardware stack levels used:    1
  2531 ;; This function calls:
  2532 ;;		Nothing
  2533 ;; This function is called by:
  2534 ;;		_main
  2535 ;; This function uses a non-reentrant model
  2536 ;;
  2537                           
  2538                           
  2539                           ;psect for function _InitSoftUART
  2540  05F2                     _InitSoftUART:	
  2541                           
  2542                           ;Main.c: 133: LATEbits.LATE1 = 1;
  2543                           
  2544                           ;incstack = 0
  2545                           ; Regs used in _InitSoftUART: []
  2546  05F2  0022               	movlb	2	; select bank2
  2547  05F3  1490               	bsf	16,1	;volatile
  2548                           
  2549                           ;Main.c: 135: TRISE0 = 1;
  2550  05F4  0021               	movlb	1	; select bank1
  2551  05F5  1410               	bsf	16,0	;volatile
  2552                           
  2553                           ;Main.c: 136: TRISE1 = 0;
  2554  05F6  1090               	bcf	16,1	;volatile
  2555  05F7  0008               	return
  2556  05F8                     __end_of_InitSoftUART:	
  2557  007E                     btemp	set	126	;btemp
  2558  007E                     wtemp0	set	126


Data Sizes:
    Strings     53
    Constant    40
    Data        0
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80      0      17
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    sp__utoa	PTR unsigned char  size(1) Largest target is 8
		 -> Lcd_Write_Integer@buf(COMMON[8]), 

    SUART_Write_Text@text	PTR unsigned char  size(2) Largest target is 20
		 -> STR_3(CODE[5]), STR_2(CODE[20]), STR_1(CODE[12]), 

    sp__ftoa	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK0[17]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 8
		 -> Lcd_Write_Integer@buf(COMMON[8]), 

    Lcd_Write_String@a	PTR const unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK0[17]), STR_4(CODE[5]), Lcd_Write_Integer@buf(COMMON[8]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _main->_Lcd_Write_String
    _SUART_Write_Text->_UART_Transmit
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1346
                                             10 COMMON     2     2      0
                       _InitSoftUART
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                   _SUART_Write_Text
                      _UART_Transmit
                           _initMain
 ---------------------------------------------------------------------------------
 (1) _initMain                                             0     0      0       0
                        _internal_16
 ---------------------------------------------------------------------------------
 (2) _internal_16                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SUART_Write_Text                                     5     3      2     309
                                              3 COMMON     5     3      2
                      _UART_Transmit
 ---------------------------------------------------------------------------------
 (1) _UART_Transmit                                        3     3      0      60
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     5     3      2     369
                                              5 COMMON     5     3      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     120
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     398
                                              3 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     135
                                              3 COMMON     1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      75
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0      75
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      60
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InitSoftUART                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitSoftUART
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _SUART_Write_Text
     _UART_Transmit
   _UART_Transmit
   _initMain
     _internal_16

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0      11       5       21.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      1D      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      1D      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Tue Apr 18 11:31:12 2017

              __CFG_CP$OFF 0000                         l21 0636                         l23 063C  
                       l25 0641                         l27 0646                         u55 068C  
                       u74 06BD                         u75 06BC                        l126 06D6  
                      l127 06C4                        l642 063D                        l646 0642  
                      l638 0638                        l906 0784                        l692 06B8  
                      l696 06C6                        l866 0701                        l882 064A  
                      l890 0664                        _RD2 007A                        _RD3 007B  
                      _RD4 007C                        _RD5 007D                        _RD6 007E  
                      _RD7 007F                        u307 077D                        u245 06ED  
                      u317 0790                        u407 0696                        u327 07A3  
                      u265 070D                        u417 06A2                        u337 07B6  
                      u427 0728                        u347 07C6                        u437 0733  
                      u357 07DB                        u447 073F                        u367 07EE  
                      u457 0628                        u377 06AC                        u297 076E  
                      u387 06C7                        u397 06D9               __CFG_BORV$LO 0000  
                      wreg 0009               __CFG_IESO$ON 0000               __CFG_LVP$OFF 0000  
                     STR_1 083C                       STR_2 0828                       STR_3 0858  
                     STR_4 0853                       STR_5 0848                       _SCS0 04C8  
                     _SCS1 04C9               __CFG_WRT$OFF 0000          ?_Lcd_Write_String 0075  
                     _main 0763                       fsr0h 0005                       indf0 0000  
                     fsr0l 0004                       btemp 007E                       start 0002  
       ??_Lcd_Write_String 0077            __end_of_Lcd_Cmd 0630              ?_InitSoftUART 0070  
                    ?_main 0070              __CFG_WDTE$OFF 0000                      _IRCF0 04CB  
                    _IRCF1 04CC                      _IRCF2 04CD                      _IRCF3 04CE  
                    _PORTD 000F    __size_of_Lcd_Set_Cursor 0040                      _TRISD 008F  
                    _TRISE 0090             __CFG_FCMEN$OFF 0000            __end_of_dpowers 0828  
           __CFG_BOREN$OFF 0000                      status 0003                      wtemp0 007E  
             ?_internal_16 0070           __end_of_Lcd_Init 0763           __end_of_Lcd_Port 0648  
           __CFG_MCLRE$OFF 0000            __initialization 07F6               __end_of_main 07F6  
           ??_InitSoftUART 0070             __CFG_LPBOR$OFF 0000                     ??_main 007A  
       __size_of_Lcd_Clear 0008             __CFG_PLLEN$OFF 0000  __size_of_SUART_Write_Text 001A  
           __CFG_ZCDDIS$ON 0000                     _ANSELD 018F                     _ANSELE 0190  
                ??_Lcd_Cmd 0071                     _SPLLEN 04CF    __size_of_Lcd_Write_Char 002C  
                   _TRISE0 0480                     _TRISE1 0481             __CFG_PWRTE$OFF 0000  
           __CFG_STVREN$ON 0000           __end_of_initMain 061C            Lcd_Set_Cursor@a 0076  
          Lcd_Set_Cursor@b 0073            Lcd_Set_Cursor@y 0078            Lcd_Set_Cursor@z 0077  
  __end_of__initialization 07FD          __end_of_Lcd_Clear 0606      __end_of_UART_Transmit 06E1  
           __pcstackCOMMON 0070             _Lcd_Set_Cursor 06E1                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070       __end_of_InitSoftUART 05F8                 __pbssBANK0 0020  
               __pmaintext 0763       __size_of_internal_16 0009            __CFG_PPS1WAY$ON 0000  
__size_of_Lcd_Write_String 001A     __end_of_Lcd_Set_Cursor 0721                 ??_Lcd_Init 0073  
               ??_Lcd_Port 0070           _SUART_Write_Text 0662                  ?_initMain 0070  
           _Lcd_Write_Char 067C                    _Lcd_Cmd 061C            ?_Lcd_Set_Cursor 0073  
                  __ptext1 060F                    __ptext2 0606                    __ptext3 0662  
                  __ptext4 06A8                    __ptext5 0648                    __ptext6 067C  
                  __ptext7 06E1                    __ptext8 0721                    __ptext9 05FE  
                  _dpowers 0800                    clrloop0 05F9     __end_of_Lcd_Write_Char 06A8  
     end_of_initialization 07FD                    ftoa@buf 0020                 ??_initMain 0070  
           UART_Transmit@i 0072                  Lcd_Port@a 0070               __pstringtext 0800  
         __CFG_FOSC$INTOSC 0000      __size_of_InitSoftUART 0006            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0075          Lcd_Write_String@i 0078                  _Lcd_Clear 05FE  
             _InitSoftUART 05F2           _Lcd_Write_String 0648     UART_Transmit@DataValue 0071  
     SUART_Write_Text@text 0073        start_initialization 07F6          __size_of_Lcd_Init 0042  
        __size_of_Lcd_Port 0018                 ?_Lcd_Clear 0070   __end_of_SUART_Write_Text 067C  
          Lcd_Write_Char@a 0074            Lcd_Write_Char@y 0073                  ___latbits 0002  
   __size_of_UART_Transmit 0039                   ?_Lcd_Cmd 0070              ??_internal_16 0070  
        __size_of_initMain 000D           ??_Lcd_Set_Cursor 0074                   _LATEbits 0110  
                clear_ram0 05F8              _UART_Transmit 06A8                   Lcd_Cmd@a 0072  
              ??_Lcd_Clear 0073        __end_of_internal_16 060F           ??_Lcd_Write_Char 0071  
                 _Lcd_Init 0721                   _Lcd_Port 0630   __end_of_Lcd_Write_String 0662  
         __size_of_Lcd_Cmd 0014             ?_UART_Transmit 0070          SUART_Write_Text@i 0076  
                 __ptext10 061C                   __ptext11 0630                   __ptext12 05F2  
                 _initMain 060F              __size_of_main 0093                _internal_16 0606  
        ?_SUART_Write_Text 0073         ??_SUART_Write_Text 0075         Lcd_Write_Char@temp 0072  
          ??_UART_Transmit 0070          __CFG_CLKOUTEN$OFF 0000         Lcd_Set_Cursor@temp 0079  
