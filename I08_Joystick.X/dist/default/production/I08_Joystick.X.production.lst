

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Tue Apr 18 11:20:22 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1717
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 1.41
    23                           ; Generated 25/01/2017 GMT
    24                           ; 
    25                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F1717 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  008C                     	;# 
    86  008D                     	;# 
    87  008E                     	;# 
    88  008F                     	;# 
    89  0090                     	;# 
    90  0091                     	;# 
    91  0092                     	;# 
    92  0093                     	;# 
    93  0095                     	;# 
    94  0096                     	;# 
    95  0097                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009A                     	;# 
    99  009B                     	;# 
   100  009B                     	;# 
   101  009C                     	;# 
   102  009D                     	;# 
   103  009E                     	;# 
   104  009F                     	;# 
   105  010C                     	;# 
   106  010D                     	;# 
   107  010E                     	;# 
   108  010F                     	;# 
   109  0110                     	;# 
   110  0111                     	;# 
   111  0112                     	;# 
   112  0113                     	;# 
   113  0114                     	;# 
   114  0115                     	;# 
   115  0116                     	;# 
   116  0117                     	;# 
   117  0118                     	;# 
   118  0119                     	;# 
   119  011A                     	;# 
   120  011B                     	;# 
   121  011B                     	;# 
   122  011C                     	;# 
   123  018C                     	;# 
   124  018D                     	;# 
   125  018E                     	;# 
   126  018F                     	;# 
   127  0190                     	;# 
   128  0191                     	;# 
   129  0191                     	;# 
   130  0192                     	;# 
   131  0193                     	;# 
   132  0193                     	;# 
   133  0194                     	;# 
   134  0195                     	;# 
   135  0196                     	;# 
   136  0197                     	;# 
   137  0199                     	;# 
   138  0199                     	;# 
   139  0199                     	;# 
   140  019A                     	;# 
   141  019A                     	;# 
   142  019A                     	;# 
   143  019B                     	;# 
   144  019B                     	;# 
   145  019B                     	;# 
   146  019B                     	;# 
   147  019B                     	;# 
   148  019C                     	;# 
   149  019C                     	;# 
   150  019C                     	;# 
   151  019D                     	;# 
   152  019D                     	;# 
   153  019D                     	;# 
   154  019E                     	;# 
   155  019E                     	;# 
   156  019E                     	;# 
   157  019F                     	;# 
   158  019F                     	;# 
   159  019F                     	;# 
   160  019F                     	;# 
   161  019F                     	;# 
   162  020C                     	;# 
   163  020D                     	;# 
   164  020E                     	;# 
   165  020F                     	;# 
   166  0210                     	;# 
   167  0211                     	;# 
   168  0211                     	;# 
   169  0212                     	;# 
   170  0212                     	;# 
   171  0213                     	;# 
   172  0213                     	;# 
   173  0214                     	;# 
   174  0214                     	;# 
   175  0215                     	;# 
   176  0215                     	;# 
   177  0215                     	;# 
   178  0215                     	;# 
   179  0216                     	;# 
   180  0216                     	;# 
   181  0217                     	;# 
   182  0217                     	;# 
   183  028C                     	;# 
   184  028D                     	;# 
   185  028E                     	;# 
   186  028F                     	;# 
   187  0290                     	;# 
   188  0291                     	;# 
   189  0291                     	;# 
   190  0292                     	;# 
   191  0293                     	;# 
   192  0293                     	;# 
   193  0298                     	;# 
   194  0298                     	;# 
   195  0299                     	;# 
   196  029A                     	;# 
   197  029A                     	;# 
   198  029E                     	;# 
   199  030C                     	;# 
   200  030D                     	;# 
   201  030E                     	;# 
   202  030F                     	;# 
   203  0310                     	;# 
   204  038C                     	;# 
   205  038D                     	;# 
   206  038E                     	;# 
   207  038F                     	;# 
   208  0390                     	;# 
   209  0391                     	;# 
   210  0392                     	;# 
   211  0393                     	;# 
   212  0394                     	;# 
   213  0395                     	;# 
   214  0396                     	;# 
   215  0397                     	;# 
   216  0398                     	;# 
   217  0399                     	;# 
   218  039D                     	;# 
   219  039E                     	;# 
   220  039F                     	;# 
   221  0415                     	;# 
   222  0416                     	;# 
   223  0417                     	;# 
   224  041C                     	;# 
   225  041D                     	;# 
   226  041E                     	;# 
   227  0498                     	;# 
   228  0498                     	;# 
   229  0499                     	;# 
   230  049A                     	;# 
   231  049B                     	;# 
   232  049B                     	;# 
   233  049C                     	;# 
   234  049D                     	;# 
   235  049E                     	;# 
   236  049F                     	;# 
   237  0511                     	;# 
   238  0515                     	;# 
   239  0617                     	;# 
   240  0618                     	;# 
   241  0619                     	;# 
   242  0619                     	;# 
   243  061A                     	;# 
   244  061B                     	;# 
   245  061C                     	;# 
   246  061C                     	;# 
   247  0691                     	;# 
   248  0692                     	;# 
   249  0693                     	;# 
   250  0694                     	;# 
   251  0695                     	;# 
   252  0696                     	;# 
   253  0697                     	;# 
   254  0698                     	;# 
   255  0699                     	;# 
   256  069A                     	;# 
   257  069B                     	;# 
   258  069C                     	;# 
   259  069D                     	;# 
   260  069E                     	;# 
   261  069F                     	;# 
   262  0E0F                     	;# 
   263  0E10                     	;# 
   264  0E11                     	;# 
   265  0E12                     	;# 
   266  0E13                     	;# 
   267  0E14                     	;# 
   268  0E15                     	;# 
   269  0E17                     	;# 
   270  0E20                     	;# 
   271  0E21                     	;# 
   272  0E22                     	;# 
   273  0E24                     	;# 
   274  0E25                     	;# 
   275  0E28                     	;# 
   276  0E29                     	;# 
   277  0E2A                     	;# 
   278  0E2B                     	;# 
   279  0E90                     	;# 
   280  0E91                     	;# 
   281  0E92                     	;# 
   282  0E93                     	;# 
   283  0E94                     	;# 
   284  0E95                     	;# 
   285  0E96                     	;# 
   286  0E97                     	;# 
   287  0E98                     	;# 
   288  0E99                     	;# 
   289  0E9A                     	;# 
   290  0E9B                     	;# 
   291  0E9C                     	;# 
   292  0E9D                     	;# 
   293  0E9E                     	;# 
   294  0E9F                     	;# 
   295  0EA0                     	;# 
   296  0EA1                     	;# 
   297  0EA2                     	;# 
   298  0EA3                     	;# 
   299  0EA4                     	;# 
   300  0EA5                     	;# 
   301  0EA6                     	;# 
   302  0EA7                     	;# 
   303  0EA8                     	;# 
   304  0EA9                     	;# 
   305  0EAA                     	;# 
   306  0EAB                     	;# 
   307  0EAC                     	;# 
   308  0EAD                     	;# 
   309  0EAE                     	;# 
   310  0EAF                     	;# 
   311  0EB0                     	;# 
   312  0EB1                     	;# 
   313  0EB2                     	;# 
   314  0F0F                     	;# 
   315  0F10                     	;# 
   316  0F11                     	;# 
   317  0F12                     	;# 
   318  0F13                     	;# 
   319  0F14                     	;# 
   320  0F15                     	;# 
   321  0F16                     	;# 
   322  0F17                     	;# 
   323  0F18                     	;# 
   324  0F19                     	;# 
   325  0F1A                     	;# 
   326  0F1B                     	;# 
   327  0F1C                     	;# 
   328  0F1D                     	;# 
   329  0F1E                     	;# 
   330  0F1F                     	;# 
   331  0F20                     	;# 
   332  0F21                     	;# 
   333  0F22                     	;# 
   334  0F23                     	;# 
   335  0F24                     	;# 
   336  0F25                     	;# 
   337  0F26                     	;# 
   338  0F27                     	;# 
   339  0F28                     	;# 
   340  0F29                     	;# 
   341  0F2A                     	;# 
   342  0F2B                     	;# 
   343  0F2C                     	;# 
   344  0F2D                     	;# 
   345  0F2E                     	;# 
   346  0F2F                     	;# 
   347  0F30                     	;# 
   348  0F31                     	;# 
   349  0F32                     	;# 
   350  0F33                     	;# 
   351  0F34                     	;# 
   352  0F35                     	;# 
   353  0F36                     	;# 
   354  0F37                     	;# 
   355  0FE4                     	;# 
   356  0FE5                     	;# 
   357  0FE6                     	;# 
   358  0FE7                     	;# 
   359  0FE8                     	;# 
   360  0FE9                     	;# 
   361  0FEA                     	;# 
   362  0FEB                     	;# 
   363  0FED                     	;# 
   364  0FEE                     	;# 
   365  0FEF                     	;# 
   366  0000                     	;# 
   367  0001                     	;# 
   368  0002                     	;# 
   369  0003                     	;# 
   370  0004                     	;# 
   371  0005                     	;# 
   372  0006                     	;# 
   373  0007                     	;# 
   374  0008                     	;# 
   375  0009                     	;# 
   376  000A                     	;# 
   377  000B                     	;# 
   378  000C                     	;# 
   379  000D                     	;# 
   380  000E                     	;# 
   381  000F                     	;# 
   382  0010                     	;# 
   383  0011                     	;# 
   384  0012                     	;# 
   385  0013                     	;# 
   386  0015                     	;# 
   387  0016                     	;# 
   388  0016                     	;# 
   389  0017                     	;# 
   390  0018                     	;# 
   391  0019                     	;# 
   392  001A                     	;# 
   393  001B                     	;# 
   394  001C                     	;# 
   395  008C                     	;# 
   396  008D                     	;# 
   397  008E                     	;# 
   398  008F                     	;# 
   399  0090                     	;# 
   400  0091                     	;# 
   401  0092                     	;# 
   402  0093                     	;# 
   403  0095                     	;# 
   404  0096                     	;# 
   405  0097                     	;# 
   406  0098                     	;# 
   407  0099                     	;# 
   408  009A                     	;# 
   409  009B                     	;# 
   410  009B                     	;# 
   411  009C                     	;# 
   412  009D                     	;# 
   413  009E                     	;# 
   414  009F                     	;# 
   415  010C                     	;# 
   416  010D                     	;# 
   417  010E                     	;# 
   418  010F                     	;# 
   419  0110                     	;# 
   420  0111                     	;# 
   421  0112                     	;# 
   422  0113                     	;# 
   423  0114                     	;# 
   424  0115                     	;# 
   425  0116                     	;# 
   426  0117                     	;# 
   427  0118                     	;# 
   428  0119                     	;# 
   429  011A                     	;# 
   430  011B                     	;# 
   431  011B                     	;# 
   432  011C                     	;# 
   433  018C                     	;# 
   434  018D                     	;# 
   435  018E                     	;# 
   436  018F                     	;# 
   437  0190                     	;# 
   438  0191                     	;# 
   439  0191                     	;# 
   440  0192                     	;# 
   441  0193                     	;# 
   442  0193                     	;# 
   443  0194                     	;# 
   444  0195                     	;# 
   445  0196                     	;# 
   446  0197                     	;# 
   447  0199                     	;# 
   448  0199                     	;# 
   449  0199                     	;# 
   450  019A                     	;# 
   451  019A                     	;# 
   452  019A                     	;# 
   453  019B                     	;# 
   454  019B                     	;# 
   455  019B                     	;# 
   456  019B                     	;# 
   457  019B                     	;# 
   458  019C                     	;# 
   459  019C                     	;# 
   460  019C                     	;# 
   461  019D                     	;# 
   462  019D                     	;# 
   463  019D                     	;# 
   464  019E                     	;# 
   465  019E                     	;# 
   466  019E                     	;# 
   467  019F                     	;# 
   468  019F                     	;# 
   469  019F                     	;# 
   470  019F                     	;# 
   471  019F                     	;# 
   472  020C                     	;# 
   473  020D                     	;# 
   474  020E                     	;# 
   475  020F                     	;# 
   476  0210                     	;# 
   477  0211                     	;# 
   478  0211                     	;# 
   479  0212                     	;# 
   480  0212                     	;# 
   481  0213                     	;# 
   482  0213                     	;# 
   483  0214                     	;# 
   484  0214                     	;# 
   485  0215                     	;# 
   486  0215                     	;# 
   487  0215                     	;# 
   488  0215                     	;# 
   489  0216                     	;# 
   490  0216                     	;# 
   491  0217                     	;# 
   492  0217                     	;# 
   493  028C                     	;# 
   494  028D                     	;# 
   495  028E                     	;# 
   496  028F                     	;# 
   497  0290                     	;# 
   498  0291                     	;# 
   499  0291                     	;# 
   500  0292                     	;# 
   501  0293                     	;# 
   502  0293                     	;# 
   503  0298                     	;# 
   504  0298                     	;# 
   505  0299                     	;# 
   506  029A                     	;# 
   507  029A                     	;# 
   508  029E                     	;# 
   509  030C                     	;# 
   510  030D                     	;# 
   511  030E                     	;# 
   512  030F                     	;# 
   513  0310                     	;# 
   514  038C                     	;# 
   515  038D                     	;# 
   516  038E                     	;# 
   517  038F                     	;# 
   518  0390                     	;# 
   519  0391                     	;# 
   520  0392                     	;# 
   521  0393                     	;# 
   522  0394                     	;# 
   523  0395                     	;# 
   524  0396                     	;# 
   525  0397                     	;# 
   526  0398                     	;# 
   527  0399                     	;# 
   528  039D                     	;# 
   529  039E                     	;# 
   530  039F                     	;# 
   531  0415                     	;# 
   532  0416                     	;# 
   533  0417                     	;# 
   534  041C                     	;# 
   535  041D                     	;# 
   536  041E                     	;# 
   537  0498                     	;# 
   538  0498                     	;# 
   539  0499                     	;# 
   540  049A                     	;# 
   541  049B                     	;# 
   542  049B                     	;# 
   543  049C                     	;# 
   544  049D                     	;# 
   545  049E                     	;# 
   546  049F                     	;# 
   547  0511                     	;# 
   548  0515                     	;# 
   549  0617                     	;# 
   550  0618                     	;# 
   551  0619                     	;# 
   552  0619                     	;# 
   553  061A                     	;# 
   554  061B                     	;# 
   555  061C                     	;# 
   556  061C                     	;# 
   557  0691                     	;# 
   558  0692                     	;# 
   559  0693                     	;# 
   560  0694                     	;# 
   561  0695                     	;# 
   562  0696                     	;# 
   563  0697                     	;# 
   564  0698                     	;# 
   565  0699                     	;# 
   566  069A                     	;# 
   567  069B                     	;# 
   568  069C                     	;# 
   569  069D                     	;# 
   570  069E                     	;# 
   571  069F                     	;# 
   572  0E0F                     	;# 
   573  0E10                     	;# 
   574  0E11                     	;# 
   575  0E12                     	;# 
   576  0E13                     	;# 
   577  0E14                     	;# 
   578  0E15                     	;# 
   579  0E17                     	;# 
   580  0E20                     	;# 
   581  0E21                     	;# 
   582  0E22                     	;# 
   583  0E24                     	;# 
   584  0E25                     	;# 
   585  0E28                     	;# 
   586  0E29                     	;# 
   587  0E2A                     	;# 
   588  0E2B                     	;# 
   589  0E90                     	;# 
   590  0E91                     	;# 
   591  0E92                     	;# 
   592  0E93                     	;# 
   593  0E94                     	;# 
   594  0E95                     	;# 
   595  0E96                     	;# 
   596  0E97                     	;# 
   597  0E98                     	;# 
   598  0E99                     	;# 
   599  0E9A                     	;# 
   600  0E9B                     	;# 
   601  0E9C                     	;# 
   602  0E9D                     	;# 
   603  0E9E                     	;# 
   604  0E9F                     	;# 
   605  0EA0                     	;# 
   606  0EA1                     	;# 
   607  0EA2                     	;# 
   608  0EA3                     	;# 
   609  0EA4                     	;# 
   610  0EA5                     	;# 
   611  0EA6                     	;# 
   612  0EA7                     	;# 
   613  0EA8                     	;# 
   614  0EA9                     	;# 
   615  0EAA                     	;# 
   616  0EAB                     	;# 
   617  0EAC                     	;# 
   618  0EAD                     	;# 
   619  0EAE                     	;# 
   620  0EAF                     	;# 
   621  0EB0                     	;# 
   622  0EB1                     	;# 
   623  0EB2                     	;# 
   624  0F0F                     	;# 
   625  0F10                     	;# 
   626  0F11                     	;# 
   627  0F12                     	;# 
   628  0F13                     	;# 
   629  0F14                     	;# 
   630  0F15                     	;# 
   631  0F16                     	;# 
   632  0F17                     	;# 
   633  0F18                     	;# 
   634  0F19                     	;# 
   635  0F1A                     	;# 
   636  0F1B                     	;# 
   637  0F1C                     	;# 
   638  0F1D                     	;# 
   639  0F1E                     	;# 
   640  0F1F                     	;# 
   641  0F20                     	;# 
   642  0F21                     	;# 
   643  0F22                     	;# 
   644  0F23                     	;# 
   645  0F24                     	;# 
   646  0F25                     	;# 
   647  0F26                     	;# 
   648  0F27                     	;# 
   649  0F28                     	;# 
   650  0F29                     	;# 
   651  0F2A                     	;# 
   652  0F2B                     	;# 
   653  0F2C                     	;# 
   654  0F2D                     	;# 
   655  0F2E                     	;# 
   656  0F2F                     	;# 
   657  0F30                     	;# 
   658  0F31                     	;# 
   659  0F32                     	;# 
   660  0F33                     	;# 
   661  0F34                     	;# 
   662  0F35                     	;# 
   663  0F36                     	;# 
   664  0F37                     	;# 
   665  0FE4                     	;# 
   666  0FE5                     	;# 
   667  0FE6                     	;# 
   668  0FE7                     	;# 
   669  0FE8                     	;# 
   670  0FE9                     	;# 
   671  0FEA                     	;# 
   672  0FEB                     	;# 
   673  0FED                     	;# 
   674  0FEE                     	;# 
   675  0FEF                     	;# 
   676  0000                     	;# 
   677  0001                     	;# 
   678  0002                     	;# 
   679  0003                     	;# 
   680  0004                     	;# 
   681  0005                     	;# 
   682  0006                     	;# 
   683  0007                     	;# 
   684  0008                     	;# 
   685  0009                     	;# 
   686  000A                     	;# 
   687  000B                     	;# 
   688  000C                     	;# 
   689  000D                     	;# 
   690  000E                     	;# 
   691  000F                     	;# 
   692  0010                     	;# 
   693  0011                     	;# 
   694  0012                     	;# 
   695  0013                     	;# 
   696  0015                     	;# 
   697  0016                     	;# 
   698  0016                     	;# 
   699  0017                     	;# 
   700  0018                     	;# 
   701  0019                     	;# 
   702  001A                     	;# 
   703  001B                     	;# 
   704  001C                     	;# 
   705  008C                     	;# 
   706  008D                     	;# 
   707  008E                     	;# 
   708  008F                     	;# 
   709  0090                     	;# 
   710  0091                     	;# 
   711  0092                     	;# 
   712  0093                     	;# 
   713  0095                     	;# 
   714  0096                     	;# 
   715  0097                     	;# 
   716  0098                     	;# 
   717  0099                     	;# 
   718  009A                     	;# 
   719  009B                     	;# 
   720  009B                     	;# 
   721  009C                     	;# 
   722  009D                     	;# 
   723  009E                     	;# 
   724  009F                     	;# 
   725  010C                     	;# 
   726  010D                     	;# 
   727  010E                     	;# 
   728  010F                     	;# 
   729  0110                     	;# 
   730  0111                     	;# 
   731  0112                     	;# 
   732  0113                     	;# 
   733  0114                     	;# 
   734  0115                     	;# 
   735  0116                     	;# 
   736  0117                     	;# 
   737  0118                     	;# 
   738  0119                     	;# 
   739  011A                     	;# 
   740  011B                     	;# 
   741  011B                     	;# 
   742  011C                     	;# 
   743  018C                     	;# 
   744  018D                     	;# 
   745  018E                     	;# 
   746  018F                     	;# 
   747  0190                     	;# 
   748  0191                     	;# 
   749  0191                     	;# 
   750  0192                     	;# 
   751  0193                     	;# 
   752  0193                     	;# 
   753  0194                     	;# 
   754  0195                     	;# 
   755  0196                     	;# 
   756  0197                     	;# 
   757  0199                     	;# 
   758  0199                     	;# 
   759  0199                     	;# 
   760  019A                     	;# 
   761  019A                     	;# 
   762  019A                     	;# 
   763  019B                     	;# 
   764  019B                     	;# 
   765  019B                     	;# 
   766  019B                     	;# 
   767  019B                     	;# 
   768  019C                     	;# 
   769  019C                     	;# 
   770  019C                     	;# 
   771  019D                     	;# 
   772  019D                     	;# 
   773  019D                     	;# 
   774  019E                     	;# 
   775  019E                     	;# 
   776  019E                     	;# 
   777  019F                     	;# 
   778  019F                     	;# 
   779  019F                     	;# 
   780  019F                     	;# 
   781  019F                     	;# 
   782  020C                     	;# 
   783  020D                     	;# 
   784  020E                     	;# 
   785  020F                     	;# 
   786  0210                     	;# 
   787  0211                     	;# 
   788  0211                     	;# 
   789  0212                     	;# 
   790  0212                     	;# 
   791  0213                     	;# 
   792  0213                     	;# 
   793  0214                     	;# 
   794  0214                     	;# 
   795  0215                     	;# 
   796  0215                     	;# 
   797  0215                     	;# 
   798  0215                     	;# 
   799  0216                     	;# 
   800  0216                     	;# 
   801  0217                     	;# 
   802  0217                     	;# 
   803  028C                     	;# 
   804  028D                     	;# 
   805  028E                     	;# 
   806  028F                     	;# 
   807  0290                     	;# 
   808  0291                     	;# 
   809  0291                     	;# 
   810  0292                     	;# 
   811  0293                     	;# 
   812  0293                     	;# 
   813  0298                     	;# 
   814  0298                     	;# 
   815  0299                     	;# 
   816  029A                     	;# 
   817  029A                     	;# 
   818  029E                     	;# 
   819  030C                     	;# 
   820  030D                     	;# 
   821  030E                     	;# 
   822  030F                     	;# 
   823  0310                     	;# 
   824  038C                     	;# 
   825  038D                     	;# 
   826  038E                     	;# 
   827  038F                     	;# 
   828  0390                     	;# 
   829  0391                     	;# 
   830  0392                     	;# 
   831  0393                     	;# 
   832  0394                     	;# 
   833  0395                     	;# 
   834  0396                     	;# 
   835  0397                     	;# 
   836  0398                     	;# 
   837  0399                     	;# 
   838  039D                     	;# 
   839  039E                     	;# 
   840  039F                     	;# 
   841  0415                     	;# 
   842  0416                     	;# 
   843  0417                     	;# 
   844  041C                     	;# 
   845  041D                     	;# 
   846  041E                     	;# 
   847  0498                     	;# 
   848  0498                     	;# 
   849  0499                     	;# 
   850  049A                     	;# 
   851  049B                     	;# 
   852  049B                     	;# 
   853  049C                     	;# 
   854  049D                     	;# 
   855  049E                     	;# 
   856  049F                     	;# 
   857  0511                     	;# 
   858  0515                     	;# 
   859  0617                     	;# 
   860  0618                     	;# 
   861  0619                     	;# 
   862  0619                     	;# 
   863  061A                     	;# 
   864  061B                     	;# 
   865  061C                     	;# 
   866  061C                     	;# 
   867  0691                     	;# 
   868  0692                     	;# 
   869  0693                     	;# 
   870  0694                     	;# 
   871  0695                     	;# 
   872  0696                     	;# 
   873  0697                     	;# 
   874  0698                     	;# 
   875  0699                     	;# 
   876  069A                     	;# 
   877  069B                     	;# 
   878  069C                     	;# 
   879  069D                     	;# 
   880  069E                     	;# 
   881  069F                     	;# 
   882  0E0F                     	;# 
   883  0E10                     	;# 
   884  0E11                     	;# 
   885  0E12                     	;# 
   886  0E13                     	;# 
   887  0E14                     	;# 
   888  0E15                     	;# 
   889  0E17                     	;# 
   890  0E20                     	;# 
   891  0E21                     	;# 
   892  0E22                     	;# 
   893  0E24                     	;# 
   894  0E25                     	;# 
   895  0E28                     	;# 
   896  0E29                     	;# 
   897  0E2A                     	;# 
   898  0E2B                     	;# 
   899  0E90                     	;# 
   900  0E91                     	;# 
   901  0E92                     	;# 
   902  0E93                     	;# 
   903  0E94                     	;# 
   904  0E95                     	;# 
   905  0E96                     	;# 
   906  0E97                     	;# 
   907  0E98                     	;# 
   908  0E99                     	;# 
   909  0E9A                     	;# 
   910  0E9B                     	;# 
   911  0E9C                     	;# 
   912  0E9D                     	;# 
   913  0E9E                     	;# 
   914  0E9F                     	;# 
   915  0EA0                     	;# 
   916  0EA1                     	;# 
   917  0EA2                     	;# 
   918  0EA3                     	;# 
   919  0EA4                     	;# 
   920  0EA5                     	;# 
   921  0EA6                     	;# 
   922  0EA7                     	;# 
   923  0EA8                     	;# 
   924  0EA9                     	;# 
   925  0EAA                     	;# 
   926  0EAB                     	;# 
   927  0EAC                     	;# 
   928  0EAD                     	;# 
   929  0EAE                     	;# 
   930  0EAF                     	;# 
   931  0EB0                     	;# 
   932  0EB1                     	;# 
   933  0EB2                     	;# 
   934  0F0F                     	;# 
   935  0F10                     	;# 
   936  0F11                     	;# 
   937  0F12                     	;# 
   938  0F13                     	;# 
   939  0F14                     	;# 
   940  0F15                     	;# 
   941  0F16                     	;# 
   942  0F17                     	;# 
   943  0F18                     	;# 
   944  0F19                     	;# 
   945  0F1A                     	;# 
   946  0F1B                     	;# 
   947  0F1C                     	;# 
   948  0F1D                     	;# 
   949  0F1E                     	;# 
   950  0F1F                     	;# 
   951  0F20                     	;# 
   952  0F21                     	;# 
   953  0F22                     	;# 
   954  0F23                     	;# 
   955  0F24                     	;# 
   956  0F25                     	;# 
   957  0F26                     	;# 
   958  0F27                     	;# 
   959  0F28                     	;# 
   960  0F29                     	;# 
   961  0F2A                     	;# 
   962  0F2B                     	;# 
   963  0F2C                     	;# 
   964  0F2D                     	;# 
   965  0F2E                     	;# 
   966  0F2F                     	;# 
   967  0F30                     	;# 
   968  0F31                     	;# 
   969  0F32                     	;# 
   970  0F33                     	;# 
   971  0F34                     	;# 
   972  0F35                     	;# 
   973  0F36                     	;# 
   974  0F37                     	;# 
   975  0FE4                     	;# 
   976  0FE5                     	;# 
   977  0FE6                     	;# 
   978  0FE7                     	;# 
   979  0FE8                     	;# 
   980  0FE9                     	;# 
   981  0FEA                     	;# 
   982  0FEB                     	;# 
   983  0FED                     	;# 
   984  0FEE                     	;# 
   985  0FEF                     	;# 
   986                           
   987                           	psect	stringtext
   988  0800                     __pstringtext:	
   989  0800                     _dpowers:	
   990  0800  3401               	retlw	1
   991  0801  3400               	retlw	0
   992  0802  3400               	retlw	0
   993  0803  3400               	retlw	0
   994  0804  340A               	retlw	10
   995  0805  3400               	retlw	0
   996  0806  3400               	retlw	0
   997  0807  3400               	retlw	0
   998  0808  3464               	retlw	100
   999  0809  3400               	retlw	0
  1000  080A  3400               	retlw	0
  1001  080B  3400               	retlw	0
  1002  080C  34E8               	retlw	232
  1003  080D  3403               	retlw	3
  1004  080E  3400               	retlw	0
  1005  080F  3400               	retlw	0
  1006  0810  3410               	retlw	16
  1007  0811  3427               	retlw	39
  1008  0812  3400               	retlw	0
  1009  0813  3400               	retlw	0
  1010  0814  34A0               	retlw	160
  1011  0815  3486               	retlw	134
  1012  0816  3401               	retlw	1
  1013  0817  3400               	retlw	0
  1014  0818  3440               	retlw	64
  1015  0819  3442               	retlw	66
  1016  081A  340F               	retlw	15
  1017  081B  3400               	retlw	0
  1018  081C  3480               	retlw	128
  1019  081D  3496               	retlw	150
  1020  081E  3498               	retlw	152
  1021  081F  3400               	retlw	0
  1022  0820  3400               	retlw	0
  1023  0821  34E1               	retlw	225
  1024  0822  34F5               	retlw	245
  1025  0823  3405               	retlw	5
  1026  0824  3400               	retlw	0
  1027  0825  34CA               	retlw	202
  1028  0826  349A               	retlw	154
  1029  0827  343B               	retlw	59
  1030  0828                     __end_of_dpowers:	
  1031  000F                     _PORTD	set	15
  1032  007B                     _RD3	set	123
  1033  007A                     _RD2	set	122
  1034  007F                     _RD7	set	127
  1035  007E                     _RD6	set	126
  1036  007D                     _RD5	set	125
  1037  007C                     _RD4	set	124
  1038  009D                     _ADCON0bits	set	157
  1039  009C                     _ADRESH	set	156
  1040  009B                     _ADRESL	set	155
  1041  009E                     _ADCON1bits	set	158
  1042  008D                     _TRISBbits	set	141
  1043  008F                     _TRISD	set	143
  1044  04CF                     _SPLLEN	set	1231
  1045  04CE                     _IRCF3	set	1230
  1046  04CD                     _IRCF2	set	1229
  1047  04CC                     _IRCF1	set	1228
  1048  04CB                     _IRCF0	set	1227
  1049  04C9                     _SCS1	set	1225
  1050  04C8                     _SCS0	set	1224
  1051  018D                     _ANSELBbits	set	397
  1052  018F                     _ANSELD	set	399
  1053  0828                     STR_5:	
  1054  0828  3425               	retlw	37	;'%'
  1055  0829  346C               	retlw	108	;'l'
  1056  082A  3475               	retlw	117	;'u'
  1057  082B  342E               	retlw	46	;'.'
  1058  082C  3425               	retlw	37	;'%'
  1059  082D  3436               	retlw	54	;'6'
  1060  082E  342E               	retlw	46	;'.'
  1061  082F  3436               	retlw	54	;'6'
  1062  0830  346C               	retlw	108	;'l'
  1063  0831  3475               	retlw	117	;'u'
  1064  0832  3400               	retlw	0
  1065  0833                     STR_3:	
  1066  0833  3452               	retlw	82	;'R'
  1067  0834  3469               	retlw	105	;'i'
  1068  0835  3467               	retlw	103	;'g'
  1069  0836  3468               	retlw	104	;'h'
  1070  0837  3474               	retlw	116	;'t'
  1071  0838  3400               	retlw	0
  1072  0839                     STR_2:	
  1073  0839  3444               	retlw	68	;'D'
  1074  083A  346F               	retlw	111	;'o'
  1075  083B  3477               	retlw	119	;'w'
  1076  083C  346E               	retlw	110	;'n'
  1077  083D  3400               	retlw	0
  1078  083E                     STR_4:	
  1079  083E  344C               	retlw	76	;'L'
  1080  083F  3465               	retlw	101	;'e'
  1081  0840  3466               	retlw	102	;'f'
  1082  0841  3474               	retlw	116	;'t'
  1083  0842  3400               	retlw	0
  1084  0843                     STR_1:	
  1085  0843  3455               	retlw	85	;'U'
  1086  0844  3470               	retlw	112	;'p'
  1087  0845  3400               	retlw	0
  1088                           
  1089                           ; #config settings
  1090  0000                     
  1091                           	psect	cinit
  1092  07F6                     start_initialization:	
  1093  07F6                     __initialization:	
  1094                           
  1095                           ; Clear objects allocated to BANK0
  1096  07F6  3020               	movlw	low __pbssBANK0
  1097  07F7  0084               	movwf	4
  1098  07F8  3000               	movlw	high __pbssBANK0
  1099  07F9  0085               	movwf	5
  1100  07FA  3011               	movlw	17
  1101  07FB  3186  2643         	fcall	clear_ram0
  1102  07FD                     end_of_initialization:	
  1103                           ;End of C runtime variable initialization code
  1104                           
  1105  07FD                     __end_of__initialization:	
  1106  07FD  0020               	movlb	0
  1107  07FE  3187  2F7E         	ljmp	_main	;jump to C main() function
  1108                           
  1109                           	psect	bssBANK0
  1110  0020                     __pbssBANK0:	
  1111  0020                     ftoa@buf:	
  1112  0020                     	ds	17
  1113                           
  1114                           	psect	clrtext
  1115  0643                     clear_ram0:	
  1116                           ;	Called with FSR0 containing the base address, and
  1117                           ;	WREG with the size to clear
  1118                           
  1119  0643  0064               	clrwdt	;clear the watchdog before getting into this loop
  1120  0644                     clrloop0:	
  1121  0644  0180               	clrf	0	;clear RAM location pointed to by FSR
  1122  0645  3101               	addfsr 0,1
  1123  0646  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1124  0647  2E44               	goto	clrloop0	;have we reached the end yet?
  1125  0648  3400               	retlw	0	;all done for this memory range, return
  1126                           
  1127                           	psect	cstackCOMMON
  1128  0070                     __pcstackCOMMON:	
  1129  0070                     ?_internal_16:	
  1130  0070                     ??_internal_16:	
  1131                           ; 1 bytes @ 0x0
  1132                           
  1133  0070                     ?_Lcd_Port:	
  1134                           ; 1 bytes @ 0x0
  1135                           
  1136  0070                     ??_Lcd_Port:	
  1137                           ; 1 bytes @ 0x0
  1138                           
  1139  0070                     ?_Lcd_Cmd:	
  1140                           ; 1 bytes @ 0x0
  1141                           
  1142  0070                     ?_Lcd_Clear:	
  1143                           ; 1 bytes @ 0x0
  1144                           
  1145  0070                     ?_Lcd_Init:	
  1146                           ; 1 bytes @ 0x0
  1147                           
  1148  0070                     ?_Lcd_Write_Char:	
  1149                           ; 1 bytes @ 0x0
  1150                           
  1151  0070                     ?_initMain:	
  1152                           ; 1 bytes @ 0x0
  1153                           
  1154  0070                     ?_main:	
  1155                           ; 1 bytes @ 0x0
  1156                           
  1157  0070                     Lcd_Port@a:	
  1158                           ; 1 bytes @ 0x0
  1159                           
  1160                           
  1161                           ; 1 bytes @ 0x0
  1162  0070                     	ds	1
  1163  0071                     ??_Lcd_Cmd:	
  1164  0071                     ??_Lcd_Write_Char:	
  1165                           ; 1 bytes @ 0x1
  1166                           
  1167                           
  1168                           ; 1 bytes @ 0x1
  1169  0071                     	ds	1
  1170  0072                     Lcd_Cmd@a:	
  1171  0072                     Lcd_Write_Char@temp:	
  1172                           ; 1 bytes @ 0x2
  1173                           
  1174                           
  1175                           ; 1 bytes @ 0x2
  1176  0072                     	ds	1
  1177  0073                     ??_Lcd_Clear:	
  1178  0073                     ?_Lcd_Set_Cursor:	
  1179                           ; 1 bytes @ 0x3
  1180                           
  1181  0073                     ??_Lcd_Init:	
  1182                           ; 1 bytes @ 0x3
  1183                           
  1184  0073                     Lcd_Set_Cursor@b:	
  1185                           ; 1 bytes @ 0x3
  1186                           
  1187  0073                     Lcd_Write_Char@y:	
  1188                           ; 1 bytes @ 0x3
  1189                           
  1190                           
  1191                           ; 1 bytes @ 0x3
  1192  0073                     	ds	1
  1193  0074                     ??_Lcd_Set_Cursor:	
  1194  0074                     ??_initMain:	
  1195                           ; 1 bytes @ 0x4
  1196                           
  1197  0074                     Lcd_Write_Char@a:	
  1198                           ; 1 bytes @ 0x4
  1199                           
  1200                           
  1201                           ; 1 bytes @ 0x4
  1202  0074                     	ds	1
  1203  0075                     ?_Lcd_Write_String:	
  1204  0075                     Lcd_Write_String@a:	
  1205                           ; 1 bytes @ 0x5
  1206                           
  1207                           
  1208                           ; 2 bytes @ 0x5
  1209  0075                     	ds	1
  1210  0076                     Lcd_Set_Cursor@a:	
  1211                           
  1212                           ; 1 bytes @ 0x6
  1213  0076                     	ds	1
  1214  0077                     ??_Lcd_Write_String:	
  1215  0077                     Lcd_Set_Cursor@z:	
  1216                           ; 1 bytes @ 0x7
  1217                           
  1218                           
  1219                           ; 1 bytes @ 0x7
  1220  0077                     	ds	1
  1221  0078                     Lcd_Set_Cursor@y:	
  1222  0078                     Lcd_Write_String@i:	
  1223                           ; 1 bytes @ 0x8
  1224                           
  1225                           
  1226                           ; 2 bytes @ 0x8
  1227  0078                     	ds	1
  1228  0079                     Lcd_Set_Cursor@temp:	
  1229                           
  1230                           ; 1 bytes @ 0x9
  1231  0079                     	ds	1
  1232  007A                     ??_main:	
  1233                           
  1234                           ; 1 bytes @ 0xA
  1235  007A                     	ds	2
  1236                           
  1237                           	psect	cstackBANK0
  1238  0031                     __pcstackBANK0:	
  1239  0031                     main@result:	
  1240                           
  1241                           ; 2 bytes @ 0x0
  1242  0031                     	ds	2
  1243  0033                     main@result1:	
  1244                           
  1245                           ; 2 bytes @ 0x2
  1246  0033                     	ds	2
  1247                           
  1248                           	psect	maintext
  1249  077E                     __pmaintext:	
  1250 ;;
  1251 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1252 ;;
  1253 ;; *************** function _main *****************
  1254 ;; Defined at:
  1255 ;;		line 92 in file "Main.c"
  1256 ;; Parameters:    Size  Location     Type
  1257 ;;		None
  1258 ;; Auto vars:     Size  Location     Type
  1259 ;;  result1         2    2[BANK0 ] int 
  1260 ;;  result          2    0[BANK0 ] int 
  1261 ;; Return value:  Size  Location     Type
  1262 ;;                  1    wreg      void 
  1263 ;; Registers used:
  1264 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1265 ;; Tracked objects:
  1266 ;;		On entry : B1F/0
  1267 ;;		On exit  : 0/0
  1268 ;;		Unchanged: 0/0
  1269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1271 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1272 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1273 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1274 ;;Total ram usage:        6 bytes
  1275 ;; Hardware stack levels required when called:    4
  1276 ;; This function calls:
  1277 ;;		_Lcd_Clear
  1278 ;;		_Lcd_Set_Cursor
  1279 ;;		_Lcd_Write_String
  1280 ;;		_initMain
  1281 ;; This function is called by:
  1282 ;;		Startup code after reset
  1283 ;; This function uses a non-reentrant model
  1284 ;;
  1285                           
  1286                           
  1287                           ;psect for function _main
  1288  077E                     _main:	
  1289                           
  1290                           ;Main.c: 93: initMain();
  1291                           
  1292                           ;incstack = 0
  1293                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1294  077E  3186  26CC  3187   	fcall	_initMain
  1295  0781                     l928:	
  1296                           ;Main.c: 96: int result;
  1297                           ;Main.c: 97: int result1;
  1298                           ;Main.c: 102: while(1){
  1299                           
  1300                           
  1301                           ;Main.c: 104: ADCON0bits.ADON = 1;
  1302  0781  0021               	movlb	1	; select bank1
  1303  0782  141D               	bsf	29,0	;volatile
  1304                           
  1305                           ;Main.c: 107: ADCON0bits.CHS = 0b01100;
  1306  0783  081D               	movf	29,w	;volatile
  1307  0784  3983               	andlw	-125
  1308  0785  3830               	iorlw	48
  1309  0786  009D               	movwf	29	;volatile
  1310                           
  1311                           ;Main.c: 109: _delay((unsigned long)((10)*(16000000/4000000.0)));
  1312  0787  300D               	movlw	13
  1313  0788                     u337:	
  1314  0788  0B89               	decfsz	9,f
  1315  0789  2F88               	goto	u337
  1316  078A  0000               	nop
  1317                           
  1318                           ;Main.c: 110: ADCON0bits.GO = 1;
  1319  078B  0021               	movlb	1	; select bank1
  1320  078C  149D               	bsf	29,1	;volatile
  1321  078D                     l137:	
  1322                           ;Main.c: 111: while (ADCON0bits.GO_nDONE);
  1323                           
  1324  078D  189D               	btfsc	29,1	;volatile
  1325  078E  2F8D               	goto	l137
  1326                           
  1327                           ;Main.c: 114: result = ((ADRESH<<8)+ADRESL);
  1328  078F  081C               	movf	28,w	;volatile
  1329  0790  0020               	movlb	0	; select bank0
  1330  0791  00B2               	movwf	main@result+1
  1331  0792  0021               	movlb	1	; select bank1
  1332  0793  081B               	movf	27,w	;volatile
  1333  0794  0020               	movlb	0	; select bank0
  1334  0795  00B1               	movwf	main@result
  1335                           
  1336                           ;Main.c: 118: ADCON0bits.CHS = 0b01010;
  1337  0796  0021               	movlb	1	; select bank1
  1338  0797  081D               	movf	29,w	;volatile
  1339  0798  3983               	andlw	-125
  1340  0799  3828               	iorlw	40
  1341  079A  009D               	movwf	29	;volatile
  1342                           
  1343                           ;Main.c: 120: _delay((unsigned long)((10)*(16000000/4000000.0)));
  1344  079B  300D               	movlw	13
  1345  079C                     u347:	
  1346  079C  0B89               	decfsz	9,f
  1347  079D  2F9C               	goto	u347
  1348  079E  0000               	nop
  1349                           
  1350                           ;Main.c: 121: ADCON0bits.GO = 1;
  1351  079F  0021               	movlb	1	; select bank1
  1352  07A0  149D               	bsf	29,1	;volatile
  1353  07A1                     l140:	
  1354                           ;Main.c: 122: while (ADCON0bits.GO_nDONE);
  1355                           
  1356  07A1  189D               	btfsc	29,1	;volatile
  1357  07A2  2FA1               	goto	l140
  1358                           
  1359                           ;Main.c: 125: result1 = ((ADRESH<<8)+ADRESL);
  1360  07A3  081C               	movf	28,w	;volatile
  1361  07A4  0020               	movlb	0	; select bank0
  1362  07A5  00B4               	movwf	main@result1+1
  1363  07A6  0021               	movlb	1	; select bank1
  1364  07A7  081B               	movf	27,w	;volatile
  1365  07A8  0020               	movlb	0	; select bank0
  1366  07A9  00B3               	movwf	main@result1
  1367                           
  1368                           ;Main.c: 128: Lcd_Set_Cursor(1,1);
  1369  07AA  01F3               	clrf	Lcd_Set_Cursor@b
  1370  07AB  0AF3               	incf	Lcd_Set_Cursor@b,f
  1371  07AC  3001               	movlw	1
  1372  07AD  3186  26FA  3187   	fcall	_Lcd_Set_Cursor
  1373                           
  1374                           ;Main.c: 129: _delay((unsigned long)((5)*(16000000/4000.0)));
  1375  07B0  301A               	movlw	26
  1376  07B1  00FA               	movwf	??_main
  1377  07B2  30F8               	movlw	248
  1378  07B3                     u357:	
  1379  07B3  0B89               	decfsz	9,f
  1380  07B4  2FB3               	goto	u357
  1381  07B5  0BFA               	decfsz	??_main,f
  1382  07B6  2FB3               	goto	u357
  1383  07B7  3200               	nop2
  1384                           
  1385                           ;Main.c: 131: if (result == 0){
  1386  07B8  0020               	movlb	0	; select bank0
  1387  07B9  0831               	movf	main@result,w
  1388  07BA  0432               	iorwf	main@result+1,w
  1389  07BB  1D03               	btfss	3,2
  1390  07BC  2FC1               	goto	l954
  1391                           
  1392                           ;Main.c: 132: Lcd_Write_String("Up");
  1393  07BD  3043               	movlw	low (STR_1| (0+32768))
  1394  07BE  00F5               	movwf	Lcd_Write_String@a
  1395  07BF  3088               	movlw	high (STR_1| (0+32768))
  1396  07C0  2FCB               	goto	L1
  1397  07C1                     l954:	
  1398                           ;Main.c: 133: }
  1399                           
  1400                           
  1401                           ;Main.c: 135: else if (result == 1023){
  1402  07C1  0020               	movlb	0	; select bank0
  1403  07C2  0A31               	incf	main@result,w
  1404  07C3  3003               	movlw	3
  1405  07C4  1903               	skipnz
  1406  07C5  0632               	xorwf	main@result+1,w
  1407  07C6  1D03               	btfss	3,2
  1408  07C7  2FCF               	goto	l958
  1409                           
  1410                           ;Main.c: 136: Lcd_Write_String("Down");
  1411  07C8  3039               	movlw	low (STR_2| (0+32768))
  1412  07C9  00F5               	movwf	Lcd_Write_String@a
  1413  07CA  3088               	movlw	high (STR_2| (0+32768))
  1414  07CB                     L1:	
  1415  07CB  00F6               	movwf	Lcd_Write_String@a+1
  1416  07CC  3186  2686  3187   	fcall	_Lcd_Write_String
  1417  07CF                     l958:	
  1418                           
  1419                           ;Main.c: 137: }
  1420                           ;Main.c: 139: if (result1 == 0){
  1421  07CF  0020               	movlb	0	; select bank0
  1422  07D0  0833               	movf	main@result1,w
  1423  07D1  0434               	iorwf	main@result1+1,w
  1424  07D2  1D03               	btfss	3,2
  1425  07D3  2FD8               	goto	l962
  1426                           
  1427                           ;Main.c: 140: Lcd_Write_String("Right");
  1428  07D4  3033               	movlw	low (STR_3| (0+32768))
  1429  07D5  00F5               	movwf	Lcd_Write_String@a
  1430  07D6  3088               	movlw	high (STR_3| (0+32768))
  1431  07D7  2FE2               	goto	L2
  1432  07D8                     l962:	
  1433                           ;Main.c: 141: }
  1434                           
  1435                           
  1436                           ;Main.c: 143: else if (result1 == 1023){
  1437  07D8  0020               	movlb	0	; select bank0
  1438  07D9  0A33               	incf	main@result1,w
  1439  07DA  3003               	movlw	3
  1440  07DB  1903               	skipnz
  1441  07DC  0634               	xorwf	main@result1+1,w
  1442  07DD  1D03               	btfss	3,2
  1443  07DE  2FE6               	goto	l966
  1444                           
  1445                           ;Main.c: 144: Lcd_Write_String("Left");
  1446  07DF  303E               	movlw	low (STR_4| (0+32768))
  1447  07E0  00F5               	movwf	Lcd_Write_String@a
  1448  07E1  3088               	movlw	high (STR_4| (0+32768))
  1449  07E2                     L2:	
  1450  07E2  00F6               	movwf	Lcd_Write_String@a+1
  1451  07E3  3186  2686  3187   	fcall	_Lcd_Write_String
  1452  07E6                     l966:	
  1453                           
  1454                           ;Main.c: 145: }
  1455                           ;Main.c: 148: _delay((unsigned long)((1000)*(16000000/4000.0)));
  1456  07E6  3015               	movlw	21
  1457  07E7  00FB               	movwf	??_main+1
  1458  07E8  304B               	movlw	75
  1459  07E9  00FA               	movwf	??_main
  1460  07EA  30BE               	movlw	190
  1461  07EB                     u367:	
  1462  07EB  0B89               	decfsz	9,f
  1463  07EC  2FEB               	goto	u367
  1464  07ED  0BFA               	decfsz	??_main,f
  1465  07EE  2FEB               	goto	u367
  1466  07EF  0BFB               	decfsz	??_main+1,f
  1467  07F0  2FEB               	goto	u367
  1468  07F1  3200               	nop2
  1469                           
  1470                           ;Main.c: 149: Lcd_Clear();
  1471  07F2  3186  2649  3187   	fcall	_Lcd_Clear
  1472  07F5  2F81               	goto	l928
  1473  07F6                     __end_of_main:	
  1474                           ;Main.c: 150: }
  1475                           ;Main.c: 151: return;
  1476                           
  1477                           
  1478                           	psect	text1
  1479  06CC                     __ptext1:	
  1480 ;; *************** function _initMain *****************
  1481 ;; Defined at:
  1482 ;;		line 40 in file "Main.c"
  1483 ;; Parameters:    Size  Location     Type
  1484 ;;		None
  1485 ;; Auto vars:     Size  Location     Type
  1486 ;;		None
  1487 ;; Return value:  Size  Location     Type
  1488 ;;                  1    wreg      void 
  1489 ;; Registers used:
  1490 ;;		wreg, status,2, status,0, pclath, cstack
  1491 ;; Tracked objects:
  1492 ;;		On entry : 0/0
  1493 ;;		On exit  : 0/0
  1494 ;;		Unchanged: 0/0
  1495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1498 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1499 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1500 ;;Total ram usage:        2 bytes
  1501 ;; Hardware stack levels used:    1
  1502 ;; Hardware stack levels required when called:    3
  1503 ;; This function calls:
  1504 ;;		_Lcd_Clear
  1505 ;;		_Lcd_Init
  1506 ;;		_internal_16
  1507 ;; This function is called by:
  1508 ;;		_main
  1509 ;; This function uses a non-reentrant model
  1510 ;;
  1511                           
  1512                           
  1513                           ;psect for function _initMain
  1514  06CC                     _initMain:	
  1515                           
  1516                           ;Main.c: 42: internal_16();
  1517                           
  1518                           ;incstack = 0
  1519                           ; Regs used in _initMain: [wreg+status,2+status,0+pclath+cstack]
  1520  06CC  3186  2651  3186   	fcall	_internal_16
  1521                           
  1522                           ;Main.c: 48: TRISD = 0;
  1523  06CF  0021               	movlb	1	; select bank1
  1524  06D0  018F               	clrf	15	;volatile
  1525                           
  1526                           ;Main.c: 49: PORTD = 0;
  1527  06D1  0020               	movlb	0	; select bank0
  1528  06D2  018F               	clrf	15	;volatile
  1529                           
  1530                           ;Main.c: 50: ANSELD = 0;
  1531  06D3  0023               	movlb	3	; select bank3
  1532  06D4  018F               	clrf	15	;volatile
  1533                           
  1534                           ;Main.c: 52: TRISBbits.TRISB0 = 1;
  1535  06D5  0021               	movlb	1	; select bank1
  1536  06D6  140D               	bsf	13,0	;volatile
  1537                           
  1538                           ;Main.c: 53: ANSELBbits.ANSB0 = 1;
  1539  06D7  0023               	movlb	3	; select bank3
  1540  06D8  140D               	bsf	13,0	;volatile
  1541                           
  1542                           ;Main.c: 55: TRISBbits.TRISB1 = 1;
  1543  06D9  0021               	movlb	1	; select bank1
  1544  06DA  148D               	bsf	13,1	;volatile
  1545                           
  1546                           ;Main.c: 56: ANSELBbits.ANSB1 = 1;
  1547  06DB  0023               	movlb	3	; select bank3
  1548  06DC  148D               	bsf	13,1	;volatile
  1549                           
  1550                           ;Main.c: 63: ADCON1bits.ADCS = 0b010;
  1551  06DD  0021               	movlb	1	; select bank1
  1552  06DE  081E               	movf	30,w	;volatile
  1553  06DF  398F               	andlw	-113
  1554  06E0  3820               	iorlw	32
  1555  06E1  009E               	movwf	30	;volatile
  1556                           
  1557                           ;Main.c: 66: ADCON1bits.ADFM = 1;
  1558  06E2  179E               	bsf	30,7	;volatile
  1559                           
  1560                           ;Main.c: 69: ADCON1bits.ADNREF = 0;
  1561  06E3  111E               	bcf	30,2	;volatile
  1562                           
  1563                           ;Main.c: 72: ADCON1bits.ADPREF = 0b00;
  1564  06E4  30FC               	movlw	-4
  1565  06E5  059E               	andwf	30,f	;volatile
  1566                           
  1567                           ;Main.c: 75: ADRESL = 0;
  1568  06E6  019B               	clrf	27	;volatile
  1569                           
  1570                           ;Main.c: 76: ADRESH = 0;
  1571  06E7  019C               	clrf	28	;volatile
  1572                           
  1573                           ;Main.c: 79: Lcd_Init();
  1574  06E8  3187  273A  3186   	fcall	_Lcd_Init
  1575                           
  1576                           ;Main.c: 80: _delay((unsigned long)((100)*(16000000/4000.0)));
  1577  06EB  3003               	movlw	3
  1578  06EC  00F5               	movwf	??_initMain+1
  1579  06ED  3008               	movlw	8
  1580  06EE  00F4               	movwf	??_initMain
  1581  06EF  3077               	movlw	119
  1582  06F0                     u377:	
  1583  06F0  0B89               	decfsz	9,f
  1584  06F1  2EF0               	goto	u377
  1585  06F2  0BF4               	decfsz	??_initMain,f
  1586  06F3  2EF0               	goto	u377
  1587  06F4  0BF5               	decfsz	??_initMain+1,f
  1588  06F5  2EF0               	goto	u377
  1589  06F6  0000               	nop
  1590                           
  1591                           ;Main.c: 81: Lcd_Clear();
  1592  06F7  3186  2649         	fcall	_Lcd_Clear
  1593  06F9  0008               	return
  1594  06FA                     __end_of_initMain:	
  1595                           
  1596                           	psect	text2
  1597  0651                     __ptext2:	
  1598 ;; *************** function _internal_16 *****************
  1599 ;; Defined at:
  1600 ;;		line 56 in file "16F1717_Internal.c"
  1601 ;; Parameters:    Size  Location     Type
  1602 ;;		None
  1603 ;; Auto vars:     Size  Location     Type
  1604 ;;		None
  1605 ;; Return value:  Size  Location     Type
  1606 ;;                  1    wreg      void 
  1607 ;; Registers used:
  1608 ;;		None
  1609 ;; Tracked objects:
  1610 ;;		On entry : 0/0
  1611 ;;		On exit  : 0/0
  1612 ;;		Unchanged: 0/0
  1613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1618 ;;Total ram usage:        0 bytes
  1619 ;; Hardware stack levels used:    1
  1620 ;; This function calls:
  1621 ;;		Nothing
  1622 ;; This function is called by:
  1623 ;;		_initMain
  1624 ;; This function uses a non-reentrant model
  1625 ;;
  1626                           
  1627                           
  1628                           ;psect for function _internal_16
  1629  0651                     _internal_16:	
  1630                           
  1631                           ;16F1717_Internal.c: 58: SCS0 = 0;
  1632                           
  1633                           ;incstack = 0
  1634                           ; Regs used in _internal_16: []
  1635  0651  0021               	movlb	1	; select bank1
  1636  0652  1019               	bcf	25,0	;volatile
  1637                           
  1638                           ;16F1717_Internal.c: 59: SCS1 = 0;
  1639  0653  1099               	bcf	25,1	;volatile
  1640                           
  1641                           ;16F1717_Internal.c: 62: IRCF0 = 1;
  1642  0654  1599               	bsf	25,3	;volatile
  1643                           
  1644                           ;16F1717_Internal.c: 63: IRCF1 = 1;
  1645  0655  1619               	bsf	25,4	;volatile
  1646                           
  1647                           ;16F1717_Internal.c: 64: IRCF2 = 1;
  1648  0656  1699               	bsf	25,5	;volatile
  1649                           
  1650                           ;16F1717_Internal.c: 65: IRCF3 = 1;
  1651  0657  1719               	bsf	25,6	;volatile
  1652                           
  1653                           ;16F1717_Internal.c: 68: SPLLEN = 0;
  1654  0658  1399               	bcf	25,7	;volatile
  1655  0659  0008               	return
  1656  065A                     __end_of_internal_16:	
  1657                           
  1658                           	psect	text3
  1659  073A                     __ptext3:	
  1660 ;; *************** function _Lcd_Init *****************
  1661 ;; Defined at:
  1662 ;;		line 119 in file "LCD.c"
  1663 ;; Parameters:    Size  Location     Type
  1664 ;;		None
  1665 ;; Auto vars:     Size  Location     Type
  1666 ;;		None
  1667 ;; Return value:  Size  Location     Type
  1668 ;;                  1    wreg      void 
  1669 ;; Registers used:
  1670 ;;		wreg, status,2, status,0, pclath, cstack
  1671 ;; Tracked objects:
  1672 ;;		On entry : 0/0
  1673 ;;		On exit  : 0/0
  1674 ;;		Unchanged: 0/0
  1675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1678 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1679 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1680 ;;Total ram usage:        1 bytes
  1681 ;; Hardware stack levels used:    1
  1682 ;; Hardware stack levels required when called:    2
  1683 ;; This function calls:
  1684 ;;		_Lcd_Cmd
  1685 ;;		_Lcd_Port
  1686 ;; This function is called by:
  1687 ;;		_initMain
  1688 ;; This function uses a non-reentrant model
  1689 ;;
  1690                           
  1691                           
  1692                           ;psect for function _Lcd_Init
  1693  073A                     _Lcd_Init:	
  1694                           
  1695                           ;LCD.c: 121: Lcd_Port(0x00);
  1696                           
  1697                           ;incstack = 0
  1698                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1699  073A  3000               	movlw	0
  1700  073B  3186  266E  3187   	fcall	_Lcd_Port
  1701                           
  1702                           ;LCD.c: 122: _delay((unsigned long)((20)*(16000000/4000.0)));
  1703  073E  3068               	movlw	104
  1704  073F  00F3               	movwf	??_Lcd_Init
  1705  0740  30E4               	movlw	228
  1706  0741                     u387:	
  1707  0741  0B89               	decfsz	9,f
  1708  0742  2F41               	goto	u387
  1709  0743  0BF3               	decfsz	??_Lcd_Init,f
  1710  0744  2F41               	goto	u387
  1711  0745  3200               	nop2
  1712                           
  1713                           ;LCD.c: 123: Lcd_Cmd(0x03);
  1714  0746  3003               	movlw	3
  1715  0747  3186  265A  3187   	fcall	_Lcd_Cmd
  1716                           
  1717                           ;LCD.c: 124: _delay((unsigned long)((5)*(16000000/4000.0)));
  1718  074A  301A               	movlw	26
  1719  074B  00F3               	movwf	??_Lcd_Init
  1720  074C  30F8               	movlw	248
  1721  074D                     u397:	
  1722  074D  0B89               	decfsz	9,f
  1723  074E  2F4D               	goto	u397
  1724  074F  0BF3               	decfsz	??_Lcd_Init,f
  1725  0750  2F4D               	goto	u397
  1726  0751  3200               	nop2
  1727                           
  1728                           ;LCD.c: 125: Lcd_Cmd(0x03);
  1729  0752  3003               	movlw	3
  1730  0753  3186  265A  3187   	fcall	_Lcd_Cmd
  1731                           
  1732                           ;LCD.c: 126: _delay((unsigned long)((11)*(16000000/4000.0)));
  1733  0756  303A               	movlw	58
  1734  0757  00F3               	movwf	??_Lcd_Init
  1735  0758  3023               	movlw	35
  1736  0759                     u407:	
  1737  0759  0B89               	decfsz	9,f
  1738  075A  2F59               	goto	u407
  1739  075B  0BF3               	decfsz	??_Lcd_Init,f
  1740  075C  2F59               	goto	u407
  1741  075D  0000               	nop
  1742                           
  1743                           ;LCD.c: 127: Lcd_Cmd(0x03);
  1744  075E  3003               	movlw	3
  1745  075F  3186  265A  3187   	fcall	_Lcd_Cmd
  1746                           
  1747                           ;LCD.c: 129: Lcd_Cmd(0x02);
  1748  0762  3002               	movlw	2
  1749  0763  3186  265A  3187   	fcall	_Lcd_Cmd
  1750                           
  1751                           ;LCD.c: 130: Lcd_Cmd(0x02);
  1752  0766  3002               	movlw	2
  1753  0767  3186  265A  3187   	fcall	_Lcd_Cmd
  1754                           
  1755                           ;LCD.c: 131: Lcd_Cmd(0x08);
  1756  076A  3008               	movlw	8
  1757  076B  3186  265A  3187   	fcall	_Lcd_Cmd
  1758                           
  1759                           ;LCD.c: 132: Lcd_Cmd(0x00);
  1760  076E  3000               	movlw	0
  1761  076F  3186  265A  3187   	fcall	_Lcd_Cmd
  1762                           
  1763                           ;LCD.c: 133: Lcd_Cmd(0x0C);
  1764  0772  300C               	movlw	12
  1765  0773  3186  265A  3187   	fcall	_Lcd_Cmd
  1766                           
  1767                           ;LCD.c: 134: Lcd_Cmd(0x00);
  1768  0776  3000               	movlw	0
  1769  0777  3186  265A  3187   	fcall	_Lcd_Cmd
  1770                           
  1771                           ;LCD.c: 135: Lcd_Cmd(0x06);
  1772  077A  3006               	movlw	6
  1773  077B  3186  265A         	fcall	_Lcd_Cmd
  1774  077D  0008               	return
  1775  077E                     __end_of_Lcd_Init:	
  1776                           
  1777                           	psect	text4
  1778  0649                     __ptext4:	
  1779 ;; *************** function _Lcd_Clear *****************
  1780 ;; Defined at:
  1781 ;;		line 76 in file "LCD.c"
  1782 ;; Parameters:    Size  Location     Type
  1783 ;;		None
  1784 ;; Auto vars:     Size  Location     Type
  1785 ;;		None
  1786 ;; Return value:  Size  Location     Type
  1787 ;;                  1    wreg      void 
  1788 ;; Registers used:
  1789 ;;		wreg, status,2, status,0, pclath, cstack
  1790 ;; Tracked objects:
  1791 ;;		On entry : 0/0
  1792 ;;		On exit  : 0/0
  1793 ;;		Unchanged: 0/0
  1794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1799 ;;Total ram usage:        0 bytes
  1800 ;; Hardware stack levels used:    1
  1801 ;; Hardware stack levels required when called:    2
  1802 ;; This function calls:
  1803 ;;		_Lcd_Cmd
  1804 ;; This function is called by:
  1805 ;;		_initMain
  1806 ;;		_main
  1807 ;; This function uses a non-reentrant model
  1808 ;;
  1809                           
  1810                           
  1811                           ;psect for function _Lcd_Clear
  1812  0649                     _Lcd_Clear:	
  1813                           
  1814                           ;LCD.c: 78: Lcd_Cmd(0);
  1815                           
  1816                           ;incstack = 0
  1817                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1818  0649  3000               	movlw	0
  1819  064A  3186  265A  3186   	fcall	_Lcd_Cmd
  1820                           
  1821                           ;LCD.c: 79: Lcd_Cmd(1);
  1822  064D  3001               	movlw	1
  1823  064E  3186  265A         	fcall	_Lcd_Cmd
  1824  0650  0008               	return
  1825  0651                     __end_of_Lcd_Clear:	
  1826                           
  1827                           	psect	text5
  1828  0686                     __ptext5:	
  1829 ;; *************** function _Lcd_Write_String *****************
  1830 ;; Defined at:
  1831 ;;		line 170 in file "LCD.c"
  1832 ;; Parameters:    Size  Location     Type
  1833 ;;  a               2    5[COMMON] PTR const unsigned char 
  1834 ;;		 -> ftoa@buf(17), STR_4(5), STR_3(6), STR_2(5), 
  1835 ;;		 -> STR_1(3), Lcd_Write_Integer@buf(8), 
  1836 ;; Auto vars:     Size  Location     Type
  1837 ;;  i               2    8[COMMON] int 
  1838 ;; Return value:  Size  Location     Type
  1839 ;;                  1    wreg      void 
  1840 ;; Registers used:
  1841 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1842 ;; Tracked objects:
  1843 ;;		On entry : 0/0
  1844 ;;		On exit  : 0/0
  1845 ;;		Unchanged: 0/0
  1846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1847 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1848 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1849 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1850 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1851 ;;Total ram usage:        5 bytes
  1852 ;; Hardware stack levels used:    1
  1853 ;; Hardware stack levels required when called:    2
  1854 ;; This function calls:
  1855 ;;		_Lcd_Write_Char
  1856 ;; This function is called by:
  1857 ;;		_main
  1858 ;;		_Lcd_Write_Integer
  1859 ;;		_Lcd_Write_Float
  1860 ;; This function uses a non-reentrant model
  1861 ;;
  1862                           
  1863                           
  1864                           ;psect for function _Lcd_Write_String
  1865  0686                     _Lcd_Write_String:	
  1866                           
  1867                           ;LCD.c: 172: int i;
  1868                           ;LCD.c: 173: for(i=0;a[i]!='\0';i++)
  1869                           
  1870                           ;incstack = 0
  1871                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1872  0686  01F8               	clrf	Lcd_Write_String@i
  1873  0687  01F9               	clrf	Lcd_Write_String@i+1
  1874  0688                     l880:	
  1875  0688  0875               	movf	Lcd_Write_String@a,w
  1876  0689  0778               	addwf	Lcd_Write_String@i,w
  1877  068A  0084               	movwf	4
  1878  068B  0876               	movf	Lcd_Write_String@a+1,w
  1879  068C  3D79               	addwfc	Lcd_Write_String@i+1,w
  1880  068D  0085               	movwf	5
  1881  068E  0012               	moviw fsr0++
  1882  068F  1903               	btfsc	3,2
  1883  0690  0008               	return
  1884                           
  1885                           ;LCD.c: 174: Lcd_Write_Char(a[i]);
  1886  0691  0875               	movf	Lcd_Write_String@a,w
  1887  0692  0778               	addwf	Lcd_Write_String@i,w
  1888  0693  0084               	movwf	4
  1889  0694  0876               	movf	Lcd_Write_String@a+1,w
  1890  0695  3D79               	addwfc	Lcd_Write_String@i+1,w
  1891  0696  0085               	movwf	5
  1892  0697  0800               	movf	0,w	;code access
  1893  0698  3186  26A0  3186   	fcall	_Lcd_Write_Char
  1894  069B  3001               	movlw	1
  1895  069C  07F8               	addwf	Lcd_Write_String@i,f
  1896  069D  3000               	movlw	0
  1897  069E  3DF9               	addwfc	Lcd_Write_String@i+1,f
  1898  069F  2E88               	goto	l880
  1899  06A0                     __end_of_Lcd_Write_String:	
  1900                           
  1901                           	psect	text6
  1902  06A0                     __ptext6:	
  1903 ;; *************** function _Lcd_Write_Char *****************
  1904 ;; Defined at:
  1905 ;;		line 146 in file "LCD.c"
  1906 ;; Parameters:    Size  Location     Type
  1907 ;;  a               1    wreg     unsigned char 
  1908 ;; Auto vars:     Size  Location     Type
  1909 ;;  a               1    4[COMMON] unsigned char 
  1910 ;;  y               1    3[COMMON] unsigned char 
  1911 ;;  temp            1    2[COMMON] unsigned char 
  1912 ;; Return value:  Size  Location     Type
  1913 ;;                  1    wreg      void 
  1914 ;; Registers used:
  1915 ;;		wreg, status,2, status,0, pclath, cstack
  1916 ;; Tracked objects:
  1917 ;;		On entry : 0/0
  1918 ;;		On exit  : 0/0
  1919 ;;		Unchanged: 0/0
  1920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1922 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1923 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1924 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1925 ;;Total ram usage:        4 bytes
  1926 ;; Hardware stack levels used:    1
  1927 ;; Hardware stack levels required when called:    1
  1928 ;; This function calls:
  1929 ;;		_Lcd_Port
  1930 ;; This function is called by:
  1931 ;;		_Lcd_Write_String
  1932 ;; This function uses a non-reentrant model
  1933 ;;
  1934                           
  1935                           
  1936                           ;psect for function _Lcd_Write_Char
  1937  06A0                     _Lcd_Write_Char:	
  1938                           
  1939                           ;incstack = 0
  1940                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1941                           ;Lcd_Write_Char@a stored from wreg
  1942  06A0  00F4               	movwf	Lcd_Write_Char@a
  1943                           
  1944                           ;LCD.c: 148: char temp,y;
  1945                           ;LCD.c: 149: temp = a&0x0F;
  1946  06A1  0874               	movf	Lcd_Write_Char@a,w
  1947  06A2  390F               	andlw	15
  1948  06A3  00F1               	movwf	??_Lcd_Write_Char
  1949  06A4  0871               	movf	??_Lcd_Write_Char,w
  1950  06A5  00F2               	movwf	Lcd_Write_Char@temp
  1951                           
  1952                           ;LCD.c: 150: y = a&0xF0;
  1953  06A6  0874               	movf	Lcd_Write_Char@a,w
  1954  06A7  39F0               	andlw	240
  1955  06A8  00F1               	movwf	??_Lcd_Write_Char
  1956  06A9  0871               	movf	??_Lcd_Write_Char,w
  1957  06AA  00F3               	movwf	Lcd_Write_Char@y
  1958                           
  1959                           ;LCD.c: 151: RD2 = 1;
  1960  06AB  0020               	movlb	0	; select bank0
  1961  06AC  150F               	bsf	15,2	;volatile
  1962                           
  1963                           ;LCD.c: 152: Lcd_Port(y>>4);
  1964  06AD  0873               	movf	Lcd_Write_Char@y,w
  1965  06AE  00F1               	movwf	??_Lcd_Write_Char
  1966  06AF  3004               	movlw	4
  1967  06B0                     u215:	
  1968  06B0  36F1               	lsrf	??_Lcd_Write_Char,f
  1969  06B1  0B89               	decfsz	9,f
  1970  06B2  2EB0               	goto	u215
  1971  06B3  0871               	movf	??_Lcd_Write_Char,w
  1972  06B4  3186  266E  3186   	fcall	_Lcd_Port
  1973                           
  1974                           ;LCD.c: 153: RD3 = 1;
  1975  06B7  0020               	movlb	0	; select bank0
  1976  06B8  158F               	bsf	15,3	;volatile
  1977                           
  1978                           ;LCD.c: 154: _delay((unsigned long)((40)*(16000000/4000000.0)));
  1979  06B9  3035               	movlw	53
  1980  06BA                     u417:	
  1981  06BA  0B89               	decfsz	9,f
  1982  06BB  2EBA               	goto	u417
  1983  06BC  0000               	nop
  1984                           
  1985                           ;LCD.c: 155: RD3 = 0;
  1986  06BD  0020               	movlb	0	; select bank0
  1987  06BE  118F               	bcf	15,3	;volatile
  1988                           
  1989                           ;LCD.c: 156: Lcd_Port(temp);
  1990  06BF  0872               	movf	Lcd_Write_Char@temp,w
  1991  06C0  3186  266E  3186   	fcall	_Lcd_Port
  1992                           
  1993                           ;LCD.c: 157: RD3 = 1;
  1994  06C3  0020               	movlb	0	; select bank0
  1995  06C4  158F               	bsf	15,3	;volatile
  1996                           
  1997                           ;LCD.c: 158: _delay((unsigned long)((40)*(16000000/4000000.0)));
  1998  06C5  3035               	movlw	53
  1999  06C6                     u427:	
  2000  06C6  0B89               	decfsz	9,f
  2001  06C7  2EC6               	goto	u427
  2002  06C8  0000               	nop
  2003                           
  2004                           ;LCD.c: 159: RD3 = 0;
  2005  06C9  0020               	movlb	0	; select bank0
  2006  06CA  118F               	bcf	15,3	;volatile
  2007  06CB  0008               	return
  2008  06CC                     __end_of_Lcd_Write_Char:	
  2009                           
  2010                           	psect	text7
  2011  06FA                     __ptext7:	
  2012 ;; *************** function _Lcd_Set_Cursor *****************
  2013 ;; Defined at:
  2014 ;;		line 90 in file "LCD.c"
  2015 ;; Parameters:    Size  Location     Type
  2016 ;;  a               1    wreg     unsigned char 
  2017 ;;  b               1    3[COMMON] unsigned char 
  2018 ;; Auto vars:     Size  Location     Type
  2019 ;;  a               1    6[COMMON] unsigned char 
  2020 ;;  temp            1    9[COMMON] unsigned char 
  2021 ;;  y               1    8[COMMON] unsigned char 
  2022 ;;  z               1    7[COMMON] unsigned char 
  2023 ;; Return value:  Size  Location     Type
  2024 ;;                  1    wreg      void 
  2025 ;; Registers used:
  2026 ;;		wreg, status,2, status,0, pclath, cstack
  2027 ;; Tracked objects:
  2028 ;;		On entry : 0/0
  2029 ;;		On exit  : 0/0
  2030 ;;		Unchanged: 0/0
  2031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2032 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2033 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2034 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2035 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2036 ;;Total ram usage:        7 bytes
  2037 ;; Hardware stack levels used:    1
  2038 ;; Hardware stack levels required when called:    2
  2039 ;; This function calls:
  2040 ;;		_Lcd_Cmd
  2041 ;; This function is called by:
  2042 ;;		_main
  2043 ;; This function uses a non-reentrant model
  2044 ;;
  2045                           
  2046                           
  2047                           ;psect for function _Lcd_Set_Cursor
  2048  06FA                     _Lcd_Set_Cursor:	
  2049                           
  2050                           ;incstack = 0
  2051                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2052                           ;Lcd_Set_Cursor@a stored from wreg
  2053  06FA  00F6               	movwf	Lcd_Set_Cursor@a
  2054                           
  2055                           ;LCD.c: 92: char temp,z,y;
  2056                           ;LCD.c: 93: if(a == 1)
  2057  06FB  0376               	decf	Lcd_Set_Cursor@a,w
  2058  06FC  1D03               	btfss	3,2
  2059  06FD  2F1A               	goto	l864
  2060                           
  2061                           ;LCD.c: 94: {
  2062                           ;LCD.c: 95: temp = 0x80 + b - 1;
  2063  06FE  0873               	movf	Lcd_Set_Cursor@b,w
  2064  06FF  3E7F               	addlw	127
  2065  0700  00F4               	movwf	??_Lcd_Set_Cursor
  2066  0701  0874               	movf	??_Lcd_Set_Cursor,w
  2067  0702  00F9               	movwf	Lcd_Set_Cursor@temp
  2068                           
  2069                           ;LCD.c: 96: z = temp>>4;
  2070  0703  0879               	movf	Lcd_Set_Cursor@temp,w
  2071  0704  00F4               	movwf	??_Lcd_Set_Cursor
  2072  0705  3004               	movlw	4
  2073  0706                     u235:	
  2074  0706  36F4               	lsrf	??_Lcd_Set_Cursor,f
  2075  0707  0B89               	decfsz	9,f
  2076  0708  2F06               	goto	u235
  2077  0709  0874               	movf	??_Lcd_Set_Cursor,w
  2078  070A  00F5               	movwf	??_Lcd_Set_Cursor+1
  2079  070B  0875               	movf	??_Lcd_Set_Cursor+1,w
  2080  070C  00F7               	movwf	Lcd_Set_Cursor@z
  2081                           
  2082                           ;LCD.c: 97: y = temp & 0x0F;
  2083  070D  0879               	movf	Lcd_Set_Cursor@temp,w
  2084  070E  390F               	andlw	15
  2085  070F  00F4               	movwf	??_Lcd_Set_Cursor
  2086  0710  0874               	movf	??_Lcd_Set_Cursor,w
  2087  0711  00F8               	movwf	Lcd_Set_Cursor@y
  2088                           
  2089                           ;LCD.c: 98: Lcd_Cmd(z);
  2090  0712  0877               	movf	Lcd_Set_Cursor@z,w
  2091  0713  3186  265A  3186   	fcall	_Lcd_Cmd
  2092                           
  2093                           ;LCD.c: 99: Lcd_Cmd(y);
  2094  0716  0878               	movf	Lcd_Set_Cursor@y,w
  2095  0717  3186  265A         	fcall	_Lcd_Cmd
  2096                           
  2097                           ;LCD.c: 100: }
  2098  0719  0008               	return
  2099  071A                     l864:	
  2100                           
  2101                           ;LCD.c: 101: else if(a == 2)
  2102  071A  3002               	movlw	2
  2103  071B  0676               	xorwf	Lcd_Set_Cursor@a,w
  2104  071C  1D03               	btfss	3,2
  2105  071D  0008               	return
  2106                           
  2107                           ;LCD.c: 102: {
  2108                           ;LCD.c: 103: temp = 0xC0 + b - 1;
  2109  071E  0873               	movf	Lcd_Set_Cursor@b,w
  2110  071F  3EBF               	addlw	191
  2111  0720  00F4               	movwf	??_Lcd_Set_Cursor
  2112  0721  0874               	movf	??_Lcd_Set_Cursor,w
  2113  0722  00F9               	movwf	Lcd_Set_Cursor@temp
  2114                           
  2115                           ;LCD.c: 104: z = temp>>4;
  2116  0723  0879               	movf	Lcd_Set_Cursor@temp,w
  2117  0724  00F4               	movwf	??_Lcd_Set_Cursor
  2118  0725  3004               	movlw	4
  2119  0726                     u255:	
  2120  0726  36F4               	lsrf	??_Lcd_Set_Cursor,f
  2121  0727  0B89               	decfsz	9,f
  2122  0728  2F26               	goto	u255
  2123  0729  0874               	movf	??_Lcd_Set_Cursor,w
  2124  072A  00F5               	movwf	??_Lcd_Set_Cursor+1
  2125  072B  0875               	movf	??_Lcd_Set_Cursor+1,w
  2126  072C  00F7               	movwf	Lcd_Set_Cursor@z
  2127                           
  2128                           ;LCD.c: 105: y = temp & 0x0F;
  2129  072D  0879               	movf	Lcd_Set_Cursor@temp,w
  2130  072E  390F               	andlw	15
  2131  072F  00F4               	movwf	??_Lcd_Set_Cursor
  2132  0730  0874               	movf	??_Lcd_Set_Cursor,w
  2133  0731  00F8               	movwf	Lcd_Set_Cursor@y
  2134                           
  2135                           ;LCD.c: 106: Lcd_Cmd(z);
  2136  0732  0877               	movf	Lcd_Set_Cursor@z,w
  2137  0733  3186  265A  3186   	fcall	_Lcd_Cmd
  2138                           
  2139                           ;LCD.c: 107: Lcd_Cmd(y);
  2140  0736  0878               	movf	Lcd_Set_Cursor@y,w
  2141  0737  3186  265A         	fcall	_Lcd_Cmd
  2142  0739  0008               	return
  2143  073A                     __end_of_Lcd_Set_Cursor:	
  2144                           
  2145                           	psect	text8
  2146  065A                     __ptext8:	
  2147 ;; *************** function _Lcd_Cmd *****************
  2148 ;; Defined at:
  2149 ;;		line 59 in file "LCD.c"
  2150 ;; Parameters:    Size  Location     Type
  2151 ;;  a               1    wreg     unsigned char 
  2152 ;; Auto vars:     Size  Location     Type
  2153 ;;  a               1    2[COMMON] unsigned char 
  2154 ;; Return value:  Size  Location     Type
  2155 ;;                  1    wreg      void 
  2156 ;; Registers used:
  2157 ;;		wreg, status,2, status,0, pclath, cstack
  2158 ;; Tracked objects:
  2159 ;;		On entry : 0/0
  2160 ;;		On exit  : 0/0
  2161 ;;		Unchanged: 0/0
  2162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2164 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2165 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2166 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2167 ;;Total ram usage:        2 bytes
  2168 ;; Hardware stack levels used:    1
  2169 ;; Hardware stack levels required when called:    1
  2170 ;; This function calls:
  2171 ;;		_Lcd_Port
  2172 ;; This function is called by:
  2173 ;;		_Lcd_Clear
  2174 ;;		_Lcd_Set_Cursor
  2175 ;;		_Lcd_Init
  2176 ;;		_Lcd_Shift_Right
  2177 ;;		_Lcd_Shift_Left
  2178 ;; This function uses a non-reentrant model
  2179 ;;
  2180                           
  2181                           
  2182                           ;psect for function _Lcd_Cmd
  2183  065A                     _Lcd_Cmd:	
  2184                           
  2185                           ;incstack = 0
  2186                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2187                           ;Lcd_Cmd@a stored from wreg
  2188  065A  00F2               	movwf	Lcd_Cmd@a
  2189                           
  2190                           ;LCD.c: 61: RD2 = 0;
  2191  065B  0020               	movlb	0	; select bank0
  2192  065C  110F               	bcf	15,2	;volatile
  2193                           
  2194                           ;LCD.c: 62: Lcd_Port(a);
  2195  065D  0872               	movf	Lcd_Cmd@a,w
  2196  065E  3186  266E  3186   	fcall	_Lcd_Port
  2197                           
  2198                           ;LCD.c: 63: RD3 = 1;
  2199  0661  0020               	movlb	0	; select bank0
  2200  0662  158F               	bsf	15,3	;volatile
  2201                           
  2202                           ;LCD.c: 64: _delay((unsigned long)((4)*(16000000/4000.0)));
  2203  0663  3015               	movlw	21
  2204  0664  00F1               	movwf	??_Lcd_Cmd
  2205  0665  30C6               	movlw	198
  2206  0666                     u437:	
  2207  0666  0B89               	decfsz	9,f
  2208  0667  2E66               	goto	u437
  2209  0668  0BF1               	decfsz	??_Lcd_Cmd,f
  2210  0669  2E66               	goto	u437
  2211  066A  3200               	nop2
  2212                           
  2213                           ;LCD.c: 65: RD3 = 0;
  2214  066B  0020               	movlb	0	; select bank0
  2215  066C  118F               	bcf	15,3	;volatile
  2216  066D  0008               	return
  2217  066E                     __end_of_Lcd_Cmd:	
  2218                           
  2219                           	psect	text9
  2220  066E                     __ptext9:	
  2221 ;; *************** function _Lcd_Port *****************
  2222 ;; Defined at:
  2223 ;;		line 28 in file "LCD.c"
  2224 ;; Parameters:    Size  Location     Type
  2225 ;;  a               1    wreg     unsigned char 
  2226 ;; Auto vars:     Size  Location     Type
  2227 ;;  a               1    0[COMMON] unsigned char 
  2228 ;; Return value:  Size  Location     Type
  2229 ;;                  1    wreg      void 
  2230 ;; Registers used:
  2231 ;;		wreg
  2232 ;; Tracked objects:
  2233 ;;		On entry : 0/0
  2234 ;;		On exit  : 0/0
  2235 ;;		Unchanged: 0/0
  2236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2238 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2240 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2241 ;;Total ram usage:        1 bytes
  2242 ;; Hardware stack levels used:    1
  2243 ;; This function calls:
  2244 ;;		Nothing
  2245 ;; This function is called by:
  2246 ;;		_Lcd_Cmd
  2247 ;;		_Lcd_Init
  2248 ;;		_Lcd_Write_Char
  2249 ;; This function uses a non-reentrant model
  2250 ;;
  2251                           
  2252                           
  2253                           ;psect for function _Lcd_Port
  2254  066E                     _Lcd_Port:	
  2255                           
  2256                           ;incstack = 0
  2257                           ; Regs used in _Lcd_Port: [wreg]
  2258                           ;Lcd_Port@a stored from wreg
  2259  066E  00F0               	movwf	Lcd_Port@a
  2260                           
  2261                           ;LCD.c: 30: if(a & 1)
  2262  066F  1C70               	btfss	Lcd_Port@a,0
  2263  0670  2E74               	goto	l56
  2264                           
  2265                           ;LCD.c: 31: RD4 = 1;
  2266  0671  0020               	movlb	0	; select bank0
  2267  0672  160F               	bsf	15,4	;volatile
  2268  0673  2E76               	goto	l798
  2269  0674                     l56:	
  2270                           
  2271                           ;LCD.c: 32: else
  2272                           ;LCD.c: 33: RD4 = 0;
  2273  0674  0020               	movlb	0	; select bank0
  2274  0675  120F               	bcf	15,4	;volatile
  2275  0676                     l798:	
  2276                           
  2277                           ;LCD.c: 35: if(a & 2)
  2278  0676  1CF0               	btfss	Lcd_Port@a,1
  2279  0677  2E7A               	goto	l58
  2280                           
  2281                           ;LCD.c: 36: RD5 = 1;
  2282  0678  168F               	bsf	15,5	;volatile
  2283  0679  2E7B               	goto	l802
  2284  067A                     l58:	
  2285                           
  2286                           ;LCD.c: 37: else
  2287                           ;LCD.c: 38: RD5 = 0;
  2288  067A  128F               	bcf	15,5	;volatile
  2289  067B                     l802:	
  2290                           
  2291                           ;LCD.c: 40: if(a & 4)
  2292  067B  1D70               	btfss	Lcd_Port@a,2
  2293  067C  2E7F               	goto	l60
  2294                           
  2295                           ;LCD.c: 41: RD6 = 1;
  2296  067D  170F               	bsf	15,6	;volatile
  2297  067E  2E80               	goto	l806
  2298  067F                     l60:	
  2299                           
  2300                           ;LCD.c: 42: else
  2301                           ;LCD.c: 43: RD6 = 0;
  2302  067F  130F               	bcf	15,6	;volatile
  2303  0680                     l806:	
  2304                           
  2305                           ;LCD.c: 45: if(a & 8)
  2306  0680  1DF0               	btfss	Lcd_Port@a,3
  2307  0681  2E84               	goto	l62
  2308                           
  2309                           ;LCD.c: 46: RD7 = 1;
  2310  0682  178F               	bsf	15,7	;volatile
  2311  0683  0008               	return
  2312  0684                     l62:	
  2313                           
  2314                           ;LCD.c: 47: else
  2315                           ;LCD.c: 48: RD7 = 0;
  2316  0684  138F               	bcf	15,7	;volatile
  2317  0685  0008               	return
  2318  0686                     __end_of_Lcd_Port:	
  2319  007E                     btemp	set	126	;btemp
  2320  007E                     wtemp0	set	126


Data Sizes:
    Strings     30
    Constant    40
    Data        0
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80      4      21
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    sp__utoa	PTR unsigned char  size(1) Largest target is 8
		 -> Lcd_Write_Integer@buf(COMMON[8]), 

    sp__ftoa	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK0[17]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 8
		 -> Lcd_Write_Integer@buf(COMMON[8]), 

    Lcd_Write_String@a	PTR const unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK0[17]), STR_4(CODE[5]), STR_3(CODE[6]), STR_2(CODE[5]), 
		 -> STR_1(CODE[3]), Lcd_Write_Integer@buf(COMMON[8]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _main->_Lcd_Write_String
    _initMain->_Lcd_Init
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    1527
                                             10 COMMON     2     2      0
                                              0 BANK0      4     4      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                           _initMain
 ---------------------------------------------------------------------------------
 (1) _initMain                                             2     2      0     308
                                              4 COMMON     2     2      0
                          _Lcd_Clear
                           _Lcd_Init
                        _internal_16
 ---------------------------------------------------------------------------------
 (2) _internal_16                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             1     1      0     198
                                              3 COMMON     1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     5     3      2     586
                                              5 COMMON     5     3      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     433
                                              3 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              2     2      0     110
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _initMain
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Init
       _Lcd_Cmd
         _Lcd_Port
       _Lcd_Port
     _internal_16

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4      15       5       26.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      21      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      21      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Tue Apr 18 11:20:22 2017

              __CFG_CP$OFF 0000                         l60 067F                         l62 0684  
                       l56 0674                         l58 067A                        l140 07A1  
                      l137 078D                        l802 067B                        l806 0680  
                      l864 071A                        l880 0688                        l928 0781  
                      l962 07D8                        l954 07C1                        l798 0676  
                      l966 07E6                        l958 07CF                        _RD2 007A  
                      _RD3 007B                        _RD4 007C                        _RD5 007D  
                      _RD6 007E                        _RD7 007F                        u215 06B0  
                      u235 0706                        u255 0726                        u407 0759  
                      u417 06BA                        u337 0788                        u427 06C6  
                      u347 079C                        u437 0666                        u357 07B3  
                      u367 07EB                        u377 06F0                        u387 0741  
                      u397 074D               __CFG_BORV$LO 0000                        wreg 0009  
             __CFG_IESO$ON 0000               __CFG_LVP$OFF 0000                       STR_1 0843  
                     STR_2 0839                       STR_3 0833                       STR_4 083E  
                     STR_5 0828                       _SCS0 04C8                       _SCS1 04C9  
             __CFG_WRT$OFF 0000          ?_Lcd_Write_String 0075                       _main 077E  
                     fsr0h 0005                       indf0 0000                       fsr0l 0004  
                     btemp 007E                main@result1 0033                       start 0002  
       ??_Lcd_Write_String 0077            __end_of_Lcd_Cmd 066E                      ?_main 0070  
            __CFG_WDTE$OFF 0000                      _IRCF0 04CB                      _IRCF1 04CC  
                    _IRCF2 04CD                      _IRCF3 04CE                      _PORTD 000F  
  __size_of_Lcd_Set_Cursor 0040                      _TRISD 008F             __CFG_FCMEN$OFF 0000  
          __end_of_dpowers 0828             __CFG_BOREN$OFF 0000                      status 0003  
                    wtemp0 007E               ?_internal_16 0070           __end_of_Lcd_Init 077E  
         __end_of_Lcd_Port 0686             __CFG_MCLRE$OFF 0000            __initialization 07F6  
             __end_of_main 07F6             __CFG_LPBOR$OFF 0000                     ??_main 007A  
       __size_of_Lcd_Clear 0008             __CFG_PLLEN$OFF 0000                     _ADRESH 009C  
                   _ADRESL 009B             __CFG_ZCDDIS$ON 0000                     _ANSELD 018F  
                ??_Lcd_Cmd 0071                     _SPLLEN 04CF    __size_of_Lcd_Write_Char 002C  
           __CFG_PWRTE$OFF 0000             __CFG_STVREN$ON 0000           __end_of_initMain 06FA  
          Lcd_Set_Cursor@a 0076            Lcd_Set_Cursor@b 0073            Lcd_Set_Cursor@y 0078  
          Lcd_Set_Cursor@z 0077    __end_of__initialization 07FD          __end_of_Lcd_Clear 0651  
           __pcstackCOMMON 0070             _Lcd_Set_Cursor 06FA                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070                 __pbssBANK0 0020                 __pmaintext 077E  
     __size_of_internal_16 0009            __CFG_PPS1WAY$ON 0000  __size_of_Lcd_Write_String 001A  
   __end_of_Lcd_Set_Cursor 073A                 ??_Lcd_Init 0073                 ??_Lcd_Port 0070  
                ?_initMain 0070             _Lcd_Write_Char 06A0                    _Lcd_Cmd 065A  
          ?_Lcd_Set_Cursor 0073                    __ptext1 06CC                    __ptext2 0651  
                  __ptext3 073A                    __ptext4 0649                    __ptext5 0686  
                  __ptext6 06A0                    __ptext7 06FA                    __ptext8 065A  
                  __ptext9 066E                    _dpowers 0800                    clrloop0 0644  
   __end_of_Lcd_Write_Char 06CC       end_of_initialization 07FD                    ftoa@buf 0020  
               ??_initMain 0074                  Lcd_Port@a 0070               __pstringtext 0800  
         __CFG_FOSC$INTOSC 0000                  _TRISBbits 008D            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0075          Lcd_Write_String@i 0078                 main@result 0031  
                _Lcd_Clear 0649           _Lcd_Write_String 0686        start_initialization 07F6  
        __size_of_Lcd_Init 0044          __size_of_Lcd_Port 0018                 ?_Lcd_Clear 0070  
          Lcd_Write_Char@a 0074            Lcd_Write_Char@y 0073                  ___latbits 0002  
            __pcstackBANK0 0031                   ?_Lcd_Cmd 0070              ??_internal_16 0070  
        __size_of_initMain 002E           ??_Lcd_Set_Cursor 0074                  clear_ram0 0643  
                 Lcd_Cmd@a 0072                ??_Lcd_Clear 0073        __end_of_internal_16 065A  
               _ADCON0bits 009D                 _ADCON1bits 009E           ??_Lcd_Write_Char 0071  
                 _Lcd_Init 073A                   _Lcd_Port 066E   __end_of_Lcd_Write_String 06A0  
         __size_of_Lcd_Cmd 0014                 _ANSELBbits 018D                   _initMain 06CC  
            __size_of_main 0078                _internal_16 0651         Lcd_Write_Char@temp 0072  
        __CFG_CLKOUTEN$OFF 0000         Lcd_Set_Cursor@temp 0079  
