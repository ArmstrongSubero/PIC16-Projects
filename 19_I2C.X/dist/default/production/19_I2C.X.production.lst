

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Nov 24 03:38:36 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F1719
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    11                           	psect	cinit,global,class=CODE,merge=1,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    36                           	dabs	1,0x7E,2
    37     0000                     
    38                           ; Generated 06/07/2023 GMT
    39                           ; 
    40                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution. Publication is not required when
    54                           ;        this file is used in an embedded application.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F1719 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72     0000                     	;# 
    73     0001                     	;# 
    74     0002                     	;# 
    75     0003                     	;# 
    76     0004                     	;# 
    77     0005                     	;# 
    78     0006                     	;# 
    79     0007                     	;# 
    80     0008                     	;# 
    81     0009                     	;# 
    82     000A                     	;# 
    83     000B                     	;# 
    84     000C                     	;# 
    85     000D                     	;# 
    86     000E                     	;# 
    87     000F                     	;# 
    88     0010                     	;# 
    89     0011                     	;# 
    90     0012                     	;# 
    91     0013                     	;# 
    92     0015                     	;# 
    93     0016                     	;# 
    94     0016                     	;# 
    95     0017                     	;# 
    96     0018                     	;# 
    97     0019                     	;# 
    98     001A                     	;# 
    99     001B                     	;# 
   100     001C                     	;# 
   101     008C                     	;# 
   102     008D                     	;# 
   103     008E                     	;# 
   104     008F                     	;# 
   105     0090                     	;# 
   106     0091                     	;# 
   107     0092                     	;# 
   108     0093                     	;# 
   109     0095                     	;# 
   110     0096                     	;# 
   111     0097                     	;# 
   112     0098                     	;# 
   113     0099                     	;# 
   114     009A                     	;# 
   115     009B                     	;# 
   116     009B                     	;# 
   117     009C                     	;# 
   118     009D                     	;# 
   119     009E                     	;# 
   120     009F                     	;# 
   121     010C                     	;# 
   122     010D                     	;# 
   123     010E                     	;# 
   124     010F                     	;# 
   125     0110                     	;# 
   126     0111                     	;# 
   127     0112                     	;# 
   128     0113                     	;# 
   129     0114                     	;# 
   130     0115                     	;# 
   131     0116                     	;# 
   132     0117                     	;# 
   133     0118                     	;# 
   134     0119                     	;# 
   135     011A                     	;# 
   136     011B                     	;# 
   137     011B                     	;# 
   138     011C                     	;# 
   139     018C                     	;# 
   140     018D                     	;# 
   141     018E                     	;# 
   142     018F                     	;# 
   143     0190                     	;# 
   144     0191                     	;# 
   145     0191                     	;# 
   146     0192                     	;# 
   147     0193                     	;# 
   148     0193                     	;# 
   149     0194                     	;# 
   150     0195                     	;# 
   151     0196                     	;# 
   152     0197                     	;# 
   153     0199                     	;# 
   154     0199                     	;# 
   155     0199                     	;# 
   156     019A                     	;# 
   157     019A                     	;# 
   158     019A                     	;# 
   159     019B                     	;# 
   160     019B                     	;# 
   161     019B                     	;# 
   162     019B                     	;# 
   163     019B                     	;# 
   164     019C                     	;# 
   165     019C                     	;# 
   166     019C                     	;# 
   167     019D                     	;# 
   168     019D                     	;# 
   169     019D                     	;# 
   170     019E                     	;# 
   171     019E                     	;# 
   172     019E                     	;# 
   173     019F                     	;# 
   174     019F                     	;# 
   175     019F                     	;# 
   176     019F                     	;# 
   177     019F                     	;# 
   178     020C                     	;# 
   179     020D                     	;# 
   180     020E                     	;# 
   181     020F                     	;# 
   182     0210                     	;# 
   183     0211                     	;# 
   184     0211                     	;# 
   185     0212                     	;# 
   186     0212                     	;# 
   187     0213                     	;# 
   188     0213                     	;# 
   189     0214                     	;# 
   190     0214                     	;# 
   191     0215                     	;# 
   192     0215                     	;# 
   193     0215                     	;# 
   194     0215                     	;# 
   195     0216                     	;# 
   196     0216                     	;# 
   197     0217                     	;# 
   198     0217                     	;# 
   199     028C                     	;# 
   200     028D                     	;# 
   201     028E                     	;# 
   202     028F                     	;# 
   203     0290                     	;# 
   204     0291                     	;# 
   205     0291                     	;# 
   206     0292                     	;# 
   207     0293                     	;# 
   208     0293                     	;# 
   209     0298                     	;# 
   210     0298                     	;# 
   211     0299                     	;# 
   212     029A                     	;# 
   213     029A                     	;# 
   214     029E                     	;# 
   215     030C                     	;# 
   216     030D                     	;# 
   217     030E                     	;# 
   218     030F                     	;# 
   219     0310                     	;# 
   220     038C                     	;# 
   221     038D                     	;# 
   222     038E                     	;# 
   223     038F                     	;# 
   224     0390                     	;# 
   225     0391                     	;# 
   226     0392                     	;# 
   227     0393                     	;# 
   228     0394                     	;# 
   229     0395                     	;# 
   230     0396                     	;# 
   231     0397                     	;# 
   232     0398                     	;# 
   233     0399                     	;# 
   234     039D                     	;# 
   235     039E                     	;# 
   236     039F                     	;# 
   237     0415                     	;# 
   238     0416                     	;# 
   239     0417                     	;# 
   240     041C                     	;# 
   241     041D                     	;# 
   242     041E                     	;# 
   243     0498                     	;# 
   244     0498                     	;# 
   245     0499                     	;# 
   246     049A                     	;# 
   247     049B                     	;# 
   248     049B                     	;# 
   249     049C                     	;# 
   250     049D                     	;# 
   251     049E                     	;# 
   252     049F                     	;# 
   253     0511                     	;# 
   254     0515                     	;# 
   255     0617                     	;# 
   256     0618                     	;# 
   257     0619                     	;# 
   258     0619                     	;# 
   259     061A                     	;# 
   260     061B                     	;# 
   261     061C                     	;# 
   262     061C                     	;# 
   263     0691                     	;# 
   264     0692                     	;# 
   265     0693                     	;# 
   266     0694                     	;# 
   267     0695                     	;# 
   268     0696                     	;# 
   269     0697                     	;# 
   270     0698                     	;# 
   271     0699                     	;# 
   272     069A                     	;# 
   273     069B                     	;# 
   274     069C                     	;# 
   275     069D                     	;# 
   276     069E                     	;# 
   277     069F                     	;# 
   278     0E0F                     	;# 
   279     0E10                     	;# 
   280     0E11                     	;# 
   281     0E12                     	;# 
   282     0E13                     	;# 
   283     0E14                     	;# 
   284     0E15                     	;# 
   285     0E17                     	;# 
   286     0E20                     	;# 
   287     0E21                     	;# 
   288     0E22                     	;# 
   289     0E24                     	;# 
   290     0E25                     	;# 
   291     0E28                     	;# 
   292     0E29                     	;# 
   293     0E2A                     	;# 
   294     0E2B                     	;# 
   295     0E90                     	;# 
   296     0E91                     	;# 
   297     0E92                     	;# 
   298     0E93                     	;# 
   299     0E94                     	;# 
   300     0E95                     	;# 
   301     0E96                     	;# 
   302     0E97                     	;# 
   303     0E98                     	;# 
   304     0E99                     	;# 
   305     0E9A                     	;# 
   306     0E9B                     	;# 
   307     0E9C                     	;# 
   308     0E9D                     	;# 
   309     0E9E                     	;# 
   310     0E9F                     	;# 
   311     0EA0                     	;# 
   312     0EA1                     	;# 
   313     0EA2                     	;# 
   314     0EA3                     	;# 
   315     0EA4                     	;# 
   316     0EA5                     	;# 
   317     0EA6                     	;# 
   318     0EA7                     	;# 
   319     0EA8                     	;# 
   320     0EA9                     	;# 
   321     0EAA                     	;# 
   322     0EAB                     	;# 
   323     0EAC                     	;# 
   324     0EAD                     	;# 
   325     0EAE                     	;# 
   326     0EAF                     	;# 
   327     0EB0                     	;# 
   328     0EB1                     	;# 
   329     0EB2                     	;# 
   330     0F0F                     	;# 
   331     0F10                     	;# 
   332     0F11                     	;# 
   333     0F12                     	;# 
   334     0F13                     	;# 
   335     0F14                     	;# 
   336     0F15                     	;# 
   337     0F16                     	;# 
   338     0F17                     	;# 
   339     0F18                     	;# 
   340     0F19                     	;# 
   341     0F1A                     	;# 
   342     0F1B                     	;# 
   343     0F1C                     	;# 
   344     0F1D                     	;# 
   345     0F1E                     	;# 
   346     0F1F                     	;# 
   347     0F20                     	;# 
   348     0F21                     	;# 
   349     0F22                     	;# 
   350     0F23                     	;# 
   351     0F24                     	;# 
   352     0F25                     	;# 
   353     0F26                     	;# 
   354     0F27                     	;# 
   355     0F28                     	;# 
   356     0F29                     	;# 
   357     0F2A                     	;# 
   358     0F2B                     	;# 
   359     0F2C                     	;# 
   360     0F2D                     	;# 
   361     0F2E                     	;# 
   362     0F2F                     	;# 
   363     0F30                     	;# 
   364     0F31                     	;# 
   365     0F32                     	;# 
   366     0F33                     	;# 
   367     0F34                     	;# 
   368     0F35                     	;# 
   369     0F36                     	;# 
   370     0F37                     	;# 
   371     0FE4                     	;# 
   372     0FE5                     	;# 
   373     0FE6                     	;# 
   374     0FE7                     	;# 
   375     0FE8                     	;# 
   376     0FE9                     	;# 
   377     0FEA                     	;# 
   378     0FEB                     	;# 
   379     0FED                     	;# 
   380     0FEE                     	;# 
   381     0FEF                     	;# 
   382     0000                     	;# 
   383     0001                     	;# 
   384     0002                     	;# 
   385     0003                     	;# 
   386     0004                     	;# 
   387     0005                     	;# 
   388     0006                     	;# 
   389     0007                     	;# 
   390     0008                     	;# 
   391     0009                     	;# 
   392     000A                     	;# 
   393     000B                     	;# 
   394     000C                     	;# 
   395     000D                     	;# 
   396     000E                     	;# 
   397     000F                     	;# 
   398     0010                     	;# 
   399     0011                     	;# 
   400     0012                     	;# 
   401     0013                     	;# 
   402     0015                     	;# 
   403     0016                     	;# 
   404     0016                     	;# 
   405     0017                     	;# 
   406     0018                     	;# 
   407     0019                     	;# 
   408     001A                     	;# 
   409     001B                     	;# 
   410     001C                     	;# 
   411     008C                     	;# 
   412     008D                     	;# 
   413     008E                     	;# 
   414     008F                     	;# 
   415     0090                     	;# 
   416     0091                     	;# 
   417     0092                     	;# 
   418     0093                     	;# 
   419     0095                     	;# 
   420     0096                     	;# 
   421     0097                     	;# 
   422     0098                     	;# 
   423     0099                     	;# 
   424     009A                     	;# 
   425     009B                     	;# 
   426     009B                     	;# 
   427     009C                     	;# 
   428     009D                     	;# 
   429     009E                     	;# 
   430     009F                     	;# 
   431     010C                     	;# 
   432     010D                     	;# 
   433     010E                     	;# 
   434     010F                     	;# 
   435     0110                     	;# 
   436     0111                     	;# 
   437     0112                     	;# 
   438     0113                     	;# 
   439     0114                     	;# 
   440     0115                     	;# 
   441     0116                     	;# 
   442     0117                     	;# 
   443     0118                     	;# 
   444     0119                     	;# 
   445     011A                     	;# 
   446     011B                     	;# 
   447     011B                     	;# 
   448     011C                     	;# 
   449     018C                     	;# 
   450     018D                     	;# 
   451     018E                     	;# 
   452     018F                     	;# 
   453     0190                     	;# 
   454     0191                     	;# 
   455     0191                     	;# 
   456     0192                     	;# 
   457     0193                     	;# 
   458     0193                     	;# 
   459     0194                     	;# 
   460     0195                     	;# 
   461     0196                     	;# 
   462     0197                     	;# 
   463     0199                     	;# 
   464     0199                     	;# 
   465     0199                     	;# 
   466     019A                     	;# 
   467     019A                     	;# 
   468     019A                     	;# 
   469     019B                     	;# 
   470     019B                     	;# 
   471     019B                     	;# 
   472     019B                     	;# 
   473     019B                     	;# 
   474     019C                     	;# 
   475     019C                     	;# 
   476     019C                     	;# 
   477     019D                     	;# 
   478     019D                     	;# 
   479     019D                     	;# 
   480     019E                     	;# 
   481     019E                     	;# 
   482     019E                     	;# 
   483     019F                     	;# 
   484     019F                     	;# 
   485     019F                     	;# 
   486     019F                     	;# 
   487     019F                     	;# 
   488     020C                     	;# 
   489     020D                     	;# 
   490     020E                     	;# 
   491     020F                     	;# 
   492     0210                     	;# 
   493     0211                     	;# 
   494     0211                     	;# 
   495     0212                     	;# 
   496     0212                     	;# 
   497     0213                     	;# 
   498     0213                     	;# 
   499     0214                     	;# 
   500     0214                     	;# 
   501     0215                     	;# 
   502     0215                     	;# 
   503     0215                     	;# 
   504     0215                     	;# 
   505     0216                     	;# 
   506     0216                     	;# 
   507     0217                     	;# 
   508     0217                     	;# 
   509     028C                     	;# 
   510     028D                     	;# 
   511     028E                     	;# 
   512     028F                     	;# 
   513     0290                     	;# 
   514     0291                     	;# 
   515     0291                     	;# 
   516     0292                     	;# 
   517     0293                     	;# 
   518     0293                     	;# 
   519     0298                     	;# 
   520     0298                     	;# 
   521     0299                     	;# 
   522     029A                     	;# 
   523     029A                     	;# 
   524     029E                     	;# 
   525     030C                     	;# 
   526     030D                     	;# 
   527     030E                     	;# 
   528     030F                     	;# 
   529     0310                     	;# 
   530     038C                     	;# 
   531     038D                     	;# 
   532     038E                     	;# 
   533     038F                     	;# 
   534     0390                     	;# 
   535     0391                     	;# 
   536     0392                     	;# 
   537     0393                     	;# 
   538     0394                     	;# 
   539     0395                     	;# 
   540     0396                     	;# 
   541     0397                     	;# 
   542     0398                     	;# 
   543     0399                     	;# 
   544     039D                     	;# 
   545     039E                     	;# 
   546     039F                     	;# 
   547     0415                     	;# 
   548     0416                     	;# 
   549     0417                     	;# 
   550     041C                     	;# 
   551     041D                     	;# 
   552     041E                     	;# 
   553     0498                     	;# 
   554     0498                     	;# 
   555     0499                     	;# 
   556     049A                     	;# 
   557     049B                     	;# 
   558     049B                     	;# 
   559     049C                     	;# 
   560     049D                     	;# 
   561     049E                     	;# 
   562     049F                     	;# 
   563     0511                     	;# 
   564     0515                     	;# 
   565     0617                     	;# 
   566     0618                     	;# 
   567     0619                     	;# 
   568     0619                     	;# 
   569     061A                     	;# 
   570     061B                     	;# 
   571     061C                     	;# 
   572     061C                     	;# 
   573     0691                     	;# 
   574     0692                     	;# 
   575     0693                     	;# 
   576     0694                     	;# 
   577     0695                     	;# 
   578     0696                     	;# 
   579     0697                     	;# 
   580     0698                     	;# 
   581     0699                     	;# 
   582     069A                     	;# 
   583     069B                     	;# 
   584     069C                     	;# 
   585     069D                     	;# 
   586     069E                     	;# 
   587     069F                     	;# 
   588     0E0F                     	;# 
   589     0E10                     	;# 
   590     0E11                     	;# 
   591     0E12                     	;# 
   592     0E13                     	;# 
   593     0E14                     	;# 
   594     0E15                     	;# 
   595     0E17                     	;# 
   596     0E20                     	;# 
   597     0E21                     	;# 
   598     0E22                     	;# 
   599     0E24                     	;# 
   600     0E25                     	;# 
   601     0E28                     	;# 
   602     0E29                     	;# 
   603     0E2A                     	;# 
   604     0E2B                     	;# 
   605     0E90                     	;# 
   606     0E91                     	;# 
   607     0E92                     	;# 
   608     0E93                     	;# 
   609     0E94                     	;# 
   610     0E95                     	;# 
   611     0E96                     	;# 
   612     0E97                     	;# 
   613     0E98                     	;# 
   614     0E99                     	;# 
   615     0E9A                     	;# 
   616     0E9B                     	;# 
   617     0E9C                     	;# 
   618     0E9D                     	;# 
   619     0E9E                     	;# 
   620     0E9F                     	;# 
   621     0EA0                     	;# 
   622     0EA1                     	;# 
   623     0EA2                     	;# 
   624     0EA3                     	;# 
   625     0EA4                     	;# 
   626     0EA5                     	;# 
   627     0EA6                     	;# 
   628     0EA7                     	;# 
   629     0EA8                     	;# 
   630     0EA9                     	;# 
   631     0EAA                     	;# 
   632     0EAB                     	;# 
   633     0EAC                     	;# 
   634     0EAD                     	;# 
   635     0EAE                     	;# 
   636     0EAF                     	;# 
   637     0EB0                     	;# 
   638     0EB1                     	;# 
   639     0EB2                     	;# 
   640     0F0F                     	;# 
   641     0F10                     	;# 
   642     0F11                     	;# 
   643     0F12                     	;# 
   644     0F13                     	;# 
   645     0F14                     	;# 
   646     0F15                     	;# 
   647     0F16                     	;# 
   648     0F17                     	;# 
   649     0F18                     	;# 
   650     0F19                     	;# 
   651     0F1A                     	;# 
   652     0F1B                     	;# 
   653     0F1C                     	;# 
   654     0F1D                     	;# 
   655     0F1E                     	;# 
   656     0F1F                     	;# 
   657     0F20                     	;# 
   658     0F21                     	;# 
   659     0F22                     	;# 
   660     0F23                     	;# 
   661     0F24                     	;# 
   662     0F25                     	;# 
   663     0F26                     	;# 
   664     0F27                     	;# 
   665     0F28                     	;# 
   666     0F29                     	;# 
   667     0F2A                     	;# 
   668     0F2B                     	;# 
   669     0F2C                     	;# 
   670     0F2D                     	;# 
   671     0F2E                     	;# 
   672     0F2F                     	;# 
   673     0F30                     	;# 
   674     0F31                     	;# 
   675     0F32                     	;# 
   676     0F33                     	;# 
   677     0F34                     	;# 
   678     0F35                     	;# 
   679     0F36                     	;# 
   680     0F37                     	;# 
   681     0FE4                     	;# 
   682     0FE5                     	;# 
   683     0FE6                     	;# 
   684     0FE7                     	;# 
   685     0FE8                     	;# 
   686     0FE9                     	;# 
   687     0FEA                     	;# 
   688     0FEB                     	;# 
   689     0FED                     	;# 
   690     0FEE                     	;# 
   691     0FEF                     	;# 
   692     0000                     	;# 
   693     0001                     	;# 
   694     0002                     	;# 
   695     0003                     	;# 
   696     0004                     	;# 
   697     0005                     	;# 
   698     0006                     	;# 
   699     0007                     	;# 
   700     0008                     	;# 
   701     0009                     	;# 
   702     000A                     	;# 
   703     000B                     	;# 
   704     000C                     	;# 
   705     000D                     	;# 
   706     000E                     	;# 
   707     000F                     	;# 
   708     0010                     	;# 
   709     0011                     	;# 
   710     0012                     	;# 
   711     0013                     	;# 
   712     0015                     	;# 
   713     0016                     	;# 
   714     0016                     	;# 
   715     0017                     	;# 
   716     0018                     	;# 
   717     0019                     	;# 
   718     001A                     	;# 
   719     001B                     	;# 
   720     001C                     	;# 
   721     008C                     	;# 
   722     008D                     	;# 
   723     008E                     	;# 
   724     008F                     	;# 
   725     0090                     	;# 
   726     0091                     	;# 
   727     0092                     	;# 
   728     0093                     	;# 
   729     0095                     	;# 
   730     0096                     	;# 
   731     0097                     	;# 
   732     0098                     	;# 
   733     0099                     	;# 
   734     009A                     	;# 
   735     009B                     	;# 
   736     009B                     	;# 
   737     009C                     	;# 
   738     009D                     	;# 
   739     009E                     	;# 
   740     009F                     	;# 
   741     010C                     	;# 
   742     010D                     	;# 
   743     010E                     	;# 
   744     010F                     	;# 
   745     0110                     	;# 
   746     0111                     	;# 
   747     0112                     	;# 
   748     0113                     	;# 
   749     0114                     	;# 
   750     0115                     	;# 
   751     0116                     	;# 
   752     0117                     	;# 
   753     0118                     	;# 
   754     0119                     	;# 
   755     011A                     	;# 
   756     011B                     	;# 
   757     011B                     	;# 
   758     011C                     	;# 
   759     018C                     	;# 
   760     018D                     	;# 
   761     018E                     	;# 
   762     018F                     	;# 
   763     0190                     	;# 
   764     0191                     	;# 
   765     0191                     	;# 
   766     0192                     	;# 
   767     0193                     	;# 
   768     0193                     	;# 
   769     0194                     	;# 
   770     0195                     	;# 
   771     0196                     	;# 
   772     0197                     	;# 
   773     0199                     	;# 
   774     0199                     	;# 
   775     0199                     	;# 
   776     019A                     	;# 
   777     019A                     	;# 
   778     019A                     	;# 
   779     019B                     	;# 
   780     019B                     	;# 
   781     019B                     	;# 
   782     019B                     	;# 
   783     019B                     	;# 
   784     019C                     	;# 
   785     019C                     	;# 
   786     019C                     	;# 
   787     019D                     	;# 
   788     019D                     	;# 
   789     019D                     	;# 
   790     019E                     	;# 
   791     019E                     	;# 
   792     019E                     	;# 
   793     019F                     	;# 
   794     019F                     	;# 
   795     019F                     	;# 
   796     019F                     	;# 
   797     019F                     	;# 
   798     020C                     	;# 
   799     020D                     	;# 
   800     020E                     	;# 
   801     020F                     	;# 
   802     0210                     	;# 
   803     0211                     	;# 
   804     0211                     	;# 
   805     0212                     	;# 
   806     0212                     	;# 
   807     0213                     	;# 
   808     0213                     	;# 
   809     0214                     	;# 
   810     0214                     	;# 
   811     0215                     	;# 
   812     0215                     	;# 
   813     0215                     	;# 
   814     0215                     	;# 
   815     0216                     	;# 
   816     0216                     	;# 
   817     0217                     	;# 
   818     0217                     	;# 
   819     028C                     	;# 
   820     028D                     	;# 
   821     028E                     	;# 
   822     028F                     	;# 
   823     0290                     	;# 
   824     0291                     	;# 
   825     0291                     	;# 
   826     0292                     	;# 
   827     0293                     	;# 
   828     0293                     	;# 
   829     0298                     	;# 
   830     0298                     	;# 
   831     0299                     	;# 
   832     029A                     	;# 
   833     029A                     	;# 
   834     029E                     	;# 
   835     030C                     	;# 
   836     030D                     	;# 
   837     030E                     	;# 
   838     030F                     	;# 
   839     0310                     	;# 
   840     038C                     	;# 
   841     038D                     	;# 
   842     038E                     	;# 
   843     038F                     	;# 
   844     0390                     	;# 
   845     0391                     	;# 
   846     0392                     	;# 
   847     0393                     	;# 
   848     0394                     	;# 
   849     0395                     	;# 
   850     0396                     	;# 
   851     0397                     	;# 
   852     0398                     	;# 
   853     0399                     	;# 
   854     039D                     	;# 
   855     039E                     	;# 
   856     039F                     	;# 
   857     0415                     	;# 
   858     0416                     	;# 
   859     0417                     	;# 
   860     041C                     	;# 
   861     041D                     	;# 
   862     041E                     	;# 
   863     0498                     	;# 
   864     0498                     	;# 
   865     0499                     	;# 
   866     049A                     	;# 
   867     049B                     	;# 
   868     049B                     	;# 
   869     049C                     	;# 
   870     049D                     	;# 
   871     049E                     	;# 
   872     049F                     	;# 
   873     0511                     	;# 
   874     0515                     	;# 
   875     0617                     	;# 
   876     0618                     	;# 
   877     0619                     	;# 
   878     0619                     	;# 
   879     061A                     	;# 
   880     061B                     	;# 
   881     061C                     	;# 
   882     061C                     	;# 
   883     0691                     	;# 
   884     0692                     	;# 
   885     0693                     	;# 
   886     0694                     	;# 
   887     0695                     	;# 
   888     0696                     	;# 
   889     0697                     	;# 
   890     0698                     	;# 
   891     0699                     	;# 
   892     069A                     	;# 
   893     069B                     	;# 
   894     069C                     	;# 
   895     069D                     	;# 
   896     069E                     	;# 
   897     069F                     	;# 
   898     0E0F                     	;# 
   899     0E10                     	;# 
   900     0E11                     	;# 
   901     0E12                     	;# 
   902     0E13                     	;# 
   903     0E14                     	;# 
   904     0E15                     	;# 
   905     0E17                     	;# 
   906     0E20                     	;# 
   907     0E21                     	;# 
   908     0E22                     	;# 
   909     0E24                     	;# 
   910     0E25                     	;# 
   911     0E28                     	;# 
   912     0E29                     	;# 
   913     0E2A                     	;# 
   914     0E2B                     	;# 
   915     0E90                     	;# 
   916     0E91                     	;# 
   917     0E92                     	;# 
   918     0E93                     	;# 
   919     0E94                     	;# 
   920     0E95                     	;# 
   921     0E96                     	;# 
   922     0E97                     	;# 
   923     0E98                     	;# 
   924     0E99                     	;# 
   925     0E9A                     	;# 
   926     0E9B                     	;# 
   927     0E9C                     	;# 
   928     0E9D                     	;# 
   929     0E9E                     	;# 
   930     0E9F                     	;# 
   931     0EA0                     	;# 
   932     0EA1                     	;# 
   933     0EA2                     	;# 
   934     0EA3                     	;# 
   935     0EA4                     	;# 
   936     0EA5                     	;# 
   937     0EA6                     	;# 
   938     0EA7                     	;# 
   939     0EA8                     	;# 
   940     0EA9                     	;# 
   941     0EAA                     	;# 
   942     0EAB                     	;# 
   943     0EAC                     	;# 
   944     0EAD                     	;# 
   945     0EAE                     	;# 
   946     0EAF                     	;# 
   947     0EB0                     	;# 
   948     0EB1                     	;# 
   949     0EB2                     	;# 
   950     0F0F                     	;# 
   951     0F10                     	;# 
   952     0F11                     	;# 
   953     0F12                     	;# 
   954     0F13                     	;# 
   955     0F14                     	;# 
   956     0F15                     	;# 
   957     0F16                     	;# 
   958     0F17                     	;# 
   959     0F18                     	;# 
   960     0F19                     	;# 
   961     0F1A                     	;# 
   962     0F1B                     	;# 
   963     0F1C                     	;# 
   964     0F1D                     	;# 
   965     0F1E                     	;# 
   966     0F1F                     	;# 
   967     0F20                     	;# 
   968     0F21                     	;# 
   969     0F22                     	;# 
   970     0F23                     	;# 
   971     0F24                     	;# 
   972     0F25                     	;# 
   973     0F26                     	;# 
   974     0F27                     	;# 
   975     0F28                     	;# 
   976     0F29                     	;# 
   977     0F2A                     	;# 
   978     0F2B                     	;# 
   979     0F2C                     	;# 
   980     0F2D                     	;# 
   981     0F2E                     	;# 
   982     0F2F                     	;# 
   983     0F30                     	;# 
   984     0F31                     	;# 
   985     0F32                     	;# 
   986     0F33                     	;# 
   987     0F34                     	;# 
   988     0F35                     	;# 
   989     0F36                     	;# 
   990     0F37                     	;# 
   991     0FE4                     	;# 
   992     0FE5                     	;# 
   993     0FE6                     	;# 
   994     0FE7                     	;# 
   995     0FE8                     	;# 
   996     0FE9                     	;# 
   997     0FEA                     	;# 
   998     0FEB                     	;# 
   999     0FED                     	;# 
  1000     0FEE                     	;# 
  1001     0FEF                     	;# 
  1002     0000                     	;# 
  1003     0001                     	;# 
  1004     0002                     	;# 
  1005     0003                     	;# 
  1006     0004                     	;# 
  1007     0005                     	;# 
  1008     0006                     	;# 
  1009     0007                     	;# 
  1010     0008                     	;# 
  1011     0009                     	;# 
  1012     000A                     	;# 
  1013     000B                     	;# 
  1014     000C                     	;# 
  1015     000D                     	;# 
  1016     000E                     	;# 
  1017     000F                     	;# 
  1018     0010                     	;# 
  1019     0011                     	;# 
  1020     0012                     	;# 
  1021     0013                     	;# 
  1022     0015                     	;# 
  1023     0016                     	;# 
  1024     0016                     	;# 
  1025     0017                     	;# 
  1026     0018                     	;# 
  1027     0019                     	;# 
  1028     001A                     	;# 
  1029     001B                     	;# 
  1030     001C                     	;# 
  1031     008C                     	;# 
  1032     008D                     	;# 
  1033     008E                     	;# 
  1034     008F                     	;# 
  1035     0090                     	;# 
  1036     0091                     	;# 
  1037     0092                     	;# 
  1038     0093                     	;# 
  1039     0095                     	;# 
  1040     0096                     	;# 
  1041     0097                     	;# 
  1042     0098                     	;# 
  1043     0099                     	;# 
  1044     009A                     	;# 
  1045     009B                     	;# 
  1046     009B                     	;# 
  1047     009C                     	;# 
  1048     009D                     	;# 
  1049     009E                     	;# 
  1050     009F                     	;# 
  1051     010C                     	;# 
  1052     010D                     	;# 
  1053     010E                     	;# 
  1054     010F                     	;# 
  1055     0110                     	;# 
  1056     0111                     	;# 
  1057     0112                     	;# 
  1058     0113                     	;# 
  1059     0114                     	;# 
  1060     0115                     	;# 
  1061     0116                     	;# 
  1062     0117                     	;# 
  1063     0118                     	;# 
  1064     0119                     	;# 
  1065     011A                     	;# 
  1066     011B                     	;# 
  1067     011B                     	;# 
  1068     011C                     	;# 
  1069     018C                     	;# 
  1070     018D                     	;# 
  1071     018E                     	;# 
  1072     018F                     	;# 
  1073     0190                     	;# 
  1074     0191                     	;# 
  1075     0191                     	;# 
  1076     0192                     	;# 
  1077     0193                     	;# 
  1078     0193                     	;# 
  1079     0194                     	;# 
  1080     0195                     	;# 
  1081     0196                     	;# 
  1082     0197                     	;# 
  1083     0199                     	;# 
  1084     0199                     	;# 
  1085     0199                     	;# 
  1086     019A                     	;# 
  1087     019A                     	;# 
  1088     019A                     	;# 
  1089     019B                     	;# 
  1090     019B                     	;# 
  1091     019B                     	;# 
  1092     019B                     	;# 
  1093     019B                     	;# 
  1094     019C                     	;# 
  1095     019C                     	;# 
  1096     019C                     	;# 
  1097     019D                     	;# 
  1098     019D                     	;# 
  1099     019D                     	;# 
  1100     019E                     	;# 
  1101     019E                     	;# 
  1102     019E                     	;# 
  1103     019F                     	;# 
  1104     019F                     	;# 
  1105     019F                     	;# 
  1106     019F                     	;# 
  1107     019F                     	;# 
  1108     020C                     	;# 
  1109     020D                     	;# 
  1110     020E                     	;# 
  1111     020F                     	;# 
  1112     0210                     	;# 
  1113     0211                     	;# 
  1114     0211                     	;# 
  1115     0212                     	;# 
  1116     0212                     	;# 
  1117     0213                     	;# 
  1118     0213                     	;# 
  1119     0214                     	;# 
  1120     0214                     	;# 
  1121     0215                     	;# 
  1122     0215                     	;# 
  1123     0215                     	;# 
  1124     0215                     	;# 
  1125     0216                     	;# 
  1126     0216                     	;# 
  1127     0217                     	;# 
  1128     0217                     	;# 
  1129     028C                     	;# 
  1130     028D                     	;# 
  1131     028E                     	;# 
  1132     028F                     	;# 
  1133     0290                     	;# 
  1134     0291                     	;# 
  1135     0291                     	;# 
  1136     0292                     	;# 
  1137     0293                     	;# 
  1138     0293                     	;# 
  1139     0298                     	;# 
  1140     0298                     	;# 
  1141     0299                     	;# 
  1142     029A                     	;# 
  1143     029A                     	;# 
  1144     029E                     	;# 
  1145     030C                     	;# 
  1146     030D                     	;# 
  1147     030E                     	;# 
  1148     030F                     	;# 
  1149     0310                     	;# 
  1150     038C                     	;# 
  1151     038D                     	;# 
  1152     038E                     	;# 
  1153     038F                     	;# 
  1154     0390                     	;# 
  1155     0391                     	;# 
  1156     0392                     	;# 
  1157     0393                     	;# 
  1158     0394                     	;# 
  1159     0395                     	;# 
  1160     0396                     	;# 
  1161     0397                     	;# 
  1162     0398                     	;# 
  1163     0399                     	;# 
  1164     039D                     	;# 
  1165     039E                     	;# 
  1166     039F                     	;# 
  1167     0415                     	;# 
  1168     0416                     	;# 
  1169     0417                     	;# 
  1170     041C                     	;# 
  1171     041D                     	;# 
  1172     041E                     	;# 
  1173     0498                     	;# 
  1174     0498                     	;# 
  1175     0499                     	;# 
  1176     049A                     	;# 
  1177     049B                     	;# 
  1178     049B                     	;# 
  1179     049C                     	;# 
  1180     049D                     	;# 
  1181     049E                     	;# 
  1182     049F                     	;# 
  1183     0511                     	;# 
  1184     0515                     	;# 
  1185     0617                     	;# 
  1186     0618                     	;# 
  1187     0619                     	;# 
  1188     0619                     	;# 
  1189     061A                     	;# 
  1190     061B                     	;# 
  1191     061C                     	;# 
  1192     061C                     	;# 
  1193     0691                     	;# 
  1194     0692                     	;# 
  1195     0693                     	;# 
  1196     0694                     	;# 
  1197     0695                     	;# 
  1198     0696                     	;# 
  1199     0697                     	;# 
  1200     0698                     	;# 
  1201     0699                     	;# 
  1202     069A                     	;# 
  1203     069B                     	;# 
  1204     069C                     	;# 
  1205     069D                     	;# 
  1206     069E                     	;# 
  1207     069F                     	;# 
  1208     0E0F                     	;# 
  1209     0E10                     	;# 
  1210     0E11                     	;# 
  1211     0E12                     	;# 
  1212     0E13                     	;# 
  1213     0E14                     	;# 
  1214     0E15                     	;# 
  1215     0E17                     	;# 
  1216     0E20                     	;# 
  1217     0E21                     	;# 
  1218     0E22                     	;# 
  1219     0E24                     	;# 
  1220     0E25                     	;# 
  1221     0E28                     	;# 
  1222     0E29                     	;# 
  1223     0E2A                     	;# 
  1224     0E2B                     	;# 
  1225     0E90                     	;# 
  1226     0E91                     	;# 
  1227     0E92                     	;# 
  1228     0E93                     	;# 
  1229     0E94                     	;# 
  1230     0E95                     	;# 
  1231     0E96                     	;# 
  1232     0E97                     	;# 
  1233     0E98                     	;# 
  1234     0E99                     	;# 
  1235     0E9A                     	;# 
  1236     0E9B                     	;# 
  1237     0E9C                     	;# 
  1238     0E9D                     	;# 
  1239     0E9E                     	;# 
  1240     0E9F                     	;# 
  1241     0EA0                     	;# 
  1242     0EA1                     	;# 
  1243     0EA2                     	;# 
  1244     0EA3                     	;# 
  1245     0EA4                     	;# 
  1246     0EA5                     	;# 
  1247     0EA6                     	;# 
  1248     0EA7                     	;# 
  1249     0EA8                     	;# 
  1250     0EA9                     	;# 
  1251     0EAA                     	;# 
  1252     0EAB                     	;# 
  1253     0EAC                     	;# 
  1254     0EAD                     	;# 
  1255     0EAE                     	;# 
  1256     0EAF                     	;# 
  1257     0EB0                     	;# 
  1258     0EB1                     	;# 
  1259     0EB2                     	;# 
  1260     0F0F                     	;# 
  1261     0F10                     	;# 
  1262     0F11                     	;# 
  1263     0F12                     	;# 
  1264     0F13                     	;# 
  1265     0F14                     	;# 
  1266     0F15                     	;# 
  1267     0F16                     	;# 
  1268     0F17                     	;# 
  1269     0F18                     	;# 
  1270     0F19                     	;# 
  1271     0F1A                     	;# 
  1272     0F1B                     	;# 
  1273     0F1C                     	;# 
  1274     0F1D                     	;# 
  1275     0F1E                     	;# 
  1276     0F1F                     	;# 
  1277     0F20                     	;# 
  1278     0F21                     	;# 
  1279     0F22                     	;# 
  1280     0F23                     	;# 
  1281     0F24                     	;# 
  1282     0F25                     	;# 
  1283     0F26                     	;# 
  1284     0F27                     	;# 
  1285     0F28                     	;# 
  1286     0F29                     	;# 
  1287     0F2A                     	;# 
  1288     0F2B                     	;# 
  1289     0F2C                     	;# 
  1290     0F2D                     	;# 
  1291     0F2E                     	;# 
  1292     0F2F                     	;# 
  1293     0F30                     	;# 
  1294     0F31                     	;# 
  1295     0F32                     	;# 
  1296     0F33                     	;# 
  1297     0F34                     	;# 
  1298     0F35                     	;# 
  1299     0F36                     	;# 
  1300     0F37                     	;# 
  1301     0FE4                     	;# 
  1302     0FE5                     	;# 
  1303     0FE6                     	;# 
  1304     0FE7                     	;# 
  1305     0FE8                     	;# 
  1306     0FE9                     	;# 
  1307     0FEA                     	;# 
  1308     0FEB                     	;# 
  1309     0FED                     	;# 
  1310     0FEE                     	;# 
  1311     0FEF                     	;# 
  1312     0011                     _PIR1bits	set	17
  1313     008E                     _TRISCbits	set	142
  1314     008D                     _TRISBbits	set	141
  1315     008F                     _TRISD	set	143
  1316     008F                     _TRISDbits	set	143
  1317     04CF                     _SPLLEN	set	1231
  1318     04CE                     _IRCF3	set	1230
  1319     04CD                     _IRCF2	set	1229
  1320     04CC                     _IRCF1	set	1228
  1321     04CB                     _IRCF0	set	1227
  1322     04C9                     _SCS1	set	1225
  1323     04C8                     _SCS0	set	1224
  1324     010F                     _LATDbits	set	271
  1325     019A                     _TX1REG	set	410
  1326     0199                     _RC1REG	set	409
  1327     019D                     _RC1STAbits	set	413
  1328     019B                     _SPBRGL	set	411
  1329     018E                     _ANSELCbits	set	398
  1330     018D                     _ANSELBbits	set	397
  1331     018F                     _ANSELD	set	399
  1332     0CF5                     _TXEN	set	3317
  1333     0CEC                     _CREN	set	3308
  1334     0CEF                     _SPEN	set	3311
  1335     0CF4                     _SYNC	set	3316
  1336     0CFB                     _BRG16	set	3323
  1337     0CF2                     _BRGH	set	3314
  1338     0216                     _SSPCON2bits	set	534
  1339     0211                     _SSPBUF	set	529
  1340     0212                     _SSPADD	set	530
  1341     0215                     _SSPCONbits	set	533
  1342     0E20                     _SSPCLKPPSbits	set	3616
  1343     0E21                     _SSPDATPPSbits	set	3617
  1344     0E24                     _RXPPSbits	set	3620
  1345     0E0F                     _PPSLOCKbits	set	3599
  1346     0E0F                     _PPSLOCK	set	3599
  1347     0EA5                     _RC5PPSbits	set	3749
  1348     0EA4                     _RC4PPSbits	set	3748
  1349     0E9A                     _RB2PPSbits	set	3738
  1350                           
  1351                           	psect	stringtext1
  1352     0800                     __pstringtext1:
  1353     0800                     STR_2:
  1354     0800  3457               	retlw	87	;'W'
  1355     0801  3472               	retlw	114	;'r'
  1356     0802  3469               	retlw	105	;'i'
  1357     0803  3474               	retlw	116	;'t'
  1358     0804  3465               	retlw	101	;'e'
  1359     0805  3420               	retlw	32	;' '
  1360     0806  3463               	retlw	99	;'c'
  1361     0807  346F               	retlw	111	;'o'
  1362     0808  346D               	retlw	109	;'m'
  1363     0809  3470               	retlw	112	;'p'
  1364     080A  346C               	retlw	108	;'l'
  1365     080B  3465               	retlw	101	;'e'
  1366     080C  3474               	retlw	116	;'t'
  1367     080D  3465               	retlw	101	;'e'
  1368     080E  3464               	retlw	100	;'d'
  1369     080F  340A               	retlw	10
  1370     0810  3400               	retlw	0
  1371                           
  1372                           	psect	stringtext2
  1373     0811                     __pstringtext2:
  1374     0811                     STR_5:
  1375     0811  342C               	retlw	44	;','
  1376     0812  3420               	retlw	32	;' '
  1377     0813  3457               	retlw	87	;'W'
  1378     0814  3472               	retlw	114	;'r'
  1379     0815  3469               	retlw	105	;'i'
  1380     0816  3474               	retlw	116	;'t'
  1381     0817  3474               	retlw	116	;'t'
  1382     0818  3465               	retlw	101	;'e'
  1383     0819  346E               	retlw	110	;'n'
  1384     081A  3420               	retlw	32	;' '
  1385     081B  3444               	retlw	68	;'D'
  1386     081C  3461               	retlw	97	;'a'
  1387     081D  3474               	retlw	116	;'t'
  1388     081E  3461               	retlw	97	;'a'
  1389     081F  343A               	retlw	58	;':'
  1390     0820  3420               	retlw	32	;' '
  1391     0821  3400               	retlw	0
  1392                           
  1393                           	psect	stringtext3
  1394     0822                     __pstringtext3:
  1395     0822                     STR_3:
  1396     0822  3452               	retlw	82	;'R'
  1397     0823  3465               	retlw	101	;'e'
  1398     0824  3461               	retlw	97	;'a'
  1399     0825  3464               	retlw	100	;'d'
  1400     0826  3469               	retlw	105	;'i'
  1401     0827  346E               	retlw	110	;'n'
  1402     0828  3467               	retlw	103	;'g'
  1403     0829  3420               	retlw	32	;' '
  1404     082A  3445               	retlw	69	;'E'
  1405     082B  3445               	retlw	69	;'E'
  1406     082C  3450               	retlw	80	;'P'
  1407     082D  3452               	retlw	82	;'R'
  1408     082E  344F               	retlw	79	;'O'
  1409     082F  344D               	retlw	77	;'M'
  1410     0830  340A               	retlw	10
  1411     0831  3400               	retlw	0
  1412                           
  1413                           	psect	stringtext4
  1414     0832                     __pstringtext4:
  1415     0832                     STR_1:
  1416     0832  3457               	retlw	87	;'W'
  1417     0833  3472               	retlw	114	;'r'
  1418     0834  3469               	retlw	105	;'i'
  1419     0835  3474               	retlw	116	;'t'
  1420     0836  3469               	retlw	105	;'i'
  1421     0837  346E               	retlw	110	;'n'
  1422     0838  3467               	retlw	103	;'g'
  1423     0839  3420               	retlw	32	;' '
  1424     083A  3445               	retlw	69	;'E'
  1425     083B  3445               	retlw	69	;'E'
  1426     083C  3450               	retlw	80	;'P'
  1427     083D  3452               	retlw	82	;'R'
  1428     083E  344F               	retlw	79	;'O'
  1429     083F  344D               	retlw	77	;'M'
  1430     0840  340A               	retlw	10
  1431     0841  3400               	retlw	0
  1432                           
  1433                           	psect	stringtext5
  1434     0842                     __pstringtext5:
  1435     0842                     STR_4:
  1436     0842  3457               	retlw	87	;'W'
  1437     0843  346F               	retlw	111	;'o'
  1438     0844  3472               	retlw	114	;'r'
  1439     0845  3464               	retlw	100	;'d'
  1440     0846  3420               	retlw	32	;' '
  1441     0847  3441               	retlw	65	;'A'
  1442     0848  3464               	retlw	100	;'d'
  1443     0849  3464               	retlw	100	;'d'
  1444     084A  3472               	retlw	114	;'r'
  1445     084B  3465               	retlw	101	;'e'
  1446     084C  3473               	retlw	115	;'s'
  1447     084D  3473               	retlw	115	;'s'
  1448     084E  343A               	retlw	58	;':'
  1449     084F  3420               	retlw	32	;' '
  1450     0850  3400               	retlw	0
  1451                           
  1452                           	psect	stringtext6
  1453     0851                     __pstringtext6:
  1454     0851                     STR_6:
  1455     0851  342C               	retlw	44	;','
  1456     0852  3420               	retlw	32	;' '
  1457     0853  3452               	retlw	82	;'R'
  1458     0854  3465               	retlw	101	;'e'
  1459     0855  3461               	retlw	97	;'a'
  1460     0856  3464               	retlw	100	;'d'
  1461     0857  3420               	retlw	32	;' '
  1462     0858  3444               	retlw	68	;'D'
  1463     0859  3461               	retlw	97	;'a'
  1464     085A  3474               	retlw	116	;'t'
  1465     085B  3461               	retlw	97	;'a'
  1466     085C  343A               	retlw	58	;':'
  1467     085D  3420               	retlw	32	;' '
  1468     085E  3400               	retlw	0
  1469                           
  1470                           	psect	stringtext7
  1471     0000                     __pstringtext7:
  1472     0830                     
  1473                           	psect	cinit
  1474     07FD                     start_initialization:	
  1475                           ; #config settings
  1476                           
  1477     07FD                     __initialization:
  1478     07FD                     end_of_initialization:	
  1479                           ;End of C runtime variable initialization code
  1480                           
  1481     07FD                     __end_of__initialization:
  1482     07FD  0020               	movlb	0
  1483     07FE  3186  2E48         	ljmp	_main	;jump to C main() function
  1484                           
  1485                           	psect	cstackCOMMON
  1486     0070                     __pcstackCOMMON:
  1487     0070                     ?_Send_I2C_StartBit:
  1488     0070                     ??_Send_I2C_StartBit:	
  1489                           ; 1 bytes @ 0x0
  1490                           
  1491     0070                     ?_Send_I2C_ControlByte:	
  1492                           ; 1 bytes @ 0x0
  1493                           
  1494     0070                     ?_Send_I2C_Data:	
  1495                           ; 1 bytes @ 0x0
  1496                           
  1497     0070                     ?_Send_I2C_StopBit:	
  1498                           ; 1 bytes @ 0x0
  1499                           
  1500     0070                     ??_Send_I2C_StopBit:	
  1501                           ; 1 bytes @ 0x0
  1502                           
  1503     0070                     ?_Send_I2C_NAK:	
  1504                           ; 1 bytes @ 0x0
  1505                           
  1506     0070                     ??_Send_I2C_NAK:	
  1507                           ; 1 bytes @ 0x0
  1508                           
  1509     0070                     ?_internal_32:	
  1510                           ; 1 bytes @ 0x0
  1511                           
  1512     0070                     ??_internal_32:	
  1513                           ; 1 bytes @ 0x0
  1514                           
  1515     0070                     ?_I2C_Init:	
  1516                           ; 1 bytes @ 0x0
  1517                           
  1518     0070                     ??_I2C_Init:	
  1519                           ; 1 bytes @ 0x0
  1520                           
  1521     0070                     ?_initMain:	
  1522                           ; 1 bytes @ 0x0
  1523                           
  1524     0070                     ??_initMain:	
  1525                           ; 1 bytes @ 0x0
  1526                           
  1527     0070                     ?_main:	
  1528                           ; 1 bytes @ 0x0
  1529                           
  1530     0070                     ?_EUSART_Write:	
  1531                           ; 1 bytes @ 0x0
  1532                           
  1533     0070                     ??_EUSART_Write:	
  1534                           ; 1 bytes @ 0x0
  1535                           
  1536     0070                     ?_Read_I2C_Data:	
  1537                           ; 1 bytes @ 0x0
  1538                           
  1539     0070                     ?___wmul:	
  1540                           ; 2 bytes @ 0x0
  1541                           
  1542     0070                     ?___awdiv:	
  1543                           ; 2 bytes @ 0x0
  1544                           
  1545     0070                     ?___awmod:	
  1546                           ; 2 bytes @ 0x0
  1547                           
  1548     0070                     ?___aldiv:	
  1549                           ; 2 bytes @ 0x0
  1550                           
  1551     0070                     EUSART_Write@txData:	
  1552                           ; 4 bytes @ 0x0
  1553                           
  1554     0070                     Send_I2C_Data@databyte:	
  1555                           ; 1 bytes @ 0x0
  1556                           
  1557     0070                     Send_I2C_ControlByte@BlockAddress:	
  1558                           ; 2 bytes @ 0x0
  1559                           
  1560     0070                     ___wmul@multiplier:	
  1561                           ; 2 bytes @ 0x0
  1562                           
  1563     0070                     ___awdiv@divisor:	
  1564                           ; 2 bytes @ 0x0
  1565                           
  1566     0070                     ___awmod@divisor:	
  1567                           ; 2 bytes @ 0x0
  1568                           
  1569     0070                     ___aldiv@divisor:	
  1570                           ; 2 bytes @ 0x0
  1571                           
  1572                           
  1573                           ; 4 bytes @ 0x0
  1574     0070                     	ds	1
  1575     0071                     ?_EUSART_Write_Text:
  1576     0071                     EUSART_Write_Text@text:	
  1577                           ; 1 bytes @ 0x1
  1578                           
  1579                           
  1580                           ; 2 bytes @ 0x1
  1581     0071                     	ds	1
  1582     0072                     ??_Send_I2C_Data:
  1583     0072                     ??_Read_I2C_Data:	
  1584                           ; 1 bytes @ 0x2
  1585                           
  1586     0072                     Send_I2C_ControlByte@RW_bit:	
  1587                           ; 1 bytes @ 0x2
  1588                           
  1589     0072                     ___wmul@multiplicand:	
  1590                           ; 2 bytes @ 0x2
  1591                           
  1592     0072                     ___awdiv@dividend:	
  1593                           ; 2 bytes @ 0x2
  1594                           
  1595     0072                     ___awmod@dividend:	
  1596                           ; 2 bytes @ 0x2
  1597                           
  1598                           
  1599                           ; 2 bytes @ 0x2
  1600     0072                     	ds	1
  1601     0073                     ??_EUSART_Write_Text:
  1602                           
  1603                           ; 1 bytes @ 0x3
  1604     0073                     	ds	1
  1605     0074                     ??_Send_I2C_ControlByte:
  1606     0074                     ??___wmul:	
  1607                           ; 1 bytes @ 0x4
  1608                           
  1609     0074                     ??___awdiv:	
  1610                           ; 1 bytes @ 0x4
  1611                           
  1612     0074                     ??___awmod:	
  1613                           ; 1 bytes @ 0x4
  1614                           
  1615     0074                     EUSART_Write_Text@i:	
  1616                           ; 1 bytes @ 0x4
  1617                           
  1618     0074                     ___wmul@product:	
  1619                           ; 2 bytes @ 0x4
  1620                           
  1621     0074                     ___aldiv@dividend:	
  1622                           ; 2 bytes @ 0x4
  1623                           
  1624                           
  1625                           ; 4 bytes @ 0x4
  1626     0074                     	ds	1
  1627     0075                     ___awdiv@counter:
  1628     0075                     ___awmod@counter:	
  1629                           ; 1 bytes @ 0x5
  1630                           
  1631                           
  1632                           ; 1 bytes @ 0x5
  1633     0075                     	ds	1
  1634     0076                     ?_EEPROM_Write:
  1635     0076                     ?_EEPROM_Read:	
  1636                           ; 1 bytes @ 0x6
  1637                           
  1638     0076                     EEPROM_Write@word_address:	
  1639                           ; 1 bytes @ 0x6
  1640                           
  1641     0076                     EEPROM_Read@word_address:	
  1642                           ; 1 bytes @ 0x6
  1643                           
  1644     0076                     ___awdiv@sign:	
  1645                           ; 1 bytes @ 0x6
  1646                           
  1647     0076                     ___awmod@sign:	
  1648                           ; 1 bytes @ 0x6
  1649                           
  1650                           
  1651                           ; 1 bytes @ 0x6
  1652     0076                     	ds	1
  1653     0077                     ??_EEPROM_Read:
  1654     0077                     EEPROM_Write@eeprom_data:	
  1655                           ; 1 bytes @ 0x7
  1656                           
  1657     0077                     ___awdiv@quotient:	
  1658                           ; 1 bytes @ 0x7
  1659                           
  1660                           
  1661                           ; 2 bytes @ 0x7
  1662     0077                     	ds	1
  1663     0078                     ??_EEPROM_Write:
  1664     0078                     ??___aldiv:	
  1665                           ; 1 bytes @ 0x8
  1666                           
  1667                           
  1668                           ; 1 bytes @ 0x8
  1669     0078                     	ds	1
  1670     0079                     ?_itoa:
  1671     0079                     EEPROM_Read@incoming_data:	
  1672                           ; 1 bytes @ 0x9
  1673                           
  1674     0079                     EUSART_Initialize@x:	
  1675                           ; 1 bytes @ 0x9
  1676                           
  1677     0079                     itoa@d:	
  1678                           ; 2 bytes @ 0x9
  1679                           
  1680                           
  1681                           ; 2 bytes @ 0x9
  1682     0079                     	ds	1
  1683     007A                     EEPROM_Write@block_address:
  1684     007A                     EEPROM_Read@block_address:	
  1685                           ; 1 bytes @ 0xA
  1686                           
  1687                           
  1688                           ; 1 bytes @ 0xA
  1689     007A                     	ds	1
  1690     007B                     ?_EUSART_Write_Integer:
  1691     007B                     ??_itoa:	
  1692                           ; 1 bytes @ 0xB
  1693                           
  1694     007B                     EUSART_Write_Integer@value_to_send:	
  1695                           ; 1 bytes @ 0xB
  1696                           
  1697                           
  1698                           ; 2 bytes @ 0xB
  1699     007B                     	ds	2
  1700     007D                     ??_EUSART_Write_Integer:
  1701                           
  1702                           ; 1 bytes @ 0xD
  1703     007D                     	ds	1
  1704                           
  1705                           	psect	cstackBANK0
  1706     0020                     __pcstackBANK0:
  1707     0020                     ___aldiv@counter:
  1708     0020                     itoa@num:	
  1709                           ; 1 bytes @ 0x0
  1710                           
  1711                           
  1712                           ; 2 bytes @ 0x0
  1713     0020                     	ds	1
  1714     0021                     ___aldiv@sign:
  1715                           
  1716                           ; 1 bytes @ 0x1
  1717     0021                     	ds	1
  1718     0022                     itoa@temp:
  1719     0022                     ___aldiv@quotient:	
  1720                           ; 2 bytes @ 0x2
  1721                           
  1722                           
  1723                           ; 4 bytes @ 0x2
  1724     0022                     	ds	2
  1725     0024                     itoa@buf:
  1726                           
  1727                           ; 1 bytes @ 0x4
  1728     0024                     	ds	1
  1729     0025                     itoa@div:
  1730                           
  1731                           ; 2 bytes @ 0x5
  1732     0025                     	ds	1
  1733     0026                     ?_EUSART_Initialize:
  1734     0026                     EUSART_Initialize@baudrate:	
  1735                           ; 1 bytes @ 0x6
  1736                           
  1737                           
  1738                           ; 4 bytes @ 0x6
  1739     0026                     	ds	1
  1740     0027                     EUSART_Write_Integer@buffer:
  1741                           
  1742                           ; 20 bytes @ 0x7
  1743     0027                     	ds	3
  1744     002A                     ??_EUSART_Initialize:
  1745                           
  1746                           ; 1 bytes @ 0xA
  1747     002A                     	ds	17
  1748     003B                     EUSART_Write_Integer@ptr:
  1749                           
  1750                           ; 1 bytes @ 0x1B
  1751     003B                     	ds	1
  1752     003C                     EUSART_Write_Integer@temp_ptr:
  1753                           
  1754                           ; 1 bytes @ 0x1C
  1755     003C                     	ds	1
  1756     003D                     ??_main:
  1757                           
  1758                           ; 1 bytes @ 0x1D
  1759     003D                     	ds	2
  1760     003F                     main@read_data:
  1761                           
  1762                           ; 1 bytes @ 0x1F
  1763     003F                     	ds	1
  1764     0040                     main@block_address:
  1765                           
  1766                           ; 1 bytes @ 0x20
  1767     0040                     	ds	1
  1768     0041                     main@eeprom_data:
  1769                           
  1770                           ; 1 bytes @ 0x21
  1771     0041                     	ds	1
  1772     0042                     main@word_address:
  1773                           
  1774                           ; 1 bytes @ 0x22
  1775     0042                     	ds	1
  1776                           
  1777                           	psect	maintext
  1778     0648                     __pmaintext:	
  1779 ;;
  1780 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1781 ;;
  1782 ;; *************** function _main *****************
  1783 ;; Defined at:
  1784 ;;		line 142 in file "main.c"
  1785 ;; Parameters:    Size  Location     Type
  1786 ;;		None
  1787 ;; Auto vars:     Size  Location     Type
  1788 ;;  read_data       1   31[BANK0 ] unsigned char 
  1789 ;;  x               2    0        int 
  1790 ;;  word_address    1   34[BANK0 ] unsigned char 
  1791 ;;  eeprom_data     1   33[BANK0 ] unsigned char 
  1792 ;;  block_addres    1   32[BANK0 ] unsigned char 
  1793 ;; Return value:  Size  Location     Type
  1794 ;;                  1    wreg      void 
  1795 ;; Registers used:
  1796 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1797 ;; Tracked objects:
  1798 ;;		On entry : B1F/0
  1799 ;;		On exit  : 0/0
  1800 ;;		Unchanged: 0/0
  1801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1803 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1804 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1805 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1806 ;;Total ram usage:        6 bytes
  1807 ;; Hardware stack levels required when called: 3
  1808 ;; This function calls:
  1809 ;;		_EEPROM_Read
  1810 ;;		_EEPROM_Write
  1811 ;;		_EUSART_Initialize
  1812 ;;		_EUSART_Write_Integer
  1813 ;;		_EUSART_Write_Text
  1814 ;;		_I2C_Init
  1815 ;;		_initMain
  1816 ;; This function is called by:
  1817 ;;		Startup code after reset
  1818 ;; This function uses a non-reentrant model
  1819 ;;
  1820                           
  1821     0648                     _main:	
  1822                           ;psect for function _main
  1823                           
  1824     0648                     l1469:	
  1825                           ;incstack = 0
  1826                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1827                           
  1828                           
  1829                           ;main.c: 143:     initMain();
  1830     0648  3184  24B4  3186   	fcall	_initMain
  1831                           
  1832                           ;main.c: 146:     EUSART_Initialize(19200);
  1833     064B  3000               	movlw	0
  1834     064C  0020               	movlb	0	; select bank0
  1835     064D  00A9               	movwf	EUSART_Initialize@baudrate+3
  1836     064E  3000               	movlw	0
  1837     064F  00A8               	movwf	EUSART_Initialize@baudrate+2
  1838     0650  304B               	movlw	75
  1839     0651  00A7               	movwf	EUSART_Initialize@baudrate+1
  1840     0652  3000               	movlw	0
  1841     0653  00A6               	movwf	EUSART_Initialize@baudrate
  1842     0654  3185  2546  3186   	fcall	_EUSART_Initialize
  1843                           
  1844                           ;main.c: 149:     I2C_Init();
  1845     0657  3183  23EE  3186   	fcall	_I2C_Init
  1846     065A                     l1471:
  1847                           
  1848                           ;main.c: 151:     _delay((unsigned long)((100)*(32000000/4000.0)));
  1849     065A  3005               	movlw	5
  1850     065B  0020               	movlb	0	; select bank0
  1851     065C  00BE               	movwf	??_main+1
  1852     065D  300F               	movlw	15
  1853     065E  00BD               	movwf	??_main
  1854     065F  30F1               	movlw	241
  1855     0660                     u1007:
  1856     0660  0B89               	decfsz	9,f
  1857     0661  2E60               	goto	u1007
  1858     0662  0BBD               	decfsz	??_main,f
  1859     0663  2E60               	goto	u1007
  1860     0664  0BBE               	decfsz	??_main+1,f
  1861     0665  2E60               	goto	u1007
  1862     0666                     l1473:
  1863                           
  1864                           ;main.c: 153:     unsigned char block_address = 0x55;
  1865     0666  3055               	movlw	85
  1866     0667  0020               	movlb	0	; select bank0
  1867     0668  00C0               	movwf	main@block_address
  1868     0669                     l1475:
  1869                           
  1870                           ;main.c: 154:     unsigned char word_address = 0;
  1871     0669  01C2               	clrf	main@word_address
  1872     066A                     l1477:
  1873                           
  1874                           ;main.c: 155:     unsigned char eeprom_data = 8;
  1875     066A  3008               	movlw	8
  1876     066B  00C1               	movwf	main@eeprom_data
  1877     066C                     l1479:
  1878     066C                     l1481:
  1879                           
  1880                           ;main.c: 160:         EEPROM_Write(block_address, word_address, eeprom_data);
  1881     066C  0020               	movlb	0	; select bank0
  1882     066D  0842               	movf	main@word_address,w
  1883     066E  00F6               	movwf	EEPROM_Write@word_address
  1884     066F  0841               	movf	main@eeprom_data,w
  1885     0670  00F7               	movwf	EEPROM_Write@eeprom_data
  1886     0671  0840               	movf	main@block_address,w
  1887     0672  3184  2471  3186   	fcall	_EEPROM_Write
  1888     0675                     l1483:
  1889                           
  1890                           ;main.c: 161:         unsigned char read_data = EEPROM_Read(block_address, word_address)
      +                          ;
  1891     0675  0020               	movlb	0	; select bank0
  1892     0676  0842               	movf	main@word_address,w
  1893     0677  00F6               	movwf	EEPROM_Read@word_address
  1894     0678  0840               	movf	main@block_address,w
  1895     0679  3184  24FA  3186   	fcall	_EEPROM_Read
  1896     067C  0020               	movlb	0	; select bank0
  1897     067D  00BF               	movwf	main@read_data
  1898     067E                     l1485:
  1899                           
  1900                           ;main.c: 163:         EUSART_Write_Text("Word Address: ");
  1901     067E  3042               	movlw	low (STR_4| (0+32768))
  1902     067F  00F1               	movwf	EUSART_Write_Text@text
  1903     0680  3088               	movlw	high (STR_4| (0+32768))
  1904     0681  00F2               	movwf	EUSART_Write_Text@text+1
  1905     0682  3184  2411  3186   	fcall	_EUSART_Write_Text
  1906     0685                     l1487:
  1907                           
  1908                           ;main.c: 164:         EUSART_Write_Integer(word_address);
  1909     0685  0020               	movlb	0	; select bank0
  1910     0686  0842               	movf	main@word_address,w
  1911     0687  00BD               	movwf	??_main
  1912     0688  01BE               	clrf	??_main+1
  1913     0689  083D               	movf	??_main,w
  1914     068A  00FB               	movwf	EUSART_Write_Integer@value_to_send
  1915     068B  083E               	movf	??_main+1,w
  1916     068C  00FC               	movwf	EUSART_Write_Integer@value_to_send+1
  1917     068D  3184  244D  3186   	fcall	_EUSART_Write_Integer
  1918     0690                     l1489:
  1919                           
  1920                           ;main.c: 166:         EUSART_Write_Text(", Written Data: ");
  1921     0690  3011               	movlw	low (STR_5| (0+32768))
  1922     0691  00F1               	movwf	EUSART_Write_Text@text
  1923     0692  3088               	movlw	high (STR_5| (0+32768))
  1924     0693  00F2               	movwf	EUSART_Write_Text@text+1
  1925     0694  3184  2411  3186   	fcall	_EUSART_Write_Text
  1926     0697                     l1491:
  1927                           
  1928                           ;main.c: 167:         EUSART_Write_Integer(eeprom_data);
  1929     0697  0020               	movlb	0	; select bank0
  1930     0698  0841               	movf	main@eeprom_data,w
  1931     0699  00BD               	movwf	??_main
  1932     069A  01BE               	clrf	??_main+1
  1933     069B  083D               	movf	??_main,w
  1934     069C  00FB               	movwf	EUSART_Write_Integer@value_to_send
  1935     069D  083E               	movf	??_main+1,w
  1936     069E  00FC               	movwf	EUSART_Write_Integer@value_to_send+1
  1937     069F  3184  244D  3186   	fcall	_EUSART_Write_Integer
  1938     06A2                     l1493:
  1939                           
  1940                           ;main.c: 169:         EUSART_Write_Text(", Read Data: ");
  1941     06A2  3051               	movlw	low (STR_6| (0+32768))
  1942     06A3  00F1               	movwf	EUSART_Write_Text@text
  1943     06A4  3088               	movlw	high (STR_6| (0+32768))
  1944     06A5  00F2               	movwf	EUSART_Write_Text@text+1
  1945     06A6  3184  2411  3186   	fcall	_EUSART_Write_Text
  1946     06A9                     l1495:
  1947                           
  1948                           ;main.c: 170:         EUSART_Write_Integer(read_data);
  1949     06A9  0020               	movlb	0	; select bank0
  1950     06AA  083F               	movf	main@read_data,w
  1951     06AB  00BD               	movwf	??_main
  1952     06AC  01BE               	clrf	??_main+1
  1953     06AD  083D               	movf	??_main,w
  1954     06AE  00FB               	movwf	EUSART_Write_Integer@value_to_send
  1955     06AF  083E               	movf	??_main+1,w
  1956     06B0  00FC               	movwf	EUSART_Write_Integer@value_to_send+1
  1957     06B1  3184  244D  3186   	fcall	_EUSART_Write_Integer
  1958     06B4                     l1497:
  1959                           
  1960                           ;main.c: 171:         EUSART_Write_Text("\n");
  1961     06B4  3030               	movlw	low ((STR_3+14)| (0+32768))
  1962     06B5  00F1               	movwf	EUSART_Write_Text@text
  1963     06B6  3088               	movlw	high ((STR_3+14)| (0+32768))
  1964     06B7  00F2               	movwf	EUSART_Write_Text@text+1
  1965     06B8  3184  2411  3186   	fcall	_EUSART_Write_Text
  1966     06BB                     l1499:
  1967                           
  1968                           ;main.c: 173:         eeprom_data+=2;
  1969     06BB  3002               	movlw	2
  1970     06BC  0020               	movlb	0	; select bank0
  1971     06BD  00BD               	movwf	??_main
  1972     06BE  083D               	movf	??_main,w
  1973     06BF  07C1               	addwf	main@eeprom_data,f
  1974     06C0                     l1501:
  1975                           
  1976                           ;main.c: 174:         word_address++;
  1977     06C0  3001               	movlw	1
  1978     06C1  00BD               	movwf	??_main
  1979     06C2  083D               	movf	??_main,w
  1980     06C3  07C2               	addwf	main@word_address,f
  1981     06C4                     l1503:
  1982                           
  1983                           ;main.c: 177:         _delay((unsigned long)((5000)*(32000000/4000.0)));
  1984     06C4  30CB               	movlw	203
  1985     06C5  0020               	movlb	0	; select bank0
  1986     06C6  00BE               	movwf	??_main+1
  1987     06C7  30EC               	movlw	236
  1988     06C8  00BD               	movwf	??_main
  1989     06C9  3084               	movlw	132
  1990     06CA                     u1017:
  1991     06CA  0B89               	decfsz	9,f
  1992     06CB  2ECA               	goto	u1017
  1993     06CC  0BBD               	decfsz	??_main,f
  1994     06CD  2ECA               	goto	u1017
  1995     06CE  0BBE               	decfsz	??_main+1,f
  1996     06CF  2ECA               	goto	u1017
  1997     06D0  0000               	nop
  1998     06D1  2E6C               	goto	l1481
  1999     06D2  3180  2802         	ljmp	start
  2000     06D4                     __end_of_main:
  2001                           
  2002                           	psect	text1
  2003     04B4                     __ptext1:	
  2004 ;; *************** function _initMain *****************
  2005 ;; Defined at:
  2006 ;;		line 86 in file "main.c"
  2007 ;; Parameters:    Size  Location     Type
  2008 ;;		None
  2009 ;; Auto vars:     Size  Location     Type
  2010 ;;		None
  2011 ;; Return value:  Size  Location     Type
  2012 ;;                  1    wreg      void 
  2013 ;; Registers used:
  2014 ;;		wreg, status,2, status,0, pclath, cstack
  2015 ;; Tracked objects:
  2016 ;;		On entry : 0/0
  2017 ;;		On exit  : 0/0
  2018 ;;		Unchanged: 0/0
  2019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2022 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2023 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2024 ;;Total ram usage:        1 bytes
  2025 ;; Hardware stack levels used: 1
  2026 ;; Hardware stack levels required when called: 1
  2027 ;; This function calls:
  2028 ;;		_internal_32
  2029 ;; This function is called by:
  2030 ;;		_main
  2031 ;; This function uses a non-reentrant model
  2032 ;;
  2033                           
  2034     04B4                     _initMain:	
  2035                           ;psect for function _initMain
  2036                           
  2037     04B4                     l1383:	
  2038                           ;incstack = 0
  2039                           ; Regs used in _initMain: [wreg+status,2+status,0+pclath+cstack]
  2040                           
  2041                           
  2042                           ;main.c: 89:     internal_32();
  2043     04B4  3183  23A4  3184   	fcall	_internal_32
  2044     04B7                     l1385:
  2045                           
  2046                           ;main.c: 92:     _delay((unsigned long)((10)*(32000000/4000.0)));
  2047     04B7  3068               	movlw	104
  2048     04B8  00F0               	movwf	??_initMain
  2049     04B9  30E4               	movlw	228
  2050     04BA                     u1027:
  2051     04BA  0B89               	decfsz	9,f
  2052     04BB  2CBA               	goto	u1027
  2053     04BC  0BF0               	decfsz	??_initMain,f
  2054     04BD  2CBA               	goto	u1027
  2055     04BE  3200               	nop2
  2056     04BF                     l1387:
  2057                           
  2058                           ;main.c: 95:     TRISDbits.TRISD1 = 0;
  2059     04BF  0021               	movlb	1	; select bank1
  2060     04C0  108F               	bcf	15,1	;volatile
  2061     04C1                     l1389:
  2062                           
  2063                           ;main.c: 98:     LATDbits.LATD1 = 0;
  2064     04C1  0022               	movlb	2	; select bank2
  2065     04C2  108F               	bcf	15,1	;volatile
  2066     04C3                     l1391:
  2067                           
  2068                           ;main.c: 101:     TRISD = 0;
  2069     04C3  0021               	movlb	1	; select bank1
  2070     04C4  018F               	clrf	15	;volatile
  2071     04C5                     l1393:
  2072                           
  2073                           ;main.c: 102:     ANSELD = 0;
  2074     04C5  0023               	movlb	3	; select bank3
  2075     04C6  018F               	clrf	15	;volatile
  2076     04C7                     l1395:
  2077                           
  2078                           ;main.c: 104:     TRISBbits.TRISB2 = 0;
  2079     04C7  0021               	movlb	1	; select bank1
  2080     04C8  110D               	bcf	13,2	;volatile
  2081     04C9                     l1397:
  2082                           
  2083                           ;main.c: 105:     ANSELBbits.ANSB2 = 0;
  2084     04C9  0023               	movlb	3	; select bank3
  2085     04CA  110D               	bcf	13,2	;volatile
  2086     04CB                     l1399:
  2087                           
  2088                           ;main.c: 108:     ANSELCbits.ANSC4 = 0;
  2089     04CB  120E               	bcf	14,4	;volatile
  2090     04CC                     l1401:
  2091                           
  2092                           ;main.c: 109:     ANSELCbits.ANSC5 = 0;
  2093     04CC  128E               	bcf	14,5	;volatile
  2094     04CD                     l1403:
  2095                           
  2096                           ;main.c: 111:     TRISCbits.TRISC4 = 1;
  2097     04CD  0021               	movlb	1	; select bank1
  2098     04CE  160E               	bsf	14,4	;volatile
  2099     04CF                     l1405:
  2100                           
  2101                           ;main.c: 112:     TRISCbits.TRISC5 = 1;
  2102     04CF  168E               	bsf	14,5	;volatile
  2103     04D0                     l1407:
  2104                           
  2105                           ;main.c: 117:     PPSLOCK = 0x55;
  2106     04D0  3055               	movlw	85
  2107     04D1  003C               	movlb	28	; select bank28
  2108     04D2  008F               	movwf	15	;volsfr
  2109     04D3                     l1409:
  2110                           
  2111                           ;main.c: 118:     PPSLOCK = 0xAA;
  2112     04D3  30AA               	movlw	170
  2113     04D4  008F               	movwf	15	;volsfr
  2114     04D5                     l1411:
  2115                           
  2116                           ;main.c: 119:     PPSLOCKbits.PPSLOCKED = 0x00;
  2117     04D5  100F               	bcf	15,0	;volsfr
  2118     04D6                     l1413:
  2119                           
  2120                           ;main.c: 121:     RB2PPSbits.RB2PPS = 0x14;
  2121     04D6  003D               	movlb	29	; select bank29
  2122     04D7  081A               	movf	26,w	;volatile
  2123     04D8  39E0               	andlw	-32
  2124     04D9  3814               	iorlw	20
  2125     04DA  009A               	movwf	26	;volatile
  2126     04DB                     l1415:
  2127                           
  2128                           ;main.c: 122:     RXPPSbits.RXPPS = 0x0B;
  2129     04DB  003C               	movlb	28	; select bank28
  2130     04DC  0824               	movf	36,w	;volatile
  2131     04DD  39E0               	andlw	-32
  2132     04DE  380B               	iorlw	11
  2133     04DF  00A4               	movwf	36	;volatile
  2134     04E0                     l1417:
  2135                           
  2136                           ;main.c: 124:     RC4PPSbits.RC4PPS = 0x0011;
  2137     04E0  003D               	movlb	29	; select bank29
  2138     04E1  0824               	movf	36,w	;volatile
  2139     04E2  39E0               	andlw	-32
  2140     04E3  3811               	iorlw	17
  2141     04E4  00A4               	movwf	36	;volatile
  2142     04E5                     l1419:
  2143                           
  2144                           ;main.c: 125:     SSPDATPPSbits.SSPDATPPS = 0x0014;
  2145     04E5  003C               	movlb	28	; select bank28
  2146     04E6  0821               	movf	33,w	;volatile
  2147     04E7  39E0               	andlw	-32
  2148     04E8  3814               	iorlw	20
  2149     04E9  00A1               	movwf	33	;volatile
  2150     04EA                     l1421:
  2151                           
  2152                           ;main.c: 126:     SSPCLKPPSbits.SSPCLKPPS = 0x0015;
  2153     04EA  0820               	movf	32,w	;volatile
  2154     04EB  39E0               	andlw	-32
  2155     04EC  3815               	iorlw	21
  2156     04ED  00A0               	movwf	32	;volatile
  2157     04EE                     l1423:
  2158                           
  2159                           ;main.c: 127:     RC5PPSbits.RC5PPS = 0x0010;
  2160     04EE  003D               	movlb	29	; select bank29
  2161     04EF  0825               	movf	37,w	;volatile
  2162     04F0  39E0               	andlw	-32
  2163     04F1  3810               	iorlw	16
  2164     04F2  00A5               	movwf	37	;volatile
  2165     04F3                     l1425:
  2166                           
  2167                           ;main.c: 129:     PPSLOCK = 0x55;
  2168     04F3  3055               	movlw	85
  2169     04F4  003C               	movlb	28	; select bank28
  2170     04F5  008F               	movwf	15	;volsfr
  2171     04F6                     l1427:
  2172                           
  2173                           ;main.c: 130:     PPSLOCK = 0xAA;
  2174     04F6  30AA               	movlw	170
  2175     04F7  008F               	movwf	15	;volsfr
  2176     04F8                     l1429:
  2177                           
  2178                           ;main.c: 131:     PPSLOCKbits.PPSLOCKED = 0x01;
  2179     04F8  140F               	bsf	15,0	;volsfr
  2180     04F9                     l65:
  2181     04F9  0008               	return
  2182     04FA                     __end_of_initMain:
  2183                           
  2184                           	psect	text2
  2185     03A4                     __ptext2:	
  2186 ;; *************** function _internal_32 *****************
  2187 ;; Defined at:
  2188 ;;		line 32 in file "PIC16F1719_Internal.c"
  2189 ;; Parameters:    Size  Location     Type
  2190 ;;		None
  2191 ;; Auto vars:     Size  Location     Type
  2192 ;;		None
  2193 ;; Return value:  Size  Location     Type
  2194 ;;                  1    wreg      void 
  2195 ;; Registers used:
  2196 ;;		None
  2197 ;; Tracked objects:
  2198 ;;		On entry : 0/0
  2199 ;;		On exit  : 0/0
  2200 ;;		Unchanged: 0/0
  2201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2206 ;;Total ram usage:        0 bytes
  2207 ;; Hardware stack levels used: 1
  2208 ;; This function calls:
  2209 ;;		Nothing
  2210 ;; This function is called by:
  2211 ;;		_initMain
  2212 ;; This function uses a non-reentrant model
  2213 ;;
  2214                           
  2215     03A4                     _internal_32:	
  2216                           ;psect for function _internal_32
  2217                           
  2218     03A4                     l1283:	
  2219                           ;incstack = 0
  2220                           ; Regs used in _internal_32: []
  2221                           
  2222                           
  2223                           ;PIC16F1719_Internal.c: 34:     SCS0 = 0;
  2224     03A4  0021               	movlb	1	; select bank1
  2225     03A5  1019               	bcf	25,0	;volatile
  2226                           
  2227                           ;PIC16F1719_Internal.c: 35:     SCS1 = 0;
  2228     03A6  1099               	bcf	25,1	;volatile
  2229                           
  2230                           ;PIC16F1719_Internal.c: 38:     IRCF0 = 0;
  2231     03A7  1199               	bcf	25,3	;volatile
  2232                           
  2233                           ;PIC16F1719_Internal.c: 39:     IRCF1 = 1;
  2234     03A8  1619               	bsf	25,4	;volatile
  2235                           
  2236                           ;PIC16F1719_Internal.c: 40:     IRCF2 = 1;
  2237     03A9  1699               	bsf	25,5	;volatile
  2238                           
  2239                           ;PIC16F1719_Internal.c: 41:     IRCF3 = 1;
  2240     03AA  1719               	bsf	25,6	;volatile
  2241                           
  2242                           ;PIC16F1719_Internal.c: 44:     SPLLEN = 1;
  2243     03AB  1799               	bsf	25,7	;volatile
  2244     03AC                     l90:
  2245     03AC  0008               	return
  2246     03AD                     __end_of_internal_32:
  2247                           
  2248                           	psect	text3
  2249     03EE                     __ptext3:	
  2250 ;; *************** function _I2C_Init *****************
  2251 ;; Defined at:
  2252 ;;		line 19 in file "I2C.c"
  2253 ;; Parameters:    Size  Location     Type
  2254 ;;		None
  2255 ;; Auto vars:     Size  Location     Type
  2256 ;;		None
  2257 ;; Return value:  Size  Location     Type
  2258 ;;                  1    wreg      void 
  2259 ;; Registers used:
  2260 ;;		wreg, status,2, status,0
  2261 ;; Tracked objects:
  2262 ;;		On entry : 0/0
  2263 ;;		On exit  : 0/0
  2264 ;;		Unchanged: 0/0
  2265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2268 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2269 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2270 ;;Total ram usage:        1 bytes
  2271 ;; Hardware stack levels used: 1
  2272 ;; This function calls:
  2273 ;;		Nothing
  2274 ;; This function is called by:
  2275 ;;		_main
  2276 ;; This function uses a non-reentrant model
  2277 ;;
  2278                           
  2279     03EE                     _I2C_Init:	
  2280                           ;psect for function _I2C_Init
  2281                           
  2282     03EE                     l1449:	
  2283                           ;incstack = 0
  2284                           ; Regs used in _I2C_Init: [wreg+status,2+status,0]
  2285                           
  2286                           
  2287                           ;I2C.c: 25:     SSPCONbits.SSPM=0x08;
  2288     03EE  0024               	movlb	4	; select bank4
  2289     03EF  0815               	movf	21,w	;volatile
  2290     03F0  39F0               	andlw	-16
  2291     03F1  3808               	iorlw	8
  2292     03F2  0095               	movwf	21	;volatile
  2293     03F3                     l1451:
  2294                           
  2295                           ;I2C.c: 26:     SSPCONbits.SSPEN=1;
  2296     03F3  1695               	bsf	21,5	;volatile
  2297     03F4                     l1453:
  2298                           
  2299                           ;I2C.c: 38:     SSPADD = 79;
  2300     03F4  304F               	movlw	79
  2301     03F5  0092               	movwf	18	;volatile
  2302     03F6                     l1455:
  2303                           
  2304                           ;I2C.c: 42:     _delay((unsigned long)((10)*(32000000/4000.0)));
  2305     03F6  3068               	movlw	104
  2306     03F7  00F0               	movwf	??_I2C_Init
  2307     03F8  30E4               	movlw	228
  2308     03F9                     u1037:
  2309     03F9  0B89               	decfsz	9,f
  2310     03FA  2BF9               	goto	u1037
  2311     03FB  0BF0               	decfsz	??_I2C_Init,f
  2312     03FC  2BF9               	goto	u1037
  2313     03FD  3200               	nop2
  2314     03FE                     l123:
  2315     03FE  0008               	return
  2316     03FF                     __end_of_I2C_Init:
  2317                           
  2318                           	psect	text4
  2319     044D                     __ptext4:	
  2320 ;; *************** function _EUSART_Write_Integer *****************
  2321 ;; Defined at:
  2322 ;;		line 165 in file "EUSART.c"
  2323 ;; Parameters:    Size  Location     Type
  2324 ;;  value_to_sen    2   11[COMMON] int 
  2325 ;; Auto vars:     Size  Location     Type
  2326 ;;  buffer         20    7[BANK0 ] unsigned char [20]
  2327 ;;  temp_ptr        1   28[BANK0 ] PTR unsigned char 
  2328 ;;		 -> EUSART_Write_Integer@buffer(20), 
  2329 ;;  ptr             1   27[BANK0 ] PTR unsigned char 
  2330 ;;		 -> EUSART_Write_Integer@buffer(20), 
  2331 ;; Return value:  Size  Location     Type
  2332 ;;                  1    wreg      void 
  2333 ;; Registers used:
  2334 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2335 ;; Tracked objects:
  2336 ;;		On entry : 0/0
  2337 ;;		On exit  : 0/0
  2338 ;;		Unchanged: 0/0
  2339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2340 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2341 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2342 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2343 ;;      Totals:         3      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2344 ;;Total ram usage:       25 bytes
  2345 ;; Hardware stack levels used: 1
  2346 ;; Hardware stack levels required when called: 2
  2347 ;; This function calls:
  2348 ;;		_EUSART_Write
  2349 ;;		_itoa
  2350 ;; This function is called by:
  2351 ;;		_main
  2352 ;; This function uses a non-reentrant model
  2353 ;;
  2354                           
  2355     044D                     _EUSART_Write_Integer:	
  2356                           ;psect for function _EUSART_Write_Integer
  2357                           
  2358     044D                     l1457:	
  2359                           ;incstack = 0
  2360                           ; Regs used in _EUSART_Write_Integer: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2361                           
  2362                           
  2363                           ;EUSART.c: 166:     char buffer[20];;EUSART.c: 167:     char *ptr = buffer;
  2364     044D  3027               	movlw	(low (EUSART_Write_Integer@buffer| 0))& (0+255)
  2365     044E  0020               	movlb	0	; select bank0
  2366     044F  00BB               	movwf	EUSART_Write_Integer@ptr
  2367     0450                     l1459:
  2368                           
  2369                           ;EUSART.c: 169:     itoa(&ptr, value_to_send);
  2370     0450  087C               	movf	EUSART_Write_Integer@value_to_send+1,w
  2371     0451  00FA               	movwf	itoa@d+1
  2372     0452  087B               	movf	EUSART_Write_Integer@value_to_send,w
  2373     0453  00F9               	movwf	itoa@d
  2374     0454  303B               	movlw	(low (EUSART_Write_Integer@ptr| 0))& (0+255)
  2375     0455  3187  2764  3184   	fcall	_itoa
  2376     0458                     l1461:
  2377                           
  2378                           ;EUSART.c: 172:     char *temp_ptr = buffer;
  2379     0458  3027               	movlw	(low (EUSART_Write_Integer@buffer| 0))& (0+255)
  2380     0459  0020               	movlb	0	; select bank0
  2381     045A  00BC               	movwf	EUSART_Write_Integer@temp_ptr
  2382                           
  2383                           ;EUSART.c: 173:     while (*temp_ptr != '\0') {
  2384     045B  2C68               	goto	l1467
  2385     045C                     l1463:
  2386                           
  2387                           ;EUSART.c: 174:         EUSART_Write(*temp_ptr++);
  2388     045C  083C               	movf	EUSART_Write_Integer@temp_ptr,w
  2389     045D  0086               	movwf	6
  2390     045E  0187               	clrf	7
  2391     045F  0801               	movf	1,w
  2392     0460  3183  23AD  3184   	fcall	_EUSART_Write
  2393     0463                     l1465:
  2394     0463  3001               	movlw	1
  2395     0464  00FD               	movwf	??_EUSART_Write_Integer
  2396     0465  087D               	movf	??_EUSART_Write_Integer,w
  2397     0466  0020               	movlb	0	; select bank0
  2398     0467  07BC               	addwf	EUSART_Write_Integer@temp_ptr,f
  2399     0468                     l1467:
  2400                           
  2401                           ;EUSART.c: 173:     while (*temp_ptr != '\0') {
  2402     0468  083C               	movf	EUSART_Write_Integer@temp_ptr,w
  2403     0469  0086               	movwf	6
  2404     046A  0187               	clrf	7
  2405     046B  0801               	movf	1,w
  2406     046C  1D03               	btfss	3,2
  2407     046D  2C6F               	goto	u991
  2408     046E  2C70               	goto	u990
  2409     046F                     u991:
  2410     046F  2C5C               	goto	l1463
  2411     0470                     u990:
  2412     0470                     l237:
  2413     0470  0008               	return
  2414     0471                     __end_of_EUSART_Write_Integer:
  2415                           
  2416                           	psect	text5
  2417     0764                     __ptext5:	
  2418 ;; *************** function _itoa *****************
  2419 ;; Defined at:
  2420 ;;		line 141 in file "EUSART.c"
  2421 ;; Parameters:    Size  Location     Type
  2422 ;;  buf             1    wreg     PTR PTR unsigned char 
  2423 ;;		 -> EUSART_Write_Integer@ptr(1), 
  2424 ;;  d               2    9[COMMON] int 
  2425 ;; Auto vars:     Size  Location     Type
  2426 ;;  buf             1    4[BANK0 ] PTR PTR unsigned char 
  2427 ;;		 -> EUSART_Write_Integer@ptr(1), 
  2428 ;;  num             2    0[BANK0 ] int 
  2429 ;;  div             2    5[BANK0 ] int 
  2430 ;;  temp            2    2[BANK0 ] int 
  2431 ;; Return value:  Size  Location     Type
  2432 ;;                  1    wreg      void 
  2433 ;; Registers used:
  2434 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2435 ;; Tracked objects:
  2436 ;;		On entry : 0/0
  2437 ;;		On exit  : 0/0
  2438 ;;		Unchanged: 0/0
  2439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2440 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2441 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2443 ;;      Totals:         2       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2444 ;;Total ram usage:        9 bytes
  2445 ;; Hardware stack levels used: 1
  2446 ;; Hardware stack levels required when called: 1
  2447 ;; This function calls:
  2448 ;;		___awdiv
  2449 ;;		___awmod
  2450 ;;		___wmul
  2451 ;; This function is called by:
  2452 ;;		_EUSART_Write_Integer
  2453 ;; This function uses a non-reentrant model
  2454 ;;
  2455                           
  2456     0764                     _itoa:	
  2457                           ;psect for function _itoa
  2458                           
  2459                           
  2460                           ;incstack = 0
  2461                           ; Regs used in _itoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2462                           ;itoa@buf stored from wreg
  2463     0764  0020               	movlb	0	; select bank0
  2464     0765  00A4               	movwf	itoa@buf
  2465     0766                     l1285:
  2466                           
  2467                           ;EUSART.c: 142:     int div = 1;
  2468     0766  3001               	movlw	1
  2469     0767  00A5               	movwf	itoa@div
  2470     0768  3000               	movlw	0
  2471     0769  00A6               	movwf	itoa@div+1
  2472                           
  2473                           ;EUSART.c: 143:     if (d < 0) {
  2474     076A  1FFA               	btfss	itoa@d+1,7
  2475     076B  2F6D               	goto	u841
  2476     076C  2F6E               	goto	u840
  2477     076D                     u841:
  2478     076D  2F7C               	goto	l1291
  2479     076E                     u840:
  2480     076E                     l1287:
  2481                           
  2482                           ;EUSART.c: 144:         *((*buf)++) = '-';
  2483     076E  0824               	movf	itoa@buf,w
  2484     076F  0086               	movwf	6
  2485     0770  0187               	clrf	7
  2486     0771  3F40               	moviw [0]fsr1
  2487     0772  0084               	movwf	4
  2488     0773  0185               	clrf	5
  2489     0774  0A81               	incf	1,f
  2490     0775  302D               	movlw	45
  2491     0776  0080               	movwf	0
  2492     0777                     l1289:
  2493                           
  2494                           ;EUSART.c: 145:         d = -d;
  2495     0777  09F9               	comf	itoa@d,f
  2496     0778  09FA               	comf	itoa@d+1,f
  2497     0779  0AF9               	incf	itoa@d,f
  2498     077A  1903               	skipnz
  2499     077B  0AFA               	incf	itoa@d+1,f
  2500     077C                     l1291:
  2501                           
  2502                           ;EUSART.c: 148:     int temp = d;
  2503     077C  087A               	movf	itoa@d+1,w
  2504     077D  00A3               	movwf	itoa@temp+1
  2505     077E  0879               	movf	itoa@d,w
  2506     077F  00A2               	movwf	itoa@temp
  2507                           
  2508                           ;EUSART.c: 149:     while (temp / 10) {
  2509     0780  2FA2               	goto	l225
  2510     0781                     l1293:
  2511                           
  2512                           ;EUSART.c: 150:         temp /= 10;
  2513     0781  300A               	movlw	10
  2514     0782  00F0               	movwf	___awdiv@divisor
  2515     0783  3000               	movlw	0
  2516     0784  00F1               	movwf	___awdiv@divisor+1
  2517     0785  0020               	movlb	0	; select bank0
  2518     0786  0823               	movf	itoa@temp+1,w
  2519     0787  00F3               	movwf	___awdiv@dividend+1
  2520     0788  0822               	movf	itoa@temp,w
  2521     0789  00F2               	movwf	___awdiv@dividend
  2522     078A  3185  25E9  3187   	fcall	___awdiv
  2523     078D  0871               	movf	?___awdiv+1,w
  2524     078E  0020               	movlb	0	; select bank0
  2525     078F  00A3               	movwf	itoa@temp+1
  2526     0790  0870               	movf	?___awdiv,w
  2527     0791  00A2               	movwf	itoa@temp
  2528                           
  2529                           ;EUSART.c: 151:         div *= 10;
  2530     0792  300A               	movlw	10
  2531     0793  00F0               	movwf	___wmul@multiplier
  2532     0794  3000               	movlw	0
  2533     0795  00F1               	movwf	___wmul@multiplier+1
  2534     0796  0826               	movf	itoa@div+1,w
  2535     0797  00F3               	movwf	___wmul@multiplicand+1
  2536     0798  0825               	movf	itoa@div,w
  2537     0799  00F2               	movwf	___wmul@multiplicand
  2538     079A  3184  242E  3187   	fcall	___wmul
  2539     079D  0871               	movf	?___wmul+1,w
  2540     079E  0020               	movlb	0	; select bank0
  2541     079F  00A6               	movwf	itoa@div+1
  2542     07A0  0870               	movf	?___wmul,w
  2543     07A1  00A5               	movwf	itoa@div
  2544     07A2                     l225:	
  2545                           ;EUSART.c: 152:     }
  2546                           
  2547                           
  2548                           ;EUSART.c: 149:     while (temp / 10) {
  2549     07A2  300A               	movlw	10
  2550     07A3  00F0               	movwf	___awdiv@divisor
  2551     07A4  3000               	movlw	0
  2552     07A5  00F1               	movwf	___awdiv@divisor+1
  2553     07A6  0823               	movf	itoa@temp+1,w
  2554     07A7  00F3               	movwf	___awdiv@dividend+1
  2555     07A8  0822               	movf	itoa@temp,w
  2556     07A9  00F2               	movwf	___awdiv@dividend
  2557     07AA  3185  25E9  3187   	fcall	___awdiv
  2558     07AD  0870               	movf	?___awdiv,w
  2559     07AE  0471               	iorwf	?___awdiv+1,w
  2560     07AF  1D03               	btfss	3,2
  2561     07B0  2FB2               	goto	u851
  2562     07B1  2FB3               	goto	u850
  2563     07B2                     u851:
  2564     07B2  2F81               	goto	l1293
  2565     07B3                     u850:
  2566     07B3  2FEE               	goto	l1299
  2567     07B4                     l1295:
  2568                           
  2569                           ;EUSART.c: 155:         int num = d / div;
  2570     07B4  0826               	movf	itoa@div+1,w
  2571     07B5  00F1               	movwf	___awdiv@divisor+1
  2572     07B6  0825               	movf	itoa@div,w
  2573     07B7  00F0               	movwf	___awdiv@divisor
  2574     07B8  087A               	movf	itoa@d+1,w
  2575     07B9  00F3               	movwf	___awdiv@dividend+1
  2576     07BA  0879               	movf	itoa@d,w
  2577     07BB  00F2               	movwf	___awdiv@dividend
  2578     07BC  3185  25E9  3187   	fcall	___awdiv
  2579     07BF  0871               	movf	?___awdiv+1,w
  2580     07C0  0020               	movlb	0	; select bank0
  2581     07C1  00A1               	movwf	itoa@num+1
  2582     07C2  0870               	movf	?___awdiv,w
  2583     07C3  00A0               	movwf	itoa@num
  2584                           
  2585                           ;EUSART.c: 156:         d %= div;
  2586     07C4  0826               	movf	itoa@div+1,w
  2587     07C5  00F1               	movwf	___awmod@divisor+1
  2588     07C6  0825               	movf	itoa@div,w
  2589     07C7  00F0               	movwf	___awmod@divisor
  2590     07C8  087A               	movf	itoa@d+1,w
  2591     07C9  00F3               	movwf	___awmod@dividend+1
  2592     07CA  0879               	movf	itoa@d,w
  2593     07CB  00F2               	movwf	___awmod@dividend
  2594     07CC  3185  2596  3187   	fcall	___awmod
  2595     07CF  0871               	movf	?___awmod+1,w
  2596     07D0  00FA               	movwf	itoa@d+1
  2597     07D1  0870               	movf	?___awmod,w
  2598     07D2  00F9               	movwf	itoa@d
  2599                           
  2600                           ;EUSART.c: 157:         div /= 10;
  2601     07D3  300A               	movlw	10
  2602     07D4  00F0               	movwf	___awdiv@divisor
  2603     07D5  3000               	movlw	0
  2604     07D6  00F1               	movwf	___awdiv@divisor+1
  2605     07D7  0020               	movlb	0	; select bank0
  2606     07D8  0826               	movf	itoa@div+1,w
  2607     07D9  00F3               	movwf	___awdiv@dividend+1
  2608     07DA  0825               	movf	itoa@div,w
  2609     07DB  00F2               	movwf	___awdiv@dividend
  2610     07DC  3185  25E9  3187   	fcall	___awdiv
  2611     07DF  0871               	movf	?___awdiv+1,w
  2612     07E0  0020               	movlb	0	; select bank0
  2613     07E1  00A6               	movwf	itoa@div+1
  2614     07E2  0870               	movf	?___awdiv,w
  2615     07E3  00A5               	movwf	itoa@div
  2616     07E4                     l1297:
  2617                           
  2618                           ;EUSART.c: 158:         *((*buf)++) = num + '0';
  2619     07E4  0824               	movf	itoa@buf,w
  2620     07E5  0086               	movwf	6
  2621     07E6  0187               	clrf	7
  2622     07E7  3F40               	moviw [0]fsr1
  2623     07E8  0084               	movwf	4
  2624     07E9  0185               	clrf	5
  2625     07EA  0A81               	incf	1,f
  2626     07EB  0820               	movf	itoa@num,w
  2627     07EC  3E30               	addlw	48
  2628     07ED  0080               	movwf	0
  2629     07EE                     l1299:
  2630                           
  2631                           ;EUSART.c: 154:     while (div != 0) {
  2632     07EE  0020               	movlb	0	; select bank0
  2633     07EF  0825               	movf	itoa@div,w
  2634     07F0  0426               	iorwf	itoa@div+1,w
  2635     07F1  1D03               	btfss	3,2
  2636     07F2  2FF4               	goto	u861
  2637     07F3  2FF5               	goto	u860
  2638     07F4                     u861:
  2639     07F4  2FB4               	goto	l1295
  2640     07F5                     u860:
  2641     07F5                     l1301:
  2642                           
  2643                           ;EUSART.c: 160:     *(*buf) = '\0';
  2644     07F5  0824               	movf	itoa@buf,w
  2645     07F6  0086               	movwf	6
  2646     07F7  0187               	clrf	7
  2647     07F8  0801               	movf	1,w
  2648     07F9  0086               	movwf	6
  2649     07FA  0187               	clrf	7
  2650     07FB  0181               	clrf	1
  2651     07FC                     l231:
  2652     07FC  0008               	return
  2653     07FD                     __end_of_itoa:
  2654                           
  2655                           	psect	text6
  2656     042E                     __ptext6:	
  2657 ;; *************** function ___wmul *****************
  2658 ;; Defined at:
  2659 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  2660 ;; Parameters:    Size  Location     Type
  2661 ;;  multiplier      2    0[COMMON] unsigned int 
  2662 ;;  multiplicand    2    2[COMMON] unsigned int 
  2663 ;; Auto vars:     Size  Location     Type
  2664 ;;  product         2    4[COMMON] unsigned int 
  2665 ;; Return value:  Size  Location     Type
  2666 ;;                  2    0[COMMON] unsigned int 
  2667 ;; Registers used:
  2668 ;;		wreg, status,2, status,0
  2669 ;; Tracked objects:
  2670 ;;		On entry : 0/0
  2671 ;;		On exit  : 0/0
  2672 ;;		Unchanged: 0/0
  2673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2674 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2675 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2677 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2678 ;;Total ram usage:        6 bytes
  2679 ;; Hardware stack levels used: 1
  2680 ;; This function calls:
  2681 ;;		Nothing
  2682 ;; This function is called by:
  2683 ;;		_itoa
  2684 ;; This function uses a non-reentrant model
  2685 ;;
  2686                           
  2687     042E                     ___wmul:	
  2688                           ;psect for function ___wmul
  2689                           
  2690     042E                     l1159:	
  2691                           ;incstack = 0
  2692                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2693                           
  2694     042E  01F4               	clrf	___wmul@product
  2695     042F  01F5               	clrf	___wmul@product+1
  2696     0430                     l1161:
  2697     0430  1C70               	btfss	___wmul@multiplier,0
  2698     0431  2C33               	goto	u541
  2699     0432  2C34               	goto	u540
  2700     0433                     u541:
  2701     0433  2C38               	goto	l305
  2702     0434                     u540:
  2703     0434                     l1163:
  2704     0434  0872               	movf	___wmul@multiplicand,w
  2705     0435  07F4               	addwf	___wmul@product,f
  2706     0436  0873               	movf	___wmul@multiplicand+1,w
  2707     0437  3DF5               	addwfc	___wmul@product+1,f
  2708     0438                     l305:
  2709     0438  3001               	movlw	1
  2710     0439                     u555:
  2711     0439  35F2               	lslf	___wmul@multiplicand,f
  2712     043A  0DF3               	rlf	___wmul@multiplicand+1,f
  2713     043B  0B89               	decfsz	9,f
  2714     043C  2C39               	goto	u555
  2715     043D                     l1165:
  2716     043D  3001               	movlw	1
  2717     043E                     u565:
  2718     043E  36F1               	lsrf	___wmul@multiplier+1,f
  2719     043F  0CF0               	rrf	___wmul@multiplier,f
  2720     0440  0B89               	decfsz	9,f
  2721     0441  2C3E               	goto	u565
  2722     0442                     l1167:
  2723     0442  0870               	movf	___wmul@multiplier,w
  2724     0443  0471               	iorwf	___wmul@multiplier+1,w
  2725     0444  1D03               	btfss	3,2
  2726     0445  2C47               	goto	u571
  2727     0446  2C48               	goto	u570
  2728     0447                     u571:
  2729     0447  2C30               	goto	l1161
  2730     0448                     u570:
  2731     0448                     l1169:
  2732     0448  0875               	movf	___wmul@product+1,w
  2733     0449  00F1               	movwf	?___wmul+1
  2734     044A  0874               	movf	___wmul@product,w
  2735     044B  00F0               	movwf	?___wmul
  2736     044C                     l307:
  2737     044C  0008               	return
  2738     044D                     __end_of___wmul:
  2739                           
  2740                           	psect	text7
  2741     0596                     __ptext7:	
  2742 ;; *************** function ___awmod *****************
  2743 ;; Defined at:
  2744 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  2745 ;; Parameters:    Size  Location     Type
  2746 ;;  divisor         2    0[COMMON] int 
  2747 ;;  dividend        2    2[COMMON] int 
  2748 ;; Auto vars:     Size  Location     Type
  2749 ;;  sign            1    6[COMMON] unsigned char 
  2750 ;;  counter         1    5[COMMON] unsigned char 
  2751 ;; Return value:  Size  Location     Type
  2752 ;;                  2    0[COMMON] int 
  2753 ;; Registers used:
  2754 ;;		wreg, status,2, status,0
  2755 ;; Tracked objects:
  2756 ;;		On entry : 0/0
  2757 ;;		On exit  : 0/0
  2758 ;;		Unchanged: 0/0
  2759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2760 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2761 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2762 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2763 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2764 ;;Total ram usage:        7 bytes
  2765 ;; Hardware stack levels used: 1
  2766 ;; This function calls:
  2767 ;;		Nothing
  2768 ;; This function is called by:
  2769 ;;		_itoa
  2770 ;; This function uses a non-reentrant model
  2771 ;;
  2772                           
  2773     0596                     ___awmod:	
  2774                           ;psect for function ___awmod
  2775                           
  2776     0596                     l1217:	
  2777                           ;incstack = 0
  2778                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2779                           
  2780     0596  01F6               	clrf	___awmod@sign
  2781     0597                     l1219:
  2782     0597  1FF3               	btfss	___awmod@dividend+1,7
  2783     0598  2D9A               	goto	u681
  2784     0599  2D9B               	goto	u680
  2785     059A                     u681:
  2786     059A  2DA2               	goto	l1225
  2787     059B                     u680:
  2788     059B                     l1221:
  2789     059B  09F2               	comf	___awmod@dividend,f
  2790     059C  09F3               	comf	___awmod@dividend+1,f
  2791     059D  0AF2               	incf	___awmod@dividend,f
  2792     059E  1903               	skipnz
  2793     059F  0AF3               	incf	___awmod@dividend+1,f
  2794     05A0                     l1223:
  2795     05A0  01F6               	clrf	___awmod@sign
  2796     05A1  0AF6               	incf	___awmod@sign,f
  2797     05A2                     l1225:
  2798     05A2  1FF1               	btfss	___awmod@divisor+1,7
  2799     05A3  2DA5               	goto	u691
  2800     05A4  2DA6               	goto	u690
  2801     05A5                     u691:
  2802     05A5  2DAB               	goto	l1229
  2803     05A6                     u690:
  2804     05A6                     l1227:
  2805     05A6  09F0               	comf	___awmod@divisor,f
  2806     05A7  09F1               	comf	___awmod@divisor+1,f
  2807     05A8  0AF0               	incf	___awmod@divisor,f
  2808     05A9  1903               	skipnz
  2809     05AA  0AF1               	incf	___awmod@divisor+1,f
  2810     05AB                     l1229:
  2811     05AB  0870               	movf	___awmod@divisor,w
  2812     05AC  0471               	iorwf	___awmod@divisor+1,w
  2813     05AD  1903               	btfsc	3,2
  2814     05AE  2DB0               	goto	u701
  2815     05AF  2DB1               	goto	u700
  2816     05B0                     u701:
  2817     05B0  2DDA               	goto	l1247
  2818     05B1                     u700:
  2819     05B1                     l1231:
  2820     05B1  01F5               	clrf	___awmod@counter
  2821     05B2  0AF5               	incf	___awmod@counter,f
  2822     05B3  2DBD               	goto	l1237
  2823     05B4                     l1233:
  2824     05B4  3001               	movlw	1
  2825     05B5                     u715:
  2826     05B5  35F0               	lslf	___awmod@divisor,f
  2827     05B6  0DF1               	rlf	___awmod@divisor+1,f
  2828     05B7  0B89               	decfsz	9,f
  2829     05B8  2DB5               	goto	u715
  2830     05B9                     l1235:
  2831     05B9  3001               	movlw	1
  2832     05BA  00F4               	movwf	??___awmod
  2833     05BB  0874               	movf	??___awmod,w
  2834     05BC  07F5               	addwf	___awmod@counter,f
  2835     05BD                     l1237:
  2836     05BD  1FF1               	btfss	___awmod@divisor+1,7
  2837     05BE  2DC0               	goto	u721
  2838     05BF  2DC1               	goto	u720
  2839     05C0                     u721:
  2840     05C0  2DB4               	goto	l1233
  2841     05C1                     u720:
  2842     05C1                     l1239:
  2843     05C1  0871               	movf	___awmod@divisor+1,w
  2844     05C2  0273               	subwf	___awmod@dividend+1,w
  2845     05C3  1D03               	skipz
  2846     05C4  2DC7               	goto	u735
  2847     05C5  0870               	movf	___awmod@divisor,w
  2848     05C6  0272               	subwf	___awmod@dividend,w
  2849     05C7                     u735:
  2850     05C7  1C03               	skipc
  2851     05C8  2DCA               	goto	u731
  2852     05C9  2DCB               	goto	u730
  2853     05CA                     u731:
  2854     05CA  2DCF               	goto	l1243
  2855     05CB                     u730:
  2856     05CB                     l1241:
  2857     05CB  0870               	movf	___awmod@divisor,w
  2858     05CC  02F2               	subwf	___awmod@dividend,f
  2859     05CD  0871               	movf	___awmod@divisor+1,w
  2860     05CE  3BF3               	subwfb	___awmod@dividend+1,f
  2861     05CF                     l1243:
  2862     05CF  3001               	movlw	1
  2863     05D0                     u745:
  2864     05D0  36F1               	lsrf	___awmod@divisor+1,f
  2865     05D1  0CF0               	rrf	___awmod@divisor,f
  2866     05D2  0B89               	decfsz	9,f
  2867     05D3  2DD0               	goto	u745
  2868     05D4                     l1245:
  2869     05D4  3001               	movlw	1
  2870     05D5  02F5               	subwf	___awmod@counter,f
  2871     05D6  1D03               	btfss	3,2
  2872     05D7  2DD9               	goto	u751
  2873     05D8  2DDA               	goto	u750
  2874     05D9                     u751:
  2875     05D9  2DC1               	goto	l1239
  2876     05DA                     u750:
  2877     05DA                     l1247:
  2878     05DA  0876               	movf	___awmod@sign,w
  2879     05DB  1903               	btfsc	3,2
  2880     05DC  2DDE               	goto	u761
  2881     05DD  2DDF               	goto	u760
  2882     05DE                     u761:
  2883     05DE  2DE4               	goto	l1251
  2884     05DF                     u760:
  2885     05DF                     l1249:
  2886     05DF  09F2               	comf	___awmod@dividend,f
  2887     05E0  09F3               	comf	___awmod@dividend+1,f
  2888     05E1  0AF2               	incf	___awmod@dividend,f
  2889     05E2  1903               	skipnz
  2890     05E3  0AF3               	incf	___awmod@dividend+1,f
  2891     05E4                     l1251:
  2892     05E4  0873               	movf	___awmod@dividend+1,w
  2893     05E5  00F1               	movwf	?___awmod+1
  2894     05E6  0872               	movf	___awmod@dividend,w
  2895     05E7  00F0               	movwf	?___awmod
  2896     05E8                     l471:
  2897     05E8  0008               	return
  2898     05E9                     __end_of___awmod:
  2899                           
  2900                           	psect	text8
  2901     05E9                     __ptext8:	
  2902 ;; *************** function ___awdiv *****************
  2903 ;; Defined at:
  2904 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  2905 ;; Parameters:    Size  Location     Type
  2906 ;;  divisor         2    0[COMMON] int 
  2907 ;;  dividend        2    2[COMMON] int 
  2908 ;; Auto vars:     Size  Location     Type
  2909 ;;  quotient        2    7[COMMON] int 
  2910 ;;  sign            1    6[COMMON] unsigned char 
  2911 ;;  counter         1    5[COMMON] unsigned char 
  2912 ;; Return value:  Size  Location     Type
  2913 ;;                  2    0[COMMON] int 
  2914 ;; Registers used:
  2915 ;;		wreg, status,2, status,0
  2916 ;; Tracked objects:
  2917 ;;		On entry : 0/0
  2918 ;;		On exit  : 0/0
  2919 ;;		Unchanged: 0/0
  2920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2921 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2922 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2923 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2924 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2925 ;;Total ram usage:        9 bytes
  2926 ;; Hardware stack levels used: 1
  2927 ;; This function calls:
  2928 ;;		Nothing
  2929 ;; This function is called by:
  2930 ;;		_itoa
  2931 ;; This function uses a non-reentrant model
  2932 ;;
  2933                           
  2934     05E9                     ___awdiv:	
  2935                           ;psect for function ___awdiv
  2936                           
  2937     05E9                     l1173:	
  2938                           ;incstack = 0
  2939                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2940                           
  2941     05E9  01F6               	clrf	___awdiv@sign
  2942     05EA                     l1175:
  2943     05EA  1FF1               	btfss	___awdiv@divisor+1,7
  2944     05EB  2DED               	goto	u581
  2945     05EC  2DEE               	goto	u580
  2946     05ED                     u581:
  2947     05ED  2DF5               	goto	l1181
  2948     05EE                     u580:
  2949     05EE                     l1177:
  2950     05EE  09F0               	comf	___awdiv@divisor,f
  2951     05EF  09F1               	comf	___awdiv@divisor+1,f
  2952     05F0  0AF0               	incf	___awdiv@divisor,f
  2953     05F1  1903               	skipnz
  2954     05F2  0AF1               	incf	___awdiv@divisor+1,f
  2955     05F3                     l1179:
  2956     05F3  01F6               	clrf	___awdiv@sign
  2957     05F4  0AF6               	incf	___awdiv@sign,f
  2958     05F5                     l1181:
  2959     05F5  1FF3               	btfss	___awdiv@dividend+1,7
  2960     05F6  2DF8               	goto	u591
  2961     05F7  2DF9               	goto	u590
  2962     05F8                     u591:
  2963     05F8  2E02               	goto	l1187
  2964     05F9                     u590:
  2965     05F9                     l1183:
  2966     05F9  09F2               	comf	___awdiv@dividend,f
  2967     05FA  09F3               	comf	___awdiv@dividend+1,f
  2968     05FB  0AF2               	incf	___awdiv@dividend,f
  2969     05FC  1903               	skipnz
  2970     05FD  0AF3               	incf	___awdiv@dividend+1,f
  2971     05FE                     l1185:
  2972     05FE  3001               	movlw	1
  2973     05FF  00F4               	movwf	??___awdiv
  2974     0600  0874               	movf	??___awdiv,w
  2975     0601  06F6               	xorwf	___awdiv@sign,f
  2976     0602                     l1187:
  2977     0602  01F7               	clrf	___awdiv@quotient
  2978     0603  01F8               	clrf	___awdiv@quotient+1
  2979     0604                     l1189:
  2980     0604  0870               	movf	___awdiv@divisor,w
  2981     0605  0471               	iorwf	___awdiv@divisor+1,w
  2982     0606  1903               	btfsc	3,2
  2983     0607  2E09               	goto	u601
  2984     0608  2E0A               	goto	u600
  2985     0609                     u601:
  2986     0609  2E39               	goto	l1209
  2987     060A                     u600:
  2988     060A                     l1191:
  2989     060A  01F5               	clrf	___awdiv@counter
  2990     060B  0AF5               	incf	___awdiv@counter,f
  2991     060C  2E16               	goto	l1197
  2992     060D                     l1193:
  2993     060D  3001               	movlw	1
  2994     060E                     u615:
  2995     060E  35F0               	lslf	___awdiv@divisor,f
  2996     060F  0DF1               	rlf	___awdiv@divisor+1,f
  2997     0610  0B89               	decfsz	9,f
  2998     0611  2E0E               	goto	u615
  2999     0612                     l1195:
  3000     0612  3001               	movlw	1
  3001     0613  00F4               	movwf	??___awdiv
  3002     0614  0874               	movf	??___awdiv,w
  3003     0615  07F5               	addwf	___awdiv@counter,f
  3004     0616                     l1197:
  3005     0616  1FF1               	btfss	___awdiv@divisor+1,7
  3006     0617  2E19               	goto	u621
  3007     0618  2E1A               	goto	u620
  3008     0619                     u621:
  3009     0619  2E0D               	goto	l1193
  3010     061A                     u620:
  3011     061A                     l1199:
  3012     061A  3001               	movlw	1
  3013     061B                     u635:
  3014     061B  35F7               	lslf	___awdiv@quotient,f
  3015     061C  0DF8               	rlf	___awdiv@quotient+1,f
  3016     061D  0B89               	decfsz	9,f
  3017     061E  2E1B               	goto	u635
  3018     061F  0871               	movf	___awdiv@divisor+1,w
  3019     0620  0273               	subwf	___awdiv@dividend+1,w
  3020     0621  1D03               	skipz
  3021     0622  2E25               	goto	u645
  3022     0623  0870               	movf	___awdiv@divisor,w
  3023     0624  0272               	subwf	___awdiv@dividend,w
  3024     0625                     u645:
  3025     0625  1C03               	skipc
  3026     0626  2E28               	goto	u641
  3027     0627  2E29               	goto	u640
  3028     0628                     u641:
  3029     0628  2E2E               	goto	l1205
  3030     0629                     u640:
  3031     0629                     l1201:
  3032     0629  0870               	movf	___awdiv@divisor,w
  3033     062A  02F2               	subwf	___awdiv@dividend,f
  3034     062B  0871               	movf	___awdiv@divisor+1,w
  3035     062C  3BF3               	subwfb	___awdiv@dividend+1,f
  3036     062D                     l1203:
  3037     062D  1477               	bsf	___awdiv@quotient,0
  3038     062E                     l1205:
  3039     062E  3001               	movlw	1
  3040     062F                     u655:
  3041     062F  36F1               	lsrf	___awdiv@divisor+1,f
  3042     0630  0CF0               	rrf	___awdiv@divisor,f
  3043     0631  0B89               	decfsz	9,f
  3044     0632  2E2F               	goto	u655
  3045     0633                     l1207:
  3046     0633  3001               	movlw	1
  3047     0634  02F5               	subwf	___awdiv@counter,f
  3048     0635  1D03               	btfss	3,2
  3049     0636  2E38               	goto	u661
  3050     0637  2E39               	goto	u660
  3051     0638                     u661:
  3052     0638  2E1A               	goto	l1199
  3053     0639                     u660:
  3054     0639                     l1209:
  3055     0639  0876               	movf	___awdiv@sign,w
  3056     063A  1903               	btfsc	3,2
  3057     063B  2E3D               	goto	u671
  3058     063C  2E3E               	goto	u670
  3059     063D                     u671:
  3060     063D  2E43               	goto	l1213
  3061     063E                     u670:
  3062     063E                     l1211:
  3063     063E  09F7               	comf	___awdiv@quotient,f
  3064     063F  09F8               	comf	___awdiv@quotient+1,f
  3065     0640  0AF7               	incf	___awdiv@quotient,f
  3066     0641  1903               	skipnz
  3067     0642  0AF8               	incf	___awdiv@quotient+1,f
  3068     0643                     l1213:
  3069     0643  0878               	movf	___awdiv@quotient+1,w
  3070     0644  00F1               	movwf	?___awdiv+1
  3071     0645  0877               	movf	___awdiv@quotient,w
  3072     0646  00F0               	movwf	?___awdiv
  3073     0647                     l458:
  3074     0647  0008               	return
  3075     0648                     __end_of___awdiv:
  3076                           
  3077                           	psect	text9
  3078     0546                     __ptext9:	
  3079 ;; *************** function _EUSART_Initialize *****************
  3080 ;; Defined at:
  3081 ;;		line 36 in file "EUSART.c"
  3082 ;; Parameters:    Size  Location     Type
  3083 ;;  baudrate        4    6[BANK0 ] const long 
  3084 ;; Auto vars:     Size  Location     Type
  3085 ;;  x               2    9[COMMON] unsigned int 
  3086 ;; Return value:  Size  Location     Type
  3087 ;;                  1    wreg      unsigned char 
  3088 ;; Registers used:
  3089 ;;		wreg, status,2, status,0, pclath, cstack
  3090 ;; Tracked objects:
  3091 ;;		On entry : 0/0
  3092 ;;		On exit  : 0/0
  3093 ;;		Unchanged: 0/0
  3094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3095 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3096 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3097 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3098 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3099 ;;Total ram usage:       18 bytes
  3100 ;; Hardware stack levels used: 1
  3101 ;; Hardware stack levels required when called: 1
  3102 ;; This function calls:
  3103 ;;		___aldiv
  3104 ;; This function is called by:
  3105 ;;		_main
  3106 ;; This function uses a non-reentrant model
  3107 ;;
  3108                           
  3109     0546                     _EUSART_Initialize:	
  3110                           ;psect for function _EUSART_Initialize
  3111                           
  3112     0546                     l1431:	
  3113                           ;incstack = 0
  3114                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3115                           
  3116                           
  3117                           ;EUSART.c: 36: char EUSART_Initialize(const long int baudrate);EUSART.c: 37: {;EUSART.c:
      +                           38:     unsigned int x;;EUSART.c: 39:  x = (32000000 - baudrate*64)/(baudrate*64);
  3118     0546  0020               	movlb	0	; select bank0
  3119     0547  0826               	movf	EUSART_Initialize@baudrate,w
  3120     0548  00AA               	movwf	??_EUSART_Initialize
  3121     0549  0827               	movf	EUSART_Initialize@baudrate+1,w
  3122     054A  00AB               	movwf	??_EUSART_Initialize+1
  3123     054B  0828               	movf	EUSART_Initialize@baudrate+2,w
  3124     054C  00AC               	movwf	??_EUSART_Initialize+2
  3125     054D  0829               	movf	EUSART_Initialize@baudrate+3,w
  3126     054E  00AD               	movwf	??_EUSART_Initialize+3
  3127     054F  3006               	movlw	6
  3128     0550                     u975:
  3129     0550  35AA               	lslf	??_EUSART_Initialize,f
  3130     0551  0DAB               	rlf	??_EUSART_Initialize+1,f
  3131     0552  0DAC               	rlf	??_EUSART_Initialize+2,f
  3132     0553  0DAD               	rlf	??_EUSART_Initialize+3,f
  3133     0554                     u970:
  3134     0554  0B89               	decfsz	9,f
  3135     0555  2D50               	goto	u975
  3136     0556  082D               	movf	??_EUSART_Initialize+3,w
  3137     0557  00F3               	movwf	___aldiv@divisor+3
  3138     0558  082C               	movf	??_EUSART_Initialize+2,w
  3139     0559  00F2               	movwf	___aldiv@divisor+2
  3140     055A  082B               	movf	??_EUSART_Initialize+1,w
  3141     055B  00F1               	movwf	___aldiv@divisor+1
  3142     055C  082A               	movf	??_EUSART_Initialize,w
  3143     055D  00F0               	movwf	___aldiv@divisor
  3144     055E  0826               	movf	EUSART_Initialize@baudrate,w
  3145     055F  00AE               	movwf	??_EUSART_Initialize+4
  3146     0560  0827               	movf	EUSART_Initialize@baudrate+1,w
  3147     0561  00AF               	movwf	??_EUSART_Initialize+5
  3148     0562  0828               	movf	EUSART_Initialize@baudrate+2,w
  3149     0563  00B0               	movwf	??_EUSART_Initialize+6
  3150     0564  0829               	movf	EUSART_Initialize@baudrate+3,w
  3151     0565  00B1               	movwf	??_EUSART_Initialize+7
  3152     0566  3006               	movlw	6
  3153     0567                     u985:
  3154     0567  35AE               	lslf	??_EUSART_Initialize+4,f
  3155     0568  0DAF               	rlf	??_EUSART_Initialize+5,f
  3156     0569  0DB0               	rlf	??_EUSART_Initialize+6,f
  3157     056A  0DB1               	rlf	??_EUSART_Initialize+7,f
  3158     056B                     u980:
  3159     056B  0B89               	decfsz	9,f
  3160     056C  2D67               	goto	u985
  3161     056D  3000               	movlw	0
  3162     056E  00B2               	movwf	??_EUSART_Initialize+8
  3163     056F  3048               	movlw	72
  3164     0570  00B3               	movwf	??_EUSART_Initialize+9
  3165     0571  30E8               	movlw	232
  3166     0572  00B4               	movwf	??_EUSART_Initialize+10
  3167     0573  3001               	movlw	1
  3168     0574  00B5               	movwf	??_EUSART_Initialize+11
  3169     0575  082E               	movf	??_EUSART_Initialize+4,w
  3170     0576  02B2               	subwf	??_EUSART_Initialize+8,f
  3171     0577  082F               	movf	??_EUSART_Initialize+5,w
  3172     0578  3BB3               	subwfb	??_EUSART_Initialize+9,f
  3173     0579  0830               	movf	??_EUSART_Initialize+6,w
  3174     057A  3BB4               	subwfb	??_EUSART_Initialize+10,f
  3175     057B  0831               	movf	??_EUSART_Initialize+7,w
  3176     057C  3BB5               	subwfb	??_EUSART_Initialize+11,f
  3177     057D  0835               	movf	??_EUSART_Initialize+11,w
  3178     057E  00F7               	movwf	___aldiv@dividend+3
  3179     057F  0834               	movf	??_EUSART_Initialize+10,w
  3180     0580  00F6               	movwf	___aldiv@dividend+2
  3181     0581  0833               	movf	??_EUSART_Initialize+9,w
  3182     0582  00F5               	movwf	___aldiv@dividend+1
  3183     0583  0832               	movf	??_EUSART_Initialize+8,w
  3184     0584  00F4               	movwf	___aldiv@dividend
  3185     0585  3186  26D4  3185   	fcall	___aldiv
  3186     0588  0871               	movf	?___aldiv+1,w
  3187     0589  00FA               	movwf	EUSART_Initialize@x+1
  3188     058A  0870               	movf	?___aldiv,w
  3189     058B  00F9               	movwf	EUSART_Initialize@x
  3190     058C                     l1433:
  3191                           
  3192                           ;EUSART.c: 41:  SPBRGL = x;
  3193     058C  0879               	movf	EUSART_Initialize@x,w
  3194     058D  0023               	movlb	3	; select bank3
  3195     058E  009B               	movwf	27	;volatile
  3196     058F                     l1435:
  3197                           
  3198                           ;EUSART.c: 42:     BRGH = 0;
  3199     058F  111E               	bcf	30,2	;volatile
  3200     0590                     l1437:
  3201                           
  3202                           ;EUSART.c: 43:     BRG16 = 0;
  3203     0590  119F               	bcf	31,3	;volatile
  3204     0591                     l1439:
  3205                           
  3206                           ;EUSART.c: 44:     SYNC = 0;
  3207     0591  121E               	bcf	30,4	;volatile
  3208     0592                     l1441:
  3209                           
  3210                           ;EUSART.c: 45:     SPEN = 1;
  3211     0592  179D               	bsf	29,7	;volatile
  3212     0593                     l1443:
  3213                           
  3214                           ;EUSART.c: 46:     CREN = 1;
  3215     0593  161D               	bsf	29,4	;volatile
  3216     0594                     l1445:
  3217                           
  3218                           ;EUSART.c: 47:     TXEN = 1;
  3219     0594  169E               	bsf	30,5	;volatile
  3220     0595                     l190:
  3221     0595  0008               	return
  3222     0596                     __end_of_EUSART_Initialize:
  3223                           
  3224                           	psect	text10
  3225     06D4                     __ptext10:	
  3226 ;; *************** function ___aldiv *****************
  3227 ;; Defined at:
  3228 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\aldiv.c"
  3229 ;; Parameters:    Size  Location     Type
  3230 ;;  divisor         4    0[COMMON] long 
  3231 ;;  dividend        4    4[COMMON] long 
  3232 ;; Auto vars:     Size  Location     Type
  3233 ;;  quotient        4    2[BANK0 ] long 
  3234 ;;  sign            1    1[BANK0 ] unsigned char 
  3235 ;;  counter         1    0[BANK0 ] unsigned char 
  3236 ;; Return value:  Size  Location     Type
  3237 ;;                  4    0[COMMON] long 
  3238 ;; Registers used:
  3239 ;;		wreg, status,2, status,0
  3240 ;; Tracked objects:
  3241 ;;		On entry : 0/0
  3242 ;;		On exit  : 0/0
  3243 ;;		Unchanged: 0/0
  3244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3245 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3246 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3247 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3248 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3249 ;;Total ram usage:       15 bytes
  3250 ;; Hardware stack levels used: 1
  3251 ;; This function calls:
  3252 ;;		Nothing
  3253 ;; This function is called by:
  3254 ;;		_EUSART_Initialize
  3255 ;; This function uses a non-reentrant model
  3256 ;;
  3257                           
  3258     06D4                     ___aldiv:	
  3259                           ;psect for function ___aldiv
  3260                           
  3261     06D4                     l1303:	
  3262                           ;incstack = 0
  3263                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3264                           
  3265     06D4  0020               	movlb	0	; select bank0
  3266     06D5  01A1               	clrf	___aldiv@sign
  3267     06D6                     l1305:
  3268     06D6  1FF3               	btfss	___aldiv@divisor+3,7
  3269     06D7  2ED9               	goto	u871
  3270     06D8  2EDA               	goto	u870
  3271     06D9                     u871:
  3272     06D9  2EE7               	goto	l370
  3273     06DA                     u870:
  3274     06DA                     l1307:
  3275     06DA  09F0               	comf	___aldiv@divisor,f
  3276     06DB  09F1               	comf	___aldiv@divisor+1,f
  3277     06DC  09F2               	comf	___aldiv@divisor+2,f
  3278     06DD  09F3               	comf	___aldiv@divisor+3,f
  3279     06DE  0AF0               	incf	___aldiv@divisor,f
  3280     06DF  1903               	skipnz
  3281     06E0  0AF1               	incf	___aldiv@divisor+1,f
  3282     06E1  1903               	skipnz
  3283     06E2  0AF2               	incf	___aldiv@divisor+2,f
  3284     06E3  1903               	skipnz
  3285     06E4  0AF3               	incf	___aldiv@divisor+3,f
  3286     06E5  01A1               	clrf	___aldiv@sign
  3287     06E6  0AA1               	incf	___aldiv@sign,f
  3288     06E7                     l370:
  3289     06E7  1FF7               	btfss	___aldiv@dividend+3,7
  3290     06E8  2EEA               	goto	u881
  3291     06E9  2EEB               	goto	u880
  3292     06EA                     u881:
  3293     06EA  2EFA               	goto	l1313
  3294     06EB                     u880:
  3295     06EB                     l1309:
  3296     06EB  09F4               	comf	___aldiv@dividend,f
  3297     06EC  09F5               	comf	___aldiv@dividend+1,f
  3298     06ED  09F6               	comf	___aldiv@dividend+2,f
  3299     06EE  09F7               	comf	___aldiv@dividend+3,f
  3300     06EF  0AF4               	incf	___aldiv@dividend,f
  3301     06F0  1903               	skipnz
  3302     06F1  0AF5               	incf	___aldiv@dividend+1,f
  3303     06F2  1903               	skipnz
  3304     06F3  0AF6               	incf	___aldiv@dividend+2,f
  3305     06F4  1903               	skipnz
  3306     06F5  0AF7               	incf	___aldiv@dividend+3,f
  3307     06F6                     l1311:
  3308     06F6  3001               	movlw	1
  3309     06F7  00F8               	movwf	??___aldiv
  3310     06F8  0878               	movf	??___aldiv,w
  3311     06F9  06A1               	xorwf	___aldiv@sign,f
  3312     06FA                     l1313:
  3313     06FA  3000               	movlw	0
  3314     06FB  00A5               	movwf	___aldiv@quotient+3
  3315     06FC  3000               	movlw	0
  3316     06FD  00A4               	movwf	___aldiv@quotient+2
  3317     06FE  3000               	movlw	0
  3318     06FF  00A3               	movwf	___aldiv@quotient+1
  3319     0700  3000               	movlw	0
  3320     0701  00A2               	movwf	___aldiv@quotient
  3321     0702                     l1315:
  3322     0702  0873               	movf	___aldiv@divisor+3,w
  3323     0703  0472               	iorwf	___aldiv@divisor+2,w
  3324     0704  0471               	iorwf	___aldiv@divisor+1,w
  3325     0705  0470               	iorwf	___aldiv@divisor,w
  3326     0706  1903               	skipnz
  3327     0707  2F09               	goto	u891
  3328     0708  2F0A               	goto	u890
  3329     0709                     u891:
  3330     0709  2F4B               	goto	l1335
  3331     070A                     u890:
  3332     070A                     l1317:
  3333     070A  01A0               	clrf	___aldiv@counter
  3334     070B  0AA0               	incf	___aldiv@counter,f
  3335     070C  2F18               	goto	l1321
  3336     070D                     l1319:
  3337     070D  3001               	movlw	1
  3338     070E                     u905:
  3339     070E  35F0               	lslf	___aldiv@divisor,f
  3340     070F  0DF1               	rlf	___aldiv@divisor+1,f
  3341     0710  0DF2               	rlf	___aldiv@divisor+2,f
  3342     0711  0DF3               	rlf	___aldiv@divisor+3,f
  3343     0712  0B89               	decfsz	9,f
  3344     0713  2F0E               	goto	u905
  3345     0714  3001               	movlw	1
  3346     0715  00F8               	movwf	??___aldiv
  3347     0716  0878               	movf	??___aldiv,w
  3348     0717  07A0               	addwf	___aldiv@counter,f
  3349     0718                     l1321:
  3350     0718  1FF3               	btfss	___aldiv@divisor+3,7
  3351     0719  2F1B               	goto	u911
  3352     071A  2F1C               	goto	u910
  3353     071B                     u911:
  3354     071B  2F0D               	goto	l1319
  3355     071C                     u910:
  3356     071C                     l1323:
  3357     071C  3001               	movlw	1
  3358     071D                     u925:
  3359     071D  35A2               	lslf	___aldiv@quotient,f
  3360     071E  0DA3               	rlf	___aldiv@quotient+1,f
  3361     071F  0DA4               	rlf	___aldiv@quotient+2,f
  3362     0720  0DA5               	rlf	___aldiv@quotient+3,f
  3363     0721  0B89               	decfsz	9,f
  3364     0722  2F1D               	goto	u925
  3365     0723                     l1325:
  3366     0723  0873               	movf	___aldiv@divisor+3,w
  3367     0724  0277               	subwf	___aldiv@dividend+3,w
  3368     0725  1D03               	skipz
  3369     0726  2F31               	goto	u935
  3370     0727  0872               	movf	___aldiv@divisor+2,w
  3371     0728  0276               	subwf	___aldiv@dividend+2,w
  3372     0729  1D03               	skipz
  3373     072A  2F31               	goto	u935
  3374     072B  0871               	movf	___aldiv@divisor+1,w
  3375     072C  0275               	subwf	___aldiv@dividend+1,w
  3376     072D  1D03               	skipz
  3377     072E  2F31               	goto	u935
  3378     072F  0870               	movf	___aldiv@divisor,w
  3379     0730  0274               	subwf	___aldiv@dividend,w
  3380     0731                     u935:
  3381     0731  1C03               	skipc
  3382     0732  2F34               	goto	u931
  3383     0733  2F35               	goto	u930
  3384     0734                     u931:
  3385     0734  2F3E               	goto	l1331
  3386     0735                     u930:
  3387     0735                     l1327:
  3388     0735  0870               	movf	___aldiv@divisor,w
  3389     0736  02F4               	subwf	___aldiv@dividend,f
  3390     0737  0871               	movf	___aldiv@divisor+1,w
  3391     0738  3BF5               	subwfb	___aldiv@dividend+1,f
  3392     0739  0872               	movf	___aldiv@divisor+2,w
  3393     073A  3BF6               	subwfb	___aldiv@dividend+2,f
  3394     073B  0873               	movf	___aldiv@divisor+3,w
  3395     073C  3BF7               	subwfb	___aldiv@dividend+3,f
  3396     073D                     l1329:
  3397     073D  1422               	bsf	___aldiv@quotient,0
  3398     073E                     l1331:
  3399     073E  3001               	movlw	1
  3400     073F                     u945:
  3401     073F  36F3               	lsrf	___aldiv@divisor+3,f
  3402     0740  0CF2               	rrf	___aldiv@divisor+2,f
  3403     0741  0CF1               	rrf	___aldiv@divisor+1,f
  3404     0742  0CF0               	rrf	___aldiv@divisor,f
  3405     0743  0B89               	decfsz	9,f
  3406     0744  2F3F               	goto	u945
  3407     0745                     l1333:
  3408     0745  3001               	movlw	1
  3409     0746  02A0               	subwf	___aldiv@counter,f
  3410     0747  1D03               	btfss	3,2
  3411     0748  2F4A               	goto	u951
  3412     0749  2F4B               	goto	u950
  3413     074A                     u951:
  3414     074A  2F1C               	goto	l1323
  3415     074B                     u950:
  3416     074B                     l1335:
  3417     074B  0821               	movf	___aldiv@sign,w
  3418     074C  1903               	btfsc	3,2
  3419     074D  2F4F               	goto	u961
  3420     074E  2F50               	goto	u960
  3421     074F                     u961:
  3422     074F  2F5B               	goto	l1339
  3423     0750                     u960:
  3424     0750                     l1337:
  3425     0750  09A2               	comf	___aldiv@quotient,f
  3426     0751  09A3               	comf	___aldiv@quotient+1,f
  3427     0752  09A4               	comf	___aldiv@quotient+2,f
  3428     0753  09A5               	comf	___aldiv@quotient+3,f
  3429     0754  0AA2               	incf	___aldiv@quotient,f
  3430     0755  1903               	skipnz
  3431     0756  0AA3               	incf	___aldiv@quotient+1,f
  3432     0757  1903               	skipnz
  3433     0758  0AA4               	incf	___aldiv@quotient+2,f
  3434     0759  1903               	skipnz
  3435     075A  0AA5               	incf	___aldiv@quotient+3,f
  3436     075B                     l1339:
  3437     075B  0825               	movf	___aldiv@quotient+3,w
  3438     075C  00F3               	movwf	?___aldiv+3
  3439     075D  0824               	movf	___aldiv@quotient+2,w
  3440     075E  00F2               	movwf	?___aldiv+2
  3441     075F  0823               	movf	___aldiv@quotient+1,w
  3442     0760  00F1               	movwf	?___aldiv+1
  3443     0761  0822               	movf	___aldiv@quotient,w
  3444     0762  00F0               	movwf	?___aldiv
  3445     0763                     l380:
  3446     0763  0008               	return
  3447     0764                     __end_of___aldiv:
  3448                           
  3449                           	psect	text11
  3450     0471                     __ptext11:	
  3451 ;; *************** function _EEPROM_Write *****************
  3452 ;; Defined at:
  3453 ;;		line 39 in file "main.c"
  3454 ;; Parameters:    Size  Location     Type
  3455 ;;  block_addres    1    wreg     unsigned char 
  3456 ;;  word_address    1    6[COMMON] unsigned char 
  3457 ;;  eeprom_data     1    7[COMMON] unsigned char 
  3458 ;; Auto vars:     Size  Location     Type
  3459 ;;  block_addres    1   10[COMMON] unsigned char 
  3460 ;; Return value:  Size  Location     Type
  3461 ;;                  1    wreg      void 
  3462 ;; Registers used:
  3463 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3464 ;; Tracked objects:
  3465 ;;		On entry : 0/0
  3466 ;;		On exit  : 0/0
  3467 ;;		Unchanged: 0/0
  3468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3469 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3470 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3471 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3472 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3473 ;;Total ram usage:        5 bytes
  3474 ;; Hardware stack levels used: 1
  3475 ;; Hardware stack levels required when called: 2
  3476 ;; This function calls:
  3477 ;;		_EUSART_Write_Text
  3478 ;;		_Send_I2C_ControlByte
  3479 ;;		_Send_I2C_Data
  3480 ;;		_Send_I2C_StartBit
  3481 ;;		_Send_I2C_StopBit
  3482 ;; This function is called by:
  3483 ;;		_main
  3484 ;; This function uses a non-reentrant model
  3485 ;;
  3486                           
  3487     0471                     _EEPROM_Write:	
  3488                           ;psect for function _EEPROM_Write
  3489                           
  3490                           
  3491                           ;incstack = 0
  3492                           ; Regs used in _EEPROM_Write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3493                           ;EEPROM_Write@block_address stored from wreg
  3494     0471  00FA               	movwf	EEPROM_Write@block_address
  3495     0472                     l1343:
  3496                           
  3497                           ;main.c: 40:     EUSART_Write_Text("Writing EEPROM\n");
  3498     0472  3032               	movlw	low (STR_1| (0+32768))
  3499     0473  00F1               	movwf	EUSART_Write_Text@text
  3500     0474  3088               	movlw	high (STR_1| (0+32768))
  3501     0475  00F2               	movwf	EUSART_Write_Text@text+1
  3502     0476  3184  2411  3184   	fcall	_EUSART_Write_Text
  3503     0479                     l1345:
  3504                           
  3505                           ;main.c: 42:     Send_I2C_StartBit();
  3506     0479  3183  23B7  3184   	fcall	_Send_I2C_StartBit
  3507     047C                     l1347:
  3508                           
  3509                           ;main.c: 43:     Send_I2C_ControlByte(block_address, 0);
  3510     047C  087A               	movf	EEPROM_Write@block_address,w
  3511     047D  00F8               	movwf	??_EEPROM_Write
  3512     047E  01F9               	clrf	??_EEPROM_Write+1
  3513     047F  0878               	movf	??_EEPROM_Write,w
  3514     0480  00F0               	movwf	Send_I2C_ControlByte@BlockAddress
  3515     0481  0879               	movf	??_EEPROM_Write+1,w
  3516     0482  00F1               	movwf	Send_I2C_ControlByte@BlockAddress+1
  3517     0483  3000               	movlw	0
  3518     0484  00F2               	movwf	Send_I2C_ControlByte@RW_bit
  3519     0485  00F3               	movwf	Send_I2C_ControlByte@RW_bit+1
  3520     0486  3183  23E1  3184   	fcall	_Send_I2C_ControlByte
  3521     0489                     l1349:
  3522                           
  3523                           ;main.c: 44:     Send_I2C_Data(word_address);
  3524     0489  0876               	movf	EEPROM_Write@word_address,w
  3525     048A  00F8               	movwf	??_EEPROM_Write
  3526     048B  01F9               	clrf	??_EEPROM_Write+1
  3527     048C  0878               	movf	??_EEPROM_Write,w
  3528     048D  00F0               	movwf	Send_I2C_Data@databyte
  3529     048E  0879               	movf	??_EEPROM_Write+1,w
  3530     048F  00F1               	movwf	Send_I2C_Data@databyte+1
  3531     0490  3183  23CB  3184   	fcall	_Send_I2C_Data
  3532     0493                     l1351:
  3533                           
  3534                           ;main.c: 45:     Send_I2C_Data(eeprom_data);
  3535     0493  0877               	movf	EEPROM_Write@eeprom_data,w
  3536     0494  00F8               	movwf	??_EEPROM_Write
  3537     0495  01F9               	clrf	??_EEPROM_Write+1
  3538     0496  0878               	movf	??_EEPROM_Write,w
  3539     0497  00F0               	movwf	Send_I2C_Data@databyte
  3540     0498  0879               	movf	??_EEPROM_Write+1,w
  3541     0499  00F1               	movwf	Send_I2C_Data@databyte+1
  3542     049A  3183  23CB  3184   	fcall	_Send_I2C_Data
  3543     049D                     l1353:
  3544                           
  3545                           ;main.c: 46:     Send_I2C_StopBit();
  3546     049D  3183  23C1  3184   	fcall	_Send_I2C_StopBit
  3547     04A0                     l1355:
  3548                           
  3549                           ;main.c: 49:     _delay((unsigned long)((200)*(32000000/4000.0)));
  3550     04A0  3009               	movlw	9
  3551     04A1  00F9               	movwf	??_EEPROM_Write+1
  3552     04A2  301E               	movlw	30
  3553     04A3  00F8               	movwf	??_EEPROM_Write
  3554     04A4  30E4               	movlw	228
  3555     04A5                     u1047:
  3556     04A5  0B89               	decfsz	9,f
  3557     04A6  2CA5               	goto	u1047
  3558     04A7  0BF8               	decfsz	??_EEPROM_Write,f
  3559     04A8  2CA5               	goto	u1047
  3560     04A9  0BF9               	decfsz	??_EEPROM_Write+1,f
  3561     04AA  2CA5               	goto	u1047
  3562     04AB  3200               	nop2
  3563     04AC                     l1357:
  3564                           
  3565                           ;main.c: 51:     EUSART_Write_Text("Write completed\n");
  3566     04AC  3000               	movlw	low (STR_2| (0+32768))
  3567     04AD  00F1               	movwf	EUSART_Write_Text@text
  3568     04AE  3088               	movlw	high (STR_2| (0+32768))
  3569     04AF  00F2               	movwf	EUSART_Write_Text@text+1
  3570     04B0  3184  2411  3184   	fcall	_EUSART_Write_Text
  3571     04B3                     l59:
  3572     04B3  0008               	return
  3573     04B4                     __end_of_EEPROM_Write:
  3574                           
  3575                           	psect	text12
  3576     04FA                     __ptext12:	
  3577 ;; *************** function _EEPROM_Read *****************
  3578 ;; Defined at:
  3579 ;;		line 57 in file "main.c"
  3580 ;; Parameters:    Size  Location     Type
  3581 ;;  block_addres    1    wreg     unsigned char 
  3582 ;;  word_address    1    6[COMMON] unsigned char 
  3583 ;; Auto vars:     Size  Location     Type
  3584 ;;  block_addres    1   10[COMMON] unsigned char 
  3585 ;;  incoming_dat    1    9[COMMON] unsigned char 
  3586 ;; Return value:  Size  Location     Type
  3587 ;;                  1    wreg      unsigned char 
  3588 ;; Registers used:
  3589 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3590 ;; Tracked objects:
  3591 ;;		On entry : 0/0
  3592 ;;		On exit  : 0/0
  3593 ;;		Unchanged: 0/0
  3594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3595 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3596 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3597 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3598 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3599 ;;Total ram usage:        5 bytes
  3600 ;; Hardware stack levels used: 1
  3601 ;; Hardware stack levels required when called: 2
  3602 ;; This function calls:
  3603 ;;		_EUSART_Write_Text
  3604 ;;		_Read_I2C_Data
  3605 ;;		_Send_I2C_ControlByte
  3606 ;;		_Send_I2C_Data
  3607 ;;		_Send_I2C_NAK
  3608 ;;		_Send_I2C_StartBit
  3609 ;;		_Send_I2C_StopBit
  3610 ;; This function is called by:
  3611 ;;		_main
  3612 ;; This function uses a non-reentrant model
  3613 ;;
  3614                           
  3615     04FA                     _EEPROM_Read:	
  3616                           ;psect for function _EEPROM_Read
  3617                           
  3618                           
  3619                           ;incstack = 0
  3620                           ; Regs used in _EEPROM_Read: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3621                           ;EEPROM_Read@block_address stored from wreg
  3622     04FA  00FA               	movwf	EEPROM_Read@block_address
  3623     04FB                     l1359:
  3624                           
  3625                           ;main.c: 58:     EUSART_Write_Text("Reading EEPROM\n");
  3626     04FB  3022               	movlw	low (STR_3| (0+32768))
  3627     04FC  00F1               	movwf	EUSART_Write_Text@text
  3628     04FD  3088               	movlw	high (STR_3| (0+32768))
  3629     04FE  00F2               	movwf	EUSART_Write_Text@text+1
  3630     04FF  3184  2411  3184   	fcall	_EUSART_Write_Text
  3631     0502                     l1361:
  3632                           
  3633                           ;main.c: 60:     Send_I2C_StartBit();
  3634     0502  3183  23B7  3184   	fcall	_Send_I2C_StartBit
  3635     0505                     l1363:
  3636                           
  3637                           ;main.c: 61:     Send_I2C_ControlByte(block_address, 0);
  3638     0505  087A               	movf	EEPROM_Read@block_address,w
  3639     0506  00F7               	movwf	??_EEPROM_Read
  3640     0507  01F8               	clrf	??_EEPROM_Read+1
  3641     0508  0877               	movf	??_EEPROM_Read,w
  3642     0509  00F0               	movwf	Send_I2C_ControlByte@BlockAddress
  3643     050A  0878               	movf	??_EEPROM_Read+1,w
  3644     050B  00F1               	movwf	Send_I2C_ControlByte@BlockAddress+1
  3645     050C  3000               	movlw	0
  3646     050D  00F2               	movwf	Send_I2C_ControlByte@RW_bit
  3647     050E  00F3               	movwf	Send_I2C_ControlByte@RW_bit+1
  3648     050F  3183  23E1  3184   	fcall	_Send_I2C_ControlByte
  3649     0512                     l1365:
  3650                           
  3651                           ;main.c: 62:     Send_I2C_Data(word_address);
  3652     0512  0876               	movf	EEPROM_Read@word_address,w
  3653     0513  00F7               	movwf	??_EEPROM_Read
  3654     0514  01F8               	clrf	??_EEPROM_Read+1
  3655     0515  0877               	movf	??_EEPROM_Read,w
  3656     0516  00F0               	movwf	Send_I2C_Data@databyte
  3657     0517  0878               	movf	??_EEPROM_Read+1,w
  3658     0518  00F1               	movwf	Send_I2C_Data@databyte+1
  3659     0519  3183  23CB  3184   	fcall	_Send_I2C_Data
  3660     051C                     l1367:
  3661                           
  3662                           ;main.c: 64:     Send_I2C_StartBit();
  3663     051C  3183  23B7  3184   	fcall	_Send_I2C_StartBit
  3664     051F                     l1369:
  3665                           
  3666                           ;main.c: 65:     Send_I2C_ControlByte(block_address, 1);
  3667     051F  087A               	movf	EEPROM_Read@block_address,w
  3668     0520  00F7               	movwf	??_EEPROM_Read
  3669     0521  01F8               	clrf	??_EEPROM_Read+1
  3670     0522  0877               	movf	??_EEPROM_Read,w
  3671     0523  00F0               	movwf	Send_I2C_ControlByte@BlockAddress
  3672     0524  0878               	movf	??_EEPROM_Read+1,w
  3673     0525  00F1               	movwf	Send_I2C_ControlByte@BlockAddress+1
  3674     0526  3001               	movlw	1
  3675     0527  00F2               	movwf	Send_I2C_ControlByte@RW_bit
  3676     0528  3000               	movlw	0
  3677     0529  00F3               	movwf	Send_I2C_ControlByte@RW_bit+1
  3678     052A  3183  23E1  3184   	fcall	_Send_I2C_ControlByte
  3679     052D                     l1371:
  3680                           
  3681                           ;main.c: 66:     unsigned char incoming_data = Read_I2C_Data();
  3682     052D  3183  23FF  3184   	fcall	_Read_I2C_Data
  3683     0530  0870               	movf	?_Read_I2C_Data,w
  3684     0531  00F9               	movwf	EEPROM_Read@incoming_data
  3685     0532                     l1373:
  3686                           
  3687                           ;main.c: 67:     Send_I2C_NAK();
  3688     0532  3183  23D6  3184   	fcall	_Send_I2C_NAK
  3689     0535                     l1375:
  3690                           
  3691                           ;main.c: 68:     Send_I2C_StopBit();
  3692     0535  3183  23C1  3184   	fcall	_Send_I2C_StopBit
  3693     0538                     l1377:
  3694                           
  3695                           ;main.c: 70:     _delay((unsigned long)((1000)*(32000000/4000.0)));
  3696     0538  3029               	movlw	41
  3697     0539  00F8               	movwf	??_EEPROM_Read+1
  3698     053A  3096               	movlw	150
  3699     053B  00F7               	movwf	??_EEPROM_Read
  3700     053C  307F               	movlw	127
  3701     053D                     u1057:
  3702     053D  0B89               	decfsz	9,f
  3703     053E  2D3D               	goto	u1057
  3704     053F  0BF7               	decfsz	??_EEPROM_Read,f
  3705     0540  2D3D               	goto	u1057
  3706     0541  0BF8               	decfsz	??_EEPROM_Read+1,f
  3707     0542  2D3D               	goto	u1057
  3708     0543  0000               	nop
  3709     0544                     l1379:
  3710                           
  3711                           ;main.c: 72:     return incoming_data;
  3712     0544  0879               	movf	EEPROM_Read@incoming_data,w
  3713     0545                     l62:
  3714     0545  0008               	return
  3715     0546                     __end_of_EEPROM_Read:
  3716                           
  3717                           	psect	text13
  3718     03C1                     __ptext13:	
  3719 ;; *************** function _Send_I2C_StopBit *****************
  3720 ;; Defined at:
  3721 ;;		line 106 in file "I2C.c"
  3722 ;; Parameters:    Size  Location     Type
  3723 ;;		None
  3724 ;; Auto vars:     Size  Location     Type
  3725 ;;		None
  3726 ;; Return value:  Size  Location     Type
  3727 ;;                  1    wreg      void 
  3728 ;; Registers used:
  3729 ;;		None
  3730 ;; Tracked objects:
  3731 ;;		On entry : 0/0
  3732 ;;		On exit  : 0/0
  3733 ;;		Unchanged: 0/0
  3734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3739 ;;Total ram usage:        0 bytes
  3740 ;; Hardware stack levels used: 1
  3741 ;; This function calls:
  3742 ;;		Nothing
  3743 ;; This function is called by:
  3744 ;;		_EEPROM_Write
  3745 ;;		_EEPROM_Read
  3746 ;; This function uses a non-reentrant model
  3747 ;;
  3748                           
  3749     03C1                     _Send_I2C_StopBit:	
  3750                           ;psect for function _Send_I2C_StopBit
  3751                           
  3752     03C1                     l1273:	
  3753                           ;incstack = 0
  3754                           ; Regs used in _Send_I2C_StopBit: []
  3755                           
  3756                           
  3757                           ;I2C.c: 108:     PIR1bits.SSP1IF=0;
  3758     03C1  0020               	movlb	0	; select bank0
  3759     03C2  1191               	bcf	17,3	;volatile
  3760                           
  3761                           ;I2C.c: 109:     SSPCON2bits.PEN=1;
  3762     03C3  0024               	movlb	4	; select bank4
  3763     03C4  1516               	bsf	22,2	;volatile
  3764     03C5                     l150:	
  3765                           ;I2C.c: 110:     while(!PIR1bits.SSP1IF);
  3766                           
  3767     03C5  0020               	movlb	0	; select bank0
  3768     03C6  1D91               	btfss	17,3	;volatile
  3769     03C7  2BC9               	goto	u811
  3770     03C8  2BCA               	goto	u810
  3771     03C9                     u811:
  3772     03C9  2BC5               	goto	l150
  3773     03CA                     u810:
  3774     03CA                     l153:
  3775     03CA  0008               	return
  3776     03CB                     __end_of_Send_I2C_StopBit:
  3777                           
  3778                           	psect	text14
  3779     03B7                     __ptext14:	
  3780 ;; *************** function _Send_I2C_StartBit *****************
  3781 ;; Defined at:
  3782 ;;		line 96 in file "I2C.c"
  3783 ;; Parameters:    Size  Location     Type
  3784 ;;		None
  3785 ;; Auto vars:     Size  Location     Type
  3786 ;;		None
  3787 ;; Return value:  Size  Location     Type
  3788 ;;                  1    wreg      void 
  3789 ;; Registers used:
  3790 ;;		None
  3791 ;; Tracked objects:
  3792 ;;		On entry : 0/0
  3793 ;;		On exit  : 0/0
  3794 ;;		Unchanged: 0/0
  3795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3800 ;;Total ram usage:        0 bytes
  3801 ;; Hardware stack levels used: 1
  3802 ;; This function calls:
  3803 ;;		Nothing
  3804 ;; This function is called by:
  3805 ;;		_EEPROM_Write
  3806 ;;		_EEPROM_Read
  3807 ;; This function uses a non-reentrant model
  3808 ;;
  3809                           
  3810     03B7                     _Send_I2C_StartBit:	
  3811                           ;psect for function _Send_I2C_StartBit
  3812                           
  3813     03B7                     l1263:	
  3814                           ;incstack = 0
  3815                           ; Regs used in _Send_I2C_StartBit: []
  3816                           
  3817                           
  3818                           ;I2C.c: 98:     PIR1bits.SSP1IF=0;
  3819     03B7  0020               	movlb	0	; select bank0
  3820     03B8  1191               	bcf	17,3	;volatile
  3821                           
  3822                           ;I2C.c: 99:     SSPCON2bits.SEN=1;
  3823     03B9  0024               	movlb	4	; select bank4
  3824     03BA  1416               	bsf	22,0	;volatile
  3825     03BB                     l144:	
  3826                           ;I2C.c: 100:     while(!PIR1bits.SSP1IF);
  3827                           
  3828     03BB  0020               	movlb	0	; select bank0
  3829     03BC  1D91               	btfss	17,3	;volatile
  3830     03BD  2BBF               	goto	u781
  3831     03BE  2BC0               	goto	u780
  3832     03BF                     u781:
  3833     03BF  2BBB               	goto	l144
  3834     03C0                     u780:
  3835     03C0                     l147:
  3836     03C0  0008               	return
  3837     03C1                     __end_of_Send_I2C_StartBit:
  3838                           
  3839                           	psect	text15
  3840     03D6                     __ptext15:	
  3841 ;; *************** function _Send_I2C_NAK *****************
  3842 ;; Defined at:
  3843 ;;		line 128 in file "I2C.c"
  3844 ;; Parameters:    Size  Location     Type
  3845 ;;		None
  3846 ;; Auto vars:     Size  Location     Type
  3847 ;;		None
  3848 ;; Return value:  Size  Location     Type
  3849 ;;                  1    wreg      void 
  3850 ;; Registers used:
  3851 ;;		None
  3852 ;; Tracked objects:
  3853 ;;		On entry : 0/0
  3854 ;;		On exit  : 0/0
  3855 ;;		Unchanged: 0/0
  3856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3861 ;;Total ram usage:        0 bytes
  3862 ;; Hardware stack levels used: 1
  3863 ;; This function calls:
  3864 ;;		Nothing
  3865 ;; This function is called by:
  3866 ;;		_EEPROM_Read
  3867 ;; This function uses a non-reentrant model
  3868 ;;
  3869                           
  3870     03D6                     _Send_I2C_NAK:	
  3871                           ;psect for function _Send_I2C_NAK
  3872                           
  3873     03D6                     l1281:	
  3874                           ;incstack = 0
  3875                           ; Regs used in _Send_I2C_NAK: []
  3876                           
  3877                           
  3878                           ;I2C.c: 130:     PIR1bits.SSP1IF=0;
  3879     03D6  0020               	movlb	0	; select bank0
  3880     03D7  1191               	bcf	17,3	;volatile
  3881                           
  3882                           ;I2C.c: 131:     SSPCON2bits.ACKDT=1;
  3883     03D8  0024               	movlb	4	; select bank4
  3884     03D9  1696               	bsf	22,5	;volatile
  3885                           
  3886                           ;I2C.c: 132:     SSPCON2bits.ACKEN=1;
  3887     03DA  1616               	bsf	22,4	;volatile
  3888     03DB                     l162:	
  3889                           ;I2C.c: 133:     while(!PIR1bits.SSP1IF);
  3890                           
  3891     03DB  0020               	movlb	0	; select bank0
  3892     03DC  1D91               	btfss	17,3	;volatile
  3893     03DD  2BDF               	goto	u831
  3894     03DE  2BE0               	goto	u830
  3895     03DF                     u831:
  3896     03DF  2BDB               	goto	l162
  3897     03E0                     u830:
  3898     03E0                     l165:
  3899     03E0  0008               	return
  3900     03E1                     __end_of_Send_I2C_NAK:
  3901                           
  3902                           	psect	text16
  3903     03CB                     __ptext16:	
  3904 ;; *************** function _Send_I2C_Data *****************
  3905 ;; Defined at:
  3906 ;;		line 48 in file "I2C.c"
  3907 ;; Parameters:    Size  Location     Type
  3908 ;;  databyte        2    0[COMMON] unsigned int 
  3909 ;; Auto vars:     Size  Location     Type
  3910 ;;		None
  3911 ;; Return value:  Size  Location     Type
  3912 ;;                  1    wreg      void 
  3913 ;; Registers used:
  3914 ;;		wreg
  3915 ;; Tracked objects:
  3916 ;;		On entry : 0/0
  3917 ;;		On exit  : 0/0
  3918 ;;		Unchanged: 0/0
  3919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3920 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3923 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3924 ;;Total ram usage:        2 bytes
  3925 ;; Hardware stack levels used: 1
  3926 ;; This function calls:
  3927 ;;		Nothing
  3928 ;; This function is called by:
  3929 ;;		_EEPROM_Write
  3930 ;;		_EEPROM_Read
  3931 ;; This function uses a non-reentrant model
  3932 ;;
  3933                           
  3934     03CB                     _Send_I2C_Data:	
  3935                           ;psect for function _Send_I2C_Data
  3936                           
  3937     03CB                     l1269:	
  3938                           ;incstack = 0
  3939                           ; Regs used in _Send_I2C_Data: [wreg]
  3940                           
  3941                           
  3942                           ;I2C.c: 48: void Send_I2C_Data(unsigned int databyte);I2C.c: 49: {;I2C.c: 50:     PIR1bi
      +                          ts.SSP1IF=0;
  3943     03CB  0020               	movlb	0	; select bank0
  3944     03CC  1191               	bcf	17,3	;volatile
  3945     03CD                     l1271:
  3946                           
  3947                           ;I2C.c: 51:     SSPBUF = databyte;
  3948     03CD  0870               	movf	Send_I2C_Data@databyte,w
  3949     03CE  0024               	movlb	4	; select bank4
  3950     03CF  0091               	movwf	17	;volatile
  3951     03D0                     l126:	
  3952                           ;I2C.c: 52:     while(!PIR1bits.SSP1IF);
  3953                           
  3954     03D0  0020               	movlb	0	; select bank0
  3955     03D1  1D91               	btfss	17,3	;volatile
  3956     03D2  2BD4               	goto	u801
  3957     03D3  2BD5               	goto	u800
  3958     03D4                     u801:
  3959     03D4  2BD0               	goto	l126
  3960     03D5                     u800:
  3961     03D5                     l129:
  3962     03D5  0008               	return
  3963     03D6                     __end_of_Send_I2C_Data:
  3964                           
  3965                           	psect	text17
  3966     03E1                     __ptext17:	
  3967 ;; *************** function _Send_I2C_ControlByte *****************
  3968 ;; Defined at:
  3969 ;;		line 78 in file "I2C.c"
  3970 ;; Parameters:    Size  Location     Type
  3971 ;;  BlockAddress    2    0[COMMON] unsigned int 
  3972 ;;  RW_bit          2    2[COMMON] unsigned int 
  3973 ;; Auto vars:     Size  Location     Type
  3974 ;;		None
  3975 ;; Return value:  Size  Location     Type
  3976 ;;                  1    wreg      void 
  3977 ;; Registers used:
  3978 ;;		wreg, status,2, status,0
  3979 ;; Tracked objects:
  3980 ;;		On entry : 0/0
  3981 ;;		On exit  : 0/0
  3982 ;;		Unchanged: 0/0
  3983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3984 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3987 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3988 ;;Total ram usage:        4 bytes
  3989 ;; Hardware stack levels used: 1
  3990 ;; This function calls:
  3991 ;;		Nothing
  3992 ;; This function is called by:
  3993 ;;		_EEPROM_Write
  3994 ;;		_EEPROM_Read
  3995 ;; This function uses a non-reentrant model
  3996 ;;
  3997                           
  3998     03E1                     _Send_I2C_ControlByte:	
  3999                           ;psect for function _Send_I2C_ControlByte
  4000                           
  4001     03E1                     l1265:	
  4002                           ;incstack = 0
  4003                           ; Regs used in _Send_I2C_ControlByte: [wreg+status,2+status,0]
  4004                           
  4005                           
  4006                           ;I2C.c: 78: void Send_I2C_ControlByte(unsigned int BlockAddress,unsigned int RW_bit);I2C
      +                          .c: 79: {;I2C.c: 80:     PIR1bits.SSP1IF=0;
  4007     03E1  0020               	movlb	0	; select bank0
  4008     03E2  1191               	bcf	17,3	;volatile
  4009     03E3                     l1267:
  4010                           
  4011                           ;I2C.c: 88:     SSPBUF = (((0b1010 << 4) | (BlockAddress <<1)) + RW_bit);
  4012     03E3  3570               	lslf	Send_I2C_ControlByte@BlockAddress,w
  4013     03E4  38A0               	iorlw	160
  4014     03E5  0772               	addwf	Send_I2C_ControlByte@RW_bit,w
  4015     03E6  0024               	movlb	4	; select bank4
  4016     03E7  0091               	movwf	17	;volatile
  4017     03E8                     l138:	
  4018                           ;I2C.c: 90:     while(!PIR1bits.SSP1IF);
  4019                           
  4020     03E8  0020               	movlb	0	; select bank0
  4021     03E9  1D91               	btfss	17,3	;volatile
  4022     03EA  2BEC               	goto	u791
  4023     03EB  2BED               	goto	u790
  4024     03EC                     u791:
  4025     03EC  2BE8               	goto	l138
  4026     03ED                     u790:
  4027     03ED                     l141:
  4028     03ED  0008               	return
  4029     03EE                     __end_of_Send_I2C_ControlByte:
  4030                           
  4031                           	psect	text18
  4032     03FF                     __ptext18:	
  4033 ;; *************** function _Read_I2C_Data *****************
  4034 ;; Defined at:
  4035 ;;		line 59 in file "I2C.c"
  4036 ;; Parameters:    Size  Location     Type
  4037 ;;		None
  4038 ;; Auto vars:     Size  Location     Type
  4039 ;;		None
  4040 ;; Return value:  Size  Location     Type
  4041 ;;                  2    0[COMMON] unsigned int 
  4042 ;; Registers used:
  4043 ;;		wreg
  4044 ;; Tracked objects:
  4045 ;;		On entry : 0/0
  4046 ;;		On exit  : 0/0
  4047 ;;		Unchanged: 0/0
  4048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4049 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4051 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4052 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4053 ;;Total ram usage:        4 bytes
  4054 ;; Hardware stack levels used: 1
  4055 ;; This function calls:
  4056 ;;		Nothing
  4057 ;; This function is called by:
  4058 ;;		_EEPROM_Read
  4059 ;; This function uses a non-reentrant model
  4060 ;;
  4061                           
  4062     03FF                     _Read_I2C_Data:	
  4063                           ;psect for function _Read_I2C_Data
  4064                           
  4065     03FF                     l1275:	
  4066                           ;incstack = 0
  4067                           ; Regs used in _Read_I2C_Data: [wreg]
  4068                           
  4069                           
  4070                           ;I2C.c: 61:     PIR1bits.SSP1IF=0;
  4071     03FF  0020               	movlb	0	; select bank0
  4072     0400  1191               	bcf	17,3	;volatile
  4073                           
  4074                           ;I2C.c: 62:     SSPCON2bits.RCEN=1;
  4075     0401  0024               	movlb	4	; select bank4
  4076     0402  1596               	bsf	22,3	;volatile
  4077     0403                     l132:	
  4078                           ;I2C.c: 63:     while(!PIR1bits.SSP1IF);
  4079                           
  4080     0403  0020               	movlb	0	; select bank0
  4081     0404  1D91               	btfss	17,3	;volatile
  4082     0405  2C07               	goto	u821
  4083     0406  2C08               	goto	u820
  4084     0407                     u821:
  4085     0407  2C03               	goto	l132
  4086     0408                     u820:
  4087     0408                     l1277:
  4088                           
  4089                           ;I2C.c: 64:     return (SSPBUF);
  4090     0408  0024               	movlb	4	; select bank4
  4091     0409  0811               	movf	17,w	;volatile
  4092     040A  00F2               	movwf	??_Read_I2C_Data
  4093     040B  01F3               	clrf	??_Read_I2C_Data+1
  4094     040C  0872               	movf	??_Read_I2C_Data,w
  4095     040D  00F0               	movwf	?_Read_I2C_Data
  4096     040E  0873               	movf	??_Read_I2C_Data+1,w
  4097     040F  00F1               	movwf	?_Read_I2C_Data+1
  4098     0410                     l135:
  4099     0410  0008               	return
  4100     0411                     __end_of_Read_I2C_Data:
  4101                           
  4102                           	psect	text19
  4103     0411                     __ptext19:	
  4104 ;; *************** function _EUSART_Write_Text *****************
  4105 ;; Defined at:
  4106 ;;		line 118 in file "EUSART.c"
  4107 ;; Parameters:    Size  Location     Type
  4108 ;;  text            2    1[COMMON] PTR unsigned char 
  4109 ;;		 -> STR_7(2), STR_6(14), STR_5(17), STR_4(15), 
  4110 ;;		 -> STR_3(16), STR_2(17), STR_1(16), 
  4111 ;; Auto vars:     Size  Location     Type
  4112 ;;  i               2    4[COMMON] int 
  4113 ;; Return value:  Size  Location     Type
  4114 ;;                  1    wreg      void 
  4115 ;; Registers used:
  4116 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4117 ;; Tracked objects:
  4118 ;;		On entry : 0/0
  4119 ;;		On exit  : 0/0
  4120 ;;		Unchanged: 0/0
  4121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4122 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4123 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4124 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4125 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4126 ;;Total ram usage:        5 bytes
  4127 ;; Hardware stack levels used: 1
  4128 ;; Hardware stack levels required when called: 1
  4129 ;; This function calls:
  4130 ;;		_EUSART_Write
  4131 ;; This function is called by:
  4132 ;;		_EEPROM_Write
  4133 ;;		_EEPROM_Read
  4134 ;;		_main
  4135 ;; This function uses a non-reentrant model
  4136 ;;
  4137                           
  4138     0411                     _EUSART_Write_Text:	
  4139                           ;psect for function _EUSART_Write_Text
  4140                           
  4141     0411                     l1255:	
  4142                           ;incstack = 0
  4143                           ; Regs used in _EUSART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4144                           
  4145                           
  4146                           ;EUSART.c: 118: void EUSART_Write_Text(char *text);EUSART.c: 119: {;EUSART.c: 120:   int
      +                           i;;EUSART.c: 121:   for(i=0;text[i]!='\0';i++)
  4147     0411  01F4               	clrf	EUSART_Write_Text@i
  4148     0412  01F5               	clrf	EUSART_Write_Text@i+1
  4149     0413  2C22               	goto	l1261
  4150     0414                     l1257:
  4151                           
  4152                           ;EUSART.c: 122:    EUSART_Write(text[i]);
  4153     0414  0871               	movf	EUSART_Write_Text@text,w
  4154     0415  0774               	addwf	EUSART_Write_Text@i,w
  4155     0416  0084               	movwf	4
  4156     0417  0872               	movf	EUSART_Write_Text@text+1,w
  4157     0418  3D75               	addwfc	EUSART_Write_Text@i+1,w
  4158     0419  0085               	movwf	5
  4159     041A  0800               	movf	0,w	;code access
  4160     041B  3183  23AD  3184   	fcall	_EUSART_Write
  4161     041E                     l1259:
  4162     041E  3001               	movlw	1
  4163     041F  07F4               	addwf	EUSART_Write_Text@i,f
  4164     0420  3000               	movlw	0
  4165     0421  3DF5               	addwfc	EUSART_Write_Text@i+1,f
  4166     0422                     l1261:
  4167     0422  0871               	movf	EUSART_Write_Text@text,w
  4168     0423  0774               	addwf	EUSART_Write_Text@i,w
  4169     0424  0084               	movwf	4
  4170     0425  0872               	movf	EUSART_Write_Text@text+1,w
  4171     0426  3D75               	addwfc	EUSART_Write_Text@i+1,w
  4172     0427  0085               	movwf	5
  4173     0428  0012               	moviw fsr0++
  4174     0429  1D03               	btfss	3,2
  4175     042A  2C2C               	goto	u771
  4176     042B  2C2D               	goto	u770
  4177     042C                     u771:
  4178     042C  2C14               	goto	l1257
  4179     042D                     u770:
  4180     042D                     l215:
  4181     042D  0008               	return
  4182     042E                     __end_of_EUSART_Write_Text:
  4183                           
  4184                           	psect	text20
  4185     03AD                     __ptext20:	
  4186 ;; *************** function _EUSART_Write *****************
  4187 ;; Defined at:
  4188 ;;		line 91 in file "EUSART.c"
  4189 ;; Parameters:    Size  Location     Type
  4190 ;;  txData          1    wreg     unsigned char 
  4191 ;; Auto vars:     Size  Location     Type
  4192 ;;  txData          1    0[COMMON] unsigned char 
  4193 ;; Return value:  Size  Location     Type
  4194 ;;                  1    wreg      void 
  4195 ;; Registers used:
  4196 ;;		wreg
  4197 ;; Tracked objects:
  4198 ;;		On entry : 0/0
  4199 ;;		On exit  : 0/0
  4200 ;;		Unchanged: 0/0
  4201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4203 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4205 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4206 ;;Total ram usage:        1 bytes
  4207 ;; Hardware stack levels used: 1
  4208 ;; This function calls:
  4209 ;;		Nothing
  4210 ;; This function is called by:
  4211 ;;		_EUSART_Write_Text
  4212 ;;		_EUSART_Write_Integer
  4213 ;; This function uses a non-reentrant model
  4214 ;;
  4215                           
  4216     03AD                     _EUSART_Write:	
  4217                           ;psect for function _EUSART_Write
  4218                           
  4219                           
  4220                           ;incstack = 0
  4221                           ; Regs used in _EUSART_Write: [wreg]
  4222                           ;EUSART_Write@txData stored from wreg
  4223     03AD  00F0               	movwf	EUSART_Write@txData
  4224     03AE                     l1155:
  4225     03AE                     l200:	
  4226                           ;EUSART.c: 94:     {;EUSART.c: 95:     }
  4227                           
  4228                           
  4229                           ;EUSART.c: 93:     while(0 == PIR1bits.TXIF)
  4230     03AE  0020               	movlb	0	; select bank0
  4231     03AF  1E11               	btfss	17,4	;volatile
  4232     03B0  2BB2               	goto	u531
  4233     03B1  2BB3               	goto	u530
  4234     03B2                     u531:
  4235     03B2  2BAE               	goto	l200
  4236     03B3                     u530:
  4237     03B3                     l1157:
  4238                           
  4239                           ;EUSART.c: 97:     TX1REG = txData;
  4240     03B3  0870               	movf	EUSART_Write@txData,w
  4241     03B4  0023               	movlb	3	; select bank3
  4242     03B5  009A               	movwf	26	;volatile
  4243     03B6                     l203:
  4244     03B6  0008               	return
  4245     03B7                     __end_of_EUSART_Write:
  4246     007E                     btemp	set	126	;btemp
  4247     007E                     wtemp0	set	126
  4248                           
  4249                           	psect	config
  4250                           
  4251                           ;Config register CONFIG1 @ 0x8007
  4252                           ;	Oscillator Selection Bits
  4253                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  4254                           ;	Watchdog Timer Enable
  4255                           ;	WDTE = OFF, WDT disabled
  4256                           ;	Power-up Timer Enable
  4257                           ;	PWRTE = OFF, PWRT disabled
  4258                           ;	MCLR Pin Function Select
  4259                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input if LVP bit is also 0.
  4260                           ;	Flash Program Memory Code Protection
  4261                           ;	CP = OFF, Program memory code protection is disabled
  4262                           ;	Brown-out Reset Enable
  4263                           ;	BOREN = OFF, Brown-out Reset disabled
  4264                           ;	Clock Out Enable
  4265                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  4266                           ;	Internal/External Switchover Mode
  4267                           ;	IESO = ON, Internal/External Switchover Mode is enabled
  4268                           ;	Fail-Safe Clock Monitor Enable
  4269                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4270     8007                     	org	32775
  4271     8007  19A4               	dw	6564
  4272                           
  4273                           ;Config register CONFIG2 @ 0x8008
  4274                           ;	Flash Memory Self-Write Protection
  4275                           ;	WRT = OFF, Write protection off
  4276                           ;	Peripheral Pin Select one-way control
  4277                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
  4278                           ;	Zero-cross detect disable
  4279                           ;	ZCDDIS = ON, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  4280                           ;	Phase Lock Loop enable
  4281                           ;	PLLEN = OFF, 4x PLL is disabled
  4282                           ;	Stack Overflow/Underflow Reset Enable
  4283                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  4284                           ;	Brown-out Reset Voltage Selection
  4285                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  4286                           ;	Low-Power Brown Out Reset
  4287                           ;	LPBOR = OFF, Low-Power BOR is disabled
  4288                           ;	In-Circuit Debugger Mode
  4289                           ;	DEBUG = 0x1, unprogrammed default
  4290                           ;	Low-Voltage Programming Enable
  4291                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  4292     8008                     	org	32776
  4293     8008  1EFF               	dw	7935

Data Sizes:
    Strings     95
    Constant    0
    Data        0
    BSS         0
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     35      35
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    EUSART_Write_Integer@ptr	PTR unsigned char  size(1) Largest target is 20
		 -> EUSART_Write_Integer@buffer(BANK0[20]), 

    EUSART_Write_Integer@temp_ptr	PTR unsigned char  size(1) Largest target is 20
		 -> EUSART_Write_Integer@buffer(BANK0[20]), 

    EUSART_Write_Text@text	PTR unsigned char  size(2) Largest target is 17
		 -> STR_1(CODE[16]), STR_2(CODE[17]), STR_3(CODE[16]), STR_4(CODE[15]), 
		 -> STR_5(CODE[17]), STR_6(CODE[14]), STR_7(CODE[2]), 

    itoa@buf	PTR PTR unsigned char  size(1) Largest target is 1
		 -> EUSART_Write_Integer@ptr(BANK0[1]), 


Critical Paths under _main in COMMON

    _main->_EUSART_Write_Integer
    _EUSART_Write_Integer->_itoa
    _itoa->___awdiv
    _EUSART_Initialize->___aldiv
    _EEPROM_Write->_EUSART_Write_Text
    _EEPROM_Read->_EUSART_Write_Text
    _EUSART_Write_Text->_EUSART_Write

Critical Paths under _main in BANK0

    _main->_EUSART_Write_Integer
    _EUSART_Write_Integer->_itoa
    _EUSART_Initialize->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    7060
                                             29 BANK0      6     6      0
                        _EEPROM_Read
                       _EEPROM_Write
                  _EUSART_Initialize
               _EUSART_Write_Integer
                  _EUSART_Write_Text
                           _I2C_Init
                           _initMain
 ---------------------------------------------------------------------------------
 (1) _initMain                                             1     1      0       0
                                              0 COMMON     1     1      0
                        _internal_32
 ---------------------------------------------------------------------------------
 (2) _internal_32                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Write_Integer                                25    23      2    2467
                                             11 COMMON     3     1      2
                                              7 BANK0     22    22      0
                       _EUSART_Write
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 9     7      2    2069
                                              9 COMMON     2     0      2
                                              0 BANK0      7     7      0
                            ___awdiv
                            ___awmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     908
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _EUSART_Initialize                                   18    14      4     595
                                              9 COMMON     2     2      0
                                              6 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Write                                         5     3      2    1612
                                              6 COMMON     5     3      2
                  _EUSART_Write_Text
               _Send_I2C_ControlByte
                      _Send_I2C_Data
                  _Send_I2C_StartBit
                   _Send_I2C_StopBit
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Read                                          5     4      1    1559
                                              6 COMMON     5     4      1
                  _EUSART_Write_Text
                      _Read_I2C_Data
               _Send_I2C_ControlByte
                      _Send_I2C_Data
                       _Send_I2C_NAK
                  _Send_I2C_StartBit
                   _Send_I2C_StopBit
 ---------------------------------------------------------------------------------
 (2) _Send_I2C_StopBit                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Send_I2C_StartBit                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Send_I2C_NAK                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Send_I2C_Data                                        2     0      2     250
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _Send_I2C_ControlByte                                 4     0      4     500
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) _Read_I2C_Data                                        4     2      2       0
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _EUSART_Write_Text                                    5     3      2     644
                                              1 COMMON     5     3      2
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEPROM_Read
     _EUSART_Write_Text
       _EUSART_Write
     _Read_I2C_Data
     _Send_I2C_ControlByte
     _Send_I2C_Data
     _Send_I2C_NAK
     _Send_I2C_StartBit
     _Send_I2C_StopBit
   _EEPROM_Write
     _EUSART_Write_Text
     _Send_I2C_ControlByte
     _Send_I2C_Data
     _Send_I2C_StartBit
     _Send_I2C_StopBit
   _EUSART_Initialize
     ___aldiv
   _EUSART_Write_Integer
     _EUSART_Write
     _itoa
       ___awdiv
       ___awmod
       ___wmul
   _EUSART_Write_Text
   _I2C_Init
   _initMain
     _internal_32

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     23      23       5       43.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0       0      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              50      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24              50      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25              20      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Nov 24 03:38:36 2023

                 main@word_address 0042                                 l62 0545  
                               l65 04F9                                 l90 03AC  
                               l59 04B3                       ___awdiv@sign 0076  
              ___wmul@multiplicand 0072                      _Read_I2C_Data 03FF  
                              l200 03AE                                l203 03B6  
                              l123 03FE                                l132 0403  
                              l141 03ED                                l126 03D0  
                              l150 03C5                                l215 042D  
                              l135 0410                                l231 07FC  
                              l144 03BB                                l129 03D5  
                              l153 03CA                                l305 0438  
                              l225 07A2                                l138 03E8  
                              l162 03DB                                l147 03C0  
                              l307 044C                                l165 03E0  
                              l237 0470                                l190 0595  
                              l370 06E7                                l380 0763  
                              l471 05E8                                l458 0647  
                              u600 060A                                u601 0609  
                              u530 03B3                                u531 03B2  
                              u620 061A                                u700 05B1  
                              u540 0434                                u621 0619  
                              u701 05B0                                u541 0433  
                              u615 060E                                u800 03D5  
                              u640 0629                                u720 05C1  
                              u801 03D4                                u641 0628  
                              u721 05C0                                u810 03CA  
                              u730 05CB                                u570 0448  
                              u811 03C9                                u635 061B  
                              u731 05CA                                u715 05B5  
                              u571 0447                                u555 0439  
                              u820 0408                                u660 0639  
                              u580 05EE                                u821 0407  
                              u661 0638                                u645 0625  
                              u581 05ED                                u565 043E  
                              u830 03E0                                u910 071C  
                              u670 063E                                u590 05F9  
                              u750 05DA                                u831 03DF  
                              u911 071B                                u671 063D  
                              u655 062F                                u591 05F8  
                              u751 05D9                                u735 05C7  
                              u760 05DF                                u680 059B  
                              u840 076E                                u905 070E  
                              u761 05DE                                u745 05D0  
                              u681 059A                                u841 076D  
                              u770 042D                                u930 0735  
                              u690 05A6                                u850 07B3  
                              u771 042C                                u931 0734  
                              u691 05A5                                u851 07B2  
                              u780 03C0                                u860 07F5  
                              u781 03BF                                u925 071D  
                              u861 07F4                                u790 03ED  
                              u950 074B                                u870 06DA  
                              u791 03EC                                u951 074A  
                              u935 0731                                u871 06D9  
                              u960 0750                                u880 06EB  
                              u961 074F                                u945 073F  
                              u881 06EA                                u890 070A  
                              u970 0554                                u891 0709  
                              u980 056B                                u990 0470  
                              u975 0550                                u991 046F  
                              u985 0567       __end_of_Send_I2C_ControlByte 03EE  
                     ___awmod@sign 0076                                wreg 0009  
                             l1201 0629                               l1211 063E  
                             l1203 062D                               l1213 0643  
                             l1205 062E                               l1221 059B  
                             l1301 07F5                               l1311 06F6  
                             l1303 06D4                               l1207 0633  
                             l1231 05B1                               l1223 05A0  
                             l1321 0718                               l1313 06FA  
                             l1305 06D6                               l1209 0639  
                             l1241 05CB                               l1233 05B4  
                             l1225 05A2                               l1217 0596  
                             l1161 0430                               l1401 04CC  
                             l1155 03AE                               l1331 073E  
                             l1323 071C                               l1315 0702  
                             l1307 06DA                               l1251 05E4  
                             l1243 05CF                               l1235 05B9  
                             l1227 05A6                               l1219 0597  
                             l1163 0434                               l1411 04D5  
                             l1403 04CD                               l1157 03B3  
                             l1261 0422                               l1333 0745  
                             l1325 0723                               l1317 070A  
                             l1309 06EB                               l1181 05F5  
                             l1173 05E9                               l1245 05D4  
                             l1237 05BD                               l1229 05AB  
                             l1165 043D                               l1421 04EA  
                             l1413 04D6                               l1405 04CF  
                             l1501 06C0                               l1255 0411  
                             l1271 03CD                               l1263 03B7  
                             l1351 0493                               l1343 0472  
                             l1327 0735                               l1319 070D  
                             l1335 074B                               l1431 0546  
                             l1191 060A                               l1183 05F9  
                             l1175 05EA                               l1239 05C1  
                             l1247 05DA                               l1167 0442  
                             l1159 042E                               l1423 04EE  
                             l1415 04DB                               l1407 04D0  
                             l1503 06C4                               l1257 0414  
                             l1265 03E1                               l1281 03D6  
                             l1273 03C1                               l1361 0502  
                             l1353 049D                               l1345 0479  
                             l1337 0750                               l1329 073D  
                             l1441 0592                               l1433 058C  
                             l1193 060D                               l1185 05FE  
                             l1177 05EE                               l1249 05DF  
                             l1169 0448                               l1425 04F3  
                             l1417 04E0                               l1409 04D3  
                             l1259 041E                               l1275 03FF  
                             l1267 03E3                               l1371 052D  
                             l1363 0505                               l1355 04A0  
                             l1347 047C                               l1339 075B  
                             l1443 0593                               l1435 058F  
                             l1195 0612                               l1187 0602  
                             l1179 05F3                               l1291 077C  
                             l1451 03F3                               l1283 03A4  
                             l1427 04F6                               l1419 04E5  
                             l1277 0408                               l1269 03CB  
                             l1373 0532                               l1365 0512  
                             l1357 04AC                               l1349 0489  
                             l1445 0594                               l1437 0590  
                             l1197 0616                               l1189 0604  
                             l1293 0781                               l1285 0766  
                             l1461 0458                               l1453 03F4  
                             l1429 04F8                               l1375 0535  
                             l1367 051C                               l1359 04FB  
                             l1439 0591                               l1199 061A  
                             l1295 07B4                               l1287 076E  
                             l1463 045C                               l1455 03F6  
                             l1391 04C3                               l1383 04B4  
                             l1471 065A                               l1377 0538  
                             l1369 051F                               l1297 07E4  
                             l1289 0777                               l1465 0463  
                             l1457 044D                               l1449 03EE  
                             l1393 04C5                               l1385 04B7  
                             l1481 066C                               l1473 0666  
                             l1379 0544                               l1299 07EE  
                             l1467 0468                               l1459 0450  
                             l1395 04C7                               l1387 04BF  
                             l1491 0697                               l1483 0675  
                             l1475 0669                               l1397 04C9  
                             l1389 04C1                               l1493 06A2  
                             l1485 067E                               l1477 066A  
                             l1469 0648                               l1399 04CB  
                             l1495 06A9                               l1487 0685  
                             l1479 066C                               l1497 06B4  
                             l1489 0690                               l1499 06BB  
       EUSART_Write_Integer@buffer 0027                               STR_1 0832  
                             STR_2 0800                               STR_3 0822  
                             STR_4 0842                               STR_5 0811  
                             STR_6 0851                               STR_7 0830  
                             _BRGH 0CF2                               _CREN 0CEC  
                             u1007 0660                               u1017 06CA  
                             u1027 04BA                               u1037 03F9  
                             u1047 04A5                               u1057 053D  
                             _SCS0 04C8                               _SCS1 04C9  
                             _SPEN 0CEF                               _TXEN 0CF5  
                             _SYNC 0CF4                               _main 0648  
                             _itoa 0764                   __end_of_I2C_Init 03FF  
                             fsr0h 0005                               fsr1h 0007  
                             indf0 0000                               fsr0l 0004  
                             indf1 0001                               fsr1l 0006  
                             btemp 007E                               start 0002  
          EEPROM_Write@eeprom_data 0077               __end_of_EEPROM_Write 04B4  
                   ?_Read_I2C_Data 0070                      ?_EUSART_Write 0070  
         EEPROM_Read@block_address 007A                    __end_of___aldiv 0764  
                            ?_main 0070                              ?_itoa 0079  
                  __end_of___awdiv 0648                              _BRG16 0CFB  
                  __end_of___awmod 05E9                    ___awdiv@divisor 0070  
                            _IRCF0 04CB                              _IRCF1 04CC  
                            _IRCF2 04CD                              _IRCF3 04CE  
                  ___awdiv@counter 0075                              _TRISD 008F  
                            itoa@d 0079                              status 0003  
                            wtemp0 007E                       ?_internal_32 0070  
                  __initialization 07FD                       __end_of_main 06D4  
                     __end_of_itoa 07FD                     ??_EUSART_Write 0070  
                           ??_main 003D                             ??_itoa 007B  
 Send_I2C_ControlByte@BlockAddress 0070                   ___awdiv@dividend 0072  
                           _ANSELD 018F                             _RC1REG 0199  
                    ?_Send_I2C_NAK 0070                             _SPBRGL 019B  
                           _TX1REG 019A                             _SPLLEN 04CF  
                           _SSPADD 0212                             _SSPBUF 0211  
                    main@read_data 003F               _Send_I2C_ControlByte 03E1  
                        ??___aldiv 0078                             ___wmul 042E  
                  ??_Read_I2C_Data 0072                          ??___awdiv 0074  
                        ??___awmod 0074                   __end_of_initMain 04FA  
                 ___awdiv@quotient 0077                    ___awmod@divisor 0070  
                  ___awmod@counter 0075                          ?_I2C_Init 0070  
            Send_I2C_Data@databyte 0070                     ??_Send_I2C_NAK 0070  
          __end_of__initialization 07FD              ?_Send_I2C_ControlByte 0070  
                   __pcstackCOMMON 0070                         ??_I2C_Init 0070  
                    _Send_I2C_Data 03CB                       _EEPROM_Write 0471  
             __end_of_EUSART_Write 03B7                         __pmaintext 0648  
                          ?___wmul 0070                     ?_Send_I2C_Data 0070  
                          _PPSLOCK 0E0F                          ?_initMain 0070  
           ??_Send_I2C_ControlByte 0074                            ___aldiv 06D4  
                          ___awdiv 05E9                            ___awmod 0596  
             __end_of_Send_I2C_NAK 03E1                            __ptext1 04B4  
                          __ptext2 03A4                            __ptext3 03EE  
                          __ptext4 044D                            __ptext5 0764  
                          __ptext6 042E                            __ptext7 0596  
                          __ptext8 05E9                            __ptext9 0546  
                 ___awmod@dividend 0072                   ___aldiv@dividend 0074  
             end_of_initialization 07FD                         ??_initMain 0070  
                    ??_EEPROM_Read 0077                            itoa@div 0025  
                          itoa@buf 0024                            itoa@num 0020  
                _EUSART_Initialize 0546                   _Send_I2C_StopBit 03C1  
               ?_EUSART_Initialize 0026                  main@block_address 0040  
                 ___aldiv@quotient 0022                 EUSART_Initialize@x 0079  
              ??_EUSART_Initialize 002A                    ??_Send_I2C_Data 0072  
                        _TRISBbits 008D                          _TRISCbits 008E  
                        _TRISDbits 008F                          _RXPPSbits 0E24  
        __end_of_EUSART_Initialize 0596       __end_of_EUSART_Write_Integer 0471  
              __end_of_EEPROM_Read 0546                     __end_of___wmul 044D  
            __end_of_Read_I2C_Data 0411                       _EUSART_Write 03AD  
              start_initialization 07FD           EEPROM_Read@incoming_data 0079  
EUSART_Write_Integer@value_to_send 007B                  _EUSART_Write_Text 0411  
               ?_EUSART_Write_Text 0071                           ??___wmul 0074  
              ??_EUSART_Write_Text 0073                          ___latbits 0003  
                    __pcstackBANK0 0020          __end_of_EUSART_Write_Text 042E  
                     _Send_I2C_NAK 03D6                        _EEPROM_Read 04FA  
                  main@eeprom_data 0041                      ??_internal_32 0070  
                         ?___aldiv 0070                           ?___awdiv 0070  
                         ?___awmod 0070          EUSART_Initialize@baudrate 0026  
                         _I2C_Init 03EE               _EUSART_Write_Integer 044D  
         __end_of_Send_I2C_StopBit 03CB                    ___aldiv@divisor 0070  
                  ___aldiv@counter 0020                     ___wmul@product 0074  
                         _LATDbits 010F                           _PIR1bits 0011  
          EUSART_Write_Integer@ptr 003B          EEPROM_Write@block_address 007A  
              __end_of_internal_32 03AD                  ___wmul@multiplier 0070  
            ?_EUSART_Write_Integer 007B       EUSART_Write_Integer@temp_ptr 003C  
          EEPROM_Read@word_address 0076                         _ANSELBbits 018D  
                       _ANSELCbits 018E              __end_of_Send_I2C_Data 03D6  
                         __ptext10 06D4                           __ptext11 0471  
                         __ptext20 03AD                           __ptext12 04FA  
                         __ptext13 03C1                           __ptext14 03B7  
                         __ptext15 03D6                           __ptext16 03CB  
                         __ptext17 03E1                           __ptext18 03FF  
                         __ptext19 0411         Send_I2C_ControlByte@RW_bit 0072  
                    ?_EEPROM_Write 0076           EEPROM_Write@word_address 0076  
                         _initMain 04B4                      _SSPDATPPSbits 0E21  
                      _internal_32 03A4                         _RB2PPSbits 0E9A  
                       _RC1STAbits 019D                         _RC4PPSbits 0EA4  
                    _SSPCLKPPSbits 0E20                         _RC5PPSbits 0EA5  
           ??_EUSART_Write_Integer 007D                           itoa@temp 0022  
                   ??_EEPROM_Write 0078                       ?_EEPROM_Read 0076  
                      _PPSLOCKbits 0E0F                  _Send_I2C_StartBit 03B7  
               ?_Send_I2C_StartBit 0070                      __pstringtext1 0800  
                    __pstringtext2 0811                      __pstringtext3 0822  
                    __pstringtext4 0832                      __pstringtext5 0842  
                    __pstringtext6 0851                      __pstringtext7 0000  
              ??_Send_I2C_StartBit 0070              EUSART_Write_Text@text 0071  
                     ___aldiv@sign 0021                        _SSPCON2bits 0216  
                ?_Send_I2C_StopBit 0070                 EUSART_Write@txData 0070  
               ??_Send_I2C_StopBit 0070          __end_of_Send_I2C_StartBit 03C1  
                       _SSPCONbits 0215                 EUSART_Write_Text@i 0074  
