

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Sun Feb 26 07:31:25 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F1717
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	dabs	1,0x7E,2
    30  0000                     	;# 
    31  0001                     	;# 
    32  0002                     	;# 
    33  0003                     	;# 
    34  0004                     	;# 
    35  0005                     	;# 
    36  0006                     	;# 
    37  0007                     	;# 
    38  0008                     	;# 
    39  0009                     	;# 
    40  000A                     	;# 
    41  000B                     	;# 
    42  000C                     	;# 
    43  000D                     	;# 
    44  000E                     	;# 
    45  000F                     	;# 
    46  0010                     	;# 
    47  0011                     	;# 
    48  0012                     	;# 
    49  0013                     	;# 
    50  0015                     	;# 
    51  0016                     	;# 
    52  0016                     	;# 
    53  0017                     	;# 
    54  0018                     	;# 
    55  0019                     	;# 
    56  001A                     	;# 
    57  001B                     	;# 
    58  001C                     	;# 
    59  008C                     	;# 
    60  008D                     	;# 
    61  008E                     	;# 
    62  008F                     	;# 
    63  0090                     	;# 
    64  0091                     	;# 
    65  0092                     	;# 
    66  0093                     	;# 
    67  0095                     	;# 
    68  0096                     	;# 
    69  0097                     	;# 
    70  0098                     	;# 
    71  0099                     	;# 
    72  009A                     	;# 
    73  009B                     	;# 
    74  009B                     	;# 
    75  009C                     	;# 
    76  009D                     	;# 
    77  009E                     	;# 
    78  009F                     	;# 
    79  010C                     	;# 
    80  010D                     	;# 
    81  010E                     	;# 
    82  010F                     	;# 
    83  0110                     	;# 
    84  0111                     	;# 
    85  0112                     	;# 
    86  0113                     	;# 
    87  0114                     	;# 
    88  0115                     	;# 
    89  0116                     	;# 
    90  0117                     	;# 
    91  0118                     	;# 
    92  0119                     	;# 
    93  011A                     	;# 
    94  011B                     	;# 
    95  011B                     	;# 
    96  011C                     	;# 
    97  018C                     	;# 
    98  018D                     	;# 
    99  018E                     	;# 
   100  018F                     	;# 
   101  0190                     	;# 
   102  0191                     	;# 
   103  0191                     	;# 
   104  0192                     	;# 
   105  0193                     	;# 
   106  0193                     	;# 
   107  0194                     	;# 
   108  0195                     	;# 
   109  0196                     	;# 
   110  0197                     	;# 
   111  0199                     	;# 
   112  0199                     	;# 
   113  0199                     	;# 
   114  019A                     	;# 
   115  019A                     	;# 
   116  019A                     	;# 
   117  019B                     	;# 
   118  019B                     	;# 
   119  019B                     	;# 
   120  019B                     	;# 
   121  019B                     	;# 
   122  019C                     	;# 
   123  019C                     	;# 
   124  019C                     	;# 
   125  019D                     	;# 
   126  019D                     	;# 
   127  019D                     	;# 
   128  019E                     	;# 
   129  019E                     	;# 
   130  019E                     	;# 
   131  019F                     	;# 
   132  019F                     	;# 
   133  019F                     	;# 
   134  019F                     	;# 
   135  019F                     	;# 
   136  020C                     	;# 
   137  020D                     	;# 
   138  020E                     	;# 
   139  020F                     	;# 
   140  0210                     	;# 
   141  0211                     	;# 
   142  0211                     	;# 
   143  0212                     	;# 
   144  0212                     	;# 
   145  0213                     	;# 
   146  0213                     	;# 
   147  0214                     	;# 
   148  0214                     	;# 
   149  0215                     	;# 
   150  0215                     	;# 
   151  0215                     	;# 
   152  0215                     	;# 
   153  0216                     	;# 
   154  0216                     	;# 
   155  0217                     	;# 
   156  0217                     	;# 
   157  028C                     	;# 
   158  028D                     	;# 
   159  028E                     	;# 
   160  028F                     	;# 
   161  0290                     	;# 
   162  0291                     	;# 
   163  0291                     	;# 
   164  0292                     	;# 
   165  0293                     	;# 
   166  0293                     	;# 
   167  0298                     	;# 
   168  0298                     	;# 
   169  0299                     	;# 
   170  029A                     	;# 
   171  029A                     	;# 
   172  029E                     	;# 
   173  030C                     	;# 
   174  030D                     	;# 
   175  030E                     	;# 
   176  030F                     	;# 
   177  0310                     	;# 
   178  038C                     	;# 
   179  038D                     	;# 
   180  038E                     	;# 
   181  038F                     	;# 
   182  0390                     	;# 
   183  0391                     	;# 
   184  0392                     	;# 
   185  0393                     	;# 
   186  0394                     	;# 
   187  0395                     	;# 
   188  0396                     	;# 
   189  0397                     	;# 
   190  0398                     	;# 
   191  0399                     	;# 
   192  039D                     	;# 
   193  039E                     	;# 
   194  039F                     	;# 
   195  0415                     	;# 
   196  0416                     	;# 
   197  0417                     	;# 
   198  041C                     	;# 
   199  041D                     	;# 
   200  041E                     	;# 
   201  0498                     	;# 
   202  0498                     	;# 
   203  0499                     	;# 
   204  049A                     	;# 
   205  049B                     	;# 
   206  049B                     	;# 
   207  049C                     	;# 
   208  049D                     	;# 
   209  049E                     	;# 
   210  049F                     	;# 
   211  0511                     	;# 
   212  0515                     	;# 
   213  0617                     	;# 
   214  0618                     	;# 
   215  0619                     	;# 
   216  0619                     	;# 
   217  061A                     	;# 
   218  061B                     	;# 
   219  061C                     	;# 
   220  061C                     	;# 
   221  0691                     	;# 
   222  0692                     	;# 
   223  0693                     	;# 
   224  0694                     	;# 
   225  0695                     	;# 
   226  0696                     	;# 
   227  0697                     	;# 
   228  0698                     	;# 
   229  0699                     	;# 
   230  069A                     	;# 
   231  069B                     	;# 
   232  069C                     	;# 
   233  069D                     	;# 
   234  069E                     	;# 
   235  069F                     	;# 
   236  0E0F                     	;# 
   237  0E10                     	;# 
   238  0E11                     	;# 
   239  0E12                     	;# 
   240  0E13                     	;# 
   241  0E14                     	;# 
   242  0E15                     	;# 
   243  0E17                     	;# 
   244  0E20                     	;# 
   245  0E21                     	;# 
   246  0E22                     	;# 
   247  0E24                     	;# 
   248  0E25                     	;# 
   249  0E28                     	;# 
   250  0E29                     	;# 
   251  0E2A                     	;# 
   252  0E2B                     	;# 
   253  0E90                     	;# 
   254  0E91                     	;# 
   255  0E92                     	;# 
   256  0E93                     	;# 
   257  0E94                     	;# 
   258  0E95                     	;# 
   259  0E96                     	;# 
   260  0E97                     	;# 
   261  0E98                     	;# 
   262  0E99                     	;# 
   263  0E9A                     	;# 
   264  0E9B                     	;# 
   265  0E9C                     	;# 
   266  0E9D                     	;# 
   267  0E9E                     	;# 
   268  0E9F                     	;# 
   269  0EA0                     	;# 
   270  0EA1                     	;# 
   271  0EA2                     	;# 
   272  0EA3                     	;# 
   273  0EA4                     	;# 
   274  0EA5                     	;# 
   275  0EA6                     	;# 
   276  0EA7                     	;# 
   277  0EA8                     	;# 
   278  0EA9                     	;# 
   279  0EAA                     	;# 
   280  0EAB                     	;# 
   281  0EAC                     	;# 
   282  0EAD                     	;# 
   283  0EAE                     	;# 
   284  0EAF                     	;# 
   285  0EB0                     	;# 
   286  0EB1                     	;# 
   287  0EB2                     	;# 
   288  0F0F                     	;# 
   289  0F10                     	;# 
   290  0F11                     	;# 
   291  0F12                     	;# 
   292  0F13                     	;# 
   293  0F14                     	;# 
   294  0F15                     	;# 
   295  0F16                     	;# 
   296  0F17                     	;# 
   297  0F18                     	;# 
   298  0F19                     	;# 
   299  0F1A                     	;# 
   300  0F1B                     	;# 
   301  0F1C                     	;# 
   302  0F1D                     	;# 
   303  0F1E                     	;# 
   304  0F1F                     	;# 
   305  0F20                     	;# 
   306  0F21                     	;# 
   307  0F22                     	;# 
   308  0F23                     	;# 
   309  0F24                     	;# 
   310  0F25                     	;# 
   311  0F26                     	;# 
   312  0F27                     	;# 
   313  0F28                     	;# 
   314  0F29                     	;# 
   315  0F2A                     	;# 
   316  0F2B                     	;# 
   317  0F2C                     	;# 
   318  0F2D                     	;# 
   319  0F2E                     	;# 
   320  0F2F                     	;# 
   321  0F30                     	;# 
   322  0F31                     	;# 
   323  0F32                     	;# 
   324  0F33                     	;# 
   325  0F34                     	;# 
   326  0F35                     	;# 
   327  0F36                     	;# 
   328  0F37                     	;# 
   329  0FE4                     	;# 
   330  0FE5                     	;# 
   331  0FE6                     	;# 
   332  0FE7                     	;# 
   333  0FE8                     	;# 
   334  0FE9                     	;# 
   335  0FEA                     	;# 
   336  0FEB                     	;# 
   337  0FED                     	;# 
   338  0FEE                     	;# 
   339  0FEF                     	;# 
   340  0000                     	;# 
   341  0001                     	;# 
   342  0002                     	;# 
   343  0003                     	;# 
   344  0004                     	;# 
   345  0005                     	;# 
   346  0006                     	;# 
   347  0007                     	;# 
   348  0008                     	;# 
   349  0009                     	;# 
   350  000A                     	;# 
   351  000B                     	;# 
   352  000C                     	;# 
   353  000D                     	;# 
   354  000E                     	;# 
   355  000F                     	;# 
   356  0010                     	;# 
   357  0011                     	;# 
   358  0012                     	;# 
   359  0013                     	;# 
   360  0015                     	;# 
   361  0016                     	;# 
   362  0016                     	;# 
   363  0017                     	;# 
   364  0018                     	;# 
   365  0019                     	;# 
   366  001A                     	;# 
   367  001B                     	;# 
   368  001C                     	;# 
   369  008C                     	;# 
   370  008D                     	;# 
   371  008E                     	;# 
   372  008F                     	;# 
   373  0090                     	;# 
   374  0091                     	;# 
   375  0092                     	;# 
   376  0093                     	;# 
   377  0095                     	;# 
   378  0096                     	;# 
   379  0097                     	;# 
   380  0098                     	;# 
   381  0099                     	;# 
   382  009A                     	;# 
   383  009B                     	;# 
   384  009B                     	;# 
   385  009C                     	;# 
   386  009D                     	;# 
   387  009E                     	;# 
   388  009F                     	;# 
   389  010C                     	;# 
   390  010D                     	;# 
   391  010E                     	;# 
   392  010F                     	;# 
   393  0110                     	;# 
   394  0111                     	;# 
   395  0112                     	;# 
   396  0113                     	;# 
   397  0114                     	;# 
   398  0115                     	;# 
   399  0116                     	;# 
   400  0117                     	;# 
   401  0118                     	;# 
   402  0119                     	;# 
   403  011A                     	;# 
   404  011B                     	;# 
   405  011B                     	;# 
   406  011C                     	;# 
   407  018C                     	;# 
   408  018D                     	;# 
   409  018E                     	;# 
   410  018F                     	;# 
   411  0190                     	;# 
   412  0191                     	;# 
   413  0191                     	;# 
   414  0192                     	;# 
   415  0193                     	;# 
   416  0193                     	;# 
   417  0194                     	;# 
   418  0195                     	;# 
   419  0196                     	;# 
   420  0197                     	;# 
   421  0199                     	;# 
   422  0199                     	;# 
   423  0199                     	;# 
   424  019A                     	;# 
   425  019A                     	;# 
   426  019A                     	;# 
   427  019B                     	;# 
   428  019B                     	;# 
   429  019B                     	;# 
   430  019B                     	;# 
   431  019B                     	;# 
   432  019C                     	;# 
   433  019C                     	;# 
   434  019C                     	;# 
   435  019D                     	;# 
   436  019D                     	;# 
   437  019D                     	;# 
   438  019E                     	;# 
   439  019E                     	;# 
   440  019E                     	;# 
   441  019F                     	;# 
   442  019F                     	;# 
   443  019F                     	;# 
   444  019F                     	;# 
   445  019F                     	;# 
   446  020C                     	;# 
   447  020D                     	;# 
   448  020E                     	;# 
   449  020F                     	;# 
   450  0210                     	;# 
   451  0211                     	;# 
   452  0211                     	;# 
   453  0212                     	;# 
   454  0212                     	;# 
   455  0213                     	;# 
   456  0213                     	;# 
   457  0214                     	;# 
   458  0214                     	;# 
   459  0215                     	;# 
   460  0215                     	;# 
   461  0215                     	;# 
   462  0215                     	;# 
   463  0216                     	;# 
   464  0216                     	;# 
   465  0217                     	;# 
   466  0217                     	;# 
   467  028C                     	;# 
   468  028D                     	;# 
   469  028E                     	;# 
   470  028F                     	;# 
   471  0290                     	;# 
   472  0291                     	;# 
   473  0291                     	;# 
   474  0292                     	;# 
   475  0293                     	;# 
   476  0293                     	;# 
   477  0298                     	;# 
   478  0298                     	;# 
   479  0299                     	;# 
   480  029A                     	;# 
   481  029A                     	;# 
   482  029E                     	;# 
   483  030C                     	;# 
   484  030D                     	;# 
   485  030E                     	;# 
   486  030F                     	;# 
   487  0310                     	;# 
   488  038C                     	;# 
   489  038D                     	;# 
   490  038E                     	;# 
   491  038F                     	;# 
   492  0390                     	;# 
   493  0391                     	;# 
   494  0392                     	;# 
   495  0393                     	;# 
   496  0394                     	;# 
   497  0395                     	;# 
   498  0396                     	;# 
   499  0397                     	;# 
   500  0398                     	;# 
   501  0399                     	;# 
   502  039D                     	;# 
   503  039E                     	;# 
   504  039F                     	;# 
   505  0415                     	;# 
   506  0416                     	;# 
   507  0417                     	;# 
   508  041C                     	;# 
   509  041D                     	;# 
   510  041E                     	;# 
   511  0498                     	;# 
   512  0498                     	;# 
   513  0499                     	;# 
   514  049A                     	;# 
   515  049B                     	;# 
   516  049B                     	;# 
   517  049C                     	;# 
   518  049D                     	;# 
   519  049E                     	;# 
   520  049F                     	;# 
   521  0511                     	;# 
   522  0515                     	;# 
   523  0617                     	;# 
   524  0618                     	;# 
   525  0619                     	;# 
   526  0619                     	;# 
   527  061A                     	;# 
   528  061B                     	;# 
   529  061C                     	;# 
   530  061C                     	;# 
   531  0691                     	;# 
   532  0692                     	;# 
   533  0693                     	;# 
   534  0694                     	;# 
   535  0695                     	;# 
   536  0696                     	;# 
   537  0697                     	;# 
   538  0698                     	;# 
   539  0699                     	;# 
   540  069A                     	;# 
   541  069B                     	;# 
   542  069C                     	;# 
   543  069D                     	;# 
   544  069E                     	;# 
   545  069F                     	;# 
   546  0E0F                     	;# 
   547  0E10                     	;# 
   548  0E11                     	;# 
   549  0E12                     	;# 
   550  0E13                     	;# 
   551  0E14                     	;# 
   552  0E15                     	;# 
   553  0E17                     	;# 
   554  0E20                     	;# 
   555  0E21                     	;# 
   556  0E22                     	;# 
   557  0E24                     	;# 
   558  0E25                     	;# 
   559  0E28                     	;# 
   560  0E29                     	;# 
   561  0E2A                     	;# 
   562  0E2B                     	;# 
   563  0E90                     	;# 
   564  0E91                     	;# 
   565  0E92                     	;# 
   566  0E93                     	;# 
   567  0E94                     	;# 
   568  0E95                     	;# 
   569  0E96                     	;# 
   570  0E97                     	;# 
   571  0E98                     	;# 
   572  0E99                     	;# 
   573  0E9A                     	;# 
   574  0E9B                     	;# 
   575  0E9C                     	;# 
   576  0E9D                     	;# 
   577  0E9E                     	;# 
   578  0E9F                     	;# 
   579  0EA0                     	;# 
   580  0EA1                     	;# 
   581  0EA2                     	;# 
   582  0EA3                     	;# 
   583  0EA4                     	;# 
   584  0EA5                     	;# 
   585  0EA6                     	;# 
   586  0EA7                     	;# 
   587  0EA8                     	;# 
   588  0EA9                     	;# 
   589  0EAA                     	;# 
   590  0EAB                     	;# 
   591  0EAC                     	;# 
   592  0EAD                     	;# 
   593  0EAE                     	;# 
   594  0EAF                     	;# 
   595  0EB0                     	;# 
   596  0EB1                     	;# 
   597  0EB2                     	;# 
   598  0F0F                     	;# 
   599  0F10                     	;# 
   600  0F11                     	;# 
   601  0F12                     	;# 
   602  0F13                     	;# 
   603  0F14                     	;# 
   604  0F15                     	;# 
   605  0F16                     	;# 
   606  0F17                     	;# 
   607  0F18                     	;# 
   608  0F19                     	;# 
   609  0F1A                     	;# 
   610  0F1B                     	;# 
   611  0F1C                     	;# 
   612  0F1D                     	;# 
   613  0F1E                     	;# 
   614  0F1F                     	;# 
   615  0F20                     	;# 
   616  0F21                     	;# 
   617  0F22                     	;# 
   618  0F23                     	;# 
   619  0F24                     	;# 
   620  0F25                     	;# 
   621  0F26                     	;# 
   622  0F27                     	;# 
   623  0F28                     	;# 
   624  0F29                     	;# 
   625  0F2A                     	;# 
   626  0F2B                     	;# 
   627  0F2C                     	;# 
   628  0F2D                     	;# 
   629  0F2E                     	;# 
   630  0F2F                     	;# 
   631  0F30                     	;# 
   632  0F31                     	;# 
   633  0F32                     	;# 
   634  0F33                     	;# 
   635  0F34                     	;# 
   636  0F35                     	;# 
   637  0F36                     	;# 
   638  0F37                     	;# 
   639  0FE4                     	;# 
   640  0FE5                     	;# 
   641  0FE6                     	;# 
   642  0FE7                     	;# 
   643  0FE8                     	;# 
   644  0FE9                     	;# 
   645  0FEA                     	;# 
   646  0FEB                     	;# 
   647  0FED                     	;# 
   648  0FEE                     	;# 
   649  0FEF                     	;# 
   650  0000                     	;# 
   651  0001                     	;# 
   652  0002                     	;# 
   653  0003                     	;# 
   654  0004                     	;# 
   655  0005                     	;# 
   656  0006                     	;# 
   657  0007                     	;# 
   658  0008                     	;# 
   659  0009                     	;# 
   660  000A                     	;# 
   661  000B                     	;# 
   662  000C                     	;# 
   663  000D                     	;# 
   664  000E                     	;# 
   665  000F                     	;# 
   666  0010                     	;# 
   667  0011                     	;# 
   668  0012                     	;# 
   669  0013                     	;# 
   670  0015                     	;# 
   671  0016                     	;# 
   672  0016                     	;# 
   673  0017                     	;# 
   674  0018                     	;# 
   675  0019                     	;# 
   676  001A                     	;# 
   677  001B                     	;# 
   678  001C                     	;# 
   679  008C                     	;# 
   680  008D                     	;# 
   681  008E                     	;# 
   682  008F                     	;# 
   683  0090                     	;# 
   684  0091                     	;# 
   685  0092                     	;# 
   686  0093                     	;# 
   687  0095                     	;# 
   688  0096                     	;# 
   689  0097                     	;# 
   690  0098                     	;# 
   691  0099                     	;# 
   692  009A                     	;# 
   693  009B                     	;# 
   694  009B                     	;# 
   695  009C                     	;# 
   696  009D                     	;# 
   697  009E                     	;# 
   698  009F                     	;# 
   699  010C                     	;# 
   700  010D                     	;# 
   701  010E                     	;# 
   702  010F                     	;# 
   703  0110                     	;# 
   704  0111                     	;# 
   705  0112                     	;# 
   706  0113                     	;# 
   707  0114                     	;# 
   708  0115                     	;# 
   709  0116                     	;# 
   710  0117                     	;# 
   711  0118                     	;# 
   712  0119                     	;# 
   713  011A                     	;# 
   714  011B                     	;# 
   715  011B                     	;# 
   716  011C                     	;# 
   717  018C                     	;# 
   718  018D                     	;# 
   719  018E                     	;# 
   720  018F                     	;# 
   721  0190                     	;# 
   722  0191                     	;# 
   723  0191                     	;# 
   724  0192                     	;# 
   725  0193                     	;# 
   726  0193                     	;# 
   727  0194                     	;# 
   728  0195                     	;# 
   729  0196                     	;# 
   730  0197                     	;# 
   731  0199                     	;# 
   732  0199                     	;# 
   733  0199                     	;# 
   734  019A                     	;# 
   735  019A                     	;# 
   736  019A                     	;# 
   737  019B                     	;# 
   738  019B                     	;# 
   739  019B                     	;# 
   740  019B                     	;# 
   741  019B                     	;# 
   742  019C                     	;# 
   743  019C                     	;# 
   744  019C                     	;# 
   745  019D                     	;# 
   746  019D                     	;# 
   747  019D                     	;# 
   748  019E                     	;# 
   749  019E                     	;# 
   750  019E                     	;# 
   751  019F                     	;# 
   752  019F                     	;# 
   753  019F                     	;# 
   754  019F                     	;# 
   755  019F                     	;# 
   756  020C                     	;# 
   757  020D                     	;# 
   758  020E                     	;# 
   759  020F                     	;# 
   760  0210                     	;# 
   761  0211                     	;# 
   762  0211                     	;# 
   763  0212                     	;# 
   764  0212                     	;# 
   765  0213                     	;# 
   766  0213                     	;# 
   767  0214                     	;# 
   768  0214                     	;# 
   769  0215                     	;# 
   770  0215                     	;# 
   771  0215                     	;# 
   772  0215                     	;# 
   773  0216                     	;# 
   774  0216                     	;# 
   775  0217                     	;# 
   776  0217                     	;# 
   777  028C                     	;# 
   778  028D                     	;# 
   779  028E                     	;# 
   780  028F                     	;# 
   781  0290                     	;# 
   782  0291                     	;# 
   783  0291                     	;# 
   784  0292                     	;# 
   785  0293                     	;# 
   786  0293                     	;# 
   787  0298                     	;# 
   788  0298                     	;# 
   789  0299                     	;# 
   790  029A                     	;# 
   791  029A                     	;# 
   792  029E                     	;# 
   793  030C                     	;# 
   794  030D                     	;# 
   795  030E                     	;# 
   796  030F                     	;# 
   797  0310                     	;# 
   798  038C                     	;# 
   799  038D                     	;# 
   800  038E                     	;# 
   801  038F                     	;# 
   802  0390                     	;# 
   803  0391                     	;# 
   804  0392                     	;# 
   805  0393                     	;# 
   806  0394                     	;# 
   807  0395                     	;# 
   808  0396                     	;# 
   809  0397                     	;# 
   810  0398                     	;# 
   811  0399                     	;# 
   812  039D                     	;# 
   813  039E                     	;# 
   814  039F                     	;# 
   815  0415                     	;# 
   816  0416                     	;# 
   817  0417                     	;# 
   818  041C                     	;# 
   819  041D                     	;# 
   820  041E                     	;# 
   821  0498                     	;# 
   822  0498                     	;# 
   823  0499                     	;# 
   824  049A                     	;# 
   825  049B                     	;# 
   826  049B                     	;# 
   827  049C                     	;# 
   828  049D                     	;# 
   829  049E                     	;# 
   830  049F                     	;# 
   831  0511                     	;# 
   832  0515                     	;# 
   833  0617                     	;# 
   834  0618                     	;# 
   835  0619                     	;# 
   836  0619                     	;# 
   837  061A                     	;# 
   838  061B                     	;# 
   839  061C                     	;# 
   840  061C                     	;# 
   841  0691                     	;# 
   842  0692                     	;# 
   843  0693                     	;# 
   844  0694                     	;# 
   845  0695                     	;# 
   846  0696                     	;# 
   847  0697                     	;# 
   848  0698                     	;# 
   849  0699                     	;# 
   850  069A                     	;# 
   851  069B                     	;# 
   852  069C                     	;# 
   853  069D                     	;# 
   854  069E                     	;# 
   855  069F                     	;# 
   856  0E0F                     	;# 
   857  0E10                     	;# 
   858  0E11                     	;# 
   859  0E12                     	;# 
   860  0E13                     	;# 
   861  0E14                     	;# 
   862  0E15                     	;# 
   863  0E17                     	;# 
   864  0E20                     	;# 
   865  0E21                     	;# 
   866  0E22                     	;# 
   867  0E24                     	;# 
   868  0E25                     	;# 
   869  0E28                     	;# 
   870  0E29                     	;# 
   871  0E2A                     	;# 
   872  0E2B                     	;# 
   873  0E90                     	;# 
   874  0E91                     	;# 
   875  0E92                     	;# 
   876  0E93                     	;# 
   877  0E94                     	;# 
   878  0E95                     	;# 
   879  0E96                     	;# 
   880  0E97                     	;# 
   881  0E98                     	;# 
   882  0E99                     	;# 
   883  0E9A                     	;# 
   884  0E9B                     	;# 
   885  0E9C                     	;# 
   886  0E9D                     	;# 
   887  0E9E                     	;# 
   888  0E9F                     	;# 
   889  0EA0                     	;# 
   890  0EA1                     	;# 
   891  0EA2                     	;# 
   892  0EA3                     	;# 
   893  0EA4                     	;# 
   894  0EA5                     	;# 
   895  0EA6                     	;# 
   896  0EA7                     	;# 
   897  0EA8                     	;# 
   898  0EA9                     	;# 
   899  0EAA                     	;# 
   900  0EAB                     	;# 
   901  0EAC                     	;# 
   902  0EAD                     	;# 
   903  0EAE                     	;# 
   904  0EAF                     	;# 
   905  0EB0                     	;# 
   906  0EB1                     	;# 
   907  0EB2                     	;# 
   908  0F0F                     	;# 
   909  0F10                     	;# 
   910  0F11                     	;# 
   911  0F12                     	;# 
   912  0F13                     	;# 
   913  0F14                     	;# 
   914  0F15                     	;# 
   915  0F16                     	;# 
   916  0F17                     	;# 
   917  0F18                     	;# 
   918  0F19                     	;# 
   919  0F1A                     	;# 
   920  0F1B                     	;# 
   921  0F1C                     	;# 
   922  0F1D                     	;# 
   923  0F1E                     	;# 
   924  0F1F                     	;# 
   925  0F20                     	;# 
   926  0F21                     	;# 
   927  0F22                     	;# 
   928  0F23                     	;# 
   929  0F24                     	;# 
   930  0F25                     	;# 
   931  0F26                     	;# 
   932  0F27                     	;# 
   933  0F28                     	;# 
   934  0F29                     	;# 
   935  0F2A                     	;# 
   936  0F2B                     	;# 
   937  0F2C                     	;# 
   938  0F2D                     	;# 
   939  0F2E                     	;# 
   940  0F2F                     	;# 
   941  0F30                     	;# 
   942  0F31                     	;# 
   943  0F32                     	;# 
   944  0F33                     	;# 
   945  0F34                     	;# 
   946  0F35                     	;# 
   947  0F36                     	;# 
   948  0F37                     	;# 
   949  0FE4                     	;# 
   950  0FE5                     	;# 
   951  0FE6                     	;# 
   952  0FE7                     	;# 
   953  0FE8                     	;# 
   954  0FE9                     	;# 
   955  0FEA                     	;# 
   956  0FEB                     	;# 
   957  0FED                     	;# 
   958  0FEE                     	;# 
   959  0FEF                     	;# 
   960  0000                     	;# 
   961  0001                     	;# 
   962  0002                     	;# 
   963  0003                     	;# 
   964  0004                     	;# 
   965  0005                     	;# 
   966  0006                     	;# 
   967  0007                     	;# 
   968  0008                     	;# 
   969  0009                     	;# 
   970  000A                     	;# 
   971  000B                     	;# 
   972  000C                     	;# 
   973  000D                     	;# 
   974  000E                     	;# 
   975  000F                     	;# 
   976  0010                     	;# 
   977  0011                     	;# 
   978  0012                     	;# 
   979  0013                     	;# 
   980  0015                     	;# 
   981  0016                     	;# 
   982  0016                     	;# 
   983  0017                     	;# 
   984  0018                     	;# 
   985  0019                     	;# 
   986  001A                     	;# 
   987  001B                     	;# 
   988  001C                     	;# 
   989  008C                     	;# 
   990  008D                     	;# 
   991  008E                     	;# 
   992  008F                     	;# 
   993  0090                     	;# 
   994  0091                     	;# 
   995  0092                     	;# 
   996  0093                     	;# 
   997  0095                     	;# 
   998  0096                     	;# 
   999  0097                     	;# 
  1000  0098                     	;# 
  1001  0099                     	;# 
  1002  009A                     	;# 
  1003  009B                     	;# 
  1004  009B                     	;# 
  1005  009C                     	;# 
  1006  009D                     	;# 
  1007  009E                     	;# 
  1008  009F                     	;# 
  1009  010C                     	;# 
  1010  010D                     	;# 
  1011  010E                     	;# 
  1012  010F                     	;# 
  1013  0110                     	;# 
  1014  0111                     	;# 
  1015  0112                     	;# 
  1016  0113                     	;# 
  1017  0114                     	;# 
  1018  0115                     	;# 
  1019  0116                     	;# 
  1020  0117                     	;# 
  1021  0118                     	;# 
  1022  0119                     	;# 
  1023  011A                     	;# 
  1024  011B                     	;# 
  1025  011B                     	;# 
  1026  011C                     	;# 
  1027  018C                     	;# 
  1028  018D                     	;# 
  1029  018E                     	;# 
  1030  018F                     	;# 
  1031  0190                     	;# 
  1032  0191                     	;# 
  1033  0191                     	;# 
  1034  0192                     	;# 
  1035  0193                     	;# 
  1036  0193                     	;# 
  1037  0194                     	;# 
  1038  0195                     	;# 
  1039  0196                     	;# 
  1040  0197                     	;# 
  1041  0199                     	;# 
  1042  0199                     	;# 
  1043  0199                     	;# 
  1044  019A                     	;# 
  1045  019A                     	;# 
  1046  019A                     	;# 
  1047  019B                     	;# 
  1048  019B                     	;# 
  1049  019B                     	;# 
  1050  019B                     	;# 
  1051  019B                     	;# 
  1052  019C                     	;# 
  1053  019C                     	;# 
  1054  019C                     	;# 
  1055  019D                     	;# 
  1056  019D                     	;# 
  1057  019D                     	;# 
  1058  019E                     	;# 
  1059  019E                     	;# 
  1060  019E                     	;# 
  1061  019F                     	;# 
  1062  019F                     	;# 
  1063  019F                     	;# 
  1064  019F                     	;# 
  1065  019F                     	;# 
  1066  020C                     	;# 
  1067  020D                     	;# 
  1068  020E                     	;# 
  1069  020F                     	;# 
  1070  0210                     	;# 
  1071  0211                     	;# 
  1072  0211                     	;# 
  1073  0212                     	;# 
  1074  0212                     	;# 
  1075  0213                     	;# 
  1076  0213                     	;# 
  1077  0214                     	;# 
  1078  0214                     	;# 
  1079  0215                     	;# 
  1080  0215                     	;# 
  1081  0215                     	;# 
  1082  0215                     	;# 
  1083  0216                     	;# 
  1084  0216                     	;# 
  1085  0217                     	;# 
  1086  0217                     	;# 
  1087  028C                     	;# 
  1088  028D                     	;# 
  1089  028E                     	;# 
  1090  028F                     	;# 
  1091  0290                     	;# 
  1092  0291                     	;# 
  1093  0291                     	;# 
  1094  0292                     	;# 
  1095  0293                     	;# 
  1096  0293                     	;# 
  1097  0298                     	;# 
  1098  0298                     	;# 
  1099  0299                     	;# 
  1100  029A                     	;# 
  1101  029A                     	;# 
  1102  029E                     	;# 
  1103  030C                     	;# 
  1104  030D                     	;# 
  1105  030E                     	;# 
  1106  030F                     	;# 
  1107  0310                     	;# 
  1108  038C                     	;# 
  1109  038D                     	;# 
  1110  038E                     	;# 
  1111  038F                     	;# 
  1112  0390                     	;# 
  1113  0391                     	;# 
  1114  0392                     	;# 
  1115  0393                     	;# 
  1116  0394                     	;# 
  1117  0395                     	;# 
  1118  0396                     	;# 
  1119  0397                     	;# 
  1120  0398                     	;# 
  1121  0399                     	;# 
  1122  039D                     	;# 
  1123  039E                     	;# 
  1124  039F                     	;# 
  1125  0415                     	;# 
  1126  0416                     	;# 
  1127  0417                     	;# 
  1128  041C                     	;# 
  1129  041D                     	;# 
  1130  041E                     	;# 
  1131  0498                     	;# 
  1132  0498                     	;# 
  1133  0499                     	;# 
  1134  049A                     	;# 
  1135  049B                     	;# 
  1136  049B                     	;# 
  1137  049C                     	;# 
  1138  049D                     	;# 
  1139  049E                     	;# 
  1140  049F                     	;# 
  1141  0511                     	;# 
  1142  0515                     	;# 
  1143  0617                     	;# 
  1144  0618                     	;# 
  1145  0619                     	;# 
  1146  0619                     	;# 
  1147  061A                     	;# 
  1148  061B                     	;# 
  1149  061C                     	;# 
  1150  061C                     	;# 
  1151  0691                     	;# 
  1152  0692                     	;# 
  1153  0693                     	;# 
  1154  0694                     	;# 
  1155  0695                     	;# 
  1156  0696                     	;# 
  1157  0697                     	;# 
  1158  0698                     	;# 
  1159  0699                     	;# 
  1160  069A                     	;# 
  1161  069B                     	;# 
  1162  069C                     	;# 
  1163  069D                     	;# 
  1164  069E                     	;# 
  1165  069F                     	;# 
  1166  0E0F                     	;# 
  1167  0E10                     	;# 
  1168  0E11                     	;# 
  1169  0E12                     	;# 
  1170  0E13                     	;# 
  1171  0E14                     	;# 
  1172  0E15                     	;# 
  1173  0E17                     	;# 
  1174  0E20                     	;# 
  1175  0E21                     	;# 
  1176  0E22                     	;# 
  1177  0E24                     	;# 
  1178  0E25                     	;# 
  1179  0E28                     	;# 
  1180  0E29                     	;# 
  1181  0E2A                     	;# 
  1182  0E2B                     	;# 
  1183  0E90                     	;# 
  1184  0E91                     	;# 
  1185  0E92                     	;# 
  1186  0E93                     	;# 
  1187  0E94                     	;# 
  1188  0E95                     	;# 
  1189  0E96                     	;# 
  1190  0E97                     	;# 
  1191  0E98                     	;# 
  1192  0E99                     	;# 
  1193  0E9A                     	;# 
  1194  0E9B                     	;# 
  1195  0E9C                     	;# 
  1196  0E9D                     	;# 
  1197  0E9E                     	;# 
  1198  0E9F                     	;# 
  1199  0EA0                     	;# 
  1200  0EA1                     	;# 
  1201  0EA2                     	;# 
  1202  0EA3                     	;# 
  1203  0EA4                     	;# 
  1204  0EA5                     	;# 
  1205  0EA6                     	;# 
  1206  0EA7                     	;# 
  1207  0EA8                     	;# 
  1208  0EA9                     	;# 
  1209  0EAA                     	;# 
  1210  0EAB                     	;# 
  1211  0EAC                     	;# 
  1212  0EAD                     	;# 
  1213  0EAE                     	;# 
  1214  0EAF                     	;# 
  1215  0EB0                     	;# 
  1216  0EB1                     	;# 
  1217  0EB2                     	;# 
  1218  0F0F                     	;# 
  1219  0F10                     	;# 
  1220  0F11                     	;# 
  1221  0F12                     	;# 
  1222  0F13                     	;# 
  1223  0F14                     	;# 
  1224  0F15                     	;# 
  1225  0F16                     	;# 
  1226  0F17                     	;# 
  1227  0F18                     	;# 
  1228  0F19                     	;# 
  1229  0F1A                     	;# 
  1230  0F1B                     	;# 
  1231  0F1C                     	;# 
  1232  0F1D                     	;# 
  1233  0F1E                     	;# 
  1234  0F1F                     	;# 
  1235  0F20                     	;# 
  1236  0F21                     	;# 
  1237  0F22                     	;# 
  1238  0F23                     	;# 
  1239  0F24                     	;# 
  1240  0F25                     	;# 
  1241  0F26                     	;# 
  1242  0F27                     	;# 
  1243  0F28                     	;# 
  1244  0F29                     	;# 
  1245  0F2A                     	;# 
  1246  0F2B                     	;# 
  1247  0F2C                     	;# 
  1248  0F2D                     	;# 
  1249  0F2E                     	;# 
  1250  0F2F                     	;# 
  1251  0F30                     	;# 
  1252  0F31                     	;# 
  1253  0F32                     	;# 
  1254  0F33                     	;# 
  1255  0F34                     	;# 
  1256  0F35                     	;# 
  1257  0F36                     	;# 
  1258  0F37                     	;# 
  1259  0FE4                     	;# 
  1260  0FE5                     	;# 
  1261  0FE6                     	;# 
  1262  0FE7                     	;# 
  1263  0FE8                     	;# 
  1264  0FE9                     	;# 
  1265  0FEA                     	;# 
  1266  0FEB                     	;# 
  1267  0FED                     	;# 
  1268  0FEE                     	;# 
  1269  0FEF                     	;# 
  1270                           
  1271                           	psect	stringtext
  1272  0800                     __pstringtext:	
  1273  0800                     _dpowers:	
  1274  0800  3401               	retlw	1
  1275  0801  3400               	retlw	0
  1276  0802  3400               	retlw	0
  1277  0803  3400               	retlw	0
  1278  0804  340A               	retlw	10
  1279  0805  3400               	retlw	0
  1280  0806  3400               	retlw	0
  1281  0807  3400               	retlw	0
  1282  0808  3464               	retlw	100
  1283  0809  3400               	retlw	0
  1284  080A  3400               	retlw	0
  1285  080B  3400               	retlw	0
  1286  080C  34E8               	retlw	232
  1287  080D  3403               	retlw	3
  1288  080E  3400               	retlw	0
  1289  080F  3400               	retlw	0
  1290  0810  3410               	retlw	16
  1291  0811  3427               	retlw	39
  1292  0812  3400               	retlw	0
  1293  0813  3400               	retlw	0
  1294  0814  34A0               	retlw	160
  1295  0815  3486               	retlw	134
  1296  0816  3401               	retlw	1
  1297  0817  3400               	retlw	0
  1298  0818  3440               	retlw	64
  1299  0819  3442               	retlw	66
  1300  081A  340F               	retlw	15
  1301  081B  3400               	retlw	0
  1302  081C  3480               	retlw	128
  1303  081D  3496               	retlw	150
  1304  081E  3498               	retlw	152
  1305  081F  3400               	retlw	0
  1306  0820  3400               	retlw	0
  1307  0821  34E1               	retlw	225
  1308  0822  34F5               	retlw	245
  1309  0823  3405               	retlw	5
  1310  0824  3400               	retlw	0
  1311  0825  34CA               	retlw	202
  1312  0826  349A               	retlw	154
  1313  0827  343B               	retlw	59
  1314  0828                     __end_of_dpowers:	
  1315  0011                     _PIR1bits	set	17
  1316  000F                     _PORTD	set	15
  1317  007A                     _RD2	set	122
  1318  007B                     _RD3	set	123
  1319  007C                     _RD4	set	124
  1320  007D                     _RD5	set	125
  1321  007E                     _RD6	set	126
  1322  007F                     _RD7	set	127
  1323  008D                     _TRISBbits	set	141
  1324  008F                     _TRISD	set	143
  1325  008F                     _TRISDbits	set	143
  1326  04CB                     _IRCF0	set	1227
  1327  04CC                     _IRCF1	set	1228
  1328  04CD                     _IRCF2	set	1229
  1329  04CE                     _IRCF3	set	1230
  1330  04C8                     _SCS0	set	1224
  1331  04C9                     _SCS1	set	1225
  1332  04CF                     _SPLLEN	set	1231
  1333  0476                     _TRISC6	set	1142
  1334  0477                     _TRISC7	set	1143
  1335  018D                     _ANSELBbits	set	397
  1336  018F                     _ANSELD	set	399
  1337  0199                     _RC1REG	set	409
  1338  019D                     _RC1STAbits	set	413
  1339  019B                     _SPBRG	set	411
  1340  019A                     _TX1REG	set	410
  1341  0CF2                     _BRGH	set	3314
  1342  0CEC                     _CREN	set	3308
  1343  0CEF                     _SPEN	set	3311
  1344  0CF4                     _SYNC	set	3316
  1345  0CF5                     _TXEN	set	3317
  1346  0E0F                     _PPSLOCK	set	3599
  1347  0E0F                     _PPSLOCKbits	set	3599
  1348  0E24                     _RXPPSbits	set	3620
  1349  0E9A                     _RB2PPSbits	set	3738
  1350  0828                     STR_2:	
  1351  0828  3453               	retlw	83	;'S'
  1352  0829  3465               	retlw	101	;'e'
  1353  082A  346E               	retlw	110	;'n'
  1354  082B  3464               	retlw	100	;'d'
  1355  082C  3469               	retlw	105	;'i'
  1356  082D  346E               	retlw	110	;'n'
  1357  082E  3467               	retlw	103	;'g'
  1358  082F  3420               	retlw	32	;' '
  1359  0830  3443               	retlw	67	;'C'
  1360  0831  346F               	retlw	111	;'o'
  1361  0832  346D               	retlw	109	;'m'
  1362  0833  346D               	retlw	109	;'m'
  1363  0834  3461               	retlw	97	;'a'
  1364  0835  346E               	retlw	110	;'n'
  1365  0836  3464               	retlw	100	;'d'
  1366  0837  3400               	retlw	0
  1367  0838                     STR_1:	
  1368  0838  3453               	retlw	83	;'S'
  1369  0839  3474               	retlw	116	;'t'
  1370  083A  3461               	retlw	97	;'a'
  1371  083B  3472               	retlw	114	;'r'
  1372  083C  3474               	retlw	116	;'t'
  1373  083D  3469               	retlw	105	;'i'
  1374  083E  346E               	retlw	110	;'n'
  1375  083F  3467               	retlw	103	;'g'
  1376  0840  3420               	retlw	32	;' '
  1377  0841  344E               	retlw	78	;'N'
  1378  0842  346F               	retlw	111	;'o'
  1379  0843  3477               	retlw	119	;'w'
  1380  0844  3400               	retlw	0
  1381  0845                     STR_3:	
  1382  0845  3425               	retlw	37	;'%'
  1383  0846  346C               	retlw	108	;'l'
  1384  0847  3475               	retlw	117	;'u'
  1385  0848  342E               	retlw	46	;'.'
  1386  0849  3425               	retlw	37	;'%'
  1387  084A  3436               	retlw	54	;'6'
  1388  084B  342E               	retlw	46	;'.'
  1389  084C  3436               	retlw	54	;'6'
  1390  084D  346C               	retlw	108	;'l'
  1391  084E  3475               	retlw	117	;'u'
  1392  084F  3400               	retlw	0
  1393                           
  1394                           ; #config settings
  1395  0000                     
  1396                           	psect	cinit
  1397  07F6                     start_initialization:	
  1398  07F6                     __initialization:	
  1399                           
  1400                           ; Clear objects allocated to BANK0
  1401  07F6  3044               	movlw	low __pbssBANK0
  1402  07F7  0084               	movwf	4
  1403  07F8  3000               	movlw	high __pbssBANK0
  1404  07F9  0085               	movwf	5
  1405  07FA  3011               	movlw	17
  1406  07FB  3183  238C         	fcall	clear_ram0
  1407  07FD                     end_of_initialization:	
  1408                           ;End of C runtime variable initialization code
  1409                           
  1410  07FD                     __end_of__initialization:	
  1411  07FD  0020               	movlb	0
  1412  07FE  3187  2F00         	ljmp	_main	;jump to C main() function
  1413                           
  1414                           	psect	bssBANK0
  1415  0044                     __pbssBANK0:	
  1416  0044                     ftoa@buf:	
  1417  0044                     	ds	17
  1418                           
  1419                           	psect	clrtext
  1420  038C                     clear_ram0:	
  1421                           ;	Called with FSR0 containing the base address, and
  1422                           ;	WREG with the size to clear
  1423                           
  1424  038C  0064               	clrwdt	;clear the watchdog before getting into this loop
  1425  038D                     clrloop0:	
  1426  038D  0180               	clrf	0	;clear RAM location pointed to by FSR
  1427  038E  3101               	addfsr 0,1
  1428  038F  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1429  0390  2B8D               	goto	clrloop0	;have we reached the end yet?
  1430  0391  3400               	retlw	0	;all done for this memory range, return
  1431                           
  1432                           	psect	cstackCOMMON
  1433  0070                     __pcstackCOMMON:	
  1434  0070                     ?_internal_16:	
  1435  0070                     ??_internal_16:	
  1436                           ; 1 bytes @ 0x0
  1437                           
  1438  0070                     ?_EUSART_Read:	
  1439                           ; 1 bytes @ 0x0
  1440                           
  1441  0070                     ??_EUSART_Read:	
  1442                           ; 1 bytes @ 0x0
  1443                           
  1444  0070                     ?_EUSART_Write:	
  1445                           ; 1 bytes @ 0x0
  1446                           
  1447  0070                     ??_EUSART_Write:	
  1448                           ; 1 bytes @ 0x0
  1449                           
  1450  0070                     ?_Lcd_Port:	
  1451                           ; 1 bytes @ 0x0
  1452                           
  1453  0070                     ??_Lcd_Port:	
  1454                           ; 1 bytes @ 0x0
  1455                           
  1456  0070                     ?_Lcd_Cmd:	
  1457                           ; 1 bytes @ 0x0
  1458                           
  1459  0070                     ?_Lcd_Clear:	
  1460                           ; 1 bytes @ 0x0
  1461                           
  1462  0070                     ?_Lcd_Init:	
  1463                           ; 1 bytes @ 0x0
  1464                           
  1465  0070                     ?_Lcd_Write_Char:	
  1466                           ; 1 bytes @ 0x0
  1467                           
  1468  0070                     ?_initMain:	
  1469                           ; 1 bytes @ 0x0
  1470                           
  1471  0070                     ??_initMain:	
  1472                           ; 1 bytes @ 0x0
  1473                           
  1474  0070                     ?_main:	
  1475                           ; 1 bytes @ 0x0
  1476                           
  1477  0070                     ?___lwdiv:	
  1478                           ; 1 bytes @ 0x0
  1479                           
  1480  0070                     ?___lwmod:	
  1481                           ; 2 bytes @ 0x0
  1482                           
  1483  0070                     ?___aldiv:	
  1484                           ; 2 bytes @ 0x0
  1485                           
  1486  0070                     EUSART_Write@txData:	
  1487                           ; 4 bytes @ 0x0
  1488                           
  1489  0070                     Lcd_Port@a:	
  1490                           ; 1 bytes @ 0x0
  1491                           
  1492  0070                     ___lwdiv@divisor:	
  1493                           ; 1 bytes @ 0x0
  1494                           
  1495  0070                     ___lwmod@divisor:	
  1496                           ; 2 bytes @ 0x0
  1497                           
  1498  0070                     ___aldiv@divisor:	
  1499                           ; 2 bytes @ 0x0
  1500                           
  1501                           
  1502                           ; 4 bytes @ 0x0
  1503  0070                     	ds	1
  1504  0071                     ??_Lcd_Cmd:	
  1505  0071                     ??_Lcd_Write_Char:	
  1506                           ; 1 bytes @ 0x1
  1507                           
  1508                           
  1509                           ; 1 bytes @ 0x1
  1510  0071                     	ds	1
  1511  0072                     Lcd_Write_Char@temp:	
  1512  0072                     ___lwdiv@dividend:	
  1513                           ; 1 bytes @ 0x2
  1514                           
  1515  0072                     ___lwmod@dividend:	
  1516                           ; 2 bytes @ 0x2
  1517                           
  1518                           
  1519                           ; 2 bytes @ 0x2
  1520  0072                     	ds	1
  1521  0073                     Lcd_Cmd@a:	
  1522  0073                     Lcd_Write_Char@y:	
  1523                           ; 1 bytes @ 0x3
  1524                           
  1525                           
  1526                           ; 1 bytes @ 0x3
  1527  0073                     	ds	1
  1528  0074                     ??_Lcd_Clear:	
  1529  0074                     ?_Lcd_Set_Cursor:	
  1530                           ; 1 bytes @ 0x4
  1531                           
  1532  0074                     ??_Lcd_Init:	
  1533                           ; 1 bytes @ 0x4
  1534                           
  1535  0074                     ??___lwdiv:	
  1536                           ; 1 bytes @ 0x4
  1537                           
  1538  0074                     ??___lwmod:	
  1539                           ; 1 bytes @ 0x4
  1540                           
  1541  0074                     Lcd_Set_Cursor@b:	
  1542                           ; 1 bytes @ 0x4
  1543                           
  1544  0074                     Lcd_Write_Char@a:	
  1545                           ; 1 bytes @ 0x4
  1546                           
  1547  0074                     ___aldiv@dividend:	
  1548                           ; 1 bytes @ 0x4
  1549                           
  1550                           
  1551                           ; 4 bytes @ 0x4
  1552  0074                     	ds	1
  1553  0075                     ??_Lcd_Set_Cursor:	
  1554  0075                     ___lwmod@counter:	
  1555                           ; 1 bytes @ 0x5
  1556                           
  1557  0075                     ___lwdiv@quotient:	
  1558                           ; 1 bytes @ 0x5
  1559                           
  1560                           
  1561                           ; 2 bytes @ 0x5
  1562  0075                     	ds	2
  1563  0077                     Lcd_Set_Cursor@a:	
  1564  0077                     ___lwdiv@counter:	
  1565                           ; 1 bytes @ 0x7
  1566                           
  1567                           
  1568                           ; 1 bytes @ 0x7
  1569  0077                     	ds	1
  1570  0078                     ?_utoa:	
  1571  0078                     ??___aldiv:	
  1572                           ; 1 bytes @ 0x8
  1573                           
  1574  0078                     Lcd_Set_Cursor@z:	
  1575                           ; 1 bytes @ 0x8
  1576                           
  1577  0078                     utoa@val:	
  1578                           ; 1 bytes @ 0x8
  1579                           
  1580                           
  1581                           ; 2 bytes @ 0x8
  1582  0078                     	ds	1
  1583  0079                     Lcd_Set_Cursor@y:	
  1584  0079                     EUSART_Initialize@x:	
  1585                           ; 1 bytes @ 0x9
  1586                           
  1587                           
  1588                           ; 2 bytes @ 0x9
  1589  0079                     	ds	1
  1590  007A                     Lcd_Set_Cursor@temp:	
  1591  007A                     utoa@base:	
  1592                           ; 1 bytes @ 0xA
  1593                           
  1594                           
  1595                           ; 2 bytes @ 0xA
  1596  007A                     	ds	2
  1597  007C                     ??_utoa:	
  1598                           
  1599                           ; 1 bytes @ 0xC
  1600  007C                     	ds	1
  1601  007D                     ??_itoa:	
  1602                           
  1603                           ; 1 bytes @ 0xD
  1604  007D                     	ds	1
  1605  007E                     ??_Lcd_Write_Integer:	
  1606                           
  1607                           	psect	cstackBANK0
  1608  0020                     __pcstackBANK0:	
  1609                           ; 1 bytes @ 0xE
  1610                           
  1611  0020                     ___aldiv@counter:	
  1612  0020                     utoa@v:	
  1613                           ; 1 bytes @ 0x0
  1614                           
  1615                           
  1616                           ; 2 bytes @ 0x0
  1617  0020                     	ds	1
  1618  0021                     ___aldiv@sign:	
  1619                           
  1620                           ; 1 bytes @ 0x1
  1621  0021                     	ds	1
  1622  0022                     utoa@c:	
  1623  0022                     ___aldiv@quotient:	
  1624                           ; 1 bytes @ 0x2
  1625                           
  1626                           
  1627                           ; 4 bytes @ 0x2
  1628  0022                     	ds	1
  1629  0023                     utoa@buf:	
  1630                           
  1631                           ; 1 bytes @ 0x3
  1632  0023                     	ds	1
  1633  0024                     ?_itoa:	
  1634  0024                     itoa@val:	
  1635                           ; 1 bytes @ 0x4
  1636                           
  1637                           
  1638                           ; 2 bytes @ 0x4
  1639  0024                     	ds	2
  1640  0026                     ?_EUSART_Initialize:	
  1641  0026                     itoa@base:	
  1642                           ; 1 bytes @ 0x6
  1643                           
  1644  0026                     EUSART_Initialize@baudrate:	
  1645                           ; 2 bytes @ 0x6
  1646                           
  1647                           
  1648                           ; 4 bytes @ 0x6
  1649  0026                     	ds	2
  1650  0028                     itoa@cp:	
  1651                           
  1652                           ; 1 bytes @ 0x8
  1653  0028                     	ds	1
  1654  0029                     itoa@buf:	
  1655                           
  1656                           ; 1 bytes @ 0x9
  1657  0029                     	ds	1
  1658  002A                     ??_EUSART_Initialize:	
  1659  002A                     ?_Lcd_Write_String:	
  1660                           ; 1 bytes @ 0xA
  1661                           
  1662  002A                     Lcd_Write_String@a:	
  1663                           ; 1 bytes @ 0xA
  1664                           
  1665                           
  1666                           ; 2 bytes @ 0xA
  1667  002A                     	ds	2
  1668  002C                     ??_Lcd_Write_String:	
  1669                           
  1670                           ; 1 bytes @ 0xC
  1671  002C                     	ds	1
  1672  002D                     Lcd_Write_String@i:	
  1673                           
  1674                           ; 2 bytes @ 0xD
  1675  002D                     	ds	2
  1676  002F                     ?_Lcd_Write_Integer:	
  1677  002F                     Lcd_Write_Integer@v:	
  1678                           ; 1 bytes @ 0xF
  1679                           
  1680                           
  1681                           ; 2 bytes @ 0xF
  1682  002F                     	ds	2
  1683  0031                     Lcd_Write_Integer@buf:	
  1684                           
  1685                           ; 8 bytes @ 0x11
  1686  0031                     	ds	8
  1687  0039                     ??_main:	
  1688                           
  1689                           ; 1 bytes @ 0x19
  1690  0039                     	ds	5
  1691  003E                     main@boo:	
  1692  003E                     main@y:	
  1693                           ; 0 bytes @ 0x1E
  1694                           
  1695                           
  1696                           ; 2 bytes @ 0x1E
  1697  003E                     	ds	2
  1698  0040                     main@x:	
  1699                           
  1700                           ; 2 bytes @ 0x20
  1701  0040                     	ds	2
  1702  0042                     main@i_310:	
  1703                           
  1704                           ; 2 bytes @ 0x22
  1705  0042                     	ds	2
  1706                           
  1707                           	psect	maintext
  1708  0700                     __pmaintext:	
  1709 ;;
  1710 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
  1711 ;;
  1712 ;; *************** function _main *****************
  1713 ;; Defined at:
  1714 ;;		line 91 in file "Main.c"
  1715 ;; Parameters:    Size  Location     Type
  1716 ;;		None
  1717 ;; Auto vars:     Size  Location     Type
  1718 ;;  i               2   34[BANK0 ] int 
  1719 ;;  x               2   32[BANK0 ] int 
  1720 ;;  y               2   30[BANK0 ] int 
  1721 ;;  z               2    0        int 
  1722 ;;  i               2    0        int 
  1723 ;;  a               2    0        int 
  1724 ;;  boo             0   30[BANK0 ] unsigned char [0]
  1725 ;; Return value:  Size  Location     Type
  1726 ;;                  1    wreg      void 
  1727 ;; Registers used:
  1728 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1729 ;; Tracked objects:
  1730 ;;		On entry : B1F/0
  1731 ;;		On exit  : 0/0
  1732 ;;		Unchanged: 0/0
  1733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1735 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1736 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1737 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1738 ;;Total ram usage:       11 bytes
  1739 ;; Hardware stack levels required when called:    4
  1740 ;; This function calls:
  1741 ;;		_EUSART_Initialize
  1742 ;;		_EUSART_Read
  1743 ;;		_EUSART_Write
  1744 ;;		_Lcd_Clear
  1745 ;;		_Lcd_Init
  1746 ;;		_Lcd_Set_Cursor
  1747 ;;		_Lcd_Write_Integer
  1748 ;;		_Lcd_Write_String
  1749 ;;		_initMain
  1750 ;; This function is called by:
  1751 ;;		Startup code after reset
  1752 ;; This function uses a non-reentrant model
  1753 ;;
  1754                           
  1755                           
  1756                           ;psect for function _main
  1757  0700                     _main:	
  1758                           
  1759                           ;Main.c: 92: initMain();
  1760                           
  1761                           ;incstack = 0
  1762                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1763  0700  3184  243A  3187   	fcall	_initMain
  1764                           
  1765                           ;Main.c: 94: Lcd_Init();
  1766  0703  3185  2530  3187   	fcall	_Lcd_Init
  1767                           
  1768                           ;Main.c: 95: Lcd_Clear();
  1769  0706  3183  239A  3187   	fcall	_Lcd_Clear
  1770                           
  1771                           ;Main.c: 96: Lcd_Set_Cursor(1,1);
  1772  0709  01F4               	clrf	Lcd_Set_Cursor@b
  1773  070A  0AF4               	incf	Lcd_Set_Cursor@b,f
  1774  070B  3001               	movlw	1
  1775  070C  3184  24F0  3187   	fcall	_Lcd_Set_Cursor
  1776                           
  1777                           ;Main.c: 99: Lcd_Write_String("Starting Now");
  1778  070F  3038               	movlw	low (STR_1| (0+32768))
  1779  0710  0020               	movlb	0	; select bank0
  1780  0711  00AA               	movwf	Lcd_Write_String@a
  1781  0712  3088               	movlw	high (STR_1| (0+32768))
  1782  0713  00AB               	movwf	Lcd_Write_String@a+1
  1783  0714  3183  23F8  3187   	fcall	_Lcd_Write_String
  1784                           
  1785                           ;Main.c: 101: _delay((unsigned long)((1000)*(16000000/4000.0)));
  1786  0717  3015               	movlw	21
  1787  0718  0020               	movlb	0	; select bank0
  1788  0719  00BB               	movwf	??_main+2
  1789  071A  304B               	movlw	75
  1790  071B  00BA               	movwf	??_main+1
  1791  071C  30D1               	movlw	209
  1792  071D  00B9               	movwf	??_main
  1793  071E                     u1057:	
  1794  071E  0BB9               	decfsz	??_main,f
  1795  071F  2F1E               	goto	u1057
  1796  0720  0BBA               	decfsz	??_main+1,f
  1797  0721  2F1E               	goto	u1057
  1798  0722  0BBB               	decfsz	??_main+2,f
  1799  0723  2F1E               	goto	u1057
  1800  0724  0000               	nop
  1801                           
  1802                           ;Main.c: 105: EUSART_Initialize(9600);
  1803  0725  3000               	movlw	0
  1804  0726  0020               	movlb	0	; select bank0
  1805  0727  00A9               	movwf	EUSART_Initialize@baudrate+3
  1806  0728  3000               	movlw	0
  1807  0729  00A8               	movwf	EUSART_Initialize@baudrate+2
  1808  072A  3025               	movlw	37
  1809  072B  00A7               	movwf	EUSART_Initialize@baudrate+1
  1810  072C  3080               	movlw	128
  1811  072D  00A6               	movwf	EUSART_Initialize@baudrate
  1812  072E  3186  265A  3187   	fcall	_EUSART_Initialize
  1813                           
  1814                           ;Main.c: 108: _delay((unsigned long)((1000)*(16000000/4000.0)));
  1815  0731  3015               	movlw	21
  1816  0732  0020               	movlb	0	; select bank0
  1817  0733  00BB               	movwf	??_main+2
  1818  0734  304B               	movlw	75
  1819  0735  00BA               	movwf	??_main+1
  1820  0736  30D1               	movlw	209
  1821  0737  00B9               	movwf	??_main
  1822  0738                     u1067:	
  1823  0738  0BB9               	decfsz	??_main,f
  1824  0739  2F38               	goto	u1067
  1825  073A  0BBA               	decfsz	??_main+1,f
  1826  073B  2F38               	goto	u1067
  1827  073C  0BBB               	decfsz	??_main+2,f
  1828  073D  2F38               	goto	u1067
  1829  073E  0000               	nop
  1830                           
  1831                           ;Main.c: 109: Lcd_Clear();
  1832  073F  3183  239A  3187   	fcall	_Lcd_Clear
  1833                           
  1834                           ;Main.c: 112: Lcd_Set_Cursor(1,1);
  1835  0742  01F4               	clrf	Lcd_Set_Cursor@b
  1836  0743  0AF4               	incf	Lcd_Set_Cursor@b,f
  1837  0744  3001               	movlw	1
  1838  0745  3184  24F0  3187   	fcall	_Lcd_Set_Cursor
  1839                           
  1840                           ;Main.c: 113: Lcd_Write_String("Sending Command");
  1841  0748  3028               	movlw	low (STR_2| (0+32768))
  1842  0749  0020               	movlb	0	; select bank0
  1843  074A  00AA               	movwf	Lcd_Write_String@a
  1844  074B  3088               	movlw	high (STR_2| (0+32768))
  1845  074C  00AB               	movwf	Lcd_Write_String@a+1
  1846  074D  3183  23F8  3187   	fcall	_Lcd_Write_String
  1847                           
  1848                           ;Main.c: 114: _delay((unsigned long)((1000)*(16000000/4000.0)));
  1849  0750  3015               	movlw	21
  1850  0751  0020               	movlb	0	; select bank0
  1851  0752  00BB               	movwf	??_main+2
  1852  0753  304B               	movlw	75
  1853  0754  00BA               	movwf	??_main+1
  1854  0755  30D1               	movlw	209
  1855  0756  00B9               	movwf	??_main
  1856  0757                     u1077:	
  1857  0757  0BB9               	decfsz	??_main,f
  1858  0758  2F57               	goto	u1077
  1859  0759  0BBA               	decfsz	??_main+1,f
  1860  075A  2F57               	goto	u1077
  1861  075B  0BBB               	decfsz	??_main+2,f
  1862  075C  2F57               	goto	u1077
  1863  075D  0000               	nop
  1864                           
  1865                           ;Main.c: 115: Lcd_Clear();
  1866  075E  3183  239A  3187   	fcall	_Lcd_Clear
  1867                           
  1868                           ;Main.c: 117: EUSART_Write(0xAA);
  1869  0761  30AA               	movlw	170
  1870  0762  3183  2392  3187   	fcall	_EUSART_Write
  1871                           
  1872                           ;Main.c: 118: EUSART_Write(0x05);
  1873  0765  3005               	movlw	5
  1874  0766  3183  2392  3187   	fcall	_EUSART_Write
  1875                           
  1876                           ;Main.c: 119: EUSART_Write(0x30);
  1877  0769  3030               	movlw	48
  1878  076A  3183  2392  3187   	fcall	_EUSART_Write
  1879                           
  1880                           ;Main.c: 120: EUSART_Write(0x00);
  1881  076D  3000               	movlw	0
  1882  076E  3183  2392  3187   	fcall	_EUSART_Write
  1883                           
  1884                           ;Main.c: 121: EUSART_Write(0x01);
  1885  0771  3001               	movlw	1
  1886  0772  3183  2392  3187   	fcall	_EUSART_Write
  1887                           
  1888                           ;Main.c: 122: EUSART_Write(0x02);
  1889  0775  3002               	movlw	2
  1890  0776  3183  2392  3187   	fcall	_EUSART_Write
  1891                           
  1892                           ;Main.c: 123: EUSART_Write(0x0A);
  1893  0779  300A               	movlw	10
  1894  077A  3183  2392  3187   	fcall	_EUSART_Write
  1895  077D                     l1415:	
  1896                           ;Main.c: 125: uint8_t boo[];
  1897                           ;Main.c: 127: int a;
  1898                           ;Main.c: 129: int x;
  1899                           ;Main.c: 130: int i;
  1900                           ;Main.c: 131: int y;
  1901                           ;Main.c: 133: int z;
  1902                           ;Main.c: 135: while(1){
  1903                           
  1904                           
  1905                           ;Main.c: 136: y = EUSART_Read();
  1906  077D  3183  23AB  3187   	fcall	_EUSART_Read
  1907  0780  0020               	movlb	0	; select bank0
  1908  0781  00B9               	movwf	??_main
  1909  0782  01BA               	clrf	??_main+1
  1910  0783  0839               	movf	??_main,w
  1911  0784  00BE               	movwf	main@y
  1912  0785  083A               	movf	??_main+1,w
  1913  0786  00BF               	movwf	main@y+1
  1914                           
  1915                           ;Main.c: 138: if (y = 170){
  1916  0787  30AA               	movlw	170
  1917  0788  00BE               	movwf	main@y
  1918  0789  3000               	movlw	0
  1919  078A  00BF               	movwf	main@y+1
  1920                           
  1921                           ;Main.c: 141: boo[x] = EUSART_Read();
  1922  078B  3183  23AB  3187   	fcall	_EUSART_Read
  1923  078E  0020               	movlb	0	; select bank0
  1924  078F  00B9               	movwf	??_main
  1925  0790  303E               	movlw	low main@boo
  1926  0791  00BA               	movwf	??_main+1
  1927  0792  3000               	movlw	high main@boo
  1928  0793  00BB               	movwf	??_main+2
  1929  0794  0840               	movf	main@x,w
  1930  0795  073A               	addwf	??_main+1,w
  1931  0796  00BC               	movwf	??_main+3
  1932  0797  0841               	movf	main@x+1,w
  1933  0798  3D3B               	addwfc	??_main+2,w
  1934  0799  00BD               	movwf	??_main+4
  1935  079A  083C               	movf	??_main+3,w
  1936  079B  0086               	movwf	6
  1937  079C  083D               	movf	??_main+4,w
  1938  079D  0087               	movwf	7
  1939  079E  0839               	movf	??_main,w
  1940  079F  0081               	movwf	1
  1941                           
  1942                           ;Main.c: 144: x++;
  1943  07A0  3001               	movlw	1
  1944  07A1  07C0               	addwf	main@x,f
  1945  07A2  3000               	movlw	0
  1946  07A3  3DC1               	addwfc	main@x+1,f
  1947                           
  1948                           ;Main.c: 146: if (x == 10){
  1949  07A4  300A               	movlw	10
  1950  07A5  0640               	xorwf	main@x,w
  1951  07A6  0441               	iorwf	main@x+1,w
  1952  07A7  1903               	btfsc	3,2
  1953  07A8  2FF4               	goto	l208
  1954                           
  1955                           ;Main.c: 148: }
  1956                           ;Main.c: 149: }
  1957                           ;Main.c: 151: for (int i = 0; i <= 5; i++){
  1958                           
  1959                           ;Main.c: 147: break;
  1960  07A9  01C2               	clrf	main@i_310
  1961  07AA  01C3               	clrf	main@i_310+1
  1962  07AB                     L1:	
  1963  07AB  0843               	movf	main@i_310+1,w
  1964  07AC  3A80               	xorlw	128
  1965  07AD  00B9               	movwf	??_main
  1966  07AE  3080               	movlw	128
  1967  07AF  0239               	subwf	??_main,w
  1968  07B0  1D03               	skipz
  1969  07B1  2FB4               	goto	u1025
  1970  07B2  3006               	movlw	6
  1971  07B3  0242               	subwf	main@i_310,w
  1972  07B4                     u1025:	
  1973  07B4  1803               	btfsc	3,0
  1974  07B5  2F7D               	goto	l1415
  1975                           
  1976                           ;Main.c: 153: if (i > 0){
  1977  07B6  0020               	movlb	0	; select bank0
  1978  07B7  0843               	movf	main@i_310+1,w
  1979  07B8  3A80               	xorlw	128
  1980  07B9  00B9               	movwf	??_main
  1981  07BA  3080               	movlw	128
  1982  07BB  0239               	subwf	??_main,w
  1983  07BC  1D03               	skipz
  1984  07BD  2FC0               	goto	u1035
  1985  07BE  3001               	movlw	1
  1986  07BF  0242               	subwf	main@i_310,w
  1987  07C0                     u1035:	
  1988  07C0  1C03               	skipc
  1989  07C1  2FEE               	goto	l1443
  1990                           
  1991                           ;Main.c: 154: Lcd_Set_Cursor(1,1);
  1992  07C2  01F4               	clrf	Lcd_Set_Cursor@b
  1993  07C3  0AF4               	incf	Lcd_Set_Cursor@b,f
  1994  07C4  3001               	movlw	1
  1995  07C5  3184  24F0  3187   	fcall	_Lcd_Set_Cursor
  1996                           
  1997                           ;Main.c: 155: Lcd_Write_Integer(boo[i]);
  1998  07C8  303E               	movlw	low main@boo
  1999  07C9  0020               	movlb	0	; select bank0
  2000  07CA  00B9               	movwf	??_main
  2001  07CB  3000               	movlw	high main@boo
  2002  07CC  00BA               	movwf	??_main+1
  2003  07CD  0842               	movf	main@i_310,w
  2004  07CE  0739               	addwf	??_main,w
  2005  07CF  0086               	movwf	6
  2006  07D0  0843               	movf	main@i_310+1,w
  2007  07D1  3D3A               	addwfc	??_main+1,w
  2008  07D2  0087               	movwf	7
  2009  07D3  0801               	movf	1,w
  2010  07D4  00BB               	movwf	??_main+2
  2011  07D5  01BC               	clrf	??_main+3
  2012  07D6  083B               	movf	??_main+2,w
  2013  07D7  00AF               	movwf	Lcd_Write_Integer@v
  2014  07D8  083C               	movf	??_main+3,w
  2015  07D9  00B0               	movwf	Lcd_Write_Integer@v+1
  2016  07DA  3183  23B7  3187   	fcall	_Lcd_Write_Integer
  2017                           
  2018                           ;Main.c: 156: _delay((unsigned long)((3000)*(16000000/4000.0)));
  2019  07DD  303D               	movlw	61
  2020  07DE  0020               	movlb	0	; select bank0
  2021  07DF  00BB               	movwf	??_main+2
  2022  07E0  30E1               	movlw	225
  2023  07E1  00BA               	movwf	??_main+1
  2024  07E2  307A               	movlw	122
  2025  07E3  00B9               	movwf	??_main
  2026  07E4                     u1087:	
  2027  07E4  0BB9               	decfsz	??_main,f
  2028  07E5  2FE4               	goto	u1087
  2029  07E6  0BBA               	decfsz	??_main+1,f
  2030  07E7  2FE4               	goto	u1087
  2031  07E8  0BBB               	decfsz	??_main+2,f
  2032  07E9  2FE4               	goto	u1087
  2033  07EA  3200               	nop2
  2034                           
  2035                           ;Main.c: 157: Lcd_Clear();
  2036  07EB  3183  239A  3187   	fcall	_Lcd_Clear
  2037  07EE                     l1443:	
  2038  07EE  3001               	movlw	1
  2039  07EF  0020               	movlb	0	; select bank0
  2040  07F0  07C2               	addwf	main@i_310,f
  2041  07F1  3000               	movlw	0
  2042  07F2  3DC3               	addwfc	main@i_310+1,f
  2043  07F3  2FAB               	goto	L1
  2044  07F4                     l208:	
  2045                           ;Main.c: 158: }
  2046                           ;Main.c: 159: }
  2047                           ;Main.c: 173: }
  2048                           ;Main.c: 175: return;
  2049                           
  2050  07F4  3180  2802         	ljmp	start
  2051  07F6                     __end_of_main:	
  2052                           
  2053                           	psect	text1
  2054  043A                     __ptext1:	
  2055 ;; *************** function _initMain *****************
  2056 ;; Defined at:
  2057 ;;		line 49 in file "Main.c"
  2058 ;; Parameters:    Size  Location     Type
  2059 ;;		None
  2060 ;; Auto vars:     Size  Location     Type
  2061 ;;		None
  2062 ;; Return value:  Size  Location     Type
  2063 ;;                  1    wreg      void 
  2064 ;; Registers used:
  2065 ;;		wreg, status,2, status,0, pclath, cstack
  2066 ;; Tracked objects:
  2067 ;;		On entry : 0/0
  2068 ;;		On exit  : 0/0
  2069 ;;		Unchanged: 0/0
  2070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2075 ;;Total ram usage:        0 bytes
  2076 ;; Hardware stack levels used:    1
  2077 ;; Hardware stack levels required when called:    1
  2078 ;; This function calls:
  2079 ;;		_internal_16
  2080 ;; This function is called by:
  2081 ;;		_main
  2082 ;; This function uses a non-reentrant model
  2083 ;;
  2084                           
  2085                           
  2086                           ;psect for function _initMain
  2087  043A                     _initMain:	
  2088                           
  2089                           ;Main.c: 51: internal_16();
  2090                           
  2091                           ;incstack = 0
  2092                           ; Regs used in _initMain: [wreg+status,2+status,0+pclath+cstack]
  2093  043A  3183  23A2         	fcall	_internal_16
  2094                           
  2095                           ;Main.c: 55: TRISBbits.TRISB3 = 1;
  2096  043C  0021               	movlb	1	; select bank1
  2097  043D  158D               	bsf	13,3	;volatile
  2098                           
  2099                           ;Main.c: 56: ANSELBbits.ANSB3 = 0;
  2100  043E  0023               	movlb	3	; select bank3
  2101  043F  118D               	bcf	13,3	;volatile
  2102                           
  2103                           ;Main.c: 58: TRISBbits.TRISB2 = 0;
  2104  0440  0021               	movlb	1	; select bank1
  2105  0441  110D               	bcf	13,2	;volatile
  2106                           
  2107                           ;Main.c: 59: ANSELBbits.ANSB2 = 0;
  2108  0442  0023               	movlb	3	; select bank3
  2109  0443  110D               	bcf	13,2	;volatile
  2110                           
  2111                           ;Main.c: 61: TRISDbits.TRISD0 = 0;
  2112  0444  0021               	movlb	1	; select bank1
  2113  0445  100F               	bcf	15,0	;volatile
  2114                           
  2115                           ;Main.c: 62: PORTD = 0;
  2116  0446  0020               	movlb	0	; select bank0
  2117  0447  018F               	clrf	15	;volatile
  2118                           
  2119                           ;Main.c: 67: PPSLOCK = 0x55;
  2120  0448  3055               	movlw	85
  2121  0449  003C               	movlb	28	; select bank28
  2122  044A  008F               	movwf	15	;volatile
  2123                           
  2124                           ;Main.c: 68: PPSLOCK = 0xAA;
  2125  044B  30AA               	movlw	170
  2126  044C  008F               	movwf	15	;volatile
  2127                           
  2128                           ;Main.c: 69: PPSLOCKbits.PPSLOCKED = 0x00;
  2129  044D  100F               	bcf	15,0	;volatile
  2130                           
  2131                           ;Main.c: 71: RB2PPSbits.RB2PPS = 0x14;
  2132  044E  003D               	movlb	29	; select bank29
  2133  044F  081A               	movf	26,w	;volatile
  2134  0450  39E0               	andlw	-32
  2135  0451  3814               	iorlw	20
  2136  0452  009A               	movwf	26	;volatile
  2137                           
  2138                           ;Main.c: 72: RXPPSbits.RXPPS = 0x0B;
  2139  0453  003C               	movlb	28	; select bank28
  2140  0454  0824               	movf	36,w	;volatile
  2141  0455  39E0               	andlw	-32
  2142  0456  380B               	iorlw	11
  2143  0457  00A4               	movwf	36	;volatile
  2144                           
  2145                           ;Main.c: 74: PPSLOCK = 0x55;
  2146  0458  3055               	movlw	85
  2147  0459  008F               	movwf	15	;volatile
  2148                           
  2149                           ;Main.c: 75: PPSLOCK = 0xAA;
  2150  045A  30AA               	movlw	170
  2151  045B  008F               	movwf	15	;volatile
  2152                           
  2153                           ;Main.c: 76: PPSLOCKbits.PPSLOCKED = 0x01;
  2154  045C  140F               	bsf	15,0	;volatile
  2155                           
  2156                           ;Main.c: 78: TRISD = 0x00;
  2157  045D  0021               	movlb	1	; select bank1
  2158  045E  018F               	clrf	15	;volatile
  2159                           
  2160                           ;Main.c: 79: ANSELD = 0x00;
  2161  045F  0023               	movlb	3	; select bank3
  2162  0460  018F               	clrf	15	;volatile
  2163                           
  2164                           ;Main.c: 80: PORTD = 0x00;
  2165  0461  0020               	movlb	0	; select bank0
  2166  0462  018F               	clrf	15	;volatile
  2167  0463  0008               	return
  2168  0464                     __end_of_initMain:	
  2169                           
  2170                           	psect	text2
  2171  03A2                     __ptext2:	
  2172 ;; *************** function _internal_16 *****************
  2173 ;; Defined at:
  2174 ;;		line 56 in file "16F1717_Internal.c"
  2175 ;; Parameters:    Size  Location     Type
  2176 ;;		None
  2177 ;; Auto vars:     Size  Location     Type
  2178 ;;		None
  2179 ;; Return value:  Size  Location     Type
  2180 ;;                  1    wreg      void 
  2181 ;; Registers used:
  2182 ;;		None
  2183 ;; Tracked objects:
  2184 ;;		On entry : 0/0
  2185 ;;		On exit  : 0/0
  2186 ;;		Unchanged: 0/0
  2187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2192 ;;Total ram usage:        0 bytes
  2193 ;; Hardware stack levels used:    1
  2194 ;; This function calls:
  2195 ;;		Nothing
  2196 ;; This function is called by:
  2197 ;;		_initMain
  2198 ;; This function uses a non-reentrant model
  2199 ;;
  2200                           
  2201                           
  2202                           ;psect for function _internal_16
  2203  03A2                     _internal_16:	
  2204                           
  2205                           ;16F1717_Internal.c: 58: SCS0 = 0;
  2206                           
  2207                           ;incstack = 0
  2208                           ; Regs used in _internal_16: []
  2209  03A2  0021               	movlb	1	; select bank1
  2210  03A3  1019               	bcf	25,0	;volatile
  2211                           
  2212                           ;16F1717_Internal.c: 59: SCS1 = 0;
  2213  03A4  1099               	bcf	25,1	;volatile
  2214                           
  2215                           ;16F1717_Internal.c: 62: IRCF0 = 1;
  2216  03A5  1599               	bsf	25,3	;volatile
  2217                           
  2218                           ;16F1717_Internal.c: 63: IRCF1 = 1;
  2219  03A6  1619               	bsf	25,4	;volatile
  2220                           
  2221                           ;16F1717_Internal.c: 64: IRCF2 = 1;
  2222  03A7  1699               	bsf	25,5	;volatile
  2223                           
  2224                           ;16F1717_Internal.c: 65: IRCF3 = 1;
  2225  03A8  1719               	bsf	25,6	;volatile
  2226                           
  2227                           ;16F1717_Internal.c: 68: SPLLEN = 0;
  2228  03A9  1399               	bcf	25,7	;volatile
  2229  03AA  0008               	return
  2230  03AB                     __end_of_internal_16:	
  2231                           
  2232                           	psect	text3
  2233  03B7                     __ptext3:	
  2234 ;; *************** function _Lcd_Write_Integer *****************
  2235 ;; Defined at:
  2236 ;;		line 216 in file "LCD.c"
  2237 ;; Parameters:    Size  Location     Type
  2238 ;;  v               2   15[BANK0 ] int 
  2239 ;; Auto vars:     Size  Location     Type
  2240 ;;  buf             8   17[BANK0 ] unsigned char [8]
  2241 ;; Return value:  Size  Location     Type
  2242 ;;                  1    wreg      void 
  2243 ;; Registers used:
  2244 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2245 ;; Tracked objects:
  2246 ;;		On entry : 0/0
  2247 ;;		On exit  : 0/0
  2248 ;;		Unchanged: 0/0
  2249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2250 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2251 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2253 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2254 ;;Total ram usage:       10 bytes
  2255 ;; Hardware stack levels used:    1
  2256 ;; Hardware stack levels required when called:    3
  2257 ;; This function calls:
  2258 ;;		_Lcd_Write_String
  2259 ;;		_itoa
  2260 ;; This function is called by:
  2261 ;;		_main
  2262 ;; This function uses a non-reentrant model
  2263 ;;
  2264                           
  2265                           
  2266                           ;psect for function _Lcd_Write_Integer
  2267  03B7                     _Lcd_Write_Integer:	
  2268                           
  2269                           ;LCD.c: 218: unsigned char buf[8];
  2270                           ;LCD.c: 220: Lcd_Write_String(itoa(buf, v, 10));
  2271                           
  2272                           ;incstack = 0
  2273                           ; Regs used in _Lcd_Write_Integer: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2274  03B7  0020               	movlb	0	; select bank0
  2275  03B8  0830               	movf	Lcd_Write_Integer@v+1,w
  2276  03B9  00A5               	movwf	itoa@val+1
  2277  03BA  082F               	movf	Lcd_Write_Integer@v,w
  2278  03BB  00A4               	movwf	itoa@val
  2279  03BC  300A               	movlw	10
  2280  03BD  00A6               	movwf	itoa@base
  2281  03BE  3000               	movlw	0
  2282  03BF  00A7               	movwf	itoa@base+1
  2283  03C0  3031               	movlw	(low (Lcd_Write_Integer@buf| 0))& (0+255)
  2284  03C1  3184  2414  3183   	fcall	_itoa
  2285  03C4  0020               	movlb	0	; select bank0
  2286  03C5  00AA               	movwf	Lcd_Write_String@a
  2287  03C6  3000               	movlw	0
  2288  03C7  00AB               	movwf	Lcd_Write_String@a+1
  2289  03C8  3183  23F8         	fcall	_Lcd_Write_String
  2290  03CA  0008               	return
  2291  03CB                     __end_of_Lcd_Write_Integer:	
  2292                           
  2293                           	psect	text4
  2294  0414                     __ptext4:	
  2295 ;; *************** function _itoa *****************
  2296 ;; Defined at:
  2297 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\itoa.c"
  2298 ;; Parameters:    Size  Location     Type
  2299 ;;  buf             1    wreg     PTR unsigned char 
  2300 ;;		 -> Lcd_Write_Integer@buf(8), 
  2301 ;;  val             2    4[BANK0 ] int 
  2302 ;;  base            2    6[BANK0 ] int 
  2303 ;; Auto vars:     Size  Location     Type
  2304 ;;  buf             1    9[BANK0 ] PTR unsigned char 
  2305 ;;		 -> Lcd_Write_Integer@buf(8), 
  2306 ;;  cp              1    8[BANK0 ] PTR unsigned char 
  2307 ;;		 -> Lcd_Write_Integer@buf(8), 
  2308 ;; Return value:  Size  Location     Type
  2309 ;;                  1    wreg      PTR unsigned char 
  2310 ;; Registers used:
  2311 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2312 ;; Tracked objects:
  2313 ;;		On entry : 0/0
  2314 ;;		On exit  : 0/0
  2315 ;;		Unchanged: 0/0
  2316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2317 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2318 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2319 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2320 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2321 ;;Total ram usage:        7 bytes
  2322 ;; Hardware stack levels used:    1
  2323 ;; Hardware stack levels required when called:    2
  2324 ;; This function calls:
  2325 ;;		_utoa
  2326 ;; This function is called by:
  2327 ;;		_Lcd_Write_Integer
  2328 ;; This function uses a non-reentrant model
  2329 ;;
  2330                           
  2331                           
  2332                           ;psect for function _itoa
  2333  0414                     _itoa:	
  2334                           
  2335                           ;incstack = 0
  2336                           ; Regs used in _itoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2337                           ;itoa@buf stored from wreg
  2338  0414  0020               	movlb	0	; select bank0
  2339  0415  00A9               	movwf	itoa@buf
  2340  0416  0829               	movf	itoa@buf,w
  2341  0417  00FD               	movwf	??_itoa
  2342  0418  087D               	movf	??_itoa,w
  2343  0419  00A8               	movwf	itoa@cp
  2344  041A  1FA5               	btfss	itoa@val+1,7
  2345  041B  2C2C               	goto	l1205
  2346  041C  302D               	movlw	45
  2347  041D  00FD               	movwf	??_itoa
  2348  041E  0829               	movf	itoa@buf,w
  2349  041F  0086               	movwf	6
  2350  0420  0187               	clrf	7
  2351  0421  087D               	movf	??_itoa,w
  2352  0422  0081               	movwf	1
  2353  0423  3001               	movlw	1
  2354  0424  00FD               	movwf	??_itoa
  2355  0425  087D               	movf	??_itoa,w
  2356  0426  07A9               	addwf	itoa@buf,f
  2357  0427  09A4               	comf	itoa@val,f
  2358  0428  09A5               	comf	itoa@val+1,f
  2359  0429  0AA4               	incf	itoa@val,f
  2360  042A  1903               	skipnz
  2361  042B  0AA5               	incf	itoa@val+1,f
  2362  042C                     l1205:	
  2363  042C  0825               	movf	itoa@val+1,w
  2364  042D  00F9               	movwf	utoa@val+1
  2365  042E  0824               	movf	itoa@val,w
  2366  042F  00F8               	movwf	utoa@val
  2367  0430  0827               	movf	itoa@base+1,w
  2368  0431  00FB               	movwf	utoa@base+1
  2369  0432  0826               	movf	itoa@base,w
  2370  0433  00FA               	movwf	utoa@base
  2371  0434  0829               	movf	itoa@buf,w
  2372  0435  3185  2576         	fcall	_utoa
  2373  0437  0020               	movlb	0	; select bank0
  2374  0438  0828               	movf	itoa@cp,w
  2375  0439  0008               	return
  2376  043A                     __end_of_itoa:	
  2377                           
  2378                           	psect	text5
  2379  0576                     __ptext5:	
  2380 ;; *************** function _utoa *****************
  2381 ;; Defined at:
  2382 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\itoa.c"
  2383 ;; Parameters:    Size  Location     Type
  2384 ;;  buf             1    wreg     PTR unsigned char 
  2385 ;;		 -> Lcd_Write_Integer@buf(8), 
  2386 ;;  val             2    8[COMMON] unsigned int 
  2387 ;;  base            2   10[COMMON] int 
  2388 ;; Auto vars:     Size  Location     Type
  2389 ;;  buf             1    3[BANK0 ] PTR unsigned char 
  2390 ;;		 -> Lcd_Write_Integer@buf(8), 
  2391 ;;  v               2    0[BANK0 ] unsigned int 
  2392 ;;  c               1    2[BANK0 ] unsigned char 
  2393 ;; Return value:  Size  Location     Type
  2394 ;;                  1    wreg      PTR unsigned char 
  2395 ;; Registers used:
  2396 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2397 ;; Tracked objects:
  2398 ;;		On entry : 0/0
  2399 ;;		On exit  : 0/0
  2400 ;;		Unchanged: 0/0
  2401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2402 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2403 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2404 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2405 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2406 ;;Total ram usage:        9 bytes
  2407 ;; Hardware stack levels used:    1
  2408 ;; Hardware stack levels required when called:    1
  2409 ;; This function calls:
  2410 ;;		___lwdiv
  2411 ;;		___lwmod
  2412 ;; This function is called by:
  2413 ;;		_itoa
  2414 ;; This function uses a non-reentrant model
  2415 ;;
  2416                           
  2417                           
  2418                           ;psect for function _utoa
  2419  0576                     _utoa:	
  2420                           
  2421                           ;incstack = 0
  2422                           ; Regs used in _utoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2423                           ;utoa@buf stored from wreg
  2424  0576  0020               	movlb	0	; select bank0
  2425  0577  00A3               	movwf	utoa@buf
  2426  0578  0879               	movf	utoa@val+1,w
  2427  0579  00A1               	movwf	utoa@v+1
  2428  057A  0878               	movf	utoa@val,w
  2429  057B  00A0               	movwf	utoa@v
  2430  057C                     l1147:	
  2431  057C  087B               	movf	utoa@base+1,w
  2432  057D  00F1               	movwf	___lwdiv@divisor+1
  2433  057E  087A               	movf	utoa@base,w
  2434  057F  00F0               	movwf	___lwdiv@divisor
  2435  0580  0821               	movf	utoa@v+1,w
  2436  0581  00F3               	movwf	___lwdiv@dividend+1
  2437  0582  0820               	movf	utoa@v,w
  2438  0583  00F2               	movwf	___lwdiv@dividend
  2439  0584  3184  24BC  3185   	fcall	___lwdiv
  2440  0587  0871               	movf	?___lwdiv+1,w
  2441  0588  0020               	movlb	0	; select bank0
  2442  0589  00A1               	movwf	utoa@v+1
  2443  058A  0870               	movf	?___lwdiv,w
  2444  058B  00A0               	movwf	utoa@v
  2445  058C  3001               	movlw	1
  2446  058D  00FC               	movwf	??_utoa
  2447  058E  087C               	movf	??_utoa,w
  2448  058F  07A3               	addwf	utoa@buf,f
  2449  0590  0820               	movf	utoa@v,w
  2450  0591  0421               	iorwf	utoa@v+1,w
  2451  0592  1D03               	btfss	3,2
  2452  0593  2D7C               	goto	l1147
  2453  0594  0823               	movf	utoa@buf,w
  2454  0595  0086               	movwf	6
  2455  0596  0187               	clrf	7
  2456  0597  0181               	clrf	1
  2457  0598  3001               	movlw	1
  2458  0599  02A3               	subwf	utoa@buf,f
  2459  059A                     l1157:	
  2460  059A  087B               	movf	utoa@base+1,w
  2461  059B  00F1               	movwf	___lwmod@divisor+1
  2462  059C  087A               	movf	utoa@base,w
  2463  059D  00F0               	movwf	___lwmod@divisor
  2464  059E  0879               	movf	utoa@val+1,w
  2465  059F  00F3               	movwf	___lwmod@dividend+1
  2466  05A0  0878               	movf	utoa@val,w
  2467  05A1  00F2               	movwf	___lwmod@dividend
  2468  05A2  3184  2490  3185   	fcall	___lwmod
  2469  05A5  0870               	movf	?___lwmod,w
  2470  05A6  00FC               	movwf	??_utoa
  2471  05A7  087C               	movf	??_utoa,w
  2472  05A8  0020               	movlb	0	; select bank0
  2473  05A9  00A2               	movwf	utoa@c
  2474  05AA  087B               	movf	utoa@base+1,w
  2475  05AB  00F1               	movwf	___lwdiv@divisor+1
  2476  05AC  087A               	movf	utoa@base,w
  2477  05AD  00F0               	movwf	___lwdiv@divisor
  2478  05AE  0879               	movf	utoa@val+1,w
  2479  05AF  00F3               	movwf	___lwdiv@dividend+1
  2480  05B0  0878               	movf	utoa@val,w
  2481  05B1  00F2               	movwf	___lwdiv@dividend
  2482  05B2  3184  24BC  3185   	fcall	___lwdiv
  2483  05B5  0871               	movf	?___lwdiv+1,w
  2484  05B6  00F9               	movwf	utoa@val+1
  2485  05B7  0870               	movf	?___lwdiv,w
  2486  05B8  00F8               	movwf	utoa@val
  2487  05B9  300A               	movlw	10
  2488  05BA  0020               	movlb	0	; select bank0
  2489  05BB  0222               	subwf	utoa@c,w
  2490  05BC  1C03               	skipc
  2491  05BD  2DC2               	goto	l540
  2492  05BE  3007               	movlw	7
  2493  05BF  00FC               	movwf	??_utoa
  2494  05C0  087C               	movf	??_utoa,w
  2495  05C1  07A2               	addwf	utoa@c,f
  2496  05C2                     l540:	
  2497  05C2  3030               	movlw	48
  2498  05C3  00FC               	movwf	??_utoa
  2499  05C4  087C               	movf	??_utoa,w
  2500  05C5  07A2               	addwf	utoa@c,f
  2501  05C6  0822               	movf	utoa@c,w
  2502  05C7  00FC               	movwf	??_utoa
  2503  05C8  0823               	movf	utoa@buf,w
  2504  05C9  0086               	movwf	6
  2505  05CA  0187               	clrf	7
  2506  05CB  087C               	movf	??_utoa,w
  2507  05CC  0081               	movwf	1
  2508  05CD  3001               	movlw	1
  2509  05CE  02A3               	subwf	utoa@buf,f
  2510  05CF  0878               	movf	utoa@val,w
  2511  05D0  0479               	iorwf	utoa@val+1,w
  2512  05D1  1D03               	btfss	3,2
  2513  05D2  2D9A               	goto	l1157
  2514                           
  2515                           ;	Return value of _utoa is never used
  2516  05D3  3001               	movlw	1
  2517  05D4  00FC               	movwf	??_utoa
  2518  05D5  087C               	movf	??_utoa,w
  2519  05D6  07A3               	addwf	utoa@buf,f
  2520  05D7  0008               	return
  2521  05D8                     __end_of_utoa:	
  2522                           
  2523                           	psect	text6
  2524  0490                     __ptext6:	
  2525 ;; *************** function ___lwmod *****************
  2526 ;; Defined at:
  2527 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwmod.c"
  2528 ;; Parameters:    Size  Location     Type
  2529 ;;  divisor         2    0[COMMON] unsigned int 
  2530 ;;  dividend        2    2[COMMON] unsigned int 
  2531 ;; Auto vars:     Size  Location     Type
  2532 ;;  counter         1    5[COMMON] unsigned char 
  2533 ;; Return value:  Size  Location     Type
  2534 ;;                  2    0[COMMON] unsigned int 
  2535 ;; Registers used:
  2536 ;;		wreg, status,2, status,0
  2537 ;; Tracked objects:
  2538 ;;		On entry : 0/0
  2539 ;;		On exit  : 0/0
  2540 ;;		Unchanged: 0/0
  2541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2542 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2543 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2544 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2545 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2546 ;;Total ram usage:        6 bytes
  2547 ;; Hardware stack levels used:    1
  2548 ;; This function calls:
  2549 ;;		Nothing
  2550 ;; This function is called by:
  2551 ;;		_utoa
  2552 ;; This function uses a non-reentrant model
  2553 ;;
  2554                           
  2555                           
  2556                           ;psect for function ___lwmod
  2557  0490                     ___lwmod:	
  2558                           
  2559                           ;incstack = 0
  2560                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2561  0490  0870               	movf	___lwmod@divisor,w
  2562  0491  0471               	iorwf	___lwmod@divisor+1,w
  2563  0492  1903               	btfsc	3,2
  2564  0493  2CB7               	goto	l1121
  2565  0494  01F5               	clrf	___lwmod@counter
  2566  0495  0AF5               	incf	___lwmod@counter,f
  2567  0496                     l1111:	
  2568  0496  1BF1               	btfsc	___lwmod@divisor+1,7
  2569  0497  2CA2               	goto	l1113
  2570  0498  3001               	movlw	1
  2571  0499                     u655:	
  2572  0499  35F0               	lslf	___lwmod@divisor,f
  2573  049A  0DF1               	rlf	___lwmod@divisor+1,f
  2574  049B  0B89               	decfsz	9,f
  2575  049C  2C99               	goto	u655
  2576  049D  3001               	movlw	1
  2577  049E  00F4               	movwf	??___lwmod
  2578  049F  0874               	movf	??___lwmod,w
  2579  04A0  07F5               	addwf	___lwmod@counter,f
  2580  04A1  2C96               	goto	l1111
  2581  04A2                     l1113:	
  2582  04A2  0871               	movf	___lwmod@divisor+1,w
  2583  04A3  0273               	subwf	___lwmod@dividend+1,w
  2584  04A4  1D03               	skipz
  2585  04A5  2CA8               	goto	u675
  2586  04A6  0870               	movf	___lwmod@divisor,w
  2587  04A7  0272               	subwf	___lwmod@dividend,w
  2588  04A8                     u675:	
  2589  04A8  1C03               	skipc
  2590  04A9  2CAE               	goto	l1117
  2591  04AA  0870               	movf	___lwmod@divisor,w
  2592  04AB  02F2               	subwf	___lwmod@dividend,f
  2593  04AC  0871               	movf	___lwmod@divisor+1,w
  2594  04AD  3BF3               	subwfb	___lwmod@dividend+1,f
  2595  04AE                     l1117:	
  2596  04AE  3001               	movlw	1
  2597  04AF                     u685:	
  2598  04AF  36F1               	lsrf	___lwmod@divisor+1,f
  2599  04B0  0CF0               	rrf	___lwmod@divisor,f
  2600  04B1  0B89               	decfsz	9,f
  2601  04B2  2CAF               	goto	u685
  2602  04B3  3001               	movlw	1
  2603  04B4  02F5               	subwf	___lwmod@counter,f
  2604  04B5  1D03               	btfss	3,2
  2605  04B6  2CA2               	goto	l1113
  2606  04B7                     l1121:	
  2607  04B7  0873               	movf	___lwmod@dividend+1,w
  2608  04B8  00F1               	movwf	?___lwmod+1
  2609  04B9  0872               	movf	___lwmod@dividend,w
  2610  04BA  00F0               	movwf	?___lwmod
  2611  04BB  0008               	return
  2612  04BC                     __end_of___lwmod:	
  2613                           
  2614                           	psect	text7
  2615  04BC                     __ptext7:	
  2616 ;; *************** function ___lwdiv *****************
  2617 ;; Defined at:
  2618 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c"
  2619 ;; Parameters:    Size  Location     Type
  2620 ;;  divisor         2    0[COMMON] unsigned int 
  2621 ;;  dividend        2    2[COMMON] unsigned int 
  2622 ;; Auto vars:     Size  Location     Type
  2623 ;;  quotient        2    5[COMMON] unsigned int 
  2624 ;;  counter         1    7[COMMON] unsigned char 
  2625 ;; Return value:  Size  Location     Type
  2626 ;;                  2    0[COMMON] unsigned int 
  2627 ;; Registers used:
  2628 ;;		wreg, status,2, status,0
  2629 ;; Tracked objects:
  2630 ;;		On entry : 0/0
  2631 ;;		On exit  : 0/0
  2632 ;;		Unchanged: 0/0
  2633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2634 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2635 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2636 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2637 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2638 ;;Total ram usage:        8 bytes
  2639 ;; Hardware stack levels used:    1
  2640 ;; This function calls:
  2641 ;;		Nothing
  2642 ;; This function is called by:
  2643 ;;		_utoa
  2644 ;; This function uses a non-reentrant model
  2645 ;;
  2646                           
  2647                           
  2648                           ;psect for function ___lwdiv
  2649  04BC                     ___lwdiv:	
  2650                           
  2651                           ;incstack = 0
  2652                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2653  04BC  01F5               	clrf	___lwdiv@quotient
  2654  04BD  01F6               	clrf	___lwdiv@quotient+1
  2655  04BE  0870               	movf	___lwdiv@divisor,w
  2656  04BF  0471               	iorwf	___lwdiv@divisor+1,w
  2657  04C0  1903               	btfsc	3,2
  2658  04C1  2CEB               	goto	l1099
  2659  04C2  01F7               	clrf	___lwdiv@counter
  2660  04C3  0AF7               	incf	___lwdiv@counter,f
  2661  04C4                     l1087:	
  2662  04C4  1BF1               	btfsc	___lwdiv@divisor+1,7
  2663  04C5  2CD0               	goto	l1089
  2664  04C6  3001               	movlw	1
  2665  04C7                     u585:	
  2666  04C7  35F0               	lslf	___lwdiv@divisor,f
  2667  04C8  0DF1               	rlf	___lwdiv@divisor+1,f
  2668  04C9  0B89               	decfsz	9,f
  2669  04CA  2CC7               	goto	u585
  2670  04CB  3001               	movlw	1
  2671  04CC  00F4               	movwf	??___lwdiv
  2672  04CD  0874               	movf	??___lwdiv,w
  2673  04CE  07F7               	addwf	___lwdiv@counter,f
  2674  04CF  2CC4               	goto	l1087
  2675  04D0                     l1089:	
  2676  04D0  3001               	movlw	1
  2677  04D1                     u605:	
  2678  04D1  35F5               	lslf	___lwdiv@quotient,f
  2679  04D2  0DF6               	rlf	___lwdiv@quotient+1,f
  2680  04D3  0B89               	decfsz	9,f
  2681  04D4  2CD1               	goto	u605
  2682  04D5  0871               	movf	___lwdiv@divisor+1,w
  2683  04D6  0273               	subwf	___lwdiv@dividend+1,w
  2684  04D7  1D03               	skipz
  2685  04D8  2CDB               	goto	u615
  2686  04D9  0870               	movf	___lwdiv@divisor,w
  2687  04DA  0272               	subwf	___lwdiv@dividend,w
  2688  04DB                     u615:	
  2689  04DB  1C03               	skipc
  2690  04DC  2CE2               	goto	l1095
  2691  04DD  0870               	movf	___lwdiv@divisor,w
  2692  04DE  02F2               	subwf	___lwdiv@dividend,f
  2693  04DF  0871               	movf	___lwdiv@divisor+1,w
  2694  04E0  3BF3               	subwfb	___lwdiv@dividend+1,f
  2695  04E1  1475               	bsf	___lwdiv@quotient,0
  2696  04E2                     l1095:	
  2697  04E2  3001               	movlw	1
  2698  04E3                     u625:	
  2699  04E3  36F1               	lsrf	___lwdiv@divisor+1,f
  2700  04E4  0CF0               	rrf	___lwdiv@divisor,f
  2701  04E5  0B89               	decfsz	9,f
  2702  04E6  2CE3               	goto	u625
  2703  04E7  3001               	movlw	1
  2704  04E8  02F7               	subwf	___lwdiv@counter,f
  2705  04E9  1D03               	btfss	3,2
  2706  04EA  2CD0               	goto	l1089
  2707  04EB                     l1099:	
  2708  04EB  0876               	movf	___lwdiv@quotient+1,w
  2709  04EC  00F1               	movwf	?___lwdiv+1
  2710  04ED  0875               	movf	___lwdiv@quotient,w
  2711  04EE  00F0               	movwf	?___lwdiv
  2712  04EF  0008               	return
  2713  04F0                     __end_of___lwdiv:	
  2714                           
  2715                           	psect	text8
  2716  03F8                     __ptext8:	
  2717 ;; *************** function _Lcd_Write_String *****************
  2718 ;; Defined at:
  2719 ;;		line 173 in file "LCD.c"
  2720 ;; Parameters:    Size  Location     Type
  2721 ;;  a               2   10[BANK0 ] PTR const unsigned char 
  2722 ;;		 -> ftoa@buf(17), STR_2(16), STR_1(13), Lcd_Write_Integer@buf(8), 
  2723 ;; Auto vars:     Size  Location     Type
  2724 ;;  i               2   13[BANK0 ] int 
  2725 ;; Return value:  Size  Location     Type
  2726 ;;                  1    wreg      void 
  2727 ;; Registers used:
  2728 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2729 ;; Tracked objects:
  2730 ;;		On entry : 0/0
  2731 ;;		On exit  : 0/0
  2732 ;;		Unchanged: 0/0
  2733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2734 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2735 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2736 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2737 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2738 ;;Total ram usage:        5 bytes
  2739 ;; Hardware stack levels used:    1
  2740 ;; Hardware stack levels required when called:    2
  2741 ;; This function calls:
  2742 ;;		_Lcd_Write_Char
  2743 ;; This function is called by:
  2744 ;;		_Lcd_Write_Integer
  2745 ;;		_main
  2746 ;;		_Lcd_Write_Float
  2747 ;; This function uses a non-reentrant model
  2748 ;;
  2749                           
  2750                           
  2751                           ;psect for function _Lcd_Write_String
  2752  03F8                     _Lcd_Write_String:	
  2753                           
  2754                           ;LCD.c: 175: int i;
  2755                           ;LCD.c: 176: for(i=0;a[i]!='\0';i++)
  2756                           
  2757                           ;incstack = 0
  2758                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2759  03F8  0020               	movlb	0	; select bank0
  2760  03F9  01AD               	clrf	Lcd_Write_String@i
  2761  03FA  01AE               	clrf	Lcd_Write_String@i+1
  2762  03FB                     l1193:	
  2763  03FB  082A               	movf	Lcd_Write_String@a,w
  2764  03FC  072D               	addwf	Lcd_Write_String@i,w
  2765  03FD  0084               	movwf	4
  2766  03FE  082B               	movf	Lcd_Write_String@a+1,w
  2767  03FF  3D2E               	addwfc	Lcd_Write_String@i+1,w
  2768  0400  0085               	movwf	5
  2769  0401  0012               	moviw fsr0++
  2770  0402  1903               	btfsc	3,2
  2771  0403  0008               	return
  2772                           
  2773                           ;LCD.c: 177: Lcd_Write_Char(a[i]);
  2774  0404  082A               	movf	Lcd_Write_String@a,w
  2775  0405  072D               	addwf	Lcd_Write_String@i,w
  2776  0406  0084               	movwf	4
  2777  0407  082B               	movf	Lcd_Write_String@a+1,w
  2778  0408  3D2E               	addwfc	Lcd_Write_String@i+1,w
  2779  0409  0085               	movwf	5
  2780  040A  0800               	movf	0,w	;code access
  2781  040B  3184  2464  3183   	fcall	_Lcd_Write_Char
  2782  040E  3001               	movlw	1
  2783  040F  0020               	movlb	0	; select bank0
  2784  0410  07AD               	addwf	Lcd_Write_String@i,f
  2785  0411  3000               	movlw	0
  2786  0412  3DAE               	addwfc	Lcd_Write_String@i+1,f
  2787  0413  2BFB               	goto	l1193
  2788  0414                     __end_of_Lcd_Write_String:	
  2789                           
  2790                           	psect	text9
  2791  0464                     __ptext9:	
  2792 ;; *************** function _Lcd_Write_Char *****************
  2793 ;; Defined at:
  2794 ;;		line 149 in file "LCD.c"
  2795 ;; Parameters:    Size  Location     Type
  2796 ;;  a               1    wreg     unsigned char 
  2797 ;; Auto vars:     Size  Location     Type
  2798 ;;  a               1    4[COMMON] unsigned char 
  2799 ;;  y               1    3[COMMON] unsigned char 
  2800 ;;  temp            1    2[COMMON] unsigned char 
  2801 ;; Return value:  Size  Location     Type
  2802 ;;                  1    wreg      void 
  2803 ;; Registers used:
  2804 ;;		wreg, status,2, status,0, pclath, cstack
  2805 ;; Tracked objects:
  2806 ;;		On entry : 0/0
  2807 ;;		On exit  : 0/0
  2808 ;;		Unchanged: 0/0
  2809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2811 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2812 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2813 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2814 ;;Total ram usage:        4 bytes
  2815 ;; Hardware stack levels used:    1
  2816 ;; Hardware stack levels required when called:    1
  2817 ;; This function calls:
  2818 ;;		_Lcd_Port
  2819 ;; This function is called by:
  2820 ;;		_Lcd_Write_String
  2821 ;; This function uses a non-reentrant model
  2822 ;;
  2823                           
  2824                           
  2825                           ;psect for function _Lcd_Write_Char
  2826  0464                     _Lcd_Write_Char:	
  2827                           
  2828                           ;incstack = 0
  2829                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2830                           ;Lcd_Write_Char@a stored from wreg
  2831  0464  00F4               	movwf	Lcd_Write_Char@a
  2832                           
  2833                           ;LCD.c: 151: char temp,y;
  2834                           ;LCD.c: 152: temp = a&0x0F;
  2835  0465  0874               	movf	Lcd_Write_Char@a,w
  2836  0466  390F               	andlw	15
  2837  0467  00F1               	movwf	??_Lcd_Write_Char
  2838  0468  0871               	movf	??_Lcd_Write_Char,w
  2839  0469  00F2               	movwf	Lcd_Write_Char@temp
  2840                           
  2841                           ;LCD.c: 153: y = a&0xF0;
  2842  046A  0874               	movf	Lcd_Write_Char@a,w
  2843  046B  39F0               	andlw	240
  2844  046C  00F1               	movwf	??_Lcd_Write_Char
  2845  046D  0871               	movf	??_Lcd_Write_Char,w
  2846  046E  00F3               	movwf	Lcd_Write_Char@y
  2847                           
  2848                           ;LCD.c: 154: RD2 = 1;
  2849  046F  0020               	movlb	0	; select bank0
  2850  0470  150F               	bsf	15,2	;volatile
  2851                           
  2852                           ;LCD.c: 155: Lcd_Port(y>>4);
  2853  0471  0873               	movf	Lcd_Write_Char@y,w
  2854  0472  00F1               	movwf	??_Lcd_Write_Char
  2855  0473  3004               	movlw	4
  2856  0474                     u705:	
  2857  0474  36F1               	lsrf	??_Lcd_Write_Char,f
  2858  0475  0B89               	decfsz	9,f
  2859  0476  2C74               	goto	u705
  2860  0477  0871               	movf	??_Lcd_Write_Char,w
  2861  0478  3183  23E0  3184   	fcall	_Lcd_Port
  2862                           
  2863                           ;LCD.c: 156: RD3 = 1;
  2864  047B  0020               	movlb	0	; select bank0
  2865  047C  158F               	bsf	15,3	;volatile
  2866                           
  2867                           ;LCD.c: 157: _delay((unsigned long)((40)*(16000000/4000000.0)));
  2868  047D  3035               	movlw	53
  2869  047E  00F1               	movwf	??_Lcd_Write_Char
  2870  047F                     u1097:	
  2871  047F  0BF1               	decfsz	??_Lcd_Write_Char,f
  2872  0480  2C7F               	goto	u1097
  2873                           
  2874                           ;LCD.c: 158: RD3 = 0;
  2875  0481  0020               	movlb	0	; select bank0
  2876  0482  118F               	bcf	15,3	;volatile
  2877                           
  2878                           ;LCD.c: 159: Lcd_Port(temp);
  2879  0483  0872               	movf	Lcd_Write_Char@temp,w
  2880  0484  3183  23E0  3184   	fcall	_Lcd_Port
  2881                           
  2882                           ;LCD.c: 160: RD3 = 1;
  2883  0487  0020               	movlb	0	; select bank0
  2884  0488  158F               	bsf	15,3	;volatile
  2885                           
  2886                           ;LCD.c: 161: _delay((unsigned long)((40)*(16000000/4000000.0)));
  2887  0489  3035               	movlw	53
  2888  048A  00F1               	movwf	??_Lcd_Write_Char
  2889  048B                     u1107:	
  2890  048B  0BF1               	decfsz	??_Lcd_Write_Char,f
  2891  048C  2C8B               	goto	u1107
  2892                           
  2893                           ;LCD.c: 162: RD3 = 0;
  2894  048D  0020               	movlb	0	; select bank0
  2895  048E  118F               	bcf	15,3	;volatile
  2896  048F  0008               	return
  2897  0490                     __end_of_Lcd_Write_Char:	
  2898                           
  2899                           	psect	text10
  2900  04F0                     __ptext10:	
  2901 ;; *************** function _Lcd_Set_Cursor *****************
  2902 ;; Defined at:
  2903 ;;		line 93 in file "LCD.c"
  2904 ;; Parameters:    Size  Location     Type
  2905 ;;  a               1    wreg     unsigned char 
  2906 ;;  b               1    4[COMMON] unsigned char 
  2907 ;; Auto vars:     Size  Location     Type
  2908 ;;  a               1    7[COMMON] unsigned char 
  2909 ;;  temp            1   10[COMMON] unsigned char 
  2910 ;;  y               1    9[COMMON] unsigned char 
  2911 ;;  z               1    8[COMMON] unsigned char 
  2912 ;; Return value:  Size  Location     Type
  2913 ;;                  1    wreg      void 
  2914 ;; Registers used:
  2915 ;;		wreg, status,2, status,0, pclath, cstack
  2916 ;; Tracked objects:
  2917 ;;		On entry : 0/0
  2918 ;;		On exit  : 0/0
  2919 ;;		Unchanged: 0/0
  2920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2921 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2922 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2923 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2924 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2925 ;;Total ram usage:        7 bytes
  2926 ;; Hardware stack levels used:    1
  2927 ;; Hardware stack levels required when called:    2
  2928 ;; This function calls:
  2929 ;;		_Lcd_Cmd
  2930 ;; This function is called by:
  2931 ;;		_main
  2932 ;; This function uses a non-reentrant model
  2933 ;;
  2934                           
  2935                           
  2936                           ;psect for function _Lcd_Set_Cursor
  2937  04F0                     _Lcd_Set_Cursor:	
  2938                           
  2939                           ;incstack = 0
  2940                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2941                           ;Lcd_Set_Cursor@a stored from wreg
  2942  04F0  00F7               	movwf	Lcd_Set_Cursor@a
  2943                           
  2944                           ;LCD.c: 95: char temp,z,y;
  2945                           ;LCD.c: 96: if(a == 1)
  2946  04F1  0377               	decf	Lcd_Set_Cursor@a,w
  2947  04F2  1D03               	btfss	3,2
  2948  04F3  2D10               	goto	l1301
  2949                           
  2950                           ;LCD.c: 97: {
  2951                           ;LCD.c: 98: temp = 0x80 + b - 1;
  2952  04F4  0874               	movf	Lcd_Set_Cursor@b,w
  2953  04F5  3E7F               	addlw	127
  2954  04F6  00F5               	movwf	??_Lcd_Set_Cursor
  2955  04F7  0875               	movf	??_Lcd_Set_Cursor,w
  2956  04F8  00FA               	movwf	Lcd_Set_Cursor@temp
  2957                           
  2958                           ;LCD.c: 99: z = temp>>4;
  2959  04F9  087A               	movf	Lcd_Set_Cursor@temp,w
  2960  04FA  00F5               	movwf	??_Lcd_Set_Cursor
  2961  04FB  3004               	movlw	4
  2962  04FC                     u965:	
  2963  04FC  36F5               	lsrf	??_Lcd_Set_Cursor,f
  2964  04FD  0B89               	decfsz	9,f
  2965  04FE  2CFC               	goto	u965
  2966  04FF  0875               	movf	??_Lcd_Set_Cursor,w
  2967  0500  00F6               	movwf	??_Lcd_Set_Cursor+1
  2968  0501  0876               	movf	??_Lcd_Set_Cursor+1,w
  2969  0502  00F8               	movwf	Lcd_Set_Cursor@z
  2970                           
  2971                           ;LCD.c: 100: y = temp & 0x0F;
  2972  0503  087A               	movf	Lcd_Set_Cursor@temp,w
  2973  0504  390F               	andlw	15
  2974  0505  00F5               	movwf	??_Lcd_Set_Cursor
  2975  0506  0875               	movf	??_Lcd_Set_Cursor,w
  2976  0507  00F9               	movwf	Lcd_Set_Cursor@y
  2977                           
  2978                           ;LCD.c: 101: Lcd_Cmd(z);
  2979  0508  0878               	movf	Lcd_Set_Cursor@z,w
  2980  0509  3183  23CB  3184   	fcall	_Lcd_Cmd
  2981                           
  2982                           ;LCD.c: 102: Lcd_Cmd(y);
  2983  050C  0879               	movf	Lcd_Set_Cursor@y,w
  2984  050D  3183  23CB         	fcall	_Lcd_Cmd
  2985                           
  2986                           ;LCD.c: 103: }
  2987  050F  0008               	return
  2988  0510                     l1301:	
  2989                           
  2990                           ;LCD.c: 104: else if(a == 2)
  2991  0510  3002               	movlw	2
  2992  0511  0677               	xorwf	Lcd_Set_Cursor@a,w
  2993  0512  1D03               	btfss	3,2
  2994  0513  0008               	return
  2995                           
  2996                           ;LCD.c: 105: {
  2997                           ;LCD.c: 106: temp = 0xC0 + b - 1;
  2998  0514  0874               	movf	Lcd_Set_Cursor@b,w
  2999  0515  3EBF               	addlw	191
  3000  0516  00F5               	movwf	??_Lcd_Set_Cursor
  3001  0517  0875               	movf	??_Lcd_Set_Cursor,w
  3002  0518  00FA               	movwf	Lcd_Set_Cursor@temp
  3003                           
  3004                           ;LCD.c: 107: z = temp>>4;
  3005  0519  087A               	movf	Lcd_Set_Cursor@temp,w
  3006  051A  00F5               	movwf	??_Lcd_Set_Cursor
  3007  051B  3004               	movlw	4
  3008  051C                     u985:	
  3009  051C  36F5               	lsrf	??_Lcd_Set_Cursor,f
  3010  051D  0B89               	decfsz	9,f
  3011  051E  2D1C               	goto	u985
  3012  051F  0875               	movf	??_Lcd_Set_Cursor,w
  3013  0520  00F6               	movwf	??_Lcd_Set_Cursor+1
  3014  0521  0876               	movf	??_Lcd_Set_Cursor+1,w
  3015  0522  00F8               	movwf	Lcd_Set_Cursor@z
  3016                           
  3017                           ;LCD.c: 108: y = temp & 0x0F;
  3018  0523  087A               	movf	Lcd_Set_Cursor@temp,w
  3019  0524  390F               	andlw	15
  3020  0525  00F5               	movwf	??_Lcd_Set_Cursor
  3021  0526  0875               	movf	??_Lcd_Set_Cursor,w
  3022  0527  00F9               	movwf	Lcd_Set_Cursor@y
  3023                           
  3024                           ;LCD.c: 109: Lcd_Cmd(z);
  3025  0528  0878               	movf	Lcd_Set_Cursor@z,w
  3026  0529  3183  23CB  3184   	fcall	_Lcd_Cmd
  3027                           
  3028                           ;LCD.c: 110: Lcd_Cmd(y);
  3029  052C  0879               	movf	Lcd_Set_Cursor@y,w
  3030  052D  3183  23CB         	fcall	_Lcd_Cmd
  3031  052F  0008               	return
  3032  0530                     __end_of_Lcd_Set_Cursor:	
  3033                           
  3034                           	psect	text11
  3035  0530                     __ptext11:	
  3036 ;; *************** function _Lcd_Init *****************
  3037 ;; Defined at:
  3038 ;;		line 122 in file "LCD.c"
  3039 ;; Parameters:    Size  Location     Type
  3040 ;;		None
  3041 ;; Auto vars:     Size  Location     Type
  3042 ;;		None
  3043 ;; Return value:  Size  Location     Type
  3044 ;;                  1    wreg      void 
  3045 ;; Registers used:
  3046 ;;		wreg, status,2, status,0, pclath, cstack
  3047 ;; Tracked objects:
  3048 ;;		On entry : 0/0
  3049 ;;		On exit  : 0/0
  3050 ;;		Unchanged: 0/0
  3051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3054 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3055 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3056 ;;Total ram usage:        2 bytes
  3057 ;; Hardware stack levels used:    1
  3058 ;; Hardware stack levels required when called:    2
  3059 ;; This function calls:
  3060 ;;		_Lcd_Cmd
  3061 ;;		_Lcd_Port
  3062 ;; This function is called by:
  3063 ;;		_main
  3064 ;; This function uses a non-reentrant model
  3065 ;;
  3066                           
  3067                           
  3068                           ;psect for function _Lcd_Init
  3069  0530                     _Lcd_Init:	
  3070                           
  3071                           ;LCD.c: 124: Lcd_Port(0x00);
  3072                           
  3073                           ;incstack = 0
  3074                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3075  0530  3000               	movlw	0
  3076  0531  3183  23E0  3185   	fcall	_Lcd_Port
  3077                           
  3078                           ;LCD.c: 125: _delay((unsigned long)((20)*(16000000/4000.0)));
  3079  0534  3068               	movlw	104
  3080  0535  00F5               	movwf	??_Lcd_Init+1
  3081  0536  30E4               	movlw	228
  3082  0537  00F4               	movwf	??_Lcd_Init
  3083  0538                     u1117:	
  3084  0538  0BF4               	decfsz	??_Lcd_Init,f
  3085  0539  2D38               	goto	u1117
  3086  053A  0BF5               	decfsz	??_Lcd_Init+1,f
  3087  053B  2D38               	goto	u1117
  3088  053C  0000               	nop
  3089                           
  3090                           ;LCD.c: 126: Lcd_Cmd(0x03);
  3091  053D  3003               	movlw	3
  3092  053E  3183  23CB  3185   	fcall	_Lcd_Cmd
  3093                           
  3094                           ;LCD.c: 127: _delay((unsigned long)((5)*(16000000/4000.0)));
  3095  0541  301A               	movlw	26
  3096  0542  00F5               	movwf	??_Lcd_Init+1
  3097  0543  30F8               	movlw	248
  3098  0544  00F4               	movwf	??_Lcd_Init
  3099  0545                     u1127:	
  3100  0545  0BF4               	decfsz	??_Lcd_Init,f
  3101  0546  2D45               	goto	u1127
  3102  0547  0BF5               	decfsz	??_Lcd_Init+1,f
  3103  0548  2D45               	goto	u1127
  3104  0549  0000               	nop
  3105                           
  3106                           ;LCD.c: 128: Lcd_Cmd(0x03);
  3107  054A  3003               	movlw	3
  3108  054B  3183  23CB  3185   	fcall	_Lcd_Cmd
  3109                           
  3110                           ;LCD.c: 129: _delay((unsigned long)((11)*(16000000/4000.0)));
  3111  054E  303A               	movlw	58
  3112  054F  00F5               	movwf	??_Lcd_Init+1
  3113  0550  3023               	movlw	35
  3114  0551  00F4               	movwf	??_Lcd_Init
  3115  0552                     u1137:	
  3116  0552  0BF4               	decfsz	??_Lcd_Init,f
  3117  0553  2D52               	goto	u1137
  3118  0554  0BF5               	decfsz	??_Lcd_Init+1,f
  3119  0555  2D52               	goto	u1137
  3120                           
  3121                           ;LCD.c: 130: Lcd_Cmd(0x03);
  3122  0556  3003               	movlw	3
  3123  0557  3183  23CB  3185   	fcall	_Lcd_Cmd
  3124                           
  3125                           ;LCD.c: 132: Lcd_Cmd(0x02);
  3126  055A  3002               	movlw	2
  3127  055B  3183  23CB  3185   	fcall	_Lcd_Cmd
  3128                           
  3129                           ;LCD.c: 133: Lcd_Cmd(0x02);
  3130  055E  3002               	movlw	2
  3131  055F  3183  23CB  3185   	fcall	_Lcd_Cmd
  3132                           
  3133                           ;LCD.c: 134: Lcd_Cmd(0x08);
  3134  0562  3008               	movlw	8
  3135  0563  3183  23CB  3185   	fcall	_Lcd_Cmd
  3136                           
  3137                           ;LCD.c: 135: Lcd_Cmd(0x00);
  3138  0566  3000               	movlw	0
  3139  0567  3183  23CB  3185   	fcall	_Lcd_Cmd
  3140                           
  3141                           ;LCD.c: 136: Lcd_Cmd(0x0C);
  3142  056A  300C               	movlw	12
  3143  056B  3183  23CB  3185   	fcall	_Lcd_Cmd
  3144                           
  3145                           ;LCD.c: 137: Lcd_Cmd(0x00);
  3146  056E  3000               	movlw	0
  3147  056F  3183  23CB  3185   	fcall	_Lcd_Cmd
  3148                           
  3149                           ;LCD.c: 138: Lcd_Cmd(0x06);
  3150  0572  3006               	movlw	6
  3151  0573  3183  23CB         	fcall	_Lcd_Cmd
  3152  0575  0008               	return
  3153  0576                     __end_of_Lcd_Init:	
  3154                           
  3155                           	psect	text12
  3156  039A                     __ptext12:	
  3157 ;; *************** function _Lcd_Clear *****************
  3158 ;; Defined at:
  3159 ;;		line 79 in file "LCD.c"
  3160 ;; Parameters:    Size  Location     Type
  3161 ;;		None
  3162 ;; Auto vars:     Size  Location     Type
  3163 ;;		None
  3164 ;; Return value:  Size  Location     Type
  3165 ;;                  1    wreg      void 
  3166 ;; Registers used:
  3167 ;;		wreg, status,2, status,0, pclath, cstack
  3168 ;; Tracked objects:
  3169 ;;		On entry : 0/0
  3170 ;;		On exit  : 0/0
  3171 ;;		Unchanged: 0/0
  3172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3177 ;;Total ram usage:        0 bytes
  3178 ;; Hardware stack levels used:    1
  3179 ;; Hardware stack levels required when called:    2
  3180 ;; This function calls:
  3181 ;;		_Lcd_Cmd
  3182 ;; This function is called by:
  3183 ;;		_main
  3184 ;; This function uses a non-reentrant model
  3185 ;;
  3186                           
  3187                           
  3188                           ;psect for function _Lcd_Clear
  3189  039A                     _Lcd_Clear:	
  3190                           
  3191                           ;LCD.c: 81: Lcd_Cmd(0);
  3192                           
  3193                           ;incstack = 0
  3194                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3195  039A  3000               	movlw	0
  3196  039B  3183  23CB  3183   	fcall	_Lcd_Cmd
  3197                           
  3198                           ;LCD.c: 82: Lcd_Cmd(1);
  3199  039E  3001               	movlw	1
  3200  039F  3183  23CB         	fcall	_Lcd_Cmd
  3201  03A1  0008               	return
  3202  03A2                     __end_of_Lcd_Clear:	
  3203                           
  3204                           	psect	text13
  3205  03CB                     __ptext13:	
  3206 ;; *************** function _Lcd_Cmd *****************
  3207 ;; Defined at:
  3208 ;;		line 62 in file "LCD.c"
  3209 ;; Parameters:    Size  Location     Type
  3210 ;;  a               1    wreg     unsigned char 
  3211 ;; Auto vars:     Size  Location     Type
  3212 ;;  a               1    3[COMMON] unsigned char 
  3213 ;; Return value:  Size  Location     Type
  3214 ;;                  1    wreg      void 
  3215 ;; Registers used:
  3216 ;;		wreg, status,2, status,0, pclath, cstack
  3217 ;; Tracked objects:
  3218 ;;		On entry : 0/0
  3219 ;;		On exit  : 0/0
  3220 ;;		Unchanged: 0/0
  3221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3223 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3224 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3225 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3226 ;;Total ram usage:        3 bytes
  3227 ;; Hardware stack levels used:    1
  3228 ;; Hardware stack levels required when called:    1
  3229 ;; This function calls:
  3230 ;;		_Lcd_Port
  3231 ;; This function is called by:
  3232 ;;		_Lcd_Clear
  3233 ;;		_Lcd_Set_Cursor
  3234 ;;		_Lcd_Init
  3235 ;;		_Lcd_Shift_Right
  3236 ;;		_Lcd_Shift_Left
  3237 ;; This function uses a non-reentrant model
  3238 ;;
  3239                           
  3240                           
  3241                           ;psect for function _Lcd_Cmd
  3242  03CB                     _Lcd_Cmd:	
  3243                           
  3244                           ;incstack = 0
  3245                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3246                           ;Lcd_Cmd@a stored from wreg
  3247  03CB  00F3               	movwf	Lcd_Cmd@a
  3248                           
  3249                           ;LCD.c: 64: RD2 = 0;
  3250  03CC  0020               	movlb	0	; select bank0
  3251  03CD  110F               	bcf	15,2	;volatile
  3252                           
  3253                           ;LCD.c: 65: Lcd_Port(a);
  3254  03CE  0873               	movf	Lcd_Cmd@a,w
  3255  03CF  3183  23E0  3183   	fcall	_Lcd_Port
  3256                           
  3257                           ;LCD.c: 66: RD3 = 1;
  3258  03D2  0020               	movlb	0	; select bank0
  3259  03D3  158F               	bsf	15,3	;volatile
  3260                           
  3261                           ;LCD.c: 67: _delay((unsigned long)((4)*(16000000/4000.0)));
  3262  03D4  3015               	movlw	21
  3263  03D5  00F2               	movwf	??_Lcd_Cmd+1
  3264  03D6  30C6               	movlw	198
  3265  03D7  00F1               	movwf	??_Lcd_Cmd
  3266  03D8                     u1147:	
  3267  03D8  0BF1               	decfsz	??_Lcd_Cmd,f
  3268  03D9  2BD8               	goto	u1147
  3269  03DA  0BF2               	decfsz	??_Lcd_Cmd+1,f
  3270  03DB  2BD8               	goto	u1147
  3271  03DC  0000               	nop
  3272                           
  3273                           ;LCD.c: 68: RD3 = 0;
  3274  03DD  0020               	movlb	0	; select bank0
  3275  03DE  118F               	bcf	15,3	;volatile
  3276  03DF  0008               	return
  3277  03E0                     __end_of_Lcd_Cmd:	
  3278                           
  3279                           	psect	text14
  3280  03E0                     __ptext14:	
  3281 ;; *************** function _Lcd_Port *****************
  3282 ;; Defined at:
  3283 ;;		line 31 in file "LCD.c"
  3284 ;; Parameters:    Size  Location     Type
  3285 ;;  a               1    wreg     unsigned char 
  3286 ;; Auto vars:     Size  Location     Type
  3287 ;;  a               1    0[COMMON] unsigned char 
  3288 ;; Return value:  Size  Location     Type
  3289 ;;                  1    wreg      void 
  3290 ;; Registers used:
  3291 ;;		wreg
  3292 ;; Tracked objects:
  3293 ;;		On entry : 0/0
  3294 ;;		On exit  : 0/0
  3295 ;;		Unchanged: 0/0
  3296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3298 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3300 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3301 ;;Total ram usage:        1 bytes
  3302 ;; Hardware stack levels used:    1
  3303 ;; This function calls:
  3304 ;;		Nothing
  3305 ;; This function is called by:
  3306 ;;		_Lcd_Cmd
  3307 ;;		_Lcd_Init
  3308 ;;		_Lcd_Write_Char
  3309 ;; This function uses a non-reentrant model
  3310 ;;
  3311                           
  3312                           
  3313                           ;psect for function _Lcd_Port
  3314  03E0                     _Lcd_Port:	
  3315                           
  3316                           ;incstack = 0
  3317                           ; Regs used in _Lcd_Port: [wreg]
  3318                           ;Lcd_Port@a stored from wreg
  3319  03E0  00F0               	movwf	Lcd_Port@a
  3320                           
  3321                           ;LCD.c: 33: if(a & 1)
  3322  03E1  1C70               	btfss	Lcd_Port@a,0
  3323  03E2  2BE6               	goto	l110
  3324                           
  3325                           ;LCD.c: 34: RD4 = 1;
  3326  03E3  0020               	movlb	0	; select bank0
  3327  03E4  160F               	bsf	15,4	;volatile
  3328  03E5  2BE8               	goto	l1065
  3329  03E6                     l110:	
  3330                           
  3331                           ;LCD.c: 35: else
  3332                           ;LCD.c: 36: RD4 = 0;
  3333  03E6  0020               	movlb	0	; select bank0
  3334  03E7  120F               	bcf	15,4	;volatile
  3335  03E8                     l1065:	
  3336                           
  3337                           ;LCD.c: 38: if(a & 2)
  3338  03E8  1CF0               	btfss	Lcd_Port@a,1
  3339  03E9  2BEC               	goto	l112
  3340                           
  3341                           ;LCD.c: 39: RD5 = 1;
  3342  03EA  168F               	bsf	15,5	;volatile
  3343  03EB  2BED               	goto	l1069
  3344  03EC                     l112:	
  3345                           
  3346                           ;LCD.c: 40: else
  3347                           ;LCD.c: 41: RD5 = 0;
  3348  03EC  128F               	bcf	15,5	;volatile
  3349  03ED                     l1069:	
  3350                           
  3351                           ;LCD.c: 43: if(a & 4)
  3352  03ED  1D70               	btfss	Lcd_Port@a,2
  3353  03EE  2BF1               	goto	l114
  3354                           
  3355                           ;LCD.c: 44: RD6 = 1;
  3356  03EF  170F               	bsf	15,6	;volatile
  3357  03F0  2BF2               	goto	l1073
  3358  03F1                     l114:	
  3359                           
  3360                           ;LCD.c: 45: else
  3361                           ;LCD.c: 46: RD6 = 0;
  3362  03F1  130F               	bcf	15,6	;volatile
  3363  03F2                     l1073:	
  3364                           
  3365                           ;LCD.c: 48: if(a & 8)
  3366  03F2  1DF0               	btfss	Lcd_Port@a,3
  3367  03F3  2BF6               	goto	l116
  3368                           
  3369                           ;LCD.c: 49: RD7 = 1;
  3370  03F4  178F               	bsf	15,7	;volatile
  3371  03F5  0008               	return
  3372  03F6                     l116:	
  3373                           
  3374                           ;LCD.c: 50: else
  3375                           ;LCD.c: 51: RD7 = 0;
  3376  03F6  138F               	bcf	15,7	;volatile
  3377  03F7  0008               	return
  3378  03F8                     __end_of_Lcd_Port:	
  3379                           
  3380                           	psect	text15
  3381  0392                     __ptext15:	
  3382 ;; *************** function _EUSART_Write *****************
  3383 ;; Defined at:
  3384 ;;		line 98 in file "EUSART.c"
  3385 ;; Parameters:    Size  Location     Type
  3386 ;;  txData          1    wreg     unsigned char 
  3387 ;; Auto vars:     Size  Location     Type
  3388 ;;  txData          1    0[COMMON] unsigned char 
  3389 ;; Return value:  Size  Location     Type
  3390 ;;                  1    wreg      void 
  3391 ;; Registers used:
  3392 ;;		wreg
  3393 ;; Tracked objects:
  3394 ;;		On entry : 0/0
  3395 ;;		On exit  : 0/0
  3396 ;;		Unchanged: 0/0
  3397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3399 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3401 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3402 ;;Total ram usage:        1 bytes
  3403 ;; Hardware stack levels used:    1
  3404 ;; This function calls:
  3405 ;;		Nothing
  3406 ;; This function is called by:
  3407 ;;		_main
  3408 ;;		_EUSART_Write_Text
  3409 ;; This function uses a non-reentrant model
  3410 ;;
  3411                           
  3412                           
  3413                           ;psect for function _EUSART_Write
  3414  0392                     _EUSART_Write:	
  3415                           
  3416                           ;incstack = 0
  3417                           ; Regs used in _EUSART_Write: [wreg]
  3418                           ;EUSART_Write@txData stored from wreg
  3419  0392  00F0               	movwf	EUSART_Write@txData
  3420  0393                     l74:	
  3421                           ;EUSART.c: 101: {
  3422                           
  3423                           ;EUSART.c: 100: while(0 == PIR1bits.TXIF)
  3424                           
  3425  0393  0020               	movlb	0	; select bank0
  3426  0394  1E11               	btfss	17,4	;volatile
  3427  0395  2B93               	goto	l74
  3428                           
  3429                           ;EUSART.c: 102: }
  3430                           ;EUSART.c: 104: TX1REG = txData;
  3431  0396  0870               	movf	EUSART_Write@txData,w
  3432  0397  0023               	movlb	3	; select bank3
  3433  0398  009A               	movwf	26	;volatile
  3434  0399  0008               	return
  3435  039A                     __end_of_EUSART_Write:	
  3436                           
  3437                           	psect	text16
  3438  03AB                     __ptext16:	
  3439 ;; *************** function _EUSART_Read *****************
  3440 ;; Defined at:
  3441 ;;		line 68 in file "EUSART.c"
  3442 ;; Parameters:    Size  Location     Type
  3443 ;;		None
  3444 ;; Auto vars:     Size  Location     Type
  3445 ;;		None
  3446 ;; Return value:  Size  Location     Type
  3447 ;;                  1    wreg      unsigned char 
  3448 ;; Registers used:
  3449 ;;		wreg
  3450 ;; Tracked objects:
  3451 ;;		On entry : 0/0
  3452 ;;		On exit  : 0/0
  3453 ;;		Unchanged: 0/0
  3454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3459 ;;Total ram usage:        0 bytes
  3460 ;; Hardware stack levels used:    1
  3461 ;; This function calls:
  3462 ;;		Nothing
  3463 ;; This function is called by:
  3464 ;;		_main
  3465 ;;		_EUSART_Read_Text
  3466 ;; This function uses a non-reentrant model
  3467 ;;
  3468                           
  3469                           
  3470                           ;psect for function _EUSART_Read
  3471  03AB                     _EUSART_Read:	
  3472                           
  3473                           ;EUSART.c: 71: RC1STAbits.SREN = 1;
  3474                           
  3475                           ;incstack = 0
  3476                           ; Regs used in _EUSART_Read: [wreg]
  3477  03AB  0023               	movlb	3	; select bank3
  3478  03AC  169D               	bsf	29,5	;volatile
  3479  03AD                     l67:	
  3480                           ;EUSART.c: 73: {
  3481                           
  3482                           ;EUSART.c: 72: while(!PIR1bits.RCIF)
  3483                           
  3484  03AD  0020               	movlb	0	; select bank0
  3485  03AE  1E91               	btfss	17,5	;volatile
  3486  03AF  2BAD               	goto	l67
  3487                           
  3488                           ;EUSART.c: 74: }
  3489                           ;EUSART.c: 77: if(1 == RC1STAbits.OERR)
  3490  03B0  0023               	movlb	3	; select bank3
  3491  03B1  1C9D               	btfss	29,1	;volatile
  3492  03B2  2BB5               	goto	l1281
  3493                           
  3494                           ;EUSART.c: 78: {
  3495                           ;EUSART.c: 81: RC1STAbits.SPEN = 0;
  3496  03B3  139D               	bcf	29,7	;volatile
  3497                           
  3498                           ;EUSART.c: 82: RC1STAbits.SPEN = 1;
  3499  03B4  179D               	bsf	29,7	;volatile
  3500  03B5                     l1281:	
  3501                           
  3502                           ;EUSART.c: 83: }
  3503                           ;EUSART.c: 85: return RC1REG;
  3504  03B5  0819               	movf	25,w	;volatile
  3505  03B6  0008               	return
  3506  03B7                     __end_of_EUSART_Read:	
  3507                           
  3508                           	psect	text17
  3509  065A                     __ptext17:	
  3510 ;; *************** function _EUSART_Initialize *****************
  3511 ;; Defined at:
  3512 ;;		line 34 in file "EUSART.c"
  3513 ;; Parameters:    Size  Location     Type
  3514 ;;  baudrate        4    6[BANK0 ] const long 
  3515 ;; Auto vars:     Size  Location     Type
  3516 ;;  x               2    9[COMMON] unsigned int 
  3517 ;; Return value:  Size  Location     Type
  3518 ;;                  1    wreg      unsigned char 
  3519 ;; Registers used:
  3520 ;;		wreg, status,2, status,0, pclath, cstack
  3521 ;; Tracked objects:
  3522 ;;		On entry : 0/0
  3523 ;;		On exit  : 0/0
  3524 ;;		Unchanged: 0/0
  3525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3526 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3527 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3528 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3529 ;;      Totals:         2      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3530 ;;Total ram usage:       14 bytes
  3531 ;; Hardware stack levels used:    1
  3532 ;; Hardware stack levels required when called:    1
  3533 ;; This function calls:
  3534 ;;		___aldiv
  3535 ;; This function is called by:
  3536 ;;		_main
  3537 ;; This function uses a non-reentrant model
  3538 ;;
  3539                           
  3540                           
  3541                           ;psect for function _EUSART_Initialize
  3542  065A                     _EUSART_Initialize:	
  3543                           
  3544                           ;EUSART.c: 36: unsigned int x;
  3545                           ;EUSART.c: 37: x = (16000000 - baudrate*64)/(baudrate*64);
  3546                           
  3547                           ;incstack = 0
  3548                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3549  065A  0020               	movlb	0	; select bank0
  3550  065B  0826               	movf	EUSART_Initialize@baudrate,w
  3551  065C  00AA               	movwf	??_EUSART_Initialize
  3552  065D  0827               	movf	EUSART_Initialize@baudrate+1,w
  3553  065E  00AB               	movwf	??_EUSART_Initialize+1
  3554  065F  0828               	movf	EUSART_Initialize@baudrate+2,w
  3555  0660  00AC               	movwf	??_EUSART_Initialize+2
  3556  0661  0829               	movf	EUSART_Initialize@baudrate+3,w
  3557  0662  00AD               	movwf	??_EUSART_Initialize+3
  3558  0663  3006               	movlw	6
  3559  0664                     u865:	
  3560  0664  35AA               	lslf	??_EUSART_Initialize,f
  3561  0665  0DAB               	rlf	??_EUSART_Initialize+1,f
  3562  0666  0DAC               	rlf	??_EUSART_Initialize+2,f
  3563  0667  0DAD               	rlf	??_EUSART_Initialize+3,f
  3564  0668  0B89               	decfsz	9,f
  3565  0669  2E64               	goto	u865
  3566  066A  082D               	movf	??_EUSART_Initialize+3,w
  3567  066B  00F3               	movwf	___aldiv@divisor+3
  3568  066C  082C               	movf	??_EUSART_Initialize+2,w
  3569  066D  00F2               	movwf	___aldiv@divisor+2
  3570  066E  082B               	movf	??_EUSART_Initialize+1,w
  3571  066F  00F1               	movwf	___aldiv@divisor+1
  3572  0670  082A               	movf	??_EUSART_Initialize,w
  3573  0671  00F0               	movwf	___aldiv@divisor
  3574  0672  0826               	movf	EUSART_Initialize@baudrate,w
  3575  0673  00AE               	movwf	??_EUSART_Initialize+4
  3576  0674  0827               	movf	EUSART_Initialize@baudrate+1,w
  3577  0675  00AF               	movwf	??_EUSART_Initialize+5
  3578  0676  0828               	movf	EUSART_Initialize@baudrate+2,w
  3579  0677  00B0               	movwf	??_EUSART_Initialize+6
  3580  0678  0829               	movf	EUSART_Initialize@baudrate+3,w
  3581  0679  00B1               	movwf	??_EUSART_Initialize+7
  3582  067A  3006               	movlw	6
  3583  067B                     u875:	
  3584  067B  35AE               	lslf	??_EUSART_Initialize+4,f
  3585  067C  0DAF               	rlf	??_EUSART_Initialize+5,f
  3586  067D  0DB0               	rlf	??_EUSART_Initialize+6,f
  3587  067E  0DB1               	rlf	??_EUSART_Initialize+7,f
  3588  067F  0B89               	decfsz	9,f
  3589  0680  2E7B               	goto	u875
  3590  0681  09AE               	comf	??_EUSART_Initialize+4,f
  3591  0682  09AF               	comf	??_EUSART_Initialize+5,f
  3592  0683  09B0               	comf	??_EUSART_Initialize+6,f
  3593  0684  09B1               	comf	??_EUSART_Initialize+7,f
  3594  0685  0AAE               	incf	??_EUSART_Initialize+4,f
  3595  0686  1903               	skipnz
  3596  0687  0AAF               	incf	??_EUSART_Initialize+5,f
  3597  0688  1903               	skipnz
  3598  0689  0AB0               	incf	??_EUSART_Initialize+6,f
  3599  068A  1903               	skipnz
  3600  068B  0AB1               	incf	??_EUSART_Initialize+7,f
  3601  068C  3000               	movlw	0
  3602  068D  072E               	addwf	??_EUSART_Initialize+4,w
  3603  068E  00F4               	movwf	___aldiv@dividend
  3604  068F  3024               	movlw	36
  3605  0690  3D2F               	addwfc	??_EUSART_Initialize+5,w
  3606  0691  00F5               	movwf	___aldiv@dividend+1
  3607  0692  30F4               	movlw	244
  3608  0693  3D30               	addwfc	??_EUSART_Initialize+6,w
  3609  0694  00F6               	movwf	___aldiv@dividend+2
  3610  0695  3000               	movlw	0
  3611  0696  3D31               	addwfc	??_EUSART_Initialize+7,w
  3612  0697  00F7               	movwf	___aldiv@dividend+3
  3613  0698  3185  25D8  3186   	fcall	___aldiv
  3614  069B  0871               	movf	?___aldiv+1,w
  3615  069C  00FA               	movwf	EUSART_Initialize@x+1
  3616  069D  0870               	movf	?___aldiv,w
  3617  069E  00F9               	movwf	EUSART_Initialize@x
  3618                           
  3619                           ;EUSART.c: 38: if(x>255)
  3620  069F  3001               	movlw	1
  3621  06A0  027A               	subwf	EUSART_Initialize@x+1,w
  3622  06A1  3000               	movlw	0
  3623  06A2  1903               	skipnz
  3624  06A3  0279               	subwf	EUSART_Initialize@x,w
  3625  06A4  1C03               	skipc
  3626  06A5  2EED               	goto	l1259
  3627                           
  3628                           ;EUSART.c: 39: {
  3629                           ;EUSART.c: 40: x = (16000000 - baudrate*16)/(baudrate*16);
  3630  06A6  0020               	movlb	0	; select bank0
  3631  06A7  0826               	movf	EUSART_Initialize@baudrate,w
  3632  06A8  00AA               	movwf	??_EUSART_Initialize
  3633  06A9  0827               	movf	EUSART_Initialize@baudrate+1,w
  3634  06AA  00AB               	movwf	??_EUSART_Initialize+1
  3635  06AB  0828               	movf	EUSART_Initialize@baudrate+2,w
  3636  06AC  00AC               	movwf	??_EUSART_Initialize+2
  3637  06AD  0829               	movf	EUSART_Initialize@baudrate+3,w
  3638  06AE  00AD               	movwf	??_EUSART_Initialize+3
  3639  06AF  3004               	movlw	4
  3640  06B0                     u895:	
  3641  06B0  35AA               	lslf	??_EUSART_Initialize,f
  3642  06B1  0DAB               	rlf	??_EUSART_Initialize+1,f
  3643  06B2  0DAC               	rlf	??_EUSART_Initialize+2,f
  3644  06B3  0DAD               	rlf	??_EUSART_Initialize+3,f
  3645  06B4  0B89               	decfsz	9,f
  3646  06B5  2EB0               	goto	u895
  3647  06B6  082D               	movf	??_EUSART_Initialize+3,w
  3648  06B7  00F3               	movwf	___aldiv@divisor+3
  3649  06B8  082C               	movf	??_EUSART_Initialize+2,w
  3650  06B9  00F2               	movwf	___aldiv@divisor+2
  3651  06BA  082B               	movf	??_EUSART_Initialize+1,w
  3652  06BB  00F1               	movwf	___aldiv@divisor+1
  3653  06BC  082A               	movf	??_EUSART_Initialize,w
  3654  06BD  00F0               	movwf	___aldiv@divisor
  3655  06BE  0826               	movf	EUSART_Initialize@baudrate,w
  3656  06BF  00AE               	movwf	??_EUSART_Initialize+4
  3657  06C0  0827               	movf	EUSART_Initialize@baudrate+1,w
  3658  06C1  00AF               	movwf	??_EUSART_Initialize+5
  3659  06C2  0828               	movf	EUSART_Initialize@baudrate+2,w
  3660  06C3  00B0               	movwf	??_EUSART_Initialize+6
  3661  06C4  0829               	movf	EUSART_Initialize@baudrate+3,w
  3662  06C5  00B1               	movwf	??_EUSART_Initialize+7
  3663  06C6  3004               	movlw	4
  3664  06C7                     u905:	
  3665  06C7  35AE               	lslf	??_EUSART_Initialize+4,f
  3666  06C8  0DAF               	rlf	??_EUSART_Initialize+5,f
  3667  06C9  0DB0               	rlf	??_EUSART_Initialize+6,f
  3668  06CA  0DB1               	rlf	??_EUSART_Initialize+7,f
  3669  06CB  0B89               	decfsz	9,f
  3670  06CC  2EC7               	goto	u905
  3671  06CD  09AE               	comf	??_EUSART_Initialize+4,f
  3672  06CE  09AF               	comf	??_EUSART_Initialize+5,f
  3673  06CF  09B0               	comf	??_EUSART_Initialize+6,f
  3674  06D0  09B1               	comf	??_EUSART_Initialize+7,f
  3675  06D1  0AAE               	incf	??_EUSART_Initialize+4,f
  3676  06D2  1903               	skipnz
  3677  06D3  0AAF               	incf	??_EUSART_Initialize+5,f
  3678  06D4  1903               	skipnz
  3679  06D5  0AB0               	incf	??_EUSART_Initialize+6,f
  3680  06D6  1903               	skipnz
  3681  06D7  0AB1               	incf	??_EUSART_Initialize+7,f
  3682  06D8  3000               	movlw	0
  3683  06D9  072E               	addwf	??_EUSART_Initialize+4,w
  3684  06DA  00F4               	movwf	___aldiv@dividend
  3685  06DB  3024               	movlw	36
  3686  06DC  3D2F               	addwfc	??_EUSART_Initialize+5,w
  3687  06DD  00F5               	movwf	___aldiv@dividend+1
  3688  06DE  30F4               	movlw	244
  3689  06DF  3D30               	addwfc	??_EUSART_Initialize+6,w
  3690  06E0  00F6               	movwf	___aldiv@dividend+2
  3691  06E1  3000               	movlw	0
  3692  06E2  3D31               	addwfc	??_EUSART_Initialize+7,w
  3693  06E3  00F7               	movwf	___aldiv@dividend+3
  3694  06E4  3185  25D8  3186   	fcall	___aldiv
  3695  06E7  0871               	movf	?___aldiv+1,w
  3696  06E8  00FA               	movwf	EUSART_Initialize@x+1
  3697  06E9  0870               	movf	?___aldiv,w
  3698  06EA  00F9               	movwf	EUSART_Initialize@x
  3699                           
  3700                           ;EUSART.c: 41: BRGH = 1;
  3701  06EB  0023               	movlb	3	; select bank3
  3702  06EC  151E               	bsf	30,2	;volatile
  3703  06ED                     l1259:	
  3704                           
  3705                           ;EUSART.c: 42: }
  3706                           ;EUSART.c: 43: if(x<256)
  3707  06ED  3001               	movlw	1
  3708  06EE  027A               	subwf	EUSART_Initialize@x+1,w
  3709  06EF  3000               	movlw	0
  3710  06F0  1903               	skipnz
  3711  06F1  0279               	subwf	EUSART_Initialize@x,w
  3712  06F2  1803               	skipnc
  3713  06F3  0008               	return
  3714                           
  3715                           ;EUSART.c: 44: {
  3716                           ;EUSART.c: 45: SPBRG = x;
  3717  06F4  0879               	movf	EUSART_Initialize@x,w
  3718  06F5  0023               	movlb	3	; select bank3
  3719  06F6  009B               	movwf	27	;volatile
  3720                           
  3721                           ;EUSART.c: 46: SYNC = 0;
  3722  06F7  121E               	bcf	30,4	;volatile
  3723                           
  3724                           ;EUSART.c: 47: SPEN = 1;
  3725  06F8  179D               	bsf	29,7	;volatile
  3726                           
  3727                           ;EUSART.c: 48: TRISC7 = 1;
  3728  06F9  0021               	movlb	1	; select bank1
  3729  06FA  178E               	bsf	14,7	;volatile
  3730                           
  3731                           ;EUSART.c: 49: TRISC6 = 1;
  3732  06FB  170E               	bsf	14,6	;volatile
  3733                           
  3734                           ;EUSART.c: 50: CREN = 1;
  3735  06FC  0023               	movlb	3	; select bank3
  3736  06FD  161D               	bsf	29,4	;volatile
  3737                           
  3738                           ;EUSART.c: 51: TXEN = 1;
  3739  06FE  169E               	bsf	30,5	;volatile
  3740                           
  3741                           ;EUSART.c: 52: return 1;
  3742                           ;	Return value of _EUSART_Initialize is never used
  3743  06FF  0008               	return
  3744  0700                     __end_of_EUSART_Initialize:	
  3745                           ;EUSART.c: 53: }
  3746                           ;EUSART.c: 54: return 0;
  3747                           ;	Return value of _EUSART_Initialize is never used
  3748                           
  3749                           
  3750                           	psect	text18
  3751  05D8                     __ptext18:	
  3752 ;; *************** function ___aldiv *****************
  3753 ;; Defined at:
  3754 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\aldiv.c"
  3755 ;; Parameters:    Size  Location     Type
  3756 ;;  divisor         4    0[COMMON] long 
  3757 ;;  dividend        4    4[COMMON] long 
  3758 ;; Auto vars:     Size  Location     Type
  3759 ;;  quotient        4    2[BANK0 ] long 
  3760 ;;  sign            1    1[BANK0 ] unsigned char 
  3761 ;;  counter         1    0[BANK0 ] unsigned char 
  3762 ;; Return value:  Size  Location     Type
  3763 ;;                  4    0[COMMON] long 
  3764 ;; Registers used:
  3765 ;;		wreg, status,2, status,0
  3766 ;; Tracked objects:
  3767 ;;		On entry : 0/0
  3768 ;;		On exit  : 0/0
  3769 ;;		Unchanged: 0/0
  3770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3771 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3772 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3773 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3774 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3775 ;;Total ram usage:       15 bytes
  3776 ;; Hardware stack levels used:    1
  3777 ;; This function calls:
  3778 ;;		Nothing
  3779 ;; This function is called by:
  3780 ;;		_EUSART_Initialize
  3781 ;; This function uses a non-reentrant model
  3782 ;;
  3783                           
  3784                           
  3785                           ;psect for function ___aldiv
  3786  05D8                     ___aldiv:	
  3787                           
  3788                           ;incstack = 0
  3789                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3790  05D8  0020               	movlb	0	; select bank0
  3791  05D9  01A1               	clrf	___aldiv@sign
  3792  05DA  1FF3               	btfss	___aldiv@divisor+3,7
  3793  05DB  2DE9               	goto	l315
  3794  05DC  09F0               	comf	___aldiv@divisor,f
  3795  05DD  09F1               	comf	___aldiv@divisor+1,f
  3796  05DE  09F2               	comf	___aldiv@divisor+2,f
  3797  05DF  09F3               	comf	___aldiv@divisor+3,f
  3798  05E0  0AF0               	incf	___aldiv@divisor,f
  3799  05E1  1903               	skipnz
  3800  05E2  0AF1               	incf	___aldiv@divisor+1,f
  3801  05E3  1903               	skipnz
  3802  05E4  0AF2               	incf	___aldiv@divisor+2,f
  3803  05E5  1903               	skipnz
  3804  05E6  0AF3               	incf	___aldiv@divisor+3,f
  3805  05E7  01A1               	clrf	___aldiv@sign
  3806  05E8  0AA1               	incf	___aldiv@sign,f
  3807  05E9                     l315:	
  3808  05E9  1FF7               	btfss	___aldiv@dividend+3,7
  3809  05EA  2DFA               	goto	l1221
  3810  05EB  09F4               	comf	___aldiv@dividend,f
  3811  05EC  09F5               	comf	___aldiv@dividend+1,f
  3812  05ED  09F6               	comf	___aldiv@dividend+2,f
  3813  05EE  09F7               	comf	___aldiv@dividend+3,f
  3814  05EF  0AF4               	incf	___aldiv@dividend,f
  3815  05F0  1903               	skipnz
  3816  05F1  0AF5               	incf	___aldiv@dividend+1,f
  3817  05F2  1903               	skipnz
  3818  05F3  0AF6               	incf	___aldiv@dividend+2,f
  3819  05F4  1903               	skipnz
  3820  05F5  0AF7               	incf	___aldiv@dividend+3,f
  3821  05F6  3001               	movlw	1
  3822  05F7  00F8               	movwf	??___aldiv
  3823  05F8  0878               	movf	??___aldiv,w
  3824  05F9  06A1               	xorwf	___aldiv@sign,f
  3825  05FA                     l1221:	
  3826  05FA  3000               	movlw	0
  3827  05FB  00A5               	movwf	___aldiv@quotient+3
  3828  05FC  3000               	movlw	0
  3829  05FD  00A4               	movwf	___aldiv@quotient+2
  3830  05FE  3000               	movlw	0
  3831  05FF  00A3               	movwf	___aldiv@quotient+1
  3832  0600  3000               	movlw	0
  3833  0601  00A2               	movwf	___aldiv@quotient
  3834  0602  0873               	movf	___aldiv@divisor+3,w
  3835  0603  0472               	iorwf	___aldiv@divisor+2,w
  3836  0604  0471               	iorwf	___aldiv@divisor+1,w
  3837  0605  0470               	iorwf	___aldiv@divisor,w
  3838  0606  1903               	skipnz
  3839  0607  2E43               	goto	l1243
  3840  0608  01A0               	clrf	___aldiv@counter
  3841  0609  0AA0               	incf	___aldiv@counter,f
  3842  060A                     l1229:	
  3843  060A  1BF3               	btfsc	___aldiv@divisor+3,7
  3844  060B  2E18               	goto	l1231
  3845  060C  3001               	movlw	1
  3846  060D                     u795:	
  3847  060D  35F0               	lslf	___aldiv@divisor,f
  3848  060E  0DF1               	rlf	___aldiv@divisor+1,f
  3849  060F  0DF2               	rlf	___aldiv@divisor+2,f
  3850  0610  0DF3               	rlf	___aldiv@divisor+3,f
  3851  0611  0B89               	decfsz	9,f
  3852  0612  2E0D               	goto	u795
  3853  0613  3001               	movlw	1
  3854  0614  00F8               	movwf	??___aldiv
  3855  0615  0878               	movf	??___aldiv,w
  3856  0616  07A0               	addwf	___aldiv@counter,f
  3857  0617  2E0A               	goto	l1229
  3858  0618                     l1231:	
  3859  0618  3001               	movlw	1
  3860  0619                     u815:	
  3861  0619  35A2               	lslf	___aldiv@quotient,f
  3862  061A  0DA3               	rlf	___aldiv@quotient+1,f
  3863  061B  0DA4               	rlf	___aldiv@quotient+2,f
  3864  061C  0DA5               	rlf	___aldiv@quotient+3,f
  3865  061D  0B89               	decfsz	9,f
  3866  061E  2E19               	goto	u815
  3867  061F  0873               	movf	___aldiv@divisor+3,w
  3868  0620  0277               	subwf	___aldiv@dividend+3,w
  3869  0621  1D03               	skipz
  3870  0622  2E2D               	goto	u825
  3871  0623  0872               	movf	___aldiv@divisor+2,w
  3872  0624  0276               	subwf	___aldiv@dividend+2,w
  3873  0625  1D03               	skipz
  3874  0626  2E2D               	goto	u825
  3875  0627  0871               	movf	___aldiv@divisor+1,w
  3876  0628  0275               	subwf	___aldiv@dividend+1,w
  3877  0629  1D03               	skipz
  3878  062A  2E2D               	goto	u825
  3879  062B  0870               	movf	___aldiv@divisor,w
  3880  062C  0274               	subwf	___aldiv@dividend,w
  3881  062D                     u825:	
  3882  062D  1C03               	skipc
  3883  062E  2E38               	goto	l1239
  3884  062F  0870               	movf	___aldiv@divisor,w
  3885  0630  02F4               	subwf	___aldiv@dividend,f
  3886  0631  0871               	movf	___aldiv@divisor+1,w
  3887  0632  3BF5               	subwfb	___aldiv@dividend+1,f
  3888  0633  0872               	movf	___aldiv@divisor+2,w
  3889  0634  3BF6               	subwfb	___aldiv@dividend+2,f
  3890  0635  0873               	movf	___aldiv@divisor+3,w
  3891  0636  3BF7               	subwfb	___aldiv@dividend+3,f
  3892  0637  1422               	bsf	___aldiv@quotient,0
  3893  0638                     l1239:	
  3894  0638  3001               	movlw	1
  3895  0639                     u835:	
  3896  0639  36F3               	lsrf	___aldiv@divisor+3,f
  3897  063A  0CF2               	rrf	___aldiv@divisor+2,f
  3898  063B  0CF1               	rrf	___aldiv@divisor+1,f
  3899  063C  0CF0               	rrf	___aldiv@divisor,f
  3900  063D  0B89               	decfsz	9,f
  3901  063E  2E39               	goto	u835
  3902  063F  3001               	movlw	1
  3903  0640  02A0               	subwf	___aldiv@counter,f
  3904  0641  1D03               	btfss	3,2
  3905  0642  2E18               	goto	l1231
  3906  0643                     l1243:	
  3907  0643  0821               	movf	___aldiv@sign,w
  3908  0644  1903               	btfsc	3,2
  3909  0645  2E51               	goto	l1247
  3910  0646  09A2               	comf	___aldiv@quotient,f
  3911  0647  09A3               	comf	___aldiv@quotient+1,f
  3912  0648  09A4               	comf	___aldiv@quotient+2,f
  3913  0649  09A5               	comf	___aldiv@quotient+3,f
  3914  064A  0AA2               	incf	___aldiv@quotient,f
  3915  064B  1903               	skipnz
  3916  064C  0AA3               	incf	___aldiv@quotient+1,f
  3917  064D  1903               	skipnz
  3918  064E  0AA4               	incf	___aldiv@quotient+2,f
  3919  064F  1903               	skipnz
  3920  0650  0AA5               	incf	___aldiv@quotient+3,f
  3921  0651                     l1247:	
  3922  0651  0825               	movf	___aldiv@quotient+3,w
  3923  0652  00F3               	movwf	?___aldiv+3
  3924  0653  0824               	movf	___aldiv@quotient+2,w
  3925  0654  00F2               	movwf	?___aldiv+2
  3926  0655  0823               	movf	___aldiv@quotient+1,w
  3927  0656  00F1               	movwf	?___aldiv+1
  3928  0657  0822               	movf	___aldiv@quotient,w
  3929  0658  00F0               	movwf	?___aldiv
  3930  0659  0008               	return
  3931  065A                     __end_of___aldiv:	
  3932  007E                     btemp	set	126	;btemp
  3933  007E                     wtemp	set	126
  3934  007E                     wtemp0	set	126
  3935  0080                     wtemp1	set	128
  3936  0082                     wtemp2	set	130
  3937  0084                     wtemp3	set	132
  3938  0086                     wtemp4	set	134
  3939  0088                     wtemp5	set	136
  3940  007F                     wtemp6	set	127
  3941  007E                     ttemp	set	126
  3942  007E                     ttemp0	set	126
  3943  0081                     ttemp1	set	129
  3944  0084                     ttemp2	set	132
  3945  0087                     ttemp3	set	135
  3946  007F                     ttemp4	set	127
  3947  007E                     ltemp	set	126
  3948  007E                     ltemp0	set	126
  3949  0082                     ltemp1	set	130
  3950  0086                     ltemp2	set	134
  3951  0080                     ltemp3	set	128


Data Sizes:
    Strings     40
    Constant    40
    Data        0
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     36      53
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(1) Largest target is 8
		 -> Lcd_Write_Integer@buf(BANK0[8]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 8
		 -> Lcd_Write_Integer@buf(BANK0[8]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 8
		 -> Lcd_Write_Integer@buf(BANK0[8]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 8
		 -> Lcd_Write_Integer@buf(BANK0[8]), 

    sp__ftoa	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK0[17]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 8
		 -> Lcd_Write_Integer@buf(BANK0[8]), 

    Lcd_Write_String@a	PTR const unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK0[17]), STR_2(CODE[16]), STR_1(CODE[13]), Lcd_Write_Integer@buf(BANK0[8]), 


Critical Paths under _main in COMMON

    _Lcd_Write_Integer->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _Lcd_Write_String->_itoa
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _EUSART_Initialize->___aldiv

Critical Paths under _main in BANK0

    _main->_Lcd_Write_Integer
    _Lcd_Write_Integer->_Lcd_Write_String
    _itoa->_utoa
    _Lcd_Write_String->_itoa
    _EUSART_Initialize->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0    4225
                                             25 BANK0     11    11      0
                  _EUSART_Initialize
                        _EUSART_Read
                       _EUSART_Write
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                  _Lcd_Write_Integer
                   _Lcd_Write_String
                           _initMain
 ---------------------------------------------------------------------------------
 (1) _initMain                                             0     0      0       0
                        _internal_16
 ---------------------------------------------------------------------------------
 (2) _internal_16                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_Integer                                   10     8      2    1971
                                             15 BANK0     10     8      2
                   _Lcd_Write_String
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 7     3      4    1386
                                             13 COMMON     1     1      0
                                              4 BANK0      6     2      4
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     5      4    1074
                                              8 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     265
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     374
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     5     3      2     480
                                             10 BANK0      5     3      2
                     _Lcd_Write_Char
                               _itoa (ARG)
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     539
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Initialize                                   14    10      4     721
                                              9 COMMON     2     2      0
                                              6 BANK0     12     8      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     512
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Initialize
     ___aldiv
   _EUSART_Read
   _EUSART_Write
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Integer
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
       _itoa (ARG)
         _utoa
           ___lwdiv
           ___lwmod
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
     _itoa (ARG)
       _utoa
         ___lwdiv
         ___lwmod
   _initMain
     _internal_16

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     24      35       5       66.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      43      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      43      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Sun Feb 26 07:31:25 2017

               __CFG_CP$OFF 0000                          l74 0393                          l67 03AD  
                       l110 03E6                         l112 03EC                         l114 03F1  
                       l116 03F6                         l208 07F4                         l315 05E9  
                       l540 05C2                         _RD2 007A                         _RD3 007B  
                       _RD4 007C                         _RD5 007D                         _RD6 007E  
                       _RD7 007F                         u605 04D1                         u615 04DB  
                       u705 0474                         u625 04E3                         u815 0619  
                       u655 0499                         u825 062D                         u905 06C7  
                       u585 04C7                         u835 0639                         u675 04A8  
                       u685 04AF                         u865 0664                         u795 060D  
                       u875 067B                         u965 04FC                         u895 06B0  
                       u985 051C                __CFG_BORV$LO 0000                         wreg 0009  
              __CFG_IESO$ON 0000                ?_EUSART_Read 0070                __CFG_LVP$OFF 0000  
                      l1111 0496                        l1113 04A2                        l1121 04B7  
                      l1221 05FA                        l1301 0510                        l1117 04AE  
                      l1205 042C                        l1231 0618                        l1073 03F2  
                      l1065 03E8                        l1243 0643                        l1147 057C  
                      l1229 060A                        l1069 03ED                        l1157 059A  
                      l1247 0651                        l1239 0638                        l1095 04E2  
                      l1087 04C4                        l1415 077D                        l1281 03B5  
                      l1193 03FB                        l1089 04D0                        l1259 06ED  
                      l1099 04EB                        l1443 07EE                        STR_1 0838  
                      STR_2 0828                        STR_3 0845                        _BRGH 0CF2  
                      _CREN 0CEC                        u1025 07B4                        u1107 048B  
                      u1035 07C0                        u1117 0538                        u1127 0545  
                      u1137 0552                        u1057 071E                        u1147 03D8  
                      u1067 0738                        u1077 0757                        u1087 07E4  
                      u1097 047F                        _SCS0 04C8                        _SCS1 04C9  
                      _SPEN 0CEF                        _TXEN 0CF5                        _SYNC 0CF4  
              __CFG_WRT$OFF 0000           ?_Lcd_Write_String 002A                        _main 0700  
                      _itoa 0414                        fsr0h 0005                        fsr1h 0007  
                      fsr0l 0004                        indf0 0000                        indf1 0001  
                      fsr1l 0006                        btemp 007E                        _utoa 0576  
                      ltemp 007E                        start 0002                        ttemp 007E  
        ??_Lcd_Write_String 002C                        wtemp 007E             __end_of_Lcd_Cmd 03E0  
             ?_EUSART_Write 0070           _Lcd_Write_Integer 03B7             __end_of___aldiv 065A  
                     ?_main 0070                       ?_itoa 0024               __CFG_WDTE$OFF 0000  
                     ?_utoa 0078                       _IRCF0 04CB                       _IRCF1 04CC  
                     _IRCF2 04CD                       _IRCF3 04CE          ?_Lcd_Write_Integer 002F  
           __end_of___lwdiv 04F0             __end_of___lwmod 04BC                       _SPBRG 019B  
                     _PORTD 000F     __size_of_Lcd_Set_Cursor 0040                       _TRISD 008F  
            __CFG_FCMEN$OFF 0000             __end_of_dpowers 0828         ??_Lcd_Write_Integer 007E  
                     main@x 0040                       main@y 003E              __CFG_BOREN$OFF 0000  
                     ltemp0 007E                       ltemp1 0082                       ltemp2 0086  
                     ltemp3 0080                       ttemp0 007E                       ttemp1 0081  
                     ttemp2 0084                       ttemp3 0087                       ttemp4 007F  
                     utoa@c 0022                       utoa@v 0020                       status 0003  
                     wtemp0 007E                       wtemp1 0080                       wtemp2 0082  
                     wtemp3 0084                       wtemp4 0086                       wtemp5 0088  
                     wtemp6 007F                ?_internal_16 0070            __end_of_Lcd_Init 0576  
          __end_of_Lcd_Port 03F8              __CFG_MCLRE$OFF 0000             __initialization 07F6  
              __end_of_main 07F6                __end_of_itoa 043A                __end_of_utoa 05D8  
 __end_of_Lcd_Write_Integer 03CB              ??_EUSART_Write 0070              __CFG_LPBOR$OFF 0000  
                    ??_main 0039                      ??_itoa 007D                      ??_utoa 007C  
        __size_of_Lcd_Clear 0008              __CFG_PLLEN$OFF 0000              __CFG_ZCDDIS$ON 0000  
                    _ANSELD 018F                      _RC1REG 0199                   ??_Lcd_Cmd 0071  
                    _TX1REG 019A                      _SPLLEN 04CF     __size_of_Lcd_Write_Char 002C  
                    _TRISC6 0476                      _TRISC7 0477              __CFG_PWRTE$OFF 0000  
                 ??___aldiv 0078              __CFG_STVREN$ON 0000                   ??___lwdiv 0074  
                 ??___lwmod 0074            __end_of_initMain 0464                      itoa@cp 0028  
           Lcd_Set_Cursor@a 0077             Lcd_Set_Cursor@b 0074             Lcd_Set_Cursor@y 0079  
           Lcd_Set_Cursor@z 0078        __size_of_EUSART_Read 000C     __end_of__initialization 07FD  
         __end_of_Lcd_Clear 03A2              __pcstackCOMMON 0070  __size_of_Lcd_Write_Integer 0014  
            _Lcd_Set_Cursor 04F0                   ?_Lcd_Init 0070                   ?_Lcd_Port 0070  
                __pbssBANK0 0044        __end_of_EUSART_Write 039A                  __pmaintext 0700  
      __size_of_internal_16 0009             __CFG_PPS1WAY$ON 0000   __size_of_Lcd_Write_String 001C  
    __end_of_Lcd_Set_Cursor 0530                  ??_Lcd_Init 0074                     _PPSLOCK 0E0F  
                ??_Lcd_Port 0070                   ?_initMain 0070              _Lcd_Write_Char 0464  
                   _Lcd_Cmd 03CB                     ___aldiv 05D8                     ___lwdiv 04BC  
                   ___lwmod 0490             ?_Lcd_Set_Cursor 0074                     __ptext1 043A  
                   __ptext2 03A2                     __ptext3 03B7                     __ptext4 0414  
                   __ptext5 0576                     __ptext6 0490                     __ptext7 04BC  
                   __ptext8 03F8                     __ptext9 0464                     _dpowers 0800  
          ___aldiv@dividend 0074                     main@boo 003E                     clrloop0 038D  
    __end_of_Lcd_Write_Char 0490        end_of_initialization 07FD                     ftoa@buf 0044  
                ??_initMain 0070                     itoa@buf 0029                     itoa@val 0024  
         _EUSART_Initialize 065A          ?_EUSART_Initialize 0026            ___aldiv@quotient 0022  
                 Lcd_Port@a 0070                __pstringtext 0800                     utoa@buf 0023  
        EUSART_Initialize@x 0079                     utoa@val 0078         ??_EUSART_Initialize 002A  
          __CFG_FOSC$INTOSC 0000                   _TRISBbits 008D                   _TRISDbits 008F  
     __size_of_EUSART_Write 0008             ?_Lcd_Write_Char 0070           Lcd_Write_String@a 002A  
         Lcd_Write_String@i 002D                   _RXPPSbits 0E24   __end_of_EUSART_Initialize 0700  
                 _Lcd_Clear 039A            _Lcd_Write_String 03F8                _EUSART_Write 0392  
       start_initialization 07F6               ??_EUSART_Read 0070           __size_of_Lcd_Init 0046  
         __size_of_Lcd_Port 0018                  ?_Lcd_Clear 0070             Lcd_Write_Char@a 0074  
           Lcd_Write_Char@y 0073                   ___latbits 0002               __pcstackBANK0 0020  
__size_of_EUSART_Initialize 00A6                    ?_Lcd_Cmd 0070         __end_of_EUSART_Read 03B7  
             ??_internal_16 0070           __size_of_initMain 002A            ___lwdiv@dividend 0072  
          ??_Lcd_Set_Cursor 0075                    ?___aldiv 0070                    ?___lwdiv 0070  
                  ?___lwmod 0070   EUSART_Initialize@baudrate 0026            ___lwdiv@quotient 0075  
           ___aldiv@divisor 0070             ___aldiv@counter 0020                   clear_ram0 038C  
                  Lcd_Cmd@a 0073                    _PIR1bits 0011                 ??_Lcd_Clear 0074  
       __end_of_internal_16 03AB                   main@i_310 0042            ??_Lcd_Write_Char 0071  
                  _Lcd_Init 0530                    _Lcd_Port 03E0                 _EUSART_Read 03AB  
  __end_of_Lcd_Write_String 0414            __size_of_Lcd_Cmd 0015            __size_of___aldiv 0082  
          __size_of___lwdiv 0034            __size_of___lwmod 002C                  _ANSELBbits 018D  
           ___lwdiv@divisor 0070             ___lwdiv@counter 0077                    __ptext10 04F0  
                  __ptext11 0530                    __ptext12 039A                    __ptext13 03CB  
                  __ptext14 03E0                    __ptext15 0392                    __ptext16 03AB  
                  __ptext17 065A                    __ptext18 05D8                    _initMain 043A  
             __size_of_main 00F6               __size_of_itoa 0026               __size_of_utoa 0062  
               _internal_16 03A2                  _RB2PPSbits 0E9A                  _RC1STAbits 019D  
      Lcd_Write_Integer@buf 0031                    itoa@base 0026          Lcd_Write_Char@temp 0072  
          ___lwmod@dividend 0072           __CFG_CLKOUTEN$OFF 0000                 _PPSLOCKbits 0E0F  
        Lcd_Set_Cursor@temp 007A                    utoa@base 007A             ___lwmod@divisor 0070  
           ___lwmod@counter 0075                ___aldiv@sign 0021          Lcd_Write_Integer@v 002F  
        EUSART_Write@txData 0070  
